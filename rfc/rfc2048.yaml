- title: __initial_text__
  contents:
  - "                 Multipurpose Internet Mail Extensions\n                    \
    \       (MIME) Part Four:\n                        Registration Procedures\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   STD 11, RFC 822, defines a message representation protocol specifying\n\
    \   considerable detail about US-ASCII message headers, and leaves the\n   message\
    \ content, or message body, as flat US-ASCII text.  This set of\n   documents,\
    \ collectively called the Multipurpose Internet Mail\n   Extensions, or MIME,\
    \ redefines the format of messages to allow for\n    (1)   textual message bodies\
    \ in character sets other than\n          US-ASCII,\n    (2)   an extensible set\
    \ of different formats for non-textual\n          message bodies,\n    (3)   multi-part\
    \ message bodies, and\n    (4)   textual header information in character sets\
    \ other than\n          US-ASCII.\n   These documents are based on earlier work\
    \ documented in RFC 934, STD\n   11, and RFC 1049, but extends and revises them.\
    \  Because RFC 822 said\n   so little about message bodies, these documents are\
    \ largely\n   orthogonal to (rather than a revision of) RFC 822.\n   This fourth\
    \ document, RFC 2048, specifies various IANA registration\n   procedures for the\
    \ following MIME facilities:\n    (1)   media types,\n    (2)   external body\
    \ access types,\n    (3)   content-transfer-encodings.\n   Registration of character\
    \ sets for use in MIME is covered elsewhere\n   and is no longer addressed by\
    \ this document.\n   These documents are revisions of RFCs 1521 and 1522, which\
    \ themselves\n   were revisions of RFCs 1341 and 1342.  An appendix in RFC 2049\n\
    \   describes differences and changes from previous versions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction .........................................\
    \    3\n   2. Media Type Registration ..............................    4\n  \
    \ 2.1 Registration Trees and Subtype Names ................    4\n   2.1.1 IETF\
    \ Tree .........................................    4\n   2.1.2 Vendor Tree .......................................\
    \    4\n   2.1.3 Personal or Vanity Tree ...........................    5\n  \
    \ 2.1.4 Special `x.' Tree .................................    5\n   2.1.5 Additional\
    \ Registration Trees .....................    6\n   2.2 Registration Requirements\
    \ ...........................    6\n   2.2.1 Functionality Requirement .........................\
    \    6\n   2.2.2 Naming Requirements ...............................    6\n  \
    \ 2.2.3 Parameter Requirements ............................    7\n   2.2.4 Canonicalization\
    \ and Format Requirements ..........    7\n   2.2.5 Interchange Recommendations\
    \ .......................    8\n   2.2.6 Security Requirements .............................\
    \    8\n   2.2.7 Usage and Implementation Non-requirements .........    9\n  \
    \ 2.2.8 Publication Requirements ..........................   10\n   2.2.9 Additional\
    \ Information ............................   10\n   2.3 Registration Procedure\
    \ ..............................   11\n   2.3.1 Present the Media Type to the\
    \ Community for  Review   11\n   2.3.2 IESG Approval .....................................\
    \   12\n   2.3.3 IANA Registration .................................   12\n  \
    \ 2.4 Comments on Media Type Registrations ................   12\n   2.5 Location\
    \ of Registered Media Type List ..............   12\n   2.6 IANA Procedures for\
    \ Registering Media Types .........   12\n   2.7 Change Control ......................................\
    \   13\n   2.8 Registration Template ...............................   14\n  \
    \ 3. External Body Access Types ...........................   14\n   3.1 Registration\
    \ Requirements ...........................   15\n   3.1.1 Naming Requirements\
    \ ...............................   15\n   3.1.2 Mechanism Specification Requirements\
    \ ..............   15\n   3.1.3 Publication Requirements ..........................\
    \   15\n   3.1.4 Security Requirements .............................   15\n  \
    \ 3.2 Registration Procedure ..............................   15\n   3.2.1 Present\
    \ the Access Type to the Community ..........   16\n   3.2.2 Access Type Reviewer\
    \ ..............................   16\n   3.2.3 IANA Registration .................................\
    \   16\n   3.3 Location of Registered Access Type List .............   16\n  \
    \ 3.4 IANA Procedures for Registering Access Types ........   16\n   4. Transfer\
    \ Encodings ...................................   17\n   4.1 Transfer Encoding\
    \ Requirements ......................   17\n   4.1.1 Naming Requirements ...............................\
    \   17\n   4.1.2 Algorithm Specification Requirements ..............   18\n  \
    \ 4.1.3 Input Domain Requirements .........................   18\n   4.1.4 Output\
    \ Range Requirements .........................   18\n   4.1.5 Data Integrity and\
    \ Generality Requirements ........   18\n   4.1.6 New Functionality Requirements\
    \ ....................   18\n   4.2 Transfer Encoding Definition Procedure ..............\
    \   19\n   4.3 IANA Procedures for Transfer Encoding Registration...   19\n  \
    \ 4.4 Location of Registered Transfer Encodings List ......   19\n   5. Authors'\
    \ Addresses ...................................   20\n   A. Grandfathered Media\
    \ Types ............................   21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Recent Internet protocols have been carefully designed to\
    \ be easily\n   extensible in certain areas.  In particular, MIME [RFC 2045] is\
    \ an\n   open-ended framework and can accommodate additional object types,\n \
    \  character sets, and access methods without any changes to the basic\n   protocol.\
    \  A registration process is needed, however, to ensure that\n   the set of such\
    \ values is developed in an orderly, well-specified,\n   and public manner.\n\
    \   This document defines registration procedures which use the Internet\n   Assigned\
    \ Numbers Authority (IANA) as a central registry for such\n   values.\n   Historical\
    \ Note: The registration process for media types was\n   initially defined in\
    \ the context of the asynchronous Internet mail\n   environment.  In this mail\
    \ environment there is a need to limit the\n   number of possible media types\
    \ to increase the likelihood of\n   interoperability when the capabilities of\
    \ the remote mail system are\n   not known.  As media types are used in new environments,\
    \ where the\n   proliferation of media types is not a hindrance to interoperability,\n\
    \   the original procedure was excessively restrictive and had to be\n   generalized.\n"
- title: 2.  Media Type Registration
  contents:
  - "2.  Media Type Registration\n   Registration of a new media type or types starts\
    \ with the\n   construction of a registration proposal.  Registration may occur\
    \ in\n   several different registration trees, which have different\n   requirements\
    \ as discussed below.  In general, the new registration\n   proposal is circulated\
    \ and reviewed in a fashion appropriate to the\n   tree involved.  The media type\
    \ is then registered if the proposal is\n   acceptable.  The following sections\
    \ describe the requirements and\n   procedures used for each of the different\
    \ registration trees.\n"
- title: 2.1.  Registration Trees and Subtype Names
  contents:
  - "2.1.  Registration Trees and Subtype Names\n   In order to increase the efficiency\
    \ and flexibility of the\n   registration process, different structures of subtype\
    \ names may be\n   registered to accomodate the different natural requirements\
    \ for,\n   e.g., a subtype that will be recommended for wide support and\n   implementation\
    \ by the Internet Community or a subtype that is used to\n   move files associated\
    \ with proprietary software.  The following\n   subsections define registration\
    \ \"trees\", distinguished by the use of\n   faceted names (e.g., names of the\
    \ form \"tree.subtree...type\").  Note\n   that some media types defined prior\
    \ to this document do not conform\n   to the naming conventions described below.\
    \  See Appendix A for a\n   discussion of them.\n"
- title: 2.1.1.  IETF Tree
  contents:
  - "2.1.1.  IETF Tree\n   The IETF tree is intended for types of general interest\
    \ to the\n   Internet Community. Registration in the IETF tree requires approval\n\
    \   by the IESG and publication of the media type registration as some\n   form\
    \ of RFC.\n   Media types in the IETF tree are normally denoted by names that\
    \ are\n   not explicitly faceted, i.e., do not contain period (\".\", full stop)\n\
    \   characters.\n   The \"owner\" of a media type registration in the IETF tree\
    \ is assumed\n   to be the IETF itself.  Modification or alteration of the\n \
    \  specification requires the same level of processing (e.g.  standards\n   track)\
    \ required for the initial registration.\n"
- title: 2.1.2.  Vendor Tree
  contents:
  - "2.1.2.  Vendor Tree\n   The vendor tree is used for media types associated with\
    \ commercially\n   available products.  \"Vendor\" or \"producer\" are construed\
    \ as\n   equivalent and very broadly in this context.\n   A registration may be\
    \ placed in the vendor tree by anyone who has\n   need to interchange files associated\
    \ with the particular product.\n   However, the registration formally belongs\
    \ to the vendor or\n   organization producing the software or file format.  Changes\
    \ to the\n   specification will be made at their request, as discussed in\n  \
    \ subsequent sections.\n   Registrations in the vendor tree will be distinguished\
    \ by the leading\n   facet \"vnd.\".  That may be followed, at the discretion\
    \ of the\n   registration, by either a media type name from a well-known producer\n\
    \   (e.g., \"vnd.mudpie\") or by an IANA-approved designation of the\n   producer's\
    \ name which is then followed by a media type or product\n   designation (e.g.,\
    \ vnd.bigcompany.funnypictures).\n   While public exposure and review of media\
    \ types to be registered in\n   the vendor tree is not required, using the ietf-types\
    \ list for review\n   is strongly encouraged to improve the quality of those\n\
    \   specifications. Registrations in the vendor tree may be submitted\n   directly\
    \ to the IANA.\n"
- title: 2.1.3.  Personal or Vanity Tree
  contents:
  - "2.1.3.  Personal or Vanity Tree\n   Registrations for media types created experimentally\
    \ or as part of\n   products that are not distributed commercially may be registered\
    \ in\n   the personal or vanity tree.  The registrations are distinguished by\n\
    \   the leading facet \"prs.\".\n   The owner of \"personal\" registrations and\
    \ associated specifications\n   is the person or entity making the registration,\
    \ or one to whom\n   responsibility has been transferred as described below.\n\
    \   While public exposure and review of media types to be registered in\n   the\
    \ personal tree is not required, using the ietf-types list for\n   review is strongly\
    \ encouraged to improve the quality of those\n   specifications.  Registrations\
    \ in the personl tree may be submitted\n   directly to the IANA.\n"
- title: 2.1.4.  Special `x.' Tree
  contents:
  - "2.1.4.  Special `x.' Tree\n   For convenience and symmetry with this registration\
    \ scheme, media\n   type names with \"x.\" as the first facet may be used for\
    \ the same\n   purposes for which names starting in \"x-\" are normally used.\
    \  These\n   types are unregistered, experimental, and should be used only with\n\
    \   the active agreement of the parties exchanging them.\n   However, with the\
    \ simplified registration procedures described above\n   for vendor and personal\
    \ trees, it should rarely, if ever, be\n   necessary to use unregistered experimental\
    \ types, and as such use of\n   both \"x-\" and \"x.\" forms is discouraged.\n"
- title: 2.1.5.  Additional Registration Trees
  contents:
  - "2.1.5.  Additional Registration Trees\n   From time to time and as required by\
    \ the community, the IANA may,\n   with the advice and consent of the IESG, create\
    \ new top-level\n   registration trees.  It is explicitly assumed that these trees\
    \ may be\n   created for external registration and management by well-known\n\
    \   permanent bodies, such as scientific societies for media types\n   specific\
    \ to the sciences they cover.  In general, the quality of\n   review of specifications\
    \ for one of these additional registration\n   trees is expected to be equivalent\
    \ to that which IETF would give to\n   registrations in its own tree. Establishment\
    \ of these new trees will\n   be announced through RFC publication approved by\
    \ the IESG.\n"
- title: 2.2.  Registration Requirements
  contents:
  - "2.2.  Registration Requirements\n   Media type registration proposals are all\
    \ expected to conform to\n   various requirements laid out in the following sections.\
    \  Note that\n   requirement specifics sometimes vary depending on the registration\n\
    \   tree, again as detailed in the following sections.\n"
- title: 2.2.1.  Functionality Requirement
  contents:
  - "2.2.1.  Functionality Requirement\n   Media types must function as an actual\
    \ media format: Registration of\n   things that are better thought of as a transfer\
    \ encoding, as a\n   character set, or as a collection of separate entities of\
    \ another\n   type, is not allowed.  For example, although applications exist\
    \ to\n   decode the base64 transfer encoding [RFC 2045], base64 cannot be\n  \
    \ registered as a media type.\n   This requirement applies regardless of the registration\
    \ tree\n   involved.\n"
- title: 2.2.2.  Naming Requirements
  contents:
  - "2.2.2.  Naming Requirements\n   All registered media types must be assigned MIME\
    \ type and subtype\n   names. The combination of these names then serves to uniquely\n\
    \   identify the media type and the format of the subtype name identifies\n  \
    \ the registration tree.\n   The choice of top-level type name must take the nature\
    \ of media type\n   involved into account. For example, media normally used for\n\
    \   representing still images should be a subtype of the image content\n   type,\
    \ whereas media capable of representing audio information belongs\n   under the\
    \ audio content type. See RFC 2046 for additional information\n   on the basic\
    \ set of top-level types and their characteristics.\n   New subtypes of top-level\
    \ types must conform to the restrictions of\n   the top-level type, if any. For\
    \ example, all subtypes of the\n   multipart content type must use the same encapsulation\
    \ syntax.\n   In some cases a new media type may not \"fit\" under any currently\n\
    \   defined top-level content type. Such cases are expected to be quite\n   rare.\
    \ However, if such a case arises a new top-level type can be\n   defined to accommodate\
    \ it. Such a definition must be done via\n   standards-track RFC; no other mechanism\
    \ can be used to define\n   additional top-level content types.\n   These requirements\
    \ apply regardless of the registration tree\n   involved.\n"
- title: 2.2.3.  Parameter Requirements
  contents:
  - "2.2.3.  Parameter Requirements\n   Media types may elect to use one or more MIME\
    \ content type\n   parameters, or some parameters may be automatically made available\
    \ to\n   the media type by virtue of being a subtype of a content type that\n\
    \   defines a set of parameters applicable to any of its subtypes.  In\n   either\
    \ case, the names, values, and meanings of any parameters must\n   be fully specified\
    \ when a media type is registered in the IETF tree,\n   and should be specified\
    \ as completely as possible when media types\n   are registered in the vendor\
    \ or personal trees.\n   New parameters must not be defined as a way to introduce\
    \ new\n   functionality in types registered in the IETF tree, although new\n \
    \  parameters may be added to convey additional information that does\n   not\
    \ otherwise change existing functionality.  An example of this\n   would be a\
    \ \"revision\" parameter to indicate a revision level of an\n   external specification\
    \ such as JPEG.  Similar behavior is encouraged\n   for media types registered\
    \ in the vendor or personal trees but is not\n   required.\n"
- title: 2.2.4.  Canonicalization and Format Requirements
  contents:
  - "2.2.4.  Canonicalization and Format Requirements\n   All registered media types\
    \ must employ a single, canonical data\n   format, regardless of registration\
    \ tree.\n   A precise and openly available specification of the format of each\n\
    \   media type is required for all types registered in the IETF tree and\n   must\
    \ at a minimum be referenced by, if it isn't actually included in,\n   the media\
    \ type registration proposal itself.\n   The specifications of format and processing\
    \ particulars may or may\n   not be publically available for media types registered\
    \ in the vendor\n   tree, and such registration proposals are explicitly permitted\
    \ to\n   include only a specification of which software and version produce or\n\
    \   process such media types.  References to or inclusion of format\n   specifications\
    \ in registration proposals is encouraged but not\n   required.\n   Format specifications\
    \ are still required for registration in the\n   personal tree, but may be either\
    \ published as RFCs or otherwise\n   deposited with IANA. The deposited specifications\
    \ will meet the same\n   criteria as those required to register a well-known TCP\
    \ port and, in\n   particular, need not be made public.\n   Some media types involve\
    \ the use of patented technology.  The\n   registration of media types involving\
    \ patented technology is\n   specifically permitted.  However, the restrictions\
    \ set forth in RFC\n   1602 on the use of patented technology in standards-track\
    \ protocols\n   must be respected when the specification of a media type is part\
    \ of a\n   standards-track protocol.\n"
- title: 2.2.5.  Interchange Recommendations
  contents:
  - "2.2.5.  Interchange Recommendations\n   Media types should, whenever possible,\
    \ interoperate across as many\n   systems and applications as possible. However,\
    \ some media types will\n   inevitably have problems interoperating across different\
    \ platforms.\n   Problems with different versions, byte ordering, and specifics\
    \ of\n   gateway handling can and will arise.\n   Universal interoperability of\
    \ media types is not required, but known\n   interoperability issues should be\
    \ identified whenever possible.\n   Publication of a media type does not require\
    \ an exhaustive review of\n   interoperability, and the interoperability considerations\
    \ section is\n   subject to continuing evaluation.\n   These recommendations apply\
    \ regardless of the registration tree\n   involved.\n"
- title: 2.2.6.  Security Requirements
  contents:
  - "2.2.6.  Security Requirements\n   An analysis of security issues is required\
    \ for for all types\n   registered in the IETF Tree.  (This is in accordance with\
    \ the basic\n   requirements for all IETF protocols.) A similar analysis for media\n\
    \   types registered in the vendor or personal trees is encouraged but\n   not\
    \ required.  However, regardless of what security analysis has or\n   has not\
    \ been done, all descriptions of security issues must be as\n   accurate as possible\
    \ regardless of registration tree.  In particular,\n   a statement that there\
    \ are \"no security issues associated with this\n   type\" must not be confused\
    \ with \"the security issues associates with\n   this type have not been assessed\"\
    .\n   There is absolutely no requirement that media types registered in any\n\
    \   tree be secure or completely free from risks.  Nevertheless, all\n   known\
    \ security risks must be identified in the registration of a\n   media type, again\
    \ regardless of registration tree.\n   The security considerations section of\
    \ all registrations is subject\n   to continuing evaluation and modification,\
    \ and in particular may be\n   extended by use of the \"comments on media types\"\
    \ mechanism described\n   in subsequent sections.\n   Some of the issues that\
    \ should be looked at in a security analysis of\n   a media type are:\n    (1)\
    \   Complex media types may include provisions for\n          directives that\
    \ institute actions on a recipient's\n          files or other resources.  In\
    \ many cases provision is\n          made for originators to specify arbitrary\
    \ actions in an\n          unrestricted fashion which may then have devastating\n\
    \          effects.  See the registration of the\n          application/postscript\
    \ media type in RFC 2046 for\n          an example of such directives and how\
    \ to handle them.\n    (2)   Complex media types may include provisions for\n\
    \          directives that institute actions which, while not\n          directly\
    \ harmful to the recipient, may result in\n          disclosure of information\
    \ that either facilitates a\n          subsequent attack or else violates a recipient's\n\
    \          privacy in some way.  Again, the registration of the\n          application/postscript\
    \ media type illustrates how such\n          directives can be handled.\n    (3)\
    \   A media type might be targeted for applications that\n          require some\
    \ sort of security assurance but not provide\n          the necessary security\
    \ mechanisms themselves. For\n          example, a media type could be defined\
    \ for storage of\n          confidential medical information which in turn requires\n\
    \          an external confidentiality service.\n"
- title: 2.2.7.  Usage and Implementation Non-requirements
  contents:
  - "2.2.7.  Usage and Implementation Non-requirements\n   In the asynchronous mail\
    \ environment, where information on the\n   capabilities of the remote mail agent\
    \ is frequently not available to\n   the sender, maximum interoperability is attained\
    \ by restricting the\n   number of media types used to those \"common\" formats\
    \ expected to be\n   widely implemented.  This was asserted in the past as a reason\
    \ to\n   limit the number of possible media types and resulted in a\n   registration\
    \ process with a significant hurdle and delay for those\n   registering media\
    \ types.\n   However, the need for \"common\" media types does not require limiting\n\
    \   the registration of new media types. If a limited set of media types\n   is\
    \ recommended for a particular application, that should be asserted\n   by a separate\
    \ applicability statement specific for the application\n   and/or environment.\n\
    \   As such, universal support and implementation of a media type is NOT\n   a\
    \ requirement for registration.  If, however, a media type is\n   explicitly intended\
    \ for limited use, this should be noted in its\n   registration.\n"
- title: 2.2.8.  Publication Requirements
  contents:
  - "2.2.8.  Publication Requirements\n   Proposals for media types registered in\
    \ the IETF tree must be\n   published as RFCs. RFC publication of vendor and personal\
    \ media type\n   proposals is encouraged but not required. In all cases IANA will\n\
    \   retain copies of all media type proposals and \"publish\" them as part\n \
    \  of the media types registration tree itself.\n   Other than in the IETF tree,\
    \ the registration of a data type does not\n   imply endorsement, approval, or\
    \ recommendation by IANA or IETF or\n   even certification that the specification\
    \ is adequate.  To become\n   Internet Standards, protocol, data objects, or whatever\
    \ must go\n   through the IETF standards process.  This is too difficult and too\n\
    \   lengthy a process for the convenient registration of media types.\n   The\
    \ IETF tree exists for media types that do require require a\n   substantive review\
    \ and approval process with the vendor and personal\n   trees exist for those\
    \ that do not. It is expected that applicability\n   statements for particular\
    \ applications will be published from time to\n   time that recommend implementation\
    \ of, and support for, media types\n   that have proven particularly useful in\
    \ those contexts.\n   As discussed above, registration of a top-level type requires\n\
    \   standards-track processing and, hence, RFC publication.\n"
- title: 2.2.9.  Additional Information
  contents:
  - "2.2.9.  Additional Information\n   Various sorts of optional information may\
    \ be included in the\n   specification of a media type if it is available:\n \
    \   (1)   Magic number(s) (length, octet values). Magic numbers\n          are\
    \ byte sequences that are always present and thus can\n          be used to identify\
    \ entities as being of a given media\n          type.\n    (2)   File extension(s)\
    \ commonly used on one or more\n          platforms to indicate that some file\
    \ containing a given\n          type of media.\n    (3)   Macintosh File Type\
    \ code(s) (4 octets) used to label\n          files containing a given type of\
    \ media.\n   Such information is often quite useful to implementors and if\n \
    \  available should be provided.\n"
- title: 2.3.  Registration Procedure
  contents:
  - "2.3.  Registration Procedure\n   The following procedure has been implemented\
    \ by the IANA for review\n   and approval of new media types.  This is not a formal\
    \ standards\n   process, but rather an administrative procedure intended to allow\n\
    \   community comment and sanity checking without excessive time delay.\n   For\
    \ registration in the IETF tree, the normal IETF processes should\n   be followed,\
    \ treating posting of an internet-draft and announcement\n   on the ietf-types\
    \ list (as described in the next subsection) as a\n   first step.  For registrations\
    \ in the vendor or personal tree, the\n   initial review step described below\
    \ may be omitted and the type\n   registered directly by submitting the template\
    \ and an explanation\n   directly to IANA (at iana@iana.org).  However, authors\
    \ of vendor or\n   personal media type specifications are encouraged to seek community\n\
    \   review and comment whenever that is feasible.\n"
- title: 2.3.1.  Present the Media Type to the Community for Review
  contents:
  - "2.3.1.  Present the Media Type to the Community for Review\n   Send a proposed\
    \ media type registration to the \"ietf-types@iana.org\"\n   mailing list for\
    \ a two week review period.  This mailing list has\n   been established for the\
    \ purpose of reviewing proposed media and\n   access types. Proposed media types\
    \ are not formally registered and\n   must not be used; the \"x-\" prefix specified\
    \ in RFC 2045 can be used\n   until registration is complete.\n   The intent of\
    \ the public posting is to solicit comments and feedback\n   on the choice of\
    \ type/subtype name, the unambiguity of the references\n   with respect to versions\
    \ and external profiling information, and a\n   review of any interoperability\
    \ or security considerations. The\n   submitter may submit a revised registration,\
    \ or withdraw the\n   registration completely, at any time.\n"
- title: 2.3.2.  IESG Approval
  contents:
  - "2.3.2.  IESG Approval\n   Media types registered in the IETF tree must be submitted\
    \ to the IESG\n   for approval.\n"
- title: 2.3.3.  IANA Registration
  contents:
  - "2.3.3.  IANA Registration\n   Provided that the media type meets the requirements\
    \ for media types\n   and has obtained approval that is necessary, the author\
    \ may submit\n   the registration request to the IANA, which will register the\
    \ media\n   type and make the media type registration available to the community.\n"
- title: 2.4.  Comments on Media Type Registrations
  contents:
  - "2.4.  Comments on Media Type Registrations\n   Comments on registered media types\
    \ may be submitted by members of the\n   community to IANA.  These comments will\
    \ be passed on to the \"owner\"\n   of the media type if possible.  Submitters\
    \ of comments may request\n   that their comment be attached to the media type\
    \ registration itself,\n   and if IANA approves of this the comment will be made\
    \ accessible in\n   conjunction with the type registration itself.\n"
- title: 2.5.  Location of Registered Media Type List
  contents:
  - "2.5.  Location of Registered Media Type List\n   Media type registrations will\
    \ be posted in the anonymous FTP\n   directory \"ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/\"\
    \n   and all registered media types will be listed in the periodically\n   issued\
    \ \"Assigned Numbers\" RFC [currently STD 2, RFC 1700].  The media\n   type description\
    \ and other supporting material may also be published\n   as an Informational\
    \ RFC by sending it to \"rfc-editor@isi.edu\" (please\n   follow the instructions\
    \ to RFC authors [RFC-1543]).\n"
- title: 2.6.  IANA Procedures for Registering Media Types
  contents:
  - "2.6.  IANA Procedures for Registering Media Types\n   The IANA will only register\
    \ media types in the IETF tree in response\n   to a communication from the IESG\
    \ stating that a given registration\n   has been approved. Vendor and personal\
    \ types will be registered by\n   the IANA automatically and without any formal\
    \ review as long as the\n   following minimal conditions are met:\n    (1)   Media\
    \ types must function as an actual media format.\n          In particular, character\
    \ sets and transfer encodings\n          may not be registered as media types.\n\
    \    (2)   All media types must have properly formed type and\n          subtype\
    \ names. All type names must be defined by a\n          standards-track RFC. All\
    \ subtype names must be unique,\n          must conform to the MIME grammar for\
    \ such names, and\n          must contain the proper tree prefix.\n    (3)   Types\
    \ registered in the personal tree must either\n          provide a format specification\
    \ or a pointer to one.\n    (4)   Any security considerations given must not be\
    \ obviously\n          bogus. (It is neither possible nor necessary for the\n\
    \          IANA to conduct a comprehensive security review of\n          media\
    \ type registrations.  Nevertheless, IANA has the\n          authority to identify\
    \ obviously incompetent material\n          and exclude it.)\n"
- title: 2.7.  Change Control
  contents:
  - "2.7.  Change Control\n   Once a media type has been published by IANA, the author\
    \ may request\n   a change to its definition. The descriptions of the different\n\
    \   registration trees above designate the \"owners\" of each type of\n   registration.\
    \ The change request follows the same procedure as the\n   registration request:\n\
    \    (1)   Publish the revised template on the ietf-types list.\n    (2)   Leave\
    \ at least two weeks for comments.\n    (3)   Publish using IANA after formal\
    \ review if required.\n   Changes should be requested only when there are serious\
    \ omission or\n   errors in the published specification. When review is required,\
    \ a\n   change request may be denied if it renders entities that were valid\n\
    \   under the previous definition invalid under the new definition.\n   The owner\
    \ of a content type may pass responsibility for the content\n   type to another\
    \ person or agency by informing IANA and the ietf-types\n   list; this can be\
    \ done without discussion or review.\n   The IESG may reassign responsibility\
    \ for a media type. The most\n   common case of this will be to enable changes\
    \ to be made to types\n   where the author of the registration has died, moved\
    \ out of contact\n   or is otherwise unable to make changes that are important\
    \ to the\n   community.\n   Media type registrations may not be deleted; media\
    \ types which are no\n   longer believed appropriate for use can be declared OBSOLETE\
    \ by a\n   change to their \"intended use\" field; such media types will be\n\
    \   clearly marked in the lists published by IANA.\n"
- title: 2.8.  Registration Template
  contents:
  - "2.8.  Registration Template\n     To: ietf-types@iana.org\n     Subject: Registration\
    \ of MIME media type XXX/YYY\n     MIME media type name:\n     MIME subtype name:\n\
    \     Required parameters:\n     Optional parameters:\n     Encoding considerations:\n\
    \     Security considerations:\n     Interoperability considerations:\n     Published\
    \ specification:\n     Applications which use this media type:\n     Additional\
    \ information:\n       Magic number(s):\n       File extension(s):\n       Macintosh\
    \ File Type Code(s):\n     Person & email address to contact for further information:\n\
    \     Intended usage:\n     (One of COMMON, LIMITED USE or OBSOLETE)\n     Author/Change\
    \ controller:\n     (Any other information that the author deems interesting may\
    \ be\n     added below this line.)\n"
- title: 3.  External Body Access Types
  contents:
  - "3.  External Body Access Types\n   RFC 2046 defines the message/external-body\
    \ media type, whereby a MIME\n   entity can act as pointer to the actual body\
    \ data in lieu of\n   including the data directly in the entity body. Each\n \
    \  message/external-body reference specifies an access type, which\n   determines\
    \ the mechanism used to retrieve the actual body data. RFC\n   2046 defines an\
    \ initial set of access types, but allows for the\n   registration of additional\
    \ access types to accommodate new retrieval\n   mechanisms.\n"
- title: 3.1.  Registration Requirements
  contents:
  - "3.1.  Registration Requirements\n   New access type specifications must conform\
    \ to a number of\n   requirements as described below.\n"
- title: 3.1.1.  Naming Requirements
  contents:
  - "3.1.1.  Naming Requirements\n   Each access type must have a unique name.  This\
    \ name appears in the\n   access-type parameter in the message/external-body content-type\n\
    \   header field, and must conform to MIME content type parameter syntax.\n"
- title: 3.1.2.  Mechanism Specification Requirements
  contents:
  - "3.1.2.  Mechanism Specification Requirements\n   All of the protocols, transports,\
    \ and procedures used by a given\n   access type must be described, either in\
    \ the specification of the\n   access type itself or in some other publicly available\
    \ specification,\n   in sufficient detail for the access type to be implemented\
    \ by any\n   competent implementor.  Use of secret and/or proprietary methods\
    \ in\n   access types are expressly prohibited. The restrictions imposed by\n\
    \   RFC 1602 on the standardization of patented algorithms must be\n   respected\
    \ as well.\n"
- title: 3.1.3.  Publication Requirements
  contents:
  - "3.1.3.  Publication Requirements\n   All access types must be described by an\
    \ RFC. The RFC may be\n   informational rather than standards-track, although\
    \ standard-track\n   review and approval are encouraged for all access types.\n"
- title: 3.1.4.  Security Requirements
  contents:
  - "3.1.4.  Security Requirements\n   Any known security issues that arise from the\
    \ use of the access type\n   must be completely and fully described. It is not\
    \ required that the\n   access type be secure or that it be free from risks, but\
    \ that the\n   known risks be identified.  Publication of a new access type does\
    \ not\n   require an exhaustive security review, and the security\n   considerations\
    \ section is subject to continuing evaluation.\n   Additional security considerations\
    \ should be addressed by publishing\n   revised versions of the access type specification.\n"
- title: 3.2.  Registration Procedure
  contents:
  - "3.2.  Registration Procedure\n   Registration of a new access type starts with\
    \ the construction of a\n   draft of an RFC.\n"
- title: 3.2.1.  Present the Access Type to the Community
  contents:
  - "3.2.1.  Present the Access Type to the Community\n   Send a proposed access type\
    \ specification to the \"ietf-\n   types@iana.org\" mailing list for a two week\
    \ review period.  This\n   mailing list has been established for the purpose of\
    \ reviewing\n   proposed access and media types.  Proposed access types are not\n\
    \   formally registered and must not be used.\n   The intent of the public posting\
    \ is to solicit comments and feedback\n   on the access type specification and\
    \ a review of any security\n   considerations.\n"
- title: 3.2.2.  Access Type Reviewer
  contents:
  - "3.2.2.  Access Type Reviewer\n   When the two week period has passed, the access\
    \ type reviewer, who is\n   appointed by the IETF Applications Area Director,\
    \ either forwards the\n   request to iana@isi.edu, or rejects it because of significant\n\
    \   objections raised on the list.\n   Decisions made by the reviewer must be\
    \ posted to the ietf-types\n   mailing list within 14 days. Decisions made by\
    \ the reviewer may be\n   appealed to the IESG.\n"
- title: 3.2.3.  IANA Registration
  contents:
  - "3.2.3.  IANA Registration\n   Provided that the access type has either passed\
    \ review or has been\n   successfully appealed to the IESG, the IANA will register\
    \ the access\n   type and make the registration available to the community. The\n\
    \   specification of the access type must also be published as an RFC.\n   Informational\
    \ RFCs are published by sending them to \"rfc-\n   editor@isi.edu\" (please follow\
    \ the instructions to RFC authors [RFC-\n   1543]).\n"
- title: 3.3.  Location of Registered Access Type List
  contents:
  - "3.3.  Location of Registered Access Type List\n   Access type registrations will\
    \ be posted in the anonymous FTP\n   directory \"ftp://ftp.isi.edu/in-notes/iana/assignments/access-types/\"\
    \n   and all registered access types will be listed in the periodically\n   issued\
    \ \"Assigned Numbers\" RFC [currently RFC-1700].\n"
- title: 3.4.  IANA Procedures for Registering Access Types
  contents:
  - "3.4.  IANA Procedures for Registering Access Types\n   The identity of the access\
    \ type reviewer is communicated to the IANA\n   by the IESG.  The IANA then only\
    \ acts in response to access type\n   definitions that either are approved by\
    \ the access type reviewer and\n   forwarded by the reviewer to the IANA for registration,\
    \ or in\n   response to a communication from the IESG that an access type\n  \
    \ definition appeal has overturned the access type reviewer's ruling.\n"
- title: 4.  Transfer Encodings
  contents:
  - "4.  Transfer Encodings\n   Transfer encodings are tranformations applied to MIME\
    \ media types\n   after conversion to the media type's canonical form.  Transfer\n\
    \   encodings are used for several purposes:\n    (1)   Many transports, especially\
    \ message transports, can\n          only handle data consisting of relatively\
    \ short lines\n          of text. There can also be severe restrictions on what\n\
    \          characters can be used in these lines of text -- some\n          transports\
    \ are restricted to a small subset of US-ASCII\n          and others cannot handle\
    \ certain character sequences.\n          Transfer encodings are used to transform\
    \ binary data\n          into textual form that can survive such transports.\n\
    \          Examples of this sort of transfer encoding include the\n          base64\
    \ and quoted-printable transfer encodings defined\n          in RFC 2045.\n  \
    \  (2)   Image, audio, video, and even application entities are\n          sometimes\
    \ quite large. Compression algorithms are often\n          quite effective in\
    \ reducing the size of large entities.\n          Transfer encodings can be used\
    \ to apply general-purpose\n          non-lossy compression algorithms to MIME\
    \ entities.\n    (3)   Transport encodings can be defined as a means of\n    \
    \      representing existing encoding formats in a MIME\n          context.\n\
    \   IMPORTANT:  The standardization of a large numbers of different\n   transfer\
    \ encodings is seen as a significant barrier to widespread\n   interoperability\
    \ and is expressely discouraged.  Nevertheless, the\n   following procedure has\
    \ been defined to provide a means of defining\n   additional transfer encodings,\
    \ should standardization actually be\n   justified.\n"
- title: 4.1.  Transfer Encoding Requirements
  contents:
  - "4.1.  Transfer Encoding Requirements\n   Transfer encoding specifications must\
    \ conform to a number of\n   requirements as described below.\n"
- title: 4.1.1.  Naming Requirements
  contents:
  - "4.1.1.  Naming Requirements\n   Each transfer encoding must have a unique name.\
    \  This name appears in\n   the Content-Transfer-Encoding header field and must\
    \ conform to the\n   syntax of that field.\n"
- title: 4.1.2.  Algorithm Specification Requirements
  contents:
  - "4.1.2.  Algorithm Specification Requirements\n   All of the algorithms used in\
    \ a transfer encoding (e.g.  conversion\n   to printable form, compression) must\
    \ be described in their entirety\n   in the transfer encoding specification. \
    \ Use of secret and/or\n   proprietary algorithms in standardized transfer encodings\
    \ are\n   expressly prohibited. The restrictions imposed by RFC 1602 on the\n\
    \   standardization of patented algorithms must be respected as well.\n"
- title: 4.1.3.  Input Domain Requirements
  contents:
  - "4.1.3.  Input Domain Requirements\n   All transfer encodings must be applicable\
    \ to an arbitrary sequence of\n   octets of any length.  Dependence on particular\
    \ input forms is not\n   allowed.\n   It should be noted that the 7bit and 8bit\
    \ encodings do not conform to\n   this requirement. Aside from the undesireability\
    \ of having\n   specialized encodings, the intent here is to forbid the addition\
    \ of\n   additional encodings along the lines of 7bit and 8bit.\n"
- title: 4.1.4.  Output Range Requirements
  contents:
  - "4.1.4.  Output Range Requirements\n   There is no requirement that a particular\
    \ tranfer encoding produce a\n   particular form of encoded output.  However,\
    \ the output format for\n   each transfer encoding must be fully and completely\
    \ documented.  In\n   particular, each specification must clearly state whether\
    \ the output\n   format always lies within the confines of 7bit data, 8bit data,\
    \ or is\n   simply pure binary data.\n"
- title: 4.1.5.  Data Integrity and Generality Requirements
  contents:
  - "4.1.5.  Data Integrity and Generality Requirements\n   All transfer encodings\
    \ must be fully invertible on any platform; it\n   must be possible for anyone\
    \ to recover the original data by\n   performing the corresponding decoding operation.\
    \  Note that this\n   requirement effectively excludes all forms of lossy compression\
    \ as\n   well as all forms of encryption from use as a transfer encoding.\n"
- title: 4.1.6.  New Functionality Requirements
  contents:
  - "4.1.6.  New Functionality Requirements\n   All transfer encodings must provide\
    \ some sort of new functionality.\n   Some degree of functionality overlap with\
    \ previously defined transfer\n   encodings is acceptable, but any new transfer\
    \ encoding must also\n   offer something no other transfer encoding provides.\n"
- title: 4.2.  Transfer Encoding Definition Procedure
  contents:
  - "4.2.  Transfer Encoding Definition Procedure\n   Definition of a new transfer\
    \ encoding starts with the construction of\n   a draft of a standards-track RFC.\
    \  The RFC must define the transfer\n   encoding precisely and completely, and\
    \ must also provide substantial\n   justification for defining and standardizing\
    \ a new transfer encoding.\n   This specification must then be presented to the\
    \ IESG for\n   consideration.  The IESG can\n    (1)   reject the specification\
    \ outright as being\n          inappropriate for standardization,\n    (2)   approve\
    \ the formation of an IETF working group to work\n          on the specification\
    \ in accordance with IETF\n          procedures, or,\n    (3)   accept the specification\
    \ as-is and put it directly on\n          the standards track.\n   Transfer encoding\
    \ specifications on the standards track follow normal\n   IETF rules for standards\
    \ track documents.  A transfer encoding is\n   considered to be defined and available\
    \ for use once it is on the\n   standards track.\n"
- title: 4.3.  IANA Procedures for Transfer Encoding Registration
  contents:
  - "4.3.  IANA Procedures for Transfer Encoding Registration\n   There is no need\
    \ for a special procedure for registering Transfer\n   Encodings with the IANA.\
    \ All legitimate transfer encoding\n   registrations must appear as a standards-track\
    \ RFC, so it is the\n   IESG's responsibility to notify the IANA when a new transfer\
    \ encoding\n   has been approved.\n"
- title: 4.4.  Location of Registered Transfer Encodings List
  contents:
  - "4.4.  Location of Registered Transfer Encodings List\n   Transfer encoding registrations\
    \ will be posted in the anonymous FTP\n   directory \"ftp://ftp.isi.edu/in-notes/iana/assignments/transfer-\n\
    \   encodings/\" and all registered transfer encodings will be listed in\n   the\
    \ periodically issued \"Assigned Numbers\" RFC [currently RFC-1700].\n"
- title: 5.  Authors' Addresses
  contents:
  - "5.  Authors' Addresses\n   For more information, the authors of this document\
    \ are best\n   contacted via Internet mail:\n   Ned Freed\n   Innosoft International,\
    \ Inc.\n   1050 East Garvey Avenue South\n   West Covina, CA 91790\n   USA\n \
    \  Phone: +1 818 919 3600\n   Fax:   +1 818 919 3614\n   EMail: ned@innosoft.com\n\
    \   John Klensin\n   MCI\n   2100 Reston Parkway\n   Reston, VA 22091\n   Phone:\
    \ +1 703 715-7361\n   Fax:   +1 703 715-7436\n   EMail: klensin@mci.net\n   Jon\
    \ Postel\n   USC/Information Sciences Institute\n   4676 Admiralty Way\n   Marina\
    \ del Rey, CA  90292\n   USA\n   Phone: +1 310 822 1511\n   Fax:   +1 310 823\
    \ 6714\n   EMail: Postel@ISI.EDU\n"
- title: Appendix A -- Grandfathered Media Types
  contents:
  - "Appendix A -- Grandfathered Media Types\n   A number of media types, registered\
    \ prior to 1996, would, if\n   registered under the guidelines in this document,\
    \ be placed into\n   either the vendor or personal trees.  Reregistration of those\
    \ types\n   to reflect the appropriate trees is encouraged, but not required.\n\
    \   Ownership and change control principles outlined in this document\n   apply\
    \ to those types as if they had been registered in the trees\n   described above.\n"
