- title: __initial_text__
  contents:
  - '       Ethernet Pseudowire (PW) Management Information Base (MIB)

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it describes managed objects for modeling of Ethernet\n   pseudowire\
    \ (PW) services.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. The Internet-Standard Management Framework ......................2\n  \
    \ 3. Conventions .....................................................3\n   4.\
    \ Overview ........................................................3\n   5. Feature\
    \ Checklist ...............................................4\n   6. PW ENET MIB\
    \ Module Usage ........................................4\n   7. PW-ENET Management\
    \ Model ........................................5\n   8. Example of the PW-ENET\
    \ MIB Module Usage .........................6\n   9. Service-Delimiting Modes\
    \ ........................................6\n   10. Object Definitions .............................................9\n\
    \   11. Security Considerations .......................................19\n  \
    \ 12. IANA Considerations ...........................................21\n   13.\
    \ References ....................................................21\n      13.1.\
    \ Normative References .....................................21\n      13.2. Informative\
    \ References ...................................22\n   14. Acknowledgments ...............................................22\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document describes a model for managing Ethernet pseudowire\n\
    \   services for transmission over a Packet Switched Network (PSN).  This\n  \
    \ MIB module is generic and common to all types of PSNs supported in\n   the Pseudowire\
    \ Emulation Edge-to-Edge (PWE3) architecture [RFC3985],\n   which describes the\
    \ transport and encapsulation of L1 and L2 services\n   over supported PSN types.\n\
    \   In particular, the MIB module associates a port or specific VLANs on\n   top\
    \ of a physical Ethernet port or a virtual Ethernet interface (for\n   Virtual\
    \ Private LAN Service (VPLS)) to a point-to-point PW.  It is\n   complementary\
    \ to the PW-STD-MIB [RFC5601], which manages the generic\n   PW parameters common\
    \ to all services, including all supported PSN\n   types.\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through Simple Network\
    \ Management Protocol (SNMP).  Objects\n   in the MIB are defined using the mechanisms\
    \ defined in the Structure\n   of Management Information (SMI).  This memo specifies\
    \ a MIB module\n   that is compliant to the SMIv2, which is described in STD 58,\
    \ RFC\n   2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n  \
    \ [RFC2580].\n"
- title: 3.  Conventions
  contents:
  - "3.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [BCP14].\n   This document adopts the definitions, acronyms, and mechanisms\n\
    \   described in [RFC3985] and [RFC3916].  Unless otherwise stated, the\n   mechanisms\
    \ of [RFC3985] apply and will not be re-described here.\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   The MIB module structure for defining a PW service is composed\
    \ of\n   three layers of MIB modules functioning together.  This general model\n\
    \   is defined in the PWE3 architecture [RFC3985].  The layering model is\n  \
    \ intended to sufficiently isolate PW services from the underlying PSN\n   layer\
    \ that carries the emulated service.  This is done at the same\n   time as providing\
    \ a standard means for connecting any supported\n   services to any supported\
    \ PSNs.\n   The first layer, known as the service layer, contains service-\n \
    \  specific modules.  These modules define service-specific management\n   objects\
    \ that interface or collaborate with existing MIB modules for\n   the native version\
    \ of the service.  The service-specific module\n   \"glues\" the standard modules\
    \ to the PWE3 MIB modules.\n   The next layer of the PWE3 MIB framework is the\
    \ PW MIB module\n   [RFC5601].  This module is used to configure general parameters\
    \ of\n   PWs that are common to all types of emulated services and PSNs.  This\n\
    \   layer is connected to the service-specific layer above and the PSN\n   layer\
    \ below.\n   The PSN layer provides PSN-specific modules for each type of PSN.\n\
    \   These modules associate the PW with one or more \"tunnels\" that carry\n \
    \  the service over the PSN.  These modules are used to \"glue\" the PW\n   service\
    \ to the underlying PSN-specific MIB modules.  This document\n   defines the MIB\
    \ module for Ethernet PW over any PSN type.\n   This module uses Textual Conventions\
    \ (TCs) and objects as defined in\n   [RFC2578], [RFC2579], [RFC2580], [RFC2863],\
    \ [RFC4363], [RFC4502], and\n   [RFC5601].\n   The Etherlike-MIB [RFC3635] does\
    \ not support virtual Ethernet ports;\n   however, it is sometimes desired to\
    \ manage the PW as an Ethernet port\n   via the Etherlike-MIB.  This MIB module\
    \ supports an option to\n   recognize the PW as an ifIndex, enabling standard\
    \ use of the\n   Etherlike-MIB to manage the PW.\n"
- title: 5.  Feature Checklist
  contents:
  - "5.  Feature Checklist\n   The PW Ethernet MIB module (PW-ENET-STD-MIB) is designed\
    \ to satisfy\n   the following requirements and constraints:\n   -  The MIB module\
    \ is designed to work with the PW-STD-MIB [RFC5601].\n   -  The MIB module is\
    \ agnostic to the PSN type.\n   -  The MIB module supports various options for\
    \ selecting Ethernet\n      packets into the PW, as defined in [RFC4448].  These\
    \ include\n      port-based PW, VLAN-based PW, and VLAN-manipulated based (change,\n\
    \      add, or remove) between the port to be emulated and the PW.\n   -  In the\
    \ case of an MPLS PSN, the MIB module supports the use of\n      multiple PWs\
    \ to carry the same Ethernet service.  These PWs can be\n      used to support\
    \ Label-Only-Inferred-PSC LSPs (L-LSPs) or EXP-\n      Inferred-PSC LSPs (E-LSPs)\
    \ that are from a single Class of Service\n      (CoS), when mapping of the Ethernet\
    \ user priority (PRI) bits to\n      the PSN CoS is required.\n   -  The MIB module\
    \ enables both point-to-point Ethernet services and\n      VPLS services as discussed\
    \ in the L2VPN working group [RFC4664].\n   -  The MIB module allows modeling\
    \ of the PW as an Ethernet virtual\n      port to be managed via existing Ethernet\
    \ MIBs like Etherlike-MIB\n      [RFC3635].\n"
- title: 6.  PW ENET MIB Module Usage
  contents:
  - "6.  PW ENET MIB Module Usage\n   -  The PW table (pwTable) is used for all PW\
    \ types (ATM, FR,\n      Ethernet, SONET, etc.).  This table contains high-level\
    \ generic\n      parameters related to the PW creation.  A row is typically created\n\
    \      by the operator (see [RFC5542] for other options) for each PW\n      service.\n\
    \   -  Based on the PSN type defined for the PW, rows are created in the\n   \
    \   PSN-specific module (for example, [RFC5602]) and associated to the\n     \
    \ pwTable by the common pwIndex.\n   -  If the PW type is Ethernet or EthernetTagged\
    \ a row is created by\n      the agent in the pwEnetTable.\n"
- title: 7.  PW-ENET Management Model
  contents:
  - "7.  PW-ENET Management Model\n   The management model for the Ethernet PW is\
    \ shown in Figure 1, and is\n   based on the PW layering [RFC3985].\n        \
    \      +--------------------------------------+\n              |             \
    \   PE Device             |\n              +--------------------------------------+\n\
    \       Single |                 |                    |\n       AC     |     \
    \            |      Single        | PW Instance\n      <------>o   Forwarder \
    \    +      PW Instance   X<=========>\n              |                 |    \
    \                |\n              +--------------------------------------+\n \
    \                               ^\n                                |\n       \
    \                  May be modeled as\n                             ifIndex\n \
    \  Notation:   o   A physical CE-bound PE port.\n               +   A PW IWF instance\
    \ interface to the forwarder.\n               X   A PE PSN-bound port.\n     \
    \            Figure 1: A simple point-to-point service\n   In the typical point-to-point\
    \ service, the object pwEnetPortIfIndex\n   associates the physical CE-bound PE\
    \ port ('o') to the PW (it is\n   allowed to have multiple PWs associated to the\
    \ same physical port).\n   This MIB module also manages some of the possible operations\
    \ of the\n   forwarder.\n   In some models, it is convenient to model the forwarder\
    \ virtual\n   interface to a PW IWF instance ('+') as an ifIndex.  As discussed\
    \ in\n   [RFC5601], this is possible by using the PW ifType in the ifTable and\n\
    \   indicating the ifIndex in the main pwTable.  In case of Ethernet PW,\n   a\
    \ virtual interface of ifType = etherLike will be assigned on top of\n   the PW\
    \ interface to enable statistics gathering and statuses and\n   other management\
    \ configuration tasks via existing tools.  This way,\n   the PW instance is managed\
    \ as virtual Ethernet interface in the PE.\n   The model for using the PW in non-point-to-point\
    \ applications, such\n   as VPLS, is done with the same principle in mind, except\
    \ that the\n   creation of the tables is related typically to an auto-discovery\n\
    \   process.\n"
- title: 8.  Example of the PW-ENET MIB Module Usage
  contents:
  - "8.  Example of the PW-ENET MIB Module Usage\n   Assume we would like to create\
    \ a PW of type VLAN between two PEs, for\n   VLAN value 5.\n   -  Follows the\
    \ example in [RFC5601], with pwType equals\n      'ethernetTagged'.\n   -  The\
    \ agent creates a row in the pwEnetTable and a row in the\n      pwEnetStatsTable\
    \ for the specified pwIndex.  The pwEnetPwInstance\n      is automatically set\
    \ by the agent to the value of 1.\n   -  The operator fills the following entries\
    \ in the pwEnetTable:\n         pwEnetPwVlan        5,\n         pwEnetVlanMode\
    \      noChange,\n         pwEnetPortVlan      5,\n         pwEnetPortIfIndex\
    \   1001,\n         pwEnetPwIfIndex     0, -- Not managed in the\n           \
    \                     -- Etherlike MIB module\n         ...\n   -  The PW is ready\
    \ for forwarding when signaling has been\n      accomplished successfully between\
    \ the two peers.\n"
- title: 9.  Service-Delimiting Modes
  contents:
  - "9.  Service-Delimiting Modes\n   This section describes how the MIB module supports\
    \ point-to-point\n   applications with various VLAN service-delimiting options\
    \ on the\n   original Ethernet port and the corresponding PW mode and VLAN values.\n\
    \   If the PW is attached to VPLS service, the PW is associated to a\n   virtual\
    \ interface that is attached to a bridge or VPLS forwarder.\n   The bridging function\
    \ between local physical ports and virtual\n   interfaces that are later associated\
    \ to PWs is not handled via this\n   MIB module.\n   There are three main service\
    \ types that are supported by this MIB\n   module:\n   (1)  Port mode: In this\
    \ mode, the whole traffic from the port is\n        mapped to the PW.\n      \
    \  A.  In the typical application, the packet is sent to the PW as\n         \
    \   is:\n            pwEnetPwVlan        4095,\n            pwEnetVlanMode   \
    \   portMode,\n            pwEnetPortVlan      4095,\n            pwType     \
    \         Ethernet,\n        B.  It is possible to add a provider tag (value 10,\
    \ for example)\n            to the packet when it is sent over the PW:\n     \
    \       pwEnetPwVlan        10,\n            pwEnetVlanMode      addVlan,\n  \
    \          pwEnetPortVlan      4095,\n            pwType SHOULD be set to 'EthernetTagged'.\n\
    \   (2)  Single VLAN: In this mode, only the first VLAN field on the\n       \
    \ packet from the physical port is the service-delimiting tag, as\n        an\
    \ example VLAN=5.  The following options of processing are\n        possible:\n\
    \        A.  One-to-one mapping: The service-delimiting tag is kept as is\n  \
    \          on the PW.\n            pwEnetPwVlan        5,\n            pwEnetVlanMode\
    \      noChange,\n            pwEnetPortVlan      5,\n            pwType SHOULD\
    \ be set to 'EthernetTagged'.\n        B.  VLAN change mapping: The service-delimiting\
    \ tag changes its\n            value (to the value of 6) on the PW.\n        \
    \    pwEnetPwVlan        6,\n            pwEnetVlanMode      changeVlan,\n   \
    \         pwEnetPortVlan      5,\n            pwType SHOULD be set to 'EthernetTagged'.\n\
    \        C.  The service-delimiting tag is removed when the packet is\n      \
    \      sent to the PW.\n            pwEnetPwVlan        4095,\n            pwEnetVlanMode\
    \      removeVlan,\n            pwEnetPortVlan      5,\n            pwType SHOULD\
    \ be set to 'EthernetTagged'.\n            It should be noted that this mode is\
    \ also applicable when\n            the service-delimiting tag is a service provider\
    \ tag (VLAN=5\n            in this case), and the node removes this VLAN and maps\
    \ the\n            traffic to a single PW independent of the packet format on\n\
    \            top of this VLAN.\n        D.  Untagged packets mapped to a PW as\
    \ is (packets with a VLAN\n            field from the same port MAY be mapped\
    \ to other PWs).\n            pwEnetPwVlan        0,\n            pwEnetVlanMode\
    \      noChange,\n            pwEnetPortVlan      0,\n            pwType MAY equal\
    \ 'Ethernet' or 'EthernetTagged'.\n        E.  Untagged packets mapped to a PW,\
    \ and a VLAN field is added\n            to the packet.\n            pwEnetPwVlan\
    \        6,\n            pwEnetVlanMode      addVlan,\n            pwEnetPortVlan\
    \      0,\n            pwType SHOULD be set to 'EthernetTagged'.\n        F. \
    \ A provider VLAN (value 10) is added to packets arriving with\n            VLAN\
    \ value 5 before they are sent to the PW.\n            pwEnetPwVlan        10,\n\
    \            pwEnetVlanMode      addVlan,\n            pwEnetPortVlan      5,\n\
    \            pwType SHOULD be set to 'EthernetTagged'.\n   (3)  Nested VLAN (QinQ):\
    \ When only the first VLAN is the service-\n        delimiting tag, one of the\
    \ modes as described in 2) SHOULD be\n        used.  If the service-delimiting\
    \ tag is both the first VLAN and\n        the second VLAN, the following option\
    \ is supported by this MIB\n        module:\n        Assuming the provider VLAN\
    \ tag equals 5 and the user VLAN tag\n        equal 100, this traffic can be mapped\
    \ to the PW without the\n        provider tag by using the following configuration:\n\
    \         pwEnetPwVlan        100,\n         pwEnetVlanMode      removeVLAN,\n\
    \         pwEnetPortVlan      5,\n         It is RECOMMENDED that the pwType would\
    \ equal 'EthernetTagged',\n         but pwType equal to 'Ethernet' MAY be used\
    \ as well.\n        Packets with the same provider tag MAY be mapped to other\
    \ PWs.\n   (4)  Other scenarios are considered out of scope and should be\n  \
    \      handled by other MIB modules that manage the forwarder and the\n      \
    \  Native Service Processing (NSP) sections.\n"
- title: 10.  Object Definitions
  contents:
  - '10.  Object Definitions

    '
- title: PW-ENET-STD-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'PW-ENET-STD-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n   OBJECT-TYPE, MODULE-IDENTITY, Unsigned32, mib-2\n       FROM SNMPv2-SMI\
    \                    -- [RFC2578]\n   MODULE-COMPLIANCE, OBJECT-GROUP\n      \
    \ FROM SNMPv2-CONF                   -- [RFC2580]\n   StorageType, RowStatus\n\
    \       FROM SNMPv2-TC                     -- [RFC2579]\n   InterfaceIndexOrZero\n\
    \       FROM IF-MIB                        -- [RFC2863]\n   ZeroBasedCounter32\n\
    \       FROM RMON2-MIB                     -- [RFC4502]\n   pwIndex\n       FROM\
    \ PW-STD-MIB                    -- [RFC5601]\n   VlanIdOrAnyOrNone\n       FROM\
    \ Q-BRIDGE-MIB;                 -- [RFC4363]\n"
- title: pwEnetStdMIB MODULE-IDENTITY
  contents:
  - "pwEnetStdMIB MODULE-IDENTITY\n    LAST-UPDATED \"200906150000Z\"  -- 15 June\
    \ 2009 00:00:00 GMT\n    ORGANIZATION \"Pseudowire Edge-to-Edge Emulation (PWE3)\
    \ Working\n                 Group\"\n    CONTACT-INFO\n         \"David Zelig\n\
    \          Email: davidz@oversi.com\n          Thomas D. Nadeau\n          Email:\
    \  tom.nadeau@bt.com\n         \"\n    DESCRIPTION\n        \"This MIB module\
    \ describes a model for managing Ethernet\n         point-to-point pseudowire\
    \ services over a Packet\n         Switched Network (PSN).\n         Copyright\
    \ (c) 2009 IETF Trust and the persons identified\n         as authors of the code.\
    \  All rights reserved.\n         Redistribution and use in source and binary\
    \ forms, with or\n         without modification, are permitted provided that the\
    \ following\n         conditions are met:\n         - Redistributions of source\
    \ code must retain the above\n           copyright notice, this list of conditions\
    \ and the following\n           disclaimer.\n         - Redistributions in binary\
    \ form must reproduce the above\n           copyright notice, this list of conditions\
    \ and the following\n           disclaimer in the documentation and/or other materials\n\
    \           provided with the distribution.\n         - Neither the name of Internet\
    \ Society, IETF or IETF Trust, nor\n           the names of specific contributors,\
    \ may be used to endorse or\n           promote products derived from this software\
    \ without specific\n           prior written permission.\n         THIS SOFTWARE\
    \ IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n         CONTRIBUTORS 'AS IS' AND\
    \ ANY EXPRESS OR IMPLIED WARRANTIES,\n         INCLUDING, BUT NOT LIMITED TO,\
    \ THE IMPLIED WARRANTIES OF\n         MERCHANTABILITY AND FITNESS FOR A PARTICULAR\
    \ PURPOSE ARE\n         DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\
    \         CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n     \
    \    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n         NOT\
    \ LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n         LOSS OF USE,\
    \ DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n         HOWEVER CAUSED AND ON\
    \ ANY THEORY OF LIABILITY, WHETHER IN\n         CONTRACT, STRICT LIABILITY, OR\
    \ TORT (INCLUDING NEGLIGENCE OR\n         OTHERWISE) ARISING IN ANY WAY OUT OF\
    \ THE USE OF THIS SOFTWARE,\n         EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\
    \ DAMAGE.\n         This version of this MIB module is part of RFC 5603;\n   \
    \      see the RFC itself for full legal notices.\"\n   -- Revision history\n\
    \   REVISION \"200906150000Z\"  -- 15 June 2009 00:00:00 GMT\n   DESCRIPTION \"\
    Initial version published as part of RFC 5603.\"\n      ::= { mib-2 180 }\n"
- title: pwEnetObjects        OBJECT IDENTIFIER ::= { pwEnetStdMIB 1 }
  contents:
  - 'pwEnetObjects        OBJECT IDENTIFIER ::= { pwEnetStdMIB 1 }

    '
- title: pwEnetConformance    OBJECT IDENTIFIER ::= { pwEnetStdMIB 2 }
  contents:
  - 'pwEnetConformance    OBJECT IDENTIFIER ::= { pwEnetStdMIB 2 }

    '
- title: --
  contents:
  - '--

    '
- title: -- Ethernet PW table
  contents:
  - '-- Ethernet PW table

    '
- title: --
  contents:
  - '--

    '
- title: pwEnetTable  OBJECT-TYPE
  contents:
  - "pwEnetTable  OBJECT-TYPE\n    SYNTAX SEQUENCE OF PwEnetEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS     current\n    DESCRIPTION\n        \"This table\
    \ contains the index to the Ethernet tables\n        associated with this Ethernet\
    \ PW, the VLAN configuration,\n        and the VLAN mode.\"\n    ::= { pwEnetObjects\
    \ 1 }\n"
- title: pwEnetEntry  OBJECT-TYPE
  contents:
  - "pwEnetEntry  OBJECT-TYPE\n    SYNTAX     PwEnetEntry\n    MAX-ACCESS  not-accessible\n\
    \    STATUS     current\n    DESCRIPTION\n        \"This table is indexed by the\
    \ same index that was created\n        for the associated entry in the PW generic\
    \ table in the\n        PW-STD-MIB module.\n        The pwIndex and the pwEnetPwInstance\
    \ are used as indexes\n        to allow multiple VLANs to exist on the same PW.\n\
    \        An entry is created in this table by the agent for every\n        entry\
    \ in the pwTable with a pwType of 'ethernetTagged'\n        or 'ethernet'.  Additional\
    \ rows may be created by the\n        operator or the agent if multiple entries\
    \ are required for\n        the same PW.\n        The value of pwEnetPwInstance\
    \ can be arbitrarily selected\n        to make the row unique; however, implementations\
    \ that know\n        the VLAN field value when the row is created MAY use the\n\
    \        value of the VLAN itself for better readability and\n        backward\
    \ compatibility with older versions of this MIB\n        module.\n        This\
    \ table provides Ethernet port mapping and VLAN\n        configuration for each\
    \ Ethernet PW.\n        All read-create objects in this table MAY be changed at\
    \ any\n        time; however, change of some objects (for example,\n        pwEnetVlanMode)\
    \ during the PW forwarding state MAY cause traffic\n        disruption.\n    \
    \    Manual entries in this table SHOULD be preserved after a\n        reboot,\
    \ and the agent MUST ensure the integrity of those\n        entries.  If the set\
    \ of entries of a specific row is found to\n        be inconsistent after reboot,\
    \ the PW pwOperStatus MUST be\n        declared as notPresent(5).\n        \"\n\
    \    INDEX { pwIndex, pwEnetPwInstance }\n    ::= { pwEnetTable 1 }\n"
- title: PwEnetEntry ::= SEQUENCE {
  contents:
  - "PwEnetEntry ::= SEQUENCE {\n       pwEnetPwInstance    Unsigned32,\n       pwEnetPwVlan\
    \        VlanIdOrAnyOrNone,\n       pwEnetVlanMode      INTEGER,\n       pwEnetPortVlan\
    \      VlanIdOrAnyOrNone,\n       pwEnetPortIfIndex   InterfaceIndexOrZero,\n\
    \       pwEnetPwIfIndex     InterfaceIndexOrZero,\n       pwEnetRowStatus    \
    \ RowStatus,\n       pwEnetStorageType   StorageType\n   }\n"
- title: pwEnetPwInstance  OBJECT-TYPE
  contents:
  - "pwEnetPwInstance  OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS  not-accessible\n\
    \    STATUS      current\n    DESCRIPTION\n        \"If multiple rows are mapped\
    \ to the same PW, this index is\n         used to uniquely identify the individual\
    \ row.\n         If the value of the VLAN field is known at the time of\n    \
    \     row creation, the value of pwEnetPwVlan MAY be used\n         for better\
    \ readability and backward compatibility with\n         older versions of this\
    \ MIB module.  Otherwise, the value\n         1 SHOULD be set to the first row\
    \ for each pwIndex\n         for better readability and in order that the management\n\
    \         application will know in advance how to access the\n         first row\
    \ when it was created by the agent.\n        \"\n    ::= { pwEnetEntry 1 }\n"
- title: pwEnetPwVlan  OBJECT-TYPE
  contents:
  - "pwEnetPwVlan  OBJECT-TYPE\n    SYNTAX      VlanIdOrAnyOrNone\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object\
    \ defines the (service-delimiting) VLAN field\n        value on the PW.  The value\
    \ 4095 MUST be used if the\n        object is not applicable, for example, when\
    \ mapping all\n        packets from an Ethernet port to this PW (raw mode).\n\
    \        The value 0 MUST be set to indicate untagged frames\n        (from the\
    \ PW point of view), i.e., when pwEnetVlanMode\n        equals 'noChange' and\
    \ pwEnetPortVlan equals 0.\"\n    ::= { pwEnetEntry 2 }\n"
- title: pwEnetVlanMode  OBJECT-TYPE
  contents:
  - "pwEnetVlanMode  OBJECT-TYPE\n    SYNTAX     INTEGER {\n             other(0),\n\
    \             portBased(1),\n             noChange(2),\n             changeVlan(3),\n\
    \             addVlan(4),\n             removeVlan(5)\n    }\n    MAX-ACCESS \
    \ read-create\n    STATUS     current\n    DESCRIPTION\n        \"This object\
    \ indicates the mode of VLAN handling between the\n         port or the virtual\
    \ port associated with the PW and the\n         PW encapsulation.\n       - 'other'\
    \ indicates an operation that is not defined by\n          this MIB module.\n\
    \        - 'portBased' indicates that the forwarder will forward\n          packets\
    \ between the port and the PW independent of their\n          structure (i.e.,\
    \ there are no service-delimiting VLAN tags\n          from the PE standpoint).\n\
    \        - 'noChange' indicates that the PW contains the original\n          \
    \ user VLAN, as specified in pwEnetPortVlan; i.e., the\n           VLAN on the\
    \ PE-CE link is the service-delimiting tag\n           and is kept 'as is' on\
    \ the PW.\n        - 'changeVlan' indicates that the VLAN field on the PW\n  \
    \        may be different than the VLAN field on the user's\n          port. \
    \ The VLAN on the PE-CE link is the service-delimiting\n          tag but has\
    \ a different value on the PW.\n        - 'addVlan' indicates that a VLAN field\
    \ will be added\n          on the PSN-bound direction (i.e., on the PW). pwEnetPwVlan\n\
    \          indicates the value that will be added.\n        - 'removeVlan' indicates\
    \ that the encapsulation on the\n          PW does not include the service-delimiting\
    \ VLAN field.\n          Note that PRI bits transparency is lost in this case.\n\
    \        - Implementation of 'portsbased', 'removeVlan', 'addVlan'\n         \
    \ 'other', and 'changeVlan' is OPTIONAL.\n        \"\n    DEFVAL { noChange }\n\
    \    ::= { pwEnetEntry 3 }\n"
- title: pwEnetPortVlan  OBJECT-TYPE
  contents:
  - "pwEnetPortVlan  OBJECT-TYPE\n    SYNTAX     VlanIdOrAnyOrNone\n    MAX-ACCESS\
    \ read-create\n    STATUS     current\n    DESCRIPTION\n        \"This object\
    \ defines if the mapping between the original port\n        (physical port or\
    \ VPLS virtual port) to the PW is VLAN based\n        or not.  In case of VLAN\
    \ mapping, this object indicates the\n        VLAN value on the original port.\n\
    \        The value of '4095' MUST be used if the whole original port\n       \
    \ traffic is mapped to the same PW.  Note that a pwType of\n        'ethernetTagged'\
    \ can still be used if service-delimiting tag\n        is added on the PW (pwEnetVlanMode\
    \ equals 'addVlan').\n        This object MUST be equal to pwEnetPwVlan if pwEnetVlanMode\n\
    \        equals 'noChange'.\n        The value 0 indicates that packets without\
    \ a VLAN field\n        (i.e., untagged frames) on the port are associated to\
    \ this\n        PW.  This allows the same behavior as assigning 'Default\n   \
    \     VLAN' to untagged frames.\n        \"\n    DEFVAL  { 4095 }\n    ::= { pwEnetEntry\
    \ 4 }\n"
- title: pwEnetPortIfIndex  OBJECT-TYPE
  contents:
  - "pwEnetPortIfIndex  OBJECT-TYPE\n    SYNTAX      InterfaceIndexOrZero\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object\
    \ is used to specify the ifIndex of the Ethernet\n         port associated with\
    \ this PW for point-to-point Ethernet\n         service, or the ifIndex of the\
    \ virtual interface of the\n         VPLS instance associated with the PW if the\
    \ service is\n         VPLS.  Two rows in this table can point to the same ifIndex\n\
    \         only if there is no overlap of VLAN values specified in\n         pwEnetPortVlan\
    \ that are associated with this port.\n         A value of zero indicates that\
    \ association to an ifIndex is\n         not yet known.\"\n    ::= { pwEnetEntry\
    \ 5 }\n"
- title: pwEnetPwIfIndex  OBJECT-TYPE
  contents:
  - "pwEnetPwIfIndex  OBJECT-TYPE\n    SYNTAX     InterfaceIndexOrZero\n    MAX-ACCESS\
    \ read-create\n    STATUS     current\n    DESCRIPTION\n        \"If the PW is\
    \ modeled as an ifIndex in the ifTable, this\n         object indicates the value\
    \ of the ifIndex representing the\n         Ethernet PW on the PSN side in the\
    \ Etherlike-MIB.  Note that\n         this value may be different from the value\
    \ of pwIfIndex\n         that represents the ifIndex of the PW for ifType 'pw'.\"\
    \n     DEFVAL { 0 }\n    ::= { pwEnetEntry 6 }\n"
- title: pwEnetRowStatus  OBJECT-TYPE
  contents:
  - "pwEnetRowStatus  OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n\
    \    STATUS      current\n    DESCRIPTION\n        \"This object enables creating,\
    \ deleting, and modifying this\n         row.\"\n   ::= { pwEnetEntry 7 }\n"
- title: pwEnetStorageType  OBJECT-TYPE
  contents:
  - "pwEnetStorageType  OBJECT-TYPE\n    SYNTAX      StorageType\n    MAX-ACCESS \
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object\
    \ indicates the storage type of this row.\"\n    DEFVAL { nonVolatile }\n    ::=\
    \ { pwEnetEntry 8 }\n"
- title: --
  contents:
  - '--

    '
- title: -- Ethernet PW Statistics Table
  contents:
  - '-- Ethernet PW Statistics Table

    '
- title: --
  contents:
  - '--

    '
- title: pwEnetStatsTable  OBJECT-TYPE
  contents:
  - "pwEnetStatsTable  OBJECT-TYPE\n    SYNTAX SEQUENCE OF PwEnetStatsEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"This table\
    \ contains statistical counters specific for\n         Ethernet PW.\"\n    ::=\
    \ { pwEnetObjects 2 }\n"
- title: pwEnetStatsEntry  OBJECT-TYPE
  contents:
  - "pwEnetStatsEntry  OBJECT-TYPE\n    SYNTAX      PwEnetStatsEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Each entry\
    \ represents the statistics gathered for the\n         PW carrying the Ethernet.\"\
    \n    INDEX { pwIndex }\n    ::= { pwEnetStatsTable 1 }\n"
- title: PwEnetStatsEntry ::= SEQUENCE {
  contents:
  - "PwEnetStatsEntry ::= SEQUENCE {\n    pwEnetStatsIllegalVlan        ZeroBasedCounter32,\n\
    \    pwEnetStatsIllegalLength      ZeroBasedCounter32\n"
- title: '}'
  contents:
  - '}

    '
- title: pwEnetStatsIllegalVlan  OBJECT-TYPE
  contents:
  - "pwEnetStatsIllegalVlan  OBJECT-TYPE\n    SYNTAX     ZeroBasedCounter32\n    MAX-ACCESS\
    \  read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of\
    \ packets received (from the PSN) on this PW\n         with either an illegal\
    \ VLAN field, a missing VLAN field\n         when one was expected, or an excessive\
    \ VLAN field when\n         it was not expected.  This counter may not be applicable\n\
    \         in some cases, and MUST return the value of zero in\n         such a\
    \ case.\"\n    ::= { pwEnetStatsEntry 1 }\n"
- title: pwEnetStatsIllegalLength  OBJECT-TYPE
  contents:
  - "pwEnetStatsIllegalLength  OBJECT-TYPE\n    SYNTAX     ZeroBasedCounter32\n  \
    \  MAX-ACCESS  read-only\n    STATUS     current\n    DESCRIPTION\n        \"\
    The number of packets that were received with an illegal\n         Ethernet packet\
    \ length on this PW.  An illegal length is\n         defined as being greater\
    \ than the value in the advertised\n         MTU supported, or shorter than the\
    \ allowed Ethernet packet\n         size.\"\n    ::= { pwEnetStatsEntry 2 }\n"
- title: '---'
  contents:
  - '---

    '
- title: '--- Conformance description'
  contents:
  - '--- Conformance description

    '
- title: '---'
  contents:
  - '---

    '
- title: pwEnetGroups      OBJECT IDENTIFIER ::= { pwEnetConformance 1 }
  contents:
  - 'pwEnetGroups      OBJECT IDENTIFIER ::= { pwEnetConformance 1 }

    '
- title: pwEnetCompliances OBJECT IDENTIFIER ::= { pwEnetConformance 2 }
  contents:
  - 'pwEnetCompliances OBJECT IDENTIFIER ::= { pwEnetConformance 2 }

    '
- title: -- Compliance requirement for fully compliant implementations
  contents:
  - '-- Compliance requirement for fully compliant implementations

    '
- title: pwEnetModuleFullCompliance MODULE-COMPLIANCE
  contents:
  - "pwEnetModuleFullCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n\
    \            \"The compliance statement for agents that provides full\n      \
    \       support for the PW-ENET-STD-MIB module.  Such devices\n             can\
    \ then be monitored and also be configured using\n             this MIB module.\"\
    \n    MODULE  -- this module\n      MANDATORY-GROUPS {\n                     \
    \    pwEnetGroup,\n                         pwEnetStatsGroup\n               \
    \         }\n   OBJECT       pwEnetVlanMode\n   DESCRIPTION \"An implementation\
    \ MUST support at least the value\n                noChange(2).\"\n   OBJECT \
    \      pwEnetPwIfIndex\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access\
    \ and values other than zero are\n                required only for implementations\
    \ that support\n                modeling the Ethernet PW in the Etherlike-MIB.\"\
    \n   OBJECT       pwEnetRowStatus\n   SYNTAX       RowStatus { active(1), notInService(2),\n\
    \                            notReady(3) }\n   WRITE-SYNTAX RowStatus { active(1),\
    \ notInService(2),\n                            createAndGo(4), destroy(6)\n \
    \                         }\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Support\
    \ for createAndWait is not required.  Support\n                of notReady is\
    \ not required for implementations that\n                do not support signaling.\n\
    \                Support of read-write is not required for\n                implementations\
    \ that do not support more than one\n                VLAN mapping to the same\
    \ PW.\"\n    ::= { pwEnetCompliances 1 }\n"
- title: -- Compliance requirement for read-only compliant implementations
  contents:
  - '-- Compliance requirement for read-only compliant implementations

    '
- title: pwEnetModuleReadOnlyCompliance MODULE-COMPLIANCE
  contents:
  - "pwEnetModuleReadOnlyCompliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n\
    \            \"The compliance statement for agents that provide read-\n      \
    \       only support for the PW-ENET-STD-MIB module.  Such\n             devices\
    \ can then be monitored but cannot be configured\n             using this MIB\
    \ module.\"\n    MODULE  -- this module\n      MANDATORY-GROUPS { pwEnetGroup,\n\
    \                         pwEnetStatsGroup\n                         }\n   OBJECT\
    \       pwEnetPwVlan\n   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access\
    \ is not required.\"\n   OBJECT       pwEnetVlanMode\n   MIN-ACCESS   read-only\n\
    \   DESCRIPTION \"Write access is not required.  An implementation\n         \
    \       MUST support at least the value noChange(2).\"\n   OBJECT       pwEnetPortVlan\n\
    \   MIN-ACCESS   read-only\n   DESCRIPTION \"Write access is not required.\"\n\
    \   OBJECT       pwEnetPortIfIndex\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.\"\n   OBJECT       pwEnetPwIfIndex\n   MIN-ACCESS\
    \   read-only\n   DESCRIPTION \"Write access is not required.  Values other than\n\
    \                zero are required only for implementations that\n           \
    \     support modeling the Ethernet PW in the\n                Etherlike-MIB.\"\
    \n   OBJECT       pwEnetRowStatus\n   SYNTAX       RowStatus { active(1), notInService(2),\n\
    \                            notReady(3) }\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.  Support\n                of notReady is not\
    \ required for implementations that\n                do not support signaling.\"\
    \n   OBJECT       pwEnetStorageType\n   MIN-ACCESS   read-only\n   DESCRIPTION\
    \ \"Write access is not required.\"\n    ::= { pwEnetCompliances 2 }\n"
- title: -- Units of conformance
  contents:
  - '-- Units of conformance

    '
- title: pwEnetGroup OBJECT-GROUP
  contents:
  - "pwEnetGroup OBJECT-GROUP\n   OBJECTS {\n            pwEnetPwVlan,\n         \
    \   pwEnetVlanMode,\n            pwEnetPortVlan,\n            pwEnetPortIfIndex,\n\
    \            pwEnetPwIfIndex,\n            pwEnetRowStatus,\n            pwEnetStorageType\n\
    \   }\n   STATUS  current\n   DESCRIPTION\n       \"Collection of objects for\
    \ basic Ethernet PW configuration.\"\n   ::= { pwEnetGroups 1 }\n"
- title: pwEnetStatsGroup OBJECT-GROUP
  contents:
  - "pwEnetStatsGroup OBJECT-GROUP\n   OBJECTS {\n            pwEnetStatsIllegalVlan,\n\
    \            pwEnetStatsIllegalLength\n   }\n   STATUS  current\n   DESCRIPTION\n\
    \       \"Collection of objects counting various PW level errors.\"\n   ::= {\
    \ pwEnetGroups 2 }\n"
- title: END
  contents:
  - 'END

    '
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   It is clear that this MIB module is potentially\
    \ useful for monitoring\n   of PW-capable PEs.  This MIB module can also be used\
    \ for\n   configuration of certain objects, and anything that can be configured\n\
    \   can be incorrectly configured, with potentially disastrous results.\n   There\
    \ are a number of management objects defined in this MIB module\n   with a MAX-ACCESS\
    \ clause of read-write and/or read-create.  Such\n   objects may be considered\
    \ sensitive or vulnerable in some network\n   environments.  The support for SET\
    \ operations in a non-secure\n   environment without proper protection can have\
    \ a negative effect on\n   network operations.  These are the tables and objects\
    \ and their\n   sensitivity/vulnerability:\n   o  the pwEnetTable contains objects\
    \ to provision Ethernet PWs.\n      Unauthorized access to objects in these tables\
    \ could result in\n      disruption of traffic on the network.  The use of stronger\n\
    \      mechanisms such as SNMPv3 security should be considered where\n      possible.\
    \  Specifically, SNMPv3 VACM and USM MUST be used with any\n      v3 agent that\
    \ implements this MIB module.  Administrators should\n      consider whether read\
    \ access to these objects should be allowed,\n      since read access may be undesirable\
    \ under certain circumstances.\n   Some of the readable objects in this MIB module\
    \ (i.e., objects with a\n   MAX-ACCESS other than not-accessible) may be considered\
    \ sensitive or\n   vulnerable in some network environments.  It is thus important\
    \ to\n   control even GET and/or NOTIFY access to these objects and possibly\n\
    \   to even encrypt the values of these objects when sending them over\n   the\
    \ network via SNMP.  These are the tables and objects and their\n   sensitivity/vulnerability:\n\
    \   o  the pwEnetTable shows the Ethernet PW service configuration.  If\n    \
    \  an administrator does not want to reveal this information, then\n      these\
    \ tables should be considered sensitive/vulnerable.\n   SNMP versions prior to\
    \ SNMPv3 did not include adequate security.\n   Even if the network itself is\
    \ secure (for example by using IPsec),\n   even then, there is no control as to\
    \ who on the secure network is\n   allowed to access and GET/SET (read/change/create/delete)\
    \ the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers\
    \ consider the security features as\n   provided by the SNMPv3 framework (see\
    \ [RFC3410], section 8),\n   including full support for the SNMPv3 cryptographic\
    \ mechanisms (for\n   authentication and privacy).\n   Further, deployment of\
    \ SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module is properly configured to give access to\n   the objects\
    \ only to those principals (users) that have legitimate\n   rights to indeed GET\
    \ or SET (change/create/delete) them.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   The MIB module in this document uses the following\
    \ IANA-assigned\n   OBJECT IDENTIFIER value recorded in the SMI Numbers registry:\n\
    \         Descriptor        OBJECT IDENTIFIER value\n         ----------     \
    \   -----------------------\n         pwEnetStdMIB         { mib-2 180 }\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [BCP14]    Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n       \
    \       Schoenwaelder, Ed., \"Structure of Management Information\n          \
    \    Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [RFC2579]  McCloghrie,\
    \ K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder, Ed., \"Textual\
    \ Conventions for SMIv2\", STD\n              58, RFC 2579, April 1999.\n   [RFC2580]\
    \  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n              \"Conformance\
    \ Statements for SMIv2\", STD 58, RFC 2580,\n              April 1999.\n   [RFC2863]\
    \  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\"\
    , RFC 2863, June 2000.\n   [RFC3635]  Flick, J., \"Definitions of Managed Objects\
    \ for the\n              Ethernet-like Interface Types\", RFC 3635, September\
    \ 2003.\n   [RFC4448]  Martini, L., Ed., Rosen, E., El-Aawar, N., and G. Heron,\n\
    \              \"Encapsulation Methods for Transport of Ethernet over MPLS\n \
    \             Networks\", RFC 4448, April 2006.\n   [RFC4502]  Waldbusser, S.,\
    \ \"Remote Network Monitoring Management\n              Information Base Version\
    \ 2\", RFC 4502, May 2006.\n   [RFC4363]  Levi, D. and D. Harrington, \"Definitions\
    \ of Managed\n              Objects for Bridges with Traffic Classes, Multicast\n\
    \              Filtering, and Virtual LAN Extensions\", RFC 4363, January\n  \
    \            2006.\n   [RFC5601]  Zelig, D., Ed., and T. Nadeau, Ed., \"Pseudowire\
    \ (PW)\n              Management Information Base (MIB)\", RFC 5601, July 2009.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [RFC3410]  Case, J., Mundy, R., Partain, D.,\
    \ and B. Stewart,\n              \"Introduction and Applicability Statements for\
    \ Internet-\n              Standard Management Framework\", RFC 3410, December\
    \ 2002.\n   [RFC3916]  Xiao, X., Ed., McPherson, D., Ed., and P. Pate, Ed.,\n\
    \              \"Requirements for Pseudo-Wire Emulation Edge-to-Edge\n       \
    \       (PWE3)\", RFC 3916, September 2004.\n   [RFC3985]  Bryant, S., Ed., and\
    \ P. Pate, Ed., \"Pseudo Wire Emulation\n              Edge-to-Edge (PWE3) Architecture\"\
    , RFC 3985, March 2005.\n   [RFC4664]  Andersson, L., Ed., and E. Rosen, Ed.,\
    \ \"Framework for\n              Layer 2 Virtual Private Networks (L2VPNs)\",\
    \ RFC 4664,\n              September 2006.\n   [RFC5542]  Nadeau, T., Ed., Zelig,\
    \ D., Ed., and O. Nicklass, Ed.,\n              \"Definitions of Textual Conventions\
    \ for Pseudowires (PW)\n              Management\", RFC 5542, May 2009.\n   [RFC5602]\
    \  Zelig, D., Ed., and T. Nadeau, Ed., \"Pseudowire (PW) over\n              MPLS\
    \ PSN Management Information Base (MIB)\", RFC 5602,\n              July 2009.\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   This document was produced by the PWE3 Working Group.\
    \  Special thanks\n   to Orly Nicklass for close review and good suggestions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David Zelig (editor)\n   Oversi Networks\n   1 Rishon\
    \ Letzion St.\n   Petah Tikva\n   Israel\n   Phone: +972 77 3337 750\n   EMail:\
    \ davidz@oversi.com\n   Thomas D. Nadeau (editor)\n   BT\n   BT Centre\n   81\
    \ Newgate Street\n   London  EC1A 7AJ\n   United Kingdom\n   EMail: tom.nadeau@bt.com\n"
