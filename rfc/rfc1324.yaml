- title: __initial_text__
  contents:
  - '             A Discussion on Computer Network Conferencing

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo is intended to make more people aware of the present\n\
    \   developments in the Computer Conferencing field as well as put\n   forward\
    \ ideas on what should be done to formalize this work so that\n   there is a common\
    \ standard for programmers and others who are\n   involved in this field to work\
    \ with.  It is also the intention of\n   this memo to stimulate the computer community\
    \ and generate some\n   useful discussion about the merits of this field.\n"
- title: Introduction
  contents:
  - "Introduction\n   Computer network conferencing is just now starting to grow and\
    \ take\n   advantage of the modern technology that is available.  Although there\n\
    \   are some systems which have been around for some time (BRC - Bitnet\n   Relay\
    \ Chat and IRC - Internet Relay Chat), there has not been any\n   real move to\
    \ bring them together under a single protocol. This has\n   led to various protocols\
    \ and different systems coming to life. As\n   these different systems continue\
    \ to pop up, it is becoming more\n   obvious that there is need of a standard\
    \ in this area for developers\n   to follow without the need of worrying about\
    \ protocol clashes.\n   In any implementation of a conferencing program, there\
    \ are likely to\n   be two main components: (1) a client program or interface\
    \ which users\n   enter commands into (hereafter referred to as a \"client\")\
    \ and 2) a\n   server program which acts as a multiplexor for various clients\
    \ which\n   connect to it. There are other expectations and requirements for both\n\
    \   servers and clients which are mentioned in more detail later.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   2.1     State Information problems...........................\
    \ 4\n   2.2     Network barriers..................................... 4\n   2.3\
    \     User needs........................................... 4\n   2.3.1   User\
    \ privacy......................................... 4\n   2.3.2   Realtime Expectations................................\
    \ 5\n   2.4     Message Delivery..................................... 5\n   2.4.1\
    \   Deficiencies in using IP only........................ 5\n   2.4.2   Flexibility..........................................\
    \ 5\n   2.4.3   Building a flexible transport protocol............... 5\n   2.5\
    \     Network Structure.................................... 5\n   2.5.1   Size.................................................\
    \ 5\n   3.0     Usage................................................ 6\n   4.0\
    \     Setting it up........................................ 6\n   4.1     Installation.........................................\
    \ 6\n   4.2     Controlling growth................................... 7\n   5.0\
    \     Finding the *right* protocol......................... 7\n   5.1     Name\
    \ for protocol.................................... 7\n   5.2     Responsibilities\
    \ of conference servers............... 7\n   5.2.1   Message passing......................................\
    \ 7\n   5.2.2   Who is on?........................................... 7\n   5.2.3\
    \   Who is who?.......................................... 8\n   5.2.4   Conference\
    \ security.................................. 8\n   5.2.5   Error reporting......................................\
    \ 8\n   5.2.6   Network Friendliness................................. 8\n   5.2.7\
    \   To ASCII or not to ASCII............................. 8\n   5.2.8   Queries\
    \ or messages to a server and replies.......... 9\n   5.3     Responsibilities\
    \ of clients.......................... 9\n   5.3.1   Providing accurate information.......................\
    \ 9\n   5.3.2   Client as servers.................................... 9\n   5.4\
    \     How complex should the protocol be?................. 10\n   5.4.1   User\
    \ identification................................. 10\n   5.4.2   Trees and cycles....................................\
    \ 10\n   5.5     Protocol summary.................................... 10\n   6.0\
    \     Security Considerations............................. 10\n   7.0     Author's\
    \ Address.................................... 11\n"
- title: 1.0  NETWORK CONFERENCING TODAY
  contents:
  - '1.0  NETWORK CONFERENCING TODAY

    '
- title: 1.1  Conferencing in general today
  contents:
  - "1.1  Conferencing in general today\n   Conferences today are an integral part\
    \ of the business world in many\n   ways. A conference may be held to reassure\
    \ staff about company\n   problems (boost moral) or may be held by a few directors\
    \ in an\n   emergency situation where a carefully considered solution is needed.\n\
    \   Conferences also form the cornerstone of workshops held where various\n  \
    \ groups of people, who attend, are to be briefed on new developments.\n   In\
    \ nearly all of these situations, there will be a group of 2 or\n   more, where\
    \ each speaks and listens to others.  There exist PABXs and\n   other features\
    \ of the telephone system which provide for conferencing\n   between people around\
    \ the globe at a cost effective rate. The only\n   place which really lacks any\
    \ formal form of conferencing is the\n   internet, although many unofficial conferencing\
    \ systems already\n   exist, spanning the globe or providing local forums.\n"
- title: 1.2  Talk/phone vs. conferencing
  contents:
  - "1.2  Talk/phone vs. conferencing\n   To provide instantaneous communication between\
    \ two users on unix and\n   other multiuser systems, interprocess communication\
    \ is commonly used\n   either over a network or other local methods.  The diversity\
    \ of unix\n   platforms has introduced as many problems as the presence of various\n\
    \   operating systems on the net.  Commonly, those on Unix based machines\n  \
    \ are unable to talk to those on VMS or VM machines. The occasion even\n   arises\
    \ where two Unix hosts are unable to talk to each other due to\n   different talk\
    \ protocols.\n"
- title: 1.3  Advantages of realtime computer conferencing
  contents:
  - "1.3  Advantages of realtime computer conferencing\n   By providing a standard\
    \ for computer conferencing, it should\n   eliminate the problem of who is using\
    \ what computer. This will mean\n   that someone from a VMS or VM machine can\
    \ talk with one or more\n   people without having to worry whether their counterpart\
    \ has an\n   account on a compatible machine for their choice of communication.\n\
    \   Electronic mail (email) has already reached this position with most\n   modern\
    \ mailers on the internet being compliant with RFC822. It is\n   therefore not\
    \ unreasonable to expect this of realtime conferencing\n   which is to talk as\
    \ USENet is to email; although of those four (4),\n   only email and news have\
    \ been covered by RFCs.\n   USENet is a vast resource and immensely useful for\
    \ many people around\n   the globe. It does, however suffer from a high noise\
    \ to signal ratio.\n   It would be unwise to expect much difference in performance\
    \ from\n   conferencing.\n   By providing the means for realtime computer conferencing,\
    \ it opens\n   up a whole new area of usefulness to computers. For both students\
    \ and\n   staff alike, it opens up new possibilities.  In educational\n   institutions\
    \ where there is a high level of project work with groups\n   of more than 2,\
    \ it means that students can work from home or other\n   remote places and discuss\
    \ their project with their fellow students in\n   a manner which would be similar\
    \ to all students having a conventional\n   meeting or conference. This same situation\
    \ also applies to staff\n   members.  For those who have previously relied on\
    \ email between\n   fellow researchers in many remote institutions, computer conferencing\n\
    \   brings the world together, onto the researchers screen where they can\n  \
    \ trade ideas and code in real time. Traditionally to achieve these\n   goals,\
    \ the phone would have been used and a teleconference setup and\n   it will probably\
    \ remain so for many years to come with video phones\n   too. However, with phone\
    \ conferencing, when people talk over each\n   other, the quality of the discussion\
    \ is degraded.\n"
- title: 2.0  Goals for what a protocol should provide
  contents:
  - "2.0  Goals for what a protocol should provide\n   In producing a protocol for\
    \ conferencing over computer networks, the\n   following problems must be considered:\n"
- title: 2.1  State Information problems
  contents:
  - "2.1  State Information problems\n   The number of users who are a part of the\
    \ conference may fluctuate\n   continuously by a large amount over any given period\
    \ of time.  The\n   protocol should endevour to make disruptions such as these\
    \ as smooth\n   as possible but at the same time, keep the realtime feel in the\n\
    \   conference. It is not acceptable to buffer a user who quits for any\n   given\
    \ time but at the same time, if a server has network problems\n   with connecting\
    \ to another one, it may be wise to find some way\n   around the continual stream\
    \ of state messages that are passed - or -\n   at least a way to reduce the number.\n"
- title: 2.2  Network barriers
  contents:
  - "2.2  Network barriers\n   Members of a conference may be on physical networks\
    \ which cannot\n   directly communicate with each other, such as those used from\
    \ a host\n   on a commercial network talking via a bridge to someone from a\n\
    \   network directly connected to a network directly accessible from\n   theirs.\
    \ So in this case, the users involved have no need to directly\n   use the bridge\
    \ (as required by unix talk) since the server on the\n   gateway host provides\
    \ a way for messages to be passed in and out of\n   the unreachable sections.\
    \  In this case also, there is a minimum\n   security risk to the network which\
    \ is otherwise unreachable.\n"
- title: 2.3  User needs
  contents:
  - '2.3  User needs

    '
- title: 2.3.1  User privacy
  contents:
  - "2.3.1  User privacy\n   Members of a conference may wish to exchange ideas privately\
    \ without\n   fear of others eavesdropping or interrupting the current conference.\n\
    \   To facilitate this, there should be some support by the protocol to\n   pass\
    \ messages from one user/client directly to another.\n   It is also reasonable\
    \ for a user to want to be able to hide in one\n   way or another from other users,\
    \ effectively making themself\n   invisible to other users.\n"
- title: 2.3.2  Realtime Expectations
  contents:
  - "2.3.2  Realtime Expectations\n   Users will expect conferencing to be real time,\
    \ giving the thereby\n   demanding that the protocol supply a quick, efficient,\
    \ reliable and\n   accurate delivery of a message. Only when these requirements\
    \ are met\n   can a conference system hope to be of any use to its users.\n"
- title: 2.4  Message Delivery
  contents:
  - '2.4  Message Delivery

    '
- title: 2.4.1  Deficiencies in using IP only
  contents:
  - "2.4.1  Deficiencies in using IP only\n   In routing between conference servers,\
    \ the problem of routing\n   messages is an important issue. If there was a server\
    \ for the\n   conference at each domain, this wouldn't be an issue, one could\n\
    \   simply do some sort of lookup and find the server for it. This is not\n  \
    \ the case and unless such a server becomes a standard item for unix\n   machines,\
    \ it is not reasonable to expect it to ever be so. Thus the\n   need for a layer\
    \ on top of TCP/IP is needed to deliver messages\n   between the servers for the\
    \ conference.\n"
- title: 2.4.2  Flexibility
  contents:
  - "2.4.2  Flexibility\n   The routing protocol used should not be inflexible and\
    \ should allow\n   for routes to change over time in much the same way as RIP\
    \ does now.\n   However, there is no need for a special routing protocol such\
    \ as RIP\n   since this is already part of IP's functionality. Routing information\n\
    \   should be updated automatically when the server receives information\n   via\
    \ that route whether it creates or destroys a route.\n"
- title: 2.4.3  Building a flexible transport protocol on top of existing ones
  contents:
  - "2.4.3  Building a flexible transport protocol on top of existing ones\n   If\
    \ such a conferencing service is built upon TCP/IP, it is therefore\n   possible\
    \ to build an abstract routing model which has no relation to\n   the TCP/IP model.\
    \ However, it is not wise to ignore the presence of\n   either TCP or IP since\
    \ by integrating them into the protocol, it is\n   easier to use their strengths.\
    \  If the protocol relies too heavily on\n   TCP/IP features, it will also inherit\
    \ some of its weaknesses. These\n   maybe taken for granted, but it is worth keeping\
    \ them in mind when\n   designing a protocol to be both reliable, efficient and\
    \ useful.\n"
- title: 2.5  Network Structure
  contents:
  - '2.5  Network Structure

    '
- title: 2.5.1  Size
  contents:
  - "2.5.1  Size\n   The potential userbase of a conferencing system using the internet\n\
    \   should not be underestimated. It is therefore desirable that the\n   conferencing\
    \ system should be as distributed as possible, and as\n   little state information\
    \ kept as possible. If the IRC network is\n   taken as a guide, with 800 users\
    \ on 140 servers in some 200 channels,\n   the server was using over 1MB of memory.\
    \ Due to the nature of\n   conferencing and the server being run as a daemon,\
    \ this memory was\n   hardly ever swapped out. For this reason, servers should\
    \ aim to only\n   be authoritive about required users, channels and servers and\
    \ keep up\n   to date information on these.\n   There is also no requirement that\
    \ a global conferencing system be\n   built, although it is an ideal arena to\
    \ show the strengths of the\n   network. It also goes without saying that it shows\
    \ up a lot of its\n   weaknesses too.\n   Any protocol which is developed should\
    \ operate equally well and\n   efficiently on both a large scale network and on\
    \ a small scale\n   network.\n"
- title: 3.0  Usage
  contents:
  - "3.0  Usage\n   If past usage is any guide, then a network based conferencing\
    \ system\n   will be largely used by mostly students. This is not as unreasonable\n\
    \   as it may sound since students and student accounts easily form the\n   largest\
    \ body on the internet. To encourage staff or other adults into\n   this field,\
    \ it might be prudent to reduce the amount of noise and\n   interfearance a bored\
    \ student (or staff member!) can generate.\n   Realtime conferencing via computer\
    \ networks is, however, a very\n   attractive toy to many students. It puts them\
    \ in touch with the world\n   at no extra charge to them. They are able to construct\
    \ their own\n   character and mask or hide their real self. This is a field which\
    \ has\n   already been researched and is an interesting topic to pursue.\n"
- title: 4.0  Setting it up
  contents:
  - '4.0  Setting it up

    '
- title: 4.1  Installation
  contents:
  - "4.1  Installation\n   The installation and setup of most network utilities/servers\
    \ is not\n   something that is commonly discussed. It is, however, a point worth\n\
    \   considering here after observations made on the setup and\n   installation\
    \ of systems such as IRC. If the setup is too easy and\n   requires little work,\
    \ it is not unreasonable to expect students to\n   \"install\" it in their own\
    \ accounts to provide themselves and friends\n   with this service. There is little\
    \ that can really be done about this\n   except to force servers to listen and\
    \ connect only to a certain\n   priveledged port(s). This need, however, requires\
    \ root intervention\n   or aid and it is doubtful whether a service such as this\
    \ should\n   require such steps.\n   This problem is not often encountered with\
    \ other network services\n   since they either require large amounts of disk space\
    \ to be done\n   properly (news) or require the co-operation of other servers\
    \ before\n   they work in a full serving role (DNS and use of name servers is\
    \ a\n   good example of this). Of the two, the latter is a good solution if\n\
    \   it can be implemented fairly and well.\n"
- title: 4.2  Controlling growth
  contents:
  - "4.2  Controlling growth\n   Is it possible to reasonably control the growth and\
    \ connectivity of a\n   large realtime conferencing network? Should it be compared\
    \ to other\n   facilities such as USENet which is commonly available and very\n\
    \   widespread with no real central control over who gets news?\n"
- title: 5.0  Finding the *right* protocol
  contents:
  - "5.0  Finding the *right* protocol\n   This section deals with points which are\
    \ central issues when deciding\n   upon a protocol. There are many points to consider\
    \ when developing a\n   realtime protocol which is going to provide a service\
    \ to many users\n   simultaneously.\n"
- title: 5.1  Name for protocol
  contents:
  - "5.1  Name for protocol\n   Although names such as IRC and ICB have been used\
    \ in the past to\n   describe the implementation provided, this document is aimed\
    \ at\n   stimulating a protocol which is much more general and useful than\n \
    \  these. A better name would reflect this. Depending on what network it\n   is\
    \ implemented on, the Network Conferencing Protocol (NCP) or the\n   Internet\
    \ Conferencing Protocol (ICP) are two suitable names.\n"
- title: 5.2  Responsibilities of conference servers
  contents:
  - '5.2  Responsibilities of conference servers

    '
- title: 5.2.1  Message passing
  contents:
  - "5.2.1  Message passing\n   A conferencing server should pass on all messages\
    \ not destined for\n   itself or its users to the destination as quickly and efficiently\
    \ as\n   possible. To this end, the server should not be required to do\n   extensive\
    \ parsing of the incoming message, but rather, look at the\n   header and decide\
    \ from there whether to send it on in the typical\n   gateway/relay fashion or\
    \ parse it and pass it to one or more of its\n   users.\n"
- title: 5.2.2  Who is on?
  contents:
  - "5.2.2  Who is on?\n   Any conference server should be able to supply (on request)\
    \ a list of\n   attached user(s). The attached user(s) should have the option\
    \ of\n   being able to say whether they wish to show up in such lists.\n"
- title: 5.2.3  Who is who?
  contents:
  - "5.2.3  Who is who?\n   All servers should provide *some* method to identify any\
    \ known user\n   and supply details to the person making the query based on the\
    \ search\n   key given.\n"
- title: 5.2.4  Conference security
  contents:
  - "5.2.4  Conference security\n   Conference servers should not run in such a manner\
    \ that they\n   deliberately record the private conversation(s) of users which\
    \ are\n   relying on the server in some way. It might seem that encrypting the\n\
    \   message before transmission to other servers in some way would solve\n   this,\
    \ but this is better left as an option which is implemented in\n   clients and\
    \ thus leaves it to the users to decide how secure they\n   want their conference\
    \ to be.\n"
- title: 5.2.5  Error reporting
  contents:
  - "5.2.5  Error reporting\n   All errors that the server encounters in its running\
    \ life should one\n   way or another be reported to the operator(s) which are\
    \ responsible\n   for this. This may include sending messages if an operator is\
    \ online\n   or logging it to an error file.\n"
- title: 5.2.6  Network Friendliness
  contents:
  - "5.2.6  Network Friendliness\n   It is quite easy for any network based application\
    \ to \"abuse\" the\n   network it is running on. Also in a relay situation, it\
    \ is quite\n   possible that a server will become bogged down trying to keep up\
    \ with\n   just one connection and reduces the performance on an overall scale\n\
    \   to all users relying on it. It is therefore recommended that user\n   connections\
    \ be subject to some sort of monitoring and flood control\n   to stop them dumping\
    \ large amounts of spurious data and causing the\n   server to slow down.\n  \
    \ The server should also aim to maximise the packet size of all packets\n   written\
    \ out to the network. Not only does this make the packet/bytes\n   statistics\
    \ look nice, but also increases the efficiency of the server\n   by reducing the\
    \ time it spends in the system state waiting/doing IO\n   operations such as read/write.\
    \ The cost here is a fractional decrease\n   in the real-time efficiency of the\
    \ server.\n"
- title: 5.2.7  To ASCII or not to ASCII
  contents:
  - "5.2.7  To ASCII or not to ASCII\n   Given that most of the widely used Internet\
    \ protocols such as SMTP,\n   NNTP and FTP are all based on commands which are\
    \ given via ASCII\n   strings, there seems no reason why a conferencing protocol\
    \ should be\n   any different. The gains from going to binary are marginal and\n\
    \   debugging/testing is not as easy as with ASCII. However, it is not\n   unreasonable\
    \ for some part of the protocol to be done in binary.\n"
- title: 5.2.8  Queries or messages to a server and replies
  contents:
  - "5.2.8  Queries or messages to a server and replies\n   For implementation of\
    \ server queries, it is quite acceptable to use\n   ASCII messages which are made\
    \ up of words. (Any string of characters\n   which doesn't start with a number).\
    \ Replies should be some sort of\n   numeric. This is a follow on from from 5.2.7\
    \ where all of FTP, NNTP\n   and SMTP work in this manner. By reserving numerics\
    \ *just* for server\n   replies, there can be no confusion about whether the message\
    \ is going\n   to or from a server.\n"
- title: 5.3  Responsibilities of clients
  contents:
  - "5.3  Responsibilities of clients\n   This section discusses the obligations of\
    \ clients which are connected\n   to a conference server.\n"
- title: 5.3.1  Providing accurate information
  contents:
  - "5.3.1  Providing accurate information\n   Expecting accurate information is foolish,\
    \ it matters not for most of\n   the internet, but those that we do wish to trace\
    \ wont give such\n   information. A client is expected to provide accurate and\
    \ valid\n   information to the server it connects to so that confusion about who\n\
    \   is who is not a problem. Optionally, the server may decide to not\n   trust\
    \ the information from the client and use some authentication\n   scheme that\
    \ is open to it for such.\n"
- title: 5.3.2  Client as servers
  contents:
  - "5.3.2  Client as servers\n   If a client is acting as a server and accepting\
    \ direct connections\n   from other clients, the client should provide information\
    \ about users\n   as discussed in 5.2.3. It is not necessary that a client be\
    \ able to\n   handle complex methods of communication such as channels and their\n\
    \   advanced forms, but they should at least provide users with being\n   able\
    \ to send messages to other users.\n   An example of this type of program might\
    \ be Xtv where one or more\n   users can connect to another Xtv client program\
    \ using Xtv clients.\n   In the case of X windows and perhaps in other areas,\
    \ one it to ask\n   the destination user to run a program in a similar manner\
    \ to unix\n   talk.\n"
- title: 5.4  How complex should the protocol be?
  contents:
  - '5.4  How complex should the protocol be?

    '
- title: 5.4.1  User identification
  contents:
  - "5.4.1  User identification\n   When a user signs onto a system that has an implementation\
    \ of a\n   conferencing protocol, they are usually asked or given some sort of\n\
    \   unique key by which they are later able to be referenced by.  In a\n   large\
    \ system, it may be such that any key which has meaning to the\n   user(s) will\
    \ not be sufficient and that collisions will occur with\n   such. It is therefore\
    \ suggested that a server generate an identifier\n   for each new user it has.\
    \ This identifier must not only be unique in\n   space, but also time. It is not\
    \ reasonable for the user to ever have\n   to be aware of what this identifier\
    \ is, it should only be known by\n   servers which *need* to know. A similar system\
    \ to that used by\n   NNTP/SMTP is a fair implementation of such a scheme.\n"
- title: 5.4.2  Trees and cycles
  contents:
  - "5.4.2  Trees and cycles\n   Due to the structure of the network being cyclic\
    \ or forming loops, it\n   is quite natural to want to emulate this within the\
    \ protocol that is\n   available for users. This has several advantages over trees,\
    \ mainly\n   the average path between any 2 nodes being shorter. A cyclic\n  \
    \ structure also poses many problems in getting messages delivered and\n   keeping\
    \ the connected users and servers up to date.  The main problem\n   with using\
    \ the tree model is that a break in one part of the tree\n   needs to be communicated\
    \ to all other parts of the tree to keep some\n   sort of realism about it.  The\
    \ problem here is that such\n   communications happen quite often and a lot of\
    \ bandwidth is\n   needlessly generated. By implementing a protocol which supports\
    \ a\n   cyclic graph of its connectivity, breakages are less damaging except\n\
    \   when it is a leaf or branch that breaks off.\n"
- title: 5.5  Protocol summary
  contents:
  - "5.5  Protocol summary\n   It is not expected that any protocol that meets the\
    \ above demands\n   will be either easy to arrive at or easy to implement.  Some\
    \ of the\n   above requirements may seem to be exotic, unnecessary or not worth\n\
    \   the effort. After viewing previous conferencing programs and how they\n  \
    \ work, many short comings can be seen in taking shortcuts.\n"
- title: 6.0  Security Considerations
  contents:
  - "6.0  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 7.0  Author's Address
  contents:
  - "7.0  Author's Address\n   Darren Reed\n   4 Pateman Street\n   Watsonia, Victoria\
    \ 3087\n   Australia\n   Email: avalon@coombs.anu.edu.au\n"
