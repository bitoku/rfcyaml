- contents:
  - '                     BROADCASTING INTERNET DATAGRAMS

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   We propose simple rules for broadcasting Internet datagrams
    on local\n   networks that support broadcast, for addressing broadcasts, and for\n
    \  how gateways should handle them.\n   This RFC suggests a proposed protocol
    for the ARPA-Internet\n   community, and requests discussion and suggestions for
    improvements.\n   Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Acknowledgement\n   This proposal is the result of discussion with several other
    people,\n   especially J. Noel Chiappa and Christopher A. Kent, both of whom both\n
    \  pointed me at important references.\n"
  title: Acknowledgement
- contents:
  - "1. Introduction\n   The use of broadcasts, especially on high-speed local area
    networks,\n   is a good base for many applications.  Since broadcasting is not\n
    \  covered in the basic IP specification [13], there is no agreed-upon\n   way
    to do it, and so protocol designers have not made use of it. (The\n   issue has
    been touched upon before, e.g. [6], but has not been the\n   subject of a standard.)\n
    \  We consider here only the case of unreliable, unsequenced, possibly\n   duplicated
    datagram broadcasts (for a discussion of TCP broadcasting,\n   see [11].) Even
    though unreliable and limited in length, datagram\n   broadcasts are quite useful
    [1].\n   We assume that the data link layer of the local network supports\n   efficient
    broadcasting.  Most common local area networks do support\n   broadcast; for example,
    Ethernet [7, 5], ChaosNet [10], token ring\n   networks [2], etc.\n   We do not
    assume, however, that broadcasts are reliably delivered.\n   (One might consider
    providing a reliable broadcast protocol as a\n   layer above IP.) It is quite
    expensive to guarantee delivery of\n   broadcasts; instead, what we assume is
    that a host will receive most\n   of the broadcasts that are sent.  This is important
    to avoid\n   excessive use of broadcasts; since every host on the network devotes\n
    \  at least some effort to every broadcast, they are costly.\n"
  title: 1. Introduction
- contents:
  - "Broadcasting Internet Datagrams\n   When a datagram is broadcast, it imposes
    a cost on every host that\n   hears it.  Therefore, broadcasting should not be
    used\n   indiscriminately, but rather only when it is the best solution to a\n
    \  problem.\n   Note: some organizations have divided their IP networks into subnets,\n
    \  for which a standard [8] has been proposed.  This RFC does not cover\n   the
    numerous complications arising from the interactions between\n   subnets and broadcasting;
    see [9] for a complete discussion.\n"
  title: Broadcasting Internet Datagrams
- contents:
  - "2. Terminology\n   Because broadcasting depends on the specific data link layer
    in use\n   on a local network, we must discuss it with reference to both\n   physical
    networks and logical networks.\n   The terms we will use in referring to physical
    networks are, from the\n   point of view of the host sending or forwarding a broadcast:\n
    \  Local Hardware Network\n      The physical link to which the host is attached.\n
    \  Remote Hardware Network\n      A physical network which is separated from the
    host by at least\n      one gateway.\n   Collection of Hardware Networks\n      A
    set of hardware networks (transitively) connected by gateways.\n   The IP world
    includes several kinds of logical network.  To avoid\n   ambiguity, we will use
    the following terms:\n   Internet\n      The DARPA Internet collection of IP networks.\n
    \  IP Network\n      One or a collection of several hardware networks that have
    one\n      specific IP network number.\n"
  title: 2. Terminology
- contents:
  - 'Broadcasting Internet Datagrams

    '
  title: Broadcasting Internet Datagrams
- contents:
  - "3. Why Broadcast?\n   Broadcasts are useful when a host needs to find information
    without\n   knowing exactly what other host can supply it, or when a host wants\n
    \  to provide information to a large set of hosts in a timely manner.\n   When
    a host needs information that one or more of its neighbors might\n   have, it
    could have a list of neighbors to ask, or it could poll all\n   of its possible
    neighbors until one responds.  Use of a wired-in list\n   creates obvious network
    management problems (early binding is\n   inflexible).  On the other hand, asking
    all of one's neighbors is\n   slow if one must generate plausible host addresses,
    and try them\n   until one works.  On the ARPANET, for example, there are roughly
    65\n   thousand plausible host numbers.  Most IP implementations have used\n   wired-in
    lists (for example, addresses of \"Prime\" gateways.)\n   Fortunately, broadcasting
    provides a fast and simple way for a host\n   to reach all of its neighbors.\n
    \  A host might also use a broadcast to provide all of its neighbors\n   with
    some information; for example, a gateway might announce its\n   presence to other
    gateways.\n   One way to view broadcasting is as an imperfect substitute for\n
    \  multicasting, the sending of messages to a subset of the hosts on a\n   network.
    \ In practice, broadcasts are usually used where multicasts\n   are what is wanted;
    packets are broadcast at the hardware level, but\n   filtering software in the
    receiving hosts gives the effect of\n   multicasting.\n   For more examples of
    broadcast applications, see [1, 3].\n"
  title: 3. Why Broadcast?
- contents:
  - "4. Broadcast Classes\n   There are several classes of IP broadcasting:\n      -
    Single-destination datagram broadcast on the local IP net: A\n        datagrams
    is destined for a specific IP host, but the sending\n        host broadcasts it
    at the data link layer, perhaps to avoid\n        having to do routing.  Since
    this is not an IP broadcast, the IP\n        layer is not involved, except that
    a host should discard\n        datagrams not meant for it without becoming flustered
    (i.e.,\n        printing an error message).\n      - Broadcast to all hosts on
    the local IP net: A distinguished\n        value for the host-number part of the
    IP address denotes\n        broadcast instead of a specific host.  The receiving
    IP layer\n        must be able to recognize this address as well as its own.\n"
  title: 4. Broadcast Classes
- contents:
  - "Broadcasting Internet Datagrams\n        However, it might still be useful to
    distinguish at higher\n        levels between broadcasts and non-broadcasts, especially
    in\n        gateways. This is the most useful case of broadcast; it allows a\n
    \       host to discover gateways without wired-in tables, it is the\n        basis
    for address resolution protocols, and it is also useful\n        for accessing
    such utilities as name servers, time servers,\n        etc., without requiring
    wired-in addresses.\n      - Broadcast to all hosts on a remote IP network: It
    is\n        occasionally useful to send a broadcast to all hosts on a\n        non-local
    network; for example, to find the latest version of a\n        hostname database,
    to bootload a host on an IP network without a\n        bootserver, or to monitor
    the timeservers on the IP network.\n        This case is the same as local-network
    broadcasts; the datagram\n        is routed by normal mechanisms until it reaches
    a gateway\n        attached to the destination IP network, at which point it is\n
    \       broadcast. This class of broadcasting is also known as \"directed\n        broadcasting\",
    or quaintly as sending a \"letter bomb\" [1].\n      - Broadcast to the entire
    Internet: This is probably not useful,\n        and almost certainly not desirable.\n
    \  For reasons of performance or security, a gateway may choose not to\n   forward
    broadcasts; especially, it may be a good idea to ban\n   broadcasts into or out
    of an autonomous group of networks.\n"
  title: Broadcasting Internet Datagrams
- contents:
  - "5. Broadcast Methods\n   A host's IP receiving layer must be modified to support
    broadcasting.\n   In the absence of broadcasting, a host determines if it is the\n
    \  recipient of a datagram by matching the destination address against\n   all
    of its IP addresses.  With broadcasting, a host must compare the\n   destination
    address not only against the host's addresses, but also\n   against the possible
    broadcast addresses for that host.\n   The problem of how best to send a broadcast
    has been extensively\n   discussed [1, 3, 4, 14, 15].  Since we assume that the
    problem has\n   already been solved at the data link layer, an IP host wishing
    to\n   send either a local broadcast or a directed broadcast need only\n   specify
    the appropriate destination address and send the datagram as\n   usual.  Any sophisticated
    algorithms need only reside in gateways.\n"
  title: 5. Broadcast Methods
- contents:
  - 'Broadcasting Internet Datagrams

    '
  title: Broadcasting Internet Datagrams
- contents:
  - "6. Gateways and Broadcasts\n   Most of the complexity in supporting broadcasts
    lies in gateways.  If\n   a gateway receives a directed broadcast for a network
    to which it is\n   not connected, it simply forwards it using the usual mechanism.\n
    \  Otherwise, it must do some additional work.\n   When a gateway receives a local
    broadcast datagram, there are several\n   things it might have to do with it.
    \ The situation is unambiguous,\n   but without due care it is possible to create
    infinite loops.\n   The appropriate action to take on receipt of a broadcast datagram\n
    \  depends on several things: the subnet it was received on, the\n   destination
    network, and the addresses of the gateway.\n      - The primary rule for avoiding
    loops is \"never broadcast a\n        datagram on the hardware network it was
    received on\". It is not\n        sufficient simply to avoid repeating datagrams
    that a gateway\n        has heard from itself; this still allows loops if there
    are\n        several gateways on a hardware network.\n      - If the datagram
    is received on the hardware network to which it\n        is addressed, then it
    should not be forwarded.  However, the\n        gateway should consider itself
    to be a destination of the\n        datagram (for example, it might be a routing
    table update.)\n      - Otherwise, if the datagram is addressed to a hardware
    network to\n        which the gateway is connected, it should be sent as a (data\n
    \       link layer) broadcast on that network.  Again, the gateway\n        should
    consider itself a destination of the datagram.\n      - Otherwise, the gateway
    should use its normal routing procedure\n        to choose a subsequent gateway,
    and send the datagram along to\n        it.\n"
  title: 6. Gateways and Broadcasts
- contents:
  - "7. Broadcast IP Addressing - Proposed Standards\n   If different IP implementations
    are to be compatible, there must be a\n   distinguished number to denote \"all
    hosts\".\n   Since the local network layer can always map an IP address into data\n
    \  link layer address, the choice of an IP \"broadcast host number\" is\n   somewhat
    arbitrary.  For simplicity, it should be one not likely to\n   be assigned to
    a real host.  The number whose bits are all ones has\n   this property; this assignment
    was first proposed in [6].  In the few\n   cases where a host has been assigned
    an address with a host-number\n   part of all ones, it does not seem onerous to
    require renumbering.\n"
  title: 7. Broadcast IP Addressing - Proposed Standards
- contents:
  - "Broadcasting Internet Datagrams\n   The address 255.255.255.255 denotes a broadcast
    on a local hardware\n   network, which must not be forwarded.  This address may
    be used, for\n   example, by hosts that do not know their network number and are\n
    \  asking some server for it.\n   Thus, a host on net 36, for example, may:\n
    \     - broadcast to all of its immediate neighbors by using\n        255.255.255.255\n
    \     - broadcast to all of net 36 by using 36.255.255.255\n   (Note that unless
    the network has been broken up into subnets, these\n   two methods have identical
    effects.)\n   If the use of \"all ones\" in a field of an IP address means\n   \"broadcast\",
    using \"all zeros\" could be viewed as meaning\n   \"unspecified\".  There is
    probably no reason for such addresses to\n   appear anywhere but as the source
    address of an ICMP Information\n   Request datagram.  However, as a notational
    convention, we refer to\n   networks (as opposed to hosts) by using addresses
    with zero fields.\n   For example, 36.0.0.0 means \"network number 36\" while
    36.255.255.255\n   means \"all hosts on network number 36\".\n   7.1. ARP Servers
    and Broadcasts\n      The Address Resolution Protocol (ARP) described in [12]
    can, if\n      incorrectly implemented, cause problems when broadcasts are used\n
    \     on a network where not all hosts share an understanding of what a\n      broadcast
    address is.  The temptation exists to modify the ARP\n      server so that it
    provides the mapping between an IP broadcast\n      address and the hardware broadcast
    address.\n      This temptation must be resisted.  An ARP server should never\n
    \     respond to a request whose target is a broadcast address.  Such a\n      request
    can only come from a host that does not recognize the\n      broadcast address
    as such, and so honoring it would almost\n      certainly lead to a forwarding
    loop.  If there are N such hosts on\n      the physical network that do not recognize
    this address as a\n      broadcast, then a datagram sent with a Time-To-Live of
    T could\n      potentially give rise to T**N spurious re-broadcasts.\n"
  title: Broadcasting Internet Datagrams
- contents:
  - 'Broadcasting Internet Datagrams

    '
  title: Broadcasting Internet Datagrams
- contents:
  - "8. References\n   1.   David Reeves Boggs.  Internet Broadcasting.  Ph.D. Th.,
    Stanford\n        University, January 1982.\n   2.   D.D. Clark, K.T. Pogran,
    and D.P. Reed.  \"An Introduction to\n        Local Area Networks\".  Proc. IEEE
    66, 11, pp1497-1516, 1978.\n   3.   Yogan Kantilal Dalal.  Broadcast Protocols
    in Packet Switched\n        Computer Networks.  Ph.D. Th., Stanford University,
    April 1977.\n   4.   Yogan K. Dalal and Robert M. Metcalfe.  \"Reverse Path Forwarding\n
    \       of Broadcast Packets\".  Comm. ACM 21, 12, pp1040-1048, December\n        1978.\n
    \  5.   The Ethernet, A Local Area Network: Data Link Layer and Physical\n        Layer
    Specifications.  Version 1.0, Digital Equipment\n        Corporation, Intel, Xerox,
    September 1980.\n   6.   Robert Gurwitz and Robert Hinden.  IP - Local Area Network\n
    \       Addressing Issues.  IEN-212, Bolt Beranek and Newman, September\n        1982.\n
    \  7.    R.M. Metcalfe and D.R. Boggs. \"Ethernet: Distributed Packet\n        Switching
    for Local Computer Networks\".  Comm. ACM 19, 7,\n        pp395-404, July 1976.
    \ Also CSL-75-7, Xerox Palo Alto Research\n        Center, reprinted in CSL-80-2.\n
    \  8.   Jeffrey Mogul.  Internet Subnets.  RFC-917, Stanford University,\n        October
    1984.\n   9.   Jeffrey Mogul.  Broadcasting Internet Packets in the Presence of\n
    \       Subnets.  RFC-922, Stanford University, October 1984.\n   10.  David A.
    Moon.  Chaosnet.  A.I. Memo 628, Massachusetts\n        Institute of Technology
    Artificial Intelligence Laboratory, June\n        1981.\n   11.  William W. Plummer.
    \ Internet Broadcast Protocols.  IEN-10, Bolt\n        Beranek and Newman, March
    1977.\n   12.  David Plummer.  An Ethernet Address Resolution Protocol.\n        RFC-826,
    Symbolics, September 1982.\n   13.  Jon Postel.  Internet Protocol.  RFC 791,
    ISI, September 1981.\n"
  title: 8. References
- contents:
  - "Broadcasting Internet Datagrams\n   14.  David W. Wall.  Mechanisms for Broadcast
    and Selective\n        Broadcast.  Ph.D. Th., Stanford University, June 1980.\n
    \  15.  David W. Wall and Susan S. Owicki.  Center-based Broadcasting.\n        Computer
    Systems Lab Technical Report TR189, Stanford\n        University, June 1980.\n"
  title: Broadcasting Internet Datagrams
