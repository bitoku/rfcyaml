- title: __initial_text__
  contents:
  - "                  Real-time Transport Protocol (RTP)\n            Payload Format\
    \ for Enhanced AC-3 (E-AC-3) Audio\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a Real-time Transport Protocol (RTP) payload\n\
    \   format for transporting Enhanced AC-3 (E-AC-3) encoded audio data.\n   E-AC-3\
    \ is a high-quality, multichannel audio coding format and is an\n   extension\
    \ of the AC-3 audio coding format, which is used in US High-\n   Definition Television\
    \ (HDTV), DVD, cable and satellite television,\n   and other media.  E-AC-3 is\
    \ an optional audio format in US and world\n   wide digital television and high-definition\
    \ DVD formats.  The RTP\n   payload format as presented in this document includes\
    \ support for\n   data fragmentation.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Overview of Enhanced-AC-3 .......................................3\n  \
    \    2.1. E-AC-3 Bit Stream ..........................................5\n    \
    \       2.1.1. Sync Frames and Audio Blocks ........................5\n      \
    \     2.1.2. Programs and Substreams .............................6\n        \
    \   2.1.3. Frame Sets ..........................................7\n   3. RTP E-AC-3\
    \ Header Fields ........................................7\n   4. RTP E-AC-3 Payload\
    \ Format .......................................8\n      4.1. Payload Specific\
    \ Header ....................................8\n      4.2. Fragmentation of E-AC-3\
    \ Frames .............................9\n      4.3. Concatenation of E-AC-3 Frames\
    \ .............................9\n      4.4. Carriage of AC-3 Frames ...................................10\n\
    \   5. Types and Names ................................................10\n  \
    \    5.1. Media Type Registration ...................................10\n    \
    \  5.2. SDP Usage .................................................13\n   6. Security\
    \ Considerations ........................................14\n   7. Congestion\
    \ Control .............................................15\n   8. IANA Considerations\
    \ ............................................15\n   9. References .....................................................15\n\
    \      9.1. Normative References ......................................15\n  \
    \    9.2. Informative References ....................................16\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Enhanced AC-3 (E-AC-3) [ETSI] audio coding system is\
    \ built on a\n   foundation of AC-3.  It is an enhancement and extension to AC-3,\n\
    \   which is an existing audio coding standard commonly used for DVD,\n   broadcast,\
    \ cable, and satellite television content.  E-AC-3 is\n   designed to enable operation\
    \ at both higher and lower data rates than\n   AC-3, provide expanded channel\
    \ configurations, and provide greater\n   flexibility for carriage of multiple\
    \ audio program elements.  The\n   relationship between E-AC-3 and AC-3 provides\
    \ for low-loss, low-cost\n   conversion between the two and makes E-AC-3 especially\
    \ suitable in\n   applications that require compatibility with the existing broadcast-\n\
    \   reception and audio/video decoding infrastructure.  Dolby Digital\n   Plus\
    \ is a branded version of Enhanced AC-3.\n   E-AC-3 has been standardized within\
    \ both the European\n   Telecommunications Standards Institute (ETSI) and the\
    \ Advanced\n   Television Systems Committee (ATSC).  It is an optional audio format\n\
    \   for use in US (ATSC) and Digital Video Broadcasting (DVB) television\n   transmission.\
    \  It is also a required audio format for use in the High\n   Definition (HD)-DVD\
    \ optical-storage media format and included in the\n   Blu-ray Disc format.\n\
    \   There is a need to stream E-AC-3 content over IP networks.  E-AC-3 is\n  \
    \ primarily used in audio-for-video applications, so RTP serves well as\n   a\
    \ transport solution with its mechanism for synchronizing streams.\n   Applications\
    \ for streaming E-AC-3 include Internet Protocol\n   television (IPTV), video\
    \ on demand, interactive features of next\n   generation DVD formats, and transfer\
    \ of movies across a home network.\n   Section 2 gives a brief overview of the\
    \ E-AC-3 algorithm.  Section 3\n   specifies values for fields in the RTP header,\
    \ and Section 4\n   specifies the E-AC-3 payload format, itself.  Section 5 discusses\n\
    \   media types and Session Description Protocol (SDP) usage.  Security\n   considerations\
    \ are covered in Section 6, congestion control in\n   Section 7, and IANA considerations\
    \ in Section 8.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 2.  Overview of Enhanced-AC-3
  contents:
  - "2.  Overview of Enhanced-AC-3\n   Enhanced AC-3 (E-AC-3) is a frequency-domain\
    \ perceptual audio coding\n   system.  Time blocks of an audio signal are converted\
    \ from the time\n   domain to the frequency domain by a transform (the Modified\
    \ Discrete\n   Cosine Transform (MDCT)) so that a model of the human auditory\n\
    \   perceptual system can be applied.  In this domain, quantization noise\n  \
    \ can be constrained to specific frequency regions.  The perceptual\n   model\
    \ predicts in which frequency regions the auditory system will be\n   least able\
    \ to detect the quantization noise from data rate reduction.\n   A more detailed\
    \ technical description of E-AC-3 can be found in\n   [2004AES].\n   E-AC-3 is\
    \ built upon a foundation of AC-3.  More background on AC-3\n   can be found in\
    \ the AC-3 specification [ETSI], a technical paper\n   [1994AES], and the AC-3\
    \ RTP payload format [RFC4184].  The frame\n   structure and meta-data of AC-3\
    \ are maintained.  E-AC-3 content is\n   not directly compatible with AC-3 decoders,\
    \ but it can be converted\n   to the AC-3 format to provide compatibility with\
    \ existing decoders.\n   Because AC-3 is the foundation of E-AC-3, conversion\
    \ between the two\n   formats can be done in a way that minimizes the degradations\n\
    \   associated with tandem coding.  In addition, the computational cost\n   of\
    \ the conversion is reduced compared to a full decode and re-encode.\n   E-AC-3\
    \ exploits psychoacoustic phenomena that cause a significant\n   fraction of the\
    \ information contained in a typical audio signal to be\n   inaudible.  Substantial\
    \ data reduction occurs via the removal of\n   inaudible information contained\
    \ in an audio stream.  Source coding\n   techniques are further used to reduce\
    \ the data rate.\n   Like most perceptual coders, E-AC-3 operates in the frequency\
    \ domain.\n   A 512-point MDCT transform is taken with 50% overlap, providing\
    \ 256\n   new frequency samples.  Frequency samples are then converted to\n  \
    \ exponents and mantissas.  Exponents are differentially encoded.\n   Mantissas\
    \ are allocated a varying number of bits depending on the\n   audibility of the\
    \ spectral components associated with them.\n   Audibility is determined via a\
    \ masking curve.  Bits for mantissas are\n   allocated from a global bit pool.\n\
    \   E-AC-3 adds new coding tools, such as a longer filter bank, vector\n   quantization,\
    \ and spectral extension, to provide greater data\n   efficiency and to operate\
    \ at lower data rates than AC-3.  In the\n   other direction, an expanded bit\
    \ stream syntax and new frame\n   constraints permit operation at higher data\
    \ rates than AC-3.  The\n   E-AC-3 syntax also allows a larger number of audio\
    \ channels in one\n   bit stream.  E-AC-3 operates at data rates from 32 kbps\
    \ to 6.144 Mbps\n   and at three sampling rates: 32 kHz, 44.1 kHz, and 48 kHz.\n\
    \   E-AC-3 supports the carriage of multiple programs and the carriage of\n  \
    \ programs with more than a baseline of 5.1 audio channels.  Both of\n   these\
    \ extensions beyond AC-3 are accomplished by time multiplexing\n   additional\
    \ data with baseline data.  In the case of multiple\n   programs, frames with\
    \ data for the programs are interleaved.  In the\n   case of more than 5.1 channels,\
    \ frames from substreams carrying the\n   extra channels are interleaved with\
    \ the independent substream that\n   carries a 5.1-channel compatible mix.  Both\
    \ of these forms of\n   multiplexing can occur in the same bit stream.  In other\
    \ words,\n   mixing multiple programs, some or all with more than 5.1 channels,\
    \ is\n   permitted.\n   Additional channel capacity is enabled by adding substreams\
    \ to a\n   program.  One primary substream, called the \"independent substream\"\
    ,\n   is required for each program.  This substream carries a self-\n   contained\
    \ mix of the audio, using a maximum of 5.1 channels, which\n   makes its channel\
    \ configuration compatible with AC-3.  Then,\n   additional, optional substreams\
    \ are used in the program to carry\n   additional channels.  The data for each\
    \ additional channel carries an\n   indication of whether that channel provides\
    \ data for an additional\n   speaker location or replacement data for one of the\
    \ speaker locations\n   already defined by a previous substream.  For example,\
    \ one common\n   7.1-channel format uses three front channels and four surround\n\
    \   channels.  It is packaged with a primary substream, which contains a\n   5.1-channel\
    \ downmix of the 7.1-channel content, using left, center,\n   right, left surround,\
    \ right surround, and low-frequency effects\n   channels.  One dependent substream\
    \ supplies four channels:\n   replacements for left surround and right surround,\
    \ along with two\n   additional surround channels (left back and right back).\n\
    \   The specification for E-AC-3 [ETSI] requires that all E-AC-3 decoders\n  \
    \ be capable of decoding at least a baseline portion of any E-AC-3 bit\n   stream,\
    \ which consists of the first independent substream of the\n   first program,\
    \ and of ignoring the other elements of the bit stream.\n   This baseline is limited\
    \ to 5.1 channels, and a system is also able\n   to convert to configurations\
    \ with fewer channels for a presentation\n   that matches its output capabilities,\
    \ if needed.  More capable\n   decoders can optionally choose among and mix multiple\
    \ programs, and\n   also decode configurations with more channels than the baseline\
    \ by\n   decoding dependent substreams.\n"
- title: 2.1.  E-AC-3 Bit Stream
  contents:
  - '2.1.  E-AC-3 Bit Stream

    '
- title: 2.1.1.  Sync Frames and Audio Blocks
  contents:
  - "2.1.1.  Sync Frames and Audio Blocks\n   The basic organizational building block\
    \ in an E-AC-3 bit stream is\n   the sync frame (also called a frame in this document).\
    \  A sync frame\n   contains the data necessary to decode time domain audio samples\
    \ for\n   one or more channels over a time of one or more audio blocks, so a\n\
    \   frame is an Application Data Unit (ADU).  Each E-AC-3 frame contains\n   a\
    \ Sync Information (SI) field, a Bit Stream Information (BSI) field,\n   an Audio\
    \ Frame (AF) field, and up to six audio blocks (ABs).  Each AB\n   represents\
    \ 256 Pulse Code Modulation (PCM) samples for each channel.\n   The frame ends\
    \ with an optional auxiliary data field (AUX) and an\n   error correction field\
    \ (CRC).  Figure 1 shows the structure of an\n   E-AC-3 frame, where N is the\
    \ number of blocks in the frame.\n           +---+---+---+---------+- ... -+---------+---+---+\n\
    \           |SI |BSI|AF |  AB(0)  |  ...  |  AB(N)  |AUX|CRC|\n           +---+---+---+---------+-\
    \ ... -+---------+---+---+\n         Figure 1.  E-AC-3 frame format with more\
    \ than one block\n   The SI field contains information needed to acquire and maintain\n\
    \   codec synchronization.  The BSI field contains parameters that\n   describe\
    \ the coded audio service.  It carries an indication of the\n   size of the frame\
    \ in 16-bit words ('frmsiz', Section E.1.3 of [ETSI])\n   and an indication of\
    \ the sampling rate ('fscod').  It also carries an\n   indication of the number\
    \ of blocks in the frame ('numblkscod');\n   permitted values are one, two, three,\
    \ or six blocks.  The AF field\n   contains information about coding tools that\
    \ applies to the entire\n   frame.  Each block has a duration of 256 samples,\
    \ so a frame's\n   duration is the corresponding multiple of 256 samples.  The\
    \ time\n   duration of the frame is also dependent on the sampling rate, as\n\
    \   shown in Table 1.\n     Table 1.  Time duration of E-AC-3 frame (number of\
    \ blocks vs.\n                            sampling rate)\n   +------------------+--------+-----------------+-----------------+\n\
    \   | blocks per frame | 32 kHz |        44.1 kHz |          48 kHz |\n   +------------------+--------+-----------------+-----------------+\n\
    \   |                1 |   8 ms |  approx. 5.8 ms |  approx. 5.3 ms |\n   |  \
    \              2 |  16 ms | approx. 11.6 ms | approx. 10.7 ms |\n   |        \
    \        3 |  24 ms | approx. 17.4 ms |           16 ms |\n   |              \
    \  6 |  48 ms | approx. 34.8 ms |           32 ms |\n   +------------------+--------+-----------------+-----------------+\n\
    \   Each audio block contains header fields that indicate the use of\n   various\
    \ coding tools: block switching, dither, coupling, spectral\n   extension, and\
    \ exponent strategy.  They also contain metadata,\n   optionally used to enhance\
    \ playback, such as dynamic range control.\n   Finally, the exponents and bit\
    \ allocation data needed to decode the\n   mantissas into audio data, and the\
    \ mantissas themselves, are\n   included.  The format of audio blocks is described\
    \ in detail in\n   [ETSI].\n"
- title: 2.1.2.  Programs and Substreams
  contents:
  - "2.1.2.  Programs and Substreams\n   An E-AC-3 bit stream is logically arranged\
    \ into programs.  A bit\n   stream contains one or more programs, up to a maximum\
    \ of eight.  When\n   multiple programs are present in a bit stream, the frames\
    \ that\n   constitute them are interleaved in time.\n     +----------+-     -+----------+----------+-\
    \     -+----------+-\n     |Program(1)|  ...  |Program(N)|Program(1)|  ...  |Program(N)|\
    \ ...\n     | Frame 0  |       | Frame 0  | Frame 1  |       | Frame 1  |\n  \
    \   +----------+-     -+----------+----------+-     -+----------+-\n   Figure\
    \ 2. Interleaving of multiple programs in an E-AC-3 bit stream\n   Each program\
    \ contains one independent substream and optionally\n   contains up to eight dependent\
    \ substreams.  The independent substream\n   carries a soundtrack of up to 5.1\
    \ channels, the multichannel format\n   that matches the capabilities of AC-3,\
    \ and can be meaningfully\n   decoded and presented without any of the associated\
    \ dependent\n   substreams.  The dependent substreams are used to provide alternate\n\
    \   channel data that enable different channel configurations, for\n   example,\
    \ to increase the number of channels beyond 5.1.  A frame of a\n   dependent substream\
    \ can be decoded by itself, but its content can\n   only be meaningfully presented\
    \ in conjunction with the corresponding\n   independent substream.  The type and\
    \ identity of the substream to\n   which a frame belongs can be determined from\
    \ parameters in the\n   frame's BSI (strmtyp and substreamid, in Section E.1.3.1\
    \ of [ETSI]).\n   When a program contains more than one substream, the frames\
    \ belonging\n   to those substreams are interleaved in time, and taken together,\
    \ the\n   frames of a program that correspond to the same time period are\n  \
    \ called a 'program set'.  Figure 3 shows the interleaving of\n   substreams for\
    \ a single program.\n     / --------- program set for frame 0 ------- \\\n   \
    \  :                                           :\n   +-------------+-------------+-\
    \   -+-------------+-------------+-\n   |  Program(1) |  Program(1) |     |  Program(1)\
    \ |  Program(1) |\n   | Independent |  Dependent  | ... |  Dependent  | Independent\
    \ | ...\n   |  Substream  | Substream(0)|     | Substream(n)|  Substream  |\n\
    \   |   Frame 0   |   Frame 0   |     |   Frame 0   |   Frame 1   |\n   +-------------+-------------+-\
    \   -+-------------+-------------+-\n   Figure 3.  Interleaving of multiple substreams\
    \ in an E-AC-3 program\n"
- title: 2.1.3.  Frame Sets
  contents:
  - "2.1.3.  Frame Sets\n   A further logical organization of the E-AC-3 bit stream\
    \ is applied to\n   facilitate conversion of E-AC-3 bit streams to AC-3 bit streams.\
    \  In\n   this organization, the frames carrying six consecutive audio blocks\n\
    \   are treated as a group, called a 'frame set', regardless of the\n   number\
    \ of frames needed to carry six audio blocks.  This grouping\n   extends across\
    \ all programs and substreams that cover the time period\n   of the six blocks.\
    \  Since E-AC-3 frames may carry one, two, three, or\n   six blocks, a frame set\
    \ will consist of six, three, two, or one\n   frames.  AC-3 frames always carry\
    \ six blocks, so the frame set\n   provides framing synchronization between an\
    \ E-AC-3 bit stream and an\n   AC-3 bit stream.  Metadata that indicates the alignment\
    \ is carried in\n   the first frame (which will be part of an independent substream)\
    \ of\n   each frame set in an E-AC-3 stream.  This first frame can be\n   identified\
    \ by a parameter in the BSI field of the bit stream: the\n   Converter Synchronization\
    \ flag (convsync, in Section E.1.3.1.34 of\n   [ETSI]) is set to true (1).\n"
- title: 3.  RTP E-AC-3 Header Fields
  contents:
  - "3.  RTP E-AC-3 Header Fields\n   The RTP header is defined in the RTP specification\
    \ [RFC3550].  This\n   section defines how a number of fields in the header are\
    \ used.\n   o  Payload Type (PT): The assignment of an RTP payload type for this\n\
    \      packet format is outside the scope of this document; it is\n      specified\
    \ by the RTP profile under which this payload format is\n      used, or signaled\
    \ dynamically out-of-band (e.g., using SDP).\n   o  Marker (M) bit: The M bit\
    \ is set to one to indicate that the RTP\n      packet payload contains at least\
    \ one complete E-AC-3 frame or\n      contains the final fragment of an E-AC-3\
    \ frame.\n   o  Extension (X) bit: Defined by the RTP profile used.\n   o  Timestamp:\
    \ A 32-bit word that corresponds to the sampling instant\n      for the first\
    \ E-AC-3 frame in the RTP packet.  Packets containing\n      fragments of the\
    \ same frame MUST have the same timestamp.  The\n      timestamp of the first\
    \ RTP packet sent SHOULD be selected at\n      random; thereafter, it increases\
    \ linearly according to the number\n      of samples included in each frame. \
    \ Note that the number of\n      samples in a frame depends on the number of blocks\
    \ in the frame,\n      with 256 samples in each block.  Also note that more than\
    \ one\n      frame might correspond to the same time period when multiple\n  \
    \    channel configurations or programs are present.  If these frames\n      occupy\
    \ multiple packets, it is possible that the resulting packets\n      will have\
    \ the same timestamp value.\n"
- title: 4.  RTP E-AC-3 Payload Format
  contents:
  - "4.  RTP E-AC-3 Payload Format\n   This payload format is defined for E-AC-3,\
    \ as defined in Annex E of\n   [ETSI].  Note that E-AC-3 decoders are required\
    \ to be capable of\n   decoding AC-3 bit streams, so a receiver capable of receiving\
    \ the\n   E-AC-3 payload format defined in this document MUST also receive the\n\
    \   payload format for AC-3 defined in [RFC4184].\n   According to [RFC2736],\
    \ RTP payload formats should contain an\n   integral number of application data\
    \ units (ADUs).  The E-AC-3 frame\n   corresponds to an ADU in the context of\
    \ this payload format.  Each\n   RTP payload MUST start with the two-byte payload\
    \ specific header\n   followed by an integral number of complete E-AC-3 frames,\
    \ or a single\n   fragment of an E-AC-3 frame.\n   If an E-AC-3 frame exceeds\
    \ the MTU for a network, it SHOULD be\n   fragmented for transmission within an\
    \ RTP packet.  Section 4.2\n   provides guidelines for creating frame fragments.\n"
- title: 4.1.  Payload Specific Header
  contents:
  - "4.1.  Payload Specific Header\n   There is a two-octet Payload header at the\
    \ beginning of each payload.\n   Each E-AC-3 RTP payload MUST begin with the following\
    \ Payload header.\n                 0                   1\n                 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                |    MBZ      |F|       NF      |\n                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               Figure 4.  E-AC-3 RTP Payload header\n   o  Must Be Zero (MBZ):\
    \ Bits marked MBZ SHALL be set to the value zero\n      and SHALL be ignored by\
    \ receivers.  The bits are reserved for\n      future extensions.\n   o  Frame\
    \ Type (F): This one-bit field indicates the type of frame(s)\n      present in\
    \ the payload.  It takes the following values:  0 - One\n      or more complete\
    \ frames.  1 - Fragment of frame.  (Note that the M\n      bit in the RTP header\
    \ is set for the final fragment.)\n   o  Number of frames/fragments (NF): An 8-bit\
    \ field whose meaning\n      depends on the Frame Type (F) in this payload.  For\
    \ complete\n      frames (F of 0), it is used to indicate the number of E-AC-3\n\
    \      frames in the RTP payload.  For frame fragments (F of 1), it is\n     \
    \ used to indicate the number of fragments (and therefore packets)\n      that\
    \ make up the current frame.  NF MUST be identical for packets\n      containing\
    \ fragments of the same frame.\n   When receiving E-AC-3 payloads with F = 0 and\
    \ more than a single\n   frame (NF > 1), a receiver needs to use the \"frmsiz\"\
    \ field in the BSI\n   header in each E-AC-3 frame to determine the frame's length\
    \ if the\n   receiver needs to determine the boundary of the next frame.  Note\n\
    \   that the frame length varies from frame to frame in some\n   circumstances.\n"
- title: 4.2.  Fragmentation of E-AC-3 Frames
  contents:
  - "4.2.  Fragmentation of E-AC-3 Frames\n   The size of an E-AC-3 frame is signaled\
    \ in the Frame Size (frmsiz)\n   field in a frame's BSI header.  The value of\
    \ this field is one less\n   than the number of 16-bit words in the frame.  If\
    \ the size of an\n   E-AC-3 frame exceeds the MTU size, the frame SHOULD be fragmented\
    \ at\n   the RTP level.  The fragmentation MAY be performed at any byte\n   boundary\
    \ in the frame.  RTP packets containing fragments of the same\n   E-AC-3 frame\
    \ SHALL be sent in consecutive order, from first to last\n   fragment.  This enables\
    \ a receiver to assemble the fragments in the\n   correct order.\n"
- title: 4.3.  Concatenation of E-AC-3 Frames
  contents:
  - "4.3.  Concatenation of E-AC-3 Frames\n   There are cases where E-AC-3 frame sizes\
    \ are smaller than the MTU\n   size and it is advantageous to include multiple\
    \ frames in a packet.\n   It is useful to take into account the logical arrangement\
    \ of the bit\n   stream into program sets and frame sets to constrain the effects\
    \ of\n   the loss of a packet.  It is desirable for a complete program set or\n\
    \   a complete frame set to be included in one packet.  Also, it is\n   undesirable\
    \ for frames from more than one program set or frame set to\n   be in the same\
    \ packet, unless the sets are complete.  In this way,\n   the loss of a packet\
    \ is kept from causing the contents of another\n   packet to be unusable.\n  \
    \ Frames from more than one program set SHOULD NOT be included in the\n   same\
    \ packet unless all program sets in the packet are complete.\n   Frames from more\
    \ than one frame set SHOULD NOT be included in the\n   same packet unless all\
    \ frame sets in the packet are complete.\n"
- title: 4.4.  Carriage of AC-3 Frames
  contents:
  - "4.4.  Carriage of AC-3 Frames\n   The E-AC-3 specification [ETSI] requires that\
    \ E-AC-3 decoders be\n   capable of decoding AC-3 frames.  That specification\
    \ also supports\n   carriage of AC-3 frames in an E-AC-3 bit stream.  Due to differences\n\
    \   between E-AC-3 and AC-3 frames, there are restrictions placed on the\n   use\
    \ of AC-3 frames: they are only used for the independent substream\n   of the\
    \ first (or only) program in an E-AC-3 bit stream.  Note that\n   carriage of\
    \ only E-AC-3 frames, only AC-3 frames, and a mixture of\n   E-AC-3 and AC-3 frames\
    \ are all legal configurations.  It is legal to\n   change among the configurations\
    \ in a bit stream.  The AC-3 frame\n   format is described in [RFC4184] and specified\
    \ in [ETSI].\n"
- title: 5.  Types and Names
  contents:
  - '5.  Types and Names

    '
- title: 5.1.  Media Type Registration
  contents:
  - "5.1.  Media Type Registration\n   This registration uses the template defined\
    \ in [RFC4288] and follows\n   [RFC3555].\n   To: ietf-types@iana.org\n   Subject:\
    \ Registration of media type audio/eac3\n   Type name: audio\n   Subtype name:\
    \ eac3\n   Required parameter:\n   o  rate: The RTP timestamp clock rate that\
    \ is equal to the audio\n      sampling rate.  Permitted rates are 32000, 44100,\
    \ and 48000.\n   Optional parameter:\n   o  bitStreamConfig: The configuration\
    \ of programs and substreams in\n      the bit stream, expressed as a sequence\
    \ of ASCII characters.  This\n      parameter can serve two purposes.  First,\
    \ during the creation of a\n      session, the bitStreamConfig parameter might\
    \ be used to negotiate\n      a match between the requirements of a bit stream\
    \ and the\n      capabilities of a receiver to avoid using network bandwidth for\n\
    \      data that cannot be used.  Second, it makes the configuration of\n    \
    \  the bit stream explicit to the receiver so that whenever a packet\n      is\
    \ lost, the receiver can identify which kind of frame(s) has been\n      lost\
    \ to aid error mitigation.\n      The format for the value for this parameter\
    \ is to represent each\n      substream of the bit stream by a single character\
    \ indicating its\n      type, immediately followed by the number of audio channels\n\
    \      resulting if a frame of that substream (plus any other required\n     \
    \ substreams) is decoded.  Note that even though Low-Frequency\n      Effects\
    \ (LFE) channels are often described as \"fractional\"\n      channels (e.g.,\
    \ the \".1\" in 5.1), for this parameter, an LFE\n      channel is counted as\
    \ one (e.g., a 5.1-channel configuration is\n      indicated as 6).  The configuration\
    \ of the bit stream MUST match\n      the value of this parameter for the duration\
    \ of the session.\n      Allowed values for the substream type are as follows:\n\
    \      i - Independent substream.\n      d - Dependent substream.\n   The E-AC-3\
    \ specification [ETSI] defines which configurations of bit\n   streams are legal,\
    \ which constrains the values the bitStreamConfig\n   parameter will take.  Each\
    \ program starts with, and contains exactly\n   one, independent substream ('i').\
    \  Each independent substream is\n   followed by between 0 and 8 dependent substreams\
    \ ('d'), which belong\n   to the same program.  See Section 2.1.2 for more discussion\
    \ of\n   programs and substreams.\n   For example, consider a bit stream containing\
    \ two programs:\n   *  the first program with\n      +  a six-channel independent\
    \ substream\n      +  a dependent substream containing the additional channels\
    \ needed\n         for eight channels\n      +  a second dependent substream containing\
    \ the further channels\n         needed for 14 channels\n   *  along with a second\
    \ program with\n      +  another six-channel independent substream\n      +  a\
    \ dependent substream containing the additional channels needed\n         for\
    \ eight channels\n   Then the configuration of the bit stream is indicated as\
    \ follows:\n      bitStreamConfig = i6d8d14i6d8\n   When the bitStreamConfig parameter\
    \ is being used in an offer/answer\n   exchange, zero (0) for the number of channels\
    \ for a substream in an\n   answer is used to indicate a substream that the answerer\
    \ desires not\n   to receive.\n   Encoding considerations:\n      This media type\
    \ is framed and contains binary data.\n   Security considerations:\n      See\
    \ Section 6 of RFC 4598.\n   Interoperability considerations:\n   To maintain\
    \ interoperability with AC-3-capable end-points, in cases\n   where negotiation\
    \ is possible, an E-AC-3 end-point SHOULD declare\n   itself also as AC-3 capable\
    \ (i.e., supporting also \"audio/ac3\" as\n   specified in RFC 4184 [RFC4184]).\
    \  Note that all E-AC-3 end-points\n   are required to be AC-3 capable.\n   Published\
    \ specification:\n      RFC 4598 and ETSI TS 102.366 [ETSI].\n   Applications\
    \ that use this media type:\n      Multichannel audio compression of audio, and\
    \ audio for video.\n   Additional information:\n      Magic number(s):  The first\
    \ two octets of an E-AC-3 frame are\n         always the synchronization word,\
    \ which has the hex value\n         0x0B77.\n   Person & email address to contact\
    \ for further information:\n      Brian Link <bdl@dolby.com> IETF AVT working\
    \ group.\n   Intended usage:\n      COMMON\n   Restrictions on usage:\n      This\
    \ media type depends on RTP framing, and hence is only defined\n      for transfer\
    \ via RTP [RFC3550].  Transport within other framing\n      protocols is not defined\
    \ at this time.\n   Author/Change controller:\n      IETF Audio/Video Transport\
    \ Working Group delegated from the IESG.\n"
- title: 5.2.  SDP Usage
  contents:
  - "5.2.  SDP Usage\n   The information carried in the media type specification has\
    \ a\n   specific mapping to fields in the Session Description Protocol (SDP)\n\
    \   [RFC2327], which is commonly used to describe RTP sessions.  When SDP\n  \
    \ is used to specify sessions employing E-AC-3, the mapping is as\n   follows:\n\
    \   o  The Media type (\"audio\") goes in SDP \"m=\" as the media name.\n   o\
    \  The Media subtype (\"eac3\") goes in SDP \"a=rtpmap\" as the encoding\n   \
    \   name.\n   o  The required parameter \"rate\" also goes in \"a=rtpmap\" as\
    \ the clock\n      rate.  (The optional \"channels\" rtpmap encoding parameter\
    \ is not\n      used.  Instead, the information is included in the optional\n\
    \      parameter bitStreamConfig.)\n   o  The optional parameter \"bitStreamConfig\"\
    \ goes in the SDP \"a=fmtp\"\n      attribute.\n   The following is an example\
    \ of the SDP data for E-AC-3:\n         m=audio 49111 RTP/AVP 100\n         a=rtpmap:100\
    \ eac3/48000\n         a=fmtp:100 bitStreamConfig i6d8d14i6d8\n   Certain considerations\
    \ are needed when SDP is used to perform\n   offer/answer exchanges [RFC3264].\n\
    \   o  The \"rate\" is a symmetric parameter, and the answer MUST use the\n  \
    \    same value or the answerer removes the payload type.\n   o  The \"bitStreamConfig\"\
    \ parameter is declarative and indicates, for\n      sendonly, the intended arrangement\
    \ of substreams in the bit\n      stream, along with the channel configuration,\
    \ to transmit, and for\n      recvonly or sendrecv, the desired bit stream arrangement\
    \ and\n      channel configuration to receive.  The format of the\n      bitStreamConfig\
    \ value in an answer MAY differ from the offer value\n      by replacing the number\
    \ of channels for any undesired substreams\n      with '0'.  It is valid to zero\
    \ out dependent substreams containing\n      undesired channel configurations\
    \ and to zero out all the\n      substreams of an undesired program.  Then the\
    \ sender MAY reoffer\n      the stream in the receiver's preferred configuration\
    \ if it is\n      capable of providing that configuration.  Note that all receivers\n\
    \      are capable of receiving, and all decoders are capable of\n      decoding,\
    \ any of the legal bit stream configurations, so the\n      parameter exchange\
    \ is not needed for interoperability.  The\n      parameter exchange might be\
    \ used to help optimize the transmission\n      to the number of programs or channels\
    \ the receiver requests.\n   o  Since an AC-3 bit stream is a special case of\
    \ an E-AC-3 bit\n      stream, it is permissible for an AC-3 bit stream to be\
    \ carried in\n      the E-AC-3 payload format.  To ensure interoperability with\n\
    \      receivers that support the AC-3 payload format but not the E-AC-3\n   \
    \   payload format, a sender that desires to send an AC-3 bit stream\n      in\
    \ the E-AC-3 payload format SHOULD also offer the session in the\n      AC-3 payload\
    \ format by including payload types for both media\n      subtypes: 'ac3' and\
    \ 'eac3'.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The payload format described in this document\
    \ is subject to the\n   security considerations defined in RTP [RFC3550] and in\
    \ any\n   applicable RTP profile (e.g., [RFC3551]).  To protect the user's\n \
    \  privacy and any copyrighted material, confidentiality protection\n   would\
    \ have to be applied.  To also protect against modification by\n   intermediate\
    \ entities and ensure the authenticity of the stream,\n   integrity protection\
    \ and authentication would be required.\n   Confidentiality, integrity protection,\
    \ and authentication have to be\n   solved by a mechanism external to this payload\
    \ format, for example,\n   Secure Real-time Transport Protocol (SRTP) [RFC3711].\n\
    \   The E-AC-3 format is designed so that the validity of data frames can\n  \
    \ be determined by decoders.  The required decoder response to a\n   malformed\
    \ frame is to discard the malformed data and conceal the\n   errors in the audio\
    \ output until a valid frame is detected and\n   decoded.  This is expected to\
    \ prevent crashes and other abnormal\n   decoder behavior in response to errors\
    \ or attacks.\n"
- title: 7.  Congestion Control
  contents:
  - "7.  Congestion Control\n   The general congestion control considerations for\
    \ transporting RTP\n   data apply to E-AC-3 audio over RTP as well; see RTP [RFC3550],\
    \ and\n   any applicable RTP profile (e.g., [RFC3551]).\n   E-AC-3 is a variable\
    \ bit rate coding system so it is possible to use\n   a variety of techniques\
    \ to adapt to network bandwidth.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The IANA has registered a new media subtype for E-AC-3\
    \ (see Section\n   5).\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [ETSI]     ETSI, \"Digital Audio Compression (AC-3,\
    \ Enhanced AC-3)\n              Standard\", TS 102 366, February 2005.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC4184]  Link, B., Hager, T.,\
    \ and J. Flaks, \"RTP Payload Format for\n              AC-3 Audio\", RFC 4184,\
    \ October 2005.\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and\
    \ V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n    \
    \          Applications\", STD 64, RFC 3550, July 2003.\n   [RFC4288]  Freed,\
    \ N. and J. Klensin, \"Media Type Specifications and\n              Registration\
    \ Procedures\", BCP 13, RFC 4288, December 2005.\n   [RFC3555]  Casner, S. and\
    \ P. Hoschka, \"MIME Type Registration of RTP\n              Payload Formats\"\
    , RFC 3555, July 2003.\n   [RFC2327]  Handley, M. and V. Jacobson, \"SDP: Session\
    \ Description\n              Protocol\", RFC 2327, April 1998.\n   [RFC3264] \
    \ Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n              with\
    \ Session Description Protocol (SDP)\", RFC 3264, June\n              2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [2004AES]  Fielder, L., Andersen, R., Crockett,\
    \ B., Davidson, G.,\n              Davis, M., Turner, S., Vinton, M., and P. Williams,\n\
    \              \"Introduction to Dolby Digital Plus, an Enhancement to the\n \
    \             Dolby Digital Coding System\", Preprint 6196, Presented at\n   \
    \           the 117th Convention of the Audio Engineering Society,\n         \
    \     October 2004.\n   [1994AES]  Todd, C., Davidson, G., Davis, M., Fielder,\
    \ L., Link, B.,\n              and S. Vernon, \"AC-3: Flexible Perceptual Coding\
    \ for Audio\n              Transmission and Storage\", Preprint 3796, Presented\
    \ at the\n              96th Convention of the Audio Engineering Society, May\n\
    \              1994.\n   [RFC2736]  Handley, M. and C. Perkins, \"Guidelines for\
    \ Writers of RTP\n              Payload Format Specifications\", BCP 36, RFC 2736,\
    \ December\n              1999.\n   [RFC3551]  Schulzrinne, H. and S. Casner,\
    \ \"RTP Profile for Audio and\n              Video Conferences with Minimal Control\"\
    , STD 65, RFC 3551,\n              July 2003.\n   [RFC3711]  Baugher, M., McGrew,\
    \ D., Naslund, M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time\
    \ Transport Protocol (SRTP)\",\n              RFC 3711, March 2004.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Brian Link\n   Dolby Laboratories\n   100 Potrero Ave.\n\
    \   San Francisco, CA  94103\n   US\n   Phone: +1 415 558 0200\n   EMail: bdl@dolby.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
