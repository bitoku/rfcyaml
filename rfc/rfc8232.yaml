- contents:
  - "       Optimizations of Label Switched Path State Synchronization\n                     Procedures
    for a Stateful PCE\n"
  title: __initial_text__
- contents:
  - "Abstract\n   A stateful Path Computation Element (PCE) has access to not only
    the\n   information disseminated by the network's Interior Gateway Protocol\n
    \  (IGP) but also the set of active paths and their reserved resources\n   for
    its computation.  The additional Label Switched Path (LSP) state\n   information
    allows the PCE to compute constrained paths while\n   considering individual LSPs
    and their interactions.  This requires a\n   State Synchronization mechanism between
    the PCE and the network, the\n   PCE and Path Computation Clients (PCCs), and
    cooperating PCEs.  The\n   basic mechanism for State Synchronization is part of
    the stateful PCE\n   specification.  This document presents motivations for optimizations\n
    \  to the base State Synchronization procedure and specifies the\n   required
    Path Computation Element Communication Protocol (PCEP)\n   extensions.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8232.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \     1.1. Requirements Language ......................................4\n   2.
    Terminology .....................................................5\n   3. State
    Synchronization Avoidance .................................5\n      3.1. Motivation
    .................................................5\n      3.2. State Synchronization
    Avoidance Procedure ..................5\n           3.2.1. IP Address Change during
    Session Re-establishment ..10\n      3.3. PCEP Extensions ...........................................11\n
    \          3.3.1. LSP-DB Version Number TLV ..........................11\n           3.3.2.
    Speaker Entity Identifier TLV ......................12\n   4. Incremental State
    Synchronization ..............................13\n      4.1. Motivation ................................................13\n
    \     4.2. Incremental Synchronization Procedure .....................14\n   5.
    PCE-Triggered Initial Synchronization ..........................17\n      5.1.
    Motivation ................................................17\n      5.2. PCE-Triggered
    Initial State Synchronization Procedure .....18\n   6. PCE-Triggered Resynchronization
    ................................19\n      6.1. Motivation ................................................19\n
    \     6.2. PCE-Triggered State Resynchronization Procedure ...........19\n   7.
    Advertising Support of Synchronization Optimizations ...........20\n   8. IANA
    Considerations ............................................21\n      8.1. PCEP-Error
    Object .........................................21\n      8.2. PCEP TLV Type Indicators
    ..................................22\n      8.3. STATEFUL-PCE-CAPABILITY TLV ...............................22\n
    \  9. Manageability Considerations ...................................22\n      9.1.
    Control of Function and Policy ............................22\n      9.2. Information
    and Data Models ...............................22\n      9.3. Liveness Detection
    and Monitoring .........................23\n      9.4. Verify Correct Operations
    .................................23\n      9.5. Requirements on Other Protocols
    ...........................23\n      9.6. Impact on Network Operations ..............................23\n
    \  10. Security Considerations .......................................23\n   11.
    References ....................................................24\n      11.1.
    Normative References .....................................24\n      11.2. Informative
    References ...................................24\n   Acknowledgments ...................................................25\n
    \  Contributors ......................................................25\n   Authors'
    Addresses ................................................26\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Path Computation Element Communication Protocol (PCEP)
    provides\n   mechanisms for Path Computation Elements (PCEs) to perform path\n
    \  computations in response to Path Computation Client (PCC) requests.\n   [RFC8231]
    describes a set of extensions to PCEP to provide stateful\n   control.  A stateful
    PCE has access to not only the information\n   carried by the network's Interior
    Gateway Protocol (IGP) but also the\n   set of active paths and their reserved
    resources for its\n   computations.  The additional state allows the PCE to compute\n
    \  constrained paths while considering individual LSPs and their\n   interactions.
    \ This requires a State Synchronization mechanism\n   between the PCE and the
    network, the PCE and the PCC, and cooperating\n   PCEs.  [RFC8231] describes the
    basic mechanism for State\n   Synchronization.  This document specifies following
    optimizations for\n   State Synchronization and the corresponding PCEP procedures
    and\n   extensions:\n   o  State Synchronization Avoidance: To skip State Synchronization
    if\n      the state has survived and not changed during session restart.\n      (See
    Section 3.)\n   o  Incremental State Synchronization: To do incremental (delta)
    State\n      Synchronization when possible.  (See Section 4.)\n   o  PCE-Triggered
    Initial Synchronization: To let PCE control the\n      timing of the initial State
    Synchronization.  (See Section 5.)\n   o  PCE-Triggered Resynchronization: To
    let PCE resynchronize the\n      state for sanity check.  (See Section 6.)\n   Support
    for each of the synchronization optimization capabilities is\n   advertised during
    the PCEP initialization phase.  See Section 7 for\n   the new flags defined in
    this document.  The handling of each flag is\n   described in the relevant section.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses the following terms defined in [RFC5440]:
    PCC,\n   PCE, and PCEP Peer.\n   This document uses the following terms defined
    in [RFC8051]: Stateful\n   PCE, Delegation, and LSP State Database (LSP-DB).\n
    \  This document uses the following terms defined in [RFC8231]:\n   Redelegation
    Timeout Interval, LSP State Report, and LSP Update\n   Request.\n   Within this
    document, when describing PCE-PCE communications, the\n   requesting PCE fills
    the role of a PCC as usual.\n"
  title: 2.  Terminology
- contents:
  - '3.  State Synchronization Avoidance

    '
  - contents:
    - "3.1.  Motivation\n   The purpose of State Synchronization is to provide a\n
      \  checkpoint-in-time state replica of a PCC's LSP state in a stateful\n   PCE.
      \ State Synchronization is performed immediately after the\n   initialization
      phase [RFC5440].  [RFC8231] describes the basic\n   mechanism for State Synchronization.\n
      \  State Synchronization is not always necessary following a PCEP\n   session
      restart.  If the state of both PCEP peers did not change, the\n   synchronization
      phase may be skipped.  This can result in significant\n   savings in both control-plane
      data exchanges and the time it takes\n   for the stateful PCE to become fully
      operational.\n"
    title: 3.1.  Motivation
  - contents:
    - "3.2.  State Synchronization Avoidance Procedure\n   State Synchronization MAY
      be skipped following a PCEP session restart\n   if the state of both PCEP peers
      did not change during the period\n   prior to session re-initialization.  To
      be able to make this\n   determination, state must be exchanged and maintained
      by both PCE and\n   PCC during normal operation.  This is accomplished by keeping
      track\n   of the changes to the LSP-DB, using a version tracking field called\n
      \  the LSP-DB Version Number.\n   The INCLUDE-DB-VERSION (S) bit in the STATEFUL-PCE-CAPABILITY
      TLV\n   (Section 7) is advertised on a PCEP session during session startup to\n
      \  indicate that the LSP-DB Version Number is to be included when the\n   LSPs
      are reported to the PCE.  The LSP-DB Version Number, carried in\n   LSP-DB-VERSION
      TLV (see Section 3.3.1), is owned by a PCC, and it\n   MUST be incremented by
      1 for each successive change in the PCC's LSP-\n   DB.  The LSP-DB Version Number
      MUST start at 1 and may wrap around.\n   Values 0 and 0xFFFFFFFFFFFFFFFF are
      reserved.  If either of the two\n   values are used during LSP State (re)Synchronization,
      the PCE speaker\n   receiving this value MUST send back a PCEP Error (PCErr)
      with Error-\n   type=20 and Error-value=6 'Received an invalid LSP-DB Version\n
      \  Number', and close the PCEP session.  Operations that trigger a\n   change
      to the local LSP-DB include a change in the LSP operational\n   state, delegation
      of an LSP, removal or setup of an LSP, or change in\n   any of the LSP attributes
      that would trigger a report to the PCE.\n   If the include LSP-DB version capability
      is enabled, a PCC MUST\n   increment its LSP-DB Version Number when the 'Redelegation
      Timeout\n   Interval' timer expires (see [RFC8231] for the use of the\n   Redelegation
      Timeout Interval).\n   If both PCEP speakers set the S flag in the OPEN object's\n
      \  STATEFUL-PCE-CAPABILITY TLV to 1, the PCC MUST include the LSP-DB-\n   VERSION
      TLV in each LSP object of the Path Computation LSP State\n   Report (PCRpt)
      message.  If the LSP-DB-VERSION TLV is missing in a\n   PCRpt message, the PCE
      will generate an error with Error-type=6\n   (Mandatory Object missing) and
      Error-value=12 'LSP-DB-VERSION TLV\n   missing', and close the session.  If
      the include LSP-DB version\n   capability has not been enabled on a PCEP session,
      the PCC SHOULD NOT\n   include the LSP-DB-VERSION TLV in the LSP Object, and
      the PCE MUST\n   ignore it, were it to receive one.\n   If a PCE's LSP-DB survived
      the restart of a PCEP session, the PCE\n   will include the LSP-DB-VERSION TLV
      in its OPEN object, and the TLV\n   will contain the last LSP-DB Version Number
      received on an LSP State\n   Report from the PCC in the previous PCEP session.
      \ If a PCC's LSP-DB\n   survived the restart of a PCEP session, the PCC will
      include the LSP-\n   DB-VERSION TLV in its OPEN object, and the TLV will contain
      the\n   latest LSP-DB Version Number.  If a PCEP speaker's LSP-DB did not\n
      \  survive the restart of a PCEP session or at startup when the database\n   is
      empty, the PCEP speaker MUST NOT include the LSP-DB-VERSION TLV in\n   the OPEN
      object.\n   If both PCEP speakers include the LSP-DB-VERSION TLV in the OPEN\n
      \  object and the TLV values match, the PCC MAY skip State\n   Synchronization,
      and the PCE does not wait for the end-of-\n   synchronization marker [RFC8231].
      \ Otherwise, the PCC MUST perform\n   full State Synchronization (see [RFC8231])
      or incremental State\n   Synchronization (see Section 4 if this capability is
      advertised) to\n   the stateful PCE.  In other words, if the incremental State\n
      \  Synchronization capability is not advertised by the peers, based on\n   the
      LSP-DB Version Number match, either the State Synchronization is\n   skipped
      or a full State Synchronization is performed.  If the PCC\n   attempts to skip
      State Synchronization, by setting the SYNC flag to 0\n   and PLSP-ID to a non-zero
      value on the first LSP State Report from\n   the PCC as per [RFC8231], the PCE
      MUST send back a PCErr with Error-\n   type=20 and Error-value=2 'LSP-DB version
      mismatch', and close the\n   PCEP session.\n   If State Synchronization is required,
      then prior to completing the\n   initialization phase, the PCE MUST mark any
      LSPs in the LSP-DB that\n   were previously reported by the PCC as stale.  When
      the PCC reports\n   an LSP during State Synchronization, if the LSP already
      exists in the\n   LSP-DB, the PCE MUST update the LSP-DB and clear the stale
      marker\n   from the LSP.  When it has finished State Synchronization, the PCC\n
      \  MUST immediately send an end-of-synchronization marker.  The end-of-\n   synchronization
      marker is a PCRpt message with an LSP object\n   containing a PLSP-ID of 0 and
      with the SYNC flag set to 0 [RFC8231].\n   The LSP-DB-VERSION TLV MUST be included
      in this PCRpt message.  On\n   receiving this state report, the PCE MUST purge
      any LSPs from the\n   LSP-DB that are still marked as stale.\n   Note that a
      PCE/PCC MAY force State Synchronization by not including\n   the LSP-DB-VERSION
      TLV in its OPEN object.\n   Since a PCE does not make changes to the LSP-DB
      Version Number, a PCC\n   should never encounter this TLV in a message from
      the PCE (other than\n   the OPEN message).  A PCC SHOULD ignore the LSP-DB-VERSION
      TLV, were\n   it to receive one from a PCE.\n   Figure 1 shows an example sequence
      where the State Synchronization is\n   skipped.\n                     +-+-+
      \                   +-+-+\n                     |PCC|                    |PCE|\n
      \                    +-+-+                    +-+-+\n                       |
      \                       |\n                       |--Open--,               |\n
      \                      |  DBv=42 \\    ,---Open--|\n                       |
      \   S=1   \\  /   DBv=42 |\n                       |           \\/      S=1
      \ |\n                       |           /\\           |\n                       |
      \         /   `-------->| (OK to skip sync)\n           (Skip sync) |<--------`
      \             |\n                       |            .           |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |                        |\n                       |--PCRpt,DBv=43,SYNC=0-->|
      (Regular\n                       |                        |  LSP State Report)\n
      \                      |--PCRpt,DBv=44,SYNC=0-->| (Regular\n                       |
      \                       |  LSP State Report)\n                       |--PCRpt,DBv=45,SYNC=0-->|\n
      \                      |                        |\n                  Figure
      1: State Synchronization Skipped\n   Figure 2 shows an example sequence where
      the State Synchronization is\n   performed due to LSP-DB version mismatch during
      the PCEP session\n   setup.  Note that the same State Synchronization sequence
      would\n   happen if either the PCC or the PCE would not include the LSP-DB-\n
      \  VERSION TLV in their respective Open messages.\n                     +-+-+
      \                   +-+-+\n                     |PCC|                    |PCE|\n
      \                    +-+-+                    +-+-+\n                       |
      \                       |\n                       |--Open--,               |\n
      \                      |  DBv=46 \\    ,---Open--|\n                       |
      \   S=1   \\  /   DBv=42 |\n                       |           \\/      S=1
      \ |\n                       |           /\\           |\n                       |
      \         /   `-------->| (Expect sync)\n             (Do sync) |<--------`
      \             |\n                       |                        |\n                       |--PCRpt,DBv=46,SYNC=1-->|
      (Sync start)\n                       |            .           |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |--PCRpt,DBv=46,SYNC=0-->| (Sync done)\n                       |
      \           .           | (Purge LSP state\n                       |            .
      \          |  if applicable)\n                       |            .           |\n
      \                      |--PCRpt,DBv=47,SYNC=0-->| (Regular\n                       |
      \                       |  LSP State Report)\n                       |--PCRpt,DBv=48,SYNC=0-->|
      (Regular\n                       |                        |  LSP State Report)\n
      \                      |--PCRpt,DBv=49,SYNC=0-->|\n                       |
      \                       |\n                 Figure 2: State Synchronization
      Performed\n   Figure 3 shows an example sequence where the State Synchronization
      is\n   skipped, but because one or both PCEP speakers set the S flag to 0,\n
      \  the PCC does not send LSP-DB-VERSION TLVs in subsequent PCRpt\n   messages
      to the PCE.  If the current PCEP session restarts, the PCEP\n   speakers will
      have to perform State Synchronization, since the PCE\n   does not know the PCC's
      latest LSP-DB Version Number information.\n                     +-+-+                    +-+-+\n
      \                    |PCC|                    |PCE|\n                     +-+-+
      \                   +-+-+\n                       |                        |\n
      \                      |--Open--,               |\n                       |
      \ DBv=42 \\    ,---Open--|\n                       |    S=0   \\  /   DBv=42
      |\n                       |           \\/      S=0  |\n                       |
      \          /\\           |\n                       |          /   `-------->|
      (OK to skip sync)\n           (Skip sync) |<--------`              |\n                       |
      \           .           |\n                       |            .           |\n
      \                      |            .           |\n                       |------PCRpt,SYNC=0----->|
      (Regular\n                       |                        |  LSP State Report)\n
      \                      |------PCRpt,SYNC=0----->| (Regular\n                       |
      \                       |  LSP State Report)\n                       |------PCRpt,SYNC=0----->|\n
      \                      |                        |\n                 Figure 3:
      State Synchronization Skipped;\n                 No LSP-DB-VERSION TLVs Sent
      from the PCC\n"
    - contents:
      - "3.2.1.  IP Address Change during Session Re-establishment\n   There could
        be a case during PCEP session re-establishment when the\n   PCC's or PCE's
        IP address can change.  This includes, but is not\n   limited to, the following
        cases:\n   o  A PCC could use a physical interface IP address to connect to
        the\n      PCE.  In this case, if the line card that the PCC connects from\n
        \     changes, then the PCEP session goes down and comes back up again,\n
        \     with a different IP address associated with a new line card.\n   o  The
        PCC or PCE may move in the network, either physically or\n      logically,
        which may cause its IP address to change.  For example,\n      the PCE may
        be deployed as a virtual network function (VNF), and\n      another virtualized
        instance of the PCE may be populated with the\n      original PCE instance's
        state, but it may be given a different IP\n      address.\n   To ensure that
        a PCEP peer can recognize a previously connected peer,\n   each PCEP peer
        includes the SPEAKER-ENTITY-ID TLV described in\n   Section 3.3.2 in the OPEN
        message.\n   This TLV is used during the State Synchronization procedure to\n
        \  identify the PCEP session as a re-establishment of a previous session\n
        \  that went down.  Then State Synchronization optimizations such as\n   state
        sync avoidance can be applied to this session.  Note that this\n   usage is
        only applicable within the State Timeout Interval [RFC8231].\n   After the
        State Timeout Interval expires, all state associated with\n   the PCEP session
        is removed, which includes the SPEAKER-ENTITY-ID\n   received.  Note that
        the PCEP session initialization [RFC5440]\n   procedure remains unchanged.\n"
      title: 3.2.1.  IP Address Change during Session Re-establishment
    title: 3.2.  State Synchronization Avoidance Procedure
  - contents:
    - "3.3.  PCEP Extensions\n   A new INCLUDE-DB-VERSION (S) bit is added in the
      stateful\n   capabilities TLV (see Section 7 for details).\n"
    - contents:
      - "3.3.1.  LSP-DB Version Number TLV\n   The LSP-DB Version Number (LSP-DB-VERSION)
        TLV is an optional TLV\n   that MAY be included in the OPEN object and the
        LSP object.\n   This TLV is included in the LSP object in the PCRpt message
        to\n   indicate the LSP-DB version at the PCC.  This TLV SHOULD NOT be\n   included
        in other PCEP messages (Path Computation Update Request\n   (PCUpd), Path
        Computation Request (PCReq), and Path Computation Reply\n   (PCRep)) and MUST
        be ignored if received.\n   The format of the LSP-DB-VERSION TLV is shown
        in the following\n   figure:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=23             |            Length=8           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                     LSP-DB Version Number                     |\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \                   Figure 4: LSP-DB-VERSION TLV Format\n   The type of the
        TLV is 23, and it has a fixed length of 8 octets.\n   The value contains a
        64-bit unsigned integer, carried in network byte\n   order, representing the
        LSP-DB Version Number.\n"
      title: 3.3.1.  LSP-DB Version Number TLV
    - contents:
      - "3.3.2.  Speaker Entity Identifier TLV\n   The Speaker Entity Identifier TLV
        (SPEAKER-ENTITY-ID) is an optional\n   TLV that MAY be included in the OPEN
        object when a PCEP speaker\n   wishes to determine if State Synchronization
        can be skipped when a\n   PCEP session is restarted.  It contains a unique
        identifier for the\n   node that does not change during the lifetime of the
        PCEP speaker.\n   It identifies the PCEP speaker to its peers even if the
        speaker's IP\n   address is changed.\n   In case of a remote peer IP address
        change, a PCEP speaker would\n   learn the Speaker Entity Identifier on receiving
        the open message,\n   but it MAY have already sent its open message without
        realizing that\n   it is a known PCEP peer.  In such a case, either a full\n
        \  synchronization is done or the PCEP session is terminated.  This may\n
        \  be a local policy decision.  The new IP address is associated with\n   the
        Speaker Entity Identifier for the future either way.  In the\n   latter case
        when the PCEP session is re-established, it would be\n   correctly associated
        with the Speaker Entity Identifier and not be\n   considered as an unknown
        peer.\n   The format of the SPEAKER-ENTITY-ID TLV is shown in the following\n
        \  figure:\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |           Type=24             |       Length (variable)       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     //
        \                Speaker Entity Identifier                    //\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                  Figure
        5: SPEAKER-ENTITY-ID TLV Format\n   The type of the TLV is 24, and it has
        a variable length, which MUST\n   be greater than 0.  The value is padded
        to a 4-octet alignment.  The\n   padding is not included in the Length field.
        \ The value contains the\n   Speaker Entity Identifier (an identifier of the
        PCEP speaker\n   transmitting this TLV).  This identifier is required to be
        unique\n   within its scope of visibility, which is usually limited to a single\n
        \  domain.  It MAY be configured by the operator.  Alternatively, it can\n
        \  be derived automatically from a suitably stable unique identifier,\n   such
        as a Media Access Control (MAC) address, serial number, Traffic\n   Engineering
        Router ID, or similar.  In the case of inter-domain\n   connections, the speaker
        SHOULD prefix its usual identifier with the\n   domain identifier of its residence,
        such as an Autonomous System\n   number, an IGP area identifier, or similar
        to make sure it remains\n   unique.\n   The relationship between this identifier
        and entities in the Traffic\n   Engineering database is intentionally left
        undefined.\n   From a manageability point of view, a PCE or PCC implementation\n
        \  SHOULD allow the operator to configure this Speaker Entity\n   Identifier.\n
        \  If a PCEP speaker receives the SPEAKER-ENTITY-ID on a new PCEP\n   session,
        that matches with an existing alive PCEP session, the PCEP\n   speaker MUST
        send a PCErr with Error-type=20 and Error-value=7\n   'Received an invalid
        Speaker Entity Identifier', and close the PCEP\n   session.\n"
      title: 3.3.2.  Speaker Entity Identifier TLV
    title: 3.3.  PCEP Extensions
  title: 3.  State Synchronization Avoidance
- contents:
  - "4.  Incremental State Synchronization\n   [RFC8231] describes the LSP State Synchronization
    mechanism between\n   PCCs and stateful PCEs.  During the State Synchronization,
    a PCC\n   sends the information of all its LSPs (i.e., the full LSP-DB) to the\n
    \  stateful PCE.  In order to reduce the State Synchronization overhead\n   when
    there is a small number of LSP state changes in the network\n   between the PCEP
    session restart, this section defines a mechanism\n   for incremental (Delta)
    LSP-DB synchronization.\n"
  - contents:
    - "4.1.  Motivation\n   According to [RFC8231], if a PCE restarts and its LSP-DB
      survived,\n   PCCs with a mismatched LSP-DB Version Number will send all their
      LSPs\n   information (full LSP-DB) to the stateful PCE, even if only a small\n
      \  number of LSPs underwent state change.  It can take a long time and\n   consume
      large communication channel bandwidth.\n   Figure 6 shows an example of LSP
      State Synchronization.\n                                  +-----+\n                                  |
      PCE |\n                                  +-----+\n                                 /\n
      \                               /\n                               /\n                              /\n
      \                      +------+            +------+\n                       |
      PCC1 |------------| PCC2 |\n                       +------+            +------+\n
      \                         |                   |\n                          |
      \                  |\n                       +------+            +------+\n
      \                      | PCC3 |------------| PCC4 |\n                       +------+
      \           +------+\n                        Figure 6: Topology Example\n   Assume
      that there are 320 LSPs in the network, with each PCC having\n   80 LSPs.  During
      the time when the PCEP session is down, 20 LSPs of\n   each PCC (i.e., 80 LSPs
      in total), are changed.  Hence, when the PCEP\n   session restarts, the stateful
      PCE needs to synchronize 320 LSPs with\n   all PCCs.  But actually, 240 LSPs
      stay the same.  If performing full\n   LSP State Synchronization, it can take
      a long time to carry out the\n   synchronization of all LSPs.  It is especially
      true when only a low\n   bandwidth communication channel is available (e.g.,
      in-band control\n   channel for optical transport networks), and there is a
      substantial\n   number of LSPs in the network.  Another disadvantage of full
      LSP\n   synchronization is that it is a waste of communication bandwidth to\n
      \  perform full LSP synchronization given the fact that the number of\n   LSP
      changes can be small during the time when the PCEP session is\n   down.\n   An
      incremental (Delta) LSP-DB State Synchronization is described in\n   this section,
      where only the LSPs that underwent state change are\n   synchronized between
      the session restart.  This may include\n   new/modified/deleted LSPs.\n"
    title: 4.1.  Motivation
  - contents:
    - "4.2.  Incremental Synchronization Procedure\n   [RFC8231] describes State Synchronization
      and Section 3 of this\n   document describes State Synchronization avoidance
      by using\n   LSP-DB-VERSION TLV in its OPEN object.  This section extends this\n
      \  idea to only synchronize the delta (changes) in case of version\n   mismatch.\n
      \  If both PCEP speakers include the LSP-DB-VERSION TLV in the OPEN\n   object
      and the LSP-DB-VERSION TLV values match, the PCC MAY skip\n   State Synchronization.
      \ Otherwise, the PCC MUST perform State\n   Synchronization.  Incremental State
      Synchronization capability is\n   advertised on a PCEP session during session
      startup using the\n   DELTA-LSP-SYNC-CAPABILITY (D) bit in the capabilities
      TLV (see\n   Section 7).  Instead of dumping full LSP-DB to the stateful PCE\n
      \  again, the PCC synchronizes the delta (changes) as described in\n   Figure
      7 when the D and S flags are set to 1 by both the PCC and PCE.\n   Other combinations
      of D and S flags set by the PCC and PCE result in\n   full LSP-DB synchronization
      procedures as described in [RFC8231].  By\n   setting the D flag to zero in
      the OPEN message, a PCEP speaker can\n   skip the incremental synchronization
      optimization, resulting in a\n   full LSP-DB synchronization.\n                       +-+-+
      \                   +-+-+\n                       |PCC|                    |PCE|\n
      \                      +-+-+                    +-+-+\n                         |
      \                       |\n                         |--Open--,               |\n
      \                        |  DBv=46 \\    ,---Open--|\n                         |
      \   S=1   \\  /   DBv=42 |\n                         |    D=1    \\/      S=1
      \ |\n                         |           /\\      D=1  |\n                         |
      \         /  \\          |\n                         |         /    `-------->|
      (Expect delta sync)\n                (Do sync)|<--------`              | (DO
      NOT purge LSP\n                (Delta)  |                        |  state)\n
      \                        |                        |\n     (Delta sync starts)
      |--PCRpt,DBv=46,SYNC=1-->|\n                         |            .           |\n
      \                        |            .           |\n                         |
      \           .           |\n                         |            .           |\n
      \                        |--PCRpt,DBv=46,SYNC=0-->| (Sync done,\n                         |
      \                       |  PLSP-ID=0)\n                         |                        |\n
      \                        |--PCRpt,DBv=47,SYNC=0-->| (Regular\n                         |
      \                       |  LSP State Report)\n                         |--PCRpt,DBv=48,SYNC=0-->|
      (Regular\n                         |                        |  LSP State Report)\n
      \                        |--PCRpt,DBv=49,SYNC=0-->|\n                         |
      \                       |\n              Figure 7: Incremental Synchronization
      Procedure\n   As per Section 3, the LSP-DB Version Number is incremented each
      time\n   a change is made to the PCC's local LSP-DB.  Each LSP is associated\n
      \  with the DB version at the time of its state change.  This is needed\n   to
      determine which LSP and what information needs to be synchronized\n   in incremental
      State Synchronization.  The incremental state sync is\n   done from the last
      LSP-DB version received by the PCE to the latest\n   DB version at the PCC.
      \ Note that the LSP-DB Version Number can wrap\n   around, in which case the
      incremental state sync would also wrap till\n   the latest LSP-DB Version Number
      at the PCC.\n   In order to carry out incremental State Synchronization, it
      is not\n   necessary for a PCC to store a complete history of LSP-DB change
      for\n   all time, but remember the LSP state changes (including LSP\n   modification,
      setup, and deletion) that the PCE did not get to\n   process during the session
      down.  Note that, a PCC would be unaware\n   that a particular LSP report has
      been processed by the PCE before the\n   session to the PCE went down.  So a
      PCC implementation MAY choose to\n   store the LSP-DB Version Number with each
      LSP at the time its status\n   changed, so that when a session is re-established,
      an incremental\n   synchronization can be attempted based on the PCE's last
      LSP-DB\n   Version Number.  For an LSP that is deleted at the PCC, the PCC\n
      \  implementation would need to remember the deleted LSP in some way to\n   make
      sure this could be reported as part of incremental\n   synchronization later.
      \ The PCC would discard this information based\n   on a local policy or when
      it determines that this information is no\n   longer needed with sufficient
      confidence.  In the example shown in\n   Figure 7, the PCC needs to store the
      LSP state changes that happened\n   between DB Versions 43 to 46 and synchronize
      these changes, when\n   performing incremental LSP state update.\n   If a PCC
      finds out it does not have sufficient information to\n   complete incremental
      synchronization after advertising incremental\n   LSP State Synchronization
      capability, it MUST send a PCErr with\n   Error-type=20 and Error-value=5 'A
      PCC indicates to a PCE that it can\n   not complete the State Synchronization'
      (defined in [RFC8231]), and\n   terminate the session.  The PCC SHOULD re-establish
      the session with\n   the D bit set to 0 in the OPEN message.\n   The other procedures
      and error checks remain unchanged from the full\n   State Synchronization [RFC8231].\n"
    title: 4.2.  Incremental Synchronization Procedure
  title: 4.  Incremental State Synchronization
- contents:
  - '5.  PCE-Triggered Initial Synchronization

    '
  - contents:
    - "5.1.  Motivation\n   In networks such as optical transport networks, the control
      channel\n   between network nodes can be realized through in-band overhead,
      thus\n   it has limited bandwidth.  With a stateful PCE connected to the\n   network
      via one network node, it is desirable to control the timing\n   of PCC State
      Synchronization so as not to overload the low\n   communication channel available
      in the network during the initial\n   synchronization (be it incremental or
      full) when the session\n   restarts, when there is a comparatively large amount
      of control\n   information needing to be synchronized between the stateful PCE
      and\n   the network.  The method proposed, i.e., allowing PCE to trigger the\n
      \  State Synchronization, is similar to the function proposed in\n   Section
      6 but is used in different scenarios and for different\n   purposes.\n"
    title: 5.1.  Motivation
  - contents:
    - "5.2.  PCE-Triggered Initial State Synchronization Procedure\n   Support of
      PCE-triggered initial State Synchronization is advertised\n   during session
      startup using the TRIGGERED-INITIAL-SYNC (F) bit in\n   the STATEFUL-PCE-CAPABILITY
      TLV (see Section 7).\n   In order to allow a stateful PCE to control the LSP-DB\n
      \  synchronization after establishing a PCEP session, both PCEP speakers\n   MUST
      set the F bit to 1 in the OPEN message.  If the LSP-DB-VERSION\n   TLV is included
      by both PCEP speakers and the TLV value matches, the\n   State Synchronization
      can be skipped as described in Section 3.2.  If\n   the TLV is not included
      or the LSP-DB Version is mismatched, the PCE\n   can trigger the State Synchronization
      process by sending a PCUpd\n   message with PLSP-ID = 0 and SYNC = 1.  The PCUpd
      message SHOULD\n   include an empty Explicit Route Object (ERO) (with no ERO
      sub-object\n   and object length of 4) as its intended path and SHOULD NOT include\n
      \  the optional objects for its attributes for any parameter update.\n   The
      PCC MUST ignore such an update when the SYNC flag is set.  If the\n   TRIGGERED-INITIAL-SYNC
      capability is not advertised by a PCE and the\n   PCC receives a PCUpd with
      the SYNC flag set to 1, the PCC MUST send a\n   PCErr with the SRP-ID-number
      of the PCUpd, Error-type=20, and\n   Error-value=4 'Attempt to trigger a synchronization
      when the PCE\n   triggered synchronization capability has not been advertised'
      (see\n   Section 8.1).  If the TRIGGERED-INITIAL-SYNC capability is advertised\n
      \  by a PCE and the PCC, the PCC MUST NOT trigger State Synchronization\n   on
      its own.  If the PCE receives a PCRpt message before the PCE has\n   triggered
      the State Synchronization, the PCE MUST send a PCErr with\n   Error-type=20
      and Error-value=3 'Attempt to trigger synchronization\n   before PCE trigger'
      (see Section 8.1).\n   In this way, the PCE can control the sequence of LSP
      synchronization\n   among all the PCCs that are re-establishing PCEP sessions
      with it.\n   When the capability of PCE control is enabled, only after a PCC\n
      \  receives this message, it will start sending information to the PCE.\n   This
      PCE-triggering capability can be applied to both full and\n   incremental State
      Synchronization.  If applied to the latter, the\n   PCCs only send information
      that PCE does not possess, which is\n   inferred from the LSP-DB version information
      exchanged in the OPEN\n   message (see Section 4.2 for a detailed procedure).\n
      \  Once the initial State Synchronization is triggered by the PCE, the\n   procedures
      and error checks remain unchanged [RFC8231].\n   If a PCC implementation that
      does not implement this extension should\n   not receive a PCUpd message to
      trigger State Synchronization as per\n   the capability advertisement, but if
      it were to receive it, it will\n   behave as per [RFC8231].\n"
    title: 5.2.  PCE-Triggered Initial State Synchronization Procedure
  title: 5.  PCE-Triggered Initial Synchronization
- contents:
  - '6.  PCE-Triggered Resynchronization

    '
  - contents:
    - "6.1.  Motivation\n   The accuracy of the computations performed by the PCE
      is tied to the\n   accuracy of the view the PCE has on the state of the LSPs.\n
      \  Therefore, it can be beneficial to be able to resynchronize this\n   state
      even after the session has been established.  The PCE may use\n   this approach
      to continuously sanity check its state against the\n   network or to recover
      from error conditions without having to tear\n   down sessions.\n"
    title: 6.1.  Motivation
  - contents:
    - "6.2.  PCE-Triggered State Resynchronization Procedure\n   Support of PCE-triggered
      state resynchronization is advertised by\n   both PCEP speakers during session
      startup using the TRIGGERED-RESYNC\n   (T) bit in the STATEFUL-PCE-CAPABILITY
      TLV (see Section 7).  The PCE\n   can choose to resynchronize its entire LSP-DB
      or a single LSP.\n   To trigger resynchronization for an LSP, the PCE sends
      a Path\n   Computation State Update (PCUpd) for the LSP, with the SYNC flag
      in\n   the LSP object set to 1.  The PCE SHOULD NOT include any parameter\n
      \  updates for the LSP, and the PCC MUST ignore such an update when the\n   SYNC
      flag is set.  The PCC MUST respond with a PCRpt message with the\n   LSP state,
      SYNC flag set to 0 and MUST include the SRP-ID-number of\n   the PCUpd message
      that triggered the resynchronization.  If the PCC\n   cannot find the LSP in
      its database, PCC MUST also set the R (remove)\n   flag [RFC8231] in the LSP
      object in the PCRpt message.\n   The PCE can also trigger resynchronization
      of the entire LSP-DB.  The\n   PCE MUST first mark all LSPs in the LSP-DB that
      were previously\n   reported by the PCC as stale, and then send a PCUpd with
      an LSP\n   object containing a PLSP-ID of 0 and with the SYNC flag set to 1.\n
      \  The PCUpd message MUST include an empty ERO (with no ERO sub-object\n   and
      object length of 4) as its intended path and SHOULD NOT include\n   the optional
      objects for its attributes for any parameter update.\n   The PCC MUST ignore
      such update if the SYNC flag is set.  This PCUpd\n   message is the trigger
      for the PCC to enter the synchronization phase\n   as described in [RFC8231]
      and start sending PCRpt messages.  After\n   the receipt of the end-of-synchronization
      marker, the PCE will purge\n   LSPs that were not refreshed.  The SRP-ID-number
      of the PCUpd that\n   triggered the resynchronization SHOULD be included in
      each of the\n   PCRpt messages.  If the PCC cannot resynchronize the entire
      LSP-DB,\n   the PCC MUST respond with a PCErr message with Error-type=20 and\n
      \  Error-value=5 'cannot complete the State Synchronization' [RFC8231],\n   and
      it MAY terminate the session.  The PCE MUST remove the stale mark\n   for the
      LSPs that were previously reported by the PCC.  Based on the\n   local policy,
      the PCE MAY reattempt synchronization at a later time.\n   If the TRIGGERED-RESYNC
      capability is not advertised by a PCE and the\n   PCC receives a PCUpd with
      the SYNC flag set to 1, it MUST send a\n   PCErr with the SRP-ID-number of the
      PCUpd, Error-type=20, and\n   Error-value=4 'Attempt to trigger a synchronization
      when the PCE\n   triggered synchronization capability has not been advertised'
      (see\n   Section 8.1).\n   Once the state resynchronization is triggered by
      the PCE, the\n   procedures and error checks remain unchanged from the full
      state\n   synchronization [RFC8231].  This would also include the PCE\n   triggering
      multiple state resynchronization requests while\n   synchronization is in progress.\n
      \  If a PCC implementation that does not implement this extension should\n   not
      receive a PCUpd message to trigger resynchronization as per the\n   capability
      advertisement, but if it were to receive it, it will\n   behave as per [RFC8231].\n"
    title: 6.2.  PCE-Triggered State Resynchronization Procedure
  title: 6.  PCE-Triggered Resynchronization
- contents:
  - "7.  Advertising Support of Synchronization Optimizations\n   Support for each
    of the optimizations described in this document\n   requires advertising the corresponding
    capabilities during session\n   establishment time.\n   The STATEFUL-PCE-CAPABILITY
    TLV is defined in [RFC8231].  This\n   document defines the following new flags
    in the\n   STATEFUL-PCE-CAPABILITY TLV:\n        Bit                       Description\n
    \       ------------------------- ---------------------------------\n        30
    \                       S bit (INCLUDE-DB-VERSION)\n        27                        D
    bit (DELTA-LSP-SYNC-CAPABILITY)\n        26                        F bit (TRIGGERED-INITIAL-SYNC)\n
    \       28                        T bit (TRIGGERED-RESYNC)\n   If the S bit (INCLUDE-DB-VERSION)
    is set to 1 by both PCEP speakers,\n   the PCC will include the LSP-DB-VERSION
    TLV in each LSP object.  See\n   Section 3.2 for details.\n   If the D bit (DELTA-LSP-SYNC-CAPABILITY)
    is set to 1 by a PCEP\n   speaker, it indicates that the PCEP speaker allows incremental\n
    \  (delta) State Synchronization.  See Section 4.2 for details.\n   If the F bit
    (TRIGGERED-INITIAL-SYNC) is set to 1 by both PCEP\n   speakers, the PCE SHOULD
    trigger initial (first) State\n   Synchronization.  See Section 5.2 for details.\n
    \  If the T bit (TRIGGERED-RESYNC) is set to 1 by both PCEP speakers,\n   the
    PCE can trigger resynchronization of LSPs at any point in the\n   life of the
    session.  See Section 6.2 for details.\n   See Section 8.3 for IANA allocations.\n"
  title: 7.  Advertising Support of Synchronization Optimizations
- contents:
  - "8.  IANA Considerations\n   IANA has allocated code points for the protocol elements
    defined in\n   this document.\n"
  - contents:
    - "8.1.  PCEP-Error Object\n   IANA has allocated the following values in the
      \"PCEP-ERROR Object\n   Error Types and Values\" registry.\n   Error-Type   Meaning
      \                           Reference\n   ------------------------------------------------------------\n
      \      6        Mandatory Object missing           [RFC5440]\n                Error-value\n
      \               12: LSP-DB-VERSION TLV missing     This document\n       20
      \      LSP State Synchronization Error    [RFC8231]\n                Error-value\n
      \               2: LSP-DB version mismatch.        This document\n                3:
      Attempt to trigger              This document\n                synchronization
      before PCE\n                trigger.\n                4: Attempt to trigger
      a            This document\n                synchronization when the\n                PCE
      triggered synchronization\n                capability has not been\n                advertised.\n
      \               6: Received an invalid             This document\n                LSP-DB
      Version Number.\n                7: Received an invalid             This document\n
      \               Speaker Entity Identifier.\n"
    title: 8.1.  PCEP-Error Object
  - contents:
    - "8.2.  PCEP TLV Type Indicators\n   IANA has allocated the following values
      in the \"PCEP TLV Type\n   Indicators\" registry.\n         Value                     Meaning
      \          Reference\n         ------------------------- ----------------- -------------\n
      \        23                        LSP-DB-VERSION    This document\n         24
      \                       SPEAKER-ENTITY-ID This document\n"
    title: 8.2.  PCEP TLV Type Indicators
  - contents:
    - "8.3.  STATEFUL-PCE-CAPABILITY TLV\n   The STATEFUL-PCE-CAPABILITY TLV is defined
      in [RFC8231].  The\n   \"STATEFUL-PCE-CAPABILITY TLV Flag Field\" registry has
      been created to\n   manage the flags in the TLV.  IANA has allocated the following
      values\n   in this registry.\n    Bit                        Description                Reference\n
      \   -------------------------- -------------------------- -------------\n    26
      \                        TRIGGERED-INITIAL-SYNC     This document\n    27                         DELTA-LSP-SYNC-CAPABILITY
      \ This document\n    28                         TRIGGERED-RESYNC           This
      document\n    30                         INCLUDE-DB-VERSION         This document\n"
    title: 8.3.  STATEFUL-PCE-CAPABILITY TLV
  title: 8.  IANA Considerations
- contents:
  - "9.  Manageability Considerations\n   All manageability requirements and considerations
    listed in [RFC5440]\n   and [RFC8231] apply to PCEP protocol extensions defined
    in this\n   document.  In addition, requirements and considerations listed in\n
    \  this section apply.\n"
  - contents:
    - "9.1.  Control of Function and Policy\n   A PCE or PCC implementation MUST allow
      configuring the State\n   Synchronization optimization capabilities as described
      in this\n   document.  The implementation SHOULD also allow the operator to\n
      \  configure the Speaker Entity Identifier (Section 3.3.2).  Further,\n   the
      operator SHOULD be to be allowed to trigger the resynchronization\n   procedures
      as per Section 6.2.\n"
    title: 9.1.  Control of Function and Policy
  - contents:
    - "9.2.  Information and Data Models\n   An implementation SHOULD allow the operator
      to view the stateful\n   capabilities advertised by each peer and the current
      synchronization\n   status with each peer.  To serve this purpose, the PCEP
      YANG module\n   [PCEP-YANG] can be extended to include advertised stateful\n
      \  capabilities and synchronization status.\n"
    title: 9.2.  Information and Data Models
  - contents:
    - "9.3.  Liveness Detection and Monitoring\n   Mechanisms defined in this document
      do not imply any new liveness\n   detection and monitoring requirements in addition
      to those already\n   listed in [RFC5440].\n"
    title: 9.3.  Liveness Detection and Monitoring
  - contents:
    - "9.4.  Verify Correct Operations\n   Mechanisms defined in this document do
      not imply any new operation\n   verification requirements in addition to those
      already listed in\n   [RFC5440] and [RFC8231].\n"
    title: 9.4.  Verify Correct Operations
  - contents:
    - "9.5.  Requirements on Other Protocols\n   Mechanisms defined in this document
      do not imply any new requirements\n   on other protocols.\n"
    title: 9.5.  Requirements on Other Protocols
  - contents:
    - "9.6.  Impact on Network Operations\n   Mechanisms defined in [RFC5440] and
      [RFC8231] also apply to PCEP\n   extensions defined in this document.\n   The
      State Synchronization optimizations described in this document\n   can result
      in a reduction of the amount of data exchanged and the\n   time taken for a
      stateful PCE to be fully operational when a PCEP\n   session is re-established.
      \ The ability to trigger resynchronization\n   by the PCE can be utilized by
      the operator to sanity check its state\n   and recover from any mismatch in
      state without tearing down the\n   session.\n"
    title: 9.6.  Impact on Network Operations
  title: 9.  Manageability Considerations
- contents:
  - "10.  Security Considerations\n   The security considerations listed in [RFC8231]
    apply to this\n   document as well.  However, this document also introduces some
    new\n   attack vectors.  An attacker could spoof the SPEAKER-ENTITY-ID and\n   pretend
    to be another PCEP speaker.  An attacker may flood the PCC\n   with triggered
    resynchronization requests at a rate that exceeds the\n   PCC's ability to process
    them by either spoofing messages or\n   compromising the PCE itself.  The PCC
    can respond with a PCErr\n   message as described in Section 6.2 and terminate
    the session.  Thus,\n   securing the PCEP session using Transport Layer Security
    (TLS)\n   [PCEPS], as per the recommendations and best current practices in\n
    \  [RFC7525], is RECOMMENDED.  An administrator could also expose the\n   Speaker
    Entity Identifier as part of the certificate, for the peer\n   identity verification.\n"
  title: 10.  Security Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8231]  Crabbe, E., Minei,
      I., Medved, J., and R. Varga, \"Path\n              Computation Element Communication
      Protocol (PCEP)\n              Extensions for Stateful PCE\", RFC 8231,\n              DOI
      10.17487/RFC8231, September 2017,\n              <http://www.rfc-editor.org/info/rfc8231>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [PCEP-YANG]\n              Dhody, D., Hardwick,
      J., Beeram, V., and j.\n              jefftant@gmail.com, \"A YANG Data Model
      for Path\n              Computation Element Communications Protocol (PCEP)\",
      Work\n              in Progress, draft-ietf-pce-pcep-yang-05, July 2017.\n   [PCEPS]
      \   Lopez, D., Dios, O., Wu, Q., and D. Dhody, \"Secure\n              Transport
      for PCEP\", Work in Progress,\n              draft-ietf-pce-pceps-18, September
      2017.\n   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations
      for Secure Use of Transport Layer\n              Security (TLS) and Datagram
      Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,
      May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8051]
      \ Zhang, X., Ed. and I. Minei, Ed., \"Applicability of a\n              Stateful
      Path Computation Element (PCE)\", RFC 8051,\n              DOI 10.17487/RFC8051,
      January 2017,\n              <https://www.rfc-editor.org/info/rfc8051>.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgments\n   We would like to thank Young Lee, Sergio Belotti, and Cyril
    Margaria\n   for their comments and discussions.\n   Thanks to Jonathan Hardwick
    for being the document shepherd and\n   providing comments and guidance.\n   Thanks
    to Tomonori Takeda for the Routing Area Directorate review.\n   Thanks to Adrian
    Farrel for the TSVART review and providing detailed\n   comments and suggestions.\n
    \  Thanks to Daniel Franke for the SECDIR review.\n   Thanks to Alvaro Retana,
    Kathleen Moriarty, and Stephen Farrell for\n   comments during the IESG evaluation.\n
    \  Thanks to Deborah Brungard for being the responsible AD and guiding\n   the
    authors as needed.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   Gang Xie\n   Huawei Technologies\n   F3-5-B R&D Center, Huawei
    Industrial Base, Bantian, Longgang District\n   Shenzhen, Guangdong, 518129\n
    \  China\n   Email: xiegang09@huawei.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Edward Crabbe\n   Oracle\n   Email: edward.crabbe@gmail.com\n
    \  Ina Minei\n   Google, Inc.\n   1600 Amphitheatre Parkway\n   Mountain View,
    CA  94043\n   United States of America\n   Email: inaminei@google.com\n   Jan
    Medved\n   Cisco Systems, Inc.\n   170 West Tasman Dr.\n   San Jose, CA  95134\n
    \  United States of America\n   Email: jmedved@cisco.com\n   Robert Varga\n   Pantheon
    Technologies SRO\n   Mlynske Nivy 56\n   Bratislava  821 05\n   Slovakia\n   Email:
    robert.varga@pantheon.tech\n   Xian Zhang\n   Huawei Technologies\n   F3-5-B R&D
    Center, Huawei Industrial Base, Bantian, Longgang District\n   Shenzhen, Guangdong
    \ 518129\n   China\n   Email: zhang.xian@huawei.com\n   Dhruv Dhody\n   Huawei
    Technologies\n   Divyashree Techno Park, Whitefield\n   Bangalore, Karnataka  560066\n
    \  India\n   Email: dhruv.ietf@gmail.com\n"
  title: Authors' Addresses
