Abstract Deployment of the BGPsec architecture and protocols has many operational considerations.
This document attempts to collect and present the most critical and universal.
Operational practices are expected to evolve as BGPsec is formalized and initially deployed.
Introduction Origin validation based on the Resource Public Key Infrastructure (RPKI)
[RFC6811] is in its early phases.
As BGPsec [RFC8205] may require larger memory and/or more modern CPUs, it expected to be deployed incrementally over a longer time span.
BGPsec is a new protocol with many operational considerations that this document attempts to describe.
As with most operational practices, they will likely change over time.
BGPsec relies on widespread propagation of the RPKI [RFC6480].
How the RPKI is distributed and maintained globally and within an operator's infrastructure may be different for BGPsec than for origin validation.
BGPsec needs to be spoken only by an Autonomous System's (AS's)
It is designed so that it can be used to protect announcements that are originated by resource constrained edge routers.
This has special operational considerations, see Section 6.
Different prefixes may have different timing and replay protection considerations.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
It is assumed that the reader understands BGP [RFC4271], BGPsec [RFC8205], the RPKI [RFC6480], the RPKI Repository Structure [RFC6481], and Route Origin Authorizations (ROAs)
The considerations for RPKI objects (Certificates, Certificate Revocation Lists (CRLs), manifests [RFC6481], and Ghostbusters Records [RFC6493]), Trust Anchor Locators (TALs)
[RFC7730], cache behaviors of synchronization, and validation from the section on RPKI Distribution and Maintenance of [RFC7115] apply.
Specific considerations relating to ROA objects do not apply to this document.
As described in [KEY], BGPsec speaking routers are capable of generating their own public/private key pairs and having their certificates signed and published in the RPKI by the RPKI Certification Authority (CA) system, and/or are given public/private key pairs by the operator.
A site/operator may use a single certificate/key in all their routers, one certificate/key per router, or any granularity in between.
A large operator, concerned that a compromise of one router's key would make other routers vulnerable, may deploy a more complex certificate/key distribution burden to reduce this exposure.
At the other end of the spectrum, an edge site with one or two routers may choose to use a single certificate/key.
In anticipation of possible key compromise, a prudent operator SHOULD pre provision each router's 'next' key in the RPKI so that there is no propagation delay for provisioning the new key.
Within a Network BGPsec is spoken by edge routers in a network, specifically those that border other networks/ASes.
In an AS where edge routers speak BGPsec and, therefore, inject BGPsec paths into the iBGP (internal BGP), Route Reflectors (RRs) MUST have BGPsec enabled if and only if there are eBGP
(external BGP) speakers in their client cone, i.e., an RR client or the transitive closure of a client's customers.
A BGPsec capable router MAY use the data it receives to influence local policy within its network, see Section 7.
In deployment, this policy should fit into the AS's existing policy, preferences, etc.
This allows a network to incrementally deploy BGPsec enabled border routers.
eBGP speakers that face more critical peers or upstreams or downstreams would be candidates for early deployment.
Both securing one's own announcements and validating received announcements should be considered in partial deployment.
An operator should be aware that BGPsec, as any other policy change, can cause traffic shifts in their network.
And, as with normal policy shift practice, a prudent operator has the tools and methods to predict, measure, modify, etc.
On the other hand, an operator wanting to monitor router loading, shifts in traffic, etc., might deploy incrementally while watching those and similar effects.
BGPsec does not sign over communities, so they are not formally trustable.
Additionally, outsourcing verification is not a prudent security practice.
Therefore, an eBGP listener SHOULD NOT strongly trust unsigned security signaling, such as communities, received across a trust boundary.
An edge site that does not provide transit and trusts its upstream(s) may only originate a signed prefix announcement and not validate received announcements.
An operator might need to use hardware with limited resources.
In such cases, BGPsec protocol capability negotiation allows for a resource constrained edge router to hold only its own signing key(s) and sign its announcements, but not receive signed announcements.
Therefore, the router would not have to deal with the majority of the RPKI, potentially saving the need for additional hardware.
As the vast majority of ASes are stubs, and they announce the majority of prefixes, this allows for simpler and less expensive incremental deployment.
It may also mean that edge sites concerned with routing security will be attracted to upstreams that support BGPsec. 7.
As BGPsec signed paths cannot traverse non BGPsec topology, partial BGPsec deployment forms islands of assured paths.
As islands grow to touch each other, they become larger islands.
Unlike origin validation based on the RPKI, BGPsec marks a received announcement as Valid or Not Valid, there is no explicit NotFound state.
In some sense, an unsigned BGP4 path is the equivalent of NotFound.
How this is used in routing is up to the operator's local policy, similar to origin validation as in [RFC6811].
As BGPsec will be rolled out over years and does not allow for intermediate non signing edge routers, coverage will be spotty for a long time.
This presents a dilemma; should a router evaluating an inbound BGPsec PATH as Not Valid be very strict and discard it?
On the other hand, it might be the only path to that prefix, and a very low local preference would cause it to be used and propagated only if there was no alternative.
Either choice is reasonable, but we recommend dropping because of the next point.
Operators should be aware that accepting Not Valid announcements, no matter the local preference, will often be the equivalent of treating them as fully Valid.
Local preference affects only routes to the same set of destinations.
Consider having a Valid announcement from neighbor V for prefix 10.0.0.0/16 and a Not Valid announcement for 10.0.666.0/24 from neighbor I.
If local policy on the router is not configured to discard the Not Valid announcement from I, then the longest match forwarding will send packets to neighbor I no matter the value of local preference.
Validation of signed paths is usually deployed at the eBGP edge.
Local policy on the eBGP edge MAY convey the validation state of a BGP signed path through normal local policy mechanisms, e.g., setting a BGP community for internal use, or modifying a metric value such as local preference or Multi Exit Discriminator (MED).
Some may choose to use the large Local Pref hammer.
Others may choose to let AS path rule and set their internal metric, which comes after AS path in the BGP decision process.
As the mildly stochastic timing of RPKI propagation may cause version skew across routers, an AS Path that does not validate at router R0 might validate at R1.
Therefore, signed paths that are Not Valid and yet propagated (because they are chosen as best path) MUST NOT have signatures stripped and MUST be signed if sent to external BGPsec speakers.
This implies that updates which a speaker judges to be Not Valid MAY be propagated to iBGP peers.
Therefore, unless local policy ensures otherwise, a signed path learned via iBGP may be Not Valid.
If needed, the validation state should be signaled by normal local policy mechanisms such as communities or metrics.
On the other hand, local policy on the eBGP edge might preclude iBGP
or eBGP announcement of signed AS Paths that are Not Valid.
A BGPsec speaker receiving a path SHOULD perform origin validation per [RFC6811] and [RFC7115].
A route server is usually 'transparent', i.e., does not insert an AS into the path so as not to increase the AS hop count, and thereby affect downstream path choices.
But, with BGPsec, a client router R needs to be able to validate paths that are forward signed to R.
But the sending router cannot generate signatures to all the possible clients.
Therefore, a BGPsec aware route server needs to validate the incoming BGPsec PATH and to forward updates that can be validated by clients that must, therefore, know the route server's AS.
This implies that the route server creates signatures per client including its own AS in the BGPsec PATH, forward signing to each client AS, see [RFC8205].
The route server uses a pCount of 0 to not increase the effective AS hop count, thereby retaining the intent of 'transparency'.
If it is known that a BGPsec neighbor is a transparent route server, or otherwise may validly use a pCount of 0 (e.g., see [RFC8206]), the router SHOULD be configured to accept and process a received pCount of 0.
Routers MUST disallow a pCount of 0 by default.
To prevent exposure of the internals of the BGP confederations [RFC5065], a BGPsec speaker exporting to a non member removes all intra confederation Secure Path Segments.
Therefore, signing within the confederation will not cause external confusion even if non  unique private ASes are used.
Notes For protection from attacks replaying BGP data on the order of a day or longer old, rekeying routers with new keys (previously) provisioned in the RPKI
For one approach, see [ROLLOVER].
A router that once negotiated (and/or sent)
BGPsec should not be expected to always do so.
Like the DNS, the Global RPKI presents only a loosely consistent view, depending on timing, updating, fetching, etc.
Thus, one cache or router may have different data about a particular prefix or router than another cache or router.
There is no 'fix' for this
, it is the nature of distributed data with distributed caches.
Operators who manage certificates SHOULD have RPKI Ghostbuster Records (see [RFC6493]), signed indirectly by end entity certificates, for those certificates on which others' routing depends for certificate and/or ROA validation.
Operators should be aware of impending algorithm transitions, which will be rare and slow paced, see [RFC6916].
They should work with their vendors to ensure support for new algorithms.
As a router must evaluate certificates and ROAs that are time dependent, routers' clocks MUST be correct to a tolerance of approximately an hour.
The common approach is for operators to deploy servers that provide time service, such as [RFC5905], to client routers.
If a router has reason to believe its clock is seriously incorrect, e.g., it has a time earlier than 2011, it SHOULD NOT attempt to validate incoming updates.
It SHOULD defer validation until it believes it is within reasonable time tolerance.
This document describes operational considerations for the deployment of BGPsec.
The security considerations for BGPsec are described in [RFC8205].
This document does not require any IANA actions.
