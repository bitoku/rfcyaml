- title: __initial_text__
  contents:
  - "        Automated Certificate Management Environment (ACME) TLS\n   Application-Layer\
    \ Protocol Negotiation (ALPN) Challenge Extension\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a new challenge for the Automated Certificate\n\
    \   Management Environment (ACME) protocol that allows for domain control\n  \
    \ validation using TLS.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8737.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  TLS with Application-Layer\
    \ Protocol Negotiation (TLS ALPN)\n           Challenge\n   4.  acme-tls/1 Protocol\
    \ Definition\n   5.  Security Considerations\n   6.  IANA Considerations\n   \
    \  6.1.  SMI Security for PKIX Certificate Extension OID\n     6.2.  ALPN Protocol\
    \ ID\n     6.3.  ACME Validation Method\n   7.  Normative References\n   Appendix\
    \ A.  Design Rationale\n   Acknowledgments\n   Author's Address\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Automatic Certificate Management Environment (ACME)\
    \ [RFC8555]\n   specification describes methods for validating control of domain\n\
    \   names via HTTP and DNS.  Deployment experience has shown it is also\n   useful\
    \ to be able to validate domain control using the TLS layer\n   alone.  In particular,\
    \ this allows hosting providers, Content\n   Distribution Networks (CDNs), and\
    \ TLS-terminating load balancers to\n   validate domain control without modifying\
    \ the HTTP handling behavior\n   of their backends.\n   This document specifies\
    \ a new TLS-based challenge type, tls-alpn-01.\n   This challenge requires negotiating\
    \ a new application-layer protocol\n   using the TLS Application-Layer Protocol\
    \ Negotiation (ALPN) Extension\n   [RFC7301].  Because this protocol does not\
    \ build on a pre-existing\n   deployment base, the ability to complete tls-alpn-01\
    \ challenges\n   requires changes by service providers, making it explicitly an\
    \ opt-in\n   process.  Because service providers must proactively deploy new code\n\
    \   in order to implement tls-alpn-01, we can specify stronger controls\n   in\
    \ that code, resulting in a stronger validation method.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n"
- title: 3.  TLS with Application-Layer Protocol Negotiation (TLS ALPN) Challenge
  contents:
  - "3.  TLS with Application-Layer Protocol Negotiation (TLS ALPN) Challenge\n  \
    \ The TLS with Application-Layer Protocol Negotiation (TLS ALPN)\n   validation\
    \ method proves control over a domain name by requiring the\n   ACME client to\
    \ configure a TLS server to respond to specific\n   connection attempts using\
    \ the ALPN extension with identifying\n   information.  The ACME server validates\
    \ control of the domain name by\n   connecting to a TLS server at one of the addresses\
    \ resolved for the\n   domain name and verifying that a certificate with specific\
    \ content is\n   presented.\n   The tls-alpn-01 ACME challenge object has the\
    \ following format:\n   type (required, string):  The string \"tls-alpn-01\"\n\
    \   token (required, string):  A random value that uniquely identifies\n     \
    \ the challenge.  This value MUST have at least 128 bits of entropy.\n      It\
    \ MUST NOT contain any characters outside the base64url alphabet\n      as described\
    \ in Section 5 of [RFC4648].  Trailing '=' padding\n      characters MUST be stripped.\
    \  See [RFC4086] for additional\n      information on randomness requirements.\n\
    \   The client prepares for validation by constructing a self-signed\n   certificate\
    \ that MUST contain an acmeIdentifier extension and a\n   subjectAlternativeName\
    \ extension [RFC5280].  The\n   subjectAlternativeName extension MUST contain\
    \ a single dNSName entry\n   where the value is the domain name being validated.\
    \  The\n   acmeIdentifier extension MUST contain the SHA-256 digest [FIPS180-4]\n\
    \   of the key authorization [RFC8555] for the challenge.  The\n   acmeIdentifier\
    \ extension MUST be critical so that the certificate\n   isn't inadvertently used\
    \ by non-ACME software.\n   The acmeIdentifier extension is identified by the\
    \ id-pe-\n   acmeIdentifier object identifier (OID) in the id-pe arc [RFC5280]:\n\
    \   id-pe-acmeIdentifier OBJECT IDENTIFIER ::=  { id-pe 31 }\n   The extension\
    \ has the following ASN.1 [X.680] format :\n   Authorization ::= OCTET STRING\
    \ (SIZE (32))\n   The extnValue of the id-pe-acmeIdentifier extension is the ASN.1\
    \ DER\n   encoding [X.690] of the Authorization structure, which contains the\n\
    \   SHA-256 digest of the key authorization for the challenge.\n   Once this certificate\
    \ has been created, it MUST be provisioned such\n   that it is returned during\
    \ a TLS handshake where the \"acme-tls/1\"\n   application-layer protocol has\
    \ been negotiated and a Server Name\n   Indication (SNI) extension [RFC6066] has\
    \ been provided containing the\n   domain name being validated.\n   A client responds\
    \ by POSTing an empty JSON object ({}) to the\n   challenge URL to acknowledge\
    \ that the challenge is ready to be\n   validated by the server.  The base64url\
    \ encoding of the protected\n   headers and payload is described in Section 6.1\
    \ of [RFC8555].\n   POST /acme/authz/1234/1\n   Host: example.com\n   Content-Type:\
    \ application/jose+json\n   {\n     \"protected\": base64url({\n       \"alg\"\
    : \"ES256\",\n       \"kid\": \"https://example.com/acme/acct/1\",\n       \"\
    nonce\": \"JHb54aT_KTXBWQOzGYkt9A\",\n       \"url\": \"https://example.com/acme/authz/1234/1\"\
    \n     }),\n     \"payload\": base64url({}),\n     \"signature\": \"Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4\"\
    \n   }\n   On receiving this request from a client, the server constructs and\n\
    \   stores the key authorization from the challenge \"token\" value and the\n\
    \   current client account key.\n   The server then verifies the client's control\
    \ over the domain by\n   verifying that the TLS server was configured as expected\
    \ using the\n   following steps:\n   1.  The ACME server computes the expected\
    \ SHA-256 digest of the key\n       authorization.\n   2.  The ACME server resolves\
    \ the domain name being validated and\n       chooses one of the IP addresses\
    \ returned for validation (the\n       server MAY validate against multiple addresses\
    \ if more than one\n       is returned).\n   3.  The ACME server initiates a TLS\
    \ connection to the chosen IP\n       address.  This connection MUST use TCP port\
    \ 443.  The ACME server\n       MUST provide an ALPN extension with the single\
    \ protocol name\n       \"acme-tls/1\" and an SNI extension containing only the\
    \ domain name\n       being validated during the TLS handshake.\n   4.  The ACME\
    \ server verifies that during the TLS handshake the\n       application-layer\
    \ protocol \"acme-tls/1\" was successfully\n       negotiated (and that the ALPN\
    \ extension contained only the value\n       \"acme-tls/1\") and that the certificate\
    \ returned contains:\n       *  a subjectAltName extension containing the dNSName\
    \ being\n          validated and no other entries\n       *  a critical acmeIdentifier\
    \ extension containing the expected\n          SHA-256 digest computed in step\
    \ 1\n   The comparison of dNSNames MUST be case insensitive [RFC4343].  Note\n\
    \   that as ACME doesn't support Unicode identifiers, all dNSNames MUST\n   be\
    \ encoded using the rules of [RFC3492].\n   If all of the above steps succeed,\
    \ then the validation is successful.\n   Otherwise, it fails.\n"
- title: 4.  acme-tls/1 Protocol Definition
  contents:
  - "4.  acme-tls/1 Protocol Definition\n   The \"acme-tls/1\" protocol MUST only\
    \ be used for validating ACME tls-\n   alpn-01 challenges.  The protocol consists\
    \ of a TLS handshake in\n   which the required validation information is transmitted.\
    \  The \"acme-\n   tls/1\" protocol does not carry application data.  Once the\
    \ handshake\n   is completed, the client MUST NOT exchange any further data with\
    \ the\n   server and MUST immediately close the connection.  While this\n   protocol\
    \ uses X.509 certificates, it does not use the authentication\n   method described\
    \ in [RFC5280] and, as such, does not require a valid\n   signature on the provided\
    \ certificate nor require the TLS handshake\n   to complete successfully.  An\
    \ ACME server may wish to use an off-the-\n   shelf TLS stack where it is not\
    \ simple to allow these divergences in\n   the protocol as defined.  Because of\
    \ this, an ACME server MAY choose\n   to withhold authorization if either the\
    \ certificate signature is\n   invalid or the handshake doesn't fully complete.\n\
    \   ACME servers that implement \"acme-tls/1\" MUST only negotiate TLS 1.2\n \
    \  [RFC5246] or higher when connecting to clients for validation.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The design of this challenge relies on some assumptions\
    \ centered\n   around how an HTTPS server behaves during validation.\n   The first\
    \ assumption is that when an HTTPS server is being used to\n   serve content for\
    \ multiple DNS names from a single IP address, it\n   properly segregates control\
    \ of those names to the users that own\n   them.  This means that if User A registers\
    \ Host A and User B\n   registers Host B, the HTTPS server should not allow a\
    \ TLS request\n   using an SNI value for Host A to be served by User B or a TLS\n\
    \   connection with a server_name extension identifying Host B to be\n   answered\
    \ by User A.  If the HTTPS server allows User B to serve this\n   request, it\
    \ allows them to illegitimately validate control of Host A\n   to the ACME server.\n\
    \   The second assumption is that a server will not violate [RFC7301] by\n   blindly\
    \ agreeing to use the \"acme-tls/1\" protocol without actually\n   understanding\
    \ it.\n   To further mitigate the risk of users claiming domain names used by\n\
    \   other users on the same infrastructure hosting providers, CDNs, and\n   other\
    \ service providers SHOULD NOT allow users to provide their own\n   certificates\
    \ for the TLS ALPN validation process.  If providers wish\n   to implement TLS\
    \ ALPN validation, they SHOULD only generate\n   certificates used for validation\
    \ themselves and not expose this\n   functionality to users.\n   The extensions\
    \ to the ACME protocol described in this document build\n   upon the Security\
    \ Considerations and threat model defined in\n   Section 10.1 of [RFC8555].\n"
- title: 6.  IANA Considerations
  contents:
  - '6.  IANA Considerations

    '
- title: 6.1.  SMI Security for PKIX Certificate Extension OID
  contents:
  - "6.1.  SMI Security for PKIX Certificate Extension OID\n   Within the \"Structure\
    \ of Management Information (SMI) Numbers (MIB\n   Module Registrations)\" registry,\
    \ the following entry has been added\n   to the \"SMI Security for PKIX Certificate\
    \ Extension\"\n   (1.3.6.1.5.5.7.1) table.\n              | Decimal | Description\
    \          | References |\n              | 31      | id-pe-acmeIdentifier | RFC\
    \ 8737   |\n"
- title: 6.2.  ALPN Protocol ID
  contents:
  - "6.2.  ALPN Protocol ID\n   Within the \"Transport Layer Security (TLS) Extensions\"\
    \ registry, the\n   following entry has been added to the \"TLS Application-Layer\
    \ Protocol\n   Negotiation (ALPN) Protocol IDs\" table.\n      | Protocol   |\
    \ Identification Sequence            | Reference |\n      | acme-tls/1 | 0x61\
    \ 0x63 0x6d 0x65 0x2d 0x74 0x6c | RFC 8737  |\n      |            | 0x73 0x2f\
    \ 0x31 (\"acme-tls/1\")      |           |\n"
- title: 6.3.  ACME Validation Method
  contents:
  - "6.3.  ACME Validation Method\n   Within the \"Automated Certificate Management\
    \ Environment (ACME)\n   Protocol\" registry, the following entry has been added\
    \ to the \"ACME\n   Validation Methods\" registry.\n           | Label       |\
    \ Identifier Type | ACME | Reference |\n           | tls-alpn-01 | dns       \
    \      | Y    | RFC 8737  |\n"
- title: 7.  Normative References
  contents:
  - "7.  Normative References\n   [FIPS180-4]\n              National Institute of\
    \ Standards and Technology (NIST),\n              \"Secure Hash Standard (SHS)\"\
    , FIPS PUB 180-4,\n              DOI 10.6028/NIST.FIPS.180-4, August 2015,\n \
    \             <https://nvlpubs.nist.gov/nistpubs/FIPS/\n              NIST.FIPS.180-4.pdf>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3492]\
    \  Costello, A., \"Punycode: A Bootstring encoding of Unicode\n              for\
    \ Internationalized Domain Names in Applications\n              (IDNA)\", RFC\
    \ 3492, DOI 10.17487/RFC3492, March 2003,\n              <https://www.rfc-editor.org/info/rfc3492>.\n\
    \   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n             \
    \ \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n             \
    \ DOI 10.17487/RFC4086, June 2005,\n              <https://www.rfc-editor.org/info/rfc4086>.\n\
    \   [RFC4343]  Eastlake 3rd, D., \"Domain Name System (DNS) Case\n           \
    \   Insensitivity Clarification\", RFC 4343,\n              DOI 10.17487/RFC4343,\
    \ January 2006,\n              <https://www.rfc-editor.org/info/rfc4343>.\n  \
    \ [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n          \
    \    Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006,\n            \
    \  <https://www.rfc-editor.org/info/rfc4648>.\n   [RFC5246]  Dierks, T. and E.\
    \ Rescorla, \"The Transport Layer Security\n              (TLS) Protocol Version\
    \ 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August 2008,\n       \
    \       <https://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]  Cooper, D.,\
    \ Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk,\
    \ \"Internet X.509 Public Key\n              Infrastructure Certificate and Certificate\
    \ Revocation List\n              (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280,\
    \ May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n   [RFC6066]\
    \  Eastlake 3rd, D., \"Transport Layer Security (TLS)\n              Extensions:\
    \ Extension Definitions\", RFC 6066,\n              DOI 10.17487/RFC6066, January\
    \ 2011,\n              <https://www.rfc-editor.org/info/rfc6066>.\n   [RFC7301]\
    \  Friedl, S., Popov, A., Langley, A., and E. Stephan,\n              \"Transport\
    \ Layer Security (TLS) Application-Layer Protocol\n              Negotiation Extension\"\
    , RFC 7301, DOI 10.17487/RFC7301,\n              July 2014, <https://www.rfc-editor.org/info/rfc7301>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8555]  Barnes,\
    \ R., Hoffman-Andrews, J., McCarney, D., and J.\n              Kasten, \"Automatic\
    \ Certificate Management Environment\n              (ACME)\", RFC 8555, DOI 10.17487/RFC8555,\
    \ March 2019,\n              <https://www.rfc-editor.org/info/rfc8555>.\n   [X.680]\
    \    ITU-T, \"Information technology -- Abstract Syntax Notation\n           \
    \   One (ASN.1): Specification of basic notation\", ITU-T\n              Recommendation\
    \ X.680, ISO/IEC 8824-1:2015, August 2015,\n              <https://www.itu.int/rec/T-REC-X.680-201508-I/en>.\n\
    \   [X.690]    ITU-T, \"Information Technology -- ASN.1 encoding rules:\n    \
    \          Specification of Basic Encoding Rules (BER), Canonical\n          \
    \    Encoding Rules (CER) and Distinguished Encoding Rules\n              (DER)\"\
    , ITU-T Recommendation X.690, ISO/IEC 8825-1:2015,\n              August 2015,\n\
    \              <https://www.itu.int/rec/T-REC-X.690-201508-I/en>.\n"
- title: Appendix A.  Design Rationale
  contents:
  - "Appendix A.  Design Rationale\n   The TLS ALPN challenge exists to iterate on\
    \ the TLS SNI challenge\n   defined in the early ACME drafts.  The TLS SNI challenge\
    \ was\n   convenient for service providers who were either operating large TLS-\n\
    \   layer load balancing systems at which they wanted to perform\n   validation\
    \ or running servers fronting large numbers of DNS names\n   from a single host\
    \ as it allowed validation purely within the TLS\n   layer.  The value provided\
    \ by the TLS SNI challenge was considered\n   large enough that this document\
    \ was written in order to provide a new\n   challenge type that addressed the\
    \ existing security concerns.\n   A security issue in the TLS SNI challenge was\
    \ discovered by Frans\n   Rosen, which allowed users of various service providers\
    \ to\n   illegitimately validate control of the DNS names of other users of\n\
    \   the provider.  When the TLS SNI challenge was designed, it was\n   assumed\
    \ that a user would only be able to respond to TLS traffic via\n   SNI for domain\
    \ names they had registered with a service provider\n   (i.e., if a user registered\
    \ 'a.example', they would only be able to\n   respond to SNI requests for 'a.example'\
    \ and not for SNI requests for\n   'b.example').  It turns out that a number of\
    \ large service providers\n   do not honor this property.  Because of this, users\
    \ were able to\n   respond to SNI requests for the names used by the TLS SNI challenge\n\
    \   validation process.  This meant that (1) if User A and User B had\n   registered\
    \ Host A and Host B, respectively, User A would be able to\n   claim the constructed\
    \ SNI challenge name for Host B, and (2) when the\n   validation connection was\
    \ made, User A would be able to answer,\n   thereby proving 'control' of Host\
    \ B.  As the SNI name used was a\n   subdomain of the domain name being validated,\
    \ rather than the domain\n   name itself, it was likely to not already be registered\
    \ with the\n   service provider for traffic routing, making it much easier for\
    \ a\n   hijack to occur.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The author would like to thank all those that provided design\n\
    \   insights and editorial review of this document, including Richard\n   Barnes,\
    \ Ryan Hurst, Adam Langley, Ryan Sleevi, Jacob Hoffman-Andrews,\n   Daniel McCarney,\
    \ Marcin Walas, Martin Thomson, and especially Frans\n   Rosen, who discovered\
    \ the vulnerability in the TLS SNI method that\n   necessitated the writing of\
    \ this specification.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Roland Bracewell Shoemaker\n"
