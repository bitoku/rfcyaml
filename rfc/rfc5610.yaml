- title: __initial_text__
  contents:
  - "                    Exporting Type Information for\n        IP Flow Information\
    \ Export (IPFIX) Information Elements\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an extension to the IP Flow Information\n\
    \   Export (IPFIX) protocol, which is used to represent and transmit data\n  \
    \ from IP flow measurement devices for collection, storage, and\n   analysis,\
    \ to allow the encoding of IPFIX Information Model properties\n   within an IPFIX\
    \ Message stream.  This enables the export of extended\n   type information for\
    \ enterprise-specific Information Elements and the\n   storage of such information\
    \ within IPFIX Files, facilitating\n   interoperability and reusability among\
    \ a wide variety of applications\n   and tools.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  IPFIX Documents Overview . . . . . . . . . . . .\
    \ . . . . .  4\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   3.  Type Information Export  . . . . . . . . . . . . . . . .\
    \ . . .  5\n     3.1.  informationElementDataType . . . . . . . . . . . . . .\
    \ . .  5\n     3.2.  informationElementDescription  . . . . . . . . . . . . .\
    \ .  6\n     3.3.  informationElementName . . . . . . . . . . . . . . . . . .\
    \  7\n     3.4.  informationElementRangeBegin . . . . . . . . . . . . . . .  7\n\
    \     3.5.  informationElementRangeEnd . . . . . . . . . . . . . . . .  7\n  \
    \   3.6.  informationElementSemantics  . . . . . . . . . . . . . . .  8\n    \
    \ 3.7.  informationElementUnits  . . . . . . . . . . . . . . . . .  9\n     3.8.\
    \  privateEnterpriseNumber  . . . . . . . . . . . . . . . . .  9\n     3.9.  Information\
    \ Element Type Options Template  . . . . . . . . 10\n     3.10. Data Type and\
    \ Semantics Restrictions . . . . . . . . . . . 12\n   4.  Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 13\n   5.  IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . . 14\n   6.  Acknowledgements . . . . . .\
    \ . . . . . . . . . . . . . . . . . 15\n   7.  References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 15\n     7.1.  Normative References . . . .\
    \ . . . . . . . . . . . . . . . 15\n     7.2.  Informative References . . . .\
    \ . . . . . . . . . . . . . . 16\n   Appendix A.  Examples  . . . . . . . . .\
    \ . . . . . . . . . . . . . 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IP Flow Information Export (IPFIX) provides a template mechanism\
    \ for\n   the flexible description of Data Records, by defining a record as a\n\
    \   collection of Information Elements defined in an IANA registry,\n   However,\
    \ these Templates provide limited information about the type\n   of described\
    \ data; indeed, they encode only the size of the fields\n   defined by these Information\
    \ Elements.  There presently exists no\n   mechanism to provide full type information\
    \ for these Information\n   Elements, as is defined for the Information Elements\
    \ in the IPFIX\n   Information Model [RFC5102].\n   This especially limits the\
    \ interoperability of enterprise-specific\n   Information Elements.  It is not\
    \ possible to use analysis tools on\n   IPFIX records containing these partially\
    \ defined Information Elements\n   that have not been developed with a priori\
    \ knowledge of their types,\n   since such tools will not be able to decode them;\
    \ these tools can\n   only treat and store them as opaque octet arrays.  However,\
    \ if richer\n   information is available, additional operations such as efficient\n\
    \   storage, display, and limited analysis of records containing\n   enterprise-specific\
    \ Information Elements become possible, even for\n   Collecting Processes that\
    \ have not been specifically developed to\n   understand them.\n   This document\
    \ defines a general mechanism to encode the full set of\n   properties available\
    \ for the definition of Information Elements\n   within the IPFIX Information\
    \ Model inline within an IPFIX Message\n   stream using IPFIX Options.  This mechanism\
    \ may be used to fully\n   define type information for Information Elements used\
    \ within a\n   message stream, without resorting to an external reference or\n\
    \   reliance on out-of-band configuration, thereby improving the\n   interoperability\
    \ of enterprise-specific Information Elements.\n   Note that the solution described\
    \ in this document is not intended as\n   a replacement for registration with\
    \ IANA of generally useful\n   Information Elements.  It introduces overhead and\
    \ does not lead to\n   real interoperability as provided by standardization. \
    \ Therefore, we\n   highly recommend standardizing all new generally useful Information\n\
    \   Elements by registering them with IANA.  Standardization is\n   straightforward,\
    \ and the type information that needs to be specified\n   in order to support\
    \ the proposed solution provides a perfect basis\n   for the description required\
    \ for standardizing the Information\n   Element.\n   It might happen that an Information\
    \ Element previously described by\n   the mechanism in this document later becomes\
    \ an IANA-registered,\n   standard Information Element.  In such environments,\
    \ old and new\n   versions of the Information Element can coexist.  A translation\n\
    \   between Information Elements expressed by the described solution and\n   standardized\
    \ Information Elements is therefore not necessary and is\n   out of scope for\
    \ this document.\n"
- title: 1.1.  IPFIX Documents Overview
  contents:
  - "1.1.  IPFIX Documents Overview\n   \"Specification of the IP Flow Information\
    \ Export (IPFIX) Protocol for\n   the Exchange of IP Traffic Flow Information\"\
    \ [RFC5101] (informally,\n   the IPFIX Protocol document) and its associated documents\
    \ define the\n   IPFIX Protocol, which provides network engineers and administrators\n\
    \   with access to IP traffic flow information.\n   \"Architecture for IP Flow\
    \ Information Export\" [RFC5470] (the IPFIX\n   Architecture document) defines\
    \ the architecture for the export of\n   measured IP flow information out of an\
    \ IPFIX Exporting Process to an\n   IPFIX Collecting Process, and the basic terminology\
    \ used to describe\n   the elements of this architecture, per the requirements\
    \ defined in\n   \"Requirements for IP Flow Information Export\" [RFC3917].  The\
    \ IPFIX\n   Protocol document [RFC5101] then covers the details of the method\
    \ for\n   transporting IPFIX Data Records and Templates via a congestion-aware\n\
    \   transport protocol from an IPFIX Exporting Process to an IPFIX\n   Collecting\
    \ Process.\n   \"Information Model for IP Flow Information Export\" [RFC5102]\n\
    \   (informally, the IPFIX Information Model document) describes the\n   Information\
    \ Elements used by IPFIX, including details on Information\n   Element naming,\
    \ numbering, and data type encoding.\n   This document references the Protocol\
    \ and Architecture documents for\n   terminology and extends the IPFIX Information\
    \ Model to provide new\n   Information Elements for the representation of Information\
    \ Element\n   properties.  It draws data type definitions and data type semantics\n\
    \   definitions from the Information Model; the encodings of these data\n   types\
    \ are defined in [RFC5101].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Terms used in this document that are defined in the Terminology\n\
    \   section of the IPFIX Protocol [RFC5101] document are to be\n   interpreted\
    \ as defined there.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n"
- title: 3.  Type Information Export
  contents:
  - "3.  Type Information Export\n   This section describes the mechanism used to\
    \ encode Information\n   Element type information within an IPFIX Message stream.\
    \  This\n   mechanism consists of an Options Template Record used to define\n\
    \   Information Element type records, and a set of Information Elements\n   required\
    \ by these type records.  We first specify the necessary\n   Information Elements,\
    \ followed by the structure of the Options\n   Template describing the type records.\n\
    \   Note that Information Element type records require one Information\n   Element,\
    \ informationElementId, that is defined in the Packet Sampling\n   (PSAMP) Information\
    \ Model [RFC5477].  This Information Element\n   supports references only to IANA-defined\
    \ Information Elements; the\n   privateEnterpriseNumber Information Element is\
    \ required alongside\n   informationElementId to describe enterprise-specific\
    \ Information\n   Elements.\n"
- title: 3.1.  informationElementDataType
  contents:
  - "3.1.  informationElementDataType\n   Description:   A description of the abstract\
    \ data type of an IPFIX\n      information element.  These are taken from the\
    \ abstract data types\n      defined in Section 3.1 of the IPFIX Information Model\
    \ [RFC5102];\n      see that section for more information on the types described\n\
    \      below.  This field may take the values defined in Table 1 below.\n    \
    \                 +-------+----------------------+\n                     | Value\
    \ | Description          |\n                     +-------+----------------------+\n\
    \                     | 0     | octetArray           |\n                     |\
    \ 1     | unsigned8            |\n                     | 2     | unsigned16  \
    \         |\n                     | 3     | unsigned32           |\n         \
    \            | 4     | unsigned64           |\n                     | 5     |\
    \ signed8              |\n                     | 6     | signed16            \
    \ |\n                     | 7     | signed32             |\n                 \
    \    | 8     | signed64             |\n                     | 9     | float32\
    \              |\n                     | 10    | float64              |\n    \
    \                 | 11    | boolean              |\n                     | 12\
    \    | macAddress           |\n                     | 13    | string         \
    \      |\n                     | 14    | dateTimeSeconds      |\n            \
    \         | 15    | dateTimeMilliseconds |\n                     | 16    | dateTimeMicroseconds\
    \ |\n                     | 17    | dateTimeNanoseconds  |\n                 \
    \    | 18    | ipv4Address          |\n                     | 19    | ipv6Address\
    \          |\n                     +-------+----------------------+\n        \
    \                 Table 1: IE Data Type Values\n      These types are registered\
    \ in the IANA IPFIX Information Element\n      Data Type subregistry.  This subregistry\
    \ is intended to assign\n      numbers for type names, not to provide a mechanism\
    \ for adding data\n      types to the IPFIX Protocol, and as such requires a Standards\n\
    \      Action [RFC5226] to modify.\n   Abstract Data Type:   unsigned8\n   ElementId:\
    \   339\n   Status:   current\n   Reference:   Section 3.1 of the IPFIX Information\
    \ Model [RFC5102]\n"
- title: 3.2.  informationElementDescription
  contents:
  - "3.2.  informationElementDescription\n   Description:   A UTF-8 [RFC3629] encoded\
    \ Unicode string containing a\n      human-readable description of an Information\
    \ Element.  The content\n      of the informationElementDescription MAY be annotated\
    \ with one or\n      more language tags [RFC4646], encoded in-line [RFC2482] within\
    \ the\n      UTF-8 string, in order to specify the language in which the\n   \
    \   description is written.  Description text in multiple languages\n      MAY\
    \ tag each section with its own language tag; in this case, the\n      description\
    \ information in each language SHOULD have equivalent\n      meaning.  In the\
    \ absence of any language tag, the \"i-default\"\n      [RFC2277] language SHOULD\
    \ be assumed.  See the Security\n      Considerations (Section 4) for notes on\
    \ string handling for\n      Information Element type records.\n   Abstract Data\
    \ Type:   string\n   ElementId:   340\n   Status:   current\n"
- title: 3.3.  informationElementName
  contents:
  - "3.3.  informationElementName\n   Description:   A UTF-8 [RFC3629] encoded Unicode\
    \ string containing\n      the name of an Information Element, intended as a simple\n\
    \      identifier.  See the Security Considerations (Section 4) for notes\n  \
    \    on string handling for Information Element type records.\n   Abstract Data\
    \ Type:   string\n   ElementId:   341\n   Status:   current\n"
- title: 3.4.  informationElementRangeBegin
  contents:
  - "3.4.  informationElementRangeBegin\n   Description:   Contains the inclusive\
    \ low end of the range of\n      acceptable values for an Information Element.\n\
    \   Abstract Data Type:   unsigned64\n   Data Type Semantics:   quantity\n   ElementId:\
    \   342\n   Status:   current\n"
- title: 3.5.  informationElementRangeEnd
  contents:
  - "3.5.  informationElementRangeEnd\n   Description:   Contains the inclusive high\
    \ end of the range of\n      acceptable values for an Information Element.\n \
    \  Abstract Data Type:   unsigned64\n   Data Type Semantics:   quantity\n   ElementId:\
    \   343\n   Status:   current\n"
- title: 3.6.  informationElementSemantics
  contents:
  - "3.6.  informationElementSemantics\n   Description:   A description of the semantics\
    \ of an IPFIX Information\n      Element.  These are taken from the data type\
    \ semantics defined in\n      Section 3.2 of the IPFIX Information Model [RFC5102];\
    \ see that\n      section for more information on the types described below. \
    \ This\n      field may take the values in Table 2 below.  The special value\n\
    \      0x00 (default) is used to note that no semantics apply to the\n      field;\
    \ it cannot be manipulated by a Collecting Process or File\n      Reader that\
    \ does not understand it a priori.\n                         +-------+--------------+\n\
    \                         | Value | Description  |\n                         +-------+--------------+\n\
    \                         | 0     | default      |\n                         |\
    \ 1     | quantity     |\n                         | 2     | totalCounter |\n\
    \                         | 3     | deltaCounter |\n                         |\
    \ 4     | identifier   |\n                         | 5     | flags        |\n\
    \                         +-------+--------------+\n                         Table\
    \ 2: IE Semantics Values\n      These semantics are registered in the IANA IPFIX\
    \ Information\n      Element Semantics subregistry.  This subregistry is intended\
    \ to\n      assign numbers for semantics names, not to provide a mechanism for\n\
    \      adding semantics to the IPFIX Protocol, and as such requires a\n      Standards\
    \ Action [RFC5226] to modify.\n   Abstract Data Type:   unsigned8\n   ElementId:\
    \   344\n   Status:   current\n   Reference:   Section 3.2 of the IPFIX Information\
    \ Model [RFC5102]\n"
- title: 3.7.  informationElementUnits
  contents:
  - "3.7.  informationElementUnits\n   Description:   A description of the units of\
    \ an IPFIX Information\n      Element.  These correspond to the units implicitly\
    \ defined in the\n      Information Element definitions in Section 5 of the IPFIX\n\
    \      Information Model [RFC5102]; see that section for more information\n  \
    \    on the types described below.  This field may take the values in\n      Table\
    \ 3 below; the special value 0x00 (none) is used to note that\n      the field\
    \ is unitless.\n           +-------+---------------+---------------------------+\n\
    \           | Value | Name          | Notes                     |\n          \
    \ +-------+---------------+---------------------------+\n           | 0     |\
    \ none          |                           |\n           | 1     | bits     \
    \     |                           |\n           | 2     | octets        |    \
    \                       |\n           | 3     | packets       |              \
    \             |\n           | 4     | flows         |                        \
    \   |\n           | 5     | seconds       |                           |\n    \
    \       | 6     | milliseconds  |                           |\n           | 7\
    \     | microseconds  |                           |\n           | 8     | nanoseconds\
    \   |                           |\n           | 9     | 4-octet words | for IPv4\
    \ header length    |\n           | 10    | messages      | for reliability reporting\
    \ |\n           | 11    | hops          | for TTL                   |\n      \
    \     | 12    | entries       | for MPLS label stack      |\n           +-------+---------------+---------------------------+\n\
    \                           Table 3: IE Units Values\n      These types are registered\
    \ in the IANA IPFIX Information Element\n      Units subregistry; new types may\
    \ be added on a First Come First\n      Served [RFC5226] basis.\n   Abstract Data\
    \ Type:   unsigned16\n   ElementId:   345\n   Status:   current\n   Reference:\
    \   Section 5 of the IPFIX Information Model [RFC5102]\n"
- title: 3.8.  privateEnterpriseNumber
  contents:
  - "3.8.  privateEnterpriseNumber\n   Description:   A private enterprise number,\
    \ as assigned by IANA.\n      Within the context of an Information Element Type\
    \ record, this\n      element can be used along with the informationElementId\
    \ element to\n      scope properties to a specific Information Element.  To export\n\
    \      type information about an IANA-assigned Information Element, set\n    \
    \  the privateEnterpriseNumber to 0, or do not export the\n      privateEnterpriseNumber\
    \ in the type record.  To export type\n      information about an enterprise-specific\
    \ Information Element,\n      export the enterprise number in privateEnterpriseNumber,\
    \ and\n      export the Information Element number with the Enterprise bit\n \
    \     cleared in informationElementId.  The Enterprise bit in the\n      associated\
    \ informationElementId Information Element MUST be\n      ignored by the Collecting\
    \ Process.\n   Abstract Data Type:   unsigned32\n   Data Type Semantics:   identifier\n\
    \   ElementId:   346\n   Status:   current\n   Reference:   Sections 3.2 and 3.4.1\
    \ of the IPFIX Protocol [RFC5101];\n      Section 8.2.3 of the PSAMP Information\
    \ Model [RFC5477].\n"
- title: 3.9.  Information Element Type Options Template
  contents:
  - "3.9.  Information Element Type Options Template\n   The Information Element Type\
    \ Options Template attaches type\n   information to Information Elements used\
    \ within Template Records, as\n   scoped to an Observation Domain within a Transport\
    \ Session.  This\n   provides a mechanism for representing an IPFIX Information\
    \ Model\n   inline within an IPFIX Message stream.  Data Records described by\n\
    \   this template are referred to as Information Element type records.\n   In\
    \ deployments in which interoperability across vendor\n   implementations of IPFIX\
    \ is important, an Exporting Process exporting\n   data using Templates containing\
    \ enterprise-specific Information\n   Elements SHOULD export an Information Element\
    \ type record for each\n   enterprise-specific Information Element it exports.\
    \  Collecting\n   Processes MAY use these type records to improve handling of\
    \ unknown\n   enterprise-specific Information Elements.  Exporting Processes using\n\
    \   enterprise-specific Information Elements to implement proprietary\n   features\
    \ MAY omit type records for those Information Elements.\n   Information Element\
    \ type records MUST be handled by Collecting\n   Processes as scoped to the Transport\
    \ Session in which they are sent;\n   this facility is not intended to provide\
    \ a method for the permanent\n   definition of Information Elements.\n   Similarly,\
    \ for security reasons, type information for a given\n   Information Element MUST\
    \ NOT be redefined by Information Element type\n   records, and a Collecting Process\
    \ MUST NOT allow an Information\n   Element type record to replace its own internal\
    \ definition of an\n   Information Element.  Information Element type records\
    \ SHOULD NOT be\n   duplicated in a given Observation Domain within a Transport\
    \ Session.\n   Once an Information Element type record has been exported for a\
    \ given\n   Information Element within a given Transport Session, all subsequent\n\
    \   type records for that Information Element MUST be identical.\n   Information\
    \ Elements for which a Collecting Process receives\n   conflicting semantic or\
    \ type information MUST be ignored.\n   Note that while this template MAY be used\
    \ to export information about\n   any Information Element, including those registered\
    \ with IANA,\n   Exporting Processes SHOULD NOT export any type records that could\
    \ be\n   reasonably assumed to duplicate type information available at the\n \
    \  Collecting Process.  This mechanism is not intended as a replacement\n   for\
    \ Exporting and Collecting Processes keeping up to date with\n   changes to the\
    \ IANA registry; such an update mechanism is out of\n   scope for this document.\n\
    \   The template SHOULD contain the Information Elements in Table 4,\n   below,\
    \ as defined in the PSAMP Information Model [RFC5477] and in\n   this document,\
    \ above.\n   +-------------------------------+-----------------------------------+\n\
    \   | IE                            | Description                       |\n  \
    \ +-------------------------------+-----------------------------------+\n   |\
    \ informationElementId [scope]  | The Information Element           |\n   |  \
    \                             | identifier of the Information     |\n   |    \
    \                           | Element described by this type    |\n   |      \
    \                         | record.  This Information Element |\n   |        \
    \                       | MUST be defined as a Scope Field. |\n   |          \
    \                     | See the PSAMP Information Model   |\n   |            \
    \                   | [RFC5477] for a definition of     |\n   |              \
    \                 | this field.                       |\n   | privateEnterpriseNumber\
    \       | The Private Enterprise number of  |\n   | [scope]                  \
    \     | the Information Element described |\n   |                            \
    \   | by this type record.  This        |\n   |                              \
    \ | Information Element MUST be       |\n   |                               |\
    \ defined as a Scope Field.         |\n   | informationElementDataType    | The\
    \ storage type of the specified |\n   |                               | Information\
    \ Element.              |\n   | informationElementSemantics   | The semantic type\
    \ of the          |\n   |                               | specified Information\
    \ Element.    |\n   | informationElementUnits       | The units of the specified\
    \        |\n   |                               | Information Element.  This  \
    \      |\n   |                               | element SHOULD be omitted if the\
    \  |\n   |                               | Information Element is a unitless |\n\
    \   |                               | quantity, or a not a quantity or  |\n  \
    \ |                               | counter.                          |\n   +-------------------------------+-----------------------------------+\n\
    \   | IE (Continued)                | Description (Continued)           |\n  \
    \ +-------------------------------+-----------------------------------+\n   |\
    \ informationElementRangeBegin  | The low end of the range of       |\n   |  \
    \                             | acceptable values for the         |\n   |    \
    \                           | specified Information Element.    |\n   |      \
    \                         | This element SHOULD be omitted if |\n   |        \
    \                       | the beginning of the Information  |\n   |          \
    \                     | Element's acceptable range is     |\n   |            \
    \                   | defined by its data type.         |\n   | informationElementRangeEnd\
    \    | The high end of the range of      |\n   |                             \
    \  | acceptable values for the         |\n   |                               |\
    \ specified Information Element.    |\n   |                               | This\
    \ element SHOULD be omitted if |\n   |                               | the end\
    \ Information Element's     |\n   |                               | acceptable\
    \ range is defined by    |\n   |                               | its data type.\
    \                    |\n   | informationElementName        | The name of the specified\
    \         |\n   |                               | Information Element.       \
    \       |\n   | informationElementDescription | A human-readable description of\
    \   |\n   |                               | the specified Information        \
    \ |\n   |                               | Element.  This element MAY be     |\n\
    \   |                               | omitted in the interest of export |\n  \
    \ |                               | efficiency.                       |\n   +-------------------------------+-----------------------------------+\n\
    \                         Table 4: IE Type Options\n"
- title: 3.10.  Data Type and Semantics Restrictions
  contents:
  - "3.10.  Data Type and Semantics Restrictions\n   Note that the informationElementSemantics\
    \ values defined in Section\n   3.2 of [RFC5102] are primarily intended to differentiate\
    \ semantic\n   interpretation of numeric values, and that not all combinations\
    \ of\n   the informationElementDataType and informationElementSemantics\n   Information\
    \ Elements are valid; e.g., a counter cannot be encoded as\n   an IPv4 address.\
    \  The following are acceptable values of\n   informationElementSemantics:\n \
    \  o  Any value is valid for unsigned informationElementDataType values\n    \
    \  (\"unsigned8\", \"unsigned16\", \"unsigned32\", or \"unsigned64\").\n   o \
    \ Any value except \"flags\" is valid for signed\n      informationElementDataType\
    \ values (\"signed8\", \"signed16\",\n      \"signed32\", or \"signed64\").\n\
    \   o  Any value except \"identifier\" or \"flags\" is valid for floating-\n \
    \     point informationElementDataType values (\"float32\" or \"float64\").\n\
    \   o  Only \"default\" is valid for all other informationElementDataType\n  \
    \    values (\"octetArray\", \"boolean\", \"macAddress\", \"string\",\n      \"\
    dateTimeSeconds\", \"dateTimeMilliseconds\", \"dateTimeMicroseconds\",\n     \
    \ \"dateTimeNanoseconds\", \"ipv4Address\", or \"ipv6Address\").\n   Information\
    \ Element type records containing invalid combinations of\n   informationElementSemantics\
    \ and informationElementDataType MUST NOT\n   be sent by Exporting Processes,\
    \ and MUST be ignored by Collecting\n   Processes.\n   Future Standards Actions\
    \ that modify the Information Element Data\n   Type subregistry or the Information\
    \ Element Semantics subregistry\n   should contain a Data Type and Semantics Restrictions\
    \ section such as\n   this one to define allowable combinations of type and semantics\n\
    \   information.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The same security considerations as for the IPFIX\
    \ Protocol [RFC5101]\n   apply.\n   In addition, attention must be paid to the\
    \ handling of Information\n   Element type records at the Collecting Process.\
    \  Type information\n   precedence rules defined above (a Collecting Process'\
    \ current\n   knowledge overrides type records; types are not redefinable during\
    \ a\n   session) are designed to minimize the opportunity for an attacker to\n\
    \   maliciously redefine the data model.\n   Note that Information Element type\
    \ records may contain two strings\n   describing Information Elements: informationElementName\
    \ and\n   informationElementDescription.  IPFIX strings on the wire are length-\n\
    \   prefixed and UTF-8 [RFC3629] encoded, most often within an IPFIX\n   variable-length\
    \ Information Element, which mitigates the risk of\n   unterminated-string attacks\
    \ against IPFIX Collecting Processes.\n   However, care should still be taken\
    \ when handling strings within the\n   type system of the Collecting Process.\n\
    \   First, Collecting Processes should pay particular attention to buffer\n  \
    \ sizes converting between length-prefixed and null-terminated strings.\n   Exporting\
    \ Processes MUST NOT export, and Collecting Processes MUST\n   ignore, any informationElementName\
    \ or informationElementDescription\n   content that contains null characters (U+0000)\
    \ in order to ensure\n   buffer and string lengths are consistent.\n   Also, note\
    \ that there is no limit to IPFIX string length beyond that\n   inherent in the\
    \ protocol.  The maximum IPFIX string length is 65512\n   octets (maximum message\
    \ length (65535), minus message header (16),\n   minus set header (4), minus long\
    \ variable length field (3)).\n   Specifically, although the informationElementName\
    \ of all IANA\n   Information Elements at the time of this writing is less than\
    \ about\n   40 octets, and the informationElementDescription is less than 4096\n\
    \   octets, either of these Information Elements may contain strings up\n   to\
    \ 65512 octets long.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document specifies several new IPFIX Information\
    \ Elements in the\n   IPFIX Information Element registry as defined in Section\
    \ 3 above.\n   IANA has assigned the following Information Element numbers for\
    \ their\n   respective Information Elements as specified below:\n   o  Information\
    \ Element Number 339 for the informationElementDataType\n      Information Element\n\
    \   o  Information Element Number 340 for the\n      informationElementDescription\
    \ Information Element\n   o  Information Element Number 341 for the informationElementName\n\
    \      Information Element\n   o  Information Element Number 342 for the\n   \
    \   informationElementRangeBegin Information Element\n   o  Information Element\
    \ Number 343 for the informationElementRangeEnd\n      Information Element\n \
    \  o  Information Element Number 344 for the informationElementSemantics\n   \
    \   Information Element\n   o  Information Element Number 345 for the informationElementUnits\n\
    \      Information Element\n   o  Information Element Number 346 for the privateEnterpriseNumber\n\
    \      Information Element\n   IANA has created an Information Element Data Type\
    \ subregistry for the\n   values defined for the informationElementDataType Information\n\
    \   Element.  Entries may be added to this subregistry subject to a\n   Standards\
    \ Action [RFC5226].\n   IANA has created an Information Element Semantics subregistry\
    \ for the\n   values defined for the informationElementSemantics Information\n\
    \   Element.  Entries may be added to this subregistry subject to a\n   Standards\
    \ Action [RFC5226].\n   IANA has created an Information Element Units subregistry\
    \ for the\n   values defined for the informationElementUnits Information Element.\n\
    \   Entries may be added to this subregistry on an Expert Review\n   [RFC5226]\
    \ basis.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks to Paul Aitken and Gerhard Muenz for the detailed\
    \ reviews, and\n   to David Moore for first raising this issue to the IPFIX mailing\n\
    \   list.  Thanks to the PRISM project for its support of this work.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC5101]  Claise, B., \"Specification of the\
    \ IP Flow Information\n              Export (IPFIX) Protocol for the Exchange\
    \ of IP Traffic\n              Flow Information\", RFC 5101, January 2008.\n \
    \  [RFC5102]  Quittek, J., Bryant, S., Claise, B., Aitken, P., and J.\n      \
    \        Meyer, \"Information Model for IP Flow Information Export\",\n      \
    \        RFC 5102, January 2008.\n   [RFC5477]  Dietz, T., Claise, B., Aitken,\
    \ P., Dressler, F., and G.\n              Carle, \"Information Model for Packet\
    \ Sampling Exports\",\n              RFC 5477, March 2009.\n   [RFC3629]  Yergeau,\
    \ F., \"UTF-8, a transformation format of ISO\n              10646\", STD 63,\
    \ RFC 3629, November 2003.\n   [RFC2277]  Alvestrand, H., \"IETF Policy on Character\
    \ Sets and\n              Languages\", BCP 18, RFC 2277, January 1998.\n   [RFC2482]\
    \  Whistler, K. and G. Adams, \"Language Tagging in Unicode\n              Plain\
    \ Text\", RFC 2482, January 1999.\n   [RFC4646]  Phillips, A. and M. Davis, \"\
    Tags for Identifying\n              Languages\", BCP 47, RFC 4646, September 2006.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       May 2008.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC3917]  Quittek, J., Zseby, T., Claise, B.,\
    \ and S. Zander,\n              \"Requirements for IP Flow Information Export\
    \ (IPFIX)\",\n              RFC 3917, October 2004.\n   [RFC5470]  Sadasivan,\
    \ G., Brownlee, N., Claise, B., and J. Quittek,\n              \"Architecture\
    \ for IP Flow Information Export\", RFC 5470,\n              March 2009.\n"
- title: Appendix A.  Examples
  contents:
  - "Appendix A.  Examples\n   The following example illustrates how the type information\
    \ extension\n   mechanism defined in this document may be used to describe the\n\
    \   semantics of enterprise-specific Information Elements.  The\n   Information\
    \ Elements used in this example are as follows:\n   o  initialTCPFlags, an example\
    \ private IE 14, 1 octet, the TCP flags\n      on the first TCP packet in the\
    \ flow.\n   o  unionTCPFlags, an example private IE 15, 1 octet, the union of\
    \ the\n      TCP flags on all packets after the first TCP packet in the flow.\n\
    \   An Exporting Process exporting flows containing these Information\n   Elements\
    \ might use a Template like the following:\n                        1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Set ID = 2           |          Length =  52         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Template ID = 256        |        Field Count = 9        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| flowStartSeconds        150 |       Field Length =  4       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| sourceIPv4Address         8 |       Field Length =  4       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| destinationIPv4Address   12 |       Field Length =  4       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| sourceTransportPort       7 |       Field Length =  2       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| destinationTransportPort 11 |       Field Length =  2       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| octetTotalCount          85 |       Field Length =  4       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1| (initialTCPFlags)        14 |       Field Length =  1       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Private Enterprise Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1| (unionTCPFlags)          15 |       Field Length =  1       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Private Enterprise Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0| protocolIdentifier        4 |       Field Length =  1       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 1: Template with Enterprise-Specific IEs\n   However, a\
    \ Collecting Process receiving Data Sets described by this\n   Template can only\
    \ treat the enterprise-specific Information Elements\n   as opaque octets; specifically,\
    \ there is no hint to the collector\n   that they contain flag information.  To\
    \ use the type information\n   extension mechanism to address this problem, the\
    \ Exporting Process\n   would first export the Information Element Type Options\
    \ Template\n   described in Section 3.9 above:\n                        1    \
    \               2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Set ID = 3           |          Length =  26         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Template ID = 257        |        Field Count = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Scope Field Count = 2      |0| priv.EnterpriseNumber   346 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 4        |0| informationElementId    303 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 2        |0| inf.El.DataType         339 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 1        |0| inf.El.Semantics        344 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 1        |0| inf.El.Name             341 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Field Length = 65536      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \        Figure 2: Example Information Element Type Options Template\n   Then,\
    \ the Exporting Process would export two records described by the\n   Example\
    \ Information Element Type Options Template to describe the\n   enterprise-specific\
    \ Information Elements:\n                        1                   2       \
    \            3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |          Set ID = 257         |          Length =  50         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Private Enterprise Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |X|         IE 14               |0x01 unsigned8 |0x05 flags     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   15 length   |                                               |\n   +-+-+-+-+-+-+-+-+\
    \                                               |\n   |                      \"\
    initialTCPFlags\"                        |\n   |                             \
    \                                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  Private Enterprise Number                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |X|         IE 15               |0x01 unsigned8 |0x05 flags     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   13 length   |                                               |\n   +-+-+-+-+-+-+-+-+\
    \        \"unionTCPFlags\"                        |\n   |                    \
    \           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                          \
    \     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                       Figure 3:\
    \ Type Record Example\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Elisa Boschi\n   Hitachi Europe\n   c/o ETH Zurich\n \
    \  Gloriastrasse 35\n   8092 Zurich\n   Switzerland\n   Phone: +41 44 632 70 57\n\
    \   EMail: elisa.boschi@hitachi-eu.com\n   Brian Trammell\n   Hitachi Europe\n\
    \   c/o ETH Zurich\n   Gloriastrasse 35\n   8092 Zurich\n   Switzerland\n   Phone:\
    \ +41 44 632 70 13\n   EMail: brian.trammell@hitachi-eu.com\n   Lutz Mark\n  \
    \ Fraunhofer Institute for Manufacturing Technology\n   and Applied Materials\
    \ Research\n   Wiener Str. 12\n   28359 Bremen\n   Germany\n   Phone: +49 421\
    \ 2246206\n   EMail: lutz.mark@ifam.fraunhofer.de\n   Tanja Zseby\n   Fraunhofer\
    \ Institute for Open Communication Systems\n   Kaiserin-Augusta-Allee 31\n   10589\
    \ Berlin\n   Germany\n   Phone: +49 30 3463 7153\n   EMail: tanja.zseby@fokus.fraunhofer.de\n"
