- title: __initial_text__
  contents:
  - "          Integrity Check Value and Timestamp TLV Definitions\n             \
    \     for Mobile Ad Hoc Networks (MANETs)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes general and flexible TLVs for representing\n\
    \   cryptographic Integrity Check Values (ICVs) (i.e., digital signatures\n  \
    \ or Message Authentication Codes (MACs)) as well as timestamps, using\n   the\
    \ generalized Mobile Ad Hoc Network (MANET) packet/message format\n   defined\
    \ in RFC 5444.  It defines two Packet TLVs, two Message TLVs,\n   and two Address\
    \ Block TLVs for affixing ICVs and timestamps to a\n   packet, a message, and\
    \ an address, respectively.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6622.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Applicability Statement .........................................3\n   4.\
    \ Security Architecture ...........................................4\n   5. Overview\
    \ and Functioning ........................................5\n   6. General ICV\
    \ TLV Structure .......................................6\n   7. General Timestamp\
    \ TLV Structure .................................6\n   8. Packet TLVs .....................................................7\n\
    \      8.1. Packet ICV TLV .............................................7\n  \
    \    8.2. Packet TIMESTAMP TLV .......................................7\n   9.\
    \ Message TLVs ....................................................8\n      9.1.\
    \ Message ICV TLV ............................................8\n      9.2. Message\
    \ TIMESTAMP TLV ......................................8\n   10. Address Block\
    \ TLVs .............................................8\n      10.1. Address Block\
    \ ICV TLV .....................................8\n      10.2. Address Block TIMESTAMP\
    \ TLV ...............................9\n   11. ICV: Basic .....................................................9\n\
    \   12. ICV: Cryptographic Function over a Hash Value ..................9\n  \
    \    12.1. General ICV TLV Structure ................................10\n    \
    \       12.1.1. Rationale .........................................11\n      12.2.\
    \ Considerations for Calculating the ICV ...................11\n           12.2.1.\
    \ Packet ICV TLV ....................................11\n           12.2.2. Message\
    \ ICV TLV ...................................11\n           12.2.3. Address Block\
    \ ICV TLV .............................11\n      12.3. Example of a Message Including\
    \ an ICV ....................12\n   13. IANA Considerations ...........................................13\n\
    \      13.1. Expert Review: Evaluation Guidelines .....................13\n  \
    \    13.2. Packet TLV Type Registrations ............................14\n    \
    \  13.3. Message TLV Type Registrations ...........................15\n      13.4.\
    \ Address Block TLV Type Registrations .....................16\n      13.5. Hash\
    \ Functions ...........................................17\n      13.6. Cryptographic\
    \ Functions ..................................18\n   14. Security Considerations\
    \ .......................................18\n   15. Acknowledgements ..............................................19\n\
    \   16. References ....................................................19\n  \
    \    16.1. Normative References .....................................19\n    \
    \  16.2. Informative References ...................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies\n   o  Two TLVs for carrying Integrity\
    \ Check Values (ICVs) and timestamps\n      in packets, messages, and address\
    \ blocks as defined by [RFC5444].\n   o  A generic framework for ICVs, accounting\
    \ (for Message TLVs) for\n      mutable message header fields (<msg-hop-limit>\
    \ and\n      <msg-hop-count>), where these fields are present in messages.\n \
    \  This document sets up IANA registries for recording code points for\n   hash-function\
    \ and ICV calculation, respectively.\n   Moreover, in Section 12, this document\
    \ defines the following:\n   o  One common method for generating ICVs as a cryptographic\
    \ function,\n      calculated over the hash value of the content.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n   This document uses the terminology and notation defined\
    \ in [RFC5444].\n   In particular, the following TLV fields from [RFC5444] are\
    \ used in\n   this specification:\n   <msg-hop-limit>  is the hop limit of a message,\
    \ as specified in\n      Section 5.2 of [RFC5444].\n   <msg-hop-count>  is the\
    \ hop count of a message, as specified in\n      Section 5.2 of [RFC5444].\n \
    \  <length>  is the length of a TLV in octets, as specified in\n      Section\
    \ 5.4.1 of [RFC5444].\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   MANET routing protocols using the format defined\
    \ in [RFC5444] are\n   accorded the ability to carry additional information in\
    \ control\n   messages and packets, through the inclusion of TLVs.  Information\
    \ so\n   included MAY be used by a MANET routing protocol, or by an extension\n\
    \   of a MANET routing protocol, according to its specification.\n   This document\
    \ specifies how to include an ICV for a packet, a\n   message, and addresses in\
    \ address blocks within a message, by way of\n   such TLVs.  This document also\
    \ specifies a) how to treat \"mutable\"\n   fields, specifically the <msg-hop-count>\
    \ and <msg-hop-limit> fields,\n   if present in the message header when calculating\
    \ ICVs, such that the\n   resulting ICV can be correctly verified by any recipient,\
    \ and b) how\n   to include this ICV.\n   This document describes a generic framework\
    \ for creating ICVs, and\n   how to include these ICVs in TLVs.  In Section 12,\
    \ an example method\n   for calculating such ICVs is given, using a cryptographic\
    \ function\n   over the hash value of the content.\n"
- title: 4.  Security Architecture
  contents:
  - "4.  Security Architecture\n   Basic MANET routing protocol specifications are\
    \ often \"oblivious to\n   security\"; however, they have a clause allowing a\
    \ control message to\n   be rejected as \"badly formed\" or \"insecure\" prior\
    \ to the message\n   being processed or forwarded.  MANET routing protocols such\
    \ as the\n   Neighborhood Discovery Protocol (NHDP) [RFC6130] and the Optimized\n\
    \   Link State Routing Protocol version 2 [OLSRv2] recognize external\n   reasons\
    \ (such as failure to verify an ICV) for rejecting a message\n   that would be\
    \ considered \"invalid for processing\".  This architecture\n   is a result of\
    \ the observation that with respect to security in\n   MANETs, \"one size rarely\
    \ fits all\" and that MANET routing protocol\n   deployment domains have varying\
    \ security requirements ranging from\n   \"unbreakable\" to \"virtually none\"\
    .  The virtue of this approach is\n   that MANET routing protocol specifications\
    \ (and implementations) can\n   remain \"generic\", with extensions providing\
    \ proper security\n   mechanisms specific to a deployment domain.\n   The MANET\
    \ routing protocol \"security architecture\", in which this\n   specification\
    \ situates itself, can therefore be summarized as\n   follows:\n   o  Security-oblivious\
    \ MANET routing protocol specifications, with a\n      clause allowing an extension\
    \ to reject a message (prior to\n      processing/forwarding) as \"badly formed\"\
    \ or \"insecure\".\n   o  MANET routing protocol security extensions, rejecting\
    \ messages as\n      \"badly formed\" or \"insecure\", as appropriate for a given\
    \ security\n      requirement specific to a deployment domain.\n   o  Code points\
    \ and an exchange format for information, necessary for\n      specification of\
    \ such MANET routing protocol security extensions.\n   This document addresses\
    \ the last of the issues listed above by\n   specifying a common exchange format\
    \ for cryptographic ICVs, making\n   reservations from within the Packet TLV,\
    \ Message TLV, and Address\n   Block TLV registries of [RFC5444], to be used (and\
    \ shared) among\n   MANET routing protocol security extensions.\n   For the specific\
    \ decomposition of an ICV into a cryptographic\n   function over a hash value\
    \ (specified in Section 12), this document\n   establishes two IANA registries\
    \ for code points for hash functions\n   and cryptographic functions adhering\
    \ to [RFC5444].\n   With respect to [RFC5444], this document is\n   o  Intended\
    \ to be used in the non-normative, but intended, mode of\n      use described\
    \ in Appendix B of [RFC5444].\n   o  A specific example of the Security Considerations\
    \ section of\n      [RFC5444] (the authentication part).\n"
- title: 5.  Overview and Functioning
  contents:
  - "5.  Overview and Functioning\n   This document specifies a syntactical representation\
    \ of security-\n   related information for use with [RFC5444] addresses, messages,\
    \ and\n   packets, and also establishes IANA registrations of TLV types and\n\
    \   type extension registries for these TLV types.\n   Moreover, this document\
    \ provides guidelines for how MANET routing\n   protocols and MANET routing protocol\
    \ extensions using this\n   specification should treat ICV and Timestamp TLVs,\
    \ and mutable fields\n   in messages.  This specification does not represent a\
    \ stand-alone\n   protocol; MANET routing protocols and MANET routing protocol\n\
    \   extensions, using this specification, MUST provide instructions as to\n  \
    \ how to handle packets, messages, and addresses with security\n   information,\
    \ associated as specified in this document.\n   This document assigns TLV types\
    \ from the registries defined for\n   Packet, Message, and Address Block TLVs\
    \ in [RFC5444].  When a TLV\n   type is assigned from one of these registries,\
    \ a registry for type\n   extensions for that TLV type is created by IANA.  This\
    \ document\n   utilizes these type extension registries so created, in order to\n\
    \   specify internal structure (and accompanying processing) of the\n   <value>\
    \ field of a TLV.\n   For example, and as defined in this document, an ICV TLV\
    \ with type\n   extension = 0 specifies that the <value> field has no pre-defined\n\
    \   internal structure but is simply a sequence of octets.  An ICV TLV\n   with\
    \ type extension = 1 specifies that the <value> field has a\n   pre-defined internal\
    \ structure and defines its interpretation.\n   (Specifically, the <value> field\
    \ consists of a cryptographic\n   operation over a hash value, with fields indicating\
    \ which hash\n   function and cryptographic operation have been used; this is\n\
    \   specified in Section 12.)\n   Other documents can request assignments for\
    \ other type extensions; if\n   they do so, they MUST specify their internal structure\
    \ (if any) and\n   interpretation.\n"
- title: 6.  General ICV TLV Structure
  contents:
  - "6.  General ICV TLV Structure\n   The value of the ICV TLV is\n      <value>\
    \ := <ICV-value>\n   where\n   <ICV-value>  is a field, of <length> octets, which\
    \ contains the\n      information to be interpreted by the ICV verification process,\
    \ as\n      specified by the type extension.\n   Note that this does not stipulate\
    \ how to calculate the <ICV-value>\n   nor the internal structure thereof, if\
    \ any; such information MUST be\n   specified by way of the type extension for\
    \ the ICV TLV type.  See\n   Section 13.  This document specifies two such type\
    \ extensions -- one\n   for ICVs without pre-defined structures, and one for ICVs\
    \ constructed\n   by way of a cryptographic operation over a hash value.\n"
- title: 7.  General Timestamp TLV Structure
  contents:
  - "7.  General Timestamp TLV Structure\n   The value of the Timestamp TLV is\n \
    \     <value> := <time-value>\n   where\n   <time-value>  is an unsigned integer\
    \ field, of length <length>, which\n      contains the timestamp.\n      Note\
    \ that this does not stipulate how to calculate the\n      <time-value> nor the\
    \ internal structure thereof, if any; such\n      information MUST be specified\
    \ by way of the type extension for the\n      TIMESTAMP TLV type.  See Section\
    \ 13.\n   A timestamp is essentially \"freshness information\".  As such, its\n\
    \   setting and interpretation are to be determined by the MANET routing\n   protocol,\
    \ or MANET routing protocol extension, that uses the\n   timestamp and can, for\
    \ example, correspond to a UNIX timestamp, GPS\n   timestamp, or a simple sequence\
    \ number.\n"
- title: 8.  Packet TLVs
  contents:
  - "8.  Packet TLVs\n   Two Packet TLVs are defined: one for including the cryptographic\
    \ ICV\n   of a packet and one for including the timestamp indicating the time\n\
    \   at which the cryptographic ICV was calculated.\n"
- title: 8.1.  Packet ICV TLV
  contents:
  - "8.1.  Packet ICV TLV\n   A Packet ICV TLV is an example of an ICV TLV as described\
    \ in\n   Section 6.\n   The following considerations apply:\n   o  Because packets\
    \ as defined in [RFC5444] are never forwarded by\n      routers, no special considerations\
    \ are required regarding mutable\n      fields (e.g., <msg-hop-count> and <msg-hop-limit>),\
    \ if present,\n      when calculating the ICV.\n   o  Any Packet ICV TLVs already\
    \ present in the Packet TLV block MUST\n      be removed before calculating the\
    \ ICV, and the Packet TLV block\n      size MUST be recalculated accordingly.\
    \  Removed ICV TLVs MUST be\n      restored after having calculated the ICV value.\n\
    \   The rationale for removing any Packet ICV TLV already present prior\n   to\
    \ calculating the ICV is that several ICVs may be added to the same\n   packet,\
    \ e.g., using different ICV functions.\n"
- title: 8.2.  Packet TIMESTAMP TLV
  contents:
  - "8.2.  Packet TIMESTAMP TLV\n   A Packet TIMESTAMP TLV is an example of a Timestamp\
    \ TLV as described\n   in Section 7.  If a packet contains a TIMESTAMP TLV and\
    \ an ICV TLV,\n   the TIMESTAMP TLV SHOULD be added to the packet before any ICV\
    \ TLV,\n   in order that it be included in the calculation of the ICV.\n"
- title: 9.  Message TLVs
  contents:
  - "9.  Message TLVs\n   Two Message TLVs are defined: one for including the cryptographic\
    \ ICV\n   of a message and one for including the timestamp indicating the time\n\
    \   at which the cryptographic ICV was calculated.\n"
- title: 9.1.  Message ICV TLV
  contents:
  - "9.1.  Message ICV TLV\n   A Message ICV TLV is an example of an ICV TLV as described\
    \ in\n   Section 6.  When determining the <ICV-value> for a message, the\n   following\
    \ considerations MUST be applied:\n   o  The fields <msg-hop-limit> and <msg-hop-count>,\
    \ if present, MUST\n      both be assumed to have the value 0 (zero) when calculating\n\
    \      the ICV.\n   o  Any Message ICV TLVs already present in the Message TLV\
    \ block MUST\n      be removed before calculating the ICV, and the message size\
    \ as\n      well as the Message TLV block size MUST be recalculated\n      accordingly.\
    \  Removed ICV TLVs MUST be restored after having\n      calculated the ICV value.\n\
    \   The rationale for removing any Message ICV TLV already present prior\n   to\
    \ calculating the ICV is that several ICVs may be added to the same\n   message,\
    \ e.g., using different ICV functions.\n"
- title: 9.2.  Message TIMESTAMP TLV
  contents:
  - "9.2.  Message TIMESTAMP TLV\n   A Message TIMESTAMP TLV is an example of a Timestamp\
    \ TLV as described\n   in Section 7.  If a message contains a TIMESTAMP TLV and\
    \ an ICV TLV,\n   the TIMESTAMP TLV SHOULD be added to the message before the\
    \ ICV TLV,\n   in order that it be included in the calculation of the ICV.\n"
- title: 10.  Address Block TLVs
  contents:
  - "10.  Address Block TLVs\n   Two Address Block TLVs are defined: one for associating\
    \ a\n   cryptographic ICV to an address and one for including the timestamp\n\
    \   indicating the time at which the cryptographic ICV was calculated.\n"
- title: 10.1.  Address Block ICV TLV
  contents:
  - "10.1.  Address Block ICV TLV\n   An Address Block ICV TLV is an example of an\
    \ ICV TLV as described in\n   Section 6.  The ICV is calculated over the address,\
    \ concatenated with\n   any other values -- for example, any other Address Block\
    \ TLV <value>\n   fields -- associated with that address.  A MANET routing protocol\
    \ or\n   MANET routing protocol extension using Address Block ICV TLVs MUST\n\
    \   specify how to include any such concatenated attribute of the address\n  \
    \ in the verification process of the ICV.  When determining the\n   <ICV-value>\
    \ for an address, the following consideration MUST be\n   applied:\n   o  If other\
    \ TLV values are concatenated with the address for\n      calculating the ICV,\
    \ these TLVs MUST NOT be Address Block ICV TLVs\n      already associated with\
    \ the address.\n   The rationale for not concatenating the address with any ICV\
    \ TLV\n   values already associated with the address when calculating the ICV\n\
    \   is that several ICVs may be added to the same address, e.g., using\n   different\
    \ ICV functions.\n"
- title: 10.2.  Address Block TIMESTAMP TLV
  contents:
  - "10.2.  Address Block TIMESTAMP TLV\n   An Address Block TIMESTAMP TLV is an example\
    \ of a Timestamp TLV as\n   described in Section 7.  If both a TIMESTAMP TLV and\
    \ an ICV TLV are\n   associated with an address, the TIMESTAMP TLV <value> MUST\
    \ be covered\n   when calculating the value of the ICV to be contained in the\
    \ ICV TLV\n   value (i.e., concatenated with the associated address and any other\n\
    \   values as described in Section 10.1).\n"
- title: '11.  ICV: Basic'
  contents:
  - "11.  ICV: Basic\n   The basic ICV, represented by way of an ICV TLV with type\n\
    \   extension = 0, is a simple bit-field containing the cryptographic\n   ICV.\
    \  This assumes that the mechanism stipulating how ICVs are\n   calculated and\
    \ verified is established outside of this specification,\n   e.g., by way of administrative\
    \ configuration or external out-of-band\n   signaling.  Thus, the <ICV-value>,\
    \ when using type extension = 0, is\n      <ICV-value> := <ICV-data>\n   where\n\
    \   <ICV-data>  is an unsigned integer field, of length <length>, which\n    \
    \  contains the cryptographic ICV.\n"
- title: '12.  ICV: Cryptographic Function over a Hash Value'
  contents:
  - "12.  ICV: Cryptographic Function over a Hash Value\n   One common way of calculating\
    \ an ICV is applying a cryptographic\n   function over a hash value of the content.\
    \  This decomposition is\n   specified in this section, using a type extension\
    \ = 1 in the\n   ICV TLVs.\n"
- title: 12.1.  General ICV TLV Structure
  contents:
  - "12.1.  General ICV TLV Structure\n   The following data structure allows representation\
    \ of a cryptographic\n   ICV, including specification of the appropriate hash\
    \ function and\n   cryptographic function used for calculating the ICV:\n    \
    \               <ICV-value> := <hash-function>\n                             \
    \     <cryptographic-function>\n                                  <key-id-length>\n\
    \                                  <key-id>\n                                \
    \  <ICV-data>\n   where\n   <hash-function>  is an 8-bit unsigned integer field\
    \ specifying the\n      hash function.\n   <cryptographic-function>  is an 8-bit\
    \ unsigned integer field\n      specifying the cryptographic function.\n   <key-id-length>\
    \  is an 8-bit unsigned integer field specifying the\n      length of the <key-id>\
    \ field in number of octets.  The value 0x00\n      is reserved for using a pre-installed,\
    \ shared key.\n   <key-id>  is a field specifying the key identifier of the key\
    \ that\n      was used to calculate the ICV of the message, which allows unique\n\
    \      identification of different keys with the same originator.  It is\n   \
    \   the responsibility of each key originator to make sure that\n      actively\
    \ used keys that it issues have distinct key identifiers.\n      If <key-id-length>\
    \ equals 0x00, the <key-id> field is not\n      contained in the TLV, and a pre-installed,\
    \ shared key is used.\n   <ICV-data>  is an unsigned integer field, whose length\
    \ is\n      <length> - 3 - <key-id-length>, and which contains the\n      cryptographic\
    \ ICV.\n   The version of this TLV, specified in this section, assumes that\n\
    \   calculating the ICV can be decomposed into\n      ICV-value = cryptographic-function(hash-function(content))\n\
    \   The hash function and the cryptographic function correspond to the\n   entries\
    \ in two IANA registries, which are set up by this\n   specification and are described\
    \ in Section 13.\n"
- title: 12.1.1.  Rationale
  contents:
  - "12.1.1.  Rationale\n   The rationale for separating the hash function and the\
    \ cryptographic\n   function into two octets instead of having all combinations\
    \ in a\n   single octet -- possibly as a TLV type extension -- is that adding\n\
    \   further hash functions or cryptographic functions in the future may\n   lead\
    \ to a non-contiguous number space.\n   The rationale for not including a field\
    \ that lists parameters of the\n   cryptographic ICV in the TLV is that, before\
    \ being able to validate a\n   cryptographic ICV, routers have to exchange or\
    \ acquire keys (e.g.,\n   public keys).  Any additional parameters can be provided\
    \ together\n   with the keys in that bootstrap process.  It is therefore not\n\
    \   necessary, and would even entail an extra overhead, to transmit the\n   parameters\
    \ within every message.  One implicitly available parameter\n   is the length\
    \ of the ICV, which is <length> - 3 - <key-id-length>,\n   and which depends on\
    \ the choice of the cryptographic function.\n"
- title: 12.2.  Considerations for Calculating the ICV
  contents:
  - "12.2.  Considerations for Calculating the ICV\n   The considerations listed in\
    \ the following subsections MUST be\n   applied when calculating the ICV for Packet,\
    \ Message, and Address ICV\n   TLVs, respectively.\n"
- title: 12.2.1.  Packet ICV TLV
  contents:
  - "12.2.1.  Packet ICV TLV\n   When determining the <ICV-value> for a packet, the\
    \ ICV is calculated\n   over the fields <hash-function>, <cryptographic-function>,\n\
    \   <key-id-length>, and -- if present -- <key-id> (in that order),\n   concatenated\
    \ with the entire packet, including the packet header, all\n   Packet TLVs (other\
    \ than Packet ICV TLVs), and all included Messages\n   and their message headers,\
    \ in accordance with Section 8.1.\n"
- title: 12.2.2.  Message ICV TLV
  contents:
  - "12.2.2.  Message ICV TLV\n   When determining the <ICV-value> for a message,\
    \ the ICV is calculated\n   over the fields <hash-function>, <cryptographic-function>,\n\
    \   <key-id-length>, and -- if present -- <key-id> (in that order),\n   concatenated\
    \ with the entire message.  The considerations in\n   Section 9.1 MUST be applied.\n"
- title: 12.2.3.  Address Block ICV TLV
  contents:
  - "12.2.3.  Address Block ICV TLV\n   When determining the <ICV-value> for an address,\
    \ the ICV is\n   calculated over the fields <hash-function>, <cryptographic-function>,\n\
    \   <key-id-length>, and -- if present -- <key-id> (in that order),\n   concatenated\
    \ with the address, and concatenated with any other values\n   -- for example,\
    \ any other address block TLV <value> that is\n   associated with that address.\
    \  A MANET routing protocol or MANET\n   routing protocol extension using Address\
    \ Block ICV TLVs MUST specify\n   how to include any such concatenated attribute\
    \ of the address in the\n   verification process of the ICV.  The considerations\
    \ in Section 10.1\n   MUST be applied.\n"
- title: 12.3.  Example of a Message Including an ICV
  contents:
  - "12.3.  Example of a Message Including an ICV\n   The sample message depicted\
    \ in Figure 1 is derived from Appendix D of\n   [RFC5444].  The message contains\
    \ an ICV Message TLV, with the value\n   representing an ICV that is 16 octets\
    \ long of the whole message, and\n   a key identifier that is 4 octets long. \
    \ The type extension of the\n   Message TLV is 1, for the specific decomposition\
    \ of an ICV into a\n   cryptographic function over a hash value, as specified\
    \ in Section 12.\n      0                   1                   2            \
    \       3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | PV=0 |  PF=8  |    Packet Sequence Number     | Message Type  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     | MF=15\
    \ | MAL=3 |      Message Length = 44      | Msg. Orig Addr|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |       Message Originator Address (cont)       |   Hop Limit   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \ Hop Count   |    Message Sequence Number    | Msg. TLV Block|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | Length = 27   |     ICV       |  MTLVF = 144  |  MTLVExt = 1  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |Value\
    \ Len = 23 |   Hash Func   |  Crypto Func  |Key ID length=4|\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                          Key Identifier                       |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                        ICV Value                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                          ICV Value (cont)                     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                        ICV Value (cont)                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                          ICV Value (cont)                     |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \            Figure 1: Example Message with ICV\n"
- title: 13.  IANA Considerations
  contents:
  - "13.  IANA Considerations\n   This specification defines the following:\n   o\
    \  Two Packet TLV types, which have been allocated from the 0-223\n      range\
    \ of the \"Packet TLV Types\" repository of [RFC5444], as\n      specified in\
    \ Table 1.\n   o  Two Message TLV types, which have been allocated from the 0-127\n\
    \      range of the \"Message TLV Types\" repository of [RFC5444], as\n      specified\
    \ in Table 2.\n   o  Two Address Block TLV types, which have been allocated from\
    \ the\n      0-127 range of the \"Address Block TLV Types\" repository of\n  \
    \    [RFC5444], as specified in Table 3.\n   This specification created the following:\n\
    \   o  A type extension registry for each of these TLV types with initial\n  \
    \    values as listed in Tables 1, 2, and 3.\n   IANA has assigned the same numerical\
    \ value to the Packet TLV, Message\n   TLV, and Address Block TLV types with the\
    \ same name.\n   The following terms are used as defined in [BCP26]: \"Namespace\"\
    ,\n   \"Registration\", and \"Designated Expert\".\n   The following policy is\
    \ used as defined in [BCP26]: \"Expert Review\".\n"
- title: '13.1.  Expert Review: Evaluation Guidelines'
  contents:
  - "13.1.  Expert Review: Evaluation Guidelines\n   For TLV type extensions registries\
    \ where an Expert Review is\n   required, the Designated Expert SHOULD take the\
    \ same general\n   recommendations into consideration as those specified by [RFC5444].\n\
    \   For the Timestamp TLV, the same type extensions for all Packet,\n   Message,\
    \ and Address Block TLVs SHOULD be numbered identically.\n"
- title: 13.2.  Packet TLV Type Registrations
  contents:
  - "13.2.  Packet TLV Type Registrations\n   IANA has made allocations from the \"\
    Packet TLV Types\" namespace of\n   [RFC5444] for the Packet TLVs specified in\
    \ Table 1.\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    Name   | Type |    Type   |             Description            |\n  \
    \ |           |      | Extension |                                    |\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    ICV    |   5  |     0     |           ICV of a packet          |\n  \
    \ |           |      |           |                                    |\n   |\
    \           |      |     1     | ICV, decomposed into cryptographic |\n   |  \
    \         |      |           |   function over a hash value, as   |\n   |    \
    \       |      |           |   specified in Section 12 of this  |\n   |      \
    \     |      |           |              document              |\n   |        \
    \   |      |           |                                    |\n   |          \
    \ |      |   2-251   |      Unassigned; Expert Review     |\n   |           |\
    \      |           |                                    |\n   |           |  \
    \    |  252-255  |          Experimental Use          |\n   |           |    \
    \  |           |                                    |\n   | TIMESTAMP |   6  |\
    \     0     |   Unsigned timestamp of arbitrary  |\n   |           |      |  \
    \         |   length, given by the TLV Length  |\n   |           |      |    \
    \       | field.  The MANET routing protocol |\n   |           |      |      \
    \     |   has to define how to interpret   |\n   |           |      |        \
    \   |           this timestamp           |\n   |           |      |          \
    \ |                                    |\n   |           |      |     1     |\
    \    Unsigned 32-bit timestamp, as   |\n   |           |      |           |  \
    \ specified in [IEEE 1003.1-2008   |\n   |           |      |           |    \
    \          (POSIX)]              |\n   |           |      |           |      \
    \                              |\n   |           |      |     2     |  NTP timestamp\
    \ format, as defined  |\n   |           |      |           |            in [RFC5905]\
    \            |\n   |           |      |           |                          \
    \          |\n   |           |      |     3     |    Signed timestamp of arbitrary\
    \   |\n   |           |      |           | length with no constraints such as\
    \ |\n   |           |      |           |  monotonicity.  In particular, it  |\n\
    \   |           |      |           |   may represent any random value   |\n  \
    \ |           |      |           |                                    |\n   |\
    \           |      |   4-251   |      Unassigned; Expert Review     |\n   |  \
    \         |      |           |                                    |\n   |    \
    \       |      |  252-255  |          Experimental Use          |\n   +-----------+------+-----------+------------------------------------+\n\
    \                         Table 1: Packet TLV Types\n"
- title: 13.3.  Message TLV Type Registrations
  contents:
  - "13.3.  Message TLV Type Registrations\n   IANA has made allocations from the\
    \ \"Message TLV Types\" namespace of\n   [RFC5444] for the Message TLVs specified\
    \ in Table 2.\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    Name   | Type |    Type   |             Description            |\n  \
    \ |           |      | Extension |                                    |\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    ICV    |   5  |     0     |          ICV of a message          |\n  \
    \ |           |      |           |                                    |\n   |\
    \           |      |     1     | ICV, decomposed into cryptographic |\n   |  \
    \         |      |           |   function over a hash value, as   |\n   |    \
    \       |      |           |   specified in Section 12 of this  |\n   |      \
    \     |      |           |              document              |\n   |        \
    \   |      |           |                                    |\n   |          \
    \ |      |   2-251   |      Unassigned; Expert Review     |\n   |           |\
    \      |           |                                    |\n   |           |  \
    \    |  252-255  |          Experimental Use          |\n   |           |    \
    \  |           |                                    |\n   | TIMESTAMP |   6  |\
    \     0     |   Unsigned timestamp of arbitrary  |\n   |           |      |  \
    \         |   length, given by the TLV Length  |\n   |           |      |    \
    \       |               field                |\n   |           |      |      \
    \     |                                    |\n   |           |      |     1  \
    \   |    Unsigned 32-bit timestamp, as   |\n   |           |      |          \
    \ |   specified in [IEEE 1003.1-2008   |\n   |           |      |           |\
    \              (POSIX)]              |\n   |           |      |           |  \
    \                                  |\n   |           |      |     2     |  NTP\
    \ timestamp format, as defined  |\n   |           |      |           |       \
    \     in [RFC5905]            |\n   |           |      |           |         \
    \                           |\n   |           |      |     3     |    Signed timestamp\
    \ of arbitrary   |\n   |           |      |           | length with no constraints\
    \ such as |\n   |           |      |           |  monotonicity.  In particular,\
    \ it  |\n   |           |      |           |   may represent any random value\
    \   |\n   |           |      |           |                                   \
    \ |\n   |           |      |   4-251   |      Unassigned; Expert Review     |\n\
    \   |           |      |           |                                    |\n  \
    \ |           |      |  252-255  |          Experimental Use          |\n   +-----------+------+-----------+------------------------------------+\n\
    \                        Table 2: Message TLV Types\n"
- title: 13.4.  Address Block TLV Type Registrations
  contents:
  - "13.4.  Address Block TLV Type Registrations\n   IANA has made allocations from\
    \ the \"Address Block TLV Types\"\n   namespace of [RFC5444] for the Packet TLVs\
    \ specified in Table 3.\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    Name   | Type |    Type   |             Description            |\n  \
    \ |           |      | Extension |                                    |\n   +-----------+------+-----------+------------------------------------+\n\
    \   |    ICV    |   5  |     0     |     ICV of an object (e.g., an     |\n  \
    \ |           |      |           |              address)              |\n   |\
    \           |      |           |                                    |\n   |  \
    \         |      |     1     | ICV, decomposed into cryptographic |\n   |    \
    \       |      |           |   function over a hash value, as   |\n   |      \
    \     |      |           |   specified in Section 12 of this  |\n   |        \
    \   |      |           |              document              |\n   |          \
    \ |      |           |                                    |\n   |           |\
    \      |   2-251   |      Unassigned; Expert Review     |\n   |           |  \
    \    |           |                                    |\n   |           |    \
    \  |  252-255  |          Experimental Use          |\n   |           |      |\
    \           |                                    |\n   | TIMESTAMP |   6  |  \
    \   0     |   Unsigned timestamp of arbitrary  |\n   |           |      |    \
    \       |   length, given by the TLV Length  |\n   |           |      |      \
    \     |                field               |\n   |           |      |        \
    \   |                                    |\n   |           |      |     1    \
    \ |    Unsigned 32-bit timestamp, as   |\n   |           |      |           |\
    \   specified in [IEEE 1003.1-2008   |\n   |           |      |           |  \
    \            (POSIX)]              |\n   |           |      |           |    \
    \                                |\n   |           |      |     2     |  NTP timestamp\
    \ format, as defined  |\n   |           |      |           |            in [RFC5905]\
    \            |\n   |           |      |           |                          \
    \          |\n   |           |      |     3     |    Signed timestamp of arbitrary\
    \   |\n   |           |      |           | length with no constraints such as\
    \ |\n   |           |      |           |  monotonicity.  In particular, it  |\n\
    \   |           |      |           |   may represent any random value   |\n  \
    \ |           |      |           |                                    |\n   |\
    \           |      |   4-251   |      Unassigned; Expert Review     |\n   |  \
    \         |      |           |                                    |\n   |    \
    \       |      |  252-255  |          Experimental Use          |\n   +-----------+------+-----------+------------------------------------+\n\
    \                     Table 3: Address Block TLV Types\n"
- title: 13.5.  Hash Functions
  contents:
  - "13.5.  Hash Functions\n   IANA has created a new registry for hash functions\
    \ that can be used\n   when creating an ICV, as specified in Section 12 of this\
    \ document.\n   The initial assignments and allocation policies are specified\
    \ in\n   Table 4.\n   +-------------+-----------+-----------------------------------------+\n\
    \   |     Hash    | Algorithm |               Description               |\n  \
    \ |   Function  |           |                                         |\n   |\
    \    Value    |           |                                         |\n   +-------------+-----------+-----------------------------------------+\n\
    \   |      0      |    none   | The \"identity function\": The hash value |\n\
    \   |             |           |    of an object is the object itself    |\n  \
    \ |             |           |                                         |\n   |\
    \      1      |    SHA1   |            [NIST-FIPS-180-2]            |\n   |  \
    \           |           |                                         |\n   |    \
    \  2      |   SHA224  |         [NIST-FIPS-180-2-change]        |\n   |      \
    \       |           |                                         |\n   |      3 \
    \     |   SHA256  |            [NIST-FIPS-180-2]            |\n   |          \
    \   |           |                                         |\n   |      4     \
    \ |   SHA384  |            [NIST-FIPS-180-2]            |\n   |             |\
    \           |                                         |\n   |      5      |  \
    \ SHA512  |            [NIST-FIPS-180-2]            |\n   |             |    \
    \       |                                         |\n   |    6-251    |      \
    \     |        Unassigned; Expert Review        |\n   |             |        \
    \   |                                         |\n   |   252-255   |          \
    \ |             Experimental Use            |\n   +-------------+-----------+-----------------------------------------+\n\
    \                      Table 4: Hash-Function Registry\n"
- title: 13.6.  Cryptographic Functions
  contents:
  - "13.6.  Cryptographic Functions\n   IANA has created a new registry for the cryptographic\
    \ functions, as\n   specified in Section 12 of this document.  Initial assignments\
    \ and\n   allocation policies are specified in Table 5.\n   +----------------+-----------+--------------------------------------+\n\
    \   |  Cryptographic | Algorithm |              Description             |\n  \
    \ | Function Value |           |                                      |\n   +----------------+-----------+--------------------------------------+\n\
    \   |        0       |    none   |  The \"identity function\": The value  |\n\
    \   |                |           |   of an encrypted hash is the hash   |\n  \
    \ |                |           |                itself                |\n   |\
    \                |           |                                      |\n   |  \
    \      1       |    RSA    |               [RFC3447]              |\n   |    \
    \            |           |                                      |\n   |      \
    \  2       |    DSA    |           [NIST-FIPS-186-3]          |\n   |        \
    \        |           |                                      |\n   |        3 \
    \      |    HMAC   |               [RFC2104]              |\n   |            \
    \    |           |                                      |\n   |        4     \
    \  |    3DES   |           [NIST-SP-800-67]           |\n   |                |\
    \           |                                      |\n   |        5       |  \
    \  AES    |            [NIST-FIPS-197]           |\n   |                |    \
    \       |                                      |\n   |        6       |   ECDSA\
    \   |           [ANSI-X9-62-2005]          |\n   |                |          \
    \ |                                      |\n   |      7-251     |           |\
    \       Unassigned; Expert Review      |\n   |                |           |  \
    \                                    |\n   |     252-255    |           |    \
    \       Experimental Use           |\n   +----------------+-----------+--------------------------------------+\n\
    \                 Table 5: Cryptographic Function Registry\n"
- title: 14.  Security Considerations
  contents:
  - "14.  Security Considerations\n   This document does not specify a protocol. \
    \ It provides a syntactical\n   component for cryptographic ICVs of messages and\
    \ packets, as defined\n   in [RFC5444].  It can be used to address security issues\
    \ of a MANET\n   routing protocol or MANET routing protocol extension.  As such,\
    \ it\n   has the same security considerations as [RFC5444].\n   In addition, a\
    \ MANET routing protocol or MANET routing protocol\n   extension that uses this\
    \ specification MUST specify how to use the\n   framework, and the TLVs presented\
    \ in this document.  In addition, the\n   protection that the MANET routing protocol\
    \ or MANET routing protocol\n   extensions attain by using this framework MUST\
    \ be described.\n   As an example, a MANET routing protocol that uses this component\
    \ to\n   reject \"badly formed\" or \"insecure\" messages if a control message\n\
    \   does not contain a valid ICV SHOULD indicate the security assumption\n   that\
    \ if the ICV is valid, the message is considered valid.  It also\n   SHOULD indicate\
    \ the security issues that are counteracted by this\n   measure (e.g., link or\
    \ identity spoofing) as well as the issues that\n   are not counteracted (e.g.,\
    \ compromised keys).\n"
- title: 15.  Acknowledgements
  contents:
  - "15.  Acknowledgements\n   The authors would like to thank Bo Berry (Cisco), Alan\
    \ Cullen (BAE),\n   Justin Dean (NRL), Christopher Dearlove (BAE), Paul Lambert\n\
    \   (Marvell), Jerome Milan (Ecole Polytechnique), and Henning Rogge\n   (FGAN)\
    \ for their constructive comments on the document.\n   The authors also appreciate\
    \ the detailed reviews from the Area\n   Directors, in particular Stewart Bryant\
    \ (Cisco), Stephen Farrell\n   (Trinity College Dublin), and Robert Sparks (Tekelec),\
    \ as well as\n   Donald Eastlake (Huawei) from the Security Directorate.\n"
- title: 16.  References
  contents:
  - '16.  References

    '
- title: 16.1.  Normative References
  contents:
  - "16.1.  Normative References\n   [ANSI-X9-62-2005]\n               American National\
    \ Standards Institute, \"Public Key\n               Cryptography for the Financial\
    \ Services Industry: The\n               Elliptic Curve Digital Signature Algorithm\
    \ (ECDSA)\",\n               ANSI X9.62-2005, November 2005.\n   [BCP26]     Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n               IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n               May 2008.\n   [IEEE 1003.1-2008\
    \ (POSIX)]\n               IEEE Computer Society, \"1003.1-2008 Standard for\n\
    \               Information Technology-Portable Operating System\n           \
    \    Interface (POSIX) Base Specifications, Issue 7\",\n               December\
    \ 2008.\n   [NIST-FIPS-180-2]\n               National Institute of Standards\
    \ and Technology,\n               \"Specifications for the Secure Hash Standard\"\
    ,\n               FIPS 180-2, August 2002.\n   [NIST-FIPS-180-2-change]\n    \
    \           National Institute of Standards and Technology, \"Federal\n      \
    \         Information Processing Standards Publication 180-2\n               (+\
    \ Change Notice to include SHA-224)\", FIPS 180-2,\n               August 2002,\
    \ <http:// csrc.nist.gov/publications/fips/\n               fips180-2/fips180-2withchangenotice.pdf>.\n\
    \   [NIST-FIPS-186-3]\n               National Institute of Standards and Technology,\
    \ \"Digital\n               Signature Standard (DSS)\", FIPS 186-3, June 2009.\n\
    \   [NIST-FIPS-197]\n               National Institute of Standards and Technology,\n\
    \               \"Specification for the Advanced Encryption Standard\n       \
    \        (AES)\", FIPS 197, November 2001.\n   [NIST-SP-800-67]\n            \
    \   National Institute of Standards and Technology,\n               \"Recommendation\
    \ for the Triple Data Encryption Algorithm\n               (TDEA) Block Cipher\"\
    , Special Publication 800-67,\n               May 2004.\n   [RFC2104]   Krawczyk,\
    \ H., Bellare, M., and R. Canetti, \"HMAC:\n               Keyed-Hashing for Message\
    \ Authentication\", RFC 2104,\n               February 1997.\n   [RFC2119]   Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC3447]   Jonsson, J. and B. Kaliski, \"\
    Public-Key Cryptography\n               Standards (PKCS) #1: RSA Cryptography\
    \ Specifications\n               Version 2.1\", RFC 3447, February 2003.\n   [RFC5444]\
    \   Clausen, T., Dearlove, C., Dean, J., and C. Adjih,\n               \"Generalized\
    \ Mobile Ad Hoc Network (MANET) Packet/Message\n               Format\", RFC 5444,\
    \ February 2009.\n   [RFC5905]   Mills, D., Martin, J., Ed., Burbank, J., and\
    \ W. Kasch,\n               \"Network Time Protocol Version 4: Protocol and Algorithms\n\
    \               Specification\", RFC 5905, June 2010.\n"
- title: 16.2.  Informative References
  contents:
  - "16.2.  Informative References\n   [OLSRv2]    Clausen, T., Dearlove, C., Jacquet,\
    \ P., and U. Herberg,\n               \"The Optimized Link State Routing Protocol\
    \ version 2\",\n               Work in Progress, March 2012.\n   [RFC6130]   Clausen,\
    \ T., Dearlove, C., and J. Dean, \"Mobile Ad Hoc\n               Network (MANET)\
    \ Neighborhood Discovery Protocol (NHDP)\",\n               RFC 6130, April 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ulrich Herberg\n   Fujitsu Laboratories of America\n \
    \  1240 E. Arques Ave.\n   Sunnyvale, CA  94085\n   USA\n   EMail: ulrich@herberg.name\n\
    \   URI:   http://www.herberg.name/\n   Thomas Heide Clausen\n   LIX, Ecole Polytechnique\n\
    \   91128 Palaiseau Cedex\n   France\n   Phone: +33 6 6058 9349\n   EMail: T.Clausen@computer.org\n\
    \   URI:   http://www.thomasclausen.org/\n"
