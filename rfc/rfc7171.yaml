- title: __initial_text__
  contents:
  - "                PT-EAP: Posture Transport (PT) Protocol\n      for Extensible\
    \ Authentication Protocol (EAP) Tunnel Methods\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies PT-EAP, a Posture Transport (PT) protocol\n\
    \   based on the Extensible Authentication Protocol (EAP) and designed to\n  \
    \ be used only inside an EAP tunnel method protected by Transport Layer\n   Security\
    \ (TLS).  The document also describes the intended\n   applicability of PT-EAP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7171.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Prerequisites . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Message Diagram Conventions . . . . . . . . . . . .\
    \ . . .   3\n     1.3.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n     1.4.  Conventions Used in This Document . . . . . . . . . . .\
    \ .   4\n     1.5.  Compatibility with Other Specifications . . . . . . . . .\
    \   4\n   2.  Use of PT-EAP . . . . . . . . . . . . . . . . . . . . . . . .  \
    \ 4\n   3.  Definition of PT-EAP  . . . . . . . . . . . . . . . . . . . .   4\n\
    \     3.1.  Protocol Overview . . . . . . . . . . . . . . . . . . . .   5\n  \
    \   3.2.  Version Negotiation . . . . . . . . . . . . . . . . . . .   6\n    \
    \ 3.3.  PT-EAP Message Format . . . . . . . . . . . . . . . . . .   6\n     3.4.\
    \  Preventing MITM Attacks with Channel Bindings . . . . . .   8\n   4.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   9\n     4.1.  Trust Relationships\
    \ . . . . . . . . . . . . . . . . . . .   9\n       4.1.1.  Posture Transport\
    \ Client  . . . . . . . . . . . . . .   9\n       4.1.2.  Posture Transport Server\
    \  . . . . . . . . . . . . . .  10\n     4.2.  Threats and Countermeasures . .\
    \ . . . . . . . . . . . . .  10\n       4.2.1.  Message Confidentiality . . .\
    \ . . . . . . . . . . . .  11\n       4.2.2.  Message Fabrication . . . . . .\
    \ . . . . . . . . . . .  11\n       4.2.3.  Message Modification  . . . . . .\
    \ . . . . . . . . . .  12\n       4.2.4.  Denial of Service . . . . . . . . .\
    \ . . . . . . . . .  12\n       4.2.5.  NEA Asokan Attacks  . . . . . . . . .\
    \ . . . . . . . .  13\n     4.3.  Candidate EAP Tunnel Method Protections . .\
    \ . . . . . . .  13\n     4.4.  Security Claims for PT-EAP as per RFC 3748  .\
    \ . . . . . .  14\n   5.  Requirements for EAP Tunnel Methods . . . . . . . .\
    \ . . . . .  14\n   6.  Privacy Considerations  . . . . . . . . . . . . . . .\
    \ . . . .  16\n   7.  IANA Considerations . . . . . . . . . . . . . . . . . .\
    \ . . .  16\n     7.1.  Registry for PT-EAP Versions  . . . . . . . . . . . .\
    \ . .  17\n   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . .\
    \ .  17\n   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  18\n     9.1.  Normative References  . . . . . . . . . . . . . . . . . .  18\n\
    \     9.2.  Informative References  . . . . . . . . . . . . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies PT-EAP, a Posture Transport (PT)\
    \ protocol\n   protected by a TLS-protected EAP tunnel method.  The PT protocol\
    \ in\n   the Network Endpoint Assessment (NEA) architecture is responsible for\n\
    \   transporting Posture Broker (PB-TNC [RFC5793]) batches, often\n   containing\
    \ Posture Attributes (PA-TNC [RFC5792]), across the network\n   between the NEA\
    \ Client and NEA Server.  The PT-EAP protocol must be\n   protected by an outer\
    \ TLS-based EAP tunnel method to ensure the\n   exchanged messages are protected\
    \ from a variety of threats from\n   hostile intermediaries.\n   NEA protocols\
    \ are intended to be used both for pre-admission\n   assessment of endpoints joining\
    \ the network and assessment of\n   endpoints already present on the network.\
    \  In order to support both\n   usage models, two types of PT protocols are needed.\
    \  One type of PT,\n   PT-TLS [RFC6876], operates after the endpoint has an assigned\
    \ IP\n   address, layering on top of the IP protocol to carry a NEA exchange.\n\
    \   The other type of PT operates before the endpoint gains any access to\n  \
    \ the IP network.  This specification defines PT-EAP, the PT protocol\n   used\
    \ to assess endpoints before they gain access to the network.\n   PT-EAP is an\
    \ inner EAP [RFC3748] method designed to be used inside a\n   protected tunnel\
    \ such as Tunnel EAP (TEAP) [RFC7170], EAP Flexible\n   Authentication via Secure\
    \ Tunneling (EAP-FAST) [RFC4851], or EAP\n   Tunneled Transport Layer Security\
    \ (EAP-TTLS) [RFC5281].  That is, an\n   outer EAP method is typically a TLS-based\
    \ EAP method that first\n   establishes a protected tunnel by which other conversations,\
    \ such as\n   other EAP methods (e.g., \"inner\" EAP methods) can ensue under\
    \ the\n   tunnel protection.\n"
- title: 1.1.  Prerequisites
  contents:
  - "1.1.  Prerequisites\n   This document does not define an architecture or reference\
    \ model.\n   Instead, it defines a protocol that works within the reference model\n\
    \   described in the NEA Requirements specification [RFC5209].  The\n   reader\
    \ is assumed to be thoroughly familiar with that document.\n"
- title: 1.2.  Message Diagram Conventions
  contents:
  - "1.2.  Message Diagram Conventions\n   This specification defines the syntax of\
    \ PT-EAP messages using\n   diagrams.  Each diagram depicts the format and size\
    \ of each field in\n   bits.  Implementations MUST send the bits in each diagram\
    \ as they are\n   shown, traversing the diagram from top to bottom and then from\
    \ left\n   to right within each line (which represents a 32-bit quantity).\n \
    \  Multi-byte fields representing numeric values MUST be sent in network\n   (big-endian)\
    \ byte order.\n   Descriptions of bit field (e.g., flag) values are described\
    \ referring\n   to the position of the bit within the field.  These bit positions\
    \ are\n   numbered from the most significant bit through the least significant\n\
    \   bit so a one octet field with only bit 0 set has the value 0x80.\n"
- title: 1.3.  Terminology
  contents:
  - "1.3.  Terminology\n   This document reuses many terms defined in the NEA Requirements\n\
    \   document [RFC5209], such as \"Posture Transport Client\" and \"Posture\n \
    \  Transport Server\".  The reader is assumed to have read that document\n   and\
    \ understood it.\n   When defining the PT-EAP method, this specification does\
    \ not use the\n   terms \"EAP peer\" and \"EAP authenticator\".  Instead, it uses\
    \ the terms\n   \"NEA Client\" and \"NEA Server\" since those are considered to\
    \ be more\n   familiar to NEA WG participants.  However, these terms are equivalent\n\
    \   for the purposes of this specification.  The part of the NEA Client\n   that\
    \ terminates PT-EAP (generally in the Posture Transport Client) is\n   the EAP\
    \ peer for PT-EAP.  The part of the NEA Server that terminates\n   PT-EAP (generally\
    \ in the Posture Transport Server) is the EAP\n   authenticator for PT-EAP.\n"
- title: 1.4.  Conventions Used in This Document
  contents:
  - "1.4.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.5.  Compatibility with Other Specifications
  contents:
  - "1.5.  Compatibility with Other Specifications\n   One of the goals of the NEA\
    \ effort is to deliver a single set of\n   endpoint assessment standards, agreed\
    \ upon by all parties.  For this\n   reason, the authors understand that the Trusted\
    \ Computing Group (TCG)\n   will be replacing its existing posture transport protocols\
    \ with new\n   versions that are equivalent to and interoperable with the NEA\n\
    \   specifications.\n"
- title: 2.  Use of PT-EAP
  contents:
  - "2.  Use of PT-EAP\n   PT-EAP is designed to encapsulate PB-TNC batches in a simple\
    \ EAP\n   method that can be carried within EAP tunnel methods.  The EAP tunnel\n\
    \   methods provide confidentiality and message integrity, so PT-EAP does\n  \
    \ not have to do so.  Therefore, PT-EAP MUST be used inside a TLS-based\n   EAP\
    \ tunnel method that provides strong cryptographic authentication\n   (possibly\
    \ server only), message integrity, and confidentiality\n   services.\n"
- title: 3.  Definition of PT-EAP
  contents:
  - "3.  Definition of PT-EAP\n   The PT-EAP protocol operates between a Posture Transport\
    \ Client and a\n   Posture Transport Server, allowing them to send PB-TNC batches\
    \ to\n   each other over an EAP tunnel method.  When PT-EAP is used, the\n   Posture\
    \ Transport Client in the NEA reference model acts as an EAP\n   peer (terminating\
    \ the PT-EAP method on the endpoint), and the Posture\n   Transport Server acts\
    \ as an EAP authenticator (terminating the PT-EAP\n   method on the NEA Server).\n\
    \   This section describes and defines the PT-EAP method.  First, it\n   provides\
    \ a protocol overview.  Second, it describes specific features\n   like version\
    \ negotiation.  Third, it gives a detailed packet\n   description.  Finally, it\
    \ describes how the tls-unique channel\n   binding [RFC5929] may be used to bind\
    \ PA-TNC exchanges to the EAP\n   tunnel method, defeating man-in-the-middle (MITM)\
    \ attacks such as the\n   Asokan attack [Asokan].\n"
- title: 3.1.  Protocol Overview
  contents:
  - "3.1.  Protocol Overview\n   PT-EAP has two phases that follow each other in strict\
    \ sequence:\n   negotiation and data transport.\n   The PT-EAP method begins with\
    \ the negotiation phase.  The NEA Server\n   starts this phase by sending a PT-EAP\
    \ Start message: an EAP Request\n   message of type PT-EAP with the S (Start)\
    \ flag set.  The NEA Server\n   also sets the Version field as described in Section\
    \ 3.2.  This is the\n   only message in the negotiation phase.\n   The data transport\
    \ phase is the only phase of PT-EAP where PB-TNC\n   batches are allowed to be\
    \ exchanged.  This phase always starts with\n   the NEA Client sending a PB-TNC\
    \ batch to the NEA Server.  The NEA\n   Client and NEA Server then take turns\
    \ sending a PB-TNC batch.  The\n   data transport phase always ends with an EAP\
    \ Response message from\n   the NEA Client to the NEA Server.  The Data field\
    \ of this message may\n   have zero length if the NEA Server has just sent the\
    \ last PB-TNC\n   batch in the PB-TNC exchange.\n   Note that the success of PT-EAP\
    \ does not mean the overall\n   authentication (using the outer EAP tunnel method)\
    \ will succeed.\n   Neither does the failure of PT-EAP mean that the overall\n\
    \   authentication will fail.  Success of the overall authentication\n   depends\
    \ on the policy configured by the administrator.\n   At the end of the PT-EAP\
    \ method, the NEA Server will indicate success\n   or failure to the EAP tunnel\
    \ method.  Some EAP tunnel methods may\n   provide explicit confirmation of inner\
    \ method success; others may\n   not.  This is out of scope for the PT-EAP method\
    \ specification.\n   Successful completion of PT-EAP does not imply successful\
    \ completion\n   of the overall authentication nor does PT-EAP failure imply overall\n\
    \   failure.  This depends on the administrative policy in place.\n   The NEA\
    \ Server and NEA Client may engage in an abnormal termination\n   of the PT-EAP\
    \ exchange at any time by simply stopping the exchange.\n   This may also require\
    \ terminating the EAP tunnel method, depending on\n   the capabilities of the\
    \ EAP tunnel method.\n"
- title: 3.2.  Version Negotiation
  contents:
  - "3.2.  Version Negotiation\n   PT-EAP version negotiation takes place in the first\
    \ PT-EAP message\n   sent by the NEA Server (the Start message) and the first\
    \ PT-EAP\n   message sent by the NEA Client (the response to the Start message).\n\
    \   The NEA Server MUST set the Version field in the Start message to the\n  \
    \ maximum PT-EAP version that the NEA Server supports and is willing to\n   accept.\n\
    \   The NEA Client chooses the PT-EAP version to be used for the exchange\n  \
    \ and places this value in the Version field in its response to the\n   Start\
    \ message.  The NEA Client SHOULD choose the value sent by the\n   NEA Server\
    \ if the NEA Client supports it.  However, the NEA Client\n   MAY set the Version\
    \ field to a value less than the value sent by the\n   NEA Server (for example,\
    \ if the NEA Client only supports lesser\n   PT-EAP versions).  If the NEA Client\
    \ only supports PT-EAP versions\n   greater than the value sent by the NEA Server,\
    \ the NEA Client MUST\n   abnormally terminate the EAP negotiation.\n   If the\
    \ version sent by the NEA Client is not acceptable to the NEA\n   Server, the\
    \ NEA Server MUST terminate the PT-EAP session immediately.\n   Otherwise, the\
    \ version sent by the NEA Client is the version of\n   PT-EAP that MUST be used.\
    \  Both the NEA Client and the NEA Server\n   MUST set the Version field to the\
    \ chosen version number in all\n   subsequent PT-EAP messages in this exchange.\n\
    \   This specification defines version 1 of PT-EAP.  Version 0 is\n   reserved\
    \ and MUST never be sent.  New versions of PT-EAP (values 2-7)\n   may be defined\
    \ by Standards Action, as defined in [RFC5226].\n"
- title: 3.3.  PT-EAP Message Format
  contents:
  - "3.3.  PT-EAP Message Format\n   This section provides a detailed description\
    \ of the fields in a\n   PT-EAP message.  For a description of the diagram conventions\
    \ used\n   here, see Section 1.2.  Since PT-EAP is an EAP method, the first four\n\
    \   fields (e.g., Code, Identifier, Length, and Type as shown in\n   Figure 1)\
    \ in each message are mandated by and defined in EAP.  The\n   other fields, e.g.,\
    \ Flags, Version, and Data are specific to PT-EAP.\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Code      |   Identifier  |            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    Type       |   Flags | Ver |           Data ...            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 1: PT-EAP Message Format\n   Code\n      The Code\
    \ field is one octet and identifies the type of the EAP\n      message.  The only\
    \ values used for PT-EAP are:\n      1  Request\n      2  Response\n   Identifier\n\
    \      The Identifier field is one octet and aids in matching Responses\n    \
    \  with Requests.\n   Length\n      The Length field is two octets and indicates\
    \ the length in octets\n      of this PT-EAP message, starting from the Code field.\n\
    \   Type\n      54 (EAP Method Type [RFC3748] assignment for PT-EAP).\n   Flags\n\
    \      +-+-+-+-+-+\n      |S R R R R|\n      +-+-+-+-+-+\n   S: Start\n      Indicates\
    \ the beginning of a PT-EAP exchange.  This flag MUST be\n      set only for the\
    \ first message from the NEA Server.  If the S flag\n      is set, the EAP message\
    \ MUST NOT contain Data.\n   R: Reserved\n      This flag MUST be set to 0 and\
    \ ignored upon receipt.\n   Version\n      This field is used for version negotiation,\
    \ as described in\n      Section 3.2.\n   Data\n      Variable length data.  This\
    \ field is processed by the PB layer and\n      MUST include PB-TNC messages.\
    \  For more information see PB-TNC\n      [RFC5793].\n      The length of the\
    \ Data field in a particular PT-EAP message may be\n      determined by subtracting\
    \ the length of the PT-EAP header fields\n      from the value of the two-octet\
    \ Length field.\n"
- title: 3.4.  Preventing MITM Attacks with Channel Bindings
  contents:
  - "3.4.  Preventing MITM Attacks with Channel Bindings\n   As described in the NEA\
    \ Asokan Attack Analysis [RFC6813], a\n   sophisticated MITM attack can be mounted\
    \ against NEA systems.  The\n   attacker forwards PA-TNC messages from a healthy\
    \ machine through an\n   unhealthy one so that the unhealthy machine can gain\
    \ network access.\n   Because there are easier attacks on NEA systems, like having\
    \ the\n   unhealthy machine lie about its configuration, this attack is\n   generally\
    \ only mounted against machines with an External Measurement\n   Agent (EMA).\
    \  The EMA is a separate entity, difficult to compromise,\n   that measures and\
    \ attests to the configuration of the endpoint.\n   To protect against NEA Asokan\
    \ attacks, it is necessary for the\n   Posture Broker on an EMA-equipped endpoint\
    \ to pass the tls-unique\n   channel binding [RFC5929] from PT-EAP's tunnel method\
    \ to the EMA.\n   This value can then be included in the EMA's attestation so\
    \ that the\n   Posture Validator responsible may then confirm that the value matches\n\
    \   the tls-unique channel binding for its end of the tunnel.  If the\n   tls-unique\
    \ values of the NEA Client and NEA Server match and this is\n   confirmed by the\
    \ EMA, then the posture sent by a trustworthy EMA (and\n   thus the NEA Client)\
    \ is from the same endpoint as the client side of\n   the TLS connection (since\
    \ the endpoint knows the tls-unique value) so\n   no MITM is forwarding posture.\
    \  If they differ, an attack has been\n   detected, and the Posture Validator\
    \ SHOULD fail its verification.\n   Note that tls-unique, as opposed to invoking\
    \ a mutual cryptographic\n   binding, is used as there is no keying material being\
    \ generated by\n   PT-EAP (the method is defined to facilitate the transport of\
    \ posture\n   data and is not an authentication method).  However, the NEA Client\n\
    \   may host an EMA that can be used as the means to cryptographically\n   bind\
    \ the tls-unique content that may be validated by the Posture\n   Validator interfacing\
    \ with the EAP Server.  The binding of the\n   tls-unique to the client authentication\
    \ prevents the client's message\n   from being used in another context.  This\
    \ prevents a poorly\n   configured client from unintentionally compromising the\
    \ NEA system.\n   Strong mutual authentication of the NEA Server and Client is\
    \ still\n   REQUIRED to prevent the disclosure of possibly sensitive NEA Client\n\
    \   information to an attacker.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This section discusses the major threats and\
    \ countermeasures provided\n   by PT-EAP.  As discussed throughout the document,\
    \ the PT-EAP method\n   is designed to run inside an EAP tunnel method that is\
    \ capable of\n   protecting the PT-EAP protocol from many threats.  Since the\
    \ EAP\n   tunnel method will be specified separately, this section describes\n\
    \   the considerations on the EAP tunnel method but does not evaluate its\n  \
    \ ability to meet those requirements.  The security considerations and\n   requirements\
    \ for NEA can be found in [RFC5209].\n"
- title: 4.1.  Trust Relationships
  contents:
  - "4.1.  Trust Relationships\n   In order to understand where security countermeasures\
    \ are necessary,\n   this section starts with a discussion of where the NEA architecture\n\
    \   envisions some trust relationships between the processing elements of\n  \
    \ the PT-EAP protocol.  The following sub-sections discuss the trust\n   properties\
    \ associated with each portion of the NEA reference model\n   directly involved\
    \ with the processing of the PT-EAP protocol flowing\n   inside an EAP tunnel.\n"
- title: 4.1.1.  Posture Transport Client
  contents:
  - "4.1.1.  Posture Transport Client\n   The Posture Transport Client is trusted\
    \ by the Posture Broker Client\n   to:\n   o  Not disclose to unauthorized parties,\
    \ fabricate, or alter the\n      contents of the PB-TNC batches received from\
    \ the network.\n   o  Not observe, fabricate, or alter the PB-TNC batches passed\
    \ down\n      from the Posture Broker Client for transmission on the network.\n\
    \   o  Transmit on the network any PB-TNC batches passed down from the\n     \
    \ Posture Broker Client.\n   o  Provide configured security protections (e.g.,\
    \ authentication,\n      integrity, and confidentiality) for the Posture Broker\
    \ Client's\n      PB-TNC batches sent on the network.\n   o  Expose the authenticated\
    \ identity of the Posture Transport Server\n      to the Posture Broker Client.\n\
    \   o  Verify the security protections placed upon messages received from\n  \
    \    the network to ensure the messages are authentic and protected\n      from\
    \ attacks on the network.\n   o  Deliver to the Posture Broker Client the PB-TNC\
    \ batches received\n      from the network so long as they are properly security\
    \ protected.\n   o  Provide a secure, reliable, \"in-order delivery\", full-duplex\n\
    \      transport for the Posture Broker Client's messages.\n   Since the Posture\
    \ Transport Server can not validate the\n   trustworthiness of the Posture Transport\
    \ Client, the Posture\n   Transport Server should protect itself appropriately.\n"
- title: 4.1.2.  Posture Transport Server
  contents:
  - "4.1.2.  Posture Transport Server\n   The Posture Transport Server is trusted\
    \ by the Posture Broker Server\n   to:\n   o  Not observe, fabricate, or alter\
    \ the contents of the PB-TNC\n      batches received from the network.\n   o \
    \ Not observe, fabricate, or alter the PB-TNC batches passed down\n      from\
    \ the Posture Broker Server for transmission on the network.\n   o  Transmit on\
    \ the network any PB-TNC batches passed down from the\n      Posture Broker Server.\n\
    \   o  Ensure PB-TNC batches received from the network are properly\n      protected\
    \ from a security perspective.\n   o  Provide configured security protections\
    \ (e.g., authentication,\n      integrity, and confidentiality) for the Posture\
    \ Broker Server's\n      messages sent on the network.\n   o  Expose the authenticated\
    \ identity of the Posture Transport Client\n      to the Posture Broker Server.\n\
    \   o  Verify the security protections placed upon messages received from\n  \
    \    the network to ensure the messages are authentic and protected\n      from\
    \ attacks on the network.\n   Since the Posture Transport Client can not validate\
    \ the\n   trustworthiness of the Posture Transport Server, the Posture\n   Transport\
    \ Client should protect itself appropriately.\n"
- title: 4.2.  Threats and Countermeasures
  contents:
  - "4.2.  Threats and Countermeasures\n   Beyond the trusted relationships assumed\
    \ in Section 4.1, the PT-EAP\n   EAP method faces a number of potential security\
    \ attacks that could\n   require security countermeasures.\n   Generally, the\
    \ PT protocol is responsible for providing strong\n   security protections for\
    \ all of the NEA protocols so any threats to\n   PT's ability to protect NEA protocol\
    \ messages could be very damaging\n   to deployments.  For the PT-EAP method,\
    \ most of the cryptographic\n   security is provided by the outer EAP tunnel method,\
    \ and PT-EAP is\n   encapsulated within the protected tunnel.  Therefore, this\
    \ section\n   highlights the cryptographic requirements that need to be met by\
    \ the\n   EAP tunnel method carrying PT-EAP in order to meet the NEA PT\n   requirements.\n\
    \   Once the message is delivered to the Posture Broker Client or Posture\n  \
    \ Broker Server, the Posture Brokers are trusted to properly and safely\n   process\
    \ the messages.\n"
- title: 4.2.1.  Message Confidentiality
  contents:
  - "4.2.1.  Message Confidentiality\n   When PT-EAP messages are sent over unprotected\
    \ network links or span\n   local software stacks that are not trusted, the contents\
    \ of the\n   messages may be subject to information theft by an intermediary\n\
    \   party.  This theft could result in information being recorded for\n   future\
    \ use or analysis by an adversary.  Messages observed by\n   eavesdroppers could\
    \ contain information that exposes potential\n   weaknesses in the security of\
    \ the endpoint or system fingerprinting\n   information easing the ability of\
    \ the attacker to employ attacks more\n   likely to be successful against the\
    \ endpoint.  The eavesdropper might\n   also learn information about the endpoint\
    \ or network policies that\n   either singularly or collectively is considered\
    \ sensitive\n   information.  For example, if PT-EAP is carried by an EAP tunnel\n\
    \   method that does not provide confidentiality protection, an adversary\n  \
    \ could observe the PA-TNC attributes included in the PB-TNC batch and\n   determine\
    \ that the endpoint is lacking patches or that particular\n   sub-networks have\
    \ more lenient policies.\n   In order to protect against NEA assessment message\
    \ theft, the EAP\n   tunnel method carrying PT-EAP must provide strong cryptographic\n\
    \   authentication, integrity, and confidentiality protection.  The use\n   of\
    \ bidirectional authentication in the EAP tunnel method carrying\n   PT-EAP ensures\
    \ that only properly authenticated and authorized\n   parties may be involved\
    \ in an assessment message exchange.  When\n   PT-EAP is carried within a cryptographically\
    \ protected EAP tunnel\n   method like EAP-FAST or EAP-TTLS, all of the contents\
    \ of PB-TNC and\n   PA-TNC protocol messages are hidden from potential theft by\n\
    \   intermediaries lurking on the network.\n"
- title: 4.2.2.  Message Fabrication
  contents:
  - "4.2.2.  Message Fabrication\n   Attackers on the network or present within the\
    \ NEA system could\n   introduce fabricated PT-EAP messages intending to trick\
    \ or create a\n   denial of service against aspects of an assessment.  For example,\
    \ an\n   adversary could attempt to insert a PT-EAP message to tell a NEA\n  \
    \ Server that the endpoint is totally infected.  This could cause the\n   device\
    \ to be blocked from accessing a critical resource, which would\n   be a denial\
    \ of service.\n   The EAP tunnel method carrying a PT-EAP method needs to provide\n\
    \   strong security protections for the complete message exchange over\n   the\
    \ network.  These security protections prevent an intermediary from\n   being\
    \ able to insert fake messages into the assessment.  See\n   Section 5 for more\
    \ details on the EAP tunnel requirements.\n"
- title: 4.2.3.  Message Modification
  contents:
  - "4.2.3.  Message Modification\n   This attack could allow an active attacker capable\
    \ of intercepting a\n   message to modify a PT-EAP message or transported PA-TNC\
    \ attribute to\n   a desired value to ease the compromise of an endpoint.  Without\
    \ the\n   ability for message recipients to detect whether a received message\n\
    \   contains the same content as what was originally sent, active\n   attackers\
    \ can stealthily modify the attribute exchange.\n   PT-EAP leverages the EAP tunnel\
    \ method (e.g., TEAP, EAP-FAST, or EAP-\n   TTLS) to provide strong authentication\
    \ and integrity protections as a\n   countermeasure to this threat.  The bidirectional\
    \ authentication\n   prevents the attacker from acting as an active MITM to the\
    \ protocol\n   that could be used to modify the message exchange.  The strong\n\
    \   integrity protections offered by the TLS-based EAP tunnel method\n   allow\
    \ the PT-EAP message recipients to detect message alterations by\n   other types\
    \ of network-based adversaries.  Because PT-EAP does not\n   itself provide explicit\
    \ integrity protection for the PT-EAP payload,\n   an EAP tunnel method that offers\
    \ strong integrity protection is\n   needed to mitigate this threat.\n"
- title: 4.2.4.  Denial of Service
  contents:
  - "4.2.4.  Denial of Service\n   A variety of types of denial-of-service attacks\
    \ are possible against\n   PT-EAP if the message exchange is left unprotected\
    \ while traveling\n   over the network.  The Posture Transport Client and Posture\
    \ Transport\n   Server are trusted not to participate in the denial of service\
    \ of the\n   assessment session, leaving the threats to come from the network.\n\
    \   The PT-EAP method primarily relies on the outer EAP tunnel method to\n   provide\
    \ strong authentication (at least of one party), and deployers\n   are expected\
    \ to leverage other EAP methods to authenticate the other\n   party (typically\
    \ the client) within the protected tunnel.  The use of\n   a protected bidirectional\
    \ authentication will prevent unauthorized\n   parties from participating in a\
    \ PT-EAP exchange.\n   After the cryptographic authentication by the EAP tunnel\
    \ method, the\n   session can be protected cryptographically to provide confidentiality\n\
    \   and source authenticity.  Such protection prevents undetected\n   modification\
    \ that could create a denial-of-service situation.\n   However, it is possible\
    \ for an adversary to alter the message flows,\n   causing each message to be\
    \ rejected by the recipient because it fails\n   the integrity checking.\n"
- title: 4.2.5.  NEA Asokan Attacks
  contents:
  - "4.2.5.  NEA Asokan Attacks\n   As described in Section 3.4 and in the NEA Asokan\
    \ Attack Analysis\n   [RFC6813], a sophisticated MITM attack can be mounted against\
    \ NEA\n   systems.  The attacker forwards PA-TNC messages from a healthy\n   machine\
    \ through an unhealthy one so that the unhealthy machine can\n   gain network\
    \ access.  Section 3.4 and [RFC6813] provide a detailed\n   description of this\
    \ attack and of the countermeasures that can be\n   employed against it.\n   Because\
    \ lying endpoint attacks are much easier than Asokan attacks\n   and an effective\
    \ countermeasure against lying endpoint attacks is the\n   use of an External\
    \ Measurement Agent (EMA), countermeasures against\n   an Asokan attack are not\
    \ necessary unless an EMA is in use.  However,\n   PT-EAP implementers may not\
    \ know whether an EMA will be used with\n   their implementation.  Therefore,\
    \ PT-EAP implementers SHOULD support\n   these countermeasures by providing the\
    \ value of the tls-unique\n   channel binding to higher layers in the NEA reference\
    \ model: Posture\n   Broker Clients, Posture Broker Servers, Posture Collectors,\
    \ and\n   Posture Validators.  If the tls-unique channel binding is\n   implemented,\
    \ it must be verified before any other attestations are\n   evaluated.\n"
- title: 4.3.  Candidate EAP Tunnel Method Protections
  contents:
  - "4.3.  Candidate EAP Tunnel Method Protections\n   This section discusses how\
    \ PT-EAP is used within various EAP tunnel\n   methods to meet the PT requirements\
    \ in Section 5.\n   TEAP [RFC7170], EAP-FAST [RFC4851], and EAP-TTLS [RFC5281]\
    \ make use\n   of TLS [RFC5246] to protect the transport of information between\
    \ the\n   NEA Client and NEA Server.  Each of these EAP tunnel methods has two\n\
    \   phases.  In the first phase, a TLS tunnel is established between the\n   NEA\
    \ Client and NEA Server.  In the second phase, the tunnel is used\n   to pass\
    \ other information.  PT-EAP requires that establishing this\n   tunnel include\
    \ at least an authentication of the NEA Server by the\n   NEA Client.\n   The\
    \ phase two dialog may include authentication of the user by doing\n   other EAP\
    \ methods or, in the case of EAP-TTLS, by using EAP or non-\n   EAP authentication\
    \ dialogs.  PT-EAP is also carried by the phase two\n   tunnel, allowing the NEA\
    \ assessment to be within an encrypted and\n   integrity-protected transport.\n\
    \   With all these methods (e.g., TEAP [RFC7170], EAP-FAST [RFC4851], and\n  \
    \ EAP-TTLS [RFC5281]), a cryptographic key is derived from the\n   authentication\
    \ that may be used to secure later transmissions.  Each\n   of these methods employs\
    \ at least a NEA Server authentication using\n   an X.509 certificate.  Within\
    \ each EAP tunnel method will exist a set\n   of inner EAP methods.  These inner\
    \ methods may perform additional\n   security handshakes including more granular\
    \ authentications or\n   exchanges of integrity information (such as PT-EAP).\
    \  At some point\n   after the conclusion of each inner EAP method, some of the\
    \ methods\n   will export the established secret keys to the outer tunnel method.\n\
    \   It's expected that the outer method will cryptographically mix these\n   keys\
    \ into any keys it is currently using to protect the session and\n   perform a\
    \ final operation to determine whether both parties have\n   arrived at the same\
    \ mixed key.  This cryptographic binding of the\n   inner method results to the\
    \ outer method's keys is essential for\n   detection of conventional (non-NEA)\
    \ Asokan attacks.\n   TEAP [RFC7170] is the mandatory-to-implement EAP tunnel\
    \ method.\n"
- title: 4.4.  Security Claims for PT-EAP as per RFC 3748
  contents:
  - "4.4.  Security Claims for PT-EAP as per RFC 3748\n   This section summarizes\
    \ the security claims for this specification,\n   as required by [RFC3748], Section\
    \ 7.2:\n      Auth. mechanism:               None\n      Ciphersuite negotiation:\
    \       No\n      Mutual authentication:         No\n      Integrity protection:\
    \          No\n      Replay protection:             No\n      Confidentiality:\
    \               No\n      Key derivation:                No\n      Key strength:\
    \                  N/A\n      Dictionary attack resistant:   N/A\n      Fast reconnect:\
    \                No\n      Crypt. binding:                N/A\n      Session independence:\
    \          N/A\n      Fragmentation:                 No\n      Channel binding:\
    \               No\n"
- title: 5.  Requirements for EAP Tunnel Methods
  contents:
  - "5.  Requirements for EAP Tunnel Methods\n   Because the PT-EAP inner method described\
    \ in this specification\n   relies on the outer EAP tunnel method for a majority\
    \ of its security\n   protections, this section reiterates the PT requirements\
    \ that MUST be\n   met by the IETF standard EAP tunnel method for use with PT-EAP.\n\
    \   TEAP [RFC7170] is a Standards Track EAP tunnel method that satisfies\n   NEA's\
    \ requirements and is the mandatory-to-implement EAP tunnel\n   method.\n   The\
    \ security requirements described in this specification MUST be\n   implemented\
    \ in any product claiming to be PT-EAP compliant.  The\n   decision of whether\
    \ a particular deployment chooses to use these\n   protections is a deployment\
    \ issue.  A customer may choose to avoid\n   potential deployment issues or performance\
    \ penalties associated with\n   the use of cryptography when the required protection\
    \ has been\n   achieved through other mechanisms (e.g., physical isolation). \
    \ If\n   security mechanisms may be deactivated by policy, an implementation\n\
    \   SHOULD offer an interface to query how a message will be (or was)\n   protected\
    \ by PT so higher-layer NEA protocols can factor this into\n   their decisions.\n\
    \   RFC 5209 [RFC5209] includes the following requirement that is to be\n   applied\
    \ during the selection of the EAP tunnel method(s) used in\n   conjunction with\
    \ PT-EAP:\n      PT-2: The PT protocol MUST be capable of supporting mutual\n\
    \      authentication, integrity, confidentiality, and replay protection\n   \
    \   of the PB messages between the Posture Transport Client and the\n      Posture\
    \ Transport Server.\n   Note that mutual authentication could be achieved by a\
    \ combination of\n   a strong authentication of one party (e.g., server authentication\n\
    \   while establishing the TLS-based tunnel) by the EAP tunnel method in\n   conjunction\
    \ with a second authentication of the other party (e.g.,\n   client authentication\
    \ inside the protected tunnel) by another EAP\n   method running prior to PT-EAP.\n\
    \   Having the Posture Transport Client always authenticate the Posture\n   Transport\
    \ Server provides assurance to the NEA Client that the NEA\n   Server is authentic\
    \ (not a rogue or MITM) prior to disclosing secret\n   or potentially privacy-sensitive\
    \ information about what is running or\n   configured on the endpoint.  However,\
    \ the NEA Server's policy may\n   allow for the delay of the authentication of\
    \ the NEA Client until a\n   suitable protected channel has been established allowing\
    \ for non-\n   cryptographic NEA Client credentials (e.g., username/password)\
    \ to be\n   used.  Whether the communication channel is established with mutual\n\
    \   or server-side-only authentication, the resulting channel needs to\n   provide\
    \ strong integrity and confidentiality protection to its\n   contents.  These\
    \ protections are to be bound to at least the\n   authentication of the NEA Server\
    \ by the NEA Client, so the session is\n   cryptographically bound to a particular\
    \ authentication event.\n   The EAP tunnel method carrying PT-EAP MUST provide\
    \ strong\n   cryptographic authentication, integrity, and confidentiality\n  \
    \ protection to protect against NEA assessment message theft as\n   described\
    \ in Section 4.2.1.  The cryptographically protected EAP\n   tunnel ensures that\
    \ all of the PA-TNC and PB-TNC protocol messages\n   are hidden from intermediaries\
    \ wanting to steal NEA data.\n   To support countermeasures against NEA Asokan\
    \ attacks as described in\n   Section 3.4, the EAP tunnel method used with PT-EAP\
    \ will need to\n   support generation of the tls-unique value to be used with\
    \ the higher\n   layers of the NEA reference model.  This should not be a high\
    \ bar\n   since all EAP tunnel methods currently support this, but not all\n \
    \  implementations of those methods may do so.\n"
- title: 6.  Privacy Considerations
  contents:
  - "6.  Privacy Considerations\n   The role of PT-EAP is to act as a secure transport\
    \ for PB-TNC over a\n   network before the endpoint has been admitted to the network.\
    \  As a\n   transport protocol, PT-EAP does not directly utilize or require\n\
    \   direct knowledge of any personally identifiable information (PII).\n   PT-EAP\
    \ will typically be used in conjunction with other EAP methods\n   that provide\
    \ for the user authentication (if bidirectional\n   authentication is used), so\
    \ the user's credentials are not directly\n   seen by the PT-EAP inner method.\n\
    \   While PT-EAP does not provide cryptographic protection for the PB-TNC\n  \
    \ batches, it is designed to operate within an EAP tunnel method that\n   provides\
    \ strong authentication, integrity, and confidentiality\n   services.  Therefore,\
    \ it is important for deployers to leverage these\n   protections in order to\
    \ prevent disclosure of PII potentially\n   contained within PA-TNC or PB-TNC\
    \ within the PT-EAP payload.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This section provides guidance to the Internet Assigned\
    \ Numbers\n   Authority (IANA) regarding registration of values related to the\n\
    \   PT-EAP protocol, in accordance with BCP 26 [RFC5226].\n   The EAP Method type\
    \ for PT-EAP has been assigned value 54, i.e., the\n   assignment for Type in\
    \ Section 3.3.\n            +-------+----------------------------+-----------+\n\
    \            | Value |        Description         | Reference |\n            +-------+----------------------------+-----------+\n\
    \            |   54  | EAP Method Type for PT-EAP | [RFC7171] |\n            +-------+----------------------------+-----------+\n\
    \   This document also defines one new IANA top-level registry: \"PT-EAP\n   Versions\"\
    .  This section explains how this registry works.  Because\n   only eight (8)\
    \ values are available in this registry, a high bar is\n   set for new assignments.\
    \  The only way to register new values in this\n   registry is through Standards\
    \ Action (via an approved Standards Track\n   RFC).\n"
- title: 7.1.  Registry for PT-EAP Versions
  contents:
  - "7.1.  Registry for PT-EAP Versions\n   The name for this registry is \"PT-EAP\
    \ Versions\".  Each entry in this\n   registry includes a decimal integer value\
    \ between 1 and 7 identifying\n   the version and also includes a reference to\
    \ the RFC where the\n   version is defined.\n   The following entries are defined\
    \ in this document and are the\n   initial entries in the registry.  Additional\
    \ entries to this registry\n   are added by Standards Action, as defined in RFC\
    \ 5226 [RFC5226].\n                    +-------+------------------------+\n  \
    \                  | Value | Defining Specification |\n                    +-------+------------------------+\n\
    \                    |   0   |        Reserved        |\n                    |\
    \   1   |       [RFC7171]        |\n                    +-------+------------------------+\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks to the Trusted Computing Group for contributing\
    \ the initial\n   text upon which this document was based.\n   The authors of\
    \ this document would like to acknowledge the following\n   people who have contributed\
    \ to or provided substantial input on the\n   preparation of this document or\
    \ predecessors to it: Amit Agarwal,\n   Morteza Ansari, Diana Arroyo, Stuart Bailey,\
    \ Boris Balacheff, Uri\n   Blumenthal, Gene Chang, Scott Cochrane, Pasi Eronen,\
    \ Aman Garg,\n   Sandilya Garimella, David Grawrock, Stephen Hanna, Thomas Hardjono,\n\
    \   Chris Hessing, Ryan Hurst, Hidenobu Ito, John Jerrim, Meenakshi\n   Kaushik,\
    \ Greg Kazmierczak, Scott Kelly, Bryan Kingsford, PJ Kirner,\n   Sung Lee, Lisa\
    \ Lorenzin, Mahalingam Mani, Bipin Mistry, Seiji\n   Munetoh, Rod Murchison, Barbara\
    \ Nelson, Kazuaki Nimura, Ron Pon, Ivan\n   Pulleyn, Alex Romanyuk, Ravi Sahita,\
    \ Joseph Salowey, Chris Salter,\n   Mauricio Sanchez, Dean Sheffield, Curtis Simonson,\
    \ Jeff Six, Ned\n   Smith, Michelle Sommerstad, Joseph Tardo, Lee Terrell, Susan\
    \ Thomson,\n   Chris Trytten, and John Vollbrecht.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and\
    \ H.\n              Levkowetz, \"Extensible Authentication Protocol (EAP)\", RFC\n\
    \              3748, June 2004.\n   [RFC5209]  Sangster, P., Khosravi, H., Mani,\
    \ M., Narayan, K., and J.\n              Tardo, \"Network Endpoint Assessment\
    \ (NEA): Overview and\n              Requirements\", RFC 5209, June 2008.\n  \
    \ [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n     \
    \         IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n         \
    \     May 2008.\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer\
    \ Security\n              (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n\
    \   [RFC5792]  Sangster, P. and K. Narayan, \"PA-TNC: A Posture Attribute\n  \
    \            (PA) Protocol Compatible with Trusted Network Connect\n         \
    \     (TNC)\", RFC 5792, March 2010.\n   [RFC5793]  Sahita, R., Hanna, S., Hurst,\
    \ R., and K. Narayan, \"PB-TNC:\n              A Posture Broker (PB) Protocol\
    \ Compatible with Trusted\n              Network Connect (TNC)\", RFC 5793, March\
    \ 2010.\n   [RFC5929]  Altman, J., Williams, N., and L. Zhu, \"Channel Bindings\n\
    \              for TLS\", RFC 5929, July 2010.\n   [RFC7170]  Zhou, H., Cam-Winget,\
    \ N., Salowey, J., and S. Hanna,\n              \"Tunnel Extensible Authentication\
    \ Protocol (TEAP) Version\n              1\", RFC 7170, May 2014.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [Asokan]   Asokan, N., Niemi, V., Nyberg, K.,\
    \ and Nokia Research\n              Center, Finland, \"Man-in-the-Middle Attacks\
    \ in Tunneled\n              Authentication Protocols\", Nov 2002,\n         \
    \     <http://eprint.iacr.org/2002/163.pdf>.\n   [RFC4851]  Cam-Winget, N., McGrew,\
    \ D., Salowey, J., and H. Zhou, \"The\n              Flexible Authentication via\
    \ Secure Tunneling Extensible\n              Authentication Protocol Method (EAP-FAST)\"\
    , RFC 4851, May\n              2007.\n   [RFC5281]  Funk, P. and S. Blake-Wilson,\
    \ \"Extensible Authentication\n              Protocol Tunneled Transport Layer\
    \ Security Authenticated\n              Protocol Version 0 (EAP-TTLSv0)\", RFC\
    \ 5281, August 2008.\n   [RFC6813]  Salowey, J. and S. Hanna, \"The Network Endpoint\
    \ Assessment\n              (NEA) Asokan Attack Analysis\", RFC 6813, December\
    \ 2012.\n   [RFC6876]  Sangster, P., Cam-Winget, N., and J. Salowey, \"A Posture\n\
    \              Transport Protocol over TLS (PT-TLS)\", RFC 6876, February\n  \
    \            2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nancy Cam-Winget\n   Cisco Systems\n   80 West Tasman\
    \ Drive\n   San Jose, CA  95134\n   US\n   EMail: ncamwing@cisco.com\n   Paul\
    \ Sangster\n   Symantec Corporation\n   6825 Citrine Drive\n   Carlsbad, CA  92009\n\
    \   US\n   EMail: paul_sangster@symantec.com\n"
