- title: __initial_text__
  contents:
  - "  Control and Provisioning of Wireless Access Points (CAPWAP) Protocol\n    \
    \                  Binding MIB for IEEE 802.11\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols.  In particular, it\n   describes\
    \ managed objects for modeling the Control And Provisioning\n   of Wireless Access\
    \ Points (CAPWAP) protocol for IEEE 802.11 wireless\n   binding.  This MIB module\
    \ is presented as a basis for future work on\n   the management of the CAPWAP\
    \ protocol using the Simple Network\n   Management Protocol (SNMP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5834.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  The Internet-Standard Management Framework . . . . .\
    \ . . . . .  3\n   3.  Terminology  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n   4.  Conventions  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n     5.1.  WLAN Profile . . . . . . . . . . . . . . . . . . . . . .\
    \ .  5\n     5.2.  Requirements and Constraints . . . . . . . . . . . . . . .\
    \  5\n     5.3.  Mechanism of Reusing Wireless Binding MIB Module . . . . .  6\n\
    \   6.  Structure of MIB Module  . . . . . . . . . . . . . . . . . . .  6\n  \
    \ 7.  Relationship to Other MIB Modules  . . . . . . . . . . . . . .  7\n    \
    \ 7.1.  Relationship to SNMPv2-MIB Module  . . . . . . . . . . . .  7\n     7.2.\
    \  Relationship to IF-MIB Module  . . . . . . . . . . . . . .  7\n     7.3.  Relationship\
    \ to CAPWAP-BASE-MIB Module . . . . . . . . . .  7\n     7.4.  Relationship to\
    \ MIB Module in the IEEE 802.11 Standard . .  8\n     7.5.  MIB Modules Required\
    \ for IMPORTS . . . . . . . . . . . . .  8\n   8.  Example of CAPWAP-DOT11-MIB\
    \ Module Usage . . . . . . . . . . .  8\n   9.  Definitions  . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 14\n   10. Security Considerations  . . . .\
    \ . . . . . . . . . . . . . . . 21\n   11. IANA Considerations  . . . . . . .\
    \ . . . . . . . . . . . . . . 22\n     11.1. IANA Considerations for CAPWAP-DOT11-MIB\
    \ Module  . . . . . 22\n     11.2. IANA Considerations for ifType . . . . . .\
    \ . . . . . . . . 22\n   12. Contributors . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 22\n   13. Acknowledgements . . . . . . . . . . . . . . . . .\
    \ . . . . . . 23\n   14. References . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . 23\n     14.1. Normative References . . . . . . . . . . . . . . .\
    \ . . . . 23\n     14.2. Informative References . . . . . . . . . . . . . . .\
    \ . . . 24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The CAPWAP protocol [RFC5415] defines a standard, interoperable\n\
    \   protocol, which enables an Access Controller (AC) to manage a\n   collection\
    \ of Wireless Termination Points (WTPs).  CAPWAP supports\n   the use of various\
    \ wireless technologies by the WTPs, with one\n   specified in the CAPWAP Protocol\
    \ Binding for IEEE 802.11 [RFC5416].\n   This document defines a MIB module that\
    \ can be used to manage CAPWAP\n   implementations for IEEE 802.11 wireless binding.\
    \  This MIB module\n   covers both configuration for Wireless Local Area Network\
    \ (WLAN) and\n   a way to reuse the IEEE 802.11 MIB module [IEEE.802-11.2007].\
    \  It is\n   presented as a basis for future work on the SNMP management of the\n\
    \   CAPWAP protocol.\n"
- title: 2.  The Internet-Standard Management Framework
  contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of\
    \ the documents that describe the current\n   Internet-Standard Management Framework,\
    \ please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  MIB objects are generally\n   accessed through the Simple Network\
    \ Management Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms\
    \ defined in the\n   Structure of Management Information (SMI).  This memo specifies\
    \ a MIB\n   module that is compliant to the SMIv2, which is described in STD 58,\n\
    \   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580\n   [RFC2580].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   This document uses terminology from the CAPWAP protocol specification\n\
    \   [RFC5415], the CAPWAP Protocol Binding for IEEE 802.11 [RFC5416], and\n  \
    \ the CAPWAP Protocol Base MIB [RFC5833].\n   Access Controller (AC): The network\
    \ entity that provides WTP access\n   to the network infrastructure in the data\
    \ plane, control plane,\n   management plane, or a combination therein.\n   Wireless\
    \ Termination Point (WTP): The physical or network entity that\n   contains an\
    \ RF antenna and wireless physical layer (PHY) to transmit\n   and receive station\
    \ traffic for wireless access networks.\n   Control And Provisioning of Wireless\
    \ Access Points (CAPWAP): It is a\n   generic protocol defining AC and WTP control\
    \ and data plane\n   communication via a CAPWAP protocol transport mechanism.\
    \  CAPWAP\n   control messages, and optionally CAPWAP data messages, are secured\n\
    \   using Datagram Transport Layer Security (DTLS) [RFC4347].\n   CAPWAP Control\
    \ Channel: A bi-directional flow defined by the AC IP\n   Address, WTP IP Address,\
    \ AC control port, WTP control port, and the\n   transport-layer protocol (UDP\
    \ or UDP-Lite) over which CAPWAP control\n   packets are sent and received.\n\
    \   CAPWAP Data Channel: A bi-directional flow defined by the AC IP\n   Address,\
    \ WTP IP Address, AC data port, WTP data port, and the\n   transport-layer protocol\
    \ (UDP or UDP-Lite) over which CAPWAP data\n   packets are sent and received.\n\
    \   Station (STA): A device that contains an interface to a wireless\n   medium\
    \ (WM).\n   Split and Local MAC: The CAPWAP protocol supports two modes of\n \
    \  operation: Split and Local MAC (medium access control).  In Split MAC\n   mode,\
    \ all Layer 2 wireless data and management frames are\n   encapsulated via the\
    \ CAPWAP protocol and exchanged between the AC and\n   the WTPs.  The Local MAC\
    \ mode of operation allows the data frames to\n   be either locally bridged or\
    \ tunneled as 802.3 frames.\n   Wireless Binding: The CAPWAP protocol is independent\
    \ of a specific\n   WTP radio technology, as well its associated wireless link\
    \ layer\n   protocol.  Elements of the CAPWAP protocol are designed to\n   accommodate\
    \ the specific needs of each wireless technology in a\n   standard way.  Implementation\
    \ of the CAPWAP protocol for a particular\n   wireless technology MUST define\
    \ a binding protocol for it, e.g., the\n   binding for IEEE 802.11, provided in\
    \ [RFC5416].\n   Wireless Local Area Network (WLAN): A WLAN refers to a logical\n\
    \   component instantiated on a WTP device.  A single physical WTP MAY\n   operate\
    \ a number of WLANs.  Each Basic Service Set Identifier (BSSID)\n   and its constituent\
    \ wireless terminal radios are denoted as a\n   distinct WLAN on a physical WTP.\
    \  To support a physical WTP with\n   multiple WLANs is an important feature for\
    \ CAPWAP protocol's 802.11\n   binding, and it is also for MIB module design.\n\
    \   Wireless Binding MIB Module: Other Standards Development\n   Organizations\
    \ (SDOs), such as IEEE, already defined MIB modules for\n   specific wireless\
    \ technologies, e.g., the IEEE 802.11 MIB module\n   [IEEE.802-11.2007].  Such\
    \ MIB modules are called wireless binding MIB\n   modules.\n   CAPWAP Protocol\
    \ Wireless Binding MIB Module: It is a MIB module\n   corresponding to the CAPWAP\
    \ Protocol Binding for a wireless binding.\n   Sometimes, not all the technology-specific\
    \ message elements in a\n   CAPWAP binding protocol have MIB objects defined by\
    \ other SDOs.  For\n   example, the protocol of [RFC5416] defines WLAN conception.\
    \  Also,\n   Local or Split MAC modes could be specified for a WLAN.  The MAC\
    \ mode\n   for a WLAN is not in the scope of IEEE 802.11 [IEEE.802-11.2007]. \
    \ In\n   such cases, in addition to the existing wireless binding MIB modules\n\
    \   defined by other SDOs, a CAPWAP protocol wireless binding MIB module\n   is\
    \ required to be defined for a wireless binding.\n"
- title: 4.  Conventions
  contents:
  - "4.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 5.  Overview
  contents:
  - '5.  Overview

    '
- title: 5.1.  WLAN Profile
  contents:
  - "5.1.  WLAN Profile\n   A WLAN profile stores configuration parameters such as\
    \ MAC type and\n   tunnel mode for a WLAN.  Each WLAN profile is identified by\
    \ a profile\n   identifier.  The operator needs to create WLAN profiles before\
    \ WTPs\n   connect to the AC.  To provide WLAN service, the operator SHOULD bind\n\
    \   WLAN profiles to a WTP Virtual Radio Interface that corresponds to a\n   PHY\
    \ radio.  During the binding operation, the AC MUST select an\n   unused WLAN\
    \ ID between 1 and 16 [RFC5416].  For example, to bind one\n   more WLAN profile\
    \ to a radio that has been bound with a WLAN profile,\n   the AC SHOULD allocate\
    \ WLAN ID 2 to the radio.  Although the maximum\n   value of a WLAN ID is 16,\
    \ the operator could configure more than 16\n   WLAN Profiles on the AC.\n"
- title: 5.2.  Requirements and Constraints
  contents:
  - "5.2.  Requirements and Constraints\n   The IEEE 802.11 MIB module [IEEE.802-11.2007]\
    \ already defines MIB\n   objects for most IEEE 802.11 Message Elements in the\
    \ CAPWAP Protocol\n   Binding for IEEE 802.11 [RFC5416].  As a CAPWAP protocol\
    \ 802.11\n   binding MIB module, the CAPWAP-DOT11-MIB module MUST be able to reuse\n\
    \   such MIB objects in the IEEE 802.11 MIB module and support functions\n   (such\
    \ as MAC mode for WLAN in the [RFC5416]) that are not in the\n   scope of IEEE\
    \ 802.11 standard.  The CAPWAP-DOT11-MIB module MUST\n   support such functions.\n\
    \   In summary, the CAPWAP-DOT11-MIB module needs to support:\n   - Reuse of wireless\
    \ binding MIB modules in the IEEE 802.11 standard;\n   - Centralized management\
    \ and configuration of WLAN profiles on the\n     AC;\n   - Configuration of a\
    \ MAC type and tunnel mode for a specific WLAN\n     profile.\n"
- title: 5.3.  Mechanism of Reusing Wireless Binding MIB Module
  contents:
  - "5.3.  Mechanism of Reusing Wireless Binding MIB Module\n   In the IEEE 802.11\
    \ MIB module, the MIB tables such as\n   dot11AuthenticationAlgorithmsTable are\
    \ able to support WLAN\n   configuration (such as authentication algorithm), and\
    \ these tables\n   use the ifIndex as the index which works well in the autonomous\
    \ WLAN\n   architecture.\n   Reuse of such wireless binding MIB modules is very\
    \ important to\n   centralized WLAN architectures.  The key point is to abstract\
    \ a WLAN\n   profile as a WLAN Profile Interface on the AC, which could be\n \
    \  identified by an ifIndex.  The MIB objects in the IEEE 802.11 MIB\n   module\
    \ which are associated with this interface can be used to\n   configure WLAN parameters\
    \ for the WLAN, such as authentication\n   algorithm.  With the ifIndex of a WLAN\
    \ Profile Interface, the AC is\n   able to reuse the IEEE 802.11 MIB module.\n\
    \   In the CAPWAP-BASE-MIB module, each PHY radio is identified by a WTP\n   ID\
    \ and a radio ID, and has a corresponding WTP Virtual Radio\n   Interface on the\
    \ AC.  The IEEE 802.11 MIB module associated with this\n   interface can be used\
    \ to configure IEEE 802.11 wireless binding\n   parameters for the radio such\
    \ as RTS Threshold.  A WLAN Basic Service\n   Set (BSS) Interface, created by\
    \ binding a WLAN to a WTP Virtual Radio\n   Interface, is used for data forwarding.\n"
- title: 6.  Structure of MIB Module
  contents:
  - "6.  Structure of MIB Module\n   The MIB objects are derived from the CAPWAP protocol\
    \ binding for IEEE\n   802.11 document [RFC5416].\n      capwapDot11WlanTable\n\
    \      The table allows the operator to display and configure WLAN\n      profiles,\
    \ such as specifying the MAC type and tunnel mode for a\n      WLAN.  Also, it\
    \ helps the AC to configure a WLAN through the IEEE\n      802.11 MIB module.\n\
    \      capwapDot11WlanBindTable\n      The table provides a way to bind WLAN profiles\
    \ to a WTP Virtual\n      Radio Interface, which has a corresponding PHY radio.\
    \  A binding\n      operation dynamically creates a WLAN BSS Interface, which\
    \ is used\n      for data forwarding.\n"
- title: 7.  Relationship to Other MIB Modules
  contents:
  - '7.  Relationship to Other MIB Modules

    '
- title: 7.1.  Relationship to SNMPv2-MIB Module
  contents:
  - "7.1.  Relationship to SNMPv2-MIB Module\n   The CAPWAP-DOT11-MIB module does\
    \ not duplicate the objects of the\n   'system' group in the SNMPv2-MIB [RFC3418]\
    \ that is defined as being\n   mandatory for all systems, and the objects apply\
    \ to the entity as a\n   whole.  The 'system' group provides identification of\
    \ the management\n   entity and certain other system-wide data.\n"
- title: 7.2.  Relationship to IF-MIB Module
  contents:
  - "7.2.  Relationship to IF-MIB Module\n   The Interfaces Group [RFC2863] defines\
    \ generic managed objects for\n   managing interfaces.  This memo contains the\
    \ media-specific\n   extensions to the Interfaces Group for managing WLAN that\
    \ are modeled\n   as interfaces.\n   Each WLAN profile corresponds to a WLAN Profile\
    \ Interface on the AC.\n   The interface MUST be modeled as an ifEntry, and ifEntry\
    \ objects such\n   as ifIndex, ifDescr, ifName, and ifAlias are to be used as\
    \ per\n   [RFC2863].  The WLAN Profile Interface provides a way to configure\n\
    \   IEEE 802.11 parameters for a specific WLAN and reuse the IEEE 802.11\n   MIB\
    \ module.\n   To provide data forwarding service, the AC dynamically creates WLAN\n\
    \   BSS Interfaces.  A WLAN BSS Interface MUST be modeled as an ifEntry,\n   and\
    \ ifEntry objects such as ifIndex, ifDescr, ifName, and ifAlias are\n   to be\
    \ used as per [RFC2863].  The interface enables a single physical\n   WTP to support\
    \ multiple WLANs.\n   Also, the AC MUST have a mechanism that preserves the value\
    \ of the\n   ifIndexes (of both the WLAN Profile Interfaces and the WLAN BSS\n\
    \   Interfaces) in the ifTable at AC reboot.\n"
- title: 7.3.  Relationship to CAPWAP-BASE-MIB Module
  contents:
  - "7.3.  Relationship to CAPWAP-BASE-MIB Module\n   The CAPWAP-BASE-MIB module provides\
    \ a way to manage and control WTP\n   and radio objects.  Especially, it provides\
    \ the WTP Virtual Radio\n   Interface mechanism to enable the AC to reuse the\
    \ IEEE 802.11 MIB\n   module.  With this mechanism, an operator could configure\
    \ an IEEE\n   802.11 radio's parameters and view the radio's traffic statistics\
    \ on\n   the AC.  Based on the CAPWAP-BASE-MIB module, the CAPWAP-DOT11-MIB\n\
    \   module provides more WLAN information.\n"
- title: 7.4.  Relationship to MIB Module in the IEEE 802.11 Standard
  contents:
  - "7.4.  Relationship to MIB Module in the IEEE 802.11 Standard\n   With the ifIndex\
    \ of WLAN Profile Interface and WLAN BSS Interface,\n   the MIB module is able\
    \ to reuse the IEEE 802.11 MIB module\n   [IEEE.802-11.2007].  The CAPWAP-DOT11-MIB\
    \ module does not duplicate\n   those objects in the IEEE 802.11 MIB module.\n\
    \   The CAPWAP Protocol Binding for IEEE 802.11 [RFC5416] involves some\n   of\
    \ the MIB objects defined in the IEEE 802.11 standard.  Although\n   CAPWAP-DOT11-MIB\
    \ module uses it [RFC5416] as a reference, it could\n   reuse all the MIB objects\
    \ in the IEEE 802.11 standard , and is not\n   limited by the scope of CAPWAP\
    \ Protocol Binding for IEEE 802.11.\n"
- title: 7.5.  MIB Modules Required for IMPORTS
  contents:
  - "7.5.  MIB Modules Required for IMPORTS\n   The following MIB modules are required\
    \ for IMPORTS: SNMPv2-SMI\n   [RFC2578], SNMPv2-TC [RFC2579], SNMPv2-CONF [RFC2580],\
    \ IF-MIB\n   [RFC2863], and CAPWAP-BASE-MIB [RFC5833].\n"
- title: 8.  Example of CAPWAP-DOT11-MIB Module Usage
  contents:
  - "8.  Example of CAPWAP-DOT11-MIB Module Usage\n   1) Create a WTP profile.\n \
    \     Suppose the WTP's base MAC address is '00:01:01:01:01:00'.\n      Creates\
    \ a WTP profile for it through the capwapBaseWtpProfileTable\n      [RFC5833]\
    \ as follows:\n     In capwapBaseWtpProfileTable\n     {\n       capwapBaseWtpProfileId\
    \                  = 1,\n       capwapBaseWtpProfileName                = 'WTP\
    \ Profile 123456',\n       capwapBaseWtpProfileWtpMacAddress       = '00:01:01:01:01:00',\n\
    \       capwapBaseWtpProfileWTPModelNumber             = 'WTP123',\n       capwapBaseWtpProfileWtpName\
    \                    = 'WTP 123456',\n       capwapBaseWtpProfileWtpLocation \
    \               = 'office',\n       capwapBaseWtpProfileWtpStaticIpEnable    \
    \      = true(1),\n       capwapBaseWtpProfileWtpStaticIpType            = ipv4(1),\n\
    \       capwapBaseWtpProfileWtpStaticIpAddress         = '192.0.2.10',\n     \
    \  capwapBaseWtpProfileWtpNetmask                 = '255.255.255.0',\n       capwapBaseWtpProfileWtpGateway\
    \                 = '192.0.2.1',\n       capwapBaseWtpProfileWtpFallbackEnable\
    \          = true(1),\n       capwapBaseWtpProfileWtpEchoInterval            =\
    \ 30,\n       capwapBaseWtpProfileWtpIdleTimeout             = 300,\n       capwapBaseWtpProfileWtpMaxDiscoveryInterval\
    \    = 20,\n       capwapBaseWtpProfileWtpReportInterval          = 120,\n   \
    \    capwapBaseWtpProfileWtpStatisticsTimer         = 120,\n       capwapBaseWtpProfileWtpEcnSupport\
    \              = limited(0)\n     }\n      Suppose the WTP with model number 'WTP123'\
    \ has one PHY radio and\n      this PHY radio is identified by ID 1.  The creation\
    \ of this WTP\n      profile triggers the AC to automatically create a WTP Virtual\n\
    \      Radio Interface and add a new row object to the\n      capwapBaseWirelessBindingTable\
    \ without manual intervention.\n      Suppose the ifIndex of the WTP Virtual Radio\
    \ Interface is 10.  The\n      following information is stored in the\n      capwapBaseWirelessBindingTable.\n\
    \      In capwapBaseWirelessBindingTable\n      {\n        capwapBaseWtpProfileId\
    \                          = 1,\n        capwapBaseWirelessBindingRadioId    \
    \            = 1,\n        capwapBaseWirelessBindingVirtualRadioIfIndex    = 10,\n\
    \        capwapBaseWirelessBindingType                   = dot11(2)\n      }\n\
    \      The WTP Virtual Radio Interfaces on the AC correspond to the PHY\n    \
    \  radios on the WTP.  The WTP Virtual Radio Interface is modeled by\n      ifTable\
    \ [RFC2863].\n      In ifTable\n      {\n        ifIndex              = 10,\n\
    \        ifDescr              = 'WTP Virtual Radio Interface',\n        ifType\
    \               = 254,\n        ifMtu                = 0,\n        ifSpeed   \
    \           = 0,\n        ifPhysAddress        = '00:00:00:00:00:00',\n      \
    \  ifAdminStatus        = true(1),\n        ifOperStatus         = false(0),\n\
    \        ifLastChange         = 0,\n        ifInOctets           = 0,\n      \
    \  ifInUcastPkts        = 0,\n        ifInDiscards         = 0,\n        ifInErrors\
    \           = 0,\n        ifInUnknownProtos    = 0,\n        ifOutOctets     \
    \     = 0,\n        ifOutUcastPkts       = 0,\n        ifOutDiscards        =\
    \ 0,\n        ifOutErrors          = 0\n       }\n   2) Query the ifIndexes of\
    \ WTP Virtual Radio Interfaces.\n      Before configuring PHY radios, the operator\
    \ needs to get the\n      ifIndexes of WTP Virtual Radio Interfaces corresponding\
    \ to the PHY\n      radios.\n      As the capwapBaseWirelessBindingTable already\
    \ stores the mappings\n      between PHY radios (Radio IDs) and the ifIndexes\
    \ of WTP Virtual\n      Radio Interfaces, the operator can get the ifIndex information\
    \ by\n      querying this table.  Such a query operation SHOULD run from radio\n\
    \      ID 1 to radio ID 31 (according to [RFC5415]), and stop when an\n      invalid\
    \ ifIndex value (0) is returned.\n      This example uses capwapBaseWtpProfileId\
    \ = 1 and\n      capwapBaseWirelessBindingRadioId = 1 as inputs to query the\n\
    \      capwapBaseWirelessBindingTable, and gets\n      capwapBaseWirelessBindingVirtualRadioIfIndex\
    \ = 10.  Then it uses\n      capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId\
    \ =\n      2, and gets an invalid ifIndex value (0), so the query operation\n\
    \      ends.  This method gets not only the ifIndexes of WTP Virtual\n      Radio\
    \ Interfaces, but also the numbers of PHY radios.  Besides\n      checking whether\
    \ the ifIndex value is valid, the operator SHOULD\n      check whether the capwapBaseWirelessBindingType\
    \ is the desired\n      binding type.\n   3) Configure IEEE 802.11 parameters\
    \ for a WTP Virtual Radio Interface\n      This configuration is made on the AC\
    \ through the IEEE 802.11 MIB\n      module.\n      The following shows an example\
    \ of configuring parameters for a WTP\n      Virtual Radio Interface with ifIndex\
    \ 10 through the\n      dot11OperationTable [IEEE.802-11.2007].\n      In dot11OperationTable\n\
    \      {\n        ifIndex                                  = 10,\n        dot11MACAddress\
    \                          = '00:00:00:00:00:00',\n        dot11RTSThreshold \
    \                       = 2347,\n        dot11ShortRetryLimit                \
    \     = 7,\n        dot11LongRetryLimit                      = 4,\n        dot11FragmentationThreshold\
    \              = 256,\n        dot11MaxTransmitMSDULifetime             = 512,\n\
    \        dot11MaxReceiveLifetime                  = 512,\n        dot11ManufacturerID\
    \                      = 'capwap',\n        dot11ProductID                   \
    \        = 'capwap',\n        dot11CAPLimit                            = 2,\n\
    \        dot11HCCWmin                             = 0,\n        dot11HCCWmax \
    \                            = 0,\n        dot11HCCAIFSN                     \
    \       = 1,\n        dot11ADDBAResponseTimeout                = 1,\n        dot11ADDTSResponseTimeout\
    \                = 1,\n        dot11ChannelUtilizationBeaconInterval    = 50,\n\
    \        dot11ScheduleTimeout                     = 10,\n        dot11DLSResponseTimeout\
    \                  = 10,\n        dot11QAPMissingAckRetryLimit             = 1,\n\
    \        dot11EDCAAveragingPeriod                 = 5\n      }\n   4) Configure\
    \ a WLAN Profile.\n      WLAN configuration is made on the AC through the CAPWAP-DOT11-MIB\n\
    \      module, and IEEE 802.11 MIB module.\n      The first step is to create\
    \ a WLAN Profile Interface through the\n      CAPWAP-DOT11-MIB module on the AC.\n\
    \      For example, when you configure a WLAN profile that is identified\n   \
    \   by capwapDot11WlanProfileId 1, the capwapDot11WlanTable creates\n      the\
    \ following row object for it.\n      In capwapDot11WlanTable\n      {\n     \
    \   capwapDot11WlanProfileId          = 1,\n        capwapDot11WlanProfileIfIndex\
    \     = 20,\n        capwapDot11WlanMacType            = splitMAC(2),\n      \
    \  capwapDot11WlanTunnelMode         = dot3Tunnel(2),\n        capwapDot11WlanRowStatus\
    \          = createAndGo(4)\n      }\n      The creation of a row object triggers\
    \ the AC to automatically\n      create a WLAN Profile Interface and it is identified\
    \ by ifIndex 20\n      without manual intervention.\n      A WLAN Profile Interface\
    \ MUST be modeled as an ifEntry on the AC\n      that provides appropriate interface\
    \ information.  The\n      capwapDot11WlanTable stores the mappings between\n\
    \      capwapDot11WlanProfileIds and the ifIndexes of WLAN Profile\n      Interfaces.\n\
    \      In ifTable\n      {\n        ifIndex              = 20,\n        ifDescr\
    \              = 'WLAN Profile Interface',\n        ifType               = 252,\n\
    \        ifMtu                = 0,\n        ifSpeed              = 0,\n      \
    \  ifPhysAddress        = '00:00:00:00:00:00',\n        ifAdminStatus        =\
    \ true(1),\n        ifOperStatus         = true(1),\n        ifLastChange    \
    \     = 0,\n        ifInOctets           = 0,\n        ifInUcastPkts        =\
    \ 0,\n        ifInDiscards         = 0,\n        ifInErrors           = 0,\n \
    \       ifInUnknownProtos    = 0,\n        ifOutOctets          = 0,\n       \
    \ ifOutUcastPkts       = 0,\n        ifOutDiscards        = 0,\n        ifOutErrors\
    \          = 0\n      }\n      The second step is to configure WLAN parameters\
    \ for the WLAN\n      Profile Interface through the IEEE 802.11 MIB module on\
    \ the AC.\n      The following example configures an authentication algorithm\
    \ for a\n      WLAN.\n      In dot11AuthenticationAlgorithmsTable\n      {\n \
    \       ifIndex                                = 20,\n        dot11AuthenticationAlgorithmsIndex\
    \     = 1,\n        dot11AuthenticationAlgorithm           = Shared Key(2),\n\
    \        dot11AuthenticationAlgorithmsEnable    = true(1)\n      }\n      Here,\
    \ ifIndex 20 identifies the WLAN Profile Interface, and the\n      index of the\
    \ configured authentication algorithm is 1.\n   5) Bind WLAN Profiles to a WTP\
    \ radio.\n      On the AC, the capwapDot11WlanBindTable in the CAPWAP-DOT11-MIB\n\
    \      stores the bindings between WLAN profiles(identified by\n      capwapDot11WlanProfileId)\
    \ and WTP Virtual Radio Interfaces\n      (identified by the ifIndex).\n     \
    \ For example, after the operator binds a WLAN profile with\n      capwapDot11WlanProfileId\
    \ 1 to WTP Virtual Radio Interface with\n      ifIndex 10, the capwapDot11WlanBindTable\
    \ creates the following row\n      object.\n      In capwapDot11WlanBindTable\n\
    \      {\n        ifIndex                          = 10,\n        capwapDot11WlanProfileId\
    \         = 1,\n        capwapDot11WlanBindBssIfIndex    = 30,\n        capwapDot11WlanBindRowStatus\
    \     = createAndGo(4)\n      }\n      If the capwapDot11WlanMacType of the WLAN\
    \ is splitMAC(2), the\n      creation of the row object in the capwapDot11WlanBindTable\n\
    \      triggers the AC to automatically create a WLAN BSS Interface\n      identified\
    \ by ifIndex 30 without manual intervention.\n      The WLAN BSS Interface MUST\
    \ be modeled as an ifEntry on the AC,\n      which provides appropriate interface\
    \ information.  The\n      capwapDot11WlanBindTable stores the mappings among\
    \ the ifIndex of\n      a WTP Virtual Radio Interface, WLAN profile ID, WLAN ID,\
    \ and the\n      ifIndex of a WLAN BSS Interface.\n   6) Get the current configuration\
    \ status report from the WTP to the\n      AC.\n      Before a WTP that has joined\
    \ the AC gets configuration from the\n      AC, it needs to report its current\
    \ configuration status by sending\n      a configuration status request message\
    \ to the AC, which uses the\n      message to update corresponding MIB objects\
    \ on the AC.  For\n      example, for ifIndex 10 (which identifies a WLAN Virtual\
    \ Radio\n      Interface), its ifOperStatus in the ifTable is updated according\n\
    \      to the current radio operational status in the CAPWAP message\n      [RFC5415].\n\
    \   7) Query WTP and radio statistical data.\n      After WTPs start to run, the\
    \ operator could query WTP and radio\n      statistics data through the CAPWAP-BASE-MIB\
    \ and CAPWAP-DOT11-MIB\n      modules.  For example, through the dot11CountersTable\n\
    \      [IEEE.802-11.2007], the operator could query counter data of a\n      radio\
    \ that is identified by the ifIndex of the corresponding WLAN\n      Virtual Radio\
    \ Interface.\n   8) Query other statistical data.\n      The operator could query\
    \ the configuration of a WLAN through the\n      dot11AuthenticationAlgorithmsTable\
    \ [IEEE.802-11.2007] and the\n      statistical data of a WLAN BSS Interface through\
    \ the ifTable\n      [RFC2863].\n"
- title: 9.  Definitions
  contents:
  - '9.  Definitions

    '
- title: CAPWAP-DOT11-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'CAPWAP-DOT11-MIB DEFINITIONS ::= BEGIN

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n   RowStatus, TEXTUAL-CONVENTION\n       FROM SNMPv2-TC\n   OBJECT-GROUP,\
    \ MODULE-COMPLIANCE\n       FROM SNMPv2-CONF\n   MODULE-IDENTITY, OBJECT-TYPE,\
    \ mib-2, Unsigned32\n       FROM SNMPv2-SMI\n   ifIndex, InterfaceIndex\n    \
    \   FROM IF-MIB\n   CapwapBaseMacTypeTC, CapwapBaseTunnelModeTC\n       FROM CAPWAP-BASE-MIB;\n"
- title: capwapDot11MIB MODULE-IDENTITY
  contents:
  - "capwapDot11MIB MODULE-IDENTITY\n    LAST-UPDATED \"201004300000Z\"        --\
    \ 30 April 2010\n    ORGANIZATION \"IETF Control And Provisioning of Wireless\
    \ Access\n                  Points (CAPWAP) Working Group\n                  http://www.ietf.org/html.charters/capwap-charter.html\"\
    \n    CONTACT-INFO\n        \"General Discussion: capwap@frascone.com\n      \
    \   To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap\n        \
    \ Yang Shi (editor)\n         Hangzhou H3C Tech. Co., Ltd.\n         Beijing R&D\
    \ Center of H3C, Digital Technology Plaza\n         NO. 9 Shangdi 9th Street,\
    \ Haidian District\n         Beijing  100085\n         China\n         Phone:\
    \ +86 010 82775276\n         Email: rishyang@gmail.com\n         David T. Perkins\
    \ (editor)\n         228 Bayview Dr.\n         San Carlos, CA  94070\n       \
    \  USA\n         Phone: +1 408 394-8702\n         Email:  dperkins@dsperkins.com\n\
    \         Chris Elliott (editor)\n         1516 Kent St.\n         Durham, NC\
    \  27707\n         USA\n         Phone: +1 919-308-1216\n         Email: chelliot@pobox.com\n\
    \         Yong Zhang (editor)\n         Fortinet, Inc.\n         1090 Kifer Road\n\
    \         Sunnyvale, CA  94086\n         USA\n         Email: yzhang@fortinet.com\"\
    \n   DESCRIPTION\n       \"Copyright (c) 2010 IETF Trust and the persons identified\
    \ as\n        authors of the code.  All rights reserved.\n        Redistribution\
    \ and use in source and binary forms, with or\n        without modification, is\
    \ permitted pursuant to, and subject\n        to the license terms contained in,\
    \ the Simplified BSD License\n        set forth in Section 4.c of the IETF Trust's\
    \ Legal Provisions\n        Relating to IETF Documents\n        (http://trustee.ietf.org/license-info).\n\
    \        This version of this MIB module is part of RFC 5834;\n        see the\
    \ RFC itself for full legal notices.\n        This MIB module contains managed\
    \ object definitions for\n        CAPWAP Protocol binding for IEEE 802.11.\"\n\
    \   REVISION    \"201004300000Z\"\n   DESCRIPTION\n       \"Initial version, published\
    \ as RFC 5834\"\n        ::= { mib-2 195 }\n"
- title: -- Textual conventions
  contents:
  - '-- Textual conventions

    '
- title: CapwapDot11WlanIdTC ::= TEXTUAL-CONVENTION
  contents:
  - "CapwapDot11WlanIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS\
    \      current\n    DESCRIPTION\n        \"Represents the unique identifier of\
    \ a Wireless Local Area\n         Network (WLAN).\"\n    SYNTAX      Unsigned32\
    \ (1..16)\n"
- title: CapwapDot11WlanIdProfileTC ::= TEXTUAL-CONVENTION
  contents:
  - "CapwapDot11WlanIdProfileTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n \
    \   STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier\
    \ of a WLAN profile.\"\n    SYNTAX      Unsigned32 (1..512)\n"
- title: -- Top level components of this MIB module
  contents:
  - '-- Top level components of this MIB module

    '
- title: -- Tables, Scalars
  contents:
  - '-- Tables, Scalars

    '
- title: capwapDot11Objects OBJECT IDENTIFIER
  contents:
  - "capwapDot11Objects OBJECT IDENTIFIER\n    ::= { capwapDot11MIB 1 }\n"
- title: -- Conformance
  contents:
  - '-- Conformance

    '
- title: capwapDot11Conformance OBJECT IDENTIFIER
  contents:
  - "capwapDot11Conformance OBJECT IDENTIFIER\n    ::= { capwapDot11MIB 2 }\n"
- title: -- capwapDot11WlanTable Table
  contents:
  - '-- capwapDot11WlanTable Table

    '
- title: capwapDot11WlanTable OBJECT-TYPE
  contents:
  - "capwapDot11WlanTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapDot11WlanEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A table that allows the operator to display and configure\n         WLAN\
    \ profiles, such as specifying the MAC type and tunnel mode\n         for a WLAN.\
    \  Also, it helps the AC to configure a WLAN through\n         the IEEE 802.11\
    \ MIB module.\n         Values of all objects in this table are persistent at\n\
    \         restart/reboot.\"\n    ::= { capwapDot11Objects 1 }\n"
- title: capwapDot11WlanEntry  OBJECT-TYPE
  contents:
  - "capwapDot11WlanEntry  OBJECT-TYPE\n    SYNTAX      CapwapDot11WlanEntry\n   \
    \ MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n     \
    \   \"A set of objects that stores the settings of a WLAN profile.\"\n    INDEX\
    \ { capwapDot11WlanProfileId }\n    ::= { capwapDot11WlanTable 1 }\n"
- title: CapwapDot11WlanEntry ::=
  contents:
  - "CapwapDot11WlanEntry ::=\n    SEQUENCE {\n      capwapDot11WlanProfileId    \
    \      CapwapDot11WlanIdProfileTC,\n      capwapDot11WlanProfileIfIndex     InterfaceIndex,\n\
    \      capwapDot11WlanMacType            CapwapBaseMacTypeTC,\n      capwapDot11WlanTunnelMode\
    \         CapwapBaseTunnelModeTC,\n      capwapDot11WlanRowStatus          RowStatus\n\
    \    }\n"
- title: capwapDot11WlanProfileId OBJECT-TYPE
  contents:
  - "capwapDot11WlanProfileId OBJECT-TYPE\n    SYNTAX      CapwapDot11WlanIdProfileTC\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"Represents the identifier of a WLAN profile that has a\n         corresponding\
    \ capwapDot11WlanProfileIfIndex.\"\n    ::= { capwapDot11WlanEntry 1 }\n"
- title: capwapDot11WlanProfileIfIndex OBJECT-TYPE
  contents:
  - "capwapDot11WlanProfileIfIndex OBJECT-TYPE\n    SYNTAX      InterfaceIndex\n \
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"\
    Represents the index value that uniquely identifies a\n         WLAN Profile Interface.\
    \  The interface identified by a\n         particular value of this index is the\
    \ same interface as\n         identified by the same value of the ifIndex.\n \
    \        The creation of a row object in the capwapDot11WlanTable\n         triggers\
    \ the AC to automatically create an WLAN Profile\n         Interface identified\
    \ by an ifIndex without manual\n         intervention.\n         Most MIB tables\
    \ in the IEEE 802.11 MIB module\n         [IEEE.802-11.2007] use an ifIndex to\
    \ identify an interface\n         to facilitate the configuration and maintenance,\
    \ for example,\n         dot11AuthenticationAlgorithmsTable.\n         Using the\
    \ ifIndex of a WLAN Profile Interface, the Operator\n         could configure\
    \ a WLAN through the IEEE 802.11 MIB module.\"\n    ::= { capwapDot11WlanEntry\
    \ 2 }\n"
- title: capwapDot11WlanMacType OBJECT-TYPE
  contents:
  - "capwapDot11WlanMacType OBJECT-TYPE\n    SYNTAX      CapwapBaseMacTypeTC\n   \
    \ MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"\
    Represents whether the WTP SHOULD support the WLAN in\n         Local or Split\
    \ MAC modes.\"\n    REFERENCE\n        \"Section 6.1 of CAPWAP Protocol Binding\
    \ for IEEE 802.11,\n         RFC 5416.\"\n    ::= { capwapDot11WlanEntry 3 }\n"
- title: capwapDot11WlanTunnelMode OBJECT-TYPE
  contents:
  - "capwapDot11WlanTunnelMode OBJECT-TYPE\n    SYNTAX      CapwapBaseTunnelModeTC\n\
    \    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n     \
    \   \"Represents the frame tunneling mode to be used for IEEE 802.11\n       \
    \  data frames from all stations associated with the WLAN.\n         Bits are\
    \ exclusive with each other for a specific WLAN profile,\n         and only one\
    \ tunnel mode could be configured.\n         If the operator set more than one\
    \ bit, the value of the\n         Response-PDU's error-status field is set to\
    \ 'wrongValue',\n         and the value of its error-index field is set to the\
    \ index of\n         the failed variable binding.\"\n    REFERENCE\n        \"\
    Section 6.1 of CAPWAP Protocol Binding for IEEE 802.11,\n         RFC 5416.\"\n\
    \    ::= { capwapDot11WlanEntry 4 }\n"
- title: capwapDot11WlanRowStatus OBJECT-TYPE
  contents:
  - "capwapDot11WlanRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This variable\
    \ is used to create, modify, and/or delete a row\n         in this table.\n  \
    \       All the objects in a row can be modified only when the value\n       \
    \  of this object in the corresponding conceptual row is not\n         'active'.\
    \  Thus, to modify one or more of the objects in\n         this conceptual row:\n\
    \              a. change the row status to 'notInService',\n              b. change\
    \ the values of the row\n              c. change the row status to 'active'\n\
    \         The capwapDot11WlanRowStatus may be changed to 'active'\n         if\
    \ all the managed objects in the conceptual row with\n         MAX-ACCESS read-create\
    \ have been assigned valid values.\n         When the operator deletes a WLAN\
    \ profile, the AC SHOULD\n         check whether the WLAN profile is bound with\
    \ a radio.\n         If yes, the value of the Response-PDU's error-status field\n\
    \         is set to 'inconsistentValue', and the value of its\n         error-index\
    \ field is set to the index of the failed variable\n         binding.  If not,\
    \ the row object could be deleted.\"\n    ::= { capwapDot11WlanEntry 5 }\n"
- title: -- End of capwapDot11WlanTable Table
  contents:
  - '-- End of capwapDot11WlanTable Table

    '
- title: -- capwapDot11WlanBindTable Table
  contents:
  - '-- capwapDot11WlanBindTable Table

    '
- title: capwapDot11WlanBindTable OBJECT-TYPE
  contents:
  - "capwapDot11WlanBindTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapDot11WlanBindEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A table that stores bindings between WLAN profiles\n         (identified\
    \ by capwapDot11WlanProfileId) and WTP Virtual Radio\n         Interfaces.  The\
    \ WTP Virtual Radio Interfaces on the AC\n         correspond to physical layer\
    \ (PHY) radios on the WTPs.\n         It also stores the mappings between WLAN\
    \ IDs and WLAN\n         Basic Service Set (BSS) Interfaces.\n         Values\
    \ of all objects in this table are persistent at\n         restart/reboot.\"\n\
    \    REFERENCE\n        \"Section 6.1 of CAPWAP Protocol Binding for IEEE 802.11,\n\
    \         RFC 5416.\"\n    ::= { capwapDot11Objects 2 }\n"
- title: capwapDot11WlanBindEntry OBJECT-TYPE
  contents:
  - "capwapDot11WlanBindEntry OBJECT-TYPE\n    SYNTAX      CapwapDot11WlanBindEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A set of objects that stores the binding of a WLAN profile\n        \
    \ to a WTP Virtual Radio Interface.  It also stores the mapping\n         between\
    \ WLAN ID and WLAN BSS Interface.\n         The INDEX object ifIndex is the ifIndex\
    \ of a WTP Virtual\n         Radio Interface.\"\n    INDEX { ifIndex, capwapDot11WlanProfileId\
    \ }\n    ::= { capwapDot11WlanBindTable 1 }\n"
- title: CapwapDot11WlanBindEntry ::=
  contents:
  - "CapwapDot11WlanBindEntry ::=\n    SEQUENCE {\n      capwapDot11WlanBindWlanId\
    \        CapwapDot11WlanIdTC,\n      capwapDot11WlanBindBssIfIndex    InterfaceIndex,\n\
    \      capwapDot11WlanBindRowStatus     RowStatus\n    }\n"
- title: capwapDot11WlanBindWlanId OBJECT-TYPE
  contents:
  - "capwapDot11WlanBindWlanId OBJECT-TYPE\n    SYNTAX      CapwapDot11WlanIdTC\n\
    \    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n       \
    \ \"Represents the WLAN ID of a WLAN.\n         During a binding operation, the\
    \ AC MUST select an unused\n         WLAN ID from between 1 and 16 [RFC5416].\
    \  For example, to bind\n         another WLAN profile to a radio that has been\
    \ bound with\n         a WLAN profile, WLAN ID 2 should be assigned.\"\n    REFERENCE\n\
    \        \"Section 6.1 of CAPWAP Protocol Binding for IEEE 802.11,\n         RFC\
    \ 5416.\"\n    ::= { capwapDot11WlanBindEntry 1 }\n"
- title: capwapDot11WlanBindBssIfIndex OBJECT-TYPE
  contents:
  - "capwapDot11WlanBindBssIfIndex OBJECT-TYPE\n    SYNTAX      InterfaceIndex\n \
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"\
    Represents the index value that uniquely identifies a\n         WLAN BSS Interface.\
    \  The interface identified by a\n         particular value of this index is the\
    \ same interface as\n         identified by the same value of the ifIndex.\n \
    \        The ifIndex here is for a WLAN BSS Interface.\n         The creation\
    \ of a row object in the capwapDot11WlanBindTable\n         triggers the AC to\
    \ automatically create a WLAN BSS Interface\n         identified by an ifIndex\
    \ without manual intervention.\n         The PHY address of the capwapDot11WlanBindBssIfIndex\
    \ is the\n         BSSID.  While manufacturers are free to assign BSSIDs by using\n\
    \         any arbitrary mechanism, it is advised that where possible the\n   \
    \      BSSIDs are assigned as a contiguous block.\n         When assigned as a\
    \ block, implementations can still assign\n         any of the available BSSIDs\
    \ to any WLAN.  One possible method\n         is for the WTP to assign the address\
    \ using the following\n         algorithm: base BSSID address + WLAN ID.\"\n \
    \   REFERENCE\n        \"Section 2.4 of CAPWAP Protocol Binding for IEEE 802.11,\n\
    \         RFC 5416.\"\n    ::= { capwapDot11WlanBindEntry 2 }\n"
- title: capwapDot11WlanBindRowStatus OBJECT-TYPE
  contents:
  - "capwapDot11WlanBindRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS\
    \  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This variable\
    \ is used to create, modify, and/or delete a row\n         in this table.\n  \
    \       All the objects in a row can be modified only when the value\n       \
    \  of this object in the corresponding conceptual row is not\n         'active'.\
    \  Thus, to modify one or more of the objects in\n         this conceptual row:\n\
    \              a. change the row status to 'notInService',\n              b. change\
    \ the values of the row\n              c. change the row status to 'active'\"\n\
    \    ::= { capwapDot11WlanBindEntry 3 }\n"
- title: -- End of capwapDot11WlanBindTable Table
  contents:
  - '-- End of capwapDot11WlanBindTable Table

    '
- title: -- Module compliance
  contents:
  - '-- Module compliance

    '
- title: capwapDot11Groups OBJECT IDENTIFIER
  contents:
  - "capwapDot11Groups OBJECT IDENTIFIER\n    ::= { capwapDot11Conformance 1 }\n"
- title: capwapDot11Compliances OBJECT IDENTIFIER
  contents:
  - "capwapDot11Compliances OBJECT IDENTIFIER\n    ::= { capwapDot11Conformance 2\
    \ }\n"
- title: capwapDot11Compliance MODULE-COMPLIANCE
  contents:
  - "capwapDot11Compliance MODULE-COMPLIANCE\n    STATUS current\n    DESCRIPTION\n\
    \        \"Describes the requirements for conformance to the\n         CAPWAP-DOT11-MIB\
    \ module.\"\n    MODULE -- this module\n      MANDATORY-GROUPS {\n        capwapDot11WlanGroup,\n\
    \        capwapDot11WlanBindGroup\n      }\n    ::= { capwapDot11Compliances 1\
    \ }\n"
- title: capwapDot11WlanGroup    OBJECT-GROUP
  contents:
  - "capwapDot11WlanGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapDot11WlanProfileIfIndex,\n\
    \      capwapDot11WlanMacType,\n      capwapDot11WlanTunnelMode,\n      capwapDot11WlanRowStatus\n\
    \    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects\
    \ that is used to configure\n         the properties of a WLAN profile.\"\n  \
    \  ::= { capwapDot11Groups 1 }\n"
- title: capwapDot11WlanBindGroup    OBJECT-GROUP
  contents:
  - "capwapDot11WlanBindGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapDot11WlanBindWlanId,\n\
    \      capwapDot11WlanBindBssIfIndex,\n      capwapDot11WlanBindRowStatus\n  \
    \  }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects\
    \ that is used to bind the\n         WLAN profiles with a radio.\"\n    ::= {\
    \ capwapDot11Groups 2 }\n"
- title: END
  contents:
  - 'END

    '
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects MAY be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\
    \  The following are the tables and objects and\n   their sensitivity/vulnerability:\n\
    \   o  Unauthorized changes to the capwapDot11WlanTable and\n      capwapDot11WlanBindTable\
    \ MAY disrupt allocation of resources in\n      the network, and also change the\
    \ behavior of the WLAN system such\n      as MAC type.\n   SNMP versions prior\
    \ to SNMPv3 did not include adequate security.\n   Even if the network itself\
    \ is secure (for example by using IPSec),\n   even then, there is no control as\
    \ to who on the secure network is\n   allowed to access and GET/SET (read/change/create/delete)\
    \ the objects\n   in this MIB module.\n   It is RECOMMENDED that implementers\
    \ consider the security features as\n   provided by the SNMPv3 framework (see\
    \ [RFC3410], section 8),\n   including full support for the SNMPv3 cryptographic\
    \ mechanisms (for\n   authentication and privacy).\n   Further, deployment of\
    \ SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n\
    \   responsibility to ensure that the SNMP entity giving access to an\n   instance\
    \ of this MIB module is properly configured to give access to\n   the objects\
    \ only to those principals (users) that have legitimate\n   rights to indeed GET\
    \ or SET (change/create/delete) them.\n"
- title: 11.  IANA Considerations
  contents:
  - '11.  IANA Considerations

    '
- title: 11.1.  IANA Considerations for CAPWAP-DOT11-MIB Module
  contents:
  - "11.1.  IANA Considerations for CAPWAP-DOT11-MIB Module\n        The MIB module\
    \ in this document uses the following IANA-assigned\n        OBJECT IDENTIFIER\
    \ value recorded in the SMI Numbers registry:\n        Descriptor      OBJECT\
    \ IDENTIFIER value\n        ----------      -----------------------\n        capwapDot11MIB\
    \  { mib-2 195 }\n"
- title: 11.2.  IANA Considerations for ifType
  contents:
  - "11.2.  IANA Considerations for ifType\n   IANA has assigned the following ifTypes:\n\
    \       Decimal   Name                Description\n       -------   ------------\
    \        -------------------------------\n       252       capwapDot11Profile\
    \  WLAN Profile Interface\n       253       capwapDot11Bss      WLAN BSS Interface\n"
- title: 12.  Contributors
  contents:
  - "12.  Contributors\n   This MIB module is based on contributions from Long Gao.\n"
- title: 13.  Acknowledgements
  contents:
  - "13.  Acknowledgements\n   Thanks to David Harrington, Dan Romascanu, Abhijit\
    \ Choudhury, and\n   Elwyn Davies for helpful comments on this document and guiding\
    \ some\n   technical solutions.\n   The authors also thank their friends and coworkers\
    \ Fei Fang, Xuebin\n   Zhu, Hao Song, Yu Liu, Sachin Dutta, Ju Wang, Yujin Zhao,\
    \ Haitao\n   Zhang, Xiansen Cai, and Xiaolan Wan.\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [IEEE.802-11.2007]  \"Information technology\
    \ - Telecommunications and\n                       information exchange between\
    \ systems  - Local and\n                       metropolitan area networks - Specific\n\
    \                       requirements - Part 11: Wireless LAN Medium\n        \
    \               Access Control (MAC) and Physical Layer (PHY)\n              \
    \         specifications\", IEEE Standard 802.11, 2007, <htt\n               \
    \        p://standards.ieee.org/getieee802/download/\n                       802.11-2007.pdf>.\n\
    \   [RFC2119]           Bradner, S., \"Key words for use in RFCs to\n        \
    \               Indicate Requirement Levels\", BCP 14, RFC 2119,\n           \
    \            March 1997.\n   [RFC2578]           McCloghrie, K., Ed., Perkins,\
    \ D., Ed., and J.\n                       Schoenwaelder, Ed., \"Structure of Management\n\
    \                       Information Version 2 (SMIv2)\", STD 58, RFC 2578,\n \
    \                      April 1999.\n   [RFC2579]           McCloghrie, K., Ed.,\
    \ Perkins, D., Ed., and J.\n                       Schoenwaelder, Ed., \"Textual\
    \ Conventions for\n                       SMIv2\", STD 58, RFC 2579, April 1999.\n\
    \   [RFC2580]           McCloghrie, K., Perkins, D., and J.\n                \
    \       Schoenwaelder, \"Conformance Statements for\n                       SMIv2\"\
    , STD 58, RFC 2580, April 1999.\n   [RFC2863]           McCloghrie, K. and F.\
    \ Kastenholz, \"The Interfaces\n                       Group MIB\", RFC 2863,\
    \ June 2000.\n   [RFC3418]           Presuhn, R., \"Management Information Base\
    \ (MIB)\n                       for the Simple Network Management Protocol\n \
    \                      (SNMP)\", STD 62, RFC 3418, December 2002.\n   [RFC5415]\
    \           Calhoun, P., Montemurro, M., and D. Stanley,\n                   \
    \    \"Control And Provisioning of Wireless Access\n                       Points\
    \ (CAPWAP) Protocol Specification\",\n                       RFC 5415, March 2009.\n\
    \   [RFC5416]           Calhoun, P., Montemurro, M., and D. Stanley,\n       \
    \                \"Control and Provisioning of Wireless Access\n             \
    \          Points (CAPWAP) Protocol Binding for IEEE\n                       802.11\"\
    , RFC 5416, March 2009.\n   [RFC5833]           Shi, Y., Ed., Perkins, D., Ed.,\
    \ Elliott, C., Ed.,\n                       and Y. Zhang, Ed., \"Control and Provisioning\
    \ of\n                       Wireless Access Points (CAPWAP) Protocol Base\n \
    \                      MIB\", RFC 5833, May 2010.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [RFC3410]           Case, J., Mundy, R., Partain,\
    \ D., and B. Stewart,\n                       \"Introduction and Applicability\
    \ Statements for\n                       Internet-Standard Management Framework\"\
    ,\n                       RFC 3410, December 2002.\n   [RFC4347]           Rescorla,\
    \ E. and N. Modadugu, \"Datagram Transport\n                       Layer Security\"\
    , RFC 4347, April 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yang Shi (editor)\n   Hangzhou H3C Tech. Co., Ltd.\n \
    \  Beijing R&D Center of H3C, Digital Technology Plaza\n   NO. 9 Shangdi 9th Street,\
    \ Haidian District\n   Beijing  100085\n   China\n   Phone: +86 010 82775276\n\
    \   EMail: rishyang@gmail.com\n   David T. Perkins (editor)\n   228 Bayview Dr.\n\
    \   San Carlos, CA  94070\n   USA\n   Phone: +1 408 394-8702\n   EMail: dperkins@dsperkins.com\n\
    \   Chris Elliott (editor)\n   1516 Kent St.\n   Durham, NC  27707\n   USA\n \
    \  Phone: +1 919-308-1216\n   EMail: chelliot@pobox.com\n   Yong Zhang (editor)\n\
    \   Fortinet, Inc.\n   1090 Kifer Road\n   Sunnyvale, CA  94086\n   USA\n   EMail:\
    \ yzhang@fortinet.com\n"
