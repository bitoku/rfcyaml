- title: __initial_text__
  contents:
  - '             The PPP Triple-DES Encryption Protocol (3DESE)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ for\n   transporting multi-protocol datagrams over point-to-point links.\n \
    \  The PPP Encryption Control Protocol (ECP) [2] provides a method to\n   negotiate\
    \ and utilize encryption protocols over PPP encapsulated\n   links.\n   This document\
    \ provides specific details for the use of the Triple-DES\n   standard (3DES)\
    \ [6] for encrypting PPP encapsulated packets.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction ..............................................\
    \ 2\n   1.1  Algorithm ................................................. 2\n \
    \  1.2  Keys ...................................................... 3\n   2. \
    \  3DESE Configuration Option for ECP ........................ 3\n   3.   Packet\
    \ format for 3DESE ................................... 4\n   4.   Encryption ................................................\
    \ 5\n   4.1  Padding ................................................... 5\n \
    \  4.2  Recovery after packet loss ................................ 6\n   5. \
    \  Security Considerations ................................... 6\n   6.   References\
    \ ................................................ 7\n   7.   Acknowledgements\
    \ .......................................... 7\n   8.   Author's Address ..........................................\
    \ 7\n   9.   Full Copyright Statement .................................. 8\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The purpose of encrypting packets exchanged between two PPP\n\
    \   implementations is to attempt to insure the privacy of communication\n   conducted\
    \ via the two implementations. There exists a large variety\n   of encryption\
    \ algorithms, where one is the DES algorithm. The DES\n   encryption algorithm\
    \ is a well studied, understood and widely\n   implemented encryption algorithm.\
    \  Triple-DES means that this\n   algorithm is applied three times on the data\
    \ to be encrypted before\n   it is sent over the line. The variant used is the\
    \ DES-EDE3-CBC, which\n   is described in more detail in the text. It was also\
    \ chosen to be\n   applied in the security section of IP [5].\n   This document\
    \ shows how to send via the Triple-DES algorithm\n   encrypted packets over a\
    \ point-to-point-link. It lies in the context\n   of the generic PPP Encryption\
    \ Control Protocol [2].\n   Because of the use of the CBC-mode a sequence number\
    \ is provided to\n   ensure the right order of transmitted packets. So lost packets\
    \ can be\n   detected.\n   The padding section reflects the result of the discussion\
    \ on this\n   topic on the ppp mailing list.\n   In this document, the key words\
    \ \"MUST\", \"SHOULD\", and \"recommended\"\n   are to be interpreted as described\
    \ in [3].\n"
- title: 1.1  Algorithm
  contents:
  - "1.1  Algorithm\n   The DES-EDE3-CBC algorithm is a simple variant of the DES-CBC\n\
    \   algorithm.  In DES-EDE3-CBC, an Initialization Vector (IV) is XOR'd\n   with\
    \ the first 64-bit (8 octet) plaintext block (P1).  The keyed DES\n   function\
    \ is iterated three times, an encryption (E) followed by a\n   decryption (D)\
    \ followed by an encryption (E), and generates the\n   ciphertext (C1) for the\
    \ block. Each iteration uses an independent\n   key: k1, k2 and k3.\n   For successive\
    \ blocks, the previous ciphertext block is XOR'd with\n   the current 8-octet\
    \ plaintext block (Pi). The keyed DES-EDE3\n   encryption function generates the\
    \ ciphertext (Ci) for that block.\n                      P1             P2   \
    \              Pi\n                      |              |                  |\n\
    \               IV--->(X)    +------>(X)      +-------->(X)\n                \
    \      v     |        v       |          v\n                   +-----+  |    \
    \ +-----+    |       +-----+\n               k1->|  E  |  | k1->|  E  |    : \
    \  k1->|  E  |\n                   +-----+  |     +-----+    :       +-----+\n\
    \                      |     |        |       :          |\n                 \
    \     v     |        v       :          v\n                   +-----+  ^     +-----+\
    \    ^       +-----+\n               k2->|  D  |  | k2->|  D  |    |   k2->| \
    \ D  |\n                   +-----+  |     +-----+    |       +-----+\n       \
    \               |     |        |       |          |\n                      v \
    \    |        v       |          v\n                   +-----+  |     +-----+\
    \    |       +-----+\n               k3->|  E  |  | k3->|  E  |    |   k3->| \
    \ E  |\n                   +-----+  |     +-----+    |       +-----+\n       \
    \               |     |        |       |          |\n                      +---->+\
    \        +------>+          +---->\n                      |              |   \
    \               |\n                      C1             C2                 Ci\n\
    \   To decrypt, the order of the functions is reversed: decrypt with k3,\n   encrypt\
    \ with k2, decrypt with k1, and XOR with the previous cipher-\n   text block.\n\
    \   When all three keys (k1, k2 and k3) are the same, DES-EDE3-CBC is\n   equivalent\
    \ to DES-CBC.\n"
- title: 1.2  Keys
  contents:
  - "1.2  Keys\n   The secret DES-EDE3 key shared between the communicating parties\
    \ is\n   effectively 168-bits long.  This key consists of three independent\n\
    \   56-bit quantities used by the DES algorithm.  Each of the three 56-\n   bit\
    \ subkeys is stored as a 64-bit (8 octet) quantity, with the least\n   significant\
    \ bit of each octet used as a parity bit.\n   When configuring keys for 3DESE\
    \ those with incorrect parity or so-\n   called weak keys [6] SHOULD be rejected.\n"
- title: 2.  3DESE Configuration Option for ECP
  contents:
  - "2.  3DESE Configuration Option for ECP\n   Description\n        The ECP 3DESE\
    \ Configuration Option indicates that the issuing\n        implementation is offering\
    \ to employ this specification for\n        decrypting communications on the link,\
    \ and may be thought of as\n        a request for its peer to encrypt packets\
    \ in this manner.  The\n        ECP 3DESE Configuration Option has the following\
    \ fields, which\n        are transmitted from left to right:\n               \
    \    Figure 1:  ECP 3DESE Configuration Option\n      0                   1  \
    \                 2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |         Initial Nonce ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n           2, to indicate the 3DESE protocol.\n      Length\n   \
    \        10\n      Initial Nonce\n              This field is an 8 byte quantity\
    \ which is used by the peer\n              implementation to encrypt the first\
    \ packet transmitted\n              after the sender reaches the opened state.\
    \ To guard\n              against replay attacks, the implementation SHOULD offer\
    \ a\n              different value during each ECP negotiation.\n"
- title: 3.  Packet format for 3DESE
  contents:
  - "3.  Packet format for 3DESE\n   Description\n        The 3DESE packets that contain\
    \ the encrypted payload have the\n        following fields:\n               Figure\
    \ 2:  3DESE Encryption Protocol Packet Format\n      0                   1   \
    \                2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |    Address    |    Control    |     0000      |  Protocol ID  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \ Seq. No. High | Seq. No. Low  |        Ciphertext ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Address and Control\n              These fields MUST be present unless\
    \ the PPP Address and\n              Control Field Compression option (ACFC) has\
    \ been\n              negotiated.\n        Protocol ID\n              The value\
    \ of this field is 0x53 or 0x55; the latter\n              indicates the use of\
    \ the Individual Link Encryption\n              Control Protocol and that the\
    \ ciphertext contains a\n              Multilink fragment.  Protocol Field Compression\
    \ MAY be\n              applied to the leading zero if negotiated.\n        Sequence\
    \ Number\n              These 16-bit numbers are assigned by the encryptor\n \
    \             sequentially starting with 0 (for the first packet\n           \
    \   transmitted once ECP has reached the opened state).\n        Ciphertext\n\
    \              The generation of this data is described in the next\n        \
    \      section.\n"
- title: 4.  Encryption
  contents:
  - "4.  Encryption\n   Once the ECP has reached the Opened state, the sender MUST\
    \ NOT apply\n   the encryption procedure to LCP packets nor ECP packets.\n   If\
    \ the async control character map option has been negotiated on the\n   link,\
    \ the sender applies mapping after the encryption algorithm has\n   been run.\n\
    \   The encryption algorithm is generally to pad the Protocol and\n   Information\
    \ fields of a PPP packet to some multiple of 8 bytes, and\n   apply 3DES as described\
    \ in section 1.1 with the three 56-bit keys k1,\n   k2 and k3.\n   The encryption\
    \ procedure is only applied to that portion of the\n   packet excluding the address\
    \ and control field.\n   When encrypting the first packet after ECP stepped into\
    \ opened state\n   the Initial Nonce is encrypted via 3DES-algorithm before its\
    \ use.\n"
- title: 4.1  Padding
  contents:
  - "4.1  Padding\n   Since the 3DES algorithm operates on blocks of 8 octets, plain\
    \ text\n   packets which are of length not a multiple of 8 octets must be padded\n\
    \   prior to encrypting.  If this padding is not removed after decryption\n  \
    \ this can be injurious to the interpretation of some protocols which\n   do not\
    \ contain an explicit length field in their protocol headers.\n   Therefore all\
    \ packets not already a multiple of eight bytes in length\n   MUST be padded prior\
    \ to encrypting using the unambiguous technique of\n   Self Describing Padding\
    \ with a Maximum Pad Value (MPV) of 8. This\n   means that the plain text is padded\
    \ with the sequence of octets 1, 2,\n   3, .. 7 since its length is a multiple\
    \ of 8 octets. Negotiation of\n   SDP is not needed.  Negotiation of the LCP Self\
    \ Describing Option may\n   be negotiated independently to solve an orthogonal\
    \ problem.\n   Plain text which length is already a multiple of 8 octets may require\n\
    \   padding with a further 8 octets (1, 2, 3 ... 8).  These additional\n   octets\
    \ MUST only be appended, if the last octet of the plain text had\n   a value of\
    \ 8 or less.\n   When using Multilink and encrypting on individual links it is\n\
    \   recommended that all non-terminating fragments have a length\n   divisible\
    \ by 8. So no additional padding is needed on those\n   fragments.\n   After the\
    \ peer has decrypted the ciphertext, it strips off the Self\n   Describing Padding\
    \ octets to recreate the original plain text.  The\n   peer SHOULD discard the\
    \ frame if the octets forming the padding do\n   not match the Self Describing\
    \ Padding scheme just described.\n   Note that after decrypting, only the content\
    \ of the last byte needs\n   to be examined to determine the presence or absence\
    \ of a Self\n   Described Pad.\n"
- title: 4.2  Recovery after packet loss
  contents:
  - "4.2  Recovery after packet loss\n   Packet loss is detected when there is a discontinuity\
    \ in the sequence\n   numbers of consecutive packets.  Suppose packet number N\
    \ - 1 has an\n   unrecoverable error or is otherwise lost, but packets N and N\
    \ + 1 are\n   received correctly.\n   Since the previously described algorithm\
    \ requires the last Ci of\n   packet N - 1 to decrypt C1 of packet N, it will\
    \ be impossible to\n   decrypt packet N.  However, all packets N + 1 and following\
    \ can be\n   decrypted in the usual way, since all that is required is the last\n\
    \   block of ciphertext of the previous packet (in this case packet N,\n   which\
    \ WAS received).\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This proposal is concerned with providing confidentiality\
    \ solely.  It\n   does not describe any mechanisms for integrity, authentication\
    \ or\n   nonrepudiation.  It does not guarantee that any message received has\n\
    \   not been modified in transit through replay, cut-and-paste or active\n   tampering.\
    \  It does not provide authentication of the source of any\n   packet received,\
    \ or protect against the sender of any packet denying\n   its authorship.\n  \
    \ Security issues are the primary subject of this memo. This proposal\n   relies\
    \ on exterior and unspecified methods for retrieval of shared\n   secrets.  It\
    \ proposes no new technology for privacy, but merely\n   describes a convention\
    \ for the application of the 3DES cipher to data\n   transmission between PPP\
    \ implementations.  Any methodology for the\n   protection and retrieval of shared\
    \ secrets, and any limitations of\n   the 3DES cipher are relevant to the use\
    \ described here.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1]  Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\"\
    , STD\n        51, RFC 1661, July 1994.\n   [2]  Meyer, G., \"The PPP Encryption\
    \ Control Protocol (ECP)\", RFC\n        1968, June 1996.\n   [3]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [4]  Sklower, K., and G. Meyer, \"The PPP DES Encryption\
    \ Protocol,\n        Version 2 (DESE-bis)\", RFC 2419, September 1998.\n   [5]\
    \  Doraswamy, N., Metzger, P., Simpson, W., \"The ESP Triple DES\n        Transform\"\
    , Work in Progress, June 1997.\n   [6]  Schneier, B., \"Applied Cryptography\"\
    , Second Edition, John Wiley\n        & Sons, New York, NY, 1995, ISBN 0-471-12845-7.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Many portions of this document were taken from [4] and\
    \ [5]. Bill\n   Simpson gave useful hints on the initial revision.\n"
- title: 8. Author's Address
  contents:
  - "8. Author's Address\n   Holger Kummert\n   Nentec Gesellschaft fuer Netzwerktechnologie\n\
    \   76227 Karlsruhe, Killisfeldstr. 64, Germany\n   Phone: +49 721 9495 0\n  \
    \ EMail: kummert@nentec.de\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
