- title: __initial_text__
  contents:
  - '      Analysis of Existing Quality-of-Service Signaling Protocols

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document reviews some of the existing Quality of Service (QoS)\n\
    \   signaling protocols for an IP network.  The goal here is to learn\n   from\
    \ them and to avoid common misconceptions.  Further, we need to\n   avoid mistakes\
    \ during the design and implementation of any new\n   protocol in this area.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. RSVP and RSVP Extensions ........................................4\n  \
    \    2.1. Basic Design ...............................................4\n    \
    \       2.1.1. Signaling Model .....................................4\n      \
    \     2.1.2. Soft State ..........................................5\n        \
    \   2.1.3. Two-Pass Signaling Message Exchanges ................5\n          \
    \ 2.1.4. Receiver-Based Resource Reservation .................5\n           2.1.5.\
    \ Separation of QoS Signaling from Routing ............5\n      2.2. RSVP Extensions\
    \ ............................................6\n           2.2.1. Simple Tunneling\
    \ ....................................6\n           2.2.2. IPsec Interface .....................................6\n\
    \           2.2.3. Policy Interface ....................................6\n  \
    \         2.2.4. Refresh Reduction ...................................7\n    \
    \       2.2.5. RSVP over RSVP ......................................8\n      \
    \     2.2.6. IEEE 802-Style LAN Interface ........................8\n        \
    \   2.2.7. ATM Interface .......................................9\n          \
    \ 2.2.8. DiffServ Interface ..................................9\n           2.2.9.\
    \ Null Service Type ...................................9\n           2.2.10. MPLS\
    \ Traffic Engineering ..........................10\n           2.2.11. GMPLS and\
    \ RSVP-TE .................................11\n           2.2.12. GMPLS Operation\
    \ at UNI and E-NNI Reference\n                   Points ............................................12\n\
    \           2.2.13. MPLS and GMPLS Future Extensions ..................12\n  \
    \         2.2.14. ITU-T H.323 Interface .............................13\n    \
    \       2.2.15. 3GPP Interface ....................................13\n      2.3.\
    \ Extensions for New Deployment Scenarios ...................14\n      2.4. Conclusion\
    \ ................................................15\n   3. RSVP Transport Mechanism\
    \ Issues ................................16\n      3.1. Messaging Reliability\
    \ .....................................16\n      3.2. Message Packing ...........................................17\n\
    \      3.3. MTU Problem ...............................................17\n  \
    \    3.4. RSVP-TE vs. Signaling Protocol for RT Applications ........18\n    \
    \  3.5. What Would Be a Better Alternative? .......................18\n   4. RSVP\
    \ Protocol Performance Issues ...............................19\n      4.1. Processing\
    \ Overhead .......................................19\n      4.2. Bandwidth Consumption\
    \ .....................................20\n   5. RSVP Security and Mobility .....................................21\n\
    \      5.1. Security ..................................................21\n  \
    \    5.2. Mobility Support ..........................................22\n   6.\
    \ Other QoS Signaling Proposals ..................................23\n      6.1.\
    \ Tenet and ST-II ...........................................23\n      6.2. YESSIR\
    \ ....................................................24\n           6.2.1. Reservation\
    \ Functionality ..........................24\n           6.2.2. Conclusion .........................................25\n\
    \      6.3. Boomerang .................................................25\n  \
    \         6.3.1. Reservation Functionality ..........................25\n    \
    \       6.3.2. Conclusions ........................................26\n      6.4.\
    \ INSIGNIA ..................................................26\n   7. Inter-Domain\
    \ Signaling .........................................27\n      7.1. BGRP ......................................................27\n\
    \      7.2. SICAP .....................................................27\n  \
    \    7.3. DARIS .....................................................28\n   8.\
    \ Security Considerations ........................................30\n   9. Summary\
    \ ........................................................30\n   10. Contributors\
    \ ..................................................31\n   11. Acknowledgements\
    \ ..............................................31\n   12. Appendix A: Comparison\
    \ of RSVP to the NSIS Requirements .......32\n   13. Normative References ..........................................38\n\
    \   14. Informative References ........................................38\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document reviews some of the existing QoS signaling\
    \ protocols\n   for an IP network.  The goal here is to learn from them and to\
    \ avoid\n   common misconceptions.  Further, we need to avoid mistakes during\
    \ the\n   design and implementation of any new protocol in this area.\n   There\
    \ have been a number of historic attempts to deliver QoS or\n   generic signaling\
    \ to the Internet.  In the early years, it was\n   believed that multicast would\
    \ be popular for the majority of\n   communications; thus, both RSVP and earlier\
    \ ST-II were designed in a\n   way that is multicast-oriented.\n   ST-II was developed\
    \ as a reservation protocol for point-to-multipoint\n   communication.  However,\
    \ since it is sender-initiated, it does not\n   scale with the number of receivers\
    \ in a multicast group.  Its\n   processing is fairly complex.  Since every sender\
    \ needs to set up its\n   own reservation, the total amount of reservation states\
    \ is large.\n   RSVP was then designed to provide support for multipoint-to-\n\
    \   multipoint reservation setup in a more efficient way.  However, its\n   complexity,\
    \ scalability, and ability to meet new requirements have\n   been criticized.\n\
    \   YESSIR (YEt another Sender Session Internet Reservations) [PS98] and\n   Boomerang\
    \ [FNM+99] are examples of protocols designed after RSVP.\n   Both were meant\
    \ to be simpler than RSVP.  YESSIR is an extension to\n   RTCP, whereas Boomerang\
    \ is used with ICMP.\n   Previously, a lot of work has been targeted at creating\
    \ a new\n   signaling protocol for resource control.  Istvan Cselenyi suggested\n\
    \   having a QoSSIG BOF in IETF47, for identifying problems in QoS\n   signaling,\
    \ but failed to get enough support [URL1].  Some people\n   argued, \"in many\
    \ ways, RSVP improved upon ST-2, and it did start out\n   simpler, but it resulted\
    \ in a design with complexity and\n   scalability\", while others thought that\
    \ \"new knowledge and\n   requirements\" made RSVP insufficient.  Some concluded\
    \ that there is\n   no simpler way to handle the same problem than RSVP.\n   Michael\
    \ Welzl organized a special session \"ABR to the Internet\" in\n   SCI 2001, and\
    \ gathered some inputs for requesting an \"ABR to the\n   Internet\" BOF in IETF#51,\
    \ which was intended to introduce explicit\n   rate-feedback-related mechanisms\
    \ for the Internet (e2e, edge2edge).\n   This failed because of \"missing community\
    \ interest\".\n   OPENSIG [URL2] has been involved in the Internet signaling for\
    \ years.\n   Ping Pan initiated a SIGLITE [URL3] BOF mailing list to investigate\n\
    \   lightweight Internet signaling.  Finally, NSIS BOF was successful,\n   and\
    \ the NSIS WG was formed.\n   The most mature and original protocols are presented\
    \ in their own\n   sections, and other QoS signaling protocols are presented in\
    \ later\n   subsections.  The presented protocols are chosen based on relevance\n\
    \   to the work within NSIS.  The aim is not to review every existing\n   protocol.\n"
- title: 2.  RSVP and RSVP Extensions
  contents:
  - "2.  RSVP and RSVP Extensions\n   RSVP (the Resource Reservation Protocol) [ZDSZ93]\
    \ [RFC2205] [BEBH96]\n   has evolved from ST-II to provide end-to-end QoS signaling\
    \ services\n   for application data streams.  Hosts use RSVP to request a specific\n\
    \   quality of service (QoS) from the network for particular application\n   flows.\
    \  Routers use RSVP to deliver QoS requests to all routers along\n   the data\
    \ path.  RSVP also can maintain and refresh states for a\n   requested QoS application\
    \ flow.\n   By original design, RSVP fits well into the framework of the\n   Integrated\
    \ Services (IntServ) [RFC2210] [BEBH96] with certain\n   modularity and scalability.\n\
    \   RSVP carries QoS signaling messages through the network, visiting\n   each\
    \ node along the data path.  To make a resource reservation at a\n   node, the\
    \ RSVP module communicates with two local decision modules,\n   admission control\
    \ and policy control.  Admission control determines\n   whether the node has sufficient\
    \ available resources to supply the\n   requested QoS.  Policy control provides\
    \ authorization for the QoS\n   request.  If either check fails, the RSVP module\
    \ returns an error\n   notification to the application process that originated\
    \ the request.\n   If both checks succeed, the RSVP module sets parameters in\
    \ a packet\n   classifier and packet scheduler to obtain the desired QoS.\n"
- title: 2.1.  Basic Design
  contents:
  - "2.1.  Basic Design\n   The design of RSVP distinguished itself by a number of\
    \ fundamental\n   ways; particularly, soft state management, two-pass signaling\
    \ message\n   exchanges, receiver-based resource reservation, and separation of\
    \ QoS\n   signaling from routing.\n"
- title: 2.1.1.  Signaling Model
  contents:
  - "2.1.1.  Signaling Model\n   The RSVP signaling model is based on a special handling\
    \ of multicast.\n   The sender of a multicast flow advertises the traffic characteristics\n\
    \   periodically to the receivers via \"Path\" messages.  Upon receipt of\n  \
    \ an advertisement, a receiver may generate a \"Resv\" message to reserve\n  \
    \ resources along the flow path from the sender.  Receiver reservations\n   may\
    \ be heterogeneous.  To accommodate the multipoint-to-multipoint\n   multicast\
    \ applications, RSVP was designed to support a vector of\n   reservation attributes\
    \ called the \"style\".  A style describes whether\n   all senders of a multicast\
    \ group share a single reservation and which\n   receiver is applied.  The \"\
    Scope\" object additionally provides the\n   explicit list of senders.\n"
- title: 2.1.2.  Soft State
  contents:
  - "2.1.2.  Soft State\n   Because the number of receivers in a multicast flow is\
    \ likely to\n   change, and the flow of delivery paths might change during the\
    \ life\n   of an application flow, RSVP takes a soft-state approach in its\n \
    \  design, creating and removing the protocol states (Path and Resv\n   states)\
    \ in routers and hosts incrementally over time.  RSVP sends\n   periodic refresh\
    \ messages (Path and Resv) to maintain its states and\n   to recover from occasional\
    \ lost messages.  In the absence of refresh\n   messages, the RSVP states automatically\
    \ time out and are deleted.\n   States may also be deleted explicitly by PathTear,\
    \ PathErr with\n   Path_State_Removed flag, or ResvTear Message.\n"
- title: 2.1.3.  Two-Pass Signaling Message Exchanges
  contents:
  - "2.1.3.  Two-Pass Signaling Message Exchanges\n   The receiver in an application\
    \ flow is responsible for requesting the\n   desired QoS from the sender.  To\
    \ do this, the receiver issues an RSVP\n   QoS request on behalf of the local\
    \ application.  The request\n   propagates to all routers in reverse direction\
    \ of the data paths\n   toward the sender.  In this process, RSVP requests might\
    \ be merged,\n   resulting in a protocol that scales well when there are a large\n\
    \   number of receivers.\n"
- title: 2.1.4.  Receiver-Based Resource Reservation
  contents:
  - "2.1.4.  Receiver-Based Resource Reservation\n   Receiver-initiation is critical\
    \ for RSVP to set up multicast sessions\n   with a large number of heterogeneous\
    \ receivers.  A receiver initiates\n   a reservation request at a leaf of the\
    \ multicast distribution tree,\n   traveling toward the sender.  Whenever a reservation\
    \ is found to\n   already exist in a node in the distribution tree, the new request\n\
    \   will be merged with the existing reservation.  This could result in\n   fewer\
    \ signaling operations for the RSVP nodes in the multicast tree\n   close to the\
    \ sender but could introduce a restriction to receiver-\n   initiation.\n"
- title: 2.1.5.  Separation of QoS Signaling from Routing
  contents:
  - "2.1.5.  Separation of QoS Signaling from Routing\n   RSVP messages follow normal\
    \ IP routing.  RSVP is not a routing\n   protocol, but rather is designed to operate\
    \ with current and future\n   unicast and multicast routing protocols.  The routing\
    \ protocols are\n   responsible for choosing the routes to use to forward packets,\
    \ and\n   RSVP consults local routing tables to obtain routes.  RSVP is\n   responsible\
    \ only for reservation setup along a data path.\n   A number of messages and objects\
    \ have been defined for the protocol.\n   A detailed description is given in [RFC2205].\n"
- title: 2.2.  RSVP Extensions
  contents:
  - "2.2.  RSVP Extensions\n   RSVP [RFC2205] was originally designed to support real-time\n\
    \   applications over the Internet.  Over the past several years, the\n   demand\
    \ for multicast-capable real-time teleconferencing, which many\n   people had\
    \ envisioned to be one of the key Internet applications that\n   could benefit\
    \ from network-wide deployment of RSVP, has never\n   materialized.  Instead,\
    \ RSVP-TE [RFC3209], a RSVP extension for\n   traffic engineering, has been widely\
    \ deployed by a large number of\n   network providers to support MPLS applications.\n\
    \   There are a large number of protocol extensions based on RSVP.  Some\n   provide\
    \ additional features, such as security and scalability, to the\n   original protocol.\
    \  Some introduce additional interfaces to other\n   services, such as DiffServ.\
    \  And some simply define new applications,\n   such as MPLS and GMPLS, that are\
    \ completely irrelevant from\n   protocol's original intent.\n   In this section,\
    \ we list only IETF-based RFCs and a limited set of\n   other organizations' specifications.\
    \  Informational RFCs (e.g.,\n   RFC2998 [RFC2998]) and work-in-progress I-Ds\
    \ (e.g., proxy) are not\n   covered here.\n"
- title: 2.2.1.  Simple Tunneling
  contents:
  - "2.2.1.  Simple Tunneling\n   [RFC2746] describes an IP tunneling enhancement\
    \ mechanism that allows\n   RSVP to make reservations across all IP-in-IP tunnels,\
    \ basically by\n   recursively applying RSVP over the tunnel portion of the path.\n"
- title: 2.2.2.  IPsec Interface
  contents:
  - "2.2.2.  IPsec Interface\n   RSVP can support IPsec on a per-address, per-protocol\
    \ basis instead\n   of on a per flow basis.  [RFC2207] extends RSVP by using the\
    \ IPsec\n   Security Parameter Index (SPI) in place of the UDP/TCP-like ports.\n\
    \   This introduces a new FILTER_SPEC object, which contains the IPsec\n   SPI,\
    \ and a new SESSION object.\n"
- title: 2.2.3.  Policy Interface
  contents:
  - "2.2.3.  Policy Interface\n   [RFC2750] specifies the format of POLICY_DATA objects\
    \ and RSVP's\n   handling of policy events.  It introduces objects that are\n\
    \   interpreted only by policy-aware nodes (PEPs) that interact with\n   policy\
    \ decision points (PDPs).  Nodes that are unable to interpret\n   the POLICY_DATA\
    \ objects are called policy-ignorant nodes (PINs).  The\n   content of the POLICY_DATA\
    \ object itself is protected only between\n   PEPs and therefore provides end-to-middle\
    \ or middle-to-middle\n   security.\n   [RFC2749] specifies the usage of COPS\
    \ policy services in RSVP\n   environments.  [RFC3181] specifies a preemption\
    \ priority policy\n   element (PREEMPTION_PRI) for use by RSVP POLICY_DATA Object.\n\
    \   [RFC3520] describes how authorization provided by a separate protocol\n  \
    \ (such as SIP) can be reused with the help of an authorization token\n   within\
    \ RSVP.  The token might therefore contain either the authorized\n   information\
    \ itself (e.g., QoS parameters) or a reference to those\n   values.  The token\
    \ might be unprotected (which is strongly\n   discouraged) or protected based\
    \ on symmetric or asymmetric\n   cryptography.  Moreover, the document describes\
    \ how to provide the\n   host with encoded session authorization information as\
    \ a POLICY_DATA\n   object.\n"
- title: 2.2.4.  Refresh Reduction
  contents:
  - "2.2.4.  Refresh Reduction\n   [RFC2961] describes mechanisms to reduce processing\
    \ overhead\n   requirements of refresh messages, eliminate the state synchronization\n\
    \   latency incurred when an RSVP message is lost, and refresh state\n   without\
    \ the transmission of whole refresh messages.  It defines the\n   following objects:\
    \ MESSAGE_ID, MESSAGE_ID_ACK, MESSAGE_ID_NACK,\n   MESSAGE_ID LIST, MESSAGE_ID\
    \ SRC_LIST, and MESSAGE_ID MCAST_LIST\n   objects.  Three new RSVP message types\
    \ are defined:\n   1) Bundle messages consist of a bundle header followed by a\
    \ body\n      consisting one or more standard RSVP messages.  Bundle messages\n\
    \      help in scaling RSVP to reduce processing overhead and bandwidth\n    \
    \  consumption.\n   2) ACK messages carry one or more MESSAGE_ID_ACK or MESSAGE_ID_NACK\n\
    \      objects.  ACK messages are sent between neighboring RSVP nodes to\n   \
    \   detect message loss and to support reliable RSVP message delivery\n      on\
    \ a per-hop basis.\n   3) Srefresh messages carry one or more MESSAGE_ID LIST,\
    \ MESSAGE_ID\n      SRC_LIST, and MESSAGE_ID MCAST_LIST objects.  They correspond\
    \ to\n      Path and Resv messages that establish the states.  Srefresh\n    \
    \  messages are used to refresh RSVP states without transmitting\n      standard\
    \ Path or Resv messages.\n"
- title: 2.2.5.  RSVP over RSVP
  contents:
  - "2.2.5.  RSVP over RSVP\n   [RFC3175] allows installation of one or more aggregated\
    \ reservations\n   in an aggregation region; thus, the number of individual RSVP\n\
    \   sessions can be reduced.  The protocol type is swapped from RSVP to\n   RSVP-E2E-IGNORE\
    \ in E2E (standard) Path, PathTear, and ResvConf\n   messages when they enter\
    \ the aggregation region, and is swapped back\n   when they leave.  In addition\
    \ to a new PathErr code\n   (NEW_AGGREGATE_NEEDED), three new objects are introduced:\n\
    \   1) SESSION object, which contains two values: the IP Address of the\n    \
    \  aggregate session destination, and the Differentiated Services\n      Code\
    \ Point (DSCP) that it will use on the E2E data the reservation\n      contains.\n\
    \   2) SENDER_TEMPLATE object, which identifies the aggregating router\n     \
    \ for the aggregate reservation.\n   3) FILTER_SPEC object, which identifies the\
    \ aggregating router for\n      the aggregate reservation, and is syntactically\
    \ identical to the\n      SENDER_TEMPLATE object.\n   From the perspective of\
    \ RSVP signaling and the handling of data\n   packets in the aggregation region,\
    \ these cases are equivalent to that\n   of aggregating E2E RSVP reservations.\
    \  The only difference is that\n   E2E RSVP signaling does not take place and\
    \ cannot therefore be used\n   as a trigger, so some additional knowledge is required\
    \ for setting up\n   the aggregate reservation.\n"
- title: 2.2.6.  IEEE 802-Style LAN Interface
  contents:
  - "2.2.6.  IEEE 802-Style LAN Interface\n   [RFC2814] introduces an RSVP LAN_NHOP\
    \ address object that keeps track\n   of the next L3 hop as the PATH message traverses\
    \ an L2 domain between\n   two L3 entities (RSVP PHOP and NHOP nodes).  Both layer-2\
    \ and layer-3\n   addresses are included in the LAN_NHOP; the RSVP_HOP_L2 object\
    \ is\n   used to include the Layer-2 address (L2ADDR) of the previous hop,\n \
    \  complementing the L3 address information included in the RSVP_HOP\n   object\
    \ (RSVP_HOP_L3 address).\n   To provide sufficient information for debugging or\
    \ resource\n   management, RSVP diagnostic messages (DREQ and DREP) are defined\
    \ in\n   [RFC2745] to collect and report RSVP state information along the path\n\
    \   from a receiver to a specific sender.\n"
- title: 2.2.7.  ATM Interface
  contents:
  - "2.2.7.  ATM Interface\n   [RFC2379] and [RFC2380] define RSVP over ATM implementation\n\
    \   guidelines and requirements to interwork with the ATM (Forum) UNI\n   3.x/4.0.\
    \  [RFC2380] states that the RSVP (control) messages and RSVP\n   associated data\
    \ packets must not be sent on the same virtual circuits\n   (VCs), and that an\
    \ explicit release of RSVP associated QoS VCs must\n   be performed once the VC\
    \ for forwarding RSVP control messages\n   terminates.  Although a separate control\
    \ VC is also possible for\n   forwarding RSVP control messages, [RFC2379] recommends\
    \ creating a\n   best-effort short-cut first (if one does not exist), which can\
    \ allow\n   setting up RSVP-triggered VCs to use the best-effort end-point.  (A\n\
    \   short-cut is a point-to-point VC where the two end-points are located\n  \
    \ in different IP subnets.)  For data flows, the subnet senders must\n   establish\
    \ all QoS VCs, and the RSVP-enabled subnet receiver must be\n   able to accept\
    \ incoming QoS VCs.  RSVP must request that the\n   configurable inactivity timers\
    \ of VCs be set to \"infinite\".  If it is\n   too complex to do this at the VC\
    \ receiver, RSVP over ATM\n   implementations are required not to use an inactivity\
    \ timer to clear\n   any received connections.  For dynamic QoS, the replacement\
    \ of VC\n   should be done gracefully.\n"
- title: 2.2.8.  DiffServ Interface
  contents:
  - "2.2.8.  DiffServ Interface\n   RFC2996 [RFC2996] introduces a DCLASS Object to\
    \ carry Differentiated\n   Services Code Points (DSCPs) in RSVP message objects.\
    \  If the network\n   element determines that the RSVP request is admissible to\
    \ the\n   DiffServ network, one or more DSCPs corresponding to the behavior\n\
    \   aggregate are determined, and will be carried by the DCLASS Object\n   added\
    \ to the RESV message upstream toward the RSVP sender.\n"
- title: 2.2.9.  Null Service Type
  contents:
  - "2.2.9.  Null Service Type\n   For some applications, service parameters are specified\
    \ by the\n   network, not by the application; e.g., enterprise resource planning\n\
    \   (ERP) applications.  The Null Service [RFC2997] allows applications\n   to\
    \ identify themselves to network QoS policy agents using RSVP\n   signaling, but\
    \ does not require them to specify resource\n   requirements.  QoS policy agents\
    \ in the network respond by applying\n   QoS policies appropriate for the application\
    \ (as determined by the\n   network administrator).  The RSVP sender offers the\
    \ new service type,\n   'Null Service Type', in the ADSPEC that is included with\
    \ the PATH\n   message.  A new TSPEC corresponding to the new service type is\
    \ added\n   to the SENDER_TSPEC.  In addition, the RSVP sender will typically\n\
    \   include with the PATH message policy objects identifying the user,\n   application\
    \ and sub-flow, which will be used for network nodes to\n   manage the correspondent\
    \ traffic flow.\n"
- title: 2.2.10.  MPLS Traffic Engineering
  contents:
  - "2.2.10.  MPLS Traffic Engineering\n   RSVP-TE [RFC3209] specifies the core extensions\
    \ to RSVP for\n   establishing constraint-based explicitly routed LSPs in MPLS\
    \ networks\n   using RSVP as a signaling protocol.  RSVP-TE is intended for use\
    \ by\n   label switching routers (as well as hosts) to establish and maintain\n\
    \   LSP-tunnels and to reserve network resources for such LSP-tunnels.\n   RFC3209\
    \ defines a new Hello message (for rapid node failure\n   detection).\n   RFC3209\
    \ also defines new C-Types (LSP_TUNNEL_IPv4 and\n   LSP_TUNNEL_IPv6) for the SESSION,\
    \ SENDER_TEMPLATE, and FILTER_SPEC\n   objects.  Here, a session is the association\
    \ of LSPs that support the\n   LSP-tunnel.  The traffic on an LSP can be classified\
    \ as the set of\n   packets that are assigned the same MPLS label value at the\n\
    \   originating node of an LSP-tunnel.\n   The following 5 new objects are also\
    \ defined:\n   1) EXPLICIT_ROUTE object (ERO), which is incorporated into RSVP\
    \ Path\n      messages, encapsulating a concatenation of hops that constitutes\n\
    \      the explicitly routed path.  Using this object, the paths taken by\n  \
    \    label-switched RSVP-MPLS flows can be pre-determined independently\n    \
    \  of conventional IP routing.\n   2) LABEL_REQUEST object.  To establish an LSP\
    \ tunnel, the sender can\n      create a Path message with a LABEL_REQUEST object.\
    \  A node that\n      sends a LABEL_REQUEST object MUST be ready to accept and\
    \ correctly\n      process a LABEL object in the corresponding Resv messages.\n\
    \   3) LABEL object.  Each node that receives a Resv message containing a\n  \
    \    LABEL object uses that label for outgoing traffic associated with\n     \
    \ this LSP tunnel.\n   4) SESSION_ATTRIBUTE object, which can be added to Path\
    \ messages to\n      aid in session identification and diagnostics.  Additional\
    \ control\n      information, such as setup and holding priorities, resource\n\
    \      affinities, and local-protection, are also included in this\n      object.\n\
    \   5) RECORD_ROUTE object (RRO).  The RECORD_ROUTE object may appear in\n   \
    \   both Path and Resv messages.  It is used to collect detailed path\n      information\
    \ and is useful for loop detection and for diagnostics.\n   Section 5 of [RFC3270]\
    \ further specifies the extensions to RSVP to\n   establish LSPs supporting DiffServ\
    \ in MPLS networks, introducing a\n   new DIFFSERV Object (applicable in the Path\
    \ messages), and using\n   pre-configured or signaled \"EXP<-->PHB mapping\" (e.g.,\
    \ [RFC3270]).\n   RSVP-TE provides a way to indicate an unnumbered link in its\
    \ Explicit\n   Route and Record Route Objects through [RFC3477].  This specifies\
    \ the\n   following extensions:\n   - An Unnumbered Interface ID Subobject, which\
    \ is a subobject of the\n     Explicit Route Object (ERO) used to specify unnumbered\
    \ links.\n   - An LSP_TUNNEL_INTERFACE_ID Object, to allow the adjacent LSR to\n\
    \     form or use an identifier for an unnumbered Forwarding Adjacency.\n   -\
    \ A new subobject of the Record Route Object, used to record that the\n     LSP\
    \ path traversed an unnumbered link.\n"
- title: 2.2.11.  GMPLS and RSVP-TE
  contents:
  - "2.2.11.  GMPLS and RSVP-TE\n   GMPLS RSVP-TE [RFC3473] is an extension of RSVP-TE.\
    \  It enables the\n   provisioning of data-paths within networks supporting a\
    \ variety of\n   switching types including packet and cell switching networks,\
    \ layer\n   two networks, TDM networks, and photonic networks.\n   It defines\
    \ the new Notify message (for general event notification),\n   which may contain\
    \ notifications being sent, with respect to each\n   listed LSP, both upstream\
    \ and downstream.  Notify messages can be\n   used for expedited notification\
    \ of failures and other events to nodes\n   responsible for restoring failed LSPs.\
    \  A Notify message is sent\n   without the router alert option.\n   A number\
    \ of new RSVP-TE (sub)objects are defined in GMPLS RSVP-TE for\n   general uses\
    \ of MPLS:\n   - a Generalized Label Request Object;\n   - a Generalized Label\
    \ Object;\n   - a Suggested Label Object;\n   - a Label Set Object (to restrict\
    \ label choice);\n   - an Upstream_Label object (to support bidirectional LSPs);\n\
    \   - a Label ERO subobject;\n   - IF_ID RSVP_HOP objects (IPv4 & IPv6; to identify\
    \ interfaces in\n     out-of-band signaling or in bundled links);\n   - IF_ID\
    \ ERROR_SPEC objects (IPv4 & IPv6; to identify interfaces in\n     out-of-band\
    \ signaling or in bundled links);\n   - an Acceptable Label Set object (to support\
    \ negotiation of label\n     values in particular for bidirectional LSPs)\n  \
    \ - a Notify Request object (may be inserted in a Path or Resv message\n     to\
    \ indicate where a notification of LSP failure is to be sent)\n   - a Restart_Cap\
    \ Object (used on Hello messages to identify recovery\n     capabilities)\n  \
    \ - an Admin Status Object (to notify each node along the path of the\n     status\
    \ of the LSP, and to control that state).\n"
- title: 2.2.12.  GMPLS Operation at UNI and E-NNI Reference Points
  contents:
  - "2.2.12.  GMPLS Operation at UNI and E-NNI Reference Points\n   The ITU-T defines\
    \ network reference points that separate\n   administrative or operational parts\
    \ of the network.  The reference\n   points are designated as:\n   - User to Network\
    \ Interfaces (UNIs) if they lie between the user or\n     user network and the\
    \ core network, or\n   - External Network to Network Interfaces (E-NNIs) if they\
    \ lie between\n     peer networks, network domains, or subnetworks.\n   GMPLS\
    \ is applicable to the UNI and E-NNI without further\n   modification, and no\
    \ new messages, objects, or C-Types are required.\n   See [OVERLAY].\n"
- title: 2.2.13.  MPLS and GMPLS Future Extensions
  contents:
  - "2.2.13.  MPLS and GMPLS Future Extensions\n   At the time of writing, MPLS and\
    \ GMPLS are being extended by the MPLS\n   and CCAMP Working Groups to support\
    \ additional sophisticated\n   functions.  This will inevitably lead to the introduction\
    \ of new\n   C-Types for existing objects, and to the requirement for new objects\n\
    \   (CNums).  It is possible that new messages will also be introduced.\n   Some\
    \ of the key features and functions being introduced include the\n   following:\n\
    \   - Protection and restoration.  Features will be developed to provide\n   \
    \   - end-to-end protection\n      - segment protection\n      - various protection\
    \ schemes (1+1, 1:1, 1:n)\n      - support of extra traffic on backup LSPs\n \
    \  - Diverse path establishment for protection and load sharing.\n   - Establishment\
    \ of point-to-multipoint paths.\n   - Inter-area and inter-AS path establishment\
    \ with\n      - explicit path control\n      - bandwidth reservation\n      -\
    \ path diversity\n   - Support for the requirements of Automatic Switched Optical\
    \ Network\n     (ASON) signaling as defined by the ITU-T, including call and\n\
    \     connection separation.\n   - Crankback during LSP setup.\n"
- title: 2.2.14.  ITU-T H.323 Interface
  contents:
  - "2.2.14.  ITU-T H.323 Interface\n   ITU-T H.323 ([H.323]) recommends the IntServ\
    \ resource reservation\n   procedure using RSVP.  The information as to whether\
    \ an endpoint\n   supports RSVP should be conveyed during the H.245 [H.245] capability\n\
    \   exchange phase, by setting appropriate qOSMode fields.  If both\n   endpoints\
    \ are RSVP-capable, when opening an H.245 logical channel, a\n   receiver port\
    \ ID should be conveyed to the sender by the\n   openLogicalChannelAck message.\
    \  Only after that can a \"Path - Resv -\n   ResvConf\" process take place.  The\
    \ timer of waiting for ResvConf\n   message will be set by the endpoint.  If this\
    \ timer expires or RSVP\n   reservation fails at any point during an H.323 call,\
    \ the action is up\n   to the vendor.  Once a ResvConf message is sent or received,\
    \ the\n   endpoints should stop reservation timers and resume with the H.323\n\
    \   call procedures.  Only explicit release of reservations are supported\n  \
    \ in [H.323].  Before sending a closeLogicalChannel message for a\n   stream,\
    \ a sender should send a PathTear message if an RSVP session\n   has been previous\
    \ created for that stream.  After receiving a\n   closeLogicalChannel, a receiver\
    \ should send a ResvTear similarly.\n   Only the FF style is supported, even for\
    \ point-to-multipoint calls.\n"
- title: 2.2.15.  3GPP Interface
  contents:
  - "2.2.15.  3GPP Interface\n   Third Generation Partnership Project (3GPP) TS 23.207\n\
    \   ([3GPP-TS23207]) specifies the QoS signaling procedure with policy\n   control\
    \ within the Universal Mobile Telecommunications System (UMTS)\n   end-to-end\
    \ QoS architecture.  When using RSVP, the signaling source\n   and/or destination\
    \ are the User Equipments (UEs, devices that allow\n   users access to network\
    \ services) that locate in the Mobile\n   Originating (MO) side and the Mobile\
    \ Terminating (MT) side.  An RSVP\n   signaling process can either trigger or\
    \ be triggered by the (COPS)\n   PDP Context establishment/modification process.\
    \  The operation of\n   refreshing states is not specified in [3GPP-TS23207].\
    \  If a\n   bidirectional reservation is needed, the RSVP signaling exchange must\n\
    \   be performed twice between the end-points.  The authorization token\n   and\
    \ flow identifier(s) in a policy data object should be included in\n   the RSVP\
    \ messages sent by the UE, if the token is available in the\n   UE.  When both\
    \ RSVP and Service-based Local Policy are used, the\n   Gateway GPRS Support Node\
    \ (GGSN, the access point of the network)\n   should use the policy information\
    \ to decide whether to accept and\n   forward Path/Resv messages.\n"
- title: 2.3.  Extensions for New Deployment Scenarios
  contents:
  - "2.3.  Extensions for New Deployment Scenarios\n   As a well-acknowledged protocol\
    \ in the Internet, RSVP is expected\n   more and more to provide a more generic\
    \ service for various signaling\n   applications.  However, RSVP messages were\
    \ designed in a way to\n   support end-to-end QoS signaling optimally.  To meet\
    \ the increasing\n   demand that a signaling protocol also operate in host-to-edge\
    \ and\n   edge-to-edge ways, and that it serve for some other signaling\n   purposes\
    \ in addition to end-to-end QoS signaling, RSVP needs to be\n   made more flexible\
    \ and applicable for more generic signaling.\n   RSVP proxies [BEGD02] extend\
    \ RSVP by originating or receiving the\n   RSVP message on behalf of the end node(s),\
    \ so that applications may\n   still benefit from reservations that are not truly\
    \ end-to-end.\n   However, there are certainly scenarios where an application\
    \ would\n   want to explicitly convey its non-QoS purposed (as well as QoS) data\n\
    \   from a host into the network, or from an ingress node to an egress\n   node\
    \ of an administrative domain.  It must do so without burdening\n   the network\
    \ with excess messaging overhead.  Typical examples are an\n   end host desiring\
    \ a firewall service from its provider's network and\n   MPLS label setup within\
    \ an MPLS domain.\n   RSVP requires support from network routers and user space\n\
    \   applications.  Domains not supporting RSVP are traversed\n   transparently.\
    \  Unfortunately, like other IP options, RSVP messages\n   implemented by way\
    \ of IP alert option may be dropped by some routers\n   [FJ02].  Although applications\
    \ need to be built with RSVP libraries,\n   one article presents a mechanism that\
    \ would allow any host to benefit\n   from RSVP mechanisms without applications'\
    \ awareness [MHS02].\n   A somewhat similar deployment benefit can be gained from\
    \ the\n   Localized RSVP (LRSVP) [JR03] [MSK+04].  The documents present the\n\
    \   concept of local RSVP-based reservation that alone can be used to\n   trigger\
    \ reservation within an access network.  In those cases, an\n   end-host may request\
    \ QoS from its own access network without the\n   cooperation of a correspondent\
    \ node outside the access network.  This\n   would be especially helpful when\
    \ the correspondent node is unaware of\n   RSVP.  A proxy node responds to the\
    \ messages sent by the end host and\n   enables both upstream and downstream reservations.\
    \  Furthermore, the\n   scheme allows for faster reservation repairs following\
    \ a handover by\n   triggering the proxy to assist in an RSVP local repair.\n\
    \   Still, in end-hosts that are low in processing power and\n   functionality,\
    \ having an RSVP daemon run and take care of the\n   signaling may introduce unnecessary\
    \ overhead.  One article [Kars01]\n   proposes to create a remote API so that\
    \ the daemon would in fact run\n   on the end-host's default router and the end-host\
    \ application would\n   send its requests to that daemon.\n   Another potential\
    \ problem lies in the limited size of signaled data\n   due to the limitation\
    \ of message size.  An RSVP message must fit\n   entirely into a single non-fragmented\
    \ IP datagram.  Bundle messages\n   [RFC2961] can aggregate multiple RSVP messages\
    \ within a single PDU,\n   but they still only occupy one IP datagram (i.e., approximately\
    \ 64K).\n   If it exceeds the MTU, the datagram is fragmented by IP and\n   reassembled\
    \ at the recipient node.\n"
- title: 2.4.  Conclusion
  contents:
  - "2.4.  Conclusion\n   A good signaling protocol should be transparent to the applications.\n\
    \   RSVP has proven to be a very well designed protocol.  However, it has\n  \
    \ a number of fundamental protocol design issues that require more\n   careful\
    \ re-evaluation.\n   The design of RSVP was originally targeted at multicast applications.\n\
    \   The result has been that the message processing within nodes is\n   somewhat\
    \ heavy, mainly due to flow merging.  Still, merging rules\n   should not appear\
    \ in the specification as they are QoS-specific.\n   RSVP has a comprehensive\
    \ set of filtering styles, including\n   Wildcard-Filter (WF), Fixed-Filter (FF),\
    \ and Shared-Explicit (SE),\n   and is not tied to certain QoS objects.  (RSVP\
    \ is not tied to IntServ\n   Guaranteed Service/Controlled Load (GS/CL) specifications.)\
    \  Objects\n   were designed to be modular, but Xspecs (TSPEC, etc.) are more\
    \ or\n   less QoS-specific and should be more generalized; there is no clear\n\
    \   layering/separation between the signaled data and signaling protocol.\n  \
    \ RSVP uses a soft state mechanism to maintain states and allows each\n   node\
    \ to define its own refresh timer.  The protocol is also\n   independent of underlying\
    \ routing protocols.  Still, in mobile\n   networks the movement of the mobile\
    \ nodes may not properly trigger a\n   reservation refresh for the new path, and\
    \ therefore a mobile node may\n   be left without a reservation up to the length\
    \ of the refresh timer.\n   Furthermore, RSVP does not work properly with changing\
    \ end-point\n   identifiers; that is, if one of the IP addresses of a mobile node\n\
    \   changes, the filters may not be able to identify the flow that had a\n   reservation.\n\
    \   From the security point of view, RSVP does provide the basic building\n  \
    \ blocks for deploying the protocol in various environments to protect\n   its\
    \ messages from forgery and modification.  Hop-by-hop protection is\n   provided.\
    \  However, the current RSVP security mechanism does not\n   provide non-repudiation\
    \ and protection against message deletion; the\n   two-way peer authentication\
    \ and key management procedures are still\n   missing.\n   Finally, since the\
    \ publication of the RSVP standard, tens of\n   extensions have emerged that allow\
    \ for much wider deployment than\n   RSVP was originally designed for -- for instance,\
    \ the Subnet\n   Bandwidth Manager, the NULL service type, aggregation, operation\
    \ over\n   tunneling, and MPLS, as well as diagnostic messages.\n   Domains not\
    \ supporting RSVP are traversed transparently by default.\n   Unfortunately, like\
    \ other IP options, RSVP messages implemented by\n   way of IP alert option may\
    \ be dropped by some routers.  Also, the\n   maximal size of RSVP message is limited.\n\
    \   The transport mechanisms, performance, security, and mobility issues\n   are\
    \ detailed in the following sections.\n"
- title: 3.  RSVP Transport Mechanism Issues
  contents:
  - '3.  RSVP Transport Mechanism Issues

    '
- title: 3.1.  Messaging Reliability
  contents:
  - "3.1.  Messaging Reliability\n   RSVP messages are defined as a new IP protocol\
    \ (that is, a new ptype\n   in the IP header).  RSVP Path messages must be delivered\
    \ end-to-end.\n   For the transit routers to intercept the Path messages, a new\
    \ IP\n   Router Alert option [RFC2113] was introduced.  This design is simple\n\
    \   to implement and efficient to run.  As shown from the experiments in\n   [PS00],\
    \ with minor kernel changes IP option processing introduces\n   very little overhead\
    \ on a Free BSD box.\n   However, RSVP does not have a good message delivery mechanism.\
    \  If a\n   message is lost on the wire, the next re-transmit cycle by the\n \
    \  network would be one soft-state refresh interval later.  By default,\n   a\
    \ soft-state refresh interval is 30 seconds.\n   To overcome this problem, [PS97]\
    \ introduced a staged refresh timer\n   mechanism, which has been defined as a\
    \ RSVP extension in [RFC2961].\n   The staged refresh timer mechanism retransmits\
    \ RSVP messages until\n   the receiving node acknowledges.  It can address the\
    \ reliability\n   problem in RSVP.\n   However, during the mechanism's implementation,\
    \ a lot of effort had\n   to be spent on per-session timer maintenance, message\
    \ retransmission\n   (e.g., avoid message bursts), and message sequencing.  In\
    \ addition,\n   we have to make an effort to try to separate the transport functions\n\
    \   from protocol processing.  For example, if a protocol extension\n   requires\
    \ a natural RSVP session time-out (such as RSVP-TE one-to-one\n   fast-reroute\
    \ [FAST-REROUTE]), we have to turn off the staged refresh\n   timers.\n"
- title: 3.2.  Message Packing
  contents:
  - "3.2.  Message Packing\n   According to RSVP [RFC2205], each RSVP message can\
    \ only contain\n   information for one session.  In a network that has a reasonably\n\
    \   large number of RSVP sessions, this constraint imposes a heavy\n   processing\
    \ burden on the routers.  Many router OSes are based on\n   UNIX.  [PS00] showed\
    \ that the UNIX socket I/O processing is not very\n   sensitive to packet size.\
    \  In fact, processing small packets takes\n   almost as much CPU overhead as\
    \ processing large ones.  However,\n   processing too many individual messages\
    \ can easily cause congestion\n   at socket I/O interfaces.\n   To overcome this\
    \ problem, RFC2961 introduced the message bundling\n   mechanism.  The bundling\
    \ mechanism packs multiple RSVP messages\n   between two adjacent nodes into a\
    \ single packet.  In one deployed\n   router platform, the bundling mechanism\
    \ has improved the number of\n   RSVP sessions that a router can handle from 2,000\
    \ to over 7,000.\n"
- title: 3.3.  MTU Problem
  contents:
  - "3.3.  MTU Problem\n   RSVP does not support message fragmentation and reassembly\
    \ at\n   protocol level.  If the size of a RSVP message is larger than the\n \
    \  link MTU, the message will be fragmented.  The routers simply cannot\n   detect\
    \ and process RSVP message fragments.\n   There is no solution for the MTU problem.\
    \  Fortunately, at places\n   where RSVP-TE has been used, either the amount of\
    \ per-session RSVP\n   data is never too large, or the link MTU is adjustable;\
    \ PPP and Frame\n   Relay can always increase or decrease the MTU sizes.  For\
    \ example, on\n   some routers, a Frame Relay interface can support a link MTU\
    \ size up\n   to 9600 bytes.  Currently, the RSVP MTU problem is not a realistic\n\
    \   concern in MPLS networks.\n   However, when and if RSVP is used for end-user\
    \ applications, for\n   which network security is an essential and critical concern,\
    \ it is\n   possible that the size of RSVP messages can be larger than the link\n\
    \   MTU.  Note that end-users will most likely have to deal with a small\n   1500-byte\
    \ Ethernet MTU.\n"
- title: 3.4.  RSVP-TE vs. Signaling Protocol for RT Applications
  contents:
  - "3.4.  RSVP-TE vs. Signaling Protocol for RT Applications\n   RSVP-TE works in\
    \ an environment that is different from what the\n   original RSVP has been designed\
    \ for: in MPLS networks, the RSVP\n   sessions that are used to support Label-Switched\
    \ Paths (LSPs) do not\n   change frequently.\n   In fact, the network operators\
    \ typically set up the MPLS LSPs so that\n   they cannot switch too quickly. \
    \ For example, the operators often\n   regulate the Constraint-based Shortest\
    \ Path First (CSPF) computation\n   interval to prevent or delay a large volume\
    \ of user traffic from\n   shifting from one session to another during LSP path\
    \ optimization.\n   (CSPF is a routing algorithm that operates from the network\
    \ edge to\n   compute the \"most\" optimal routes for the LSPs.)  As a result,\
    \ RSVP-\n   TE does not have to handle a large amount of \"triggered\" (new or\n\
    \   modified)  messages.  Most of the messages are refresh messages,\n   which\
    \ can be handled by the mechanisms introduced in RFC2961.  In\n   particular,\
    \ in the Summary Refresh extension [RFC2961], each RSVP\n   refresh message can\
    \ be represented as a 4-byte ID.  The routers can\n   simply exchange the IDs\
    \ to refresh RSVP sessions.  With the full\n   implementation of RFC2961, MPLS\
    \ routers do not have any RSVP scaling\n   issue.  On one deployed router platform,\
    \ it can support over 50,000\n   RSVP sessions in a stable backbone network.\n\
    \   On the other hand, in many of the new applications for which a\n   signaling\
    \ protocol is required, the user session duration can be\n   relatively short.\
    \  The dynamics of adding/dropping user sessions\n   could introduce a large number\
    \ of \"triggered\" messages in the\n   network.  This can clearly introduce a\
    \ substantial amount of\n   processing overhead to the routers.  This is one area\
    \ where a new\n   signaling protocol may be needed to reduce the processing complexity\n\
    \   in the resource reservation process.\n"
- title: 3.5.  What Would Be a Better Alternative?
  contents:
  - "3.5.  What Would Be a Better Alternative?\n   A good signaling protocol should\
    \ be transparent to the applications.\n   On the other hand, the design of a signaling\
    \ protocol must take the\n   intended and potential applications into consideration.\n\
    \   With the addition of RFC2961, RSVP-TE is sufficient to support its\n   intended\
    \ application, MPLS, within the backbone.  There is no\n   significant transport-layer\
    \ problem that needs to be solved.\n   In the last several years, a number of\
    \ new applications have emerged\n   that are proposed to need IP signaling, beyond\
    \ the traditional ones\n   associated with quality of service and resource allocation.\
    \  On-path\n   firewall control/NAT traversal (synergistic with the midcom design\
    \ of\n   [RFC3303]) is one of these.  There are far-out applications such as\n\
    \   depositing active network code in network devices.  Next-generation\n   signaling\
    \ protocols dealing with novel applications, with network\n   security requirements,\
    \ and with the MTU problems described above,\n   will prevent the re-use of the\
    \ existing RSVP transport mechanism.\n   If a new transport protocol is needed,\
    \ the protocol must be able to\n   handle the following:\n   - reliable messaging;\n\
    \   - message packing;\n   - the MTU problem;\n   - small triggered message volume.\n"
- title: 4.  RSVP Protocol Performance Issues
  contents:
  - '4.  RSVP Protocol Performance Issues

    '
- title: 4.1.  Processing Overhead
  contents:
  - "4.1.  Processing Overhead\n   By \"processing overhead\" we mean the amount of\
    \ processing required to\n   handle messages belonging to a reservation session.\
    \  This is the\n   processing required in addition to the processing needed for\
    \ routing\n   an (ordinary) IP packet.  The processing overhead of RSVP originates\n\
    \   from two major issues:\n   1) Complexity of the protocol elements.  First,\
    \ RSVP itself is per-\n      flow based; thus the number of states is proportional\
    \ to RSVP\n      session number.  Path and Resv states have to be maintained in\n\
    \      each RSVP router for each session (and Path state also has to\n      record\
    \ the reverse route for the correspondent Resv message).\n      Second, being\
    \ receiver-initiated, RSVP optimizes various merging\n      operations for multicast\
    \ reservations while the Resv message is\n      processed.  To handle multicast,\
    \ other mechanisms such as\n      reservation styles, scope object, and blockade\
    \ state, are also\n      required to be presented in the basic protocol.  This\
    \ not only\n      adds sources of failures and errors, but also complicates the\n\
    \      state machine [Fu02].  Third, the same RSVP signaling messages are\n  \
    \    used not only for maintaining the state, but also for dealing with\n    \
    \  recovery of signaling message loss and discovery of route change.\n      Thus,\
    \ although protocol elements that represent the actual data\n      (e.g., QoS\
    \ parameters) specification are separated from signaling\n      elements, the\
    \ processing overhead needed for all RSVP messages is\n      not marginal.  Finally,\
    \ the possible variations of the order and\n      existence of objects increases\
    \ the complexity of message parsing\n      and internal message and state representation.\n\
    \   2) Implementation-specific Overhead.  There are two ways to send and\n   \
    \   receive RSVP messages: either as \"raw\" IP datagrams with protocol\n    \
    \  number 46, or as encapsulated UDP datagrams, which increase the\n      efficiency\
    \ of RSVP processing.  Typical RSVP implementations are\n      user-space daemons\
    \ interacting with the kernel; thus, state\n      management, message sending,\
    \ and reception would affect the\n      efficiency of the protocol processing.\
    \  For example, in the recent\n      version of the implementation described in\
    \ [KSS01], the relative\n      execution costs for the message sending/reception\
    \ system calls\n      \"sendto\", \"select\", and \"recvmsg\" were 14-16%, 6-7%,\
    \ 9-10%,\n      individually, of the total execution cost.  [KSS01] also found\n\
    \      that state (memory) management can use up to 17-18% of the total\n    \
    \  execution cost, but it is possible to decrease that cost to 6-7%,\n      if\
    \ appropriate action is taken to replace the standard memory\n      management\
    \ with dedicated memory management for state information.\n      RSVP/routing,\
    \ RSVP/policy control, and RSVP/traffic control\n      interfaces can also pose\
    \ different overhead depending on\n      implementation.  For example, the RSVP/routing\
    \ overhead has been\n      measured to be approximately 11-12% of the total execution\
    \ cost\n      [KSS01].\n"
- title: 4.2.  Bandwidth Consumption
  contents:
  - "4.2.  Bandwidth Consumption\n   By \"bandwidth consumption\" we mean the amount\
    \ of bandwidth used\n   during the lifetime of a session: to set up a reservation\
    \ session, to\n   keep the session alive, and finally to close it.\n   RSVP messages\
    \ are sent either to trigger a new reservation or to\n   refresh an existing reservation.\
    \  In standard RSVP, Path/Resv\n   messages are used for triggering and refreshing/recovering\n\
    \   reservations, identically, which results in an increased size of\n   refresh\
    \ messages.  The hop-by-hop refreshment may reduce the\n   bandwidth consumption\
    \ for RSVP, but could result in more sources of\n   error/failure events.  [RFC2961]\
    \ presents a way to bundle standard\n   RSVP messages and reduces the refreshment\
    \ redundancy by Srefresh\n   message.\n   Thus, the following formula represents\
    \ the bandwidth consumption in\n   bytes for an RSVP session lasting n seconds:\n\
    \      F(n) = (bP + bR) + ((n/Ri) * (bP + bR)) + bPt\n      bP:  IP payload size\
    \ of Path message\n      bR:  IP payload size of Resv message\n      bPt: IP payload\
    \ size of Path Tear message\n      Ri:  refresh interval\n   For example, for\
    \ a simple Controlled Load reservation without\n   security and identification\
    \ requirements (where bP is 172 bytes, bR\n   is 92, bPt is 44 bytes, and Ri is\
    \ 30 seconds), the bandwidth\n   consumption would be as follows:\n      F(n)\
    \ = (172 + 92) + ((n/30) * (172 + 92)) + 44\n           = 308 + (264n/30) bytes\n"
- title: 5.  RSVP Security and Mobility
  contents:
  - '5.  RSVP Security and Mobility

    '
- title: 5.1.  Security
  contents:
  - "5.1.  Security\n   To allow a process on a system to securely identify the owner\
    \ and the\n   application of the communicating process (e.g., user id) and to\n\
    \   convey this information in RSVP messages (PATH or RESV) in a secure\n   manner,\
    \ [RFC3182] specifies the encoding of identities as RSVP\n   POLICY_DATA Object.\
    \  However, to provide ironclad security\n   protection, cryptographic authentication\
    \ combined with authorization\n   has to be provided.  Such a functionality is\
    \ typically offered by\n   authentication and key exchange protocols.  Solely\
    \ including a user\n   identifier is insufficient.\n   To provide hop-by-hop integrity\
    \ and authentication of RSVP messages,\n   an RSVP message may contain an INTEGRITY\
    \ object ([RFC2747]) using a\n   keyed message digest.  Since intermediate routers\
    \ need to modify and\n   process the content of the signaling message, a hop-by-hop\
    \ security\n   architecture based on a chain-of-trust is used.  However, with\
    \ the\n   different usage of RSVP as described throughout this document and\n\
    \   with new requirements, a re-evaluation of the original assumptions\n   might\
    \ be necessary.\n   RFC2747 provides protection against forgery and message modification.\n\
    \   However, this does not provide non-repudiation or protect against\n   message\
    \ deletion.  In the current RSVP security scheme, the two-way\n   peer authentication\
    \ and key management procedures are still missing.\n   The security issues have\
    \ been well analyzed in [Tsch03].\n"
- title: 5.2.  Mobility Support
  contents:
  - "5.2.  Mobility Support\n   Two issues raise concern when a mobile node (MN) uses\
    \ RSVP: the flow\n   identifier and reservation refresh.  When an MN changes locations,\
    \ it\n   may need to change one of its assigned IP addresses.  An MN may have\n\
    \   an IP address by which it is reachable by nodes outside the access\n   network,\
    \ and an IP address used to support local mobility management.\n   Depending on\
    \ the mobility management mechanism, a handover may force\n   a change in any\
    \ of these addresses.  As a consequence, the filters\n   associated with a reservation\
    \ may not identify the flow anymore, and\n   the resource reservation is ineffective\
    \ until a refresh with a new\n   set of filters is initialized.\n   The second\
    \ issue relates to following the movement of a mobile node.\n   RFC2205 defines\
    \ that Path messages can perform a local repair of\n   reservation paths.  When\
    \ the route between the communicating end\n   hosts changes, a Path message will\
    \ set the state of the reservation\n   on the new route, and a subsequent Resv\
    \ message will make the\n   resource reservation.  Therefore, by sending a Resv\
    \ message a host\n   cannot alone update the reservation, and thus it cannot perform\
    \ a\n   local repair before a Path message has passed.  Also, in order to\n  \
    \ provide fast adaptation to routing changes without the overhead of\n   short\
    \ refresh periods, the local routing protocol module can notify\n   the RSVP process\
    \ of route changes for particular destinations.  The\n   RSVP process should use\
    \ this information to trigger a quick refresh\n   of state for these destinations,\
    \ using the new route (Section 3.6,\n   [RFC2205]).  However, not all local mobility\
    \ protocols affect routing\n   directly in routers (not even Mobile IP), and thus\
    \ mobility may not\n   be noticed at RSVP routers.  Therefore, it may take a relatively\
    \ long\n   time before a reservation is refreshed following a handover.\n   There\
    \ have been several designs for extensions to RSVP to allow for\n   more seamless\
    \ mobility.  One solution is presented in [MSK+04], in\n   which one section discusses\
    \ the coupling of RSVP and the mobility\n   management mechanisms and proposes\
    \ small extensions to RSVP to handle\n   the handover event better, among other\
    \ things.  The extension allows\n   the mobile host to request a Path for the\
    \ downstream reservation when\n   a handover has happened.\n   Another example\
    \ is Mobile RSVP (MRSVP) [TBA01], which is an extension\n   to standard RSVP.\
    \  It is based on advance reservations, where\n   neighboring access points keep\
    \ resources reserved for mobile nodes\n   moving to their coverage area.  When\
    \ a mobile node requests\n   resources, the neighboring access points are checked,\
    \ too, and a\n   passive reservation is done around the mobile nodes' current\n\
    \   location.\n   The problem with the various \"advance reservation\" schemes\
    \ is that\n   they require topological information of the access network and,\n\
    \   usually, advance knowledge of the handover event.  Furthermore, the\n   way\
    \ the resources reserved in advance are used in the neighboring\n   service areas\
    \ is an open issue.  A good overview of these different\n   schemes can be found\
    \ in [MA01].\n   The interactions of RSVP and Mobile IP have been well documented\
    \ in\n   [Thom02].\n"
- title: 6.  Other QoS Signaling Proposals
  contents:
  - '6.  Other QoS Signaling Proposals

    '
- title: 6.1.  Tenet and ST-II
  contents:
  - "6.1.  Tenet and ST-II\n   Tenet and ST-II are two original QoS signaling protocols\
    \ for the\n   Internet.\n   In the original Tenet architecture [BFM+96], the receiver\
    \ sends a\n   reservation request toward the source.  Each network node along\
    \ the\n   way makes the reservation.  Once the request arrives at the source,\n\
    \   the source sends another Relax message back toward to the receiver,\n   and\
    \ has the option to modify the previous reservation at each node.\n   ST-II [RFC1819]\
    \ basically works in the following way: a sender\n   originates a Connect message\
    \ to a set of receivers.  Each\n   intermediate node determines the next hop subnets,\
    \ and makes\n   reservations on the links going to these next hops.  Upon receiving\
    \ a\n   Connect indication, a receiver must send back either an Accept or a\n\
    \   Refuse message to the sender.  In the case of an Accept, the receiver\n  \
    \ may further reduce the resource request by updating the returned flow\n   specifications.\n\
    \   ST-II consists of two protocols: ST for the data transport and the\n   Stream\
    \ Control Message Protocol (SCMP) for all control functions.\n   ST is simple\
    \ and contains only a single PDU format, which is designed\n   for fast and efficient\
    \ data forwarding in order to achieve low\n   communication delays.  SCMP packets\
    \ are transferred within ST\n   packets.\n   ST-II has no built-in soft states;\
    \ thus, it requires that the network\n   be responsible for correctness.  It is\
    \ sender-initiated, and the\n   overhead for ST-II to handle group membership\
    \ dynamics is higher than\n   that for RSVP [MESZ94].  ST-II does not provide\
    \ security, but\n   [RFC1819] describes some objects related to charging.\n"
- title: 6.2.  YESSIR
  contents:
  - "6.2.  YESSIR\n   YESSIR (YEt another Sender Session Internet Reservations) [PS98]\
    \ is a\n   resource reservation protocol that seeks to simplify the process of\n\
    \   establishing reserved flows while preserving many unique features\n   introduced\
    \ in RSVP.  Simplicity is measured in terms of control\n   message processing,\
    \ data packet processing, and user-level\n   flexibility.  Features such as robustness,\
    \ advertising network\n   service availability, and resource sharing among multiple\
    \ senders are\n   also supported in the proposal.\n   The proposed mechanism generates\
    \ reservation requests by senders to\n   reduce the processing overhead.  It is\
    \ built as an extension to the\n   Real-Time Transport Control Protocol (RTCP),\
    \ taking advantage of\n   Real-Time Protocol (RTP).  YESSIR also introduces a\
    \ concept called\n   partial reservation, in which, for certain types of applications,\
    \ the\n   reservation requests can be passed to the next hop, even though there\n\
    \   are not enough resources on a local node.  The local node can rely on\n  \
    \ optimized retries to complete the reservations.\n"
- title: 6.2.1.  Reservation Functionality
  contents:
  - "6.2.1.  Reservation Functionality\n   YESSIR [PS98] was designed for one-way,\
    \ sender-initiated end-to-end\n   resource reservation.  It also uses soft state\
    \ to maintain states.\n   It supports resource query (similar to RSVP diagnosis\
    \ message),\n   advertising (similar to RSVP ADSPEC), shared reservation, partial\n\
    \   reservations, and flow merging.\n   To support multicast, YESSIR simplifies\
    \ the reservation styles to\n   individual and shared reservation styles.  Individual\
    \ reservations\n   are made separately for each sender, whereas shared reservations\n\
    \   allocate resources that can be used by all senders in an RTP session.\n  \
    \ Although RSVP supports shared reservation (SE and WF styles) from the\n   receiver's\
    \ direction, YESSIR handles the shared reservation style\n   from the sender's\
    \ direction; thus, new receivers can re-use the\n   existing reservation of the\
    \ previous sender.\n   It has been shown that the YESSIR one-pass reservation\
    \ model has\n   better performance and lower processing cost than a regular two-way\n\
    \   signaling protocol, such as RSVP [PS98].  The bandwidth consumption\n   of\
    \ YESSIR is somewhat lower than that of, for example, RSVP, because\n   it does\
    \ not require additional IP and transport headers.  Bandwidth\n   consumption\
    \ is limited to the extension header size.\n   YESSIR does not have any particular\
    \ support for mobility, and the\n   security of YESSIR relies on RTP/RTCP security\
    \ measures.\n"
- title: 6.2.2.  Conclusion
  contents:
  - "6.2.2.  Conclusion\n   YESSIR requires support in applications since it is an\
    \ integral part\n   of RTCP.  Similarly, it requires network routers to inspect\
    \ RTCP\n   packets to identify reservation requests and refreshes.  Routers\n\
    \   unaware of YESSIR forward the RTCP packets transparently.\n"
- title: 6.3.  Boomerang
  contents:
  - "6.3.  Boomerang\n   Boomerang [FNM+99] is a another resource reservation protocol\
    \ for IP\n   networks.  The protocol has only one message type and a single\n\
    \   signaling loop for reservation setup and teardown, and it has no\n   requirements\
    \ on the far end node.  Instead, it concentrates the\n   intelligence in the Initiating\
    \ Node (IN).\n   In addition, the Boomerang protocol allows for sender- or receiver-\n\
    \   oriented reservations and resource query.  Flows are identified with\n   the\
    \ common 5-tuple, and the QoS can be specified by various means;\n   e.g., service\
    \ class and bit rate.  In the initial implementation,\n   Boomerang messages are\
    \ transported in ICMP ECHO/REPLY messages.\n"
- title: 6.3.1.  Reservation Functionality
  contents:
  - "6.3.1.  Reservation Functionality\n   Boomerang can only be used for unicast\
    \ sessions; no support for\n   multicast exists.  The requested QoS can be specified\
    \ with various\n   methods, and both ends of a communication session can make\
    \ a\n   reservation for their transmitted flow.\n   The authors of Boomerang show\
    \ in [FNS02] that the processing of the\n   protocol is considerably lower than\
    \ that of the ISI RSVP daemon\n   implementation.  However, this is mainly due\
    \ to the limited\n   functionality provided by the protocol compared to that provided\
    \ by\n   RSVP.\n   Boomerang messages are quite short and consume a relatively\
    \ low\n   amount of link bandwidth.  This is due to the limited functionality\n\
    \   of the protocol; for example, no security-specific information or\n   policy-based\
    \ interaction is provided.  Being sender oriented, the\n   bandwidth consumption\
    \ mostly affects the downstream direction, from\n   the sender to the receiver.\n\
    \   As Boomerang is sender oriented, there is no need to store backward\n   information.\
    \  This reduces the signaling required.  The rest of the\n   issues that were\
    \ identified with RSVP apply with Boomerang.  No\n   security mechanism is specified\
    \ for Boomerang.\n   The Boomerang protocol has deployment issues similar to those\
    \ of any\n   host-network-host protocol.  It requires an implementation at both\n\
    \   communicating nodes and in routers.  Boomerang-unaware routers should\n  \
    \ be able to forward Boomerang messages transparently.  Still,\n   firewalls often\
    \ drop ICMP packets, making the protocol useless.\n"
- title: 6.3.2.  Conclusions
  contents:
  - "6.3.2.  Conclusions\n   Boomerang seems to be a very lightweight protocol and\
    \ efficient in\n   its own scenarios.  However, the apparent low processing overhead\
    \ and\n   bandwidth consumption results from the limited functionality.  No\n\
    \   support for multicast or any security features are present, which\n   allows\
    \ for a different functionality than RSVP, which the authors\n   like to compare\
    \ Boomerang to.\n"
- title: 6.4.  INSIGNIA
  contents:
  - "6.4.  INSIGNIA\n   INSIGNIA [LGZC00] is proposed as a very simple signaling mechanism\n\
    \   for supporting QoS in mobile ad-hoc networks.  It avoids the need for\n  \
    \ separate signaling by carrying the QoS signaling data along with the\n   normal\
    \ data in IP packets using IP packet header options.  This\n   approach, known\
    \ as \"in-band signaling\", is proposed as more suitable\n   in the rapidly changing\
    \ environment of mobile networks since the\n   signaled QoS information is not\
    \ tied to a particular path.  It also\n   allows the flows to be rapidly established\
    \ and, thus, is suitable for\n   short-lived and dynamic flows.\n   INSIGNIA aims\
    \ to minimize signaling by reducing the number of\n   parameters that are provided\
    \ to the network.  It assumes that real-\n   time flows may tolerate some loss,\
    \ but are very delay sensitive so\n   that the only QoS information needed is\
    \ the required minimum and\n   maximum bandwidth.\n   The INSIGNIA protocol operates\
    \ at the network layer and assumes that\n   link status sensing and access schemes\
    \ are provided by lower-layer\n   entities.  The usefulness of the scheme depends\
    \ on the MAC layers,\n   but this is undefined, so INSIGNIA can run over any MAC\
    \ layer.  The\n   protocol requires that each router maintains per-flow state.\n\
    \   The INSIGNIA system implicitly supports mobility.  A near-minimal\n   amount\
    \ of information is exchanged with the network.  To achieve\n   this, INSIGNIA\
    \ makes many assumptions about the nature of traffic\n   that a source will send.\
    \  This may also simplify admission control\n   and buffer allocation.  The system\
    \ basically assumes that \"real-time\"\n   will be defined as a maximum delay,\
    \ and the user can simply request\n   real-time service for a particular quantity\
    \ of traffic.\n   After handover, data that was transmitted to the old base station\
    \ can\n   be forwarded to the new base station, so no data loss should occur.\n\
    \   However, there is no way to differentiate between re-routed and new\n   traffic,\
    \ so priority cannot be given to handover traffic, for\n   example.\n   INSIGNIA,\
    \ however, (completely) lacks a security framework and does\n   not investigate\
    \ how to secure signaled QoS data in an ad-hoc network,\n   where relatively weak\
    \ trust or even no trust exists between the\n   participating nodes.  Therefore,\
    \ authorization and charging\n   especially might be a challenge.  The security\
    \ protection of in-band\n   signaling is costly since the data delivery itself\
    \ experiences\n   increased latency if security processing is done hop-by-hop.\
    \  Because\n   the QoS signaling information is encoded into the flow label and\n\
    \   end-to-end addressing is used, it is very difficult to provide\n   security\
    \ other than IPsec in tunnel mode.\n"
- title: 7.  Inter-Domain Signaling
  contents:
  - "7.  Inter-Domain Signaling\n   This section gives a short overview of protocols\
    \ designed for inter-\n   domain signaling.\n"
- title: 7.1.  BGRP
  contents:
  - "7.1.  BGRP\n   Border Gateway Reservation Protocol (BGRP) [BGRP] is a signaling\n\
    \   protocol for inter-domain aggregated resource reservation for unicast\n  \
    \ traffic.  BGRP builds a sink tree for each of the stub domains.  Each\n   sink\
    \ tree aggregates bandwidth reservations from all data sources in\n   the network.\
    \  BGRP maintains these aggregated reservations using soft\n   state and relies\
    \ on Differentiated Services for data forwarding.\n   In terms of message processing\
    \ load, BGRP scales state storage and\n   bandwidth.  Because backbone routers\
    \ only maintain the sink tree\n   information, the total number of reservations\
    \ at each router scales\n   linearly with the number of Internet domains.\n"
- title: 7.2.  SICAP
  contents:
  - "7.2.  SICAP\n   SICAP (Shared-segment Inter-domain Control Aggregation protocol)\n\
    \   [SGV03] is an inter-domain signaling solution that performs shared-\n   segment\
    \ aggregation [SGV02] on the Autonomous System (AS) level in\n   order to reduce\
    \ state required at Boundary Routers (BRs).  SICAP\n   performs aggregation based\
    \ on path segments that different\n   reservations share.  Thus, reservations\
    \ may be merged into aggregates\n   that do not necessarily extend all the way\
    \ to the reservation's\n   destination.  The motivation for creating \"shorter\"\
    \ aggregates is\n   that, on one hand, their ability to accommodate future requests\
    \ more\n   easily, and, on the other hand, the minimization of aggregates\n  \
    \ created and consequently, the reduction of state required to manage\n   established\
    \ reservations.  However, in contrast to the sink-tree\n   approach (used by BGRP\
    \ [BGRP]), the shared-segment approach\n   introduces intermediate de-aggregation\
    \ locations.  These are ASes\n   where aggregates may experience \"re-aggregation\"\
    .  At these\n   locations, routers that perform aggregation (AS egress routers)\
    \ have\n   to keep track of the mapping between reservations and aggregates.\n\
    \   One possible way to do this is to keep each reservation identifier\n   and\
    \ the corresponding resources stored at each aggregator.  However,\n   this solution\
    \ incurs a high state penalty.  SICAP avoids this state\n   penalty by keeping\
    \ track of the mapping between aggregates and\n   reservations at the level of\
    \ destination domains rather than\n   explicitly map individual reservations to\
    \ aggregates.  In other\n   words, SICAP maintains, per aggregate, a list of the\
    \ destination\n   prefixes advertised by the destination AS an aggregate provides\n\
    \   access to.\n   Pan et al. show that BGRP scales well in terms of control state,\n\
    \   message processing, and bandwidth efficiency, when compared to RSVP\n   without\
    \ aggregation.  However, partially given that BGRP was the\n   first approach\
    \ to explore the issue of inter-domain control\n   aggregation in detail, they\
    \ did not provide a comparison with other\n   aggregation protocols.\n   SICAP\
    \ and BGRP messaging sequences are similar, and consequently,\n   these protocols\
    \ attain the same signaling load.  This load is exactly\n   the same as that attained\
    \ by proposals that do not perform\n   aggregation, given that SICAP and BGRP\
    \ exchange messages per\n   individual reservation.  In terms of bandwidth, both\
    \ protocols\n   provision aggregates with the exact bandwidth required by their\n\
    \   merged reservations.  Therefore, the major difference between SICAP\n   and\
    \ BGRP is state maintained at BRs, which is significantly reduced\n   by SICAP.\
    \  We consider this to be of importance not so much for\n   offering a better-performing\
    \ alternative to BGRP, but for quantifying\n   the performance improvements that\
    \ might still be available in the\n   research field of control path aggregation.\
    \  Finally, to deal with\n   the possible problem of the signaling load, SICAP\
    \ uses an over-\n   reservation mechanism [SGV03b], whose design took into consideration\n\
    \   a possible support for BGRP.\n"
- title: 7.3.  DARIS
  contents:
  - "7.3.  DARIS\n   Dynamic Aggregation of Reservations for Internet Services (DARIS)\n\
    \   [Bless02] [Bless04] defines an inter-domain aggregation scheme for\n   resource\
    \ reservations.  Basically, it aggregates reservations along\n   Autonomous System\
    \ (AS) paths (or parts thereof).  A set of\n   reservations whose data paths share\
    \ a common sequence of ASes are\n   integrated into a joint reservation aggregate\
    \ along that shared sub-\n   path.  All entities within the aggregate, except\
    \ for aggregate\n   starting and end point, can remove state information of the\
    \ included\n   individual reservations, thereby saving states.  They just need\
    \ to\n   hold the necessary information about the encompassing aggregate.\n  \
    \ Moreover, these intermediate ASes are no longer involved in signaling\n   that\
    \ is related to the aggregated reservations.  If more aggregate\n   resources\
    \ are reserved than were actually required, the capacity of\n   the aggregate\
    \ does not need to be adapted with every new or released\n   reservation (thereby\
    \ reducing the number of message exchanges).\n   An aggregate between two ASes\
    \ is created as soon as a threshold k is\n   exceeded that describes the active\
    \ number of unidirectional\n   reservations between them.  It is, however, possible\
    \ to apply\n   different aggregation triggers.  Furthermore, DARIS allows aggregates\n\
    \   to be nested hierarchically.  Therefore, the existence of shorter\n   aggregates\
    \ does not prevent the creation of longer (and thus more\n   efficient) aggregates,\
    \ and vice versa.  An evaluation of recent BGP\n   routing information in [Bless02]\
    \ showed that 92% of all end-to-end\n   paths contain at least four ASes.  Consequently,\
    \ an aggregate from\n   edge AS to edge AS can span four or more ASes, thus saving\
    \ states and\n   signaling message processing in at least two ASes.\n   There\
    \ is, however, a small chance that a reservation cannot be\n   included in a new\
    \ aggregate, because it was already aggregated\n   elsewhere.  This so-called\
    \ \"aggregation conflict\" is caused by the\n   prior removal of state information\
    \ related to individual reservations\n   within intermediate ASes of the encompassing\
    \ aggregate.  This may\n   also bring difficulties if reservations or aggregates\
    \ are re-routed\n   between ASes.  One must be careful when considering how to\
    \ define\n   sophisticated adaptation techniques for these special cases, because\n\
    \   they seem to become very complex.\n   The signaling protocol DMSP (Domain\
    \ Manager Signaling Protocol)\n   supports aggregation by special extensions that\
    \ reduce the\n   reservation setup time for more than one round-trip time in some\n\
    \   cases (e.g., if an aggregate's capacity must be increased before a\n   new\
    \ reservation can be included).  Details can be found in [Bless02].\n   The DARIS\
    \ concept was evaluated by using a simulation with a topology\n   that was derived\
    \ from real BGP routing table information and\n   comprised more than 5500 ASes.\
    \  In comparison to a non-aggregated\n   scenario, the number of saved states\
    \ lay in the range of one to two\n   orders of magnitude, and similar results\
    \ were obtained with respect\n   to the number of signaling messages.  Though\
    \ [Bless02] describes\n   DARIS in the context of distributed Domain Management\
    \ entities\n   (similar to a bandwidth broker), it can be applied in a router-based\n\
    \   resource management environment, too.  This will achieve a higher\n   degree\
    \ of distribution, which is beneficial for large ASes, which are\n   highly interconnected.\n\
    \   A general issue with aggregation is that it is not the aggregating\n   and\
    \ de-aggregating ASes that profit from their initiated aggregates,\n   but all\
    \ intermediate ASes within an aggregate.  Therefore, some\n   incentive for aggregate\
    \ creation has to be given.  This may lead to\n   novel cost models that have\
    \ to be developed for aggregation concepts\n   in the future.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document does not present new technology\
    \ or protocols.  Thus,\n   there are no explicit security issues.  Still, individual\
    \ protocols\n   include different levels of security issues and those are highlighted\n\
    \   in the relevant sections and references.\n"
- title: 9.  Summary
  contents:
  - "9.  Summary\n   Supporting flow-based soft state reservations has been proven\
    \ useful.\n   Still, there have been different ways to improve the performance,\n\
    \   including refresh reduction and aggregation.  However, some of the\n   main\
    \ concerns with these signaling protocols are the complexity of\n   the protocol,\
    \ which affects implementations and processing overhead,\n   and the security\
    \ of the signaling.  Especially, a proper scheme to\n   handle authentication\
    \ and authorization of QoS resource requests and\n   a framework for providing\
    \ signaling message security seem to be\n   missing from most protocols.  RSVP\
    \ has a mechanism to protect\n   signaling messages based on manually distributed\
    \ keys and concepts\n   for authorization, but they seem to be insufficient for\
    \ a dynamic and\n   mobile environment.  [Tsch03] provides more details on security\n\
    \   properties provided by RSVP.  Moreover, secure and efficient\n   signaling\
    \ to and from mobile nodes has been one of the critical\n   challenges not fully\
    \ met by existing protocols.\n   Moving QoS signaling protocols into a generic\
    \ messenger can provide\n   much adoption.  It is expected that the development\
    \ of future\n   protocols should learn from the lessons of existing ones.\n  \
    \ Nevertheless, the tradeoffs between the expected functionality,\n   protocol\
    \ complexity/performance would still be taken into account.\n   For example, RSVP\
    \ uses the two-way signaling mechanism, whereas\n   YESSIR employs only one-pass\
    \ signaling.  Both can be shown to out-\n   perform the other in specific carefully\
    \ chosen signaling scenarios.\n"
- title: 10.  Contributors
  contents:
  - "10.  Contributors\n   This document is part of the work done in the NSIS Working\
    \ Group.\n   The document was initially written by Jukka Manner and Xiaoming Fu.\n\
    \   Since the first version, Martin Karsten has provided text about the\n   processing\
    \ overhead of RSVP, and Hannes Tschofenig has provided text\n   about various\
    \ security issues in the protocols.  Henning Schulzrinne\n   and Ping Pan have\
    \ provided more information on RSVP transportation\n   after the second revision.\
    \  Kireeti Kompella and Adrian Farrel\n   provided a review and updates to the\
    \ discussion on RSVP-TE and GMPLS.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   We would like to acknowledge Bob Braden and Vlora Rexhepi\
    \ for their\n   useful comments.\n"
- title: '12.  Appendix A: Comparison of RSVP to the NSIS Requirements'
  contents:
  - "12.  Appendix A: Comparison of RSVP to the NSIS Requirements\n   This section\
    \ provides a comparison of RSVP to the requirements\n   identified as part of\
    \ the work in NSIS [RFC3726].  The numbering\n   follows the division in the requirements\
    \ document.\n   5.1.  Architecture and Design Goals\n      5.1.1.  NSIS SHOULD\
    \ Provide Availability Information on Request\n        RSVP itself does not support\
    \ query-type of operations.  However,\n        the RSVP diagnosis messages extension\
    \ [RFC2745] provides a means\n        to query resource availability.\n      5.1.2.\
    \  NSIS MUST Be Designed Modularly\n        RSVP was designed to be modular by\
    \ way of TLV objects, however\n        it is regarded being lack of sufficient\
    \ extensibility in various\n        kind of signalling applications.\n      5.1.3.\
    \  NSIS MUST Decouple Protocol and Information\n        RSVP is decoupled from\
    \ the IntServ QoS specifications.  Still,\n        the concept of sessions in\
    \ RSVP are somewhat coupled to the\n        information it carries.\n      5.1.4.\
    \  NSIS MUST Support Independence of Signaling and Network\n              Control\
    \ Paradigm\n        The IntServ information carried by RSVP does not tie the QoS\n\
    \        provisioning mechanisms.\n      5.1.5.  NSIS SHOULD Be Able To Carry\
    \ Opaque Objects\n        RSVP supports this.\n   5.2.  Signaling Flows\n    \
    \  5.2.1.  The Placement of NSIS Initiator, Forwarder, and Responder\n       \
    \       Anywhere in the Network MUST Be Allowed\n        Standard RSVP works only\
    \ end-to-end, although the RSVP proxy\n        [BEGD02] and the Localized RSVP\
    \ [MSK+04] have relaxed this\n        assumption.  RSVP relies on receiver-initiation\
    \ way to perform\n        QoS reservations.\n      5.2.2.  NSIS MUST support Path-Coupled\
    \ and MAY Support Path-\n              Decoupled Signaling\n        Standard RSVP\
    \ is path-coupled, but the Subnet Bandwidth\n        Manager (SBM) work makes\
    \ RSVP somewhat path-decoupled.\n      5.2.3.  Concealment of Topology and Technology\
    \ Information SHOULD\n              Be Possible\n        RSVP itself does not\
    \ provide such capability.\n      5.2.4.  Transparent Signaling through Networks\
    \ SHOULD Be Possible\n        RSVP messages are intercepted and evaluated in each\
    \ RSVP router,\n        and thus they may not cross certain RSVP-routers unnoticed.\n\
    \        Still, the message processing rules allow unknown RSVP messages\n   \
    \     to be forwarded unharmed.\n   5.3.  Messaging\n      5.3.1.  Explicit Erasure\
    \ of State MUST Be Possible\n        Supported by the PathTear and ResvTear messages.\n\
    \      5.3.2.  Automatic Release of State After Failure MUST Be Possible\n   \
    \     On error reservation states are torn down with PathTear\n        messages.\n\
    \      5.3.3.  NSIS SHOULD Allow for Sending Notifications Upstream\n        There\
    \ are two notifications in RSVP, confirm of a reservation\n        set-up and\
    \ tear down of reservation states as a result of\n        errors.\n      5.3.4.\
    \  Establishment and Refusal To Set Up State MUST Be Notified\n        PathErr\
    \ and ResvErr messages provide refusal to set up state in\n        RSVP.\n   \
    \   5.3.5.  NSIS MUST Allow for Local Information Exchange\n        RSVP NULL\
    \ service type [RFC2997] provides such a feature.\n   5.4.  Control Information\n\
    \      5.4.1.  Mutability Information on Parameters SHOULD Be Possible\n     \
    \   Rspec and Adspec are mutable; Tspec is (generally) end-to-end\n        not\
    \ mutable.\n      5.4.2.  It SHOULD Be Possible To Add and Remove Local Domain\n\
    \              Information\n        RSVP aggregation [RFC3175] and NULL service\
    \ type [RFC2997] can\n        provide such a feature.\n      5.4.3.  State MUST\
    \ Be Addressed Independent of Flow Identification\n        RSVP states are tied\
    \ to the flows, thus this requirement is not\n        met.\n      5.4.4.  Modification\
    \ of Already Established State SHOULD Be\n              Seamless\n        Modifications\
    \ of a reservation is possible with RSVP.\n      5.4.5.  Grouping of Signaling\
    \ for Several Micro-Flows MAY Be\n              Provided\n        Aggregated RSVP\
    \ and RFC2961 allow this.\n   5.5.  Performance\n      5.5.1.  Scalability\n \
    \       RSVP scales linearly to the number of reservation states.\n      5.5.2.\
    \  NSIS SHOULD Allow for Low Latency in Setup\n        Setting up an RSVP reservation\
    \ takes one round-trip time and the\n        processing times are each RSVP router.\n\
    \      5.5.3.  NSIS MUST Allow for Low Bandwidth Consumption for the\n       \
    \       Signaling Protocol\n        The initial reservations messages can not\
    \ be compressed, but the\n        refresh interval can be adjusted to consume\
    \ less bandwidth, at\n        the expense of possible inefficient resource usage.\n\
    \      5.5.4.  NSIS SHOULD Allow To Constrain Load on Devices\n        See discussions\
    \ on RSVP performance (section 4).\n      5.5.5.  NSIS SHOULD Target the Highest\
    \ Possible Network\n              Utilization\n        This depends on the IntServ\
    \ service types, Controlled Load can\n        provide better overall utilization\
    \ than Guaranteed Service.\n   5.6.  Flexibility\n      5.6.1.  Flow Aggregation\n\
    \        Aggregated RSVP and RFC2961 allow this.\n      5.6.2.  Flexibility in\
    \ the Placement of the NSIS\n              Initiator/Responder\n        RSVP allows\
    \ receiver as initiator of reservations.\n      5.6.3.  Flexibility in the Initiation\
    \ of State Change\n        RSVP receivers can initiate the state change during\
    \ its\n        refreshment.\n      5.6.4.  SHOULD Support Network-Initiated State\
    \ Change\n        As RSVP supports hop-by-hop refreshment, this is made possible.\n\
    \      5.6.5.  Uni / Bi-Directional State Setup\n        RSVP is only uni-directional.\n\
    \   5.7.  Security\n      5.7.1.  Authentication of Signaling Requests\n     \
    \   Authentication is available in RSVP.\n      5.7.2.  Request Authorization\n\
    \        Authorization with a PDP is possible in RSVP.\n      5.7.3.  Integrity\
    \ Protection\n        The INTEGRITY Object is available in RSVP.\n      5.7.4.\
    \  Replay Protection\n        The INTEGRITY Object to replay protect the content\
    \ of the\n        signaling messages between two RSVP nodes.\n      5.7.5.  Hop-By-Hop\
    \ Security\n        The RSVP security model works only hop-by-hop.\n      5.7.6.\
    \  Identity Confidentiality and Network Topology Hiding\n        The INTEGRITY\
    \ Object can be used for this purpose.\n      5.7.7.  Denial-Of-Service Attacks\n\
    \        Challenging with RSVP.\n      5.7.8.  Confidentiality of Signaling Messages\n\
    \        Not supported by RSVP.\n      5.7.9. Ownership of State\n        Challenging\
    \ with RSVP.\n   5.8.  Mobility\n      5.8.1.  Allow Efficient Service Re-Establishment\
    \ After Handover\n        Works for upstream but may not be achieved for the downstream\n\
    \        if mobility is not noticed at the cross-over router.\n   5.9.  Interworking\
    \ with Other Protocols and Techniques\n      5.9.1.  MUST Interwork with IP Tunneling\n\
    \        RFC 2746 discusses these issues.\n      5.9.2.  MUST NOT Constrain either\
    \ to IPv4 or IPv6\n        RSVP supports both IP versions.\n      5.9.3.  MUST\
    \ Be Independent from Charging Model\n        RSVP does not discuss this.\n  \
    \    5.9.4.  SHOULD Provide Hooks for AAA Protocols\n        COPS and RSVP work\
    \ together.\n      5.9.5.  SHOULD Work with Seamless Handoff Protocols\n     \
    \   Not supported by RSVP.  Still, [RFC2205] suggests that route\n        changes\
    \ should be indicated to the local RSVP daemon, which can\n        then initiate\
    \ state refresh.\n      5.9.6.  MUST Work with Traditional Routing\n        RSVP\
    \ expects traditional routing.\n   5.10.  Operational\n      5.10.1.  Ability\
    \ to Assign Transport Quality to Signaling Messages\n        This is a network\
    \ design issue, but is possible with DiffServ.\n      5.10.2.  Graceful Fail Over\n\
    \        RSVP supports this.\n      5.10.3.  Graceful Handling of NSIS Entity\
    \ Problems\n        RSVP itself does not supports this.\n"
- title: 13.  Normative References
  contents:
  - "13.  Normative References\n   [RFC3726]      Brunner, M., \"Requirements for\
    \ Signaling Protocols\",\n                  RFC 3726, April 2004.\n"
- title: 14.  Informative References
  contents:
  - "14.  Informative References\n   [3GPP-TS23207] 3GPP TS 23.207 V5.6.0, End-to-end\
    \ Quality of Service\n                  (QoS) Concept and Architecture, Release\
    \ 5, December\n                  2002.\n   [BEBH96]       Braden, R., Estrin,\
    \ D., Berson, S., Herzog, and D.\n                  Zappala, \"The Design of the\
    \ RSVP Protocol\", ISI Final\n                  Technical Report, July 1996.\n\
    \   [BEGD02]       Y. Bernet, N. Elfassy, S. Gai, and D. Dutt, \"RSVP\n      \
    \            Proxy\", Work in Progress, March 2002.\n   [BFM+96]       A. Banerjea,\
    \ D. Ferrari, B. Mah, M. Moran, D. Verma,\n                  and H.  Zhang, \"\
    The Tenet Real-Time Protocol Suite:\n                  Design, Implementation,\
    \ and Experiences\", IEEE/ACM\n                  Transactions on Networking, Volume\
    \ 4, Issue 1,\n                  February 1996, pp. 1-10.\n   [BGRP]         P.\
    \ Pan, E, Hahne, and H. Schulzrinne, \"BGRP: A Tree-\n                  Based\
    \ Aggregation Protocol for Inter-domain\n                  Reservations\", Journal\
    \ of Communications and Networks,\n                  Vol. 2, No. 2, June 2000,\
    \ pp. 157-167.\n   [Bless02]      R. Bless, \"Dynamic Aggregation of Reservations\
    \ for\n                  Internet Services\", Proceedings of the Tenth\n     \
    \             International Conference on Telecommunication Systems\n        \
    \          - Modeling and Analysis (ICTSM 10), Vol. 1, pp. 26-38,\n          \
    \        October 3-6 2002, Monterey, California, available at\n              \
    \    http://www.tm.uka.de/doc/2003/ictsm-daris-journal-\n                  crc-web.pdf.\n\
    \   [Bless04]      R. Bless, \"Towards Scalable Management of QoS-based\n    \
    \              End-to- End Services\" (PDF), Proceedings of NOMS 2004\n      \
    \            (IEEE/IFIP 2004 Network Operations and Management\n             \
    \     Symposium), April 2004, Seoul, Korea.\n   [FAST-REROUTE] P. Pan, G. Swallow,\
    \ and A. Atlas, \"Fast Reroute\n                  Extensions to RSVP-TE for LSP\
    \ Tunnels\", Work in\n                  Progress, January 2004.\n   [FNM+99] \
    \      G. Feher, K. Nemeth, M. Maliosz, I. Cselenyi, J.\n                  Bergkvist,\
    \ D. Ahlard, T. Engborg, \"Boomerang A Simple\n                  Protocol for\
    \ Resource Reservation in IP Networks\",\n                  IEEE RTAS, 1999.\n\
    \   [FNS02]        G. Feher, K. Nemeth, and I. Cselenyi, \"Performance\n     \
    \             evaluation framework for IP resource reservation\n             \
    \     signalling\". Performance Evaluation 48 (2002), pp.\n                  131-156.\n\
    \   [FJ02]         P. Fransson and A. Jonsson, \"The need for an\n           \
    \       alternative to IPv4-options\", in RVK (RadioVetenskap\n              \
    \    och Kommunikation), Stockholm, Sweden, pp. 162-166,\n                  June\
    \ 2002.\n   [Fu02]         X. Fu, C. Kappler, and H. Tschofenig, \"Analysis on\n\
    \                  RSVP Regarding Multicast\". Technical Report No. IFI-\n   \
    \               TB-2002-001, ISSN 1611-1044, Institute for\n                 \
    \ Informatics, University of Goettingen, Oct 2002.\n   [H.245]        ITU-T Recommendation\
    \ H.245, Control Protocol for\n                  Multimedia Communication, July\
    \ 2000.\n   [H.323]        ITU-T Recommendation H.323, Packet-based Multimedia\n\
    \                  Communications Systems, Nov. 2000.\n   [JR03]         Jukka\
    \ Manner, Kimmo Raatikainen, \"Localized QoS\n                  Management for\
    \ Multimedia Applications in Wireless\n                  Access Networks\". IASTED\
    \ International Conference on\n                  Internet and Multimedia Systems\
    \ and Applications (IMSA\n                  2003), August, 2003, pp. 193-200.\n\
    \   [Kars01]       M. Karsten, \"Experimental Extensions to RSVP -- Remote\n \
    \                 Client and One-Pass Signalling\".  IWQoS 2001,\n           \
    \       Karlsruhe, Germany, June 2001.\n   [KSS01]        M. Karsten, Jens Schmitt,\
    \ Ralf Steinmetz,\n                  \"Implementation and Evaluation of the KOM\
    \ RSVP\n                  Engine\", IEEE Infocom 2001.\n   [LGZC00]       S. Lee,\
    \ A. Gahng-Seop, X. Zhang, A.\n                  Campbell,\"INSIGNIA: An IP-Based\
    \ Quality of Service\n                  Framework for Mobile Ad Hoc Networks\"\
    .  Journal of\n                  Parallel and Distributed Computing (Academic\
    \ Press),\n                  Special issue on Wireless and Mobile Computing and\n\
    \                  Communications, Vol. 60, Number 4, April, 2000, pp.\n     \
    \             374-406.\n   [MA01]         B. Moon, and H. Aghvami, \"RSVP Extensions\
    \ for Real-\n                  Time Services in Wireless Mobile Networks\".  IEEE\n\
    \                  Communications Magazine, December 2001, pp. 52-59.\n   [MESZ94]\
    \       D. Mitzel, D. Estrin, S. Shenker, and L. Zhang, \"An\n               \
    \   Architectural Comparison of ST-II and RSVP\", Infocom\n                  1994.\n\
    \   [MHS02]        Y Miao, W. Hwang, and C. Shieh, \"A transparent\n         \
    \         deployment method of RSVP-aware applications on UNIX\".\n          \
    \        Computer Networks, 40 (2002), pp. 45-56.\n   [MSK+04]       J. Manner,\
    \ T. Suihko, M. Kojo, M. Liljeberg, K.\n                  Raatikainen, \"Localized\
    \ RSVP\", Work in Progress,\n                  September 2004.\n   [OVERLAY] \
    \     G. Swallow, J. Drake, H. Ishimatsu, and Y. Rekhter,\n                  \"\
    GMPLS UNI: RSVP Support for the Overlay Model\", Work\n                  in Progress,\
    \ February 2004.\n   [PS97]         P. Pan and H. Schulzrinne, \"Staged refresh\
    \ timers for\n                  RSVP\", Global Internet, Phoenix, Arizona, November\n\
    \                  1997.\n   [PS98]         P. Pan, and H. Schulzrinne, \"YESSIR:\
    \ A Simple\n                  Reservation Mechanism for the Internet\". Proceedings\n\
    \                  of NOSSDAV, Cambridge, UK, July 1998.\n   [PS00]         P.\
    \ Pan, and H. Schulzrinne, \"PF_IPOPTION: A kernel\n                  extension\
    \ for IP option packet processing\", Technical\n                  Memorandum 10009669-02TM,\
    \ Bell Labs, Lucent\n                  Technologies, Murray Hill, NJ, June 2000.\n\
    \   [RFC1819]      Delgrossi, L. and L. Berger, \"Internet Stream Protocol\n \
    \                 Version 2 (ST2) Protocol Specification - Version\n         \
    \         ST2+\", RFC 1819, August 1995.\n   [RFC2113]      Katz, D., \"IP Router\
    \ Alert Option\", RFC 2113, February\n                  1997.\n   [RFC2205]  \
    \    Braden, R., Zhang, L., Berson, S., Herzog, S., and S.\n                 \
    \ Jamin, \"Resource ReSerVation Protocol (RSVP) --\n                  Version\
    \ 1 Functional Specification\", RFC 2205,\n                  September 1997.\n\
    \   [RFC2207]      Berger, L. and T. O'Malley, \"RSVP Extensions for IPSEC\n \
    \                 Data Flows\", RFC 2207, September 1997.\n   [RFC2210]      Wroclawski,\
    \ J., \"The Use of RSVP with IETF Integrated\n                  Services\", RFC\
    \ 2210, September 1997.\n   [RFC2379]      Berger, L., \"RSVP over ATM Implementation\
    \ Guidelines\",\n                  BCP 24, RFC 2379, August 1998.\n   [RFC2380]\
    \      Berger, L., \"RSVP over ATM Implementation\n                  Requirements\"\
    , RFC 2380, August 1998.\n   [RFC2745]      Terzis, A., Braden, B., Vincent, S.,\
    \ and L. Zhang,\n                  \"RSVP Diagnostic Messages\", RFC 2745, January\
    \ 2000.\n   [RFC2746]      Terzis, A., Krawczyk, J., Wroclawski, J., and L.\n\
    \                  Zhang, \"RSVP Operation Over IP Tunnels\", RFC 2746,\n    \
    \              January 2000.\n   [RFC2747]      Baker, F., Lindell, B., and M.\
    \ Talwar, \"RSVP\n                  Cryptographic Authentication\", RFC 2747,\
    \ January 2000.\n   [RFC2749]      Herzog, S., Boyle, J., Cohen, R., Durham, D.,\
    \ Rajan,\n                  R., and A. Sastry, \"COPS usage for RSVP\", RFC 2749,\n\
    \                  January 2000.\n   [RFC2750]      Herzog, S., \"RSVP Extensions\
    \ for Policy Control\", RFC\n                  2750, January 2000.\n   [RFC2814]\
    \      Yavatkar, R., Hoffman, D., Bernet, Y., Baker, F., and\n               \
    \   M. Speer, \"SBM (Subnet Bandwidth Manager): A Protocol\n                 \
    \ for RSVP-based Admission Control over IEEE 802-style\n                  networks\"\
    , RFC 2814, May 2000.\n   [RFC2961]      Berger, L., Gan, D., Swallow, G., Pan,\
    \ P., Tommasi,\n                  F., and S. Molendini, \"RSVP Refresh Overhead\
    \ Reduction\n                  Extensions\", RFC 2961, April 2001.\n   [RFC2996]\
    \      Bernet, Y., \"Format of the RSVP DCLASS Object\", RFC\n               \
    \   2996, November 2000.\n   [RFC2997]      Bernet, Y., Smith, A., and B. Davie,\
    \ \"Specification of\n                  the Null Service Type\", RFC 2997, November\
    \ 2000.\n   [RFC2998]      Bernet, Y., Ford, P., Yavatkar, R., Baker, F., Zhang,\n\
    \                  L., Speer, M., Braden, R., Davie, B., Wroclawski, J.,\n   \
    \               and E. Felstaine, \"A Framework for Integrated Services\n    \
    \              Operation over Diffserv Networks\", RFC 2998, November\n      \
    \            2000.\n   [RFC3175]      Baker, F., Iturralde, C., Le Faucheur, F.,\
    \ and B.\n                  Davie, \"Aggregation of RSVP for IPv4 and IPv6\n \
    \                 Reservations\", RFC 3175, September 2001.\n   [RFC3181]    \
    \  Herzog, S., \"Signaled Preemption Priority Policy\n                  Element\"\
    , RFC 3181, October 2001\n   [RFC3182]      Yadav, S., Yavatkar, R., Pabbati,\
    \ R., Ford, P., Moore,\n                  T., Herzog, S., and R. Hess, \"Identity\
    \ Representation\n                  for RSVP\", RFC 3182, October 2001.\n   [RFC3209]\
    \      Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan,\n               \
    \   V., and G. Swallow, \"RSVP-TE: Extensions to RSVP for\n                  LSP\
    \ Tunnels\", RFC 3209, December 2001.\n   [RFC3270]      Le Faucheur, F., Wu,\
    \ L., Davie, B., Davari, S.,\n                  Vaananen, P., Krishnan, R., Cheval,\
    \ P., and J.\n                  Heinanen, \"Multi-Protocol Label Switching (MPLS)\n\
    \                  Support of Differentiated Services\", RFC 3270, May\n     \
    \             2002.\n   [RFC3303]      Srisuresh, P., Kuthan, J., Rosenberg, J.,\
    \ Molitor, A.,\n                  and A. Rayhan, \"Middlebox communication architecture\n\
    \                  and framework\", RFC 3303, August 2002.\n   [RFC3473]     \
    \ Berger, L., \"Generalized Multi-Protocol Label\n                  Switching\
    \ (GMPLS) Signaling Resource ReserVation\n                  Protocol-Traffic Engineering\
    \ (RSVP-TE) Extensions\",\n                  RFC 3473, January 2003.\n   [RFC3477]\
    \      Kompella, K. and Y. Rekhter, \"Signalling Unnumbered\n                \
    \  Links in Resource ReSerVation Protocol - Traffic\n                  Engineering\
    \ (RSVP-TE)\", RFC 3477, January 2003.\n   [RFC3520]      Hamer, L-N., Gage, B.,\
    \ Kosinski, B., and H. Shieh,\n                  \"Session Authorization Policy\
    \ Element\", RFC 3520,\n                  April 2003.\n   [SGV02]        R. Sofia,\
    \ R. Guerin, and P. Veiga, \"An Investigation\n                  of Inter-Domain\
    \ Control Aggregation Procedures\",\n                  International Conference\
    \ on Networking Protocols, ICNP\n                  2002, Paris, France, November\
    \ 2002.\n   [SGV03]        R. Sofia, R. Guerin, and P. Veiga. SICAP, a Shared-\n\
    \                  segment Inter-domain Control Aggregation Protocol.\n      \
    \            High Performance Switching and Routing, HPSR 2003,\n            \
    \      Turin, Italy, June 2003.\n   [SGV03b]       R. Sofia, R. Guerin, and P.\
    \ Veiga. A Study of Over-\n                  reservation for Inter-Domain Control\
    \ Aggregation\n                  Protocols. Technical report (short version under\n\
    \                  submission), University of Pennsylvania, May 2003,\n      \
    \            available at http://einstein.seas.upenn.edu/mnlab/\n            \
    \      publications.html.\n   [TBA01]        A. Talukdar, B. Badrinath, and A.\
    \ Acharya, \"MRSVP: A\n                  Resource Reservation Protocol for an\
    \ Integrated\n                  Services Network with Mobile Hosts\", Wireless\n\
    \                  Networks, vol. 7, no. 1, pp. 5-19, 2001.\n   [Thom02]     \
    \  M. Thomas, \"Analysis of Mobile IP and RSVP\n                  Interactions\"\
    , Work in Progress, October 2002.\n   [Tsch03]       H. Tschofenig, \"RSVP Security\
    \ Properties\", Work in\n                  Progress, February 2004.\n   [ZDSZ93]\
    \       L. Zhang, S. Deering, D. Estrin, and D. Zappala,\n                  \"\
    RSVP: A New Resource Reservation Protocol\", IEEE\n                  Network,\
    \ Volume 7, Pages 8-18, September 1993.\n   [URL1]         http://www.atm.tut.fi/list-archive/diffserv/thrd3.html\n\
    \   [URL2]         OPENSIG http://comet.columbia.edu/opensig/\n   [URL3]     \
    \    SIGLITE http://www1.cs.columbia.edu/~pingpan/projects/\n                \
    \  siglite.html\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jukka Manner\n   Department of Computer Science\n   University\
    \ of Helsinki\n   P.O. Box 68 (Gustav Hallstrominkatu 2b)\n   FIN-00014 HELSINKI\n\
    \   Finland\n   Phone: +358-9-191-51298\n   Fax:   +358-9-191-51120\n   EMail:\
    \ jmanner@cs.helsinki.fi\n   Xiaoming Fu\n   Institute for Informatics\n   Georg-August-University\
    \ of Goettingen\n   Lotzestrasse 16-18\n   37083 Goettingen\n   Germany\n   Phone:\
    \ +49-551-39-14411\n   Fax:   +49-551-39-14403\n   EMail: fu@cs.uni-goettingen.de\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
