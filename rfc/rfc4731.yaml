- contents:
  - "           IMAP4 Extension to SEARCH Command for Controlling\n                  What
    Kind of Information Is Returned\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document extends IMAP (RFC 3501) SEARCH and UID SEARCH commands\n
    \  with several result options, which can control what kind of\n   information
    is returned. The following result options are defined:\n   minimal value, maximal
    value, all found messages, and number of found\n   messages.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions Used in This Document ...............................2\n   3.
    IMAP Protocol Changes ...........................................2\n      3.1.
    New SEARCH/UID SEARCH Result Options .......................2\n      3.2. Interaction
    with CONDSTORE extension .......................4\n   4. Formal Syntax ...................................................5\n
    \  5. Security Considerations .........................................6\n   6.
    IANA Considerations .............................................6\n   7. Normative
    References ............................................6\n   8. Acknowledgments
    .................................................6\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [IMAPABNF] extended SEARCH and UID SEARCH commands with
    result\n   specifiers (also known as result options), which can control what\n
    \  kind of information is returned.\n   A server advertising the ESEARCH capability
    supports the following\n   result options:  minimal value, maximal value, all
    found messages,\n   and number of found messages.  These result options allow
    clients to\n   get SEARCH results in more convenient forms, while also saving\n
    \  bandwidth required to transport the results, for example, by finding\n   the
    first unseen message or returning the number of unseen or deleted\n   messages.
    \ Also, when a single MIN or a single MAX result option is\n   specified, servers
    can optimize execution of SEARCHes.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   In examples, \"C:\" and \"S:\" indicate
    lines sent by the client and\n   server, respectively.\n   The key words \"MUST\",
    \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD
    NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to
    be interpreted as described in RFC 2119 [KEYWORDS].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - '3.   IMAP Protocol Changes

    '
  - contents:
    - "3.1.  New SEARCH/UID SEARCH Result Options\n   The SEARCH/UID SEARCH commands
      are extended to allow for the\n   following result options:\n      MIN\n         Return
      the lowest message number/UID that satisfies the SEARCH\n         criteria.\n
      \        If the SEARCH results in no matches, the server MUST NOT\n         include
      the MIN result option in the ESEARCH response; however,\n         it still MUST
      send the ESEARCH response.\n      MAX\n         Return the highest message number/UID
      that satisfies the SEARCH\n         criteria.\n         If the SEARCH results
      in no matches, the server MUST NOT\n         include the MAX result option in
      the ESEARCH response; however,\n         it still MUST send the ESEARCH response.\n
      \     ALL\n         Return all message numbers/UIDs that satisfy the SEARCH\n
      \        criteria.  Unlike regular (unextended) SEARCH, the messages are\n         always
      returned using the sequence-set syntax.  A sequence-set\n         representation
      may be more compact and can be used as is in a\n         subsequent command
      that accepts sequence-set.  Note, the client\n         MUST NOT assume that
      messages/UIDs will be listed in any\n         particular order.\n         If
      the SEARCH results in no matches, the server MUST NOT\n         include the
      ALL result option in the ESEARCH response; however,\n         it still MUST
      send the ESEARCH response.\n      COUNT\n         Return number of the messages
      that satisfy the SEARCH criteria.\n         This result option MUST always be
      included in the ESEARCH\n         response.\n   If one or more result options
      described above are specified, the\n   extended SEARCH command MUST return a
      single ESEARCH response\n   [IMAPABNF], instead of the SEARCH response.\n   An
      extended UID SEARCH command MUST cause an ESEARCH response with\n   the UID
      indicator present.\n   Note that future extensions to this document can allow
      servers to\n   return multiple ESEARCH responses for a single extended SEARCH\n
      \  command.  These extensions will have to describe how results from\n   multiple
      ESEARCH responses are to be amalgamated.\n   If the list of result options is
      empty, that requests the server to\n   return an ESEARCH response instead of
      the SEARCH response.  This is\n   equivalent to \"(ALL)\".\n      Example:    C:
      A282 SEARCH RETURN (MIN COUNT) FLAGGED\n                     SINCE 1-Feb-1994
      NOT FROM \"Smith\"\n                  S: * ESEARCH (TAG \"A282\") MIN 2 COUNT
      3\n                  S: A282 OK SEARCH completed\n      Example:    C: A283
      SEARCH RETURN () FLAGGED\n                     SINCE 1-Feb-1994 NOT FROM \"Smith\"\n
      \                 S: * ESEARCH (TAG \"A283\") ALL 2,10:11\n                  S:
      A283 OK SEARCH completed\n   The following example demonstrates finding the
      first unseen message\n   as returned in the UNSEEN response code on a successful
      SELECT\n   command:\n      Example:    C: A284 SEARCH RETURN (MIN) UNSEEN\n
      \                 S: * ESEARCH (TAG \"A284\") MIN 4\n                  S: A284
      OK SEARCH completed\n   The following example demonstrates that if the ESEARCH
      UID indicator\n   is present, all data in the ESEARCH response is referring
      to UIDs;\n   for example, the MIN result specifier will be followed by a UID.\n
      \     Example:    C: A285 UID SEARCH RETURN (MIN MAX) 1:5000\n                  S:
      * ESEARCH (TAG \"A285\") UID MIN 7 MAX 3800\n                  S: A285 OK SEARCH
      completed\n   The following example demonstrates returning the number of deleted\n
      \  messages:\n      Example:    C: A286 SEARCH RETURN (COUNT) DELETED\n                  S:
      * ESEARCH (TAG \"A286\") COUNT 15\n                  S: A286 OK SEARCH completed\n"
    title: 3.1.  New SEARCH/UID SEARCH Result Options
  - contents:
    - "3.2.  Interaction with CONDSTORE extension\n   When the server supports both
      the ESEARCH and the CONDSTORE\n   [CONDSTORE] extension, and the client requests
      one or more result\n   option described in section 3.1 together with the MODSEQ
      search\n   criterion in the same SEARCH/UID SEARCH command, then the server
      MUST\n   return the ESEARCH response containing the MODSEQ result option\n   (described
      in the following paragraph) instead of the extended SEARCH\n   response described
      in section 3.5 of [CONDSTORE].\n   If the SEARCH/UID SEARCH command contained
      a single MIN or MAX result\n   option, the MODSEQ result option contains the
      mod-sequence for the\n   found message.  If the SEARCH/UID SEARCH command contained
      both MIN\n   and MAX result options and no ALL/COUNT option, the MODSEQ result\n
      \  option contains the highest mod-sequence for the two returned\n   messages.
      \ Otherwise the MODSEQ result option contains the highest\n   mod-sequence for
      all messages being returned.\n   Example: The following example demonstrates
      how Example 15 from\n   [CONDSTORE] would look in the presence of one or more
      result option:\n         C: a1 SEARCH RETURN (MIN) MODSEQ \"/flags/\\\\draft\"\n
      \            all 620162338\n         S: * ESEARCH (TAG \"a1\") MIN 2 MODSEQ
      917162488\n         S: a1 OK Search complete\n         C: a2 SEARCH RETURN (MAX)
      MODSEQ \"/flags/\\\\draft\"\n             all 620162338\n         S: * ESEARCH
      (TAG \"a2\") MAX 23 MODSEQ 907162321\n         S: a2 OK Search complete\n         C:
      a3 SEARCH RETURN (MIN MAX) MODSEQ \"/flags/\\\\draft\"\n             all 620162338\n
      \        S: * ESEARCH (TAG \"a3\") MIN 2 MAX 23 MODSEQ 917162488\n         S:
      a3 OK Search complete\n         C: a4 SEARCH RETURN (MIN COUNT) MODSEQ \"/flags/\\\\draft\"\n
      \            all 620162338\n         S: * ESEARCH (TAG \"a4\") MIN 2 COUNT 10
      MODSEQ 917162500\n         S: a4 OK Search complete\n"
    title: 3.2.  Interaction with CONDSTORE extension
  title: 3.   IMAP Protocol Changes
- contents:
  - "4.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n
    \  Form (ABNF) notation as specified in [ABNF].\n   Non-terminals referenced but
    not defined below are as defined by\n   [IMAP4], [CONDSTORE], or [IMAPABNF].\n
    \  Except as noted otherwise, all alphabetic characters are case-\n   insensitive.
    \ The use of upper or lowercase characters to define\n   token strings is for
    editorial clarity only.  Implementations MUST\n   accept these strings in a case-insensitive
    fashion.\n     capability         =/ \"ESEARCH\"\n     search-return-data = \"MIN\"
    SP nz-number /\n                          \"MAX\" SP nz-number /\n                          \"ALL\"
    SP sequence-set /\n                          \"COUNT\" SP number\n                          ;;
    conforms to the generic\n                          ;; search-return-data syntax
    defined\n                          ;; in [IMAPABNF]\n     search-return-opt  =
    \"MIN\" / \"MAX\" / \"ALL\" / \"COUNT\"\n                          ;; conforms
    to generic search-return-opt\n                          ;; syntax defined in [IMAPABNF]\n
    \    When the CONDSTORE [CONDSTORE] IMAP extension is also supported,\n     the
    ABNF is updated as follows:\n     search-return-data =/ \"MODSEQ\" SP mod-sequence-value\n
    \                         ;; mod-sequence-value is defined\n                          ;;
    in [CONDSTORE]\n"
  title: 4.  Formal Syntax
- contents:
  - "5.  Security Considerations\n   In the general case, the IMAP SEARCH/UID SEARCH
    commands can be CPU\n   and/or IO intensive, and are seen by some as a potential
    attack point\n   for denial of service attacks, so some sites/implementations
    even\n   disable them entirely.  This is quite unfortunate, as SEARCH command\n
    \  is one of the best examples demonstrating IMAP advantage over POP3.\n   The
    ALL and COUNT return options don't change how SEARCH is working\n   internally;
    they only change how information about found messages is\n   returned.  MIN and
    MAX SEARCH result options described in this\n   document can lighten the load
    on IMAP servers that choose to optimize\n   SEARCHes containing only one or both
    of them.\n   It is believed that this extension doesn't raise any additional\n
    \  security concerns not already discussed in [IMAP4].\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   IMAP4 capabilities are registered by publishing a
    standards track RFC\n   or an IESG-approved experimental RFC.  The registry is
    currently\n   located at <http://www.iana.org/assignments/imap4-capabilities>.\n
    \  This document defines the ESEARCH IMAP capability, which IANA added\n   to
    the registry.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Normative References\n   [KEYWORDS]  Bradner, S., \"Key words for use in
    RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March
    1997.\n   [IMAP4]     Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n
    \              4rev1\", RFC 3501, March 2003.\n   [ABNF]      Crocker, D. (Ed.)
    and P. Overell , \"Augmented BNF for\n               Syntax Specifications: ABNF\",
    RFC 4234, October 2005.\n   [IMAPABNF]  Melnikov, A. and C. Daboo, \"Collected
    Extensions to IMAP4\n               ABNF\", RFC 4466, April 2006..\n   [CONDSTORE]
    Melnikov, A. and S. Hole, \"IMAP Extension for Conditional\n               STORE\",
    RFC 4551, June 2006.\n"
  title: 7.  Normative References
- contents:
  - "8.  Acknowledgments\n   Thanks to Michael Wener, Arnt Gulbrandsen, Cyrus Daboo,
    Mark Crispin,\n   and Pete Maclean for comments and corrections.\n"
  title: 8.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Alexey Melnikov\n   Isode Limited\n   5 Castle Business
    Village\n   36 Station Road\n   Hampton, Middlesex, TW12 2BX\n   UK\n   EMail:
    Alexey.Melnikov@isode.com\n   Dave A. Cridland\n   Inventure Systems Limited\n
    \  EMail: dave.cridland@inventuresystems.co.uk\n   URL: http://invsys.co.uk/dave/\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR\n
    \  PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
