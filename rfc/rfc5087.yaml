- title: __initial_text__
  contents:
  - '              Time Division Multiplexing over IP (TDMoIP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   Time Division Multiplexing over IP (TDMoIP) is a structure-aware\n\
    \   method for transporting Time Division Multiplexed (TDM) signals using\n  \
    \ pseudowires (PWs).  Being structure-aware, TDMoIP is able to ensure\n   TDM\
    \ structure integrity, and thus withstand network degradations\n   better than\
    \ structure-agnostic transport.  Structure-aware methods\n   can distinguish individual\
    \ channels, enabling packet loss concealment\n   and bandwidth conservation. \
    \ Accesibility of TDM signaling\n   facilitates mechanisms that exploit or manipulate\
    \ signaling.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  TDM Structure and Structure-aware Transport  . . . .\
    \ . . . . .  4\n   3.  TDMoIP Encapsulation . . . . . . . . . . . . . . . . .\
    \ . . . .  6\n   4.  Encapsulation Details for Specific PSNs  . . . . . . . .\
    \ . . .  9\n     4.1.  UDP/IP . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  9\n     4.2.  MPLS . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 12\n     4.3.  L2TPv3 . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 14\n     4.4.  Ethernet . . . . . . . . . . . . . . . . . . . . . . . . . 15\n\
    \   5.  TDMoIP Payload Types . . . . . . . . . . . . . . . . . . . . . 17\n  \
    \   5.1.  AAL1 Format Payload  . . . . . . . . . . . . . . . . . . . 18\n    \
    \ 5.2.  AAL2 Format Payload  . . . . . . . . . . . . . . . . . . . 19\n     5.3.\
    \  HDLC Format Payload  . . . . . . . . . . . . . . . . . . . 20\n   6.  TDMoIP\
    \ Defect Handling . . . . . . . . . . . . . . . . . . . . 21\n   7.  Implementation\
    \ Issues  . . . . . . . . . . . . . . . . . . . . 24\n     7.1.  Jitter and Packet\
    \ Loss . . . . . . . . . . . . . . . . . . 24\n     7.2.  Timing Recovery  . .\
    \ . . . . . . . . . . . . . . . . . . . 25\n     7.3.  Congestion Control . .\
    \ . . . . . . . . . . . . . . . . . . 26\n   8.  Security Considerations  . .\
    \ . . . . . . . . . . . . . . . . . 27\n   9.  IANA Considerations  . . . . .\
    \ . . . . . . . . . . . . . . . . 28\n   10. Applicability Statement  . . . .\
    \ . . . . . . . . . . . . . . . 28\n   11. Acknowledgments  . . . . . . . . .\
    \ . . . . . . . . . . . . . . 29\n   Appendix A.  Sequence Number Processing (Informative)\
    \  . . . . . . 30\n   Appendix B.  AAL1 Review (Informative) . . . . . . . . .\
    \ . . . . . 32\n   Appendix C.  AAL2 Review (Informative) . . . . . . . . . .\
    \ . . . . 36\n   Appendix D.  Performance Monitoring Mechanisms (Informative)\
    \ . . . 38\n     D.1.  TDMoIP Connectivity Verification . . . . . . . . . . .\
    \ . . 38\n     D.2.  OAM Packet Format  . . . . . . . . . . . . . . . . . . .\
    \ . 39\n   Appendix E.  Capabilities, Configuration and Statistics\n         \
    \       (Informative) . . . . . . . . . . . . . . . . . . . . 42\n   References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45\n     Normative References\
    \ . . . . . . . . . . . . . . . . . . . . . . 45\n     Informative References\
    \ . . . . . . . . . . . . . . . . . . . . . 47\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Telephony traffic is conventionally carried over connection-oriented\n\
    \   synchronous or plesiochronous links (loosely called TDM circuits\n   herein).\
    \  With the proliferation of Packet Switched Networks (PSNs),\n   transport of\
    \ TDM services over PSN infrastructures has become\n   desirable.  Emulation of\
    \ TDM circuits over the PSN can be carried out\n   using pseudowires (PWs), as\
    \ described in the PWE3 architecture\n   [RFC3985].  This emulation must maintain\
    \ service quality of native\n   TDM; in particular voice quality, latency, timing,\
    \ and signaling\n   features must be similar to those of existing TDM networks,\
    \ as\n   described in the TDM PW requirements document [RFC4197].\n   Structure-Agnostic\
    \ TDM over Packet (SAToP) [RFC4553] is a structure-\n   agnostic protocol for\
    \ transporting TDM over PSNs.  The present\n   document details TDM over IP (TDMoIP),\
    \ a structure-aware method for\n   TDM transport.  In contrast to SAToP, structure-aware\
    \ methods such as\n   TDMoIP ensure the integrity of TDM structure and thus enable\
    \ the PW\n   to better withstand network degradations.  Individual multiplexed\n\
    \   channels become visible, enabling the use of per channel mechanisms\n   for\
    \ packet loss concealment and bandwidth conservation.  TDM\n   signaling also\
    \ becomes accessible, facilitating mechanisms that\n   exploit or manipulate this\
    \ signaling.\n   Despite its name, the TDMoIP(R) protocol herein described may\
    \ operate\n   over several types of PSN, including UDP over IPv4 or IPv6, MPLS,\n\
    \   Layer 2 Tunneling Protocol version 3 (L2TPv3) over IP, and pure\n   Ethernet.\
    \  Implementation specifics for particular PSNs are discussed\n   in Section 4.\
    \  Although the protocol should be more generally called\n   TDMoPW and its specific\
    \ implementations TDMoIP, TDMoMPLS, etc., we\n   retain the nomenclature TDMoIP\
    \ for consistency with earlier usage.\n   The interworking function that connects\
    \ between the TDM and PSN\n   worlds will be called a TDMoIP interworking function\
    \ (IWF), and it\n   may be situated at the provider edge (PE) or at the customer\
    \ edge\n   (CE).  The IWF that encapsulates TDM and injects packets into the PSN\n\
    \   will be called the PSN-bound interworking function, while the IWF\n   that\
    \ extracts TDM data from packets and generates traffic on a TDM\n   network will\
    \ be called the TDM-bound interworking function.  Emulated\n   TDM circuits are\
    \ always point-to-point, bidirectional, and transport\n   TDM at the same rate\
    \ in both directions.\n   As with all PWs, TDMoIP PWs may be manually configured\
    \ or set up\n   using the PWE3 control protocol [RFC4447].  Extensions to the\
    \ PWE3\n   control protocol required specifically for setup and maintenance of\n\
    \   TDMoIP pseudowires are described in [TDM-CONTROL].\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in [RFC2119].\n"
- title: 2.  TDM Structure and Structure-aware Transport
  contents:
  - "2.  TDM Structure and Structure-aware Transport\n   Although TDM circuits can\
    \ be used to carry arbitrary bit-streams,\n   there are standardized methods for\
    \ carrying constant-length blocks of\n   data called \"structures\".  Familiar\
    \ structures are the T1 or E1\n   frames [G704] of length 193 and 256 bits, respectively.\
    \  By\n   concatenation of consecutive T1 or E1 frames we can build higher\n \
    \  level structures called superframes or multiframes.  T3 and E3 frames\n   [G704][G751]\
    \ are much larger than those of T1 and E1, and even larger\n   structures are\
    \ used in the GSM Abis channel described in [TRAU].  TDM\n   structures contain\
    \ TDM data plus structure overhead; for example, the\n   193-bit T1 frame contains\
    \ a single bit of structure overhead and 24\n   bytes of data, while the 32-byte\
    \ E1 frame contains a byte of overhead\n   and 31 data bytes.\n   Structured TDM\
    \ circuits are frequently used to transport multiplexed\n   channels.  A single\
    \ byte in the TDM frame (called a timeslot) is\n   allocated to each channel.\
    \  A frame of a channelized T1 carries 24\n   byte-sized channels, while an E1\
    \ frame consists of 31 channels.\n   Since TDM frames are sent 8000 times per\
    \ second, a single byte-sized\n   channel carries 64 kbps.\n   TDM structures\
    \ are universally delimited by placing an easily\n   detectable periodic bit pattern,\
    \ called the Frame Alignment Signal\n   (FAS), in the structure overhead.  The\
    \ structure overhead may\n   additionally contain error monitoring and defect\
    \ indications.  We\n   will use the term \"structured TDM\" to refer to TDM with\
    \ any level of\n   structure imposed by an FAS.  Unstructured TDM signifies a\
    \ bit stream\n   upon which no structure has been imposed, implying that all bits\
    \ are\n   available for user data.\n   SAToP [RFC4553] is a structure-agnostic\
    \ protocol for transporting TDM\n   using PWs.  SAToP treats the TDM input as\
    \ an arbitrary bit-stream,\n   completely disregarding any structure that may\
    \ exist in the TDM bit-\n   stream.  Hence, SAToP is ideal for transport of truly\
    \ unstructured\n   TDM, but is also suitable for transport of structured TDM when\
    \ there\n   is no need to protect structure integrity nor interpret or manipulate\n\
    \   individual channels during transport.  In particular, SAToP is the\n   technique\
    \ of choice for PSNs with negligible packet loss, and for\n   applications that\
    \ do not require discrimination between channels nor\n   intervention in TDM signaling.\n\
    \   As described in [RFC4553], when a single SAToP packet is lost, an\n   \"all\
    \ ones\" pattern is played out to the TDM interface.  This pattern\n   is interpreted\
    \ by the TDM end equipment as an Alarm Indication Signal\n   (AIS), which, according\
    \ to TDM standards [G826], immediately triggers\n   a \"severely errored second\"\
    \ event.  As such events are considered\n   highly undesirable, the suitability\
    \ of SAToP is limited to extremely\n   reliable and underutilized PSNs.\n   When\
    \ structure-aware TDM transport is employed, it is possible to\n   explicitly\
    \ safeguard TDM structure during transport over the PSN,\n   thus making possible\
    \ to effectively conceal packet loss events.\n   Structure-aware transport exploits\
    \ at least some level of the TDM\n   structure to enhance robustness to packet\
    \ loss or other PSN\n   shortcomings.  Structure-aware TDM PWs are not required\
    \ to transport\n   structure overhead across the PSN; in particular, the FAS MAY\
    \ be\n   stripped by the PSN-bound IWF and MUST be regenerated by the TDM-\n \
    \  bound IWF.  However, structure overhead MAY be transported over the\n   PSN,\
    \ since it may contain information other than FAS.\n   In addition to guaranteeing\
    \ maintenance of TDM synchronization,\n   structure-aware TDM transport can also\
    \ distinguish individual\n   timeslots of channelized TDM, thus enabling sophisticated\
    \ packet loss\n   concealment at the channel level.  TDM signaling also becomes\n\
    \   visible, facilitating mechanisms that maintain or exploit this\n   information.\
    \  Finally, by taking advantage of TDM signaling and/or\n   voice activity detection,\
    \ structure-aware TDM transport makes\n   bandwidth conservation possible.\n \
    \  There are three conceptually distinct methods of ensuring TDM\n   structure\
    \ integrity -- namely, structure-locking, structure-\n   indication, and structure-reassembly.\
    \  Structure-locking requires\n   each packet to commence at the start of a TDM\
    \ structure, and to\n   contain an entire structure or integral multiples thereof.\n\
    \   Structure-indication allows packets to contain arbitrary fragments of\n  \
    \ basic structures, but employs pointers to indicate where each\n   structure\
    \ commences.  Structure-reassembly is only defined for\n   channelized TDM; the\
    \ PSN-bound IWF extracts and buffers individual\n   channels, and the original\
    \ structure is reassembled from the received\n   constituents by the TDM-bound\
    \ IWF.\n   All three methods of TDM structure preservation have their\n   advantages.\
    \  Structure-locking is described in [RFC5086], while the\n   present document\
    \ specifies both structure-indication (see\n   Section 5.1) and structure-reassembly\
    \ (see Section 5.2) approaches.\n   Structure-indication is used when channels\
    \ may be allocated\n   statically, and/or when it is required to interwork with\
    \ existing\n   circuit emulation systems (CES) based on AAL1.  Structure-reassembly\n\
    \   is used when dynamic allocation of channels is desirable and/or when\n   it\
    \ is required to interwork with existing loop emulation systems\n   (LES) based\
    \ on AAL2.\n   Operation, administration, and maintenance (OAM) mechanisms are\
    \ vital\n   for proper TDM deployments.  As aforementioned, structure-aware\n\
    \   mechanisms may refrain from transporting structure overhead across\n   the\
    \ PSN, disrupting OAM functionality.  It is beneficial to\n   distinguish between\
    \ two OAM cases, the \"trail terminated\" and the\n   \"trail extended\" scenarios.\
    \  A trail is defined to be the combination\n   of data and associated OAM information\
    \ transfer.  When the TDM trail\n   is terminated, OAM information such as error\
    \ monitoring and defect\n   indications are not transported over the PSN, and\
    \ the TDM networks\n   function as separate OAM domains.  In the trail extended\
    \ case, we\n   transfer the OAM information over the PSN (although not necessarily\n\
    \   in its native format).  OAM will be discussed further in Section 6.\n"
- title: 3.  TDMoIP Encapsulation
  contents:
  - "3.  TDMoIP Encapsulation\n   The overall format of TDMoIP packets is shown in\
    \ Figure 1.\n                            +---------------------+\n           \
    \                 |    PSN Headers      |\n                            +---------------------+\n\
    \                            | TDMoIP Control Word |\n                       \
    \     +---------------------+\n                            |   Adapted Payload\
    \   |\n                            +---------------------+\n                 \
    \  Figure 1.  Basic TDMoIP Packet Format\n   The PSN-specific headers are those\
    \ of UDP/IP, L2TPv3/IP, MPLS or\n   layer 2 Ethernet, and contain all information\
    \ necessary for\n   forwarding the packet from the PSN-bound IWF to the TDM-bound\
    \ one.\n   The PSN is assumed to be reliable enough and of sufficient bandwidth\n\
    \   to enable transport of the required TDM data.\n   A TDMoIP IWF may simultaneously\
    \ support multiple TDM PWs, and the\n   TDMoIP IWF MUST maintain context information\
    \ for each TDM PW.\n   Distinct PWs are differentiated based on PW labels, which\
    \ are carried\n   in the PSN-specific layers.  Since TDM is inherently bidirectional,\n\
    \   the association of two PWs in opposite directions is required.  The\n   PW\
    \ labels of the two directions MAY take different values.\n   In addition to the\
    \ aforementioned headers, an OPTIONAL 12-byte RTP\n   header may appear in order\
    \ to enable explicit transfer of timing\n   information.  This usage is a purely\
    \ formal reuse of the header\n   format of [RFC3550].  RTP mechanisms, such as\
    \ header extensions,\n   contributing source (CSRC) list, padding, RTP Control\
    \ Protocol\n   (RTCP), RTP header compression, Secure RTP (SRTP), etc., are not\n\
    \   applicable.\n   The RTP timestamp indicates the packet creation time in units\
    \ of a\n   common clock available to both communicating TDMoIP IWFs.  When no\n\
    \   common clock is available, or when the TDMoIP IWFs have sufficiently\n   accurate\
    \ local clocks or can derive sufficiently accurate timing\n   without explicit\
    \ timestamps, the RTP header SHOULD be omitted.\n   If RTP is used, the fixed\
    \ RTP header described in [RFC3550] MUST\n   immediately follow the control word\
    \ for all PSN types except UDP/IP,\n   for which it MUST precede the control word.\
    \  The version number MUST\n   be set to 2, the P (padding), X (header extension),\
    \ CC (CSRC count),\n   and M (marker) fields in the RTP header MUST be set to\
    \ zero, and the\n   payload type (PT) values MUST be allocated from the range\
    \ of dynamic\n   values.  The RTP sequence number MUST be identical to the sequence\n\
    \   number in the TDMoIP control word (see below).  The RTP timestamp\n   MUST\
    \ be generated in accordance with the rules established in\n   [RFC3550]; the\
    \ clock frequency MUST be an integer multiple of 8 kHz,\n   and MUST be chosen\
    \ to enable timing recovery that conforms with the\n   appropriate standards (see\
    \ Section 7.2).\n   The 32-bit control word MUST appear in every TDMoIP packet.\
    \  Its\n   format, in conformity with [RFC4385], is depicted in Figure 2.\n  \
    \      0                   1                   2                   3\n       \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  RES  |L|R| M |RES|  Length   |         Sequence Number       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \          Figure 2.  Structure of the TDMoIP Control Word\n   RES  (4 bits) The\
    \ first nibble of the control word MUST be set to\n      zero when the PSN is\
    \ MPLS, in order to ensure that the packet does\n      not alias an IP packet\
    \ when forwarding devices perform deep packet\n      inspection.  For PSNs other\
    \ than MPLS, the first nibble MAY be set\n      to zero; however, in earlier versions\
    \ of TDMoIP this field\n      contained a format identifier that was optionally\
    \ used to specify\n      the payload format.\n   L Local Failure  (1 bit) The\
    \ L flag is set when the IWF has detected\n      or has been informed of a TDM\
    \ physical layer fault impacting the\n      TDM data being forwarded.  In the\
    \ \"trail extended\" OAM scenario\n      the L flag MUST be set when the IWF detects\
    \ loss of signal, loss\n      of frame synchronization, or AIS.  When the L flag\
    \ is set the\n      contents of the packet may not be meaningful, and the payload\
    \ MAY\n      be suppressed in order to conserve bandwidth.  Once set, if the\n\
    \      TDM fault is rectified the L flag MUST be cleared.  Use of the L\n    \
    \  flag is further explained in Section 6.\n   R Remote Failure  (1 bit) The R\
    \ flag is set when the IWF has detected\n      or has been informed, that TDM\
    \ data is not being received from the\n      remote TDM network, indicating failure\
    \ of the reverse direction of\n      the bidirectional connection.  An IWF SHOULD\
    \ generate TDM Remote\n      Defect Indicator (RDI) upon receipt of an R flag\
    \ indication.  In\n      the \"trail extended\" OAM scenario the R flag MUST be\
    \ set when the\n      IWF detects RDI.  Use of the R flag is further explained\
    \ in\n      Section 6.\n   M Defect Modifier  (2 bits) Use of the M field is optional;\
    \ when\n      used, it supplements the meaning of the L flag.\n      When L is\
    \ cleared (indicating valid TDM data) the M field is used\n      as follows:\n\
    \       0 0  indicates no local defect modification.\n       0 1  reserved.\n\
    \       1 0  reserved.\n       1 1  reserved.\n      When L is set (invalid TDM\
    \ data) the M field is used as follows:\n       0 0  indicates a TDM defect that\
    \ should trigger conditioning\n            or AIS generation by the TDM-bound\
    \ IWF.\n       0 1  indicates idle TDM data that should not trigger any alarm.\n\
    \            If the payload has been suppressed then the preconfigured\n     \
    \       idle code should be generated at egress.\n       1 0  indicates corrupted\
    \ but potentially recoverable TDM data.\n       1 1  reserved.\n      Use of the\
    \ M field is further explained in Section 6.\n   RES  (2 bits) These bits are\
    \ reserved and MUST be set to zero.\n   Length  (6 bits) is used to indicate the\
    \ length of the TDMoIP packet\n      (control word and payload), in case padding\
    \ is employed to meet\n      minimum transmission unit requirements of the PSN.\
    \  It MUST be\n      used if the total packet length (including PSN, optional\
    \ RTP,\n      control word, and payload) is less than 64 bytes, and MUST be set\n\
    \      to zero when not used.\n   Sequence number  (16 bits) The TDMoIP sequence\
    \ number provides the\n      common PW sequencing function described in [RFC3985],\
    \ and enables\n      detection of lost and misordered packets.  The sequence number\n\
    \      space is a 16-bit, unsigned circular space; the initial value of\n    \
    \  the sequence number SHOULD be random (unpredictable) for security\n      purposes,\
    \ and its value is incremented modulo 2^16 separately for\n      each PW.  Pseudocode\
    \ for a sequence number processing algorithm\n      that could be used by a TDM-bound\
    \ IWF is provided in Appendix A.\n   In order to form the TDMoIP payload, the\
    \ PSN-bound IWF extracts bytes\n   from the continuous TDM stream, filling each\
    \ byte from its most\n   significant bit.  The extracted bytes are then adapted\
    \ using one of\n   two adaptation algorithms (see Section 5), and the resulting\
    \ adapted\n   payload is placed into the packet.\n"
- title: 4.  Encapsulation Details for Specific PSNs
  contents:
  - "4.  Encapsulation Details for Specific PSNs\n   TDMoIP PWs may exploit various\
    \ PSNs, including UDP/IP (both IPv4 and\n   IPv6), L2TPv3 over IP (with no intervening\
    \ UDP), MPLS, and layer-2\n   Ethernet.  In the following subsections, we depict\
    \ the packet format\n   for these cases.\n   For MPLS PSNs, the format is aligned\
    \ with those specified in [Y1413]\n   and [Y1414].  For UDP/IP PSNs, the format\
    \ is aligned with those\n   specified in [Y1453] and [Y1452].  For transport over\
    \ layer 2\n   Ethernet the format is aligned with [MEF8].\n"
- title: 4.1.  UDP/IP
  contents:
  - "4.1.  UDP/IP\n   ITU-T recommendation Y.1453 [Y1453] describes structure-agnostic\
    \ and\n   structure-aware mechanisms for transporting TDM over IP networks.\n\
    \   Similarly, ITU-T recommendation Y.1452 [Y1452] defines structure-\n   reassembly\
    \ mechanisms for this purpose.  Although the terminology\n   used here differs\
    \ slightly from that of the ITU, implementations of\n   TDMoIP for UDP/IP PSNs\
    \ as described herein will interoperate with\n   implementations designed to comply\
    \ with Y.1453 subclause 9.2.2 or\n   Y.1452 clause 10.\n   For UDP/IPv4, the headers\
    \ as described in [RFC768] and [RFC791] are\n   prefixed to the TDMoIP data. \
    \ The format is similar for UDP/IPv6,\n   except the IP header described in [RFC2460]\
    \ is used.  The TDMoIP\n   packet structure is depicted in Figure 3.\n       \
    \ 0                   1                   2                   3\n        0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | IPVER |  IHL  |    IP TOS     |          Total Length         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |         Identification        |Flags|      Fragment Offset    |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  Time to Live |    Protocol   |      IP Header Checksum       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                     Source IP Address                         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                  Destination IP Address                       |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \      Source Port Number       |    Destination Port Number    |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |           UDP Length          |         UDP Checksum          |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|RTV|P|X|\
    \  CC   |M|     PT      |      RTP Sequence Number      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|                            Timestamp                          |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|\
    \                         SSRC identifier                       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  RES  |L|R| M |RES|  Length   |         Sequence Number       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                                                               |\n      \
    \ |                        Adapted Payload                        |\n       |\
    \                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 3.  TDMoIP Packet Format for UDP/IP\n   The first five\
    \ rows are the IP header, the sixth and seventh rows are\n   the UDP header. \
    \ Rows 8 through 10 are the optional RTP header.  Row\n   11 is the TDMoIP control\
    \ word.\n   IPVER  (4 bits) is the IP version number, e.g., IPVER=4 for IPv4.\n\
    \   IHL  (4 bits) is the length in 32-bit words of the IP header, IHL=5.\n   IP\
    \ TOS  (8 bits) is the IP type of service.\n   Total Length  (16 bits) is the\
    \ length in bytes of header and data.\n   Identification  (16 bits) is the IP\
    \ fragmentation identification\n      field.\n   Flags  (3 bits) are the IP control\
    \ flags and MUST be set to 2 in\n      order to avoid fragmentation.\n   Fragment\
    \ Offset  (13 bits) indicates where in the datagram the\n      fragment belongs\
    \ and is not used for TDMoIP.\n   Time to Live  (8 bits) is the IP time to live\
    \ field.  Datagrams with\n      zero in this field are to be discarded.\n   Protocol\
    \  (8 bits) MUST be set to 0x11 (17) to signify UDP.\n   IP Header Checksum  (16\
    \ bits) is a checksum for the IP header.\n   Source IP Address  (32 bits) is the\
    \ IP address of the source.\n   Destination IP Address  (32 bits) is the IP address\
    \ of the\n      destination.\n   Source and Destination Port Numbers (16 bits\
    \ each)\n      Either the source UDP port or destination UDP port MAY be used\
    \ to\n      multiplex and demultiplex individual PWs between nodes.\n      Architecturally\
    \ [RFC3985], this makes the UDP port act as the PW\n      Label.  PW endpoints\
    \ MUST agree upon use of either the source UDP\n      or destination UDP port\
    \ as the PW Label.\n      UDP ports MUST be manually configured by both endpoints\
    \ of the PW.\n      The configured source or destination port (one or the other,\
    \ but\n      not both) together with both the source and destination IP\n    \
    \  addresses uniquely identify the PW.  When the source UDP port is\n      used\
    \ as the PW label, the destination UDP port number MUST be set\n      to the IANA\
    \ assigned value of 0x085E (2142).  All UDP port values\n      that function as\
    \ PW labels SHOULD be in the range of dynamically\n      allocated UDP port numbers\
    \ (0xC000 through 0xFFFF).\n      While many UDP-based protocols are able to traverse\
    \ middleboxes\n      without dire consequences, the use of UDP ports as PW labels\
    \ makes\n      middlebox traversal more difficult.  Hence, it is NOT RECOMMENDED\n\
    \      to use UDP-based PWs where port-translating middleboxes are\n      present\
    \ between PW endpoints.\n   UDP Length  (16 bits) is the length in bytes of UDP\
    \ header and data.\n   UDP Checksum  (16 bits) is the checksum of UDP/IP header\
    \ and data.\n      If not computed it MUST be set to zero.\n"
- title: 4.2.  MPLS
  contents:
  - "4.2.  MPLS\n   ITU-T recommendation Y.1413 [Y1413] describes structure-agnostic\
    \ and\n   structure-aware mechanisms for transporting TDM over MPLS networks.\n\
    \   Similarly, ITU-T recommendation Y.1414 [Y1413] defines structure-\n   reassembly\
    \ mechanisms for this purpose.  Although the terminology\n   used here differs\
    \ slightly from that of the ITU, implementations of\n   TDMoIP for MPLS PSNs as\
    \ described herein will interoperate with\n   implementations designed to comply\
    \ with Y.1413 subclause 9.2.2 or\n   Y.1414 clause 10.\n   The MPLS header as\
    \ described in [RFC3032] is prefixed to the control\n   word and TDM payload.\
    \  The packet structure is depicted in Figure 4.\n        0                  \
    \ 1                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |            Tunnel Label               | EXP |S|     TTL       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |              PW label                 | EXP |1|     TTL       |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  RES  |L|R| M |RES|  Length   |         Sequence Number       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|RTV|P|X|  CC   |M|     PT      |      RTP Sequence Number      |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|\
    \                            Timestamp                          |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|                         SSRC identifier                       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                                                               |\n      \
    \ |                        Adapted Payload                        |\n       |\
    \                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                 Figure 4.  TDMoIP Packet Format for MPLS\n   The first two rows\
    \ depicted above are the MPLS header; the third is\n   the TDMoIP control word.\
    \  Fields not previously described will now be\n   explained.\n   Tunnel Label\
    \  (20 bits) is the MPLS label that identifies the MPLS\n      LSP used to tunnel\
    \ the TDM packets through the MPLS network.  The\n      label can be assigned\
    \ either by manual provisioning or via an MPLS\n      control protocol.  While\
    \ transiting the MPLS network there may be\n      zero, one, or several tunnel\
    \ label rows.  For label stack usage\n      see [RFC3032].\n   EXP  (3 bits) experimental\
    \ field, may be used to carry Diffserv\n      classification for tunnel labels.\n\
    \   S  (1 bit) the stacking bit indicates MPLS stack bottom.  S=0 for all\n  \
    \    tunnel labels, and S=1 for the PW label.\n   TTL  (8 bits) MPLS Time to live.\n\
    \   PW Label  (20 bits) This label MUST be a valid MPLS label, and MAY be\n  \
    \    configured or signaled.\n"
- title: 4.3.  L2TPv3
  contents:
  - "4.3.  L2TPv3\n   The L2TPv3 header defined in [RFC3931] is prefixed to the TDMoIP\n\
    \   data.  The packet structure is depicted in Figure 5.\n        0          \
    \         1                   2                   3\n        0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       | IPVER |  IHL  |    IP TOS     |          Total Length         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |         Identification        |Flags|      Fragment Offset    |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  Time to Live |    Protocol   |      IP Header Checksum       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                     Source IP Address                         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                  Destination IP Address                       |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                     Session ID = PW label                     |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                      cookie 1 (optional)                      |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                      cookie 2 (optional)                      |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \  RES  |L|R| M |RES|  Length   |         Sequence Number       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|RTV|P|X|  CC   |M|     PT      |      RTP Sequence Number      |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|\
    \                            Timestamp                          |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|                         SSRC identifier                       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                                                               |\n      \
    \ |                        Adapted Payload                        |\n       |\
    \                                                               |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 5.  TDMoIP Packet Format for L2TPv3\n   Rows 6 through\
    \ 8 are the L2TPv3 header.  Fields not previously\n   described will now be explained.\n\
    \   Protocol  (8 bits) is the IP protocol field.  It must be set to 0x73\n   \
    \   (115), the user port number that has been assigned to L2TP by\n      IANA.\n\
    \   Session ID  (32 bits) is the locally significant L2TP session\n      identifier,\
    \ and contains the PW label.  The value 0 is reserved.\n   Cookie  (32 or 64 bits)\
    \ is an optional field that contains a randomly\n      selected value that can\
    \ be used to validate association of the\n      received frame with the expected\
    \ PW.\n"
- title: 4.4.  Ethernet
  contents:
  - "4.4.  Ethernet\n   Metro Ethernet Forum Implementation Agreement 8 [MEF8] describes\n\
    \   structure-agnostic and structure-aware mechanisms for transporting\n   TDM\
    \ over Ethernet networks.  Implementations of structure-indicated\n   TDMoIP as\
    \ described herein will interoperate with implementations\n   designed to comply\
    \ with MEF 8 Section 6.3.3.\n   The TDMoIP payload is encapsulated in an Ethernet\
    \ frame by prefixing\n   the Ethernet destination and source MAC addresses, optional\
    \ VLAN\n   header, and Ethertype, and suffixing the four-byte frame check\n  \
    \ sequence.  TDMoIP implementations MUST be able to receive both\n   industry\
    \ standard (DIX) Ethernet and IEEE 802.3 [IEEE802.3] frames\n   and SHOULD transmit\
    \ Ethernet frames.\n   Ethernet encapsulation introduces restrictions on both\
    \ minimum and\n   maximum packet size.  Whenever the entire TDMoIP packet is less\
    \ than\n   64 bytes, padding is introduced and the true length indicated by\n\
    \   using the Length field in the control word.  In order to avoid\n   fragmentation,\
    \ the TDMoIP packet MUST be restricted to the maximum\n   payload size.  For example,\
    \ the length of the Ethernet payload for a\n   UDP/IP encapsulation of AAL1 format\
    \ payload with 30 PDUs per packet\n   is 1472 bytes, which falls below the maximal\
    \ permitted payload size\n   of 1500 bytes.\n   Ethernet frames MAY be used for\
    \ TDMoIP transport without intervening\n   IP or MPLS layers, however, an MPLS-style\
    \ label MUST always be\n   present.  In this four-byte header S=1, and all other\
    \ non-label bits\n   are reserved (set to zero in the PSN-bound direction and\
    \ ignored in\n   the TDM-bound direction).  The Ethertype SHOULD be set to 0x88D8\n\
    \   (35032), the value allocated for this purpose by the IEEE, but MAY be\n  \
    \ set to 0x8847 (34887), the Ethertype of MPLS.  The overall frame\n   structure\
    \ is as follows:\n        0                   1                   2          \
    \         3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n                                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                                       |  Destination MAC Address\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                           Destination MAC Address (cont)              |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                     Source MAC Address\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Source MAC Address  (cont)  |   VLAN Ethertype (opt)        |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |VLP|C|      VLAN ID (opt)      |         Ethertype             |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \              PW label                 | RES |1|    RES        |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |  RES  |L|R| M |RES|  Length   |         Sequence Number       |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|RTV|P|X|\
    \  CC   |M|     PT      |      RTP Sequence Number      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    opt|                            Timestamp                          |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    opt|\
    \                         SSRC identifier                       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                                                               |\n  \
    \     |                        Adapted Payload                        |\n    \
    \   |                                                               |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                     Frame Check Sequence                      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               Figure 6.  TDMoIP Packet Format for Ethernet\n   Rows 1 through\
    \ 6 are the (DIX) Ethernet header; for 802.3 there may\n   be additional fields,\
    \ depending on the value of the length field, see\n   [IEEE802.3].  Fields not\
    \ previously described will now be explained.\n   Destination MAC Address  (48\
    \ bits) is the globally unique address of\n      a single station that is to receive\
    \ the packet.  The format is\n      defined in [IEEE802.3].\n   Source MAC Address\
    \  (48 bits) is the globally unique address of the\n      station that originated\
    \ the packet.  The format is defined in\n      [IEEE802.3].\n   VLAN Ethertype\
    \  (16 bits) 0x8100 in this position indicates that\n      optional VLAN tagging\
    \ specified in [IEEE802.1Q] is employed, and\n      that the next two bytes contain\
    \ the VLP, C, and VLAN ID fields.\n      VLAN tags may be stacked, in which case\
    \ the two-byte field\n      following the VLAN ID is once again a VLAN Ethertype.\n\
    \   VLP  (3 bits) is the VLAN priority, see [IEEE802.1Q].\n   C  (1 bit) the \"\
    canonical format indicator\" being set, indicates that\n      route descriptors\
    \ appear; see [IEEE802.1Q].\n   VLAN ID  (12 bits) the VLAN identifier uniquely\
    \ identifies the VLAN\n      to which the frame belongs.  If zero, only the VLP\
    \ information is\n      meaningful.  Values 1 and FFF are reserved.  The other\
    \ 4093 values\n      are valid VLAN identifiers.\n   Ethertype  (16 bits) is the\
    \ protocol identifier, as allocated by the\n      IEEE.  The Ethertype SHOULD\
    \ be set to 0x88D8 (35032), but MAY be\n      set to 0x8847 (34887).\n   PW Label\
    \  (20 bits) This label MUST be manually configured.  The\n      remainder of\
    \ this row is formatted to resemble an MPLS label.\n   Frame Check Sequence  (32\
    \ bits) is a Cyclic Redundancy Check (CRC)\n      error detection field, calculated\
    \ per [IEEE802.3].\n"
- title: 5.  TDMoIP Payload Types
  contents:
  - "5.  TDMoIP Payload Types\n   As discussed at the end of Section 3, TDMoIP transports\
    \ real-time\n   streams by first extracting bytes from the stream, and then adapting\n\
    \   these bytes.  TDMoIP offers two different adaptation algorithms, one\n   for\
    \ constant-rate real-time traffic, and one for variable-rate real-\n   time traffic.\n\
    \   For unstructured TDM, or structured but unchannelized TDM, or\n   structured\
    \ channelized TDM with all channels active all the time, a\n   constant-rate adaptation\
    \ is needed.  In such cases TDMoIP uses\n   structure-indication to emulate the\
    \ native TDM circuit, and the\n   adaptation is known as \"circuit emulation\"\
    .  However, for channelized\n   TDM wherein the individual channels (corresponding\
    \ to \"loops\" in\n   telephony terminology) are frequently inactive, bandwidth\
    \ may be\n   conserved by transporting only active channels.  This results in\n\
    \   variable-rate real-time traffic, for which TDMoIP uses structure-\n   reassembly\
    \ to emulate the individual loops, and the adaptation is\n   known as \"loop emulation\"\
    .\n   TDMoIP uses constant-rate AAL1 [AAL1,CES] for circuit emulation,\n   while\
    \ variable-rate AAL2 [AAL2] is employed for loop emulation.  The\n   AAL1 mode\
    \ MUST be used for structured transport of unchannelized data\n   and SHOULD be\
    \ used for circuits with relatively constant usage.  In\n   addition, AAL1 MUST\
    \ be used when the TDM-bound IWF is required to\n   maintain a high timing accuracy\
    \ (e.g., when its timing is further\n   distributed) and SHOULD be used when high\
    \ reliability is required.\n   AAL2 SHOULD be used for channelized TDM when bandwidth\
    \ needs to be\n   conserved, and MAY be used whenever usage of voice-carrying\
    \ channels\n   is expected to be highly variable.\n   Additionally, a third mode\
    \ is defined specifically for efficient\n   transport of High-Level Data Link\
    \ Control (HDLC)-based Common Channel\n   Signaling (CCS) carried in TDM channels.\n\
    \   The AAL family of protocols is a natural choice for TDM emulation.\n   Although\
    \ originally developed to adapt various types of application\n   data to the rigid\
    \ format of ATM, the mechanisms are general solutions\n   to the problem of transporting\
    \ constant or variable-rate real-time\n   streams over a packet network.\n   Since\
    \ the AAL mechanisms are extensively deployed within and on the\n   edge of the\
    \ public telephony system, they have been demonstrated to\n   reliably transfer\
    \ voice-grade channels, data and telephony signaling.\n   These mechanisms are\
    \ mature and well understood, and implementations\n   are readily available.\n\
    \   Finally, simplified service interworking with legacy networks is a\n   major\
    \ design goal of TDMoIP.  Re-use of AAL technologies simplifies\n   interworking\
    \ with existing AAL1- and AAL2-based networks.\n"
- title: 5.1.  AAL1 Format Payload
  contents:
  - "5.1.  AAL1 Format Payload\n   For the prevalent cases of unchannelized TDM, or\
    \ channelized TDM for\n   which the channel allocation is static, the payload\
    \ can be\n   efficiently encoded using constant-rate AAL1 adaptation.  The AAL1\n\
    \   format is described in [AAL1] and its use for circuit emulation over\n   ATM\
    \ in [CES].  We briefly review highlights of AAL1 technology in\n   Appendix B.\
    \  In this section we describe the use of AAL1 in the\n   context of TDMoIP.\n\
    \                        +-------------+----------------+\n                  \
    \      |control word |    AAL1 PDU    |\n                        +-------------+----------------+\n\
    \               Figure 7a.  Single AAL1 PDU per TDMoIP Packet\n             +-------------+----------------+\
    \   +----------------+\n             |control word |    AAL1 PDU    |---|    AAL1\
    \ PDU    |\n             +-------------+----------------+   +----------------+\n\
    \             Figure 7b.  Multiple AAL1 PDUs per TDMoIP Packet\n   In AAL1 mode\
    \ the TDMoIP payload consists of at least one, and perhaps\n   many, 48-byte \"\
    AAL1 PDUs\", see Figures 7a and 7b.  The number of PDUs\n   MUST be pre-configured\
    \ and MUST be chosen such that the overall\n   packet size does not exceed the\
    \ maximum allowed by the PSN (e.g., 30\n   for UDP/IP over Ethernet).  The precise\
    \ number of PDUs per packet is\n   typically chosen taking latency and bandwidth\
    \ constraints into\n   account.  Using a single PDU delivers minimal latency,\
    \ but incurs the\n   highest overhead.  All TDMoIP implementations MUST support\
    \ between 1\n   and 8 PDUs per packet for E1 and T1 circuits, and between 5 and\
    \ 15\n   PDUs per packet for E3 and T3 circuits.\n   AAL1 differentiates between\
    \ unstructured and structured data\n   transfer, which correspond to structure-agnostic\
    \ and structure-aware\n   transport.  For structure-agnostic transport, AAL1 provides\
    \ no\n   inherent advantage as compared to SAToP; however, there may be\n   scenarios\
    \ for which its use is desirable.  For example, when it is\n   necessary to interwork\
    \ with an existing AAL1 ATM circuit emulation\n   system, or when clock recovery\
    \ based on AAL1-specific mechanisms is\n   favored.\n   For structure-aware transport,\
    \ [CES] defines two modes, structured\n   and structured with Channel Associated\
    \ Signaling (CAS).  Structured\n   AAL1 maintains TDM frame synchronization by\
    \ embedding a pointer to\n   the beginning of the next frame in the AAL1 PDU header.\
    \  Similarly,\n   structured AAL1 with CAS maintains TDM frame and multiframe\n\
    \   synchronization by embedding a pointer to the beginning of the next\n   multiframe.\
    \  Furthermore, structured AAL1 with CAS contains a\n   substructure including\
    \ the CAS signaling bits.\n"
- title: 5.2.  AAL2 Format Payload
  contents:
  - "5.2.  AAL2 Format Payload\n   Although AAL1 may be configured to transport fractional\
    \ E1 or T1\n   circuits, the allocation of channels to be transported must be\
    \ static\n   due to the fact that AAL1 transports constant-rate bit-streams. \
    \ It\n   is often the case that not all the channels in a TDM circuit are\n  \
    \ simultaneously active (\"off-hook\"), and activity status may be\n   determined\
    \ by observation of the TDM signaling channel.  Moreover,\n   even during active\
    \ calls, about half the time is silence that can be\n   identified using voice\
    \ activity detection (VAD).  Using the variable-\n   rate AAL2 mode, we may dynamically\
    \ allocate channels to be\n   transported, thus conserving bandwidth.\n   The\
    \ AAL2 format is described in [AAL2] and its use for loop emulation\n   over ATM\
    \ is explained in [SSCS,LES].  We briefly review highlights of\n   AAL2 technology\
    \ in Appendix C.  In this section, we describe the use\n   of AAL2 in the context\
    \ of TDMoIP.\n             +-------------+----------------+   +----------------+\n\
    \             |control word |    AAL2 PDU    |---|    AAL2 PDU    |\n        \
    \     +-------------+----------------+   +----------------+\n         Figure 8.\
    \  Concatenation of AAL2 PDUs in a TDMoIP Packet\n   In AAL2 mode the TDMoIP payload\
    \ consists of one or more variable-\n   length \"AAL2 PDUs\", see Figure 8.  Each\
    \ AAL2 PDU contains 3 bytes of\n   overhead and between 1 and 64 bytes of payload.\
    \  A packet may be\n   constructed by inserting PDUs corresponding to all active\
    \ channels,\n   by appending PDUs ready at a certain time, or by any other means.\n\
    \   Hence, more than one PDU belonging to a single channel may appear in\n   a\
    \ packet.\n   [RFC3985] denotes as Native Service Processing (NSP) functions all\n\
    \   processing of the TDM data before its use as payload.  Since AAL2 is\n   inherently\
    \ variable rate, arbitrary NSP functions MAY be performed\n   before the channel\
    \ is placed in the AAL2 loop emulation payload.\n   These include testing for\
    \ on-hook/off-hook status, voice activity\n   detection, speech compression, fax/modem/tone\
    \ relay, etc.\n   All mechanisms described in [AAL2,SSCS,LES] may be used for\
    \ TDMoIP.\n   In particular, channel identifier (CID) encoding and use of PAD\n\
    \   octets according to [AAL2], encoding formats defined in [SSCS], and\n   transport\
    \ of CAS and CCS signaling as described in [LES] MAY all be\n   used in the PSN-bound\
    \ direction, and MUST be supported in the TDM-\n   bound direction.  The overlap\
    \ functionality and AAL-CU timer and\n   related functionalities may not be required,\
    \ and the STF (start\n   field) is NOT used.  Computation of error detection codes\
    \ -- namely,\n   the Header Error Check (HEC) in the AAL2 PDU header and the CRC\
    \ in\n   the CAS packet -- is superfluous if an appropriate error detection\n\
    \   mechanism is provided by the PSN.  In such cases, these fields MAY be\n  \
    \ set to zero.\n"
- title: 5.3.  HDLC Format Payload
  contents:
  - "5.3.  HDLC Format Payload\n   The motivation for handling HDLC in TDMoIP is to\
    \ efficiently\n   transport common channel signaling (CCS) such as SS7 [SS7] or\
    \ ISDN\n   PRI signaling [ISDN-PRI], embedded in the TDM stream.  This mechanism\n\
    \   is not intended for general HDLC payloads, and assumes that the HDLC\n   messages\
    \ are always shorter than the maximum packet size.\n   The HDLC mode should only\
    \ be used when the majority of the bandwidth\n   of the input HDLC stream is expected\
    \ to be occupied by idle flags.\n   Otherwise, the CCS channel should be treated\
    \ as an ordinary channel.\n   The HDLC format is intended to operate in port mode,\
    \ transparently\n   passing all HDLC data and control messages over a separate\
    \ PW.  The\n   encapsulation is compatible with that of [RFC4618], however the\n\
    \   sequence number generation and processing SHOULD be performed\n   according\
    \ to Section 3 above.\n   The PSN-bound IWF monitors flags until a frame is detected.\
    \  The\n   contents of the frame are collected and the Frame Check Sequence\n\
    \   (FCS) tested.  If the FCS is incorrect, the frame is discarded;\n   otherwise,\
    \ the frame is sent after initial or final flags and FCS\n   have been discarded\
    \ and zero removal has been performed.  When a\n   TDMoIP-HDLC frame is received,\
    \ its FCS is recalculated, and the\n   original HDLC frame reconstituted.\n"
- title: 6.  TDMoIP Defect Handling
  contents:
  - "6.  TDMoIP Defect Handling\n   Native TDM networks signify network faults by\
    \ carrying indications of\n   forward defects (AIS) and reverse defects (RDI)\
    \ in the TDM bit\n   stream.  Structure-agnostic TDM transport transparently carries\
    \ all\n   such indications; however, for structure-aware mechanisms where the\n\
    \   PSN-bound IWF may remove TDM structure overhead carrying defect\n   indications,\
    \ explicit signaling of TDM defect conditions is required.\n   We saw in Section\
    \ 3 that defects can be indicated by setting flags in\n   the control word.  This\
    \ insertion of defect reporting into the packet\n   rather than in a separate\
    \ stream mimics the behavior of native TDM\n   OAM mechanisms that carry such\
    \ indications as bit patterns embedded\n   in the TDM stream.  The flags are designed\
    \ to address the urgent\n   messaging, i.e., messages whose contents must not\
    \ be significantly\n   delayed with respect to the TDM data that they potentially\
    \ impact.\n   Mechanisms for slow OAM messaging are discussed in Appendix D.\n\
    \    +---+   +-----+   +------+   +-----+   +------+   +-----+   +---+\n    |TDM|->-|\
    \     |->-|TDMoIP|->-|     |->-|TDMoIP|->-|     |->-|TDM|\n    |   |   |TDM 1|\
    \   |      |   | PSN |   |      |   |TDM 2|   |   |\n    |ES1|-<-|     |-<-| IWF1\
    \ |-<-|     |-<-| IWF2 |-<-|     |-<-|ES2|\n    +---+   +-----+   +------+   +-----+\
    \   +------+   +-----+   +---+\n              Figure 9.  Typical TDMoIP Network\
    \ Configuration\n   The operation of TDMoIP defect handling is best understood\
    \ by\n   considering the downstream TDM flow from TDM end system 1 (ES1)\n   through\
    \ TDM network 1, through TDMoIP IWF 1 (IWF1), through the PSN,\n   through TDMoIP\
    \ IWF 2 (IWF2), through TDM network 2, towards TDM end\n   system 2 (ES2), as\
    \ depicted in the figure.  We wish not only to\n   detect defects in TDM network\
    \ 1, the PSN, and TDM network 2, but to\n   localize such defects in order to\
    \ raise alarms only in the\n   appropriate network.\n   In the \"trail terminated\"\
    \ OAM scenario, only user data is exchanged\n   between TDM network 1 and TDM\
    \ network 2.  The IWF functions as a TDM\n   trail termination function, and defects\
    \ detected in TDM network 1 are\n   not relayed to network 2, or vice versa.\n\
    \   In the \"trail extended\" OAM scenario, if there is a defect (e.g.,\n   loss\
    \ of signal or loss of frame synchronization) anywhere in TDM\n   network 1 before\
    \ the ultimate link, the following TDM node will\n   generate AIS downstream (towards\
    \ TDMoIP IWF1).  If a break occurs in\n   the ultimate link, the IWF itself will\
    \ detect the loss of signal.  In\n   either case, IWF1 having directly detected\
    \ lack of validity of the\n   TDM signal, or having been informed of an earlier\
    \ problem, raises the\n   local (\"L\") defect flag in the control word of the\
    \ packets it sends\n   across the PSN.  In this way the trail is extended to TDM\
    \ network 2\n   across the PSN.\n   Unlike forward defect indications that are\
    \ generated by all network\n   elements, reverse defect indications are only generated\
    \ by trail\n   termination functions.  In the trail terminated scenario, IWF1\
    \ serves\n   as a trail termination function for TDM network 1, and thus when\
    \ IWF1\n   directly detects lack of validity of the TDM signal, or is informed\n\
    \   of an earlier problem, it MAY generate TDM RDI towards TDM ES1.  In\n   the\
    \ trail extended scenario IWF1 is not a trail termination, and\n   hence MUST\
    \ NOT generate TDM RDI, but rather, as we have seen, sets\n   the L defect flag.\
    \  As we shall see, this will cause the AIS\n   indication to reach ES2, which\
    \ is the trail termination, and which\n   MAY generate TDM RDI.\n   When the L\
    \ flag is set there are four possibilities for treatment of\n   payload content.\
    \  The default is for IWF1 to fill the payload with\n   the appropriate amount\
    \ of AIS (usually all-ones) data.  If the AIS\n   has been generated before the\
    \ IWF this can be accomplished by copying\n   the received TDM data; if the penultimate\
    \ TDM link fails and the IWF\n   needs to generate the AIS itself.  Alternatively,\
    \ with structure-\n   aware transport of channelized TDM one SHOULD fill the payload\
    \ with\n   \"trunk conditioning\"; this involves placing a preconfigured \"out\
    \ of\n   service\" code in each individual channel (the \"out of service\" code\n\
    \   may differ between voice and data channels).  Trunk conditioning MUST\n  \
    \ be used when channels taken from several TDM PWs are combined by the\n   TDM-bound\
    \ IWF into a single TDM circuit.  The third possibility is to\n   suppress the\
    \ payload altogether.  Finally, if IWF1 believes that the\n   TDM defect is minor\
    \ or correctable (e.g., loss of multiframe\n   synchronization, or initial phases\
    \ of detection of incorrect frame\n   sync), it MAY place the TDM data it has\
    \ received into the payload\n   field, and specify in the defect modification\
    \ field (\"M\") that the\n   TDM data is corrupted, but potentially recoverable.\n\
    \   When IWF2 receives a local defect indication without M field\n   modification,\
    \ it forwards (or generates if the payload has been\n   suppressed) AIS or trunk\
    \ conditioning towards ES2 (the choice between\n   AIS and conditioning being\
    \ preconfigured).  Thus AIS has been\n   properly delivered to ES2 emulating the\
    \ TDM scenario from the TDM end\n   system's point of view.  In addition, IWF2\
    \ receiving the L flag\n   uniquely specifies that the defect was in TDM network\
    \ 1 and not in\n   TDM network 2, thus suppressing alarms in the correctly functioning\n\
    \   network.\n   If the M field indicates that the TDM has been marked as potentially\n\
    \   recoverable, then implementation specific algorithms (not herein\n   specified)\
    \ may optionally be utilized to minimize the impact of\n   transient defects on\
    \ the overall network performance.  If the M field\n   indicates that the TDM\
    \ is \"idle\", no alarms should be raised and IWF2\n   treats the payload contents\
    \ as regular TDM data.  If the payload has\n   been suppressed, trunk conditioning\
    \ and not AIS MUST be generated by\n   IWF2.\n   The second case is when the defect\
    \ is in TDM network 2.  Such defects\n   cause AIS generation towards ES2, which\
    \ may respond by sending TDM\n   RDI in the reverse direction.  In the trail terminated\
    \ scenario this\n   RDI is restricted to network 2.  In the trail extended scenario,\
    \ IWF2\n   upon observing this RDI inserted into valid TDM data, MUST indicate\n\
    \   this by setting the \"R\" flag in packets sent back across the PSN\n   towards\
    \ IWF1.  IWF1, upon receiving this indication, generates RDI\n   towards ES1,\
    \ thus emulating a single conventional TDM network.\n   The final possibility\
    \ is that of a unidirectional defect in the PSN.\n   In such a case, TDMoIP IWF1\
    \ sends packets toward IWF2, but these are\n   not received.  IWF2 MUST inform\
    \ the PSN's management system of this\n   problem, and furthermore generate TDM\
    \ AIS towards ES2.  ES2 may\n   respond with TDM RDI, and as before, in the trail\
    \ extended scenario,\n   when IWF2 detects RDI it MUST raise the \"R\" flag indication.\
    \  When\n   IWF1 receives packets with the \"R\" flag set it has been informed\
    \ of a\n   reverse defect, and MUST generate TDM RDI towards ES1.\n   In all cases,\
    \ if any of the above defects persist for a preconfigured\n   period (default\
    \ value of 2.5 seconds) a service failure is declared.\n   Since TDM PWs are inherently\
    \ bidirectional, a persistent defect in\n   either directional results in a bidirectional\
    \ service failure.  In\n   addition, if signaling is sent over a distinct PW as\
    \ per Section 5.3,\n   both PWs are considered to have failed when persistent\
    \ defects are\n   detected in either.\n   When failure is declared the PW MUST\
    \ be withdrawn, and both TDMoIP\n   IWFs commence sending AIS (and not trunk conditioning)\
    \ to their\n   respective TDM networks.  The IWFs then engage in connectivity\n\
    \   testing using native methods or TDMoIP OAM as described in Appendix D\n  \
    \ until connectivity is restored.\n"
- title: 7.  Implementation Issues
  contents:
  - "7.  Implementation Issues\n   General requirements for transport of TDM over\
    \ pseudo-wires are\n   detailed in [RFC4197].  In the following subsections we\
    \ review\n   additional aspects essential to successful TDMoIP implementation.\n"
- title: 7.1.  Jitter and Packet Loss
  contents:
  - "7.1.  Jitter and Packet Loss\n   In order to compensate for packet delay variation\
    \ that exists in any\n   PSN, a jitter buffer MUST be provided.  A jitter buffer\
    \ is a block of\n   memory into which the data from the PSN is written at its\
    \ variable\n   arrival rate, and data is read out and sent to the destination\
    \ TDM\n   equipment at a constant rate.  Use of a jitter buffer partially hides\n\
    \   the fact that a PSN has been traversed rather than a conventional\n   synchronous\
    \ TDM network, except for the additional latency.\n   Customary practice is to\
    \ operate with the jitter buffer approximately\n   half full, thus minimizing\
    \ the probability of its overflow or\n   underflow.  Hence, the additional delay\
    \ equals half the jitter buffer\n   size.  The length of the jitter buffer SHOULD\
    \ be configurable and MAY\n   be dynamic (i.e., grow and shrink in length according\
    \ to the\n   statistics of the Packet Delay Variation (PDV)).\n   In order to\
    \ handle (infrequent) packet loss and misordering, a packet\n   sequence integrity\
    \ mechanism MUST be provided.  This mechanism MUST\n   track the serial numbers\
    \ of arriving packets and MUST take\n   appropriate action when anomalies are\
    \ detected.  When lost packet(s)\n   are detected, the mechanism MUST output filler\
    \ data in order to\n   retain TDM timing.  Packets arriving in incorrect order\
    \ SHOULD be\n   reordered.  Lost packet processing SHOULD ensure that proper FAS\
    \ is\n   sent to the TDM network.  An example sequence number processing\n   algorithm\
    \ is provided in Appendix A.\n   While the insertion of arbitrary filler data\
    \ may be sufficient to\n   maintain the TDM timing, for telephony traffic it may\
    \ lead to audio\n   gaps or artifacts that result in choppy, annoying or even\n\
    \   unintelligible audio.  An implementation MAY blindly insert a\n   preconfigured\
    \ constant value in place of any lost samples, and this\n   value SHOULD be chosen\
    \ to minimize the perceptual effect.\n   Alternatively one MAY replay the previously\
    \ received packet.  When\n   computational resources are available, implementations\
    \ SHOULD conceal\n   the packet loss event by properly estimating missing sample\
    \ values in\n   such fashion as to minimize the perceptual error.\n"
- title: 7.2.  Timing Recovery
  contents:
  - "7.2.  Timing Recovery\n   TDM networks are inherently synchronous; somewhere\
    \ in the network\n   there will always be at least one extremely accurate primary\n\
    \   reference clock, with long-term accuracy of one part in 1E-11.  This\n   node\
    \ provides reference timing to secondary nodes with somewhat lower\n   accuracy,\
    \ and these in turn distribute timing information further.\n   This hierarchy\
    \ of time synchronization is essential for the proper\n   functioning of the network\
    \ as a whole; for details see [G823][G824].\n   Packets in PSNs reach their destination\
    \ with delay that has a random\n   component, known as packet delay variation\
    \ (PDV).  When emulating TDM\n   on a PSN, extracting data from the jitter buffer\
    \ at a constant rate\n   overcomes much of the high frequency component of this\
    \ randomness\n   (\"jitter\").  The rate at which we extract data from the jitter\
    \ buffer\n   is determined by the destination clock, and were this to be precisely\n\
    \   matched to the source clock proper timing would be maintained.\n   Unfortunately,\
    \ the source clock information is not disseminated\n   through a PSN, and the\
    \ destination clock frequency will only\n   nominally equal the source clock frequency,\
    \ leading to low frequency\n   (\"wander\") timing inaccuracies.\n   In broadest\
    \ terms, there are four methods of overcoming this\n   difficulty.  In the first\
    \ and second methods timing information is\n   provided by some means independent\
    \ of the PSN.  This timing may be\n   provided to the TDM end systems (method\
    \ 1) or to the IWFs (method 2).\n   In a third method, a common clock is assumed\
    \ available to both IWFs,\n   and the relationship between the TDM source clock\
    \ and this clock is\n   encoded in the packet.  This encoding may take the form\
    \ of RTP\n   timestamps or may utilize the synchronous residual timestamp (SRTS)\n\
    \   bits in the AAL1 overhead.  In the final method (adaptive clock\n   recovery)\
    \ the timing must be deduced solely based on the packet\n   arrival times.  Example\
    \ scenarios are detailed in [RFC4197] and in\n   [Y1413].\n   Adaptive clock recovery\
    \ utilizes only observable characteristics of\n   the packets arriving from the\
    \ PSN, such as the precise time of\n   arrival of the packet at the TDM-bound\
    \ IWF, or the fill-level of the\n   jitter buffer as a function of time.  Due\
    \ to the packet delay\n   variation in the PSN, filtering processes that combat\
    \ the statistical\n   nature of the observable characteristics must be employed.\
    \  Frequency\n   Locked Loops (FLL) and Phase Locked Loops (PLL) are well suited\
    \ for\n   this task.\n   Whatever timing recovery mechanism is employed, the output\
    \ of the\n   TDM-bound IWF MUST conform to the jitter and wander specifications\
    \ of\n   TDM traffic interfaces, as defined in [G823][G824].  For some\n   applications,\
    \ more stringent jitter and wander tolerances MAY be\n   imposed.\n"
- title: 7.3.  Congestion Control
  contents:
  - "7.3.  Congestion Control\n   As explained in [RFC3985], the underlying PSN may\
    \ be subject to\n   congestion.  Unless appropriate precautions are taken, undiminished\n\
    \   demand of bandwidth by TDMoIP can contribute to network congestion\n   that\
    \ may impact network control protocols.\n   The AAL1 mode of TDMoIP is an inelastic\
    \ constant bit-rate (CBR) flow\n   and cannot respond to congestion in a TCP-friendly\
    \ manner prescribed\n   by [RFC2914], although the percentage of total bandwidth\
    \ they consume\n   remains constant.  The AAL2 mode of TDMoIP is variable bit-rate\n\
    \   (VBR), and it is often possible to reduce the bandwidth consumed by\n   employing\
    \ mechanisms that are beyond the scope of this document.\n   Whenever possible,\
    \ TDMoIP SHOULD be carried across traffic-\n   engineered PSNs that provide either\
    \ bandwidth reservation and\n   admission control or forwarding prioritization\
    \ and boundary traffic\n   conditioning mechanisms.  IntServ-enabled domains supporting\n\
    \   Guaranteed Service (GS) [RFC2212] and Diffserv-enabled domains\n   [RFC2475]\
    \ supporting Expedited Forwarding (EF) [RFC3246] provide\n   examples of such\
    \ PSNs.  Such mechanisms will negate, to some degree,\n   the effect of TDMoIP\
    \ on neighboring streams.  In order to facilitate\n   boundary traffic conditioning\
    \ of TDMoIP traffic over IP PSNs, the\n   TDMoIP packets SHOULD NOT use the Diffserv\
    \ Code Point (DSCP) value\n   reserved for the Default Per-Hop Behavior (PHB)\
    \ [RFC2474].\n   When TDMoIP is run over a PSN providing best-effort service,\
    \ packet\n   loss SHOULD be monitored in order to detect congestion.  If\n   congestion\
    \ is detected and bandwidth reduction is possible, then such\n   reduction SHOULD\
    \ be enacted.  If bandwidth reduction is not possible,\n   then the TDMoIP PW\
    \ SHOULD shut down bi-directionally for some period\n   of time as described in\
    \ Section 6.5 of [RFC3985].\n   Note that:\n      1.  In AAL1 mode TDMoIP can\
    \ inherently provide packet loss\n      measurement since the expected rate of\
    \ packet arrival is fixed and\n      known.\n      2.  The results of the packet\
    \ loss measurement may not be a\n      reliable indication of presence or absence\
    \ of severe congestion if\n      the PSN provides enhanced delivery.  For example,\
    \ if TDMoIP\n      traffic takes precedence over other traffic, severe congestion\
    \ may\n      not significantly affect TDMoIP packet loss.\n      3.  The TDM services\
    \ emulated by TDMoIP have high availability\n      objectives (see [G826]) that\
    \ MUST be taken into account when\n      deciding on temporary shutdown.\n   This\
    \ specification does not define exact criteria for detecting\n   severe congestion\
    \ or specific methods for TDMoIP shutdown or\n   subsequent re-start.  However,\
    \ the following considerations may be\n   used as guidelines for implementing\
    \ the shutdown mechanism:\n      1.  If the TDMoIP PW has been set up using the\
    \ PWE3 control\n      protocol [RFC4447], the regular PW teardown procedures of\
    \ these\n      protocols SHOULD be used.\n      2.  If one of the TDMoIP IWFs\
    \ stops transmission of packets for a\n      sufficiently long period, its peer\
    \ (observing 100% packet loss)\n      will necessarily detect \"severe congestion\"\
    \ and also stop\n      transmission, thus achieving bi-directional PW shutdown.\n\
    \   TDMoIP does not provide mechanisms to ensure timely delivery or\n   provide\
    \ other quality-of-service guarantees; hence it is required\n   that the lower-layer\
    \ services do so.  Layer 2 priority can be\n   bestowed upon a TDMoIP stream by\
    \ using the VLAN priority field, MPLS\n   priority can be provided by using EXP\
    \ bits, and layer 3 priority is\n   controllable by using TOS.  Switches and routers\
    \ which the TDMoIP\n   stream must traverse should be configured to respect these\n\
    \   priorities.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   TDMoIP does not enhance or detract from the security\
    \ performance of\n   the underlying PSN, rather it relies upon the PSN's mechanisms\
    \ for\n   encryption, integrity, and authentication whenever required.  The\n\
    \   level of security provided may be less than that of a native TDM\n   service.\n\
    \   When the PSN is MPLS, PW-specific security mechanisms MAY be\n   required,\
    \ while for IP-based PSNs, IPsec [RFC4301] MAY be used.\n   TDMoIP using L2TPv3\
    \ is subject to the security considerations\n   discussed in Section 8 of [RFC3931].\n\
    \   TDMoIP shares susceptibility to a number of pseudowire-layer attacks\n   (see\
    \ [RFC3985]) and implementations SHOULD use whatever mechanisms\n   for confidentiality,\
    \ integrity, and authentication are developed for\n   general PWs.  These methods\
    \ are beyond the scope of this document.\n   Random initialization of sequence\
    \ numbers, in both the control word\n   and the optional RTP header, makes known-plaintext\
    \ attacks on\n   encrypted TDMoIP more difficult.  Encryption of PWs is beyond\
    \ the\n   scope of this document.\n   PW labels SHOULD be selected in an unpredictable\
    \ manner rather than\n   sequentially or otherwise in order to deter session hijacking.\
    \  When\n   using L2TPv3, a cryptographically random [RFC4086] Cookie SHOULD be\n\
    \   used to protect against off-path packet insertion attacks, and a 64-\n   bit\
    \ Cookie is RECOMMENDED for protection against brute-force, blind,\n   insertion\
    \ attacks.\n   Although TDMoIP MAY employ an RTP header when explicit transfer\
    \ of\n   timing information is required, SRTP (see [RFC3711]) mechanisms are\n\
    \   not applicable.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   For MPLS PSNs, PW Types for TDMoIP PWs are allocated\
    \ in [RFC4446].\n   For UDP/IP PSNs, when the source port is used as PW label,\
    \ the\n   destination port number MUST be set to 0x085E (2142), the user port\n\
    \   number assigned by IANA to TDMoIP.\n"
- title: 10.  Applicability Statement
  contents:
  - "10.  Applicability Statement\n   It must be recognized that the emulation provided\
    \ by TDMoIP may be\n   imperfect, and the service may differ from the native TDM\
    \ circuit in\n   the following ways.\n   The end-to-end delay of a TDM circuit\
    \ emulated using TDMoIP may\n   exceed that of a native TDM circuit.\n   When\
    \ using adaptive clock recovery, the timing performance of the\n   emulated TDM\
    \ circuit depends on characteristics of the PSN, and thus\n   may be inferior\
    \ to that of a native TDM circuit.\n   If the TDM structure overhead is not transported\
    \ over the PSN, then\n   non-FAS data in the overhead will be lost.\n   When packets\
    \ are lost in the PSN, TDMoIP mechanisms ensure that frame\n   synchronization\
    \ will be maintained.  When packet loss events are\n   properly concealed, the\
    \ effect on telephony channels will be\n   perceptually minimized.  However, the\
    \ bit error rate will be degraded\n   as compared to the native service.\n   Data\
    \ in inactive channels is not transported in AAL2 mode, and thus\n   this data\
    \ will differ from that of the native service.\n   Native TDM connections are\
    \ point-to-point, while PSNs are shared\n   infrastructures.  Hence, the level\
    \ of security of the emulated\n   service may be less than that of the native\
    \ service.\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   The authors would like to thank Hugo Silberman, Shimon\
    \ HaLevy, Tuvia\n   Segal, and Eitan Schwartz of RAD Data Communications for their\n\
    \   invaluable contributions to the technology described herein.\n"
- title: Appendix A.  Sequence Number Processing (Informative)
  contents:
  - "Appendix A.  Sequence Number Processing (Informative)\n   The sequence number\
    \ field in the control word enables detection of\n   lost and misordered packets.\
    \  Here we give pseudocode for an example\n   algorithm in order to clarify the\
    \ issues involved.  These issues are\n   implementation specific and no single\
    \ explanation can capture all the\n   possibilities.\n   In order to simplify\
    \ the description, modulo arithmetic is\n   consistently used in lieu of ad-hoc\
    \ treatment of the cyclicity.  All\n   differences between indexes are explicitly\
    \ converted to the range\n   [-2^15 ... +2^15 - 1] to ensure that simple checking\
    \ of the\n   difference's sign correctly predicts the packet arrival order.\n\
    \   Furthermore, we introduce the notion of a playout buffer in order to\n   unambiguously\
    \ define packet lateness.  When a packet arrives after\n   previously having been\
    \ assumed lost, the TDM-bound IWF may discard\n   it, and continue to treat it\
    \ as lost.  Alternatively, if the filler\n   data that had been inserted in its\
    \ place has not yet been played out,\n   the option remains to insert the true\
    \ data into the playout buffer.\n   Of course, the filler data may be generated\
    \ upon initial detection of\n   a missing packet or upon playout.  This description\
    \ is stated in\n   terms of a packet-oriented playout buffer rather than a TDM\
    \ byte\n   oriented one; however, this is not a true requirement for re-ordering\n\
    \   implementations since the latter could be used along with pointers to\n  \
    \ packet commencement points.\n   Having introduced the playout buffer we explicitly\
    \ treat over-run and\n   under-run of this buffer.  Over-run occurs when packets\
    \ arrive so\n   quickly that they can not be stored for playout.  This is usually\
    \ an\n   indication of gross timing inaccuracy or misconfiguration, and we can\n\
    \   do little but discard such early packets.  Under-run is usually a\n   sign\
    \ of network starvation, resulting from congestion or network\n   failure.\n \
    \  The external variables used by the pseudocode are:\n      received:  sequence\
    \ number of packet received\n      played:    sequence number of the packet being\
    \ played out (Note 1)\n      over-run:  is the playout buffer full? (Note 3)\n\
    \      under-run: has the playout buffer been exhausted? (Note 3)\n   The internal\
    \ variables used by the pseudocode are:\n      expected: sequence number we expect\
    \ to receive next\n      D: difference between expected and received (Note 2)\n\
    \      L: difference between sequence numbers of packet being played out\n   \
    \      and that just received (Notes 1 and 2)\n   In addition, the algorithm requires\
    \ one parameter:\n      R: maximum lateness for a packet to be recoverable (Note\
    \ 1).\n     Note 1: this is only required for the optional re-ordering\n     Note\
    \ 2: this number is always in the range -2^15 ... +2^15 - 1\n     Note 3: the\
    \ playout buffer is emptied by the TDM playout process,\n             which runs\
    \ asynchronously to the packet arrival processing,\n             and which is\
    \ not herein specified\n   Sequence Number Processing Algorithm\n   Upon receipt\
    \ of a packet\n     if received = expected\n       { treat packet as in-order\
    \ }\n       if not over-run then\n         place packet contents into playout\
    \ buffer\n       else\n         discard packet contents\n       set expected =\
    \ (received + 1) mod 2^16\n     else\n       calculate D = ( (expected-received)\
    \ mod 2^16 ) - 2^15\n       if D > 0 then\n         { packets expected, expected+1,\
    \ ... received-1 are lost }\n         while not over-run\n           place filler\
    \ (all-ones or interpolation) into playout buffer\n           if not over-run\
    \ then\n             place packet contents into playout buffer\n           else\n\
    \             discard packet contents\n           set expected = (received + 1)\
    \ mod 2^16\n       else  { late packet arrived }\n         declare \"received\"\
    \ to be a late packet\n         do NOT update \"expected\"\n         either\n\
    \           discard packet\n         or\n           if not under-run then\n  \
    \           calculate L = ( (played-received) mod 2^16 ) - 2^15\n            \
    \ if 0 < L <= R then\n               replace data from packet previously marked\
    \ as lost\n             else\n               discard packet\n   Note: by choosing\
    \ R=0 we always discard the late packet\n"
- title: Appendix B.  AAL1 Review (Informative)
  contents:
  - "Appendix B.  AAL1 Review (Informative)\n   The first byte of the 48-byte AAL1\
    \ PDU always contains an error-\n   protected 3-bit sequence number.\n       \
    \             1 2 3 4 5 6 7 8\n                   +-+-+-+-+-+-+-+-+-----------------------\n\
    \                   |C| SN  | CRC |P| 47 bytes of payload\n                  \
    \ +-+-+-+-+-+-+-+-+-----------------------\n   C  (1 bit) convergence sublayer\
    \ indication, its use here is limited\n      to indication of the existence of\
    \ a pointer (see below); C=0 means\n      no pointer, C=1 means a pointer is present.\n\
    \   SN (3 bits) The AAL1 sequence number increments from PDU to PDU.\n   CRC \
    \ (3 bits) is a 3-bit error cyclic redundancy code on C and SN.\n   P  (1 bit)\
    \ even byte parity.\n   As can be readily inferred, incrementing the sequence\
    \ number forms an\n   eight-PDU sequence number cycle, the importance of which\
    \ will become\n   clear shortly.\n   The structure of the remaining 47 bytes in\
    \ the AAL1 PDU depends on\n   the PDU type, of which there are three, corresponding\
    \ to the three\n   types of AAL1 circuit emulation service defined in [CES]. \
    \ These are\n   known as unstructured circuit emulation, structured circuit\n\
    \   emulation, and structured circuit emulation with CAS.\n   The simplest PDU\
    \ is the unstructured one, which is used for\n   transparent transfer of whole\
    \ circuits (T1,E1,T3,E3).  Although AAL1\n   provides no inherent advantage as\
    \ compared to SAToP for unstructured\n   transport, in certain cases AAL1 may\
    \ be required or desirable.  For\n   example, when it is necessary to interwork\
    \ with an existing AAL1-\n   based network, or when clock recovery based on AAL1-specific\n\
    \   mechanisms is favored.\n   For unstructured AAL1, the 47 bytes after the sequence\
    \ number byte\n   contain the full 376 bits from the TDM bit stream.  No frame\n\
    \   synchronization is supplied or implied, and framing is the sole\n   responsibility\
    \ of the end-user equipment.  Hence, the unstructured\n   mode can be used to\
    \ carry data, and for circuits with nonstandard\n   frame synchronization.  For\
    \ the T1 case the raw frame consists of 193\n   bits, and hence 1 183/193 T1 frames\
    \ fit into each AAL1 PDU.  The E1\n   frame consists of 256 bits, and so 1 15/32\
    \ E1 frames fit into each\n   PDU.\n   When the TDM circuit is channelized according\
    \ to [G704], and in\n   particular when it is desired to fractional E1 or T1,\
    \ it is\n   advantageous to use one of the structured AAL1 circuit emulation\n\
    \   services.  Structured AAL1 views the data not merely as a bit stream,\n  \
    \ but as a bundle of channels.  Furthermore, when CAS signaling is used\n   it\
    \ can be formatted so that it can be readily detected and\n   manipulated.\n \
    \  In the structured circuit emulation mode without CAS, N bytes from\n   the\
    \ N channels to be transported are first arranged in order of\n   channel number.\
    \  Thus if channels 2, 3, 5, 7 and 11 are to be\n   transported, the corresponding\
    \ five bytes are placed in the PDU\n   immediately after the sequence number byte.\
    \  This placement is\n   repeated until all 47 bytes in the PDU are filled.\n\
    \        byte     1  2  3  4  5  6  7  8  9 10 --- 41 42 43 44 45 46 47\n    \
    \    channel  2  3  5  7 11  2  3  5  7 11 ---  2  3  5  7 11  2  3\n   The next\
    \ PDU commences where the present PDU left off.\n        byte     1  2  3  4 \
    \ 5  6  7  8  9 10 --- 41 42 43 44 45 46 47\n        channel  5  7 11  2  3  5\
    \  7 11  2  3 ---  5  7 11  2  3  5  7\n   And so forth.  The set of channels\
    \ 2,3,5,7,11 is the basic structure\n   and the point where one structure ends\
    \ and the next commences is the\n   structure boundary.\n   The problem with this\
    \ arrangement is the lack of explicit indication\n   of the byte identities. \
    \ As can be seen in the above example, each\n   AAL1 PDU starts with a different\
    \ channel, so a single lost packet\n   will result in misidentifying channels\
    \ from that point onwards,\n   without possibility of recovery.  The solution\
    \ to this deficiency is\n   the periodic introduction of a pointer to the next\
    \ structure\n   boundary.  This pointer need not be used too frequently, as the\n\
    \   channel identifications are uniquely inferable unless packets are\n   lost.\n\
    \   The particular method used in AAL1 is to insert a pointer once every\n   sequence\
    \ number cycle of eight PDUs.  The pointer is seven bits and\n   protected by\
    \ an even parity MSB (most significant bit), and so\n   occupies a single byte.\
    \  Since seven bits are sufficient to represent\n   offsets larger than 47, we\
    \ can limit the placement of the pointer\n   byte to PDUs with even sequence numbers.\
    \  Unlike most AAL1 PDUs that\n   contain 47 TDM bytes, PDUs that contain a pointer\
    \ (P-format PDUs)\n   have the following format.\n            0              \
    \   1\n            1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-----------------------\n\
    \           |C| SN  | CRC |P|E|   pointer   | 46 bytes of payload\n          \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-----------------------\n   where\n   C  (1\
    \ bit) convergence sublayer indication, C=1 for P-format PDUs.\n   SN (3 bits)\
    \ is an even AAL1 sequence number.\n   CRC  (3 bits) is a 3-bit error cyclic redundancy\
    \ code on C and SN.\n   P  (1 bit) even byte parity LSB (least significant bit)\
    \ for sequence\n      number byte.\n   E  (1 bit) even byte parity MSB for pointer\
    \ byte.\n   pointer  (7 bits) pointer to next structure boundary.\n   Since P-format\
    \ PDUs have 46 bytes of payload and the next PDU has 47\n   bytes, viewed as a\
    \ single entity the pointer needs to indicate one of\n   93 bytes.  If P=0 it\
    \ is understood that the structure commences with\n   the following byte (i.e.,\
    \ the first byte in the payload belongs to\n   the lowest numbered channel). \
    \ P=93 means that the last byte of the\n   second PDU is the final byte of the\
    \ structure, and the following PDU\n   commences with a new structure.  The special\
    \ value P=127 indicates\n   that there is no structure boundary to be indicated\
    \ (needed when\n   extremely large structures are being transported).\n   The\
    \ P-format PDU is always placed at the first possible position in\n   the sequence\
    \ number cycle that a structure boundary occurs, and can\n   only occur once per\
    \ cycle.\n   The only difference between the structured circuit emulation format\n\
    \   and structured circuit emulation with CAS is the definition of the\n   structure.\
    \  Whereas in structured circuit emulation the structure is\n   composed of the\
    \ N channels, in structured circuit emulation with CAS\n   the structure encompasses\
    \ the superframe consisting of multiple\n   repetitions of the N channels and\
    \ then the CAS signaling bits.  The\n   CAS bits are tightly packed into bytes\
    \ and the final byte is padded\n   with zeros if required.\n   For example, for\
    \ E1 circuits the CAS signaling bits are updated once\n   per superframe of 16\
    \ frames.  Hence, the structure for N*64 derived\n   from an E1 with CAS signaling\
    \ consists of 16 repetitions of N bytes,\n   followed by N sets of the four ABCD\
    \ bits, and finally four zero bits\n   if N is odd.  For example, the structure\
    \ for channels 2,3 and 5 will\n   be as follows:\n       2 3 5 2 3 5 2 3 5 2 3\
    \ 5 2 3 5 2 3 5 2 3 5 2 3 5 2 3 5 2 3 5 2 3 5\n       2 3 5 2 3 5 2 3 5 2 3 5\
    \ 2 3 5 [ABCD2 ABCD3] [ABCD5 0000]\n   Similarly for T1 ESF circuits the superframe\
    \ is 24 frames, and the\n   structure consists of 24 repetitions of N bytes, followed\
    \ by the ABCD\n   bits as before.  For the T1 case the signaling bits will in\
    \ general\n   appear twice, in their regular (bit-robbed) positions and at the\
    \ end\n   of the structure.\n"
- title: Appendix C.  AAL2 Review (Informative)
  contents:
  - "Appendix C.  AAL2 Review (Informative)\n   The basic AAL2 PDU is:\n         |\
    \    Byte  1    |    Byte  2    |    Byte  3    |\n          0 1 2 3 4 5 6 7 0\
    \ 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+------------\n\
    \         |      CID      |     LI    |   UUI   |   HEC   |   PAYLOAD\n      \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+------------\n   CID  (8\
    \ bits) channel identifier is an identifier that must be unique\n      for the\
    \ PW.  The values 0-7 are reserved for special purposes,\n      (and if interworking\
    \ with VoDSL is required, so are values 8\n      through 15 as specified in [LES]),\
    \ thus leaving 248 (240) CIDs per\n      PW.  The mapping of CID values to channels\
    \ MAY be manually\n      configured manually or signaled.\n   LI (6 bits) length\
    \ indicator is one less than the length of the\n      payload in bytes.  Note\
    \ that the payload is limited to 64 bytes.\n   UUI  (5 bits) user-to-user indication\
    \ is the higher layer\n      (application) identifier and counter.  For voice\
    \ data, the UUI\n      will always be in the range 0-15, and SHOULD be incremented\
    \ modulo\n      16 each time a channel buffer is sent.  The receiver MAY monitor\n\
    \      this sequence.  UUI is set to 24 for CAS signaling packets.\n   HEC  (5\
    \ bits) the header error control\n   Payload - voice\n      A block of length\
    \ indicated by LI of voice samples are placed as-\n      is into the AAL2 packet.\n\
    \   Payload - CAS signaling\n      For CAS signaling the payload is formatted\
    \ as an AAL2 \"fully\n      protected\" (type 3) packet (see [AAL2]) in order\
    \ to ensure error\n      protection.  The signaling is sent with the same CID\
    \ as the\n      corresponding voice channel.  Signaling MUST be sent whenever\
    \ the\n      state of the ABCD bits changes, and SHOULD be sent with triple\n\
    \      redundancy, i.e., sent three times spaced 5 milliseconds apart.\n     \
    \ In addition, the entire set of the signaling bits SHOULD be sent\n      periodically\
    \ to ensure reliability.\n                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       |RED|       timestamp           |\n                  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                       |  RES  | ABCD\
    \  |    type   | CRC\n                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                           CRC (cont)  |\n                       +-+-+-+-+-+-+-+-+\n\
    \   RED  (2 bits) is the triple redundancy counter.  For the first packet\n  \
    \    it takes the value 00, for the second 01 and for the third 10.\n      RED=11\
    \ means non-redundant information, and is used when triple\n      redundancy is\
    \ not employed, and for periodic refresh messages.\n   Timestamp  (14 bits) The\
    \ timestamp is optional and in particular is\n      not needed if RTP is employed.\
    \  If not used, the timestamp MUST be\n      set to zero.  When used with triple\
    \ redundancy, it MUST be the\n      same for all three redundant transmissions.\n\
    \   RES  (4 bits) is reserved and MUST be set to zero.\n   ABCD  (4 bits) are\
    \ the CAS signaling bits.\n   type  (6 bits) for CAS signaling this is 000011.\n\
    \   CRC-10  (10 bits) is a 10-bit CRC error detection code.\n"
- title: Appendix D.  Performance Monitoring Mechanisms (Informative)
  contents:
  - "Appendix D.  Performance Monitoring Mechanisms (Informative)\n   PWs require\
    \ OAM mechanisms to monitor performance measures that\n   impact the emulated\
    \ service.  Performance measures, such as packet\n   loss ratio and packet delay\
    \ variation, may be used to set various\n   parameters and thresholds; for TDMoIP\
    \ PWs adaptive timing recovery\n   and packet loss concealment algorithms may\
    \ benefit from such\n   information.  In addition, OAM mechanisms may be used\
    \ to collect\n   statistics relating to the underlying PSN [RFC2330], and its\n\
    \   suitability for carrying TDM services.\n   TDMoIP IWFs may benefit from knowledge\
    \ of PSN performance metrics,\n   such as round trip time (RTT), packet delay\
    \ variation (PDV) and\n   packet loss ratio (PLR).  These measurements are conventionally\n\
    \   performed by a separate flow of packets designed for this purpose,\n   e.g.,\
    \ ICMP packets [RFC792] or MPLS LSP ping packets [RFC4379] with\n   multiple timestamps.\
    \  For AAL1 mode, TDMoIP sends packets across the\n   PSN at a constant rate,\
    \ and hence no additional OAM flow is required\n   for measurement of PDV or PLR.\
    \  However, separate OAM flows are\n   required for RTT measurement, for AAL2\
    \ mode PWs, for measurement of\n   parameters at setup, for monitoring of inactive\
    \ backup PWs, and for\n   low-rate monitoring of PSNs after PWs have been withdrawn\
    \ due to\n   service failures.\n   If the underlying PSN has appropriate maintenance\
    \ mechanisms that\n   provide connectivity verification, RTT, PDV, and PLR measurements\n\
    \   that correlate well with those of the PW, then these mechanisms\n   SHOULD\
    \ be used.  If such mechanisms are not available, either of two\n   similar OAM\
    \ signaling mechanisms may be used.  The first is internal\n   to the PW and based\
    \ on inband VCCV [RFC5085], and the second is\n   defined only for UDP/IP PSNs,\
    \ and is based on a separate PW.  The\n   latter is particularly efficient for\
    \ a large number of fate-sharing\n   TDM PWs.\n"
- title: D.1.  TDMoIP Connectivity Verification
  contents:
  - "D.1.  TDMoIP Connectivity Verification\n   In most conventional IP applications\
    \ a server sends some finite\n   amount of information over the network after\
    \ explicit request from a\n   client.  With TDMoIP PWs the PSN-bound IWF could\
    \ send a continuous\n   stream of packets towards the destination without knowing\
    \ whether the\n   TDM-bound IWF is ready to accept them.  For layer-2 networks,\
    \ this\n   may lead to flooding of the PSN with stray packets.\n   This problem\
    \ may occur when a TDMoIP IWF is first brought up, when\n   the TDM-bound IWF\
    \ fails or is disconnected from the PSN, or the PW is\n   broken.  After an aging\
    \ time the destination IWF becomes unknown, and\n   intermediate switches may\
    \ flood the network with the TDMoIP packets\n   in an attempt to find a new path.\n\
    \   The solution to this problem is to significantly reduce the number of\n  \
    \ TDMoIP packets transmitted per second when PW failure is detected,\n   and to\
    \ return to full rate only when the PW is available.  The\n   detection of failure\
    \ and restoration is made possible by the periodic\n   exchange of one-way connectivity-verification\
    \ messages.\n   Connectivity is tested by periodically sending OAM messages from\
    \ the\n   source IWF to the destination IWF, and having the destination reply\n\
    \   to each message.  The connectivity verification mechanism SHOULD be\n   used\
    \ during setup and configuration.  Without OAM signaling, one must\n   ensure\
    \ that the destination IWF is ready to receive packets before\n   starting to\
    \ send them.  Since TDMoIP IWFs operate full-duplex, both\n   would need to be\
    \ set up and properly configured simultaneously if\n   flooding is to be avoided.\
    \  When using connectivity verification, a\n   configured IWF may wait until it\
    \ detects its peer before transmitting\n   at full rate.  In addition, configuration\
    \ errors may be readily\n   discovered by using the service specific field of\
    \ the OAM PW packets.\n   In addition to one-way connectivity, OAM signaling mechanisms\
    \ can be\n   used to request and report on various PSN metrics, such as one-way\n\
    \   delay, round trip delay, packet delay variation, etc.  They may also\n   be\
    \ used for remote diagnostics, and for unsolicited reporting of\n   potential\
    \ problems (e.g., dying gasp messages).\n"
- title: D.2.  OAM Packet Format
  contents:
  - "D.2.  OAM Packet Format\n   When using inband performance monitoring, additional\
    \ packets are sent\n   using the same PW label.  These packets are identified\
    \ by having\n   their first nibble equal to 0001, and must be separated from TDM\
    \ data\n   packets before further processing of the control word.\n   When using\
    \ a separate OAM PW, all OAM messages MUST use the PW label\n   preconfigured\
    \ to indicate OAM.  All PSN layer parameters MUST remain\n   those of the PW being\
    \ monitored.\n   The format of an inband OAM PW message packet for UDP/IP PSNs\
    \ is\n   based on [RFC2679].  The PSN-specific layers are identical to those\n\
    \   defined in Section 4.1 with the PW label set to the value\n   preconfigured\
    \ or assigned for PW OAM.\n        0                   1                   2 \
    \                  3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |         PSN-specific layers  (with preconfigured PW label)    |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |0 0 0 0|L|R| M |RES| Length    |     OAM Sequence Number       |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \ OAM Msg Type  | OAM Msg Code  | Service specific information  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |       Forward PW label        |      Reverse PW label         |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |                   Source Transmit Timestamp                   |\n      \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                 Destination Receive Timestamp                 |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |                Destination Transmit Timestamp                 |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   L,\
    \ R, and M  are identical to those of the PW being tested.\n   Length  is the\
    \ length in bytes of the OAM message packet.\n   OAM Sequence Number  (16 bits)\
    \ is used to uniquely identify the\n      message.  Its value is unrelated to\
    \ the sequence number of the\n      TDMoIP data packets for the PW in question.\
    \  It is incremented in\n      query messages, and replicated without change in\
    \ replies.\n   OAM Msg Type  (8 bits) indicates the function of the message. \
    \ At\n      present the following are defined:\n             0 for one-way connectivity\
    \ query message\n             8 for one-way connectivity reply message.\n   OAM\
    \ Msg Code  (8 bits) is used to carry information related to the\n      message,\
    \ and its interpretation depends on the message type.  For\n      type 0 (connectivity\
    \ query) messages the following codes are\n      defined:\n             0 validate\
    \ connection.\n             1 do not validate connection\n   for type 8 (connectivity\
    \ reply) messages the available codes are:\n             0 acknowledge valid query\n\
    \             1 invalid query (configuration mismatch).\n   Service specific information\
    \  (16 bits) is a field that can be used\n      to exchange configuration information\
    \ between IWFs.  If it is not\n      used, this field MUST contain zero.  Its\
    \ interpretation depends on\n      the payload type.  At present, the following\
    \ is defined for AAL1\n      payloads.\n                        0            \
    \       1\n                        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n         \
    \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                       | Number\
    \ of TSs | Number of SFs |\n                       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Number of TSs  (8 bits) is the number of channels being transported,\n   \
    \   e.g., 24 for full T1.\n   Number of SFs  (8 bits) is the number of 48-byte\
    \ AAL1 PDUs per\n      packet, e.g., 8 when packing 8 PDUs per packet.\n   Forward\
    \ PW label  (16 bits) is the PW label used for TDMoIP traffic\n      from the\
    \ source to destination IWF.\n   Reverse PW label  (16 bits) is the PW label used\
    \ for TDMoIP traffic\n      from the destination to source IWF.\n   Source Transmit\
    \ Timestamp  (32 bits) represents the time the PSN-\n      bound IWF transmitted\
    \ the query message.  This field and the\n      following ones only appear if\
    \ delay is being measured.  All time\n      units are derived from a clock of\
    \ preconfigured frequency, the\n      default being 100 microseconds.\n   Destination\
    \ Receive Timestamp  (32 bits) represents the time the\n      destination IWF\
    \ received the query message.\n   Destination Transmit Timestamp  (32 bits) represents\
    \ the time the\n      destination IWF transmitted the reply message.\n"
- title: Appendix E.  Capabilities, Configuration and Statistics (Informative)
  contents:
  - "Appendix E.  Capabilities, Configuration and Statistics (Informative)\n   Every\
    \ TDMoIP IWF will support some number of physical TDM\n   connections, certain\
    \ types of PSN, and some subset of the modes\n   defined above.  The following\
    \ capabilities SHOULD be able to be\n   queried by the management system:\n  \
    \    AAL1 capable\n      AAL2 capable (and AAL2 parameters, e.g., support for\
    \ VAD and\n      compression)\n      HDLC capable\n      Supported PSN types (UDP/IPv4,\
    \ UDP/IPv6, L2TPv3/IPv4, L2TPv3/IPv6,\n      MPLS, Ethernet)\n      OAM support\
    \ (none, separate PW, VCCV) and capabilities (CV, delay\n      measurement, etc.)\n\
    \      maximum packet size supported.\n   For every TDM PW the following parameters\
    \ MUST be provisioned or\n   signaled:\n      PW label (for UDP and Ethernet the\
    \ label MUST be manually\n      configured)\n      TDM type (E1, T1, E3, T3, fractional\
    \ E1, fractional T1)\n         for fractional links: number of timeslots\n   \
    \   TDMoIP mode (AAL1, AAL2, HDLC)\n      for AAL1 mode:\n         AAL1 type (unstructured,\
    \ structured, structured with CAS)\n         number of AAL1 PDUs per packet\n\
    \      for AAL2 mode:\n         CID mapping\n         creation time of full minicell\
    \ (units of 125 microsecond)\n      size of jitter buffer (in 32-bit words)\n\
    \      clock recovery method (local, loop-back timing, adaptive, common\n    \
    \  clock)\n      use of RTP (if used: frequency of common clock, PT and SSRC\n\
    \      values).\n   During operation, the following statistics and impairment\
    \ indications\n   SHOULD be collected for each TDM PW, and can be queried by the\n\
    \   management system.\n      average round-trip delay\n      packet delay variation\
    \ (maximum delay - minimum delay)\n      number of potentially lost packets\n\
    \      indication of misordered packets (successfully reordered or\n      dropped)\n\
    \      for AAL1 mode PWs:\n         indication of malformed PDUs (incorrect CRC,\
    \ bad C, P or E)\n         indication of cells with pointer mismatch\n       \
    \  number of seconds with jitter buffer over-run events\n         number of seconds\
    \ with jitter buffer under-run events\n      for AAL2 mode PWs:\n         number\
    \ of malformed minicells (incorrect HEC)\n         indication of misordered minicells\
    \ (unexpected UUI)\n         indication of stray minicells (CID unknown, illegal\
    \ UUI)\n         indication of mis-sized minicells (unexpected LI)\n         for\
    \ each CID: number of seconds with jitter buffer over-run\n         events\n \
    \     for HDLC mode PWs:\n         number of discarded frames from TDM (e.g.,\
    \ CRC error, illegal\n         packet size)\n         number of seconds with jitter\
    \ buffer over-run events.\n   During operation, the following statistics MAY be\
    \ collected for each\n   TDM PW.\n      number of packets sent to PSN\n      number\
    \ of packets received from PSN\n      number of seconds during which packets were\
    \ received with L flag\n      set\n      number of seconds during which packets\
    \ were received with R flag\n      set.\n"
- title: References
  contents:
  - 'References

    '
- title: Normative References
  contents:
  - "Normative References\n   [AAL1]        ITU-T Recommendation I.363.1 (08/96) -\
    \ B-ISDN ATM\n                 Adaptation Layer (AAL) specification: Type 1\n\
    \   [AAL2]        ITU-T Recommendation I.363.2 (11/00) - B-ISDN ATM\n        \
    \         Adaptation Layer (AAL) specification: Type 2\n   [CES]         ATM forum\
    \ specification atm-vtoa-0078 (CES 2.0) Circuit\n                 Emulation Service\
    \ Interoperability Specification Ver.\n                 2.0\n   [G704]       \
    \ ITU-T Recommendation G.704 (10/98) - Synchronous frame\n                 structures\
    \ used at 1544, 6312, 2048, 8448 and 44736\n                 kbit/s hierarchical\
    \ levels\n   [G751]        ITU-T Recommendation G.751 (11/88) - Digital multiplex\n\
    \                 equipments operating at the third order bit rate of\n      \
    \           34368 kbit/s and the fourth order bit rate of 139264\n           \
    \      kbit/s and using positive justification\n   [G823]        ITU-T Recommendation\
    \ G.823 (03/00) - The control of\n                 jitter and wander within digital\
    \ networks which are\n                 based on the 2048 Kbit/s hierarchy\n  \
    \ [G824]        ITU-T Recommendation G.824 (03/00) - The control of\n        \
    \         jitter and wander within digital networks which are\n              \
    \   based on the 1544 Kbit/s hierarchy\n   [G826]        ITU-T Recommendation\
    \ G.826 (12/02) - End-to-end error\n                 performance parameters and\
    \ objectives for\n                 international, constant bit-rate digital paths\
    \ and\n                 connections\n   [IEEE802.1Q]  IEEE 802.1Q, IEEE Standards\
    \ for Local and Metropolitan\n                 Area Networks -- Virtual Bridged\
    \ Local Area Networks\n                 (2003)\n   [IEEE802.3]   IEEE 802.3, IEEE\
    \ Standard Local and Metropolitan Area\n                 Networks - Carrier Sense\
    \ Multiple Access with Collision\n                 Detection (CSMA/CD) Access\
    \ Method and Physical Layer\n                 Specifications (2002)\n   [LES]\
    \         ATM forum specification atm-vmoa-0145 (LES) Voice and\n            \
    \     Multimedia over ATM - Loop Emulation Service Using AAL2\n   [MEF8]     \
    \   Metro Ethernet Forum, \"Implementation Agreement for the\n               \
    \  Emulation of PDH Circuits over Metro Ethernet\n                 Networks\"\
    , October 2004.\n   [RFC768]      Postel, J., \"User Datagram Protocol (UDP)\"\
    , STD 6, RFC\n                 768, August 1980.\n   [RFC791]      Postel, J.,\
    \ \"Internet Protocol (IP)\", STD 5, RFC 791,\n                 September 1981.\n\
    \   [RFC2119]     Bradner, S., \"Key Words in RFCs to Indicate Requirement\n \
    \                Levels\", RFC 2119, March 1997.\n   [RFC3032]     Rosen, E.,\
    \ Tappan, D., Fedorkow, G., Rekhter, Y.,\n                 Farinacci, D., Li,\
    \ T., and A. Conta, \"MPLS Label Stack\n                 Encoding\", RFC 3032,\
    \ January 2001.\n   [RFC3931]     Lau, J., Townsley, M., Goyret, I., \"Layer Two\
    \ Tunneling\n                 Protocol - Version 3 (L2TPv3)\", RFC 3931, March\
    \ 2005.\n   [RFC3550]     Schulzrinne, H., Casner, S., Frederick, R., and\n  \
    \               Jacobson, V., \"RTP: A Transport Protocol for Real-Time\n    \
    \             Applications\", STD 64, RFC 3550, July 2003.\n   [RFC4446]     Martini,\
    \ L., \"IANA Allocations for Pseudowire Edge to\n                 Edge Emulation\
    \ (PWE3)\", BCP 116, RFC 4446, April 2006.\n   [RFC4447]     Martini, L., Rosen,\
    \ E., El-Aawar, N., Smith, T., and G.\n                 Heron, \"Pseudowire Setup\
    \ and Maintenance Using the\n                 Label Distribution Protocol (LDP)\"\
    , RFC 4447, April\n                 2006.\n   [RFC4553]     Vainshtein A., and\
    \ Stein YJ., \"Structure-Agnostic TDM\n                 over Packet (SAToP)\"\
    , RFC 4553, June 2006.\n   [RFC4618]     Martini L., Rosen E., Heron G., and Malis\
    \ A.,\n                 \"Encapsulation Methods for Transport of PPP/High-Level\n\
    \                 Data Link Control (HDLC) over MPLS Networks\", RFC 4618,\n \
    \                September 2006.\n   [RFC5085]     Nadeau, T., Ed., and C. Pignataro,\
    \ Ed., \"Pseudowire\n                 Virtual Circuit Connectivity Verification:\
    \ A Control\n                 Channel for Pseudowires\", RFC 5085, December 2007.\n\
    \   [SSCS]        ITU-T Recommendation I.366.2 (11/00) - AAL type 2\n        \
    \         service specific convergence sublayer for narrow-band\n            \
    \     services.\n   [Y1413]       ITU-T Recommendation Y.1413 (03/04) - TDM-MPLS\
    \ network\n                 interworking - User plane interworking\n   [Y1414]\
    \       ITU-T Recommendation Y.1414 (07/04) - Voice services -\n             \
    \    MPLS network interworking.\n   [Y1452]       ITU-T Recommendation Y.1452\
    \ (03/06) - Voice trunking\n                 over IP networks.\n   [Y1453]   \
    \    ITU-T Recommendation Y.1453 (03/06) - TDM-IP\n                 interworking\
    \ - User plane interworking.\n"
- title: Informative References
  contents:
  - "Informative References\n   [ISDN-PRI]    ITU-T Recommendation Q.931 (05/98) -\
    \ ISDN user-network\n                 interface layer 3 specification for basic\
    \ call control.\n   [RFC792]      Postel J., \"Internet Control Message Protocol\"\
    , STD 5,\n                 RFC 792, September 1981.\n   [RFC2212]     Shenker,\
    \ S., Partridge, C., and R. Guerin,\n                 \"Specification of Guaranteed\
    \ Quality of Service\", RFC\n                 2212, September 1997.\n   [RFC2330]\
    \     Paxson, V., Almes, G., Mahdavi, J., Mathis M.,\n                 \"Framework\
    \ for IP Performance Metrics\", RFC 2330, May\n                 1998.\n   [RFC2460]\
    \     Deering, S. and R. Hinden, \"Internet Protocol, Version\n              \
    \   6 (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2474]     Nichols,\
    \ K., Blake, S., Baker, F., and D. Black,\n                 \"Definition of the\
    \ Differentiated Services Field (DS\n                 Field) in the IPv4 and IPv6\
    \ Headers\", RFC 2474,\n                 December 1998.\n   [RFC2475]     Blake,\
    \ S., Black, D., Carlson, M., Davies, E., Wang,\n                 Z., and W. Weiss,\
    \ \"An Architecture for Differentiated\n                 Service\", RFC 2475,\
    \ December 1998.\n   [RFC2679]     Almes, G., Kalidindi, S., and M. Zekauskas,\
    \ \"A One-way\n                 Delay Metric for IPPM\", RFC 2679, September 1999.\n\
    \   [RFC2914]     Floyd, S., \"Congestion Control Principles\", BCP 41, RFC\n\
    \                 2914, September 2000.\n   [RFC3246]     Davie, B., Charny, A.,\
    \ Bennet, J.C., Benson, K., Le\n                 Boudec, J., Courtney, W., Davari,\
    \ S., Firoiu, V., and\n                 D. Stiliadis, \"An Expedited Forwarding\
    \ PHB (Per-Hop\n                 Behavior)\", RFC 3246, March 2002.\n   [RFC3711]\
    \     Baugher, M., McGrew, D., Naslund, M., Carrara, E., and\n               \
    \  K. Norrman, \"The Secure Real-time Transport Protocol\n                 (SRTP)\"\
    , RFC 3711, March 2004.\n   [RFC3985]     Bryant, S. and P. Pate, \"Pseudo Wire\
    \ Emulation Edge-\n                 to-Edge (PWE3) Architecture\", RFC 3985, March\
    \ 2005.\n   [RFC4086]     Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n \
    \                \"Randomness Requirements for Security\", BCP 106, RFC\n    \
    \             4086, June 2005.\n   [RFC4197]     Riegel, M., \"Requirements for\
    \ Edge-to-Edge Emulation of\n                 Time Division Multiplexed (TDM)\
    \ Circuits over Packet\n                 Switching Networks\", RFC 4197, October\
    \ 2005.\n   [RFC4301]     Kent, S. and K. Seo, \"Security Architecture for the\n\
    \                 Internet Protocol\", RFC 4301, December 2005.\n   [RFC4379]\
    \     Kompella, K. and Swallow, G., \"Detecting Multi-Protocol\n             \
    \    Label Switched (MPLS) Data Plane Failures\", RFC 4379,\n                \
    \ February 2006.\n   [RFC4385]     Bryant, S., Swallow, G., Martini, L., and D.\
    \ McPherson,\n                 \"Pseudowire Emulation Edge-to-Edge (PWE3) Control\
    \ Word\n                 for Use over an MPLS PSN\", RFC 4385, February 2006.\n\
    \   [RFC5086]     Vainshtein, A., Ed., Sasson, I., Metz, E., Frost, T.,\n    \
    \             and P. Pate, \"Structure-Aware Time Division Multiplexed\n     \
    \            (TDM) Circuit Emulation Service over Packet Switched\n          \
    \       Network (CESoPSN)\", RFC 5086, December 2007.\n   [SS7]         ITU-T\
    \ Recommendation Q.700 (03/93) - Introduction to\n                 CCITT Signalling\
    \ System No. 7.\n   [TDM-CONTROL] Vainshtein, A. and Y(J) Stein, \"Control Protocol\n\
    \                 Extensions for Setup of TDM Pseudowires in MPLS\n          \
    \       Networks\", Work in Progress, November 2007.\n   [TRAU]        GSM 08.60\
    \ (10/01) - Digital cellular telecommunications\n                 system (Phase\
    \ 2+); Inband control of remote transcoders\n                 and rate adaptors\
    \ for Enhanced Full Rate (EFR) and full\n                 rate traffic channels.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yaakov (Jonathan) Stein\n   RAD Data Communications\n\
    \   24 Raoul Wallenberg St., Bldg C\n   Tel Aviv  69719\n   ISRAEL\n   Phone:\
    \ +972 3 645-5389\n   EMail: yaakov_s@rad.com\n   Ronen Shashoua\n   RAD Data\
    \ Communications\n   24 Raoul Wallenberg St., Bldg C\n   Tel Aviv  69719\n   ISRAEL\n\
    \   Phone: +972 3 645-5447\n   EMail: ronen_s@rad.com\n   Ron Insler\n   RAD Data\
    \ Communications\n   24 Raoul Wallenberg St., Bldg C\n   Tel Aviv  69719\n   ISRAEL\n\
    \   Phone: +972 3 645-5445\n   EMail: ron_i@rad.com\n   Motty (Mordechai) Anavi\n\
    \   RAD Data Communications\n   900 Corporate Drive\n   Mahwah, NJ  07430\n  \
    \ USA\n   Phone: +1 201 529-1100 Ext. 213\n   EMail: motty@radusa.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
