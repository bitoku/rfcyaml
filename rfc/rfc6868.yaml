- contents:
  - '            Parameter Value Encoding in iCalendar and vCard

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This specification updates the data formats for iCalendar (RFC 5545)\n
    \  and vCard (RFC 6350) to allow parameter values to include certain\n   characters
    forbidden by the existing specifications.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6868.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions Used in This Document ...............................2\n   3.
    Parameter Value Encoding Scheme .................................3\n      3.1.
    iCalendar Example ..........................................4\n      3.2. vCard
    Example ..............................................4\n   4. Security Considerations
    .........................................4\n   5. Acknowledgments .................................................4\n
    \  6. Normative References ............................................5\n   Appendix
    A. Choice of Quoting Mechanism ............................6\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The iCalendar [RFC5545] specification defines a standard
    way to\n   describe calendar data.  The vCard [RFC6350] specification defines
    a\n   standard way to describe contact data.  Both of these use a similar\n   text-based
    data format.  Each iCalendar and vCard data object can\n   include \"properties\"
    that have \"parameters\" and a \"value\".  The value\n   of a \"parameter\" is
    typically a token or URI value, but a \"generic\"\n   text value is also allowed.
    \ However, the syntax rules for both\n   iCalendar and vCard prevent the use of
    a double-quote character or\n   control characters in such values, though double-quote
    characters and\n   some subset of control characters are allowed in the actual
    property\n   values.\n   As more and more extensions are being developed for these
    data\n   formats, there is a need to allow at least double-quotes and line\n   feeds
    to be included in parameter values.  The \\-escaping mechanism\n   used for property
    text values is not defined for use with parameter\n   values and cannot be easily
    used in a backwards-compatible manner.\n   This specification defines a new character
    escaping mechanism,\n   compatible with existing parsers and chosen to minimize
    any impact on\n   existing data.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Parameter Value Encoding Scheme\n   This specification defines the ^ character
    (U+005E -- Circumflex\n   Accent) as an escape character in parameter values whose
    value type\n   is defined using the \"param-value\" syntax element (Section 3.1
    of\n   iCalendar [RFC5545] and Section 3.3 of vCard [RFC6350]).  The\n   ^-escaping
    mechanism can be used when the value is either unquoted or\n   quoted (i.e., whether
    or not the value is surrounded by double-\n   quotes).\n   When generating iCalendar
    or vCard parameter values, the following\n   apply:\n   o  formatted text line
    breaks are encoded into ^n (U+005E, U+006E)\n   o  the ^ character (U+005E) is
    encoded into ^^ (U+005E, U+005E)\n   o  the \" character (U+0022) is encoded into
    ^' (U+005E, U+0027)\n   When parsing iCalendar or vCard parameter values, the
    following\n   apply:\n   o  the character sequence ^n (U+005E, U+006E) is decoded
    into an\n      appropriate formatted line break according to the type of system\n
    \     being used\n   o  the character sequence ^^ (U+005E, U+005E) is decoded
    into the ^\n      character (U+005E)\n   o  the character sequence ^' (U+005E,
    U+0027) is decoded into the \"\n      character (U+0022)\n   o  if a ^ (U+005E)
    character is followed by any character other than\n      the ones above, parsers
    MUST leave both the ^ and the following\n      character in place\n   When converting
    between iCalendar and vCard text-based data formats\n   and alternative data-format
    representations such as XML (as described\n   in [RFC6321] and [RFC6351], respectively),
    implementations MUST\n   ensure that parameter value escape sequences are generated
    correctly\n   in the text-based format and are decoded when the parameter values\n
    \  appear in the alternate data formats.\n"
  - contents:
    - "3.1.  iCalendar Example\n   The following example is an \"ATTENDEE\" property
      with a \"CN\" parameter\n   whose value includes two double-quote characters.
      \ The parameter\n   value is not quoted, as there are no characters in the value
      that\n   would trigger quoting as required by iCalendar.\n   ATTENDEE;CN=George
      Herman ^'Babe^' Ruth:mailto:babe@example.com\n   The unescaped parameter value
      is\n   George Herman \"Babe\" Ruth\n"
    title: 3.1.  iCalendar Example
  - contents:
    - "3.2.  vCard Example\n   The following example is a \"GEO\" property with an
      \"X-ADDRESS\"\n   parameter whose value includes several line feed characters.
      \ The\n   parameter value is also quoted, since it contains a comma, which\n
      \  triggers quoting as required by vCard.\n   GEO;X-ADDRESS=\"Pittsburgh Pirates^n115
      Federal St^nPitt\n    sburgh, PA 15212\":geo:40.446816,-80.00566\n   The unescaped
      parameter value (where each line is terminated by a\n   line break character
      sequence) is\n   Pittsburgh Pirates\n   115 Federal St\n   Pittsburgh, PA 15212\n"
    title: 3.2.  vCard Example
  title: 3.  Parameter Value Encoding Scheme
- contents:
  - "4.  Security Considerations\n   There are no additional security issues beyond
    those of iCalendar\n   [RFC5545] and vCard [RFC6350].\n"
  title: 4.  Security Considerations
- contents:
  - "5.  Acknowledgments\n   Thanks to Michael Angstadt, Tim Bray, Mike Douglass,
    Barry Leiba,\n   Simon Perreault, and Pete Resnick for feedback on this specification.\n"
  title: 5.  Acknowledgments
- contents:
  - "6.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC5545]  Desruisseaux, B., \"Internet Calendaring and Scheduling\n              Core
    Object Specification (iCalendar)\", RFC 5545,\n              September 2009.\n
    \  [RFC6321]  Daboo, C., Douglass, M., and S. Lees, \"xCal: The XML\n              Format
    for iCalendar\", RFC 6321, August 2011.\n   [RFC6350]  Perreault, S., \"vCard
    Format Specification\", RFC 6350,\n              August 2011.\n   [RFC6351]  Perreault,
    S., \"xCard: vCard XML Representation\",\n              RFC 6351, August 2011.\n"
  title: 6.  Normative References
- contents:
  - "Appendix A.  Choice of Quoting Mechanism\n   Having recognized the need for escaping
    parameter values, the\n   question is what mechanism to use?  One obvious choice
    would be to\n   adopt the \\-escaping used for property values.  However, that
    could\n   not be used as-is, because it escapes a double-quote as the sequence\n
    \  of \\ followed by double-quote.  Consider what the example in\n   Section 3.1
    might look like using \\-escaping:\n   ATTENDEE;CN=\"George Herman \\\"Babe\\\"
    Ruth\":mailto:babe@example.com\n   Existing iCalendar/vCard parsers know nothing
    about escape sequences\n   in parameters.  So they would parse the parameter value
    as:\n   George Herman \\\n   i.e., the text between the first and second occurrence
    of a double-\n   quote.  However, the text after the second double-quote ought
    to be\n   either a : or a ; (to delimit the parameter value from the following\n
    \  parameter or property) but is not, so the parser could legitimately\n   throw
    an error at that point because the data is syntactically\n   invalid.  Thus, for
    backwards-compatibility reasons, a double-quote\n   cannot be escaped using a
    sequence that itself includes a double-\n   quote, and hence the choice of using
    a single-quote in this\n   specification.\n   Another option would be to use a
    form of \\-escaping modified for use\n   in parameter values only.  However, some
    incorrect, non-interoperable\n   use of \\ in parameter values has been observed,
    and thus it is best\n   to steer clear of that to achieve guaranteed, reliable\n
    \  interoperability.  Also, given that double-quote gets changed to\n   single-quote
    in the escape sequence for a parameter, but not for a\n   value, it is better
    to not give the impression that the same escape\n   mechanism (and thus code)
    can be used for both (which could lead to\n   other issues, such as an implementation
    incorrectly escaping a ; as\n   \\; as opposed to quoting the parameter value).\n
    \  The choice of ^ as the escape character was made based on the\n   requirement
    that an ASCII symbol (non-alphanumeric character) be\n   used, and it ought to
    be one least likely to be found in existing\n   data.\n"
  title: Appendix A.  Choice of Quoting Mechanism
- contents:
  - "Author's Address\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,
    CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n"
  title: Author's Address
