- title: __initial_text__
  contents:
  - '              OSPFv2 HMAC-SHA Cryptographic Authentication

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes how the National Institute of Standards\
    \ and\n   Technology (NIST) Secure Hash Standard family of algorithms can be\n\
    \   used with OSPF version 2's built-in, cryptographic authentication\n   mechanism.\
    \  This updates, but does not supercede, the cryptographic\n   authentication\
    \ mechanism specified in RFC 2328.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright and License Notice
  contents:
  - "Copyright and License Notice\n   Copyright (c) 2009 IETF Trust and the persons\
    \ identified as the\n   document authors.  All rights reserved.\n   This document\
    \ is subject to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF\
    \ Documents\n   (http://trustee.ietf.org/license-info) in effect on the date of\n\
    \   publication of this document.  Please review these documents\n   carefully,\
    \ as they describe your rights and restrictions with respect\n   to this document.\
    \  Code Components extracted from this document must\n   include Simplified BSD\
    \ License text as described in Section 4.e of\n   the Trust Legal Provisions and\
    \ are provided without warranty as\n   described in the BSD License.\n   This\
    \ document may contain material from IETF Documents or IETF\n   Contributions\
    \ published or made publicly available before November\n   10, 2008.  The person(s)\
    \ controlling the copyright in some of this\n   material may not have granted\
    \ the IETF Trust the right to allow\n   modifications of such material outside\
    \ the IETF Standards Process.\n   Without obtaining an adequate license from the\
    \ person(s) controlling\n   the copyright in such materials, this document may\
    \ not be modified\n   outside the IETF Standards Process, and derivative works\
    \ of it may\n   not be created outside the IETF Standards Process, except to format\n\
    \   it for publication as an RFC or to translate it into languages other\n   than\
    \ English.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A variety of risks exist when deploying any routing protocol\n\
    \   [Bell89].  This document provides an update to OSPFv2 Cryptographic\n   Authentication,\
    \ which is specified in Appendix D of RFC 2328.  This\n   document does not deprecate\
    \ or supercede RFC 2328.  OSPFv2, itself,\n   is defined in RFC 2328 [RFC2328].\n\
    \   This document adds support for Secure Hash Algorithms (SHA) defined\n   in\
    \ the US NIST Secure Hash Standard (SHS), which is defined by NIST\n   FIPS 180-2.\
    \  [FIPS-180-2] includes SHA-1, SHA-224, SHA-256, SHA-384,\n   and SHA-512.  The\
    \ Hashed Message Authentication Code (HMAC)\n   authentication mode defined in\
    \ NIST FIPS 198 is used [FIPS-198].\n   It is believed that [RFC2104] is mathematically\
    \ identical to\n   [FIPS-198] and it is also believed that algorithms in [RFC4634]\
    \ are\n   mathematically identical to [FIPS-180-2].\n   The creation of this addition\
    \ to OSPFv2 was driven by operator\n   requests that they be able to use the NIST\
    \ SHS family of algorithms\n   in the NIST HMAC mode, instead of being forced\
    \ to use the Keyed-MD5\n   algorithm and mode with OSPFv2 Cryptographic Authentication.\n\
    \   Cryptographic matters are discussed in more detail in the Security\n   Considerations\
    \ section of this document.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   All OSPF protocol exchanges can be authenticated.  The OSPF\
    \ packet\n   header (see Appendix A.3.1 of RFC 2328) includes an Authentication\n\
    \   Type field and 64 bits of data for use by the appropriate\n   authentication\
    \ scheme (determined by the Type field).\n   The authentication type is configurable\
    \ on a per-interface (or,\n   equivalently, on a per-network/subnet) basis.  Additional\n\
    \   authentication data is also configurable on a per-interface basis.\n   OSPF\
    \ authentication types 0, 1, and 2 are defined by RFC 2328.  This\n   document\
    \ provides an update to RFC 2328 that is only applicable to\n   Authentication\
    \ Type 2, \"Cryptographic Authentication\".\n"
- title: 3.  Cryptographic Authentication with NIST SHS in HMAC Mode
  contents:
  - "3.  Cryptographic Authentication with NIST SHS in HMAC Mode\n   Using this authentication\
    \ type, a shared secret key is configured in\n   all routers attached to a common\
    \ network/subnet.  For each OSPF\n   protocol packet, the key is used to generate/verify\
    \ a \"message\n   digest\" that is appended to the end of the OSPF packet.  The\
    \ message\n   digest is a one-way function of the OSPF protocol packet and the\n\
    \   secret key.  Since the secret key is never sent over the network in\n   the\
    \ clear, protection is provided against passive attacks [RFC1704].\n   The algorithms\
    \ used to generate and verify the message digest are\n   specified implicitly\
    \ by the secret key.  This specification discusses\n   the computation of OSPFv2\
    \ Cryptographic Authentication data when any\n   of the NIST SHS family of algorithms\
    \ is used in the Hashed Message\n   Authentication Code (HMAC) mode.  Please also\
    \ see RFC 2328, Appendix\n   D.\n   With the additions in this document, the currently\
    \ valid algorithms\n   (including mode) for OSPFv2 Cryptographic Authentication\
    \ include:\n           Keyed-MD5               (defined in RFC 2328, Appendix\
    \ D)\n           HMAC-SHA-1              (defined here)\n           HMAC-SHA-256\
    \            (defined here)\n           HMAC-SHA-384            (defined here)\n\
    \           HMAC-SHA-512            (defined here)\n   Of the above, implementations\
    \ of this specification MUST include\n   support for at least:\n           HMAC-SHA-256\n\
    \   and SHOULD include support for:\n           HMAC-SHA-1\n   and SHOULD also\
    \ (for backwards compatibility with existing\n   implementations and deployments)\
    \ include support for:\n           Keyed-MD5\n   and MAY also include support\
    \ for:\n           HMAC-SHA-384\n           HMAC-SHA-512\n   An implementation\
    \ of this specification MUST allow network operators\n   to configure ANY authentication\
    \ algorithm supported by that\n   implementation for use with ANY given KeyID\
    \ value that is configured\n   into that OSPFv2 router.\n"
- title: 3.1.  Generating Cryptographic Authentication
  contents:
  - "3.1.  Generating Cryptographic Authentication\n   The overall cryptographic authentication\
    \ process defined in Appendix\n   D of RFC 2328 remains unchanged.  However, the\
    \ specific cryptographic\n   details (i.e., SHA rather than MD5, HMAC rather than\
    \ Keyed-Hash) are\n   defined herein.  To reduce the potential for confusion,\
    \ this section\n   minimises the repetition of text from RFC 2328, Appendix D,\
    \ which is\n   incorporated here by reference [RFC2328].\n   First, following\
    \ the procedure defined in RFC 2328, Appendix D,\n   select the appropriate OSPFv2\
    \ Security Association for use with this\n   packet and set the KeyID field to\
    \ the KeyID value of that OSPFv2\n   Security Association.\n   Second, set the\
    \ Authentication Type to Cryptographic Authentication,\n   and set the Authentication\
    \ Data Length field to the length (measured\n   in bytes, not bits) of the cryptographic\
    \ hash that will be used.\n   When any NIST SHS algorithm is used in HMAC mode\
    \ with OSPFv2\n   Cryptographic Authentication, the Authentication Data Length\
    \ is equal\n   to the normal hash output length (measured in bytes) for the specific\n\
    \   NIST SHS algorithm in use.  For example, with NIST SHA-256, the\n   Authentication\
    \ Data Length is 32 bytes.\n   Third, the 32-bit cryptographic sequence number\
    \ is set in accordance\n   with the procedures in RFC 2328, Appendix D that are\
    \ applicable to\n   the Cryptographic Authentication type.\n   Fourth, the message\
    \ digest is then calculated and appended to the\n   OSPF packet, as described\
    \ below in Section 3.3.  The KeyID,\n   Authentication Algorithm, and Authentication\
    \ Key to be used for\n   calculating the digest are all components of the selected\
    \ OSPFv2\n   Security Association.  Input to the authentication algorithm consists\n\
    \   of the OSPF packet and the secret key.\n"
- title: 3.2.  OSPFv2 Security Association
  contents:
  - "3.2.  OSPFv2 Security Association\n   This document uses the term OSPFv2 Security\
    \ Association (OSPFv2 SA)\n   to refer to the authentication key information defined\
    \ in Section D.3\n   of RFC 2328.  The OSPFv2 protocol does not include an in-band\n\
    \   mechanism to create or manage OSPFv2 Security Associations.  The\n   parameters\
    \ of an OSPFv2 Security Association are updated to be:\n   Key Identifier (KeyID)\n\
    \      This is an 8-bit unsigned value used to uniquely identify an\n      OSPFv2\
    \ SA and is configured either by the router administrator\n      (or, in the future,\
    \ possibly by some key management protocol\n      specified by the IETF).  The\
    \ receiver uses this to locate the\n      appropriate OSPFv2 SA to use.  The sender\
    \ puts this KeyID value in\n      the OSPF packet based on the active OSPF configuration.\n\
    \   Authentication Algorithm\n      This indicates the authentication algorithm\
    \ (and also the\n      cryptographic mode, such as HMAC) to be used.  This information\n\
    \      SHOULD never be sent over the wire in cleartext form.  At present,\n  \
    \    valid values are Keyed-MD5, HMAC-SHA-1, HMAC-SHA-256, HMAC-SHA-\n      384,\
    \ and HMAC-SHA-512.\n   Authentication Key\n      This is the cryptographic key\
    \ used for cryptographic\n      authentication with this OSPFv2 SA.  This value\
    \ SHOULD never be\n      sent over the wire in cleartext form.  This is noted\
    \ as \"K\" in\n      Section 3.3 below.\n   Key Start Accept\n      The time that\
    \ this OSPF router will accept packets that have been\n      created with this\
    \ OSPF Security Association.\n   Key Start Generate\n      The time that this\
    \ OSPF router will begin using this OSPF Security\n      Association for OSPF\
    \ packet generation.\n   Key Stop Generate\n      The time that this OSPF router\
    \ will stop using this OSPF Security\n      Association for OSPF packet generation.\n\
    \   Key Stop Accept\n      The time that this OSPF router will stop accepting\
    \ packets\n      generated with this OSPF Security Association.\n   In order to\
    \ achieve smooth key transition, KeyStartAccept SHOULD be\n   less than KeyStartGenerate\
    \ and KeyStopGenerate SHOULD be less than\n   KeyStopAccept.  If KeyStopGenerate\
    \ and KeyStopAccept are left\n   unspecified, the key's lifetime is infinite.\
    \  When a new key replaces\n   an old, the KeyStartGenerate time for the new key\
    \ MUST be less than\n   or equal to the KeyStopGenerate time of the old key.\n\
    \   Key storage SHOULD persist across a system restart, warm or cold, to\n   avoid\
    \ operational issues.  In the event that the last key associated\n   with an interface\
    \ expires, it is unacceptable to revert to an\n   unauthenticated condition, and\
    \ not advisable to disrupt routing.\n   Therefore, the router should send a \"\
    last Authentication Key\n   expiration\" notification to the network manager and\
    \ treat the key as\n   having an infinite lifetime until the lifetime is extended,\
    \ the key\n   is deleted by network management, or a new key is configured.\n"
- title: 3.3.  Cryptographic Aspects
  contents:
  - "3.3.  Cryptographic Aspects\n   This describes the computation of the Authentication\
    \ Data value when\n   any NIST SHS algorithm is used in the HMAC mode with OSPFv2\n\
    \   Cryptographic Authentication.\n   In the algorithm description below, the\
    \ following nomenclature, which\n   is consistent with [FIPS-198], is used:\n\
    \      H    is the specific hashing algorithm (e.g., SHA-256).\n      K    is\
    \ the Authentication Key for the OSPFv2 security\n           association.\n  \
    \    Ko   is the cryptographic key used with the hash algorithm.\n      B    is\
    \ the block size of H, measured in octets\n           rather than bits.  Note\
    \ well that B is the\n           internal block size, not the hash size.\n   \
    \           For SHA-1 and SHA-256: B == 64\n              For SHA-384 and SHA-512:\
    \ B == 128\n      L    is the length of the hash, measured in octets\n       \
    \    rather than bits.\n      XOR  is the exclusive-or operation.\n      Opad\
    \ is the hexadecimal value 0x5c repeated B times.\n      Ipad is the hexadecimal\
    \ value 0x36 repeated B times.\n      Apad is the hexadecimal value 0x878FE1F3\
    \ repeated (L/4) times.\n      Implementation note:\n         This definition\
    \ of Apad means that Apad is always the same\n         length as the hash output.\n\
    \   (1) PREPARATION OF KEY\n       In this application, Ko is always L octets\
    \ long.\n       If the Authentication Key (K) is L octets long, then Ko is equal\n\
    \       to K.  If the Authentication Key (K) is more than L octets long,\n   \
    \    then Ko is set to H(K).  If the Authentication Key (K) is less\n       than\
    \ L octets long, then Ko is set to the Authentication Key (K)\n       with zeros\
    \ appended to the end of the Authentication Key (K),\n       such that Ko is L\
    \ octets long.\n   (2) FIRST-HASH\n       First, the OSPFv2 packet's Authentication\
    \ Trailer (which is the\n       appendage described in RFC 2328, Section D.4.3,\
    \ Page 233, items\n       (6)(a) and (6)(d)) is filled with the value Apad, and\
    \ the\n       Authentication Type field is set to 2.\n       Then, a First-Hash,\
    \ also known as the inner hash, is computed as\n       follows:\n            \
    \ First-Hash = H(Ko XOR Ipad || (OSPFv2 Packet))\n       Implementation Notes:\n\
    \          Note that the First-Hash above includes the Authentication\n      \
    \    Trailer containing the Apad value, as well as the OSPF packet,\n        \
    \  as per RFC 2328, Section D.4.3.\n       The definition of Apad (above) ensures\
    \ it is always the same\n       length as the hash output.  This is consistent\
    \ with RFC 2328.\n       The \"(OSPFv2 Packet)\" mentioned in the First-Hash (above)\
    \ does\n       include the OSPF Authentication Trailer.\n       The digest length\
    \ for SHA-1 is 20 bytes; for SHA-256, 32 bytes;\n       for SHA-384, 48 bytes;\
    \ and for SHA-512, 64 bytes.\n   (3) SECOND-HASH\n       Then a Second-Hash, also\
    \ known as the outer hash, is computed as\n       follows:\n             Second-Hash\
    \ = H(Ko XOR Opad || First-Hash)\n   (4) RESULT\n       The resulting Second-Hash\
    \ becomes the Authentication Data that is\n       sent in the Authentication Trailer\
    \ of the OSPFv2 packet.  The\n       length of the Authentication Trailer is always\
    \ identical to the\n       message digest size of the specific hash function H\
    \ that is being\n       used.\n       This also means that the use of hash functions\
    \ with larger output\n       sizes will also increase the size of the OSPFv2 packet\
    \ as\n       transmitted on the wire.\n       Implementation Note:\n         \
    \ RFC 2328, Appendix D specifies that the Authentication Trailer\n          is\
    \ not counted in the OSPF packet's own Length field, but is\n          included\
    \ in the packet's IP Length field.\n"
- title: 3.4.  Message Verification
  contents:
  - "3.4.  Message Verification\n   Message verification follows the procedure defined\
    \ in RFC 2328,\n   except that the cryptographic calculation of the message digest\n\
    \   follows the procedure in Section 3.3 above when any NIST SHS\n   algorithm\
    \ in the HMAC mode is in use.  Kindly recall that the\n   cryptographic algorithm/mode\
    \ in use is indicated implicitly by the\n   KeyID of the received OSPFv2 packet.\n\
    \   Implementation Notes:\n      One must save the received digest value before\
    \ calculating the\n      expected digest value, so that after that calculation\
    \ the received\n      value can be compared with the expected value to determine\
    \ whether\n      to accept that OSPF packet.\n      RFC 2328, Section D.4.3 (6)\
    \ (c) should be read very closely prior\n      to implementing the above.  With\
    \ SHA algorithms in HMAC mode, Apad\n      is placed where the MD5 key would be\
    \ put if Keyed-MD5 were in use.\n"
- title: 3.5.  Changing OSPFv2 Security Associations
  contents:
  - "3.5.  Changing OSPFv2 Security Associations\n   Using KeyIDs makes changing the\
    \ active OSPFv2 SA convenient.  An\n   implementation can choose to associate\
    \ a lifetime with each OSPFv2 SA\n   and can thus automatically switch to a different\
    \ OSPFv2 SA based on\n   the lifetimes of the configured OSPFv2 SA(s).\n   After\
    \ changing the active OSPFv2 SA, the OSPF sender will use the\n   (different)\
    \ KeyID value associated with the newly active OSPFv2 SA.\n   The receiver will\
    \ use this new KeyID to select the appropriate (new)\n   OSPFv2 SA to use with\
    \ the received OSPF packet containing the new\n   KeyID value.\n   Because the\
    \ KeyID field is present, the receiver does not need to try\n   all configured\
    \ OSPFv2 Security Associations with any received OSPFv2\n   packet.  This can\
    \ mitigate some of the risks of a Denial-of-Service\n   (DoS) attack on the OSPF\
    \ instance, but does not entirely prevent all\n   conceivable DoS attacks.  For\
    \ example, an on-link adversary still\n   could generate OSPFv2 packets that are\
    \ syntactically valid but that\n   contain invalid Authentication Data, thereby\
    \ forcing the receiver(s)\n   to perform expensive cryptographic computations\
    \ to discover that the\n   packets are invalid.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document enhances the security of the OSPFv2\
    \ routing protocol by\n   adding, to the existing OSPFv2 Cryptographic Authentication\
    \ method,\n   support for the algorithms defined in the NIST Secure Hash Standard\n\
    \   (SHS) using the Hashed Message Authentication Code (HMAC) mode, and\n   by\
    \ adding support for the Hashed Message Authentication Code (HMAC)\n   mode.\n\
    \   This provides several alternatives to the existing Keyed-MD5\n   mechanism.\
    \  There are published concerns about the overall strength\n   of the MD5 algorithm\
    \ ([Dobb96a], [Dobb96b], [Wang04]).  While those\n   published concerns apply\
    \ to the use of MD5 in other modes (e.g., use\n   of MD5 X.509v3/PKIX digital\
    \ certificates), they are not an attack\n   upon Keyed-MD5, which is what OSPFv2\
    \ specified in RFC 2328.  There\n   are also published concerns about the SHA\
    \ algorithm [Wang05] and also\n   concerns about the MD5 and SHA algorithms in\
    \ the HMAC mode ([RR07],\n   [RR08]).  Separately, some organisations (e.g., the\
    \ US government)\n   prefer NIST algorithms, such as the SHA family, over other\
    \ algorithms\n   for local policy reasons.\n   The value Apad is used here primarily\
    \ for consistency with IETF\n   specifications for HMAC-SHA authentication of\
    \ RIPv2 SHA [RFC4822] and\n   IS-IS SHA [RFC5310] and to minimise OSPF protocol\
    \ processing changes\n   in Section D.4.3 of RFC 2328 [RFC2328].\n   The quality\
    \ of the security provided by the Cryptographic\n   Authentication option depends\
    \ completely on the strength of the\n   cryptographic algorithm and cryptographic\
    \ mode in use, the strength\n   of the key being used, and the correct implementation\
    \ of the security\n   mechanism in all communicating OSPF implementations.  Accordingly,\n\
    \   the use of high assurance development methods is recommended.  It\n   also\
    \ requires that all parties maintain the secrecy of the shared\n   secret key.\
    \  [RFC4086] provides guidance on methods for generating\n   cryptographically\
    \ random bits.\n   This mechanism is vulnerable to a replay attack by any on-link\
    \ node.\n   An on-link node could record a legitimate OSPF packet sent on the\n\
    \   link, then replay that packet at the next time the recorded OSPF\n   packet's\
    \ sequence number is valid.  This replay attack could cause\n   significant routing\
    \ disruptions within the OSPF domain.\n   Ideally, for example, to prevent the\
    \ preceding attack, each OSPF\n   Security Association would be replaced by a\
    \ new and different OSPF\n   Security Association before any sequence number were\
    \ reused.  As of\n   the date this document was published, no form of automated\
    \ key\n   management has been standardised for OSPF.  So, as of the date this\n\
    \   document was published, common operational practice has been to use\n   the\
    \ same OSPF Authentication Key for very long periods of time.  This\n   operational\
    \ practice is undesirable for many reasons.  Therefore, it\n   is clearly desirable\
    \ to develop and standardise some automated key-\n   management mechanism for\
    \ OSPF.\n   Because all of the currently specified algorithms use symmetric\n\
    \   cryptography, one cannot authenticate precisely which OSPF router\n   sent\
    \ a given packet.  However, one can authenticate that the sender\n   knew the\
    \ OSPF Security Association (including the OSPFv2 SA's\n   parameters) currently\
    \ in use.\n   Because a routing protocol contains information that need not be\
    \ kept\n   secret, privacy is not a requirement.  However, authentication of the\n\
    \   messages within the protocol is of interest in order to reduce the\n   risk\
    \ of an adversary compromising the routing system by deliberately\n   injecting\
    \ false information into the routing system.\n   The technology in this document\
    \ enhances an authentication mechanism\n   for OSPFv2.  The mechanism described\
    \ here is not perfect and need not\n   be perfect.  Instead, this mechanism represents\
    \ a significant\n   increase in the work function of an adversary attacking OSPFv2,\
    \ as\n   compared with plain-text authentication or null authentication, while\n\
    \   not causing undue implementation, deployment, or operational\n   complexity.\
    \  Denial-of-Service attacks are not generally preventable\n   in a useful networking\
    \ protocol [VK83].\n   Because of implementation considerations, including the\
    \ need for\n   backwards compatibility, this specification uses the same mechanism\n\
    \   as specified in RFC 2328 and limits itself to adding support for\n   additional\
    \ cryptographic hash functions.  Also, some large network\n   operators have indicated\
    \ they prefer to retain the basic mechanism\n   defined in RFC 2328, rather than\
    \ migrate to IP Security, due to\n   deployment and operational considerations.\
    \  If all the OSPFv2 routers\n   supported IPsec, then IPsec tunnels could be\
    \ used in lieu of this\n   mechanism [RFC4301].  This would, however, relegate\
    \ the topology to\n   point-to-point adjacencies over the mesh of IPsec tunnels.\n\
    \   If a stronger authentication were believed to be required, then the\n   use\
    \ of a full digital signature [RFC2154] would be an approach that\n   should be\
    \ seriously considered.  Use of full digital signatures would\n   enable precise\
    \ authentication of the OSPF router originating each\n   OSPF link-state advertisement,\
    \ and thereby provide much stronger\n   integrity protection for the OSPF routing\
    \ domain.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   The OSPF Authentication Codes registry entry for\
    \ Cryptographic\n   Authentication (Registry Code 2) has been updated to refer\
    \ to this\n   document as well as to RFC 2328.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors would like to thank Bill Burr, Tim Polk,\
    \ John Kelsey, and\n   Morris Dworkin of (US) NIST for review of portions of this\
    \ document\n   that are directly derived from the closely related work on RIPv2\n\
    \   Cryptographic Authentication [RFC4822].\n   David Black, Nevil Brownlee, Acee\
    \ Lindem, and Hilarie Orman (in\n   alphabetical order by last name) provided\
    \ feedback on earlier\n   versions of this document.  That feedback has greatly\
    \ improved both\n   the technical content and the readability of the current document.\n\
    \   Henrik Levkowetz's Internet Draft tools were very helpful in\n   preparing\
    \ this document and are much appreciated.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [FIPS-180-2] US National Institute of Standards\
    \ & Technology, \"Secure\n                Hash Standard (SHS)\", FIPS PUB 180-2,\
    \ August 2002.\n   [FIPS-198]   US National Institute of Standards & Technology,\
    \ \"The\n                Keyed-Hash Message Authentication Code (HMAC)\", FIPS\
    \ PUB\n                198, March 2002.\n   [RFC2119]    Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC2328]    Moy, J., \"OSPF Version 2\", STD 54, RFC\
    \ 2328, April 1998.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [Bell89]     Bellovin, S., \"Security Problems\
    \ in the TCP/IP Protocol\n                Suite\", ACM Computer Communications\
    \ Review, Volume 19,\n                Number 2, pp. 32-48, April 1989.\n   [Dobb96a]\
    \    Dobbertin, H, \"Cryptanalysis of MD5 Compress\", Technical\n            \
    \    Report, 2 May 1996. (Presented at the Rump Session of\n                EuroCrypt\
    \ 1996.)\n   [Dobb96b]    Dobbertin, H, \"The Status of MD5 After a Recent Attack\"\
    ,\n                CryptoBytes, Vol. 2, No. 2, Summer 1996.\n   [RFC1704]    Haller,\
    \ N. and R. Atkinson, \"On Internet\n                Authentication\", RFC 1704,\
    \ October 1994.\n   [RFC2104]    Krawczyk, H., Bellare, M., and R. Canetti, \"\
    HMAC:\n                Keyed-Hashing for Message Authentication\", RFC 2104,\n\
    \                February 1997.\n   [RFC2154]    Murphy, S., Badger, M., and B.\
    \ Wellington, \"OSPF with\n                Digital Signatures\", RFC 2154, June\
    \ 1997.\n   [RFC4086]    Eastlake, D., 3rd, Schiller, J., and S. Crocker,\n  \
    \              \"Randomness Requirements for Security\", BCP 106, RFC\n      \
    \          4086, June 2005.\n   [RFC4301]    Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n                Internet Protocol\", RFC 4301, December 2005.\n   [RFC4634]\
    \    Eastlake 3rd, D. and T. Hansen, \"US Secure Hash\n                Algorithms\
    \ (SHA and HMAC-SHA)\", RFC 4634, July 2006.\n   [RFC4822]    Atkinson, R. and\
    \ M. Fanto, \"RIPv2 Cryptographic\n                Authentication\", RFC 4822,\
    \ February 2007.\n   [RFC5310]    Bhatia, M., Manral, V., Li, T., Atkinson, R.,\
    \ White, R.,\n                and M. Fanto, \"IS-IS Generic Cryptographic\n  \
    \              Authentication\", RFC 5310, February 2009.\n   [RR07]       Rechberger,\
    \ C. and V. Rijmen, \"On Authentication with\n                HMAC and Non-random\
    \ Properties\", Financial Cryptography\n                and Data Security, Lecture\
    \ Notes in Computer Science,\n                Volume 4886/2008, Springer-Verlag,\
    \ Berlin, December\n                2007.\n   [RR08]       Rechberger, C. and\
    \ V. Rijmen, \"New Results on NMAC/HMAC\n                when Instantiated with\
    \ Popular Hash Functions\", Journal\n                of Universal Computer Science,\
    \ Volume 14, Number 3, pp.\n                347-376, 1 February 2008.\n   [VK83]\
    \       Voydock, V. and S. Kent, \"Security Mechanisms in High-\n            \
    \    level Networks\", ACM Computing Surveys, Vol. 15, No. 2,\n              \
    \  June 1983.\n   [Wang04]     Wang, X., et alia, \"Collisions for Hash Functions\
    \ MD4,\n                MD5, HAVAL-128, and RIPEMD\", August 2004, IACR,\n   \
    \             http://eprint.iacr.org/2004/199\n   [Wang05]     Wang, X., et alia,\
    \ \"Finding Collisions in the Full SHA-\n                1\" Proceedings of Crypto\
    \ 2005, Lecture Notes in Computer\n                Science, Volume 3621, pp. 17-36,\
    \ Springer-Verlag,\n                Berlin, August 31, 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Manav Bhatia\n   Alcatel-Lucent\n   Bangalore,\n   India\n\
    \   EMail: manav.bhatia@alcatel-lucent.com\n   Vishwas Manral\n   IP Infusion\n\
    \   Almora, Uttarakhand\n   India\n   EMail: vishwas@ipinfusion.com\n   Matthew\
    \ J. Fanto\n   Aegis Data Security\n   Dearborn, MI\n   USA\n   EMail: mfanto@aegisdatasecurity.com\n\
    \   Russ I. White\n   Cisco Systems\n   7025 Kit Creek Road\n   P.O. Box 14987\n\
    \   RTP, NC\n   27709 USA\n   EMail: riw@cisco.com\n   M. Barnes\n   Cisco Systems\n\
    \   225 West Tasman Drive\n   San Jose, CA\n   95134  USA\n   EMail: mjbarnes@cisco.com\n\
    \   Tony Li\n   Ericsson\n   300 Holger Way\n   San Jose, CA\n   95134  USA\n\
    \   EMail: tony.li@tony.li\n   Randall J. Atkinson\n   Extreme Networks\n   3585\
    \ Monroe Street\n   Santa Clara, CA\n   95051  USA\n   Phone: +1 (408) 579-2800\n\
    \   EMail: rja@extremenetworks.com\n"
