- title: __initial_text__
  contents:
  - "          Level III Server Protocol for the Lincoln Laboratory\n            \
    \                  360/67 Host\n"
- title: Disclaimer
  contents:
  - "Disclaimer\n   This material has not been reviewed for public release and is\n\
    \   intended only for use with the ARPA network.  It should not be quoted\n  \
    \ or cited in any publication not related to the ARPA network.\n"
- title: Introduction
  contents:
  - "Introduction\n   The Lincoln Laboratory IBM 360/67 is connected to the ARPA network\n\
    \   and acts as a serving host providing access to the CP-67 virtual\n   machine\
    \ operating system.  Upon completion of the Login procedure,\n   users have control\
    \ of a 360 virtual machine through a virtual 1052\n   online console.  Attached\
    \ to the virtual machine is a virtual card\n   reader, card punch and line printer,\
    \ and a number of disk storage\n   devices.  The 360 virtual machine can be either\
    \ a virtual 360/67 with\n   dynamic address translation hardware or a standard\
    \ System/360.  Most\n   users run a standard 360 with 256K bytes of virtual memory\
    \ and\n   operate the CMS conversational monitor system.  CMS provides\n   facilities\
    \ for file creation, maintenance and manipulation, program\n   development, debugging\
    \ and execution, and a number of other useful\n   utility functions.  The section\
    \ in the Network Notebook on the\n   Lincoln Laboratory 360/67 more fully describes\
    \ the facilities\n   available.\n"
- title: Network Control Program
  contents:
  - "Network Control Program\n   All communication with the 360/67 through the IMP\
    \ are processed by a\n   Network Control Program (NCP).  The NCP operates with\
    \ the Host-Host\n   Protocol described in the Network Working Group Document No.\
    \ 1 dated\n   3 August 1970.\n"
- title: Initial Connection Protocol
  contents:
  - "Initial Connection Protocol\n   To create a virtual machine from the network,\
    \ a pair of connections\n   must be made with the LOGGER.  The sockets to be used\
    \ are assigned\n   following the Initial Connection Protocol (ICP).  The LOGGER\
    \ is\n   enabled and waiting for an RTS control command for socket X'0A 0000\n\
    \   01'.  This ICP socket corresponds to home X'0A', user X'0000', and\n   tag\
    \ X'01' (send gender).  Requests for connection on the ICP socket\n   are stacked\
    \ until it becomes free.  If the LOGGER is willing to\n   service another network\
    \ user, a 32 bit socket ID of a receive socket\n   will be sent over this initial\
    \ connection and the ICP socket will\n   then be closed.  If the LOGGER is not\
    \ willing to service another\n   network user, it will not complete the initial\
    \ connection for the ICP\n   socket and will refuse the request by closing the\
    \ connection without\n   completing it.\n"
- title: LOGGER Protocol
  contents:
  - "LOGGER Protocol\n   Once a pair of user sockets have been assigned, the connection\n\
    \   protocol should be completed on these sockets.  The LOGGER then\n   expects\
    \ to receive (on the receive socket) one 8-bit byte indicating\n   the data type\
    \ which characterizes the transmission code used to\n   communicate with the network\
    \ user over this pair of sockets.  A code\n   of X'01' implies 7 bit ASCII code\
    \ in 8-bit bytes with the leading bit\n   zero.  A code of X'02' implies 8-bit\
    \ EBCDIC code.  When the data type\n   code is received, the LOGGER will echo\
    \ back the data type code over\n   the send socket followed by the message:\n\
    \            LINCOLN LABORATORY CP-67 ONLINE NL\n   in the appropriate code. \
    \ (In ASCII, NL is transmitted as CR LF).\n   The procedure continues according\
    \ to the normal CP-67 login protocol\n   with the LOGGER performing an additional\
    \ function of mapping network\n   userids and passwords into valid CP-67 userids\
    \ and passwords.  This\n   mapping is specified by entries in a file (the LOGGER\
    \ FILE) which the\n   LOGGER accesses.  If a network userid does not match an\
    \ entry in the\n   file or if the password given does not match the corresponding\n\
    \   network password, the usual CP responses will be sent to the users.\n   Thus\
    \ network access to the Lincoln Laboratory system is restricted to\n   those accounts\
    \ for which an appropriate entry has been made in the\n   LOGGER FILE.\n   It\
    \ should be noted that CP transmits a BYP code (Bypass) to suspend\n   the printing\
    \ of characters keyed while a password is being entered.\n   After the password\
    \ has been entered, CP transmits a RES code\n   (Restore) to resume the printing\
    \ when characters are keyed.  When\n   communicating in ASCII, these character\
    \ codes are converted to X'FF'\n   since no corresponding ASCII code is defined.\
    \  Refer to the Network\n   Resource Notebook for more details on CP-67 and on\
    \ CMS.\n"
- title: The NET Account
  contents:
  - "The NET Account\n   Lincoln Laboratory is providing one account which can be\
    \ used by\n   network users to familiarize themselves with our time-sharing system.\n\
    \   The userid of this account is NET and the password is ARPA.  This\n   account\
    \ has 900 records of storage, which can store approximately\n   720,000 characters.\
    \  NET users are free to ERASE any file on this\n   account since many different\
    \ people may use this account.\n"
- title: The SERVER Protocol
  contents:
  - "The SERVER Protocol\n   CP-67 operates on a line at a time, i.e., a group of\
    \ characters are\n   processed as a line and not as a sequence of individual characters.\n\
    \   Also, the system does normally buffer input lines, that is, input is\n   not\
    \ normally entered until requested by a read from the system.  With\n   IBM 2741\
    \ or 1052 terminals, the keyboard is locked until a read is\n   requested.  The\
    \ virtual terminals through which network users have\n   access to the CP-67 system\
    \ have been designed to support either a\n   line oriented terminal or a character\
    \ oriented terminal.  When CP\n   requests a line of input, the SERVER transmits\
    \ a prompting code\n   X'80'.  This character can be used to signal a user process\
    \ to change\n   transmission modes and to transmit an input line.  Characters\n\
    \   received by the SERVER are buffered until a NL character is received.\n  \
    \ Lines received can then be used to satisfy CP requests for an input\n   line.\n\
    \   CP may send out lines which may or may not end with a NL character.\n   If\
    \ a line does not end with a NL character, the prompting character\n   will naturally\
    \ be sent following the output line to request input to\n   a CP process.\n  \
    \ When a user wishes to interrupt a CP process, i.e., to change modes,\n   an\
    \ interrupt code X'80' should be sent to the SERVER.  This code will\n   result\
    \ in an asynchronous interrupt being sent to the running\n   process, stimulating\
    \ the pressing of the 'attention' button on a 2741\n   terminal.  Together with\
    \ the transmission of the interrupt code, the\n   user should cause an INS to\
    \ be sent over the send link.  This signal\n   will be synchronized with the interrupt\
    \ code.  If the interrupt code\n   has not yet been received and processed, all\
    \ characters buffered and\n   those received before the receipt of the interrupt\
    \ code will be\n   flushed, i.e., deleted.  When the interrupt code is received,\
    \ it will\n   be paired with the previously received INS.  If an INS is received\n\
    \   after an interrupt code has been received and processed, the INS will\n  \
    \ be paired with this previously received interrupt code.\n   If CP has a line\
    \ to send to a user after it has requested an input\n   line but before it has\
    \ received any input, the SERVER will transmit\n   an INS on the user's receive\
    \ link to notify the user that previously\n   sent prompting character should\
    \ be retracted and that a line has been\n   or will be sent to the user.  This\
    \ message line is called a\n   \"warning\".\n"
- title: Graphic and Control Codes
  contents:
  - "Graphic and Control Codes\n   Figure 1 gives the 8-bit codes for the EBCDIC graphics\
    \ and controls.\n   Figure 2 gives the 7-bit codes for the ASCII graphics and\
    \ controls.\n   The controls are tabulated and compared in Figure 3.  The standard\n\
    \   interpretation of the ASCII controls are given in Figure 4.\n   There are\
    \ 4 ASCII codes which do not have a corresponding graphic or\n   control in the\
    \ EBCDIC code.  The EBCDIC codes given to these codes\n   are as follows:\n  \
    \                 |     Hex Code\n             ASCII |-------+--------\n     \
    \       Symbol | ASCII | EBCDIC\n            -------+-------+--------\n      \
    \         DC3 |  13   |  3A\n                   |       |\n                ` \
    \ |  60   |  70\n                   |       |\n                \\  |  5C   | \
    \ 71\n                   |       |\n                ^  |  5E   |  72\n   There\
    \ are 29 EBCDIC graphics codes and 19 EBCDIC control codes which\n   do not have\
    \ a corresponding graphic or control in the ASCII code.  In\n   addition, there\
    \ are 84 other EBCDIC codes whose interpretation is\n   unspecified.  Four of\
    \ these codes have been chosen to correspond to\n   the ASCII control and ASCII\
    \ graphics which do not have a\n   corresponding EBCDIC code.  When converting\
    \ EBCDIC codes to ASCII\n   codes, the remaining 80 codes plus the 29 EBCDIC graphics\
    \ and 18\n   EBCDIC controls (not counting NL) are converted into the code X'FF'.\n\
    \   The NL character is treated specially.  The NL character, EBCDIC code\n  \
    \ X'15', is converted into the two character sequence CR LF, i.e.,\n   ASCII X'0D\
    \ 0A'.  As stated above, the code X'80' is transmitted as a\n   prompting character\
    \ whenever CP requests an input line.\n   On converting from ASCII to EBCDIC,\
    \ if any code other than the 128\n   ASCII codes, or the interrupt codem X'80',\
    \ is received, it is\n   converted to the code X'FF'.  In addition , whenever\
    \ the two ASCII\n   characters CR LF are found sequentially in the input stream,\
    \ they are\n   converted into the single EBCDIC character NL.\n   [In Figure 1,\
    \ positions shown as \"[?]\" cannot be printed in ASCII.]\n        0 0  0   0\
    \   0   0   0   0   0   1   1   1   1   1   1   1   1\n        1 0  0   0   0\
    \   1   1   1   1   0   0   0   0   1   1   1   1\n        2 0  0   1   1   0\
    \   0   1   1   0   0   1   1   0   0   1   1\n        3 0  1   0   1   0   1\
    \   0   1   0   1   0   1   0   1   0   1\n   4567+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0000|NUL|DLE|DS |   |SP | & | - |   |   |   |[?]|[?]|   |   |   | 0 |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   0001|SOH|DC1|SOS|\
    \   |   |   | / |   | a | j |[?]|[?]| A | J |   | 1 |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0010|STX|DC2|FS |SYN|   |   |   |   | b | k | s |[?]| B | K | S | 2 |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   0011|ETX|TM\
    \ |   |   |   |   |   |   | c | l | t |[?]| C | L | T | 3 |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0100|PF |RES|BYP|PN |   |   |   |   | d | m | u |[?]| D | M | U | 4 |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   0101|HT\
    \ |NL |LF |RS |   |   |   |   | e | n | v |[?]| E | N | V | 5 |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   0110|LC |BS |ETB|UC |   |   |   |   | f | o | w |[?]| F | O | W | 6 |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   0111|DEL|IL\
    \ |ESC|EOT|   |   |   |   | g | p | x |[?]| G | P | X | 7 |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   1000|   |CAN|   |   |   |   |   |   | h | q | y |[?]| H | Q | Y | 8 |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   1001|\
    \   |EM |   |   |   |   |   |   | i | r | z |[?]| I | R | Z | 9 |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   1010|SMM|CC |SM |   |[1]| ! |   | : |   |   |   |   |   |   |   |   |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   1011|VT\
    \ |CU1|CU2|CU3| . | $ | , | # | { | } |[?]|[?]|   |   |   |   |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   1100|FF |IFS|   |DC4| < | * | % | @ |[?]|[?]|[?]|[?]|   |   |   |   |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   1101|CR\
    \ |IGS|ENQ|NAK| ( | ) | _ | ' |[?]|[?]| [ | ] |   |   |   |   |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \   1110|SO |IRS|ACK|   | + | ; | > | = |[?]|[?]|[?]|[?]|   |   |   |   |\n  \
    \     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n   1111|SI\
    \ |IUS|BEL|SUB| | |[2]| ? | \" |[?]|[?]|[?]|[?]|   |   |   |   |\n       +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\
    \                         +---+---+---+---+---+---+---+---+\n                \
    \         | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n                         +---+---+---+---+---+---+---+---+\n\
    \                                   Code Structure\n                         \
    \             Figure 1.\n            Extended Binary-Coded Decimal Interchange\
    \ Code (EBCDIC)\n            8 0   0   0   0   0   0   0   0\n            7 0\
    \   0   0   0   1   1   1   1\n            6 0   0   1   1   0   0   1   1\n \
    \           5 0   1   0   1   0   1   0   1\n        4321+---+---+---+---+---+---+---+---+\n\
    \        0000|NUL|DLE|SP | 0 | @ | P | ` | p |\n            +---+---+---+---+---+---+---+---+\n\
    \        0001|SOH|DC1| ! | 1 | A | Q | a | q |\n            +---+---+---+---+---+---+---+---+\n\
    \        0010|STX|DC2| \" | 2 | B | R | b | r |\n            +---+---+---+---+---+---+---+---+\n\
    \        0011|ETX|DC3| # | 3 | C | S | c | s |\n            +---+---+---+---+---+---+---+---+\n\
    \        0100|EOT|DC4| $ | 4 | D | T | d | t |\n            +---+---+---+---+---+---+---+---+\n\
    \        0101|ENQ|NAK| % | 5 | E | U | e | u |\n            +---+---+---+---+---+---+---+---+\n\
    \        0110|ACK|SYN| & | 6 | F | V | f | v |\n            +---+---+---+---+---+---+---+---+\n\
    \        0111|BEL|ETB| ' | 7 | G | W | g | w |\n            +---+---+---+---+---+---+---+---+\n\
    \        1000|BS |CAN| ( | 8 | H | X | h | x |\n            +---+---+---+---+---+---+---+---+\n\
    \        1001|HT |EM | ) | 9 | I | Y | i | y |\n            +---+---+---+---+---+---+---+---+\n\
    \        1010|LF |SUB| * | : | J | Z | j | z |\n            +---+---+---+---+---+---+---+---+\n\
    \        1011|VT |ESC| + | ; | K | [ | k | { |\n            +---+---+---+---+---+---+---+---+\n\
    \        1100|FF |FS | , | < | L | \\ | l | | |\n            +---+---+---+---+---+---+---+---+\n\
    \        1101|CR |GS | - | = | M | ] | m | } |\n            +---+---+---+---+---+---+---+---+\n\
    \        1110|SO |RS | . | > | N | ^ | n | ~ |\n            +---+---+---+---+---+---+---+---+\n\
    \        1111|SI |SU | / | ? | O | _ | o |DEL|\n            +---+---+---+---+---+---+---+---+\n\
    \    +---+---+---+---+---+---+---+---+---+---+---+---+\n            | 8 | 7 |\
    \ 6 | 5 | 4 | 3 | 2 | 1 |\n            +---+---+---+---+---+---+---+---+\n   \
    \                  Code Structure\n                        Figure 2.\n   USA Standard\
    \ Code for Information Interchange (USASCII)\n   CAT     EBCDIC  ASCII   TTY \
    \    PTTC    FUNCTION\n           NUL     NUL     NULL            Null\n   CC\
    \      SOH     SOH     SOM             Start of Heading\n   CC      STX     STX\
    \     EOA     EOA (D) Start of Text\n   CC      ETX     ETX     EOM          \
    \   End of Text\n   DC      PF                      PF      Punch Off\n   FE \
    \     HT      HT      H.TAB   TAB     Horizontal Tab\n   GR      LC          \
    \            LC      Lower Case\n           DEL     DEL     RUBOUT  DEL     Delete\n\
    \           SMM                             Start of Manual Message\n   FE   \
    \   VT      VT      V.TAB           Vertical Tab\n   FE      FF      FF      FORM\
    \            Form Feed\n   FE      CR      CR      RETURN          Carriage Return\n\
    \   GR      SO      SO      SO              Shift Out\n   GR      SI      SI \
    \     SI              Shift In\n   CC      DLE     DLE     DC0             Data\
    \ Link Escape\n   DC      DC1     DC1     X-ON            Device Control 1\n \
    \  DC      DC2     DC2     TAPE ON         Device Control 2\n           TM   \
    \                           Tape Mark\n   DC      RES                     RES\
    \     Restore\n   FE      NL                      NL      New Line\n   FE    \
    \  BS      BS              BS      Backspace\n           IL                  \
    \    IL      Idle\n           CAN     CAN     FE0     CAN     Cancel\n       \
    \    EM      EM      S1              End of Medium\n           CC            \
    \                  Cursor Control\n   CU      CU1                            \
    \ Customer Use 1\n   IS      IFS     FS      S4              Info. Field Separator\n\
    \   IS      IGS     GS      S5              Info. Group Separator\n   IS     \
    \ IRS     RS      S6              Info. Record Separator\n   IS      IUS     US\
    \      S7              Info Unit Separator\n   ED      DS                    \
    \          Digit Select\n   ED      SOS                             Start of Significance\n\
    \   ED      FS                              Field Separator\n   DC      BYP  \
    \                   BYP     Bypass\n   FE      LF      LF      LF      LF    \
    \  Line Feed\n   CC      ETB     ETB     LEM     EOB (B) End of Text Block\n \
    \          ESC     ESC     S3      PRE     Escape\n           SM             \
    \                 Set Mode\n   CU      CU2                             Customer\
    \ Use 2\n   CC      ENQ     ENQ     WRU             Enquiry\n   CC      ACK  \
    \   ACK     RU      (Y)     Acknowledge\n           BEL     BEL     BELL     \
    \       Bell\n   CC      SYN     SYN     SYNC            Synchronous Idle\n  \
    \ DC      PN                      PN      Punch On\n   DC      RS            \
    \          RS      Reader Stop\n   GR      UC                      UC      Upper\
    \ Case\n   CC      EOT     EOT     EOT     EOT (C) End of Transmission\n   CU\
    \      CU3                             Customer Use 3\n   DC      DC4     DC4\
    \     TAPE OFF        Device Control 4\n   CC      NAK     NAK     ERROR   (N)\
    \     Negative Acknowledge\n           SUB     SUB     S2              Substitute\n\
    \   DC              DC3     X-OFF           Device Control 3\n               \
    \        Figure 3\n                Control Functions Compared\n   CC   (Communication\
    \ Control).  A functional character intended to\n         control or facilitate\
    \ transmission of information over\n         communication networks.\n   FE  \
    \ (Format Effector).  A functional character which controls the\n         layout\
    \ or positioning of information in printing or display\n         devices.\n  \
    \ IS   (Information Separator).  A character which is used to separate\n     \
    \    and qualify information in a logical sense.  There is a group\n         of\
    \ four such characters, which are to be used in a hierarchical\n         order.\n\
    \   DC   (Device Control).  A functional character used for the control\n    \
    \     of ancillary devices associated with data processing of\n         telecommunication\
    \ systems, more especially switching devices\n         \"on\" and \"off\".\n \
    \  ED   (Edit and Mark).  A control character used by the System/360\n       \
    \  Edit and Mark (EDMK) instruction for the formatting of\n         alphanumeric\
    \ fields.\n   GB   (Graphic Control).  A control character indicating that the\
    \ code\n         combinations which follow are to be interpreted in a particular\n\
    \         code table, depending upon the particular control character.\n   CU\
    \   (Customer Use).  A character excluded from future assignment by\n        \
    \ IBM.  These \"protected\" codes are intended for use by customer\n         systems\
    \ so that their use will not conflict with a possible\n         future IBM use.\n\
    \                           Figure 3 (Continued)\n                     Categories\
    \ of Control Functions\n   NUL  (Null).  The all-zeros character which may serve\
    \ to accomplish\n         time fill and media fill.\n   SOH  (Start of Heading).\
    \  A communication control character used at\n         the beginning of a sequence\
    \ of characters which constitute a\n         machine-sensible address or routing\
    \ information.  Such a\n         sequence is referred to as the _heading_.  An\
    \ STX character has\n         the effect of terminating a heading.\n   STX  (Start\
    \ of Text).  A communication control character which\n         precedes a sequence\
    \ of characters that is to be treated as an\n         entity and transmitted through\
    \ to the ultimate destination.\n         Such a sequence is referred to as _text_.\
    \  SIX may be used to\n         terminate a sequence of characters started by\
    \ SOH.\n   ETX  (End of Text).  A communication control character used to\n  \
    \       terminate a sequence of characters started with STX and\n         transmitted\
    \ as an entity.\n   EOT  (End of Transmission).  A communication control character\
    \ used\n         to indicate the conclusion of a transmission, which may have\n\
    \         contained one or more texts and any associated headings.\n   ENQ  (Enquiry).\
    \  A communication control character used in data\n         communication systems\
    \ as a request for a response from a remote\n         station.  It may be used\
    \ as a \"Who Are You\" (WRU) to obtain\n         identification, or may be used\
    \ to obtain station status, or\n         both.\n   ACK  (Acknowledge).  A communication\
    \ control character transmitted by\n         a receiver as an affirmative response\
    \ to a sender.\n   BEL  (Bell).  A character for use when these is a need to call\
    \ for\n         human attention.  It may control alarm or attention devices.\n\
    \   BS   (Backspace).  A format effector which controls the movement of\n    \
    \     the printing position one printing space backward on the same\n        \
    \ printing line (applicable also to display devices).\n   HT   (Horizontal Tabulation).\
    \  A format effector which controls the\n         movement of the printing position\
    \ to the next in a series of\n         predetermined positions along the printing\
    \ line (applicable\n         also to display devices and the skip function on\
    \ punched\n         cards.)\n   LF   (Line Feed).  A format effector which controls\
    \ the movement of\n         the printing position to the next printing line (also\n\
    \         applicable to display devices).\n   VT   (Vertical Tabulation).  A format\
    \ effector which controls the\n         movement of the printing position to the\
    \ next in a series of\n         predetermined printing lines (also applicable\
    \ to display\n         devices).\n   FF   (Form Feed).  A format effector which\
    \ controls the movement of\n         the printing position to the first predetermined\
    \ printing line\n         on the next form or page (also applicable to display\
    \ devices).\n   CR   (Carriage Return).  A format effector which controls the\n\
    \         movement of the printing position to the first printing\n         position\
    \ on the same printing line (also applicable to display\n         devices).\n\
    \   SO    (Shift Out).  A control character indicating that the code\n       \
    \  combinations which follow shall be interpreted as outside of\n         the\
    \ character set of the standard code table until a Shift In\n         Character\
    \ is reached.\n   SI    (Shift In).  A control character indicating that the code\n\
    \         combinations which follow shall be interpreted according to the\n  \
    \       standard code table.\n   DLE   (Data Link Escape).  A communication control\
    \ character which\n         will change the meaning of a limited number of contiguously\n\
    \         following characters.  It is used exclusively to provide\n         supplementary\
    \ controls in data communication networks.\n   DC1, DC2, DC3, DC4 (Device Controls).\
    \  Characters for the control of\n         ancillary devices associated with data\
    \ processing or\n         telecommunication systems, more especially switching\
    \ devices\n         \"on\" and \"off\".  (If a single \"stop\" control is required\
    \ to\n         interrupt of turn off ancillary devices, DC4 is the preferred\n\
    \         assignment.)\n   NAK  (Negative Acknowledge).  A communication control\
    \ character\n         transmitted by a receiver as a negative response to a sender.\n\
    \   SYN   (Synchronous Idle).  A communication control character used by\n   \
    \      a synchronous transmission system in the absence of any other\n       \
    \  character to provide a signal from which synchronism may be\n         achieved\
    \ or retained.\n   ETB  (End of Transmission Block).  A communication control\
    \ character\n         used to indicate the end of a block of data for communication\n\
    \         purposes.  ETB is used for blocking data where the block\n         structure\
    \ is not necessarily related to the processing format.\n   CAN  (Cancel).  A control\
    \ character used to indicate that the data\n         with which it is sent is\
    \ in error or is to be disregarded.\n   EM   (End of Medium).  A control character\
    \ associated with the sent\n         data which may be used to identify the physical\
    \ end of the\n         medium, or the end of the used, or wanted, portion of\n\
    \         information recorded on a medium.  (The position of this\n         character\
    \ does not necessarily correspond to the physical end\n         of the medium.\n\
    \   SS   (Start of Special Sequence).  A control character used to\n         indicate\
    \ the start of a variable length sequence of characters\n         which have special\
    \ significance or which are to have special\n         handling.\n   ESC  (Escape).\
    \  A control character intended to provide code\n         extension (supplementary\
    \ characters) in general information\n         interchange.  The Escape character\
    \ itself is a prefix affecting\n         the interpretation of a limited number\
    \ of contiguously\n         following characters.\n   FS   (File Separator), GS\
    \ (Group Separator), RS (Record Separator)\n         and US (Unit Separator).\
    \  These information separators may be\n         used within data in optional\
    \ fashion, except that the\n         hierarchical relationship shall be : FS is\
    \ the must inclusive,\n         then GS, then RS, and US is least inclusive. \
    \ (The content and\n         length of a File, Group, Record, or Unit are not\
    \ specified.)\n   DEL  (Delete).  This character is used primarily to \"erase\"\
    \ or\n         \"obliterate\" erroneous or unwanted characters in perforated\n\
    \         tape.  (In the strict sense, DEL is not a control character.)\n    \
    \                           Figure 4\n                        ASCII Control Functions\n"
- title: Endnotes
  contents:
  - "Endnotes\n   [1] - Cent sign\n   [2] - Logical not (\"bent bar\")\n   [?] - Graphics\
    \ not in ASCII.  See Postscript or PDF version of\n         this document.\n \
    \         [This RFC was put into machine readable form for entry]\n          [into\
    \ the online RFC archives by Lorrie Shiota, 10/02]\n"
