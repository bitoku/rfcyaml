- title: __initial_text__
  contents:
  - '         Transmission and Processing of IPv6 Extension Headers

    '
- title: Abstract
  contents:
  - "Abstract\n   Various IPv6 extension headers have been standardised since the\
    \ IPv6\n   standard was first published.  This document updates RFC 2460 to\n\
    \   clarify how intermediate nodes should deal with such extension\n   headers\
    \ and with any that are defined in the future.  It also\n   specifies how extension\
    \ headers should be registered by IANA, with a\n   corresponding minor update\
    \ to RFC 2780.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7045.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction and Problem Statement  . . . . . . . .\
    \ . . . . .   2\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Requirement to Transmit Extension Headers . . . . . . .\
    \ . . .   5\n     2.1.  All Extension Headers . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.2.  Hop-by-Hop Options  . . . . . . . . . . . . . . . . . .\
    \ .   6\n   3.  Security Considerations . . . . . . . . . . . . . . . . . . .\
    \   6\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  \
    \ 7\n   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   8\n\
    \   6.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n  \
    \   6.1.  Normative References  . . . . . . . . . . . . . . . . . .   8\n    \
    \ 6.2.  Informative References  . . . . . . . . . . . . . . . . .   8\n"
- title: 1.  Introduction and Problem Statement
  contents:
  - "1.  Introduction and Problem Statement\n   In IPv6, an extension header is any\
    \ header that follows the initial\n   40 bytes of the packet and precedes the\
    \ upper-layer header (which\n   might be a transport header, an ICMPv6 header,\
    \ or a notional \"No Next\n   Header\").\n   An initial set of IPv6 extension\
    \ headers was defined by [RFC2460],\n   which also described how they should be\
    \ handled by intermediate\n   nodes, with the exception of the Hop-by-Hop Options\
    \ header:\n      ...extension headers are not examined or processed by any node\n\
    \      along a packet's delivery path, until the packet reaches the node\n   \
    \   (or each of the set of nodes, in the case of multicast) identified\n     \
    \ in the Destination Address field of the IPv6 header.\n   This provision meant\
    \ that forwarding nodes should be completely\n   transparent to extension headers.\
    \  There was no provision for\n   forwarding nodes to modify them, remove them,\
    \ insert them, or use\n   them to affect forwarding behaviour.  Thus, new extension\
    \ headers\n   could be introduced progressively and used only by hosts that have\n\
    \   been updated to create and interpret them [RFC6564].  The extension\n   header\
    \ mechanism is an important part of the IPv6 architecture, and\n   several new\
    \ extension headers have been standardised since RFC 2460\n   was published.\n\
    \   Today, IPv6 packets are not always forwarded by straightforward IP\n   routing\
    \ based on their first 40 bytes.  Some routers, and a variety\n   of intermediate\
    \ nodes often referred to as middleboxes, such as\n   firewalls, load balancers,\
    \ or packet classifiers, might inspect other\n   parts of each packet.  Indeed,\
    \ such middlebox functions are often\n   embedded in routers.  However, experience\
    \ has shown that as a result,\n   the network is not transparent to IPv6 extension\
    \ headers.  Contrary\n   to Section 4 of RFC 2460, middleboxes sometimes examine\
    \ and process\n   the entire IPv6 packet before making a decision to either forward\
    \ or\n   discard the packet.  This means that they need to traverse the chain\n\
    \   of extension headers, if present, until they find the transport\n   header\
    \ (or an encrypted payload).  Unfortunately, because not all\n   IPv6 extension\
    \ headers follow a uniform TLV format, this process is\n   clumsy and requires\
    \ knowledge of each extension header's format.  A\n   separate problem is that\
    \ the header chain may even be fragmented\n   [HEADER-CHAIN].\n   The process\
    \ is potentially slow as well as clumsy, possibly\n   precluding its use in nodes\
    \ attempting to process packets at line\n   speed.  The present document does\
    \ not intend to solve this problem,\n   which is caused by the fundamental architecture\
    \ of IPv6 extension\n   headers.  This document focuses on clarifying how the\
    \ header chain\n   should be handled in the current IPv6 architecture.\n   If\
    \ they encounter an unrecognised extension header type, some\n   firewalls treat\
    \ the packet as suspect and drop it.  Unfortunately, it\n   is an established\
    \ fact that several widely used firewalls do not\n   recognise some or all of\
    \ the extension headers standardised since RFC\n   2460 was published.  It has\
    \ also been observed that certain firewalls\n   do not even handle all the extension\
    \ headers standardised in RFC\n   2460, including the fragment header [FRAGDROP],\
    \ causing fundamental\n   problems of end-to-end connectivity.  This applies in\
    \ particular to\n   firewalls that attempt to inspect packets at very high speed,\
    \ since\n   they cannot take the time to reassemble fragmented packets,\n   especially\
    \ when under a denial-of-service attack.\n   Other types of middleboxes, such\
    \ as load balancers or packet\n   classifiers, might also fail in the presence\
    \ of extension headers\n   that they do not recognise.\n   A contributory factor\
    \ to this problem is that because extension\n   headers are numbered out of the\
    \ existing IP Protocol Number space,\n   there is no collected list of them. \
    \ For this reason, it is hard for\n   an implementor to quickly identify the full\
    \ set of standard extension\n   headers.  An implementor who consults only RFC\
    \ 2460 will miss all\n   extension headers defined subsequently.\n   This combination\
    \ of circumstances creates a \"Catch-22\" situation\n   [Heller] for the deployment\
    \ of any newly standardised extension\n   header except for local use.  It cannot\
    \ be widely deployed because\n   existing middleboxes will drop it on many paths\
    \ through the Internet.\n   However, most middleboxes will not be updated to allow\
    \ the new header\n   to pass until it has been proved safe and useful on the open\n\
    \   Internet, which is impossible until the middleboxes have been\n   updated.\n\
    \   The uniform TLV format now defined for extension headers [RFC6564]\n   will\
    \ improve the situation, but only for future extensions.  Some\n   tricky and\
    \ potentially malicious cases will be avoided by forbidding\n   very long chains\
    \ of extension headers that need to be fragmented\n   [HEADER-CHAIN].  This will\
    \ alleviate concerns that stateless\n   firewalls cannot locate a complete header\
    \ chain as required by the\n   present document.\n   However, these changes are\
    \ insufficient to correct the underlying\n   problem.  The present document clarifies\
    \ that the above requirement\n   from RFC 2460 applies to all types of nodes that\
    \ forward IPv6 packets\n   and to all extension headers standardised now and in\
    \ the future.  It\n   also requests that IANA create a subsidiary registry that\
    \ clearly\n   identifies extension header types and updates RFC 2780 accordingly.\n\
    \   Fundamental changes to the IPv6 extension header architecture are out\n  \
    \ of scope for this document.\n   Also, hop-by-hop options are not handled by\
    \ many high-speed routers\n   or are processed only on a slow path.  This document\
    \ also updates the\n   requirements for processing the Hop-by-Hop Options header\
    \ to make\n   them more realistic.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [RFC2119].\n   In the remainder of this document, the term \"forwarding node\"\
    \ refers\n   to any router, firewall, load balancer, prefix translator, or any\n\
    \   other device or middlebox that forwards IPv6 packets with or without\n   examining\
    \ the packet in any way.\n   In this document, \"standard\" IPv6 extension headers\
    \ are those\n   specified in detail by IETF Standards Actions [RFC5226].\n   \"\
    Experimental\" extension headers include those defined by any\n   Experimental\
    \ RFC and the header values 253 and 254 defined by\n   [RFC3692] and [RFC4727]\
    \ when used as experimental extension headers.\n   \"Defined\" extension headers\
    \ are the \"standard\" extension headers plus\n   the \"experimental\" ones.\n"
- title: 2.  Requirement to Transmit Extension Headers
  contents:
  - '2.  Requirement to Transmit Extension Headers

    '
- title: 2.1.  All Extension Headers
  contents:
  - "2.1.  All Extension Headers\n   As mentioned above, forwarding nodes that discard\
    \ packets containing\n   extension headers are known to cause connectivity failures\
    \ and\n   deployment problems.  Therefore, it is important that forwarding\n \
    \  nodes that inspect IPv6 headers be able to parse all defined\n   extension\
    \ headers and deal with them appropriately, as specified in\n   this section.\n\
    \   Any forwarding node along an IPv6 packet's path, which forwards the\n   packet\
    \ for any reason, SHOULD do so regardless of any extension\n   headers that are\
    \ present, as required by RFC 2460.  Exceptionally, if\n   a forwarding node is\
    \ designed to examine extension headers for any\n   reason, such as firewalling,\
    \ it MUST recognise and deal appropriately\n   with all standard IPv6 extension\
    \ header types and SHOULD recognise\n   and deal appropriately with experimental\
    \ IPv6 extension header types.\n   The list of standard and experimental extension\
    \ header types is\n   maintained by IANA (see Section 4), and implementors are\
    \ advised to\n   check this list regularly for updates.\n   RFC 2460 requires\
    \ destination hosts to discard packets containing\n   unrecognised extension headers.\
    \  However, intermediate forwarding\n   nodes SHOULD NOT do this, since that might\
    \ cause them to\n   inadvertently discard traffic using a recently standardised\
    \ extension\n   header not yet recognised by the intermediate node.  The exceptions\n\
    \   to this rule are discussed next.\n   If a forwarding node discards a packet\
    \ containing a standard IPv6\n   extension header, it MUST be the result of a\
    \ configurable policy and\n   not just the result of a failure to recognise such\
    \ a header.  This\n   means that the discard policy for each standard type of\
    \ extension\n   header MUST be individually configurable.  The default configuration\n\
    \   SHOULD allow all standard extension headers.\n   Experimental IPv6 extension\
    \ headers SHOULD be treated in the same way\n   as standard extension headers,\
    \ including an individually configurable\n   discard policy.  However, the default\
    \ configuration MAY drop\n   experimental extension headers.\n   Forwarding nodes\
    \ MUST be configurable to allow packets containing\n   unrecognised extension\
    \ headers, but the default configuration MAY\n   drop such packets.\n   The IPv6\
    \ Routing Header Types 0 and 1 have been deprecated.  Note\n   that Type 0 was\
    \ deprecated by [RFC5095].  However, this does not mean\n   that the IPv6 Routing\
    \ Header can be unconditionally dropped by\n   forwarding nodes.  Packets containing\
    \ standardised and undeprecated\n   Routing Headers SHOULD be forwarded by default.\
    \  At the time of\n   writing, these include Type 2 [RFC6275], Type 3 [RFC6554],\
    \ and the\n   experimental Routing Header Types 253 and 254 [RFC4727].  Others\
    \ may\n   be defined in the future.\n"
- title: 2.2.  Hop-by-Hop Options
  contents:
  - "2.2.  Hop-by-Hop Options\n   The IPv6 Hop-by-Hop Options header SHOULD be processed\
    \ by\n   intermediate forwarding nodes as described in [RFC2460].  However, it\n\
    \   is to be expected that high-performance routers will either ignore it\n  \
    \ or assign packets containing it to a slow processing path.  Designers\n   planning\
    \ to use a hop-by-hop option need to be aware of this likely\n   behaviour.\n\
    \   As a reminder, in RFC 2460, it is stated that the Hop-by-Hop Options\n   header,\
    \ if present, must be first.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Forwarding nodes that operate as firewalls MUST\
    \ conform to the\n   requirements in the previous section in order to respect\
    \ the IPv6\n   extension header architecture.  In particular, packets containing\n\
    \   standard extension headers are only to be discarded as a result of an\n  \
    \ intentionally configured policy.\n   These changes do not affect a firewall's\
    \ ability to filter out\n   traffic containing unwanted or suspect extension headers,\
    \ if\n   configured to do so.  However, the changes do require firewalls to be\n\
    \   capable of permitting any or all extension headers, if configured to\n   do\
    \ so.  The default configurations are intended to allow normal use\n   of any\
    \ standard extension header, avoiding the connectivity issues\n   described in\
    \ Sections 1 and 2.1.\n   As noted above, the default configuration might drop\
    \ packets\n   containing experimental extension headers.  There is no header length\n\
    \   field in an IPv6 header, and header types 253 and 254 might be used\n   either\
    \ for experimental extension headers or for experimental payload\n   types.  Therefore,\
    \ there is no generic algorithm by which a firewall\n   can distinguish these\
    \ two cases and analyze the remainder of the\n   packet.  This should be considered\
    \ when deciding on the appropriate\n   default action for header types 253 and\
    \ 254.\n   When new extension headers are standardised in the future, those\n\
    \   implementing and configuring forwarding nodes, including firewalls,\n   will\
    \ need to take them into account.  A newly defined header will\n   exercise new\
    \ code paths in a host that does recognise it, so caution\n   may be required.\
    \  Additional security issues with experimental values\n   or new extension headers\
    \ are to be found in [RFC4727] and [RFC6564].\n   As a result, it is to be expected\
    \ that the deployment process will be\n   slow and will depend on satisfactory\
    \ operational experience.  Until\n   deployment is complete, the new extension\
    \ will fail in some parts of\n   the Internet.  This aspect needs to be considered\
    \ when deciding to\n   standardise a new extension.  Specific security considerations\
    \ for\n   each new extension should be documented in the document that defines\n\
    \   it.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has added an extra column titled \"IPv6 Extension\
    \ Header\" to the\n   \"Assigned Internet Protocol Numbers\" registry to clearly\
    \ mark those\n   values that are also IPv6 extension header types defined by an\
    \ IETF\n   Standards Action or IESG Approval (see list below).  This also\n  \
    \ applies to IPv6 extension header types defined in the future.\n   Additionally,\
    \ IANA has closed the existing empty \"Next Header Types\"\n   registry to new\
    \ entries and is redirecting its users to a new \"IPv6\n   Extension Header Types\"\
    \ registry.  This registry contains only those\n   protocol numbers that are also\
    \ marked as IPv6 Extension Header types\n   in the \"Assigned Internet Protocol\
    \ Numbers\" registry.  Experimental\n   values will be marked as such.  The initial\
    \ list will be as follows:\n   o  0, IPv6 Hop-by-Hop Option, [RFC2460]\n   o \
    \ 43, Routing Header for IPv6, [RFC2460], [RFC5095]\n   o  44, Fragment Header\
    \ for IPv6, [RFC2460]\n   o  50, Encapsulating Security Payload, [RFC4303]\n \
    \  o  51, Authentication Header, [RFC4302]\n   o  60, Destination Options for\
    \ IPv6, [RFC2460]\n   o  135, Mobility Header, [RFC6275]\n   o  139, Experimental\
    \ use, Host Identity Protocol [RFC5201]\n   o  140, Shim6 Protocol, [RFC5533]\n\
    \   o  253, Use for experimentation and testing, [RFC3692], [RFC4727]\n   o  254,\
    \ Use for experimentation and testing, [RFC3692], [RFC4727]\n   This list excludes\
    \ type 59, No Next Header, [RFC2460], which is not\n   an extension header as\
    \ such.\n   The references to the IPv6 Next Header field in [RFC2780] are to be\n\
    \   interpreted as also applying to the IPv6 Extension Header field, and\n   the\
    \ \"IPv6 Extension Header Types\" registry will be managed\n   accordingly.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This document was triggered by mailing list discussions\
    \ including\n   John Leslie, Stefan Marksteiner, and others.  Valuable comments\
    \ and\n   contributions were made by Dominique Barthel, Tim Chown, Lorenzo\n \
    \  Colitti, Fernando Gont, C. M. Heard, Bob Hinden, Ray Hunter, Suresh\n   Krishnan,\
    \ Marc Lampo, Sandra Murphy, Michael Richardson, Dan\n   Romascanu, Dave Thaler,\
    \ Joe Touch, Bjoern Zeeb, and others.\n   Brian Carpenter was a visitor at the\
    \ Computer Laboratory at Cambridge\n   University during part of this work.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet Protocol, Version\
    \ 6\n              (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2780]\
    \  Bradner, S. and V. Paxson, \"IANA Allocation Guidelines For\n             \
    \ Values In the Internet Protocol and Related Headers\", BCP\n              37,\
    \ RFC 2780, March 2000.\n   [RFC3692]  Narten, T., \"Assigning Experimental and\
    \ Testing Numbers\n              Considered Useful\", BCP 82, RFC 3692, January\
    \ 2004.\n   [RFC4727]  Fenner, B., \"Experimental Values In IPv4, IPv6, ICMPv4,\n\
    \              ICMPv6, UDP, and TCP Headers\", RFC 4727, November 2006.\n   [RFC6564]\
    \  Krishnan, S., Woodyatt, J., Kline, E., Hoagland, J., and\n              M.\
    \ Bhatia, \"A Uniform Format for IPv6 Extension Headers\",\n              RFC\
    \ 6564, April 2012.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [FRAGDROP] Jaeggli, J., Colitti, L., Kumari,\
    \ W., Vyncke, E., Kaeo,\n              M., and T. Taylor, \"Why Operators Filter\
    \ Fragments and\n              What It Implies\", Work in Progress, June 2013.\n\
    \   [HEADER-CHAIN]\n              Gont, F., Manral, V., and R. Bonica, \"Implications\
    \ of\n              Oversized IPv6 Header Chains\", Work in Progress, October\n\
    \              2013.\n   [Heller]   Heller, J., \"Catch-22\", Simon and Schuster,\
    \ November 1961.\n   [RFC4302]  Kent, S., \"IP Authentication Header\", RFC 4302,\
    \ December\n              2005.\n   [RFC4303]  Kent, S., \"IP Encapsulating Security\
    \ Payload (ESP)\", RFC\n              4303, December 2005.\n   [RFC5095]  Abley,\
    \ J., Savola, P., and G. Neville-Neil, \"Deprecation\n              of Type 0\
    \ Routing Headers in IPv6\", RFC 5095, December\n              2007.\n   [RFC5201]\
    \  Moskowitz, R., Nikander, P., Jokela, P., and T. Henderson,\n              \"\
    Host Identity Protocol\", RFC 5201, April 2008.\n   [RFC5226]  Narten, T. and\
    \ H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5533]\
    \  Nordmark, E. and M. Bagnulo, \"Shim6: Level 3 Multihoming\n              Shim\
    \ Protocol for IPv6\", RFC 5533, June 2009.\n   [RFC6275]  Perkins, C., Johnson,\
    \ D., and J. Arkko, \"Mobility Support\n              in IPv6\", RFC 6275, July\
    \ 2011.\n   [RFC6554]  Hui, J., Vasseur, JP., Culler, D., and V. Manral, \"An\
    \ IPv6\n              Routing Header for Source Routes with the Routing Protocol\n\
    \              for Low-Power and Lossy Networks (RPL)\", RFC 6554, March\n   \
    \           2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter\n   Department of Computer Science\n \
    \  University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n  \
    \ EMail: brian.e.carpenter@gmail.com\n   Sheng Jiang\n   Huawei Technologies Co.,\
    \ Ltd.\n   Q14, Huawei Campus\n   No. 156 Beiqing Road\n   Hai-Dian District,\
    \ Beijing  100095\n   P.R. China\n   EMail: jiangsheng@huawei.com\n"
