- contents:
  - '                      The Content-MD5 Header Field

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Abstract\n   This memo specifies an optional header field, Content-MD5, for use\n
    \  with MIME-conformant messages.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ..............................................
    \   1\n   2. Generation of the Content-MD5 Field .......................    2\n
    \  3. Processing the Content-MD5 field ..........................    3\n   4.
    Security Considerations ...................................    3\n   5. Acknowledgements
    ..........................................    3\n   6. References ................................................
    \   3\n   7. Authors' Addresses ........................................    4\n"
  title: Table of Contents
- contents:
  - "1. Introduction\n   Despite all of the mechanisms provided by MIME [1] which
    attempt to\n   protect data from being damaged in the course of email transport,
    it\n   is still desirable to have a mechanism for verifying that the data,\n   once
    decoded, are intact.  For this reason, this memo defines the use\n   of an optional
    header field, Content-MD5, which may be used as a\n   message integrity check
    (MIC), to verify that the decoded data are\n   the same data that were initially
    sent.  The Content-MD5 header may\n   also be placed in the encapsulated headers
    of an object of type\n   message/external-body, to be used to verify that the
    retreived and\n   decoded data are the same data that were initially referenced.\n
    \  MD5 is an algorithm for computing a 128 bit \"digest\" of arbitrary-\n   length
    data, with a high degree of confidence that any alterations in\n   the data will
    be reflected in alterations in the digest.  The MD5\n   algorithm itself is defined
    in [2]. This memo specifies how the\n   algorithm may be used as an integrity
    check for MIME mail.\n"
  title: 1. Introduction
- contents:
  - "2. Generation of the Content-MD5 Field\n   The Content-MD5 field is generated
    by only an originating user agent.\n   Message relays and gateways are expressly
    forbidden from generating a\n   Content-MD5 field.\n   Use of the Content-MD5
    field is completely optional, but its use is\n   recommended whenever data integrity
    is desired, but Privacy-Enhanced\n   Mail services [3] are not available.  (Consult
    Section 4 for further\n   details.) The Content-MD5 field may only be added to
    MIME entities of\n   a `leaf' nature, i.e., the Content-MD5 field may be used
    with any\n   content type other than multipart or message/rfc822.\n   To generate
    the value of the Content-MD5 field, the MD5 algorithm is\n   computed on the canonical
    form of the MIME entity's object.  In\n   particular, this means that the sender
    applies the MD5 algorithm on\n   the data immediately after conversion to canonical
    form, before\n   applying any content-transfer-encoding, and that the receiver
    also\n   applies the MD5 algorithm on the canonical form, after undoing any\n
    \  content-transfer-encoding.  For textual data, this means the MD5\n   algorithm
    must be computed on data in which the canonical form for\n   newlines applies,
    that is, in which each newline is represented by a\n   CR-LF pair.  The canonical
    encoding model of MIME is described in\n   Appendix G of [1].\n   The output of
    the MD5 algorithm is a 128 bit digest.  When viewed in\n   network byte order
    (big-endian order), this yields a sequence of 16\n   octets of binary data.  These
    16 octets are then encoded according to\n   the base64 algorithm in order to obtain
    the value that is placed in\n   the Content-MD5 field.  Thus, if the application
    of the MD5 algorithm\n   over the raw data of a MIME entity results in a digest
    having the\n   (unlikely) value of \"Check Integrity!\", then that MIME entity's\n
    \  header could contain the field\n        Content-MD5:  Q2hlY2sgSW50ZWdyaXR5IQ==\n
    \  Finally, as discussed in Appendix B of [1], textual data is regularly\n   altered
    in the normal delivery of mail.  Because the addition or\n   deletion of trailing
    white space will result in a different digest,\n   either the quoted-printable
    or base64 algorithm should be employed as\n   a content-transfer-encoding when
    the Content-MD5 field is used.\n"
  title: 2. Generation of the Content-MD5 Field
- contents:
  - "3. Processing the Content-MD5 field\n   If the Content-MD5 field is present,
    a recipient user agent may\n   choose to use it to verify that the contents of
    a MIME entity have\n   not been modified during transport.  Message relays and
    gateways are\n   expressly forbidden to alter their processing based on the presence\n
    \  of the Content-MD5 field.  However, a message gateway is allowed to\n   remove
    the Content-MD5 field if the corresponding MIME entity is\n   translated into
    a different content-type.\n"
  title: 3. Processing the Content-MD5 field
- contents:
  - "4. Security Considerations\n   This document specifies a data integrity service
    that protects data\n   from accidental modification while in transit from the
    sender to the\n   recipient.  A secure data integrity service, such as that provided
    by\n   Privacy Enhanced Mail [3], is conjectured to protect data from all\n   modifications.\n"
  title: 4. Security Considerations
- contents:
  - "5. Acknowledgements\n   This memo is based almost entirely on text originally
    written by\n   Nathaniel Borenstein of Bellcore.  In addition, several improvements\n
    \  were suggested by Keith Moore of the University of Tennessee,\n   Knoxville.\n"
  title: 5. Acknowledgements
- contents:
  - "6. References\n   [1] Borenstein, N., and N. Freed, \"MIME (Multipurpose Internet
    Mail\n       Extensions) Part One: Mechanisms for Specifying and Describing\n
    \      the Format of Internet Message Bodies\", RFC 1521, Bellcore,\n       Innosoft,
    September 1993.\n   [2] Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC
    1321, MIT\n       Laboratory for Computer Science and RSA Data Security, Inc.,\n
    \      April 1992.\n   [3] Linn, J., \"Privacy Enhancement for Internet Electronic
    Mail, Part\n       I: Message Encryption and Authentication Procedures\", RFC
    1421,\n       IAB IRTF PSRG, IETF PEM WG, February 1993.\n"
  title: 6. References
- contents:
  - "7. Authors' Addresses\n   John G. Myers\n   Carnegie Mellon University\n   EMail:
    jgm+@cmu.edu\n   Marshall T. Rose\n   Dover Beach Consulting, Inc.\n   EMail:
    mrose@dbc.mtview.ca.us\n"
  title: 7. Authors' Addresses
