- title: __initial_text__
  contents:
  - '                  The ".onion" Special-Use Domain Name

    '
- title: Abstract
  contents:
  - "Abstract\n   This document registers the \".onion\" Special-Use Domain Name.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7686.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Notational Conventions  . . . . . . . . . . . . .\
    \ . . . .   3\n   2.  The \".onion\" Special-Use Domain Name  . . . . . . . .\
    \ . . . .   3\n   3.  IANA Considerations . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n     5.1.  Normative References  . . . . . . . . . . . . . . . . . .\
    \   5\n     5.2.  Informative References  . . . . . . . . . . . . . . . . .  \
    \ 6\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Tor network [Dingledine2004] has the ability to host\
    \ network\n   services using the \".onion\" Special-Use Top-Level Domain Name.\
    \  Such\n   names can be used as other domain names would be (e.g., in URLs\n\
    \   [RFC3986]), but instead of using the DNS infrastructure, .onion names\n  \
    \ functionally correspond to the identity of a given service, thereby\n   combining\
    \ location and authentication.\n   .onion names are used to provide access to\
    \ end to end encrypted,\n   secure, anonymized services; that is, the identity\
    \ and location of\n   the server is obscured from the client.  The location of\
    \ the client\n   is obscured from the server.  The identity of the client may\
    \ or may\n   not be disclosed through an optional cryptographic authentication\n\
    \   process.\n   .onion names are self-authenticating, in that they are derived\
    \ from\n   the cryptographic keys used by the server in a client-verifiable\n\
    \   manner during connection establishment.  As a result, the\n   cryptographic\
    \ label component of a .onion name is not intended to be\n   human-meaningful.\n\
    \   The Tor network is designed to not be subject to any central\n   controlling\
    \ authorities with regards to routing and service\n   publication, so .onion names\
    \ cannot be registered, assigned,\n   transferred or revoked.  \"Ownership\" of\
    \ a .onion name is derived\n   solely from control of a public/private key pair\
    \ that corresponds to\n   the algorithmic derivation of the name.\n   In this\
    \ way, .onion names are \"special\" in the sense defined by\n   Section 3 of [RFC6761];\
    \ they require hardware and software\n   implementations to change their handling\
    \ in order to achieve the\n   desired properties of the name (see Section 4).\
    \  These differences\n   are listed in Section 2.\n   Like Top-Level Domain Names,\
    \ .onion names can have an arbitrary\n   number of subdomain components.  This\
    \ information is not meaningful\n   to the Tor protocol, but can be used in application\
    \ protocols like\n   HTTP [RFC7230].\n   Note that .onion names are required to\
    \ conform with DNS name syntax\n   (as defined in Section 3.5 of [RFC1034] and\
    \ Section 2.1 of\n   [RFC1123]), as they will still be exposed to DNS implementations.\n\
    \   See [tor-address] and [tor-rendezvous] for the details of the\n   creation\
    \ and use of .onion names.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  The ".onion" Special-Use Domain Name
  contents:
  - "2.  The \".onion\" Special-Use Domain Name\n   These properties have the following\
    \ effects upon parties using or\n   processing .onion names (as per [RFC6761]):\n\
    \   1.  Users: Human users are expected to recognize .onion names as\n       having\
    \ different security properties (see Section 1) and also as\n       being only\
    \ available through software that is aware of .onion\n       names.\n   2.  Application\
    \ Software: Applications (including proxies) that\n       implement the Tor protocol\
    \ MUST recognize .onion names as special\n       by either accessing them directly\
    \ or using a proxy (e.g., SOCKS\n       [RFC1928]) to do so.  Applications that\
    \ do not implement the Tor\n       protocol SHOULD generate an error upon the\
    \ use of .onion and\n       SHOULD NOT perform a DNS lookup.\n   3.  Name Resolution\
    \ APIs and Libraries: Resolvers MUST either respond\n       to requests for .onion\
    \ names by resolving them according to\n       [tor-rendezvous] or by responding\
    \ with NXDOMAIN [RFC1035].\n   4.  Caching DNS Servers: Caching servers, where\
    \ not explicitly\n       adapted to interoperate with Tor, SHOULD NOT attempt\
    \ to look up\n       records for .onion names.  They MUST generate NXDOMAIN for\
    \ all\n       such queries.\n   5.  Authoritative DNS Servers: Authoritative servers\
    \ MUST respond to\n       queries for .onion with NXDOMAIN.\n   6.  DNS Server\
    \ Operators: Operators MUST NOT configure an\n       authoritative DNS server\
    \ to answer queries for .onion.  If they\n       do so, client software is likely\
    \ to ignore any results (see\n       above).\n   7.  DNS Registries/Registrars:\
    \ Registrars MUST NOT register .onion\n       names; all such requests MUST be\
    \ denied.\n   Note that the restriction upon the registration of .onion names\
    \ does\n   not prohibit IANA from inserting a record into the root zone database\n\
    \   to reserve the name.\n   Likewise, it does not prevent non-DNS service providers\
    \ (such as\n   trust providers) from supporting .onion names in their applications.\n"
- title: 3.  IANA Considerations
  contents:
  - "3.  IANA Considerations\n   This document registers \".onion\" in the registry\
    \ of Special-Use\n   Domain Names [RFC6761].  See Section 2 for the registration\
    \ template.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security properties of .onion names can be\
    \ compromised if, for\n   example:\n   o  The server \"leaks\" its identity in\
    \ another way (e.g., in an\n      application-level message), or\n   o  The access\
    \ protocol is implemented or deployed incorrectly, or\n   o  The access protocol\
    \ itself is found to have a flaw.\n   Users must take special precautions to ensure\
    \ that the .onion name\n   they are communicating with is the intended one, as\
    \ attackers may be\n   able to find keys that produce service names that are visually\
    \ or\n   semantically similar to the desired service.  This risk is magnified\n\
    \   because .onion names are typically not human-meaningful.  It can be\n   mitigated\
    \ by generating human-meaningful .onion names (at\n   considerable computing expense)\
    \ or through users using bookmarks and\n   other trusted stores when following\
    \ links.\n   Also, users need to understand the difference between a .onion name\n\
    \   used and accessed directly via Tor-capable software, versus .onion\n   subdomains\
    \ of other top-level domain names and providers (e.g., the\n   difference between\
    \ example.onion and example.onion.tld).\n   The cryptographic label for a .onion\
    \ name is constructed by applying\n   a function to the public key of the server,\
    \ the output of which is\n   rendered as a string and concatenated with the string\
    \ .onion.\n   Dependent upon the specifics of the function used, an attacker may\
    \ be\n   able to find a key that produces a collision with the same .onion\n \
    \  name with substantially less work than a cryptographic attack on the\n   full\
    \ strength key.  If this is possible the attacker may be able to\n   impersonate\
    \ the service on the network.\n   A legacy client may inadvertently attempt to\
    \ resolve a .onion name\n   through the DNS.  This causes a disclosure that the\
    \ client is\n   attempting to use Tor to reach a specific service.  Malicious\n\
    \   resolvers could be engineered to capture and record such leaks, which\n  \
    \ might have very adverse consequences for the well-being of the user.\n   This\
    \ issue is mitigated if the client's software is updated to not\n   leak such\
    \ queries or updated to support [tor-rendezvous], or if the\n   client's DNS software\
    \ is updated to drop any request to the .onion\n   special-use domain name.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [Dingledine2004]\n              Dingledine, R.,\
    \ Mathewson, N., and P. Syverson, \"Tor: The\n              Second-Generation\
    \ Onion Router\", August 2004,\n              <https://svn.torproject.org/svn/projects/design-paper/\n\
    \              tor-design.html>.\n   [RFC2119]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n\
    \              DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC6761]  Cheshire, S. and M. Krochmal, \"Special-Use Domain Names\",\n \
    \             RFC 6761, DOI 10.17487/RFC6761, February 2013,\n              <http://www.rfc-editor.org/info/rfc6761>.\n\
    \   [tor-address]\n              Mathewson, N. and The Tor Project, \"Special\
    \ Hostnames in\n              Tor\", 2006, <https://spec.torproject.org/address-spec>.\n\
    \   [tor-rendezvous]\n              The Tor Project, \"Tor Rendezvous Specification\"\
    , April\n              2014, <https://spec.torproject.org/rend-spec>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC1034]  Mockapetris, P., \"Domain names -\
    \ concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,\
    \ November 1987,\n              <http://www.rfc-editor.org/info/rfc1034>.\n  \
    \ [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n          \
    \    specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November\
    \ 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC1123]  Braden, R., Ed.,\
    \ \"Requirements for Internet Hosts -\n              Application and Support\"\
    , STD 3, RFC 1123,\n              DOI 10.17487/RFC1123, October 1989,\n      \
    \        <http://www.rfc-editor.org/info/rfc1123>.\n   [RFC1928]  Leech, M., Ganis,\
    \ M., Lee, Y., Kuris, R., Koblas, D., and\n              L. Jones, \"SOCKS Protocol\
    \ Version 5\", RFC 1928,\n              DOI 10.17487/RFC1928, March 1996,\n  \
    \            <http://www.rfc-editor.org/info/rfc1928>.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,\
    \ January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n   [RFC7230]\
    \  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n             \
    \ Protocol (HTTP/1.1): Message Syntax and Routing\",\n              RFC 7230,\
    \ DOI 10.17487/RFC7230, June 2014,\n              <http://www.rfc-editor.org/info/rfc7230>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Roger Dingledine, Linus Nordberg, and Seth David\
    \ Schoen for\n   their input and review.\n   This specification builds upon previous\
    \ work by Christian Grothoff,\n   Matthias Wachs, Hellekin O. Wolf, Jacob Appelbaum,\
    \ and Leif Ryge to\n   register .onion in conjunction with other, similar Special-Use\
    \ Top-\n   Level Domain Names.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jacob Appelbaum\n   The Tor Project, Inc. & Technische\
    \ Universiteit Eindhoven\n   Email: jacob@appelbaum.net\n   Alec Muffett\n   Facebook\n\
    \   Email: alecm@fb.com\n"
