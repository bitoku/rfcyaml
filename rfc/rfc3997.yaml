- title: __initial_text__
  contents:
  - "                   Internet Printing Protocol (IPP):\n                   Requirements\
    \ for IPP Notifications\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents that together describe\
    \ all\n   aspects of the Internet Printing Protocol (IPP).  IPP is an\n   application-level\
    \ protocol that can be used for distributed printing\n   on the Internet.  There\
    \ are multiple parts to IPP, but the primary\n   architectural components are\
    \ the Model, the Protocol, and an\n   interface to Directory Services.  This document\
    \ provides a statement\n   of the requirements for notifications as an optional\
    \ part of an IPP\n   Service.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction. . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.   Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.   Scenarios . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  6\n   4.   Requirements. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 10\n   5.   Security Considerations for IPP Notifications Requirements.\
    \ . 12\n   6.   Internationalization Considerations . . . . . . . . . . . . .\
    \ 13\n   7.   IANA Considerations . . . . . . . . . . . . . . . . . . . . . 13\n\
    \   8.   References. . . . . . . . . . . . . . . . . . . . . . . . . . 14\n  \
    \      8.1.  Normative References. . . . . . . . . . . . . . . . . . 14\n    \
    \    8.2.  Informative References. . . . . . . . . . . . . . . . . 14\n   9. \
    \  Appendix A: Description of the Base IPP Documents . . . . . . 15\n   Authors'\
    \ Addresses . . . . . . . . . . . . . . . . . . . . . . . . 16\n   Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . . . . . . 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is one of a set of documents that together\
    \ describe all\n   aspects of the Internet Printing Protocol (IPP).  IPP is an\n\
    \   application level protocol that can be used for distributed printing\n   on\
    \ the Internet.  There are multiple parts to IPP, but the primary\n   architectural\
    \ components are the Model, the Protocol, and an\n   interface to Directory Services.\
    \  This document provides a statement\n   of the requirements for notifications\
    \ as an optional part of an IPP\n   Service.  See section 10 for a description\
    \ of the base IPP documents.\n   The scope of this requirements document covers\
    \ functionality used by\n   the following kinds of IPP Users: End Users, Print\
    \ Administrators,\n   and Operators.  See [RFC3995] for the extensions to the\
    \ Internet\n   Printing Protocol/1.0 (IPP) [RFC2565], [RFC2566], IPP/1.1 [RFC2911],\n\
    \   [RFC2910], and future versions.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   It is necessary to define a set of terms to be able to clearly\n\
    \   express the requirements for notification services in an IPP System.\n"
- title: 2.1.  Job-Submitting End User
  contents:
  - "2.1.  Job-Submitting End User\n   A human end user who submits a print job to\
    \ an IPP Printer.  This\n   person may or may not be within the same security\
    \ domain as the\n   Printer.  This person may or may not be geographically near\
    \ the\n   printer.\n"
- title: 2.2.  Administrator
  contents:
  - "2.2.  Administrator\n   A human user who established policy for and configures\
    \ the print\n   system.\n"
- title: 2.3.  Operator
  contents:
  - "2.3.  Operator\n   A human user who carries out the policy established by the\n\
    \   Administrator and controls the day-to-day running of the print\n   system.\n"
- title: 2.4.  Job-Submitting Application
  contents:
  - "2.4.  Job-Submitting Application\n   An application (for example, a batch application),\
    \ acting on behalf\n   of a Job Submitting End User, that submits a print job\
    \ to an IPP\n   Printer.  The application may or may not be within the same security\n\
    \   domain as the Printer.  This application may or may not be\n   geographically\
    \ near the printer.\n"
- title: 2.5.  Security Domain
  contents:
  - "2.5.  Security Domain\n   For the purposes of this discussion, the set of network\
    \ components\n   that can communicate without going through a proxy or firewall.\
    \  A\n   security domain may be geographically very large; for example,\n   anywhere\
    \ within example.com.\n"
- title: 2.6.  IPP Client
  contents:
  - "2.6.  IPP Client\n   The software component that sends IPP requests to an IPP\
    \ Printer\n   object and accepts IPP responses from an IPP Printer.\n"
- title: 2.7.  Job Recipient
  contents:
  - "2.7.  Job Recipient\n   A human who is the ultimate consumer of the print job.\
    \  In many cases\n   this will be the same person as the Job-Submitting End User,\
    \ but this\n   need not always be the case.  For example, if I use IPP to print\
    \ a\n   document on a printer in a business partner's office, I am the Job-\n\
    \   Submitting End User, and the person whom I intend the document for in\n  \
    \ my business partner's office is the Job Recipient.  Since one of the\n   goals\
    \ of IPP is to be able to print near the Job Recipient, we would\n   normally\
    \ expect that person to be in the same security domain as, and\n   geographically\
    \ near, the Printer.  However, this may not always be\n   the case.  For example,\
    \ I submit a print job across the Internet to a\n   XYZ's print shop.  I am both\
    \ the Submitting End User and the Job\n   Recipient, but I am neither near nor\
    \ in the same security domain as\n   the Printer.\n"
- title: 2.8.  Job Recipient Proxy
  contents:
  - "2.8.  Job Recipient Proxy\n   A person acting on behalf of the Job Recipient.\
    \  The Job Recipient\n   Proxy physically picks up the printed document from the\
    \ Printer if\n   the Job Recipient cannot do so.  The Proxy is by definition\n\
    \   geographically near and in the same security domain as the printer.\n   For\
    \ example, I submit a print job from home to be printed on a\n   printer at work.\
    \  I'd like my secretary to pick up the print job and\n   put it on my desk. \
    \ In this case,  I am acting as both a Job-\n   Submitting End User and a Job\
    \ Recipient.  My secretary is acting as a\n   Job Recipient Proxy.\n"
- title: 2.9.  Notification Subscriber
  contents:
  - "2.9.  Notification Subscriber\n   A client that requests the IPP Printer to send\
    \ Event Notifications to\n   one or more Notification Recipients.  A Notification\
    \ Subscriber may\n   be a Job-Submitting End User or an End User, an Operator,\
    \ or an\n   Administrator that is not submitting a job.\n"
- title: 2.10.  Notification Source
  contents:
  - "2.10.  Notification Source\n   The entity that sends Event Notifications.\n"
- title: 2.11.  Notification Recipient
  contents:
  - "2.11.  Notification Recipient\n   The entity that receives IPP Notifications\
    \ about Job and/or Printer\n   events.  A Notification Recipient may be a Job\
    \ Submitting End User, a\n   Job-Submitting Application, a Job Recipient, a Job\
    \ Recipient Proxy,\n   an Operator, an Administrator, etc., and his or her representative,\n\
    \   log file, usage statistics-gathering application, or other active or\n   passive\
    \ entities.\n"
- title: 2.12.  Notification Recipient Agent
  contents:
  - "2.12.  Notification Recipient Agent\n   A program that receives Event Notifications\
    \ on behalf of the\n   Notification Recipient.  The agent may take some action\
    \ on behalf of\n   the recipient, forward the notification to the recipient via\
    \ some\n   alternative means (for example, page the recipient), or queue the\n\
    \   notification for later retrieval by the recipient.\n"
- title: 2.13.  Event
  contents:
  - "2.13.  Event\n   An Event is an occurrence (either expected or unexpected) within\
    \ the\n   printing system of a change of state, condition, or configuration of\n\
    \   a Job or Printer object.\n"
- title: 2.14.  Event Notification
  contents:
  - "2.14.  Event Notification\n   When an event occurs, an Event Notification is\
    \ generated that fully\n   describes the event (what the event was, where it occurred,\
    \ when it\n   occurred, etc.).  Event Notifications are delivered to all the\n\
    \   Notification Recipients that are subscribed to that Event, if any.\n   The\
    \ Event Notification is delivered to the address of the\n   Notification Recipient\
    \ by using the notification delivery method\n   defined in the subscription. \
    \ However, an Event Notification is sent\n   ONLY if there is a corresponding\
    \ subscription.\n"
- title: 2.15.  Notification Subscription
  contents:
  - "2.15.  Notification Subscription\n   A Notification Subscription is a request\
    \ by a Notification Subscriber\n   to the IPP Printer to send Event Notifications\
    \ to specified\n   Notification Recipient(s) when an event occurs.\n"
- title: 2.16.  Notification Attributes
  contents:
  - "2.16.  Notification Attributes\n   IPP Objects (for example, a print job) from\
    \ which notification are\n   being sent may have associated attributes.  A user\
    \ may want to have\n   one or more of these returned along with a particular notification.\n\
    \   In general, these may include any attribute associated with the\n   object\
    \ emitting the notification.  Examples include the following:\n     number-of-intervening\
    \ jobs\n     job-k-octets\n     job-k-octets processed\n     job impressions\n\
    \     job-impressions-interpreted\n     job-impressions-completed\n     impressionsCompletedCurrentCopy\
    \ (job MIB)\n     sheetCompletedCopyNumber (job MIB)\n     sheetsCompletedDocumentNumber\
    \ (job MIB)\n     Copies-requested\n     Copy-type\n     Output-destination\n\
    \     Job-state-reasons\n     Job ID\n     Printer URI\n     Subscription ID (for\
    \ job independent subscription)\n"
- title: 2.17.  Notification Delivery Method (or Delivery Method for Short)
  contents:
  - "2.17.  Notification Delivery Method (or Delivery Method for Short)\n   Event\
    \ Notifications are delivered by using a Delivery Method.  An\n   example of a\
    \ Delivery Method is email.\n"
- title: 2.18.  Immediate Notification
  contents:
  - "2.18.  Immediate Notification\n   Notifications sent to the Notification Recipient\
    \ or the Notification\n   Recipient's agent in such a way that the notification\
    \ arrives\n   immediately, within the limits of common addressing, routing, network\n\
    \   congestion, and quality of service.\n"
- title: 2.19.  Store-and-Forward Notification
  contents:
  - "2.19.  Store-and-Forward Notification\n   Notifications that are not necessarily\
    \ delivered to Notification\n   Recipients immediately but are queued for delivery\
    \ by an intermediate\n   network application, for later retrieval.  Email is an\
    \ example of a\n   store-and-forward notification delivery method.\n"
- title: 2.20.  Reliable Delivery of Notifications
  contents:
  - "2.20.  Reliable Delivery of Notifications\n   Notifications that are delivered\
    \ by a reliable delivery of packets or\n   character stream, with acknowledgement\
    \ and retry, so that delivery of\n   the notification is guaranteed within determinate\
    \ time limits.  For\n   example, if the Notification Recipient has logged off\
    \ and gone home\n   for the day, an immediate notification cannot be guaranteed,\
    \ even\n   when sent over a reliable transport, because there is nothing there\n\
    \   to catch it.  Guaranteed delivery requires both store-and-forward\n   notification\
    \ and a reliable transport.\n"
- title: 2.21.  Notification over Unreliable Transport
  contents:
  - "2.21.  Notification over Unreliable Transport\n   Notifications are delivered\
    \ via the fundamental transport address and\n   routing framework, but no acknowledgement\
    \ or retry is required.\n   Process-to-process communications, if involved, are\
    \ unconstrained.\n"
- title: 2.22.  Human-Consumable Notification
  contents:
  - "2.22.  Human-Consumable Notification\n   Notifications intended to be consumed\
    \ by human end users only.  Email\n   would be an example of a Human-Consumable\
    \ Notification, though it\n   could also contain Machine-Consumable Notification.\n"
- title: 2.23.  Machine-Consumable Notification
  contents:
  - "2.23.  Machine-Consumable Notification\n   Notifications that are intended for\
    \ consumption by a program only,\n   such as an IPP Client.  Machine-Consumable\
    \ Notifications may not\n   contain human-readable information.  Do we need both\
    \ human and\n   machine? Machine readable is intended for application-to-application\n\
    \   only.  The Notification Recipient could process the machine-readable\n   Event\
    \ Notification into human-readable format.\n"
- title: 2.24.  Mixed Notification
  contents:
  - "2.24.  Mixed Notification\n   A mixed notification contains both Human-Consumable\
    \ and Machine-\n   Consumable information.\n"
- title: 3.  Scenarios
  contents:
  - "3.  Scenarios\n   1.   Sitting in my office, I submit a print job to the printer\
    \ down\n        the hall.  I am in the same security domain as the printer and,\n\
    \        of course, geographically near.  I want to know immediately when\n  \
    \      my print job will be completed (or if there is a problem)\n        because\
    \ the document I am working on is urgent.  I submit the\n        print job with\
    \ the following attributes:\n        -  Notification Recipient: Me\n        -\
    \  Notification Events: All\n        -  Notification Attributes: Job-state-reason\n\
    \        -  Notification Type: Immediate\n   2.   Working from home, I submit\
    \ a print job to the same printer as\n        in the previous example.  However,\
    \ I am not at work, I cannot\n        physically get the print file or do anything\
    \ with it.  It can\n        wait until I get to work this afternoon.  However,\
    \ I'd like my\n        secretary to pick up the output and put it on my desk so\
    \ that it\n        doesn't get lost or misfiled.  I'd also like a store-and-forward\n\
    \        notification sent to my email so that when I get to work I can\n    \
    \    tell whether there was a problem with the print job.  I submit a\n      \
    \  print job with the following attributes:\n        -  Notification Recipient:\
    \ My secretary\n        -  Notification Events: Print complete\n        -  Notification\
    \ Type: Immediate\n        -  Notification Recipient:  Me\n        -  Notification\
    \ Events:  Print complete\n        -  Notification Attributes:  Impressions completed\n\
    \        -  Notification Type: Store and forward\n   3.   Sitting in my office,\
    \ I submit a print job to a client at an\n        engineering firm my company\
    \ works with on a daily basis.  The\n        engineering firm is in Belgium. \
    \ I would like my client to know\n        when the print job is complete so that\
    \ she can pick it up from\n        the printer in her building.  It is important\
    \ that she review it\n        right away and send her comments back to me.  I\
    \ submit the print\n        job with the following attributes:\n        -  Notification\
    \ Recipient: Client at engineering firm\n        -  Notification Events: Print\
    \ complete\n        -  Notification Type: Immediate\n        -  Notification Language:\
    \ French\n   4.   From a hotel room, I send a print job to a Kinko's store in\
    \ the\n        town I am working in, in order to get a printed report for the\n\
    \        meeting I am attending in the morning.  As I'm going out to\n       \
    \ dinner after I get this job submitted, an immediate notification\n        won't\
    \ do me much good.  However, I'd like to check in the\n        morning before\
    \ I drive to the Kinko's store to see whether the\n        file has been printed.\
    \  An email notification is sufficient for\n        this purpose.  I submit the\
    \ print job with the following\n        attributes:\n        -  Notification Recipient:\
    \ Me\n        -  Notification Events: Print complete\n        -  Notification\
    \ Type: Store and forward\n   5.   I am printing a large, complex print file.\
    \  I want to have some\n        immediate feedback on the progress of the print\
    \ job as it\n        prints.  I submit the print job with the following attributes:\n\
    \        -  Notification Recipient: Me\n        -  Notification Type: Immediate\n\
    \        -  Notification Events:  All state transitions\n        -  Notification\
    \ Attributes: Impression completed\n   6.   I am an operator and one of my duties\
    \ is to keep the printer\n        running.  I subscribe independently from a job\
    \ submission so\n        that my subscription outlasts any particular job.  I\
    \ subscribe\n        with the following attributes:\n        -  Notification Recipient:\
    \ Me\n        -  Notification Type: Immediate\n        -  Notification Events:\
    \ All Printer state transitions\n        -  Notification Attributes: Printer state,\
    \ printer state\n           reasons, device powering up, device powering down\n\
    \   7.   I am a usage statistics gathering application.  I subscribe\n       \
    \ independently from a job submission so that my subscription\n        outlasts\
    \ any particular job.  My subscription may persist across\n        power cycles.\
    \  I subscribe with the following attributes:\n        -  Notification Recipient:\
    \ Me\n        -  Notification Type: Immediate\n        -  Notification Events:\
    \ Job completion\n        -  Notification Attributes: Impression completed, sheets\n\
    \           completed, time submitted, time started, time completed, job\n   \
    \        owner, job size in octets, etc.\n   8.   I am a client application program\
    \ that displays a list of jobs\n        currently queued for printing on a printer.\
    \  I display the\n        \"job-name\", \"job-state\", \"job-state-reasons\",\
    \ \"page-count\", and\n        \"intervening-jobs\", either for the user's jobs\
    \ or for all jobs.\n        The window displaying the job list remains open for\
    \ an\n        independent amount of time, and it is desired that it represent\n\
    \        the current state of the queue.  It is desired that the\n        application\
    \ only perform a slow poll in order to recover from\n        any missed notifications.\
    \  So the event delivery mechanism\n        provides the means to update the screen\
    \ on all needed changes,\n        including querying for some attributes that\
    \ may not be delivered\n        in the Notification.\n   9.   I am a client application\
    \ program that displays a list of\n        printers.  For each Printer, I display\
    \ the current state and\n        configuration.  The window displaying the printer\
    \ list remains\n        open for an independent amount of time, and it is desired\
    \ that\n        it represent the current state of each printer.  It is desired\n\
    \        that the application only need to perform a slow poll in order\n    \
    \    to recover from any missed notifications.  So the event delivery\n      \
    \  mechanism provides the means to update the screen on all needed\n        changes,\
    \ including querying for some attributes that may not be\n        delivered in\
    \ the Notification.\n   10.  I am an IPP Server that controls one or more devices\
    \ and that\n        implements an IPP Printer object to represent each device.\
    \  I\n        want to support IPP Notification for each of the IPP Printer\n \
    \       objects that I implement.  Many of these devices do not support\n    \
    \    notification (or IPP).  So I need to support the IPP\n        Notification\
    \ semantics specified for each IPP Printer object\n        myself on behalf of\
    \ each of the devices that each of the IPP\n        Printer objects represents.\
    \  When I accept an IPP job creation\n        requests, I convert it to what the\
    \ device will accept.  In some\n        cases, I must poll the devices in order\
    \ to be informed of their\n        job and device state and state changes to be\
    \ able to send IPP\n        Notifications to subscribed Notification Recipients.\n\
    \   11.  I am an IPP Server that controls one or more devices and that\n     \
    \   implements an IPP Printer object to represent each device.  I\n        want\
    \ to support IPP Notification for each of the IPP Printer\n        objects that\
    \ I implement.  These devices all support IPP,\n        including IPP Notification.\
    \  I would like the design choice for\n        supporting IPP Notification for\
    \ these objects either (1) by\n        forwarding the notification to the IPP\
    \ Printers that I, alone,\n        control and have them send the notifications\
    \ to the intended\n        Notification Recipients without my involvement, or\
    \ (2) by\n        replacing the notification submitted with the Job to indicate\
    \ me\n        as the Notification Recipient; in turn I will forward\n        Notifications\
    \ to the Notification Recipients requested by my\n        clients.  Most of the\
    \ rest of the contents of the IPP Job I send\n        to the IPP Printers I control\
    \ will be the same as those that I\n        receive from my IPP clients.\n   12.\
    \  I am an IPP Server that controls one or more devices and that\n        implements\
    \ an IPP Printer object to represent each device.  I\n        want to support\
    \ IPP Notification for each of the IPP Printer\n        objects that I implement.\
    \  These devices all support IPP,\n        including IPP Notification.  Because\
    \ these IPP Printers MAY also\n        be controlled by other servers (using IPP\
    \ or other protocols), I\n        only want job events for the jobs that I send,\
    \ but I do want\n        Printer events all the time, so that I can show proper\
    \ Printer\n        state to my clients.  So I subscribe to these IPP Printers\
    \ for\n        Printer events with a long-standing subscription, with myself as\n\
    \        the Notification Recipient.  When I get a Job Creation request,\n   \
    \     I decide to which IPP Printer to send the job.  When I do so, I\n      \
    \  also add a job subscription for Job events, with me as the\n        Notification\
    \ Recipient to the job's job subscriptions supplied\n        by my clients (this\
    \ usage is called \"piggybacking\").  These IPP\n        Printers automatically\
    \ remove their job subscriptions when the\n        job finishes, as for all job\
    \ subscriptions, so that I no longer\n        get Job events when my jobs are\
    \ completed.\n"
- title: 4.  Requirements
  contents:
  - "4.  Requirements\n   The following requirements are intended to be met by the\
    \ IPP\n   Notification specification (not the implementation).  The following\n\
    \   are true for the resulting IPP Notification Specification document:\n   1.\
    \  It must indicate which of these requirements are REQUIRED and\n       which\
    \ are OPTIONAL for a conforming implementation to support.\n       See [RFC2911],\
    \ section 12.1, for the definition of these\n       important conformance terms.\n\
    \   2.  It must be designed so that an IPP Printer can transparently\n       support\
    \ the IPP Notification semantics by using third-party\n       notification services\
    \ that exist today or that may be\n       standardized in the future.\n   3. \
    \ It must define a means for a Job-Submitting End User to specify\n       zero\
    \ or more Notification Recipients when submitting a print job.\n       A Submitter\
    \ will not be able to prevent out-of-band subscriptions\n       from authorized\
    \ persons, such as Operators.\n   4.  It must define a means, when specifying\
    \ a Notification Recipient,\n       for a Notification Subscriber to specify one\
    \ or more notification\n       events for that Notification Recipient, subject\
    \ to administrative\n       and security policy restrictions.  Any of the following\n\
    \       constitute Job or Printer Events for which a Job Submitting End\n    \
    \   User can specify that notifications be sent:\n       -  Any standard Printer\
    \ MIB alert\n       -  Job Received (transition from Unknown to Pending)\n   \
    \    -  Job Started (transition from Pending to Processing)\n       -  Page Complete\
    \ (page is stacked)\n       -  Collated Copy Complete (last sheet of collated\
    \ copy is\n          stacked)\n       -  Job Complete (transition from Processing\
    \ or Processing-stopped\n          to Completed)\n       -  Job Aborted (transition\
    \ from Pending, Pending-held,\n       -  Processing, or Processing-stopped to\
    \ Aborted)\n       -  Job Canceled (transition from Pending, Pending-held,\n \
    \      -  Processing, or Processing-held to Canceled)\n       -  Other job state\
    \ changes, such as paused, purged\n       -  Device problems for which the job\
    \ is destined\n       -  Job (interpreter) issues\n   5.   It must define how\
    \ an End User or Operator subscribes for\n        -  any set of Job Events for\
    \ a specific job, or\n        -  any set of Printer Events while a specific job\
    \ is not\n           complete.\n   6.   It must define how an End User or Operator\
    \ subscribes for the\n        following without having to submit a Job:\n    \
    \    -  Any set of Printer Events for a defined period.\n        -  Any set of\
    \ Job Events for all jobs, with no control over\n           which jobs.\n   7.\
    \   It must define how the Notification Subscriber is able to\n        specify\
    \ either immediate or store-and-forward notification\n        independently for\
    \ each Notification Recipient.  The means may be\n        explicit, or implied\
    \ by the method of delivery chosen by the Job\n        Submitting End User.\n\
    \   8.   It must define common delivery methods: e.g., email.\n   9.   It must\
    \ define how an IPP Printer validates its ability to\n        deliver an Event\
    \ by using the specified delivery scheme.  If it\n        does not support the\
    \ specified scheme, or if the specified\n        scheme is invalid for some reason,\
    \ then the IPP Printer accepts\n        and performs the request anyway and indicates\
    \ the unsupported\n        attribute values.  There is no requirement for the\
    \ IPP Printer\n        receiving the print request to validate the identity of\
    \ a\n        Notification Recipient, or the ability of the system to deliver\n\
    \        an event to that recipient as requested (for example, if the\n      \
    \  Notification Recipient is not at work today).\n   10.  It must define a class\
    \ of IPP event notification delivery\n        methods that can flow through corporate\
    \ firewalls.  However, an\n        IPP printer need not test to guarantee delivery\
    \ of the\n        notification through a firewall before accepting a print job.\n\
    \   11.  It may define a means to deliver a notification to the\n        submitting\
    \ client when the delivery of an event notification to\n        a specified Notification\
    \ Recipient fails.  A fallback means of\n        subscribers to determine whether\
    \ notifications have failed\n        (i.e., polling) may be provided.\n   12.\
    \  It must define a mechanism for localizing Human-Consumable\n        Notifications\
    \ by the Notification Source.\n   13.  It may define a way to specify whether\
    \ event delivery requires\n        acknowledgement back to the Notification Source.\n\
    \   14.  There must be a mechanism defined so that job-independent\n        subscriptions\
    \ do not become stale and do not require human\n        intervention to be removed.\
    \  However, a subscription must not be\n        deemed stale only if it is unable\
    \ to deliver an Event\n        Notification, as temporary Notification delivery\
    \ problems must\n        be tolerated.\n   15.  A mechanism must be defined so\
    \ that an Event Subscriber is able\n        to add an Event Subscription to a\
    \ Job after the Job has been\n        submitted.\n   16.  A mechanism must be\
    \ defined so that a client is able to cancel\n        an Event Subscription on\
    \ a job or printer after the job has been\n        submitted.\n   17.  A mechanism\
    \ must be defined so that a client can obtain the set\n        of current Subscriptions.\n"
- title: 5.  Security Considerations for IPP Notifications Requirements
  contents:
  - "5.  Security Considerations for IPP Notifications Requirements\n   By far the\
    \ biggest security concern is the abuse of notification:\n   sending unwanted\
    \ notifications sent to third parties (i.e., spam).\n   The problem is made worse\
    \ by notification addresses that may be\n   redistributed to multiple parties\
    \ (e.g., mailing lists).  Scenarios\n   exist in which third-party notification\
    \ is required (see scenarios 2\n   and 3).  The fully secure solution would require\
    \ active agreement of\n   all recipients before anything is sent out.  However,\
    \ requirement 9\n   (\"There is no requirement for an IPP Printer receiving the\
    \ print\n   request to validate the identity of an event recipient\") argues\n\
    \   against this.  Certain systems may decide to disallow third-party\n   notifications\
    \ (a traditional fax model).\n   The same security issues are present when Clients\
    \ submit notification\n   requests to the IPP Printer as when they submit an IPP/1.1\
    \ print job\n   request.  The same mechanisms used by IPP/1.1 can therefore be\
    \ used\n   by the client notification submission.  Operations that require\n \
    \  authentication can use the HTTP authentication.  Operations that\n   require\
    \ privacy can use the HTTP/TLS privacy.\n   The notification access control model\
    \ should be similar to the IPP\n   access control model.  Creating a notification\
    \ subscription is\n   associated with a user.  Only the creator or an operator\
    \ can cancel\n   the subscription.  The system may limit the listing of items\
    \ to items\n   owned by the user.  Some subscriptions (e.g., those that have a\n\
    \   lifetime longer than a job) can be done only by privileged users\n   (operators\
    \ and/or administrators), if that is the authorization\n   policy.\n   The standard\
    \ security concerns (delivery to the right user, privacy\n   of content, tamper-proof\
    \ content) apply to the notification delivery.\n   IPP should use the security\
    \ mechanism of the delivery method used.\n   Some delivery mechanisms are more\
    \ secure than others.  Therefore,\n   sensitive notifications should use the delivery\
    \ method that has the\n   strongest security.\n"
- title: 6.  Internationalization Considerations
  contents:
  - "6.  Internationalization Considerations\n   The Human-Consumable Notification\
    \ must be localized to the natural\n   language and charset that Notification\
    \ Subscriber specifies within\n   the choice of natural languages and charsets\
    \ that the IPP Printer\n   supports.\n   The Machine-Consumable Notification data\
    \ uses the \"application/ipp\"\n   MIME media type.  It contains attributes whose\
    \ text values are\n   required to be in the natural language and charset that\
    \ the\n   Notification Subscriber specifies within the choice of natural\n   languages\
    \ and charsets that the IPP Printer supports.  See [RFC2566].\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   Some notification delivery methods have been registered\
    \ with IANA for\n   use in URLs.  These will be defined in other documents.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2910]   Herriot, R., Butler, S., Moore, P.,\
    \ Turner, R., and J.\n               Wenn, \"Internet Printing Protocol/1.1: Encoding\
    \ and\n               Transport\", RFC 2910, September 2000.\n   [RFC2911]   Hastings,\
    \ T., Herriot, R., deBry, R., Isaacson, S., and\n               P. Powell, \"\
    Internet Printing Protocol/1.1: Model and\n               Semantics\", RFC 2911,\
    \ September 2000.\n   [RFC3995]   Herriot, R. and T. Hastings, \"Internet Printing\
    \ Protocol\n               (IPP): Event Notifications and Subscriptions\", RFC\
    \ 3995,\n               March 2005.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC2565]   Herriot, R., Butler, S., Moore,\
    \ P., and R. Turner,\n               \"Internet Printing Protocol/1.0: Encoding\
    \ and Transport\",\n               RFC 2565, April 1999.\n   [RFC2566]   deBry,\
    \ R., Hastings, T., Herriot, R., Isaacson, S., and\n               P. Powell,\
    \ \"Internet Printing Protocol/1.0: Model and\n               Semantics\", RFC\
    \ 2566, April 1999.\n   [RFC2567]   Wright, F., \"Design Goals for an Internet\
    \ Printing\n               Protocol\", RFC 2567, April 1999.\n   [RFC2568]   Zilles,\
    \ S., \"Rationale for the Structure of the Model and\n               Protocol\
    \ for the Internet Printing Protocol\", RFC 2568,\n               April 1999.\n\
    \   [RFC2569]   Herriot, R., Hastings, T., Jacobs, N., and J. Martin,\n      \
    \         \"Mapping between LPD and IPP Protocols\", RFC 2569, April\n       \
    \        1999.\n   [RFC2639]   Hastings, T., Manros, C., Zehler, P., Kugler, C.,\
    \ and H.\n               Holst, \"Internet Printing Protocol/1.1: Implementor's\n\
    \               Guide\", RFC 3196, November 2001.\n"
- title: '9.  Appendix A: Description of the Base IPP Documents'
  contents:
  - "9.  Appendix A: Description of the Base IPP Documents\n   The base set of IPP\
    \ documents includes the following:\n      Design Goals for an Internet Printing\
    \ Protocol [RFC2567]\n      Rationale for the Structure and Model and Protocol\
    \ for the\n        Internet Printing Protocol [RFC2568]\n      Internet Printing\
    \ Protocol/1.1: Model and Semantics [RFC2911]\n      Internet Printing Protocol/1.1:\
    \ Encoding and Transport [RFC2910]\n      Internet Printing Protocol/1.1: Implementer's\
    \ Guide [RFC3196]\n      Mapping between LPD and IPP Protocols [RFC2569]\n   \"\
    Design Goals for an Internet Printing Protocol\" takes a broad look\n   at distributed\
    \ printing functionality, and it enumerates real-life\n   scenarios that help\
    \ clarify the features that need to be included in\n   a printing protocol for\
    \ the Internet.  It identifies requirements for\n   three types of users: end\
    \ users, operators, and administrators.  It\n   calls out a subset of end-user\
    \ requirements that are satisfied in\n   IPP/1.0 [RFC2566], [RFC2565].  A few\
    \ OPTIONAL operator operations\n   have been added to IPP/1.1 [RFC2911], [RFC2910].\n\
    \   \"Rationale for the Structure and Model and Protocol for the Internet\n  \
    \ Printing Protocol\" describes IPP from a high-level view, defines a\n   roadmap\
    \ for the various documents that form the suite of IPP\n   specification documents,\
    \ and gives background and rationale for the\n   IETF IPP working group's major\
    \ decisions.\n   \"Internet Printing Protocol/1.1: Model and Semantics\" describes\
    \ a\n   simplified model with abstract objects, their attributes, and their\n\
    \   operations.  The model introduces a Printer and a Job.  The Job\n   supports\
    \ multiple documents per Job.  The model document also\n   addresses security,\
    \ internationalization, and directory issues.\n   \"Internet Printing Protocol/1.1:\
    \ Encoding and Transport\" is a formal\n   mapping of the abstract operations\
    \ and attributes defined in the\n   model document onto HTTP/1.1 [RFC2616].  It\
    \ also defines the encoding\n   rules for a new Internet MIME media type called\
    \ \"application/ipp\".\n   This document also defines the rules for transporting\
    \ over HTTP a\n   message body whose Content-Type is \"application/ipp\".  This\
    \ document\n   defines the \"ipp\" scheme for identifying IPP printers and jobs.\n\
    \   \"Internet Printing Protocol/1.1: Implementer's Guide\" gives insight\n  \
    \ and advice to implementers of IPP clients and IPP objects.  It is\n   intended\
    \ to help them understand IPP/1.1 and some of the\n   considerations that may\
    \ assist them in the design of their client\n   and/or IPP object implementations.\
    \  For example, a typical order of\n   processing requests is given, including\
    \ error checking.  Motivation\n   for some of the specification decisions is also\
    \ included.\n   \"Mapping between LPD and IPP Protocols\" gives some advice to\n\
    \   implementers of gateways between IPP and LPD (Line Printer Daemon )\n   implementations.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tom Hastings (editor)\n   Xerox Corporation\n   701 S\
    \ Aviation Blvd,  ESAE 242\n   El Segundo, CA   90245\n   Phone: 310-333-6413\n\
    \   Fax:   310-333-6342\n   EMail: hastings@cp10.es.xerox.com\n   Roger deBry\n\
    \   Utah Valley State College\n   Phone: (801) 863-8848\n   EMail: debryro@uvsc.edu\n\
    \   Harry Lewis\n   IBM Corporation\n   6300 Diagonal Hwy\n   Boulder, CO 80301\n\
    \   Phone: (303) 924-5337\n   EMail: harryl@us.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
