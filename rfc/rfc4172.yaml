- title: __initial_text__
  contents:
  - '    iFCP - A Protocol for Internet Fibre Channel Storage Networking

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies an architecture and a gateway-to-gateway\n\
    \   protocol for the implementation of fibre channel fabric functionality\n  \
    \ over an IP network.  This functionality is provided through TCP\n   protocols\
    \ for fibre channel frame transport and the distributed\n   fabric services specified\
    \ by the fibre channel standards.  The\n   architecture enables internetworking\
    \ of fibre channel devices through\n   gateway-accessed regions with the fault\
    \ isolation properties of\n   autonomous systems and the scalability of the IP\
    \ network.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction..................................................\
    \  4\n       1.1.  Conventions used in This Document.......................  4\n\
    \             1.1.1.  Data Structures Internal to an Implementation...  4\n  \
    \     1.2.  Purpose of This Document................................  4\n   2.\
    \  iFCP Introduction.............................................  4\n       2.1.\
    \  Definitions.............................................  5\n   3.  Fibre Channel\
    \ Communication Concepts..........................  7\n       3.1.  The Fibre\
    \ Channel Network...............................  8\n       3.2.  Fibre Channel\
    \ Network Topologies........................  9\n             3.2.1.  Switched\
    \ Fibre Channel Fabrics.................. 11\n             3.2.2.  Mixed Fibre\
    \ Channel Fabric...................... 12\n       3.3.  Fibre Channel Layers and\
    \ Link Services.................. 12\n             3.3.1.  Fabric-Supplied Link\
    \ Services................... 13\n       3.4.  Fibre Channel Nodes.....................................\
    \ 14\n       3.5.  Fibre Channel Device Discovery.......................... 14\n\
    \       3.6.  Fibre Channel Information Elements...................... 15\n  \
    \     3.7.  Fibre Channel Frame Format.............................. 15\n    \
    \         3.7.1.  N_PORT Address Model............................ 16\n      \
    \ 3.8.  Fibre Channel Transport Services........................ 17\n       3.9.\
    \  Login Processes......................................... 18\n   4.  The iFCP\
    \ Network Model........................................ 18\n       4.1.  iFCP\
    \ Transport Services................................. 21\n             4.1.1.\
    \  Fibre Channel Transport Services Supported by\n                     iFCP............................................\
    \ 21\n       4.2.  iFCP Device Discovery and Configuration Management...... 21\n\
    \       4.3.  iFCP Fabric Properties.................................. 22\n  \
    \           4.3.1.  Address Transparency............................ 22\n    \
    \         4.3.2.  Configuration Scalability....................... 23\n      \
    \       4.3.3.  Fault Tolerance................................. 23\n       4.4.\
    \  The iFCP N_PORT Address Model........................... 24\n       4.5.  Operation\
    \ in Address Transparent Mode................... 25\n             4.5.1.  Transparent\
    \ Mode Domain ID Management........... 26\n             4.5.2.  Incompatibility\
    \ with Address Translation Mode... 26\n       4.6.  Operation in Address Translation\
    \ Mode................... 27\n             4.6.1.  Inbound Frame Address Translation...............\
    \ 28\n             4.6.2.  Incompatibility with Address Transparent Mode... 29\n\
    \   5.  iFCP Protocol................................................. 29\n  \
    \     5.1.  Overview ............................................... 29\n    \
    \         5.1.1.  iFCP Transport Services......................... 29\n      \
    \       5.1.2.  iFCP Support for Link Services.................. 30\n       5.2.\
    \  TCP Stream Transport of iFCP Frames..................... 30\n             5.2.1.\
    \  iFCP Session Model.............................. 30\n             5.2.2.  iFCP\
    \ Session Management......................... 31\n             5.2.3.  Terminating\
    \ iFCP Sessions....................... 39\n       5.3.  Fibre Channel Frame Encapsulation.......................\
    \ 40\n             5.3.1.  Encapsulation Header Format..................... 41\n\
    \             5.3.2.  SOF and EOF Delimiter Fields.................... 44\n  \
    \           5.3.3.  Frame Encapsulation............................. 45\n    \
    \         5.3.4.  Frame De-encapsulation.......................... 46\n   6. \
    \ TCP Session Control Messages.................................. 47\n       6.1.\
    \  Connection Bind (CBIND)................................. 50\n       6.2.  Unbind\
    \ Connection (UNBIND).............................. 52\n       6.3.  LTEST --\
    \ Test Connection Liveness....................... 54\n   7.  Fibre Channel Link\
    \ Services................................... 55\n       7.1.  Special Link Service\
    \ Messages........................... 56\n       7.2.  Link Services Requiring\
    \ Payload Address Translation..... 58\n       7.3.  Fibre Channel Link Services\
    \ Processed by iFCP........... 61\n             7.3.1.  Special Extended Link\
    \ Services.................. 63\n             7.3.2.  Special FC-4 Link Services......................\
    \ 83\n       7.4.  FLOGI Service Parameters Supported by an iFCP Gateway... 84\n\
    \   8.  iFCP Error Detection.......................................... 86\n  \
    \     8.1.  Overview................................................ 86\n    \
    \   8.2.  Stale Frame Prevention.................................. 86\n      \
    \       8.2.1.  Enforcing R_A_TOV Limits........................ 86\n   9.  Fabric\
    \ Services Supported by an iFCP Implementation........... 88\n       9.1.  F_PORT\
    \ Server........................................... 88\n       9.2.  Fabric Controller.......................................\
    \ 89\n       9.3.  Directory/Name Server................................... 89\n\
    \       9.4.  Broadcast Server........................................ 89\n  \
    \           9.4.1.  Establishing the Broadcast Configuration........ 90\n    \
    \         9.4.2.  Broadcast Session Management.................... 91\n      \
    \       9.4.3.  Standby Global Broadcast Server................. 91\n   10. iFCP\
    \ Security................................................. 91\n       10.1. Overview................................................\
    \ 91\n       10.2. iFCP Security Threats and Scope......................... 92\n\
    \             10.2.1. Context......................................... 92\n  \
    \           10.2.2. Security Threats................................ 92\n    \
    \         10.2.3. Interoperability with Security Gateways......... 93\n      \
    \       10.2.4. Authentication.................................. 93\n        \
    \     10.2.5. Confidentiality................................. 93\n          \
    \   10.2.6. Rekeying........................................ 93\n            \
    \ 10.2.7. Authorization................................... 94\n             10.2.8.\
    \ Policy Control.................................. 94\n             10.2.9. iSNS\
    \ Role....................................... 94\n       10.3. iFCP Security Design....................................\
    \ 94\n             10.3.1. Enabling Technologies........................... 94\n\
    \             10.3.2. Use of IKE and IPsec............................ 96\n  \
    \           10.3.3. Signatures and Certificate-Based Authentication. 98\n    \
    \   10.4. iSNS and iFCP Security.................................. 99\n      \
    \ 10.5. Use of iSNS to Distribute Security Policy............... 99\n       10.6.\
    \ Minimal Security Policy for an iFCP Gateway............. 99\n   11. Quality\
    \ of Service Considerations.............................100\n       11.1. Minimal\
    \ Requirements....................................100\n       11.2. High Assurance..........................................100\n\
    \   12. IANA Considerations...........................................101\n  \
    \ 13. Normative References..........................................101\n   14.\
    \ Informative References........................................103\n   Appendix\
    \ A.  iFCP Support for Fibre Channel Link Services.........105\n       A.1.  Basic\
    \ Link Services.....................................105\n       A.2.  Pass-Through\
    \ Link Services..............................105\n       A.3.  Special Link Services...................................107\n\
    \   Appendix B.  Supporting the Fibre Channel Loop Topology...........108\n  \
    \     B.1.  Remote Control of a Public Loop.........................108\n   Acknowledgements..................................................109\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [RFC2119].\n   Unless specified otherwise, numeric quantities\
    \ are given as decimal\n   values.\n   All diagrams that portray bit and byte\
    \ ordering, including the\n   depiction of structures defined by fibre channel\
    \ standards, adhere to\n   the IETF conventions whereby bit 0 is the most significant\
    \ bit and\n   the first addressable byte is in the upper left corner.  This IETF\n\
    \   convention differs from that used for INCITS T11 fibre channel\n   standards,\
    \ in which bit 0 is the least significant bit.\n"
- title: 1.1.1.  Data Structures Internal to an Implementation
  contents:
  - "1.1.1.  Data Structures Internal to an Implementation\n   To facilitate the specification\
    \ of required behavior, this document\n   may define and refer to internal data\
    \ structures within an iFCP\n   implementation.  Such structures are intended\
    \ for explanatory\n   purposes only and need not be instantiated within an implementation\n\
    \   as described in this specification.\n"
- title: 1.2.  Purpose of This Document
  contents:
  - "1.2.  Purpose of This Document\n   This is a standards-track document that specifies\
    \ a protocol for the\n   implementation of fibre channel transport services on\
    \ a TCP/IP\n   network.  Some portions of this document contain material from\n\
    \   standards controlled by INCITS T10 and T11.  This material is\n   included\
    \ here for informational purposes only.  The authoritative\n   information is\
    \ given in the appropriate NCITS standards document.\n   The authoritative portions\
    \ of this document specify the mapping of\n   standards-compliant fibre channel\
    \ protocol implementations to TCP/IP.\n   This mapping includes sections of this\
    \ document that describe the\n   \"iFCP Protocol\" (see Section 5).\n"
- title: 2.  iFCP Introduction
  contents:
  - "2.  iFCP Introduction\n   iFCP is a gateway-to-gateway protocol that provides\
    \ fibre channel\n   fabric services to fibre channel devices over a TCP/IP network.\
    \  iFCP\n   uses TCP to provide congestion control, error detection, and\n   recovery.\
    \  iFCP's primary objective is to allow interconnection and\n   networking of\
    \ existing fibre channel devices at wire speeds over an\n   IP network.\n   The\
    \ protocol and method of frame address translation described in\n   this document\
    \ permit the attachment of fibre channel storage devices\n   to an IP-based fabric\
    \ by means of transparent gateways.\n   The protocol achieves this transparency\
    \ by allowing normal fibre\n   channel frame traffic to pass through the gateway\
    \ directly, with\n   provisions, where necessary, for intercepting and emulating\
    \ the\n   fabric services required by a fibre channel device.\n"
- title: 2.1.  Definitions
  contents:
  - "2.1.  Definitions\n   Terms needed to describe the concepts presented in this\
    \ document are\n   presented here.\n   Address-translation mode -- A mode of gateway\
    \ operation in which the\n      scope of N_PORT fabric addresses, for locally\
    \ attached devices,\n      are local to the iFCP gateway region in which the devices\
    \ reside.\n   Address-transparent mode -- A mode of gateway operation in which\
    \ the\n      scope of N_PORT fabric addresses, for all fibre channel devices,\n\
    \      are unique to the bounded iFCP fabric to which the gateway\n      belongs.\n\
    \   Bounded iFCP Fabric -- The union of two or more gateway regions\n      configured\
    \ to interoperate in address-transparent mode.\n   DOMAIN_ID -- The value contained\
    \ in the high-order byte of a 24-bit\n      N_PORT fibre channel address.\n  \
    \ F_PORT -- The interface used by an N_PORT to access fibre channel\n      switched-fabric\
    \ functionality.\n   Fabric -- From [FC-FS]: \"The entity that interconnects N_PORTs\n\
    \      attached to it and is capable of routing frames by using only the\n   \
    \   address information in the fibre channel frame.\"\n   Fabric Port -- The interface\
    \ through which an N_PORT accesses a fibre\n      channel fabric.  The type of\
    \ fabric port depends on the fibre\n      channel fabric topology.  In this specification,\
    \ all fabric port\n      interfaces are considered functionally equivalent.\n\
    \   FC-2 -- The fibre channel transport services layer, described in\n      [FC-FS].\n\
    \   FC-4 -- The fibre channel mapping of an upper-layer protocol, such as\n  \
    \    [FCP-2], the fibre channel to SCSI mapping.\n   Fibre Channel Device -- An\
    \ entity implementing the functionality\n      accessed through an FC-4 application\
    \ protocol.\n   Fibre Channel Network -- A native fibre channel fabric and all\n\
    \      attached fibre channel nodes.\n   Fibre Channel Node -- A collection of\
    \ one or more N_PORTs controlled\n      by a level above the FC-2 layer.  A node\
    \ is attached to a fibre\n      channel fabric by means of the N_PORT interface,\
    \ described in\n      [FC-FS].\n   Gateway Region -- The portion of an iFCP fabric\
    \ accessed through an\n      iFCP gateway by a remotely attached N_PORT.  Fibre\
    \ channel devices\n      in the region consist of all those locally attached to\
    \ the\n      gateway.\n   iFCP -- The protocol discussed in this document.\n \
    \  iFCP Frame -- A fibre channel frame encapsulated in accordance with\n     \
    \ the FC Frame Encapsulation Specification [ENCAP] and this\n      specification.\n\
    \   iFCP Portal -- An entity representing the point at which a logical or\n  \
    \    physical iFCP device is attached to the IP network.  The network\n      address\
    \ of the iFCP portal consists of the IP address and TCP port\n      number to\
    \ which a request is sent when the TCP connection is\n      created for an iFCP\
    \ session (see Section 5.2.1).\n   iFCP Session -- An association comprised of\
    \ a pair of N_PORTs and a\n      TCP connection that carries traffic between them.\
    \  An iFCP session\n      may be created as the result of a PLOGI fibre channel\
    \ login\n      operation.\n   iSNS -- The server functionality and IP protocol\
    \ that provide storage\n      name services in an iFCP network.  Fibre channel\
    \ name services are\n      implemented by an iSNS name server, as described in\
    \ [ISNS].\n   Locally Attached Device -- With respect to a gateway, a fibre channel\n\
    \      device accessed through the fibre channel fabric to which the\n      gateway\
    \ is attached.\n   Logical iFCP Device -- The abstraction representing a single\
    \ fibre\n      channel device as it appears on an iFCP network.\n   N_PORT --\
    \ An iFCP or fibre channel entity representing the interface\n      to fibre channel\
    \ device functionality.  This interface implements\n      the fibre channel N_PORT\
    \ semantics, specified in [FC-FS].  Fibre\n      channel defines several variants\
    \ of this interface that depend on\n      the fibre channel fabric topology. \
    \ As used in this document, the\n      term applies equally to all variants.\n\
    \   N_PORT Alias --  The N_PORT address assigned by a gateway to\n      represent\
    \ a remote N_PORT accessed via the iFCP protocol.\n   N_PORT fabric address --\
    \ The address of an N_PORT within the fibre\n      channel fabric.\n   N_PORT\
    \ ID -- The address of a locally attached N_PORT within a\n      gateway region.\
    \  N_PORT IDs are assigned in accordance with the\n      fibre channel rules for\
    \ address assignment, specified in [FC-FS].\n   N_PORT Network Address -- The\
    \ address of an N_PORT in the iFCP\n      fabric.  This address consists of the\
    \ IP address and TCP port\n      number of the iFCP Portal and the N_PORT ID of\
    \ the locally\n      attached fibre channel device.\n   Port Login (PLOGI) --\
    \ The fibre channel Extended Link Service (ELS)\n      that establishes an iFCP\
    \ session through the exchange of\n      identification and operation parameters\
    \ between an originating\n      N_PORT and a responding N_PORT.\n   Remotely Attached\
    \ Device -- With respect to a gateway, a fibre\n      channel device accessed\
    \ from the gateway by means of the iFCP\n      protocol.\n   Unbounded iFCP Fabric\
    \ -- The union of two or more gateway regions\n      configured to interoperate\
    \ in address-translation mode.\n"
- title: 3.  Fibre Channel Communication Concepts
  contents:
  - "3.  Fibre Channel Communication Concepts\n   Fibre channel is a frame-based,\
    \ serial technology designed for peer-\n   to-peer communication between devices\
    \ at gigabit speeds and with low\n   overhead and latency.\n   This section contains\
    \ a discussion of the fibre channel concepts that\n   form the basis for the iFCP\
    \ network architecture and protocol\n   described in this document.  Readers familiar\
    \ with this material may\n   skip to Section 4.\n   Material presented in this\
    \ section is drawn from the following T11\n   specifications:\n   -- The Fibre\
    \ Channel Framing and Signaling Interface, [FC-FS]\n   -- Fibre Channel Switch\
    \ Fabric -2, [FC-SW2]\n   -- Fibre Channel Generic Services, [FC-GS3]\n   -- Fibre\
    \ Channel Fabric Loop Attachment, [FC-FLA]\n   The reader will find an in-depth\
    \ treatment of the technology in\n   [KEMCMP] and [KEMALP].\n"
- title: 3.1.  The Fibre Channel Network
  contents:
  - "3.1.  The Fibre Channel Network\n   The fundamental entity in fibre channel is\
    \ the fibre channel network.\n   Unlike a layered network architecture, a fibre\
    \ channel network is\n   largely specified by functional elements and the interfaces\
    \ between\n   them.  As shown in Figure 1, these consist, in part, of the\n  \
    \ following:\n   a) N_PORTs -- The end points for fibre channel traffic.  In the\
    \ FC\n      standards, N_PORT interfaces have several variants, depending on\n\
    \      the topology of the fabric to which they are attached.  As used in\n  \
    \    this specification, the term applies to any one of the variants.\n   b) FC\
    \ Devices -- The fibre channel devices to which the N_PORTs\n      provide access.\n\
    \   c) Fabric Ports -- The interfaces within a fibre channel network that\n  \
    \    provide attachment for an N_PORT.  The types of fabric port depend\n    \
    \  on the fabric topology and are discussed in Section 3.2.\n   d) The network\
    \ infrastructure for carrying frame traffic between\n      N_PORTs.\n   e) Within\
    \ a switched or mixed fabric (see Section 3.2), a set of\n      auxiliary servers,\
    \ including a name server for device discovery\n      and network address resolution.\
    \  The types of service depend on\n      the network topology.\n         +--------+\
    \   +--------+          +--------+  +--------+\n         |  FC    |   |  FC  \
    \  |          |  FC    |  |  FC    |\n         | Device |   | Device |<-------->|\
    \ Device |  | Device |\n         |........|   |........|          |........| \
    \ |........|\n         | N_PORT |   | N_PORT |          | N_PORT |  | N_PORT |\n\
    \         +---+----+   +----+---+          +----+---+  +----+---+\n          \
    \   |             |                   |           |\n         +---+----+   +----+---+\
    \          +----+---+  +----+---+\n         | Fabric |   | Fabric |          |\
    \ Fabric |  | Fabric |\n         | Port   |   | Port   |          | Port   | \
    \ | Port   |\n         +========+===+========+==========+========+==+========+\n\
    \         |                        Fabric                       |\n         |\
    \                          &                          |\n         |          \
    \           Fabric Services                 |\n         +-----------------------------------------------------+\n\
    \                   Figure 1. A Fibre Channel Network\n   The following sections\
    \ describe fibre channel network topologies and\n   give an overview of the fibre\
    \ channel communications model.\n"
- title: 3.2.  Fibre Channel Network Topologies
  contents:
  - "3.2.  Fibre Channel Network Topologies\n   The principal fibre channel network\
    \ topologies consist of the\n   following:\n   a) Arbitrated Loop -- A series\
    \ of N_PORTs connected together in\n      daisy-chain fashion.  In [FC-FS], loop-connected\
    \ N_PORTs are\n      referred to as NL_PORTs.  Data transmission between NL_PORTs\n\
    \      requires arbitration for control of the loop in a manner similar\n    \
    \  to that of a token ring network.\n   b) Switched Fabric --  A network consisting\
    \ of switching elements, as\n      described in Section 3.2.1.\n   c) Mixed Fabric\
    \ -- A network consisting of switches and \"fabric-\n      attached\" loops. \
    \ A description can be found in [FC-FLA].  A\n      loop-attached N_PORT (NL_PORT)\
    \ is connected to the loop through an\n      L_PORT and accesses the fabric by\
    \ way of an FL_PORT.\n   Depending on the topology, the N_PORT and its means of\
    \ network\n   attachment may be one of the following:\n         FC Network\n \
    \        Topology         Network Interface   N_PORT Variant\n         ---------------\
    \  -----------------   --------------\n         Loop             L_PORT      \
    \        NL_PORT\n         Switched         F_PORT              N_PORT\n     \
    \    Mixed            FL_PORT via L_PORT  NL_PORT\n                          F_PORT\
    \              N_PORT\n   The differences in each N_PORT variant and its corresponding\
    \ fabric\n   port are confined to the interactions between them.  To an external\n\
    \   N_PORT, all fabric ports are transparent, and all remote N_PORTs are\n   functionally\
    \ identical.\n"
- title: 3.2.1.  Switched Fibre Channel Fabrics
  contents:
  - "3.2.1.  Switched Fibre Channel Fabrics\n   An example of a multi-switch fibre\
    \ channel fabric is shown in Figure\n   2.\n                +----------+     \
    \     +----------+\n                |    FC    |          |  FC      |\n     \
    \           |   Device |          | Device   |\n                |..........| \
    \         |..........|\n                |   N_PORT |<........>| N_PORT   |\n \
    \               +----+-----+          +-----+----+\n                     |   \
    \                   |\n                +----+-----+          +-----+----+\n  \
    \              | F_PORT   |          | F_PORT   |\n      ==========+==========+==========+==========+==============\n\
    \                |  FC      |          | FC       |\n                |  Switch\
    \  |          | Switch   |\n                +----------+          +----------+\
    \ Fibre Channel\n                |Inter-    |          |Inter-    |   Fabric\n\
    \                |Switch    |          |Switch    |\n                |Interface\
    \ |          |Interface |\n                +-----+----+          +-----+----+\n\
    \                      |                     |\n                      |      \
    \               |\n                +-----+----+----------+-----+----+\n      \
    \          |Inter-    |          |Inter-    |\n                |Switch    |  \
    \        |Switch    |\n                |Interface |          |Interface |\n  \
    \              +----------+          +----------+\n                |         \
    \   FC Switch           |\n                |                                |\n\
    \                +--------------------------------+\n            Figure 2. Multi-Switch\
    \ Fibre Channel Fabric\n   The interface between switch elements is either a proprietary\n\
    \   interface or the standards-compliant E_PORT interface, which is\n   described\
    \ by the FC-SW2 specification, [FC-SW2].\n"
- title: 3.2.2.   Mixed Fibre Channel Fabric
  contents:
  - "3.2.2.   Mixed Fibre Channel Fabric\n   A mixed fabric contains one or more arbitrated\
    \ loops connected to a\n   switched fabric as shown in Figure 3.\n           \
    \     +----------+          +----------+   +---------+\n                |    FC\
    \    |          |  FC      |   |  FC     |\n                |   Device |     \
    \     | Device   |   | Device  |\n                |..........| FC       |..........|\
    \   |.........|\n                |   N_PORT |<........>| NL_PORT  +---+ NL_PORT\
    \ |\n                +----+-----+ Traffic  +-----+----+   +----+----+\n      \
    \               |                      |   FC Loop   |\n                +----+-----+\
    \          +-----+----+        |\n                | F_PORT   |          | FL_PORT\
    \  +--------+\n                |          |          |          |\n      ==========+==========+==========+==========+==============\n\
    \                |  FC      |          | FC       |\n                |  Switch\
    \  |          | Switch   |\n                +----------+          +----------+\n\
    \                |Inter-    |          |Inter-    |\n                |Switch \
    \   |          |Switch    |\n                |Interface |          |Interface\
    \ |\n                +-----+----+          +-----+----+\n                    \
    \  |                     |\n                      |                     |\n  \
    \              +-----+----+----------+-----+----+\n                |Inter-   \
    \ |          |Inter-    |\n                |Switch    |          |Switch    |\n\
    \                |Interface |          |Interface |\n                +----------+\
    \          +----------+\n                |            FC Switch           |\n\
    \                |                                |\n                +--------------------------------+\n\
    \               Figure 3. Mixed Fibre Channel Fabric\n   As noted previously,\
    \ the protocol for communications between peer\n   N_PORTs is independent of the\
    \ fabric topology, N_PORT variant, and\n   type of fabric port to which an N_PORT\
    \ is attached.\n"
- title: 3.3.  Fibre Channel Layers and Link Services
  contents:
  - "3.3.  Fibre Channel Layers and Link Services\n   A fibre channel consists of\
    \ the following layers:\n      FC-0 -- The interface to the physical media.\n\
    \      FC-1 -- The encoding and decoding of data and out-of-band physical\n  \
    \    link control information for transmission over the physical media.\n    \
    \  FC-2 -- The transfer of frames, sequences, and Exchanges\n      comprising\
    \ protocol information units.\n      FC-3 -- Common Services.\n      FC-4 -- Application\
    \ protocols such as the fibre channel protocol\n      for SCSI (FCP).\n   In addition\
    \ to the layers defined above, a fibre channel defines a\n   set of auxiliary\
    \ operations, some of which are implemented within the\n   transport layer fabric,\
    \ called link services.  These are required in\n   order to manage the fibre channel\
    \ environment, establish\n   communications with other devices, retrieve error\
    \ information,\n   perform error recovery, and provide other similar services.\
    \  Some\n   link services are executed by the N_PORT.  Others are implemented\n\
    \   internally within the fabric.  These internal services are described\n   in\
    \ the next section.\n"
- title: 3.3.1.  Fabric-Supplied Link Services
  contents:
  - "3.3.1.  Fabric-Supplied Link Services\n   Servers that are internal to a switched\
    \ fabric handle certain classes\n   of Link Service requests and service-specific\
    \ commands.  The servers\n   appear as N_PORTs located at the 'well-known' N_PORT\
    \ fabric addresses\n   specified in [FC-FS].  Service requests use the standard\
    \ fibre\n   channel mechanisms for N_PORT-to-N_PORT communications.\n   All switched\
    \ fabrics must provide the following services:\n      Fabric F_PORT server --\
    \ Services N_PORT requests to access the\n      fabric for communications.\n \
    \     Fabric Controller -- Provides state change information to inform\n     \
    \ other FC devices when an N_PORT exits or enters the fabric (see\n      Section\
    \ 3.5).\n      Directory/Name Server - Allows N_PORTs to register information\
    \ in\n      a database, retrieve information about other N_PORTs, and to\n   \
    \   discover other devices as described in Section 3.5.\n   A switched fabric\
    \ may also implement the following optional services:\n      Broadcast Address/Server\
    \ -- Transmits single-frame, class 3\n      sequences to all N_PORTs.\n      Time\
    \ Server -- Intended for the management of fabric-wide\n      expiration timers\
    \ or elapsed time values; not intended for precise\n      time synchronization.\n\
    \      Management Server - Collects and reports management information,\n    \
    \  such as link usage, error statistics, link quality, and similar\n      items.\n\
    \      Quality of Service Facilitator - Performs fabric-wide bandwidth\n     \
    \ and latency management.\n"
- title: 3.4.  Fibre Channel Nodes
  contents:
  - "3.4.  Fibre Channel Nodes\n   A fibre channel node has one or more fabric-attached\
    \ N_PORTs.  The\n   node and its N_PORTs have the following associated identifiers:\n\
    \   a) A worldwide-unique identifier for the node.\n   b) A worldwide-unique identifier\
    \ for each N_PORT associated with the\n      node.\n   c) For each N_PORT attached\
    \ to a fabric, a 24-bit fabric-unique\n      address with the properties defined\
    \ in Section 3.7.1.  The fabric\n      address is the address to which frames\
    \ are sent.\n   Each worldwide-unique identifier is a 64-bit binary quantity with\
    \ the\n   format defined in [FC-FS].\n"
- title: 3.5.  Fibre Channel Device Discovery
  contents:
  - "3.5.  Fibre Channel Device Discovery\n   In a switched or mixed fabric, fibre\
    \ channel devices and changes in\n   the device configuration may be discovered\
    \ by means of services\n   provided by the fibre channel Name Server and Fabric\
    \ Controller.\n   The Name Server provides registration and query services that\
    \ allow a\n   fibre channel device to register its presence on the fabric and\
    \ to\n   discover the existence of other devices.  For example, one type of\n\
    \   query obtains the fabric address of an N_PORT from its 64-bit\n   worldwide-unique\
    \ name.  The full set of supported fibre channel name\n   server queries is specified\
    \ in [FC-GS3].\n   The Fabric Controller complements the static discovery capabilities\n\
    \   provided by the Name Server through a service that dynamically alerts\n  \
    \ a fibre channel device whenever an N_PORT is added or removed from\n   the configuration.\
    \  A fibre channel device receives these\n   notifications by subscribing to the\
    \ service as specified in [FC-FS].\n"
- title: 3.6.  Fibre Channel Information Elements
  contents:
  - "3.6.  Fibre Channel Information Elements\n   The fundamental element of information\
    \ in fibre channel is the frame.\n   A frame consists of a fixed header and up\
    \ to 2112 bytes of payload\n   with the structure described in Section 3.7.  The\
    \ maximum frame size\n   that may be transmitted between a pair of fibre channel\
    \ devices is\n   negotiable up to the payload limit, based on the size of the\
    \ frame\n   buffers in each fibre channel device and the path maximum\n   transmission\
    \ unit (MTU) supported by the fabric.\n   Operations involving the transfer of\
    \ information between N_PORT pairs\n   are performed through 'Exchanges'.  In\
    \ an Exchange, information is\n   transferred in one or more ordered series of\
    \ frames, referred to as\n   Sequences.\n   Within this framework, an upper layer\
    \ protocol is defined in terms of\n   transactions carried by Exchanges.  In turn,\
    \ each transaction\n   consists of protocol information units, each of which is\
    \ carried by\n   an individual Sequence within an Exchange.\n"
- title: 3.7.  Fibre Channel Frame Format
  contents:
  - "3.7.  Fibre Channel Frame Format\n   A fibre channel frame consists of a header,\
    \ payload and 32-bit CRC\n   bracketed by SOF and EOF delimiters.  The header\
    \ contains the control\n   information necessary to route frames between N_PORTs\
    \ and manage\n   Exchanges and Sequences.  The following diagram gives a schematic\n\
    \   view of the frame.\n               Bit  0                          31\n  \
    \                 +-----------------------------+\n            Word 0 |   Start-of-frame\
    \ Delimiter  |\n                   +-----+-----------------------+<----+\n   \
    \                |     | Destination N_PORT    |     |\n                 1 | \
    \    | Fabric Address (D_ID) |     |\n                   |     |  (24 bits)  \
    \          |     |\n                   +-----+-----------------------+   24-byte\n\
    \                   |     | Source N_PORT         |   Frame\n                \
    \ 2 |     | Fabric Address (S_ID) |   Header\n                   |     | (24 bits)\
    \             |     |\n                   +-----+-----------------------+    \
    \ |\n                 3 |    Control information for  |     |\n              \
    \   . |    frame type, Exchange     |     |\n                 . |    management,\
    \ IU           |     |\n                 . |    segmentation and         |   \
    \  |\n                 6 |    re-assembly              |     |\n             \
    \      +-----------------------------+<----+\n                 7 |           \
    \                  |\n                 . |        Frame payload        |\n   \
    \              . |       (0 - 2112 bytes)      |\n                 . |       \
    \                      |\n                 . |                             |\n\
    \                 . |                             |\n                   +-----------------------------+\n\
    \                 . |            CRC              |\n                   +-----------------------------+\n\
    \                 n |    End-of-Frame Delimiter   |\n                   +-----------------------------+\n\
    \                Figure 4. Fibre Channel Frame Format\n   The source and destination\
    \ N_PORT fabric addresses embedded in the\n   S_ID and D_ID fields represent the\
    \ physical addresses of originating\n   and receiving N_PORTs, respectively.\n"
- title: 3.7.1.  N_PORT Address Model
  contents:
  - "3.7.1.  N_PORT Address Model\n   N_PORT fabric addresses are 24-bit values with\
    \ the following format,\n   defined by the fibre channel specification [FC-FS]:\n\
    \            Bit   0         7 8         15 16       23\n                 +-----------+------------+----------+\n\
    \                 | Domain ID | Area ID    |  Port ID |\n                 +-----------+------------+----------+\n\
    \                 Figure 5. Fibre Channel Address Format\n   A fibre channel device\
    \ acquires an address when it logs into the\n   fabric.  Such addresses are volatile\
    \ and subject to change based on\n   modifications in the fabric configuration.\n\
    \   In a fibre channel fabric, each switch element has a unique Domain ID\n  \
    \ assigned by the principal switch.  The value of the Domain ID ranges\n   from\
    \ 1 to 239 (0xEF).  Each switch element, in turn, administers a\n   block of addresses\
    \ divided into area and port IDs.  An N_PORT\n   connected to an F_PORT receives\
    \ a unique fabric address, consisting\n   of the switch's Domain ID concatenated\
    \ with switch-assigned area and\n   port IDs.\n   A loop-attached NL_PORT (see\
    \ Figure 3) obtains the Port ID component\n   of its address during the loop initialization\
    \ process described in\n   [FC-AL2].  The area and domain IDs are supplied by\
    \ the fabric when\n   the fabric login (FLOGI) is executed.\n"
- title: 3.8.  Fibre Channel Transport Services
  contents:
  - "3.8.  Fibre Channel Transport Services\n   N_PORTs communicate by means of the\
    \ following classes of service,\n   which are specified in the fibre channel standard\
    \ ([FC-FS]):\n      Class 1 - A dedicated physical circuit connecting two N_PORTs.\n\
    \      Class 2 - A frame-multiplexed connection with end-to-end flow\n      control\
    \ and delivery confirmation.\n      Class 3 - A frame-multiplexed connection with\
    \ no provisions for\n      end-to-end flow control or delivery confirmation.\n\
    \      Class 4 -- A connection-oriented service, based on a virtual\n      circuit\
    \ model, providing confirmed delivery with bandwidth and\n      latency guarantees.\n\
    \      Class 6 -- A reliable multicast service derived from class 1.\n   Classes\
    \ 2 and 3 are the predominant services supported by deployed\n   fibre channel\
    \ storage and clustering systems.\n   Class 3 service is similar to UDP or IP\
    \ datagram service.  Fibre\n   channel storage devices using this class of service\
    \ rely on the ULP\n   implementation to detect and recover from transient device\
    \ and\n   transport errors.\n   For class 2 and class 3 service, the fibre channel\
    \ fabric is not\n   required to provide in-order delivery of frames unless it\
    \ is\n   explicitly requested by the frame originator (and supported by the\n\
    \   fabric).  If ordered delivery is not in effect, it is the\n   responsibility\
    \ of the frame recipient to reconstruct the order in\n   which frames were sent,\
    \ based on information in the frame header.\n"
- title: 3.9.  Login Processes
  contents:
  - "3.9.  Login Processes\n   The Login processes are FC-2 operations that allow\
    \ an N_PORT to\n   establish the operating environment necessary to communicate\
    \ with the\n   fabric, other N_PORTs, and ULP implementations accessed via the\n\
    \   N_PORT.  Three login operations are supported:\n   a) Fabric Login (FLOGI)\
    \ -- An operation whereby the N_PORT registers\n      its presence on the fabric,\
    \ obtains fabric parameters, such as\n      classes of service supported, and\
    \ receives its N_PORT address,\n   b) Port Login (PLOGI) -- An operation by which\
    \ an N_PORT establishes\n      communication with another N_PORT.\n   c) Process\
    \ Login (PRLOGI) -- An operation that establishes the\n      process-to-process\
    \ communications associated with a specific FC-4\n      ULP, such as FCP-2, the\
    \ fibre channel SCSI mapping.\n   Since N_PORT addresses are volatile, an N_PORT\
    \ originating a login\n   (PLOGI) operation executes a Name Server query to discover\
    \ the fibre\n   channel address of the remote device.  A common query type involves\n\
    \   use of the worldwide-unique name of an N_PORT to obtain the 24-bit\n   N_PORT\
    \ fibre channel address to which the PLOGI request is sent.\n"
- title: 4.  The iFCP Network Model
  contents:
  - "4.  The iFCP Network Model\n   The iFCP protocol enables the implementation of\
    \ fibre channel fabric\n   functionality on an IP network in which IP components\
    \ and technology\n   replace the fibre channel switching and routing infrastructure\n\
    \   described in Section 3.2.\n   The example of Figure 6 shows a fibre channel\
    \ network with attached\n   devices.  Each device accesses the network through\
    \ an N_PORT\n   connected to an interface whose behavior is specified in [FC-FS]\
    \ or\n   [FC-AL2].  In this case, the N_PORT represents any of the variants\n\
    \   described in Section 3.2.  The interface to the fabric may be an\n   L_PORT,\
    \ F_PORT, or FL_PORT.\n   Within the fibre channel device domain, addressable\
    \ entities consist\n   of other N_PORTs and fibre channel devices internal to\
    \ the network\n   that perform the fabric services defined in [FC-GS3].\n    \
    \                  Fibre Channel Network\n                  +--------+       \
    \ +--------+\n                  |  FC    |        |  FC    |\n               \
    \   | Device |        | Device |\n                  |........| FC     |........|\
    \ Fibre Channel\n                  | N_PORT |<......>| N_PORT | Device Domain\n\
    \                  +---+----+ Traffic+----+---+       ^\n                    \
    \  |                  |           |\n                  +---+----+        +----+---+\
    \       |\n                  | Fabric |        | Fabric |       |\n          \
    \        | Port   |        | Port   |       |\n        ==========+========+========+========+==============\n\
    \                  |       FC Network &       |       |\n                  | \
    \    Fabric Services      |       v\n                  |                     \
    \     | Fibre Channel\n                  +--------------------------+ Network\
    \ Domain\n                    Figure 6. A Fibre Channel Network\n            Gateway\
    \ Region                   Gateway Region\n       +--------+  +--------+     \
    \      +--------+  +--------+\n       |   FC   |  |  FC    |           |   FC\
    \   |  |   FC   |\n       | Device |  | Device |           | Device |  | Device\
    \ |  Fibre\n       |........|  |........| FC        |........|  |........|  Channel\n\
    \       | N_PORT |  | N_PORT |<.........>| N_PORT |  | N_PORT |  Device\n    \
    \   +---+----+  +---+----+ Traffic   +----+---+  +----+---+  Domain\n        \
    \   |           |                     |           |         ^\n       +---+----+\
    \  +---+----+           +----+---+  +----+---+     |\n       | F_PORT |  | F_PORT\
    \ |           | F_PORT |  | F_PORT |     |\n      =+========+==+========+===========+========+==+========+==========\n\
    \       |    iFCP Layer      |<--------->|     iFCP Layer     |     |\n      \
    \ |....................|     ^     |....................|     |\n       |    \
    \ iFCP Portal    |     |     |     iFCP Portal    |     v\n       +--------+-----------+\
    \     |     +----------+---------+    IP\n            iFCP|Gateway      Control\
    \          iFCP|Gateway      Network\n                |              Data    \
    \            |\n                |                                  |\n       \
    \         |                                  |\n                |<------Encapsulated\
    \ Frames------->|\n                |      +------------------+        |\n    \
    \            |      |                  |        |\n                +------+  \
    \  IP Network    +--------+\n                       |                  |\n   \
    \                    +------------------+\n                     Figure 7. An iFCP\
    \ Fabric Example\n   One example of an equivalent iFCP fabric is shown in Figure\
    \ 7.  The\n   fabric consists of two gateway regions, each accessed by a single\n\
    \   iFCP gateway.\n   Each gateway contains two standards-compliant F_PORTs and\
    \ an iFCP\n   Portal for attachment to the IP network.  Fibre channel devices\
    \ in\n   the region are those locally connected to the iFCP fabric through the\n\
    \   gateway fabric ports.\n   Looking into the fabric port, the gateway appears\
    \ as a fibre channel\n   switch element.  At this interface, remote N_PORTs are\
    \ presented as\n   fabric-attached devices.  Conversely, on the IP network side,\
    \ the\n   gateway presents each locally connected N_PORT as a logical fibre\n\
    \   channel device.\n   Extrapolating to the general case, each gateway region\
    \ behaves like\n   an autonomous system whose configuration is invisible to the\
    \ IP\n   network and other gateway regions.  Consequently, in addition to the\n\
    \   F_PORT shown in the example, a gateway implementation may\n   transparently\
    \ support the following fibre channel interfaces:\n      Inter-Switch Link --\
    \ A fibre channel switch-to-switch interface\n      used to access a region containing\
    \ fibre channel switch elements.\n      An implementation may support the E_PORT\
    \ defined by [FC-SW2] or\n      one of the proprietary interfaces provided by\
    \ various fibre\n      channel switch vendors.  In this case, the gateway acts\
    \ as a\n      border switch connecting the gateway region to the IP network.\n\
    \      FL_PORT -- An interface that provides fabric access for loop-\n      attached\
    \ fibre channel devices, as specified in [FC-FLA].\n      L_PORT -- An interface\
    \ through which a gateway may emulate the\n      fibre channel loop environment\
    \ specified in [FC-AL2].  As\n      discussed in appendix B, the gateway presents\
    \ remotely accessed\n      N_PORTS as loop-attached devices.\n   The manner in\
    \ which these interfaces are provided by a gateway is\n   implementation specific\
    \ and therefore beyond the scope of this\n   document.\n   Although each region\
    \ is connected to the IP network through one\n   gateway, a region may incorporate\
    \ multiple gateways for added\n   performance and fault tolerance if the following\
    \ conditions are met:\n   a) The gateways MUST coordinate the assignment of N_PORT\
    \ IDs and\n      aliases so that each N_PORT has one and only one address.\n \
    \  b) All iFCP traffic between a given remote and local N_PORT pair MUST\n   \
    \   flow through the same iFCP session (see Section 5.2.1).  However,\n      iFCP\
    \ sessions to a given remotely attached N_PORT need not\n      traverse the same\
    \ gateway.\n   Coordinating address assignments and managing the flow of traffic\
    \ is\n   implementation specific and outside the scope of this specification.\n"
- title: 4.1.  iFCP Transport Services
  contents:
  - "4.1.  iFCP Transport Services\n   N_PORT to N_PORT communications that traverse\
    \ a TCP/IP network\n   require the intervention of the iFCP layer within the gateway.\
    \  This\n   consists of the following operations:\n   a) Execution of the frame-addressing\
    \ and -mapping functions described\n      in Section 4.4.\n   b) Encapsulation\
    \ of fibre channel frames for injection into the\n      TCP/IP network and de-encapsulation\
    \ of fibre channel frames\n      received from the TCP/IP network.\n   c) Establishment\
    \ of an iFCP session in response to a PLOGI directed\n      to a remote device.\n\
    \   Section 4.4 discusses the iFCP frame-addressing mechanism and the way\n  \
    \ that it is used to achieve communications transparency between\n   N_PORTs.\n"
- title: 4.1.1.  Fibre Channel Transport Services Supported by iFCP
  contents:
  - "4.1.1.  Fibre Channel Transport Services Supported by iFCP\n   An iFCP fabric\
    \ supports Class 2 and Class 3 fibre channel transport\n   services, as specified\
    \ in [FC-FS].  An iFCP fabric does not support\n   Class 4, Class 6, or Class\
    \ 1 (dedicated connection) service.  An\n   N_PORT discovers the classes of transport\
    \ services supported by the\n   fabric during fabric login.\n"
- title: 4.2.  iFCP Device Discovery and Configuration Management
  contents:
  - "4.2.  iFCP Device Discovery and Configuration Management\n   An iFCP implementation\
    \ performs device discovery and iFCP fabric\n   management through the Internet\
    \ Storage Name Service defined in\n   [ISNS].  Access to an iSNS server is required\
    \ to perform the\n   following functions:\n   a) Emulate the services provided\
    \ by the fibre channel name server\n      described in Section 3.3.1, including\
    \ a mechanism for\n      asynchronously notifying an N_PORT of changes in the\
    \ iFCP fabric\n      configuration.\n   b) Aggregate gateways into iFCP fabrics\
    \ for interoperation.\n   c) Segment an iFCP fabric into fibre channel zones through\
    \ the\n      definition and management of device discovery scopes, referred to\n\
    \      as 'discovery domains'.\n   d) Store and distribute security policies,\
    \ as described in Section\n      10.2.9.\n   e) Implementation of the fibre channel\
    \ broadcast mechanism.\n"
- title: 4.3.  iFCP Fabric Properties
  contents:
  - "4.3.  iFCP Fabric Properties\n   A collection of iFCP gateways may be configured\
    \ for interoperation as\n   either a bounded or an unbounded iFCP fabric.\n  \
    \ Gateways in a bounded iFCP fabric operate in address transparent\n   mode, as\
    \ described in Section 4.5.  In this mode, the scope of a\n   fibre channel N_PORT\
    \ address is fabric-wide and is derived from\n   domain IDs issued by the iSNS\
    \ server from a common pool.  As\n   discussed in Section 4.3.2, the maximum number\
    \ of domain IDs allowed\n   by the fibre channel limits the configuration of a\
    \ bounded iFCP\n   fabric.\n   Gateways in an unbounded iFCP fabric operate in\
    \ address translation\n   mode as described in Section 4.6.  In this mode, the\
    \ scope of an\n   N_PORT address is local to a gateway region.  For fibre channel\n\
    \   traffic between regions, the translation of frame-embedded N_PORT\n   addresses\
    \ is performed by the gateway.  As discussed below, the\n   number of switch elements\
    \ and gateways in an unbounded iFCP fabric\n   may exceed the limits of a conventional\
    \ fibre channel fabric.\n   All iFCP gateways MUST support unbounded iFCP fabrics.\
    \  Support for\n   bounded iFCP fabrics is OPTIONAL.\n   The decision to support\
    \ bounded iFCP fabrics in a gateway\n   implementation depends on the address\
    \ transparency, configuration\n   scalability, and fault tolerance considerations\
    \ given in the\n   following sections.\n"
- title: 4.3.1.  Address Transparency
  contents:
  - "4.3.1.  Address Transparency\n   Although iFCP gateways in an unbounded fabric\
    \ will convert N_PORT\n   addresses in the frame header and payload of standard\
    \ link service\n   messages, a gateway cannot convert such addresses in the payload\
    \ of\n   vendor- or user-specific fibre channel frame traffic.\n   Consequently,\
    \ although both bounded and unbounded iFCP fabrics\n   support standards-compliant\
    \ FC-4 protocol implementations and link\n   services used by mainstream fibre\
    \ channel applications, a bounded\n   iFCP fabric may also support vendor- or\
    \ user-specific protocol and\n   link service implementations that carry N_PORT\
    \ IDs in the frame\n   payload.\n"
- title: 4.3.2.  Configuration Scalability
  contents:
  - "4.3.2.  Configuration Scalability\n   The scalability limits of a bounded fabric\
    \ configuration are a\n   consequence of the fibre channel address allocation\
    \ policy discussed\n   in Section 3.7.1.  As noted, a bounded iFCP fabric using\
    \ this address\n   allocation scheme is limited to a combined total of 239 gateways\
    \ and\n   fibre channel switch elements.  As the system expands, the network\n\
    \   may grow to include many switch elements and gateways, each of which\n   controls\
    \ a small number of devices.  In this case, the limitation in\n   switch and gateway\
    \ count may become a barrier to extending and fully\n   integrating the storage\
    \ network.\n   Since N_PORT fibre channel addresses in an unbounded iFCP fabric\
    \ are\n   not fabric-wide, the limits imposed by fibre channel address\n   allocation\
    \ only apply within the gateway region.  Across regions, the\n   number of iFCP\
    \ gateways, fibre channel devices, and switch elements\n   that may be internetworked\
    \ are not constrained by these limits.  In\n   exchange for improved scalability,\
    \ however, implementations must\n   consider the incremental overhead of address\
    \ conversion, as well as\n   the address transparency issues discussed in Section\
    \ 4.3.1.\n"
- title: 4.3.3.  Fault Tolerance
  contents:
  - "4.3.3.  Fault Tolerance\n   In a bounded iFCP fabric, address reassignment caused\
    \ by a fault or\n   reconfiguration, such as the addition of a new gateway region,\
    \ may\n   cascade to other regions, causing fabric-wide disruption as new\n  \
    \ N_PORT addresses are assigned.  Furthermore, before a new gateway can\n   be\
    \ merged into the fabric, its iSNS server must be slaved to the iSNS\n   server\
    \ in the bounded fabric to centralize the issuance of domain\n   IDs.  In an unbounded\
    \ iFCP fabric, coordinating the iSNS databases\n   requires only that the iSNS\
    \ servers exchange client attributes with\n   one another.\n   A bounded iFCP\
    \ fabric also has an increased dependency on the\n   availability of the iSNS\
    \ server, which must act as the central\n   address assignment authority.  If\
    \ connectivity with the server is\n   lost, new DOMAIN_ID values cannot be automatically\
    \ allocated as\n   gateways and fibre channel switch elements are added.\n"
- title: 4.4.  The iFCP N_PORT Address Model
  contents:
  - "4.4.  The iFCP N_PORT Address Model\n   This section discusses iFCP extensions\
    \ to the fibre channel\n   addressing model of Section 3.7.1, which are required\
    \ for the\n   transparent routing of frames between locally and remotely attached\n\
    \   N_PORTs.\n   In the iFCP protocol, an N_PORT is represented by the following\n\
    \   addresses:\n   a) A 24-bit N_PORT ID.  The fibre channel N_PORT address of\
    \ a locally\n      attached device.  Depending on the gateway addressing mode,\
    \ the\n      scope is local either to a region or to a bounded iFCP fabric.  In\n\
    \      either mode, communications between N_PORTs in the same gateway\n     \
    \ region use the N_PORT ID.\n   b) A 24-bit N_PORT alias.  The fibre channel N_PORT\
    \ address assigned\n      by each gateway operating in address translation mode\
    \ to identify\n      a remotely attached N_PORT.  Frame traffic is intercepted\
    \ by an\n      iFCP gateway and directed to a remotely attached N_PORT by means\n\
    \      of the N_PORT alias.  The address assigned by each gateway is\n      unique\
    \ within the scope of the gateway region.\n   c) An N_PORT network address.  A\
    \ tuple consisting of the gateway IP\n      address, TCP port number, and N_PORT\
    \ ID.  The N_PORT network\n      address identifies the source and destination\
    \ N_PORTs for fibre\n      channel traffic on the IP network.\n   To provide transparent\
    \ communications between a remote and local\n   N_PORT, a gateway MUST maintain\
    \ an iFCP session descriptor (see\n   Section 5.2.2.2) reflecting the association\
    \ between the fibre channel\n   address representing the remote N_PORT and the\
    \ remote device's N_PORT\n   network address.  To establish this association,\
    \ the iFCP gateway\n   assigns and manages fibre channel N_PORT fabric addresses\
    \ as\n   described in the following paragraphs.\n   In an iFCP fabric, the iFCP\
    \ gateway performs the address assignment\n   and frame routing functions of an\
    \ FC switch element.  Unlike an FC\n   switch, however, an iFCP gateway must also\
    \ direct frames to external\n   devices attached to remote gateways on the IP\
    \ network.\n   In order to be transparent to FC devices, the gateway must deliver\n\
    \   such frames using only the 24-bit destination address in the frame\n   header.\
    \  By exploiting its control of address allocation and access\n   to frame traffic\
    \ entering or leaving the gateway region, the gateway\n   is able to achieve the\
    \ necessary transparency.\n   N_PORT addresses within a gateway region may be\
    \ allocated in one of\n   two ways:\n   a) Address Translation Mode - A mode of\
    \ N_PORT address assignment in\n      which the scope of an N_PORT fibre channel\
    \ address is unique to\n      the gateway region.  The address of a remote device\
    \ is represented\n      in that gateway region by its gateway-assigned N_PORT\
    \ alias.\n   b) Address Transparent Mode - A mode of N_PORT address assignment\
    \ in\n      which the scope of an N_PORT fibre channel address is unique\n   \
    \   across the set of gateway regions comprising a bounded iFCP\n      fabric.\n\
    \   In address transparent mode, gateways within a bounded fabric\n   cooperate\
    \ in the assignment of addresses to locally attached N_PORTs.\n   Each gateway\
    \ in control of a region is responsible for obtaining and\n   distributing unique\
    \ domain IDs from the address assignment authority,\n   as described in Section\
    \ 4.5.1.  Consequently, within the scope of a\n   bounded fabric, the address\
    \ of each N_PORT is unique.  For that\n   reason, gateway-assigned aliases are\
    \ not required for representing\n   remote N_PORTs.\n   All iFCP implementations\
    \ MUST support operations in address\n   translation mode.  Implementation of\
    \ address transparent mode is\n   OPTIONAL but, of course, must be provided if\
    \ bounded iFCP fabric\n   configurations are to be supported.\n   The mode of\
    \ gateway operation is settable in an implementation-\n   specific manner.  The\
    \ implementation MUST NOT:\n   a) allow the mode to be changed after the gateway\
    \ begins processing\n      fibre channel frame traffic,\n   b) permit operation\
    \ in more than one mode at a time, or\n   c) establish an iFCP session with a\
    \ gateway that is not in the same\n      mode.\n"
- title: 4.5.  Operation in Address Transparent Mode
  contents:
  - "4.5.  Operation in Address Transparent Mode\n   The following considerations\
    \ and requirements apply to this mode of\n   operation:\n   a) iFCP gateways in\
    \ address transparent mode will not interoperate\n      with iFCP gateways that\
    \ are not in address transparent mode.\n   b) When interoperating with locally\
    \ attached fibre channel switch\n      elements, each iFCP gateway MUST assume\
    \ control of DOMAIN_ID\n      assignments in accordance with the appropriate fibre\
    \ channel\n      standard or vendor-specific protocol specification.  As described\n\
    \      in Section 4.5.1, DOMAIN_ID values that are assigned to FC\n      switches\
    \ internal to the gateway region must be issued by the iSNS\n      server.\n \
    \  c) When operating in address transparent Mode, fibre channel address\n    \
    \  translation SHALL NOT take place.\n   When operating in address transparent\
    \ mode, however, the gateway MUST\n   establish and maintain the context of each\
    \ iFCP session in accordance\n   with Section 5.2.2.\n"
- title: 4.5.1.  Transparent Mode Domain ID Management
  contents:
  - "4.5.1.  Transparent Mode Domain ID Management\n   As described in Section 4.5,\
    \ each gateway and fibre channel switch in\n   a bounded iFCP fabric has a unique\
    \ domain ID.  In a gateway region\n   containing fibre channel switch elements,\
    \ each element obtains a\n   domain ID by querying the principal switch as described\
    \ in [FC-SW2]\n   -- in this case, the iFCP gateway itself.  The gateway, in turn,\n\
    \   obtains domain IDs on demand from the iSNS name server acting as the\n   central\
    \ address allocation authority.  In effect, the iSNS server\n   assumes the role\
    \ of principal switch for the bounded fabric.  In that\n   case, the iSNS database\
    \ contains:\n   a) The definition for one or more bounded iFCP fabrics, and\n\
    \   b) For each bounded fabric, a worldwide-unique name identifying each\n   \
    \   gateway in the fabric.  A gateway in address transparent mode MUST\n     \
    \ reside in one, and only one, bounded fabric.\n   As the Principal Switch within\
    \ the gateway region, an iFCP gateway in\n   address transparent mode SHALL obtain\
    \ domain IDs for use in the\n   gateway region by issuing the appropriate iSNS\
    \ query, using its\n   worldwide name.\n"
- title: 4.5.2.  Incompatibility with Address Translation Mode
  contents:
  - "4.5.2.  Incompatibility with Address Translation Mode\n   Except for the session\
    \ control frames specified in Section 6, iFCP\n   gateways in address transparent\
    \ mode SHALL NOT originate or accept\n   frames that do not have the TRP bit set\
    \ to one in the iFCP flags\n   field of the encapsulation header (see Section\
    \ 5.3.1).  The iFCP\n   gateway SHALL immediately terminate all iFCP sessions\
    \ with the iFCP\n   gateway from which it receives such frames.\n"
- title: 4.6.  Operation in Address Translation Mode
  contents:
  - "4.6.  Operation in Address Translation Mode\n   This section describes the process\
    \ for managing the assignment of\n   addresses within a gateway region that is\
    \ part of an unbounded iFCP\n   fabric, including the modification of FC frame\
    \ addresses embedded in\n   the frame header for frames sent and received from\
    \ remotely attached\n   N_PORTs.\n   As described in Section 4.4, the scope of\
    \ N_PORT addresses in this\n   mode is local to the gateway region.  A principal\
    \ switch within the\n   gateway region, possibly the iFCP gateway itself, oversees\
    \ the\n   assignment of such addresses, in accordance with the rules specified\n\
    \   in [FC-FS] and [FC-FLA].\n   The assignment of N_PORT addresses to locally\
    \ attached devices is\n   controlled by the switch element to which the device\
    \ is connected.\n   The assignment of N_PORT addresses for remotely attached devices\
    \ is\n   controlled by the gateway by which the remote device is accessed.  In\n\
    \   this case, the gateway MUST assign a locally significant N_PORT alias\n  \
    \ to be used in place of the N_PORT ID assigned by the remote gateway.\n   The\
    \ N_PORT alias is assigned during device discovery, as described in\n   Section\
    \ 5.2.2.1.\n   To perform address conversion and to enable the appropriate routing,\n\
    \   the gateway MUST establish an iFCP session and generate the\n   information\
    \ required to map each N_PORT alias to the appropriate\n   TCP/IP connection context\
    \ and N_PORT ID of the remotely accessed\n   N_PORT.  These mappings are created\
    \ and updated by means specified in\n   Section 5.2.2.2.  As described in that\
    \ section, the required mapping\n   information is represented by the iFCP session\
    \ descriptor reproduced\n   in Figure 8.\n                      +-----------------------+\n\
    \                      |TCP Connection Context |\n                      +-----------------------+\n\
    \                      |  Local N_PORT ID      |\n                      +-----------------------+\n\
    \                      |  Remote N_PORT ID     |\n                      +-----------------------+\n\
    \                      |  Remote N_PORT Alias  |\n                      +-----------------------+\n\
    \      Figure 8. iFCP Session Descriptor (from Section 5.2.2.2)\n   Except for\
    \ frames comprising special link service messages (see\n   Section 7.2), outbound\
    \ frames are encapsulated and sent without\n   modification.  Address translation\
    \ is deferred until receipt from the\n   IP network, as specified in Section 4.6.1.\n"
- title: 4.6.1.  Inbound Frame Address Translation
  contents:
  - "4.6.1.  Inbound Frame Address Translation\n   For inbound frames received from\
    \ the IP network, the receiving\n   gateway SHALL reference the session descriptor\
    \ to fill in the D_ID\n   field with the destination N_PORT ID and the S_ID field\
    \ with the\n   N_PORT alias it assigned.  The translation process for inbound\
    \ frames\n   is shown in Figure 9.\n        Network Format of Inbound Frame\n\
    \   +--------------------------------------------+            iFCP\n   |     \
    \     FC Encapsulation Header           |           Session\n   +--------------------------------------------+\
    \           Descriptor\n   |            SOF Delimiter Word              |    \
    \          |\n   +========+===================================+              V\n\
    \   |        |         D_ID Field                |     +--------+-----+\n   +--------+-----------------------------------+\
    \     | Lookup source|\n   |        |         S_ID Field                |    \
    \ | N_PORT Alias |\n   +--------+-----------------------------------+     | and\
    \          |\n   |        Control Information, Payload,       |     | destination\
    \  |\n   |        and FC CRC                          |     | N_PORT ID    |\n\
    \   |                                            |     +--------+-----+\n   |\
    \                                            |              |\n   |          \
    \                                  |              |\n   +============================================+\
    \              |\n   |         EOF Delimiter Word                 |          \
    \    |\n   +--------------------------------------------+              |\n   \
    \                                                            |\n             \
    \                                                  |\n   Frame after Address Translation\
    \ and De-encapsulation        |\n   +--------+-----------------------------------+\
    \              |\n   |        |  Destination N_PORT ID            |<-------------+\n\
    \   +--------+-----------------------------------+              |\n   |      \
    \  |  Source N_PORT Alias              |<-------------+\n   +--------+-----------------------------------+\n\
    \   |                                            |\n   |        Control information,\
    \ Payload,       |\n   |        and FC CRC                          |\n   +--------------------------------------------+\n\
    \            Figure 9. Inbound Frame Address Translation\n   The receiving gateway\
    \ SHALL consider the contents of the S_ID and\n   D_ID fields to be undefined\
    \ when received.  After replacing these\n   fields, the gateway MUST recalculate\
    \ the FC CRC.\n"
- title: 4.6.2.  Incompatibility with Address Transparent Mode
  contents:
  - "4.6.2.  Incompatibility with Address Transparent Mode\n   iFCP gateways in address\
    \ translation mode SHALL NOT originate or\n   accept frames that have the TRP\
    \ bit set to one in the iFCP flags\n   field of the encapsulation header.  The\
    \ iFCP gateway SHALL\n   immediately abort all iFCP sessions with the iFCP gateway\
    \ from which\n   it receives frames such as those described in Section 5.2.3.\n"
- title: 5.  iFCP Protocol
  contents:
  - '5.  iFCP Protocol

    '
- title: 5.1.  Overview
  contents:
  - '5.1.  Overview

    '
- title: 5.1.1.  iFCP Transport Services
  contents:
  - "5.1.1.  iFCP Transport Services\n   The main function of the iFCP protocol layer\
    \ is to transport fibre\n   channel frame images between locally and remotely\
    \ attached N_PORTs.\n   When transporting frames to a remote N_PORT, the iFCP\
    \ layer\n   encapsulates and routes the fibre channel frames comprising each\n\
    \   fibre channel Information Unit via a predetermined TCP connection for\n  \
    \ transport across the IP network.\n   When receiving fibre channel frame images\
    \ from the IP network, the\n   iFCP layer de-encapsulates and delivers each frame\
    \ to the appropriate\n   N_PORT.\n   The iFCP layer processes the following types\
    \ of traffic:\n   a) FC-4 frame images associated with a fibre channel application\n\
    \      protocol.\n   b) FC-2 frames comprising fibre channel link service requests\
    \ and\n      responses.\n   c) Fibre channel broadcast frames.\n   d) iFCP control\
    \ messages required to set up, manage, or terminate an\n      iFCP session.\n\
    \   For FC-4 N_PORT traffic and most FC-2 messages, the iFCP layer never\n   interprets\
    \ the contents of the frame payload.\n   iFCP does interpret and process iFCP\
    \ control messages and certain\n   link service messages, as described in Section\
    \ 5.1.2.\n"
- title: 5.1.2.  iFCP Support for Link Services
  contents:
  - "5.1.2.  iFCP Support for Link Services\n   iFCP must intervene in the processing\
    \ of those fibre channel link\n   service messages that contain N_PORT addresses\
    \ in the message payload\n   or that require other special handling, such as an\
    \ N_PORT login\n   request (PLOGI).\n   In the former case, an iFCP gateway operating\
    \ in address translation\n   mode MUST supplement the payload with additional\
    \ information that\n   enables the receiving gateway to convert such embedded\
    \ N_PORT\n   addresses to its frame of reference.\n   For out bound fibre channel\
    \ frames comprising such a link service,\n   the iFCP layer creates the supplemental\
    \ information based on frame\n   content, modifies the frame payload, and then\
    \ transmits the resulting\n   fibre channel frame with supplemental data through\
    \ the appropriate\n   TCP connection.\n   For incoming iFCP frames containing\
    \ supplemented fibre channel link\n   service frames, iFCP must interpret the\
    \ frame, including any\n   supplemental information, modify the frame content,\
    \ and forward the\n   resulting frame to the destination N_PORT for further processing.\n\
    \   Section 7.1 describes the processing of these link service messages\n   in\
    \ detail.\n"
- title: 5.2.  TCP Stream Transport of iFCP Frames
  contents:
  - '5.2.  TCP Stream Transport of iFCP Frames

    '
- title: 5.2.1.  iFCP Session Model
  contents:
  - "5.2.1.  iFCP Session Model\n   An iFCP session consists of the pair of N_PORTs\
    \ comprising the\n   session endpoints joined by a single TCP/IP connection. \
    \ No more than\n   one iFCP session SHALL exist between a given pair of N_PORTs.\n\
    \   An N_PORT is identified by its network address, consisting of:\n   a) the\
    \ N_PORT ID assigned by the gateway to which the N_PORT is\n      locally attached,\
    \ and\n   b) the iFCP Portal address, consisting of its IP address and TCP port\n\
    \      number.\n   Because only one iFCP session may exist between a pair of N_PORTs,\n\
    \   the iFCP session is uniquely identified by the network addresses of\n   the\
    \ session end points.\n   TCP connections that may be used for iFCP sessions between\
    \ pairs of\n   iFCP portals are either \"bound\" or \"unbound\".  An unbound connection\n\
    \   is a TCP connection that is not actively supporting an iFCP session.\n   A\
    \ gateway implementation MAY establish a pool of unbound connections\n   to reduce\
    \ the session setup time.  Such pre-existing TCP connections\n   between iFCP\
    \ Portals remain unbound and uncommitted until allocated\n   to an iFCP session\
    \ through a CBIND message (see Section 6.1).\n   When the iFCP layer creates an\
    \ iFCP session, it may select an\n   existing unbound TCP connection or establish\
    \ a new TCP connection and\n   send the CBIND message down that TCP connection.\
    \  This allocates the\n   TCP connection to that iFCP session.\n"
- title: 5.2.2.  iFCP Session Management
  contents:
  - "5.2.2.  iFCP Session Management\n   This section describes the protocols and\
    \ data structures required to\n   establish and terminate an iFCP session.\n"
- title: 5.2.2.1.  The Remote N_PORT Descriptor
  contents:
  - "5.2.2.1.  The Remote N_PORT Descriptor\n   In order to establish an iFCP session,\
    \ an iFCP gateway MUST maintain\n   information allowing it to locate a remotely\
    \ attached N_PORT.  For\n   explanatory purposes, such information is assumed\
    \ to reside in a\n   descriptor with the format shown in Figure 10.\n        \
    \            +--------------------------------+\n                    |  N_PORT\
    \ Worldwide Unique Name  |\n                    +--------------------------------+\n\
    \                    |  iFCP Portal Address           |\n                    +--------------------------------+\n\
    \                    |  N_PORT ID of Remote N_PORT    |\n                    +--------------------------------+\n\
    \                    |  N_PORT Alias                  |\n                    +--------------------------------+\n\
    \                    Figure 10. Remote N_PORT Descriptor\n   Each descriptor aggregates\
    \ the following information about a remotely\n   attached N_PORT:\n      N_PORT\
    \ Worldwide Unique Name -- 64-bit N_PORT worldwide name as\n      specified in\
    \ [FC-FS].  A Remote N_PORT descriptor is uniquely\n      identified by this parameter.\n\
    \      iFCP Portal Address -- The IP address and TCP port number\n      referenced\
    \ when creation of the TCP connection associated with an\n      iFCP session is\
    \ requested.\n      N_PORT ID --  N_PORT fibre channel address assigned to the\
    \ remote\n      device by the remote iFCP gateway.\n      N_PORT Alias -- N_PORT\
    \ fibre channel address assigned to the\n      remote device by the 'local' iFCP\
    \ gateway when it operates in\n      address translation mode.\n   An iFCP gateway\
    \ SHALL have one and only one descriptor for each\n   remote N_PORT it accesses.\
    \  If a descriptor does not exist, one SHALL\n   be created using the information\
    \ returned by an iSNS name server\n   query.  Such queries may result from:\n\
    \   a) a fibre channel Name Server request originated by a locally\n      attached\
    \ N_PORT (see Sections 3.5 and 9.3), or\n   b) a CBIND request received from a\
    \ remote fibre channel device (see\n      Section 5.2.2.2).\n   When creating\
    \ a descriptor in response to an incoming CBIND request,\n   the iFCP gateway\
    \ SHALL perform an iSNS name server query using the\n   worldwide port name of\
    \ the remote N_PORT in the SOURCE N_PORT NAME\n   field within the CBIND payload.\
    \  The descriptor SHALL be filled in\n   using the query results.\n   After creating\
    \ the descriptor, a gateway operating in address\n   translation mode SHALL create\
    \ and add the 24-bit N_PORT alias.\n"
- title: 5.2.2.1.1.  Updating a Remote N_PORT Descriptor
  contents:
  - "5.2.2.1.1.  Updating a Remote N_PORT Descriptor\n   A Remote N_PORT descriptor\
    \ SHALL only be updated as the result of an\n   iSNS query to obtain information\
    \ for the specified worldwide port\n   name or from information returned by an\
    \ iSNS state change\n   notification.  Following such an update, a new N_PORT\
    \ alias SHALL NOT\n   be assigned.\n   Before such an update, the contents of\
    \ a descriptor may have become\n   stale because of an event that invalidated\
    \ or triggered a change in\n   the N_PORT network address of the remote device,\
    \ such as a fabric\n   reconfiguration or the device's removal or replacement.\n\
    \   A collateral effect of such an event is that a fibre channel device\n   that\
    \ has been added or whose N_PORT ID has changed will have no\n   active N_PORT\
    \ logins.  Consequently, FC-4 traffic directed to such an\n   N_PORT, because\
    \ of a stale descriptor, will be rejected or discarded.\n   Once the originating\
    \ N_PORT learns of the reconfiguration, usually\n   through the name server state\
    \ change notification mechanism,\n   information returned in the notification\
    \ or the subsequent name\n   server lookup needed to reestablish the iFCP session\
    \ will\n   automatically purge such stale data from the gateway.\n"
- title: 5.2.2.1.2.  Deleting a Remote N_PORT Descriptor
  contents:
  - "5.2.2.1.2.  Deleting a Remote N_PORT Descriptor\n   Deleting a remote N_PORT\
    \ descriptor is equivalent to freeing up the\n   corresponding N_PORT alias for\
    \ reuse.  Consequently, the descriptor\n   MUST NOT be deleted while there are\
    \ any iFCP sessions that reference\n   the remote N_PORT.\n   Descriptors eligible\
    \ for deletion should be removed based on a last\n   in, first out policy.\n"
- title: 5.2.2.2.  Creating an iFCP Session
  contents:
  - "5.2.2.2.  Creating an iFCP Session\n   An iFCP session may be in one of the following\
    \ states:\n      OPEN  --  The session state in which fibre channel frame images\n\
    \      may be sent and received.\n      OPEN PENDING -- The session state after\
    \ a gateway has issued a\n      CBIND request but no response has yet been received.\
    \  No fibre\n      channel frames may be sent.\n   The session may be initiated\
    \ in response to a PLOGI ELS (see Section\n   7.3.1.7) or for any other implementation-specific\
    \ reason.\n   The gateway SHALL create the iFCP session as follows:\n   a) Locate\
    \ the remote N_PORT descriptor corresponding to the session\n      end point.\
    \  If the session is created in order to forward a fibre\n      channel frame,\
    \ then the session endpoint may be obtained by\n      referencing the remote N_PORT\
    \ alias contained in the frame header\n      D_ID field.  If no descriptor exists,\
    \ an iFCP session SHALL NOT be\n      created.\n   b) Allocate a TCP connection\
    \ to the gateway to which the remote\n      N_PORT is locally attached.  An implementation\
    \ may use an existing\n      connection in the Unbound state, or a new connection\
    \ may be\n      created and placed in the Unbound state.\n      When a connection\
    \ is created, the IP address and TCP Port number\n      SHALL be obtained by referencing\
    \ the remote N_PORT descriptor as\n      specified in Section 5.2.2.1.\n   c)\
    \ If the TCP connection cannot be allocated or cannot be created due\n      to\
    \ limited resources, the gateway SHALL terminate session\n      creation.\n  \
    \ d) If the TCP connection is aborted for any reason before the iFCP\n      session\
    \ enters the OPEN state, the gateway SHALL respond in\n      accordance with Section\
    \ 5.2.3 and MAY terminate the attempt to\n      create a session or MAY try to\
    \ establish the TCP connection again.\n   e) The gateway SHALL then issue a CBIND\
    \ session control message (see\n      Section 6.1) and place the session in the\
    \ OPEN PENDING state.\n   f) If a CBIND response is returned with a status other\
    \ than \"Success\"\n      or \"iFCP session already exists\", the session SHALL\
    \ be terminated,\n      and the TCP connection returned to the Unbound state.\n\
    \   g) A CBIND STATUS of \"iFCP session already exists\" indicates that the\n\
    \      remote gateway has concurrently initiated a CBIND request to\n      create\
    \ an iFCP session between the same pair of N_PORTs.  A\n      gateway receiving\
    \ such a response SHALL terminate this attempt and\n      process the incoming\
    \ CBIND request in accordance with Section\n      5.2.2.3.\n   h) In response\
    \ to a CBIND STATUS of \"Success\", the gateway SHALL\n      place the session\
    \ in the OPEN state.\n   Once the session is placed in the OPEN state, an iFCP\
    \ session\n   descriptor SHALL be created, containing the information shown in\n\
    \   Figure 11:\n                        +-----------------------+\n          \
    \              |TCP Connection Context |\n                        +-----------------------+\n\
    \                        |  Local N_PORT ID      |\n                        +-----------------------+\n\
    \                        |  Remote N_PORT ID     |\n                        +-----------------------+\n\
    \                        |  Remote N_PORT Alias  |\n                        +-----------------------+\n\
    \                     Figure 11. iFCP Session Descriptor\n      TCP Connection\
    \ Context -- Information required to identify the TCP\n      connection associated\
    \ with the iFCP session.\n      Local N_PORT ID --  N_PORT ID of the locally attached\
    \ fibre\n      channel device.\n      Remote N_PORT ID -- N_PORT ID assigned to\
    \ the remote device by the\n      remote gateway.\n      Remote N_PORT Alias --\
    \ Alias assigned to the remote N_PORT by the\n      local gateway when it operates\
    \ in address translation mode.  If in\n      this mode, the gateway SHALL copy\
    \ this parameter from the Remote\n      N_PORT descriptor.  Otherwise, it is not\
    \ filled in.\n"
- title: 5.2.2.3.  Responding to a CBIND Request
  contents:
  - "5.2.2.3.  Responding to a CBIND Request\n   The gateway receiving a CBIND request\
    \ SHALL respond as follows:\n   a) If the receiver has a duplicate iFCP session\
    \ in the OPEN PENDING\n      state, then the receiving gateway SHALL compare the\
    \ Source N_PORT\n      Name in the incoming CBIND payload with the Destination\
    \ N_PORT\n      Name.\n   b) If the Source N_PORT Name is greater, the receiver\
    \ SHALL issue a\n      CBIND response of \"Success\" and SHALL place the session\
    \ in the\n      OPEN state.\n   c) If the Source N_PORT Name is less, the receiver\
    \ shall issue a\n      CBIND RESPONSE of Failed - N_PORT session already exists.\
    \  The\n      state of the receiver-initiated iFCP session SHALL BE unchanged.\n\
    \   d) If there is no duplicate iFCP session in the OPEN PENDING state,\n    \
    \  the receiving gateway SHALL issue a CBIND response.  If a status\n      of\
    \ Success is returned, the receiving gateway SHALL create the\n      iFCP session\
    \ and place it in the OPEN state.  An iFCP session\n      descriptor SHALL be\
    \ created as described in Section 5.2.2.2.\n   e) If a remote N_PORT descriptor\
    \ does not exist, one SHALL be created\n      and filled in as described in Section\
    \ 5.2.2.1.\n"
- title: 5.2.2.4.  Monitoring iFCP Connectivity
  contents:
  - "5.2.2.4.  Monitoring iFCP Connectivity\n   During extended periods of inactivity,\
    \ an iFCP session may be\n   terminated due to a hardware failure within the gateway\
    \ or through\n   loss of TCP/IP connectivity.  The latter may occur when the session\n\
    \   traverses a stateful intermediate device, such as a NA(P)T box or\n   firewall,\
    \ that detects and purges connections it believes are unused.\n   To test session\
    \ liveness, expedite the detection of connectivity\n   failures, and avoid spontaneous\
    \ connection termination, an iFCP\n   gateway may maintain a low level of session\
    \ activity and monitor the\n   session by requesting that the remote gateway periodically\
    \ transmit\n   the LTEST message described in Section 6.3.  All iFCP gateways\
    \ SHALL\n   support liveness testing as described in this specification.\n   A\
    \ gateway requests the LTEST heartbeat by specifying a non-zero value\n   for\
    \ the LIVENESS TEST INTERVAL in the CBIND request or response\n   message as described\
    \ in Section 6.1.  If both gateways seek to\n   monitor liveness, each must set\
    \ the LIVENESS TEST INTERVAL in the\n   CBIND request or response.\n   Upon receiving\
    \ such a request, the gateway providing the heartbeat\n   SHALL transmit LTEST\
    \ messages at the specified interval.  The first\n   message SHALL be sent as\
    \ soon as the iFCP session enters the OPEN\n   state.  LTEST messages SHALL NOT\
    \ be sent when the iFCP session is not\n   in the OPEN state.\n   An iFCP session\
    \ SHALL be terminated as described in Section 5.2.3 if:\n   a) the contents of\
    \ the LTEST message are incorrect, or\n   b) an LTEST message is not received\
    \ within twice the specified\n      interval or the iFCP session has been quiescent\
    \ for longer than\n      twice the specified interval.\n   The gateway to receive\
    \ the LTEST message SHALL measure the interval\n   for the first expected LTEST\
    \ message from when the session is placed\n   in the OPEN state.  Thereafter,\
    \ the interval SHALL be measured\n   relative to the last LTEST message received.\n\
    \   To maximize liveness test coverage, LTEST messages SHOULD flow\n   through\
    \ all the gateway components used to enter and retrieve fibre\n   channel frames\
    \ from the IP network, including the mechanisms for\n   encapsulating and de-encapsulating\
    \ fibre channel frames.\n   In addition to monitoring a session, information in\
    \ the LTEST message\n   encapsulation header may also be used to compute an estimate\
    \ of\n   network propagation delay, as described in Section 8.2.1.  However,\n\
    \   the propagation delay limit SHALL NOT be enforced for LTEST traffic.\n"
- title: 5.2.2.5.  Use of TCP Features and Settings
  contents:
  - "5.2.2.5.  Use of TCP Features and Settings\n   This section describes ground\
    \ rules for the use of TCP features in an\n   iFCP session.  The core TCP protocol\
    \ is defined in [RFC793].  TCP\n   implementation requirements and guidelines\
    \ are specified in\n   [RFC1122].\n   +-----------+------------+--------------+------------+------------+\n\
    \   | Feature   | Applicable |  RFC         |  Peer-Wise | Requirement|\n   |\
    \           | RFCs       |  Status      |  Agreement | Level      |\n   |    \
    \       |            |              |  Required? |            |\n   +===========+============+==============+============+============+\n\
    \   | Keep Alive| [RFC1122]  |  None        |  No        | Should not |\n   |\
    \           |(discussion)|              |            | use        |\n   +-----------+------------+--------------+------------+------------+\n\
    \   | Tiny      | [RFC896]   |  Standard    |  No        | Should not |\n   |\
    \ Segment   |            |              |            | use        |\n   | Avoidance\
    \ |            |              |            |            |\n   | (Nagle)   |  \
    \          |              |            |            |\n   +-----------+------------+--------------+------------+------------+\n\
    \   | Window    | [RFC1323]  |  Proposed    |  No        | Should use |\n   |\
    \ Scale     |            |  Standard    |            |            |\n   +-----------+------------+--------------+------------+------------+\n\
    \   | Wrapped   | [RFC1323]  |  Proposed    |  No        | SHOULD use |\n   |\
    \ Sequence  |            |  Standard    |            |            |\n   | Protection|\
    \            |              |            |            |\n   | (PAWS)    |    \
    \        |              |            |            |\n   +-----------+------------+--------------+------------+------------+\n\
    \                 Table 1. Usage of Optional TCP Features\n   The following sections\
    \ describe these options in greater detail.\n"
- title: 5.2.2.5.1.  Keep Alive
  contents:
  - "5.2.2.5.1.  Keep Alive\n   Keep Alive speeds the detection and cleanup of dysfunctional\
    \ TCP\n   connections by sending traffic when a connection would otherwise be\n\
    \   idle.  The issues are discussed in [RFC1122].\n   In order to test the device\
    \ more comprehensively, fibre channel\n   applications, such as storage, may implement\
    \ an equivalent keep alive\n   function at the FC-4 level.  Alternatively, periodic\
    \ liveness test\n   messages may be issued as described in Section 5.2.2.4.  Because\
    \ of\n   these more comprehensive end-to-end mechanisms and the considerations\n\
    \   described in [RFC1122], keep alive at the transport layer should not\n   be\
    \ implemented.\n"
- title: 5.2.2.5.2.  'Tiny' Segment Avoidance (Nagle)
  contents:
  - "5.2.2.5.2.  'Tiny' Segment Avoidance (Nagle)\n   The Nagle algorithm described\
    \ in [RFC896] is designed to avoid the\n   overhead of small segments by delaying\
    \ transmission in order to\n   agglomerate transfer requests into a large segment.\
    \  In iFCP, such\n   small transfers often contain I/O requests.  The transmission\
    \ delay\n   of the Nagle algorithm may decrease I/O throughput.  Therefore, the\n\
    \   Nagle algorithm should not be used.\n"
- title: 5.2.2.5.3.  Window Scale
  contents:
  - "5.2.2.5.3.  Window Scale\n   Window scaling, as specified in [RFC1323], allows\
    \ full use of links\n   with large bandwidth - delay products and should be supported\
    \ by an\n   iFCP implementation.\n"
- title: 5.2.2.5.4.  Wrapped Sequence Protection (PAWS)
  contents:
  - "5.2.2.5.4.  Wrapped Sequence Protection (PAWS)\n   TCP segments are identified\
    \ with 32-bit sequence numbers.  In\n   networks with large bandwidth - delay\
    \ products, it is possible for\n   more than one TCP segment with the same sequence\
    \ number to be in\n   flight.  In iFCP, receipt of such a sequence out of order\
    \ may cause\n   out-of-order frame delivery or data corruption.  Consequently,\
    \ this\n   feature SHOULD be supported as described in [RFC1323].\n"
- title: 5.2.3.  Terminating iFCP Sessions
  contents:
  - "5.2.3.  Terminating iFCP Sessions\n   iFCP sessions SHALL be terminated in response\
    \ to one of the events in\n   Table 2:\n   +-------------------------------------------+---------------------+\n\
    \   |                Event                      |     iFCP Sessions   |\n   |\
    \                                           |     to Terminate    |\n   +===========================================+=====================+\n\
    \   | PLOGI terminated with LS_RJT response     | Peer N_PORT         |\n   +-------------------------------------------+---------------------+\n\
    \   | State change notification indicating      | All iFCP Sessions   |\n   |\
    \ N_PORT removal or reconfiguration.        | from the            |\n   |    \
    \                                       | reconfigured N_PORT |\n   +-------------------------------------------+---------------------+\n\
    \   | LOGO ACC response from peer N_PORT        | Peer N_PORT         |\n   +-------------------------------------------+---------------------+\n\
    \   | ACC response to LOGO ELS sent to F_PORT   | All iFCP sessions   |\n   |\
    \ server (D_ID = 0xFF-FF-FE) (fabric        | from the originating|\n   | logout)\
    \                                   | N_PORT              |\n   +-------------------------------------------+---------------------+\n\
    \   | Implicit N_PORT LOGO as defined in        | All iFCP sessions   |\n   |\
    \ [FC-FS]                                   | from the N_PORT     |\n   |    \
    \                                       | logged out          |\n   +-------------------------------------------+---------------------+\n\
    \   | LTEST Message Error (see Section 5.2.2.4) | Peer N_PORT         |\n   +-------------------------------------------+---------------------+\n\
    \   | Non fatal encapsulation error as          | Peer N_PORT         |\n   |\
    \ specified in Section 5.3.3                |                     |\n   +-------------------------------------------+---------------------+\n\
    \   | Failure of the TCP connection associated  | Peer N_PORT         |\n   |\
    \ with the iFCP session                     |                     |\n   +-------------------------------------------+---------------------+\n\
    \   | Receipt of an UNBIND session control      | Peer N_PORT         |\n   |\
    \ message                                   |                     |\n   +-------------------------------------------+---------------------+\n\
    \   | Gateway enters the Unsynchronized state   | All iFCP sessions   |\n   |\
    \ (see Section 8.2.1)                       |                     |\n   +-------------------------------------------+---------------------+\n\
    \   | Gateway detects incorrect address mode    | All iFCP sessions   |\n   |\
    \ to peer gateway(see Section 4.6.2)        | with peer gateway   |\n   +-------------------------------------------+---------------------+\n\
    \                   Table 2. Session Termination Events\n   If a session is being\
    \ terminated due to an incorrect address mode\n   with the peer gateway, the TCP\
    \ connection SHALL be aborted by means\n   of a connection reset (RST) without\
    \ performing an UNBIND.  Otherwise,\n   if the TCP connection is still open following\
    \ the event, the gateway\n   SHALL shut down the connection as follows:\n   a)\
    \ Stop sending fibre channel frames over the TCP connection.\n   b) Discard all\
    \ incoming traffic, except for an UNBIND session control\n      message.\n   c)\
    \ If an UNBIND message is received at any time, return a response in\n      accordance\
    \ with Section 6.2.\n   d) If session termination was not triggered by an UNBIND\
    \ message,\n      issue the UNBIND session control message, as described in Section\n\
    \      6.2.\n   e) If the UNBIND message completes with a status of Success, the\
    \ TCP\n      connection MAY remain open at the discretion of either gateway and\n\
    \      may be kept in a pool of unbound connections in order to speed up\n   \
    \   the creation of a new iFCP session.\n      If the UNBIND fails for any reason,\
    \ the TCP connection MUST be\n      terminated.  In this case, the connection\
    \ SHOULD be aborted with a\n      connection reset (RST).\n   For each terminated\
    \ session, the session descriptor SHALL be deleted.\n   If a session was terminated\
    \ by an event other than an implicit LOGO\n   or a LOGO ACC response, the gateway\
    \ shall issue a LOGO to the locally\n   attached N_PORT on behalf of the remote\
    \ N_PORT.\n   To recover resources, either gateway may spontaneously close an\n\
    \   unbound TCP connection at any time.  If a gateway terminates a\n   connection\
    \ with a TCP close operation, the peer gateway MUST respond\n   by executing a\
    \ TCP close.\n"
- title: 5.3.  Fibre Channel Frame Encapsulation
  contents:
  - "5.3.  Fibre Channel Frame Encapsulation\n   This section describes the iFCP encapsulation\
    \ of fibre channel\n   frames.  The encapsulation complies with the common encapsulation\n\
    \   format defined in [ENCAP], portions of which are included here for\n   convenience.\n\
    \   The format of an encapsulated frame is shown below:\n                    \
    \ +--------------------+\n                     |       Header       |\n      \
    \               +--------------------+-----+\n                     |        SOF\
    \         |   f |\n                     +--------------------+ F r |\n       \
    \              |  FC frame content  | C a |\n                     +--------------------+\
    \   m |\n                     |        EOF         |   e |\n                 \
    \    +--------------------+-----+\n                   Figure 12. Encapsulation\
    \ Format\n   The encapsulation consists of a 7-word header, an SOF delimiter word,\n\
    \   the FC frame (including the fibre channel CRC), and an EOF delimiter\n   word.\
    \  The header and delimiter formats are described in the\n   following sections.\n"
- title: 5.3.1.  Encapsulation Header Format
  contents:
  - "5.3.1.  Encapsulation Header Format\n   W|------------------------------Bit------------------------------|\n\
    \   o|                                                               |\n   r|\
    \                    1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3|\n   d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n    +---------------+---------------+---------------+---------------+\n\
    \   0|   Protocol#   |    Version    |  -Protocol#   |   -Version    |\n    +---------------+---------------+---------------+---------------+\n\
    \   1|                  Reserved (must be zero)                      |\n    +---------------+---------------+---------------+---------------+\n\
    \   2| LS_COMMAND_ACC|  iFCP Flags   |     SOF       |      EOF      |\n    +-----------+---+---------------+-----------+---+---------------+\n\
    \   3|   Flags   |   Frame Length    |   -Flags  |   -Frame Length   |\n    +-----------+-------------------+-----------+-------------------+\n\
    \   4|                      Time Stamp [integer]                     |\n    +---------------------------------------------------------------+\n\
    \   5|                      Time Stamp [fraction]                    |\n    +---------------------------------------------------------------+\n\
    \   6|                              CRC                              |\n    +---------------------------------------------------------------+\n\
    \                 Figure 13. Encapsulation Header Format\n   Common Encapsulation\
    \ Fields:\n   Protocol#            IANA-assigned protocol number identifying the\n\
    \                        protocol using the encapsulation.  For iFCP, the\n  \
    \                      value assigned by [ENCAP] is 2.\n   Version           \
    \   Encapsulation version, as specified in [ENCAP].\n   -Protocol#           Ones\
    \ complement of the Protocol#.\n   -Version             Ones complement of the\
    \ version.\n   Flags                Encapsulation flags (see 5.3.1.1).\n   Frame\
    \ Length         Contains the length of the entire FC\n                      \
    \  Encapsulated frame, including the FC\n                        Encapsulation\
    \ Header and the FC frame (including\n                        SOF and EOF words)\
    \ in units of 32-bit words.\n   -Flags               Ones complement of the Flags\
    \ field.\n   -Frame Length        Ones complement of the Frame Length field.\n\
    \   Time Stamp [integer] Integer component of the frame time stamp, as\n     \
    \                   specified in [ENCAP].\n   Time Stamp           Fractional\
    \ component of the time stamp,\n   [fraction]           as specified in [ENCAP].\n\
    \   CRC                  Header CRC.  MUST be valid for iFCP.\n   The time stamp\
    \ fields are used to enforce the limit on the lifetime\n   of a fibre channel\
    \ frame as described in Section 8.2.1.\n   iFCP-Specific Fields:\n   LS_COMMAND_ACC\
    \       For a special link service ACC response to be\n                      \
    \  processed by iFCP, the LS_COMMAND_ACC field\n                        SHALL\
    \ contain a copy of bits 0 through 7 of the\n                        LS_COMMAND\
    \ to which the ACC applies.  Otherwise,\n                        the LS_COMMAND_ACC\
    \ field SHALL be set to zero.\n   iFCP Flags           iFCP-specific flags (see\
    \ below).\n   SOF                  Copy of the SOF delimiter encoding (see Section\n\
    \                        5.3.2).\n   EOF                  Copy of the EOF delimiter\
    \ encoding (see Section\n                        5.3.2).\n   The iFCP flags word\
    \ has the following format:\n        |------------------------Bit----------------------------|\n\
    \        |                                                       |\n        |\
    \   8      9     10     11     12     13     14    15   |\n        +------+------+------+------+------+------+------+------+\n\
    \        |             Reserved             | SES  | TRP  |  SPC |\n        +------+------+------+------+------+------+------+------+\n\
    \                       Figure 14. iFCP Flags Word\n   iFCP Flags:\n   SES   \
    \      1 = Session control frame (TRP and SPC MUST be 0)\n   TRP         1 = Address\
    \ transparent mode enabled\n               0 = Address translation mode enabled\n\
    \   SPC         1 = Frame is part of a link service message requiring\n      \
    \             special processing by iFCP prior to forwarding to the\n        \
    \           destination N_PORT.\n"
- title: 5.3.1.1.  Common Encapsulation Flags
  contents:
  - "5.3.1.1.  Common Encapsulation Flags\n   The iFCP usage of the common encapsulation\
    \ flags defined in [ENCAP]\n   is shown in Figure 15:\n         |------------------------Bit--------------------------|\n\
    \         |                                                     |\n         |\
    \    0        1        2        3        4        5   |\n         +--------------------------------------------+--------+\n\
    \         |                  Reserved                  |  CRCV  |\n         +--------------------------------------------+--------+\n\
    \               Figure 15. iFCP Common Encapsulation Flags\n   For iFCP, the CRC\
    \ field MUST be valid, and CRCV MUST be set to one.\n"
- title: 5.3.2.  SOF and EOF Delimiter Fields
  contents:
  - "5.3.2.  SOF and EOF Delimiter Fields\n   The format of the delimiter fields is\
    \ shown below.\n   W|------------------------------Bit------------------------------|\n\
    \   o|                                                               |\n   r|\
    \                      1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 3 3|\n   d|0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1|\n    +---------------+---------------+---------------+---------------+\n\
    \   0|      SOF      |      SOF      |     -SOF      |     -SOF      |\n    +---------------+---------------+---------------+---------------+\n\
    \   1|                                                               |\n    +-----\
    \                   FC frame content                  -----+\n    |          \
    \                                                     |\n    +---------------+---------------+---------------+---------------+\n\
    \   n|      EOF      |      EOF      |     -EOF      |     -EOF      |\n    +---------------+---------------+---------------+---------------+\n\
    \                Figure 16. FC Frame Encapsulation Format\n   SOF (bits 0-7 and\
    \ bits 8-15 in word 0):  iFCP uses the following\n   subset of the SOF fields\
    \ specified in [ENCAP].  For convenience,\n   these are reproduced in Table 3.\
    \  The authoritative encodings should\n   be obtained from [ENCAP].\n        \
    \                   +-------+----------+\n                           |  FC   |\
    \          |\n                           |  SOF  | SOF Code |\n              \
    \             +-------+----------+\n                           | SOFi2 |   0x2D\
    \   |\n                           | SOFn2 |   0x35   |\n                     \
    \      | SOFi3 |   0x2E   |\n                           | SOFn3 |   0x36   |\n\
    \                           +-------+----------+\n       Table 3. Translation\
    \ of FC SOF Values to SOF Field Contents\n   -SOF (bits 16-23 and 24-31 in word\
    \ 0): The -SOF fields contain the\n   ones complement the value in the SOF fields.\n\
    \   EOF (bits 0-7 and 8-15 in word n):  iFCP uses the following subset of\n  \
    \ EOF fields specified in [ENCAP].  For convenience, these are\n   reproduced\
    \ in Table 4.  The authoritative encodings should be\n   obtained from [ENCAP].\n\
    \                           +-------+----------+\n                           |\
    \  FC   |          |\n                           |  EOF  | EOF Code |\n      \
    \                     +-------+----------+\n                           | EOFn\
    \  |   0x41   |\n                           | EOFt  |   0x42   |\n           \
    \                +-------+----------+\n       Table 4. Translation of FC EOF Values\
    \ to EOF Field Contents\n   -EOF (bits 16-23 and 24-31 in word n): The -EOF fields\
    \ contain the\n   ones complement the value in the EOF fields.\n   iFCP implementations\
    \ SHALL place a copy of the SOF and EOF delimiter\n   codes in the appropriate\
    \ header fields.\n"
- title: 5.3.3.  Frame Encapsulation
  contents:
  - "5.3.3.  Frame Encapsulation\n   A fibre channel Frame to be encapsulated MUST\
    \ first be validated as\n   described in [FC-FS].  Any frames received from a\
    \ locally attached\n   fibre channel device that do not pass the validity tests\
    \ in [FC-FS]\n   SHALL be discarded by the gateway.\n   If the frame is a PLOGI\
    \ ELS, the creation of an iFCP session, as\n   described in Section 7.3.1.7, may\
    \ precede encapsulation.  Once the\n   session has been created, frame encapsulation\
    \ SHALL proceed as\n   follows.\n   The S_ID and D_ID fields in the frame header\
    \ SHALL be referenced to\n   look up the iFCP session descriptor (see Section\
    \ 5.2.2.2).  If no\n   iFCP session descriptor exists, the frame SHALL be discarded.\n\
    \   Frame types submitted for encapsulation and forwarding on the IP\n   network\
    \ SHALL have one of the SOF delimiters in Table 3 and an EOF\n   delimiter from\
    \ Table 4.  Other valid frame types MUST be processed\n   internally by the gateway\
    \ as specified in the appropriate fibre\n   channel specification.\n   If operating\
    \ in address translation mode and processing a special\n   link service message\
    \ requiring the inclusion of supplemental data,\n   the gateway SHALL format the\
    \ frame payload and add the supplemental\n   information specified in Section\
    \ 7.1.  The gateway SHALL then\n   calculate a new FC CRC on the reformatted frame.\n\
    \   Otherwise, the frame contents SHALL NOT be modified and the gateway\n   MAY\
    \ encapsulate and transmit the frame image without recalculating\n   the FC CRC.\n\
    \   The frame originator MUST then create and fill in the header and the\n   SOF\
    \ and EOF delimiter words, as specified in Sections 5.3.1 and\n   5.3.2.\n"
- title: 5.3.4.  Frame De-encapsulation
  contents:
  - "5.3.4.  Frame De-encapsulation\n   The receiving gateway SHALL perform de-encapsulation\
    \ as follows:\n   Upon receiving the encapsulated frame, the gateway SHALL check\
    \ the\n   header CRC.  If the header CRC is valid, the receiving gateway SHALL\n\
    \   check the iFCP flags field.  If one of the error conditions in Table\n   5\
    \ is detected, the gateway SHALL handle the error as specified in\n   Section\
    \ 5.2.3.\n      +------------------------------+-------------------------+\n \
    \     |      Condition               |      Error Type         |\n      +==============================+=========================+\n\
    \      | Header CRC Invalid           | Encapsulation error     |\n      +------------------------------+-------------------------+\n\
    \      | SES = 1, TRP or SPC not 0    | Encapsulation error     |\n      +------------------------------+-------------------------+\n\
    \      | SES = 0, TRP set incorrectly | Incorrect address mode  |\n      +------------------------------+-------------------------+\n\
    \                 Table 5. Encapsulation Header Errors\n   The receiving gateway\
    \ SHALL then verify the frame propagation delay\n   as described in Section 8.2.1.\
    \  If the propagation delay is too long,\n   the frame SHALL be discarded.  Otherwise,\
    \ the gateway SHALL check the\n   SOF and EOF in the encapsulation header.  A\
    \ frame SHALL be discarded\n   if it has an SOF code that is not in Table 3 or\
    \ an EOF code that is\n   not in Table 4.\n   The gateway SHALL then de-encapsulate\
    \ the frame as follows:\n   a) Check the FC CRC and discard the frame if the CRC\
    \ is invalid.\n   b) If operating in address translation mode, replace the S_ID\
    \ field\n      with the N_PORT alias of the frame originator, and the D_ID with\n\
    \      the N_PORT ID, of the frame recipient.  Both parameters SHALL be\n    \
    \  obtained from the iFCP session descriptor.\n   c) If processing a special link\
    \ service message, replace the frame\n      with a copy whose payload has been\
    \ modified as specified in\n      Section 7.1.\n   The de-encapsulated frame SHALL\
    \ then be forwarded to the N_PORT\n   specified in the D_ID field.  If the frame\
    \ contents have been\n   modified by the receiving gateway, a new FC CRC SHALL\
    \ be calculated.\n"
- title: 6.  TCP Session Control Messages
  contents:
  - "6.  TCP Session Control Messages\n   TCP session control messages are used to\
    \ create and manage an iFCP\n   session as described in Section 5.2.2.  They are\
    \ passed between peer\n   iFCP Portals and are only processed within the iFCP\
    \ layer.\n   The message format is based on the fibre channel extended link\n\
    \   service message template shown below.\n    Word\n      0<--Bits-->7 8<---------------Bits------------------------>31\n\
    \     +------------+------------------------------------------------+\n    0|\
    \ R_CTL      |            D_ID [0x00 00 00]                   |\n     |[Req =\
    \ 0x22]| [Destination of extended link Service request] |\n     |[Rep = 0x23]|\
    \                                                |\n     +------------+------------------------------------------------+\n\
    \    1| CS_CTL     |            S_ID [0x00 00 00]                   |\n     |\
    \ [0x0]      | [Source of extended link service request]      |\n     +------------+------------------------------------------------+\n\
    \    2|TYPE [0x1]  |               F_CTL [0]                        |\n     +------------+------------------+-----------------------------+\n\
    \    3|SEQ_ID      | DF_CTL [0x00]    |          SEQ_CNT [0x00]     |\n     |[0x0]\
    \       |                  |                             |\n     +------------+------------------+-----------------------------+\n\
    \    4|         OX_ID [0x0000]        |          RX_ID_[0x0000]     |\n     +-------------------------------+-----------------------------+\n\
    \    5|                           Parameter                         |\n     |\
    \                         [ 00 00 00 00 ]                     |\n     +-------------------------------------------------------------+\n\
    \    6|                        LS_COMMAND                           |\n     |\
    \                [Session Control Command Code]               |\n     +-------------------------------------------------------------+\n\
    \    7|                                                             |\n    .|\
    \             Additional Session Control Parameters           |\n    .|      \
    \                ( if any )                             |\n    n|            \
    \                                                 |\n     +=============================================================+\n\
    \    n|                    Fibre Channel CRC                        |\n    +|\
    \                                                             |\n    1+=============================================================+\n\
    \             Figure 17. Format of Session Control Message\n   The LS_COMMAND\
    \ value for the response remains the same as that used\n   for the request.\n\
    \   The session control frame is terminated with a fibre channel CRC.\n   The\
    \ frame SHALL be encapsulated and de-encapsulated according to the\n   rules specified\
    \ in Section 5.3.\n   The encapsulation header for the link Service frame carrying\
    \ a\n   session control message SHALL be set as follows:\n   Encapsulation Header\
    \ Fields:\n      LS_COMMAND_ACC       0\n      iFCP Flags           SES = 1\n\
    \                           TRP = 0\n                           INT = 0\n    \
    \  SOF code             SOFi3 encoding (0x2E)\n      EOF code             EOFt\
    \ encoding (0x42)\n   The encapsulation time stamp words SHALL be set as described\
    \ for each\n   message type.\n   The SOF and EOF delimiter words SHALL be set\
    \ based on the SOF and EOF\n   codes specified above.\n   Table 6 lists the values\
    \ assigned to byte 0 of the LS_COMMAND field\n   for iFCP session control messages.\n\
    \   +--------------+-------------------------+----------+-------------+\n   |\
    \ LS_COMMAND   |       Function          | Mnemonic | iFCP        |\n   | field,\
    \ byte 0|                         |          | Support     |\n   +--------------+-------------------------+----------+-------------+\n\
    \   |    0xE0      |    Connection Bind      |  CBIND   |  REQUIRED   |\n   +--------------+-------------------------+----------+-------------+\n\
    \   |    0xE4      |    Unbind Connection    |  UNBIND  |  REQUIRED   |\n   +--------------+-------------------------+----------+-------------+\n\
    \   |    0xE5      | Test Connection Liveness|  LTEST   |  REQUIRED   |\n   +--------------+-------------------------+----------+-------------+\n\
    \   | 0x01-0x7F    |    Vendor-Specific      |          |             |\n   +--------------+-------------------------+----------+-------------+\n\
    \   |    0x00      | Reserved -- Unassignable|          |             |\n   +--------------+-------------------------+----------+-------------+\n\
    \   | All other    |    Reserved             |          |             |\n   |\
    \ values       |                         |          |             |\n   +--------------+-------------------------+----------+-------------+\n\
    \        Table 6. Session Control LS_COMMAND Field, Byte 0 Values\n"
- title: 6.1.  Connection Bind (CBIND)
  contents:
  - "6.1.  Connection Bind (CBIND)\n   As described in Section 5.2.2.2, the CBIND\
    \ message and response are\n   used to bind an N_PORT login to a specific TCP\
    \ connection and\n   establish an iFCP session.  In the CBIND request message,\
    \ the source\n   and destination N_PORTs are identified by their worldwide port\
    \ names.\n   The time stamp words in the encapsulation header SHALL be set to\
    \ zero\n   in the request and response message frames.\n   The following shows\
    \ the format of the CBIND request.\n      +------+------------+------------+-----------+----------+\n\
    \      | Word |   Byte 0   |   Byte 1   |   Byte 2  |  Byte 3  |\n      +------+------------+------------+-----------+----------+\n\
    \      | 0    | Cmd = 0xE0 |   0x00     |   0x00    |  0x00    |\n      +------+------------+------------+-----------+----------+\n\
    \      | 1    |  LIVENESS TEST INTERVAL | Addr Mode | iFCP Ver |\n      |    \
    \  |        (Seconds)        |           |          |\n      +------+-------------------------+-----------+----------+\n\
    \      | 2    |                  USER INFO                     |\n      +------+------------+------------+-----------+----------+\n\
    \      | 3    |                                                |\n      +------+\
    \              SOURCE N_PORT NAME                |\n      | 4    |           \
    \                                     |\n      +------+------------------------------------------------+\n\
    \      | 5    |                                                |\n      +------+\
    \              DESTINATION N_PORT NAME           |\n      | 6    |           \
    \                                     |\n      +------+------------------------------------------------+\n\
    \   Addr Mode:             The addressing mode of the originating\n          \
    \                gateway.  0 = Address Translation mode;\n                   \
    \       1 = Address Transparent mode.\n   iFCP Ver:              iFCP version\
    \ number.  SHALL be set to 1.\n   LIVENESS TEST          If non-zero, requests\
    \ that the receiving\n   INTERVAL:              gateway transmit an LTEST message\
    \ at the\n                          specified interval in seconds.  If set to\n\
    \                          zero, LTEST messages SHALL NOT be sent.\n   USER INFO:\
    \             Contains any data desired by the requestor.\n                  \
    \        This information MUST be echoed by the\n                          recipient\
    \ in the CBIND response message.\n   SOURCE N_PORT NAME:    The Worldwide Port\
    \ Name (WWPN) of the N_PORT\n                          locally attached to the\
    \ gateway originating\n                          the CBIND request.\n   DESTINATION\
    \ N_PORT     The Worldwide Port Name (WWPN) of the\n   NAME:                 \
    \ N_PORT locally attached to the gateway\n                          receiving\
    \ the CBIND request.\n   The following shows the format of the CBIND response.\n\
    \         +------+------------+------------+-----------+----------+\n        \
    \ | Word |   Byte 0   |   Byte 1   |   Byte 2  |  Byte 3  |\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Cmd = 0xE0 |   0x00     |   0x00    |  0x00    |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \  LIVENESS TEST INTERVAL | Addr Mode | iFCP Ver |\n         |      |      (Seconds)\
    \          |           |          |\n         +------+-------------------------+-----------+----------+\n\
    \         | 2    |                  USER INFO                     |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 3    |\
    \                                                |\n         +------+        \
    \       SOURCE N_PORT NAME               |\n         | 4    |                \
    \                                |\n         +------+------------------------------------------------+\n\
    \         | 5    |                                                |\n        \
    \ +------+              DESTINATION N_PORT NAME           |\n         | 6    |\
    \                                                |\n         +------+-------------------------+----------------------+\n\
    \         | 7    |        Reserved         |     CBIND Status     |\n        \
    \ +------+-------------------------+----------------------+\n         | 8    |\
    \        Reserved         |  CONNECTION HANDLE   |\n         +------+-------------------------+----------------------+\n\
    \                           Total Length = 36\n   Addr Mode:             The address\
    \ translation mode of the\n                          responding gateway.  0 =\
    \ Address\n                          Translation mode, 1 = Address Transparent\n\
    \                          mode.\n   iFCP Ver:              iFCP version number.\
    \  Shall be set to 1.\n   LIVENESS TEST          If non-zero, requests that the\
    \ gateway\n   INTERVAL:              receiving the CBIND RESPONSE transmit an\n\
    \                          LTEST message at the specified interval in\n      \
    \                    seconds.  If zero, LTEST messages SHALL NOT\n           \
    \               be sent.\n   USER INFO:             Echoes the value received\
    \ in the USER INFO\n                          field of the CBIND request message.\n\
    \   SOURCE N_PORT NAME:    Contains the Worldwide Port Name (WWPN) of\n      \
    \                    the N_PORT locally attached to the gateway\n            \
    \              issuing the CBIND request.\n   DESTINATION N_PORT     Contains\
    \ the Worldwide Port Name (WWPN) of\n   NAME:                  the N_PORT locally\
    \ attached to the gateway\n                          issuing the CBIND response.\n\
    \   CBIND STATUS:          Indicates success or failure of the CBIND\n       \
    \                   request.  CBIND values are shown below.\n   CONNECTION HANDLE:\
    \     Contains a value assigned by the gateway to\n                          identify\
    \ the connection.  The connection\n                          handle is required\
    \ when the UNBIND\n                          request is issued.\n   CBIND Status\
    \       Description\n   ------------       -----------\n       0             \
    \ Success\n     1 - 15           Reserved\n       16             Failed - Unspecified\
    \ Reason\n       17             Failed - No such device\n       18           \
    \  Failed - iFCP session already exists\n       19             Failed - Lack of\
    \ resources\n       20             Failed - Incompatible address translation mode\n\
    \       21             Failed - Incorrect protocol version number\n       22 \
    \            Failed - Gateway not Synchronized (see Section\n                \
    \      8.2)\n       Others         Reserved\n"
- title: 6.2.  Unbind Connection (UNBIND)
  contents:
  - "6.2.  Unbind Connection (UNBIND)\n   UNBIND is used to terminate an iFCP session\
    \ and disassociate the TCP\n   connection as described in Section 5.2.3.\n   The\
    \ UNBIND message is transmitted over the connection that is to be\n   unbound.\
    \  The time stamp words in the encapsulation header shall be\n   set to zero in\
    \ the request and response message frames.\n   The following is the format of\
    \ the UNBIND request message.\n         +------+------------+------------+-----------+----------+\n\
    \         | Word |   Byte 0   |   Byte 1   |   Byte 2  |  Byte 3  |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0xE4 |   0x00     |   0x00    |  0x00    |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    |                  USER INFO                     |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \       Reserved          |  CONNECTION HANDLE   |\n         +------+------------+------------+----------------------+\n\
    \         | 3    |                  Reserved                      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 4    |\
    \                  Reserved                      |\n         +------+------------+------------+-----------+----------+\n\
    \   USER INFO              Contains any data desired by the requestor.\n     \
    \                     This information MUST be echoed by the\n               \
    \           recipient in the UNBIND response message.\n   CONNECTION HANDLE: \
    \    Contains the gateway-assigned value from\n                          the CBIND\
    \ request.\n   The following shows the format of the UNBIND response message.\n\
    \         +------+------------+------------+-----------+----------+\n        \
    \ | Word |   Byte 0   |   Byte 1   |   Byte 2  |  Byte 3  |\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Cmd = 0xE4 |   0x00     |   0x00    |  0x00    |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \                  USER INFO                     |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2    |       Reserved          |  CONNECTION HANDLE   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 3    |\
    \                  Reserved                      |\n         +------+------------+------------+-----------+----------+\n\
    \         | 4    |                  Reserved                      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 5    |\
    \         Reserved        |     UNBIND STATUS    |\n         +------+------------+------------+-----------+----------+\n\
    \   USER INFO              Echoes the value received in the USER INFO\n      \
    \                    field of the UNBIND request message.\n   CONNECTION HANDLE:\
    \     Echoes the CONNECTION HANDLE specified in\n                          the\
    \ UNBIND request message.\n   UNBIND STATUS:         Indicates the success or\
    \ failure of the\n                          UNBIND request as follows:\n     \
    \    Unbind Status      Description\n         -------------      -----------\n\
    \                  0         Successful - No other status\n               1 -\
    \ 15       Reserved\n                 16         Failed - Unspecified Reason\n\
    \                 18         Failed - Connection ID Invalid\n               Others\
    \       Reserved\n"
- title: 6.3.  LTEST -- Test Connection Liveness
  contents:
  - "6.3.  LTEST -- Test Connection Liveness\n   The LTEST message is sent at the\
    \ interval specified in the CBIND\n   request or response payload.  The LTEST\
    \ encapsulation time stamp\n   SHALL be set as described in Section 8.2.1 and\
    \ may be used by the\n   receiver to compute an estimate of propagation delay.\
    \  However, the\n   propagation delay limit SHALL NOT be enforced.\n         +------+------------+------------+-----------+----------+\n\
    \         | Word |   Byte 0   |   Byte 1   |   Byte 2  |  Byte 3  |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0xE5 |   0x00     |   0x00    |  0x00    |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    |  LIVENESS TEST INTERVAL |        Reserved      |\n        \
    \ |      |        (Seconds)        |                      |\n         +------+-------------------------+----------------------+\n\
    \         | 2    |                   COUNT                        |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 3    |\
    \                                                |\n         +------+        \
    \      SOURCE N_PORT NAME                |\n         | 4    |                \
    \                                |\n         +------+------------------------------------------------+\n\
    \         | 5    |                                                |\n        \
    \ +------+              DESTINATION N_PORT NAME           |\n         | 6    |\
    \                                                |\n         +------+------------------------------------------------+\n\
    \   LIVENESS TEST          Copy of the LIVENESS TEST INTERVAL\n   INTERVAL:  \
    \            specified in the CBIND request or reply\n                       \
    \   message.\n   COUNT:                 Monotonically increasing value, initialized\n\
    \                          to 0 and incremented by one for each\n            \
    \              successive LTEST message.\n   SOURCE N_PORT NAME:    Contains a\
    \ copy of the SOURCE N_PORT NAME\n                          specified in the CBIND\
    \ request.\n   DESTINATION N_PORT     Contains a copy of the DESTINATION N_PORT\n\
    \   NAME:                  NAME specified in the CBIND request.\n"
- title: 7.  Fibre Channel Link Services
  contents:
  - "7.  Fibre Channel Link Services\n   Link services provide a set of fibre channel\
    \ functions that allow a\n   port to send control information or request another\
    \ port to perform a\n   specific control function.\n   There are three types of\
    \ link services:\n   a) Basic\n   b) Extended\n   c) ULP-specific (FC-4)\n   Each\
    \ link service message (request and reply) is carried by a fibre\n   channel sequence\
    \ and can be segmented into multiple frames.\n   The iFCP layer is responsible\
    \ for transporting link service messages\n   across the IP network.  This includes\
    \ mapping link service messages\n   appropriately from the domain of the fibre\
    \ channel transport to that\n   of the IP network.  This process may require special\
    \ processing and\n   the inclusion of supplemental data by the iFCP layer.\n \
    \  Each link service MUST be processed according to one of the following\n   rules:\n\
    \   a) Pass-through - The link service message and reply MUST be\n      delivered\
    \ to the receiving N_PORT by the iFCP protocol layer\n      without altering the\
    \ message payload.  The link service message\n      and reply are not processed\
    \ by the iFCP protocol layer.\n   b) Special -  Applies to a link service reply\
    \ or request requiring\n      the intervention of the iFCP layer before forwarding\
    \ to the\n      destination N_PORT.  Such messages may contain fibre channel\n\
    \      addresses in the payload or may require other special processing.\n   c)\
    \ Rejected - When issued by a locally attached N_PORT, the specified\n      link\
    \ service request MUST be rejected by the iFCP gateway.  The\n      gateway SHALL\
    \ return an LS_RJT response with a Reason Code of 0x0B\n      (Command Not Supported),\
    \ and a Reason Code Explanation of 0x0 (No\n      Additional Explanation).\n \
    \  This section describes the processing for special link services,\n   including\
    \ the manner in which supplemental data is added to the\n   message payload.\n\
    \   Appendix A enumerates all link services and the iFCP processing\n   policy\
    \ that applies to each.\n"
- title: 7.1.  Special Link Service Messages
  contents:
  - "7.1.  Special Link Service Messages\n   Special link service messages require\
    \ the intervention of the iFCP\n   layer before forwarding to the destination\
    \ N_PORT.  Such intervention\n   is required in order to:\n   a) service any link\
    \ service message that requires special handling,\n      such as a PLOGI, and\n\
    \   b) service any link service message that has an N_PORT address in the\n  \
    \    payload in address translation mode only .\n   Unless the link service description\
    \ specifies otherwise, support for\n   each special link service is MANDATORY.\n\
    \   Such messages SHALL be transmitted in a fibre channel frame with the\n   format\
    \ shown in Figure 18 for extended link services or Figure 19 for\n   FC-4 link\
    \ services.\n    Word\n      0<---Bit-->7 8<-------------------------------------------->31\n\
    \     +------------+------------------------------------------------+\n    0|\
    \ R_CTL      |                     D_ID                       |\n     |[Req =\
    \ 0x22]|[Destination of extended link Service request]  |\n     |[Rep = 0x23]|\
    \                                               |\n     +------------+------------------------------------------------+\n\
    \    1| CS_CTL     |                     S_ID                       |\n     |\
    \            | [Source of extended link service request]      |\n     +------------+------------------------------------------------+\n\
    \    2| TYPE       |                     F_CTL                      |\n     |\
    \ [0x01]     |                                                |\n     +------------+------------------+-----------------------------+\n\
    \    3| SEQ_ID     |        DF_CTL    |          SEQ_CNT            |\n     +------------+------------------+-----------------------------+\n\
    \    4|          OX_ID                |             RX_ID           |\n     +-------------------------------+-----------------------------+\n\
    \    5|                         Parameter                           |\n     |\
    \                      [ 00 00 00 00 ]                        |\n     +-------------------------------------------------------------+\n\
    \    6|                         LS_COMMAND                          |\n     |\
    \               [Extended Link Service Command Code]          |\n     +-------------==----------------------------------------------+\n\
    \    7|                                                             |\n    .|\
    \             Additional Service Request Parameters           |\n    .|      \
    \                ( if any )                             |\n    n|            \
    \                                                 |\n     +-------------------------------------------------------------+\n\
    \          Figure 18. Format of an Extended Link Service Frame\n    Word\n   \
    \   0<---Bit-->7 8<-------------------------------------------->31\n     +------------+------------------------------------------------+\n\
    \    0| R_CTL      |                     D_ID                       |\n     |[Req\
    \ = 0x32]|   [Destination of FC-4 link Service request]   |\n     |[Rep = 0x33]|\
    \                                                |\n     +------------+------------------------------------------------+\n\
    \    1| CS_CTL     |                     S_ID                       |\n     |\
    \            |    [Source of FC-4 link service request]       |\n     +------------+------------------------------------------------+\n\
    \    2| TYPE       |                     F_CTL                      |\n     |\
    \ (FC-4      |                                                |\n     |  specific)\
    \ |                                                |\n     +------------+------------------+-----------------------------+\n\
    \    3| SEQ_ID     |        DF_CTL    |          SEQ_CNT            |\n     +------------+------------------+-----------------------------+\n\
    \    4|         OX_ID                 |             RX_ID           |\n     +-------------------------------+-----------------------------+\n\
    \    5|                        Parameter                            |\n     |\
    \                     [ 00 00 00 00 ]                         |\n     +-------------------------------------------------------------+\n\
    \    6|                        LS_COMMAND                           |\n     |\
    \               [FC-4 Link Service Command Code]              |\n     +-------------------------------------------------------------+\n\
    \    7|                                                             |\n    .|\
    \             Additional Service Request Parameters           |\n    .|      \
    \                ( if any )                             |\n    n|            \
    \                                                 |\n     +-------------------------------------------------------------+\n\
    \            Figure 19. Format of an FC-4 Link Service Frame\n"
- title: 7.2.  Link Services Requiring Payload Address Translation
  contents:
  - "7.2.  Link Services Requiring Payload Address Translation\n   This section describes\
    \ the handling for link service frames\n   containing N_PORT addresses in the\
    \ frame payload.  Such addresses\n   SHALL only be translated when the gateway\
    \ is operating in address\n   translation mode.  When operating in address transparent\
    \ mode, these\n   addresses SHALL NOT be translated, and such link service messages\n\
    \   SHALL NOT be sent as special frames unless other processing by the\n   iFCP\
    \ layer is required.\n   Supplemental data includes information required by the\
    \ receiving\n   gateway to convert an N_PORT address in the payload to an N_PORT\n\
    \   address in the receiving gateway's address space.  The following\n   rules\
    \ define the manner in which such supplemental data shall be\n   packaged and\
    \ referenced.\n   For an N_PORT address field, the gateway originating the frame\
    \ MUST\n   set the value in the payload to identify the address translation type\n\
    \   as follows:\n      0x00 00 01 - The gateway receiving the frame from the IP\
    \ network\n      MUST replace the contents of the field with the N_PORT alias\
    \ of\n      the frame originator.  This translation type MUST be used when the\n\
    \      address to be converted is that of the source N_PORT.\n      0x00 00 02\
    \ - The gateway receiving the frame from the IP network\n      MUST replace the\
    \ contents of the field with the N_PORT ID of the\n      destination N_PORT. \
    \ This translation type MUST be used when the\n      address to be converted is\
    \ that of the destination N_PORT\n      0x00 00 03 - The gateway receiving the\
    \ frame from the IP network\n      MUST reference the specified supplemental data\
    \ to set the field\n      contents.  The supplemental information is the 64-bit\
    \ worldwide\n      identifier of the N_PORT, as set forth in the fibre channel\n\
    \      specification [FC-FS].  If not otherwise part of the link service\n   \
    \   payload, this information MUST be appended in accordance with the\n      applicable\
    \ link service description.  Unless specified otherwise,\n      this translation\
    \ type SHALL NOT be used if the address to be\n      converted corresponds to\
    \ that of the frame originator or\n      recipient.\n   Since fibre channel addressing\
    \ rules prohibit the assignment of\n   fabric addresses with a domain ID of 0,\
    \ the above codes will never\n   correspond to valid N_PORT fabric IDs.\n   If\
    \ the sending gateway cannot obtain the worldwide identifier of an\n   N_PORT,\
    \ the gateway SHALL terminate the request with an LS_RJT\n   message as described\
    \ in [FC-FS].  The Reason Code SHALL be set to\n   0x07 (protocol error), and\
    \ the Reason Explanation SHALL be set to\n   0x1F (Invalid N_PORT identifier).\n\
    \   Supplemental data is sent with the link service request or ACC frames\n  \
    \ in one of the following ways:\n   a) By appending the necessary data to the\
    \ end of the link service\n      frame.\n   b) By extending the sequence with\
    \ additional frames.\n   In the first case, a new frame SHALL be created whose\
    \ length includes\n   the supplemental data.  The procedure for extending the\
    \ link service\n   sequence with additional frames is dependent on the link service\n\
    \   type.\n   For each field requiring address translation, the receiving gateway\n\
    \   SHALL reference the translation type encoded in the field and replace\n  \
    \ it with the N_PORT address as shown in Table 7.\n         +------------------+------------------------------------+\n\
    \         |    Translation   |          N_PORT Translation        |\n        \
    \ |    Type Code     |                                    |\n         +------------------+------------------------------------+\n\
    \         | 0x00 00 01       | Replace field contents with N_PORT |\n        \
    \ |                  | alias of frame originator.         |\n         +------------------+------------------------------------+\n\
    \         | 0x00 00 02       | Replace field contents with N_PORT |\n        \
    \ |                  | ID of frame recipient.             |\n         +------------------+------------------------------------+\n\
    \         |                  | Lookup N_PORT via iSNS query.      |\n        \
    \ |                  | If locally attached, replace with  |\n         | 0x00 00\
    \ 03       | N_PORT ID.                         |\n         |                \
    \  | If remotely attached, replace with |\n         |                  | N_PORT\
    \ alias from remote N_PORT.   |\n         |                  | descriptor (see\
    \ Section 5.2.2.1).  |\n         +------------------+------------------------------------+\n\
    \                 Table 7. Link Service Address Translation\n   For translation\
    \ type 3, the receiving gateway SHALL obtain the\n   information needed to fill\
    \ in the field in the link service frame\n   payload by converting the specified\
    \ N_PORT worldwide identifier to a\n   gateway IP address and N_PORT ID.  This\
    \ information MUST be obtained\n   through an iSNS name server query.  If the\
    \ query is unsuccessful, the\n   gateway SHALL terminate the request with an LS_RJT\
    \ response message\n   as described in [FC-FS].  The Reason Code SHALL be set\
    \ to 0x07\n   (protocol error), and the Reason Explanation SHALL be set to 0x1F\n\
    \   (Invalid N_PORT identifier).\n   After applying the supplemental data, the\
    \ receiving gateway SHALL\n   forward the resulting link service frames to the\
    \ destination N_PORT\n   with the supplemental information removed.\n"
- title: 7.3.  Fibre Channel Link Services Processed by iFCP
  contents:
  - "7.3.  Fibre Channel Link Services Processed by iFCP\n   The following Extended\
    \ and FC-4 Link Service Messages must receive\n   special processing.\n      \
    \   Extended Link Service            LS_COMMAND   Mnemonic\n         Messages\
    \                         ----------   --------\n         ----------------------\n\
    \         Abort Exchange                  0x06 00 00 00 ABTX\n         Discover\
    \ Address                0x52 00 00 00 ADISC\n         Discover Address Accept\
    \         0x02 00 00 00 ADISC ACC\n         FC Address Resolution           0x55\
    \ 00 00 00 FARP-REPLY\n         Protocol Reply\n         FC Address Resolution\
    \           0x54 00 00 00 FARP-REQ\n         Protocol Request\n         Logout\
    \                          0x05 00 00 00 LOGO\n         Port Login           \
    \           0x30 00 00 00 PLOGI\n         Read Exchange Concise           0x13\
    \ 00 00 00 REC\n         Read Exchange Concise           0x02 00 00 00 REC ACC\n\
    \         Accept\n         Read Exchange Status Block      0x08 00 00 00 RES\n\
    \         Read Exchange Status Block      0x02 00 00 00 RES ACC\n         Accept\n\
    \         Read Link Error Status          0x0F 00 00 00 RLS\n         Block\n\
    \         Read Sequence Status Block      0x09 00 00 00 RSS\n         Reinstate\
    \ Recovery              0x12 00 00 00 RRQ\n         Qualifier\n         Request\
    \ Sequence                0x0A 00 00 00 RSI\n         Initiative\n         Scan\
    \ Remote Loop                0x7B 00 00 00 SRL\n         Third Party Process Logout\
    \      0x24 00 00 00 TPRLO\n         Third Party Process Logout      0x02 00 00\
    \ 00 TPRLO ACC\n         Accept\n         FC-4 Link Service Messages       LS_COMMAND\
    \   Mnemonic\n         --------------------------       ----------   --------\n\
    \         FCP Read Exchange Concise       0x13 00 00 00 FCP REC\n         FCP\
    \ Read Exchange Concise       0x02 00 00 00 FCP REC\n         Accept         \
    \                               ACC\n   Each encapsulated fibre channel frame\
    \ that is part of a special link\n   service MUST have the SPC bit set to one\
    \ in the iFCP FLAGS field of\n   the encapsulation header, as specified in Section\
    \ 5.3.1.  If an ACC\n   link service response requires special processing, the\
    \ responding\n   gateway SHALL place a copy of LS_COMMAND bits 0 through 7, from\
    \ the\n   link service request frame, in the LS_COMMAND_ACC field of the ACC\n\
    \   encapsulation header.  Supplemental data (if any) MUST be appended as\n  \
    \ described in the following section.\n   The format of each special link service\
    \ message, including\n   supplemental data, where applicable, is shown in the\
    \ following\n   sections.  Each description shows the basic format, as specified\
    \ in\n   the applicable FC standard, followed by supplemental data as shown in\n\
    \   the example below.\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \                  LS_COMMAND                    |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    |                                                |\n        \
    \ | .    |                                                |\n         | .    |\
    \          Link Service Frame Payload            |\n         |      |        \
    \                                        |\n         | n    |                \
    \                                |\n         +======+============+============+===========+==========+\n\
    \         | n+1  |                                                |\n        \
    \ |  .   |            Supplemental Data                   |\n         |  .   |\
    \               (if any)                         |\n         | n+k  |        \
    \                                        |\n         +======+================================================+\n\
    \               Figure 20. Special Link Service Frame Payload\n"
- title: 7.3.1.  Special Extended Link Services
  contents:
  - "7.3.1.  Special Extended Link Services\n   The following sections define extended\
    \ link services for which\n   special processing is required.\n"
- title: 7.3.1.1.  Abort Exchange (ABTX)
  contents:
  - "7.3.1.1.  Abort Exchange (ABTX)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x6  |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | RRQ Status |     Exchange Originator S_ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \   OX_ID of Tgt exchange | RX_ID of tgt exchange|\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-10 |  Optional association header (32 bytes         |\n        \
    \ +======+============+============+===========+==========+\n         Fields Requiring\
    \       Translation   Supplemental Data\n         Address Translation     Type\
    \ (see      (type 3 only)\n         -------------------    Section 7.2)     ------------\n\
    \                                -----------\n         Exchange Originator   \
    \     1, 2              N/A\n         S_ID\n         Other Special Processing:\n\
    \            None.\n"
- title: 7.3.1.2.  Discover Address (ADISC)
  contents:
  - "7.3.1.2.  Discover Address (ADISC)\n      Format of ADISC ELS:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x52 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Reserved   |  Hard address of ELS Originator   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2-3  |\
    \     Port Name of Originator                    |\n         +------+------------+------------+-----------+----------+\n\
    \         | 4-5  |     Node Name of originator                    |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 6    |\
    \  Rsvd      |  N_PORT ID  of ELS Originator     |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation    Supplemental Data\n         Address\
    \ Translation     Type (see       (type 3 only)\n         -------------------\
    \    Section 7.2)     -------------\n                                ------------\n\
    \         N_PORT ID of ELS            1                N/A\n         Originator\n\
    \         Other Special Processing:\n            The Hard Address of the ELS originator\
    \ SHALL be set to 0.\n"
- title: 7.3.1.3.  Discover Address Accept (ADISC ACC)
  contents:
  - "7.3.1.3.  Discover Address Accept (ADISC ACC)\n      Format of ADISC ACC ELS:\n\
    \         +------+------------+------------+-----------+----------+\n        \
    \ | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Cmd = 0x20 |   0x00     |    0x00   |   0x00   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \ Reserved   |  Hard address of ELS Originator   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2-3  |     Port Name of Originator                    |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 4-5  |\
    \     Node Name of originator                    |\n         +------+------------+------------+-----------+----------+\n\
    \         | 6    |  Rsvd      |  N_PORT ID of ELS Originator      |\n        \
    \ +======+============+============+===========+==========+\n         Fields Requiring\
    \       Translation    Supplemental Data\n         Address Translation     Type\
    \ (see       (type 3 only)\n         -------------------    Section 7.2)     -------------\n\
    \                                ------------\n         N_PORT ID of ELS     \
    \       1                N/A\n         Originator\n         Other Special Processing:\n\
    \            The Hard Address of the ELS originator SHALL be set to 0.\n"
- title: 7.3.1.4.  FC Address Resolution Protocol Reply (FARP-REPLY)
  contents:
  - "7.3.1.4.  FC Address Resolution Protocol Reply (FARP-REPLY)\n   The FARP-REPLY\
    \ ELS is used in conjunction with the FARP-REQ ELS (see\n   Section 7.3.1.5) to\
    \ perform the address resolution services required\n   by the FC-VI protocol [FC-VI]\
    \ and the fibre channel mapping of IP and\n   ARP specified in RFC 2625 [RFC2625].\n\
    \      Format of FARP-REPLY ELS:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x55 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Match Addr |  Requesting N_PORT Identifier     |\n        \
    \ |      | Code Points|                                   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2    | Responder  |  Responding N_PORT Identifier     |\n        \
    \ |      | Action     |                                   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-4  |     Requesting N_PORT Port_Name                |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 5-6  |\
    \     Requesting N_PORT Node_Name                |\n         +------+------------+------------+-----------+----------+\n\
    \         | 7-8  |     Responding N_PORT Port_Name                |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 9-10 |\
    \     Responding N_PORT Node_Name                |\n         +------+------------+------------+-----------+----------+\n\
    \         | 11-14|     Requesting N_PORT IP Address               |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 15-18|\
    \     Responding N_PORT IP Address               |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation    Supplemental Data\n         Address\
    \ Translation     Type (see       (type 3 only)\n         -------------------\
    \    Section 7.2)   -----------------\n                                ------------\n\
    \         Requesting N_PORT           2                N/A\n         Identifier\n\
    \         Responding N_PORT           1                N/A\n         Identifier\n\
    \         Other Special Processing:\n            None.\n"
- title: 7.3.1.5.  FC Address Resolution Protocol Request (FARP-REQ)
  contents:
  - "7.3.1.5.  FC Address Resolution Protocol Request (FARP-REQ)\n   The FARP-REQ\
    \ ELS is used in conjunction with the FC-VI protocol\n   [FC-VI] and IP-to-FC\
    \ mapping of RFC 2625 [RFC2625] to perform IP and\n   FC address resolution in\
    \ an FC fabric.  The FARP-REQ ELS is usually\n   directed to the fabric broadcast\
    \ server at well-known address\n   0xFF-FF-FF for retransmission to all attached\
    \ N_PORTs.\n   Section 9.4 describes the iFCP implementation of FC broadcast server\n\
    \   functionality in an iFCP fabric.\n      Format of FARP_REQ ELS:\n        \
    \ +------+------------+------------+-----------+----------+\n         | Word |\
    \ Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Cmd = 0x54 |   0x00     |    0x00   |   0x00   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \ Match Addr |  Requesting N_PORT Identifier     |\n         |      | Code Points|\
    \                                   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2    | Responder  |  Responding N_PORT Identifier     |\n        \
    \ |      | Action     |                                   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-4  |     Requesting N_PORT Port_Name                |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 5-6  |\
    \     Requesting N_PORT Node_Name                |\n         +------+------------+------------+-----------+----------+\n\
    \         | 7-8  |     Responding N_PORT Port_Name                |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 9-10 |\
    \     Responding N_PORT Node_Name                |\n         +------+------------+------------+-----------+----------+\n\
    \         | 11-14|     Requesting N_PORT IP Address               |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 15-18|\
    \     Responding N_PORT IP Address               |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation   Supplemental Data\n         Address\
    \ Translation     Type (see      (type 3 only)\n         ------------------- \
    \   Section 7.2)  -----------------\n                                -----------\n\
    \         Requesting N_PORT           3        Requesting N_PORT\n         Identifier\
    \                           Port Name\n         Responding N_PORT           3\
    \        Responding N_PORT\n         Identifier                           Port\
    \ Name\n         Other Special Processing:\n            None.\n"
- title: 7.3.1.6.  Logout (LOGO) and LOGO ACC
  contents:
  - "7.3.1.6.  Logout (LOGO) and LOGO ACC\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x5  |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Rsvd       |     N_PORT ID being logged out    |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2-3  |\
    \  Port name of the LOGO originator (8 bytes)    |\n         +======+============+============+===========+==========+\n\
    \   This ELS SHALL always be sent as a special ELS regardless of the\n   translation\
    \ mode in effect.\n         Fields Requiring       Translation   Supplemental\
    \ Data\n         Address Translation     Type (see      (type 3 only)\n      \
    \   -------------------    Section 7.2)   ---------------\n                  \
    \              -----------\n         N_PORT ID Being             1           \
    \    N/A\n         Logged Out\n         Other Special Processing:\n          \
    \  See Section 5.2.3.\n"
- title: 7.3.1.7.  Port Login (PLOGI) and PLOGI ACC
  contents:
  - "7.3.1.7.  Port Login (PLOGI) and PLOGI ACC\n   A PLOGI ELS establishes fibre\
    \ channel communications between two\n   N_PORTs and triggers the creation of\
    \ an iFCP session if one does not\n   exist.\n   The PLOGI request and ACC response\
    \ carry information identifying the\n   originating N_PORT, including a specification\
    \ of its capabilities.\n   If the destination N_PORT accepts the login request,\
    \ it sends an\n   Accept response (an ACC frame with PLOGI payload) specifying\
    \ its\n   capabilities.  This exchange establishes the operating environment\n\
    \   for the two N_PORTs.\n   The following figure is duplicated from [FC-FS],\
    \ and shows the PLOGI\n   message format for both the request and Accept (ACC)\
    \ response.  An\n   N_PORT will reject a PLOGI request by transmitting an LS_RJT\
    \ message\n   containing no payload.\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x3  |   0x00     |    0x00   |   0x00   |\n         |      | Acc = 0x2\
    \  |            |           |          |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1-4  |            Common Service Parameters           |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 5-6  |\
    \            N_PORT Name                         |\n         +------+------------+------------+-----------+----------+\n\
    \         | 7-8  |            Node Name                           |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 9-12 |\
    \            Class 1 Service Parameters          |\n         +------+------------+------------+-----------+----------+\n\
    \         |13-17 |            Class 2 Service Parameters          |\n        \
    \ +------+------------+------------+-----------+----------+\n         |18-21 |\
    \            Class 3 Service Parameters          |\n         +------+------------+------------+-----------+----------+\n\
    \         |22-25 |            Class 4 Service Parameters          |\n        \
    \ +------+------------+------------+-----------+----------+\n         |26-29 |\
    \            Vendor Version Level                |\n         +======+============+============+===========+==========+\n\
    \            Figure 21. Format of PLOGI Request and ACC Payloads\n   Details of\
    \ the above fields, including common and class-based service\n   parameters, can\
    \ be found in [FC-FS].\n   Special Processing\n      As specified in Section 5.2.2.2,\
    \ a PLOGI request addressed to a\n      remotely attached N_PORT MUST cause the\
    \ creation of an iFCP\n      session if one does not exist.  Otherwise, the PLOGI\
    \ and PLOGI ACC\n      payloads MUST be passed through without modification to\
    \ the\n      destination N_PORT using the existing iFCP session.  In either\n\
    \      case, the SPC bit must be set in the frame encapsulation header as\n  \
    \    specified in 5.3.3.\n      If the CBIND to create the iFCP session fails,\
    \ the issuing gateway\n      SHALL terminate the PLOGI with an LS_RJT response.\
    \  The Reason\n      Code and Reason Code Explanation SHALL be selected from Table\
    \ 8\n      based on the CBIND failure status.\n      +---------------+-------------------+---------------------+\n\
    \      | CBIND Failure | LS_RJT Reason     | LS_RJT Reason Code  |\n      | Status\
    \        | Code              | Explanation         |\n      +===============+===================+=====================+\n\
    \      | Unspecified   | Unable to Perform | No Additional       |\n      | Reason\
    \ (16)   | Command Request   | Explanation (0x00)  |\n      |               |\
    \ (0x09)            |                     |\n      +---------------+-------------------+---------------------+\n\
    \      | No Such       | Unable to Perform | Invalid N_PORT      |\n      | Device\
    \ (17)   | Command Request   | Name (0x0D)         |\n      |               |\
    \ (0x09)            |                     |\n      +---------------+-------------------+---------------------+\n\
    \      | Lack of       | Unable to Perform | Insufficient        |\n      | Resources\
    \ (19)| Command Request   | Resources to Support|\n      |               | (0x09)\
    \            | Login (0x29)        |\n      +---------------+-------------------+---------------------+\n\
    \      | Incompatible  | Unable to Perform | No Additional       |\n      | Address\
    \       | Command Request   | Explanation (0x00)  |\n      | Translation   | (0x09)\
    \            |                     |\n      | Mode (20)     |                \
    \   |                     |\n      +---------------+-------------------+---------------------+\n\
    \      | Incorrect iFCP| Unable to Perform | No Additional       |\n      | Protocol\
    \      | Command Request   | Explanation (0x00)  |\n      | version Number| (0x09)\
    \            |                     |\n      | (21)          |                \
    \   |                     |\n      +---------------+-------------------+---------------------+\n\
    \      | Gateway Not   | Unable to Perform | No Additional       |\n      | Synchronized\
    \  | Command Request   | Explanation (0x00)  |\n      | (22)          | (0x09)\
    \            |                     |\n      +---------------+-------------------+---------------------+\n\
    \           Table 8. PLOGI LS_RJT Status for CBIND Failures\n"
- title: 7.3.1.8.  Read Exchange Concise (REC)
  contents:
  - "7.3.1.8.  Read Exchange Concise (REC)\n      Link Service Request Format:\n \
    \        +------+------------+------------+-----------+----------+\n         |\
    \ Word | Bits 0-7   | Bits 8-15  |Bits 16-24 |Bits 25-31|\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Cmd = 0x13 |   0x00     |    0x00   |   0x00   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \ Rsvd       |     Exchange Originator S_ID      |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2    |          OX_ID          |         RX_ID        |\n        \
    \ +======+============+============+===========+==========+\n         | 3-4  |Port\
    \ Name of the Exchange Originator (8 bytes)  |\n         |      |   (present only\
    \ for translation type 3)        |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation   Supplemental Data\n         Address\
    \ Translation     Type (see      (type 3 only)\n         ------------------- \
    \   Section 7.2)  -----------------\n                                -----------\n\
    \         Exchange Originator    1, 2, or 3    Port Name of the\n         S_ID\
    \                                 Exchange Originator\n         Other Special\
    \ Processing:\n            None.\n"
- title: 7.3.1.9.  Read Exchange Concise Accept (REC ACC)
  contents:
  - "7.3.1.9.  Read Exchange Concise Accept (REC ACC)\n      Format of REC ACC Response:\n\
    \         +------+------------+------------+-----------+----------+\n        \
    \ | Word | Bits 0-7   | Bits 8-15  |Bits 16-24 |Bits 25-31|\n         +------+------------+------------+-----------+----------+\n\
    \         | 0    | Acc = 0x02 |   0x00     |    0x00   |   0x00   |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 1    |\
    \          OX_ID          |         RX_ID        |\n         +------+------------+------------+-----------+----------+\n\
    \         | 2    | Rsvd       | Originator Address Identifier     |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 3    |\
    \ Rsvd       | Responder Address Identifier      |\n         +------+------------+------------+-----------+----------+\n\
    \         | 4    |       FC4VALUE  (FC-4-Dependent Value)         |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 5    |\
    \       E_STAT (Exchange Status)                 |\n         +======+============+============+===========+==========+\n\
    \         | 6-7  |Port Name of the Exchange Originator (8 bytes)  |\n        \
    \ +======+============+============+===========+==========+\n         | 8-9  |Port\
    \ Name of the Exchange Responder (8 bytes)   |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation     Supplemental Data\n         Address\
    \ Translation     Type (see       (type 3 only)\n         -------------------\
    \    Section 7.2)    ------------------\n                                -----------\n\
    \         Originator Address     1, 2, or 3      Port Name of the\n         Identifier\
    \                             Exchange Originator\n         Responder Address\
    \      1, 2, or 3      Port Name of the\n         Identifier                 \
    \            Exchange Responder\n   When supplemental data is required, the frame\
    \ SHALL always be\n   extended by 4 words as shown above.  If the translation\
    \ type for the\n   Originator Address Identifier or the Responder Address Identifier\
    \ is\n   1 or 2, the corresponding 8-byte port name SHALL be set to all zeros.\n\
    \         Other Special Processing:\n            None.\n"
- title: 7.3.1.10.  Read Exchange Status Block (RES)
  contents:
  - "7.3.1.10.  Read Exchange Status Block (RES)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x13 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Rsvd       |     Exchange Originator S_ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \          OX_ID          |         RX_ID        |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-10 |  Association Header (may be optionally req**d)  |\n       \
    \  +======+============+============+===========+==========+\n         | 11-12|\
    \ Port Name of the Exchange Originator (8 bytes) |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation     Supplemental Data\n         Address\
    \ Translation     Type (see       (type 3 only)\n         -------------------\
    \    Section 7.2)    ------------------\n                                -----------\n\
    \         Exchange Originator    1, 2, or 3      Port Name of the\n         S_ID\
    \                                   Exchange Originator\n         Other Special\
    \ Processing:\n            None.\n"
- title: 7.3.1.11.  Read Exchange Status Block Accept (RES ACC)
  contents:
  - "7.3.1.11.  Read Exchange Status Block Accept (RES ACC)\n      Format of ELS Accept\
    \ Response:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Acc = 0x02 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    |          OX_ID          |         RX_ID        |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \ Rsvd       | Exchange Originator N_PORT ID     |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3    | Rsvd       | Exchange Responder N_PORT ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 4    |\
    \          Exchange Status Bits                  |\n         +------+------------+------------+-----------+----------+\n\
    \         | 5    |               Reserved                         |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 6-n  |\
    \    Service Parameters and Sequence Statuses    |\n         |      |    as described\
    \ in [FC-FS]                     |\n         +======+============+============+===========+==========+\n\
    \         |n+1-  | Port Name of the Exchange Originator (8 bytes) |\n        \
    \ |n+2   |                                                |\n         +======+============+============+===========+==========+\n\
    \         |n+3-  | Port Name of the Exchange Responder (8 bytes)  |\n        \
    \ |n+4   |                                                |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation     Supplemental Data\n         Address\
    \ Translation     Type (see        (type 3 only)\n         -------------------\
    \    Section 7.2)    ------------------\n                                -----------\n\
    \         Exchange Originator    1, 2, or 3      Port Name of the\n         N_PORT\
    \ ID                              Exchange Originator\n         Exchange Responder\
    \     1, 2, or 3      Port Name of the\n         N_PORT ID                   \
    \           Exchange Responder\n   When supplemental data is required, the ELS\
    \ SHALL be extended by 4\n   words as shown above.  If the translation type for\
    \ the Exchange\n   Originator N_PORT ID or the Exchange Responder N_PORT ID is\
    \ 1 or 2,\n   the corresponding 8-byte port name SHALL be set to all zeros.\n\
    \         Other Special Processing:\n            None.\n"
- title: 7.3.1.12.  Read Link Error Status (RLS)
  contents:
  - "7.3.1.12.  Read Link Error Status (RLS)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x0F |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Rsvd       |     N_PORT Identifier             |\n        \
    \ +======+============+============+===========+==========+\n         | 2-3  |\
    \           Port Name of the N_PORT (8 bytes)    |\n         +======+============+============+===========+==========+\n\
    \         Fields Requiring       Translation     Supplemental Data\n         Address\
    \ Translation     Type (see       (type 3 only)\n         -------------------\
    \    Section 7.2)    -----------------\n                                -----------\n\
    \         N_PORT Identifier      1, 2, or 3      Port Name of the\n          \
    \                                      N_PORT\n         Other Special Processing:\n\
    \            None.\n"
- title: 7.3.1.13.  Read Sequence Status Block (RSS)
  contents:
  - "7.3.1.13.  Read Sequence Status Block (RSS)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x09 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | SEQ_ID     |     Exchange Originator S_ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \          OX_ID          |         RX_ID        |\n         +======+============+============+===========+==========+\n\
    \         | 3-4  |Port Name of the Exchange Originator (8 bytes)  |\n        \
    \ +======+============+============+===========+==========+\n         Fields Requiring\
    \       Translation    Supplemental Data\n         Address Translation     Type\
    \ (see        (type 3 only)\n         -------------------    Section 7.2)   ------------------\n\
    \                                -----------\n         Exchange Originator   \
    \ 1, 2, or 3     Port Name of the\n         S_ID                             \
    \     Exchange Originator\n         Other Special Processing:\n            None.\n"
- title: 7.3.1.14.  Reinstate Recovery Qualifier (RRQ)
  contents:
  - "7.3.1.14.  Reinstate Recovery Qualifier (RRQ)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x12 |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Rsvd       |     Exchange Originator S_ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \          OX_ID          |         RX_ID        |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-10 |  Association Header (may be optionally req**d)  |\n       \
    \  +======+============+============+===========+==========+\n         Fields\
    \ Requiring       Translation   Supplemental Data\n         Address Translation\
    \     Type (see      (type 3 only)\n         -------------------    Section 7.2)\
    \  ------------------\n                                -----------\n         Exchange\
    \ Originator      1 or 2             N/A\n         S_ID\n         Other Special\
    \ Processing:\n             None.\n"
- title: 7.3.1.15.  Request Sequence Initiative (RSI)
  contents:
  - "7.3.1.15.  Request Sequence Initiative (RSI)\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x0A |   0x00     |    0x00   |   0x00   |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Rsvd       |     Exchange Originator S_ID      |\n        \
    \ +------+------------+------------+-----------+----------+\n         | 2    |\
    \          OX_ID          |         RX_ID        |\n         +------+------------+------------+-----------+----------+\n\
    \         | 3-10 |  Association Header (may be optionally req**d)  |\n       \
    \  +======+============+============+===========+==========+\n         Fields\
    \ Requiring       Translation   Supplemental Data\n         Address Translation\
    \     Type (see      (type 3 only)\n         -------------------    Section 7.2)\
    \   ------------------\n                                -----------\n        \
    \ Exchange Originator      1 or 2             N/A\n         S_ID\n         Other\
    \ Special Processing:\n            None.\n"
- title: 7.3.1.16.  Scan Remote Loop (SRL)
  contents:
  - "7.3.1.16.  Scan Remote Loop (SRL)\n   SRL allows a remote loop to be scanned\
    \ to detect changes in the\n   device configuration.  Any changes will trigger\
    \ a fibre channel state\n   change notification and subsequent update of the iSNS\
    \ database.\n      ELS Format:\n         +------+------------+------------+-----------+----------+\n\
    \         | Word | Bits 0-7   | Bits 8-15  | Bits 16-24|Bits 25-31|\n        \
    \ +------+------------+------------+-----------+----------+\n         | 0    |\
    \ Cmd = 0x7B |           Reserved                |\n         +------+------------+------------+-----------+----------+\n\
    \         | 1    | Flag       | Address Identifier of the FL_PORT |\n        \
    \ |      |            | (see B.1)                         |\n         +======+============+============+===========+==========+\n\
    \         | 2-3  | Worldwide Name of the Remote FL_PORT           |\n        \
    \ +======+============+============+===========+==========+\n         Fields Requiring\
    \       Translation   Supplemental Data\n         Address Translation     Type\
    \ (see      (type 3 only)\n         -------------------    Section 7.2)  ------------------\n\
    \                                -----------\n         Address Identifier    \
    \     3         Worldwide Name of\n         of the FL_PORT                   \
    \    the Remote FL_PORT\n   Other Special Processing:\n      The D_ID field is\
    \ the address of the Domain Controller associated\n      with the remote loop.\
    \  The format of the Domain Controller address\n      is the hex 'FF FC' || Domain_ID,\
    \ where Domain_ID is the gateway-\n      assigned alias representing the remote\
    \ gateway or switch element\n      being queried.  After translation by the remote\
    \ gateway, the D_ID\n      identifies the gateway or switch element to be scanned\
    \ within the\n      remote gateway region.\n      The FLAG field defines the scope\
    \ of the SRL.  If set to 0, all\n      loop port interfaces on the given switch\
    \ element or gateway are\n      scanned.  If set to one, the loop port interface\
    \ on the gateway or\n      switch element to be scanned MUST be specified in bits\
    \ 8 through\n      31.\n      If the Flag field is zero, the SRL request SHALL\
    \ NOT be sent as a\n      special ELS.\n      If the Domain_ID represents a remote\
    \ switch or gateway and an iFCP\n      session to the remote Domain Controller\
    \ does not exist, the\n      requesting gateway SHALL create the iFCP session.\n"
- title: 7.3.1.17.  Third Party Process Logout (TPRLO)
  contents:
  - "7.3.1.17.  Third Party Process Logout (TPRLO)\n   TPRLO provides a mechanism\
    \ for an N_PORT (third party) to remove one\n   or more process login sessions\
    \ that exist between the destination\n   N_PORT and other N_PORTs specified in\
    \ the command.  This command\n   includes one or more TPRLO LOGOUT PARAMETER PAGEs,\
    \ each of which,\n   when combined with the destination N_PORT, identifies a process\
    \ login\n   to be terminated by the command.\n   +--------+------------+--------------------+----------------------+\n\
    \   | Word   | Bits 0-7   |     Bits 8-15      |     Bits 16 - 31     |\n   +--------+------------+--------------------+----------------------+\n\
    \   | 0      | Cmd = 0x24 | Page Length (0x10) |    Payload Length    |\n   +--------+------------+--------------------+----------------------+\n\
    \   | 1      |          TPRLO Logout Parameter Page 0                 |\n   +--------+--------------------------------------------------------+\n\
    \   | 5      |          TPRLO Logout Parameter Page 1                 |\n   +--------+--------------------------------------------------------+\n\
    \                            ....\n   +--------+--------------------------------------------------------+\n\
    \   |(4*n)+1 |          TPRLO Logout Parameter Page n                 |\n   +--------+--------------------------------------------------------+\n\
    \                     Figure 22. Format of TPRLO ELS\n   Each TPRLO parameter\
    \ page contains parameters identifying one or more\n   image pairs and may be\
    \ associated with a single FC-4 protocol type\n   that is common to all FC-4 protocol\
    \ types between the specified image\n   pair or global to all specified image\
    \ pairs.  The format of a TPRLO\n   page requiring address translation is shown\
    \ in Figure 23.  Additional\n   information on TPRLO can be found in [FC-FS].\n\
    \      +------+------------+------------+-----------+----------+\n      | Word\
    \ | Bits 0-7   | Bits 8-15  |       Bits 16-31     |\n      +------+------------+------------+-----------+----------+\n\
    \      | 0    | TYPE Code  | TYPE CODE  |                      |\n      |    \
    \  | or         | EXTENSION  |      TPRLO Flags     |\n      |      | Common SVC\
    \ |            |                      |\n      |      | Parameters |         \
    \   |                      |\n      +------+------------+------------+-----------+----------+\n\
    \      | 1    |         Third Party Process Associator         |\n      +------+------------+------------+-----------+----------+\n\
    \      | 2    |         Responder Process Associator           |\n      +------+------------+------------+-----------+----------+\n\
    \      | 3    | Reserved   | Third Party Originator N_PORT ID  |\n      +======+============+============+===========+==========+\n\
    \      | 4-5  | Worldwide Name of Third Party Originator       |\n      |    \
    \  | N_PORT                                         |\n      +------+------------------------------------------------+\n\
    \        Figure 23. Format of an Augmented TPRLO Parameter Page\n   The TPRLO\
    \ flags that affect supplemented ELS processing are as\n   follows:\n   Bit 18:\
    \   Third party Originator N_PORT Validity.  When set to one,\n             this\
    \ bit indicates that word 3, bits 8-31 (Third Party\n             Originator N_PORT\
    \ ID), are meaningful.\n   Bit 19:   Global Process logout.  When set to one,\
    \ this bit indicates\n             that all image pairs for all N_PORTs of the\
    \ specified FC-4\n             protocol shall be invalidated.  When the value\
    \ of this bit\n             is one, only one logout parameter page is permitted\
    \ in the\n             TPRLO payload.\n   If bit 18 has a value of zero and bit\
    \ 19 has a value of one in the\n   TPRLO flags field, then the ELS SHALL NOT be\
    \ sent as a special ELS.\n   Otherwise, the originating gateway SHALL process\
    \ the ELS as follows:\n   a) The first word of the TPRLO payload SHALL NOT be\
    \ modified.\n   b) Each TPRLO parameter page shall be extended by two words as\
    \ shown\n      in Figure 23.\n   c) If word 0, bit 18 (Third Party Originator\
    \ N_PORT ID validity), in\n      the TPRLO flags field has a value of one, then\
    \ the sender shall\n      place the worldwide port name of the fibre channel device's\
    \ N_PORT\n      in the extension words.  The N_PORT ID SHALL be set to 3.\n  \
    \    Otherwise, the contents of the extension words and the Third Party\n    \
    \  Originator N_PORT ID SHALL be set to zero.\n   d) The ELS originator SHALL\
    \ set the SPC bit in the encapsulation\n      header of each augmented frame comprising\
    \ the ELS (see Section\n      5.3.1).\n   e) If the ELS contains a single TPRLO\
    \ parameter page, the originator\n      SHALL increase the frame length as necessary\
    \ to include the\n      extended parameter page.\n   f) If the ELS to be augmented\
    \ contains multiple TPRLO parameter\n      pages, the FC frames created to contain\
    \ the augmented ELS payload\n      SHALL NOT exceed the maximum frame size that\
    \ can be accepted by\n      the destination N_PORT.\n      Each fibre channel\
    \ frame SHALL contain an integer number of\n      extended TPRLO parameter pages.\
    \  The maximum number of extended\n      TPRLO parameter pages in a frame SHALL\
    \ be limited to the number\n      that can be held without exceeding the above\
    \ upper limit.  New\n      frames resulting from the extension of the TPRLO pages\
    \ to include\n      the supplemental data SHALL be created by extending the SEQ_CNT\
    \ in\n      the fibre channel frame header.  The SEQ_ID SHALL NOT be modified.\n\
    \   The gateway receiving the augmented TPRLO ELS SHALL generate ELS\n   frames\
    \ to be sent to the destination N_PORT by copying word 0 of the\n   ELS payload\
    \ and processing each augmented parameter page as follows:\n   a) If word 0, bit\
    \ 18, has a value of one, create a parameter page by\n      copying words 0 through\
    \ 2 of the augmented parameter page.  The\n      Third Party Originator N_PORT\
    \ ID in word 3 shall be generated by\n      referencing the supplemental data\
    \ as described in Section 7.2.\n   b) If word 0, bit 18, has a value of zero,\
    \ create a parameter page by\n      copying words 0 through 3 of the augmented\
    \ parameter page.\n   The size of each frame to be sent to the destination N_PORT\
    \ MUST NOT\n   exceed the maximum frame size that the destination N_PORT can accept.\n\
    \   The sequence identifier in each frame header SHALL be copied from the\n  \
    \ augmented ELS, and the sequence count SHALL be monotonically\n   increasing.\n"
- title: 7.3.1.18.  Third Party Logout Accept (TPRLO ACC)
  contents:
  - "7.3.1.18.  Third Party Logout Accept (TPRLO ACC)\n   The format of the TPRLO\
    \ ACC frame is shown in Figure 24.\n   +--------+------------+--------------------+----------------------+\n\
    \   | Word   |  Bits 0-7  |     Bits 8-15      |     Bits 16 - 31     |\n   +--------+------------+--------------------+----------------------+\n\
    \   | 0      | Cmd = 0x2  | Page Length (0x10) |    Payload Length    |\n   +--------+------------+--------------------+----------------------+\n\
    \   | 1      |          TPRLO Logout Parameter Page 0                 |\n   +--------+--------------------------------------------------------+\n\
    \   | 5      |          TPRLO Logout Parameter Page 1                 |\n   +--------+--------------------------------------------------------+\n\
    \                            ....\n   +--------+--------------------------------------------------------+\n\
    \   |(4*n)+1 |          TPRLO Logout Parameter Page n                 |\n   +--------+--------------------------------------------------------+\n\
    \                  Figure 24. Format of TPRLO ACC ELS\n   The format of the parameter\
    \ page and rules for parameter page\n   augmentation are as specified in Section\
    \ 7.3.1.17.\n"
- title: 7.3.2.  Special FC-4 Link Services
  contents:
  - "7.3.2.  Special FC-4 Link Services\n   The following sections define FC-4 link\
    \ services for which special\n   processing is required.\n"
- title: 7.3.2.1.  FC-4 Link Services Defined by FCP
  contents:
  - "7.3.2.1.  FC-4 Link Services Defined by FCP\n   The format of FC-4 link service\
    \ frames defined by FCP can be found in\n   [FCP-2].\n"
- title: 7.3.2.1.1.  FCP Read Exchange Concise (FCP REC)
  contents:
  - "7.3.2.1.1.  FCP Read Exchange Concise (FCP REC)\n   The payload format for this\
    \ link service is identical to the REC\n   extended link service specified in\
    \ Section 7.3.1.8 and SHALL be\n   processed as described in that section.  The\
    \ FC-4 version will become\n   obsolete in [FCP-2].  However, in order to support\
    \ devices\n   implemented against early revisions of FCP-2, an iFCP gateway MUST\n\
    \   support both versions.\n"
- title: 7.3.2.1.2.  FCP Read Exchange Concise Accept (FCP REC ACC)
  contents:
  - "7.3.2.1.2.  FCP Read Exchange Concise Accept (FCP REC ACC)\n   The payload format\
    \ for this link service is identical to the REC ACC\n   extended link service\
    \ specified in Section 7.3.1.9 and SHALL be\n   processed as described in that\
    \ section.  The FC-4 version will become\n   obsolete in [FCP-2].  However, in\
    \ order to support devices\n   implemented against earlier revisions of FCP-2,\
    \ an iFCP gateway MUST\n   support both versions.\n"
- title: 7.4.  FLOGI Service Parameters Supported by an iFCP Gateway
  contents:
  - "7.4.  FLOGI Service Parameters Supported by an iFCP Gateway\n   The FLOGI ELS\
    \ is issued by an N_PORT that wishes to access the fabric\n   transport services.\n\
    \   The format of the FLOGI request and FLOGI ACC payloads are identical\n   to\
    \ the PLOGI request and ACC payloads described in Section 7.3.1.7.\n      +------+------------+------------+-----------+----------+\n\
    \      | Word | Bits 0-7   | Bits 8-15  |Bits 16-24 |Bits 25-31|\n      +------+------------+------------+-----------+----------+\n\
    \      | 0    | Cmd = 0x4  |   0x00     |    0x00   |   0x00   |\n      |    \
    \  | Acc = 0x2  |            |           |          |\n      +------+------------+------------+-----------+----------+\n\
    \      | 1-4  |            Common Service Parameters           |\n      +------+------------+------------+-----------+----------+\n\
    \      | 5-6  |            N_PORT Name                         |\n      +------+------------+------------+-----------+----------+\n\
    \      | 7-8  |            Node Name                           |\n      +------+------------+------------+-----------+----------+\n\
    \      | 9-12 |            Class 1 Service Parameters          |\n      +------+------------+------------+-----------+----------+\n\
    \      |13-17 |            Class 2 Service Parameters          |\n      +------+------------+------------+-----------+----------+\n\
    \      |18-21 |            Class 3 Service Parameters          |\n      +------+------------+------------+-----------+----------+\n\
    \      |22-25 |            Class 4 Service Parameters          |\n      +------+------------+------------+-----------+----------+\n\
    \      |26-29 |            Vendor Version Level                |\n      +======+============+============+===========+==========+\n\
    \           Figure 25. FLOGI Request and ACC Payload Format\n   A full description\
    \ of each parameter is given in [FC-FS].\n   This section tabulates the protocol-dependent\
    \ service parameters\n   supported by a fabric port attached to an iFCP gateway.\n\
    \   The service parameters carried in the payload of an FLOGI extended\n   link\
    \ service request MUST be set in accordance with Table 9.\n      +-----------------------------------------+---------------+\n\
    \      |                                         | Fabric Login  |\n      |  \
    \        Service Parameter              |    Class      |\n      |           \
    \                              +---+---+---+---+\n      |                    \
    \                     | 1 | 2 | 3 | 4 |\n      +-----------------------------------------+---+---+---+---+\n\
    \      | Class Validity                          | n | M | M | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      | Service Options                         |               |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Intermix Mode                         | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Stacked Connect-Requests              | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Sequential Delivery                   | n | M | M | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Dedicated Simplex                     | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Camp On                               | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Buffered Class 1                      | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Priority                              | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \      | Initiator/Recipient Control             |               |\n      +-----------------------------------------+---+---+---+---+\n\
    \      |   Clock Synchronization ELS Capable     | n | n | n | n |\n      +-----------------------------------------+---+---+---+---+\n\
    \              Table 9. FLOGI Service Parameter Settings\n   Notes:\n      1)\
    \ \"n\" indicates a parameter or capability that is not supported\n         by\
    \ the iFCP protocol.\n      2) \"M\" indicates an applicable parameter that MUST\
    \ be supported by\n         an iFCP gateway.\n"
- title: 8.  iFCP Error Detection
  contents:
  - '8.  iFCP Error Detection

    '
- title: 8.1.  Overview
  contents:
  - "8.1.  Overview\n   This section specifies provisions for error detection and\
    \ recovery in\n   addition to those in [FC-FS], which continue to be available\
    \ in the\n   iFCP network environment.\n"
- title: 8.2.  Stale Frame Prevention
  contents:
  - "8.2.  Stale Frame Prevention\n   Recovery from fibre channel protocol error conditions\
    \ requires that\n   frames associated with a failed or aborted exchange drain\
    \ from the\n   fabric before exchange resources can be safely reused.\n   Since\
    \ a fibre channel fabric may not preserve frame order, there is\n   no deterministic\
    \ way to purge such frames.  Instead, the fabric\n   guarantees that frame the\
    \ lifetime will not exceed a specific limit\n   (R_A_TOV).\n   R_A_TOV is defined\
    \ in [FC-FS] as \"the maximum transit time within a\n   fabric to guarantee that\
    \ a lost frame will never emerge from the\n   fabric\".  For example, a value\
    \ of 2 x R_A_TOV is the minimum time\n   that the originator of an ELS request\
    \ or FC-4 link service request\n   must wait for the response to that request.\
    \  The fibre channel\n   default value for R_A_TOV is 10 seconds.\n   An iFCP\
    \ gateway SHALL actively enforce limits on R_A_TOV as described\n   in Section\
    \ 8.2.1.\n"
- title: 8.2.1.  Enforcing R_A_TOV Limits
  contents:
  - "8.2.1.  Enforcing R_A_TOV Limits\n   The R_A_TOV limit on frame lifetimes SHALL\
    \ be enforced by means of\n   the time stamp in the encapsulation header (see\
    \ Section 5.3.1) as\n   described in this section.\n   The budget for R_A_TOV\
    \ SHOULD include allowances for the propagation\n   delay through the gateway\
    \ regions of the sending and receiving\n   N_PORTs, plus the propagation delay\
    \ through the IP network.  This\n   latter component is referred to in this specification\
    \ as IP_TOV.\n   IP_TOV should be set well below the value of R_A_TOV specified\
    \ for\n   the iFCP fabric and should be stored in the iSNS server.  IP_TOV\n \
    \  should be set to 50 percent of R_A_TOV.\n   The following paragraphs describe\
    \ the requirements for synchronizing\n   gateway time bases and the rules for\
    \ measuring and enforcing\n   propagation delay limits.\n   The protocol for synchronizing\
    \ a gateway time base is SNTP [RFC2030].\n   In order to ensure that all gateways\
    \ are time aligned, a gateway\n   SHOULD obtain the address of an SNTP-compatible\
    \ time server via an\n   iSNS query.  If multiple time server addresses are returned\
    \ by the\n   query, the servers must be synchronized and the gateway may use any\n\
    \   server in the list.  Alternatively, the server may return a multicast\n  \
    \ group address in support of operation in Anycast mode.\n   Implementation of\
    \ Anycast mode is as specified in [RFC2030],\n   including the precautions defined\
    \ in that document.  Multicast mode\n   SHOULD NOT be used.\n   An SNTP server\
    \ may use any one of the time reference sources listed\n   in [RFC2030].  The\
    \ resolution of the time reference MUST be 125\n   milliseconds or better.\n \
    \  Stability of the SNTP server and gateway time bases should be 100 ppm\n   or\
    \ better.\n   With regard to its time base, the gateway is in either the\n   Synchronized\
    \ or Unsynchronized state.\n   When in the synchronized state, the gateway SHALL\n\
    \   a) set the time stamp field for each outgoing frame in accordance\n      with\
    \ the gateway's internal time base;\n   b) check the time stamp field of each\
    \ incoming frame, following\n      validation of the encapsulation header CRC,\
    \ as described in\n      Section 5.3.4;\n   c) if the incoming frame has a time\
    \ stamp of 0,0 and is not one of\n      the session control frames that require\
    \ a 0,0 time stamp (see\n      Section 6), the frame SHALL be discarded;\n   d)\
    \ if the incoming frame has a non-zero time stamp, the receiving\n      gateway\
    \ SHALL compute the absolute value of the time in flight and\n      SHALL compare\
    \ it against the value of IP_TOV specified for the IP\n      fabric;\n   e) if\
    \ the result in step (d) exceeds IP_TOV, the encapsulated frame\n      shall be\
    \ discarded.  Otherwise, the frame shall be de-encapsulated\n      as described\
    \ in Section 5.3.4.\n   A gateway SHALL enter the Synchronized state upon receiving\
    \ a\n   successful response to an SNTP query.\n   A gateway shall enter the Unsynchronized\
    \ state:\n   a) upon power-up and before successful completion of an SNTP query,\n\
    \      and\n   b) whenever the gateway looses contact with the SNTP server, such\n\
    \      that the gateway's time base may no longer be in alignment with\n     \
    \ that of the SNTP server.  The criterion for determining loss of\n      contact\
    \ is implementation specific.\n   Following loss of contact, it is recommended\
    \ that the gateway enter\n   the Unsynchronized state when the estimated time\
    \ base drift relative\n   to the SNTP reference is greater than ten percent of\
    \ the IP_TOV\n   limit.  (Assuming that all timers have an accuracy of 100 ppm\
    \ and\n   IP_TOV equals 5 seconds, the maximum allowable loss of contact\n   duration\
    \ would be about 42 minutes.)\n   As the result of a transition from the Synchronized\
    \ to the\n   Unsynchronized state, a gateway MUST abort all iFCP sessions as\n\
    \   described in Section 5.2.3.  While in the Unsynchronized state, a\n   gateway\
    \ SHALL NOT permit the creation of new iFCP sessions.\n"
- title: 9.  Fabric Services Supported by an iFCP Implementation
  contents:
  - "9.  Fabric Services Supported by an iFCP Implementation\n   An iFCP gateway implementation\
    \ MUST support the following fabric\n   services:\n       N_PORT ID Value    \
    \       Description             Section\n       ---------------           -----------\
    \             -------\n       0xFF-FF-FE             F_PORT Server           \
    \   9.1\n       0xFF-FF-FD             Fabric Controller          9.2\n      \
    \ 0xFF-FF-FC             Directory/Name Server      9.3\n   In addition, an iFCP\
    \ gateway MAY support the FC broadcast server\n   functionality described in Section\
    \ 9.4.\n"
- title: 9.1.  F_PORT Server
  contents:
  - "9.1.  F_PORT Server\n   The F_PORT server SHALL support the FLOGI ELS, as described\
    \ in\n   Section 7.4, as well as the following ELSs specified in [FC-FS]:\n  \
    \ a) Request for fabric service parameters (FDISC).\n   b) Request for the link\
    \ error status (RLS).\n   c) Read Fabric Timeout Values (RTV).\n"
- title: 9.2.  Fabric Controller
  contents:
  - "9.2.  Fabric Controller\n   The Fabric Controller SHALL support the following\
    \ ELSs as specified\n   in [FC-FS]:\n   a) State Change Notification (SCN).\n\
    \   b) Registered State Change Notification (RSCN).\n   c) State Change Registration\
    \ (SCR).\n"
- title: 9.3.  Directory/Name Server
  contents:
  - "9.3.  Directory/Name Server\n   The Directory/Name server provides a registration\
    \ service allowing an\n   N_PORT to record or query the database for information\
    \ about other\n   N_PORTs.  The services are defined in [FC-GS3].  The queries\
    \ are\n   issued as FC-4 transactions using the FC-CT command transport\n   protocol\
    \ specified in [FC-GS3].\n   In iFCP, each name server request MUST be translated\
    \ to the\n   appropriate iSNS query defined in [ISNS].  The definitions of name\n\
    \   server objects are specified in [FC-GS3].\n   The name server SHALL support\
    \ record and query operations for\n   directory subtype 0x02 (Name Server) and\
    \ 0x03 (IP Address Server) and\n   MAY support the FC-4 specific services as defined\
    \ in [FC-GS3].\n"
- title: 9.4.  Broadcast Server
  contents:
  - "9.4.  Broadcast Server\n   Fibre channel frames are broadcast throughout the\
    \ fabric by\n   addressing them to the fibre channel broadcast server at the well-\n\
    \   known fibre channel address 0xFF-FF-FF.  The broadcast server then\n   replicates\
    \ and delivers the frame to each attached N_PORT in all\n   zones to which the\
    \ originating device belongs.  Only class 3\n   (datagram) service is supported.\n\
    \   In an iFCP system, the fibre channel broadcast function is emulated\n   by\
    \ means of a two-tier architecture comprising the following\n   elements:\n  \
    \ a) A local broadcast server residing in each iFCP gateway.  The local\n    \
    \  server distributes broadcast traffic within the gateway region and\n      forwards\
    \ outgoing broadcast traffic to a global server for\n      distribution throughout\
    \ the iFCP fabric.\n   b) A global broadcast server that re-distributes broadcast\
    \ traffic to\n      the local server in each participating gateway.\n   c) An\
    \ iSNS discovery domain defining the scope over which broadcast\n      traffic\
    \ is propagated.  The discovery domain is populated with a\n      global broadcast\
    \ server and the set of local servers it supports.\n   The local and global broadcast\
    \ servers are logical iFCP devices that\n   communicate using the iFCP protocol.\
    \  The servers have an N_PORT\n   Network Address consisting of an iFCP portal\
    \ address and an N_PORT ID\n   set to the well-known fibre channel address of\
    \ the FC broadcast\n   server (0xFF-FF-FF).\n   As noted above, an N_PORT originates\
    \ a broadcast by directing frame\n   traffic to the fibre channel broadcast server.\
    \  The gateway-resident\n   local server distributes a copy of the frame locally\
    \ and forwards a\n   copy to the global server for redistribution to the local\
    \ servers on\n   other gateways.  The global server MUST NOT echo a broadcast\
    \ frame to\n   the originating local server.\n"
- title: 9.4.1.  Establishing the Broadcast Configuration
  contents:
  - "9.4.1.  Establishing the Broadcast Configuration\n   The broadcast configuration\
    \ is managed with facilities provided by\n   the iSNS server by the following\
    \ means:\n   a) An iSNS discovery domain is created and seeded with the network\n\
    \      address of the global broadcast server N_PORT.  The global server\n   \
    \   is identified as such by setting the appropriate N_PORT entity\n      attribute.\n\
    \   b) Using the management interface, each broadcast server is preset\n     \
    \ with the identity of the broadcast domain.\n   During power up, each gateway\
    \ SHALL invoke the iSNS service to\n   register its local broadcast server in\
    \ the broadcast discovery\n   domain.  After registration, the local server SHALL\
    \ wait for the\n   global broadcast server to establish an iFCP session.\n   The\
    \ global server SHALL register with the iSNS server as follows:\n   a) The server\
    \ SHALL query the iSNS name server by attribute to obtain\n      the worldwide\
    \ port name of the N_PORT pre-configured to provide\n      global broadcast services.\n\
    \   b) If the worldwide port name obtained above does not correspond to\n    \
    \  that of the server issuing the query, the N_PORT SHALL NOT perform\n      global\
    \ broadcast functions for N_PORTs in that discovery domain.\n   c) Otherwise,\
    \ the global server N_PORT SHALL register with the\n      discovery domain and\
    \ query the iSNS server to identify all\n      currently registered local servers.\n\
    \   d) The global broadcast server SHALL initiate an iFCP session with\n     \
    \ each local broadcast server in the domain.  When a new local\n      server registers,\
    \ the global server SHALL receive a state change\n      notification and respond\
    \ by initiating an iFCP session with the\n      newly added server.  The gateway\
    \ SHALL obtain these notifications\n      using the iSNS provisions for lossless\
    \ delivery.\n   Upon receiving the CBIND request to initiate the iFCP session,\
    \ the\n   local server SHALL record the worldwide port name and N_PORT network\n\
    \   address of the global server.\n"
- title: 9.4.2.  Broadcast Session Management
  contents:
  - "9.4.2.  Broadcast Session Management\n   After the initial broadcast session\
    \ is established, the local or\n   global broadcast server MAY choose to manage\
    \ the session in one of\n   the following ways, depending on resource requirements\
    \ and the\n   anticipated level of broadcast traffic:\n   a) A server MAY keep\
    \ the session open continuously.  Since broadcast\n      sessions are often quiescent\
    \ for long periods of time, the server\n      SHOULD monitor session connectivity\
    \ as described in Section\n      5.2.2.4.\n   b) A server MAY open the broadcast\
    \ session on demand only when\n      broadcast traffic is to be sent.  If the\
    \ session is reopened by\n      the global server, the local server SHALL replace\
    \ the previously\n      recorded network address of the global broadcast server.\n"
- title: 9.4.3.  Standby Global Broadcast Server
  contents:
  - "9.4.3.  Standby Global Broadcast Server\n   An implementation may designate a\
    \ local server to assume the duties\n   of the global broadcast server in the\
    \ event of a failure.  The local\n   server may use the LTEST message to determine\
    \ whether the global\n   server is functioning and may assume control if it is\
    \ not.\n   When assuming control, the standby server must register with the iSNS\n\
    \   server as the global broadcast server in place of the failed server\n   and\
    \ must install itself in the broadcast discovery domain as\n   specified in steps\
    \ c) and d) of Section 9.4.1.\n"
- title: 10.  iFCP Security
  contents:
  - '10.  iFCP Security

    '
- title: 10.1.  Overview
  contents:
  - "10.1.  Overview\n   iFCP relies upon the IPSec protocol suite to provide data\n\
    \   confidentiality and authentication services, and it relies upon IKE\n   as\
    \ the key management protocol.  Section 10.2 describes the security\n   requirements\
    \ arising from iFCP's operating environment, and Section\n   10.3 describes the\
    \ resulting design choices, their requirement\n   levels, and how they apply to\
    \ the iFCP protocol.\n   Detailed considerations for use of IPsec and IKE with\
    \ the iFCP\n   protocol can be found in [SECIPS].\n"
- title: 10.2.  iFCP Security Threats and Scope
  contents:
  - '10.2.  iFCP Security Threats and Scope

    '
- title: 10.2.1.  Context
  contents:
  - "10.2.1.  Context\n   iFCP is a protocol designed for use by gateway devices deployed\
    \ in\n   enterprise data centers.  Such environments typically have security\n\
    \   gateways designed to provide network security through isolation from\n   public\
    \ networks.  Furthermore, iFCP data may have to traverse\n   security gateways\
    \ in order to support SAN-to-SAN connectivity across\n   public networks.\n"
- title: 10.2.2.  Security Threats
  contents:
  - "10.2.2.  Security Threats\n   Communicating iFCP gateways may be subjected to\
    \ attacks, including\n   attempts by an adversary to:\n   a) acquire confidential\
    \ data and identities by snooping data packets,\n   b) modify packets containing\
    \ iFCP data and control messages,\n   c) inject new packets into the iFCP session,\n\
    \   d) hijack the TCP connection carrying the iFCP session,\n   e) launch denial-of-service\
    \ attacks against the iFCP gateway,\n   f) disrupt the security negotiation process,\n\
    \   g) impersonate a legitimate security gateway, or\n   h) compromise communication\
    \ with the iSNS server.\n   It is imperative to thwart these attacks, given that\
    \ an iFCP gateway\n   is the last line of defense for a whole fibre channel island,\
    \ which\n   may include several hosts and fibre channel switches.  To do so, the\n\
    \   iFCP gateway must implement and may use confidentiality, data origin\n   authentication,\
    \ integrity, and replay protection on a per-datagram\n   basis.  The iFCP gateway\
    \ must implement and may use bi-directional\n   authentication of the communication\
    \ endpoints.  Finally, it must\n   implement and may use a scalable approach to\
    \ key management.\n"
- title: 10.2.3.  Interoperability with Security Gateways
  contents:
  - "10.2.3.  Interoperability with Security Gateways\n   Enterprise data center networks\
    \ are considered mission-critical\n   facilities that must be isolated and protected\
    \ from all possible\n   security threats.  Such networks are usually protected\
    \ by security\n   gateways, which, at a minimum, provide a shield against denial-of-\n\
    \   service attacks.  The iFCP security architecture is capable of\n   leveraging\
    \ the protective services of the existing security\n   infrastructure, including\
    \ firewall protection, NAT and NAPT services,\n   and IPSec VPN services available\
    \ on existing security gateways.\n   Considerations regarding intervening NAT\
    \ and NAPT boxes along the\n   iFCP-iSNS path can be found in [ISNS].\n"
- title: 10.2.4.  Authentication
  contents:
  - "10.2.4.  Authentication\n   iFCP is a peer-to-peer protocol.  iFCP sessions may\
    \ be initiated by\n   either peer gateway or both.  Consequently, bi-directional\n\
    \   authentication of peer gateways must be provided in accordance with\n   the\
    \ requirement levels specified in Section 10.3.1.\n   N_PORT identities used in\
    \ the Port Login (PLOGI) process shall be\n   considered authenticated if the\
    \ PLOGI request is received from the\n   remote gateway over a secure, IPSec-protected\
    \ connection.\n   There is no requirement that the identities used in authentication\
    \ be\n   kept confidential.\n"
- title: 10.2.5.  Confidentiality
  contents:
  - "10.2.5.  Confidentiality\n   iFCP traffic may traverse insecure public networks,\
    \ and therefore\n   implementations must have per-packet encryption capabilities\
    \ to\n   provide confidentiality in accordance with the requirements specified\n\
    \   in Section 10.3.1.\n"
- title: 10.2.6.  Rekeying
  contents:
  - "10.2.6.  Rekeying\n   Due to the high data transfer rates and the amount of data\
    \ involved,\n   an iFCP implementation must support the capability to rekey each\n\
    \   phase 2 security association in the time intervals dictated by\n   sequence\
    \ number space exhaustion at a given link rate.  In the\n   rekeying scenario\
    \ described in [SECIPS], for example, rekeying events\n   happen as often as every\
    \ 27.5 seconds at a 10 Gbps rate.\n   The iFCP gateway must provide the capability\
    \ for forward secrecy in\n   the rekeying process.\n"
- title: 10.2.7.  Authorization
  contents:
  - "10.2.7.  Authorization\n   Basic access control properties stem from the requirement\
    \ that two\n   communicating iFCP gateways be known to one or more iSNS servers\n\
    \   before they can engage in iFCP exchanges.  The optional use of\n   discovery\
    \ domains [ISNS], Identity Payloads (e.g., ID_FQDNs), and\n   certificate-based\
    \ authentication (e.g., with X509v3 certificates)\n   enables authorization schemas\
    \ of increasing complexity.  The\n   definition of such schemas (e.g., role-based\
    \ access control) is\n   outside of the scope of this specification.\n"
- title: 10.2.8.  Policy Control
  contents:
  - "10.2.8.  Policy Control\n   This specification allows any and all security mechanisms\
    \ in an iFCP\n   gateway to be administratively disabled.  Security policies MUST\n\
    \   have, at most, iFCP Portal resolution.  Administrators may gain\n   control\
    \ over security policies through an adequately secured\n   interaction with a\
    \ management interface or with iSNS.\n"
- title: 10.2.9.  iSNS Role
  contents:
  - "10.2.9.  iSNS Role\n   iSNS [ISNS] is an invariant in all iFCP deployments. \
    \ iFCP gateways\n   MUST use iSNS for discovery services and MAY use security\
    \ policies\n   configured in the iSNS database as the basis for algorithm\n  \
    \ negotiation in IKE.  The iSNS specification defines mechanisms for\n   securing\
    \ communication between an iFCP gateway and iSNS server(s).\n   Additionally,\
    \ the specification indicates how elements of security\n   policy concerning individual\
    \ iFCP sessions can be retrieved from iSNS\n   server(s).\n"
- title: 10.3.  iFCP Security Design
  contents:
  - '10.3.  iFCP Security Design

    '
- title: 10.3.1.  Enabling Technologies
  contents:
  - "10.3.1.  Enabling Technologies\n   Applicable technology from IPsec and IKE is\
    \ defined in the following\n   suite of specifications:\n      [RFC2401] Security\
    \ Architecture for the Internet Protocol\n      [RFC2402] IP Authentication Header\n\
    \      [RFC2404] The Use of HMAC-SHA-1-96 within ESP and AH\n      [RFC2405] The\
    \ ESP DES-CBC Cipher Algorithm with Explicit IV\n      [RFC2406] IP Encapsulating\
    \ Security Payload\n      [RFC2407] The Internet IP Security Domain of Interpretation\
    \ for\n      ISAKMP\n      [RFC2408] Internet Security Association and Key Management\n\
    \      Protocol (ISAKMP)\n      [RFC2409] The Internet Key Exchange (IKE)\n  \
    \    [RFC2410] The NULL Encryption Algorithm and Its Use With IPSEC\n      [RFC2451]\
    \ The ESP CBC-Mode Cipher Algorithms\n      [RFC2709] Security Model with Tunnel-mode\
    \ IPsec for NAT Domains\n   The implementation of IPsec and IKE is required according\
    \ to the\n   following guidelines.\n   Support for the IP Encapsulating Security\
    \ Payload (ESP) [RFC2406] is\n   MANDATORY to implement.  When ESP is used, per-packet\
    \ data origin\n   authentication, integrity, and replay protection MUST be used.\n\
    \   For data origin authentication and integrity with ESP, HMAC with SHA1\n  \
    \ [RFC2404] MUST be implemented, and the Advanced Encryption Standard\n   [AES]\
    \ in CBC MAC mode with Extended Cipher Block Chaining SHOULD be\n   implemented\
    \ in accordance with [AESCBC].\n   For confidentiality with ESP, 3DES in CBC mode\
    \ [RFC2451] MUST be\n   implemented, and AES counter mode encryption [AESCTR]\
    \ SHOULD be\n   implemented.  NULL encryption MUST be supported as well, as defined\n\
    \   in [RFC2410].  DES in CBC mode SHOULD NOT be used due to its inherent\n  \
    \ weakness.  Since it is known to be crackable with modest computation\n   resources,\
    \ it is inappropriate for use in any iFCP deployment\n   scenario.\n   A conforming\
    \ iFCP protocol implementation MUST implement IPsec ESP\n   [RFC2406] in tunnel\
    \ mode [RFC2401] and MAY implement IPsec ESP in\n   transport mode.\n   Regarding\
    \ key management, iFCP implementations MUST support IKE\n   [RFC2409] for bi-directional\
    \ peer authentication, negotiation of\n   security associations, and key management,\
    \ using the IPsec DOI.\n   There is no requirement that the identities used in\
    \ authentication be\n   kept confidential.  Manual keying MUST NOT be used since\
    \ it does not\n   provide the necessary keying support.  According to [RFC2409],\
    \ pre-\n   shared secret key authentication is MANDATORY to implement, whereas\n\
    \   certificate-based peer authentication using digital signatures MAY be\n  \
    \ implemented (see Section 10.3.3 regarding the use of certificates).\n   [RFC2409]\
    \ defines the following requirement levels for IKE Modes:\n      Phase-1 Main\
    \ Mode MUST be implemented.\n      Phase-1 Aggressive Mode SHOULD be implemented.\n\
    \      Phase-2 Quick Mode MUST be implemented.\n      Phase-2 Quick Mode with\
    \ key exchange payload MUST be implemented.\n   With iFCP, Phase-1 Main Mode SHOULD\
    \ NOT be used in conjunction with\n   pre-shared keys, due to Main Mode's vulnerability\
    \ to man-in-the-\n   middle-attackers when group pre-shared keys are used.  In\
    \ this\n   scenario, Aggressive Mode SHOULD be used instead.  Peer\n   authentication\
    \ using the public key encryption methods outlined in\n   [RFC2409] SHOULD NOT\
    \ be used.\n   The DOI [RFC2407] provides for several types of Identification\n\
    \   Payloads.\n   When used for iFCP, IKE Phase 1 exchanges MUST explicitly carry\
    \ the\n   Identification Payload fields (IDii and IDir).  Conforming iFCP\n  \
    \ implementations MUST use ID_IPV4_ADDR, ID_IPV6_ADDR (if the protocol\n   stack\
    \ supports IPv6), or ID_FQDN Identification Type values.  The\n   ID_USER_FQDN,\
    \ IP Subnet, IP Address Range, ID_DER_ASN1_DN,\n   ID_DER_ASN1_GN Identification\
    \ Type values SHOULD NOT be used.  The\n   ID_KEY_ID Identification Type values\
    \ MUST NOT be used.  As described\n   in [RFC2407], the port and protocol fields\
    \ in the Identification\n   Payload MUST be set to zero or UDP port 500.\n   When\
    \ used for iFCP, IKE Phase 2 exchanges MUST explicitly carry the\n   Identification\
    \ Payload fields (IDci and IDcr).  Conforming iFCP\n   implementations MUST use\
    \ either ID_IPV4_ADDR or ID_IPV6_ADDR\n   Identification Type values (according\
    \ to the version of IP\n   supported).  Other Identification Type values MUST\
    \ NOT be used.  As\n   described in Section 5.2.2, the gateway creating the iFCP\
    \ session\n   must query the iSNS server to determine the appropriate port on\
    \ which\n   to initiate the associated TCP connection.  Upon a successful IKE\n\
    \   Phase 2 exchange, the IKE responder enforces the negotiated selectors\n  \
    \ on the IPsec SAs.  Any subsequent iFCP session creation requires the\n   iFCP\
    \ peer to query its iSNS server for access control (in accordance\n   with the\
    \ session creation requirements specified in Section 5.2.2.1).\n"
- title: 10.3.2.  Use of IKE and IPsec
  contents:
  - "10.3.2.  Use of IKE and IPsec\n   A conforming iFCP Portal is capable of establishing\
    \ one or more IKE\n   Phase-1 Security Associations (SAs) to a peer iFCP Portal.\
    \  A Phase-1\n   SA may be established when an iFCP Portal is initialized or may\
    \ be\n   deferred until the first TCP connection with security requirements is\n\
    \   established.\n   An IKE Phase-2 SA protects one or more TCP connections within\
    \ the\n   same iFCP Portal.  More specifically, the successful establishment of\n\
    \   an IKE Phase-2 SA results in the creation of two uni-directional\n   IPsec\
    \ SAs fully qualified by the tuple <SPI, destination IP address,\n   ESP>.\n \
    \  These SAs protect the setup process of the underlying TCP connections\n   and\
    \ all their subsequent TCP traffic.  The number of TCP connections\n   in an IPsec\
    \ SA, as well as the number of SAs, is practically driven\n   by security policy\
    \ considerations (i.e., security services are\n   defined at the granularity of\
    \ an IPsec SA only), QoS considerations\n   (e.g., multiple QoS classes within\
    \ the same IPsec SA increase odds of\n   packet reordering, possibly falling outside\
    \ the replay window), and\n   failure compartmentalization considerations.  Each\
    \ of the TCP\n   connections protected by an IPsec SA is either in the unbound\
    \ state,\n   or bound to a specific iFCP session.\n   In summary, at any point\
    \ in time:\n      -- there exist 0..M IKE Phase-1 SAs between peer iFCP portals,\n\
    \      -- each IKE Phase-1 SA has 0..N IKE Phase-2 SAs, and\n      -- each IKE\
    \ Phase-2 SA protects 0..Z TCP connections.\n   The creation of an IKE Phase-2\
    \ SA may be triggered by a policy rule\n   supplied through a management interface\
    \ or by iFCP Portal properties\n   registered with the iSNS server.  Similarly,\
    \ the use of a Key\n   Exchange payload in Quick Mode for perfect forward secrecy\
    \ may be\n   dictated through a management interface or by an iFCP Portal policy\n\
    \   rule registered with the iSNS server.\n   If an iFCP implementation makes\
    \ use of unbound TCP connections, and\n   such connections belong to an iFCP Portal\
    \ with security requirements,\n   then the unbound connections MUST be protected\
    \ by an SA at all times\n   just like bound connections.\n   Upon receipt of an\
    \ IKE Phase-2 delete message, there is no\n   requirement to terminate the protected\
    \ TCP connections or delete the\n   associated IKE Phase-1 SA.  Since an IKE Phase-2\
    \ SA may be associated\n   with multiple TCP connections, terminating these connections\
    \ might in\n   fact be inappropriate and untimely.\n   To minimize the number\
    \ of active Phase-2 SAs, IKE Phase-2 delete\n   messages may be sent for Phase-2\
    \ SAs whose TCP connections have not\n   handled data traffic for a while.  To\
    \ minimize the use of SA\n   resources while the associated TCP connections are\
    \ idle, creation of\n   a new SA should be deferred until new data are to be sent\
    \ over the\n   connections.\n"
- title: 10.3.3.  Signatures and Certificate-Based Authentication
  contents:
  - "10.3.3.  Signatures and Certificate-Based Authentication\n   Conforming iFCP\
    \ implementations MAY support peer authentication via\n   digital signatures and\
    \ certificates.  When certificate authentication\n   is chosen within IKE, each\
    \ iFCP gateway needs the certificate\n   credentials of each peer iFCP gateway\
    \ in order to establish a\n   security association with that peer.\n   Certificate\
    \ credentials used by iFCP gateways MUST be those of the\n   machine.  Certificate\
    \ credentials MAY be bound to the interface (IP\n   Address or FQDN) of the iFCP\
    \ gateway used for the iFCP session, or to\n   the fabric WWN of the iFCP gateway\
    \ itself.  Since the value of a\n   machine certificate is inversely proportional\
    \ to the ease with which\n   an attacker can obtain one under false pretenses,\
    \ it is advisable\n   that the machine certificate enrollment process be strictly\n\
    \   controlled.  For example, only administrators may have the ability to\n  \
    \ enroll a machine with a machine certificate.  User certificates\n   SHOULD NOT\
    \ be used by iFCP gateways for establishment of SAs\n   protecting iFCP sessions.\n\
    \   If the gateway does not have the peer iFCP gateway's certificate\n   credentials,\
    \ then it can obtain them:\n   a) by using the iSNS protocol to query for the\
    \ peer gateway's\n      certificate(s) stored in a trusted iSNS server, or\n \
    \  b) through use of the ISAKMP Certificate Request Payload (CRP)\n      [RFC2408]\
    \ to request the certificate(s) directly from the peer\n      iFCP gateway.\n\
    \   When certificate chains are long enough, IKE exchanges using UDP as\n   the\
    \ underlying transport may yield IP fragments, which are known to\n   work poorly\
    \ across some intervening routers, firewalls, and NA(P)T\n   boxes.  As a result,\
    \ the endpoints may be unable to establish an\n   IPsec security association.\n\
    \   Due to these fragmentation shortcomings, IKE is most appropriate for\n   intra-domain\
    \ usage.  Known solutions to the fragmentation problem\n   include sending the\
    \ end-entry machine certificate rather than the\n   chain, reducing the size of\
    \ the certificate chain, using IKE\n   implementations over a reliable transport\
    \ protocol (e.g., TCP)\n   assisted by Path MTU discovery and code against black-holing\
    \ as per\n   [RFC2923], or installing network components that can properly handle\n\
    \   fragments.\n   IKE negotiators SHOULD check the pertinent Certificate Revocation\n\
    \   List (CRL) [RFC2408] before accepting a certificate for use in IKE's\n   authentication\
    \ procedures.\n"
- title: 10.4.  iSNS and iFCP Security
  contents:
  - "10.4.  iSNS and iFCP Security\n   iFCP implementations MUST use iSNS for discovery\
    \ and management\n   services.  Consequently, the security of the iSNS protocol\
    \ has an\n   impact on the security of iFCP gateways.  For a discussion of\n \
    \  potential threats to iFCP gateways through use of iSNS, see [ISNS].\n   To\
    \ provide security for iFCP gateways using the iSNS protocol for\n   discovery\
    \ and management services, the IPSec ESP protocol in tunnel\n   mode MUST be supported\
    \ for iFCP gateways.  Further discussion of iSNS\n   security implementation requirements\
    \ is found in [ISNS].  Note that\n   iSNS security requirements match those for\
    \ iFCP described in Section\n   10.3.\n"
- title: 10.5.  Use of iSNS to Distribute Security Policy
  contents:
  - "10.5.  Use of iSNS to Distribute Security Policy\n   Once communication between\
    \ iFCP gateways and the iSNS server has been\n   secured through use of IPSec,\
    \ the iFCP gateways have the capability\n   to discover the security settings\
    \ that they need to use (or not use)\n   to protect iFCP traffic.  This provides\
    \ a potential scaling advantage\n   over device-by-device configuration of individual\
    \ security policies\n   for each iFCP gateway.  It also provides an efficient\
    \ means for each\n   iFCP gateway to discover the use or non-use of specific security\n\
    \   capabilities by peer gateways.\n   Further discussion on use of iSNS to distribute\
    \ security policies is\n   found in [ISNS].\n"
- title: 10.6.  Minimal Security Policy for an iFCP Gateway
  contents:
  - "10.6.  Minimal Security Policy for an iFCP Gateway\n   An iFCP implementation\
    \ may be able to disable security mechanisms for\n   an iFCP Portal administratively\
    \ through a management interface or\n   through security policy elements set in\
    \ the iSNS server.  As a\n   consequence, IKE or IPsec security associations will\
    \ not be\n   established for any iFCP sessions that traverse the portal.\n   For\
    \ most IP networks, it is inappropriate to assume physical\n   security, administrative\
    \ security, and correct configuration of the\n   network and all attached nodes\
    \ (a physically isolated network in a\n   test lab may be an exception).  Therefore,\
    \ authentication SHOULD be\n   used in order to provide minimal assurance that\
    \ connections have\n   initially been opened with the intended counterpart.  The\
    \ minimal\n   iFCP security policy only states that an iFCP gateway SHOULD\n \
    \  authenticate its iSNS server(s) as described in [ISNS].\n"
- title: 11.  Quality of Service Considerations
  contents:
  - '11.  Quality of Service Considerations

    '
- title: 11.1.  Minimal Requirements
  contents:
  - "11.1.  Minimal Requirements\n   Conforming iFCP protocol implementations SHALL\
    \ correctly communicate\n   gateway-to-gateway, even across one or more intervening\
    \ best-effort\n   IP regions.  The timings with which such gateway-to gateway\n\
    \   communication is performed, however, will greatly depend upon BER,\n   packet\
    \ losses, latency, and jitter experienced throughout the best-\n   effort IP regions.\
    \  The higher these parameters, the higher the gap\n   measured between iFCP observed\
    \ behaviors and baseline iFCP behaviors\n   (i.e., as produced by two iFCP gateways\
    \ directly connected to one\n   another).\n"
- title: 11.2.  High Assurance
  contents:
  - "11.2.  High Assurance\n   It is expected that many iFCP deployments will benefit\
    \ from a high\n   degree of assurance regarding the behavior of intervening IP\
    \ regions,\n   with resulting high assurance on the overall end-to-end path, as\n\
    \   directly experienced by fibre channel applications.  Such assurance\n   on\
    \ the IP behaviors stems from the intervening IP regions supporting\n   standard\
    \ Quality-of-Service (QoS) techniques that are fully\n   complementary to iFCP,\
    \ such as:\n   a) congestion avoidance by over-provisioning of the network,\n\
    \   b) integrated Services [RFC1633] QoS,\n   c) differentiated Services [RFC2475]\
    \ QoS, and\n   d) Multi-Protocol Label Switching [RFC3031].\n   One may load an\
    \ MPLS forwarding equivalence class (FEC) with QoS\n   class significance, in\
    \ addition to other considerations such as\n   protection and diversity for the\
    \ given path.  The complementarity and\n   compatibility of MPLS with Differentiated\
    \ Services is explored in\n   [MPSLDS], wherein the PHB bits are copied to the\
    \ EXP bits of the MPLS\n   shim header.\n   In the most general definition, two\
    \ iFCP gateways are separated by\n   one or more independently managed IP regions\
    \ that implement some of\n   the QoS solutions mentioned above.  A QoS-capable\
    \ IP region supports\n   the negotiation and establishment of a service contract\
    \ specifying\n   the forwarding service through the region.  Such contract and\n\
    \   negotiation rules are outside the scope of this document.  In the\n   case\
    \ of IP regions with DiffServ QoS, the reader should refer to\n   Service Level\
    \ Specifications (SLS) and Traffic Conditioning\n   Specifications (TCS) (as defined\
    \ in [DIFTERM]).  Other aspects of a\n   service contract are expected to be non-technical\
    \ and thus are\n   outside of the IETF scope.\n   Because fibre channel Class\
    \ 2 and Class 3 do not currently support\n   fractional bandwidth guarantees,\
    \ and because iFCP is committed to\n   supporting fibre channel semantics, it\
    \ is impossible for an iFCP\n   gateway to infer bandwidth requirements autonomously\
    \ from streaming\n   fibre channel traffic.  Rather, the requirements on bandwidth\
    \ or\n   other network parameters need to be administratively set into an iFCP\n\
    \   gateway, or into the entity that will actually negotiate the\n   forwarding\
    \ service on the gateway's behalf.  Depending on the QoS\n   techniques available,\
    \ the stipulation of a forwarding service may\n   require interaction with network\
    \ ancillary functions, such as\n   admission control and bandwidth brokers (via\
    \ RSVP or other signaling\n   protocols that an IP region may accept).\n   The\
    \ administrator of a iFCP gateway may negotiate a forwarding\n   service with\
    \ IP region(s) for one, several, or all of an iFCP\n   gateway's TCP sessions\
    \ used by an iFCP gateway.  Alternately, this\n   responsibility may be delegated\
    \ to a node downstream.  Since one TCP\n   connection is dedicated to each iFCP\
    \ session, the traffic in an\n   individual N_PORT to N_PORT session can be singled\
    \ out by iFCP-\n   unaware network equipment as well.\n   For rendering the best\
    \ emulation of fibre channel possible over IP,\n   it is anticipated that typical\
    \ forwarding services will specify a\n   fixed amount of bandwidth, null losses,\
    \ and, to a lesser degree of\n   relevance, low latency and low jitter.  For example,\
    \ an IP region\n   using DiffServ QoS may support SLSes of this nature by applying\
    \ EF\n   DSCPs to the iFCP traffic.\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   The IANA-assigned port for iFCP traffic is port\
    \ number 3420.\n   An iFCP Portal may initiate a connection using any TCP port\
    \ number\n   consistent with its implementation of the TCP/IP stack, provided\
    \ each\n   port number is unique.  To prevent the receipt of stale data\n   associated\
    \ with a previous connection using a given port number, the\n   provisions of\
    \ [RFC1323], Appendix B, SHOULD be observed.\n"
- title: 13.  Normative References
  contents:
  - "13.  Normative References\n   [AESCBC]  Frankel, S. and H. Herbert, \"The AES-XCBC-MAC-96\
    \ Algorithm\n             and Its Use With IPsec\", RFC 3566, September 2003.\n\
    \   [AESCTR]  Housley, R., \"Using Advanced Encryption Standard (AES)\n      \
    \       Counter Mode With IPsec Encapsulating Security Payload\n             (ESP)\"\
    , RFC 3686, January 2004.\n   [ENCAP]   Weber, R., Rajagopal, M., Travostino,\
    \ F., O'Donnell, M.,\n             Monia, C., and M. Merhar, \"Fibre Channel (FC)\
    \ Frame\n             Encapsulation\", RFC 3643, December 2003.\n   [FC-FS]  \
    \ dpANS INCITS.XXX-200X, \"Fibre Channel Framing and Signaling\n             (FC-FS),\
    \ Rev 1.70, INCITS Project 1331D, February 2002\n   [FC-GS3]  dpANS X3.XXX-200X,\
    \ \"Fibre Channel Generic Services -3 (FC-\n             GS3)\", revision 7.01,\
    \ INCITS Project 1356-D, November 2000\n   [FC-SW2]  dpANS X3.XXX-2000X, \"Fibre\
    \ Channel Switch Fabric -2 (FC-\n             SW2)\", revision 5.2, INCITS Project\
    \ 1305-D, May 2001\n   [FCP-2]   dpANS T10, \"Fibre Channel Protocol for SCSI,\
    \ Second\n             Version\", revision 8, INCITS Project 1144D, September\
    \ 2002\n   [ISNS]    Tseng, J., Gibbons, K., Travostino, F., Du Laney, C., and\n\
    \             J. Souza, \"Internet Storage Name Service (iSNS)\", RFC 4171,\n\
    \             September 2005.\n   [RFC2119] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2401] Kent, S. and R. Atkinson, \"Security Architecture for the\n\
    \             Internet Protocol\", RFC 2401, November 1998.\n   [RFC2402] Kent,\
    \ S. and R. Atkinson, \"IP Authentication Header\", RFC\n             2402, November\
    \ 1998.\n   [RFC2404] Madson, C. and R. Glenn, \"The Use of HMAC-SHA-1-96 within\n\
    \             ESP and AH\", RFC 2404, November 1998.\n   [RFC2406] Kent, S. and\
    \ R. Atkinson, \"IP Encapsulating Security\n             Payload (ESP)\", RFC\
    \ 2406, November 1998.\n   [RFC2407] Piper, D., \"The Internet IP Security Domain\
    \ of\n             Interpretation for ISAKMP\", RFC 2407, N.\n   [RFC2408] Maughan,\
    \ D., Schertler, M., Schneider, M., and J. Turner,\n             \"Internet Security\
    \ Association and Key Management Protocol\n             (ISAKMP)\", RFC 2408,\
    \ November 1998.\n   [RFC2409] Harkins, D. and D. Carrel, \"The Internet Key Exchange\n\
    \             (IKE)\", RFC 2409, November 1998.\n   [RFC2410] Glenn, R. and S.\
    \ Kent, \"The NULL Encryption Algorithm and\n             Its Use With IPsec\"\
    , RFC 2410, November 1998.\n   [RFC2451] Pereira, R. and R. Adams, \"The ESP CBC-Mode\
    \ Cipher\n             Algorithms\", RFC 2451, November 1998.\n   [RFC793]  Postel,\
    \ J., \"Transmission Control Protocol\", STD 7, RFC\n             793, September\
    \ 1981.\n   [SECIPS]  Aboba, B., Tseng, J., Walker, J., Rangan, V., and F.\n \
    \            Travostino, \"Securing Block Storage Protocols Over IP\", RFC\n \
    \            3723, April 2004.\n"
- title: 14.  Informative References
  contents:
  - "14.  Informative References\n   [AES]     FIPS Publication XXX, \"Advanced Encryption\
    \ Standard (AES)\",\n             Draft, 2001, Available from\n             http://csrc.nist.gov/publications/drafts/dfips-AES.pdf\n\
    \   [DIFTERM] Grossman, D., \"New Terminology and Clarifications for\n       \
    \      Diffserv\", RFC 3260, April 2002.\n   [FC-AL2]  dpANS X3.XXX-199X, \"Fibre\
    \ Channel Arbitrated Loop (FC-AL-\n             2)\", revision 7.0, NCITS Project\
    \ 1133D, April 1999\n   [FC-FLA]  TR-20-199X, \"Fibre Channel Fabric Loop Attachment\
    \ (FC-\n             FLA)\", revision 2.7, NCITS Project 1235-D, August 1997\n\
    \   [FC-VI] ANSI/INCITS 357:2002, \"Fibre Channel Virtual Interface\n        \
    \     Architecture Mapping Protocol (FC-VI)\", NCITS Project\n             1332-D,\
    \ July 2000.\n   [KEMALP]  Kembel, R., \"The Fibre Channel Consultant, Arbitrated\n\
    \             Loop\", Robert W. Kembel, Northwest Learning Associates,\n     \
    \        2000, ISBN 0-931836-84-0\n   [KEMCMP]  Kembel, R., \"Fibre Channel, A\
    \ Comprehensive Introduction\",\n             Northwest Learning Associates Inc.,\
    \ 2000, ISBN\n             0-931836-84-0\n   [MPSLDS]  Le Faucheur, F., Wu, L.,\
    \ Davie, B., Davari, S., Vaananen,\n             P., Krishnan, R., Cheval, P.,\
    \ and J. Heinanen, \"Multi-\n             Protocol Label Switching (MPLS) Support\
    \ of Differentiated\n             Services\", RFC 3270, May 2002.\n   [RFC1122]\
    \ Braden, R., \"Requirements for Internet Hosts -\n             Communication\
    \ Layers\", STD 3, RFC 1122, October 1989.\n   [RFC1323] Jacobson, V., Braden,\
    \ R., and D. Borman, \"TCP Extensions\n             for High Performance\", RFC\
    \ 1323, May 1992.\n   [RFC1633] Braden, R., Clark, D., and S. Shenker, \"Integrated\
    \ Services\n             in the Internet Architecture: an Overview\", RFC 1633,\
    \ June\n             1994.\n   [RFC2030] Mills, D., \"Simple Network Time Protocol\
    \ (SNTP) Version 4\n             for IPv4, IPv6 and OSI\", RFC 2030, October 1996.\n\
    \   [RFC2405] Madson, C. and N. Doraswamy, \"The ESP DES-CBC Cipher\n        \
    \     Algorithm With Explicit IV\", RFC 2405, November 1998.\n   [RFC2475] Blake,\
    \ S., Black, D., Carlson, M., Davies, E., Wang, Z.,\n             and W. Weiss,\
    \ \"An Architecture for Differentiated Service\",\n             RFC 2475, December\
    \ 1998.\n   [RFC2625] Rajagopal, M., Bhagwat, R., and W. Rickard, \"IP and ARP\n\
    \             over Fibre Channel\", RFC 2625, June 1999.\n   [RFC2709] Srisuresh,\
    \ P., \"Security Model with Tunnel-mode IPsec for\n             NAT Domains\"\
    , RFC 2709, October 1999.\n   [RFC2923] Lahey, K., \"TCP Problems with Path MTU\
    \ Discovery\", RFC\n             2923, September 2000.\n   [RFC3031] Rosen, E.,\
    \ Viswanathan, A., and R. Callon, \"Multiprotocol\n             Label Switching\
    \ Architecture\", RFC 3031, January 2001.\n   [RFC896]  Nagle, J., \"Congestion\
    \ control in IP/TCP internetworks\",\n             RFC 896, January 1984.\n"
- title: Appendix A.  iFCP Support for Fibre Channel Link Services
  contents:
  - "Appendix A.  iFCP Support for Fibre Channel Link Services\n   For reference purposes,\
    \ this appendix enumerates all the fibre\n   channel link services and the manner\
    \ in which each shall be processed\n   by an iFCP implementation.  The iFCP processing\
    \ policies are defined\n   in Section 7.\n   In the following sections, the name\
    \ of a link service specific to a\n   particular FC-4 protocol is prefaced by\
    \ a mnemonic identifying the\n   protocol.\n"
- title: A.1.  Basic Link Services
  contents:
  - "A.1.  Basic Link Services\n   The basic link services are shown in the following\
    \ table:\n                        Basic Link Services\n      Name            \
    \ Description                  iFCP Policy\n      ----             -----------\
    \                  ----------\n      ABTS            Abort Sequence          \
    \      Transparent\n      BA_ACC          Basic Accept                  Transparent\n\
    \      BA_RJT          Basic Reject                  Transparent\n      NOP  \
    \           No Operation                  Transparent\n      PRMT            Preempted\
    \                     Rejected\n                                             \
    \         (Applies to\n                                                      Class\
    \ 1 only)\n      RMC             Remove Connection             Rejected\n    \
    \                                                  (Applies to\n             \
    \                                         Class 1 only)\n"
- title: A.2.  Pass-Through Link Services
  contents:
  - "A.2.  Pass-Through Link Services\n   As specified in Section 7, the link service\
    \ requests of Table 10 and\n   the associated ACC response frames MUST be passed\
    \ to the receiving\n   N_PORT without altering the payload.\n               Name\
    \        Description\n               ----        -----------\n               ADVC\
    \         Advise Credit\n               CSR          Clock Synchronization Request\n\
    \               CSU          Clock Synchronization Update\n               ECHO\
    \         Echo\n               ESTC         Estimate Credit\n               ESTS\
    \         Establish Streaming\n               FACT         Fabric Activate Alias_ID\n\
    \               FAN          Fabric Address Notification\n               FCP_RJT\
    \      FCP FC-4 Link Service Reject\n               FCP SRR      FCP Sequence\
    \ Retransmission\n                             Request\n               FDACT \
    \       Fabric Deactivate Alias_ID\n               FDISC        Discover F_Port\
    \ Service\n                             Parameters\n               FLOGI     \
    \   F_Port Login\n               GAID         Get Alias_ID\n               LCLM\
    \         Login Control List Management\n               LINIT        Loop Initialize\n\
    \               LIRR         Link Incident Record\n                          \
    \   Registration\n               LPC          Loop Port Control\n            \
    \   LS_RJT       Link Service Reject\n               LSTS         Loop Status\n\
    \               NACT         N_Port Activate Alias_ID\n               NDACT  \
    \      N_Port Deactivate Alias_ID\n               PDISC        Discover N_Port\
    \ Service\n                             Parameters\n               PRLI      \
    \   Process Login\n               PRLO         Process Logout\n              \
    \ QoSR         Quality of Service Request\n               RCS          Read Connection\
    \ Status\n               RLIR         Registered Link Incident\n             \
    \                Report\n               RNC          Report Node Capability\n\
    \               RNFT         Report Node FC-4 Types\n               RNID     \
    \    Request Node Identification\n                             Data\n        \
    \       RPL          Read Port List\n               RPS          Read Port Status\
    \ Block\n               RPSC         Report Port Speed\n                     \
    \        Capabilities\n               RSCN         Registered State Change\n \
    \                            Notification\n               RTV          Read Timeout\
    \ Value\n               RVCS         Read Virtual Circuit Status\n           \
    \    SBRP         Set Bit-Error Reporting\n                             Parameters\n\
    \               SCN          State Change Notification\n               SCR   \
    \       State Change Registration\n               TEST         Test\n        \
    \       TPLS         Test Process Login State\n               Table 10. Pass-Through\
    \ Link Services\n"
- title: A.3.  Special Link Services
  contents:
  - "A.3.  Special Link Services\n   The extended and FC-4 link services of Table\
    \ 11 are processed by an\n   iFCP implementation as described in the sections\
    \ referenced in the\n   table.\n         Name         Description            \
    \        Section\n         ----         -----------                    -------\n\
    \         ABTX         Abort Exchange                 7.3.1.1\n         ADISC\
    \        Discover Address               7.3.1.2\n         ADISC        Discover\
    \ Address Accept        7.3.1.3\n         ACC\n         FARP-        Fibre Channel\
    \ Address          7.3.1.4\n         REPLY        Resolution Protocol\n      \
    \                 Reply\n         FARP-        Fibre Channel Address         \
    \ 7.3.1.5\n         REQ          Resolution Protocol\n                       Request\n\
    \         LOGO         N_PORT Logout                  7.3.1.6\n         PLOGI\
    \        Port Login                     7.3.1.7\n         REC          Read Exchange\
    \ Concise          7.3.1.8\n         REC ACC      Read Exchange Concise      \
    \    7.3.1.9\n                       Accept\n         FCP REC      FCP Read Exchange\
    \             7.3.2.1.1\n                       Concise (see [FCP-2])\n      \
    \   FCP REC      FCP Read Exchange             7.3.2.1.2\n         ACC       \
    \   Concise Accept (see\n                       [FCP-2])\n         RES       \
    \   Read Exchange Status           7.3.1.10\n                       Block\n  \
    \       RES ACC      Read Exchange Status           7.3.1.11\n               \
    \        Block Accept\n         RLS          Read Link Error Status         7.3.1.12\n\
    \                       Block\n         RRQ          Reinstate Recovery      \
    \       7.3.1.14\n                       Qualifier\n         RSI          Request\
    \ Sequence               7.3.1.15\n                       Initiative\n       \
    \  RSS          Read Sequence Status           7.3.1.13\n                    \
    \   Block\n         SRL          Scan Remote Loop               7.3.1.16\n   \
    \      TPRLO        Third Party Process            7.3.1.17\n                \
    \       Logout\n         TPRLO        Third Party Process            7.3.1.18\n\
    \         ACC          Logout Accept\n                  Table 11. Special Link\
    \ Services\n"
- title: Appendix B.  Supporting the Fibre Channel Loop Topology
  contents:
  - "Appendix B.  Supporting the Fibre Channel Loop Topology\n   A loop topology may\
    \ be optionally supported by a gateway\n   implementation in one of the following\
    \ ways:\n   a) By implementing the FL_PORT public loop interface specified in\n\
    \      [FC-FLA].\n   b) By emulating the private loop environment specified in\
    \ [FC-AL2].\n   Private loop emulation allows the attachment of fibre channel\
    \ devices\n   that do not support fabrics or public loops.  The gateway presents\n\
    \   such devices to the fabric as though they were fabric-attached.\n   Conversely,\
    \ the gateway presents devices on the fabric, whether they\n   are locally or\
    \ remotely attached, as though they were connected to\n   the private loop.\n\
    \   Private loop support requires gateway emulation of the loop\n   primitives\
    \ and control frames specified in [FC-AL2].  These frames\n   and primitives MUST\
    \ be locally emulated by the gateway.  Loop control\n   frames MUST NOT be sent\
    \ over an iFCP session.\n"
- title: B.1.  Remote Control of a Public Loop
  contents:
  - "B.1.  Remote Control of a Public Loop\n   A gateway MAY disclose that a remotely\
    \ attached device is connected\n   to a public loop.  If it does, it MUST also\
    \ provide aliases\n   representing the corresponding Loop Fabric Address (LFA),\
    \ DOMAIN_ID,\n   and FL_PORT Address Identifier through which the public loop\
    \ may be\n   remotely controlled.\n   The LFA and FL_PORT address identifier both\
    \ represent an N_PORT that\n   services remote loop management requests contained\
    \ in the LINIT and\n   SRL extended link service messages.  To support these messages,\
    \ the\n   gateway MUST allocate an NL_PORT alias so that the corresponding\n \
    \  alias for the LFA or FL_PORT address identifier can be derived by\n   setting\
    \ the Port ID component of the NL_PORT alias to zero.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors are indebted to those who contributed material\
    \ and who\n   took the time to carefully review and critique this specification\n\
    \   including David Black (EMC), Rory Bolt (Quantum/ATL), Victor Firoiu\n   (Nortel),\
    \ Robert Peglar (XIOtech), David Robinson (Sun), Elizabeth\n   Rodriguez, Joshua\
    \ Tseng (Nishan), Naoke Watanabe (HDS) and members of\n   the IPS working group.\
    \  For review of the iFCP security policy, the\n   authors are further indebted\
    \ to the authors of the IPS security\n   document [SECIPS], which include Bernard\
    \ Aboba (Microsoft), Ofer\n   Biran (IBM), Uri Elzer (Broadcom), Charles Kunziger\
    \ (IBM), Venkat\n   Rangan (Rhapsody Networks), Julian Satran (IBM), Joseph Tardo\n\
    \   (Broadcom), and Jesse Walker (Intel).\n"
- title: Author's Addresses
  contents:
  - "Author's Addresses\n   Comments should be sent to the ips mailing list (ips@ece.cmu.edu)\
    \ or\n   to the authors.\n   Charles Monia\n   7553 Morevern Circle\n   San Jose,\
    \ CA 95135\n   EMail: charles_monia@yahoo.com\n   Rod Mullendore\n   McDATA\n\
    \   4555 Great America Pkwy\n   Suite 301\n   Santa Clara, CA 95054\n   Phone:\
    \ 408-519-3986\n   EMail: Rod.Mullendore@MCDATA.com\n   Franco Travostino\n  \
    \ Nortel\n   600 Technology Park Drive\n   Billerica, MA 01821 USA\n   Phone:\
    \ 978-288-7708\n   EMail: travos@nortel.com\n   Wayland Jeong\n   TROIKA Networks,\
    \ Inc.\n   2555 Townsgate Road, Suite 105\n   Westlake Village, CA  91361\n  \
    \ Phone: 805-371-1377\n   EMail: wayland@TroikaNetworks.com\n   Mark Edwards\n\
    \   Adaptec (UK) Ltd.\n   4th Floor, Howard House\n   Queens Ave, UK.  BS8 1SD\n\
    \   Phone: +44 (0)117 930 9600\n   EMail: mark_edwards@adaptec.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
