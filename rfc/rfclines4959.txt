Abstract To date, the Internet Message Access Protocol (IMAP) has used a Simple Authentication and Security Layer (SASL) profile which always required at least one complete round trip for an authentication, as it did not support an initial client response argument.
This additional round trip at the beginning of the session is undesirable, especially when round trip costs are high.
This document defines an extension to IMAP which allows clients and servers to avoid this round trip by allowing an initial client response argument to the IMAP AUTHENTICATE command.
The SASL initial client response extension is present in any IMAP [RFC3501] server implementation which returns "SASL IR" as one of the supported capabilities in its CAPABILITY response.
Servers which support this extension will accept an optional initial client response with the AUTHENTICATE command for any SASL [RFC4422] mechanisms which support it.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
In examples, "C:" and "S:" indicate lines sent by the client and server, respectively.
Formal syntax is defined by [RFC4234] as extended by [RFC3501].
IMAP Changes to the IMAP AUTHENTICATE Command
This extension adds an optional second argument to the AUTHENTICATE command that is defined in Section 6.2.2 of [RFC3501].
If this second argument is present, it represents the contents of the "initial client response" defined in Section 5.1 of [RFC4422].
As with any other client response, this initial client response MUST be encoded as defined in Section 4 of [RFC4648].
It also MUST be transmitted outside of a quoted string or literal.
This indicates that the response is present, but is a zero  length string.
When decoding the BASE64 [RFC4648] data in the initial client response, decoding errors MUST be treated as IMAP [RFC3501] would handle them in any normal SASL client response.
If the client uses an initial response with a SASL mechanism that does not support an initial response, the server MUST reject the command with a tagged BAD response.
Note: support and use of the initial client response is optional for both clients and servers.
Servers that implement this extension MUST support clients that omit the initial client response, and clients that implement this extension MUST NOT send an initial client response to servers that do not advertise the SASL IR capability.
In such a situation, clients MUST fall back to an IMAP [RFC3501] compatible mode.
If either the client or the server do not support the SASL IR capability, a mechanism which uses an initial client response is negotiated using the challenge/response exchange described in [RFC3501], with an initial zero length server challenge.
client connects to server and negotiates a TLS protection layer ...
CAPABILITY IMAP4rev1 SASL IR AUTH PLAIN S:
CAPABILITY IMAP4rev1 SASL IR AUTH PLAIN S:
A01 OK Success (tls protection)
CAPABILITY IMAP4rev1 SASL IR AUTH PLAIN AUTH
C01 OK Completed C: A01 AUTHENTICATE
A01 OK Success (tls protection)
client connects to server and negotiates a TLS protection layer ...
CAPABILITY IMAP4rev1 SASL IR AUTH PLAIN AUTH
S: A01 OK Success (tls protection) 5.
The IANA has added SASL IR to the IMAP4 Capabilities Registry.
The extension defined in this document is subject to many of the Security Considerations defined in [RFC3501] and [RFC4422].
Server implementations MUST treat the omission of an initial client response from the AUTHENTICATE command as defined by [RFC3501]
(as if this extension did not exist).
Although [RFC3501] has no express line length limitations, some implementations choose to enforce them anyway.
Such implementations MUST be aware that the addition of the initial response parameter to AUTHENTICATE may increase the maximum line length that IMAP parsers may expect to support.
Server implementations MUST be able to receive the largest possible initial client response that their supported mechanisms might receive.
The following syntax specification uses the Augmented Backus Naur Form [RFC4234] notation.
[RFC3501] defines the non terminals capability, auth type, and base64.
