- title: __initial_text__
  contents:
  - '                    xCard: vCard XML Representation

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the XML schema of the vCard data format.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6351.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Conventions  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  The Schema . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  2\n   4.  Example: Author's XML vCard  . . . . . . . . . . . . . .\
    \ . . .  3\n   5.  Design Considerations  . . . . . . . . . . . . . . . . . .\
    \ . .  4\n     5.1.  Extensibility  . . . . . . . . . . . . . . . . . . . . .\
    \ .  6\n     5.2.  Limitations  . . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n   6.  Format Conversions . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 10\n  \
    \ 8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11\n    \
    \ 8.1.  Registration of the XML Namespace  . . . . . . . . . . . . 11\n     8.2.\
    \  Media Type . . . . . . . . . . . . . . . . . . . . . . . . 11\n   9.  Acknowledgments\
    \  . . . . . . . . . . . . . . . . . . . . . . . 12\n   10. References . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . . 12\n     10.1. Normative References\
    \ . . . . . . . . . . . . . . . . . . . 12\n     10.2. Informative References\
    \ . . . . . . . . . . . . . . . . . . 13\n   Appendix A.  Relax NG Schema . .\
    \ . . . . . . . . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   vCard [RFC6350] is a data format for representing and exchanging\n\
    \   information about individuals and other entities.  It is a text-based\n  \
    \ format (as opposed to a binary format).  This document defines xCard,\n   an\
    \ XML [W3C.REC-xml-20081126] representation for vCard.  The\n   underlying data\
    \ structure is exactly the same, enabling a 1-to-1\n   mapping between the original\
    \ vCard format and the XML representation.\n   The XML formatting may be preferred\
    \ in some contexts where an XML\n   engine is readily available and may be reused\
    \ instead of writing a\n   standalone vCard parser.\n   Earlier work on an XML\
    \ format for vCard was started in 1998 by Frank\n   Dawson [VCARD-DTD].  Sadly,\
    \ it did not take over the world.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  The Schema
  contents:
  - "3.  The Schema\n   The schema is expressed in the RELAX NG language [ISO.19757-2.2008]\n\
    \   and is found in Appendix A.\n"
- title: '4.  Example: Author''s XML vCard'
  contents:
  - "4.  Example: Author's XML vCard\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   <vcards xmlns=\"urn:ietf:params:xml:ns:vcard-4.0\">\n     <vcard>\n   \
    \    <fn><text>Simon Perreault</text></fn>\n       <n>\n         <surname>Perreault</surname>\n\
    \         <given>Simon</given>\n         <additional/>\n         <prefix/>\n \
    \        <suffix>ing. jr</suffix>\n         <suffix>M.Sc.</suffix>\n       </n>\n\
    \       <bday><date>--0203</date></bday>\n       <anniversary>\n         <date-time>20090808T1430-0500</date-time>\n\
    \       </anniversary>\n       <gender><sex>M</sex></gender>\n       <lang>\n\
    \         <parameters><pref><integer>1</integer></pref></parameters>\n       \
    \  <language-tag>fr</language-tag>\n       </lang>\n       <lang>\n         <parameters><pref><integer>2</integer></pref></parameters>\n\
    \         <language-tag>en</language-tag>\n       </lang>\n       <org>\n    \
    \     <parameters><type><text>work</text></type></parameters>\n         <text>Viagenie</text>\n\
    \       </org>\n       <adr>\n         <parameters>\n           <type><text>work</text></type>\n\
    \           <label><text>Simon Perreault\n   2875 boul. Laurier, suite D2-630\n\
    \   Quebec, QC, Canada\n   G1V 2M2</text></label>\n         </parameters>\n  \
    \       <pobox/>\n         <ext/>\n         <street>2875 boul. Laurier, suite\
    \ D2-630</street>\n         <locality>Quebec</locality>\n         <region>QC</region>\n\
    \         <code>G1V 2M2</code>\n         <country>Canada</country>\n       </adr>\n\
    \       <tel>\n         <parameters>\n           <type>\n             <text>work</text>\n\
    \             <text>voice</text>\n           </type>\n         </parameters>\n\
    \         <uri>tel:+1-418-656-9254;ext=102</uri>\n       </tel>\n       <tel>\n\
    \         <parameters>\n           <type>\n             <text>work</text>\n  \
    \           <text>text</text>\n             <text>voice</text>\n             <text>cell</text>\n\
    \             <text>video</text>\n           </type>\n         </parameters>\n\
    \         <uri>tel:+1-418-262-6501</uri>\n       </tel>\n       <email>\n    \
    \     <parameters><type><text>work</text></type></parameters>\n         <text>simon.perreault@viagenie.ca</text>\n\
    \       </email>\n       <geo>\n         <parameters><type><text>work</text></type></parameters>\n\
    \         <uri>geo:46.766336,-71.28955</uri>\n       </geo>\n       <key>\n  \
    \       <parameters><type><text>work</text></type></parameters>\n         <uri>http://www.viagenie.ca/simon.perreault/simon.asc</uri>\n\
    \       </key>\n       <tz><text>America/Montreal</text></tz>\n       <url>\n\
    \         <parameters><type><text>home</text></type></parameters>\n         <uri>http://nomis80.org</uri>\n\
    \       </url>\n     </vcard>\n   </vcards>\n"
- title: 5.  Design Considerations
  contents:
  - "5.  Design Considerations\n   The general idea is to map vCard parameters, properties,\
    \ and value\n   types to XML elements.  For example, the \"FN\" property is mapped\
    \ to\n   the \"fn\" element.  In turn, that element contains a text element\n\
    \   whose content corresponds to the vCard property's value.\n   vCard parameters\
    \ are also mapped to XML elements.  They are contained\n   in the <parameters>\
    \ element, which is contained in property elements.\n   For example, the \"TYPE\"\
    \ parameter applied to the \"TEL\" property would\n   look like the following\
    \ in XML:\n     <tel>\n       <parameters>\n         <type>\n           <text>voice</text>\n\
    \           <text>video</text>\n         </type>\n       </parameters>\n     \
    \  <uri>tel:+1-555-555-555</uri>\n     </tel>\n   Parameters taking a list of\
    \ values are simply repeated multiple\n   times, once for each value in the list.\n\
    \   Properties having structured values (e.g., the \"N\" property) are\n   expressed\
    \ by XML element trees.  Element names in that tree (e.g.,\n   \"surname\", \"\
    given\", etc.) do not have a vCard equivalent since they\n   are identified by\
    \ position in plain vCard.\n   Line folding is a non-issue in XML.  Therefore,\
    \ the mapping from\n   vCard to XML is done after the unfolding procedure is carried\
    \ out.\n   Conversely, the mapping from XML to vCard is done before the folding\n\
    \   procedure is carried out.\n   A top-level <vcards> element is used as root.\
    \  It contains one or\n   more <vcard> elements, each representing a complete\
    \ vCard.  The\n   <vcards> element MUST be present even when only a single vCard\
    \ is\n   present in an XML document.\n   The group construct (Section 3.2 in [RFC6350])\
    \ is represented with\n   the <group> element.  The \"name\" attribute contains\
    \ the group's name.\n   For example:\n     <vcards>\n       <vcard>\n        \
    \ <group name=\"contact\">\n           <fn>...</fn>\n           <email>...</email>\n\
    \         </group>\n         <group name=\"media\">\n           <photo>...</photo>\n\
    \         </group>\n         <categories>...</categories>\n       </vcard>\n \
    \    </vcards>\n   is equivalent to:\n     BEGIN:VCARD\n     VERSION:4.0\n   \
    \  contact.FN=...\n     contact.EMAIL=...\n     media.PHOTO=...\n     CATEGORIES=...\n\
    \     END:VCARD\n"
- title: 5.1.  Extensibility
  contents:
  - "5.1.  Extensibility\n   The original vCard format is extensible.  New properties,\
    \ parameters,\n   data types and values (collectively known as vCard elements,\
    \ not to\n   be confused with XML elements) can be registered with IANA (see\n\
    \   [RFC6350], Section 10.2).  It is expected that these vCard extensions\n  \
    \ will also specify extensions to the XML format described in this\n   document.\n\
    \   New XML vCard property and parameter element names MUST be lower-\n   case.\
    \  This is necessary to ensure that round-tripping between XML\n   and plain-text\
    \ vCard works correctly.\n   Unregistered extensions (i.e., those starting with\
    \ \"X-\" and\n   \"VND-...-\") are expressed in XML by using elements starting\
    \ with \"x-\"\n   and \"vnd-...-\".  Usage of XML namespaces [W3C.REC-xml-names-20091208]\n\
    \   for extensibility is RECOMMENDED for extensions that have no\n   equivalent\
    \ in plain-text vCard.  Refer to Section 6 for the\n   implications when converting\
    \ between plain-text vCard and XML.\n   Examples:\n     <x-my-prop>\n       <parameters>\n\
    \         <pref><integer>1</integer></pref>\n       </parameters>\n       <text>value\
    \ goes here</text>\n     </x-my-prop>\n     <ext:my-prop\n         ext:xmlns=\"\
    http://example.com/extensions/my-vcard\">\n       <parameters>\n         <pref><integer>1</integer></pref>\n\
    \       </parameters>                 <!-- Core vCard elements  -->\n       <text>value\
    \ goes here</text>  <!-- are still accessible -->\n     </ext:my-prop>\n   Note\
    \ that extension elements do not need the \"X-\" or \"VND-\" prefix in\n   XML.\
    \  The XML namespace mechanism is sufficient.\n   A vCard XML parser MUST ignore\
    \ XML elements and attributes for which\n   it doesn't recognize the expanded\
    \ name.  The normal behavior of\n   ignoring XML processing instructions whose\
    \ target is not recognized\n   MUST also be followed.\n   In the original vCard\
    \ format, the \"VERSION\" property was mandatory\n   and played a role in extensibility.\
    \  In XML, this property is absent.\n   Its role is played by the vCard core namespace\
    \ identifier, which\n   includes the version number. vCard revisions will use\
    \ a different\n   namespace.\n   Parameters containing a list of values are expressed\
    \ using a list of\n   elements in XML (e.g., the <type> element).\n"
- title: 5.2.  Limitations
  contents:
  - "5.2.  Limitations\n   The schema does not validate the cardinality of properties.\
    \  This is\n   a limitation of the schema definition language.  Cardinalities\
    \ of the\n   original vCard format [RFC6350] MUST still be respected.\n   Some\
    \ constructs (e.g., value enumerations in type parameters) have\n   additional\
    \ ordering constraints in XML.  This is a result of\n   limitations of the schema\
    \ definition language, and the order is\n   arbitrary.  The order MUST be respected\
    \ in XML for the vCard to be\n   valid.  However, reordering as part of conversion\
    \ to or from plain\n   vCard MAY happen.\n"
- title: 6.  Format Conversions
  contents:
  - "6.  Format Conversions\n   When new properties or \"X-\" properties are used,\
    \ a vCard<->xCard\n   converter might not recognize them or know what the appropriate\n\
    \   default value types are, yet they need to be able to preserve the\n   values.\
    \  A similar issue arises for unrecognized property parameters.\n   As a result,\
    \ the following rules are applied when dealing with\n   unrecognized properties\
    \ and property parameters:\n   o  When converting from vCard to xCard:\n     \
    \ *  Any property that does not include a \"VALUE\" parameter and\n         whose\
    \ default value type is not known MUST be converted using\n         the value\
    \ type XML element <unknown>.  The content of that\n         element is the unprocessed\
    \ value text.\n      *  Any unrecognized property parameter MUST be converted\
    \ using the\n         value type XML element <unknown>, with its content set to\
    \ the\n         parameter value text, treated as if it were a text value, or\n\
    \         list of text values.\n      *  The content of \"XML\" properties is\
    \ copied as is to XML.\n      *  Property and parameter XML element names are\
    \ converted to\n         lower-case.\n      *  Property value escaping is undone.\
    \  For example, \"\\n\" becomes a\n         NEWLINE character (ASCII decimal 10).\n\
    \      *  Double-quoting of parameter values, as well as backslash\n         escaping\
    \ in parameter values, is undone.  For example,\n         PARAM=\"\\\"foo\\\"\
    ,\\\"bar\\\"\" becomes <param>\"foo\",\"bar\"</param>.\n   o  When converting\
    \ xCard to vCard:\n      *  Properties in the vCard 4 namespace:\n         + \
    \ If the converter knows of a specific plain-text\n            representation\
    \ for this property, it uses it.  For example,\n            the <adr> element\
    \ corresponds to the \"ADR\" property, which\n            is encoded using comma-separated\
    \ lists separated by\n            semicolons.\n         +  Otherwise, the property\
    \ name is taken from the element name,\n            property parameters are taken\
    \ from the <parameters> element,\n            and the content of the property\
    \ is taken from the content of\n            the value element.  If the property\
    \ element has attributes\n            or contains other XML elements, they are\
    \ dropped.\n         +  If a standard property's XML element contains XML elements\n\
    \            and attributes for which the converter doesn't recognize the\n  \
    \          expanded name, they are dropped.  Therefore, it is\n            RECOMMENDED\
    \ to limit extensions to the property level to\n            ensure that all data\
    \ is preserved intact in round-trip\n            conversions.\n      *  Properties\
    \ in other namespaces are wrapped as is inside an\n         \"XML\" property.\n\
    \      *  Any <unknown> property value XML elements are converted\n         directly\
    \ into vCard values.  The containing property MUST NOT\n         have a \"VALUE\"\
    \ parameter.\n      *  Any <unknown> parameter value XML elements are converted\
    \ as if\n         they were <text> value type XML elements.\n      *  Property\
    \ and parameter names are converted to upper-case.\n      *  Property value escaping\
    \ (Section 3.3 of [RFC6350]) is carried\n         out.  For example, a NEWLINE\
    \ character (ASCII decimal 10)\n         becomes \"\\n\".\n      *  Double-quoting\
    \ of parameter values, as well as backslash\n         escaping in parameter values,\
    \ is carried out.  For example,\n         <param>\"foo\",\"bar\"</param> becomes\
    \ PARAM=\"\\\"foo\\\",\\\"bar\\\"\".\n   For example, these two vCards are equivalent:\n\
    \     <?xml version=\"1.0\"?>\n     <vcards xmlns=\"urn:ietf:params:xml:ns:vcard-4.0\"\
    >\n       <vcard>\n         <fn><text>J. Doe</text></fn>\n         <n>\n     \
    \      <surname>Doe</surname>\n           <given>J.</given>\n           <additional/>\n\
    \           <prefix/>\n           <suffix/>\n         </n>\n         <x-file>\n\
    \           <parameters>\n             <mediatype><text>image/jpeg</text></mediatype>\n\
    \           </parameters>\n           <unknown>alien.jpg</unknown>\n         </x-file>\n\
    \         <a xmlns=\"http://www.w3.org/1999/xhtml\"\n            href=\"http://www.example.com\"\
    >My web page!</a>\n       </vcard>\n     </vcards>\n     BEGIN:VCARD\n     VERSION:4.0\n\
    \     FN:J. Doe\n     N:Doe;J.;;\n     X-FILE;MEDIATYPE=image/jpeg:alien.jpg\n\
    \     XML:<a xmlns=\"http://www.w3.org/1999/xhtml\"\\n\n         href=\"http://www.example.com\"\
    >My web page!</a>\n     END:VCARD\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   All the security considerations applicable to\
    \ plain vCard [RFC6350]\n   are applicable to this document as well.\n   XML Signature\
    \ [W3C.CR-xmldsig-core1-20110303] and XML Encryption\n   [W3C.CR-xmlenc-core1-20110303]\
    \ can be used with xCard to provide\n   authentication and confidentiality.\n"
- title: 8.  IANA Considerations
  contents:
  - '8.  IANA Considerations

    '
- title: 8.1.  Registration of the XML Namespace
  contents:
  - "8.1.  Registration of the XML Namespace\n   URI:  urn:ietf:params:xml:ns:vcard-4.0\n\
    \   Registrant Contact:  The IESG <iesg@ietf.org>\n   XML:  None.  Namespace URIs\
    \ do not represent an XML specification.\n"
- title: 8.2.  Media Type
  contents:
  - "8.2.  Media Type\n   This section defines the MIME media type [RFC4288] for use\
    \ with\n   vCard-in-XML data.\n   To:  ietf-types@iana.org\n   Subject:  Registration\
    \ of media type application/vcard+xml\n   Type name:  application\n   Subtype\
    \ name:  vcard+xml\n   Required parameters:  none\n   Optional parameters:  charset\
    \ as defined for application/xml in\n      [RFC3023]; per [RFC3023], use of the\
    \ charset parameter with the\n      value \"utf-8\" is \"STRONGLY RECOMMENDED\"\
    .\n   Encoding considerations:  Same as encoding considerations of\n      application/xml\
    \ as specified in [RFC3023].\n   Security considerations:  This media type has\
    \ all of the security\n      considerations described in [RFC3023], plus those\
    \ listed in\n      Section 7.\n   Interoperability considerations:  This media\
    \ type provides an\n      alternative syntax to vCard data [RFC6350] based on\
    \ XML.\n   Published specification:  This specification.\n   Applications that\
    \ use this media type:  Applications that currently\n      make use of the text/vcard\
    \ media type can use this as an\n      alternative.  In general, applications\
    \ that maintain or process\n      contact information can use this media type.\n\
    \   Additional information:\n      Magic number(s):  none\n      File extension(s):\
    \  XML data should use \".xml\" as the file\n         extension.\n      Macintosh\
    \ file type code(s):  none\n   Person & email address to contact for further information:\
    \  Simon\n      Perreault <simon.perreault@viagenie.ca>\n   Intended usage:  COMMON\n\
    \   Restrictions on usage:  none\n   Author:  Simon Perreault\n   Change controller:\
    \  IETF\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   Thanks to the following people for their input:\n   Alexey\
    \ Melnikov, Barry Leiba, Bjorn Hoehrmann, Cyrus Daboo, Joe\n   Hildebrand, Joseph\
    \ Smarr, Marc Blanchet, Mike Douglass, Peter Saint-\n   Andre, Robins George,\
    \ Zahhar Kirillov, Zoltan Ordogh.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [ISO.19757-2.2008]\n              International\
    \ Organization for Standardization,\n              \"Information technology --\
    \ Document Schema Definition\n              Language (DSDL) -- Part 2: Regular-grammar-based\n\
    \              validation -- RELAX NG\", ISO International\n              Standard\
    \ 19757-2, October 2008.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [RFC3023]  Murata, M., St. Laurent, S., and D. Kohn, \"XML Media\n       \
    \       Types\", RFC 3023, January 2001.\n   [RFC6350]  Perreault, S., \"vCard\
    \ Format Specification\", RFC 6350,\n              August 2011.\n   [W3C.REC-xml-20081126]\n\
    \              Paoli, J., Yergeau, F., Maler, E., Bray, T., and C.\n         \
    \     Sperberg-McQueen, \"Extensible Markup Language (XML) 1.0\n             \
    \ (Fifth Edition)\", World Wide Web Consortium\n              Recommendation REC-xml-20081126,\
    \ November 2008,\n              <http://www.w3.org/TR/2008/REC-xml-20081126>.\n\
    \   [W3C.REC-xml-names-20091208]\n              Bray, T., Hollander, D., Layman,\
    \ A., Tobin, R., and H.\n              Thompson, \"Namespaces in XML 1.0 (Third\
    \ Edition)\", World\n              Wide Web Consortium Recommendation REC-xml-names-20091208,\n\
    \              December 2009,\n              <http://www.w3.org/TR/2009/REC-xml-names-20091208>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC4288]  Freed, N. and J. Klensin, \"Media\
    \ Type Specifications and\n              Registration Procedures\", BCP 13, RFC\
    \ 4288, December 2005.\n   [VCARD-DTD]\n              Dawson, F., \"The vCard\
    \ v3.0 XML DTD\", Work in Progress,\n              June 1998.\n   [W3C.CR-xmldsig-core1-20110303]\n\
    \              Roessler, T., Solo, D., Yiu, K., Reagle, J., Hirsch, F.,\n    \
    \          Eastlake, D., and M. Nystroem, \"XML Signature Syntax and\n       \
    \       Processing Version 1.1\", World Wide Web Consortium CR CR-\n         \
    \     xmldsig-core1-20110303, March 2011,\n              <http://www.w3.org/TR/2011/CR-xmldsig-core1-20110303>.\n\
    \   [W3C.CR-xmlenc-core1-20110303]\n              Eastlake, D., Reagle, J., Roessler,\
    \ T., and F. Hirsch,\n              \"XML Encryption Syntax and Processing Version\
    \ 1.1\", World\n              Wide Web Consortium CR CR-xmlenc-core1-20110303,\n\
    \              March 2011,\n              <http://www.w3.org/TR/2011/CR-xmlenc-core1-20110303>.\n"
- title: Appendix A.  Relax NG Schema
  contents:
  - 'Appendix A.  Relax NG Schema

    '
- title: default namespace = "urn:ietf:params:xml:ns:vcard-4.0"
  contents:
  - 'default namespace = "urn:ietf:params:xml:ns:vcard-4.0"

    '
- title: '### Section 3.3: vCard Format Specification'
  contents:
  - '### Section 3.3: vCard Format Specification

    '
- title: '#'
  contents:
  - '#

    '
- title: '# 3.3'
  contents:
  - '# 3.3

    '
- title: iana-token = xsd:string { pattern = "[a-zA-Z0-9-]+" }
  contents:
  - 'iana-token = xsd:string { pattern = "[a-zA-Z0-9-]+" }

    '
- title: x-name = xsd:string { pattern = "x-[a-zA-Z0-9-]+" }
  contents:
  - 'x-name = xsd:string { pattern = "x-[a-zA-Z0-9-]+" }

    '
- title: '### Section 4: Value types'
  contents:
  - '### Section 4: Value types

    '
- title: '#'
  contents:
  - '#

    '
- title: '# 4.1'
  contents:
  - '# 4.1

    '
- title: value-text = element text { text }
  contents:
  - 'value-text = element text { text }

    '
- title: value-text-list = value-text+
  contents:
  - 'value-text-list = value-text+

    '
- title: '# 4.2'
  contents:
  - '# 4.2

    '
- title: value-uri = element uri { xsd:anyURI }
  contents:
  - 'value-uri = element uri { xsd:anyURI }

    '
- title: '# 4.3.1'
  contents:
  - '# 4.3.1

    '
- title: value-date = element date {
  contents:
  - "value-date = element date {\n    xsd:string { pattern = \"\\d{8}|\\d{4}-\\d\\\
    d|--\\d\\d(\\d\\d)?|---\\d\\d\" }\n  }\n"
- title: '# 4.3.2'
  contents:
  - '# 4.3.2

    '
- title: value-time = element time {
  contents:
  - "value-time = element time {\n    xsd:string { pattern = \"(\\d\\d(\\d\\d(\\d\\\
    d)?)?|-\\d\\d(\\d\\d?)|--\\d\\d)\"\n                         ~ \"(Z|[+\\-]\\d\\\
    d(\\d\\d)?)?\" }\n  }\n"
- title: '# 4.3.3'
  contents:
  - '# 4.3.3

    '
- title: value-date-time = element date-time {
  contents:
  - "value-date-time = element date-time {\n    xsd:string { pattern = \"(\\d{8}|--\\\
    d{4}|---\\d\\d)T\\d\\d(\\d\\d(\\d\\d)?)?\"\n                         ~ \"(Z|[+\\\
    -]\\d\\d(\\d\\d)?)?\" }\n  }\n"
- title: '# 4.3.4'
  contents:
  - '# 4.3.4

    '
- title: value-date-and-or-time = value-date | value-date-time | value-time
  contents:
  - 'value-date-and-or-time = value-date | value-date-time | value-time

    '
- title: '# 4.3.5'
  contents:
  - '# 4.3.5

    '
- title: value-timestamp = element timestamp {
  contents:
  - "value-timestamp = element timestamp {\n    xsd:string { pattern = \"\\d{8}T\\\
    d{6}(Z|[+\\-]\\d\\d(\\d\\d)?)?\" }\n  }\n"
- title: '# 4.4'
  contents:
  - '# 4.4

    '
- title: value-boolean = element boolean { xsd:boolean }
  contents:
  - 'value-boolean = element boolean { xsd:boolean }

    '
- title: '# 4.5'
  contents:
  - '# 4.5

    '
- title: value-integer = element integer { xsd:integer }
  contents:
  - 'value-integer = element integer { xsd:integer }

    '
- title: '# 4.6'
  contents:
  - '# 4.6

    '
- title: value-float = element float { xsd:float }
  contents:
  - 'value-float = element float { xsd:float }

    '
- title: '# 4.7'
  contents:
  - '# 4.7

    '
- title: value-utc-offset = element utc-offset {
  contents:
  - "value-utc-offset = element utc-offset {\n    xsd:string { pattern = \"[+\\-]\\\
    d\\d(\\d\\d)?\" }\n  }\n"
- title: '# 4.8'
  contents:
  - '# 4.8

    '
- title: value-language-tag = element language-tag {
  contents:
  - "value-language-tag = element language-tag {\n    xsd:string { pattern = \"([a-z]{2,3}((-[a-z]{3}){0,3})?|[a-z]{4,8})\"\
    \n                         ~ \"(-[a-z]{4})?(-([a-z]{2}|\\d{3}))?\"\n         \
    \                ~ \"(-([0-9a-z]{5,8}|\\d[0-9a-z]{3}))*\"\n                  \
    \       ~ \"(-[0-9a-wyz](-[0-9a-z]{2,8})+)*\"\n                         ~ \"(-x(-[0-9a-z]{1,8})+)?|x(-[0-9a-z]{1,8})+|\"\
    \n                         ~ \"[a-z]{1,3}(-[0-9a-z]{2,8}){1,2}\" }\n  }\n"
- title: '### Section 5: Parameters'
  contents:
  - '### Section 5: Parameters

    '
- title: '#'
  contents:
  - '#

    '
- title: '# 5.1'
  contents:
  - '# 5.1

    '
- title: param-language = element language { value-language-tag }?
  contents:
  - 'param-language = element language { value-language-tag }?

    '
- title: '# 5.2'
  contents:
  - '# 5.2

    '
- title: param-pref = element pref {
  contents:
  - "param-pref = element pref {\n    element integer {\n      xsd:integer { minInclusive\
    \ = \"1\" maxInclusive = \"100\" }\n    }\n  }?\n"
- title: '# 5.4'
  contents:
  - '# 5.4

    '
- title: param-altid = element altid { value-text }?
  contents:
  - 'param-altid = element altid { value-text }?

    '
- title: '# 5.5'
  contents:
  - '# 5.5

    '
- title: param-pid = element pid {
  contents:
  - "param-pid = element pid {\n    element text { xsd:string { pattern = \"\\d+(\\\
    .\\d+)?\" } }+\n  }?\n"
- title: '# 5.6'
  contents:
  - '# 5.6

    '
- title: param-type = element type { element text { "work" | "home" }+ }?
  contents:
  - 'param-type = element type { element text { "work" | "home" }+ }?

    '
- title: '# 5.7'
  contents:
  - '# 5.7

    '
- title: param-mediatype = element mediatype { value-text }?
  contents:
  - 'param-mediatype = element mediatype { value-text }?

    '
- title: '# 5.8'
  contents:
  - '# 5.8

    '
- title: param-calscale = element calscale { element text { "gregorian" } }?
  contents:
  - 'param-calscale = element calscale { element text { "gregorian" } }?

    '
- title: '# 5.9'
  contents:
  - '# 5.9

    '
- title: param-sort-as = element sort-as { value-text+ }?
  contents:
  - 'param-sort-as = element sort-as { value-text+ }?

    '
- title: '# 5.10'
  contents:
  - '# 5.10

    '
- title: param-geo = element geo { value-uri }?
  contents:
  - 'param-geo = element geo { value-uri }?

    '
- title: '# 5.11'
  contents:
  - '# 5.11

    '
- title: param-tz = element tz { value-text | value-uri }?
  contents:
  - 'param-tz = element tz { value-text | value-uri }?

    '
- title: '### Section 6: Properties'
  contents:
  - '### Section 6: Properties

    '
- title: '#'
  contents:
  - '#

    '
- title: '# 6.1.3'
  contents:
  - '# 6.1.3

    '
- title: property-source = element source {
  contents:
  - "property-source = element source {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-mediatype },\n    value-uri\n  }\n"
- title: '# 6.1.4'
  contents:
  - '# 6.1.4

    '
- title: property-kind = element kind {
  contents:
  - "property-kind = element kind {\n    element text { \"individual\" | \"group\"\
    \ | \"org\" | \"location\" |\n                   x-name | iana-token }*\n  }\n"
- title: '# 6.2.1'
  contents:
  - '# 6.2.1

    '
- title: property-fn = element fn {
  contents:
  - "property-fn = element fn {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type }?,\n    value-text\n\
    \  }\n"
- title: '# 6.2.2'
  contents:
  - '# 6.2.2

    '
- title: property-n = element n {
  contents:
  - "property-n = element n {\n    element parameters { param-language, param-sort-as,\
    \ param-altid }?,\n    element surname { text }+,\n    element given { text }+,\n\
    \    element additional { text }+,\n    element prefix { text }+,\n    element\
    \ suffix { text }+\n  }\n"
- title: '# 6.2.3'
  contents:
  - '# 6.2.3

    '
- title: property-nickname = element nickname {
  contents:
  - "property-nickname = element nickname {\n    element parameters { param-language,\
    \ param-altid, param-pid,\n                         param-pref, param-type }?,\n\
    \    value-text-list\n  }\n"
- title: '# 6.2.4'
  contents:
  - '# 6.2.4

    '
- title: property-photo = element photo {
  contents:
  - "property-photo = element photo {\n    element parameters { param-altid, param-pid,\
    \ param-pref, param-type,\n                         param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# 6.2.5'
  contents:
  - '# 6.2.5

    '
- title: property-bday = element bday {
  contents:
  - "property-bday = element bday {\n    element parameters { param-altid, param-calscale\
    \ }?,\n    (value-date-and-or-time | value-text)\n  }\n"
- title: '# 6.2.6'
  contents:
  - '# 6.2.6

    '
- title: property-anniversary = element anniversary {
  contents:
  - "property-anniversary = element anniversary {\n    element parameters { param-altid,\
    \ param-calscale }?,\n    (value-date-and-or-time | value-text)\n  }\n"
- title: '# 6.2.7'
  contents:
  - '# 6.2.7

    '
- title: property-gender = element gender {
  contents:
  - "property-gender = element gender {\n    element sex { \"\" | \"M\" | \"F\" |\
    \ \"O\" | \"N\" | \"U\" },\n    element identity { text }?\n  }\n"
- title: '# 6.3.1'
  contents:
  - '# 6.3.1

    '
- title: param-label = element label { value-text }?
  contents:
  - 'param-label = element label { value-text }?

    '
- title: property-adr = element adr {
  contents:
  - "property-adr = element adr {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type, param-geo, param-tz,\n\
    \                         param-label }?,\n    element pobox { text }+,\n    element\
    \ ext { text }+,\n    element street { text }+,\n    element locality { text }+,\n\
    \    element region { text }+,\n    element code { text }+,\n    element country\
    \ { text }+\n  }\n"
- title: '# 6.4.1'
  contents:
  - '# 6.4.1

    '
- title: property-tel = element tel {
  contents:
  - "property-tel = element tel {\n    element parameters {\n      param-altid,\n\
    \      param-pid,\n      param-pref,\n      element type {\n        element text\
    \ { \"work\" | \"home\" | \"text\" | \"voice\"\n                     | \"fax\"\
    \ | \"cell\" | \"video\" | \"pager\"\n                     | \"textphone\" }+\n\
    \      }?,\n      param-mediatype\n    }?,\n    (value-text | value-uri)\n  }\n"
- title: '# 6.4.2'
  contents:
  - '# 6.4.2

    '
- title: property-email = element email {
  contents:
  - "property-email = element email {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type }?,\n    value-text\n  }\n"
- title: '# 6.4.3'
  contents:
  - '# 6.4.3

    '
- title: property-impp = element impp {
  contents:
  - "property-impp = element impp {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# 6.4.4'
  contents:
  - '# 6.4.4

    '
- title: property-lang = element lang {
  contents:
  - "property-lang = element lang {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type }?,\n    value-language-tag\n\
    \  }\n"
- title: '# 6.5.1'
  contents:
  - '# 6.5.1

    '
- title: property-tz = element tz {
  contents:
  - "property-tz = element tz {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    (value-text\
    \ | value-uri | value-utc-offset)\n  }\n"
- title: '# 6.5.2'
  contents:
  - '# 6.5.2

    '
- title: property-geo = element geo {
  contents:
  - "property-geo = element geo {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# 6.6.1'
  contents:
  - '# 6.6.1

    '
- title: property-title = element title {
  contents:
  - "property-title = element title {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type }?,\n    value-text\n\
    \  }\n"
- title: '# 6.6.2'
  contents:
  - '# 6.6.2

    '
- title: property-role = element role {
  contents:
  - "property-role = element role {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type }?,\n    value-text\n\
    \  }\n"
- title: '# 6.6.3'
  contents:
  - '# 6.6.3

    '
- title: property-logo = element logo {
  contents:
  - "property-logo = element logo {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type, param-mediatype\
    \ }?,\n    value-uri\n  }\n"
- title: '# 6.6.4'
  contents:
  - '# 6.6.4

    '
- title: property-org = element org {
  contents:
  - "property-org = element org {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type, param-sort-as }?,\n\
    \    value-text-list\n  }\n"
- title: '# 6.6.5'
  contents:
  - '# 6.6.5

    '
- title: property-member = element member {
  contents:
  - "property-member = element member {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-mediatype }?,\n    value-uri\n \
    \ }\n"
- title: '# 6.6.6'
  contents:
  - '# 6.6.6

    '
- title: property-related = element related {
  contents:
  - "property-related = element related {\n    element parameters {\n      param-altid,\n\
    \      param-pid,\n      param-pref,\n      element type {\n        element text\
    \ {\n          \"work\" | \"home\" | \"contact\" | \"acquaintance\" |\n      \
    \    \"friend\" | \"met\" | \"co-worker\" | \"colleague\" | \"co-resident\" |\n\
    \          \"neighbor\" | \"child\" | \"parent\" | \"sibling\" | \"spouse\" |\n\
    \          \"kin\" | \"muse\" | \"crush\" | \"date\" | \"sweetheart\" | \"me\"\
    \ |\n          \"agent\" | \"emergency\"\n        }+\n      }?,\n      param-mediatype\n\
    \    }?,\n    (value-uri | value-text)\n  }\n"
- title: '# 6.7.1'
  contents:
  - '# 6.7.1

    '
- title: property-categories = element categories {
  contents:
  - "property-categories = element categories {\n    element parameters { param-altid,\
    \ param-pid, param-pref,\n                         param-type }?,\n    value-text-list\n\
    \  }\n"
- title: '# 6.7.2'
  contents:
  - '# 6.7.2

    '
- title: property-note = element note {
  contents:
  - "property-note = element note {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type }?,\n    value-text\n\
    \  }\n"
- title: '# 6.7.3'
  contents:
  - '# 6.7.3

    '
- title: property-prodid = element prodid { value-text }
  contents:
  - 'property-prodid = element prodid { value-text }

    '
- title: '# 6.7.4'
  contents:
  - '# 6.7.4

    '
- title: property-rev = element rev { value-timestamp }
  contents:
  - 'property-rev = element rev { value-timestamp }

    '
- title: '# 6.7.5'
  contents:
  - '# 6.7.5

    '
- title: property-sound = element sound {
  contents:
  - "property-sound = element sound {\n    element parameters { param-language, param-altid,\
    \ param-pid,\n                         param-pref, param-type, param-mediatype\
    \ }?,\n    value-uri\n  }\n"
- title: '# 6.7.6'
  contents:
  - '# 6.7.6

    '
- title: property-uid = element uid { value-uri }
  contents:
  - 'property-uid = element uid { value-uri }

    '
- title: '# 6.7.7'
  contents:
  - '# 6.7.7

    '
- title: property-clientpidmap = element clientpidmap {
  contents:
  - "property-clientpidmap = element clientpidmap {\n    element sourceid { xsd:positiveInteger\
    \ },\n    value-uri\n  }\n"
- title: '# 6.7.8'
  contents:
  - '# 6.7.8

    '
- title: property-url = element url {
  contents:
  - "property-url = element url {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# 6.8.1'
  contents:
  - '# 6.8.1

    '
- title: property-key = element key {
  contents:
  - "property-key = element key {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    (value-uri\
    \ | value-text)\n  }\n"
- title: '# 6.9.1'
  contents:
  - '# 6.9.1

    '
- title: property-fburl = element fburl {
  contents:
  - "property-fburl = element fburl {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# 6.9.2'
  contents:
  - '# 6.9.2

    '
- title: property-caladruri = element caladruri {
  contents:
  - "property-caladruri = element caladruri {\n    element parameters { param-altid,\
    \ param-pid, param-pref,\n                         param-type, param-mediatype\
    \ }?,\n    value-uri\n  }\n"
- title: '# 6.9.3'
  contents:
  - '# 6.9.3

    '
- title: property-caluri = element caluri {
  contents:
  - "property-caluri = element caluri {\n    element parameters { param-altid, param-pid,\
    \ param-pref,\n                         param-type, param-mediatype }?,\n    value-uri\n\
    \  }\n"
- title: '# Top-level grammar'
  contents:
  - '# Top-level grammar

    '
- title: property = property-adr | property-anniversary | property-bday
  contents:
  - "property = property-adr | property-anniversary | property-bday\n         | property-caladruri\
    \ | property-caluri | property-categories\n         | property-clientpidmap |\
    \ property-email | property-fburl\n         | property-fn | property-geo | property-impp\
    \ | property-key\n         | property-kind | property-lang | property-logo\n \
    \        | property-member | property-n | property-nickname\n         | property-note\
    \ | property-org | property-photo\n         | property-prodid | property-related\
    \ | property-rev\n         | property-role | property-gender | property-sound\n\
    \         | property-source | property-tel | property-title\n         | property-tz\
    \ | property-uid | property-url\n"
- title: start = element vcards {
  contents:
  - "start = element vcards {\n    element vcard {\n      (property\n       | element\
    \ group {\n           attribute name { text },\n           property*\n       \
    \  })+\n    }+\n  }\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Simon Perreault\n   Viagenie\n   2600 boul. Laurier, Suite\
    \ 625\n   Quebec, QC  G1V 4W1\n   Canada\n   Phone: +1 418 656 9254\n   EMail:\
    \ simon.perreault@viagenie.ca\n   URI:   http://www.viagenie.ca\n"
