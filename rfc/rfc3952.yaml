- title: __initial_text__
  contents:
  - "           Real-time Transport Protocol (RTP) Payload Format\n             for\
    \ internet Low Bit Rate Codec (iLBC) Speech\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the Real-time Transport Protocol (RTP)\n\
    \   payload format for the internet Low Bit Rate Codec (iLBC) Speech\n   developed\
    \ by Global IP Sound (GIPS).  Also, within the document there\n   are included\
    \ necessary details for the use of iLBC with MIME and\n   Session Description\
    \ Protocol (SDP).\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2. Background. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3. RTP Payload Format. . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n      3.1. Bitstream definition . . . . . . . . . . . . . . . .\
    \ . . .  3\n      3.2. Multiple iLBC frames in a RTP packet . . . . . . . . .\
    \ . .  6\n   4. IANA Considerations . . . . . . . . . . . . . . . . . . . . .\
    \ .  7\n      4.1. Storage Mode . . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n      4.2. MIME registration of iLBC. . . . . . . . . . . . . . . . .  8\n\
    \   5. Mapping to SDP Parameters . . . . . . . . . . . . . . . . . . .  9\n  \
    \ 6. Security Considerations . . . . . . . . . . . . . . . . . . . . 11\n   7.\
    \ References. . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n      7.1.\
    \ Normative References . . . . . . . . . . . . . . . . . . . 11\n      7.2. Informative\
    \ References . . . . . . . . . . . . . . . . . . 12\n   8. Acknowledgements. .\
    \ . . . . . . . . . . . . . . . . . . . . . . 12\n   Authors' Addresses . . .\
    \ . . . . . . . . . . . . . . . . . . . . . 12\n   Full Copyright Statement .\
    \ . . . . . . . . . . . . . . . . . . . . 13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes how compressed iLBC speech, as produced\
    \ by\n   the iLBC codec [1], may be formatted for use as an RTP payload type.\n\
    \   Methods are provided to packetize the codec data frames into RTP\n   packets.\
    \  The sender may send one or more codec data frames per\n   packet depending\
    \ on the application scenario or based on the\n   transport network condition,\
    \ bandwidth restriction, delay\n   requirements and packet-loss tolerance.\n \
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this\n   document are to be interpreted as described in BCP 14, RFC 2119 [2].\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   Global IP Sound (GIPS) has developed a speech compression\
    \ algorithm\n   for use in IP based communications [1].  The iLBC codec enables\n\
    \   graceful speech quality degradation in the case of lost frames, which\n  \
    \ occurs in connection with lost or delayed IP packets.\n   This codec is suitable\
    \ for real time communications such as,\n   telephony and videoconferencing, streaming\
    \ audio, archival and\n   messaging.\n   The iLBC codec [1] is an algorithm that\
    \ compresses each basic frame\n   (20 ms or 30 ms) of 8000 Hz, 16-bit sampled\
    \ input speech, into output\n   frames with rate of 400 bits for 30 ms basic frame\
    \ size and 304 bits\n   for 20 ms basic frame size.\n   The codec supports two\
    \ basic frame lengths: 30 ms at 13.33 kbit/s and\n   20 ms at 15.2 kbit/s, using\
    \ a block independent linear-predictive\n   coding (LPC) algorithm.  When the\
    \ codec operates at block lengths of\n   20 ms, it produces 304 bits per block\
    \ which MUST be packetized in 38\n   bytes.  Similarly, for block lengths of 30\
    \ ms it produces 400 bits\n   per block which MUST be packetized in 50 bytes.\
    \  This algorithm\n   results in a speech coding system with a controlled response\
    \ to\n   packet losses similar to what is known from pulse code modulation\n \
    \  (PCM) with a packet loss concealment (PLC), such as ITU-T G711\n   standard\
    \ [7], which operates at a fixed bit rate of 64 kbit/s.  At\n   the same time,\
    \ this algorithm enables fixed bit rate coding with a\n   quality-versus-bit rate\
    \ tradeoff close to what is known from code-\n   excited linear prediction (CELP).\n"
- title: 3.  RTP Payload Format
  contents:
  - "3.  RTP Payload Format\n   The iLBC codec uses 20 or 30 ms frames and a sampling\
    \ rate clock of 8\n   kHz, so the RTP timestamp MUST be in units of 1/8000 of\
    \ a second. The\n   RTP payload for iLBC has the format shown in the figure bellow.\
    \ No\n   addition header specific to this payload format is required.\n   This\
    \ format is intended for the situations where the sender and the\n   receiver\
    \ send one or more codec data frames per packet.  The RTP\n   packet looks as\
    \ follows:\n   0                   1                   2                   3\n\
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      RTP Header [3]                           |\n   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n\
    \   |                                                               |\n   +  \
    \               one or more frames of iLBC [1]                |\n   |        \
    \                                                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Figure 1, Packet format diagram\n   The RTP header of the packetized encoded\
    \ iLBC speech has the expected\n   values as described in [3].  The usage of M\
    \ bit SHOULD be as\n   specified in the applicable RTP profile, for example, RFC\
    \ 3551 [4]\n   specifies that if the sender does not suppress silence (i.e., sends\
    \ a\n   frame on every frame interval), the M bit will always be zero.  When\n\
    \   more then one codec data frame is present in a single RTP packet, the\n  \
    \ timestamp is, as always, the oldest data frame represented in the RTP\n   packet.\n\
    \   The assignment of an RTP payload type for this new packet format is\n   outside\
    \ the scope of this document, and will not be specified here.\n   It is expected\
    \ that the RTP profile for a particular class of\n   applications will assign\
    \ a payload type for this encoding, or if that\n   is not done, then a payload\
    \ type in the dynamic range shall be chosen\n   by the sender.\n"
- title: 3.1.  Bitstream definition
  contents:
  - "3.1.  Bitstream definition\n   The total number of bits used to describe one\
    \ frame of 20 ms speech\n   is 304, which fits in 38 bytes and results in a bit\
    \ rate of 15.20\n   kbit/s.  For the case with a frame length of 30 ms speech\
    \ the total\n   number of bits used is 400, which fits in 50 bytes and results\
    \ in a\n   bit rate of 13.33 kbit/s.  In the bitstream definition, the bits are\n\
    \   distributed into three classes according to their bit error or loss\n   sensitivity.\
    \  The most sensitive bits (class 1) are placed first in\n   the bitstream for\
    \ each frame.  The less sensitive bits (class 2) are\n   placed after the class\
    \ 1 bits.  The least sensitive bits (class 3)\n   are placed at the end of the\
    \ bitstream for each frame.\n   Looking at the 20/30 ms frame length cases for\
    \ each class: The class\n   1 bits occupy a total of 6/8 bytes (48/64 bits), the\
    \ class 2 bits\n   occupy 8/12 bytes (64/96 bits), and the class 3 bits occupy\
    \ 24/30\n   bytes (191/239 bits).  This distribution of the bits enables the use\n\
    \   of uneven level protection (ULP).  The detailed bit allocation is\n   shown\
    \ in the table below.  When a quantization index is distributed\n   between more\
    \ classes the more significant bits belong to the lowest\n   class.\n   Bitstream\
    \ structure:\n   ------------------------------------------------------------------+\n\
    \   Parameter                         |       Bits Class <1,2,3>      |\n    \
    \                                 |  20 ms frame  |  30 ms frame  |\n   ----------------------------------+---------------+---------------+\n\
    \                            Split 1  |   6 <6,0,0>   |   6 <6,0,0>   |\n    \
    \               LSF 1    Split 2  |   7 <7,0,0>   |   7 <7,0,0>   |\n   LSF  \
    \                    Split 3  |   7 <7,0,0>   |   7 <7,0,0>   |\n            \
    \       ------------------+---------------+---------------+\n                \
    \            Split 1  | NA (Not Appl.)|   6 <6,0,0>   |\n                   LSF\
    \ 2    Split 2  |      NA       |   7 <7,0,0>   |\n                          \
    \  Split 3  |      NA       |   7 <7,0,0>   |\n                   ------------------+---------------+---------------+\n\
    \                   Sum               |  20 <20,0,0>  |  40 <40,0,0>  |\n   ----------------------------------+---------------+---------------+\n\
    \   Block Class.                      |   2 <2,0,0>   |   3 <3,0,0>   |\n   ----------------------------------+---------------+---------------+\n\
    \   Position 22 sample segment        |   1 <1,0,0>   |   1 <1,0,0>   |\n   ----------------------------------+---------------+---------------+\n\
    \   Scale Factor State Coder          |   6 <6,0,0>   |   6 <6,0,0>   |\n   ----------------------------------+---------------+---------------+\n\
    \                   Sample 0          |   3 <0,1,2>   |   3 <0,1,2>   |\n   Quantized\
    \       Sample 1          |   3 <0,1,2>   |   3 <0,1,2>   |\n   Residual     \
    \      :              |   :    :      |   :    :      |\n   State            \
    \  :              |   :    :      |   :    :      |\n   Samples            : \
    \             |   :    :      |   :    :      |\n                   Sample 56\
    \         |   3 <0,1,2>   |   3 <0,1,2>   |\n                   Sample 57    \
    \     |      NA       |   3 <0,1,2>   |\n                   ------------------+---------------+---------------+\n\
    \                   Sum               | 171 <0,57,114>| 174 <0,58,116>|\n   ----------------------------------+---------------+---------------+\n\
    \                            Stage 1  |   7 <6,0,1>   |   7 <4,2,1>   |\n   CB\
    \ for 22/23             Stage 2  |   7 <0,0,7>   |   7 <0,0,7>   |\n   sample\
    \ block             Stage 3  |   7 <0,0,7>   |   7 <0,0,7>   |\n             \
    \      ------------------+---------------+---------------+\n                 \
    \  Sum               |  21 <6,0,15>  |  21 <4,2,15>  |\n   ----------------------------------+---------------+---------------+\n\
    \                            Stage 1  |   5 <2,0,3>   |   5 <1,1,3>   |\n   Gain\
    \ for 22/23           Stage 2  |   4 <1,1,2>   |   4 <1,1,2>   |\n   sample block\
    \             Stage 3  |   3 <0,0,3>   |   3 <0,0,3>   |\n                   ------------------+---------------+---------------+\n\
    \                   Sum               |  12 <3,1,8>   |  12 <2,2,8>   |\n   ----------------------------------+---------------+---------------+\n\
    \                            Stage 1  |   8 <7,0,1>   |   8 <6,1,1>   |\n    \
    \           sub-block 1  Stage 2  |   7 <0,0,7>   |   7 <0,0,7>   |\n        \
    \                    Stage 3  |   7 <0,0,7>   |   7 <0,0,7>   |\n            \
    \       ------------------+---------------+---------------+\n                \
    \            Stage 1  |   8 <0,0,8>   |   8 <0,7,1>   |\n               sub-block\
    \ 2  Stage 2  |   8 <0,0,8>   |   8 <0,0,8>   |\n   Indices                  Stage\
    \ 3  |   8 <0,0,8>   |   8 <0,0,8>   |\n   for CB          ------------------+---------------+---------------+\n\
    \   sub-blocks               Stage 1  |      NA       |   8 <0,7,1>   |\n    \
    \           sub-block 3  Stage 2  |      NA       |   8 <0,0,8>   |\n        \
    \                    Stage 3  |      NA       |   8 <0,0,8>   |\n            \
    \       ------------------+---------------+---------------+\n                \
    \            Stage 1  |      NA       |   8 <0,7,1>   |\n               sub-block\
    \ 4  Stage 2  |      NA       |   8 <0,0,8>   |\n                            Stage\
    \ 3  |      NA       |   8 <0,0,8>   |\n                   ------------------+---------------+---------------+\n\
    \                   Sum               |  46 <7,0,39>  |  94 <6,22,66> |\n   ----------------------------------+---------------+---------------+\n\
    \                            Stage 1  |   5 <1,2,2>   |   5 <1,2,2>   |\n    \
    \           sub-block 1  Stage 2  |   4 <1,1,2>   |   4 <1,2,1>   |\n        \
    \                    Stage 3  |   3 <0,0,3>   |   3 <0,0,3>   |\n            \
    \       ------------------+---------------+---------------+\n                \
    \            Stage 1  |   5 <1,1,3>   |   5 <0,2,3>   |\n               sub-block\
    \ 2  Stage 2  |   4 <0,2,2>   |   4 <0,2,2>   |\n                            Stage\
    \ 3  |   3 <0,0,3>   |   3 <0,0,3>   |\n   Gains for       ------------------+---------------+---------------+\n\
    \   sub-blocks               Stage 1  |      NA       |   5 <0,1,4>   |\n    \
    \           sub-block 3  Stage 2  |      NA       |   4 <0,1,3>   |\n        \
    \                    Stage 3  |      NA       |   3 <0,0,3>   |\n            \
    \       ------------------+---------------+---------------+\n                \
    \            Stage 1  |      NA       |   5 <0,1,4>   |\n               sub-block\
    \ 4  Stage 2  |      NA       |   4 <0,1,3>   |\n                            Stage\
    \ 3  |      NA       |   3 <0,0,3>   |\n                   ------------------+---------------+---------------+\n\
    \                   Sum               |  24 <3,6,15>  |  48 <2,12,34> |\n   -------------------------------------------------------------------\n\
    \   Empty frame indicator             |   1 <0,0,1>   |   1 <0,0,1>   |\n   -------------------------------------------------------------------\n\
    \   SUM                                 304 <48,64,192> 400 <64,96,240>\n   Table\
    \ 3.1 The bitstream definition for iLBC.\n   When packetized into the payload,\
    \ all the class 1 bits MUST be sorted\n   in order (from top and down) as they\
    \ were specified in the table.\n   Additionally, all the class 2 bits MUST be\
    \ sorted (from top and down)\n   and all the class 3 bits MUST be sorted in the\
    \ same sequential order.\n"
- title: 3.2.  Multiple iLBC frames in a RTP packet
  contents:
  - "3.2.  Multiple iLBC frames in a RTP packet\n   More than one iLBC frame may be\
    \ included in a single RTP packet by a\n   sender.\n   It is important to observe\
    \ that senders have the following additional\n   restrictions:\n   o  SHOULD NOT\
    \ include more iLBC frames in a single RTP packet than\n      will fit in the\
    \ MTU of the RTP transport protocol.\n   o  Frames MUST NOT be split between RTP\
    \ packets.\n   o  Frames of the different modes (20 ms and 30 ms) MUST NOT be\n\
    \      included within the same packet.\n   It is RECOMMENDED that the number\
    \ of frames contained within an RTP\n   packet are consistent with the application.\
    \  For example, in\n   telephony and other real time applications where delay\
    \ is important,\n   the delay is lower depending on the amount of frames per packet\n\
    \   (i.e., fewer frames per packet, the lower the delay).  Whereas for\n   bandwidth\
    \ constrained links or delay insensitive streaming messaging\n   application,\
    \ one or more frames per packet would be acceptable.\n   Information describing\
    \ the number of frames contained in an RTP\n   packet is not transmitted as part\
    \ of the RTP payload.  The way to\n   determine the number of iLBC frames is to\
    \ count the total number of\n   octets within the RTP packet, and divide the octet\
    \ count by the\n   number of expected octets per frame (32/50 per frame).\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   One new MIME sub-type as described in this section\
    \ has been\n   registered.\n"
- title: 4.1.  Storage Mode
  contents:
  - "4.1.  Storage Mode\n   The storage mode is used for storing speech frames (e.g.,\
    \ as a file\n   or email attachment).\n   +------------------+\n   | Header  \
    \         |\n   +------------------+\n   | Speech frame 1   |\n   +------------------+\n\
    \   :                  :\n   +------------------+\n   | Speech frame n   |\n \
    \  +------------------+\n   Figure 2, Storage format diagram\n   The file begins\
    \ with a header that includes only a magic number to\n   identify that it is an\
    \ iLBC file.\n   The magic number for iLBC file MUST correspond to the ASCII character\n\
    \   string:\n      o for 30 ms frame size mode:\"#!iLBC30\\n\", or \"0x23 0x21\
    \ 0x69\n      0x4C 0x42 0x43 0x33 0x30 0x0A\" in hexadecimal form,\n      o for\
    \ 20 ms frame size mode:\"#!iLBC20\\n\", or \"0x23 0x21 0x69\n      0x4C 0x42\
    \ 0x43 0x32 0x30 0x0A\" in hexadecimal form.\n   After the header, follow the\
    \ speech frames in consecutive order.\n   Speech frames lost in transmission MUST\
    \ be stored as \"empty frames\",\n   as defined in [1].\n"
- title: 4.2.  MIME Registration of iLBC
  contents:
  - "4.2.  MIME Registration of iLBC\n   MIME media type name: audio\n   MIME subtype:\
    \ iLBC\n   Optional parameters:\n   All of the parameters does apply for RTP transfer\
    \ only.\n   maxptime:The maximum amount of media which can be encapsulated in\n\
    \            each packet, expressed as time in milliseconds.  The time\n     \
    \       SHALL be calculated as the sum of the time the media present\n       \
    \     in the packet represents.  The time SHOULD be a multiple of\n          \
    \  the frame size.  This attribute is probably only meaningful\n            for\
    \ audio data, but may be used with other media types if it\n            makes\
    \ sense.  It is a media attribute, and is not dependent\n            on charset.\
    \  Note that this attribute was introduced after\n            RFC 2327, and non\
    \ updated implementations will ignore this\n            attribute.\n   mode: \
    \   The iLBC operating frame mode (20 or 30 ms) that will be\n            encapsulated\
    \ in each packet.  Values can be 0, 20 and 30\n            (where 0 is reserved,\
    \ 20 stands for preferred 20 ms frame\n            size and 30 stands for preferred\
    \ 30 ms frame size).\n   ptime:   Defined as usual for RTP audio (see [5]).\n\
    \   Encoding considerations:\n            This type is defined for transfer via\
    \ both RTP (RFC 3550)\n            and stored-file methods as described in Section\
    \ 4.1, of RFC\n            3952.  Audio data is binary data, and must be encoded\
    \ for\n            non-binary transport; the Base64 encoding is suitable for\n\
    \            email.\n   Security considerations:\n            See Section 6 of\
    \ RFC 3952.\n   Public specification:\n            Please refer to RFC 3951 [1].\n\
    \   Additional information:\n            The following applies to stored-file\
    \ transfer methods:\n            Magic number:\n            ASCII character string\
    \ for:\n            o 30 ms frame size mode \"#!iLBC30\\n\" (or 0x23 0x21\n  \
    \          0x69 0x4C 0x42 0x43 0x33 0x30 0x0A in hexadecimal)\n            o 20\
    \ ms frame size mode \"#!iLBC20\\n\" (or 0x23 0x21\n            0x69 0x4C 0x42\
    \ 0x43 0x32 0x30 0x0A in hexadecimal)\n            File extensions: lbc, LBC\n\
    \            Macintosh file type code: none\n            Object identifier or\
    \ OID: none\n   Person & email address to contact for further information:\n \
    \           alan.duric@telio.no\n   Intended usage: COMMON.\n            It is\
    \ expected that many VoIP applications will use this\n            type.\n   Author/Change\
    \ controller:\n            alan.duric@telio.no\n            IETF Audio/Video transport\
    \ working group\n"
- title: 5.  Mapping To SDP Parameters
  contents:
  - "5.  Mapping To SDP Parameters\n   The information carried in the MIME media type\
    \ specification has a\n   specific mapping to fields in the Session Description\
    \ Protocol (SDP)\n   [5], which is commonly used to describe RTP sessions.  When\
    \ SDP is\n   used to specify sessions employing the iLBC codec, the mapping is\
    \ as\n   follows:\n   o  The MIME type (\"audio\") goes in SDP \"m=\" as the media\
    \ name.\n   o  The MIME subtype (payload format name) goes in SDP \"a=rtpmap\"\
    \ as\n      the encoding name.\n   o  The parameters \"ptime\" and \"maxptime\"\
    \ go in the SDP \"a=ptime\" and\n      \"a=maxptime\" attributes, respectively.\n\
    \   o  The parameter \"mode\" goes in the SDP \"a=fmtp\" attribute by copying\n\
    \      it directly from the MIME media type string as \"mode=value\".\n   When\
    \ conveying information by SDP, the encoding name SHALL be \"iLBC\"\n   (the same\
    \ as the MIME subtype).\n   An example of the media representation in SDP for\
    \ describing iLBC\n   might be:\n      m=audio 49120 RTP/AVP 97\n      a=rtpmap:97\
    \ iLBC/8000\n   If 20 ms frame size mode is used, remote iLBC encoder SHALL receive\n\
    \   \"mode\" parameter in the SDP \"a=fmtp\" attribute by copying them\n   directly\
    \ from the MIME media type string as a semicolon separated\n   with parameter=value,\
    \ where parameter is \"mode\", and values can be 0\n   and 20 (where 0 is reserved\
    \ and 20 stands for preferred 20 ms frame\n   size).  An example of the media\
    \ representation in SDP for describing\n   iLBC when 20 ms frame size mode is\
    \ used might be:\n      m=audio 49120 RTP/AVP 97\n      a=rtpmap:97 iLBC/8000\n\
    \      a=fmtp:97 mode=20\n   It is important to emphasize the bi-directional character\
    \ of the\n   \"mode\" parameter - both sides of a bi-directional session MUST\
    \ use\n   the same \"mode\" value.\n   The offer contains the preferred mode of\
    \ the offerer.  The answerer\n   may agree to that mode by including the same\
    \ mode in the answer, or\n   may include a different mode.  The resulting mode\
    \ used by both\n   parties SHALL be the lower of the bandwidth modes in the offer\
    \ and\n   answer.\n   That is, an offer of \"mode=20\" receiving an answer of\
    \ \"mode=30\" will\n   result in \"mode=30\" being used by both participants.\
    \  Similarly, an\n   offer of \"mode=30\" and an answer of \"mode=20\" will result\
    \ in\n   \"mode=30\" being used by both participants.\n   This is important when\
    \ one end point utilizes a bandwidth constrained\n   link (e.g., 28.8k modem link\
    \ or slower), where only the lower frame\n   size will work.\n   Parameter ptime\
    \ can not be used for the purpose of specifying iLBC\n   operating mode, due to\
    \ fact that for the certain values it will be\n   impossible to distinguish which\
    \ mode is about to be used (e.g., when\n   ptime=60, it would be impossible to\
    \ distinguish if packet is carrying\n   2 frames of 30 ms or 3 frames of 20 ms,\
    \ etc.).\n   Note that the payload format (encoding) names are commonly shown\
    \ in\n   upper case.  MIME subtypes are commonly shown in lower case.  These\n\
    \   names are case-insensitive in both places.  Similarly, parameter\n   names\
    \ are case-insensitive both in MIME types and in the default\n   mapping to the\
    \ SDP a=fmtp attribute\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   RTP packets using the payload format defined\
    \ in this specification\n   are subject to the general security considerations\
    \ discussed in [3]\n   and any appropriate profile (e.g., [4]).\n   As this format\
    \ transports encoded speech, the main security issues\n   include confidentiality\
    \ and authentication of the speech itself.  The\n   payload format itself does\
    \ not have any built-in security mechanisms.\n   Confidentiality of the media\
    \ streams is achieved by encryption,\n   therefore external mechanisms, such as\
    \ SRTP [6], MAY be used for that\n   purpose.  The data compression used with\
    \ this payload format is\n   applied end-to-end; hence encryption may be performed\
    \ after\n   compression with no conflict between the two operations.\n   A potential\
    \ denial-of-service threat exists for data encoding using\n   compression techniques\
    \ that have non-uniform receiver-end\n   computational load.  The attacker can\
    \ inject pathological datagrams\n   into the stream which are complex to decode\
    \ and cause the receiver to\n   become overloaded.  However, the encodings covered\
    \ in this document\n   do not exhibit any significant non-uniformity.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]  Andersen, S., Duric, A., Astrom, H., Hagen,\
    \ R., Kleijn, W., and\n        J. Linden, \"Internet Low Bit Rate Codec (iLBC)\"\
    , RFC 3951,\n        December 2004.\n   [2]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [3]  Schulzrinne, H., Casner, S., Frederick, R., and V. Jacobson,\n      \
    \  \"RTP: A Transport Protocol for Real-Time Applications\", STD 64,\n       \
    \ RFC 3550, July 2003.\n   [4]  Schulzrinne, H. and S. Casner, \"RTP Profile for\
    \ Audio and Video\n        Conferences with Minimal Control\", STD 65, RFC 3551,\
    \ July 2003.\n   [5]  Handley, M. and V. Jacobson, \"SDP: Session Description\n\
    \        Protocol\", RFC 2327, April 1998.\n   [6]  Baugher, M., McGrew, D., Naslund,\
    \ M., Carrara, E., and K.\n        Norrman, \"The Secure Real-time Transport Protocol\"\
    , RFC 3711,\n        March 2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [7]  ITU-T Recommendation G.711, available online\
    \ from the ITU\n        bookstore at http://www.itu.int.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Henry Sinnreich, Patrik Faltstrom, Alan Johnston and\
    \ Jean-Francois\n   Mule for great support of the iLBC initiative and for valuable\n\
    \   feedback and comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alan Duric\n   Telio AS\n   Stoperigt. 2\n   Oslo, N-0250\n\
    \   Norway\n   Phone:  +47 21673505\n   EMail:  alan.duric@telio.no\n   Soren\
    \ Vang Andersen\n   Department of Communication Technology\n   Aalborg University\n\
    \   Fredrik Bajers Vej 7A\n   9200 Aalborg\n   Denmark\n   Phone:  ++45 9 6358627\n\
    \   EMail:  sva@kom.auc.dk\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
