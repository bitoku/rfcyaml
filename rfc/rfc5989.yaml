- title: __initial_text__
  contents:
  - '   A SIP Event Package for Subscribing to Changes to an HTTP Resource

    '
- title: Abstract
  contents:
  - "Abstract\n   The Session Initiation Protocol (SIP) is increasingly being used\
    \ in\n   systems that are tightly coupled with Hypertext Transport Protocol\n\
    \   (HTTP) servers for a variety of reasons.  In many of these cases,\n   applications\
    \ can benefit from being able to discover, in near real-\n   time, when a specific\
    \ HTTP resource is created, changed, or deleted.\n   This document proposes a\
    \ mechanism, based on the SIP Event Framework,\n   for doing so.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5989.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Associating Monitoring SIP URIs with HTTP URLs ..................3\n    \
    \  3.1. Monitoring a Single HTTP Resource ..........................4\n      3.2.\
    \ Monitoring Multiple HTTP Resources .........................5\n   4. HTTP Change\
    \ Event Package .......................................6\n      4.1. Event Package\
    \ Name .........................................6\n      4.2. Event Package Parameters\
    \ ...................................6\n      4.3. SUBSCRIBE Bodies ...........................................7\n\
    \      4.4. Subscription Duration ......................................7\n  \
    \    4.5. NOTIFY Bodies ..............................................8\n    \
    \       4.5.1. Use of message/http in HTTP Monitor Event Package ...8\n      4.6.\
    \ Notifier Processing of SUBSCRIBE Requests ..................9\n      4.7. Notifier\
    \ Generation of NOTIFY Requests .....................9\n      4.8. Subscriber\
    \ Processing of NOTIFY Requests ...................9\n      4.9. Handling of Forked\
    \ Requests ...............................10\n      4.10. Rate of Notifications\
    \ ....................................10\n      4.11. State Agents .............................................10\n\
    \   5. Example Message Flow ...........................................10\n  \
    \ 6. Security Considerations ........................................14\n   7.\
    \ IANA Considerations ............................................15\n      7.1.\
    \ New Link Relations ........................................15\n           7.1.1.\
    \ New Link Relation: monitor .........................15\n           7.1.2. New\
    \ Link Relation: monitor-group ...................16\n      7.2. New SIP Event\
    \ Package: http-monitor .......................16\n      7.3. New Event Header\
    \ Field Parameter: body ....................16\n   8. Acknowledgements ...............................................16\n\
    \   9. References .....................................................17\n  \
    \    9.1. Normative References ......................................17\n    \
    \  9.2. Informative References ....................................18\n   Appendix\
    \ A.  Rationale: Other Approaches Considered ...............19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) [3] is increasingly\
    \ being used\n   in systems that are tightly coupled with Hypertext Transport\
    \ Protocol\n   (HTTP) [2] servers for a variety of reasons.  In many of these\
    \ cases,\n   applications can benefit from learning of changes to specified HTTP\n\
    \   resources in near real-time.  For example, user agent terminals may\n   elect\
    \ to store service-related data in an HTTP tree.  When such\n   configuration\
    \ information is stored and retrieved using HTTP, clients\n   may need to be informed\
    \ when information changes, so as to make\n   appropriate changes to their local\
    \ behavior and user interface.\n   This document defines a mechanism, based on\
    \ the SIP Event Framework\n   [4], for subscribing to changes in the resource\
    \ referenced by an HTTP\n   server.  Such subscriptions do not necessarily carry\
    \ the content\n   associated with the resource.  In the cases that the content\
    \ is not\n   conveyed, the HTTP protocol is still used to transfer the contents\
    \ of\n   HTTP resources.  This document further defines a mechanism by which\n\
    \   the proper SIP and/or Session Initiation Protocol Secure (SIPS) URI\n   to\
    \ be used for such subscriptions can be determined from the HTTP\n   server.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The capitalized terms \"MUST\", \"SHOULD\", \"MAY\", \"SHOULD\
    \ NOT\", and\n   \"MUST NOT\" in this document are to be interpreted as described\
    \ in RFC\n   2119 [1].\n   Note that this document discusses both SIP messages\
    \ and HTTP\n   messages.  Because SIP's syntax was heavily based on HTTP's, the\n\
    \   components of these messages have similar or identical names.  When\n   referring\
    \ to message payloads, HTTP documents have historically\n   preferred the hyphenated\
    \ form \"message-body\", while SIP documents\n   favor the unhyphenated form \"\
    message body\".  This document conforms\n   to both conventions, using the hyphenated\
    \ form for HTTP, and the\n   unhyphenated form for SIP.\n"
- title: 3.  Associating Monitoring SIP URIs with HTTP URLs
  contents:
  - "3.  Associating Monitoring SIP URIs with HTTP URLs\n   One of the key challenges\
    \ in subscribing to the changes of a resource\n   indicated by an HTTP URL is\
    \ determining which SIP URI corresponds to\n   a specific HTTP URL.  This specification\
    \ takes the approach of having\n   the HTTP server responsible for the URL in\
    \ question select an\n   appropriate SIP URI for the corresponding resource and\
    \ return that\n   URI within an HTTP transaction.\n   In particular, HTTP servers\
    \ use link relations -- such as the HTTP\n   Link header field [10], the HTML\
    \ <link/> element [11], and the Atom\n   <atom:link/> element [5] -- to convey\
    \ the URI or URIs that can be\n   used to discover changes to the resource.  This\
    \ document defines two\n   new link relation types (\"monitor\" and \"monitor-group\"\
    ) for this\n   purpose, and specifies behavior for SIP and SIPS URIs in link\n\
    \   relations of these types.  Handling for other URI schemes is out of\n   scope\
    \ for the current document, although we expect future\n   specifications to define\
    \ procedures for monitoring via other\n   protocols.\n   Clients making use of\
    \ the mechanism described in this document MUST\n   support the HTTP Link header\
    \ field.  Those clients that support\n   processing of HTML documents SHOULD support\
    \ the HTML <link/> element;\n   those that support processing of Atom documents\
    \ SHOULD support Atom\n   <atom:link/> elements.  These requirements are not intended\
    \ to\n   preclude the use of any other means of conveying link relations.\n  \
    \ The service that provides HTTP access to a resource might provide\n   monitoring\
    \ of that resource using multiple protocols, so it is\n   perfectly legal for\
    \ an HTTP response to contain multiple link\n   relationships with relations that\
    \ allow for monitoring of changes\n   (see [10]).  Implementors are cautioned\
    \ to process all link relations\n   to locate one that corresponds with their\
    \ preferred change monitoring\n   protocol.\n   These link relations are scoped\
    \ to a single HTTP entity.  When an\n   HTTP resource is associated with multiple\
    \ entities (for example, to\n   facilitate content negotiation), the \"monitor\"\
    \ and \"monitor-group\"\n   link relations will generally be different for each\
    \ entity.\n"
- title: 3.1.  Monitoring a Single HTTP Resource
  contents:
  - "3.1.  Monitoring a Single HTTP Resource\n   If an HTTP server wishes to offer\
    \ the ability to subscribe to changes\n   in a resource's value using this event\
    \ package, it returns a link\n   relation containing a SIP or SIPS URI with a\
    \ relation type of\n   \"monitor\" in a successful response to a GET or HEAD request\
    \ on that\n   resource.  If the server supports both SIP and SIPS access, it MAY\n\
    \   return link relations for both kinds of access.\n   A client wishing to subscribe\
    \ to the state change of an HTTP resource\n   obtains a SIP or SIPS URI by sending\
    \ a GET or HEAD request to the\n   HTTP URL it wishes to monitor.  This SIP or\
    \ SIPS URI is then used in\n   a SUBSCRIBE request, according to the event package\
    \ defined in\n   Section 4.\n"
- title: 3.2.  Monitoring Multiple HTTP Resources
  contents:
  - "3.2.  Monitoring Multiple HTTP Resources\n   If a client wishes to subscribe\
    \ to the state of multiple HTTP\n   resources, it is free to make use of the mechanisms\
    \ defined in RFC\n   4662 [6] and/or RFC 5367 [9].  This requires no special support\
    \ by\n   the server that provides resource state information.  These\n   approaches,\
    \ however, require the addition of a Resource List Server\n   (RLS) as defined\
    \ in RFC 4662, which will typically subscribe to the\n   state of resources on\
    \ behalf of the monitoring user.  In many cases,\n   this is not a particularly\
    \ efficient means of monitoring several\n   resources, particularly when such\
    \ resources reside on the same HTTP\n   server.\n   As a more efficient alternative,\
    \ if an HTTP server wishes to offer\n   the ability to subscribe to the state\
    \ of several HTTP resources in a\n   single SUBSCRIBE request, it returns a link\
    \ relation containing a SIP\n   or SIPS URI with a relation type of \"monitor-group\"\
    \ in a successful\n   response to a GET or HEAD request on any monitorable resource.\
    \  In\n   general, this monitor-group URI will be the same for all resources on\n\
    \   the same HTTP server.\n   The monitor-group URI corresponds to an RLS service\
    \ associated with\n   the HTTP server.  This RLS service MUST support subscriptions\
    \ to\n   request-contained resource lists, as defined in RFC 5367 [9].  This\n\
    \   RLS service MAY, but is not required to, accept URI lists that\n   include\
    \ monitoring URIs that are not associated with resources served\n   by its related\
    \ HTTP server.  Not requiring such functionality allows\n   the RLS to be implemented\
    \ without requiring back-end subscriptions.\n   If a server wishes to reject such\
    \ requests, the \"403\" (Forbidden)\n   response code is appropriate.  Any \"\
    403\" responses generated for this\n   reason SHOULD contain a message body of\
    \ type \"application/\n   resource-lists+xml\"; this message body lists the offending\
    \ URI or\n   URIs.  See RFC 4826 [7] for the definition of the \"application/\n\
    \   resource-lists+xml\" MIME type.\n   The HTTP server MUST also return a SIP\
    \ and/or SIPS link relation with\n   a relation type of \"monitor\" whenever it\
    \ returns a SIP and/or SIPS\n   link relation with a relation type of \"monitor-group\"\
    .  The monitor-\n   group URI corresponds only to an RLS, and never an HTTP resource\
    \ or\n   fixed set of HTTP resources.\n   If a client wishes to subscribe to the\
    \ state of multiple HTTP\n   resources, and has received monitor-group URIs for\
    \ each of them, it\n   may use the monitor-group URIs to subscribe to multiple\
    \ resources in\n   the same subscription.  To do so, it starts with the set of\
    \ HTTP\n   resources it wishes to monitor.  It then groups these resources by\n\
    \   their respective monitor-group URIs.  Finally, for each such group,\n   it\
    \ initiates a subscription to the group's monitor-group URI; this\n   subscription\
    \ includes a URI list, as described in RFC 5367.  The URI\n   list contains all\
    \ of the URIs in the group.\n      For example: consider the case in which a client\
    \ wishes to monitor\n      the resources http://www.example.com/goat,\n      http://www.example.com/sheep,\
    \ http://www.example.org/llama, and\n      http://www.example.org/alpaca.  It\
    \ would use HTTP to perform HEAD\n      and/or GET operations on these resources.\
    \  The responses to these\n      operations will contain link relations for both\
    \ monitor and\n      monitor-type for each of the four resources.  Assume the\
    \ monitor\n      link for http://www.example.com/goat is sip:a94aa000@example.com;\n\
    \      for http://www.example.com/sheep, sip:23ec24c5@example.com; for\n     \
    \ http://www.example.org/llama,\n      sip:yxbO-UHYxyizU2H3dnEerQ@example.org;\
    \ and for\n      http://www.example.org/alpaca,\n      sip:-J0piC0ihB9hfNaJc7GCBg@example.org.\
    \  Further, assume the\n      monitor-group link for http://www.example.com/goat\
    \ and\n      http://www.example.com/sheep are both sip:httpmon@rls.example.com,\n\
    \      while the monitor-group link for http://www.example.org/llama and\n   \
    \   http://www.example.org/alpaca are both sip:rls@example.org.\n      Because\
    \ they share a common monitor-group link, the client would\n      group together\
    \ http://www.example.com/goat and\n      http://www.example.com/sheep in a single\
    \ subscription.  It sends\n      this subscription to the monitor-group URI\n\
    \      (sip:httpmon@rls.example.com), with a resource-list containing the\n  \
    \    relevant monitor URIs (sip:a94aa000@example.com and\n      sip:23ec24c5@example.com).\
    \  It then repeats this process for the\n      remaining two HTTP resources, using\
    \ their monitor-group and\n      monitor URIs in the same way.\n"
- title: 4.  HTTP Change Event Package
  contents:
  - '4.  HTTP Change Event Package

    '
- title: 4.1.  Event Package Name
  contents:
  - "4.1.  Event Package Name\n   The name of this event package is \"http-monitor\"\
    .\n"
- title: 4.2.  Event Package Parameters
  contents:
  - "4.2.  Event Package Parameters\n   This event package defines a single parameter\
    \ to be used with the\n   Event header field.  The syntax for this parameter is\
    \ shown below,\n   using the ABNF format defined in RFC 5234 [8].  The use of\
    \ the\n   construction \"EQUAL\" is as defined by RFC 3261 [3].\n     body-event-param\
    \ = \"body\" EQUAL ( \"true\" / \"false\" )\n   If present and set to \"true\"\
    \ in a SUBSCRIBE request, this parameter\n   indicates to the server that the\
    \ client wishes to receive a message-\n   body component in the message/http message\
    \ bodies sent in NOTIFY\n   messages.\n   If a server receives a SUBSCRIBE message\
    \ with an Event header field\n   \"body\" parameter set to \"true\", it MAY choose\
    \ to include a message-\n   body component in the message/http message bodies\
    \ that it sends in\n   NOTIFY messages.  Alternatively, it MAY decline to send\
    \ such message-\n   bodies, even when this parameter is present, based on local\
    \ policy.\n   In particular, it would be quite reasonable for servers to have\
    \ a\n   policy of not including HTTP message-bodies larger than a relatively\n\
    \   small number of bytes.\n   When absent, the value of this parameter is assumed\
    \ to be \"false\".\n      Note that this parameter refers to the message-body\
    \ component of\n      the HTTP message, not the message body component of the\
    \ SIP\n      message.\n"
- title: 4.3.  SUBSCRIBE Bodies
  contents:
  - "4.3.  SUBSCRIBE Bodies\n   This event package defines no message bodies to be\
    \ used in the\n   SUBSCRIBE message.\n"
- title: 4.4.  Subscription Duration
  contents:
  - "4.4.  Subscription Duration\n   Reasonable values for the duration of subscriptions\
    \ to the http-\n   monitor event package vary widely with the nature of the HTTP\n\
    \   resource being monitored.  Some HTTP resources change infrequently\n   (if\
    \ ever), while others can change comparatively rapidly.  For\n   rapidly changing\
    \ documents, the ability to recover more rapidly from\n   a subscription failure\
    \ is relatively important, so implementations\n   will be well served by selecting\
    \ smaller durations for their\n   subscriptions, on the order of 1800 to 3600\
    \ seconds (30 minutes to an\n   hour).\n   Subscriptions to slower-changing resources\
    \ lack this property, and\n   the need to periodically refresh subscriptions render\
    \ short\n   subscriptions wasteful.  For these types of subscriptions,\n   expirations\
    \ as long as 604800 seconds (one week) or even longer may\n   well make sense.\n\
    \   The subscriber is responsible for selecting an expiration time that\n   is\
    \ appropriate for its purposes, taking the foregoing considerations\n   into account.\
    \  Keep in mind that the goal behind selecting\n   subscription durations is to\
    \ balance server load against time to\n   recover in the case of a failure.  In\
    \ particular, short subscription\n   expiration times guard against the loss of\
    \ subscription server state,\n   albeit at the expense of additional load on the\
    \ server.\n   In the absence of an expires value in a subscription, the notifier\n\
    \   can assume a default expiration period according to local policy.\n   This\
    \ local policy might choose to take various aspects of the\n   monitored resource\
    \ into account, such as its age and presumed period\n   of validity.  Absent any\
    \ other information, it would not be\n   unreasonable for a server to assume a\
    \ default expiration value of\n   86400 seconds (one day) when the client fails\
    \ to provide one.\n"
- title: 4.5.  NOTIFY Bodies
  contents:
  - "4.5.  NOTIFY Bodies\n   By default, the message bodies of NOTIFY messages for\
    \ the http-\n   monitor event package will be of content-type \"message/http,\"\
    \ as\n   defined in RFC 2616 [2].\n"
- title: 4.5.1.  Use of message/http in HTTP Monitor Event Package
  contents:
  - "4.5.1.  Use of message/http in HTTP Monitor Event Package\n   The message/http\
    \ NOTIFY message bodies used in the HTTP monitor event\n   package reflect a subset\
    \ of the response that would be returned if\n   the client performed an HTTP HEAD\
    \ operation on the HTTP resource.\n   An example of a message/http message body\
    \ as used in this event\n   package is shown below.\n     HTTP/1.1 200 OK\n  \
    \   Date: Sat, 13 Nov 2010 17:18:52 GMT\n     ETag: 38fe6-58b-1840e7d0\n     Content-MD5:\
    \ 4e3b50421829c7c379a5c6154e560449\n     Last-Modified: Sat, 13 Nov 2010 03:29:00\
    \ GMT\n     Accept-Ranges: bytes\n     Content-Location: http://www.example.com/pet-profiles/alpacas/\n\
    \     Content-Length: 12511\n     Content-Type: text/html\n   When used in the\
    \ HTTP monitor event package defined in this document,\n   the message/http SHOULD\
    \ contain at least one of an ETag or Content-\n   MD5 header field, unless returning\
    \ a null state as described in\n   Section 4.7.  Inclusion of a Last-Modified\
    \ header field is also\n   RECOMMENDED.  Additionally, the message/http message\
    \ body MUST\n   contain a Content-Location field that identifies the resource\
    \ being\n   monitored.  Note that this is not necessarily the same URL from which\n\
    \   the link association was originally obtained; see RFC 2616 [2] for\n   details.\n\
    \   Except for the foregoing normative requirements, the decision\n   regarding\
    \ which HTTP header fields to include is at the discretion of\n   the notifier.\n\
    \   When used in the HTTP monitor event package, the message/http MUST\n   NOT\
    \ contain a message-body component, unless the corresponding\n   subscription\
    \ has explicitly indicated the desire to receive such\n   bodies as described\
    \ in Section 4.2.\n   If the change to the resource being communicated represents\
    \ a\n   renaming of the HTTP resource, the message/http start line will\n   contain\
    \ the same 3xx-class HTTP response that would be returned if a\n   user agent\
    \ attempted to access the relocated HTTP resource with a\n   HEAD request (e.g.,\
    \ \"301 Moved Permanently\").  The message/http also\n   SHOULD contain a Location\
    \ header field that communicates the new name\n   of the resource.\n   If the\
    \ change to the resource being communicated represents a\n   deletion of the HTTP\
    \ resource, the start line will contain the same\n   4xx-class HTTP response that\
    \ would be returned if a user agent\n   attempted to access the missing HTTP resource\
    \ with a HEAD request\n   (e.g., \"404 Not Found\" or \"410 Gone\").\n"
- title: 4.6.  Notifier Processing of SUBSCRIBE Requests
  contents:
  - "4.6.  Notifier Processing of SUBSCRIBE Requests\n   Upon receipt of a SUBSCRIBE\
    \ request, the notifier applies\n   authorization according to local policy. \
    \ Typically, this policy will\n   be aligned with the HTTP server authorization\
    \ policies regarding\n   access to the resource whose change state is being requested.\n"
- title: 4.7.  Notifier Generation of NOTIFY Requests
  contents:
  - "4.7.  Notifier Generation of NOTIFY Requests\n   NOTIFY messages are generated\
    \ whenever the underlying resource\n   indicated by the corresponding HTTP URL\
    \ has been modified.\n   In the case that the notifier has insufficient information\
    \ to return\n   any useful information about the underlying HTTP resource, it\
    \ MUST\n   return a message body that is zero bytes long (subject to any\n   mechanisms\
    \ that would suppress sending of a NOTIFY message).\n"
- title: 4.8.  Subscriber Processing of NOTIFY Requests
  contents:
  - "4.8.  Subscriber Processing of NOTIFY Requests\n   Upon receipt of a NOTIFY message,\
    \ the subscriber applies any\n   information in the message/http to update its\
    \ view of the underlying\n   HTTP resource.  In most cases, this results in an\
    \ invalidation of its\n   view of the HTTP resource.  It is up to the subscriber\
    \ implementation\n   to decide whether it is appropriate to fetch a new copy of\
    \ the HTTP\n   resource as a reaction to a NOTIFY message.\n"
- title: 4.9.  Handling of Forked Requests
  contents:
  - "4.9.  Handling of Forked Requests\n   Multiple notifiers for a single HTTP resource\
    \ is semantically\n   nonsensical.  In the aberrant circumstance that a SUBSCRIBE\
    \ request\n   is forked, the subscriber SHOULD terminate all but one subscription,\n\
    \   as described in Section 4.4.9 of RFC 3265 [4].\n"
- title: 4.10.  Rate of Notifications
  contents:
  - "4.10.  Rate of Notifications\n   Because the data stored in HTTP for the purpose\
    \ of SIP services may\n   change rapidly due to user input, and because it may\
    \ potentially be\n   rendered to users and/or used to impact call routing, a high\
    \ degree\n   of responsiveness is appropriate.  However, for the protection of\
    \ the\n   network, notifiers for the http-monitor event package SHOULD NOT send\n\
    \   notifications more frequently than once every second.\n"
- title: 4.11.  State Agents
  contents:
  - "4.11.  State Agents\n   Decomposition of the authority for the HTTP resource\
    \ into an HTTP\n   server and a SIP Events server is likely to be useful, due\
    \ to the\n   potentially different scaling properties associated with serving\
    \ HTTP\n   resources and managing subscriptions.  In the case of such\n   decomposition,\
    \ implementors are encouraged to familiarize themselves\n   with the PUBLISH mechanism\
    \ described in RFC 3903 [14].\n"
- title: 5.  Example Message Flow
  contents:
  - "5.  Example Message Flow\n   The following is a simple example message flow,\
    \ to aid in\n   understanding how this event package can be used.  It is included\
    \ for\n   illustrative purposes only, and does not form any portion of the\n \
    \  specification of the mechanisms defined in this document.\n          Client\
    \            HTTP Server      SIP Events Server\n             |              \
    \     |                   |\n             |                   |              \
    \     |\n             |(1) HTTP GET       |                   |\n            \
    \ |------------------>|                   |\n             |(2) HTTP 200 OK   \
    \ |                   |\n             |<------------------|                  \
    \ |\n             |(3) SIP SUBSCRIBE  |                   |\n             |-------------------------------------->|\n\
    \             |(4) SIP 200 OK     |                   |\n             |<--------------------------------------|\n\
    \             |(5) SIP NOTIFY     |                   |\n             |<--------------------------------------|\n\
    \             |(6) SIP 200 OK     |                   |\n             |-------------------------------------->|\n\
    \             |                   |                   |\n             |      \
    \             |                   |\n             |        [HTTP document changes]\
    \        |\n             |                   |                   |\n         \
    \    |                   |                   |\n             |               \
    \    |(7) SIP PUBLISH    |\n             |                   |------------------>|\n\
    \             |                   |(8) SIP 200 OK     |\n             |      \
    \             |<------------------|\n             |(9) SIP NOTIFY     |      \
    \             |\n             |<--------------------------------------|\n    \
    \         |(10) SIP 200       |                   |\n             |-------------------------------------->|\n\
    \             |                   |                   |\n             |      \
    \             |                   |\n   The following messages illustrate only\
    \ the portions of the messages\n   that are relevant to the example.  They intentionally\
    \ elide fields\n   that, while typical or mandatory, are not key to understanding\
    \ the\n   foregoing message flow.\n   1. The client issues a GET request to retrieve\
    \ the document\n      identified by the URL\n      \"http://www.example.com/pet-profiles/alpacas/\"\
    .\n     GET /pet-profiles/alpacas/ HTTP/1.1\n     Host: www.example.com\n   2.\
    \ The HTTP server responds with the document, and several relevant\n      pieces\
    \ of meta-data.  Of key interest for this example is the Link\n      header field\
    \ with a \"rel\" parameter of \"monitor\".  This is the SIP\n      URL that the\
    \ client will use to monitor changes to the state of\n      the HTTP resource.\
    \  Note that, since the message-body\n      is an HTML document, the \"monitor\"\
    \ link relation could alternately\n      be indicated in the HTML document itself,\
    \ through the use of a\n      <link/> element.\n      Note also the presence of\
    \ the ETag, Content-MD5, and Last-\n      Modified header fields.  These can be\
    \ used by the client to\n      identify the version of the entity returned by\
    \ the HTTP server.\n     HTTP/1.1 200 OK\n     ETag: 38fe6-58b-1840e7d0\n    \
    \ Content-MD5: 4e3b50421829c7c379a5c6154e560449\n     Last-Modified: Sat, 13 Nov\
    \ 2010 03:29:00 GMT\n     Content-Location: http://www.example.com/pet-profiles/alpacas/\n\
    \     Link: <sip:23ec24c5@example.com>; rel=\"monitor\"\n     Link: <sip:httpmon@rls.example.com>;\
    \ rel=\"monitor-group\"\n     Content-Length: 12511\n     Content-Type: text/html\n\
    \     [HTML message-body]\n   3. The client sends a SUBSCRIBE request to the SIP\
    \ URI indicated in\n      the \"monitor\" link relation, indicating an event type\
    \ of \"http-\n      monitor\".\n     SUBSCRIBE sip:23ec24c5@example.com SIP/2.0\n\
    \     To: <sip:23ec24c5@example.com>\n     From: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     Event: http-monitor\n     Contact: <sip:adam@198.51.100.17:2487>\n   4.\
    \ The SIP Events server acknowledges receipt of the subscription\n      request,\
    \ and establishes a dialog for the resulting subscription.\n     SIP/2.0 200 OK\n\
    \     To: <sip:23ec24c5@example.com>;tag=907A953576E6\n     From: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     Contact: <sip:23ec24c5@203.0.113.72>\n   5. The SIP Events server sends\
    \ a NOTIFY message containing the\n      current state of the HTTP resource. \
    \ The client can compare the\n      contents of the ETag, Content-MD5, or Last-Modified\
    \ header fields\n      against those received in the HTTP \"200\" response to\
    \ verify that\n      it has the most recent version of the entity.\n     NOTIFY\
    \ sip:adam@198.51.100.17:2487 SIP/2.0\n     To: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     From: <sip:23ec24c5@example.com>;tag=907A953576E6\n     Contact: <sip:23ec24c5@203.0.113.72>\n\
    \     Event: http-monitor\n     Subscription-State: active\n     Content-Type:\
    \ message/http\n     HTTP/1.1 200 OK\n     ETag: 38fe6-58b-1840e7d0\n     Content-MD5:\
    \ 4e3b50421829c7c379a5c6154e560449\n     Last-Modified: Sat, 13 Nov 2010 03:29:00\
    \ GMT\n     Content-Location: http://www.example.com/pet-profiles/alpacas/\n \
    \    Content-Length: 12511\n     Content-Type: text/html\n   6. The client acknowledges\
    \ receipt of the NOTIFY message.\n     SIP/2.0 200 OK\n     To: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     From: <sip:23ec24c5@example.com>;tag=907A953576E6\n     Contact: <sip:adam@198.51.100.17:2487>\n\
    \   7. At some point after the subscription has been established, the\n      entity\
    \ hosted by the HTTP server changes.  It can convey this\n      information to\
    \ a SIP Events server using a SIP PUBLISH request.\n      The PUBLISH message\
    \ body contains information regarding the state\n      of the entity.\n      Note\
    \ that SIP PUBLISH is one of many ways such information could\n      be conveyed\
    \ -- any other means of communicating this information\n      would also be valid.\n\
    \     PUBLISH sip:23ec24c5@example.com SIP/2.0\n     To: <sip:23ec24c5@example.com>\n\
    \     From: <sip:webserver@example.com>;tag=03-5gbK652_jNMr-b8-11Z_G-NsLR\n  \
    \   Contact: <sip:webserver@203.0.113.99>\n     Event: http-monitor\n     Content-Type:\
    \ message/http\n     HTTP/1.1 200 OK\n     ETag: 3238e-1a3-b83be580\n     Content-MD5:\
    \ 10a1ef5b223577059fafba867829abf8\n     Last-Modified: Sat, 17 Nov 2010 08:17:39\
    \ GMT\n     Content-Location: http://www.example.com/pet-profiles/alpacas/\n \
    \    Content-Length: 17481\n     Content-Type: text/html\n   8. The SIP Events\
    \ server acknowledges the changed entity state.  Note\n      that the value of\
    \ the SIP-ETag header field is not related to the\n      ETag header field associated\
    \ with the HTTP entity.\n     SIP/2.0 200 OK\n     To: <sip:23ec24c5@example.com>\n\
    \     From: <sip:webserver@example.com>;tag=03-5gbK652_jNMr-b8-11Z_G-NsLR\n  \
    \   SIP-ETag: 3psbqi1o5633\n   9. The SIP events server informs the client of\
    \ the change in state\n      for the subscribed resource using a NOTIFY message.\n\
    \     NOTIFY sip:adam@198.51.100.17:2487 SIP/2.0\n     To: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     From: <sip:23ec24c5@example.com>;tag=907A953576E6\n     Contact: <sip:23ec24c5@203.0.113.72>\n\
    \     Event: http-monitor\n     Subscription-State: active\n     Content-Type:\
    \ message/http\n     HTTP/1.1 200 OK\n     ETag: 3238e-1a3-b83be580\n     Content-MD5:\
    \ 10a1ef5b223577059fafba867829abf8\n     Last-Modified: Sat, 17 Nov 2010 08:17:39\
    \ GMT\n     Content-Location: http://www.example.com/pet-profiles/alpacas/\n \
    \    Content-Length: 17481\n     Content-Type: text/html\n  10. The client acknowledges\
    \ receipt of the changed state.  At this\n      point, the client may choose to\
    \ retrieve a fresh copy of the\n      document so that it can act on the new content.\
    \  Alternately, it\n      may simply mark the previously retrieved document as\
    \ out of date\n      or discard it, choosing to retrieve a new copy at a later\
    \ point in\n      time.\n     SIP/2.0 200 OK\n     To: <sip:adam@example.org>;tag=57dac993-0b5b-4f04\n\
    \     From: <sip:23ec24c5@example.com>;tag=907A953576E6\n     Contact: <sip:adam@198.51.100.17:2487>\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Unless secured using Transport Layer Security\
    \ (TLS), IPsec, or a\n   similar technology, the content of the Link header field\
    \ is not\n   secure, private, or integrity-protected.\n   Because an unencrypted\
    \ Link header field can be intercepted, server\n   implementations are cautioned\
    \ not to use the value sent in the Link\n   header field as a security token that\
    \ authenticates a subscriber, or\n   that demonstrates authorization to subscribe\
    \ to a particular\n   resource.\n   Because an unsecured Link header field can\
    \ be tampered with -- or\n   inserted -- in transit, client implementations need\
    \ to consider the\n   interaction between their application and a forged set of\n\
    \   notifications.  This issue becomes particularly problematic when the\n   change\
    \ notifications include entity state (using \"body=true\").\n   This mechanism\
    \ introduces the means to learn information about the\n   state of an HTTP resource\
    \ using an alternate protocol, and\n   potentially a different server.  If the\
    \ HTTP resource is restricted\n   using some form of access control, special care\
    \ MUST be taken to\n   ensure that the SIP means of subscribing to the resource\
    \ state is\n   also restricted in the same way.  Otherwise, unauthorized users\
    \ may\n   learn information that was intended to be confidential (including the\n\
    \   actual resource value, in some cases).\n   Similarly, if the HTTP resource\
    \ is encrypted or integrity protected\n   in transit -- for example, by using\
    \ HTTP over TLS [12] -- then the\n   SIP means of subscribing to the HTTP resource\
    \ MUST also have\n   appropriate encryption or integrity protection applied. \
    \ Examples of\n   mechanisms for providing such protection include the use of\
    \ the SIPS\n   URI scheme [17], and the use of S/MIME bodies [13].\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  New Link Relations
  contents:
  - "7.1.  New Link Relations\n   The following entries have been added to the \"\
    Link Relation Types\"\n   registry, as created by the \"Web Linking\" specification\
    \ [10].\n"
- title: '7.1.1.  New Link Relation: monitor'
  contents:
  - "7.1.1.  New Link Relation: monitor\n   o  Relation Name: monitor\n   o  Description:\
    \ Refers to a resource that can be used to monitor\n      changes in an HTTP resource.\n\
    \   o  Reference: RFC 5989\n"
- title: '7.1.2.  New Link Relation: monitor-group'
  contents:
  - "7.1.2.  New Link Relation: monitor-group\n   o  Relation Name: monitor-group\n\
    \   o  Description: Refers to a resource that can be used to monitor\n      changes\
    \ in a specified group of HTTP resources.\n   o  Reference: RFC 5989\n"
- title: '7.2.  New SIP Event Package: http-monitor'
  contents:
  - "7.2.  New SIP Event Package: http-monitor\n   The following entry is to be added\
    \ to the \"SIP Events\" registry, as\n   created by the SIP Event Framework [4].\n\
    \   Package Name:  http-monitor\n   Type:  package\n   Contact:  Adam Roach, adam@nostrum.com\n\
    \   Reference:  RFC 5989\n"
- title: '7.3.  New Event Header Field Parameter: body'
  contents:
  - "7.3.  New Event Header Field Parameter: body\n   The following entry is to be\
    \ added to the SIP \"Header Field\n   Parameters and Parameter Values\" registry,\
    \ as created by the SIP\n   Change Framework [15].\n   Header Field:  Event\n\
    \   Parameter Name:  body\n   Predefined Values:  yes\n   Reference:  RFC 5989\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   Thanks to Lisa Dusseault and Mark Nottingham for significant\
    \ input on\n   the mechanisms to bind an HTTP URL to a SIP URI.  Thanks also to\
    \ Mark\n   Nottingham and Theo Zourzouvillys for thorough feedback on early\n\
    \   versions of this document.  Thanks to Martin Thompson, Shida\n   Schubert,\
    \ John Elwell, and Scott Lawrence for their careful reviews\n   and feedback.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L.,\n  \
    \       Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol --\n    \
    \     HTTP/1.1\", RFC 2616, June 1999.\n   [3]   Rosenberg, J., Schulzrinne, H.,\
    \ Camarillo, G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M.,\
    \ and E. Schooler, \"SIP:\n         Session Initiation Protocol\", RFC 3261, June\
    \ 2002.\n   [4]   Roach, A., \"Session Initiation Protocol (SIP)-Specific Event\n\
    \         Notification\", RFC 3265, June 2002.\n   [5]   Nottingham, M., Ed. and\
    \ R. Sayre, Ed., \"The Atom Syndication\n         Format\", RFC 4287, December\
    \ 2005.\n   [6]   Roach, A., Campbell, B., and J. Rosenberg, \"A Session\n   \
    \      Initiation Protocol (SIP) Event Notification Extension for\n         Resource\
    \ Lists\", RFC 4662, August 2006.\n   [7]   Rosenberg, J., \"Extensible Markup\
    \ Language (XML) Formats for\n         Representing Resource Lists\", RFC 4826,\
    \ May 2007.\n   [8]   Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \         Specifications: ABNF\", STD 68, RFC 5234, January 2008.\n   [9]   Camarillo,\
    \ G., Roach, A., and O. Levin, \"Subscriptions to\n         Request-Contained\
    \ Resource Lists in the Session Initiation\n         Protocol (SIP)\", RFC 5367,\
    \ October 2008.\n   [10]  Nottingham, M., \"Web Linking\", RFC 5988, October 2010.\n\
    \   [11]  Jacobs, I., Hors, A., and D. Raggett, \"HTML 4.01\n         Specification\"\
    , World Wide Web Consortium Recommendation REC-\n         html401-19991224, December\
    \ 1999,\n         <http://www.w3.org/TR/1999/REC-html401-19991224>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [12]  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\
    \ May 2000.\n   [13]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet\
    \ Mail\n         Extensions (S/MIME) Version 3.2 Message Specification\",\n  \
    \       RFC 5751, January 2010.\n   [14]  Niemi, A., \"Session Initiation Protocol\
    \ (SIP) Extension for\n         Event State Publication\", RFC 3903, October 2004.\n\
    \   [15]  Camarillo, G., \"The Internet Assigned Number Authority (IANA)\n   \
    \      Header Field Parameter Registry for the Session Initiation\n         Protocol\
    \ (SIP)\", BCP 98, RFC 3968, December 2004.\n   [16]  Dusseault, L., \"HTTP Extensions\
    \ for Web Distributed Authoring\n         and Versioning (WebDAV)\", RFC 4918,\
    \ June 2007.\n   [17]  Audet, F., \"The Use of the SIPS URI Scheme in the Session\n\
    \         Initiation Protocol (SIP)\", RFC 5630, October 2009.\n   [18]  Wachob,\
    \ G., Reed, D., Chasen, L., Tan, W., and S. Churchill,\n         \"Extensible\
    \ Resource Identifier (XRI) Resolution V2.0\",\n         February 2008, <http://docs.oasis-open.org/xri/2.0/specs/\n\
    \         xri-resolution-V2.0.html>.\n"
- title: 'Appendix A.  Rationale: Other Approaches Considered'
  contents:
  - "Appendix A.  Rationale: Other Approaches Considered\n   Several potential mechanisms\
    \ for retrieving the SIP URI from the HTTP\n   server were evaluated.  Of them,\
    \ link relations were determined to\n   have the most favorable set of properties.\
    \  Two key candidates that\n   were considered but rejected in favor of link relations\
    \ are discussed\n   below.\n   The HTTP PROPFIND method ([16], Section 9.1) can\
    \ be used to retrieve\n   the value of a specific property associated with an\
    \ HTTP URL.\n   However, this cannot be done in conjunction with retrieval of\
    \ the\n   document itself, which is usually desirable.  If a PROPFIND approach\n\
    \   is employed, clients will typically perform both a GET and a PROPFIND\n  \
    \ on resources of interest.  Additionally, the use of PROPFIND requires\n   support\
    \ of the PROPFIND method in HTTP user agents -- which, although\n   fairly well\
    \ implemented, still lacks the penetration of GET\n   implementations.\n   Similar\
    \ to PROPFIND, XRDS (Extensible Resource Descriptor Sequence)\n   [18] can be\
    \ used to retrieve properties associated with an HTTP URL.\n   It has the advantage\
    \ of using GET instead of PROPFIND; however, it\n   suffers from both the two-round-trip\
    \ issue discussed above, as well\n   as an unfortunately large number of options\
    \ in specifying how to\n   retrieve the properties.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Adam Roach\n   Tekelec\n   17210 Campbell Rd.\n   Suite\
    \ 250\n   Dallas, TX  75252\n   US\n   EMail: adam@nostrum.com\n"
