- title: __initial_text__
  contents:
  - "    Recommendations for Secure Use of Transport Layer Security (TLS)\n      \
    \        and Datagram Transport Layer Security (DTLS)\n"
- title: Abstract
  contents:
  - "Abstract\n   Transport Layer Security (TLS) and Datagram Transport Layer Security\n\
    \   (DTLS) are widely used to protect data exchanged over application\n   protocols\
    \ such as HTTP, SMTP, IMAP, POP, SIP, and XMPP.  Over the\n   last few years,\
    \ several serious attacks on TLS have emerged,\n   including attacks on its most\
    \ commonly used cipher suites and their\n   modes of operation.  This document\
    \ provides recommendations for\n   improving the security of deployed services\
    \ that use TLS and DTLS.\n   The recommendations are applicable to the majority\
    \ of use cases.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7525.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  General Recommendations . . . . . . . . . . . . . . . .\
    \ . . .   5\n     3.1.  Protocol Versions . . . . . . . . . . . . . . . . . .\
    \ . .   5\n       3.1.1.  SSL/TLS Protocol Versions . . . . . . . . . . . . .\
    \ .   5\n       3.1.2.  DTLS Protocol Versions  . . . . . . . . . . . . . . .\
    \   6\n       3.1.3.  Fallback to Lower Versions  . . . . . . . . . . . . .  \
    \ 7\n     3.2.  Strict TLS  . . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \     3.3.  Compression . . . . . . . . . . . . . . . . . . . . . . .   8\n  \
    \   3.4.  TLS Session Resumption  . . . . . . . . . . . . . . . . .   8\n    \
    \ 3.5.  TLS Renegotiation . . . . . . . . . . . . . . . . . . . .   9\n     3.6.\
    \  Server Name Indication  . . . . . . . . . . . . . . . . .   9\n   4.  Recommendations:\
    \ Cipher Suites  . . . . . . . . . . . . . . .   9\n     4.1.  General Guidelines\
    \  . . . . . . . . . . . . . . . . . . .   9\n     4.2.  Recommended Cipher Suites\
    \ . . . . . . . . . . . . . . . .  11\n       4.2.1.  Implementation Details \
    \ . . . . . . . . . . . . . . .  12\n     4.3.  Public Key Length . . . . . .\
    \ . . . . . . . . . . . . . .  12\n     4.4.  Modular Exponential vs. Elliptic\
    \ Curve DH Cipher Suites .  13\n     4.5.  Truncated HMAC  . . . . . . . . . .\
    \ . . . . . . . . . . .  14\n   5.  Applicability Statement . . . . . . . . .\
    \ . . . . . . . . . .  15\n     5.1.  Security Services . . . . . . . . . . .\
    \ . . . . . . . . .  15\n     5.2.  Opportunistic Security  . . . . . . . . .\
    \ . . . . . . . .  16\n   6.  Security Considerations . . . . . . . . . . . .\
    \ . . . . . . .  17\n     6.1.  Host Name Validation  . . . . . . . . . . . .\
    \ . . . . . .  17\n     6.2.  AES-GCM . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  18\n     6.3.  Forward Secrecy . . . . . . . . . . . . . . . . .\
    \ . . . .  18\n     6.4.  Diffie-Hellman Exponent Reuse . . . . . . . . . . .\
    \ . . .  19\n     6.5.  Certificate Revocation  . . . . . . . . . . . . . . .\
    \ . .  19\n   7.  References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  21\n     7.1.  Normative References  . . . . . . . . . . . . . . . . . .\
    \  21\n     7.2.  Informative References  . . . . . . . . . . . . . . . . .  22\n\
    \   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  26\n  \
    \ Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Transport Layer Security (TLS) [RFC5246] and Datagram Transport\n\
    \   Security Layer (DTLS) [RFC6347] are widely used to protect data\n   exchanged\
    \ over application protocols such as HTTP, SMTP, IMAP, POP,\n   SIP, and XMPP.\
    \  Over the last few years, several serious attacks on\n   TLS have emerged, including\
    \ attacks on its most commonly used cipher\n   suites and their modes of operation.\
    \  For instance, both the AES-CBC\n   [RFC3602] and RC4 [RFC7465] encryption algorithms,\
    \ which together\n   have been the most widely deployed ciphers, have been attacked\
    \ in the\n   context of TLS.  A companion document [RFC7457] provides detailed\n\
    \   information about these attacks and will help the reader understand\n   the\
    \ rationale behind the recommendations provided here.\n   Because of these attacks,\
    \ those who implement and deploy TLS and DTLS\n   need updated guidance on how\
    \ TLS can be used securely.  This document\n   provides guidance for deployed\
    \ services as well as for software\n   implementations, assuming the implementer\
    \ expects his or her code to\n   be deployed in environments defined in Section\
    \ 5.  In fact, this\n   document calls for the deployment of algorithms that are\
    \ widely\n   implemented but not yet widely deployed.  Concerning deployment,\
    \ this\n   document targets a wide audience -- namely, all deployers who wish\
    \ to\n   add authentication (be it one-way only or mutual), confidentiality,\n\
    \   and data integrity protection to their communications.\n   The recommendations\
    \ herein take into consideration the security of\n   various mechanisms, their\
    \ technical maturity and interoperability,\n   and their prevalence in implementations\
    \ at the time of writing.\n   Unless it is explicitly called out that a recommendation\
    \ applies to\n   TLS alone or to DTLS alone, each recommendation applies to both\
    \ TLS\n   and DTLS.\n   It is expected that the TLS 1.3 specification will resolve\
    \ many of\n   the vulnerabilities listed in this document.  A system that deploys\n\
    \   TLS 1.3 should have fewer vulnerabilities than TLS 1.2 or below.\n   This\
    \ document is likely to be updated after TLS 1.3 gets noticeable\n   deployment.\n\
    \   These are minimum recommendations for the use of TLS in the vast\n   majority\
    \ of implementation and deployment scenarios, with the\n   exception of unauthenticated\
    \ TLS (see Section 5).  Other\n   specifications that reference this document\
    \ can have stricter\n   requirements related to one or more aspects of the protocol,\
    \ based on\n   their particular circumstances (e.g., for use with a particular\n\
    \   application protocol); when that is the case, implementers are\n   advised\
    \ to adhere to those stricter requirements.  Furthermore, this\n   document provides\
    \ a floor, not a ceiling, so stronger options are\n   always allowed (e.g., depending\
    \ on differing evaluations of the\n   importance of cryptographic strength vs.\
    \ computational load).\n   Community knowledge about the strength of various algorithms\
    \ and\n   feasible attacks can change quickly, and experience shows that a Best\n\
    \   Current Practice (BCP) document about security is a point-in-time\n   statement.\
    \  Readers are advised to seek out any errata or updates\n   that apply to this\
    \ document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   A number of security-related terms in this document are used\
    \ in the\n   sense defined in [RFC4949].\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  General Recommendations
  contents:
  - "3.  General Recommendations\n   This section provides general recommendations\
    \ on the secure use of\n   TLS.  Recommendations related to cipher suites are\
    \ discussed in the\n   following section.\n"
- title: 3.1.  Protocol Versions
  contents:
  - '3.1.  Protocol Versions

    '
- title: 3.1.1.  SSL/TLS Protocol Versions
  contents:
  - "3.1.1.  SSL/TLS Protocol Versions\n   It is important both to stop using old,\
    \ less secure versions of SSL/\n   TLS and to start using modern, more secure\
    \ versions; therefore, the\n   following are the recommendations concerning TLS/SSL\
    \ protocol\n   versions:\n   o  Implementations MUST NOT negotiate SSL version\
    \ 2.\n      Rationale: Today, SSLv2 is considered insecure [RFC6176].\n   o  Implementations\
    \ MUST NOT negotiate SSL version 3.\n      Rationale: SSLv3 [RFC6101] was an improvement\
    \ over SSLv2 and\n      plugged some significant security holes but did not support\
    \ strong\n      cipher suites.  SSLv3 does not support TLS extensions, some of\n\
    \      which (e.g., renegotiation_info [RFC5746]) are security-critical.\n   \
    \   In addition, with the emergence of the POODLE attack [POODLE],\n      SSLv3\
    \ is now widely recognized as fundamentally insecure.  See\n      [DEP-SSLv3]\
    \ for further details.\n   o  Implementations SHOULD NOT negotiate TLS version\
    \ 1.0 [RFC2246];\n      the only exception is when no higher version is available\
    \ in the\n      negotiation.\n      Rationale: TLS 1.0 (published in 1999) does\
    \ not support many\n      modern, strong cipher suites.  In addition, TLS 1.0\
    \ lacks a per-\n      record Initialization Vector (IV) for CBC-based cipher suites\
    \ and\n      does not warn against common padding errors.\n   o  Implementations\
    \ SHOULD NOT negotiate TLS version 1.1 [RFC4346];\n      the only exception is\
    \ when no higher version is available in the\n      negotiation.\n      Rationale:\
    \ TLS 1.1 (published in 2006) is a security improvement\n      over TLS 1.0 but\
    \ still does not support certain stronger cipher\n      suites.\n   o  Implementations\
    \ MUST support TLS 1.2 [RFC5246] and MUST prefer to\n      negotiate TLS version\
    \ 1.2 over earlier versions of TLS.\n      Rationale: Several stronger cipher\
    \ suites are available only with\n      TLS 1.2 (published in 2008).  In fact,\
    \ the cipher suites\n      recommended by this document (Section 4.2 below) are\
    \ only\n      available in TLS 1.2.\n   This BCP applies to TLS 1.2 and also to\
    \ earlier versions.  It is not\n   safe for readers to assume that the recommendations\
    \ in this BCP apply\n   to any future version of TLS.\n"
- title: 3.1.2.  DTLS Protocol Versions
  contents:
  - "3.1.2.  DTLS Protocol Versions\n   DTLS, an adaptation of TLS for UDP datagrams,\
    \ was introduced when TLS\n   1.1 was published.  The following are the recommendations\
    \ with\n   respect to DTLS:\n   o  Implementations SHOULD NOT negotiate DTLS version\
    \ 1.0 [RFC4347].\n      Version 1.0 of DTLS correlates to version 1.1 of TLS (see\
    \ above).\n   o  Implementations MUST support and MUST prefer to negotiate DTLS\n\
    \      version 1.2 [RFC6347].\n      Version 1.2 of DTLS correlates to version\
    \ 1.2 of TLS (see above).\n      (There is no version 1.1 of DTLS.)\n"
- title: 3.1.3.  Fallback to Lower Versions
  contents:
  - "3.1.3.  Fallback to Lower Versions\n   Clients that \"fall back\" to lower versions\
    \ of the protocol after the\n   server rejects higher versions of the protocol\
    \ MUST NOT fall back to\n   SSLv3 or earlier.\n   Rationale: Some client implementations\
    \ revert to lower versions of\n   TLS or even to SSLv3 if the server rejected\
    \ higher versions of the\n   protocol.  This fallback can be forced by a man-in-the-middle\
    \ (MITM)\n   attacker.  TLS 1.0 and SSLv3 are significantly less secure than TLS\n\
    \   1.2, the version recommended by this document.  While TLS 1.0-only\n   servers\
    \ are still quite common, IP scans show that SSLv3-only servers\n   amount to\
    \ only about 3% of the current Web server population.  (At\n   the time of this\
    \ writing, an explicit method for preventing downgrade\n   attacks has been defined\
    \ recently in [RFC7507].)\n"
- title: 3.2.  Strict TLS
  contents:
  - "3.2.  Strict TLS\n   The following recommendations are provided to help prevent\
    \ SSL\n   Stripping (an attack that is summarized in Section 2.1 of [RFC7457]):\n\
    \   o  In cases where an application protocol allows implementations or\n    \
    \  deployments a choice between strict TLS configuration and dynamic\n      upgrade\
    \ from unencrypted to TLS-protected traffic (such as\n      STARTTLS), clients\
    \ and servers SHOULD prefer strict TLS\n      configuration.\n   o  Application\
    \ protocols typically provide a way for the server to\n      offer TLS during\
    \ an initial protocol exchange, and sometimes also\n      provide a way for the\
    \ server to advertise support for TLS (e.g.,\n      through a flag indicating\
    \ that TLS is required); unfortunately,\n      these indications are sent before\
    \ the communication channel is\n      encrypted.  A client SHOULD attempt to negotiate\
    \ TLS even if these\n      indications are not communicated by the server.\n \
    \  o  HTTP client and server implementations MUST support the HTTP\n      Strict\
    \ Transport Security (HSTS) header [RFC6797], in order to\n      allow Web servers\
    \ to advertise that they are willing to accept\n      TLS-only clients.\n   o\
    \  Web servers SHOULD use HSTS to indicate that they are willing to\n      accept\
    \ TLS-only clients, unless they are deployed in such a way\n      that using HSTS\
    \ would in fact weaken overall security (e.g., it\n      can be problematic to\
    \ use HSTS with self-signed certificates, as\n      described in Section 11.3\
    \ of [RFC6797]).\n   Rationale: Combining unprotected and TLS-protected communication\n\
    \   opens the way to SSL Stripping and similar attacks, since an initial\n   part\
    \ of the communication is not integrity protected and therefore\n   can be manipulated\
    \ by an attacker whose goal is to keep the\n   communication in the clear.\n"
- title: 3.3.  Compression
  contents:
  - "3.3.  Compression\n   In order to help prevent compression-related attacks (summarized\
    \ in\n   Section 2.6 of [RFC7457]), implementations and deployments SHOULD\n \
    \  disable TLS-level compression (Section 6.2.2 of [RFC5246]), unless\n   the\
    \ application protocol in question has been shown not to be open to\n   such attacks.\n\
    \   Rationale: TLS compression has been subject to security attacks, such\n  \
    \ as the CRIME attack.\n   Implementers should note that compression at higher\
    \ protocol levels\n   can allow an active attacker to extract cleartext information\
    \ from\n   the connection.  The BREACH attack is one such case.  These issues\n\
    \   can only be mitigated outside of TLS and are thus outside the scope\n   of\
    \ this document.  See Section 2.6 of [RFC7457] for further details.\n"
- title: 3.4.  TLS Session Resumption
  contents:
  - "3.4.  TLS Session Resumption\n   If TLS session resumption is used, care ought\
    \ to be taken to do so\n   safely.  In particular, when using session tickets\
    \ [RFC5077], the\n   resumption information MUST be authenticated and encrypted\
    \ to prevent\n   modification or eavesdropping by an attacker.  Further\n   recommendations\
    \ apply to session tickets:\n   o  A strong cipher suite MUST be used when encrypting\
    \ the ticket (as\n      least as strong as the main TLS cipher suite).\n   o \
    \ Ticket keys MUST be changed regularly, e.g., once every week, so\n      as not\
    \ to negate the benefits of forward secrecy (see Section 6.3\n      for details\
    \ on forward secrecy).\n   o  For similar reasons, session ticket validity SHOULD\
    \ be limited to\n      a reasonable duration (e.g., half as long as ticket key\
    \ validity).\n   Rationale: session resumption is another kind of TLS handshake,\
    \ and\n   therefore must be as secure as the initial handshake.  This document\n\
    \   (Section 4) recommends the use of cipher suites that provide forward\n   secrecy,\
    \ i.e. that prevent an attacker who gains momentary access to\n   the TLS endpoint\
    \ (either client or server) and its secrets from\n   reading either past or future\
    \ communication.  The tickets must be\n   managed so as not to negate this security\
    \ property.\n"
- title: 3.5.  TLS Renegotiation
  contents:
  - "3.5.  TLS Renegotiation\n   Where handshake renegotiation is implemented, both\
    \ clients and\n   servers MUST implement the renegotiation_info extension, as\
    \ defined\n   in [RFC5746].\n   The most secure option for countering the Triple\
    \ Handshake attack is\n   to refuse any change of certificates during renegotiation.\
    \  In\n   addition, TLS clients SHOULD apply the same validation policy for all\n\
    \   certificates received over a connection.  The [triple-handshake]\n   document\
    \ suggests several other possible countermeasures, such as\n   binding the master\
    \ secret to the full handshake (see [SESSION-HASH])\n   and binding the abbreviated\
    \ session resumption handshake to the\n   original full handshake.  Although the\
    \ latter two techniques are\n   still under development and thus do not qualify\
    \ as current practices,\n   those who implement and deploy TLS are advised to\
    \ watch for further\n   development of appropriate countermeasures.\n"
- title: 3.6.  Server Name Indication
  contents:
  - "3.6.  Server Name Indication\n   TLS implementations MUST support the Server\
    \ Name Indication (SNI)\n   extension defined in Section 3 of [RFC6066] for those\
    \ higher-level\n   protocols that would benefit from it, including HTTPS.  However,\
    \ the\n   actual use of SNI in particular circumstances is a matter of local\n\
    \   policy.\n   Rationale: SNI supports deployment of multiple TLS-protected virtual\n\
    \   servers on a single address, and therefore enables fine-grained\n   security\
    \ for these virtual servers, by allowing each one to have its\n   own certificate.\n"
- title: '4.  Recommendations: Cipher Suites'
  contents:
  - "4.  Recommendations: Cipher Suites\n   TLS and its implementations provide considerable\
    \ flexibility in the\n   selection of cipher suites.  Unfortunately, some available\
    \ cipher\n   suites are insecure, some do not provide the targeted security\n\
    \   services, and some no longer provide enough security.  Incorrectly\n   configuring\
    \ a server leads to no or reduced security.  This section\n   includes recommendations\
    \ on the selection and negotiation of cipher\n   suites.\n"
- title: 4.1.  General Guidelines
  contents:
  - "4.1.  General Guidelines\n   Cryptographic algorithms weaken over time as cryptanalysis\
    \ improves:\n   algorithms that were once considered strong become weak.  Such\n\
    \   algorithms need to be phased out over time and replaced with more\n   secure\
    \ cipher suites.  This helps to ensure that the desired security\n   properties\
    \ still hold.  SSL/TLS has been in existence for almost 20\n   years and many\
    \ of the cipher suites that have been recommended in\n   various versions of SSL/TLS\
    \ are now considered weak or at least not\n   as strong as desired.  Therefore,\
    \ this section modernizes the\n   recommendations concerning cipher suite selection.\n\
    \   o  Implementations MUST NOT negotiate the cipher suites with NULL\n      encryption.\n\
    \      Rationale: The NULL cipher suites do not encrypt traffic and so\n     \
    \ provide no confidentiality services.  Any entity in the network\n      with\
    \ access to the connection can view the plaintext of contents\n      being exchanged\
    \ by the client and server.  (Nevertheless, this\n      document does not discourage\
    \ software from implementing NULL\n      cipher suites, since they can be useful\
    \ for testing and\n      debugging.)\n   o  Implementations MUST NOT negotiate\
    \ RC4 cipher suites.\n      Rationale: The RC4 stream cipher has a variety of\
    \ cryptographic\n      weaknesses, as documented in [RFC7465].  Note that DTLS\n\
    \      specifically forbids the use of RC4 already.\n   o  Implementations MUST\
    \ NOT negotiate cipher suites offering less\n      than 112 bits of security,\
    \ including so-called \"export-level\"\n      encryption (which provide 40 or\
    \ 56 bits of security).\n      Rationale: Based on [RFC3766], at least 112 bits\
    \ of security is\n      needed.  40-bit and 56-bit security are considered insecure\
    \ today.\n      TLS 1.1 and 1.2 never negotiate 40-bit or 56-bit export ciphers.\n\
    \   o  Implementations SHOULD NOT negotiate cipher suites that use\n      algorithms\
    \ offering less than 128 bits of security.\n      Rationale: Cipher suites that\
    \ offer between 112-bits and 128-bits\n      of security are not considered weak\
    \ at this time; however, it is\n      expected that their useful lifespan is short\
    \ enough to justify\n      supporting stronger cipher suites at this time.  128-bit\
    \ ciphers\n      are expected to remain secure for at least several years, and\n\
    \      256-bit ciphers until the next fundamental technology\n      breakthrough.\
    \  Note that, because of so-called \"meet-in-the-\n      middle\" attacks [Multiple-Encryption],\
    \ some legacy cipher suites\n      (e.g., 168-bit 3DES) have an effective key\
    \ length that is smaller\n      than their nominal key length (112 bits in the\
    \ case of 3DES).\n      Such cipher suites should be evaluated according to their\n\
    \      effective key length.\n   o  Implementations SHOULD NOT negotiate cipher\
    \ suites based on RSA\n      key transport, a.k.a. \"static RSA\".\n      Rationale:\
    \ These cipher suites, which have assigned values\n      starting with the string\
    \ \"TLS_RSA_WITH_*\", have several drawbacks,\n      especially the fact that\
    \ they do not support forward secrecy.\n   o  Implementations MUST support and\
    \ prefer to negotiate cipher suites\n      offering forward secrecy, such as those\
    \ in the Ephemeral Diffie-\n      Hellman and Elliptic Curve Ephemeral Diffie-Hellman\
    \ (\"DHE\" and\n      \"ECDHE\") families.\n      Rationale: Forward secrecy (sometimes\
    \ called \"perfect forward\n      secrecy\") prevents the recovery of information\
    \ that was encrypted\n      with older session keys, thus limiting the amount\
    \ of time during\n      which attacks can be successful.  See Section 6.3 for\
    \ a detailed\n      discussion.\n"
- title: 4.2.  Recommended Cipher Suites
  contents:
  - "4.2.  Recommended Cipher Suites\n   Given the foregoing considerations, implementation\
    \ and deployment of\n   the following cipher suites is RECOMMENDED:\n   o  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n\
    \   o  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n   o  TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\n\
    \   o  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n   These cipher suites are supported\
    \ only in TLS 1.2 because they are\n   authenticated encryption (AEAD) algorithms\
    \ [RFC5116].\n   Typically, in order to prefer these suites, the order of suites\
    \ needs\n   to be explicitly configured in server software.  (See [BETTERCRYPTO]\n\
    \   for helpful deployment guidelines, but note that its recommendations\n   differ\
    \ from the current document in some details.)  It would be ideal\n   if server\
    \ software implementations were to prefer these suites by\n   default.\n   Some\
    \ devices have hardware support for AES-CCM but not AES-GCM, so\n   they are unable\
    \ to follow the foregoing recommendations regarding\n   cipher suites.  There\
    \ are even devices that do not support public key\n   cryptography at all, but\
    \ they are out of scope entirely.\n"
- title: 4.2.1.  Implementation Details
  contents:
  - "4.2.1.  Implementation Details\n   Clients SHOULD include TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\
    \ as the\n   first proposal to any server, unless they have prior knowledge that\n\
    \   the server cannot respond to a TLS 1.2 client_hello message.\n   Servers MUST\
    \ prefer this cipher suite over weaker cipher suites\n   whenever it is proposed,\
    \ even if it is not the first proposal.\n   Clients are of course free to offer\
    \ stronger cipher suites, e.g.,\n   using AES-256; when they do, the server SHOULD\
    \ prefer the stronger\n   cipher suite unless there are compelling reasons (e.g.,\
    \ seriously\n   degraded performance) to choose otherwise.\n   This document does\
    \ not change the mandatory-to-implement TLS cipher\n   suite(s) prescribed by\
    \ TLS.  To maximize interoperability, RFC 5246\n   mandates implementation of\
    \ the TLS_RSA_WITH_AES_128_CBC_SHA cipher\n   suite, which is significantly weaker\
    \ than the cipher suites\n   recommended here.  (The GCM mode does not suffer\
    \ from the same\n   weakness, caused by the order of MAC-then-Encrypt in TLS\n\
    \   [Krawczyk2001], since it uses an AEAD mode of operation.)\n   Implementers\
    \ should consider the interoperability gain against the\n   loss in security when\
    \ deploying the TLS_RSA_WITH_AES_128_CBC_SHA\n   cipher suite.  Other application\
    \ protocols specify other cipher\n   suites as mandatory to implement (MTI).\n\
    \   Note that some profiles of TLS 1.2 use different cipher suites.  For\n   example,\
    \ [RFC6460] defines a profile that uses the\n   TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\
    \ and\n   TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 cipher suites.\n   [RFC4492]\
    \ allows clients and servers to negotiate ECDH parameters\n   (curves).  Both\
    \ clients and servers SHOULD include the \"Supported\n   Elliptic Curves\" extension\
    \ [RFC4492].  For interoperability, clients\n   and servers SHOULD support the\
    \ NIST P-256 (secp256r1) curve\n   [RFC4492].  In addition, clients SHOULD send\
    \ an ec_point_formats\n   extension with a single element, \"uncompressed\".\n"
- title: 4.3.  Public Key Length
  contents:
  - "4.3.  Public Key Length\n   When using the cipher suites recommended in this\
    \ document, two public\n   keys are normally used in the TLS handshake: one for\
    \ the Diffie-\n   Hellman key agreement and one for server authentication.  Where\
    \ a\n   client certificate is used, a third public key is added.\n   With a key\
    \ exchange based on modular exponential (MODP) Diffie-\n   Hellman groups (\"\
    DHE\" cipher suites), DH key lengths of at least 2048\n   bits are RECOMMENDED.\n\
    \   Rationale: For various reasons, in practice, DH keys are typically\n   generated\
    \ in lengths that are powers of two (e.g., 2^10 = 1024 bits,\n   2^11 = 2048 bits,\
    \ 2^12 = 4096 bits).  Because a DH key of 1228 bits\n   would be roughly equivalent\
    \ to only an 80-bit symmetric key\n   [RFC3766], it is better to use keys longer\
    \ than that for the \"DHE\"\n   family of cipher suites.  A DH key of 1926 bits\
    \ would be roughly\n   equivalent to a 100-bit symmetric key [RFC3766] and a DH\
    \ key of 2048\n   bits might be sufficient for at least the next 10 years\n  \
    \ [NIST.SP.800-56A].  See Section 4.4 for additional information on the\n   use\
    \ of MODP Diffie-Hellman in TLS.\n   As noted in [RFC3766], correcting for the\
    \ emergence of a TWIRL\n   machine would imply that 1024-bit DH keys yield about\
    \ 65 bits of\n   equivalent strength and that a 2048-bit DH key would yield about\
    \ 92\n   bits of equivalent strength.\n   With regard to ECDH keys, the IANA \"\
    EC Named Curve Registry\" (within\n   the \"Transport Layer Security (TLS) Parameters\"\
    \ registry [IANA-TLS])\n   contains 160-bit elliptic curves that are considered\
    \ to be roughly\n   equivalent to only an 80-bit symmetric key [ECRYPT-II].  Curves\
    \ of\n   less than 192 bits SHOULD NOT be used.\n   When using RSA, servers SHOULD\
    \ authenticate using certificates with\n   at least a 2048-bit modulus for the\
    \ public key.  In addition, the use\n   of the SHA-256 hash algorithm is RECOMMENDED\
    \ (see [CAB-Baseline] for\n   more details).  Clients SHOULD indicate to servers\
    \ that they request\n   SHA-256, by using the \"Signature Algorithms\" extension\
    \ defined in\n   TLS 1.2.\n"
- title: 4.4.  Modular Exponential vs. Elliptic Curve DH Cipher Suites
  contents:
  - "4.4.  Modular Exponential vs. Elliptic Curve DH Cipher Suites\n   Not all TLS\
    \ implementations support both modular exponential (MODP)\n   and elliptic curve\
    \ (EC) Diffie-Hellman groups, as required by\n   Section 4.2.  Some implementations\
    \ are severely limited in the length\n   of DH values.  When such implementations\
    \ need to be accommodated, the\n   following are RECOMMENDED (in priority order):\n\
    \   1.  Elliptic Curve DHE with appropriately negotiated parameters\n       (e.g.,\
    \ the curve to be used) and a Message Authentication Code\n       (MAC) algorithm\
    \ stronger than HMAC-SHA1 [RFC5289]\n   2.  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\
    \ [RFC5288], with 2048-bit\n       Diffie-Hellman parameters\n   3.  TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,\
    \ with 1024-bit parameters\n   Rationale: Although Elliptic Curve Cryptography\
    \ is widely deployed,\n   there are some communities where its adoption has been\
    \ limited for\n   several reasons, including its complexity compared to modular\n\
    \   arithmetic and longstanding perceptions of IPR concerns (which, for\n   the\
    \ most part, have now been resolved [RFC6090]).  Note that ECDHE\n   cipher suites\
    \ exist for both RSA and ECDSA certificates, so moving to\n   ECDHE cipher suites\
    \ does not require moving away from RSA-based\n   certificates.  On the other\
    \ hand, there are two related issues\n   hindering effective use of MODP Diffie-Hellman\
    \ cipher suites in TLS:\n   o  There are no standardized, widely implemented protocol\
    \ mechanisms\n      to negotiate the DH groups or parameter lengths supported\
    \ by\n      client and server.\n   o  Many servers choose DH parameters of 1024\
    \ bits or fewer.\n   o  There are widely deployed client implementations that\
    \ reject\n      received DH parameters if they are longer than 1024 bits.  In\n\
    \      addition, several implementations do not perform appropriate\n      validation\
    \ of group parameters and are vulnerable to attacks\n      referenced in Section\
    \ 2.9 of [RFC7457].\n   Note that with DHE and ECDHE cipher suites, the TLS master\
    \ key only\n   depends on the Diffie-Hellman parameters and not on the strength\
    \ of\n   the RSA certificate; moreover, 1024 bit MODP DH parameters are\n   generally\
    \ considered insufficient at this time.\n   With MODP ephemeral DH, deployers\
    \ ought to carefully evaluate\n   interoperability vs. security considerations\
    \ when configuring their\n   TLS endpoints.\n"
- title: 4.5.  Truncated HMAC
  contents:
  - "4.5.  Truncated HMAC\n   Implementations MUST NOT use the Truncated HMAC extension,\
    \ defined in\n   Section 7 of [RFC6066].\n   Rationale: the extension does not\
    \ apply to the AEAD cipher suites\n   recommended above.  However it does apply\
    \ to most other TLS cipher\n   suites.  Its use has been shown to be insecure\
    \ in [PatersonRS11].\n"
- title: 5.  Applicability Statement
  contents:
  - "5.  Applicability Statement\n   The recommendations of this document primarily\
    \ apply to the\n   implementation and deployment of application protocols that\
    \ are most\n   commonly used with TLS and DTLS on the Internet today.  Examples\n\
    \   include, but are not limited to:\n   o  Web software and services that wish\
    \ to protect HTTP traffic with\n      TLS.\n   o  Email software and services\
    \ that wish to protect IMAP, POP3, or\n      SMTP traffic with TLS.\n   o  Instant-messaging\
    \ software and services that wish to protect\n      Extensible Messaging and Presence\
    \ Protocol (XMPP) or Internet\n      Relay Chat (IRC) traffic with TLS.\n   o\
    \  Realtime media software and services that wish to protect Secure\n      Realtime\
    \ Transport Protocol (SRTP) traffic with DTLS.\n   This document does not modify\
    \ the implementation and deployment\n   recommendations (e.g., mandatory-to-implement\
    \ cipher suites)\n   prescribed by existing application protocols that employ\
    \ TLS or DTLS.\n   If the community that uses such an application protocol wishes\
    \ to\n   modernize its usage of TLS or DTLS to be consistent with the best\n \
    \  practices recommended here, it needs to explicitly update the\n   existing\
    \ application protocol definition (one example is [TLS-XMPP],\n   which updates\
    \ [RFC6120]).\n   Designers of new application protocols developed through the\
    \ Internet\n   Standards Process [RFC2026] are expected at minimum to conform\
    \ to the\n   best practices recommended here, unless they provide documentation\
    \ of\n   compelling reasons that would prevent such conformance (e.g.,\n   widespread\
    \ deployment on constrained devices that lack support for\n   the necessary algorithms).\n"
- title: 5.1.  Security Services
  contents:
  - "5.1.  Security Services\n   This document provides recommendations for an audience\
    \ that wishes to\n   secure their communication with TLS to achieve the following:\n\
    \   o  Confidentiality: all application-layer communication is encrypted\n   \
    \   with the goal that no party should be able to decrypt it except\n      the\
    \ intended receiver.\n   o  Data integrity: any changes made to the communication\
    \ in transit\n      are detectable by the receiver.\n   o  Authentication: an\
    \ endpoint of the TLS communication is\n      authenticated as the intended entity\
    \ to communicate with.\n   With regard to authentication, TLS enables authentication\
    \ of one or\n   both endpoints in the communication.  In the context of opportunistic\n\
    \   security [RFC7435], TLS is sometimes used without authentication.  As\n  \
    \ discussed in Section 5.2, considerations for opportunistic security\n   are\
    \ not in scope for this document.\n   If deployers deviate from the recommendations\
    \ given in this document,\n   they need to be aware that they might lose access\
    \ to one of the\n   foregoing security services.\n   This document applies only\
    \ to environments where confidentiality is\n   required.  It recommends algorithms\
    \ and configuration options that\n   enforce secrecy of the data in transit.\n\
    \   This document also assumes that data integrity protection is always\n   one\
    \ of the goals of a deployment.  In cases where integrity is not\n   required,\
    \ it does not make sense to employ TLS in the first place.\n   There are attacks\
    \ against confidentiality-only protection that\n   utilize the lack of integrity\
    \ to also break confidentiality (see, for\n   instance, [DegabrieleP07] in the\
    \ context of IPsec).\n   This document addresses itself to application protocols\
    \ that are most\n   commonly used on the Internet with TLS and DTLS.  Typically,\
    \ all\n   communication between TLS clients and TLS servers requires all three\n\
    \   of the above security services.  This is particularly true where TLS\n   clients\
    \ are user agents like Web browsers or email software.\n   This document does\
    \ not address the rarer deployment scenarios where\n   one of the above three\
    \ properties is not desired, such as the use\n   case described in Section 5.2\
    \ below.  As another scenario where\n   confidentiality is not needed, consider\
    \ a monitored network where the\n   authorities in charge of the respective traffic\
    \ domain require full\n   access to unencrypted (plaintext) traffic, and where\
    \ users\n   collaborate and send their traffic in the clear.\n"
- title: 5.2.  Opportunistic Security
  contents:
  - "5.2.  Opportunistic Security\n   There are several important scenarios in which\
    \ the use of TLS is\n   optional, i.e., the client decides dynamically (\"opportunistically\"\
    )\n   whether to use TLS with a particular server or to connect in the\n   clear.\
    \  This practice, often called \"opportunistic security\", is\n   described at\
    \ length in [RFC7435] and is often motivated by a desire\n   for backward compatibility\
    \ with legacy deployments.\n   In these scenarios, some of the recommendations\
    \ in this document\n   might be too strict, since adhering to them could cause\
    \ fallback to\n   cleartext, a worse outcome than using TLS with an outdated protocol\n\
    \   version or cipher suite.\n   This document specifies best practices for TLS\
    \ in general.  A\n   separate document containing recommendations for the use\
    \ of TLS with\n   opportunistic security is to be completed in the future.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This entire document discusses the security practices\
    \ directly\n   affecting applications using the TLS protocol.  This section contains\n\
    \   broader security considerations related to technologies used in\n   conjunction\
    \ with or by TLS.\n"
- title: 6.1.  Host Name Validation
  contents:
  - "6.1.  Host Name Validation\n   Application authors should take note that some\
    \ TLS implementations do\n   not validate host names.  If the TLS implementation\
    \ they are using\n   does not validate host names, authors might need to write\
    \ their own\n   validation code or consider using a different TLS implementation.\n\
    \   It is noted that the requirements regarding host name validation\n   (and,\
    \ in general, binding between the TLS layer and the protocol that\n   runs above\
    \ it) vary between different protocols.  For HTTPS, these\n   requirements are\
    \ defined by Section 3 of [RFC2818].\n   Readers are referred to [RFC6125] for\
    \ further details regarding\n   generic host name validation in the TLS context.\
    \  In addition, that\n   RFC contains a long list of example protocols, some of\
    \ which\n   implement a policy very different from HTTPS.\n   If the host name\
    \ is discovered indirectly and in an insecure manner\n   (e.g., by an insecure\
    \ DNS query for an MX or SRV record), it SHOULD\n   NOT be used as a reference\
    \ identifier [RFC6125] even when it matches\n   the presented certificate.  This\
    \ proviso does not apply if the host\n   name is discovered securely (for further\
    \ discussion, see [DANE-SRV]\n   and [DANE-SMTP]).\n   Host name validation typically\
    \ applies only to the leaf \"end entity\"\n   certificate.  Naturally, in order\
    \ to ensure proper authentication in\n   the context of the PKI, application clients\
    \ need to verify the entire\n   certification path in accordance with [RFC5280]\
    \ (see also [RFC6125]).\n"
- title: 6.2.  AES-GCM
  contents:
  - "6.2.  AES-GCM\n   Section 4.2 above recommends the use of the AES-GCM authenticated\n\
    \   encryption algorithm.  Please refer to Section 11 of [RFC5246] for\n   general\
    \ security considerations when using TLS 1.2, and to Section 6\n   of [RFC5288]\
    \ for security considerations that apply specifically to\n   AES-GCM when used\
    \ with TLS.\n"
- title: 6.3.  Forward Secrecy
  contents:
  - "6.3.  Forward Secrecy\n   Forward secrecy (also called \"perfect forward secrecy\"\
    \ or \"PFS\" and\n   defined in [RFC4949]) is a defense against an attacker who\
    \ records\n   encrypted conversations where the session keys are only encrypted\n\
    \   with the communicating parties' long-term keys.  Should the attacker\n   be\
    \ able to obtain these long-term keys at some point later in time,\n   the session\
    \ keys and thus the entire conversation could be decrypted.\n   In the context\
    \ of TLS and DTLS, such compromise of long-term keys is\n   not entirely implausible.\
    \  It can happen, for example, due to:\n   o  A client or server being attacked\
    \ by some other attack vector, and\n      the private key retrieved.\n   o  A\
    \ long-term key retrieved from a device that has been sold or\n      otherwise\
    \ decommissioned without prior wiping.\n   o  A long-term key used on a device\
    \ as a default key [Heninger2012].\n   o  A key generated by a trusted third party\
    \ like a CA, and later\n      retrieved from it either by extortion or compromise\n\
    \      [Soghoian2011].\n   o  A cryptographic break-through, or the use of asymmetric\
    \ keys with\n      insufficient length [Kleinjung2010].\n   o  Social engineering\
    \ attacks against system administrators.\n   o  Collection of private keys from\
    \ inadequately protected backups.\n   Forward secrecy ensures in such cases that\
    \ it is not feasible for an\n   attacker to determine the session keys even if\
    \ the attacker has\n   obtained the long-term keys some time after the conversation.\
    \  It\n   also protects against an attacker who is in possession of the long-\n\
    \   term keys but remains passive during the conversation.\n   Forward secrecy\
    \ is generally achieved by using the Diffie-Hellman\n   scheme to derive session\
    \ keys.  The Diffie-Hellman scheme has both\n   parties maintain private secrets\
    \ and send parameters over the network\n   as modular powers over certain cyclic\
    \ groups.  The properties of the\n   so-called Discrete Logarithm Problem (DLP)\
    \ allow the parties to\n   derive the session keys without an eavesdropper being\
    \ able to do so.\n   There is currently no known attack against DLP if sufficiently\
    \ large\n   parameters are chosen.  A variant of the Diffie-Hellman scheme uses\n\
    \   Elliptic Curves instead of the originally proposed modular\n   arithmetics.\n\
    \   Unfortunately, many TLS/DTLS cipher suites were defined that do not\n   feature\
    \ forward secrecy, e.g., TLS_RSA_WITH_AES_256_CBC_SHA256.  This\n   document therefore\
    \ advocates strict use of forward-secrecy-only\n   ciphers.\n"
- title: 6.4.  Diffie-Hellman Exponent Reuse
  contents:
  - "6.4.  Diffie-Hellman Exponent Reuse\n   For performance reasons, many TLS implementations\
    \ reuse Diffie-\n   Hellman and Elliptic Curve Diffie-Hellman exponents across\
    \ multiple\n   connections.  Such reuse can result in major security issues:\n\
    \   o  If exponents are reused for too long (e.g., even more than a few\n    \
    \  hours), an attacker who gains access to the host can decrypt\n      previous\
    \ connections.  In other words, exponent reuse negates the\n      effects of forward\
    \ secrecy.\n   o  TLS implementations that reuse exponents should test the DH\
    \ public\n      key they receive for group membership, in order to avoid some\n\
    \      known attacks.  These tests are not standardized in TLS at the\n      time\
    \ of writing.  See [RFC6989] for recipient tests required of\n      IKEv2 implementations\
    \ that reuse DH exponents.\n"
- title: 6.5.  Certificate Revocation
  contents:
  - "6.5.  Certificate Revocation\n   The following considerations and recommendations\
    \ represent the\n   current state of the art regarding certificate revocation,\
    \ even\n   though no complete and efficient solution exists for the problem of\n\
    \   checking the revocation status of common public key certificates\n   [RFC5280]:\n\
    \   o  Although Certificate Revocation Lists (CRLs) are the most widely\n    \
    \  supported mechanism for distributing revocation information, they\n      have\
    \ known scaling challenges that limit their usefulness (despite\n      workarounds\
    \ such as partitioned CRLs and delta CRLs).\n   o  Proprietary mechanisms that\
    \ embed revocation lists in the Web\n      browser's configuration database cannot\
    \ scale beyond a small\n      number of the most heavily used Web servers.\n \
    \  o  The On-Line Certification Status Protocol (OCSP) [RFC6960]\n      presents\
    \ both scaling and privacy issues.  In addition, clients\n      typically \"soft-fail\"\
    , meaning that they do not abort the TLS\n      connection if the OCSP server\
    \ does not respond.  (However, this\n      might be a workaround to avoid denial-of-service\
    \ attacks if an\n      OCSP responder is taken offline.)\n   o  The TLS Certificate\
    \ Status Request extension (Section 8 of\n      [RFC6066]), commonly called \"\
    OCSP stapling\", resolves the\n      operational issues with OCSP.  However, it\
    \ is still ineffective in\n      the presence of a MITM attacker because the attacker\
    \ can simply\n      ignore the client's request for a stapled OCSP response.\n\
    \   o  OCSP stapling as defined in [RFC6066] does not extend to\n      intermediate\
    \ certificates used in a certificate chain.  Although\n      the Multiple Certificate\
    \ Status extension [RFC6961] addresses this\n      shortcoming, it is a recent\
    \ addition without much deployment.\n   o  Both CRLs and OCSP depend on relatively\
    \ reliable connectivity to\n      the Internet, which might not be available to\
    \ certain kinds of\n      nodes (such as newly provisioned devices that need to\
    \ establish a\n      secure connection in order to boot up for the first time).\n\
    \   With regard to common public key certificates, servers SHOULD support\n  \
    \ the following as a best practice given the current state of the art\n   and\
    \ as a foundation for a possible future solution:\n   1.  OCSP [RFC6960]\n   2.\
    \  Both the status_request extension defined in [RFC6066] and the\n       status_request_v2\
    \ extension defined in [RFC6961] (This might\n       enable interoperability with\
    \ the widest range of clients.)\n   3.  The OCSP stapling extension defined in\
    \ [RFC6961]\n   The considerations in this section do not apply to scenarios where\n\
    \   the DANE-TLSA resource record [RFC6698] is used to signal to a client\n  \
    \ which certificate a server considers valid and good to use for TLS\n   connections.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2818]\
    \  Rescorla, E., \"HTTP Over TLS\", RFC 2818, May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n\
    \   [RFC3766]  Orman, H. and P. Hoffman, \"Determining Strengths For\n       \
    \       Public Keys Used For Exchanging Symmetric Keys\", BCP 86,\n          \
    \    RFC 3766, April 2004,\n              <http://www.rfc-editor.org/info/rfc3766>.\n\
    \   [RFC4492]  Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk, C., and B.\n  \
    \            Moeller, \"Elliptic Curve Cryptography (ECC) Cipher Suites\n    \
    \          for Transport Layer Security (TLS)\", RFC 4492, May 2006,\n       \
    \       <http://www.rfc-editor.org/info/rfc4492>.\n   [RFC4949]  Shirey, R., \"\
    Internet Security Glossary, Version 2\", FYI\n              36, RFC 4949, August\
    \ 2007,\n              <http://www.rfc-editor.org/info/rfc4949>.\n   [RFC5246]\
    \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)\
    \ Protocol Version 1.2\", RFC 5246, August 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n\
    \   [RFC5288]  Salowey, J., Choudhury, A., and D. McGrew, \"AES Galois\n     \
    \         Counter Mode (GCM) Cipher Suites for TLS\", RFC 5288,\n            \
    \  August 2008, <http://www.rfc-editor.org/info/rfc5288>.\n   [RFC5289]  Rescorla,\
    \ E., \"TLS Elliptic Curve Cipher Suites with SHA-\n              256/384 and\
    \ AES Galois Counter Mode (GCM)\", RFC 5289,\n              August 2008, <http://www.rfc-editor.org/info/rfc5289>.\n\
    \   [RFC5746]  Rescorla, E., Ray, M., Dispensa, S., and N. Oskov,\n          \
    \    \"Transport Layer Security (TLS) Renegotiation Indication\n             \
    \ Extension\", RFC 5746, February 2010,\n              <http://www.rfc-editor.org/info/rfc5746>.\n\
    \   [RFC6066]  Eastlake 3rd, D., \"Transport Layer Security (TLS)\n          \
    \    Extensions: Extension Definitions\", RFC 6066, January\n              2011,\
    \ <http://www.rfc-editor.org/info/rfc6066>.\n   [RFC6125]  Saint-Andre, P. and\
    \ J. Hodges, \"Representation and\n              Verification of Domain-Based\
    \ Application Service Identity\n              within Internet Public Key Infrastructure\
    \ Using X.509\n              (PKIX) Certificates in the Context of Transport Layer\n\
    \              Security (TLS)\", RFC 6125, March 2011,\n              <http://www.rfc-editor.org/info/rfc6125>.\n\
    \   [RFC6176]  Turner, S. and T. Polk, \"Prohibiting Secure Sockets Layer\n  \
    \            (SSL) Version 2.0\", RFC 6176, March 2011,\n              <http://www.rfc-editor.org/info/rfc6176>.\n\
    \   [RFC6347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n    \
    \          Security Version 1.2\", RFC 6347, January 2012,\n              <http://www.rfc-editor.org/info/rfc6347>.\n\
    \   [RFC7465]  Popov, A., \"Prohibiting RC4 Cipher Suites\", RFC 7465,\n     \
    \         February 2015, <http://www.rfc-editor.org/info/rfc7465>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [BETTERCRYPTO]\n              bettercrypto.org,\
    \ \"Applied Crypto Hardening\", April 2015,\n              <https://bettercrypto.org/static/\n\
    \              applied-crypto-hardening.pdf>.\n   [CAB-Baseline]\n           \
    \   CA/Browser Forum, \"Baseline Requirements for the Issuance\n             \
    \ and Management of Publicly-Trusted Certificates Version\n              1.1.6\"\
    , 2013, <https://www.cabforum.org/documents.html>.\n   [DANE-SMTP]\n         \
    \     Dukhovni, V. and W. Hardaker, \"SMTP security via\n              opportunistic\
    \ DANE TLS\", Work in Progress, draft-ietf-\n              dane-smtp-with-dane-16,\
    \ April 2015.\n   [DANE-SRV] Finch, T., Miller, M., and P. Saint-Andre, \"Using\
    \ DNS-\n              Based Authentication of Named Entities (DANE) TLSA Records\n\
    \              with SRV Records\", Work in Progress,\n              draft-ietf-dane-srv-14,\
    \ April 2015.\n   [DEP-SSLv3]\n              Barnes, R., Thomson, M., Pironti,\
    \ A., and A. Langley,\n              \"Deprecating Secure Sockets Layer Version\
    \ 3.0\", Work in\n              Progress, draft-ietf-tls-sslv3-diediedie-03, April\
    \ 2015.\n   [DegabrieleP07]\n              Degabriele, J. and K. Paterson, \"\
    Attacking the IPsec\n              Standards in Encryption-only Configurations\"\
    , IEEE\n              Symposium on Security and Privacy (SP '07), 2007,\n    \
    \          <http://dx.doi.org/10.1109/SP.2007.8>.\n   [ECRYPT-II]\n          \
    \    Smart, N., \"ECRYPT II Yearly Report on Algorithms and\n              Keysizes\
    \ (2011-2012)\", 2012,\n              <http://www.ecrypt.eu.org/ecrypt2/>.\n \
    \  [Heninger2012]\n              Heninger, N., Durumeric, Z., Wustrow, E., and\
    \ J.\n              Halderman, \"Mining Your Ps and Qs: Detection of Widespread\n\
    \              Weak Keys in Network Devices\", Usenix Security Symposium\n   \
    \           2012, 2012.\n   [IANA-TLS] IANA, \"Transport Layer Security (TLS)\
    \ Parameters\",\n              <http://www.iana.org/assignments/tls-parameters>.\n\
    \   [Kleinjung2010]\n              Kleinjung, T., \"Factorization of a 768-Bit\
    \ RSA modulus\",\n              CRYPTO 10, 2010, <https://eprint.iacr.org/2010/006.pdf>.\n\
    \   [Krawczyk2001]\n              Krawczyk, H., \"The Order of Encryption and\
    \ Authentication\n              for Protecting Communications (Or: How Secure\
    \ is SSL?)\",\n              CRYPTO 01, 2001,\n              <https://www.iacr.org/archive/crypto2001/21390309.pdf>.\n\
    \   [Multiple-Encryption]\n              Merkle, R. and M. Hellman, \"On the security\
    \ of multiple\n              encryption\", Communications of the ACM, Vol. 24,\
    \ 1981,\n              <http://dl.acm.org/citation.cfm?id=358718>.\n   [NIST.SP.800-56A]\n\
    \              Barker, E., Chen, L., Roginsky, A., and M. Smid,\n            \
    \  \"Recommendation for Pair-Wise Key Establishment Schemes\n              Using\
    \ Discrete Logarithm Cryptography\", NIST Special\n              Publication 800-56A,\
    \ 2013,\n              <http://nvlpubs.nist.gov/nistpubs/SpecialPublications/\n\
    \              NIST.SP.800-56Ar2.pdf>.\n   [POODLE]   US-CERT, \"SSL 3.0 Protocol\
    \ Vulnerability and POODLE\n              Attack\", Alert TA14-290A, October 2014,\n\
    \              <https://www.us-cert.gov/ncas/alerts/TA14-290A>.\n   [PatersonRS11]\n\
    \              Paterson, K., Ristenpart, T., and T. Shrimpton, \"Tag size\n  \
    \            does matter: attacks and proofs for the TLS record\n            \
    \  protocol\", 2011,\n              <http://dx.doi.org/10.1007/978-3-642-25385-0_20>.\n\
    \   [RFC2026]  Bradner, S., \"The Internet Standards Process -- Revision\n   \
    \           3\", BCP 9, RFC 2026, October 1996,\n              <http://www.rfc-editor.org/info/rfc2026>.\n\
    \   [RFC2246]  Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\",\n  \
    \            RFC 2246, January 1999,\n              <http://www.rfc-editor.org/info/rfc2246>.\n\
    \   [RFC3602]  Frankel, S., Glenn, R., and S. Kelly, \"The AES-CBC Cipher\n  \
    \            Algorithm and Its Use with IPsec\", RFC 3602, September\n       \
    \       2003, <http://www.rfc-editor.org/info/rfc3602>.\n   [RFC4346]  Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.1\", RFC 4346, April 2006,\n              <http://www.rfc-editor.org/info/rfc4346>.\n\
    \   [RFC4347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n    \
    \          Security\", RFC 4347, April 2006,\n              <http://www.rfc-editor.org/info/rfc4347>.\n\
    \   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and H. Tschofenig,\n       \
    \       \"Transport Layer Security (TLS) Session Resumption without\n        \
    \      Server-Side State\", RFC 5077, January 2008,\n              <http://www.rfc-editor.org/info/rfc5077>.\n\
    \   [RFC5116]  McGrew, D., \"An Interface and Algorithms for Authenticated\n \
    \             Encryption\", RFC 5116, January 2008,\n              <http://www.rfc-editor.org/info/rfc5116>.\n\
    \   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n         \
    \     Housley, R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure\
    \ Certificate and Certificate Revocation List\n              (CRL) Profile\",\
    \ RFC 5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC6090]  McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic\n \
    \             Curve Cryptography Algorithms\", RFC 6090, February 2011,\n    \
    \          <http://www.rfc-editor.org/info/rfc6090>.\n   [RFC6101]  Freier, A.,\
    \ Karlton, P., and P. Kocher, \"The Secure\n              Sockets Layer (SSL)\
    \ Protocol Version 3.0\", RFC 6101,\n              August 2011, <http://www.rfc-editor.org/info/rfc6101>.\n\
    \   [RFC6120]  Saint-Andre, P., \"Extensible Messaging and Presence\n        \
    \      Protocol (XMPP): Core\", RFC 6120, March 2011,\n              <http://www.rfc-editor.org/info/rfc6120>.\n\
    \   [RFC6460]  Salter, M. and R. Housley, \"Suite B Profile for Transport\n  \
    \            Layer Security (TLS)\", RFC 6460, January 2012,\n              <http://www.rfc-editor.org/info/rfc6460>.\n\
    \   [RFC6698]  Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n \
    \             of Named Entities (DANE) Transport Layer Security (TLS)\n      \
    \        Protocol: TLSA\", RFC 6698, August 2012,\n              <http://www.rfc-editor.org/info/rfc6698>.\n\
    \   [RFC6797]  Hodges, J., Jackson, C., and A. Barth, \"HTTP Strict\n        \
    \      Transport Security (HSTS)\", RFC 6797, November 2012,\n              <http://www.rfc-editor.org/info/rfc6797>.\n\
    \   [RFC6960]  Santesson, S., Myers, M., Ankney, R., Malpani, A.,\n          \
    \    Galperin, S., and C. Adams, \"X.509 Internet Public Key\n              Infrastructure\
    \ Online Certificate Status Protocol - OCSP\",\n              RFC 6960, June 2013,\n\
    \              <http://www.rfc-editor.org/info/rfc6960>.\n   [RFC6961]  Pettersen,\
    \ Y., \"The Transport Layer Security (TLS)\n              Multiple Certificate\
    \ Status Request Extension\", RFC 6961,\n              June 2013, <http://www.rfc-editor.org/info/rfc6961>.\n\
    \   [RFC6989]  Sheffer, Y. and S. Fluhrer, \"Additional Diffie-Hellman\n     \
    \         Tests for the Internet Key Exchange Protocol Version 2\n           \
    \   (IKEv2)\", RFC 6989, July 2013,\n              <http://www.rfc-editor.org/info/rfc6989>.\n\
    \   [RFC7435]  Dukhovni, V., \"Opportunistic Security: Some Protection\n     \
    \         Most of the Time\", RFC 7435, December 2014,\n              <http://www.rfc-editor.org/info/rfc7435>.\n\
    \   [RFC7457]  Sheffer, Y., Holz, R., and P. Saint-Andre, \"Summarizing\n    \
    \          Known Attacks on Transport Layer Security (TLS) and\n             \
    \ Datagram TLS (DTLS)\", RFC 7457, February 2015,\n              <http://www.rfc-editor.org/info/rfc7457>.\n\
    \   [RFC7507]  Moeller, B. and A. Langley, \"TLS Fallback Signaling Cipher\n \
    \             Suite Value (SCSV) for Preventing Protocol Downgrade\n         \
    \     Attacks\", RFC 7507, April 2015.\n   [SESSION-HASH]\n              Bhargavan,\
    \ K., Ed., Delignat-Lavaud, A., Pironti, A.,\n              Langley, A., and M.\
    \ Ray, \"Transport Layer Security (TLS)\n              Session Hash and Extended\
    \ Master Secret Extension\", Work\n              in Progress, draft-ietf-tls-session-hash-05,\
    \ April 2015.\n   [Smith2013]\n              Smith, B., \"Proposal to Change the\
    \ Default TLS\n              Ciphersuites Offered by Browsers.\", 2013,\n    \
    \          <https://briansmith.org/browser-ciphersuites-01.html>.\n   [Soghoian2011]\n\
    \              Soghoian, C. and S. Stamm, \"Certified lies: Detecting and\n  \
    \            defeating government interception attacks against SSL\",\n      \
    \        Proc. 15th Int. Conf. Financial Cryptography and Data\n             \
    \ Security, 2011.\n   [TLS-XMPP] Saint-Andre, P. and a. alkemade, \"Use of Transport\
    \ Layer\n              Security (TLS) in the Extensible Messaging and Presence\n\
    \              Protocol (XMPP)\", Work in Progress,\n              draft-ietf-uta-xmpp-07,\
    \ April 2015.\n   [triple-handshake]\n              Delignat-Lavaud, A., Bhargavan,\
    \ K., and A. Pironti,\n              \"Triple Handshakes Considered Harmful: Breaking\
    \ and Fixing\n              Authentication over TLS\", 2014,\n              <https://secure-resumption.com/>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to RJ Atkinson, Uri Blumenthal, Viktor Dukhovni, Stephen\n\
    \   Farrell, Daniel Kahn Gillmor, Paul Hoffman, Simon Josefsson, Watson\n   Ladd,\
    \ Orit Levin, Ilari Liusvaara, Johannes Merkle, Bodo Moeller,\n   Yoav Nir, Massimiliano\
    \ Pala, Kenny Paterson, Patrick Pelletier, Tom\n   Ritter, Joe St. Sauver, Joe\
    \ Salowey, Rich Salz, Brian Smith, Sean\n   Turner, and Aaron Zauner for their\
    \ feedback and suggested\n   improvements.  Thanks also to Brian Smith, who has\
    \ provided a great\n   resource in his \"Proposal to Change the Default TLS Ciphersuites\n\
    \   Offered by Browsers\" [Smith2013].  Finally, thanks to all others who\n  \
    \ commented on the TLS, UTA, and other discussion lists but who are not\n   mentioned\
    \ here by name.\n   Robert Sparks and Dave Waltermire provided helpful reviews\
    \ on behalf\n   of the General Area Review Team and the Security Directorate,\n\
    \   respectively.\n   During IESG review, Richard Barnes, Alissa Cooper, Spencer\
    \ Dawkins,\n   Stephen Farrell, Barry Leiba, Kathleen Moriarty, and Pete Resnick\n\
    \   provided comments that led to further improvements.\n   Ralph Holz gratefully\
    \ acknowledges the support by Technische\n   Universitaet Muenchen.  The authors\
    \ gratefully acknowledge the\n   assistance of Leif Johansson and Orit Levin as\
    \ the working group\n   chairs and Pete Resnick as the sponsoring Area Director.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Yaron Sheffer\n   Intuit\n   4 HaHarash St.\n   Hod HaSharon\
    \  4524075\n   Israel\n   EMail: yaronf.ietf@gmail.com\n   Ralph Holz\n   NICTA\n\
    \   13 Garden St.\n   Eveleigh 2015 NSW\n   Australia\n   EMail: ralph.ietf@gmail.com\n\
    \   Peter Saint-Andre\n   &yet\n   EMail: peter@andyet.com\n   URI:   https://andyet.com/\n"
