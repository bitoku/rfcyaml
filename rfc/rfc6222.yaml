- title: __initial_text__
  contents:
  - "          Guidelines for Choosing RTP Control Protocol (RTCP)\n             \
    \           Canonical Names (CNAMEs)\n"
- title: Abstract
  contents:
  - "Abstract\n   The RTP Control Protocol (RTCP) Canonical Name (CNAME) is a\n  \
    \ persistent transport-level identifier for an RTP endpoint.  While the\n   Synchronization\
    \ Source (SSRC) identifier of an RTP endpoint may\n   change if a collision is\
    \ detected or when the RTP application is\n   restarted, its RTCP CNAME is meant\
    \ to stay unchanged, so that RTP\n   endpoints can be uniquely identified and\
    \ associated with their RTP\n   media streams.  For proper functionality, RTCP\
    \ CNAMEs should be\n   unique within the participants of an RTP session.  However,\
    \ the\n   existing guidelines for choosing the RTCP CNAME provided in the RTP\n\
    \   standard are insufficient to achieve this uniqueness.  This memo\n   updates\
    \ those guidelines to allow endpoints to choose unique RTCP\n   CNAMEs.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6222.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Requirements Notation ...........................................2\n  \
    \ 3. Deficiencies with Earlier Guidelines for Choosing an\n      RTCP CNAME ......................................................3\n\
    \   4. Choosing an RTCP CNAME ..........................................3\n  \
    \    4.1. Persistent RTCP CNAMEs versus Per-Session RTCP CNAMEs ......4\n    \
    \  4.2. Requirements ...............................................5\n   5. Procedure\
    \ to Generate a Unique Identifier .......................6\n   6. Security Considerations\
    \ .........................................7\n      6.1. Considerations on Uniqueness\
    \ of RTCP CNAMEs ................7\n      6.2. Session Correlation Based on RTCP\
    \ CNAMEs ...................7\n   7. Acknowledgments .................................................8\n\
    \   8. References ......................................................8\n  \
    \    8.1. Normative References .......................................8\n    \
    \  8.2. Informative References .....................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In Section 6.5.1 of the RTP specification, [RFC3550], there\
    \ are a\n   number of recommendations for choosing a unique RTCP CNAME for an\
    \ RTP\n   endpoint.  However, in practice, some of these methods are not\n   guaranteed\
    \ to produce a unique RTCP CNAME.  This memo updates\n   guidelines for choosing\
    \ RTCP CNAMEs, superseding those presented in\n   Section 6.5.1 of [RFC3550].\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n"
- title: 3.  Deficiencies with Earlier Guidelines for Choosing an RTCP CNAME
  contents:
  - "3.  Deficiencies with Earlier Guidelines for Choosing an RTCP CNAME\n   The recommendation\
    \ in [RFC3550] is to generate an RTCP CNAME of the\n   form \"user@host\" for\
    \ multiuser systems, or \"host\" if the username is\n   not available.  The \"\
    host\" part is specified to be the fully\n   qualified domain name (FQDN) of the\
    \ host from which the real-time\n   data originates.  While this guidance was\
    \ appropriate at the time\n   [RFC3550] was written, FQDNs are no longer necessarily\
    \ unique and can\n   sometimes be common across several endpoints in large service\n\
    \   provider networks.  This document replaces the use of FQDN as an RTCP\n  \
    \ CNAME by alternative mechanisms.\n   IPv4 addresses are also suggested for use\
    \ in RTCP CNAMEs in\n   [RFC3550], where the \"host\" part of the RTCP CNAME is\
    \ the numeric\n   representation of the IPv4 address of the interface from which\
    \ the\n   RTP data originates.  As noted in [RFC3550], the use of private\n  \
    \ network address space [RFC1918] can result in hosts having network\n   addresses\
    \ that are not globally unique.  Additionally, this shared\n   use of the same\
    \ IPv4 address can also occur with public IPv4\n   addresses if multiple hosts\
    \ are assigned the same public IPv4 address\n   and connected to a Network Address\
    \ Translation (NAT) device\n   [RFC3022].  When multiple hosts share the same\
    \ IPv4 address, whether\n   private or public, using the IPv4 address as the RTCP\
    \ CNAME leads to\n   RTCP CNAMEs that are not necessarily unique.\n   It is also\
    \ noted in [RFC3550] that if hosts with private addresses\n   and no direct IP\
    \ connectivity to the public Internet have their RTP\n   packets forwarded to\
    \ the public Internet through an RTP-level\n   translator, they could end up having\
    \ non-unique RTCP CNAMEs.  The\n   suggestion in [RFC3550] is that such applications\
    \ provide a\n   configuration option to allow the user to choose a unique RTCP\
    \ CNAME;\n   this technique puts the burden on the translator to translate RTCP\n\
    \   CNAMEs from private addresses to public addresses if necessary to\n   keep\
    \ private addresses from being exposed.  Experience has shown that\n   this does\
    \ not work well in practice.\n"
- title: 4.  Choosing an RTCP CNAME
  contents:
  - "4.  Choosing an RTCP CNAME\n   It is difficult, and in some cases impossible,\
    \ for a host to\n   determine if there is a NAT between itself and its RTP peer.\n\
    \   Furthermore, even some public IPv4 addresses can be shared by\n   multiple\
    \ hosts in the Internet.  Using the numeric representation of\n   the IPv4 address\
    \ as the \"host\" part of the RTCP CNAME is NOT\n   RECOMMENDED.\n"
- title: 4.1.  Persistent RTCP CNAMEs versus Per-Session RTCP CNAMEs
  contents:
  - "4.1.  Persistent RTCP CNAMEs versus Per-Session RTCP CNAMEs\n   The RTCP CNAME\
    \ can be either persistent across different RTP sessions\n   for an RTP endpoint\
    \ or unique per session, meaning that an RTP\n   endpoint chooses a different\
    \ RTCP CNAME for each RTP session.\n   An RTP endpoint that is emitting multiple\
    \ related RTP streams that\n   require synchronization at the other endpoint(s)\
    \ MUST use the same\n   RTCP CNAME for all streams that are to be synchronized.\
    \  This\n   requires a short-term persistent RTCP CNAME that is common across\n\
    \   several RTP streams, and potentially across several related RTP\n   sessions.\
    \  A common example of such use occurs when lip-syncing audio\n   and video streams\
    \ in a multimedia session, where a single participant\n   has to use the same\
    \ RTCP CNAME for its audio RTP session and for its\n   video RTP session.  Another\
    \ example might be to synchronize the\n   layers of a layered audio codec, where\
    \ the same RTCP CNAME has to be\n   used for each layer.\n   A longer-term persistent\
    \ RTCP CNAME is sometimes useful to facilitate\n   third-party monitoring, consistent\
    \ with [RFC3550].  One such use\n   might be to allow network management tools\
    \ to correlate the ongoing\n   quality of service for a participant across multiple\
    \ RTP sessions for\n   fault diagnosis, and to understand long-term network performance\n\
    \   statistics.  An implementation that wishes to discourage this type of\n  \
    \ third-party monitoring can generate a unique RTCP CNAME for each RTP\n   session,\
    \ or group of related RTP sessions, that it joins.  Such a\n   per-session RTCP\
    \ CNAME cannot be used for traffic analysis, and so\n   provides some limited\
    \ form of privacy (note that there are non-RTP\n   means that can be used by a\
    \ third party to correlate RTP sessions, so\n   the use of per-session RTCP CNAMEs\
    \ will not prevent a determined\n   traffic analyst from monitoring such sessions).\n\
    \   This memo defines several different ways by which an implementation\n   can\
    \ choose an RTCP CNAME.  It is possible, and legitimate, for\n   independent implementations\
    \ to make different choices of RTCP CNAME\n   when running on the same host. \
    \ This can hinder third-party\n   monitoring, unless some external means is provided\
    \ to configure a\n   persistent choice of RTCP CNAME for those implementations.\n\
    \   Note that there is no backwards compatibility issue (with [RFC3550]-\n   compatible\
    \ implementations) introduced in this memo, since the RTCP\n   CNAMEs are opaque\
    \ strings to remote peers.\n"
- title: 4.2.  Requirements
  contents:
  - "4.2.  Requirements\n   RTP endpoints will choose to generate RTCP CNAMEs that\
    \ are persistent\n   or per-session.  An RTP endpoint that wishes to generate\
    \ a persistent\n   RTCP CNAME MUST use one of the following two methods:\n   o\
    \  To produce a long-term persistent RTCP CNAME, an RTP endpoint MUST\n      generate\
    \ and store a Universally Unique IDentifier (UUID)\n      [RFC4122] for use as\
    \ the \"host\" part of its RTCP CNAME.  The UUID\n      MUST be version 1, 2,\
    \ or 4, as described in [RFC4122], with the\n      \"urn:uuid:\" stripped, resulting\
    \ in a 36-octet printable string\n      representation.\n   o  To produce a short-term\
    \ persistent RTCP CNAME, an RTP endpoint\n      MUST either (a) use the numeric\
    \ representation of the layer-2\n      (Media Access Control (MAC)) address of\
    \ the interface that is used\n      to initiate the RTP session as the \"host\"\
    \ part of its RTCP CNAME\n      or (b) generate and use an identifier by following\
    \ the procedure\n      described in Section 5.  In either case, the procedure\
    \ is\n      performed once per initialization of the software.  After\n      obtaining\
    \ an identifier by doing (a) or (b), the least significant\n      48 bits are\
    \ converted to the standard colon-separated hexadecimal\n      format [RFC5342],\
    \ e.g., \"00:23:32:af:9b:aa\", resulting in a\n      17-octet printable string\
    \ representation.\n   In the two cases above, the \"user@\" part of the RTCP CNAME\
    \ MAY be\n   omitted on single-user systems and MAY be replaced by an opaque token\n\
    \   on multi-user systems, to preserve privacy.\n   An RTP endpoint that wishes\
    \ to generate a per-session RTCP CNAME MUST\n   use the following method:\n  \
    \ o  For every new RTP session, a new CNAME is generated following the\n     \
    \ procedure described in Section 5.  After performing that\n      procedure, the\
    \ least significant 96 bits are used to generate an\n      identifier (to compromise\
    \ between packet size and security), which\n      is converted to ASCII using\
    \ Base64 encoding [RFC4648].  This\n      results in a 16-octet string representation.\
    \  The RTCP CNAME\n      cannot change over the life of an RTP session [RFC3550];\
    \ hence,\n      only the initial SSRC value chosen by the endpoint is used.  The\n\
    \      \"user@\" part of the RTCP CNAME is omitted when generating\n      per-session\
    \ RTCP CNAMEs.\n   It is believed that obtaining uniqueness (with a high probability)\
    \ is\n   an important property that requires careful evaluation of the method.\n\
    \   This document provides a number of methods, at least one of which\n   would\
    \ be suitable for all deployment scenarios.  This document\n   therefore does\
    \ not provide for the implementor to define and select\n   an alternative method.\n\
    \   A future specification might define an alternative method for\n   generating\
    \ RTCP CNAMEs, as long as the proposed method has\n   appropriate uniqueness and\
    \ there is consistency between the methods\n   used for multiple RTP sessions\
    \ that are to be correlated.  However,\n   such a specification needs to be reviewed\
    \ and approved before\n   deployment.\n   The mechanisms described in this document\
    \ are to be used to generate\n   RTCP CNAMEs, and they are not to be used for\
    \ generating general-\n   purpose unique identifiers.\n"
- title: 5.  Procedure to Generate a Unique Identifier
  contents:
  - "5.  Procedure to Generate a Unique Identifier\n   The algorithm described below\
    \ is intended to be used for locally\n   generated unique identifiers.\n   1.\
    \  Obtain the current time of day in 64-bit NTP format [RFC5905].\n   2.  Obtain\
    \ a modified EUI-64 identifier from the system running this\n       algorithm\
    \ [RFC4291].  If such a system does not exist, an\n       identifier can be created\
    \ from a 48-bit MAC address, as specified\n       in [RFC4291].  If one cannot\
    \ be obtained or created, a suitably\n       unique identifier, local to the node,\
    \ should be used (e.g.,\n       system serial number).\n   3.  Concatenate the\
    \ time of day with the system-specific identifier\n       in order to create a\
    \ key.\n   4.  If generating a per-session CNAME, also concatenate the RTP\n \
    \      endpoint's initial SSRC, the source and destination IP addresses,\n   \
    \    and ports to the key.\n   5.  Compute the 256-bit output of the SHA-256 digest\
    \ of the key, as\n       specified in [RFC4634].\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The security considerations of [RFC3550] apply\
    \ to this memo.\n"
- title: 6.1.  Considerations on Uniqueness of RTCP CNAMEs
  contents:
  - "6.1.  Considerations on Uniqueness of RTCP CNAMEs\n   The recommendations given\
    \ in this document for RTCP CNAME generation\n   ensure that a set of cooperating\
    \ participants in an RTP session will,\n   with very high probability, have unique\
    \ RTCP CNAMEs.  However,\n   neither [RFC3550] nor this document provides any\
    \ way to ensure that\n   participants will choose RTCP CNAMEs appropriately, and\
    \ thus\n   implementations MUST NOT rely on the uniqueness of CNAMEs for any\n\
    \   essential security services.  This is consistent with [RFC3550],\n   which\
    \ does not require that RTCP CNAMEs are unique within a session\n   but instead\
    \ says that condition SHOULD hold.  As described in the\n   Security Considerations\
    \ section of [RFC3550], because each\n   participant in a session is free to choose\
    \ its own RTCP CNAME, they\n   can do so in such a way as to impersonate another\
    \ participant.  That\n   is, participants are trusted to not impersonate each\
    \ other.  No\n   recommendation for generating RTCP CNAMEs can prevent this\n\
    \   impersonation, because an attacker can neglect the stipulation.\n   Secure\
    \ RTP (SRTP) [RFC3711] keeps unauthorized entities out of an RTP\n   session,\
    \ but it does not aim to prevent impersonation attacks from\n   unauthorized entities.\n\
    \   This document uses a hash function to ensure the uniqueness of RTCP\n   CNAMEs.\
    \  A cryptographic hash function is used because such functions\n   provide the\
    \ randomness properties that are needed.  However, no\n   security assumptions\
    \ are made on the hash function.  The hash\n   function is not assumed to be collision\
    \ resistant, preimage\n   resistant, or second preimage resistant in an adversarial\
    \ setting; as\n   described above, an attacker attempting an impersonation attack\
    \ could\n   merely set the RTCP CNAME directly rather than attacking the hash\n\
    \   function.  Similarly, the hash function is not assumed to be a one-\n   way\
    \ function or pseudorandom in a cryptographic sense.\n   No confidentiality is\
    \ provided on the data used as input to the RTCP\n   CNAME generation algorithm.\
    \  It might be possible for an attacker who\n   observes an RTCP CNAME to determine\
    \ the inputs that were used to\n   generate that value.\n"
- title: 6.2.  Session Correlation Based on RTCP CNAMEs
  contents:
  - "6.2.  Session Correlation Based on RTCP CNAMEs\n   In some environments, notably\
    \ telephony, a fixed RTCP CNAME value\n   allows separate RTP sessions to be correlated\
    \ and eliminates the\n   obfuscation provided by IPv6 privacy addresses [RFC4941]\
    \ or IPv4\n   Network Address Port Translation (NAPT) [RFC3022].  SRTP [RFC3711]\n\
    \   can help prevent such correlation by encrypting Secure RTCP (SRTCP),\n   but\
    \ it should be noted that SRTP only mandates SRTCP integrity\n   protection (not\
    \ encryption).  Thus, RTP applications used in such\n   environments should consider\
    \ encrypting their SRTCP or generate a\n   per-session RTCP CNAME as discussed\
    \ in Section 4.1.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   Thanks to Marc Petit-Huguenin, who suggested using UUIDs\
    \ in\n   generating RTCP CNAMEs.  Also, thanks to David McGrew for providing\n\
    \   text for the Security Considerations section.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC3550]  Schulzrinne, H., Casner, S., Frederick,\
    \ R., and V.\n              Jacobson, \"RTP: A Transport Protocol for Real-Time\n\
    \              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC4122]  Leach, P., Mealling, M., and R.\
    \ Salz, \"A Universally\n              Unique IDentifier (UUID) URN Namespace\"\
    , RFC 4122,\n              July 2005.\n   [RFC4634]  Eastlake 3rd, D. and T. Hansen,\
    \ \"US Secure Hash Algorithms\n              (SHA and HMAC-SHA)\", RFC 4634, July\
    \ 2006.\n   [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n\
    \              Encodings\", RFC 4648, October 2006.\n   [RFC5905]  Mills, D.,\
    \ Martin, J., Ed., Burbank, J., and W. Kasch,\n              \"Network Time Protocol\
    \ Version 4: Protocol and Algorithms\n              Specification\", RFC 5905,\
    \ June 2010.\n   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \              Architecture\", RFC 4291, February 2006.\n   [RFC5342]  Eastlake\
    \ 3rd, D., \"IANA Considerations and IETF Protocol\n              Usage for IEEE\
    \ 802 Parameters\", BCP 141, RFC 5342,\n              September 2008.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC3022]  Srisuresh,\
    \ P. and K. Egevang, \"Traditional IP Network\n              Address Translator\
    \ (Traditional NAT)\", RFC 3022,\n              January 2001.\n   [RFC3711]  Baugher,\
    \ M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman, \"\
    The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711, March\
    \ 2004.\n   [RFC4941]  Narten, T., Draves, R., and S. Krishnan, \"Privacy\n  \
    \            Extensions for Stateless Address Autoconfiguration in\n         \
    \     IPv6\", RFC 4941, September 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ali Begen\n   Cisco\n   181 Bay Street\n   Toronto, ON\
    \  M5J 2T3\n   CANADA\n   EMail:  abegen@cisco.com\n   Colin Perkins\n   University\
    \ of Glasgow\n   School of Computing Science\n   Glasgow  G12 8QQ\n   UK\n   EMail:\
    \  csp@csperkins.org\n   Dan Wing\n   Cisco Systems, Inc.\n   170 West Tasman\
    \ Dr.\n   San Jose, CA  95134\n   USA\n   EMail:  dwing@cisco.com\n"
