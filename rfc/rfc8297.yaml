- title: __initial_text__
  contents:
  - '                An HTTP Status Code for Indicating Hints

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo introduces an informational HTTP status code that can\
    \ be\n   used to convey hints that help a client make preparations for\n   processing\
    \ the final response.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8297.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Notational Conventions  . . . . . . . . . . . . .\
    \ . . . .   3\n   2.  HTTP Status Code 103: Early Hints . . . . . . . . . . .\
    \ . . .   3\n   3.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .   5\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . .\
    \ .   6\n   5.  References  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n     5.1.  Normative References  . . . . . . . . . . . . . . . . . .  \
    \ 6\n     5.2.  Informative References  . . . . . . . . . . . . . . . . .   6\n\
    \   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \ Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   It is common for HTTP responses to contain links to external\n\
    \   resources that need to be fetched prior to their use, for example,\n   rendering\
    \ HTML by a web browser.  Having such links available to the\n   client as early\
    \ as possible helps to minimize perceived latency.\n   The \"preload\" [Preload]\
    \ link relation can be used to convey such\n   links in the Link header field\
    \ of an HTTP response.  However, it is\n   not always possible for an origin server\
    \ to generate the header block\n   of a final response immediately after receiving\
    \ a request.  For\n   example, the origin server might delegate a request to an\
    \ upstream\n   HTTP server running at a distant location, or the status code might\n\
    \   depend on the result of a database query.\n   The dilemma here is that even\
    \ though it is preferable for an origin\n   server to send some header fields\
    \ as soon as it receives a request,\n   it cannot do so until the status code\
    \ and the full header fields of\n   the final HTTP response are determined.\n\
    \   HTTP/2 [RFC7540] server push can accelerate the delivery of\n   resources,\
    \ but only resources for which the server is authoritative.\n   The other limitation\
    \ of server push is that the response will be\n   transmitted regardless of whether\
    \ the client has the response cached.\n   At the cost of spending one extra round\
    \ trip compared to server push\n   in the worst case, delivering Link header fields\
    \ in a timely fashion\n   is more flexible and might consume less bandwidth.\n\
    \   This memo defines a status code for sending an informational response\n  \
    \ ([RFC7231], Section 6.2) that contains header fields that are likely\n   to\
    \ be included in the final response.  A server can send the\n   informational\
    \ response containing some of the header fields to help\n   the client start making\
    \ preparations for processing the final\n   response, and then run time-consuming\
    \ operations to generate the\n   final response.  The informational response can\
    \ also be used by an\n   origin server to trigger HTTP/2 server push at a caching\n\
    \   intermediary.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: '2.  HTTP Status Code 103: Early Hints'
  contents:
  - "2.  HTTP Status Code 103: Early Hints\n   The 103 (Early Hints) informational\
    \ status code indicates to the\n   client that the server is likely to send a\
    \ final response with the\n   header fields included in the informational response.\n\
    \   Typically, a server will include the header fields sent in a 103\n   (Early\
    \ Hints) response in the final response as well.  However, there\n   might be\
    \ cases when this is not desirable, such as when the server\n   learns that the\
    \ header fields in the 103 (Early Hints) response are\n   not correct before the\
    \ final response is sent.\n   A client can speculatively evaluate the header fields\
    \ included in a\n   103 (Early Hints) response while waiting for the final response.\
    \  For\n   example, a client might recognize a Link header field value\n   containing\
    \ the relation type \"preload\" and start fetching the target\n   resource.  However,\
    \ these header fields only provide hints to the\n   client; they do not replace\
    \ the header fields on the final response.\n   Aside from performance optimizations,\
    \ such evaluation of the 103\n   (Early Hints) response's header fields MUST NOT\
    \ affect how the final\n   response is processed.  A client MUST NOT interpret\
    \ the 103 (Early\n   Hints) response header fields as if they applied to the informational\n\
    \   response itself (e.g., as metadata about the 103 (Early Hints)\n   response).\n\
    \   A server MAY use a 103 (Early Hints) response to indicate only some\n   of\
    \ the header fields that are expected to be found in the final\n   response. \
    \ A client SHOULD NOT interpret the nonexistence of a header\n   field in a 103\
    \ (Early Hints) response as a speculation that the\n   header field is unlikely\
    \ to be part of the final response.\n   The following example illustrates a typical\
    \ message exchange that\n   involves a 103 (Early Hints) response.\n   Client\
    \ request:\n     GET / HTTP/1.1\n     Host: example.com\n   Server response:\n\
    \     HTTP/1.1 103 Early Hints\n     Link: </style.css>; rel=preload; as=style\n\
    \     Link: </script.js>; rel=preload; as=script\n     HTTP/1.1 200 OK\n     Date:\
    \ Fri, 26 May 2017 10:02:11 GMT\n     Content-Length: 1234\n     Content-Type:\
    \ text/html; charset=utf-8\n     Link: </style.css>; rel=preload; as=style\n \
    \    Link: </script.js>; rel=preload; as=script\n     <!doctype html>\n     [...\
    \ rest of the response body is omitted from the example ...]\n   As is the case\
    \ with any informational response, a server might emit\n   more than one 103 (Early\
    \ Hints) response prior to sending a final\n   response.  This can happen, for\
    \ example, when a caching intermediary\n   generates a 103 (Early Hints) response\
    \ based on the header fields of\n   a stale-cached response, and then forwards\
    \ a 103 (Early Hints)\n   response and a final response that were sent from the\
    \ origin server\n   in response to a revalidation request.\n   A server MAY emit\
    \ multiple 103 (Early Hints) responses with\n   additional header fields as new\
    \ information becomes available while\n   the request is being processed.  It\
    \ does not need to repeat the\n   fields that were already emitted, though it\
    \ doesn't have to exclude\n   them either.  The client can consider any combination\
    \ of header\n   fields received in multiple 103 (Early Hints) responses when\n\
    \   anticipating the list of header fields expected in the final\n   response.\n\
    \   The following example illustrates a series of responses that a server\n  \
    \ might emit.  In the example, the server uses two 103 (Early Hints)\n   responses\
    \ to notify the client that it is likely to send three Link\n   header fields\
    \ in the final response.  Two of the three expected\n   header fields are found\
    \ in the final response.  The other header\n   field is replaced by another Link\
    \ header field that contains a\n   different value.\n     HTTP/1.1 103 Early Hints\n\
    \     Link: </main.css>; rel=preload; as=style\n     HTTP/1.1 103 Early Hints\n\
    \     Link: </style.css>; rel=preload; as=style\n     Link: </script.js>; rel=preload;\
    \ as=script\n     HTTP/1.1 200 OK\n     Date: Fri, 26 May 2017 10:02:11 GMT\n\
    \     Content-Length: 1234\n     Content-Type: text/html; charset=utf-8\n    \
    \ Link: </main.css>; rel=preload; as=style\n     Link: </newstyle.css>; rel=preload;\
    \ as=style\n     Link: </script.js>; rel=preload; as=script\n     <!doctype html>\n\
    \     [... rest of the response body is omitted from the example ...]\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Some clients might have issues handling a 103\
    \ (Early Hints) response,\n   because informational responses are rarely used\
    \ in reply to requests\n   not including an Expect header field ([RFC7231], Section\
    \ 5.1.1).\n   In particular, an HTTP/1.1 client that mishandles an informational\n\
    \   response as a final response is likely to consider all responses to\n   the\
    \ succeeding requests sent over the same connection to be part of\n   the final\
    \ response.  Such behavior might constitute a cross-origin\n   information disclosure\
    \ vulnerability in case the client multiplexes\n   requests to different origins\
    \ onto a single persistent connection.\n   Therefore, a server might refrain from\
    \ sending 103 (Early Hints)\n   responses over HTTP/1.1 unless the client is known\
    \ to handle\n   informational responses correctly.\n   HTTP/2 clients are less\
    \ likely to suffer from incorrect framing since\n   handling of the response header\
    \ fields does not affect how the end of\n   the response body is determined.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   The following entry has been registered in the \"\
    HTTP Status Codes\"\n   registry:\n   o  Code: 103\n   o  Description: Early Hints\n\
    \   o  Specification: RFC 8297 (this document)\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n      \
    \        DOI 10.17487/RFC7231, June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n\
    \   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n      \
    \        Transfer Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI\
    \ 10.17487/RFC7540, May 2015,\n              <https://www.rfc-editor.org/info/rfc7540>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [Preload]  Grigorik, I., Ed. and Y. Weiss, Ed.,\
    \ \"Preload\", W3C\n              Candidate Recommendation, October 2017,\n  \
    \            <https://www.w3.org/TR/preload/>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Tatsuhiro Tsujikawa for coming up with the idea\
    \ of sending\n   the Link header fields using an informational response.\n   Mark\
    \ Nottingham and Willy Tarreau provided substantial help in\n   clarifying the\
    \ semantics of the status code.\n   Early stages of the author's work on this\
    \ document was supported by\n   DeNA Co., Ltd. during his employment there.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Kazuho Oku\n   Fastly\n   Email: kazuhooku@gmail.com\n"
