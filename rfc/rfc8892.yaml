- title: __initial_text__
  contents:
  - ' Guidelines and Registration Procedures for Interface Types and Tunnel

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides guidelines and procedures for those who are\n\
    \   defining, registering, or evaluating definitions of new interface\n   types\
    \ (\"ifType\" values) and tunnel types.  The original definition of\n   the IANA\
    \ interface type registry predated the use of IANA\n   Considerations sections\
    \ and YANG modules, so some confusion arose\n   over time.  Tunnel types were\
    \ added later, with the same requirements\n   and allocation policy as interface\
    \ types.  This document updates RFC\n   2863 and provides updated guidance for\
    \ these registries.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8892.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  Problems\n\
    \   4.  Interface Sub-layers and Sub-types\n     4.1.  Alternate Values\n   5.\
    \  Available Formats\n   6.  Registration\n     6.1.  Procedures\n     6.2.  Media-Specific\
    \ OID-Subtree Assignments\n     6.3.  Registration Template\n       6.3.1.  ifType\n\
    \       6.3.2.  tunnelType\n   7.  IANA Considerations\n     7.1.  MIB and YANG\
    \ Modules\n     7.2.  Transmission Number Assignments\n   8.  Security Considerations\n\
    \   9.  References\n     9.1.  Normative References\n     9.2.  Informative References\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IANA IfType-MIB, which contains the list of interface\
    \ type\n   (ifType) values, was originally defined in [RFC1573] as a separate\n\
    \   MIB module together with the Interfaces Group MIB (IF-MIB) module.\n   The\
    \ IF-MIB module was subsequently updated and is currently specified\n   in [RFC2863],\
    \ but the latest IF-MIB RFC no longer contains the IANA\n   IfType-MIB.  Instead,\
    \ the IANA IfType-MIB is maintained by IANA as a\n   separate module.  Similarly,\
    \ [RFC7224] created an initial IANA\n   Interface Type YANG Module, and the current\
    \ version is maintained by\n   IANA.\n   The current IANA IfType registry is at\
    \ [ifType-registry], with the\n   same values also appearing in both [yang-if-type]\
    \ and the IANAifType\n   textual convention at [IANAifType-MIB].\n   Although\
    \ the ifType registry was originally defined in a MIB module,\n   the assignment\
    \ and use of interface type values are not tied to MIB\n   modules or any other\
    \ management mechanism.  An interface type value\n   can be used as the value\
    \ of a data model object (MIB object, YANG\n   object, etc.), as part of a unique\
    \ identifier of a data model for a\n   given interface type (e.g., in an OID),\
    \ or simply as a value exposed\n   by local APIs or UIs on a device.\n   The TUNNEL-MIB\
    \ was defined in [RFC2667] (now obsoleted by [RFC4087]),\n   which created a tunnelType\
    \ registry ([tunnelType-registry] and the\n   IANAtunnelType textual convention\
    \ at [IANAifType-MIB]), and it\n   defined the assignment policy for tunnelType\
    \ values to always be\n   identical to the policy for assigning ifType values.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n"
- title: 3.  Problems
  contents:
  - "3.  Problems\n   This document addresses the following issues:\n   1.  As noted\
    \ in Section 1, the original guidance was written with\n       wording specific\
    \ to MIB modules; accordingly, some confusion has\n       resulted when using\
    \ YANG modules.  This document clarifies that\n       ifTypes and tunnelTypes\
    \ are independent from the type of, or even\n       existence of, a data model.\n\
    \   2.  The use of and requirements around sub-layers and sub-types were\n   \
    \    not well understood, but good examples of both now exist.  This\n       is\
    \ discussed in Section 4.\n   3.  Since the \"Interface Types (ifType)\" and \"\
    Tunnel Types\n       (tunnelType)\" registries were originally defined, and are\
    \ still\n       retrievable, in the format of MIB modules (in addition to other\n\
    \       formats), confusion arose when adding YANG modules as another\n      \
    \ format as to whether each is a separate registry.  This is\n       discussed\
    \ in Section 5.\n   4.  The registries are retrievable in the format of MIB and\
    \ YANG\n       modules, but there was previously no process guidance written to\n\
    \       check that those formats were syntactically correct as updates\n     \
    \  were made, which led to the registry having syntax errors that\n       broke\
    \ tools.  Section 6.1 adds a validation step to the\n       documented assignment\
    \ procedure.\n   5.  Various documents and registries previously said to submit\n\
    \       requests via email, but a web form exists for submitting\n       requests,\
    \ which caused some confusion around which was to be\n       used.  This is addressed\
    \ in Section 6.1.\n   6.  Transmission values [transmission-registry] have generally\
    \ been\n       allocated as part of ifType allocation, but no guidance existed\n\
    \       as to whether a requester must ask for it or not, and the request\n  \
    \     form had no such required field.  As a result, IANA has asked the\n    \
    \   designated expert to decide for each allocation, but no relevant\n       guidance\
    \ for the designated expert has been documented.  This is\n       remedied in\
    \ Section 6.2.\n"
- title: 4.  Interface Sub-layers and Sub-types
  contents:
  - "4.  Interface Sub-layers and Sub-types\n   When multiple sub-layers exist below\
    \ the network layer, each sub-\n   layer can be represented by its own row in\
    \ the ifTable with its own\n   ifType, with the ifStackTable being used to identify\
    \ the upward and\n   downward multiplexing relationships between rows.  Section\
    \ 3.1.1 of\n   [RFC2863] provides more discussion, and 3.1.2 provides guidance\
    \ for\n   defining interface sub-layers.  More recent experience shows that\n\
    \   those guidelines were phrased in a way that is now too restrictive,\n   since\
    \ at the time [RFC2863] was written, MIB modules were the\n   dominant data model.\n\
    \   This document clarifies that the same guidance also applies to YANG\n   modules.\n\
    \   Some ifTypes may define sub-types.  For example, the tunnel(131)\n   ifType\
    \ defines sub-types known as \"tunnelTypes\", where each\n   tunnelType can have\
    \ its own MIB and/or YANG module with protocol-\n   specific information, but\
    \ there is enough in common that some\n   information is exposed in a generic\
    \ IP Tunnel MIB corresponding to\n   the tunnel(131) ifType.\n   For requests\
    \ that involve multiple sub-layers below the network\n   layer, requests MUST\
    \ include (or reference) a discussion of the\n   multiplexing relationships between\
    \ sub-layers, ideally with a\n   diagram.  Various well-written examples exist\
    \ of such definitions,\n   including Section 3.4.1 of [RFC3637], Section 3.1.1\
    \ of [RFC4087], and\n   Section 3.1.1 of [RFC5066].\n   Definers of sub-layers\
    \ and sub-types should consider which model is\n   more appropriate for their\
    \ needs.  A sub-layer is generally used\n   whenever either a dynamic relationship\
    \ exists (i.e., when the set of\n   instances above or below a given instance\
    \ can change over time) or a\n   multiplexing relationship exists with another\
    \ sub-layer.  A sub-type\n   can be used when neither of these is true but where\
    \ one interface\n   type is conceptually a subclass of another interface type,\
    \ as far as\n   a management data model is concerned.\n   In general, the intent\
    \ of an interface type or sub-type is that its\n   definition should be sufficient\
    \ to identify an interoperable\n   protocol.  In some cases, however, a protocol\
    \ might be defined in a\n   way that is not sufficient to provide interoperability\
    \ with other\n   compliant implementations of that protocol.  In such a case,\
    \ an\n   ifType definition should discuss whether specific instantiations (or\n\
    \   profiles) of behavior should use a sub-layer model (e.g., each vendor\n  \
    \ might layer the protocol over its own sub-layer that provides the\n   missing\
    \ details) or a sub-type model (i.e., each vendor might\n   subclass the protocol\
    \ without any layering relationship).  If a sub-\n   type model is more appropriate,\
    \ then the data model for the protocol\n   might include a sub-type identifier\
    \ so that management software can\n   discover objects specific to the sub-type.\
    \  In either case, such\n   discussion is important to guide definers of a data\
    \ model for the\n   more specific information (i.e., a lower sub-layer or a sub-type),\
    \ as\n   well as the designated expert, who must review requests for any such\n\
    \   ifTypes or sub-types.\n"
- title: 4.1.  Alternate Values
  contents:
  - "4.1.  Alternate Values\n   Another design decision is whether to reuse an existing\
    \ ifType or\n   tunnelType value, possibly using a sub-type or sub-layer model\
    \ for\n   refinements, or to use a different value for a new mechanism.\n   If\
    \ there is already an entry that could easily satisfy the modeling\n   and functional\
    \ requirements for the requested entry, it should be\n   reused so that applications\
    \ and tools that use the existing value can\n   be used without changes.  If,\
    \ however, the modeling and functional\n   requirements are significantly different\
    \ enough such that having\n   existing applications and tools use the existing\
    \ value would be seen\n   as a problem, a new value should be used.\n   For example,\
    \ originally different ifType values were used for\n   different flavors of Ethernet\
    \ (ethernetCsmacd(6), iso88023Csmacd(7),\n   fastEther(62), etc.), typically because\
    \ they were registered by\n   different vendors.  Using different values was,\
    \ however, seen as\n   problematic because all were functionally similar, so [RFC3635]\
    \ then\n   deprecated all but ethernetCsmacd(6).\n   As another example, a udp(8)\
    \ tunnelType value was defined in\n   [RFC2667] with the description \"The value\
    \ UDP indicates that the\n   payload packet is encapsulated within a normal UDP\
    \ packet (e.g., RFC\n   1234).\"  The Teredo tunnel protocol [RFC4380] was later\
    \ defined and\n   encapsulates packets over UDP, but the protocol model is quite\n\
    \   different between [RFC1234] and Teredo.  For example, [RFC1234]\n   supports\
    \ encapsulation of multicast/broadcast traffic, whereas Teredo\n   does not. \
    \ As such, it would be more confusing to applications and\n   tools to represent\
    \ them using the same tunnel type, and so [RFC4087]\n   defined a new value for\
    \ Teredo.\n   In summary, definers of new interface or tunnel mechanisms should\
    \ use\n   a new ifType or tunnelType value rather than reuse an existing value\n\
    \   when key aspects such as the header format or the link model (point-\n   to-point,\
    \ non-broadcast multi-access, broadcast-capable multi-access,\n   unidirectional\
    \ broadcast, etc.) are significantly different from\n   existing values, but they\
    \ should reuse the same value when the\n   differences can be expressed in terms\
    \ of differing values of existing\n   objects other than ifType/tunnelType in\
    \ the standard YANG or MIB\n   module.\n"
- title: 5.  Available Formats
  contents:
  - "5.  Available Formats\n   Many registries are available in multiple formats.\
    \  For example, XML,\n   HTML, CSV, and plain text are common formats in which\
    \ many registries\n   are available.  This document clarifies that the [IANAifType-MIB],\n\
    \   [yang-if-type], and [yang-tunnel-type] MIB and YANG modules are\n   merely\
    \ additional formats in which the \"Interface Types (ifType)\" and\n   \"Tunnel\
    \ Types (tunnelType)\" registries are available.  The MIB and\n   YANG modules\
    \ are not separate registries, and the same values are\n   always present in all\
    \ formats of the same registry.\n   The confusion stemmed in part from the fact\
    \ that the IANA \"Protocol\n   Registries\" [protocol-registries] listed the YANG\
    \ and MIB module\n   formats separately, as if they were separate registries.\
    \  However,\n   the entries for the yang-if-type and iana-tunnel-type YANG modules\n\
    \   said \"See ifType definitions registry\" and \"See tunnelType registry\n \
    \  (mib-2.interface.ifTable.ifEntry.ifType.tunnelType)\" respectively,\n   although\
    \ the entry for the IANAifType-MIB had no such note.\n   Section 7.1 addresses\
    \ this.\n"
- title: 6.  Registration
  contents:
  - "6.  Registration\n   The IANA policy (using terms defined in [RFC8126]) for registration\n\
    \   is Expert Review for both interface types and tunnel types.  The role\n  \
    \ of the designated expert in the procedure is to raise possible\n   concerns\
    \ about wider implications of proposals for use and deployment\n   of interface\
    \ types.  While it is recommended that the responsible\n   Area Director and the\
    \ IESG take into consideration the designated\n   expert opinions, nothing in\
    \ the procedure empowers the designated\n   expert to override properly arrived-at\
    \ IETF or working group\n   consensus.\n"
- title: 6.1.  Procedures
  contents:
  - "6.1.  Procedures\n   Someone wishing to register a new ifType or tunnelType value\
    \ MUST:\n   1.  Check the IANA registry to see whether there is already an entry\n\
    \       that could easily satisfy the modeling and functional\n       requirements\
    \ for the requested entry.  If there is already such\n       an entry, use it\
    \ or update the existing specification.  Text in\n       an Internet-Draft or\
    \ part of some permanently available, stable\n       specification may be written\
    \ to clarify the usage of an existing\n       entry or entries for the desired\
    \ purpose.\n   2.  Check the IANA registry to see whether there is already some\n\
    \       other entry with the desired name.  If there is already an\n       unrelated\
    \ entry under the desired name, choose a different name.\n   3.  Prepare a registration\
    \ request using the template specified in\n       Section 6.3.  The registration\
    \ request can be contained in an\n       Internet-Draft, submitted alone, or submitted\
    \ as part of some\n       permanently available, stable specification.  The registration\n\
    \       request can also be submitted in some other form (as part of\n       another\
    \ document or as a stand-alone document), but the\n       registration request\
    \ will be treated as an \"IETF Contribution\"\n       under the guidelines of\
    \ [RFC5378].\n   4.  Submit the registration request (or pointer to a document\n\
    \       containing it) to IANA at iana@iana.org or (if requesting an\n       ifType)\
    \ via the web form at <https://www.iana.org/form/iftype>.\n   Upon receipt of\
    \ a registration request, the following steps MUST be\n   followed:\n   1.  IANA\
    \ checks the submission for completeness; if required\n       information is missing\
    \ or any citations are not correct, IANA\n       will reject the registration\
    \ request.  A registrant can resubmit\n       a corrected request if desired.\n\
    \   2.  IANA requests Expert Review of the registration request against\n    \
    \   the corresponding guidelines from this document.\n   3.  The designated expert\
    \ will evaluate the request against the\n       criteria.\n   4.  Once the designated\
    \ expert approves a registration, IANA updates\n       [ifType-registry], [IANAifType-MIB],\
    \ and [yang-if-type] to show\n       the registration for an interface type, or\
    \ [tunnelType-registry],\n       [IANAifType-MIB], and [yang-tunnel-type] to show\
    \ the registration\n       for a tunnel type.  When adding values, IANA should\
    \ verify that\n       the updated MIB module and YANG module formats are syntactically\n\
    \       correct before publishing the update.  There are various existing\n  \
    \     tools or websites that can be used to do this verification.\n   5.  If instead\
    \ the designated expert does not approve registration\n       (e.g., for any of\
    \ the reasons in [RFC8126], Section 5), a\n       registrant can resubmit a corrected\
    \ request if desired, or the\n       IESG can override the designated expert and\
    \ approve it per the\n       process in Section 3.3 of [RFC8126].\n"
- title: 6.2.  Media-Specific OID-Subtree Assignments
  contents:
  - "6.2.  Media-Specific OID-Subtree Assignments\n   [IANAifType-MIB] notes:\n  \
    \ |  The relationship between the assignment of ifType values and of\n   |  OIDs\
    \ to particular media-specific MIBs is solely the purview of\n   |  IANA and is\
    \ subject to change without notice.  Quite often, a\n   |  media-specific MIB's\
    \ OID-subtree assignment within MIB-II's\n   |  'transmission' subtree will be\
    \ the same as its ifType value.\n   |  However, in some circumstances this will\
    \ not be the case, and\n   |  implementors must not pre-assume any specific relationship\
    \ between\n   |  ifType values and transmission subtree OIDs.\n   The advice above\
    \ remains unchanged, but this document changes the\n   allocation procedure to\
    \ streamline the process, so that an ifType\n   value and a transmission number\
    \ value with the same value will be\n   assigned at the same time.\n   Rationale:\n\
    \   (1)  This saves future effort if a transmission number is later\n        deemed\
    \ necessary, since no IANA request is needed that would\n        then require\
    \ another Expert Review.\n   (2)  The transmission numbering space is not scarce,\
    \ so there seems\n        to be little need to reserve the number for a different\
    \ purpose\n        than what the ifType is for.\n   (3)  The designated expert\
    \ need not review whether a transmission\n        number value should be registered\
    \ when processing each ifType\n        request, thus reducing the possibility\
    \ of delaying assignment of\n        ifType values.\n   (4)  There is no case\
    \ on record where allocating the same value could\n        have caused any problems.\n"
- title: 6.3.  Registration Template
  contents:
  - '6.3.  Registration Template

    '
- title: 6.3.1.  ifType
  contents:
  - "6.3.1.  ifType\n   The following template describes the fields that MUST be supplied\
    \ in\n   a registration request suitable for adding to the \"Interface Types\n\
    \   (ifType)\" registry:\n   Label for IANA ifType requested:  As explained in\
    \ Section 7.1.1 of\n      [RFC2578], a label for a named-number enumeration must\
    \ consist of\n      one or more letters or digits, up to a maximum of 64 characters,\n\
    \      and the initial character must be a lowercase letter.  (However,\n    \
    \  labels longer than 32 characters are not recommended.)  Note that\n      hyphens\
    \ are not allowed.\n   Name of IANA ifType requested:  A short description (e.g.,\
    \ a protocol\n      name) suitable to appear in a comment in the registry.\n \
    \  Description of the proposed use of the IANA ifType:  Requesters MUST\n    \
    \  include answers, either directly or via a link to a document with\n      the\
    \ answers, to the following questions in the explanation of the\n      proposed\
    \ use of the IANA IfType:\n      *  How would IP run over your ifType?\n     \
    \ *  Would there be another interface sub-layer between your ifType\n        \
    \ and IP?\n      *  Would your ifType be vendor specific / proprietary?  (If so,\n\
    \         the label MUST start with a string that shows that.  For\n         example,\
    \ if your company's name or acronym is xxx, then the\n         ifType label would\
    \ be something like xxxSomeIfTypeLabel.)\n      *  Would your ifType require or\
    \ allow vendor-specific extensions?\n         If so, would the vendor use their\
    \ own ifType in a sub-layer\n         below the requested ifType, a sub-type of\
    \ the ifType, or some\n         other mechanism?\n   Reference, Internet-Draft,\
    \ or Specification:  A link to a document is\n      required.\n   Additional information\
    \ or comments:  Optional; any additional\n      comments for IANA or the designated\
    \ expert.\n"
- title: 6.3.2.  tunnelType
  contents:
  - "6.3.2.  tunnelType\n   Prior to this document, no form existed for tunnelType\
    \ (and new\n   tunnelType requests did not need to use the ifType form that did\n\
    \   exist).  This document therefore specifies a tunnelType form.\n   The following\
    \ template describes the fields that MUST be supplied in\n   a registration request\
    \ suitable for adding to the \"Tunnel Types\n   (tunnelType)\" registry:\n   Label\
    \ for IANA tunnelType requested:  As explained in Section 7.1.1\n      of [RFC2578],\
    \ a label for a named-number enumeration must consist\n      of one or more letters\
    \ or digits, up to a maximum of 64\n      characters, and the initial character\
    \ must be a lowercase letter.\n      (However, labels longer than 32 characters\
    \ are not recommended.)\n      Note that hyphens are not allowed.\n   Name of\
    \ IANA tunnelType requested:  A short description (e.g., a\n      protocol name)\
    \ suitable to appear in a comment in the registry.\n   Description of the proposed\
    \ use of the IANA tunnelType:  Requesters\n      MUST include answers, either\
    \ directly or via a link to a document\n      with the answers, to the following\
    \ questions in the explanation of\n      the proposed use of the IANA tunnelType:\n\
    \      *  How would IP run over your tunnelType?\n      *  Would there be another\
    \ interface sub-layer between your\n         tunnelType and IP?\n      *  Would\
    \ your tunnelType be vendor-specific or proprietary?  (If\n         so, the label\
    \ MUST start with a string that shows that.  For\n         example, if your company's\
    \ name or acronym is xxx, then the\n         tunnelType label would be something\
    \ like\n         xxxSomeTunnelTypeLabel.)\n      *  Would your tunnelType require\
    \ or allow vendor-specific\n         extensions?  If so, would the vendor use\
    \ their own tunnelType\n         in a sub-layer below the requested tunnelType,\
    \ or some sort of\n         sub-type of the tunnelType, or some other mechanism?\n\
    \   Reference, Internet-Draft, or Specification:  A link to a document is\n  \
    \    required.\n   Additional information or comments:  Optionally any additional\n\
    \      comments for IANA or the designated expert.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This entire document is about IANA considerations,\
    \ but this section\n   discusses actions taken by and to be taken by IANA.  There\
    \ are three\n   registries affected:\n   1.  Interface Types (ifType) [ifType-registry]:\
    \ The registration\n       process is updated in Section 6.1, and the template\
    \ is updated in\n       Section 6.3.1.\n   2.  Tunnel Types (tunnelType) [tunnelType-registry]:\
    \ The registration\n       process is updated in Section 6.1, and the template\
    \ is updated in\n       Section 6.3.2.\n   3.  Transmission Number Values [transmission-registry]:\
    \ The\n       assignment process is updated in Section 6.2.\n   At the time of\
    \ publication of this document, IANA is unable to\n   perform some of the actions\
    \ requested below due to limitations of\n   their current platform and toolset.\
    \  In such cases, IANA is requested\n   to perform these actions as and when the\
    \ migration to a new platform\n   that would enable these actions is complete.\n"
- title: 7.1.  MIB and YANG Modules
  contents:
  - "7.1.  MIB and YANG Modules\n   IANA is to complete the following to clarify the\
    \ relationship between\n   MIB modules, YANG modules, and the relevant registries.\n\
    \   1.   The following note has been added to the IANAifType-MIB at\n        [protocol-registries]:\
    \ \"This is one of the available formats of\n        the Interface Types (ifType)\
    \ and Tunnel Types (tunnelType)\n        registries.\"\n   2.   The note for the\
    \ iana-if-type YANG module at\n        [protocol-registries] has been updated\
    \ to read: \"This is one of\n        the available formats of the Interface Types\
    \ (ifType) registry.\"\n   3.   The note for the iana-tunnel-type YANG module\
    \ at\n        [protocol-registries] has been updated to read: \"This is one of\n\
    \        the available formats of the Tunnel Types (tunnelType)\n        registry.\"\
    \n   4.   The new \"Interface Parameters\" category at [protocol-registries]\n\
    \        includes entries for \"Interface Types (ifType)\"\n        [ifType-registry],\
    \ \"Tunnel Types (tunnelType)\"\n        [tunnelType-registry], and \"Transmission\
    \ Number Values\"\n        [transmission-registry].\n   5.   Update the \"Interface\
    \ Types (ifType)\" registry [ifType-registry]\n        to list MIB [IANAifType-MIB]\
    \ and YANG [yang-if-type] as\n        Available Formats.\n   6.   Update the \"\
    Tunnel Types (tunnelType)\" registry\n        [tunnelType-registry] to list MIB\
    \ [IANAifType-MIB] and YANG\n        [yang-tunnel-type] as Available Formats.\n\
    \   7.   Replace the [yang-if-type] page with the YANG module content\n      \
    \  rather than having a page that claims to have multiple Available\n        Formats.\n\
    \   8.   Replace the [yang-tunnel-type] page with the YANG module content\n  \
    \      rather than having a page that claims to have multiple Available\n    \
    \    Formats.\n   9.   In addition, [IANAifType-MIB] is to be updated as follows:\n\
    \        OLD:\n        |  Requests for new values should be made to IANA via email\n\
    \        |  (iana@iana.org).\n        NEW:\n        |  Interface types must not\
    \ be directly added to the IANAifType-\n        |  MIB MIB module.  They must\
    \ instead be added to the \"Interface\n        |  Types (ifType)\" registry at\
    \ [ifType-registry].\n        (Note that [yang-if-type] was previously updated\
    \ with this\n        language.)\n   10.  IANA has added this document as a reference\
    \ in the \"Interface\n        Types (ifType)\", \"Tunnel Types (tunnelType)\"\
    , and \"Transmission\n        Number Values\" registries, as well as the iana-if-type\
    \ YANG\n        Module, iana-tunnel-type YANG Module, and IANAifType-MIB.\n"
- title: 7.2.  Transmission Number Assignments
  contents:
  - "7.2.  Transmission Number Assignments\n   Per the discussion in Section 6.2,\
    \ [ifType-registry] has been updated\n   as follows:\n   OLD:\n   |  For every\
    \ ifType registration, the corresponding transmission\n   |  number value should\
    \ be registered or marked \"Reserved\".\n   NEW:\n   |  For future ifType assignments,\
    \ an OID-subtree assignment MIB-II's\n   |  'transmission' subtree will be made\
    \ with the same value.\n   Similarly, the following change has been made to\n\
    \   [transmission-registry]:\n   OLD:\n   |  For every transmission number registration,\
    \ the corresponding\n   |  ifType value should be registered or marked \"Reserved\"\
    .\n   NEW:\n   |  For future transmission number assignments, an 'ifType' will\
    \ be\n   |  made with the same value.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Since this document does not introduce any technology\
    \ or protocol,\n   there are no security issues to be considered for this document\n\
    \   itself.\n   For security considerations related to MIB and YANG modules that\n\
    \   expose these values, see Section 9 of [RFC2863], Section 6 of\n   [RFC4087],\
    \ and Section 3 of [RFC8675].\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,\
    \ Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\"\
    , STD 58, RFC 2578,\n              DOI 10.17487/RFC2578, April 1999,\n       \
    \       <https://www.rfc-editor.org/info/rfc2578>.\n   [RFC2863]  McCloghrie,\
    \ K. and F. Kastenholz, \"The Interfaces Group\n              MIB\", RFC 2863,\
    \ DOI 10.17487/RFC2863, June 2000,\n              <https://www.rfc-editor.org/info/rfc2863>.\n\
    \   [RFC5378]  Bradner, S., Ed. and J. Contreras, Ed., \"Rights\n            \
    \  Contributors Provide to the IETF Trust\", BCP 78, RFC 5378,\n             \
    \ DOI 10.17487/RFC5378, November 2008,\n              <https://www.rfc-editor.org/info/rfc5378>.\n\
    \   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n      \
    \        Writing an IANA Considerations Section in RFCs\", BCP 26,\n         \
    \     RFC 8126, DOI 10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [IANAifType-MIB]\n              IANA, \"IANAifType-MIB\
    \ Definitions\",\n              <http://www.iana.org/assignments/ianaiftype-mib>.\n\
    \   [ifType-registry]\n              IANA, \"Interface Types (ifType)\",\n   \
    \           <https://www.iana.org/assignments/smi-numbers>.\n   [protocol-registries]\n\
    \              IANA, \"Protocol Registries\",\n              <https://www.iana.org/protocols>.\n\
    \   [RFC1234]  Provan, D., \"Tunneling IPX traffic through IP networks\",\n  \
    \            RFC 1234, DOI 10.17487/RFC1234, June 1991,\n              <https://www.rfc-editor.org/info/rfc1234>.\n\
    \   [RFC1573]  McCloghrie, K. and F. Kastenholz, \"Evolution of the\n        \
    \      Interfaces Group of MIB-II\", RFC 1573,\n              DOI 10.17487/RFC1573,\
    \ January 1994,\n              <https://www.rfc-editor.org/info/rfc1573>.\n  \
    \ [RFC2667]  Thaler, D., \"IP Tunnel MIB\", RFC 2667,\n              DOI 10.17487/RFC2667,\
    \ August 1999,\n              <https://www.rfc-editor.org/info/rfc2667>.\n   [RFC3635]\
    \  Flick, J., \"Definitions of Managed Objects for the\n              Ethernet-like\
    \ Interface Types\", RFC 3635,\n              DOI 10.17487/RFC3635, September\
    \ 2003,\n              <https://www.rfc-editor.org/info/rfc3635>.\n   [RFC3637]\
    \  Heard, C.M., Ed., \"Definitions of Managed Objects for the\n              Ethernet\
    \ WAN Interface Sublayer\", RFC 3637,\n              DOI 10.17487/RFC3637, September\
    \ 2003,\n              <https://www.rfc-editor.org/info/rfc3637>.\n   [RFC4087]\
    \  Thaler, D., \"IP Tunnel MIB\", RFC 4087,\n              DOI 10.17487/RFC4087,\
    \ June 2005,\n              <https://www.rfc-editor.org/info/rfc4087>.\n   [RFC4380]\
    \  Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n              Network\
    \ Address Translations (NATs)\", RFC 4380,\n              DOI 10.17487/RFC4380,\
    \ February 2006,\n              <https://www.rfc-editor.org/info/rfc4380>.\n \
    \  [RFC5066]  Beili, E., \"Ethernet in the First Mile Copper (EFMCu)\n       \
    \       Interfaces MIB\", RFC 5066, DOI 10.17487/RFC5066, November\n         \
    \     2007, <https://www.rfc-editor.org/info/rfc5066>.\n   [RFC7224]  Bjorklund,\
    \ M., \"IANA Interface Type YANG Module\",\n              RFC 7224, DOI 10.17487/RFC7224,\
    \ May 2014,\n              <https://www.rfc-editor.org/info/rfc7224>.\n   [RFC8675]\
    \  Boucadair, M., Farrer, I., and R. Asati, \"A YANG Data\n              Model\
    \ for Tunnel Interface Types\", RFC 8675,\n              DOI 10.17487/RFC8675,\
    \ November 2019,\n              <https://www.rfc-editor.org/info/rfc8675>.\n \
    \  [transmission-registry]\n              IANA, \"Transmission Number Values\"\
    ,\n              <https://www.iana.org/assignments/smi-numbers>.\n   [tunnelType-registry]\n\
    \              IANA, \"Tunnel Types (tunnelType)\",\n              <https://www.iana.org/assignments/smi-numbers>.\n\
    \   [yang-if-type]\n              IANA, \"iana-if-type YANG Module\",\n      \
    \        <http://www.iana.org/assignments/iana-if-type>.\n   [yang-tunnel-type]\n\
    \              IANA, \"iana-tunnel-type YANG Module\",\n              <https://www.iana.org/assignments/iana-tunnel-type>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dave Thaler\n   Microsoft\n   Email: dthaler@microsoft.com\n\
    \   Dan Romascanu\n"
