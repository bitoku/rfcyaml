- title: __initial_text__
  contents:
  - '                 Constraint-Based LSP Setup using LDP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies mechanisms and TLVs (Type/Length/Value)\
    \ for\n   support of CR-LSPs (constraint-based routed Label Switched Path)\n \
    \  using LDP (Label Distribution Protocol).\n   This specification proposes an\
    \ end-to-end setup mechanism of a CR-LSP\n   initiated by the ingress LSR (Label\
    \ Switching Router).  We also\n   specify mechanisms to provide means for reservation\
    \ of resources\n   using LDP.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [6].\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction....................................................3\n\
    \   2. Constraint-based Routing Overview...............................4\n   2.1\
    \ Strict and Loose Explicit Routes...............................5\n   2.2 Traffic\
    \ Characteristics........................................5\n   2.3 Preemption.....................................................5\n\
    \   2.4 Route Pinning..................................................6\n   2.5\
    \ Resource Class.................................................6\n   3. Solution\
    \ Overview...............................................6\n   3.1 Required Messages\
    \ and TLVs.....................................7\n   3.2 Label Request Message..........................................7\n\
    \   3.3 Label Mapping Message..........................................9\n   3.4\
    \ Notification Message..........................................10\n   3.5 Release\
    \ , Withdraw, and Abort Messages........................11\n   4. Protocol Specification.........................................11\n\
    \   4.1 Explicit Route TLV (ER-TLV)...................................11\n   4.2\
    \ Explicit Route Hop TLV (ER-Hop TLV)...........................12\n   4.3 Traffic\
    \ Parameters TLV........................................13\n   4.3.1 Semantics...................................................15\n\
    \   4.3.1.1 Frequency.................................................15\n   4.3.1.2\
    \ Peak Rate.................................................16\n   4.3.1.3 Committed\
    \ Rate............................................16\n   4.3.1.4 Excess Burst\
    \ Size.........................................16\n   4.3.1.5 Peak Rate Token\
    \ Bucket....................................16\n   4.3.1.6 Committed Data Rate\
    \ Token Bucket..........................17\n   4.3.1.7 Weight....................................................18\n\
    \   4.3.2 Procedures..................................................18\n   4.3.2.1\
    \ Label Request Message.....................................18\n   4.3.2.2 Label\
    \ Mapping Message.....................................18\n   4.3.2.3 Notification\
    \ Message......................................19\n   4.4 Preemption TLV................................................19\n\
    \   4.5 LSPID TLV.....................................................20\n   4.6\
    \ Resource Class (Color) TLV....................................21\n   4.7 ER-Hop\
    \ semantics..............................................22\n   4.7.1. ER-Hop\
    \ 1: The IPv4 prefix..................................22\n   4.7.2. ER-Hop 2:\
    \ The IPv6 address.................................23\n   4.7.3. ER-Hop 3:  The\
    \ autonomous system number....................24\n   4.7.4. ER-Hop 4: LSPID............................................24\n\
    \   4.8. Processing of the Explicit Route TLV.........................26\n   4.8.1.\
    \ Selection of the next hop..................................26\n   4.8.2. Adding\
    \ ER-Hops to the explicit route TLV...................27\n   4.9 Route Pinning\
    \ TLV.............................................28\n   4.10 CR-LSP FEC Element...........................................28\n\
    \   5. IANA Considerations............................................29\n   5.1\
    \ TLV Type Name Space...........................................29\n   5.2 FEC\
    \ Type Name Space...........................................30\n   5.3 Status\
    \ Code Space.............................................30\n   6. Security Considerations........................................31\n\
    \   7. Acknowledgments................................................31\n   8.\
    \ Intellectual Property Consideration............................31\n   9. References.....................................................32\n\
    \   Appendix A: CR-LSP Establishment Examples.........................33\n   A.1\
    \ Strict Explicit Route Example.................................33\n   A.2 Node\
    \ Groups and Specific Nodes Example........................34\n   Appendix B.\
    \ QoS Service Examples..................................36\n   B.1 Service Examples..............................................36\n\
    \   B.2 Establishing CR-LSP Supporting Real-Time Applications.........38\n   B.3\
    \ Establishing CR-LSP Supporting Delay Insensitive Applications.38\n   Author's\
    \ Addresses................................................39\n   Full Copyright\
    \ Statement..........................................42\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Label Distribution Protocol (LDP) is defined in [1] for distribution\n\
    \   of labels inside one MPLS domain.  One of the most important services\n  \
    \ that may be offered using MPLS in general and LDP in particular is\n   support\
    \ for constraint-based routing of traffic across the routed\n   network.  Constraint-based\
    \ routing offers the opportunity to extend\n   the information used to setup paths\
    \ beyond what is available for the\n   routing protocol.  For instance, an LSP\
    \ can be setup based on\n   explicit route constraints, QoS constraints, and other\
    \ constraints.\n   Constraint-based routing (CR) is a mechanism used to meet Traffic\n\
    \   Engineering requirements that have been proposed by, [2] and [3].\n   These\
    \ requirements may be met by extending LDP for support of\n   constraint-based\
    \ routed label switched paths (CR-LSPs).  Other uses\n   for CR-LSPs include MPLS-based\
    \ VPNs [4].  More information about the\n   applicability of CR-LDP can be found\
    \ in [5].\n   The need for constraint-based routing (CR) in MPLS has been explored\n\
    \   elsewhere [2], and [3].  Explicit routing is a subset of the more\n   general\
    \ constraint-based routing function.  At the MPLS WG meeting\n   held during the\
    \ Washington IETF (December 1997) there was consensus\n   that LDP should support\
    \ explicit routing of LSPs with provision for\n   indication of associated (forwarding)\
    \ priority.  In the Chicago\n   meeting (August 1998), a decision was made that\
    \ support for explicit\n   path setup in LDP will be moved to a separate document.\
    \  This\n   document provides that support and it has been accepted as a working\n\
    \   document in the Orlando meeting (December 1998).\n   This specification proposes\
    \ an end-to-end setup mechanism of a\n   constraint-based routed LSP (CR-LSP)\
    \ initiated by the ingress LSR. We\n   also specify mechanisms to provide means\
    \ for reservation of resources\n   using LDP.\n   This document introduce TLVs\
    \ and procedures that provide support for:\n         -  Strict and Loose Explicit\
    \ Routing\n         -  Specification of Traffic Parameters\n         -  Route\
    \ Pinning\n         -  CR-LSP Preemption though setup/holding priorities\n   \
    \      -  Handling Failures\n         -  LSPID\n         -  Resource Class\n \
    \  Section 2 introduces the various constraints defined in this\n   specification.\
    \  Section 3 outlines the CR-LDP solution.  Section 4\n   defines the TLVs and\
    \ procedures used to setup constraint-based routed\n   label switched paths. \
    \ Appendix A provides several examples of CR-LSP\n   path setup.  Appendix B provides\
    \ Service Definition Examples.\n"
- title: 2. Constraint-based Routing Overview
  contents:
  - "2. Constraint-based Routing Overview\n   Constraint-based routing is a mechanism\
    \ that supports the Traffic\n   Engineering requirements defined in [3].  Explicit\
    \ Routing is a\n   subset of the more general constraint-based routing where the\n\
    \   constraint is the explicit route (ER).  Other constraints are defined\n  \
    \ to provide a network operator with control over the path taken by an\n   LSP.\
    \  This section is an overview of the various constraints\n   supported by this\
    \ specification.\n   Like any other LSP a CR-LSP is a path through an MPLS network.\
    \  The\n   difference is that while other paths are setup solely based on\n  \
    \ information in routing tables or from a management system, the\n   constraint-based\
    \ route is calculated at one point at the edge of\n   network based on criteria,\
    \ including but not limited to routing\n   information.  The intention is that\
    \ this functionality shall give\n   desired special characteristics to the LSP\
    \ in order to better support\n   the traffic sent over the LSP.  The reason for\
    \ setting up CR-LSPs\n   might be that one wants to assign certain bandwidth or\
    \ other Service\n   Class characteristics to the LSP, or that one wants to make\
    \ sure that\n   alternative routes use physically separate paths through the network.\n"
- title: 2.1 Strict and Loose Explicit Routes
  contents:
  - "2.1 Strict and Loose Explicit Routes\n   An explicit route is represented in\
    \ a Label Request Message as a list\n   of nodes or groups of nodes along the\
    \ constraint-based route. When\n   the CR-LSP is established, all or a subset\
    \ of the nodes in a group\n   may be traversed by the LSP.  Certain operations\
    \ to be performed\n   along the path can also be encoded in the constraint-based\
    \ route.\n   The capability to specify, in addition to specified nodes, groups\
    \ of\n   nodes, of which a subset will be traversed by the CR-LSP, allows the\n\
    \   system a significant amount of local flexibility in fulfilling a\n   request\
    \ for a constraint-based route.  This allows the generator of\n   the constraint-based\
    \ route to have some degree of imperfect\n   information about the details of\
    \ the path.\n   The constraint-based route is encoded as a series of ER-Hops\n\
    \   contained in a constraint-based route TLV.  Each ER-Hop may identify\n   a\
    \ group of nodes in the constraint-based route.  A constraint-based\n   route\
    \ is then a path including all of the identified groups of nodes\n   in the order\
    \ in which they appear in the TLV.\n   To simplify the discussion, we call each\
    \ group of nodes an \"abstract\n   node\".  Thus, we can also say that a constraint-based\
    \ route is a path\n   including all of the abstract nodes, with the specified\
    \ operations\n   occurring along that path.\n"
- title: 2.2 Traffic Characteristics
  contents:
  - "2.2 Traffic Characteristics\n   The traffic characteristics of a path are described\
    \ in the Traffic\n   Parameters TLV in terms of a peak rate, committed rate, and\
    \ service\n   granularity.  The peak and committed rates describe the bandwidth\n\
    \   constraints of a path while the service granularity can be used to\n   specify\
    \ a constraint on the delay variation that the CR-LDP MPLS\n   domain may introduce\
    \ to a path's traffic.\n"
- title: 2.3 Preemption
  contents:
  - "2.3 Preemption\n   CR-LDP signals the resources required by a path on each hop\
    \ of the\n   route.  If a route with sufficient resources can not be found,\n\
    \   existing paths may be rerouted to reallocate resources to the new\n   path.\
    \  This is the process of path preemption.  Setup and holding\n   priorities are\
    \ used to rank existing paths (holding priority) and the\n   new path (setup priority)\
    \ to determine if the new path can preempt an\n   existing path.\n   The setupPriority\
    \ of a new CR-LSP and the holdingPriority attributes\n   of the existing CR-LSP\
    \ are used to specify priorities.  Signaling a\n   higher holding priority express\
    \ that the path, once it has been\n   established, should have a lower chance\
    \ of being preempted. Signaling\n   a higher setup priority expresses the expectation\
    \ that, in the case\n   that resource are unavailable, the path is more likely\
    \ to preempt\n   other paths.  The exact rules determining bumping are an aspect\
    \ of\n   network policy.\n   The allocation of setup and holding priority values\
    \ to paths is an\n   aspect of network policy.\n   The setup and holding priority\
    \ values range from zero (0) to seven\n   (7).  The value zero (0) is the priority\
    \ assigned to the most\n   important path.  It is referred to as the highest priority.\
    \  Seven\n   (7) is the priority for the least important path.  The use of default\n\
    \   priority values is an aspect of network policy.  The recommended\n   default\
    \ value is (4).\n   The setupPriority of a CR-LSP should not be higher (numerically\
    \ less)\n   than its holdingPriority since it might bump an LSP and be bumped\
    \ by\n   the next \"equivalent\" request.\n"
- title: 2.4 Route Pinning
  contents:
  - "2.4 Route Pinning\n   Route pinning is applicable to segments of an LSP that\
    \ are loosely\n   routed - i.e. those segments which are specified with a next\
    \ hop with\n   the \"L\" bit set or where the next hop is an abstract node.  A\
    \ CR-LSP\n   may be setup using route pinning if it is undesirable to change the\n\
    \   path used by an LSP even when a better next hop becomes available at\n   some\
    \ LSR along the loosely routed portion of the LSP.\n"
- title: 2.5 Resource Class
  contents:
  - "2.5 Resource Class\n   The network operator may classify network resources in\
    \ various ways.\n   These classes are also known as \"colors\" or \"administrative\
    \ groups\".\n   When a CR-LSP is being established, it's necessary to indicate\
    \ which\n   resource classes the CR-LSP can draw from.\n"
- title: 3. Solution Overview
  contents:
  - "3. Solution Overview\n   CR-LSP over LDP Specification is designed with the following\
    \ goals:\n      1. Meet the requirements outlined in [3] for performing traffic\n\
    \         engineering and provide a solid foundation for performing more\n   \
    \      general constraint-based routing.\n      2. Build on already specified\
    \ functionality that meets the\n         requirements whenever possible.  Hence,\
    \ this specification is\n         based on [1].\n      3. Keep the solution simple.\n\
    \   In this document, support for unidirectional point-to-point CR-LSPs\n   is\
    \ specified.  Support for point-to-multipoint, multipoint-to-point,\n   is for\
    \ further study (FFS).\n   Support for constraint-based routed LSPs in this specification\n\
    \   depends on the following minimal LDP behaviors as specified in [1]:\n    \
    \  -  Use of Basic and/or Extended Discovery Mechanisms.\n      -  Use of the\
    \ Label Request Message defined in [1] in downstream\n         on demand label\
    \ advertisement mode with ordered control.\n      -  Use of the Label Mapping\
    \ Message defined in [1] in downstream\n         on demand mode with ordered control.\n\
    \      -  Use of the Notification Message defined in [1].\n      -  Use of the\
    \ Withdraw and Release Messages defined in [1].\n      -  Use of the Loop Detection\
    \ (in the case of loosely routed\n         segments of a CR-LSP) mechanisms defined\
    \ in [1].\n   In addition, the following functionality is added to what's defined\n\
    \   in [1]:\n      -  The Label Request Message used to setup a CR-LSP includes\
    \ one\n         or more CR-TLVs defined in Section 4.  For instance, the Label\n\
    \         Request Message may include the ER-TLV.\n      -  An LSR implicitly\
    \ infers ordered control from the existence of\n         one or more CR-TLVs in\
    \ the Label Request Message.  This means\n         that the LSR can still be configured\
    \ for independent control\n         for LSPs established as a result of dynamic\
    \ routing.  However,\n         when a Label Request Message includes one or more\
    \ of the CR-\n         TLVs, then ordered control is used to setup the CR-LSP.\
    \  Note\n         that this is also true for the loosely routed parts of a CR-\n\
    \         LSP.\n      -  New status codes are defined to handle error notification\
    \ for\n         failure of established paths specified in the CR-TLVs.  All of\n\
    \         the new status codes require that the F bit be set.\n   Optional TLVs\
    \ MUST be implemented to be compliant with the protocol.\n   However, they are\
    \ optionally carried in the CR-LDP messages to signal\n   certain characteristics\
    \ of the CR-LSP being established or modified.\n   Examples of CR-LSP establishment\
    \ are given in Appendix A to\n   illustrate how the mechanisms described in this\
    \ document work.\n"
- title: 3.1 Required Messages and TLVs
  contents:
  - "3.1 Required Messages and TLVs\n   Any Messages, TLVs, and procedures not defined\
    \ explicitly in this\n   document are defined in the LDP Specification [1].  The\
    \ reader can\n   use [7] as an informational document about the state transitions,\n\
    \   which relate to CR-LDP messages.\n   The following subsections are meant as\
    \ a cross-reference to the [1]\n   document and indication of additional functionality\
    \ beyond what's\n   defined in [1] where necessary.\n   Note that use of the Status\
    \ TLV is not limited to Notification\n   messages as specified in Section 3.4.6\
    \ of [1].  A message other than\n   a Notification message may carry a Status\
    \ TLV as an Optional\n   Parameter.  When a message other than a Notification\
    \ carries a Status\n   TLV the U-bit of the Status TLV should be set to 1 to indicate\
    \ that\n   the receiver should silently discard the TLV if unprepared to handle\n\
    \   it.\n"
- title: 3.2 Label Request Message
  contents:
  - "3.2 Label Request Message\n   The Label Request Message is as defined in 3.5.8\
    \ of [1] with the\n   following modifications (required only if any of the CR-TLVs\
    \ is\n   included in the Label Request Message):\n      -  The Label Request Message\
    \ MUST include a single FEC-TLV\n         element. The CR-LSP FEC TLV element\
    \ SHOULD be used.  However,\n         the other FEC- TLVs defined in [1] MAY be\
    \ used instead for\n         certain applications.\n      -  The Optional Parameters\
    \ TLV includes the definition of any of\n         the Constraint-based TLVs specified\
    \ in Section 4.\n      -  The Procedures to handle the Label Request Message are\n\
    \         augmented by the procedures for processing of the CR-TLVs as\n     \
    \    defined in Section 4.\n   The encoding for the CR-LDP Label Request Message\
    \ is as follows:\n   0                   1                   2               \
    \    3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |0| \
    \  Label Request (0x0401)   |      Message Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Message ID                                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     FEC TLV                                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     LSPID TLV            (CR-LDP, mandatory)  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     ER-TLV               (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Traffic  TLV         (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Pinning TLV          (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Resource Class TLV (CR-LDP, optional)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Preemption  TLV      (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.3 Label Mapping Message
  contents:
  - "3.3 Label Mapping Message\n   The Label Mapping Message is as defined in 3.5.7\
    \ of [1] with the\n   following modifications:\n      -  The Label Mapping Message\
    \ MUST include a single Label-TLV.\n      -  The Label Mapping Message Procedures\
    \ are limited to downstream\n         on demand ordered control mode.\n   A Mapping\
    \ message is transmitted by a downstream LSR to an upstream\n   LSR under one\
    \ of the following conditions:\n      1. The LSR is the egress end of the CR-LSP\
    \ and an upstream mapping\n         has been requested.\n      2. The LSR received\
    \ a mapping from its downstream next hop LSR for\n         an CR-LSP for which\
    \ an upstream request is still pending.\n   The encoding for the CR-LDP Label\
    \ Mapping Message is as follows:\n   0                   1                   2\
    \                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|   Label Mapping (0x0400)   |      Message Length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Message ID                                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     FEC TLV                                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Label TLV                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              Label Request Message ID TLV                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     LSPID TLV            (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Traffic  TLV         (CR-LDP, optional)   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.4 Notification Message
  contents:
  - "3.4 Notification Message\n   The Notification Message is as defined in Section\
    \ 3.5.1 of [1] and\n   the Status TLV encoding is as defined in Section 3.4.6\
    \ of [1].\n   Establishment of an CR-LSP may fail for a variety of reasons.  All\n\
    \   such failures are considered advisory conditions and they are\n   signaled\
    \ by the Notification Message.\n   Notification Messages carry Status TLVs to\
    \ specify events being\n   signaled.  New status codes are defined in Section\
    \ 4.11 to signal\n   error notifications associated with the establishment of\
    \ a CR-LSP and\n   the processing of the CR-TLV.  All of the new status codes\
    \ require\n   that the F bit be set.\n   The Notification Message MAY carry the\
    \ LSPID TLV of the corresponding\n   CR-LSP.\n   Notification Messages MUST be\
    \ forwarded toward the LSR originating\n   the Label Request at each hop and at\
    \ any time that procedures in this\n   specification - or in [1] - specify sending\
    \ of a Notification Message\n   in response to a Label Request Message.\n   The\
    \ encoding of the notification message is as follows:\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|   Notification (0x0001)     |      Message Length           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Message ID                                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Status (TLV)                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Optional Parameters                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 3.5 Release , Withdraw, and Abort Messages
  contents:
  - "3.5 Release , Withdraw, and Abort Messages\n   The Label Release , Label Withdraw,\
    \ and Label Abort Request Messages\n   are used as specified in [1].  These messages\
    \ MAY also carry the\n   LSPID TLV.\n"
- title: 4. Protocol Specification
  contents:
  - "4. Protocol Specification\n   The Label Request Message defined in [1] MUST carry\
    \ the LSPID TLV and\n   MAY carry one or more of the optional Constraint-based\
    \ Routing TLVs\n   (CR-TLVs) defined in this section.  If needed, other constraints\
    \ can\n   be supported later through the definition of new TLVs.  In this\n  \
    \ specification, the following TLVs are defined:\n      -  Explicit Route TLV\n\
    \      -  Explicit Route Hop TLV\n      -  Traffic Parameters TLV\n      -  Preemption\
    \ TLV\n      -  LSPID TLV\n      -  Route Pinning TLV\n      -  Resource Class\
    \ TLV\n      -  CR-LSP FEC TLV\n"
- title: 4.1 Explicit Route TLV (ER-TLV)
  contents:
  - "4.1 Explicit Route TLV (ER-TLV)\n   The ER-TLV is an object that specifies the\
    \ path to be taken by the\n   LSP being established.  It is composed of one or\
    \ more Explicit Route\n   Hop TLVs (ER-Hop TLVs) defined in Section 4.2.\n   0\
    \                   1                   2                   3\n   0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|         Type = 0x0800     |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          ER-Hop TLV 1                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          ER-Hop TLV 2                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ~                          ............                         ~\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          ER-Hop TLV n                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ER-TLV\n   \
    \      Type = 0x0800.\n   Length\n         Specifies the length of the value field\
    \ in bytes.\n   ER-Hop TLVs\n         One or more ER-Hop TLVs defined in Section\
    \ 4.2.\n"
- title: 4.2 Explicit Route Hop TLV (ER-Hop TLV)
  contents:
  - "4.2 Explicit Route Hop TLV (ER-Hop TLV)\n   The contents of an ER-TLV are a series\
    \ of variable length ER-Hop\n   TLVs.\n   A node receiving a label request message\
    \ including an ER-Hop type\n   that is not supported MUST not progress the label\
    \ request message to\n   the downstream LSR and MUST send back a \"No Route\"\
    \ Notification\n   Message.\n   Each ER-Hop TLV has the form:\n   0          \
    \         1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|                 Type      |      Length                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|                                  Content //                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   ER-Hop Type\n         A fourteen-bit field carrying the type of the ER-Hop\
    \ contents.\n         Currently defined values are:\n         Value  Type\n  \
    \       ------ ------------------------\n         0x0801 IPv4 prefix\n       \
    \  0x0802 IPv6 prefix\n         0x0803 Autonomous system number\n         0x0804\
    \ LSPID\n   Length\n         Specifies the length of the value field in bytes.\n\
    \   L bit\n         The L bit in the ER-Hop is a one-bit attribute.  If the L\
    \ bit\n         is set, then the value of the attribute is \"loose.\"  Otherwise,\n\
    \         the value of the attribute is \"strict.\"  For brevity, we say\n   \
    \      that if the value of the ER-Hop attribute is loose then it is a\n     \
    \    \"loose ER-Hop.\"  Otherwise, it's a \"strict ER-Hop.\"  Further,\n     \
    \    we say that the abstract node of a strict or loose ER-Hop is a\n        \
    \ strict or a loose node, respectively.  Loose and strict nodes\n         are\
    \ always interpreted relative to their prior abstract nodes.\n         The path\
    \ between a strict node and its prior node MUST include\n         only network\
    \ nodes from the strict node and its prior abstract\n         node.\n        \
    \ The path between a loose node and its prior node MAY include\n         other\
    \ network nodes, which are not part of the strict node or\n         its prior\
    \ abstract node.\n   Contents\n         A variable length field containing a node\
    \ or abstract node\n         which is one of the consecutive nodes that make up\
    \ the\n         explicitly routed LSP.\n"
- title: 4.3 Traffic Parameters TLV
  contents:
  - "4.3 Traffic Parameters TLV\n   The following sections describe the CR-LSP Traffic\
    \ Parameters.  The\n   required characteristics of a CR-LSP are expressed by the\
    \ Traffic\n   Parameter values.\n   A Traffic Parameters TLV, is used to signal\
    \ the Traffic Parameter\n   values.  The Traffic Parameters are defined in the\
    \ subsequent\n   sections.\n   The Traffic Parameters TLV contains a Flags field,\
    \ a Frequency, a\n   Weight, and the five Traffic Parameters PDR, PBS, CDR, CBS,\
    \ EBS.\n   0                   1                   2                   3\n   0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|        Type = 0x0810      |      Length = 24              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Flags     |    Frequency  |     Reserved  |    Weight     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Peak Data Rate (PDR)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Peak Burst Size (PBS)                      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Committed Data Rate (CDR)                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Committed Burst Size (CBS)                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    Excess Burst Size (EBS)                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the Traffic\n  \
    \       Parameters TLV Type = 0x0810.\n   Length\n         Specifies the length\
    \ of the value field in bytes = 24.\n   Flags\n         The Flags field is shown\
    \ below:\n         +--+--+--+--+--+--+--+--+\n         | Res |F6|F5|F4|F3|F2|F1|\n\
    \         +--+--+--+--+--+--+--+--+\n         Res - These bits are reserved.\n\
    \         Zero on transmission.\n         Ignored on receipt.\n         F1 - Corresponds\
    \ to the PDR.\n         F2 - Corresponds to the PBS.\n         F3 - Corresponds\
    \ to the CDR.\n         F4 - Corresponds to the CBS.\n         F5 - Corresponds\
    \ to the EBS.\n         F6 - Corresponds to the Weight.\n         Each flag Fi\
    \ is a Negotiable Flag corresponding to a Traffic\n         Parameter.  The Negotiable\
    \ Flag value zero denotes\n         NotNegotiable and value one denotes Negotiable.\n\
    \   Frequency\n         The Frequency field is coded as an 8 bit unsigned integer\
    \ with\n         the following code points defined:\n         0- Unspecified\n\
    \         1- Frequent\n         2- VeryFrequent\n         3-255  - Reserved\n\
    \         Reserved - Zero on transmission.  Ignored on receipt.\n   Weight\n \
    \        An 8 bit unsigned integer indicating the weight of the CR-LSP.\n    \
    \     Valid weight values are from 1 to 255.  The value 0 means that\n       \
    \  weight is not applicable for the CR-LSP.\n   Traffic Parameters\n         Each\
    \ Traffic Parameter is encoded as a 32-bit IEEE single-\n         precision floating-point\
    \ number.  A value of positive infinity\n         is represented as an IEEE single-precision\
    \ floating-point\n         number with an exponent of all ones (255) and a sign\
    \ and\n         mantissa of all zeros.  The values PDR and CDR are in units of\n\
    \         bytes per second.  The values PBS, CBS and EBS are in units of\n   \
    \      bytes.\n         The value of PDR MUST be greater than or equal to the\
    \ value of\n         CDR in a correctly encoded Traffic Parameters TLV.\n"
- title: 4.3.1 Semantics
  contents:
  - '4.3.1 Semantics

    '
- title: 4.3.1.1 Frequency
  contents:
  - "4.3.1.1 Frequency\n   The Frequency specifies at what granularity the CDR allocated\
    \ to the\n   CR-LSP is made available.  The value VeryFrequent means that the\n\
    \   available rate should average at least the CDR when measured over any\n  \
    \ time interval equal to or longer than the shortest packet time at the\n   CDR.\
    \  The value Frequent means that the available rate should average\n   at least\
    \ the CDR when measured over any time interval equal to or\n   longer than a small\
    \ number of shortest packet times at the CDR.\n   The value Unspecified means\
    \ that the CDR MAY be provided at any\n   granularity.\n"
- title: 4.3.1.2 Peak Rate
  contents:
  - "4.3.1.2 Peak Rate\n   The Peak Rate defines the maximum rate at which traffic\
    \ SHOULD be\n   sent to the CR-LSP.  The Peak Rate is useful for the purpose of\n\
    \   resource allocation.  If resource allocation within the MPLS domain\n   depends\
    \ on the Peak Rate value then it should be enforced at the\n   ingress to the\
    \ MPLS domain.\n   The Peak Rate is defined in terms of the two Traffic Parameters\
    \ PDR\n   and PBS, see section 4.3.1.5 below.\n"
- title: 4.3.1.3 Committed Rate
  contents:
  - "4.3.1.3 Committed Rate\n   The Committed Rate defines the rate that the MPLS\
    \ domain commits to\n   be available to the CR-LSP.\n   The Committed Rate is\
    \ defined in terms of the two Traffic Parameters\n   CDR and CBS, see section\
    \ 4.3.1.6 below.\n"
- title: 4.3.1.4 Excess Burst Size
  contents:
  - "4.3.1.4 Excess Burst Size\n   The Excess Burst Size may be used at the edge of\
    \ an MPLS domain for\n   the purpose of traffic conditioning.  The EBS MAY be\
    \ used to measure\n   the extent by which the traffic sent on a CR-LSP exceeds\
    \ the\n   committed rate.\n   The possible traffic conditioning actions, such\
    \ as passing, marking\n   or dropping, are specific to the MPLS domain.\n   The\
    \ Excess Burst Size is defined together with the Committed Rate,\n   see section\
    \ 4.3.1.6 below.\n"
- title: 4.3.1.5 Peak Rate Token Bucket
  contents:
  - "4.3.1.5 Peak Rate Token Bucket\n   The Peak Rate of a CR-LSP is specified in\
    \ terms of a token bucket P\n   with token rate PDR and maximum token bucket size\
    \ PBS.\n   The token bucket P is initially (at time 0) full, i.e., the token\n\
    \   count Tp(0) = PBS.  Thereafter, the token count Tp, if less than PBS,\n  \
    \ is incremented by one PDR times per second.  When a packet of size B\n   bytes\
    \ arrives at time t, the following happens:\n      -  If Tp(t)-B >= 0, the packet\
    \ is not in excess of the peak  rate\n         and Tp is decremented by B down\
    \ to the minimum value of 0, else\n      -  the packet is in excess of the peak\
    \ rate and Tp is not\n         decremented.\n   Note that according to the above\
    \ definition, a positive infinite\n   value of either PDR or PBS implies that\
    \ arriving packets are never in\n   excess of the peak rate.\n   The actual implementation\
    \ of an LSR doesn't need to be modeled\n   according to the above formal token\
    \ bucket specification.\n"
- title: 4.3.1.6 Committed Data Rate Token Bucket
  contents:
  - "4.3.1.6 Committed Data Rate Token Bucket\n   The committed rate of a CR-LSP is\
    \ specified in terms of a token\n   bucket C with rate CDR.  The extent by which\
    \ the offered rate exceeds\n   the committed rate MAY be measured in terms of\
    \ another token bucket\n   E, which also operates at rate CDR.  The maximum size\
    \ of the token\n   bucket C is CBS and the maximum size of the token bucket E\
    \ is EBS.\n   The token buckets C and E are initially (at time 0) full, i.e.,\
    \ the\n   token count Tc(0) = CBS and the token count Te(0) = EBS.\n   Thereafter,\
    \ the token counts Tc and Te are updated CDR times per\n   second as follows:\n\
    \      -  If Tc is less than CBS, Tc is incremented by one, else\n      -  if\
    \ Te is less then EBS, Te is incremented by one, else neither\n         Tc nor\
    \ Te is incremented.\n   When a packet of size B bytes arrives at time t, the\
    \ following\n   happens:\n      -  If Tc(t)-B >= 0, the packet is not in excess\
    \ of the Committed\n         Rate and Tc is decremented by B down to the minimum\
    \ value of 0,\n         else\n      -  if Te(t)-B >= 0, the packet is in excess\
    \ of the Committed rate\n         but is not in excess of the EBS and Te is decremented\
    \ by B down\n         to the minimum value of 0, else\n      -  the packet is\
    \ in excess of both the Committed Rate and the EBS\n         and neither Tc nor\
    \ Te is decremented.\n   Note that according to the above specification, a CDR\
    \ value of\n   positive infinity implies that arriving packets are never in excess\n\
    \   of either the Committed Rate or EBS.  A positive infinite value of\n   either\
    \ CBS or EBS implies that the respective limit cannot be\n   exceeded.\n   The\
    \ actual implementation of an LSR doesn't need to be modeled\n   according to\
    \ the above formal specification.\n"
- title: 4.3.1.7 Weight
  contents:
  - "4.3.1.7 Weight\n   The weight determines the CR-LSP's relative share of the possible\n\
    \   excess bandwidth above its committed rate.  The definition of\n   \"relative\
    \ share\" is MPLS domain specific.\n"
- title: 4.3.2 Procedures
  contents:
  - '4.3.2 Procedures

    '
- title: 4.3.2.1 Label Request Message
  contents:
  - "4.3.2.1 Label Request Message\n   If an LSR receives an incorrectly encoded Traffic\
    \ Parameters TLV in\n   which the value of PDR is less than the value of CDR then\
    \ it MUST\n   send a Notification Message including the Status code \"Traffic\n\
    \   Parameters Unavailable\" to the upstream LSR from which it received\n   the\
    \ erroneous message.\n   If a Traffic Parameter is indicated as Negotiable in\
    \ the Label\n   Request Message by the corresponding Negotiable Flag then an LSR\
    \ MAY\n   replace the Traffic Parameter value with a smaller value.\n   If the\
    \ Weight is indicated as Negotiable in the Label Request Message\n   by the corresponding\
    \ Negotiable Flag then an LSR may replace the\n   Weight value with a lower value\
    \ (down to 0).\n   If, after possible Traffic Parameter negotiation, an LSR can\
    \ support\n   the CR-LSP Traffic Parameters then the LSR MUST reserve the\n  \
    \ corresponding resources for the CR-LSP.\n   If, after possible Traffic Parameter\
    \ negotiation, an LSR cannot\n   support the CR-LSP Traffic Parameters then the\
    \ LSR MUST send a\n   Notification Message that contains the \"Resource Unavailable\"\
    \ status\n   code.\n"
- title: 4.3.2.2 Label Mapping Message
  contents:
  - "4.3.2.2 Label Mapping Message\n   If an LSR receives an incorrectly encoded Traffic\
    \ Parameters TLV in\n   which the value of PDR is less than the value of CDR then\
    \ it MUST\n   send a Label Release message containing the Status code \"Traffic\n\
    \   Parameters Unavailable\" to the LSR from which it received the\n   erroneous\
    \ message.  In addition, the LSP should send a Notification\n   Message upstream\
    \ with the status code 'Label Request Aborted'.\n   If the negotiation flag was\
    \ set in the label request message, the\n   egress LSR MUST include the (possibly\
    \ negotiated) Traffic Parameters\n   and Weight in the Label Mapping message.\n\
    \   The Traffic Parameters and the Weight in a Label Mapping message MUST\n  \
    \ be forwarded unchanged.\n   An LSR SHOULD adjust the resources that it reserved\
    \ for a CR-LSP when\n   it receives a Label Mapping Message if the Traffic Parameters\
    \ differ\n   from those in the corresponding Label Request Message.\n"
- title: 4.3.2.3 Notification Message
  contents:
  - "4.3.2.3 Notification Message\n   If an LSR receives a Notification Message for\
    \ a CR-LSP, it SHOULD\n   release any resources that it possibly had reserved\
    \ for the CR-LSP.\n   In addition, on receiving a Notification Message from a\
    \ Downstream\n   LSR that is associated with a Label Request from an upstream\
    \ LSR, the\n   local LSR MUST propagate the Notification message using the\n \
    \  procedures in [1].  Further the F bit MUST be set.\n"
- title: 4.4 Preemption TLV
  contents:
  - "4.4 Preemption TLV\n   The default value of the setup and holding priorities\
    \ should be in\n   the middle of the range (e.g., 4) so that this feature can\
    \ be turned\n   on gradually in an operational network by increasing or decreasing\n\
    \   the priority starting at the middle of the range.\n   Since the Preemption\
    \ TLV is an optional TLV, LSPs that are setup\n   without an explicitly signaled\
    \ preemption TLV SHOULD be treated as\n   LSPs with the default setup and holding\
    \ priorities (e.g., 4).\n   When an established LSP is preempted, the LSR that\
    \ initiates the\n   preemption sends a Withdraw Message upstream and a Release\
    \ Message\n   downstream.\n   When an LSP in the process of being established\
    \ (outstanding Label\n   Request without getting a Label Mapping back) is preempted,\
    \ the LSR\n   that initiates the preemption, sends a Notification Message upstream\n\
    \   and an Abort Message downstream.\n   0                   1               \
    \    2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|     Type = 0x0820         |      Length = 4               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  SetPrio      | HoldPrio      |      Reserved                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the Preemption-TLV\n\
    \         Type = 0x0820.\n   Length\n         Specifies the length of the value\
    \ field in bytes = 4.\n   Reserved\n         Zero on transmission.  Ignored on\
    \ receipt.\n   SetPrio\n         A SetupPriority of value zero (0) is the priority\
    \ assigned to\n         the most important path.  It is referred to as the highest\n\
    \         priority.  Seven (7) is the priority for the least important\n     \
    \    path.  The higher the setup priority, the more paths CR-LDP can\n       \
    \  bump to set up the path.  The default value should be 4.\n   HoldPrio\n   \
    \      A HoldingPriority of value zero (0) is the priority assigned to\n     \
    \    the most important path.  It is referred to as the highest\n         priority.\
    \  Seven (7) is the priority for the least important\n         path.  The default\
    \ value should be 4.\n         The higher the holding priority, the less likely\
    \ it is for CR-\n         LDP to reallocate its bandwidth to a new path.\n"
- title: 4.5 LSPID TLV
  contents:
  - "4.5 LSPID TLV\n   LSPID is a unique identifier of a CR-LSP within an MPLS network.\n\
    \   The LSPID is composed of the ingress LSR Router ID (or any of its\n   own\
    \ Ipv4 addresses) and a Locally unique CR-LSP ID to that LSR.\n   The LSPID is\
    \ useful in network management, in CR-LSP repair, and in\n   using an already\
    \ established CR-LSP as a hop in an ER-TLV.\n   An \"action indicator flag\" is\
    \ carried in the LSPID TLV.  This \"action\n   indicator flag\" indicates explicitly\
    \ the action that should be taken\n   if the LSP already exists on the LSR receiving\
    \ the message.\n   After a CR-LSP is set up, its bandwidth reservation may need\
    \ to be\n   changed by the network operator, due to the new requirements for the\n\
    \   traffic carried on that CR-LSP.  The \"action indicator flag\" is used\n \
    \  indicate the need to modify the bandwidth and possibly other\n   parameters\
    \ of an established CR-LSP without service interruption.\n   This feature has\
    \ application in dynamic network resources management\n   where traffic of different\
    \ priorities and service classes is\n   involved.\n   The procedure for the code\
    \ point \"modify\" is defined in [8].  The\n   procedures for other flags are\
    \ FFS.\n   0                   1                   2                   3\n   0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|       Type = 0x0821       |      Length = 4               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Reserved        |ActFlg |      Local CR-LSP ID          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Ingress LSR Router ID                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the LSPID-TLV\n\
    \         Type = 0x0821.\n   Length\n         Specifies the length of the value\
    \ field in bytes = 4.\n   ActFlg\n         Action Indicator Flag: A 4-bit field\
    \ that indicates explicitly\n         the action that should be taken if the LSP\
    \ already exists on\n         the LSR receiving the message.  A set of indicator\
    \ code points\n         is proposed as follows:\n               0000: indicates\
    \ initial LSP setup\n               0001: indicates modify LSP\n   Reserved\n\
    \         Zero on transmission.  Ignored on receipt.\n   Local CR-LSP ID\n   \
    \      The Local LSP ID is an identifier of the CR-LSP locally unique\n      \
    \   within the Ingress LSR originating the CR-LSP.\n   Ingress LSR Router ID\n\
    \         An LSR may use any of its own IPv4 addresses in this field.\n"
- title: 4.6 Resource Class (Color) TLV
  contents:
  - "4.6 Resource Class (Color) TLV\n   The Resource Class as defined in [3] is used\
    \ to specify which links\n   are acceptable by this CR-LSP.  This information\
    \ allows for the\n   network's topology to be pruned.\n   0                  \
    \ 1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|         Type = 0x0822     |      Length = 4               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             RsCls                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ResCls-TLV\n\
    \         Type = 0x0822.\n   Length\n         Specifies the length of the value\
    \ field in bytes = 4.\n   RsCls\n         The Resource Class bit mask indicating\
    \ which of the 32\n         \"administrative groups\" or \"colors\" of links the\
    \ CR-LSP can\n         traverse.\n"
- title: 4.7 ER-Hop semantics
  contents:
  - '4.7 ER-Hop semantics

    '
- title: '4.7.1. ER-Hop 1: The IPv4 prefix'
  contents:
  - "4.7.1. ER-Hop 1: The IPv4 prefix\n   The abstract node represented by this ER-Hop\
    \ is the set of nodes,\n   which have an IP address, which lies within this prefix.\
    \  Note that a\n   prefix length of 32 indicates a single IPv4 node.\n   0   \
    \                1                   2                   3\n   0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|         Type = 0x0801     |      Length = 8               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|      Reserved                               |    PreLen     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    IPv4 Address (4 bytes)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ER-Hop 1, IPv4\n\
    \         Address, Type = 0x0801\n   Length\n         Specifies the length of\
    \ the value field in bytes = 8.\n   L Bit\n         Set to indicate Loose hop.\n\
    \         Cleared to indicate a strict hop.\n   Reserved\n         Zero on transmission.\
    \  Ignored on receipt.\n   PreLen\n         Prefix Length 1-32\n   IP Address\n\
    \         A four-byte field indicating the IP Address.\n"
- title: '4.7.2. ER-Hop 2: The IPv6 address'
  contents:
  - "4.7.2. ER-Hop 2: The IPv6 address\n   0                   1                 \
    \  2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|          0x0802           |      Length = 20              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|             Reserved                        |    PreLen     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  IPV6 address                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  IPV6 address (continued)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  IPV6 address (continued)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                  IPV6 address (continued)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ER-Hop 2, IPv6\n\
    \         Address, Type = 0x0802\n   Length\n         Specifies the length of\
    \ the value field in bytes = 20.\n   L Bit\n         Set to indicate Loose hop.\n\
    \         Cleared to indicate a strict hop.\n   Reserved\n         Zero on transmission.\
    \  Ignored on receipt.\n   PreLen\n         Prefix Length 1-128\n   IPv6 address\n\
    \         A 128-bit unicast host address.\n"
- title: '4.7.3. ER-Hop 3:  The autonomous system number'
  contents:
  - "4.7.3. ER-Hop 3:  The autonomous system number\n   The abstract node represented\
    \ by this ER-Hop is the set of nodes\n   belonging to the autonomous system.\n\
    \   0                   1                   2                   3\n   0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|          0x0803           |      Length = 4               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|          Reserved           |                AS Number      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ER-Hop 3, AS\n\
    \         Number, Type = 0x0803\n   Length\n         Specifies the length of the\
    \ value field in bytes = 4.\n   L Bit\n         Set to indicate Loose hop.\n \
    \        Cleared to indicate a strict hop.\n   Reserved\n         Zero on transmission.\
    \  Ignored on receipt.\n   AS Number\n         Autonomous System number\n"
- title: '4.7.4. ER-Hop 4: LSPID'
  contents:
  - "4.7.4. ER-Hop 4: LSPID\n   The LSPID is used to identify the tunnel ingress point\
    \ as the next\n   hop in the ER.  This ER-Hop allows for stacking new CR-LSPs\
    \ within an\n   already established CR-LSP.  It also allows for splicing the CR-LSP\n\
    \   being established with an existing CR-LSP.\n   If an LSPID Hop is the last\
    \ ER-Hop in an ER-TLV, than the LSR may\n   splice the CR-LSP of the incoming\
    \ Label Request to the CR-LSP that\n   currently exists with this LSPID.  This\
    \ is useful, for example, at\n   the point at which a Label Request used for local\
    \ repair arrives at\n   the next ER-Hop after the loosely specified CR-LSP segment.\
    \  Use of\n   the LSPID Hop in this scenario eliminates the need for ER-Hops to\n\
    \   keep the entire remaining ER-TLV at each LSR that is at either\n   (upstream\
    \ or downstream) end of a loosely specified CR-LSP segment as\n   part of its\
    \ state information.  This is due to the fact that the\n   upstream LSR needs\
    \ only to keep the next ER-Hop and the LSPID and the\n   downstream LSR needs\
    \ only to keep the LSPID in order for each end to\n   be able to recognize that\
    \ the same LSP is being identified.\n   If the LSPID Hop is not the last hop in\
    \ an ER-TLV, the LSR must\n   remove the LSP-ID Hop and forward the remaining\
    \ ER-TLV in a Label\n   Request message using an LDP session established with\
    \ the LSR that is\n   the specified CR-LSP's egress.  That LSR will continue processing\
    \ of\n   the CR-LSP Label Request Message.  The result is a tunneled, or\n   stacked,\
    \ CR-LSP.\n   To support labels negotiated for tunneled CR-LSP segments, an LDP\n\
    \   session is required [1] between tunnel end points - possibly using\n   the\
    \ existing CR-LSP.  Use of the existence of the CR-LSP in lieu of a\n   session,\
    \ or other possible session-less approaches, is FFS.\n   0                   1\
    \                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|          0x0804           |      Length = 8               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |L|          Reserved           |               Local LSPID     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Ingress LSR Router ID                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the ER-Hop 4, LSPID,\n\
    \         Type = 0x0804\n   Length\n         Specifies the length of the value\
    \ field in bytes = 8.\n   L Bit\n         Set to indicate Loose hop.\n       \
    \  Cleared to indicate a strict hop.\n   Reserved\n         Zero on transmission.\
    \  Ignored on receipt.\n   Local LSPID\n         A 2 byte field indicating the\
    \ LSPID which is unique with\n         reference to its Ingress LSR.\n   Ingress\
    \ LSR Router ID\n         An LSR may use any of its own IPv4 addresses in this\
    \ field.\n"
- title: 4.8. Processing of the Explicit Route TLV
  contents:
  - '4.8. Processing of the Explicit Route TLV

    '
- title: 4.8.1. Selection of the next hop
  contents:
  - "4.8.1. Selection of the next hop\n   A Label Request Message containing an explicit\
    \ route TLV must\n   determine the next hop for this path.  Selection of this\
    \ next hop may\n   involve a selection from a set of possible alternatives.  The\n\
    \   mechanism for making a selection from this set is implementation\n   dependent\
    \ and is outside of the scope of this specification.\n   Selection of particular\
    \ paths is also outside of the scope of this\n   specification, but it is assumed\
    \ that each node will make a best\n   effort attempt to determine a loop-free\
    \ path.  Note that such best\n   efforts may be overridden by local policy.\n\
    \   To determine the next hop for the path, a node performs the following\n  \
    \ steps:\n      1. The node receiving the Label Request Message must first\n \
    \        evaluate the first ER-Hop.  If the L bit is not set in the\n        \
    \ first ER-Hop and if the node is not part of the abstract node\n         described\
    \ by the first ER-Hop, it has received the message in\n         error, and should\
    \ return a \"Bad Initial ER-Hop Error\" status.\n         If the L bit is set\
    \ and the local node is not part of the\n         abstract node described by the\
    \ first ER-Hop, the node selects a\n         next hop that is along the path to\
    \ the abstract node described\n         by the first ER-Hop.  If there is no first\
    \ ER-Hop, the message\n         is also in error and the system should return\
    \ a \"Bad Explicit\n         Routing TLV Error\" status using a Notification Message\
    \ sent\n         upstream.\n      2. If there is no second ER-Hop, this indicates\
    \ the end of the\n         explicit route.  The explicit route TLV should be removed\
    \ from\n         the Label Request Message.  This node may or may not be the end\n\
    \         of the LSP.  Processing continues with section 4.8.2, where a\n    \
    \     new explicit route TLV may be added to the Label Request\n         Message.\n\
    \      3. If the node is also a part of the abstract node described by\n     \
    \    the second ER-Hop, then the node deletes the first ER-Hop and\n         continues\
    \ processing with step 2, above.  Note that this makes\n         the second ER-Hop\
    \ into the first ER-Hop of the next iteration.\n      4. The node determines if\
    \ it is topologically adjacent to the\n         abstract node described by the\
    \ second ER-Hop.  If so, the node\n         selects a particular next hop which\
    \ is a member of the abstract\n         node.  The node then deletes the first\
    \ ER-Hop and continues\n         processing with section 4.8.2.\n      5. Next,\
    \ the node selects a next hop within the abstract node of\n         the first\
    \ ER-Hop that is along the path to the abstract node of\n         the second ER-Hop.\
    \  If no such path exists then there are two\n         cases:\n         5.a If\
    \ the second ER-Hop is a strict ER-Hop, then there is an\n             error and\
    \ the node should return a \"Bad Strict Node Error\"\n             status.\n \
    \        5.b Otherwise, if the second ER-Hop is a loose ER-Hop, then the\n   \
    \          node selects any next hop that is along the path to the\n         \
    \    next abstract node.  If no path exists within the MPLS\n             domain,\
    \ then there is an error, and the node should return\n             a \"Bad Loose\
    \ Node Error\" status.\n      6. Finally, the node replaces the first ER-Hop with\
    \ any ER-Hop\n         that denotes an abstract node containing the next hop.\
    \  This is\n         necessary so that when the explicit route is received by\
    \ the\n         next hop, it will be accepted.\n      7. Progress the Label Request\
    \ Message to the next hop.\n"
- title: 4.8.2. Adding ER-Hops to the explicit route TLV
  contents:
  - "4.8.2. Adding ER-Hops to the explicit route TLV\n   After selecting a next hop,\
    \ the node may alter the explicit route in\n   the following ways.\n   If, as\
    \ part of executing the algorithm in section 4.8.1, the explicit\n   route TLV\
    \ is removed, the node may add a new explicit route TLV.\n   Otherwise, if the\
    \ node is a member of the abstract node for the first\n   ER-Hop, then a series\
    \ of ER-Hops may be inserted before the first\n   ER-Hop or may replace the first\
    \ ER-Hop.  Each ER-Hop in this series\n   must denote an abstract node that is\
    \ a subset of the current abstract\n   node.\n   Alternately, if the first ER-Hop\
    \ is a loose ER-Hop, an arbitrary\n   series of ER-Hops may be inserted prior\
    \ to the first ER-Hop.\n"
- title: 4.9 Route Pinning TLV
  contents:
  - "4.9 Route Pinning TLV\n   Section 2.4 describes the use of route pinning. The\
    \ encoding of the\n   Route Pinning TLV is as follows:\n   0                 \
    \  1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|          Type = 0x0823    |      Length = 4               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |P|                        Reserved                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n         A fourteen-bit field carrying the value of the Pinning-TLV\n\
    \         Type = 0x0823\n   Length\n         Specifies the length of the value\
    \ field in bytes = 4.\n   P Bit\n         The P bit is set to 1 to indicate that\
    \ route pinning is\n         requested.\n         The P bit is set to 0 to indicate\
    \ that route pinning is not\n         requested\n   Reserved\n         Zero on\
    \ transmission.  Ignored on receipt.\n"
- title: 4.10 CR-LSP FEC Element
  contents:
  - "4.10 CR-LSP FEC Element\n   A new FEC element is introduced in this specification\
    \ to support CR-\n   LSPs.  A FEC TLV containing a FEC of Element type CR-LSP\
    \ (0x04) is a\n   CR-LSP FEC TLV.  The CR-LSP FEC Element is an opaque FEC to\
    \ be used\n   only in Messages of CR-LSPs.\n   A single FEC element MUST be included\
    \ in the Label Request Message.\n   The FEC Element SHOULD be the CR-LSP FEC Element.\
    \  However, one of\n   the other FEC elements (Type=0x01, 0x02, 0x03) defined\
    \ in [1] MAY be\n   in CR-LDP messages instead of the CR-LSP FEC Element for certain\n\
    \   applications.  A FEC TLV containing a FEC of Element type CR-LSP\n   (0x04)\
    \ is a CR-LSP FEC TLV.\n         FEC Element     Type    Value\n         Type\
    \ name\n         CR-LSP         0x04    No value; i.e., 0 value octets;\n   The\
    \ CR-LSP FEC TLV encoding is as follows:\n   0                   1           \
    \        2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |0|0|          Type = 0x0100    |      Length = 1               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CR-LSP (4)    |\n   +-+-+-+-+-+-+-+-+\n   Type\n         A fourteen-bit\
    \ field carrying the value of the FEC TLV\n         Type = 0x0100\n   Length\n\
    \         Specifies the length of the value field in bytes = 1.\n   CR-LSP FEC\
    \ Element Type\n         0x04\n"
- title: 5. IANA Considerations
  contents:
  - "5. IANA Considerations\n   CR-LDP defines the following name spaces, which require\
    \ management:\n         -  TLV types.\n         -  FEC types.\n         -  Status\
    \ codes.\n   The following sections provide guidelines for managing these name\n\
    \   spaces.\n"
- title: 5.1 TLV Type Name Space
  contents:
  - "5.1 TLV Type Name Space\n   RFC 3036 [1] defines the LDP TLV name space.  This\
    \ document further\n   subdivides the range of RFC 3036 from that TLV space for\
    \ TLVs\n   associated with the CR-LDP in the range 0x0800 - 0x08FF.\n   Following\
    \ the policies outlined in [IANA], TLV types in this range\n   are allocated through\
    \ an IETF Consensus action.\n   Initial values for this range are specified in\
    \ the following table:\n         TLV                                         \
    \      Type\n         --------------------------------------         ----------\n\
    \         Explicit Route TLV                              0x0800\n         Ipv4\
    \ Prefix ER-Hop TLV                          0x0801\n         Ipv6 Prefix ER-Hop\
    \ TLV                          0x0802\n         Autonomous System Number ER-Hop\
    \ TLV             0x0803\n         LSP-ID ER-Hop TLV                         \
    \      0x0804\n         Traffic Parameters TLV                          0x0810\n\
    \         Preemption TLV                                  0x0820\n         LSPID\
    \ TLV                                       0x0821\n         Resource Class TLV\
    \                              0x0822\n         Route Pinning TLV            \
    \                   0x0823\n"
- title: 5.2 FEC Type Name Space
  contents:
  - "5.2 FEC Type Name Space\n   RFC 3036 defines the FEC Type name space.  Further,\
    \ RFC 3036 has\n   assigned values 0x00 through 0x03.  FEC types 0 through 127\
    \ are\n   available for assignment through IETF consensus action.  This\n   specification\
    \ makes the following additional assignment, using the\n   policies outlined in\
    \ [IANA]:\n         FEC Element                                       Type\n \
    \        --------------------------------------         ----------\n         CR-LSP\
    \ FEC Element                                0x04\n"
- title: 5.3 Status Code Space
  contents:
  - "5.3 Status Code Space\n   RFC 3036 defines the Status Code name space.  This\
    \ document further\n   subdivides the range of RFC 3036 from that TLV space for\
    \ TLVs\n   associated with the CR-LDP in the range 0x04000000 - 0x040000FF.\n\
    \   Following the policies outlined in [IANA], TLV types in this range\n   are\
    \ allocated through an IETF Consensus action.\n   Initial values for this range\
    \ are specified in the following table:\n         Status Code                \
    \                       Type\n         --------------------------------------\
    \         ----------\n         Bad Explicit Routing TLV Error                \
    \ 0x04000001\n         Bad Strict Node Error                          0x04000002\n\
    \         Bad Loose  Node Error                          0x04000003\n        \
    \ Bad Initial ER-Hop Error                       0x04000004\n         Resource\
    \ Unavailable                           0x04000005\n         Traffic Parameters\
    \ Unavailable                 0x04000006\n         LSP Preempted             \
    \                     0x04000007\n         Modify Request Not Supported      \
    \             0x04000008\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   CR-LDP inherits the same security mechanism described\
    \ in Section 4.0\n   of [1] to protect against the introduction of spoofed TCP\
    \ segments\n   into LDP session connection streams.\n"
- title: 7. Acknowledgments
  contents:
  - "7. Acknowledgments\n   The messages used to signal the CR-LSP setup are based\
    \ on the work\n   done by the LDP [1] design team.\n   The list of authors provided\
    \ with this document is a reduction of the\n   original list.  Currently listed\
    \ authors wish to acknowledge that a\n   substantial amount was also contributed\
    \ to this work by:\n      Osama Aboul-Magd, Peter Ashwood-Smith, Joel Halpern,\n\
    \      Fiffi Hellstrand, Kenneth Sundell and Pasi Vaananen.\n   The authors would\
    \ also like to acknowledge the careful review and\n   comments of Ken Hayward,\
    \ Greg Wright, Geetha Brown, Brian Williams,\n   Paul Beaubien, Matthew Yuen,\
    \ Liam Casey, Ankur Anand and Adrian\n   Farrel.\n"
- title: 8. Intellectual Property Consideration
  contents:
  - "8. Intellectual Property Consideration\n   The IETF has been notified of intellectual\
    \ property rights claimed in\n   regard to some or all of the specification contained\
    \ in this\n   document.  For more information consult the online list of claimed\n\
    \   rights.\n"
- title: 9. References
  contents:
  - "9. References\n   [1] Andersson, L., Doolan, P., Feldman, N., Fredette, A. and\
    \ B.\n       Thomas, \"Label Distribution Protocol Specification\", RFC 3036,\n\
    \       January 2001.\n   [2] Rosen, E., Viswanathan, A. and R. Callon, \"Multiprotocol\
    \ Label\n       Switching Architecture\", RFC 3031, January 2001.\n   [3] Awduche,\
    \ D., Malcolm, J., Agogbua, J., O'Dell, M. and J. McManus,\n       \"Requirements\
    \ for Traffic Engineering Over MPLS\", RFC 2702,\n       September 1999.\n   [4]\
    \ Gleeson, B., Lin, A., Heinanen, Armitage, G. and A. Malis, \"A\n       Framework\
    \ for IP Based Virtual Private Networks\", RFC 2764,\n       February 2000.\n\
    \   [5] Ash, J., Girish, M., Gray, E., Jamoussi, B. and G. Wright,\n       \"\
    Applicability Statement for CR-LDP\", RFC 3213, January 2002.\n   [6] Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n       Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [7] Boscher, C., Cheval, P., Wu, L. and E. Gray,\
    \ \"LDP State Machine\",\n       RFC 3215, January 2002.\n   [8] Ash, J., Lee,\
    \ Y., Ashwood-Smith, P., Jamoussi, B., Fedyk, D.,\n       Skalecki, D. and L.\
    \ Li, \"LSP Modification Using CR-LDP\", RFC\n       3214, January 2002.\n"
- title: 'Appendix A: CR-LSP Establishment Examples'
  contents:
  - 'Appendix A: CR-LSP Establishment Examples

    '
- title: A.1 Strict Explicit Route Example
  contents:
  - "A.1 Strict Explicit Route Example\n   This appendix provides an example for the\
    \ setup of a strictly routed\n   CR-LSP.  In this example, a specific node represents\
    \ each abstract\n   node.\n   The sample network used here is a four node network\
    \ with two  edge\n   LSRs and two core LSRs as follows:\n   abc\n   LSR1------LSR2------LSR3------LSR4\n\
    \   LSR1 generates a Label Request Message as described in Section 3.1 of\n  \
    \ this document and sends it to LSR2.  This message includes the CR-\n   TLV.\n\
    \   A vector of three ER-Hop TLVs <a, b, c> composes the ER-TLV. The ER-\n   Hop\
    \ TLVs used in this example are of type 0x0801 (IPv4 prefix) with a\n   prefix\
    \ length of 32.  Hence, each ER-Hop TLV identifies a specific\n   node as opposed\
    \ to a group of nodes. At LSR2, the following\n   processing of the ER-TLV per\
    \ Section 4.8.1 of this document takes\n   place:\n      1. The node LSR2 is part\
    \ of the abstract node described by the\n         first hop <a>.  Therefore, the\
    \ first step passes the test.  Go\n         to step 2.\n      2. There is a second\
    \ ER-Hop, <b>.  Go to step 3.\n      3. LSR2 is not part of the abstract node\
    \ described by the second\n         ER-Hop <b>.  Go to Step 4.\n      4. LSR2\
    \ determines that it is topologically adjacent to the\n         abstract node\
    \ described by the second ER-Hop <b>.  LSR2 selects\n         a next hop (LSR3)\
    \ which is the abstract node.  LSR2 deletes the\n         first ER-Hop <a> from\
    \ the ER-TLV, which now becomes <b, c>.\n         Processing continues with Section\
    \ 4.8.2.\n   At LSR2, the following processing of Section 4.8.2 takes place:\n\
    \   Executing algorithm 4.8.1 did not result in the removal of the ER-\n   TLV.\n\
    \   Also, LSR2 is not a member of the abstract node described by the\n   first\
    \ ER-Hop <b>.\n   Finally, the first ER-Hop <b> is a strict hop.\n   Therefore,\
    \ processing section 4.8.2 does not result in the insertion\n   of new ER-Hops.\
    \  The selection of the next hop has been already done\n   is step 4 of Section\
    \ 4.8.1 and the processing of the ER-TLV is\n   completed at LSR2.  In this case,\
    \ the Label Request Message including\n   the ER-TLV <b, c> is progressed by LSR2\
    \ to LSR3.\n   At LSR3, a similar processing to the ER-TLV takes place except\
    \ that\n   the incoming ER-TLV = <b, c> and the outgoing ER-TLV is <c>.\n   At\
    \ LSR4, the following processing of section 4.8.1 takes place:\n      1. The node\
    \ LSR4 is part of the abstract node described by the\n         first hop <c>.\
    \  Therefore, the first step passes the test.  Go\n         to step 2.\n     \
    \ 2. There is no second ER-Hop, this indicates the end of the CR-\n         LSP.\
    \  The ER-TLV is removed from the Label Request Message.\n         Processing\
    \ continues with Section 4.8.2.\n   At LSR4, the following processing of Section\
    \ 4.8.2 takes place:\n   Executing algorithm 4.8.1 resulted in the removal of\
    \ the ER-TLV. LSR4\n   does not add a new ER-TLV.\n   Therefore, processing section\
    \ 4.8.2 does not result in the insertion\n   of new ER-Hops.  This indicates the\
    \ end of the CR-LSP and the\n   processing of the ER-TLV is completed at LSR4.\n\
    \   At LSR4, processing of Section 3.2 is invoked.  The first condition\n   is\
    \ satisfied (LSR4 is the egress end of the CR-LSP and upstream\n   mapping has\
    \ been requested).  Therefore, a Label Mapping Message is\n   generated by LSR4\
    \ and sent to LSR3.\n   At LSR3, the processing of Section 3.2 is invoked.  The\
    \ second\n   condition is satisfied (LSR3 received a mapping from its downstream\n\
    \   next hop LSR4 for a CR-LSP for which an upstream request is still\n   pending).\
    \  Therefore, a Label Mapping Message is generated by LSR3\n   and sent to LSR2.\n\
    \   At LSR2, a similar processing to LSR 3 takes place and a Label\n   Mapping\
    \ Message is sent back to LSR1, which completes the end-to-end\n   CR-LSP setup.\n"
- title: A.2 Node Groups and Specific Nodes Example
  contents:
  - "A.2 Node Groups and Specific Nodes Example\n   A request at ingress LSR to setup\
    \ a CR-LSP might originate from a\n   management system or an application, the\
    \ details are implementation\n   specific.\n   The ingress LSR uses information\
    \ provided by the management system or\n   the application and possibly also information\
    \ from the routing\n   database to calculate the explicit route and to create\
    \ the Label\n   Request Message.\n   The Label request message carries together\
    \ with other necessary\n   information an ER-TLV defining the explicitly routed\
    \ path.  In our\n   example the list of hops in the ER-Hop TLV is supposed to\
    \ contain an\n   abstract node representing a group of nodes, an abstract node\n\
    \   representing a specific node, another abstract node representing a\n   group\
    \ of nodes, and an abstract node representing a specific egress\n   point.\n \
    \  In--{Group 1}--{Specific A}--{Group 2}--{Specific Out: B}\n   The ER-TLV contains\
    \ four ER-Hop TLVs:\n      1. An ER-Hop TLV that specifies a group of LSR valid\
    \ for the first\n         abstract node representing a group of nodes (Group 1).\n\
    \      2. An ER-Hop TLV that indicates the specific node (Node A).\n      3. An\
    \ ER-Hop TLV that specifies a group of LSRs valid for the\n         second abstract\
    \ node representing a group of nodes (Group 2).\n      4. An ER-Hop TLV that indicates\
    \ the specific egress point for the\n         CR-LSP (Node B).\n   All the ER-Hop\
    \ TLVs are strictly routed nodes.\n   The setup procedure for this CR-LSP works\
    \ as follows:\n      1.  The ingress node sends the Label Request Message to a\
    \ node\n          that is a member the group of nodes indicated in the first ER-\n\
    \          Hop TLV, following normal routing for the specific node (A).\n    \
    \  2.  The node that receives the message identifies itself as part\n        \
    \  of the group indicated in the first ER-Hop TLV, and that it is\n          not\
    \ the specific node (A) in the second.  Further it realizes\n          that the\
    \ specific node (A) is not one of its next hops.\n      3.  It keeps the ER-Hop\
    \ TLVs intact and sends a Label Request\n          Message to another node that\
    \ is part of the group indicated in\n          the first ER-Hop TLV (Group 1),\
    \ following normal routing for\n          the specific node (A).\n      4.  The\
    \ node that receives the message identifies itself as part\n          of the group\
    \ indicated in the first ER-Hop TLV, and that it is\n          not the specific\
    \ node (A) in the second ER-Hop TLV.  Further\n          it realizes that the\
    \ specific node (A) is one of its next\n          hops.\n      5.  It removes\
    \ the first ER-Hop TLVs and sends a Label Request\n          Message to the specific\
    \ node (A).\n      6.  The specific node (A) recognizes itself in the first ER-Hop\n\
    \          TLV.  Removes the specific ER-Hop TLV.\n      7.  It sends a Label\
    \ Request Message to a node that is a member of\n          the group (Group 2)\
    \ indicated in the ER-Hop TLV.\n      8.  The node that receives the message identifies\
    \ itself as part\n          of the group indicated in the first ER-Hop TLV, further\
    \ it\n          realizes that the specific egress node (B) is one of its next\n\
    \          hops.\n      9.  It sends a Label Request Message to the specific egress\
    \ node\n          (B).\n      10. The specific egress node (B) recognizes itself\
    \ as the egress\n          for the CR-LSP, it returns a Label Mapping Message,\
    \ that will\n          traverse the same path as the Label Request Message in\
    \ the\n          opposite direction.\n"
- title: Appendix B. QoS Service Examples
  contents:
  - 'Appendix B. QoS Service Examples

    '
- title: B.1 Service Examples
  contents:
  - "B.1 Service Examples\n   Construction of an end-to-end service is the result\
    \ of the rules\n   enforced at the edge and the treatment that packets receive\
    \ at the\n   network nodes.  The rules define the traffic conditioning actions\n\
    \   that are implemented at the edge and they include policing with pass,\n  \
    \ mark, and drop capabilities.  The edge rules are expected to be\n   defined\
    \ by the mutual agreements between the service providers and\n   their customers\
    \ and they will constitute an essential part of the\n   SLA.  Therefore edge rules\
    \ are not included in the signaling\n   protocol.\n   Packet treatment at a network\
    \ node is usually referred to as the\n   local behavior.  Local behavior could\
    \ be specified in many ways.  One\n   example for local behavior specification\
    \ is the service frequency\n   introduced in section 4.3.2.1, together with the\
    \ resource reservation\n   rules implemented at the nodes.\n   Edge rules and\
    \ local behaviors can be viewed as the main building\n   blocks for the end-to-end\
    \ service construction.  The following table\n   illustrates the applicability\
    \ of the building block approach for\n   constructing different services including\
    \ those defined for ATM.\n   Service        PDR  PBS  CDR     CBS   EBS  Service\
    \    Conditioning\n   Examples                                    Frequency  Action\n\
    \   DS             S    S    =PDR    =PBS  0    Frequent   drop>PDR\n   TS   \
    \          S    S    S       S     0    Unspecified drop>PDR,PBS\n           \
    \                                                mark>CDR,CBS\n   BE         \
    \    inf  inf  inf     inf   0    Unspecified      -\n   FRS            S    S\
    \    CIR     ~B_C  ~B_E Unspecified drop>PDR,PBS\n                           \
    \                            mark>CDR,CBS,EBS\n   ATM-CBR        PCR  CDVT =PCR\
    \    =CDVT 0    VeryFrequent    drop>PCR\n   ATM-VBR.3(rt)  PCR  CDVT SCR    \
    \ MBS   0    Frequent        drop>PCR\n                                      \
    \                     mark>SCR,MBS\n   ATM-VBR.3(nrt) PCR  CDVT SCR     MBS  \
    \ 0    Unspecified     drop>PCR\n                                            \
    \               mark>SCR,MBS\n   ATM-UBR        PCR  CDVT -       -     0    Unspecified\
    \     drop>PCR\n   ATM-GFR.1      PCR  CDVT MCR     MBS   0    Unspecified   \
    \  drop>PCR\n   ATM-GFR.2      PCR  CDVT MCR     MBS   0    Unspecified     drop>PCR\n\
    \                                                           mark>MCR,MFS\n   int-serv-CL\
    \    p    m    r       b     0    Frequent        drop>p\n                   \
    \                                            drop>r,b\n   S= User specified\n\
    \   In the above table, the DS refers to a delay sensitive service where\n   the\
    \ network commits to deliver with high probability user datagrams\n   at a rate\
    \ of PDR with minimum delay and delay requirements. Datagrams\n   in excess of\
    \ PDR will be discarded.\n   The TS refers to a generic throughput sensitive service\
    \ where the\n   network commits to deliver with high probability user datagrams\
    \ at a\n   rate of at least CDR.  The user may transmit at a rate higher than\n\
    \   CDR but datagrams in excess of CDR would have a lower probability of\n   being\
    \ delivered.\n   The BE is the best effort service and it implies that there are\
    \ no\n   expected service guarantees from the network.\n"
- title: B.2 Establishing CR-LSP Supporting Real-Time Applications
  contents:
  - "B.2 Establishing CR-LSP Supporting Real-Time Applications\n   In this scenario\
    \ the customer needs to establish an LSP for\n   supporting real-time applications\
    \ such as voice and video.  The\n   Delay-sensitive (DS) service is requested\
    \ in this case.\n   The first step is the specification of the traffic parameters\
    \ in the\n   signaling message.  The two parameters of interest to the DS service\n\
    \   are the PDR and the PBS and the user based on his requirements\n   specifies\
    \ their values.  Since all the traffic parameters are\n   included in the signaling\
    \ message, appropriate values must be\n   assigned to all of them.  For DS service,\
    \ the CDR and the CBS values\n   are set equal to the PDR and the PBS respectively.\
    \  An indication of\n   whether the parameter values are subject to negotiation\
    \ is flagged.\n   The transport characteristics of the DS service require Frequent\n\
    \   frequency to be requested to reflect the real-time delay requirements\n  \
    \ of the service.\n   In addition to the transport characteristics, both the network\n\
    \   provider and the customer need to agree on the actions enforced at\n   the\
    \ edge.  The specification of those actions is expected to be a\n   part of the\
    \ service level agreement (SLA) negotiation and is not\n   included in the signaling\
    \ protocol.  For DS service, the edge action\n   is to drop packets that exceed\
    \ the PDR and the PBS specifications.\n   The signaling message will be sent in\
    \ the direction of the ER path\n   and the LSP is established following the normal\
    \ LDP procedures.  Each\n   LSR applies its admission control rules.  If sufficient\
    \ resources are\n   not available and the parameter values are subject to negotiation,\n\
    \   then the LSR could negotiate down the PDR, the PBS, or both.\n   The new parameter\
    \ values are echoed back in the Label Mapping\n   Message.  LSRs might need to\
    \ re-adjust their resource reservations\n   based on the new traffic parameter\
    \ values.\n"
- title: B.3 Establishing CR-LSP Supporting Delay Insensitive Applications
  contents:
  - "B.3 Establishing CR-LSP Supporting Delay Insensitive Applications\n   In this\
    \ example we assume that a throughput sensitive (TS) service is\n   requested.\
    \  For resource allocation the user assigns values for PDR,\n   PBS, CDR, and\
    \ CBS.  The negotiation flag is set if the traffic\n   parameters are subject\
    \ to negotiation.\n   Since the service is delay insensitive by definition, the\
    \ Unspecified\n   frequency is signaled to indicate that the service frequency\
    \ is not\n   an issue.\n   Similar to the previous example, the edge actions are\
    \ not subject for\n   signaling and are specified in the service level agreement\
    \ between\n   the user and the network provider.\n   For TS service, the edge\
    \ rules might include marking to indicate high\n   discard precedence values for\
    \ all packets that exceed CDR and the\n   CBS.  The edge rules will also include\
    \ dropping of packets that\n   conform to neither PDR nor PBS.\n   Each LSR of\
    \ the LSP is expected to run its admission control rules\n   and negotiate traffic\
    \ parameters down if sufficient resources do not\n   exist.  The new parameter\
    \ values are echoed back in the Label Mapping\n   Message.  LSRs might need to\
    \ re-adjust their resources based on the\n   new traffic parameter values.\n"
- title: Author's Addresses
  contents:
  - "10. Author's Addresses\n   Loa Andersson\n   Utfors Bredband AB\n   Rasundavagen\
    \ 12 169 29\n   Solna\n   Phone: +46 8 5270 50 38\n   EMail: loa.andersson@utfors.se\n\
    \   Ross Callon\n   Juniper Networks\n   1194 North Mathilda Avenue,\n   Sunnyvale,\
    \ CA  94089\n   Phone: 978-692-6724\n   EMail: rcallon@juniper.net\n   Ram Dantu\n\
    \   Netrake Corporation\n   3000 Technology Drive, #100\n   Plano Texas, 75024\n\
    \   Phone: 214 291 1111\n   EMail: rdantu@netrake.com\n   Paul Doolan\n   On The\
    \ Beach Consulting Corp\n   34 Mill Pond Circle\n   Milford MA 01757\n   Phone\
    \ 617 513 852\n   EMail: pdoolan@acm.org\n   Nancy Feldman\n   IBM Research\n\
    \   30 Saw Mill River Road\n   Hawthorne, NY 10532\n   Phone:  914-784-3254\n\
    \   EMail: Nkf@us.ibm.com\n   Andre Fredette\n   ANF Consulting\n   62 Duck Pond\
    \ Dr.\n   Groton, MA  01450\n   EMail: afredette@charter.net\n   Eric Gray\n \
    \  600 Federal Drive\n   Andover, MA  01810\n   Phone: (978) 689-1610\n   EMail:\
    \ eric.gray@sandburst.com\n   Juha Heinanen\n   Song Networks, Inc.\n   Hallituskatu\
    \ 16\n   33200 Tampere, Finland\n   EMail: jh@song.fi\n   Bilel Jamoussi\n   Nortel\
    \ Networks\n   600 Technology Park Drive\n   Billerica, MA 01821\n   USA\n   Phone:\
    \ +1 978 288-4506\n   Mail: Jamoussi@nortelnetworks.com\n   Timothy E. Kilty\n\
    \   Island Consulting\n   Phone: (978) 462 7091\n   EMail: tim-kilty@mediaone.net\n\
    \   Andrew G. Malis\n   Vivace Networks\n   2730 Orchard Parkway\n   San Jose,\
    \ CA 95134\n   Phone: +1 408 383 7223\n   EMail: Andy.Malis@vivacenetworks.com\n\
    \   Muckai K Girish\n   Atoga Systems\n   49026 Milmont Drive\n   Fremont, CA\
    \ 94538\n   EMail: muckai@atoga.com\n   Tom Worster\n   Phone: 617 247 2624\n\
    \   EMail: fsb@thefsb.org\n   Liwen Wu\n   Cisco Systems\n   250 Apollo Drive\n\
    \   Chelmsford, MA. 01824\n   Phone: 978-244-3087\n   EMail: liwwu@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
