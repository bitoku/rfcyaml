- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                             C. Lewis
  contents:
  - "Internet Research Task Force (IRTF)                             C. Lewis\n  Overview\
    \ of Best Email DNS-Based List (DNSBL) Operational Practices\n"
- title: Abstract
  contents:
  - "Abstract\n   The rise of spam and other anti-social behavior on the Internet\
    \ has\n   led to the creation of shared DNS-based lists (DNSBLs) of IP\n   addresses\
    \ or domain names intended to help guide email filtering.\n   This memo summarizes\
    \ guidelines of accepted best practice for the\n   management of public DNSBLs\
    \ by their operators as well as for the\n   proper use of such lists by mail server\
    \ administrators (DNSBL users),\n   and it provides useful background for both\
    \ parties.  It is not\n   intended to advise on the utility or efficacy of particular\
    \ DNSBLs or\n   the DNSBL concept in general, nor to assist end users with questions\n\
    \   about spam.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Anti-Spam\n   Research Group of the Internet Research Task Force (IRTF).\
    \  Documents\n   approved for publication by the IRSG are not a candidate for\
    \ any\n   level of Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6471.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  DNS-Based Reputation Systems . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Guidance for DNSBL Users . . . . . . . . . . . . .\
    \ . . . .  5\n     1.3.  Requirements Language  . . . . . . . . . . . . . . .\
    \ . . .  7\n     1.4.  Background . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  7\n   2.  DNSBL Policies . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  7\n     2.1.  Transparency . . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n       2.1.1.  Listing/Delisting Criteria SHOULD Be Easily\n           \
    \    Available  . . . . . . . . . . . . . . . . . . . . . .  8\n       2.1.2.\
    \  Audit Trail SHOULD Be Maintained . . . . . . . . . . .  8\n       2.1.3.  The\
    \ Scope and Aggressiveness of Listings MUST Be\n               Disclosed  . .\
    \ . . . . . . . . . . . . . . . . . . . .  8\n     2.2.  Listings and Removals\
    \  . . . . . . . . . . . . . . . . . .  9\n       2.2.1.  Listings SHOULD Be Temporary\
    \ . . . . . . . . . . . . .  9\n       2.2.2.  A Direct Non-Public Way to Request\
    \ Removal SHOULD\n               Be Available . . . . . . . . . . . . . . . .\
    \ . . . . . 10\n       2.2.3.  Response SHOULD Be Prompt  . . . . . . . . . .\
    \ . . . . 11\n       2.2.4.  A Given DNSBL SHOULD Have Similar Criteria for\n\
    \               Listing and Delisting  . . . . . . . . . . . . . . . . 12\n  \
    \     2.2.5.  Conflict of Interest . . . . . . . . . . . . . . . . . 12\n   3.\
    \  Operational Issues . . . . . . . . . . . . . . . . . . . . . . 13\n     3.1.\
    \  DNSBL Query Root Domain Name SHOULD be a Subdomain . . . . 13\n     3.2.  DNSBLs\
    \ SHOULD Be Adequately Provisioned  . . . . . . . . . 13\n     3.3.  DNSBLs SHOULD\
    \ Provide Operational Flags  . . . . . . . . . 14\n     3.4.  Shutdowns MUST Be\
    \ Done Gracefully  . . . . . . . . . . . . 15\n     3.5.  Listing of Special and\
    \ Reserved IP Addresses MUST Be\n           Disclosed  . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 16\n     3.6.  Considerations for DNSBLs Listing Insecure\
    \ Hosts . . . . . 17\n       3.6.1.  DNSBLs MUST NOT Scan without Provocation\
    \ . . . . . . . 17\n       3.6.2.  Re-Scan Periods SHOULD Be Reasonable . . .\
    \ . . . . . . 17\n       3.6.3.  Scans MUST NOT Be Destructive  . . . . . . .\
    \ . . . . . 17\n     3.7.  Removals SHOULD Be Possible in Absence of the DNSBL\n\
    \           Operator . . . . . . . . . . . . . . . . . . . . . . . . . 17\n  \
    \   3.8.  Protect against Misconfiguration/Outages . . . . . . . . . 18\n    \
    \ 3.9.  Error Handling . . . . . . . . . . . . . . . . . . . . . . 19\n   4. \
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 19\n   5.  References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 20\n     5.1.  Normative\
    \ References . . . . . . . . . . . . . . . . . . . 20\n     5.2.  Informative\
    \ References . . . . . . . . . . . . . . . . . . 20\n   Appendix A.  Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . 21\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  DNS-Based Reputation Systems
  contents:
  - "1.1.  DNS-Based Reputation Systems\n   Due to the rising amount of spam and other\
    \ forms of network abuse on\n   the Internet, many community members and companies\
    \ began to create,\n   publish and maintain DNS-based reputation systems (DNS-based\
    \ lists or\n   DNSBLs) of IP addresses or domain names and make reputation\n \
    \  suggestions or assertions about email sourced from these IP addresses\n   or\
    \ domain names.\n   The first DNSBLs were almost exclusively intended to be used\
    \ (by\n   email administrators) as lists of abusive IP addresses to block;\n \
    \  however, the DNS publication method has proven to be so robust,\n   popular,\
    \ and simple to use that it has been extended for use in many\n   different ways,\
    \ far beyond the imaginings of the designers of DNS or\n   DNS-based blocking\
    \ IP lists.  For example, today, the same basic DNS-\n   based listing technology\
    \ is commonly used for:\n   DNSWL:  listings of well-behaving email source IP/domain\
    \ addresses\n      (whitelist).\n   RHSBL:  listings of well/ill-behaving email\
    \ source domain names\n      (often applied against the domain name part (RHS\
    \ = Right Hand\n      Side) of the originating email address or DNS PTR (reverse\
    \ IP)\n      lookups)\n   URIBL:  listings of well/ill-behaving web link domain\
    \ names or host\n      names used in email\n   Further, the DNSBL user doesn't\
    \ have to use a listing as a pass/fail\n   binary decision -- it can use a listing\
    \ as one factor in email\n   filters that make decisions based on scoring multiple\
    \ factors\n   together.\n   The DNS-based list technology has even been extended\
    \ to purely\n   informational purposes.  For example, there are implementations\
    \ that\n   return results based on what geographic region an IP/domain is\n  \
    \ putatively allocated in, implementations that translate an IP/domain\n   address\
    \ into an Autonomous System Number (ASN) and/or allocation\n   block, implementations\
    \ that indicate whether the queried domain name\n   is registered through a given\
    \ domain registrar, implementations that\n   return aggregate numeric reputation\
    \ for an IP address or domain name\n   from another system's email system, and\
    \ so on.  The possibilities are\n   virtually endless.\n   DNS-based listing technology\
    \ has also been used in areas other than\n   email filtering, such as Internet\
    \ Relay Chat (IRC), web access\n   control, and transaction verification.\n  \
    \ As the terminology in this area has never been well formalized, often\n   overlaps,\
    \ and lacks precision, this document has been written to use\n   the term \"DNSBLs\"\
    \ to refer to DNS-based lists generally, not just\n   DNS-based block (or black)\
    \ lists.  This document is not applicable to\n   some DNSBLs in some areas (mentioned\
    \ as appropriate), but it is the\n   authors' belief that most of the practices\
    \ are applicable to almost\n   all DNSBLs.\n   DNSBLs may be either public or\
    \ private.  A public DNSBL makes its\n   data available to any party seeking information\
    \ about data on the\n   list, while a private DNSBL is used solely by an organization\
    \ for its\n   own use, and the data is not made available publicly.  There are\
    \ also\n   commercial DNSBLs, available for a fee.  Furthermore, some are free\n\
    \   yet require a fee for higher numbers of queries or certain classes of\n  \
    \ DNSBL users.\n   The first publicly available DNSBL using the Domain Name System\
    \ (DNS)\n   for distributing reputation data about email senders emerged in 1997,\n\
    \   shortly after spam became a problem for network operators and email\n   administrators.\
    \  This pioneer DNSBL focused on identifying known spam\n   sources situated at\
    \ static (unchanging) IP/domain addresses.  Due to\n   the broad adoption of this\
    \ DNSBL, it had a major impact on static\n   spam sources.  Consequently, abusers\
    \ found other methods for\n   distributing their spam, such as relaying messages\
    \ through unsecured\n   email servers or flawed formmail scripts on web pages.\
    \  Additional\n   DNSBLs were developed by others in order to address these changing\n\
    \   tactics, and today more than 700 public DNSBLs are known to be in\n   operation.\n\
    \   These DNSBLs vary widely in purpose for which the list was intended,\n   the\
    \ method the list uses to achieve the purpose, the integrity of\n   those overseeing\
    \ the method, and the stability of the technology used\n   to create and distribute\
    \ the data.  Listing criteria can sometimes be\n   quite controversial; therefore,\
    \ this document deliberately does not\n   discuss the rightness or wrongness of\
    \ any criteria.  We assert that\n   DNSBL operators are free to choose whatever\
    \ listing criteria they\n   wish, as long as those criteria are clearly and accurately\n\
    \   communicated.  It is the responsibility of the DNSBL user to ensure\n   that\
    \ the listing criteria and other aspects of a DNSBL meets their\n   needs.\n \
    \  This document is intended to provide guidance to DNSBL operators so\n   that\
    \ they may be able to identify what features users would be\n   interested in\
    \ seeing as part of a high-quality, well-managed DNSBL --\n   for example, a clear\
    \ listing and delisting policy to which the DNSBL\n   operator adheres strictly.\
    \  This document is intended to be normative\n   rather than prescriptive: it\
    \ seeks to characterize the features of a\n   well-managed DNSBL rather than setting\
    \ out rules for how DNSBLs\n   should be operated.\n   This document is not intended\
    \ as a protocol specification of DNSBL\n   queries.  (See [RFC5782].)\n   The\
    \ DNS has been the most popular distribution method for DNSBLs due\n   to its\
    \ ubiquity and its good scaling and performance characteristics.\n   It is also\
    \ common to make private arrangements to distribute DNSBL\n   data in bulk to\
    \ high-volume users, typically by rsync [RSYNC]\n   [RSYNCTHESIS].  The data is\
    \ the same in either case; the\n   recommendations in this document apply, regardless\
    \ of distribution\n   method, other than the ones in Sections 3.1 and 3.2 that\
    \ specifically\n   refer to DNS distribution.\n"
- title: 1.2.  Guidance for DNSBL Users
  contents:
  - "1.2.  Guidance for DNSBL Users\n   When choosing to adopt a DNSBL, a DNSBL user\
    \ SHOULD keep the\n   following questions in mind:\n   1.   What is the intended\
    \ use of the list?\n   2.   Does the list have a web site?\n   3.   Are the list's\
    \ policies stated on the web site?\n   4.   Are the policies stated clearly and\
    \ understandably?\n   5.   Does the web site function properly, e.g., hyperlinks?\n\
    \   6.   Are web pages for removal requirements accessible and working\n     \
    \   properly?\n   7.   How long has the list been in operation?\n   8.   What\
    \ are the demographics and quantity of the list's user base?\n        In other\
    \ words, do other sites like my own use this DNSBL?\n   9.   Are comparative evaluations\
    \ of the list available?  Note: all\n        such evaluations depend on the mail\
    \ mix used as well as local\n        policy.  DNSBL users SHOULD consider trial\
    \ periods and/or\n        ongoing local monitoring of DNSBL suitability.\n   10.\
    \  What do your peers or members of the Internet community say\n        about\
    \ the list?  DNSBLs can sometimes be quite controversial and\n        sometimes\
    \ considerable misinformation is spread.  Ensure that\n        the opinions are\
    \ knowledgeable and reflect similar goals to\n        yours.\n   11.  Does the\
    \ DNSBL have a mailing list for announcing changes,\n        outages, etc.?\n\
    \   DNSBLs can, and have, ceased operation without notice.  DNSBL users\n   SHOULD\
    \ periodically check the correct operation of the DNSBL, and\n   cease using DNSBLs\
    \ that are working incorrectly.  See Section 3.3.\n   The DNSBL user MUST ensure\
    \ that they understand the intended use of\n   the DNSBL.  For example, some IP\
    \ address-based DNSBLs are appropriate\n   for assessment of only the peer IP\
    \ address of the machine connecting\n   to the DNSBL user's mail server, and not\
    \ other IP addresses appearing\n   in an email (such as header Received lines\
    \ or web links) or IRC\n   connections, etc.  While a DNSBL user may choose to\
    \ ignore the intent\n   of the DNSBL, they SHOULD implement any variance in compliance\
    \ with\n   the DNSBL usage instructions.\n   For example, one of the requirements\
    \ of some DNSBLs is that if the\n   DNSBL is used contrary to the usage instructions,\
    \ then the DNSBL user\n   should not identify the DNSBL being used.  Furthermore,\
    \ it is the\n   DNSBL user's responsibility to mitigate the effect of the listing\n\
    \   locally.\n   It is the responsibility of the system administrators who adopt\
    \ one\n   or more DNSBLs to evaluate, understand, and make a determination of\n\
    \   which DNSBLs are appropriate for the sites they administer.  If you\n   are\
    \ going to allow a third party's information to guide your\n   filtering decision-making\
    \ process, you MUST understand the policies\n   and practices of those third parties\
    \ because responsibility for\n   filter decisions remains ultimately with you,\
    \ the postmaster.\n   A DNSBL without DNSBL users does not block (or otherwise\
    \ impair)\n   email or any other Internet service.  A DNSBL user voluntarily uses\n\
    \   the DNSBL data to guide their decisions, and the DNSBL user therefore\n  \
    \ MUST assume responsibility for dealing with the consequences.\n   DNSBL operators\
    \ are expressing an opinion through the publication of\n   a DNSBL.  However,\
    \ it is through abiding by the guidelines set forth\n   in this document that\
    \ the operators of a DNSBL may gain the trust of\n   their users.\n   These guidelines\
    \ address only public DNSBLs and do not apply to\n   private-access DNSBLs; however,\
    \ implementers and users of private-\n   access DNSBLs may wish to use these guidelines\
    \ as a starting point of\n   things to consider.\n"
- title: 1.3.  Requirements Language
  contents:
  - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.4.  Background
  contents:
  - "1.4.  Background\n   The Anti-Spam Research Group (ASRG) was chartered to address\
    \ the spam\n   problem.  The ASRG charter includes:\n   \"codification of best\
    \ current practices in spam management\"\n   This note falls within that category\
    \ by listing guidelines for\n   management of public DNSBLs.\n   NOTE:  This document\
    \ is a product of the Anti-Spam Research Group\n      (ASRG) of the IRTF.\n"
- title: 2.  DNSBL Policies
  contents:
  - '2.  DNSBL Policies

    '
- title: 2.1.  Transparency
  contents:
  - "2.1.  Transparency\n   A DNSBL SHOULD carefully describe the criteria for adding\
    \ and the\n   criteria for removing an entry from the list.  Such listing and\n\
    \   delisting criteria SHOULD be presented in a clear and readable manner\n  \
    \ easily accessible to the public on the DNSBL's web site.  A DNSBL\n   MUST abide\
    \ by its stated listing and delisting criteria.  Entries\n   that do not meet\
    \ the published criteria MUST NOT be added to the\n   DNSBL.\n   In other words,\
    \ be direct and honest and clear about the listing\n   criteria, and make certain\
    \ that only entries meeting the published\n   criteria are added to the list.\
    \  For example, some DNSBL operators\n   have been known to include \"spite listings\"\
    \ in the lists they\n   administer -- listings of IP addresses or domain names\
    \ associated\n   with someone who has insulted them, rather than actually violating\n\
    \   technical criteria for inclusion in the list.  There is nothing\n   inherently\
    \ wrong with this practice so long as it is clearly\n   disclosed -- and thus\
    \ becomes part of the published criteria.  For\n   example, a DNSBL described\
    \ as only listing open relays MUST NOT\n   include IP addresses for any other\
    \ reason.  This transparency\n   principle does not require DNSBL operators to\
    \ disclose the precise\n   algorithms and data involved in a listing, but rather\
    \ the intent\n   behind choosing those algorithms and data.\n   Furthermore, the\
    \ DNSBL documentation SHOULD be clear on the intended\n   use of the DNSBL --\
    \ whether it be intended for peer addresses of\n   email, IRC, etc.\n   Availability\
    \ of documentation concerning a DNSBL SHOULD NOT be\n   dependent on the continued\
    \ operation of DNS for DNSBL queries.\n   In other words, if the DNSBL documentation\
    \ is at\n   \"http://dnsbl.example.com\", the documentation for the web site should\n\
    \   not become unavailable if the DNSBL query name servers are not\n   available\
    \ (or shut down).  See Section 3.1.\n"
- title: 2.1.1.  Listing/Delisting Criteria SHOULD Be Easily Available
  contents:
  - "2.1.1.  Listing/Delisting Criteria SHOULD Be Easily Available\n   Listing and\
    \ delisting criteria for DNSBLs SHOULD be easily available\n   and SHOULD be located\
    \ in a place clearly marked in its own section of\n   the web site affiliated\
    \ with the DNSBL.\n   DNSBLs often publish their listing criteria along with additional\n\
    \   technical information about using the DNSBL.  This additional\n   technical\
    \ information can confuse end users, so a separate page,\n   section, or query\
    \ function on its own SHOULD be dedicated to\n   detailing why a specific entry\
    \ appears in the DNSBL.\n"
- title: 2.1.2.  Audit Trail SHOULD Be Maintained
  contents:
  - "2.1.2.  Audit Trail SHOULD Be Maintained\n   A DNSBL SHOULD maintain an audit\
    \ trail for all listings, and it is\n   RECOMMENDED that it is made publicly available\
    \ in an easy to find\n   location, preferably on the DNSBL's web site.  Please\
    \ note that\n   making data about an audit trail public does not entail revealing\
    \ all\n   information in the DNSBL operator's possession relating to the\n   listing.\
    \  For example, a DNSBL operator MAY make the audit trail data\n   selectively\
    \ accessible in such a way as to not disclose information\n   that might assist\
    \ spammers, such as the location or identity of a\n   spam trap.\n"
- title: 2.1.3.  The Scope and Aggressiveness of Listings MUST Be Disclosed
  contents:
  - "2.1.3.  The Scope and Aggressiveness of Listings MUST Be Disclosed\n   Some DNSBLs\
    \ have adopted policies of listing entries that are broader\n   in scope than\
    \ they have evidence of being involved in abuse.\n   Similarly, some DNSBLs list\
    \ entries that are \"mixed\", in that the\n   entry may be behaving in a manner\
    \ that is both abusive and non-\n   abusive.  This is inherent to the techniques\
    \ that many DNSBLs use.\n   Examples: Some DNSBLs will list IP address ranges\
    \ if there is reason\n   to believe that abusive behavior seen from a few IP addresses\
    \ within\n   the range is (or will be) reflected in the rest of the range.  Some\n\
    \   DNSBLs utilize scoring to list IP addresses, IP ranges, or domain\n   names\
    \ that have abusive behavior above some threshold -- often\n   meaning that some\
    \ of the email corresponding to the listing is not\n   abusive.  Even an entry\
    \ demonstrably infected with email spam or\n   virus-emitting malware may emit\
    \ non-abusive email.\n   Inevitably, some of these listings may impact non-abusive\
    \ email.\n   This has resulted in some labeling of such practices by the\n   emotionally\
    \ loaded term \"collateral damage\".  No filtering technique\n   is perfect, and\
    \ an occasional mistake is inevitable no matter what is\n   used, DNSBLs or otherwise.\n\
    \   There is nothing wrong with this practice (of having \"collateral\n   damage\"\
    ) because mail server administrators may wish to implement\n   such policies or\
    \ use them in combination with other techniques (such\n   as scoring).  However,\
    \ a diligent administrator needs information\n   about these policies in order\
    \ to make an informed decision as to the\n   risk and benefit of using any particularly\
    \ DNSBL, and to guide them\n   in how to use it for results best reflecting the\
    \ DNSBL user's\n   requirements.\n   Therefore, DNSBL listing policies MUST include\
    \ statements as to the\n   scope and aggressiveness of listings and include, as\
    \ appropriate,\n   whether the DNSBL operator intends the listings to be used\
    \ in scoring\n   or other techniques.\n"
- title: 2.2.  Listings and Removals
  contents:
  - '2.2.  Listings and Removals

    '
- title: 2.2.1.  Listings SHOULD Be Temporary
  contents:
  - "2.2.1.  Listings SHOULD Be Temporary\n   In many cases, listings can exist for\
    \ long periods of time past the\n   conditions leading to the listing's creation,\
    \ and/or listings can\n   exist after the listed entity has putatively changed\
    \ ownership.\n   Generally speaking, listings SHOULD be considered temporary and\n\
    \   should expire on their own at some point in the future, unless\n   reasons\
    \ for listing still exist.\n   Expiration intervals SHOULD be chosen to be reasonable\
    \ for the type\n   of listing.  For example:\n   1.  It does not make sense to\
    \ remove entries from DNSBLs where the\n       existence of an entry does not\
    \ have a direct meaning, that is,\n       DNSBLs that return information in addition\
    \ to just existence/\n       non-existence.  For example: entries in DNSBLs that\
    \ return\n       geographic or assignment information on where the IP address\
    \ or\n       domain name is located or owned, or DNSBLs that return flow\n   \
    \    statistics from the DNSBL operator that are intended for the\n       DNSBL\
    \ user to interpret, need not ever be removed, just kept\n       reasonably current.\n\
    \   2.  DNSBLs based on relatively static information, such as block\n       assignment\
    \ or domain names of demonstrably bad actors, MAY have\n       very long expiration\
    \ intervals or be removed only upon request\n       after verification that the\
    \ removal criteria have been met.\n   3.  Automated DNSBLs with highly effective\
    \ detection and fast listing\n       mechanisms can benefit from very short expiration\
    \ intervals.\n       Many of the things that these DNSBLs look for are of relatively\n\
    \       short duration, and even if they do expire, a resumption of the\n    \
    \   behavior will be caught quickly by the DNSBL's detection\n       mechanisms\
    \ and relisted.  By utilizing a short expiration\n       interval, after reassignment/problem\
    \ correction, the listing will\n       automatically expire in short order without\
    \ manual intervention.\n   4.  Manually created DNSBL entries SHOULD be periodically\
    \ reviewed in\n       some manner.\n   It is RECOMMENDED that DNSBL operators\
    \ publish in general terms their\n   expiration policy, even if it's only \"delist\
    \ on request\" or \"no\n   expiration is performed\".  In information-only lists,\
    \ a method for\n   users requesting corrections to the information (if appropriate)\n\
    \   SHOULD be published.  Abusers may be able to \"game\" policy that is\n   too\
    \ explicit; on the other hand, many DNSBL users wish to have an\n   idea of how\
    \ \"current\" the DNSBL is.  It is the authors' experience\n   that some automated\
    \ DNSBLs have increasingly higher error rates as\n   the \"last detection date\"\
    \ gets older.\n   Note that listings being temporary does not mean that all listings\n\
    \   will expire after the initial time-out period.  If the DNSBL operator\n  \
    \ determines that the conditions triggering listing still exist, then\n   the\
    \ timer for determining time outs can be renewed.\n"
- title: 2.2.2.  A Direct Non-Public Way to Request Removal SHOULD Be Available
  contents:
  - "2.2.2.  A Direct Non-Public Way to Request Removal SHOULD Be Available\n   Discussions\
    \ about whether a DNSBL should remove an entry MAY include\n   activity in a public\
    \ forum.  Methods for processing removal requests\n   through private, direct\
    \ exchanges, such as person-to-person email or\n   a combination of web page requests\
    \ and email responses, SHOULD be\n   available.  As a minimum, the DNSBL SHOULD\
    \ have a web page that has a\n   removal request function (separate from the page\
    \ describing listing\n   criteria as per Section 2.1.1).  The DNSBL SHOULD also\
    \ make available\n   an email address to handle issues other than blocking issues.\n\
    \   The DNSBL operator MUST NOT use the list in question in such a way\n   that\
    \ removal requests would be blocked; and moreover, the operator\n   SHOULD make\
    \ mailboxes available in order to allow affected users to\n   submit their requests.\
    \  In some cases, it is impractical not to\n   filter email to accounts due to\
    \ the amount of spam those mailboxes\n   receive.  If filtering should be necessary\
    \ in such circumstances,\n   filtering methods with as low false positive rate\
    \ as practical SHOULD\n   be chosen.\n   DNSBL operators SHOULD be prepared to\
    \ provide alternate means of\n   contact in case of system failure due to DDoS\
    \ (distributed denial-of-\n   service) attack or other reasons.\n"
- title: 2.2.3.  Response SHOULD Be Prompt
  contents:
  - "2.2.3.  Response SHOULD Be Prompt\n   A response to removal requests or queries\
    \ about a listing SHOULD be\n   prompt.  A DNSBL operator SHOULD respond within\
    \ 2 days and MUST\n   respond within 7 days, except in the case that the DNSBL\
    \ operator has\n   deemed that further discussion of the issue will not result\
    \ in\n   meeting the conditions for removal and has notified the requestor of\n\
    \   that decision.\n   Consequent removals (if the conditions for removal are\
    \ met) should be\n   similarly prompt.\n   A DNSBL MAY impose restrictions on\
    \ who (e.g., a network operator's\n   representative or domain name owner) may\
    \ make valid removal requests.\n   However, in many DNSBLs, this is inadvisable\
    \ because it requires\n   impractical amounts of effort; hence, it is NOT RECOMMENDED\
    \ in most\n   cases.\n   Many DNSBLs (especially those with highly effective detection\
    \ and\n   fast listing mechanisms) greatly benefit from a \"no questions asked\"\
    \n   removal policy.\n   Although this approach allows people to submit a request\
    \ and have any\n   listed IP address/domain name removed immediately, it does\
    \ not\n   prevent the DNSBL operator from relisting the IP address/domain name\n\
    \   at a later time.\n   Many DNSBLs can effectively use a \"no questions asked\"\
    \ removal policy\n   because by their very nature they will redetect or relist\
    \ problems\n   almost immediately.  They can mitigate more organized attempts\
    \ to\n   \"game\" the system by performing elementary checking and rate-limiting\n\
    \   procedures, increasing lockout periods, executing re-scans, etc.\n   Furthermore,\
    \ a adding or removing a few IP addresses usually does not\n   make a significant\
    \ difference in the overall effectiveness of a\n   DNSBL.  Moreover, a \"no questions\
    \ asked\" removal policy provides the\n   huge benefit of a swift reaction to\
    \ incorrect listings.\n   As an example, one popular DNSBL uses a \"no questions\
    \ asked\" removal\n   policy, but does perform rate-limiting and malicious removal\n\
    \   detection and mitigation.\n   Another important consideration supporting a\
    \ \"no questions asked\"\n   self-removal policy is that it forestalls many conflicts\
    \ between\n   DNSBL operators and organizations whose IP addresses/domain names\n\
    \   have been listed.  Such a policy may be an effective measure to\n   prevent\
    \ small issues from becoming big problems.\n"
- title: 2.2.4.  A Given DNSBL SHOULD Have Similar Criteria for Listing and
  contents:
  - "2.2.4.  A Given DNSBL SHOULD Have Similar Criteria for Listing and\n        Delisting\n\
    \   The criteria for being removed from a DNSBL SHOULD bear a reasonable\n   relationship\
    \ to the factors that were the cause of the addition to\n   the DNSBL.  If a listed\
    \ entity fulfills all published requirements\n   for removal from a DNSBL, then\
    \ the DNSBL operator SHOULD NOT impose\n   any additional obstacles to remove\
    \ a given entry from the DNSBL.\n   There SHOULD NOT be any extra rules for delisting\
    \ other than the ones\n   listed in the published listing criteria.\n"
- title: 2.2.5.  Conflict of Interest
  contents:
  - "2.2.5.  Conflict of Interest\n   Some DNSBLs used for blocking/negative reputation\
    \ have had a practice\n   of requiring fees or donations to charities from the\
    \ listee for\n   delisting.\n   It is generally considered entirely appropriate\
    \ for a DNSBL to charge\n   for access to it by its users -- the definition of\
    \ a commercial\n   DNSBL.\n   However, the practice of requiring a listee to pay\
    \ for delisting from\n   a negative-connotation DNSBL steers perilously close\
    \ to notions of\n   extortion, blackmail, or a \"protection racket\".  Even when\
    \ such\n   accusations are entirely unjustified, the practice causes uproar and\n\
    \   damage to the DNSBL's reputation, if not the DNSBL mechanism as a\n   whole.\n\
    \   Therefore, negative-connotation DNSBLs MUST not charge fees or\n   require\
    \ donations for delisting or \"faster handling\", and it is\n   RECOMMENDED that\
    \ such DNSBLs that do charge fees or require donations\n   not be used.\n"
- title: 3.  Operational Issues
  contents:
  - '3.  Operational Issues

    '
- title: 3.1.  DNSBL Query Root Domain Name SHOULD be a Subdomain
  contents:
  - "3.1.  DNSBL Query Root Domain Name SHOULD be a Subdomain\n   By virtue of using\
    \ domain names, a DNSBL is a hierarchy with a root\n   anchored in the global\
    \ Internet.  The DNSBL \"query root\" SHOULD be\n   below the registered domain\
    \ name, so that the DNSBL information is\n   not conflated with domain name housekeeping\
    \ information (e.g., name\n   server or MX records) for the domain name.  By using\
    \ this approach,\n   DNSBL queries would take the form of \"<query>.dnsbl.example.com\"\
    \n   rather than \"<query>.example.com\".  Further, this sub-tree should\n   have\
    \ its own name servers.  Thus, the DNSBL query root has its own\n   zone file\
    \ containing the DNSBL information, and the registered domain\n   name has its\
    \ own name servers containing the information (MX records,\n   etc.) for the domain\
    \ name.  This approach facilitates clear\n   delineation of function as well as\
    \ orderly DNSBL shutdown because the\n   DNSBL name server records can be specified\
    \ separately from the domain\n   name's principal name servers.\n   Many DNSBLs\
    \ support more than one logical zone (DNSBL entries with\n   different meanings)\
    \ that DNSBL users may wish to treat differently\n   (or even ignore).  It is\
    \ RECOMMENDED that, even if there is a single\n   DNSBL zone with entry type distinguished\
    \ by return code, separate\n   subdomain names (of the query root) consist only\
    \ of the corresponding\n   entries.  For example, entry types \"A\" and \"B\"\
    \ might return 127.0.0.2\n   and 127.0.0.3 from the consolidated zone (e.g., dnsbl.example.com),\n\
    \   but there should also be zones typeA.dnsbl.example.com and\n   typeB.dnsbl.example.com\
    \ that contain their respective types only.\n   See also Section 3.3.\n"
- title: 3.2.  DNSBLs SHOULD Be Adequately Provisioned
  contents:
  - "3.2.  DNSBLs SHOULD Be Adequately Provisioned\n   The DNSBL SHOULD have sufficient\
    \ name server capacity to handle the\n   expected loading and have sufficient\
    \ redundancy to handle normal\n   outages.\n   Name servers SHOULD provide appropriate\
    \ glue records, possibly in\n   different Top-Level Domains (TLDs) to protect\
    \ against single-TLD\n   issues.\n   If the DNSBL offers zone transfers (in addition\
    \ to or instead of\n   standard DNSBL query mechanisms), it SHOULD be sufficiently\n\
    \   provisioned to handle the expected loading.\n   Note that some DNSBLs have\
    \ been subject to DDoS attacks.\n   Provisioning SHOULD take the likelihood of\
    \ this into account and\n   include plans for dealing with it.\n"
- title: 3.3.  DNSBLs SHOULD Provide Operational Flags
  contents:
  - "3.3.  DNSBLs SHOULD Provide Operational Flags\n   Most IP address-based DNSBLs\
    \ follow a convention of query entries for\n   IP addresses in 127.0.0.0/8 (127.0.0.0-127.255.255.255)\
    \ to provide\n   online indication of whether the DNSBL is operational.  Many,\
    \ if not\n   most, DNSBLs arrange to have a query of 127.0.0.2 return an A record\n\
    \   (usually 127.0.0.2) indicating that the IP address is listed.  This\n   appears\
    \ to be a de facto standard indicating that the DNSBL is\n   operating correctly.\
    \  See [RFC5782] for more details on DNSBL test\n   entries.\n   If this indicator\
    \ is missing (query of 127.0.0.2 returns NXDOMAIN),\n   or any query returns an\
    \ A record outside of 127.0.0.0/8, the DNSBL\n   should be considered non-functional.\n\
    \   There does not appear to be a de facto standard for test entries\n   within\
    \ domain-name-based DNSBLs.  A number of domain-name-based\n   DNSBLs use the\
    \ same 127.0.0.2 query test mechanism as IP-address-\n   based DNSBLs, and others\
    \ use a variety of domain-name-based test\n   entries.  Due to the way many domain-name-based\
    \ DNSBLs are used\n   (e.g., hostname parts of URIs in email bodies), using anything\
    \ likely\n   to appear in a legitimate email message is a bad idea (e.g.,\n  \
    \ http://example.com), especially considering that some email readers\n   will\
    \ transform bare IP addresses or domain names appearing in the\n   body of an\
    \ email into links.  So, even 127.0.0.2 may be problematic.\n   But a common testing\
    \ method is desirable.\n   In the absence of new emerging standards, it is RECOMMENDED\
    \ that\n   domain-name-based DNSBLs use a test entry of \"test\".  This is chosen\n\
    \   because it is a reserved TLD.\n   Note: In Section 3.4, it is noted that some\
    \ DNSBLs have shut down in\n   such a way to list all of the Internet.  Further,\
    \ in Section 3.5,\n   DNSBL operators MUST NOT list 127.0.0.1.  Therefore, a positive\n\
    \   listing for 127.0.0.1 SHOULD indicate that the DNSBL has started\n   listing\
    \ the world and is non-functional.  Similarly, a domain-based\n   DNSBL SHOULD\
    \ NOT ever list the reserved domain INVALID, and a\n   positive listing for INVALID\
    \ SHOULD indicate that the DNSBL is non-\n   functional.\n   Other results, such\
    \ as 127.0.0.3, may have different meanings.  This\n   operational flag usage\
    \ and meaning SHOULD be published on the DNSBL's\n   web site, and the DNSBL user\
    \ SHOULD periodically test the DNSBL.\n   Some mail systems are unable to differentiate\
    \ between these various\n   results or flags, however, so a public DNSBL SHOULD\
    \ NOT include\n   opposing or widely different meanings -- such as 127.0.0.23\
    \ for\n   \"sends good mail\" and 127.0.0.99 for \"sends bad mail\" -- within\
    \ the\n   same DNS zone.\n"
- title: 3.4.  Shutdowns MUST Be Done Gracefully
  contents:
  - "3.4.  Shutdowns MUST Be Done Gracefully\n   A number of DNSBLs have shut down\
    \ operations in such a way as to list\n   the entire Internet, sometimes without\
    \ warning.  These were usually\n   done this way to force DNSBL users (mail administrators)\
    \ to adjust\n   their DNSBL client configurations to omit the now inoperative\
    \ DNSBL\n   and to shed the DNS query load from the registered domain name\n \
    \  servers for the DNSBL.  Popular DNSBLs are used by tens of thousands\n   of\
    \ sites, yet, the correct operation of the DNSBLs are not well\n   monitored by\
    \ their users.  The DNSBL query clients are often not\n   compliant with DNSBL\
    \ query conventions (e.g., they will treat any A\n   record returned as being\
    \ \"listed\", instead of specific 127/8 A record\n   returns), hence shutdowns\
    \ (or even ordinary domain name expiration)\n   can be quite destructive to all\
    \ email flow if not done properly.\n   The DNSBL operator MUST issue impending\
    \ shutdown warnings (on the\n   DNSBL web site, appropriate mailing lists, newsgroups,\
    \ vendor\n   newsletters, etc.), and indicate that the DNSBL is inoperative using\n\
    \   the signaling given in Section 3.3.\n   Only after these warnings have been\
    \ issued for a significant period\n   of time (RECOMMENDED: one or more months),\
    \ should the DNSBL operator\n   finally shutdown the DNSBL.\n   The shutdown procedure\
    \ should have the following properties:\n   1.  MUST NOT list the entire Internet\n\
    \   2.  SHOULD shed the DNSBL query load from the DNSBL name servers,\n      \
    \ permitting the registered domain name to continue being usable.\n   3.  SHOULD,\
    \ perhaps through increased delays, indicate to the mail\n       administrator\
    \ that the DNSBL is no longer functional.\n   4.  Name server or query lookups\
    \ MUST NOT be aimed at third parties\n       unrelated to DNSBL operation.  Such\
    \ behavior is similar to\n       inflicting a DDoS attack.\n   5.  The base domain\
    \ name SHOULD be registered indefinitely, so as to\n       prevent the domain\
    \ name from being a \"booby trap\" for future\n       owners, and/or to prevent\
    \ a new owner from maliciously listing\n       the entire Internet.\n   One way\
    \ of satisfying points 1-4 above is to change the DNS name\n   servers for the\
    \ DNSBL to point at \"TEST-NET\" addresses (see\n   [RFC5735]).  The below suggested\
    \ [BIND] declarations will cause a\n   DNSBL query to query non-existent name\
    \ servers in TEST-NET addresses,\n   which will result in a significant delay\
    \ (usually more delay as the\n   number of non-existent TEST-NET name servers\
    \ is increased), but will\n   not return any A records except in very unusual\
    \ circumstances.\n   BIND-equivalent DNS declarations for DNSBL shutdown.\n  \
    \ dnsbl.example.com.  604800  IN  NS  u1.example.com.\n   u1.example.com.    \
    \ 604800  IN  A   192.0.2.1\n   dnsbl.example.com.  604800  IN  NS  u2.example.com.\n\
    \   u2.example.com.     604800  IN  A   192.0.2.2\n   dnsbl.example.com.  604800\
    \  IN  NS  u3.example.com.\n   u3.example.com.     604800  IN  A   192.0.2.3\n\
    \   ... [as many NS/A record pairs as you like]\n   This example assumes that\
    \ the DNSBL is named \"dnsbl.example.com\".\n   Replace \"example.com\" and \"\
    dnsbl.example.com\" as appropriate for the\n   DNSBL.\n   NOTE:  Of course, the\
    \ above shutdown procedure cannot be implemented\n      if Section 3.1 is not\
    \ followed.\n"
- title: 3.5.  Listing of Special and Reserved IP Addresses MUST Be Disclosed
  contents:
  - "3.5.  Listing of Special and Reserved IP Addresses MUST Be Disclosed\n   The\
    \ DNSBL MAY list loopback, [RFC1918], LINK-LOCAL class [RFC3927],\n   class D/E,\
    \ and any other permanently reserved or special-use IP\n   addresses [RFC5735]\
    \ (and [RFC5156] for IPv6).  Such use MUST be\n   disclosed in the documentation\
    \ related to the DNSBL.\n   As additional insurance against listings of space\
    \ that should not be\n   listed through testing or other unforeseen events, DNSBL\
    \ operators\n   SHOULD consider implementing facilities to prevent them.  At least\n\
    \   one popular automated DNSBL has implemented permanent exclusions for\n   such\
    \ addresses.\n   A functioning DNSBL MUST NOT list 127.0.0.1.  There are a number\
    \ of\n   mail server implementations that do not cope with this well, and many\n\
    \   will use a positive response for 127.0.0.1 as an indication that the\n   DNSBL\
    \ is shut down and listing the entire Internet.\n"
- title: 3.6.  Considerations for DNSBLs Listing Insecure Hosts
  contents:
  - "3.6.  Considerations for DNSBLs Listing Insecure Hosts\n   Some DNSBLs list IP\
    \ addresses of hosts that are insecure in various\n   ways (e.g., open relays,\
    \ open proxies).  The following\n   recommendations for such DNSBLs may not be\
    \ relevant to other types of\n   DNSBLs.\n   The practice of scanning for vulnerabilities\
    \ can represent a risk in\n   some jurisdictions.  The following recommendations\
    \ for such DNSBLs\n   MAY help alleviate this risk.\n"
- title: 3.6.1.  DNSBLs MUST NOT Scan without Provocation
  contents:
  - "3.6.1.  DNSBLs MUST NOT Scan without Provocation\n   DNSBLs MUST NOT automatically\
    \ probe for insecure hosts without\n   provocation.  There is little agreement\
    \ in the community as to\n   whether or not such activity should be allowed, so\
    \ this document errs\n   on the side of caution.\n   Therefore, scanning MUST\
    \ be targeted, rather than broad-based, where\n   a given scan is motivated by\
    \ a specific reason to have concern about\n   the address being scanned.  Examples\
    \ of such reasons include delivery\n   of an email, delivery to a spam trap address,\
    \ receipt of a user\n   complaint, or periodic testing of an address that is already\
    \ listed.\n"
- title: 3.6.2.  Re-Scan Periods SHOULD Be Reasonable
  contents:
  - "3.6.2.  Re-Scan Periods SHOULD Be Reasonable\n   If the DNSBL operator re-scans\
    \ a host in order to determine whether\n   the listing SHOULD time out or not,\
    \ the re-scan period SHOULD be\n   reasonable.  Automated scanning SHOULD NOT\
    \ occur more often than once\n   every 24 hours.\n   It is RECOMMENDED that automated\
    \ re-scanning should cease within a\n   reasonable period of the vulnerability\
    \ no longer existing and of the\n   targeting conditions no longer being met.\n"
- title: 3.6.3.  Scans MUST NOT Be Destructive
  contents:
  - "3.6.3.  Scans MUST NOT Be Destructive\n   In the past, some scanning mechanisms\
    \ have proven to adversely impact\n   the scanned host, sometimes in severe fashion.\
    \  Scanning\n   methodologies MUST NOT negatively impact the scanned host.\n"
- title: 3.7.  Removals SHOULD Be Possible in Absence of the DNSBL Operator
  contents:
  - "3.7.  Removals SHOULD Be Possible in Absence of the DNSBL Operator\n   If removals\
    \ cannot be automated (e.g., via robot re-testing or self-\n   removal), then\
    \ the DNSBL SHOULD have multiple administrators so that\n   a removal request\
    \ can be processed if the principal list\n   administrator is on vacation or otherwise\
    \ unavailable.\n"
- title: 3.8.  Protect against Misconfiguration/Outages
  contents:
  - "3.8.  Protect against Misconfiguration/Outages\n   It is not altogether uncommon\
    \ for DNSBL users to configure their\n   systems improperly for DNSBL queries.\
    \  The consequences of an error\n   can range from undue (or even damaging) load\
    \ on the DNSBL servers to\n   accidentally blocking all incoming email.\n   DNSBL\
    \ users MUST test their initial DNSBL configurations to ensure\n   that they're\
    \ working correctly and SHOULD periodically recheck the\n   status of the DNSBLs\
    \ they use and adjust their configuration as\n   necessary.\n   Common types of\
    \ misconfigurations include:\n   1.  Using wrong (sub-)zones for querying (e.g.,\
    \ 4.3.2.1.example.com\n       or 4.3.2.1.dnsbl.exmple.cm instead of 4.3.2.1.dnsbl.example.com).\n\
    \   2.  Downloading a local mirror of the data, but failing to set up the\n  \
    \     local name server infrastructure appropriately, and thus\n       continuing\
    \ to query the public name servers.\n   3.  Downloading a local mirror of the\
    \ data, but misconfiguring the\n       local name server infrastructure to query\
    \ a locally invented zone\n       name (4.3.2.1.dnsbl.local) at the public name\
    \ servers.\n   4.  Misconfiguring local name servers to not do meaningful caching,\n\
    \       thus heavily increasing load on the public name servers.\n   5.  Using\
    \ the DNSBL query root domain name as the name server for\n       queries.\n \
    \  6.  Using the DNSBL incorrectly, e.g., some DNSBLs are suitable only\n    \
    \   for certain types of filtering.  Improper use may result in\n       excessive\
    \ incorrect filtering.\n   While in many cases it can be difficult to detect such\
    \ situations, to\n   protect against such misconfiguration, it is RECOMMENDED\
    \ that DNSBL\n   operators make design decisions to mitigate the impact of such\n\
    \   mistakes and make efforts to contact administrative contacts to\n   remedy\
    \ the situation where appropriate.  But the DNSBL operator\n   SHOULD also prepare\
    \ to take appropriate steps to protect the\n   operational infrastructure (e.g.,\
    \ have the ability to block abusive\n   users from causing further damage).\n\
    \   Appropriate use of the DNSBL SHOULD be documented on the web site.\n"
- title: 3.9.  Error Handling
  contents:
  - "3.9.  Error Handling\n   From time to time, DNSBLs have encountered operational\
    \ data integrity\n   or data collection problems that have resulted in improper\
    \ listings.\n   For example: data corruption, erroneous restoration of resolved\n\
    \   listings, or grossly misfiring detection heuristics.  This often\n   results\
    \ in great consternation over what appear to be nonsensical\n   listings or listings\
    \ for previously resolved issues.\n   Many DNSBLs have implemented policies and\
    \ procedures whereby such\n   situations result in the purging of even slightly\
    \ doubtful entries,\n   disconnection of untrustworthy components until the entries'\
    \ validity\n   or correct operation of the component can be verified or corrected,\n\
    \   as well as notification of the issue on the DNSBL's web pages.\n   As an example,\
    \ one popular DNSBL has a demonstrated track record of\n   disabling faulty data\
    \ collection mechanisms, purging all listings\n   generated by the faulty mechanism,\
    \ and publishing a brief description\n   of the problem and course of remediation.\n\
    \   Therefore, DNSBLs SHOULD have policies and procedures in place to\n   treat\
    \ operational problems conservatively, be prepared to mass purge\n   dubious entries,\
    \ prevent future erroneous entries, and notify their\n   users by the DNSBL's\
    \ web page.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Any system manager that uses DNSBLs is entrusting\
    \ part of his or her\n   server management to the parties that run the lists.\
    \  A DNSBL manager\n   that decided to list 0/0 (which has actually happened)\
    \ could cause\n   every server that uses the DNSBL to reject all mail.  Conversely,\
    \ if\n   a DNSBL manager removes all of the entries (which has also happened),\n\
    \   systems that depend on the DNSBL will find that their filtering\n   doesn't\
    \ work as they want it to.\n   If a registered domain name used for a DNSBL is\
    \ allowed to lapse, or\n   the DNSBL user spells the DNSBL domain name incorrectly,\
    \ the system\n   manager's server management is now subject to an entirely different\n\
    \   party than was intended.  Further, even if there is no malicious\n   intent,\
    \ some DNSBL query clients will interpret any A record being\n   returned as being\
    \ listed.  DNSBL users SHOULD be prepared to\n   periodically test the DNSBLs\
    \ they use for correct operation.\n   Like all DNS-based mechanisms, DNSBLs are\
    \ subject to various threats\n   outlined in [RFC3833].\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC1918]      Rekhter, Y., Moskowitz, R., Karrenberg,\
    \ D., Groot, G.,\n                  and E. Lear, \"Address Allocation for Private\n\
    \                  Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC2119]\
    \      Bradner, S., \"Key words for use in RFCs to Indicate\n                \
    \  Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3927]      Cheshire,\
    \ S., Aboba, B., and E. Guttman, \"Dynamic\n                  Configuration of\
    \ IPv4 Link-Local Addresses\", RFC 3927,\n                  May 2005.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [BIND]         Internet Systems Corporation,\
    \ \"ISC BIND\",\n                  <http://www.isc.org/software/bind>.\n   [RFC3833]\
    \      Atkins, D. and R. Austein, \"Threat Analysis of the\n                 \
    \ Domain Name System (DNS)\", RFC 3833, August 2004.\n   [RFC5156]      Blanchet,\
    \ M., \"Special-Use IPv6 Addresses\", RFC 5156,\n                  April 2008.\n\
    \   [RFC5735]      Cotton, M. and L. Vegoda, \"Special Use IPv4\n            \
    \      Addresses\", BCP 153, RFC 5735, January 2010.\n   [RFC5782]      Levine,\
    \ J., \"DNS Blacklists and Whitelists\", RFC 5782,\n                  February\
    \ 2010.\n   [RSYNC]        Tridgell, A., \"rsync\", <http://rsync.samba.org/>.\n\
    \   [RSYNCTHESIS]  Tridgell, A., \"Efficient Algorithms for Sorting and\n    \
    \              Synchronization\",\n                  <http://samba.org/~tridge/phd_thesis.pdf>.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   We would like to thank John R. Levine, Alan\
    \ Murphy, and Dave Crocker\n   for their insightful comments.\n   We would also\
    \ like to thank Yakov Shafranovich and Nick Nicholas for\n   editing draft versions\
    \ of this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Chris Lewis\n   Nortel Networks\n   EMail: clewisbcp@cauce.org\n\
    \   Matt Sergeant\n   Symantec Corporation\n   EMail: matt@sergeant.org\n"
