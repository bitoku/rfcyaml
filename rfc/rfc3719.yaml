- title: __initial_text__
  contents:
  - "           Recommendations for Interoperable Networks using\n           Intermediate\
    \ System to Intermediate System (IS-IS)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses a number of differences between the\n  \
    \ Intermediate System to Intermediate System (IS-IS) protocol as\n   described\
    \ in ISO 10589 and the protocol as it is deployed today.\n   These differences\
    \ are discussed as a service to those implementing,\n   testing, and deploying\
    \ the IS-IS Protocol.  A companion document\n   discusses differences between\
    \ the protocol described in RFC 1195 and\n   the protocol as it is deployed today\
    \ for routing IP traffic.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   2.  Constants That Are Variable . . . . . . . . . . . . . .\
    \ . . .  2\n   3.  Variables That Are Constant . . . . . . . . . . . . . . . .\
    \ .  4\n   4.  Alternative Metrics . . . . . . . . . . . . . . . . . . . . . \
    \ 6\n   5.  ReceiveLSPBufferSize. . . . . . . . . . . . . . . . . . . . .  6\n\
    \   6.  Padding Hello PDUs. . . . . . . . . . . . . . . . . . . . . .  8\n   7.\
    \  Zero Checksum . . . . . . . . . . . . . . . . . . . . . . . .  9\n   8.  Purging\
    \ Corrupted LSPs. . . . . . . . . . . . . . . . . . . . 10\n   9.  Checking System\
    \ ID in Received point-to-point IIH PDUs. . . . 10\n   10. Doppelganger LSPs .\
    \ . . . . . . . . . . . . . . . . . . . . . 11\n   11. Generating a Complete Set\
    \ of CSNPs. . . . . . . . . . . . . . 11\n   12. Overload Bit. . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 12\n   13. Security Considerations . . . . .\
    \ . . . . . . . . . . . . . . 13\n   14. References. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 13\n   15. Acknowledgments . . . . . . . . . . . . .\
    \ . . . . . . . . . . 14\n   16. Author's  Address . . . . . . . . . . . . . .\
    \ . . . . . . . . 14\n   17. Full Copyright Statement. . . . . . . . . . . . .\
    \ . . . . . . 15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n         In theory, there is no difference between theory and\
    \ practice.\n         But in practice, there is.\n                           \
    \         Jan L.A. van de Snepscheut\n   Interior Gateway Protocols such as IS-IS\
    \ are designed to provide\n   timely information about the best routes in a routing\
    \ domain.  The\n   original design of IS-IS, as described in ISO 10589 [1] has\
    \ proved to\n   be quite durable.  However, a number of original design choices\
    \ have\n   been modified.  This document addresses differences between the\n \
    \  protocol described in ISO 10589 and the protocol that can be observed\n   on\
    \ the wire today.  A companion document discusses differences\n   between the\
    \ protocol described in RFC 1195 [2] for routing IP traffic\n   and current practice.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\" and \"MAY\"\
    \ in\n   this document are to be interpreted as described in RFC 2119 [3].\n"
- title: 2.  Constants That Are Variable
  contents:
  - "2.  Constants That Are Variable\n   Some parameters that were defined as constant\
    \ in ISO 10589 are\n   modified in practice.  These include the following\n  \
    \       (1)  MaxAge - the lifetime of a Link State PDU (LSP)\n         (2)  ISISHoldingMultiplier\
    \ - a parameter used to describe the\n              generation of hello packets\n\
    \         (3)  ReceiveLSPBufferSize - discussed in a later section\n"
- title: 2.1.  MaxAge
  contents:
  - "2.1.  MaxAge\n   Each LSP contains a RemainingLifetime field which is initially\
    \ set to\n   the MaxAge value on the generating IS.  The value stored in this\n\
    \   field is decremented to mark the passage of time and the number of\n   times\
    \ it has been forwarded.  When the value of a foreign LSP becomes\n   0, an IS\
    \ initiates a purging process which will flush the LSP from\n   the network. \
    \ This ensures that corrupted or otherwise invalid LSPs\n   do not remain in the\
    \ network indefinitely.  The rate at which LSPs\n   are regenerated by the originating\
    \ IS is determined by the value of\n   maximumLSPGenerationInterval.\n   MaxAge\
    \ is defined in ISO 10589 as an Architectural constant of 20\n   minutes, and\
    \ it is recommended that maximumLSPGenerationInterval be\n   set to 15 minutes.\
    \  These times have proven to be too short in some\n   networks, as they result\
    \ in a steady flow of LSP updates even when\n   nothing is changing.  To reduce\
    \ the rate of generation, some\n   implementations allow these times to be set\
    \ by the network operator.\n   The relation between MaxAge and maximumLSPGenerationInterval\
    \ is\n   discussed in section 7.3.21 of ISO 10589.  If MaxAge is smaller than\n\
    \   maximumLSPGenerationInterval, then an LSP will expire before it is\n   replaced.\
    \  Further, as RemainingLifetime is decremented each time it\n   is forwarded,\
    \ an LSP far from its origin appears older and is removed\n   sooner.  To make\
    \ sure that an LSP survives long enough to be\n   replaced, MaxAge should exceed\
    \ maximumLSPGenerationInterval by at\n   least ZeroAgeLifetime + minimumLSPTransmissionInterval.\
    \  The first\n   term, ZeroAgeLifetime, is an estimate of how long it takes to\
    \ flood\n   an LSP through the network.  The second term,\n   minimumLSPTransmissionInterval,\
    \ takes into account how long a router\n   might delay before sending an LSP.\
    \  The original recommendation was\n   that MaxAge be at least 5 minutes larger\
    \ than\n   maximumLSPGenerationInterval, and that recommendation is still valid\n\
    \   today.\n   An implementation MAY use a value of MaxAge that is greater than\
    \ 1200\n   seconds.  MaxAge SHOULD exceed maximumLSPGenerationInterval by at\n\
    \   least 300 seconds.  An implementation SHOULD NOT use its value of\n   MaxAge\
    \ to discard LSPs from peers, as discussed below.\n   An implementation is not\
    \ required to coordinate the RemainingLifetime\n   it assigns to LSPs to the RemainingLifetime\
    \ values it accepts, and\n   MUST ignore the following sentence from section 7.3.16.3.\
    \ of ISO\n   10589.\n         \"If the value of Remaining Lifetime [of the received\
    \ LSP] is\n         greater than MaxAge, the LSP shall be processed as if there\n\
    \         were a checksum error.\"\n"
- title: 2.2.  ISISHoldingMultiplier
  contents:
  - "2.2.  ISISHoldingMultiplier\n   An IS sends IS to IS Hello Protocol Data Units\
    \ (IIHs) on a periodic\n   basis over active circuits, allowing other attached\
    \ routers to\n   monitor their aliveness.  The IIH includes a two byte field called\n\
    \   the Holding Time which defines the time to live of an adjacency.  If\n   an\
    \ IS does not receive a hello from an adjacent IS within this\n   holding time,\
    \ the adjacent IS is assumed to be no longer operational,\n   and the adjacency\
    \ is removed.\n   ISO 10589 defines ISISHoldingMultiplier to be 10, and states\
    \ that the\n   value of Holding Time should be ISISHoldingMultiplier multiplied\
    \ by\n   iSISHelloTimer for ordinary systems, and dRISISHelloTimer for a DIS.\n\
    \   This implies that the neighbor must lose 10 IIHs before an adjacency\n   times\
    \ out.\n   In practice, a value of 10 for the ISISHoldingMultiplier has proven\n\
    \   to be too large.  DECnet PhaseV defined two related values.  The\n   variable\
    \ holdingMultiplier, with a default value of 3, was used for\n   point-to-point\
    \ IIHs, while the variable ISISHoldingMultiplier, with a\n   default value of\
    \ 10, was used for LAN IIHs.  Most implementations\n   today set the default ISISHoldingMultiplier\
    \ to 3 for both circuit\n   types.\n   Note that adjacent systems may use different\
    \ values for Holding Time\n   and will form an adjacency with non-symmetric hold\
    \ times.\n   An implementation MAY allow ISISHoldingMultiplier to be configurable.\n\
    \   Values lower than 3 are unstable, and may cause adjacencies to flap.\n"
- title: 3.  Variables That Are Constant
  contents:
  - "3.  Variables That Are Constant\n   Some values that were defined as variables\
    \ in ISO 10589 do not vary\n   in practice.  These include\n         (1)  ID Length\
    \ - the length of the SystemID\n         (2)  maximumAreaAddresses\n         (3)\
    \  Protocol Version\n"
- title: 3.1.  ID Length
  contents:
  - "3.1.  ID Length\n   The ID Length is a field carried in all PDUs.  The ID Length\
    \ defines\n   the length of the System ID, and is allowed to take values from\
    \ 0 to\n   8.  A value of 0 is interpreted to define a length of 6 bytes.  As\n\
    \   suggested in B.1.1.3 of [1], it is easy to use an Ethernet MAC\n   address\
    \ to generate a unique 6 byte System ID.  Since the SystemID\n   only has significance\
    \ within the IGP Domain, 6 bytes has proved to be\n   easy to use and ample in\
    \ practice.  There are also new IS-IS Traffic\n   Engineering TLVs which assume\
    \ a 6 byte System ID.  Choices for the ID\n   length other than 6 are difficult\
    \ to support today.  Implementations\n   may interoperate without being able to\
    \ deal with System IDs of any\n   length other than 6.\n   An implementation MUST\
    \ use an ID Length of 6, and MUST check the ID\n   Length defined in the IS-IS\
    \ PDUs it receives.  If a router encounters\n   a PDU with an ID Length different\
    \ from 0 or 6, section 7.3.15.a.2\n   dictates that it MUST discard the PDU, and\
    \ SHOULD generate an\n   appropriate notification.  ISO 10589 defines the notification\n\
    \   iDFieldLengthMismatch, while the IS-IS MIB [7] defines the\n   notification\
    \ isisIDLenMismatch.\n"
- title: 3.2.  maximumAreaAddresses
  contents:
  - "3.2.  maximumAreaAddresses\n   The value of maximumAreaAddresses is defined to\
    \ be an integer between\n   1 and 254, and defines the number of synonymous Area\
    \ Addresses that\n   can be in use in an L1 area.  This value is advertised in\
    \ the header\n   of each IS-IS PDU.\n   Most deployed networks use one Area Address\
    \ for an L1 area.  When\n   merging or splitting areas, a second address is required\
    \ for seamless\n   transition.  The third area address was originally required\
    \ to\n   support DECnet PhaseIV addresses as well as OSI addresses during a\n\
    \   transition.\n   ISO 10589 requires that all Intermediate Systems in an area\
    \ or domain\n   use a consistent value for maximumAreaAddresses.  Common practice\
    \ is\n   for an implementation to use the value 3.  Therefore an\n   implementation\
    \ that only supports 3 can expect to interoperate\n   successfully with other\
    \ conformant systems.\n   ISO 10589 specifies that an advertised value of 0 is\
    \ treated as\n   equivalent to 3, and that checking the value for consistency\
    \ may be\n   omitted if an implementation only supports the value 3.\n   An implementation\
    \ SHOULD use the value 3, and it SHOULD check the\n   value advertised in IS-IS\
    \ PDUs it receives.  If a router receives a\n   PDU with maximumAreaAddresses\
    \ that is not 0 or 3, it MUST discard the\n   PDU, as described in section 7.3.15.a.3,\
    \ and it SHOULD generate an\n   appropriate notification.  ISO 10589 defines the\
    \ notification\n   maximumAreaAddressMismatch, while the IS-IS MIB [7] defines\
    \ the\n   notification isisMaxAreaAddressesMismatch.\n"
- title: 3.3.  Protocol Version
  contents:
  - "3.3.  Protocol Version\n   IS-IS PDUs include two one-byte fields in the headers:\n\
    \   \"Version/Protocol ID Extension\" and \"Version\".\n   An implementation SHOULD\
    \ set both fields to 1, and it SHOULD check\n   the values of these fields in\
    \ IS-IS PDUs it receives.  If a router\n   receives a PDU with a value other than\
    \ 1 for either field, it MUST\n   drop the packet, and SHOULD generate the isisVersionSkew\n\
    \   notification.\n"
- title: 4.  Alternative Metrics
  contents:
  - "4.  Alternative Metrics\n   Section 7.2.2, ISO 10589 describes four metrics:\
    \ Default Metric,\n   Delay Metric, Expense Metric, and Error Metric.  None but\
    \ the Default\n   Metric are used in deployed networks, and most implementations\
    \ only\n   consider the Default Metric.  In ISO 10589, the most significant bit\n\
    \   of the 8 bit metrics was the field S (Supported), used to define if\n   the\
    \ metric was meaningful.\n         If this IS does not support this metric it\
    \ shall set bit S to 1\n         to indicate that the metric is unsupported.\n\
    \   The Supported bit was always 0 for the Default Metric, which must\n   always\
    \ be supported.  However, RFC 2966 [5] uses this bit in the\n   Default Metric\
    \ to mark L1 routes that have been leaked from L1 to L2\n   and back down into\
    \ L1 again.\n   Implementations MUST generate the Default Metric when using narrow\n\
    \   metrics, and SHOULD ignore the other three metrics when using narrow\n   metrics.\
    \  Implementations MUST assume that the Default Metric is\n   supported, even\
    \ if the S bit is set.  RFC 2966 describes restrictions\n   on leaking such routes\
    \ learned from L1 into L2.\n"
- title: 5.  ReceiveLSPBufferSize
  contents:
  - "5.  ReceiveLSPBufferSize\n   Since IS-IS does not allow segmentation of protocol\
    \ PDUs, Link State\n   PDUs (LSPs) must be propagated without modification on\
    \ all IS-IS\n   enabled links throughout the area/domain.  Thus it is essential\
    \ to\n   configure a maximum size that all routers can forward, receive, and\n\
    \   store.\n   This affects three aspects, which we discuss in turn:\n       \
    \  (1)  The largest LSP we can receive (ReceiveLSPBufferSize)\n         (2)  The\
    \ size of the largest LSP we can generate\n              (originatingL1LSPBufferSize\
    \ and\n              originatingL2LSPBufferSize)\n         (3)  Available Link\
    \ MTU for supported Circuits (MTU).  Note\n              this often differs from\
    \ the MTU available to IP clients.\n   ISO 10589 defines the architectural constant\
    \ ReceiveLSPBufferSize\n   with value 1492 bytes, and two private management parameters,\n\
    \   originatingL1LSPBufferSize for level 1 PDUs and\n   originatingL2LSPBufferSize\
    \ for level 2 PDUs.  The originating buffer\n   size parameters define the maximum\
    \ size of an LSP that a router can\n   generate.  ISO 10589 directs the implementor\
    \ to treat a PDU larger\n   than ReceiveLSPBufferSize as an error.\n   It is crucial\
    \ that\n            originatingL1LSPBufferSize <= ReceiveLSPBufferSize\n     \
    \       originatingL2LSPBufferSize <= ReceiveLSPBufferSize\n   and that for all\
    \ L1 links in the area\n            originatingL1LSPBufferSize <= MTU\n   and\
    \ for all L2 links in the domain\n            originatingL2LSPBufferSize <= MTU\n\
    \   The original thought was that operators could decrease the\n   originating\
    \ Buffer size when dealing with smaller MTUs, but would not\n   need to increase\
    \ ReceiveLSPBufferSize beyond 1492.\n   With the definition of new information\
    \ to be advertised in LSPs, such\n   as the Traffic Engineering TLVs, the limited\
    \ space of the LSP\n   database which may be generated by each router (256 * 1492\
    \ bytes at\n   each level) has become an issue.  Given that modern networks with\n\
    \   MTUs larger than 1492 on all links are not uncommon, one method which\n  \
    \ can be used to expand the LSP database size is to allow values of\n   ReceiveLSPBufferSize\
    \ greater than 1492.\n   Allowing ReceiveLSPBUfferSize to become a configurable\
    \ parameter\n   rather than an architectural constant must be done with care:\
    \ if any\n   system in the network does not support values larger than 1492 or\
    \ one\n   or more link MTUs used by IS-IS anywhere in the area/domain is\n   smaller\
    \ than the largest LSP which may be generated by any router,\n   then full propagation\
    \ of all LSPs may not be possible, resulting in\n   routing loops and black holes.\n\
    \   The steps below are recommended when changing ReceiveLSPBufferSize.\n    \
    \  (1)  Set the ReceiveLSPBufferSize to a consistent value throughout\n      \
    \     the network.\n      (2)  The implementation MUST not enable IS-IS on circuits\
    \ which do\n           not support an MTU at least as large as the originating\n\
    \           BufferSize at the appropriate level.\n      (3)  Include an originatingLSPBufferSize\
    \ TLV when generating LSPs,\n           introduced in section 9.8 of ISO 10589:2002\
    \ [1].\n      (4)  When receiving LSPs, check for an originatingLSPBufferSize\n\
    \           TLV, and report the receipt of values larger than the local\n    \
    \       value of ReceiveLSPBufferSize through the defined\n           Notifications\
    \ and Alarms.\n      (5)  Report the receipt of a PDU larger than the local\n\
    \           ReceiveLSPBufferSize through the defined Notifications and\n     \
    \      Alarms.\n      (6)  Do not discard large PDUs by default.  Storing and\
    \ processing\n           them as normal PDUs may help maintain coherence in a\n\
    \           misconfigured network.\n   Steps 1 and 2 are enough by themselves,\
    \ but the consequences of\n   mismatch are serious enough and difficult enough\
    \ to detect, that\n   steps 3-6 are recommended to help track down and correct\
    \ problems.\n"
- title: 6.  Padding Hello PDUs
  contents:
  - "6.  Padding Hello PDUs\n   To prevent the establishment of adjacencies between\
    \ systems which may\n   not be able to successfully receive and propagate IS-IS\
    \ PDUs due to\n   inconsistent settings for originatingLSPBufferSize and\n   ReceiveLSPBufferSize,\
    \ section 8.2.3 of [1] requires padding on\n   point-to-point links.\n   On point-to-point\
    \ links, the initial IIH is to be padded to the\n   maximum of\n      (1)  Link\
    \ MTU\n      (2)  originatingL1LSPBufferSize if the link is to be used for L1\n\
    \           traffic\n      (3)  originatingL2LSPBufferSize if the link is to be\
    \ used for L2\n           traffic\n   In section 6.7.2 e) ISO 10589 assumes\n\
    \         Provision that failure to deliver a specific subnetwork SDU\n      \
    \   will result in the timely disconnection of the subnetwork\n         connection\
    \ in both directions and that this failure will be\n         reported to both\
    \ systems\n   With this service provided by the link layer, the requirement that\n\
    \   only the initial IIH be padded was sufficient to check the\n   consistency\
    \ of the MTU on the two sides.  If the PDU was too big to\n   be received, the\
    \ link would be reset.  However, link layer protocols\n   in use on point-to-point\
    \ circuits today often lack this service, and\n   the initial padded PDU might\
    \ be silently dropped without resetting\n   the circuit.  Therefore, the requirement\
    \ that only the initial IIH be\n   padded does not provide the guarantees anticipated\
    \ in ISO 10589.\n   If an implementation is using padding to detect problems,\
    \ point-to-\n   point IIH PDUs SHOULD be padded until the sender declares an\n\
    \   adjacency on the link to be in state Up.  If the implementation\n   implements\
    \ RFC 3373 [4], \"Three-Way Handshake for IS-IS Point-to-\n   Point Adjacencies\"\
    \ then this is when the three-way state is Up: if\n   the implementation use the\
    \ \"classic\" algorithm described in ISO\n   10589, this is when adjacencyState\
    \ is Up.  Transmission of padded IIH\n   PDUs SHOULD be resumed whenever the adjacency\
    \ is torn down, and\n   SHOULD continue until the sender declares the adjacency\
    \ to be in\n   state Up again.\n   If an implementation is using padding, and\
    \ originatingL1LSPBUfferSize\n   or originatingL2LSPBUfferSize is modified, adjacencies\
    \ SHOULD be\n   brought down and reestablished so the protection provided by padding\n\
    \   IIH PDUs is performed consistent with the modified values.\n   Some implementations\
    \ choose not to pad.  Padding does not solve all\n   problems of misconfigured\
    \ systems.  In particular, it does not\n   provide a transitive relation.  Assume\
    \ that A, B, and C all pad IIH\n   PDUs, that A and B can establish an adjacency,\
    \ and that B and C can\n   establish an adjacency.  We still cannot conclude that\
    \ A and C could\n   establish an adjacency, if they were neighbors.\n   The presence\
    \ or absence of padding TLVs MUST NOT be one of the\n   acceptance tests applied\
    \ to a received IIH regardless of the state of\n   the adjacency.\n"
- title: 7.  Zero Checksum
  contents:
  - "7.  Zero Checksum\n   A checksum of 0 is impossible if the checksum is computed\
    \ according\n   to the rules of ISO 8473 [8].\n   ISO 10589, section 7.3.14.2(i),\
    \ states:\n         A Link State PDU received with a zero checksum shall be treated\n\
    \         as if the Remaining Lifetime were zero.  The age, if not zero,\n   \
    \      shall be overwritten with zero.\n   That is, ISO 10589 directs the receiver\
    \ to purge the LSP.  This has\n   proved to be disruptive in practice.  An implementation\
    \ SHOULD treat\n   all LSPs with a zero checksum and a non-zero remaining lifetime\
    \ as if\n   they had as checksum error.  Such packets SHOULD be discarded.\n"
- title: 8.  Purging Corrupted PDUs
  contents:
  - "8.  Purging Corrupted PDUs\n   While ISO 10589 requires in section 7.3.14.2 e)\
    \ that any LSP received\n   with an invalid PDU checksum should be purged, this\
    \ has been found to\n   be disruptive.  Most implementations today follow the\
    \ revised\n   specification, and simply drop the LSP.\n   In ISO 10589:2002 [1],\
    \ Section 7.3.14.2, it states:\n      (e)  An Intermediate system receiving a\
    \ Link State PDU with an\n           incorrect LSP Checksum or with an invalid\
    \ PDU syntax SHOULD\n           1) generate a corruptedLSPReceived circuit event,\n\
    \           2) discard the PDU.\n"
- title: 9.  Checking System ID in Received point-to-point IIH PDUs
  contents:
  - "9.  Checking System ID in Received point-to-point IIH PDUs\n   In section 8.2.4.2,\
    \ ISO 10589 does not explicitly require comparison\n   of the source ID of a received\
    \ IIH with the neighbourSystemID\n   associated with an existing adjacency on\
    \ a point-to-point link.\n   To address this omission, implementations receiving\
    \ an IIH PDU on a\n   point to point circuit with an established adjacency SHOULD\
    \ check the\n   Source ID field and compare that with the neighbourSystemID of\
    \ the\n   adjacency.  If these differ, an implementation SHOULD delete the\n \
    \  adjacency.\n   Given that IIH PDUs as specified in ISO 10589 do not include\
    \ a\n   check-sum, it is possible that a corrupted IIH may falsely indicate a\n\
    \   change in the neighbor's System ID.  The required subnetwork\n   guarantees\
    \ for point-to-point links, as described in 6.7.2 g) 1)\n   assume that undetected\
    \ corrupted PDUs are very rare (one event per\n   four years).  A link with frequent\
    \ errors that produce corrupted data\n   could lead to flapping an adjacency.\
    \  Inclusion of an optional\n   checksum TLV as specified in \"Optional Checksums\
    \ in IS-IS\" [6], may\n   be used to detect such corruption.  Hello packets carrying\
    \ this TLV\n   that are corrupted PDUs SHOULD be silently dropped, rather than\n\
    \   dropping the adjacency.\n   Some implementations have chosen to discard received\
    \ IIHs where the\n   source ID differs from the neighbourSystemID.  This may prevent\n\
    \   needless flapping caused by undetected PDU corruption.  If an actual\n   administrative\
    \ change to the neighbor's system ID has occurred, using\n   this strategy may\
    \ require the existing adjacency to timeout before an\n   adjacency with the new\
    \ neighbor can be established.  This is\n   expedited if the neighbor resets the\
    \ circuit as anticipated in 10589\n   after a System ID change, or resets the\
    \ 3-way adjacency state, as\n   anticipated in RFC 3373.\n"
- title: 10.  Doppelganger LSPs
  contents:
  - "10.  Doppelganger LSPs\n   When an Intermediate System shuts down, it may leave\
    \ old LSPs in the\n   network.  In the normal course of events, a rebooting system\
    \ flushes\n   out these old LSPs by reissuing those fragments with a higher\n\
    \   sequence number, or by purging fragments that it is not currently\n   generating.\n\
    \   In the case where a received LSP or SNP entry and an LSP in the local\n  \
    \ database have the same LSP ID, same sequence number, non-zero\n   remaining\
    \ lifetimes, but different non-zero checksums, the rules\n   defined in [1] cannot\
    \ determine which of the two is \"newer\".  In this\n   case, an implementation\
    \ may opt to perform an additional test as a\n   tie breaker by comparing the\
    \ checksums.  Implementations that elect\n   to use this method MUST consider\
    \ the LSP/SNP entry with the higher\n   checksum as newer.  When comparing the\
    \ checksums the checksum field\n   is treated as a 16 bit unsigned integer in\
    \ network byte order (i.e.,\n   most significant byte first).\n   The choice of\
    \ higher checksum, rather than lower, while arbitrary,\n   aligns with existing\
    \ implementations and ensures compatibility.\n   Note that a purged LSP (i.e.,\
    \ an LSP with remaining lifetime set to\n   0) is always considered newer than\
    \ a non-purged copy of the same LSP.\n"
- title: 11.  Generating a Complete Set of CSNPs
  contents:
  - "11.  Generating a Complete Set of CSNPs\n   There are a number of cases in which\
    \ a complete set of CSNPs must be\n   generated.  The DIS on a LAN, two IS's peering\
    \ over a P2P link, and\n   an IS helping another IS perform graceful restart must\
    \ generate a\n   complete set of CSNPs to assure consistent LSP Databases throughout.\n\
    \   Section 7.3.15.3 of [1] defines a complete set of CSNPs to be:\n         \"\
    A complete set of CSNPs is a set whose Start LSPID and End\n         LSPID ranges\
    \ cover the complete possible range of LSPIDs.\n         (i.e., there is no possible\
    \ LSPID value which does not appear\n         within the range of one of the CSNPs\
    \ in the set). \"\n   Strict adherence to this definition is required to ensure\
    \ the\n   reliability of the update process.  Deviation can lead to subtle and\n\
    \   hard to detect defects.  It is not sufficient to send a set of CSNPs\n   which\
    \ merely cover the range of LSPIDs which are in the local\n   database.  The set\
    \ of CSNPs must cover the complete possible range of\n   LSPIDs.\n   Consider\
    \ the following example:\n   If the current Level 1 LSP database on a router consists\
    \ of the\n   following non pseudo-node LSPs:\n      From system 1111.1111.1111\
    \ LSPs numbered 0-89(59H)\n      From system 2222.2222.2222 LSPs numbered 0-89(59H)\n\
    \   If the maximum size of a CSNP is 1492 bytes, then 90 CSNP entries can\n  \
    \ fit into a single CSNP PDU.  The following set of CSNP start/end\n   LSPIDs\
    \ constitute a correctly formatted complete set:\n      Start LSPID          \
    \    End LSPID\n      0000.0000.0000.00-00     1111.1111.1111.00-59\n      1111.1111.1111.00-5A\
    \     FFFF.FFFF.FFFF.FF-FF\n   The following are examples of incomplete sets of\
    \ CSNPS:\n      Start LSPID              End LSPID\n      0000.0000.0000.00-00\
    \     1111.1111.1111.00-59\n      1111.1111.1111.00-5A     2222.2222.2222.00-59\n\
    \   The sequence above has a gap after the second entry.\n      Start LSPID  \
    \            End LSPID\n      0000.0000.0000.00-00     1111.1111.1111.00-59\n\
    \      2222.2222.2222.00-00     FFFF.FFFF.FFFF.FF-FF\n   The sequence above has\
    \ a gap between the first and second entry.\n   Although it is legal to send a\
    \ CSNP which contains no actual LSP\n   entry TLVs, it should never be necessary\
    \ to do so in order to conform\n   to the specification.\n"
- title: 12.  Overload Bit
  contents:
  - "12.  Overload Bit\n   To deal with transient problems that prevent an IS from\
    \ storing all\n   the LSPs it receives, ISO 10589 defines an LSP Database Overload\n\
    \   condition in section 7.3.19.  When an IS is in Database Overload\n   condition,\
    \ it sets a flag called the Overload Bit in the non-\n   pseudonode LSP number\
    \ Zero that it generates.  Section 7.2.8.1 of ISO\n   10589 instructs other systems\
    \ not to use the overloaded IS as a\n   transit router.  Since the overloaded\
    \ IS does not have complete\n   information, it may not be able to compute the\
    \ right routes, and\n   routing loops could develop.\n   An overloaded router\
    \ might become the DIS.  An implementation SHOULD\n   not set the Overload bit\
    \ in PseudoNode LSPs that it generates, and\n   Overload bits seen in PseudoNode\
    \ LSPs SHOULD be ignored.\n"
- title: 13.  Security Considerations
  contents:
  - "13.  Security Considerations\n   The clarifications in this document do not raise\
    \ any new security\n   concerns, as there is no change in the underlying protocol\
    \ described\n   in ISO 10589 [1].\n"
- title: 14.  References
  contents:
  - '14.  References

    '
- title: 14.1.  Normative References
  contents:
  - "14.1.  Normative References\n   [1]  ISO, \"Intermediate system to Intermediate\
    \ system routeing\n        information exchange protocol for use in conjunction\
    \ with the\n        Protocol for providing the Connectionless-mode Network Service\n\
    \        (ISO 8473),\" ISO/IEC 10589:2002.\n   [2]  Callon, R., \"OSI IS-IS for\
    \ IP and Dual Environment\", RFC 1195,\n        December 1990.\n   [3]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [4]  Katz, D. and Saluja, R., \" Three-Way Handshake\
    \ for Intermediate\n        System to Intermediate System (IS-IS) Point-to-Point\n\
    \        Adjacencies\", RFC 3373, September 2002.\n   [5]  Li, T., Przygienda,\
    \ T. and H. Smit, \"Domain-wide Prefix\n        Distribution with Two-Level IS-IS\"\
    , RFC 2966, October 2000.\n   [6]  Koodli, R. and R. Ravikanth, \"Optional Checksums\
    \ in Intermediate\n        System to Intermediate System (ISIS)\", RFC 3358, August\
    \ 2002.\n"
- title: 14.2.  Informative References
  contents:
  - "14.2.  Informative References\n   [7]  Parker, J., \"Management Information Base\
    \ for IS-IS\", Work in\n        Progress, January 2004.\n   [8]  ITU, \"Information\
    \ technology - Protocol for providing the\n        connectionless-mode network\
    \ service\", ISO/IEC 8473-1, 1998.\n"
- title: 15.  Acknowledgments
  contents:
  - "15.  Acknowledgments\n   This document is the work of many people, and is the\
    \ distillation of\n   over a thousand mail messages.  Thanks to Vishwas Manral,\
    \ who pushed\n   to create such a document.  Thanks to Danny McPherson, the original\n\
    \   editor, for kicking things off.  Thanks to Mike Shand, for his work\n   in\
    \ creating the protocol, and his uncanny ability to remember what\n   everything\
    \ is for.  Thanks to Micah Bartell and Philip Christian, who\n   showed us how\
    \ to document difference without displaying discord.\n   Thanks to Les Ginsberg,\
    \ Neal Castagnoli, Jeff Learman, and Dave Katz,\n   who spent many hours educating\
    \ the editor.  Thanks to Radia Perlman,\n   who is always ready to explain anything.\
    \  Thanks to Satish Dattatri,\n   who was tenacious in seeing things written up\
    \ correctly.  Thanks to\n   Russ White, whose writing improved the treatment of\
    \ every topic he\n   touched.  Thanks to Shankar Vemulapalli, who read several\
    \ drafts with\n   close attention.  Thanks to Don Goodspeed, for his close reading\
    \ of\n   the text.  Thanks to Aravind Ravikumar, who pointed out that we\n   should\
    \ check Source ID on point-to-point IIH packets.  Thanks to\n   Michael Coyle\
    \ for identifying the quotation from Jan L.A. van de\n   Snepscheut.  Thanks for\
    \ Alex Zinin's ministrations behind the scenes.\n   Thanks to Tony Li and Tony\
    \ Przygienda, who kept us on track as the\n   discussions veered into the weeds.\
    \  And thanks to all those who have\n   contributed, but whose names I have carelessly\
    \ left from this list.\n"
- title: 16.  Author's Address
  contents:
  - "16.  Author's Address\n   Jeff Parker\n   Axiowave Networks\n   200 Nickerson\
    \ Road\n   Marlborough, Mass 01752\n   USA\n   EMail: jparker@axiowave.com\n"
- title: 17.  Full Copyright Statement
  contents:
  - "17.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS\
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed\n   to pertain to the implementation or use of the technology\n   described\
    \ in this document or the extent to which any license\n   under such rights might\
    \ or might not be available; nor does it\n   represent that it has made any independent\
    \ effort to identify any\n   such rights.  Information on the procedures with\
    \ respect to\n   rights in RFC documents can be found in BCP 78 and BCP 79.\n\
    \   Copies of IPR disclosures made to the IETF Secretariat and any\n   assurances\
    \ of licenses to be made available, or the result of an\n   attempt made to obtain\
    \ a general license or permission for the use\n   of such proprietary rights by\
    \ implementers or users of this\n   specification can be obtained from the IETF\
    \ on-line IPR repository\n   at http://www.ietf.org/ipr.\n   The IETF invites\
    \ any interested party to bring to its attention\n   any copyrights, patents or\
    \ patent applications, or other\n   proprietary rights that may cover technology\
    \ that may be required\n   to implement this standard.  Please address the information\
    \ to the\n   IETF at ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
