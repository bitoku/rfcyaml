- title: __initial_text__
  contents:
  - "              Operational Security Requirements for Large\n       Internet Service\
    \ Provider (ISP) IP Network Infrastructure\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a list of operational security requirements\
    \ for\n   the infrastructure of large Internet Service Provider (ISP) IP\n   networks\
    \ (routers and switches).  A framework is defined for\n   specifying \"profiles\"\
    , which are collections of requirements\n   applicable to certain network topology\
    \ contexts (all, core-only,\n   edge-only...).  The goal is to provide network\
    \ operators a clear,\n   concise way of communicating their security requirements\
    \ to vendors.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  5\n       1.1.  Goals. . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  5\n       1.2.  Motivation . . . . . . . . . . . . . . . . . . .\
    \ . . . .  5\n       1.3.  Scope. . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n       1.4.  Definition of a Secure Network . . . . . . . . . . .\
    \ . .  6\n       1.5.  Intended Audience. . . . . . . . . . . . . . . . . . .\
    \ .  6\n       1.6.  Format . . . . . . . . . . . . . . . . . . . . . . . . .\
    \  6\n       1.7.  Intended Use . . . . . . . . . . . . . . . . . . . . . .  7\n\
    \       1.8.  Definitions. . . . . . . . . . . . . . . . . . . . . . .  7\n  \
    \ 2.  Functional Requirements  . . . . . . . . . . . . . . . . . . . 11\n    \
    \   2.1.  Device Management Requirements . . . . . . . . . . . . . 11\n      \
    \       2.1.1.   Support Secure Channels For Management. . . . . 11\n       2.2.\
    \  In-Band Management Requirements. . . . . . . . . . . . . 12\n             2.2.1.\
    \   Use Cryptographic Algorithms Subject To\n                      Open Review\
    \ . . . . . . . . . . . . . . . . . . 12\n             2.2.2.   Use Strong Cryptography\
    \ . . . . . . . . . . . . 13\n             2.2.3.   Use Protocols Subject To Open\
    \ Review For\n                      Management. . . . . . . . . . . . . . . .\
    \ . . . 14\n             2.2.4.   Allow Selection of Cryptographic Parameters\
    \ . . 15\n             2.2.5.   Management Functions Should Have Increased\n \
    \                     Priority. . . . . . . . . . . . . . . . . . . . 16\n   \
    \    2.3.  Out-of-Band (OoB) Management Requirements  . . . . . . . 16\n     \
    \        2.3.1.   Support a 'Console' Interface . . . . . . . . . 17\n       \
    \      2.3.2.   'Console' Communication Profile Must Support\n               \
    \       Reset . . . . . . . . . . . . . . . . . . . . . 19\n             2.3.3.\
    \   'Console' Requires Minimal Functionality of\n                      Attached\
    \ Devices. . . . . . . . . . . . . . . . 19\n             2.3.4.   'Console' Supports\
    \ Fall-back Authentication . . 20\n             2.3.5.   Support Separate Management\
    \ Plane IP\n                      Interfaces. . . . . . . . . . . . . . . . .\
    \ . . 21\n             2.3.6.   No Forwarding Between Management Plane And Other\n\
    \                      Interfaces. . . . . . . . . . . . . . . . . . . 21\n  \
    \     2.4.  Configuration and Management Interface Requirements. . . 22\n    \
    \         2.4.1.   'CLI' Provides Access to All Configuration and\n          \
    \            Management Functions. . . . . . . . . . . . . . 22\n            \
    \ 2.4.2.   'CLI' Supports Scripting of Configuration . . . 23\n             2.4.3.\
    \   'CLI' Supports Management Over 'Slow' Links . . 24\n             2.4.4.  \
    \ 'CLI' Supports Idle Session Timeout . . . . . . 25\n             2.4.5.   Support\
    \ Software Installation . . . . . . . . . 25\n             2.4.6.   Support Remote\
    \ Configuration Backup . . . . . . 27\n             2.4.7.   Support Remote Configuration\
    \ Restore. . . . . . 27\n             2.4.8.   Support Text Configuration Files.\
    \ . . . . . . . 28\n       2.5.  IP Stack Requirements. . . . . . . . . . . .\
    \ . . . . . . 29\n             2.5.1.   Ability to Identify All Listening Services.\
    \ . . 29\n             2.5.2.   Ability to Disable Any and All Services . . .\
    \ . 30\n             2.5.3.   Ability to Control Service Bindings for\n      \
    \                Listening Services. . . . . . . . . . . . . . . 30\n        \
    \     2.5.4.   Ability to Control Service Source Addresses . . 31\n          \
    \   2.5.5.   Support Automatic Anti-spoofing for\n                      Single-Homed\
    \ Networks . . . . . . . . . . . . . 32\n             2.5.6.   Support Automatic\
    \ Discarding Of Bogons and\n                      Martians. . . . . . . . . .\
    \ . . . . . . . . . . 33\n             2.5.7.   Support Counters For Dropped Packets.\
    \ . . . . . 34\n       2.6.  Rate Limiting Requirements . . . . . . . . . . .\
    \ . . . . 35\n             2.6.1.   Support Rate Limiting . . . . . . . . . .\
    \ . . . 35\n             2.6.2.   Support Directional Application Of Rate\n  \
    \                    Limiting Per Interface. . . . . . . . . . . . . 36\n    \
    \         2.6.3.   Support Rate Limiting Based on State. . . . . . 36\n      \
    \ 2.7.  Basic Filtering Capabilities . . . . . . . . . . . . . . 37\n        \
    \     2.7.1.   Ability to Filter Traffic . . . . . . . . . . . 37\n          \
    \   2.7.2.   Ability to Filter Traffic TO the Device . . . . 37\n            \
    \ 2.7.3.   Ability to Filter Traffic THROUGH the Device. . 38\n             2.7.4.\
    \   Ability to Filter Without Significant\n                      Performance Degradation\
    \ . . . . . . . . . . . . 38\n             2.7.5.   Support Route Filtering .\
    \ . . . . . . . . . . . 39\n             2.7.6.   Ability to Specify Filter Actions\
    \ . . . . . . . 40\n             2.7.7.   Ability to Log Filter Actions . . .\
    \ . . . . . . 40\n       2.8.  Packet Filtering Criteria. . . . . . . . . . .\
    \ . . . . . 41\n             2.8.1.   Ability to Filter on Protocols. . . . .\
    \ . . . . 41\n             2.8.2.   Ability to Filter on Addresses. . . . . .\
    \ . . . 42\n             2.8.3.   Ability to Filter on Protocol Header Fields\
    \ . . 42\n             2.8.4.   Ability to Filter Inbound and Outbound. . . .\
    \ . 43\n       2.9.  Packet Filtering Counter Requirements. . . . . . . . . .\
    \ 43\n             2.9.1.   Ability to Accurately Count Filter Hits . . . . 43\n\
    \             2.9.2.   Ability to Display Filter Counters. . . . . . . 44\n  \
    \           2.9.3.   Ability to Display Filter Counters per Rule . . 45\n    \
    \         2.9.4.   Ability to Display Filter Counters per Filter\n           \
    \           Application . . . . . . . . . . . . . . . . . . 45\n             2.9.5.\
    \   Ability to Reset Filter Counters. . . . . . . . 46\n             2.9.6.  \
    \ Filter Counters Must Be Accurate. . . . . . . . 47\n       2.10. Other Packet\
    \ Filtering Requirements  . . . . . . . . . . 47\n             2.10.1.  Ability\
    \ to Specify Filter Log Granularity . . . 47\n       2.11. Event Logging Requirements\
    \ . . . . . . . . . . . . . . . 48\n             2.11.1.  Logging Facility Uses\
    \ Protocols Subject To\n                      Open Review . . . . . . . . . .\
    \ . . . . . . . . 48\n             2.11.2.  Logs Sent To Remote Servers . . .\
    \ . . . . . . . 49\n             2.11.3.  Ability to Select Reliable Delivery\
    \ . . . . . . 49\n             2.11.4.  Ability to Log Locally. . . . . . . .\
    \ . . . . . 50\n             2.11.5.  Ability to Maintain Accurate System Time.\
    \ . . . 50\n             2.11.6.  Display Timezone And UTC Offset . . . . . .\
    \ . . 51\n             2.11.7.  Default Timezone Should Be UTC. . . . . . . .\
    \ . 52\n             2.11.8.  Logs Must Be Timestamped. . . . . . . . . . . .\
    \ 52\n             2.11.9.  Logs Contain Untranslated IP Addresses. . . . . 53\n\
    \             2.11.10. Logs Contain Records Of Security Events . . . . 54\n  \
    \           2.11.11. Logs Do Not Contain Passwords . . . . . . . . . 55\n    \
    \   2.12. Authentication, Authorization, and Accounting (AAA)\n             Requirements\
    \ . . . . . . . . . . . . . . . . . . . . . . 55\n             2.12.1.  Authenticate\
    \ All User Access. . . . . . . . . . 55\n             2.12.2.  Support Authentication\
    \ of Individual Users. . . 56\n             2.12.3.  Support Simultaneous Connections.\
    \ . . . . . . . 56\n             2.12.4.  Ability to Disable All Local Accounts\
    \ . . . . . 57\n             2.12.5.  Support Centralized User Authentication\n\
    \                      Methods . . . . . . . . . . . . . . . . . . . . 57\n  \
    \           2.12.6.  Support Local User Authentication Method. . . . 58\n    \
    \         2.12.7.  Support Configuration of Order of\n                      Authentication\
    \ Methods  . . . . . . . . . . . . 59\n             2.12.8.  Ability To Authenticate\
    \ Without Plaintext\n                      Passwords . . . . . . . . . . . . .\
    \ . . . . . . 59\n             2.12.9.  No Default Passwords. . . . . . . . .\
    \ . . . . . 60\n             2.12.10. Passwords Must Be Explicitly Configured\
    \ Prior\n                      To Use. . . . . . . . . . . . . . . . . . . . .\
    \ 60\n             2.12.11. Ability to Define Privilege Levels. . . . . . . 61\n\
    \             2.12.12. Ability to Assign Privilege Levels to Users . . 62\n  \
    \           2.12.13. Default Privilege Level Must Be 'None'. . . . . 62\n    \
    \         2.12.14. Change in Privilege Levels Requires\n                     \
    \ Re-Authentication . . . . . . . . . . . . . . . 63\n             2.12.15. Support\
    \ Recovery Of Privileged Access . . . . . 64\n       2.13. Layer 2 Devices Must\
    \ Meet Higher Layer Requirements. . . 65\n       2.14. Security Features Must\
    \ Not Cause Operational Problems. . 65\n       2.15. Security Features Should\
    \ Have Minimal Performance\n             Impact . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 66\n   3.  Documentation Requirements . . . . . . . . .\
    \ . . . . . . . . . 67\n       3.1.  Identify Services That May Be Listening.\
    \ . . . . . . . . 67\n       3.2.  Document Service Defaults. . . . . . . . .\
    \ . . . . . . . 67\n       3.3.  Document Service Activation Process. . . . .\
    \ . . . . . . 68\n       3.4.  Document Command Line Interface. . . . . . . .\
    \ . . . . . 68\n       3.5.  'Console' Default Communication Profile Documented\
    \ . . . 69\n   4.  Assurance Requirements . . . . . . . . . . . . . . . . . .\
    \ . . 69\n       4.1.  Identify Origin of IP Stack. . . . . . . . . . . . . .\
    \ . 70\n       4.2.  Identify Origin of Operating System. . . . . . . . . . .\
    \ 70\n   5.  Security Considerations . .  . . . . . . . . . . . . . . . . . 71\n\
    \   6.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n  \
    \     6.1.  Normative References . . . . . . . . . . . . . . . . . . 71\n    \
    \   6.2.  Informative References . . . . . . . . . . . . . . . . . 74\n   Appendices\n\
    \   A.  Requirement Profiles . . . . . . . . . . . . . . . . . . . . . 75\n  \
    \     A.1.  Minimum Requirements Profile . . . . . . . . . . . . . . 75\n    \
    \   A.2.  Layer 3 Network Edge Profile . . . . . . . . . . . . . . 78\n   B. \
    \ Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 79\n   Author's\
    \ Address . . . . . . . . . . . . . . . . . . . . . . . . . 80\n   Full Copyright\
    \ Statement . . . . . . . . . . . . . . . . . . . . . 81\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Goals
  contents:
  - "1.1.  Goals\n   This document defines a list of operational security requirements\
    \ for\n   the infrastructure of large IP networks (routers and switches).  The\n\
    \   goal is to provide network operators a clear, concise way of\n   communicating\
    \ their security requirements to equipment vendors.\n"
- title: 1.2.  Motivation
  contents:
  - "1.2.  Motivation\n   Network operators need tools to ensure that they are able\
    \ to manage\n   their networks securely and to insure that they maintain the ability\n\
    \   to provide service to their customers.  Some of the threats are\n   outlined\
    \ in section 3.2 of [RFC2196].  This document enumerates\n   features which are\
    \ required to implement many of the policies and\n   procedures suggested by [RFC2196]\
    \ in the context of the\n   infrastructure of large IP-based networks.  Also see\
    \ [RFC3013].\n"
- title: 1.3.  Scope
  contents:
  - "1.3.  Scope\n   The scope of these requirements is intended to cover the managed\n\
    \   infrastructure of large ISP IP networks (e.g., routers and switches).\n  \
    \ Certain groups (or \"profiles\", see below) apply only in specific\n   situations\
    \ (e.g., edge-only).\n   The following are explicitly out of scope:\n   o  general\
    \ purpose hosts that do not transit traffic including\n      infrastructure hosts\
    \ such as name/time/log/AAA servers, etc.,\n   o  unmanaged devices,\n   o  customer\
    \ managed devices (e.g., firewalls, Intrusion Detection\n      System, dedicated\
    \ VPN devices, etc.),\n   o  SOHO (Small Office, Home Office) devices (e.g., personal\n\
    \      firewalls, Wireless Access Points, Cable Modems, etc.),\n   o  confidentiality\
    \ of customer data,\n   o  integrity of customer data,\n   o  physical security.\n\
    \   This means that while the requirements in the minimum profile (and\n   others)\
    \ may apply, additional requirements have not be added to\n   account for their\
    \ unique needs.\n   While the examples given are written with IPv4 in mind, most\
    \ of the\n   requirements are general enough to apply to IPv6.\n"
- title: 1.4.  Definition of a Secure Network
  contents:
  - "1.4.  Definition of a Secure Network\n   For the purposes of this document, a\
    \ secure network is one in which:\n   o  The network keeps passing legitimate\
    \ customer traffic\n      (availability).\n   o  Traffic goes where it is supposed\
    \ to go, and only where it is\n      supposed to go (availability, confidentiality).\n\
    \   o  The network elements remain manageable (availability).\n   o  Only authorized\
    \ users can manage network elements (authorization).\n   o  There is a record\
    \ of all security related events (accountability).\n   o  The network operator\
    \ has the necessary tools to detect and respond\n      to illegitimate traffic.\n"
- title: 1.5.  Intended Audience
  contents:
  - "1.5.  Intended Audience\n   There are two intended audiences: the network operator\
    \ who selects,\n   purchases, and operates IP network equipment, and the vendors\
    \ who\n   create them.\n"
- title: 1.6.  Format
  contents:
  - "1.6.  Format\n   The individual requirements are listed in the three sections\
    \ below.\n   o  Section 2 lists functional requirements.\n   o  Section 3 lists\
    \ documentation requirements.\n   o  Section 4 lists assurance requirements.\n\
    \   Within these areas, requirements are grouped in major functional\n   areas\
    \ (e.g., logging, authentication, filtering, etc.)\n   Each requirement has the\
    \ following subsections:\n   o  Requirement (what)\n   o  Justification (why)\n\
    \   o  Examples (how)\n   o  Warnings (if applicable)\n   The requirement describes\
    \ a policy to be supported by the device.\n   The justification tells why and\
    \ in what context the requirement is\n   important.  The examples section is intended\
    \ to give examples of\n   implementations that may meet the requirement.  Examples\
    \ cite\n   technology and standards current at the time of this writing.  See\n\
    \   [RFC3631].  It is expected that the choice of implementations to meet\n  \
    \ the requirements will change over time.  The warnings list\n   operational concerns,\
    \ deviation from standards, caveats, etc.\n   Security requirements will vary\
    \ across different device types and\n   different organizations, depending on\
    \ policy and other factors.  A\n   desired feature in one environment may be a\
    \ requirement in another.\n   Classifications must be made according to local\
    \ need.\n   In order to assist in classification, Appendix A defines several\n\
    \   requirement \"profiles\" for different types of devices.  Profiles are\n \
    \  concise lists of requirements that apply to certain classes of\n   devices.\
    \  The profiles in this document should be reviewed to\n   determine if they are\
    \ appropriate to the local environment.\n"
- title: 1.7.  Intended Use
  contents:
  - "1.7.  Intended Use\n   It is anticipated that the requirements in this document\
    \ will be used\n   for the following purposes:\n   o  as a checklist when evaluating\
    \ networked products,\n   o  to create profiles of different subsets of the requirements\
    \ which\n      describe the needs of different devices, organizations, and\n \
    \     operating environments,\n   o  to assist operators in clearly communicating\
    \ their security\n      requirements,\n   o  as high level guidance for the creation\
    \ of detailed test plans.\n"
- title: 1.8.  Definitions
  contents:
  - "1.8.  Definitions\n   RFC 2119 Keywords\n      The key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\", \"SHALL\n      NOT\", \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"\n      in this document are to be\
    \ interpreted as described in [RFC2119].\n      The use of the RFC 2119 keywords\
    \ is an attempt, by the editor, to\n      assign the correct requirement levels\
    \ (\"MUST\", \"SHOULD\",\n      \"MAY\"...).  It must be noted that different\
    \ organizations,\n      operational environments, policies and legal environments\
    \ will\n      generate different requirement levels.  Operators and vendors\n\
    \      should carefully consider the individual requirements listed here\n   \
    \   in their own context.  One size does not fit all.\n   Bogon.\n      A \"Bogon\"\
    \ (plural: \"bogons\") is a packet with an IP source address\n      in an address\
    \ block not yet allocated by IANA or the Regional\n      Internet Registries (ARIN,\
    \ RIPE, APNIC...) as well as all\n      addresses reserved for private or special\
    \ use by RFCs.  See\n      [RFC3330] and [RFC1918].\n   CLI.\n      Several requirements\
    \ refer to a Command Line Interface (CLI).\n      While this refers at present\
    \ to a classic text oriented command\n      interface, it is not intended to preclude\
    \ other mechanisms which\n      may meet all the requirements that reference \"\
    CLI\".\n   Console.\n      Several requirements refer to a \"Console\".  The model\
    \ for this is\n      the classic RS232 serial port which has, for the past 30\
    \ or more\n      years, provided a simple, stable, reliable, well-understood and\n\
    \      nearly ubiquitous management interface to network devices.  Again,\n  \
    \    these requirements are intended primarily to codify the benefits\n      provided\
    \ by that venerable interface, not to preclude other\n      mechanisms that meet\
    \ all the same requirements.\n   Filter.\n      In this document, a \"filter\"\
    \ is defined as a group of one or more\n      rules where each rule specifies\
    \ one or more match criteria as\n      specified in Section 2.8.\n   In-Band management.\n\
    \      \"In-Band management\" is defined as any management done over the\n   \
    \   same channels and interfaces used for user/customer data.\n      Examples\
    \ would include using SSH for management via customer or\n      Internet facing\
    \ network interfaces.\n   High Resolution Time.\n      \"High resolution time\"\
    \ is defined in this document as \"time having\n      a resolution greater than\
    \ one second\" (e.g., milliseconds).\n   IP.\n      Unless otherwise indicated,\
    \ \"IP\" refers to IPv4.\n   Management.\n      This document uses a broad definition\
    \ of the term \"management\".\n      In this document, \"management\" refers to\
    \ any authorized\n      interaction with the device intended to change its operational\n\
    \      state or configuration.  Data/Forwarding plane functions (e.g.,\n     \
    \ the transit of customer traffic) are not considered management.\n      Control\
    \ plane functions such as routing, signaling and link\n      management protocols\
    \ and management plane functions such as remote\n      access, configuration and\
    \ authentication are considered to be\n      management.\n   Martian.\n      Per\
    \ [RFC1208] \"Martian: Humorous term applied to packets that turn\n      up unexpectedly\
    \ on the wrong network because of bogus routing\n      entries.  Also used as\
    \ a name for a packet which has an altogether\n      bogus (non-registered or\
    \ ill-formed) Internet address.\"  For the\n      purposes of this document Martians\
    \ are defined as \"packets having\n      a source address that, by application\
    \ of the current forwarding\n      tables, would not have its return traffic routed\
    \ back to the\n      sender.\"  \"Spoofed packets\" are a common source of martians.\n\
    \      Note that in some cases, the traffic may be asymmetric, and a\n      simple\
    \ forwarding table check might produce false positives.  See\n      [RFC3704]\n\
    \   Out-of-Band (OoB) management.\n      \"Out-of-Band management\" is defined\
    \ as any management done over\n      channels and interfaces that are separate\
    \ from those used for\n      user/customer data.  Examples would include a serial\
    \ console\n      interface or a network interface connected to a dedicated\n \
    \     management network that is not used to carry customer traffic.\n   Open\
    \ Review.\n      \"Open review\" refers to processes designed to generate public\n\
    \      discussion and review of proposed technical solutions such as data\n  \
    \    communications protocols and cryptographic algorithms with the\n      goals\
    \ of improving and building confidence in the final solutions.\n      For the\
    \ purposes of this document \"open review\" is defined by\n      [RFC2026].  All\
    \ standards track documents are considered to have\n      been through an open\
    \ review process.\n      It should be noted that organizations may have local\
    \ requirements\n      that define what they view as acceptable \"open review\"\
    .  For\n      example, they may be required to adhere to certain national or\n\
    \      international standards.  Such modifications of the definition of\n   \
    \   the term \"open review\", while important, are considered local\n      issues\
    \ that should be discussed between the organization and the\n      vendor.\n \
    \     It should also be noted that section 7 of [RFC2026] permits\n      standards\
    \ track documents to incorporate other \"external standards\n      and specifications\"\
    .\n   Service.\n      A number of requirements refer to \"services\".  For the\
    \ purposes of\n      this document a \"service\" is defined as \"any process or\
    \ protocol\n      running in the control or management planes to which non-transit\n\
    \      packets may be delivered\".  Examples might include an SSH server,\n  \
    \    a BGP process or an NTP server.  It would also include the\n      transport,\
    \ network and link layer protocols since, for example, a\n      TCP packet addressed\
    \ to a port on which no service is listening\n      will be \"delivered\" to the\
    \ IP stack, and possibly result in an\n      ICMP message being sent back.\n \
    \  Secure Channel.\n      A \"secure channel\" is a mechanism that ensures end-to-end\n\
    \      integrity and confidentiality of communications.  Examples include\n  \
    \    TLS [RFC2246] and IPsec [RFC2401].  Connecting a terminal to a\n      console\
    \ port using physically secure, shielded cable would provide\n      confidentiality\
    \ but possibly not integrity.\n   Single-Homed Network.\n      A \"single-homed\
    \ network\" is defined as one for which\n         *  There is only one upstream\
    \ connection\n         *  Routing is symmetric.\n      See [RFC3704] for a discussion\
    \ of related issues and mechanisms\n      for multihomed networks.\n   Spoofed\
    \ Packet.\n      A \"spoofed packet\" is defined as a packet that has a source\n\
    \      address that does not correspond to any address assigned to the\n     \
    \ system which sent the packet.  Spoofed packets are often \"bogons\"\n      or\
    \ \"martians\".\n"
- title: 2.  Functional Requirements
  contents:
  - "2.  Functional Requirements\n   The requirements in this section are intended\
    \ to list testable,\n   functional requirements that are needed to operate devices\
    \ securely.\n"
- title: 2.1.  Device Management Requirements
  contents:
  - '2.1.  Device Management Requirements

    '
- title: 2.1.1.  Support Secure Channels For Management
  contents:
  - "2.1.1.  Support Secure Channels For Management\n   Requirement.\n      The device\
    \ MUST provide mechanisms to ensure end-to-end integrity\n      and confidentiality\
    \ for all network traffic and protocols used to\n      support management functions.\
    \  This MUST include at least\n      protocols used for configuration, monitoring,\
    \ configuration backup\n      and restore, logging, time synchronization, authentication,\
    \ and\n      routing.\n   Justification.\n      Integrity protection is required\
    \ to ensure that unauthorized users\n      cannot manage the device or alter log\
    \ data or the results of\n      management commands.  Confidentiality is required\
    \ so that\n      unauthorized users cannot view sensitive information, such as\n\
    \      keys, passwords, or the identity of users.\n   Examples.\n      See [RFC3631]\
    \ for a current list of mechanisms that can be used to\n      support secure management.\n\
    \      Later sections list requirements for supporting in-band management\n  \
    \    (Section 2.2)  and out-of-band management (Section 2.3) as well as\n    \
    \  trade-offs that must be weighed in considering which is\n      appropriate\
    \ to a given situation.\n   Warnings.\n      None.\n"
- title: 2.2.  In-Band Management Requirements
  contents:
  - "2.2.  In-Band Management Requirements\n   This section lists security requirements\
    \ that support secure in-band\n   management.  In-band  management has the advantage\
    \ of lower cost (no\n   extra interfaces or lines), but has significant security\n\
    \   disadvantages:\n   o  Saturation of customer lines or interfaces can make\
    \ the device\n      unmanageable unless out-of-band management resources have\
    \ been\n      reserved.\n   o  Since public interfaces/channels are used, it is\
    \ possible for\n      attackers to directly address and reach the device and to\
    \ attempt\n      management functions.\n   o  In-band management traffic on public\
    \ interfaces may be\n      intercepted, however this would typically require a\
    \ significant\n      compromise in the routing system.\n   o  Public interfaces\
    \ used for in-band management may become\n      unavailable due to bugs (e.g.,\
    \ buffer overflows being exploited)\n      while out-of-band interfaces (such\
    \ as a serial console device)\n      remain available.\n   There are many situations\
    \ where in-band management makes sense, is\n   used, and/or is the only option.\
    \  The following requirements are\n   meant to provide means of securing in-band\
    \ management traffic.\n"
- title: 2.2.1.  Use Cryptographic Algorithms Subject To Open Review
  contents:
  - "2.2.1.  Use Cryptographic Algorithms Subject To Open Review\n   Requirement.\n\
    \      If cryptography is used to provide secure management functions,\n     \
    \ then there MUST be an option to use algorithms that are subject to\n      \"\
    open review\" as defined in Section 1.8 to provide these\n      functions.  These\
    \ SHOULD be used by default.  The device MAY\n      optionally support algorithms\
    \ that are not open to review.\n   Justification.\n      Cryptographic algorithms\
    \ that have not been subjected to\n      widespread, extended public/peer review\
    \ are more likely to have\n      undiscovered weaknesses or flaws than open standards\
    \ and publicly\n      reviewed algorithms.  Network operators may have need or\
    \ desire to\n      use non-open cryptographic algorithms.  They should be allowed\
    \ to\n      evaluate the trade-offs and make an informed choice between open\n\
    \      and non-open cryptography.  See [Schneier] for further discussion.\n  \
    \ Examples.\n      The following are some algorithms that satisfy the requirement\
    \ at\n      the time of writing: AES [FIPS.197], and 3DES [ANSI.X9-52.1998]\n\
    \      for applications requiring symmetric encryption; RSA [RFC3447] and\n  \
    \    Diffie-Hellman [PKCS.3.1993], [RFC2631] for applications requiring\n    \
    \  key exchange; HMAC [RFC2401] with SHA-1 [RFC3174] for applications\n      requiring\
    \ message verification.\n   Warnings.\n      This list is not exhaustive.  Other\
    \ strong, well-reviewed\n      algorithms may meet the requirement.  The dynamic\
    \ nature of the\n      field means that what is good enough today may not be in\
    \ the\n      future.\n      Open review is necessary but not sufficient.  The\
    \ strength of the\n      algorithm and key length must also be considered.  For\
    \ example,\n      56-bit DES meets the open review requirement, but is today\n\
    \      considered too weak and is therefore not recommended.\n"
- title: 2.2.2.  Use Strong Cryptography
  contents:
  - "2.2.2.  Use Strong Cryptography\n   Requirement.\n      If cryptography is used\
    \ to meet the secure management channel\n      requirements, then the key lengths\
    \ and algorithms SHOULD be\n      \"strong\".\n   Justification.\n      Short\
    \ keys and weak algorithms threaten the confidentiality and\n      integrity of\
    \ communications.\n   Examples.\n      The following algorithms satisfy the requirement\
    \ at the time of\n      writing: AES [FIPS.197], and 3DES [ANSI.X9-52.1998] for\n\
    \      applications requiring symmetric encryption; RSA [RFC3447] and\n      Diffie-Hellman\
    \ [PKCS.3.1993], [RFC2631] for applications requiring\n      key exchange; HMAC\
    \ [RFC2401] with SHA-1 [RFC3174] for applications\n      requiring message verification.\n\
    \      Note that for *new protocols* [RFC3631]  says the following:\n      \"\
    Simple keyed hashes based on MD5 [RFC1321], such as that used in\n      the BGP\
    \ session security mechanism [RFC2385], are especially to be\n      avoided in\
    \ new protocols, given the hints of weakness in MD5.\"\n      While use of such\
    \ hashes in deployed products and protocols is\n      preferable to a complete\
    \ lack of integrity and authentication\n      checks, this document concurs with\
    \ the recommendation that new\n      products and protocols strongly consider\
    \ alternatives.\n   Warnings.\n      This list is not exhaustive.  Other strong,\
    \ well-reviewed\n      algorithms may meet the requirement.  The dynamic nature\
    \ of the\n      field means that what is good enough today may not be in the\n\
    \      future.\n      Strength is relative.  Long keys and strong algorithms are\n\
    \      intended to increase the work factor required to compromise the\n     \
    \ security of the data protected.  Over time, as processing power\n      increases,\
    \ the security provided by a given algorithm and key\n      length will degrade.\
    \  The definition of \"Strong\" must be\n      constantly reevaluated.\n     \
    \ There may be legal issues governing the use of cryptography and\n      the strength\
    \ of cryptography used.\n      This document explicitly does not attempt to make\
    \ any\n      authoritative statement about what key lengths constitute \"strong\"\
    \n      cryptography.  See  [RFC3562] and [RFC3766] for help in\n      determining\
    \ appropriate key lengths.  Also see [Schneier] chapter\n      7 for a discussion\
    \ of key lengths.\n"
- title: 2.2.3.  Use Protocols Subject To Open Review For Management
  contents:
  - "2.2.3.  Use Protocols Subject To Open Review For Management\n   Requirement.\n\
    \      If cryptography is used to provide secure management channels,\n      then\
    \ its use MUST be supported in protocols that are subject to\n      \"open review\"\
    \ as defined in Section 1.8.  These SHOULD be used by\n      default.  The device\
    \ MAY optionally support the use of\n      cryptography in protocols that are\
    \ not open to review.\n   Justification.\n      Protocols that have not been subjected\
    \ to widespread, extended\n      public/peer review are more likely to have undiscovered\
    \ weaknesses\n      or flaws than open standards and publicly reviewed protocols\n\
    \      Network operators may have need or desire to use non-open\n      protocols\
    \ They should be allowed to evaluate the trade-offs and\n      make an informed\
    \ choice between open and non-open protocols.\n   Examples.\n      See TLS [RFC2246]\
    \ and IPsec [RFC2401].\n   Warnings.\n      Note that open review is necessary\
    \ but may not be sufficient.  It\n      is perfectly possible for an openly reviewed\
    \ protocol to misuse\n      (or not use) cryptography.\n"
- title: 2.2.4.  Allow Selection of Cryptographic Parameters
  contents:
  - "2.2.4.  Allow Selection of Cryptographic Parameters\n   Requirement.\n      The\
    \ device SHOULD allow the operator to select cryptographic\n      parameters.\
    \  This SHOULD include key lengths and algorithms.\n   Justification.\n      Cryptography\
    \ using certain algorithms and key lengths may be\n      considered \"strong\"\
    \ at one point in time, but \"weak\" at another.\n      The constant increase\
    \ in compute power continually reduces the\n      time needed to break cryptography\
    \ of a certain strength.\n      Weaknesses may be discovered in algorithms.  The\
    \ ability to select\n      a different algorithm is a useful tool for maintaining\
    \ security in\n      the face of such discoveries.\n   Examples.\n      56-bit\
    \ DES was once considered secure.  In 1998 it was cracked by\n      custom built\
    \ machine in under 3 days.  The ability to select\n      algorithms and key lengths\
    \ would give the operator options\n      (different algorithms, longer keys) in\
    \ the face of such\n      developments.\n   Warnings.\n      None.\n"
- title: 2.2.5.  Management Functions Should Have Increased Priority
  contents:
  - "2.2.5.  Management Functions Should Have Increased Priority\n   Requirement.\n\
    \      Management functions SHOULD be processed at higher priority than\n    \
    \  non-management traffic.  This SHOULD include ingress, egress,\n      internal\
    \ transmission, and processing.  This SHOULD include at\n      least protocols\
    \ used for configuration, monitoring, configuration\n      backup, logging, time\
    \ synchronization, authentication, and\n      routing.\n   Justification.\n  \
    \    Certain attacks (and normal operation) can cause resource\n      saturation\
    \ such as link congestion, memory exhaustion or CPU\n      overload.  In these\
    \ cases it is important that management\n      functions be prioritized to ensure\
    \ that operators have the tools\n      needed to recover from the attack.\n  \
    \ Examples.\n      Imagine a service provider with 1,000,000 DSL subscribers,\
    \ most of\n      whom have no firewall protection.  Imagine that a large portion\
    \ of\n      these subscribers machines were infected with a new worm that\n  \
    \    enabled them to be used in coordinated fashion as part of large\n      denial\
    \ of service attack that involved flooding.  It is entirely\n      possible that\
    \ without prioritization such an attack would cause\n      link congestion resulting\
    \ in routing adjacencies being lost.  A\n      DoS attack against hosts has just\
    \ become a DoS attack against the\n      network.\n   Warnings.\n      Prioritization\
    \ is not a panacea.  Routing update packets may not\n      make it across a saturated\
    \ link.  This requirement simply says\n      that the device should prioritize\
    \ management functions within its\n      scope of control (e.g., ingress, egress,\
    \ internal transit,\n      processing).  To the extent that this is done across\
    \ an entire\n      network, the overall effect will be to ensure that the network\n\
    \      remains manageable.\n"
- title: 2.3.  Out-of-Band (OoB) Management Requirements
  contents:
  - "2.3.  Out-of-Band (OoB) Management Requirements\n   See Section 2.2 for a discussion\
    \ of the advantages and disadvantages\n   of In-band vs. Out-of-Band management.\n\
    \   These requirements assume two different possible Out-of-Band\n   topologies:\n\
    \   o  serial line (or equivalent) console connections using a CLI,\n   o  network\
    \ interfaces connected to a separate network dedicated to\n      management.\n\
    \   The following assumptions are made about out-of-band management:\n   o  The\
    \ out-of-band management network is secure.\n   o  Communications beyond the management\
    \ interface (e.g., console\n      port, management network interface) is secure.\n\
    \   o  There is no need for encryption of communication on out-of-band\n     \
    \ management interfaces, (e.g., on a serial connection between a\n      terminal\
    \ server and a device's console port).\n   o  Security measures are in place to\
    \ prevent unauthorized physical\n      access.\n   Even if these assumptions hold\
    \ it would be wise, as an application of\n   defense-in-depth, to apply the in-band\
    \ requirements (e.g.,\n   encryption) to out-of-band interfaces.\n"
- title: 2.3.1.  Support a 'Console' Interface
  contents:
  - "2.3.1.  Support a 'Console' Interface\n   Requirement.\n      The device MUST\
    \ support complete configuration and management via\n      a 'console' interface\
    \ that functions independently from the\n      forwarding and IP control planes.\n\
    \   Justification.\n      There are times when it is operationally necessary to\
    \ be able to\n      immediately and easily access a device for management or\n\
    \      configuration, even when the network is unavailable, routing and\n    \
    \  network interfaces are incorrectly configured, the IP stack and/or\n      operating\
    \ system may not be working (or may be vulnerable to\n      recently discovered\
    \ exploits that make their use impossible/\n      inadvisable), or when high bandwidth\
    \ paths to the device are\n      unavailable.  In such situations, a console interface\
    \ can provide\n      a way to manage and configure the device.\n   Examples.\n\
    \      An RS232 (EIA232) interface that provides the capability to load\n    \
    \  new versions of the system software and to perform configuration\n      via\
    \ a command line interface.  RS232 interfaces are ubiquitous and\n      well understood.\n\
    \      A simple embedded device that provides management and\n      configuration\
    \ access via an Ethernet or USB interface.\n      As of this writing, RS232 is\
    \ still strongly recommended as it\n      provides the following benefits:\n \
    \     *  Simplicity.  RS232 is far simpler than the alternatives.  It is\n   \
    \      simply a hardware specification.  By contrast an Ethernet based\n     \
    \    solution might require an ethernet interface, an operating\n         system,\
    \ an IP stack and an HTTP server all to be functioning\n         and properly\
    \ configured.\n      *  Proven.  RS232 has more than 30 years of use.\n      *\
    \  Well-Understood.  Operators have a great deal of experience\n         with\
    \ RS232.\n      *  Availability.  It works even in the presence of network\n \
    \        failure.\n      *  Ubiquity.  It is very widely deployed in mid to high\
    \ end\n         network infrastructure.\n      *  Low-Cost.  The cost of adding\
    \ a RS232 port to a device is\n         small.\n      *  CLI-Friendly.  An RS232\
    \ interface and a CLI are sufficient in\n         most cases to manage a device.\
    \  No additional software is\n         required.\n      *  Integrated.  Operators\
    \ have many solutions (terminal servers,\n         etc.) currently deployed to\
    \ support management via RS232.\n         While other interfaces may be supplied,\
    \ the properties listed\n         above should be considered.  Interfaces not\
    \ having these\n         properties may present challenges in terms of ease of\
    \ use,\n         integration or adoption.  Problems in any of these areas could\n\
    \         have negative security impacts, particularly in situations\n       \
    \  where the console must be used to quickly respond to incidents.\n   Warnings.\n\
    \      It is common practice is to connect RS232 ports to terminal\n      servers\
    \ that permit networked access for convenience.  This\n      increases the potential\
    \ security exposure of mechanisms available\n      only via RS232 ports.  For\
    \ example, a password recovery mechanism\n      that is available only via RS232\
    \ might give a remote hacker to\n      completely reconfigure a router.  While\
    \ operational procedures are\n      beyond the scope of this document, it is important\
    \ to note here\n      that strong attention should be given to policies, procedures,\n\
    \      access mechanisms and physical security governing access to\n      console\
    \ ports.\n"
- title: 2.3.2.  'Console' Communication Profile Must Support Reset
  contents:
  - "2.3.2.  'Console' Communication Profile Must Support Reset\n   Requirement.\n\
    \      There MUST be a method defined and published for returning the\n      console\
    \ communication parameters to their default settings.  This\n      method must\
    \ not require the current settings to be known.\n   Justification.\n      Having\
    \ to guess at communications settings can waste time.  In a\n      crisis situation,\
    \ the operator may need to get on the console of a\n      device quickly.\n  \
    \ Examples.\n      One method might be to send a break on a serial line.\n   Warnings.\n\
    \      None.\n"
- title: 2.3.3.  'Console' Requires Minimal Functionality of Attached Devices
  contents:
  - "2.3.3.  'Console' Requires Minimal Functionality of Attached Devices\n   Requirement.\n\
    \      The use of the 'console' interface MUST NOT require proprietary\n     \
    \ devices, protocol extensions or specific client software.\n   Justification.\n\
    \      The purpose of having the console interface is to have a\n      management\
    \ interface that can be made to work quickly at all\n      times.  Requiring complex\
    \ or nonstandard behavior on the part of\n      attached devices reduces the likelihood\
    \ that the console will work\n      without hassles.\n   Examples.\n      If the\
    \ console is supplied via an RS232 interface, then it should\n      function with\
    \ an attached device that only implements a \"dumb\"\n      terminal.  Support\
    \ of \"advanced\" terminal features/types should be\n      optional.\n   Warnings.\n\
    \      None.\n"
- title: 2.3.4.  'Console' Supports Fall-back Authentication
  contents:
  - "2.3.4.  'Console' Supports Fall-back Authentication\n   Requirement.\n      The\
    \ 'console' SHOULD support an authentication mechanism which\n      does not require\
    \ functional IP or depend on external services.\n      This authentication mechanism\
    \ MAY be disabled until a failure of\n      other preferred mechanisms is detected.\n\
    \   Justification.\n      It does little good to have a console interface on a\
    \ device if you\n      cannot get into the device with it when the network is\
    \ not\n      working.\n   Examples.\n      Some devices which use TACACS or RADIUS\
    \ for authentication will\n      fall back to a local account if the TACACS or\
    \ RADIUS server does\n      not reply to an authentication request.\n   Warnings.\n\
    \      This requirement represents a trade-off between being able to\n      manage\
    \ the device (functionality) and security.  There are many\n      ways to implement\
    \ this which would provide reduced security for\n      the device, (e.g., a back\
    \ door for unauthorized access).  Local\n      policy should be consulted to determine\
    \ if \"fail open\" or \"fail\n      closed\" is the correct stance.  The implications\
    \ of \"fail closed\"\n      (e.g., not being able to manage a device) should be\
    \ fully\n      considered.\n      If the fall-back mechanism is disabled, it is\
    \ important that the\n      failure of IP based authentication mechanism be reliably\
    \ detected\n      and the fall-back mechanism automatically enabled...otherwise\
    \ the\n      operator may be left with no means to authenticate.\n"
- title: 2.3.5.  Support Separate Management Plane IP Interfaces
  contents:
  - "2.3.5.  Support Separate Management Plane IP Interfaces\n   Requirement.\n  \
    \    The device MAY provide designated network interface(s) that are\n      used\
    \ for management plane traffic.\n   Justification.\n      A separate management\
    \ plane interface allows management traffic to\n      be segregated from other\
    \ traffic (data/forwarding plane, control\n      plane).  This reduces the risk\
    \ that unauthorized individuals will\n      be able to observe management traffic\
    \ and/or compromise the\n      device.\n      This requirement applies in situations\
    \ where a separate OoB\n      management network exists.\n   Examples.\n     \
    \ Ethernet port dedicated to management and isolated from customer\n      traffic\
    \ satisfies this requirement.\n   Warnings.\n      The use of this type of interface\
    \ depends on proper functioning of\n      both the operating system and the IP\
    \ stack, as well as good, known\n      configuration at least on the portions\
    \ of the device dedicated to\n      management.\n"
- title: 2.3.6.  No Forwarding Between Management Plane And Other Interfaces
  contents:
  - "2.3.6.  No Forwarding Between Management Plane And Other Interfaces\n   Requirement.\n\
    \      If the device implements separate network interface(s) for the\n      management\
    \ plane per Section 2.3.5 then the device MUST NOT\n      forward traffic between\
    \ the management plane and non-management\n      plane interfaces.\n   Justification.\n\
    \      This prevents the flow, intentional or unintentional, of\n      management\
    \ traffic to/from places that it should not be\n      originating/terminating\
    \ (e.g., anything beyond the customer-facing\n      interfaces).\n   Examples.\n\
    \      Implementing separate forwarding tables for management plane and\n    \
    \  non-management plane interfaces that do not propagate routes to\n      each\
    \ other satisfies this requirement.\n   Warnings.\n      None.\n"
- title: 2.4.  Configuration and Management Interface Requirements
  contents:
  - "2.4.  Configuration and Management Interface Requirements\n   This section lists\
    \ requirements that support secure device\n   configuration and management methods.\
    \  In most cases, this currently\n   involves some sort of command line interface\
    \ (CLI) and configuration\n   files.  It may be possible to meet these requirements\
    \ with other\n   mechanisms, for instance SNMP or a script-able HTML interface\
    \ that\n   provides full access to management and configuration functions.  In\n\
    \   the future, there may be others (e.g., XML based configuration).\n"
- title: 2.4.1.  'CLI' Provides Access to All Configuration and Management
  contents:
  - "2.4.1.  'CLI' Provides Access to All Configuration and Management\n         Functions\n\
    \   Requirement.\n      The Command Line Interface (CLI) or equivalent MUST allow\
    \ complete\n      access to all configuration and management functions.  The CLI\n\
    \      MUST be supported on the console (see Section 2.3.1) and SHOULD be\n  \
    \    supported on all other interfaces used for management.\n   Justification.\n\
    \      The CLI (or equivalent) is needed to provide the ability to do\n      reliable,\
    \ fast, direct, local management and monitoring of a\n      device.  It is particularly\
    \ useful in situations where it is not\n      possible to manage and monitor the\
    \ device in-band via \"normal\"\n      means (e.g., SSH or SNMP [RFC3410], [RFC3411])\
    \ that depend on\n      functional networking.  Such situations often occur during\n\
    \      security incidents such as bandwidth-based denial of service\n      attacks.\n\
    \   Examples.\n      Examples of configuration include setting interface addresses,\n\
    \      defining and applying filters, configuring logging and\n      authentication,\
    \ etc.  Examples of management functions include\n      displaying dynamic state\
    \ information such as CPU load, memory\n      utilization, packet processing statistics,\
    \ etc.\n   Warnings.\n      None.\n"
- title: 2.4.2.  'CLI' Supports Scripting of Configuration
  contents:
  - "2.4.2.  'CLI' Supports Scripting of Configuration\n   Requirement.\n      The\
    \ CLI or equivalent MUST support external scripting of\n      configuration functions.\
    \  This CLI SHOULD support the same command\n      set and syntax as that in Section\
    \ 2.4.1.\n   Justification.\n      During the handling of security incidents,\
    \ it is often necessary\n      to quickly make configuration changes on large\
    \ numbers of devices.\n      Doing so manually is error prone and slow.  Vendor\
    \ supplied\n      management solutions do not always foresee or address the type\
    \ or\n      scale of solutions that are required.  The ability to script\n   \
    \   provides a solution to these problems.\n   Examples.\n      Example uses of\
    \ scripting include: tracking an attack across a\n      large network, updating\
    \ authentication parameters, updating\n      logging parameters, updating filters,\
    \ configuration fetching/\n      auditing, etc.  Some languages that are currently\
    \ used for\n      scripting include expect, Perl and TCL.\n   Warnings.\n    \
    \  Some properties of the command language that enhance the ability\n      to\
    \ script are: simplicity, regularity and consistency.  Some\n      implementations\
    \ that would make scripting difficult or impossible\n      include: \"text menu\"\
    \ style interfaces (e.g., \"curses\" on UNIX) or\n      a hard-coded GUI interfaces\
    \ (e.g., a native Windows or Macintosh\n      GUI application) that communicate\
    \ using a proprietary or\n      undocumented protocol not based on a CLI.\n"
- title: 2.4.3.  'CLI' Supports Management Over 'Slow' Links
  contents:
  - "2.4.3.  'CLI' Supports Management Over 'Slow' Links\n   Requirement.\n      The\
    \ device MUST support a command line interface (CLI) or\n      equivalent mechanism\
    \ that works over low bandwidth connections.\n   Justification.\n   There are\
    \ situations where high bandwidth for management is not\n   available, for example\
    \ when in-band connections are overloaded during\n   an attack or when low-bandwidth,\
    \ out-of-band connections such as\n   modems must be used.  It is often under\
    \ these conditions that it is\n   most crucial to be able to perform management\
    \ and configuration\n   functions.\n   Examples.\n      The network is down. \
    \ The network engineer just disabled routing\n      by mistake on the sole gateway\
    \ router in a remote unmanned data\n      center.  The only access to the device\
    \ is over a modem connected\n      to a console port.  The data center customers\
    \ are starting to call\n      the support line.  The GUI management interface\
    \ is redrawing the\n      screen multiple times...slowly... at 9600bps.\n    \
    \  One mechanism that supports operation over slow links is the\n      ability\
    \ to apply filters to the output of CLI commands which have\n      potentially\
    \ large output.  This may be implemented with something\n      similar to the\
    \ UNIX pipe facility and \"grep\" command.\n      For example,\n         cat largefile.txt\
    \ | grep interesting-string\n      Another is the ability to \"page\" through\
    \ large command output,\n      e.g., the UNIX \"more\" command:\n      For example,\n\
    \         cat largefile.txt | more\n   Warnings.\n      One consequence of this\
    \ requirement may be that requiring a GUI\n      interface for management is unacceptable\
    \ unless it can be shown to\n      work acceptably over slow links.\n"
- title: 2.4.4.  'CLI' Supports Idle Session Timeout
  contents:
  - "2.4.4.  'CLI' Supports Idle Session Timeout\n   Requirement.\n      The command\
    \ line interface (CLI) or equivalent mechanism MUST\n      support a configurable\
    \ idle timeout value.\n   Justification.\n      Network administrators go to lunch.\
    \  They leave themselves logged\n      in with administrative privileges.  They\
    \ forget to use screen-\n      savers with password protection.  They do this\
    \ while at\n      conferences and in other public places.  This behavior presents\n\
    \      opportunity for unauthorized access.  Idle timeouts reduce the\n      window\
    \ of exposure.\n   Examples.\n      The CLI may provide a configuration command\
    \ that allows an idle\n      timeout to be set.  If the operator does not enter\
    \ commands for\n      that amount of time, the login session will be automatically\n\
    \      terminated.\n   Warnings.\n      None.\n"
- title: 2.4.5.  Support Software Installation
  contents:
  - "2.4.5.  Support Software Installation\n   Requirement.\n      The device MUST\
    \ provide a means to install new software versions.\n      It MUST be possible\
    \ to install new software while the device is\n      disconnected from all public\
    \ IP networks.  This MUST NOT rely on\n      previous installation and/or configuration.\
    \  While new software\n      MAY be loaded from writable media (disk, flash, etc.),\
    \ the\n      capability to load new software MUST depend only on non-writable\n\
    \      media (ROM, etc.).  The installation procedures SHOULD support\n      mechanisms\
    \ to ensure reliability and integrity of data transfers.\n   Justification.\n\
    \   *  Vulnerabilities are often discovered in the base software\n      (operating\
    \ systems, etc.) shipped by vendors.  Often mitigation of\n      the risk presented\
    \ by these vulnerabilities can only be\n      accomplished by updates to the vendor\
    \ supplied software (e.g., bug\n      fixes, new versions of code, etc.).  Without\
    \ a mechanism to load\n      new vendor supplied code, it may not be possible\
    \ to mitigate the\n      risk posed by these vulnerabilities.\n   *  It is also\
    \ conceivable that malicious behavior on the part of\n      hackers or unintentional\
    \ behaviors on the part of operators could\n      cause software on devices to\
    \ be corrupted or erased.  In these\n      situations, it is necessary to have\
    \ a means to (re)load software\n      onto the device to restore correct functioning.\n\
    \   *  It is important to be able to load new software while disconnected\n  \
    \    from all public IP networks because the device may be vulnerable\n      to\
    \ old attacks before the update is complete.\n   *  One has to assume that hackers,\
    \ operators, etc. may erase or\n      corrupt all writable media (disks, flash,\
    \ etc.).  In such\n      situations, it is necessary to be able to recover starting\
    \ with\n      only non-writable media (e.g., CD-ROM, a true ROM-based monitor).\n\
    \   *  System images may be corrupted in transit (from vendor to\n      customer,\
    \ or during the loading process) or in storage (bit rot,\n      defective media,\
    \ etc.).  Failure to reliably load a new image, for\n      example after a hacker\
    \ deletes or corrupts the installed image,\n      could result in extended loss\
    \ of availability.\n   Examples.\n      The device could support booting into\
    \ a simple ROM-based monitor\n      that supported a set of commands sufficient\
    \ to load new operating\n      system code and configuration data from other devices.\
    \  The\n      operating system and configuration might be loaded from:\n   RS232.\
    \ The device could support uploading new code via an RS232\n      console port.\n\
    \   CD-ROM. The device could support installing new code from a\n      locally\
    \ attached CD-ROM drive.\n   NETWORK. The device could support installing new\
    \ code via a\n      network interface, assuming that (a) it is disconnected from\
    \ all\n      public networks and (b) the device can boot an OS and IP stack\n\
    \      from some read-only media with sufficient capabilities to load new\n  \
    \    code  from the network.\n   FLASH. The device could support booting from\
    \ flash memory cards.\n      Simple mechanisms currently in use to protect the\
    \ integrity of\n      system images and data transfer include image checksums\
    \ and simple\n      serial file transfer protocols such as XMODEM and Kermit.\n\
    \   Warnings.\n      None.\n"
- title: 2.4.6.  Support Remote Configuration Backup
  contents:
  - "2.4.6.  Support Remote Configuration Backup\n   Requirement.\n      The device\
    \ MUST provide a means to store the system configuration\n      to a remote server.\
    \  The stored configuration MUST have sufficient\n      information to restore\
    \ the device to its operational state at the\n      time the configuration is\
    \ saved.  Stored versions of the\n      configuration MAY be compressed using\
    \ an algorithm which is\n      subject to open review, as long as the fact is\
    \ clearly identified\n      and the compression can be disabled.  Sensitive information\
    \ such\n      as passwords that could be used to compromise the security of the\n\
    \      device MAY be excluded from the saved configuration.\n   Justification.\n\
    \      Archived configurations are essential to enable auditing and\n      recovery.\n\
    \   Examples.\n      Possible implementations include SCP, SFTP or FTP over a\
    \ secure\n      channel.  See Section 2.1.1 for requirements related to secure\n\
    \      communication channels for management protocols and data.\n   Warnings.\n\
    \      The security of the remote server is assumed, with appropriate\n      measures\
    \ being outside the scope of this document.\n"
- title: 2.4.7.  Support Remote Configuration Restore
  contents:
  - "2.4.7.  Support Remote Configuration Restore\n   Requirement.\n      The device\
    \ MUST provide a means to restore a configuration that\n      was saved as described\
    \ in Section 2.4.6.  The system MUST be\n      restored to its operational state\
    \ at the time the configuration\n      was saved.\n   Justification.\n      Restoration\
    \ of archived configurations allows quick restoration of\n      service following\
    \ an outage (security related as well as from\n      other causes).\n   Examples.\n\
    \      Configurations may be restored using SCP, SFTP or FTP over a\n      secure\
    \ channel.  See Section 2.1.1 for requirements related to\n      secure communication\
    \ channels for management protocols and data.\n   Warnings.\n      The security\
    \ of the remote server is assumed, with appropriate\n      measures being outside\
    \ the scope of this document.\n      Note that if passwords or other sensitive\
    \ information are excluded\n      from the saved copy of the configuration, as\
    \ allowed by Section\n      2.4.6, then the restore may not be complete.  The\
    \ operator may\n      have to set new passwords or supply other information that\
    \ was not\n      saved.\n"
- title: 2.4.8.  Support Text Configuration Files
  contents:
  - "2.4.8.  Support Text Configuration Files\n   Requirement.\n      The device MUST\
    \ support display, backup and restore of system\n      configuration in a simple\
    \ well defined textual format.  The\n      configuration MUST also be viewable\
    \ as text on the device itself.\n      It MUST NOT be necessary to use a proprietary\
    \ program to view the\n      configuration.\n   Justification.\n      Simple,\
    \ well-defined textual configurations facilitate human\n      understanding of\
    \ the operational state of the device, enable off-\n      line audits, and facilitate\
    \ automation.  Requiring the use of a\n      proprietary program to access the\
    \ configuration inhibits these\n      goals.\n   Examples.\n      A 7-bit ASCII\
    \ configuration file that shows the current settings\n      of the various configuration\
    \ options would satisfy the\n      requirement, as would a Unicode configuration\
    \ or any other\n      \"textual\" representation.  A structured binary format\
    \ intended\n      only for consumption by programs would not be acceptable.\n\
    \   Warnings.\n      Offline copies of configurations should be well protected\
    \ as they\n      often contain sensitive information such as SNMP community\n\
    \      strings, passwords, network blocks, customer information, etc.\n      \"\
    Well defined\" and \"textual\" are open to interpretation.  Clearly\n      an\
    \ ASCII configuration file with a regular, documented command\n      oriented-syntax\
    \ would meet the definition.  These are currently in\n      wide use.  Future\
    \ options, such as XML based configuration may\n      meet the requirement.  Determining\
    \ this will require evaluation\n      against the justifications listed above.\n"
- title: 2.5.  IP Stack Requirements
  contents:
  - '2.5.  IP Stack Requirements

    '
- title: 2.5.1.  Ability to Identify All Listening Services
  contents:
  - "2.5.1.  Ability to Identify All Listening Services\n   Requirement.\n      The\
    \ vendor MUST:\n      *  Provide a means to display all services that are listening\
    \ for\n         network traffic directed at the device from any external\n   \
    \      source.\n      *  Display the addresses to which each service is bound.\n\
    \      *  Display the addresses assigned to each interface.\n      *  Display\
    \ any and all port(s) on which the service is listing.\n      *  Include both\
    \ open standard and vendor proprietary services.\n   Justification.\n      This\
    \ information is necessary to enable a thorough assessment of\n      the security\
    \ risks associated with the operation of the device\n      (e.g., \"does this\
    \ protocol allow complete management of the device\n      without also requiring\
    \ authentication, authorization, or\n      accounting?\").  The information also\
    \ assists in determining what\n      steps should be taken to mitigate risk (e.g.,\
    \ \"should I turn this\n      service off ?\")\n   Examples.\n      If the device\
    \ is listening for SNMP traffic from any source\n      directed to the IP addresses\
    \ of any of its local interfaces, then\n      this requirement could be met by\
    \ the provision of a command which\n      displays that fact.\n   Warnings.\n\
    \      None.\n"
- title: 2.5.2.  Ability to Disable Any and All Services
  contents:
  - "2.5.2.  Ability to Disable Any and All Services\n   Requirement.\n      The device\
    \ MUST provide a means to turn off any \"services\" (see\n      Section 1.8).\n\
    \   Justification.\n      The ability to disable services for which there is no\
    \ operational\n      need will allow administrators to reduce the overall risk\
    \ posed to\n      the device.\n   Examples.\n      Processes that listen on TCP\
    \ and UDP ports would be prime examples\n      of services that it must be possible\
    \ to disable.\n   Warnings.\n      None.\n"
- title: 2.5.3.  Ability to Control Service Bindings for Listening Services
  contents:
  - "2.5.3.  Ability to Control Service Bindings for Listening Services\n   Requirement.\n\
    \      The device MUST provide a means for the user to specify the\n      bindings\
    \ used for all listening services.  It MUST support binding\n      to any address\
    \ or net-block associated with any interface local to\n      the device.  This\
    \ must include addresses bound to physical or\n      non-physical (e.g., loopback)\
    \ interfaces.\n   Justification.\n      It is a common practice among operators\
    \ to configure \"loopback\"\n      pseudo-interfaces to use as the source and\
    \ destination of\n      management traffic.  These are preferred to physical interfaces\n\
    \      because they provide a stable, routable address.  Services bound\n    \
    \  to the addresses of physical interface addresses might become\n      unreachable\
    \ if the associated hardware goes down, is removed, etc.\n      This requirement\
    \ makes it possible to restrict access to\n      management services using routing.\
    \  Management services may be\n      bound only to the addresses of loopback interfaces.\
    \  The loopback\n      interfaces may be addressed out of net-blocks that are\
    \ only routed\n      between the managed devices and the authorized management\n\
    \      networks/hosts.  This has the effect of making it impossible for\n    \
    \  anyone to connect to (or attempt to DoS) management services from\n      anywhere\
    \ but the authorized management networks/hosts.\n      It also greatly reduces\
    \ the need for complex filters.  It reduces\n      the number of ports listening,\
    \ and thus the number of potential\n      avenues of attack.  It ensures that\
    \ only traffic arriving from\n      legitimate addresses and/or on designated\
    \ interfaces can access\n      services on the device.\n   Examples.\n      If\
    \ the device listens for inbound SSH connections, this\n      requirement means\
    \ that it should be possible to specify that the\n      device will only listen\
    \ to connections destined to specific\n      addresses (e.g., the address of the\
    \ loopback interface) or\n      received on certain interfaces (e.g., an Ethernet\
    \ interface\n      designated as the \"management\" interface).  It should be\
    \ possible\n      in this example to configure the device such that the SSH is\
    \ NOT\n      listening to every address configured on the device.  Similar\n \
    \     effects may be achieved with the use of global filters, sometimes\n    \
    \  called \"receive\" or \"loopback\" ACLs, that filter traffic destined\n   \
    \   for the device itself on all interfaces.\n   Warnings.\n      None.\n"
- title: 2.5.4.  Ability to Control Service Source Addresses
  contents:
  - "2.5.4.  Ability to Control Service Source Addresses\n   Requirement.\n      The\
    \ device MUST provide a means that allows the user to specify\n      the source\
    \ addresses used for all outbound connections or\n      transmissions originating\
    \ from the device.  It SHOULD be possible\n      to specify source addresses independently\
    \ for each type of\n      outbound connection or transmission.  Source addresses\
    \ MUST be\n      limited to addresses that are assigned to interfaces (including\n\
    \      loopbacks) local to the device.\n   Justification.\n      This allows remote\
    \ devices receiving connections or transmissions\n      to use source filtering\
    \ as one means of authentication.  For\n      example, if SNMP traps were configured\
    \ to use a known loopback\n      address as their source, the SNMP workstation\
    \ receiving the traps\n      (or a firewall in front of it) could be configured\
    \ to receive SNMP\n      packets only from that address.\n   Examples.\n     \
    \ The operator may allocate a distinct block of addresses from which\n      all\
    \ loopbacks are numbered.   NTP and syslog can be configured to\n      use those\
    \ loopback addresses as source, while SNMP and BGP may be\n      configured to\
    \ use specific physical interface addresses.  This\n      would facilitate filtering\
    \ based on source address as one way of\n      rejecting unauthorized attempts\
    \ to connect to peers/servers.\n   Warnings.\n      Care should be taken to assure\
    \ that the addresses chosen are\n      routable between the sending and receiving\
    \ devices, (e.g., setting\n      SSH to use a loopback address of 10.1.1.1 which\
    \ is not routed\n      between a router and all intended destinations could cause\n\
    \      problems).\n      Note that some protocols, such as SCTP [RFC3309], can\
    \ use more\n      than one IP address as the endpoint of a single connection.\n\
    \      Also note that [RFC3631] lists address-based authentication as an\n   \
    \   \"insecurity mechanism\".  Address based authentication should be\n      replaced\
    \ or augmented by other mechanisms wherever possible.\n"
- title: 2.5.5.  Support Automatic Anti-spoofing for Single-Homed Networks
  contents:
  - "2.5.5.  Support Automatic Anti-spoofing for Single-Homed Networks\n   Requirement.\n\
    \      The device MUST provide a means to designate particular interfaces\n  \
    \    as servicing \"single-homed networks\" (see Section 1.8) and MUST\n     \
    \ provide an option to automatically drop \"spoofed packets\" (Section\n     \
    \ 1.8) received on such interfaces where application of the current\n      forwarding\
    \ table would not route return traffic back through the\n      same interface.\
    \  This option MUST work in the presence of dynamic\n      routing and dynamically\
    \ assigned addresses.\n   Justification.\n      See sections 3 of [RFC1918], sections\
    \ 5.3.7 and 5.3.8 of\n      [RFC1812], and [RFC2827].\n   Examples.\n      This\
    \ requirement could be satisfied in several ways.  It could be\n      satisfied\
    \ by the provision of a single command that automatically\n      generates and\
    \ applies filters to an interface that implements\n      anti-spoofing.  It could\
    \ be satisfied by the provision of a\n      command that causes the return path\
    \ for packets received to be\n      checked against the current forwarding tables\
    \ and dropped if they\n      would not be forwarded back through the interface\
    \ on which they\n      were received.\n      See [RFC3704].\n   Warnings.\n  \
    \    This requirement only holds for single-homed networks.  Note that\n     \
    \ a simple forwarding table check is not sufficient in the more\n      complex\
    \ scenarios of multi-homed or multi-attached networks, i.e.,\n      where the\
    \ traffic may be asymmetric.  In these cases, a more\n      extensive check such\
    \ as Feasible Path RPF could be very useful.\n"
- title: 2.5.6.  Support Automatic Discarding Of Bogons and Martians
  contents:
  - "2.5.6.  Support Automatic Discarding Of Bogons and Martians\n   Requirement.\n\
    \      The device MUST provide a means to automatically drop all \"bogons\"\n\
    \      (Section 1.8) and \"martians\" (Section 1.8).  This option MUST work\n\
    \      in the presence of dynamic routing and dynamically assigned\n      addresses.\n\
    \   Justification.\n      These sorts of packets have little (no?) legitimate\
    \ use and are\n      used primarily to allow individuals and organization to avoid\n\
    \      identification (and thus accountability) and appear to be most\n      often\
    \ used for DoS attacks, email abuse, hacking, etc.  In\n      addition, transiting\
    \ these packets needlessly consumes resources\n      and may lead to capacity\
    \ and performance problems for customers.\n      See sections 3 of [RFC1918],\
    \ sections 5.3.7 and 5.3.8 of\n      [RFC1812], and [RFC2827].\n   Examples.\n\
    \      This requirement could be satisfied by the provision of a command\n   \
    \   that causes the return path for packets received to be checked\n      against\
    \ the current forwarding tables and dropped if no viable\n      return path exists.\
    \  This assumes that steps are taken to assure\n      that no bogon entries are\
    \ present in the forwarding tables (for\n      example filtering routing updates\
    \ per Section 2.7.5 to reject\n      advertisements of unassigned addresses).\n\
    \      See [RFC3704].\n   Warnings.\n      This requirement only holds for single-homed\
    \ networks.  Note that\n      a simple forwarding table check is not sufficient\
    \ in the more\n      complex scenarios of multi-homed or multi-attached networks,\
    \ i.e.,\n      where the traffic may be asymmetric.  In these cases, a more\n\
    \      extensive check such as Feasible Path RPF could be very useful.\n"
- title: 2.5.7.  Support Counters For Dropped Packets
  contents:
  - "2.5.7.  Support Counters For Dropped Packets\n   Requirement.\n      The device\
    \ MUST provide accurate, per-interface counts of spoofed\n      packets dropped\
    \ in accordance with Section 2.5.5 and Section\n      2.5.6.\n   Justification.\n\
    \      Counters can help in identifying the source of spoofed traffic.\n   Examples.\n\
    \      An edge router may have several single-homed customers attached.\n    \
    \  When an attack using spoofed packets is detected, a quick check of\n      counters\
    \ may be able to identify which customer is attempting to\n      send spoofed\
    \ traffic.\n   Warnings.\n      None.\n"
- title: 2.6.  Rate Limiting Requirements
  contents:
  - '2.6.  Rate Limiting Requirements

    '
- title: 2.6.1.  Support Rate Limiting
  contents:
  - "2.6.1.  Support Rate Limiting\n   Requirement.\n      The device MUST provide\
    \ the capability to limit the rate at which\n      it will pass traffic based\
    \ on protocol, source and destination IP\n      address or CIDR block, source\
    \ and destination port, and interface.\n      Protocols MUST include at least\
    \ IP, ICMP, UDP, and TCP and SHOULD\n      include any protocol.\n   Justification.\n\
    \      This requirement provides a means of reducing or eliminating the\n    \
    \  impact of certain types of attacks.  Also, rate limiting has the\n      advantage\
    \ that in some cases it can be turned on a priori, thereby\n      offering some\
    \ ability to mitigate the effect of future attacks\n      prior to any explicit\
    \ operator reaction to the attacks.\n   Examples.\n      Assume that a web hosting\
    \ company provides space in its data-\n      center to a company that becomes\
    \ unpopular with a certain element\n      of network users, who then decide to\
    \ flood the web server with\n      inbound ICMP traffic.  It would be useful in\
    \ such a situation to\n      be able to rate-filter inbound ICMP traffic at the\
    \ data-center's\n      border routers.  On the other side, assume that a new worm\
    \ is\n      released that infects vulnerable database servers such that they\n\
    \      then start spewing traffic on TCP port 1433 aimed at random\n      destination\
    \ addresses as fast as the system and network interface\n      of the infected\
    \  server is capable.  Further assume that a data\n      center has many vulnerable\
    \ servers that are infected and\n      simultaneously sending large amounts of\
    \ traffic with the result\n      that all outbound links are saturated.  Implementation\
    \ of this\n      requirement, would allow the network operator to rate limit\n\
    \      inbound and/or outbound TCP 1433 traffic (possibly to a rate of 0\n   \
    \   packets/bytes per second) to respond to the attack and maintain\n      service\
    \ levels for other legitimate customers/traffic.\n   Warnings.\n      None.\n"
- title: 2.6.2.  Support Directional Application Of Rate Limiting Per Interface
  contents:
  - "2.6.2.  Support Directional Application Of Rate Limiting Per Interface\n   Requirement.\n\
    \      The device MUST provide support to rate-limit input and/or output\n   \
    \   separately on each interface.\n   Justification.\n      This level of granular\
    \ control allows appropriately targeted\n      controls that minimize the impact\
    \ on third parties.\n   Examples.\n      If an ICMP flood is directed a single\
    \ customer on an edge router,\n      it may be appropriate to rate-limit outbound\
    \ ICMP only on that\n      customers interface.\n   Warnings.\n      None.\n"
- title: 2.6.3.  Support Rate Limiting Based on State
  contents:
  - "2.6.3.  Support Rate Limiting Based on State\n   Requirement.\n      The device\
    \ MUST be able to rate limit based on all TCP control\n      flag bits.  The device\
    \ SHOULD support rate limiting of other\n      stateful protocols where the normal\
    \ processing of the protocol\n      gives the device access to protocol state.\n\
    \   Justification.\n      This allows appropriate response to certain classes\
    \ of attack.\n   Examples.\n      For example, for TCP sessions, it should be\
    \ possible to rate limit\n      based on the SYN, SYN-ACK, RST, or other bit state.\n\
    \   Warnings.\n      None.\n"
- title: 2.7.  Basic Filtering Capabilities
  contents:
  - '2.7.  Basic Filtering Capabilities

    '
- title: 2.7.1.  Ability to Filter Traffic
  contents:
  - "2.7.1.  Ability to Filter Traffic\n   Requirement.\n      The device MUST provide\
    \ a means to filter IP packets on any\n      interface implementing IP.\n   Justification.\n\
    \      Packet filtering is important because it provides a basic means of\n  \
    \    implementing policies that specify which traffic is allowed and\n      which\
    \ is not.  It also provides a basic tool for responding to\n      malicious traffic.\n\
    \   Examples.\n      Access control lists that allow filtering based on protocol\
    \ and/or\n      source/destination address and or source/destination port would\
    \ be\n      one example.\n   Warnings.\n      None.\n"
- title: 2.7.2.  Ability to Filter Traffic TO the Device
  contents:
  - "2.7.2.  Ability to Filter Traffic TO the Device\n   Requirement.\n      It MUST\
    \ be possible to apply the filtering mechanism to traffic\n      that is addressed\
    \ directly to the device via any of its interfaces\n      - including loopback\
    \ interfaces.\n   Justification.\n      This allows the operator to apply filters\
    \  that protect the device\n      itself from attacks and unauthorized access.\n\
    \   Examples.\n      Examples of this might include filters that permit only BGP\
    \ from\n      peers and SNMP and SSH from an authorized management segment and\n\
    \      directed to the device itself, while dropping all other traffic\n     \
    \ addressed to the device.\n   Warnings.\n      None.\n"
- title: 2.7.3.  Ability to Filter Traffic THROUGH the Device
  contents:
  - "2.7.3.  Ability to Filter Traffic THROUGH the Device\n   Requirement.\n     \
    \ It MUST be possible to apply the filtering mechanism to traffic\n      that\
    \ is being routed (switched) through the device.\n   Justification.\n      This\
    \ permits implementation of basic policies on devices that\n      carry transit\
    \ traffic (routers, switches, etc.).\n   Examples.\n      One simple and common\
    \ way to meet this requirement is to provide\n      the ability to filter traffic\
    \ inbound to each interface and/or\n      outbound from each interface.  Ingress\
    \ filtering as described in\n      [RFC2827] provides one example of the use of\
    \ this capability.\n   Warnings.\n      None.\n"
- title: 2.7.4.  Ability to Filter Without Significant Performance Degradation
  contents:
  - "2.7.4.  Ability to Filter Without Significant Performance Degradation\n   Requirement.\n\
    \      The device MUST provide a means to filter packets without\n      significant\
    \ performance degradation.  This specifically applies to\n      stateless packet\
    \ filtering operating on layer 3 (IP) and layer 4\n      (TCP or UDP) headers,\
    \ as well as normal packet forwarding\n      information such as incoming and\
    \ outgoing interfaces.\n      The device MUST be able to apply stateless packet\
    \ filters on ALL\n      interfaces (up to the maximum number possible) simultaneously\
    \ and\n      with multiple filters per interface (e.g., inbound and outbound).\n\
    \   Justification.\n      This enables the implementation of filtering wherever\
    \ and whenever\n      needed.  To the extent that filtering causes degradation,\
    \ it may\n      not be possible to apply filters that implement the appropriate\n\
    \      policies.\n   Examples.\n      Another way of stating the requirement is\
    \ that filter performance\n      should not be the limiting factor in device throughput.\
    \  If a\n      device is capable of forwarding 30Mb/sec without filtering, then\n\
    \      it should be able to forward the same amount with filtering in\n      place.\n\
    \   Warnings.\n      The definition of \"significant\" is subjective.  At one\
    \ end of the\n      spectrum it might mean \"the application of filters may cause\
    \ the\n      box to crash\".  At the other end would be a throughput loss of\n\
    \      less than one percent with tens of thousands of filters applied.\n    \
    \  The level of performance degradation that is acceptable will have\n      to\
    \ be determined by the operator.\n      Repeatable test data showing filter performance\
    \ impact would be\n      very useful in evaluating conformance with this requirement.\n\
    \      Tests should include such information as packet size, packet rate,\n  \
    \    number of interfaces tested (source/destination), types of\n      interfaces,\
    \ routing table size, routing protocols in use,\n      frequency of routing updates,\
    \ etc.  See [bmwg-acc-bench].\n      This requirement does not address stateful\
    \ filtering, filtering\n      above layer 4 headers or other more advanced types\
    \ of filtering\n      that may be important in certain operational environments.\n"
- title: 2.7.5.  Support Route Filtering
  contents:
  - "2.7.5.  Support Route Filtering\n   Requirement.\n      The device MUST provide\
    \ a means to filter routing updates for all\n      protocols used to exchange\
    \ external routing information.\n   Justification.\n      See [RFC3013] and section\
    \ 3.2 of [RFC2196].\n   Examples.\n      Operators may wish to ignore advertisements\
    \ for routes to\n      addresses allocated for private internets.  See eBGP.\n\
    \   Warnings.\n      None.\n"
- title: 2.7.6.  Ability to Specify Filter Actions
  contents:
  - "2.7.6.  Ability to Specify Filter Actions\n   Requirement.\n      The device\
    \ MUST provide a mechanism to allow the specification of\n      the action to\
    \ be taken when a filter rule matches.  Actions MUST\n      include \"permit\"\
    \ (allow the traffic), \"reject\" (drop with\n      appropriate notification to\
    \ sender), and \"drop\" (drop with no\n      notification to sender).  Also see\
    \ Section 2.7.7 and Section 2.9\n   Justification.\n      This capability is essential\
    \ to the use of filters to enforce\n      policy.\n   Examples.\n      Assume\
    \ that you have a small DMZ network connected to the\n      Internet.  You want\
    \ to allow management using SSH coming from your\n      corporate office.  In\
    \ this case, you might \"permit\" all traffic to\n      port 22 in the DMZ from\
    \ your corporate network, \"rejecting\" all\n      others.  Port 22 traffic from\
    \ the corporate network is allowed\n      through.  Port 22 traffic from all other\
    \ addresses results in an\n      ICMP message to the sender.  For those who are\
    \ slightly more\n      paranoid, you might choose to \"drop\" instead of \"reject\"\
    \ traffic\n      from unauthorized addresses, with the result being that *nothing*\n\
    \      is sent back to the source.\n   Warnings.\n      While silently dropping\
    \ traffic without sending notification may\n      be the correct action in security\
    \ terms, consideration should be\n      given to operational implications.  See\
    \ [RFC3360] for\n      consideration of potential problems caused by sending\n\
    \      inappropriate TCP Resets.\n"
- title: 2.7.7.  Ability to Log Filter Actions
  contents:
  - "2.7.7.  Ability to Log Filter Actions\n   Requirement.\n      It MUST be possible\
    \ to log all filter actions.  The logging\n      capability MUST be able to capture\
    \ at least the following data:\n      *  permit/deny/drop status,\n      *  source\
    \ and destination IP address,\n      *  source and destination ports (if applicable\
    \ to the protocol),\n      *  which network element received the packet (interface,\
    \ MAC\n         address or other layer 2 information that identifies the\n   \
    \      previous hop source of the packet).\n         Logging of filter actions\
    \ is subject to the requirements of\n         Section 2.11.\n   Justification.\n\
    \      Logging is essential for auditing, incident response, and\n      operations.\n\
    \   Examples.\n      A desktop network may not provide any services that should\
    \ be\n      accessible from \"outside.\"  In such cases, all inbound connection\n\
    \      attempts should be logged as possible intrusion attempts.\n   Warnings.\n\
    \      None.\n"
- title: 2.8.  Packet Filtering Criteria
  contents:
  - '2.8.  Packet Filtering Criteria

    '
- title: 2.8.1.  Ability to Filter on Protocols
  contents:
  - "2.8.1.  Ability to Filter on Protocols\n   Requirement.\n      The device MUST\
    \ provide a means to filter traffic based on the\n      value of the protocol\
    \ field in the IP header.\n   Justification.\n      Being able to filter on protocol\
    \ is necessary to allow\n      implementation of policy, secure operations and\
    \ for support of\n      incident response.\n   Examples.\n      Some denial of\
    \ service attacks are based on the ability to flood\n      the victim with ICMP\
    \ traffic.  One quick way (admittedly with some\n      negative side effects)\
    \ to mitigate the effects of such attacks is\n      to drop all ICMP traffic headed\
    \ toward the victim.\n   Warnings.\n      None.\n"
- title: 2.8.2.  Ability to Filter on Addresses
  contents:
  - "2.8.2.  Ability to Filter on Addresses\n   Requirement.\n      The function MUST\
    \ be able to control the flow of traffic based on\n      source and/or destination\
    \ IP address or blocks of addresses such\n      as Classless Inter-Domain Routing\
    \ (CIDR) blocks.\n   Justification.\n      The capability to filter on addresses\
    \ and address blocks is a\n      fundamental tool for establishing boundaries\
    \ between different\n      networks.\n   Examples.\n      One example of the use\
    \ of address based filtering is to implement\n      ingress filtering per [RFC2827].\n\
    \   Warnings.\n      None.\n"
- title: 2.8.3.  Ability to Filter on Protocol Header Fields
  contents:
  - "2.8.3.  Ability to Filter on Protocol Header Fields\n   Requirement.\n      The\
    \ filtering mechanism MUST support filtering based on the\n      value(s) of any\
    \ portion of the protocol headers for IP, ICMP, UDP\n      and TCP.  It SHOULD\
    \ support filtering of all other protocols\n      supported at layer 3 and 4.\
    \  It MAY support filtering based on the\n      headers of higher level protocols.\
    \  It SHOULD be possible to\n      specify fields by name (e.g., \"protocol =\
    \ ICMP\") rather than bit-\n      offset/length/numeric value (e.g., 72:8 = 1).\n\
    \   Justification.\n      Being able to filter on portions of the header is necessary\
    \ to\n      allow implementation of policy, secure operations, and support\n \
    \     incident response.\n   Examples.\n      This requirement implies that it\
    \ is possible to filter based on\n      TCP or UDP port numbers, TCP flags such\
    \ as SYN, ACK and RST bits,\n      and ICMP type and code fields.  One common\
    \ example is to reject\n      \"inbound\" TCP connection attempts (TCP, SYN bit\
    \ set+ACK bit clear\n      or SYN bit set+ACK,FIN and RST bits clear).  Another\
    \ common\n      example is the ability to control what services are allowed in/out\n\
    \      of a network.  It may be desirable to only allow inbound\n      connections\
    \ on port 80 (HTTP) and 443 (HTTPS) to a network hosting\n      web servers.\n\
    \   Warnings.\n      None.\n"
- title: 2.8.4.  Ability to Filter Inbound and Outbound
  contents:
  - "2.8.4.  Ability to Filter Inbound and Outbound\n   Requirement.\n      It MUST\
    \ be possible to filter both incoming and outgoing traffic\n      on any interface.\n\
    \   Justification.\n      This requirement allows flexibility in applying filters\
    \ at the\n      place that makes the most sense.  It allows invalid or malicious\n\
    \      traffic to be dropped as close to the source as possible.\n   Examples.\n\
    \      It might be desirable on a border router, for example, to apply an\n  \
    \    egress filter outbound on the interface that connects a site to\n      its\
    \ external ISP to drop outbound traffic that does not have a\n      valid internal\
    \ source address.  Inbound, it might be desirable to\n      apply a filter that\
    \ blocks all traffic from a site that is known\n      to forward or originate\
    \ lots of junk mail.\n   Warnings.\n      None.\n"
- title: 2.9.  Packet Filtering Counter Requirements
  contents:
  - '2.9.  Packet Filtering Counter Requirements

    '
- title: 2.9.1.  Ability to Accurately Count Filter Hits
  contents:
  - "2.9.1.  Ability to Accurately Count Filter Hits\n   Requirement.\n      The device\
    \ MUST supply a facility for accurately counting all\n      filter hits.\n   Justification.\n\
    \      Accurate counting of filter rule matches is important because it\n    \
    \  shows the frequency of attempts to violate policy.  This enables\n      resources\
    \ to be focused on areas of greatest need.\n   Examples.\n      Assume, for example,\
    \ that a ISP network implements anti-spoofing\n      egress filters (see [RFC2827])\
    \ on interfaces of its edge routers\n      that support single-homed stub networks.\
    \  Counters could enable\n      the ISP to detect cases where large numbers of\
    \ spoofed packets are\n      being sent.  This may indicate that the customer\
    \ is performing\n      potentially malicious actions (possibly in violation of\
    \ the ISPs\n      Acceptable Use Policy), or that system(s) on the customers network\n\
    \      have been \"owned\" by hackers and are being (mis)used to launch\n    \
    \  attacks.\n   Warnings.\n      None.\n"
- title: 2.9.2.  Ability to Display Filter Counters
  contents:
  - "2.9.2.  Ability to Display Filter Counters\n   Requirement.\n      The device\
    \ MUST provide a mechanism to display filter counters.\n   Justification.\n  \
    \    Information that is collected is not useful unless it can be\n      displayed\
    \ in a useful manner.\n   Examples.\n      Assume there is a router with four\
    \ interfaces.  One is an up-link\n      to an ISP providing routes to the Internet.\
    \  The other three\n      connect to separate internal networks.  Assume that\
    \ a host on one\n      of the internal networks has been compromised by a hacker\
    \ and is\n      sending traffic with bogus source addresses.  In such a situation,\n\
    \      it might be desirable to apply ingress filters to each of the\n      internal\
    \ interfaces.  Once the filters are in place, the counters\n      can be examined\
    \ to determine the source (inbound interface) of the\n      bogus packets.\n \
    \  Warnings.\n      None.\n"
- title: 2.9.3.  Ability to Display Filter Counters per Rule
  contents:
  - "2.9.3.  Ability to Display Filter Counters per Rule\n   Requirement.\n      The\
    \ device MUST provide a mechanism to display filter counters per\n      rule.\n\
    \   Justification.\n      This makes it possible to see which rules are matching\
    \ and how\n      frequently.\n   Examples.\n      Assume that a filter has been\
    \ defined that has two rules, one\n      permitting all SSH traffic (tcp/22) and\
    \ the second dropping all\n      remaining traffic.  If three packets are directed\
    \ toward/through\n      the point at which the filter is applied, one to port\
    \ 22, the\n      others to different ports, then the counter display should show\
    \ 1\n      packet matching the permit tcp/22 rule and 2 packets matching the\n\
    \      deny all others rule.\n   Warnings.\n      None.\n"
- title: 2.9.4.  Ability to Display Filter Counters per Filter Application
  contents:
  - "2.9.4.  Ability to Display Filter Counters per Filter Application\n   Requirement.\n\
    \      If it is possible for a filter to be applied more than once at the\n  \
    \    same time, then the device MUST provide a mechanism to display\n      filter\
    \ counters per filter application.\n   Justification.\n      It may make sense\
    \ to apply the same filter definition\n      simultaneously more than one time\
    \ (to different interfaces, etc.).\n      If so, it would be much more useful\
    \ to know which instance of a\n      filter is matching than to know that some\
    \ instance was matching\n      somewhere.\n   Examples.\n      One way to implement\
    \ this requirement would be to have the counter\n      display mechanism show\
    \ the interface (or other entity) to which\n      the filter has been applied,\
    \ along with the name (or other\n      designator) for the filter.  For example\
    \ if a filter named\n      \"desktop_outbound\" applied two different interfaces,\
    \ say,\n      \"ethernet0\" and \"ethernet1\", the display should indicate something\n\
    \      like \"matches of filter 'desktop_outbound' on ethernet0 ...\" and\n  \
    \    \"matches of filter 'desktop_outbound' on ethernet1 ...\"\n   Warnings.\n\
    \      None.\n"
- title: 2.9.5.  Ability to Reset Filter Counters
  contents:
  - "2.9.5.  Ability to Reset Filter Counters\n   Requirement.\n      It MUST be possible\
    \ to reset counters to zero on a per filter\n      basis.\n      For the purposes\
    \ of this requirement it would be acceptable for\n      the system to maintain\
    \ two counters: an \"absolute counter\",\n      C[now], and a \"reset\" counter,\
    \ C[reset].  The absolute counter\n      would maintain counts that increase monotonically\
    \ until they wrap\n      or overflow the counter.  The reset counter would receive\
    \ a copy\n      of the current value of the absolute counter when the reset\n\
    \      function was issued for that counter.  Functions that display or\n    \
    \  retrieve the counter could then display the delta (C[now] -\n      C[reset]).\n\
    \   Justification.\n      This allows operators to get a current picture of the\
    \ traffic\n      matching particular rules/filters.\n   Examples.\n      Assume\
    \ that filter counters are being used to detect internal\n      hosts that are\
    \ infected with a new worm.  Once it is believed that\n      all infected hosts\
    \ have been cleaned up and the worm removed, the\n      next step would be to\
    \ verify that.  One way of doing so would be\n      to reset the filter counters\
    \ to zero and see if traffic indicative\n      of the worm has ceased.\n   Warnings.\n\
    \      None.\n"
- title: 2.9.6.  Filter Counters Must Be Accurate
  contents:
  - "2.9.6.  Filter Counters Must Be Accurate\n   Requirement.\n      Filter counters\
    \ MUST be accurate.  They MUST reflect the actual\n      number of matching packets\
    \ since the last counter reset.  Filter\n      counters MUST be capable of holding\
    \ up to 2^32 - 1 values without\n      overflowing and SHOULD be capable of holding\
    \ up to 2^64 - 1\n      values.\n   Justification.\n      Inaccurate data can\
    \ not be relied on as the basis for action.\n      Underreported data can conceal\
    \ the magnitude of a problem.\n   Examples.\n      If N packets matching a filter\
    \ are sent to/through a device, then\n      the counter should show N matches.\n\
    \   Warnings.\n      None.\n"
- title: 2.10.  Other Packet Filtering Requirements
  contents:
  - '2.10.  Other Packet Filtering Requirements

    '
- title: 2.10.1.  Ability to Specify Filter Log Granularity
  contents:
  - "2.10.1.  Ability to Specify Filter Log Granularity\n   Requirement.\n      It\
    \ MUST be possible to enable/disable logging on a per rule basis.\n   Justification.\n\
    \      The ability to tune the granularity of logging allows the operator\n  \
    \    to log only the information that is desired.  Without this\n      capability,\
    \ it is possible that extra data (or none at all) would\n      be logged, making\
    \ it more difficult to find relevant information.\n   Examples.\n      If a filter\
    \ is defined that has several rules, and one of the\n      rules denies telnet\
    \ (tcp/23) connections, then it should be\n      possible to specify that only\
    \ matches on the rule that denies\n      telnet should generate a log message.\n\
    \   Warnings.\n      None.\n"
- title: 2.11.  Event Logging Requirements
  contents:
  - '2.11.  Event Logging Requirements

    '
- title: 2.11.1.  Logging Facility Uses Protocols Subject To Open Review
  contents:
  - "2.11.1.  Logging Facility Uses Protocols Subject To Open Review\n   Requirement.\n\
    \      The device MUST provide a logging facility that is based on\n      protocols\
    \ subject to open review.  See Section 1.8.  Custom or\n      proprietary logging\
    \ protocols MAY be implemented provided the same\n      information is made available.\n\
    \   Justification.\n      The use of logging based on protocols subject to open\
    \ review\n      permits the operator to perform archival and analysis of logs\n\
    \      without relying on vendor-supplied software and servers.\n   Examples.\n\
    \      This requirement may be satisfied by the use of one or more of\n      syslog\
    \ [RFC3164], syslog with reliable delivery [RFC3195], TACACS+\n      [RFC1492]\
    \ or RADIUS [RFC2865].\n   Warnings.\n      While [RFC3164] meets this requirement,\
    \ it has many security\n      issues and by itself does not meet the requirements\
    \ of Section\n      2.1.1.  See the security considerations section  of [RFC3164]\
    \ for\n      a list of issues.  [RFC3195] provides solutions to most/all of\n\
    \      these issues....however at the time of this writing there are few\n   \
    \   implementations.  Other possible solutions might be to tunnel\n      syslog\
    \ over a secure transport...but this often raises difficult\n      key management\
    \ and scalability issues.\n      The current best solution seems to be the following:\n\
    \      *  Implement [RFC3164].\n      *  Consider implementing [RFC3195].\n"
- title: 2.11.2.  Logs Sent To Remote Servers
  contents:
  - "2.11.2.  Logs Sent To Remote Servers\n   Requirement.\n      The device MUST\
    \ support transmission of records of security\n      related events to one or\
    \ more remote devices.  There MUST be\n      configuration settings on the device\
    \ that allow selection of\n      servers.\n   Justification.\n      This is important\
    \ because it supports individual accountability.\n      It is important to store\
    \ them on a separate server to preserve\n      them in case of failure or compromise\
    \ of the managed device.\n   Examples.\n      This requirement may be satisfied\
    \ by the use of one or more of:\n      syslog [RFC3164], syslog with reliable\
    \ delivery [RFC3195], TACACS+\n      [RFC1492] or RADIUS [RFC2865].\n   Warnings.\n\
    \      Note that there may be privacy or legal considerations when\n      logging/monitoring\
    \ user activity.\n      High volumes of logging may generate excessive network\
    \ traffic\n      and/or compete for scarce memory and CPU resources on the device.\n"
- title: 2.11.3.  Ability to Select Reliable Delivery
  contents:
  - "2.11.3.  Ability to Select Reliable Delivery\n   Requirement.\n      It SHOULD\
    \ be possible to select reliable delivery of log messages.\n   Justification.\n\
    \      Reliable delivery is important to the extent that log data is\n      depended\
    \ upon to make operational decisions and forensic analysis.\n      Without reliable\
    \ delivery, log data becomes a collection of hints.\n   Examples.\n      One example\
    \ of reliable syslog delivery is defined in [RFC3195].\n      Syslog-ng provides\
    \ another example, although the protocol has not\n      been standardized.\n \
    \  Warnings.\n      None.\n"
- title: 2.11.4.  Ability to Log Locally
  contents:
  - "2.11.4.  Ability to Log Locally\n   Requirement.\n      It SHOULD be possible\
    \ to log locally on the device itself.  Local\n      logging SHOULD be written\
    \ to non-volatile storage.\n   Justification.\n      Local logging of failed authentication\
    \ attempts to non-volatile\n      storage is critical.  It provides a means of\
    \ detecting attacks\n      where the device is isolated from its authentication\
    \ interfaces\n      and attacked at the console.\n      Local logging is important\
    \ for viewing information when connected\n      to the device.  It provides some\
    \ backup of log data in case remote\n      logging fails.  It provides a way to\
    \ view logs relevant to one\n      device without having to sort through a possibly\
    \ large set of logs\n      from other devices.\n   Examples.\n      One example\
    \ of local logging would be a memory buffer that\n      receives copies of messages\
    \ sent to the remote log server.\n      Another example might be a local syslog\
    \ server (assuming the\n      device is capable of running syslog and has some\
    \ local storage).\n   Warnings.\n      Storage on the device may be limited. \
    \ High volumes of logging may\n      quickly fill available storage, in which\
    \ case there are two\n      options: new logs overwrite old logs (possibly via\
    \ the use of a\n      circular memory buffer or log file rotation), or logging\
    \ stops.\n"
- title: 2.11.5.  Ability to Maintain Accurate System Time
  contents:
  - "2.11.5.  Ability to Maintain Accurate System Time\n   Requirement.\n      The\
    \ device MUST maintain accurate, \"high resolution\" (see\n      definition in\
    \ Section 1.8) system time.\n   Justification.\n      Accurate time is important\
    \ to the generation of reliable log data.\n      Accurate time is also important\
    \ to the correct operation of some\n      authentication mechanisms.\n   Examples.\n\
    \      This requirement may be satisfied by supporting Network Time\n      Protocol\
    \ (NTP), Simple Network Time Protocol (SNTP), or via direct\n      connection\
    \ to an accurate time source.\n   Warnings.\n      System clock chips are inaccurate\
    \ to varying degrees.  System time\n      should not be relied upon unless it\
    \ is regularly checked and\n      synchronized with a known, accurate external\
    \ time source (such as\n      an NTP stratum-1 server).  Also note that if network\
    \ time\n      synchronization is used, an attacker may be able to manipulate the\n\
    \      clock unless cryptographic authentication is used.\n"
- title: 2.11.6.  Display Timezone And UTC Offset
  contents:
  - "2.11.6.  Display Timezone And UTC Offset\n   Requirement.\n      All displays\
    \ and logs of system time MUST include a timezone or\n      offset from UTC.\n\
    \   Justification.\n      Knowing the timezone or UTC offset makes correlation\
    \ of data and\n      coordination with data in other timezones possible.\n   Examples.\n\
    \      Bob is in Newfoundland, Canada which is UTC -3:30.  Alice is\n      somewhere\
    \ in Indiana, USA.  Some parts of Indiana switch to\n      daylight savings time\
    \ while others do not.  A user on Bob's\n      network attacks a user on Alice's\
    \ network.  Both are using logs\n      with local timezones and no indication\
    \ of UTC offset.  Correlating\n      these logs will be difficult and error prone.\
    \  Including timezone,\n      or better, UTC offset, eliminates these difficulties.\n\
    \   Warnings.\n      None.\n"
- title: 2.11.7.  Default Timezone Should Be UTC
  contents:
  - "2.11.7.  Default Timezone Should Be UTC\n   Requirement.\n      The default timezone\
    \ for display and logging SHOULD be UTC.  The\n      device MAY support a mechanism\
    \ to allow the operator to specify\n      the display and logging of times in\
    \ a timezone other than UTC.\n   Justification.\n      Knowing the timezone or\
    \ UTC offset makes correlation of data and\n      coordination with data in other\
    \ timezones possible.\n   Examples.\n      Bob in Newfoundland (UTC -3:30) and\
    \ Alice in Indiana (UTC -5 or\n      UTC -6 depending on the time of year and\
    \ exact county in Indiana)\n      are working an incident together using their\
    \ logs.  Both left the\n      default settings, which was UTC, so there was no\
    \ translation of\n      time necessary to correlate the logs.\n   Warnings.\n\
    \      None.\n"
- title: 2.11.8.  Logs Must Be Timestamped
  contents:
  - "2.11.8.  Logs Must Be Timestamped\n   Requirement.\n      By default, the device\
    \ MUST timestamp all log messages.  The\n      timestamp MUST be accurate to within\
    \ a second or less.  The\n      timestamp MUST include a timezone.  There MAY\
    \ be a mechanism to\n      disable the generation of timestamps.\n   Justification.\n\
    \      Accurate timestamps are necessary for correlating events,\n      particularly\
    \ across multiple devices or with other organizations.\n      This applies when\
    \ it is necessary to analyze logs.\n   Examples.\n      This requirement MAY be\
    \ satisfied by writing timestamps into\n      syslog messages.\n   Warnings.\n\
    \      It is difficult to correlate logs from different time zones.\n      Security\
    \ events on the Internet often involve machines and logs\n      from a variety\
    \ of physical locations.  For that reason, UTC is\n      preferred, all other\
    \ things being equal.\n"
- title: 2.11.9.  Logs Contain Untranslated IP Addresses
  contents:
  - "2.11.9.  Logs Contain Untranslated IP Addresses\n   Requirement.\n      Log messages\
    \ MUST NOT list translated addresses (DNS names)\n      associated with the address\
    \ without listing the untranslated IP\n      address where the IP address is available\
    \ to the device generating\n      the log message.\n   Justification.\n      Including\
    \ IP address of access list violations authentication\n      attempts, address\
    \ lease assignments and similar events in logs\n      enables a level of individual\
    \ and organizational accountability\n      and is necessary to enable analysis\
    \ of network events, incidents,\n      policy violations, etc.\n      DNS entries\
    \ tend to change more quickly than IP block assignments.\n      This makes the\
    \ address more reliable for data forensics.\n      DNS lookups can be slow and\
    \ consume resources.\n   Examples.\n      A failed network login should generate\
    \ a record with the source\n      address of the login attempt.\n   Warnings.\n\
    \      *  Source addresses may be spoofed.  Network-based attacks often\n    \
    \     use spoofed source addresses.  Source addresses should not be\n        \
    \ completely trusted unless verified by other means.\n      *  Addresses may be\
    \ reassigned to different individual, for\n         example, in a desktop environment\
    \ using DHCP.  In such cases\n         the individual accountability afforded\
    \ by this requirement is\n         weak.  Having accurate time in the logs increases\
    \ the chances\n         that the use of an address can be correlated to an individual.\n\
    \      *  Network topologies may change.  Even in the absence of dynamic\n   \
    \      address assignment, network topologies and address block\n         assignments\
    \ do change.  Logs of an attack one month ago may not\n         give an accurate\
    \ indication of which host, network or\n         organization owned the system(s)\
    \ in question at the time.\n"
- title: 2.11.10.  Logs Contain Records Of Security Events
  contents:
  - "2.11.10.  Logs Contain Records Of Security Events\n   Requirement.\n      The\
    \ device MUST be able to send a record of at least the following\n      events:\n\
    \      *  authentication successes,\n      *  authentication failures,\n     \
    \ *  session Termination,\n      *  authorization changes,\n      *  configuration\
    \ changes,\n      *  device status changes.\n      The device SHOULD be able to\
    \ send a record of all other security\n      related events.\n   Justification.\n\
    \      This is important because it supports individual accountability.\n    \
    \  See section 4.5.4.4 of [RFC2196].\n   Examples.\n      Examples of events for\
    \ which there must be a record include: user\n      logins, bad login attempts,\
    \ logouts, user privilege level changes,\n      individual configuration commands\
    \ issued by users and system\n      startup/shutdown events.\n   Warnings.\n \
    \     This list is far from complete.\n      Note that there may be privacy or\
    \ legal considerations when\n      logging/monitoring user activity.\n"
- title: 2.11.11.  Logs Do Not Contain Passwords
  contents:
  - "2.11.11.  Logs Do Not Contain Passwords\n   Requirement.\n      Passwords SHOULD\
    \ be excluded from all audit records, including\n      records of successful or\
    \ failed authentication attempts.\n   Justification.\n      Access control and\
    \ authorization requirements differ for\n      accounting records (logs) and authorization\
    \ databases (passwords).\n      Logging passwords may grant unauthorized access\
    \ to individuals\n      with access to the logs.  Logging failed passwords may\
    \ give hints\n      about actual passwords.  See section 4.5.4.4 of [RFC2196].\n\
    \   Examples.\n      A user may make small mistakes in entering a password such\
    \ as\n      using incorrect capitalization (\"my password\" vs. \"My Password\"\
    ).\n   Warnings.\n      There may be situations where it is appropriate/required\
    \ to log\n      passwords.\n"
- title: 2.12.  Authentication, Authorization, and Accounting (AAA) Requirements
  contents:
  - '2.12.  Authentication, Authorization, and Accounting (AAA) Requirements

    '
- title: 2.12.1.  Authenticate All User Access
  contents:
  - "2.12.1.  Authenticate All User Access\n   Requirement.\n      The device MUST\
    \ provide a facility to perform authentication of\n      all user access to the\
    \ system.\n   Justification.\n      This functionality is required so that access\
    \ to the system can be\n      restricted to authorized personnel.\n   Examples.\n\
    \      This requirement MAY be satisfied by implementing a centralized\n     \
    \ authentication system.  See Section 2.12.5.  It MAY also be\n      satisfied\
    \ using local authentication.  See Section 2.12.6.\n   Warnings.\n      None.\n"
- title: 2.12.2.  Support Authentication of Individual Users
  contents:
  - "2.12.2.  Support Authentication of Individual Users\n   Requirement.\n      Mechanisms\
    \ used to authenticate interactive access for\n      configuration and management\
    \ MUST support the authentication of\n      distinct, individual users.  This\
    \ requirement MAY be relaxed to\n      support system installation Section 2.4.5\
    \ or recovery of\n      authorized access Section 2.12.15.\n   Justification.\n\
    \      The use of individual accounts, in conjunction with logging,\n      promotes\
    \ accountability.  The use of group or default accounts\n      undermines individual\
    \ accountability.\n   Examples.\n      A user may need to log in to the device\
    \ to access CLI functions\n      for management.  Individual user authentication\
    \ could be provided\n      by a centralized authentication server or a username/password\n\
    \      database stored on the device.  It would be a violation of this\n     \
    \ rule for the device to only support a single \"account\" (with or\n      without\
    \ a username) and a single password shared by all users to\n      gain administrative\
    \ access.\n   Warnings.\n      This simply requires that the mechanism to support\
    \ individual\n      users be present.  Policy (e.g., forbidding shared group accounts)\n\
    \      and enforcement are also needed but beyond the scope of this\n      document.\n"
- title: 2.12.3.  Support Simultaneous Connections
  contents:
  - "2.12.3.  Support Simultaneous Connections\n   Requirement.\n      The device\
    \ MUST support multiple simultaneous connections by\n      distinct users, possibly\
    \ at different authorization levels.\n   Justification.\n      This allows multiple\
    \ people to perform authorized management\n      functions simultaneously.  This\
    \ also means that attempted\n      connections by unauthorized users do not automatically\
    \ lock out\n      authorized users.\n   Examples.\n      None.\n   Warnings.\n\
    \      None.\n"
- title: 2.12.4.  Ability to Disable All Local Accounts
  contents:
  - "2.12.4.  Ability to Disable All Local Accounts\n   Requirement.\n      The device\
    \ MUST provide a means of disabling all local accounts\n      including:\n   *\
    \  local users,\n   *  default accounts (vendor, maintenance, guest, etc.),\n\
    \   *  privileged and unprivileged accounts.\n      A local account defined as\
    \ one where all information necessary for\n      user authentication is stored\
    \ on the device.\n   Justification.\n      Default accounts, well-known accounts,\
    \ and old accounts provide\n      easy targets for someone attempting to gain\
    \ access to a device.\n      It must be possible to disable them to reduce the\
    \ potential\n      vulnerability.\n   Examples.\n      The implementation depends\
    \ on the types of authentication\n      supported by the device.\n   Warnings.\n\
    \      None.\n"
- title: 2.12.5.  Support Centralized User Authentication Methods
  contents:
  - "2.12.5.  Support Centralized User Authentication Methods\n   Requirement.\n \
    \     The device MUST support a method of centralized authentication of\n    \
    \  all user access via standard authentication protocols.\n   Justification.\n\
    \      Support for centralized authentication is particularly important\n    \
    \  in large environments where the network devices are widely\n      distributed\
    \ and where many people have access to them.  This\n      reduces the effort needed\
    \ to effectively restrict and track access\n      to the system by authorized\
    \ personnel.\n   Examples.\n      This requirement can be satisfied through the\
    \ use of DIAMETER\n      [RFC3588], TACACS+ [RFC1492], RADIUS [RFC2865], or Kerberos\n\
    \      [RFC1510].\n      The secure management requirements (Section 2.1.1) apply\
    \ to AAA.\n      See [RFC3579] for a discussion security issues related to RADIUS.\n\
    \   Warnings.\n      None.\n"
- title: 2.12.6.  Support Local User Authentication Method
  contents:
  - "2.12.6.  Support Local User Authentication Method\n   Requirement.\n      The\
    \ device SHOULD support a local authentication method.  If\n      implemented,\
    \ the method MUST NOT require interaction with anything\n      external to the\
    \ device (such as remote AAA servers),  and MUST\n      work in conjunction with\
    \ Section 2.3.1 (Support a 'Console'\n      Interface) and Section 2.12.7 (Support\
    \ Configuration of Order of\n      Authentication Methods).\n   Justification.\n\
    \      Support for local authentication may be required in smaller\n      environments\
    \ where there may be only a few devices and a limited\n      number of people\
    \ with access.  The overhead of maintaining\n      centralized authentication\
    \ servers may not be justified.\n   Examples.\n      The use of local, per-device\
    \ usernames and passwords provides one\n      way to implement this requirement.\n\
    \   Warnings.\n      Authentication information must be protected wherever it\
    \ resides.\n      Having, for instance, local usernames and passwords stored on\
    \ 100\n      network devices means that there are 100 potential points of\n  \
    \    failure where the information could be compromised vs. storing\n      authentication\
    \ data centralized server(s), which would reduce the\n      potential points of\
    \ failure to the number of servers and allow\n      protection efforts (system\
    \ hardening, audits, etc.) to be focused\n      on, at most, a few servers.\n"
- title: 2.12.7.  Support Configuration of Order of Authentication Methods
  contents:
  - "2.12.7.  Support Configuration of Order of Authentication Methods\n   Requirement.\n\
    \      The device MUST support the ability to configure the order in\n      which\
    \ supported authentication methods are attempted.\n      Authentication SHOULD\
    \ \"fail closed\", i.e., access should be denied\n      if none of the listed\
    \ authentication methods succeeds.\n   Justification.\n      This allows the operator\
    \ flexibility in implementing appropriate\n      security policies that balance\
    \ operational and security needs.\n   Examples.\n      If, for example, a device\
    \ supports RADIUS authentication and local\n      usernames and passwords, it\
    \ should be possible to specify that\n      RADIUS authentication should be attempted\
    \ if the servers are\n      available, and that local usernames and passwords\
    \ should be used\n      for authentication only if the RADIUS servers are not\
    \ available.\n      Similarly, it should be possible to specify that only RADIUS\
    \ or\n      only local authentication be used.\n   Warnings.\n      None.\n"
- title: 2.12.8.  Ability To Authenticate Without Plaintext Passwords
  contents:
  - "2.12.8.  Ability To Authenticate Without Plaintext Passwords\n   Requirement.\n\
    \      The device MUST support mechanisms that do not require the\n      transmission\
    \ of plaintext passwords in all cases that require the\n      transmission of\
    \ authentication information across networks.\n   Justification.\n      Plaintext\
    \ passwords can be easily observed using packet sniffers\n      on shared networks.\
    \  See [RFC1704] and [RFC3631] for a through\n      discussion.\n   Examples.\n\
    \      Remote login requires the transmission of authentication\n      information\
    \ across networks.  Telnet transmits plaintext\n      passwords.  SSH does not.\
    \  Telnet fails this requirement.  SSH\n      passes.\n   Warnings.\n      None.\n"
- title: 2.12.9.  No Default Passwords
  contents:
  - "2.12.9.  No Default Passwords\n   Requirement.\n      The initial configuration\
    \ of the device MUST NOT contain any\n      default passwords or other authentication\
    \ tokens.\n   Justification.\n      Default passwords provide an easy way for\
    \ attackers to gain\n      unauthorized access to the device.\n   Examples.\n\
    \      Passwords such as the name of the vendor, device, \"default\", etc.\n \
    \     are easily guessed.  The SNMP community strings \"public\" and\n      \"\
    private\" are well known defaults that provide read and write\n      access to\
    \ devices.\n   Warnings.\n      Lists of default passwords for various devices\
    \ are readily\n      available at numerous websites.\n"
- title: 2.12.10.  Passwords Must Be Explicitly Configured Prior To Use
  contents:
  - "2.12.10.  Passwords Must Be Explicitly Configured Prior To Use\n   Requirement.\n\
    \      The device MUST require the operator to explicitly configure\n      \"\
    passwords\" prior to use.\n   Justification.\n      This requirement is intended\
    \ to prevent unauthorized management\n      access.  Requiring the operator to\
    \ explicitly configure passwords\n      will tend to have the effect of ensuring\
    \ a diversity of passwords.\n      It also shifts the responsibility for password\
    \ selection to the\n      user.\n   Examples.\n      Assume that a device comes\
    \ with console port for management and a\n      default administrative account.\
    \  This requirement together with No\n      Default Passwords says that the administrative\
    \ account should come\n      with no password configured.  One way of meeting\
    \ this requirement\n      would be to have the device require the operator to\
    \ choose a\n      password for the administrative account as part of a dialog\
    \ the\n      first time the device is configured.\n   Warnings.\n      While this\
    \ device requires operators to set passwords, it does not\n      prevent them\
    \ from doing things such as using scripts to configure\n      hundreds of devices\
    \ with the same easily guessed passwords.\n"
- title: 2.12.11.  Ability to Define Privilege Levels
  contents:
  - "2.12.11.  Ability to Define Privilege Levels\n   Requirement.\n      It MUST\
    \ be possible to define arbitrary subsets of all management\n      and configuration\
    \ functions and assign them to groups or\n      \"privilege levels\", which can\
    \ be assigned to users per Section\n      2.12.12.  There MUST be at least three\
    \ possible privilege levels.\n   Justification.\n      This requirement supports\
    \ the implementation of the principal of\n      \"least privilege\", which states\
    \ that an individual should only\n      have the privileges necessary to execute\
    \ the operations he/she is\n      required to perform.\n   Examples.\n      Examples\
    \ of privilege levels might include \"user\" which only\n      allows the initiation\
    \ of a PPP or telnet session, \"read only\",\n      which allows read-only access\
    \ to device configuration and\n      operational statistics, \"root/superuser/administrator\"\
    \ which\n      allows update access to all configurable parameters, and\n    \
    \  \"operator\" which allows updates to a limited, user defined set of\n     \
    \ parameters.  Note that privilege levels may be defined locally on\n      the\
    \ device or on centralized authentication servers.\n   Warnings.\n      None.\n"
- title: 2.12.12.  Ability to Assign Privilege Levels to Users
  contents:
  - "2.12.12.  Ability to Assign Privilege Levels to Users\n   Requirement.\n    \
    \  The device MUST be able to assign a defined set of authorized\n      functions,\
    \ or \"privilege level\", to each user once they have\n      authenticated themselves\
    \ to the device.  Privilege level\n      determines which functions a user is\
    \ allowed to execute.  Also see\n      Section 2.12.11.\n   Justification.\n \
    \     This requirement supports the implementation of the principal of\n     \
    \ \"least privilege\", which states that an individual should only\n      have\
    \ the privileges necessary to execute the operations he/she is\n      required\
    \ to perform.\n   Examples.\n      The implementation of this requirement will\
    \ obviously be closely\n      coupled with the authentication mechanism.  If RADIUS\
    \ is used, an\n      attribute could be set in the user's RADIUS profile that\
    \ can be\n      used to map the ID to a certain privilege level.\n   Warnings.\n\
    \      None.\n"
- title: 2.12.13.  Default Privilege Level Must Be 'None'
  contents:
  - "2.12.13.  Default Privilege Level Must Be 'None'\n   Requirement.\n      The\
    \ default privilege level SHOULD NOT allow any access to\n      management or\
    \ configuration functions.  It MAY allow access to\n      user-level functions\
    \ (e.g., starting PPP or telnet).  It SHOULD be\n      possible to assign a different\
    \ privilege level as the default.\n      This requirement MAY be relaxed to support\
    \ system installation per\n      Section 2.4.5 or recovery of authorized access\
    \ per Section\n      2.12.15.\n   Justification.\n      This requirement supports\
    \ the implementation of the principal of\n      \"least privilege\", which states\
    \ that an individual should only\n      have the privileges necessary to execute\
    \ the operations he/she is\n      required to perform.\n   Examples.\n      Examples\
    \ of privilege levels might include \"user\" which only\n      allows the initiation\
    \ of a PPP or telnet session, \"read-only\",\n      which allows read-only access\
    \ to device configuration and\n      operational statistics, \"root/superuser/administrator\"\
    \ which\n      allows update access to all configurable parameters, and\n    \
    \  \"operator\" which allows updates to a limited, user defined set of\n     \
    \ parameters.  Note that privilege levels may be defined locally on\n      the\
    \ device or on centralized authentication servers.\n   Warnings.\n      It may\
    \ be required to provide exceptions to support the\n      requirements to support\
    \ recovery of privileged access (Section\n      2.12.15) and to support OS installation\
    \ and configuration (Section\n      2.4.5).  For example, if the OS and/or configuration\
    \ has somehow\n      become corrupt an authorized individual with physical access\
    \ may\n      need to have \"root\" level access to perform an install.\n"
- title: 2.12.14.  Change in Privilege Levels Requires Re-Authentication
  contents:
  - "2.12.14.  Change in Privilege Levels Requires Re-Authentication\n   Requirement.\n\
    \      The device MUST re-authenticate a user prior to granting any\n      change\
    \ in user authorizations.\n   Justification.\n      This requirement ensures that\
    \ users are able to perform only\n      authorized actions.\n   Examples.\n  \
    \    This requirement might be implemented by assigning base privilege\n     \
    \ levels to all users and allowing the user to request additional\n      privileges,\
    \ with the requests validated by the AAA server.\n   Warnings.\n      None.\n"
- title: 2.12.15.  Support Recovery Of Privileged Access
  contents:
  - "2.12.15.  Support Recovery Of Privileged Access\n   Requirement.\n      The device\
    \ MUST support a mechanism to allow authorized\n      individuals to recover full\
    \ privileged administrative access in\n      the event that access is lost.  Use\
    \ of the mechanism MUST require\n      physical access to the device.  There MAY\
    \ be a mechanism for\n      disabling the recovery feature.\n   Justification.\n\
    \      There are times when local administrative passwords are forgotten,\n  \
    \    when the only person who knows them leaves the company, or when\n      hackers\
    \ set or change the password.  In all these cases,\n      legitimate administrative\
    \ access to the device is lost.  There\n      should be a way to recover access.\
    \  Requiring physical access to\n      invoke the procedure makes it less likely\
    \ that it will be abused.\n      Some organizations may want an even higher level\
    \ of security and\n      be willing to risk total loss of authorized access by\
    \ disabling\n      the recovery feature, even for those with physical access.\n\
    \   Examples.\n      Some examples of ways to satisfy this requirement are to\
    \ have the\n      device give the user the chance to set a new administrative\n\
    \      password when:\n      *  The user sets a jumper on the system board to\
    \ a particular\n         position.\n      *  The user sends a special sequence\
    \ to the RS232 console port\n         during the initial boot sequence.\n    \
    \  *  The user sets a \"boot register\" to a particular value.\n   Warnings.\n\
    \      This mechanism, by design,  provides a \"back door\" to complete\n    \
    \  administrative control of the device and may not be appropriate\n      for\
    \ environments where those with physical access to the device\n      can not be\
    \ trusted.\n      Also see the warnings in Section 2.3.1 (Support a 'Console'\n\
    \      Interface).\n"
- title: 2.13.  Layer 2 Devices Must Meet Higher Layer Requirements
  contents:
  - "2.13.  Layer 2 Devices Must Meet Higher Layer Requirements\n   Requirement.\n\
    \      If a device provides layer 2 services that are dependent on layer\n   \
    \   3 or greater services, then the portions that operate at or above\n      layer\
    \ 3 MUST conform to the requirements listed in this document.\n   Justification.\n\
    \      All layer 3 devices have similar security needs and should be\n      subject\
    \ to similar requirements.\n   Examples.\n      Signaling protocols required for\
    \ layer 2 switching may exchange\n      information with other devices using layer\
    \ 3 communications.  In\n      such cases, the device must provide a secure layer\
    \ 3 facility.\n      Also, if higher layer capabilities (say, SSH or SNMP) are\
    \ used to\n      manage a layer 2 device, then the rest of the requirements in\
    \ this\n      document apply to those capabilities.\n   Warnings.\n      None.\n"
- title: 2.14.  Security Features Must Not Cause Operational Problems
  contents:
  - "2.14.  Security Features Must Not Cause Operational Problems\n   Requirement.\n\
    \      The use of security features specified by the requirements in this\n  \
    \    document SHOULD NOT cause severe operational problems.\n   Justification.\n\
    \      Security features which cause operational problems are not useful\n   \
    \   and may leave the operator with no mechanism for enforcing\n      appropriate\
    \ policy.\n   Examples.\n      Some examples of severe operational problems include:\n\
    \      *  The device crashes.\n      *  The device becomes unmanageable.\n   \
    \   *  Data is lost.\n      *  Use of the security feature consumes excessive\
    \ resources (CPU,\n         memory, bandwidth).\n   Warnings.\n      Determination\
    \ of compliance with this requirement involves a level\n      of judgement.  What\
    \ is \"severe\"?  Certainly crashing is severe,\n      but what about a %5 loss\
    \ in throughput when logging is enabled?\n      It should also be noted that there\
    \ may be unavoidable physical\n      limitations such as the total capacity of\
    \ a link.\n"
- title: 2.15.  Security Features Should Have Minimal Performance Impact
  contents:
  - "2.15.  Security Features Should Have Minimal Performance Impact\n   Requirement.\n\
    \      Security features specified by the requirements in this document\n    \
    \  SHOULD be implemented with minimal impact on performance.  Other\n      sections\
    \ of this document may specify different performance\n      requirements (e.g.,\
    \ \"MUST\"s).\n   Justification.\n      Security features which significantly\
    \ impact performance may leave\n      the operator with no mechanism for enforcing\
    \ appropriate policy.\n   Examples.\n      If the application of filters is known\
    \ to have the potential to\n      significantly reduce throughput for non-filtered\
    \ traffic, there\n      will be a tendency, or in some cases a policy, not to\
    \ use filters.\n      Assume, for example, that a new worm is released that scans\
    \ random\n      IP addresses looking for services listening on TCP port 1433.\
    \  An\n      operator might want to investigate to see if any of the hosts on\n\
    \      their networks were infected and trying to spread the worm.  One\n    \
    \  way to do this would be to put up non-blocking filters counting\n      and\
    \ logging the number of outbound connection 1433, and then to\n      block the\
    \ requests that are determined to be from infected hosts.\n      If any of these\
    \ capabilities (filtering, counting, logging) have\n      the potential to impose\
    \ severe performance penalties, then this\n      otherwise rational course of\
    \ action might not be possible.\n   Warnings.\n      Requirements for which performance\
    \ is a particular concern\n      include: filtering, rate-limiting, counters,\
    \ logging and anti-\n      spoofing.\n"
- title: 3.  Documentation Requirements
  contents:
  - "3.  Documentation Requirements\n   The requirements in this section are intended\
    \ to list information\n   that will assist operators in evaluating and securely\
    \ operating a\n   device.\n"
- title: 3.1.  Identify Services That May Be Listening
  contents:
  - "3.1.  Identify Services That May Be Listening\n   Requirement.\n      The vendor\
    \ MUST provide a list of all services that may be active\n      on the device.\
    \  The list MUST identify the protocols and default\n      ports (if applicable)\
    \ on which the services listen.  It SHOULD\n      provide references to complete\
    \ documentation describing the\n      service.\n   Justification.\n      This\
    \ information is necessary to enable a thorough assessment of\n      the potential\
    \ security risks associated with the operation of each\n      service.\n   Examples.\n\
    \      The list will likely contain network and transport protocols such\n   \
    \   as IP, ICMP, TCP, UDP, routing protocols such as BGP and OSPF,\n      application\
    \ protocols such as SSH and SNMP along with references\n      to the RFCs or other\
    \ documentation describing the versions of the\n      protocols implemented.\n\
    \      Web servers \"usually\" listen on port 80.  In the default\n      configuration\
    \ of the device, it may have a web server listening on\n      port 8080.  In the\
    \ context of this requirement \"identify ...\n      default port\" would mean\
    \ \"port 8080\".\n   Warnings.\n      There may be valid, non-technical reasons\
    \ for not disclosing the\n      specifications of proprietary protocols.  In such\
    \ cases, all that\n      needs to be disclosed is the existence of the service\
    \ and the\n      default ports (if applicable).\n"
- title: 3.2.  Document Service Defaults
  contents:
  - "3.2.  Document Service Defaults\n   Requirement.\n      The vendor MUST provide\
    \ a list of the default state of all\n      services.\n   Justification.\n   \
    \   Understanding risk requires understanding exposure.  Each service\n      that\
    \ is enabled presents a certain level of exposure.  Having a\n      list of the\
    \ services that is enabled by default makes it possible\n      to perform meaningful\
    \ risk analysis.\n   Examples.\n      The list may be no more than the output\
    \ of a command that\n      implements Section 2.5.1.\n   Warnings.\n      None.\n"
- title: 3.3.  Document Service Activation Process
  contents:
  - "3.3.  Document Service Activation Process\n   Requirement.\n      The vendor\
    \ MUST concisely document which features enable and\n      disable services.\n\
    \   Justification.\n      Once risk has been assessed, this list provides the\
    \ operator a\n      quick means of understanding how to disable (or enable) undesired\n\
    \      (or desired) services.\n   Examples.\n      This may be a list of commands\
    \ to enable/disable services one by\n      one or a single command which enables/disables\
    \ \"standard\" groups\n      of commands.\n   Warnings.\n      None.\n"
- title: 3.4.  Document Command Line Interface
  contents:
  - "3.4.  Document Command Line Interface\n   Requirement.\n      The vendor MUST\
    \ provide complete documentation of the command line\n      interface with each\
    \ software release.  The documentation SHOULD\n      include highlights of changes\
    \ from previous versions.  The\n      documentation SHOULD list potential output\
    \ for each command.\n   Justification.\n      Understanding of inputs and outputs\
    \ is necessary to support\n      scripting. See Section 2.4.2.\n   Examples.\n\
    \      Separate documentation should be provided for each command listing\n  \
    \    the syntax, parameters, options, etc. as well as expected output\n      (status,\
    \ tables, etc.).\n   Warnings.\n      None.\n"
- title: 3.5.  'Console' Default Communication Profile Documented
  contents:
  - "3.5.  'Console' Default Communication Profile Documented\n   Requirement.\n \
    \     The console default profile of communications parameters MUST be\n     \
    \ published in the system documentation.\n   Justification.\n      Publication\
    \ in the system documentation makes the settings\n      accessible.  Failure to\
    \ publish them could leave the operator\n      having to guess.\n   Examples.\n\
    \      None.\n   Warnings.\n      None.\n"
- title: 4.  Assurance Requirements
  contents:
  - "4.  Assurance Requirements\n   The requirements in this section are intended\
    \ to\n   o  identify behaviors and information that will increase confidence\n\
    \      that the device will meet the security functional requirements.\n   o \
    \ Provide information that will assist in the performance of\n      security evaluations.\n"
- title: 4.1.  Identify Origin of IP Stack
  contents:
  - "4.1.  Identify Origin of IP Stack\n   Requirement.\n      The vendor SHOULD disclose\
    \ the origin or basis of the IP stack\n      used on the system.\n   Justification.\n\
    \      This information is required to better understand the possible\n      security\
    \ vulnerabilities that may be inherent in the IP stack.\n   Examples.\n      \"\
    The IP stack was derived from BSD 4.4\", or \"The IP stack was\n      implemented\
    \ from scratch.\"\n   Warnings.\n      Many IP stacks make simplifying assumptions\
    \ about how an IP packet\n      should be formed.  A malformed packet can cause\
    \ unexpected\n      behavior in the device, such as a system crash or buffer overflow\n\
    \      which could result in  unauthorized access to the system.\n"
- title: 4.2.  Identify Origin of Operating System
  contents:
  - "4.2.  Identify Origin of Operating System\n   Requirement.\n      The vendor\
    \ SHOULD disclose the origin or basis of the operating\n      system (OS).\n \
    \  Justification.\n      This information is required to better understand the\
    \ security\n      vulnerabilities that may be inherent to the OS based on its\n\
    \      origin.\n   Examples.\n      \"The operating system is based on Linux kernel\
    \ 2.4.18.\"\n   Warnings.\n      None.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   General\n      Security is the subject matter\
    \ of this entire memo.  The\n      justification section of each individual requirement\
    \ lists the\n      security implications of meeting or not meeting the requirement.\n\
    \   SNMP\n      SNMP versions prior to SNMPv3 did not include adequate security.\n\
    \      Even if the network itself is secure (for example by using IPSec),\n  \
    \    even then, there is no control as to who on the secure network is\n     \
    \ allowed to access and GET/SET (read/change/create/delete) the\n      objects\
    \ in the MIB.\n      It is recommended that implementors consider the security\
    \ features\n      as provided by the SNMPv3 framework (see [RFC3410], section\
    \ 8),\n      including full support for the SNMPv3 cryptographic mechanisms\n\
    \      (for authentication and privacy).\n      Furthermore, deployment of SNMP\
    \ versions prior to SNMPv3 is NOT\n      RECOMMENDED.  Instead, it is RECOMMENDED\
    \ to deploy SNMPv3 and to\n      enable cryptographic security.  It is then a\
    \ customer/operator\n      responsibility to ensure that the SNMP entity giving\
    \ access to MIB\n      objects is properly configured to give access to the objects\
    \ only\n      to those principals (users) that have legitimate rights to indeed\n\
    \      GET or SET (change/create/delete) them.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [ANSI.X9-52.1998] American National Standards\
    \ Institute, \"Triple Data\n                     Encryption Algorithm Modes of\
    \ Operation\", ANSI\n                     X9.52, 1998.\n   [FIPS.197]        National\
    \ Institute of Standards and Technology,\n                     \"Advanced Encryption\
    \ Standard\", FIPS PUB 197,\n                     November 2001,\n           \
    \          <http://csrc.nist.gov/publications/fips/fips197/\n                \
    \     fips-197.ps>.\n   [PKCS.3.1993]     RSA Laboratories, \"Diffie-Hellman Key-Agreement\n\
    \                     Standard, Version 1.4\", PKCS 3, November 1993.\n   [RFC1208]\
    \         Jacobsen, O. and D. Lynch, \"Glossary of networking\n              \
    \       terms\", RFC 1208, March 1991.\n   [RFC1321]         Rivest, R., \"The\
    \ MD5 Message-Digest Algorithm\", RFC\n                     1321, April 1992.\n\
    \   [RFC1492]         Finseth, C., \"An Access Control Protocol, Sometimes\n \
    \                    Called TACACS\", RFC 1492, July 1993.\n   [RFC1510]     \
    \    Kohl, J. and C. Neuman, \"The Kerberos Network\n                     Authentication\
    \ Service (V5)\", RFC 1510, September\n                     1993.\n   [RFC1704]\
    \         Haller, N. and R. Atkinson, \"On Internet\n                     Authentication\"\
    , RFC 1704, October 1994.\n   [RFC1812]         Baker, F., Ed., \"Requirements\
    \ for IP Version 4\n                     Routers\", RFC 1812, June 1995.\n   [RFC1918]\
    \         Rekhter, Y., Moskowitz, B., Karrenberg, D., de\n                   \
    \  Groot, G., and E. Lear, \"Address Allocation for\n                     Private\
    \ Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC2026]         Bradner,\
    \ S., \"The Internet Standards Process --\n                     Revision 3\",\
    \ BCP 9, RFC 2026, October 1996.\n   [RFC2119]         Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n                     Requirement Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [RFC2196]         Fraser, B., \"Site Security\
    \ Handbook\", FYI 8, RFC\n                     2196, September 1997.\n   [RFC2246]\
    \         Dierks, T. and C. Allen, \"The TLS Protocol Version\n              \
    \       1.0\", RFC 2246, January 1999.\n   [RFC2385]         Heffernan, A., \"\
    Protection of BGP Sessions via the\n                     TCP MD5 Signature Option\"\
    , RFC 2385, August 1998.\n   [RFC2401]         Kent, S. and R. Atkinson, \"Security\
    \ Architecture\n                     for the Internet Protocol\", RFC 2401, November\n\
    \                     1998.\n   [RFC2631]         Rescorla, E., \"Diffie-Hellman\
    \ Key Agreement\n                     Method\", RFC 2631, June 1999.\n   [RFC2827]\
    \         Ferguson, P. and D. Senie, \"Network Ingress\n                     Filtering:\
    \ Defeating Denial of Service Attacks\n                     which employ IP Source\
    \ Address Spoofing\", BCP 38,\n                     RFC 2827, May 2000.\n   [RFC2865]\
    \         Rigney, C., Willens, S., Rubens, A., and W.\n                     Simpson,\
    \ \"Remote Authentication Dial In User\n                     Service (RADIUS)\"\
    , RFC 2865, June 2000.\n   [RFC3013]         Killalea, T., \"Recommended Internet\
    \ Service\n                     Provider Security Services and Procedures\", BCP\
    \ 46,\n                     RFC 3013, November 2000.\n   [RFC3164]         Lonvick,\
    \ C., \"The BSD Syslog Protocol\", RFC 3164,\n                     August 2001.\n\
    \   [RFC3174]         Eastlake, D. and P. Jones, \"US Secure Hash\n          \
    \           Algorithm 1 (SHA1)\", RFC 3174, September 2001.\n   [RFC3195]    \
    \     New, D. and M. Rose, \"Reliable Delivery for\n                     syslog\"\
    , RFC 3195, November 2001.\n   [RFC3309]         Stone, J., Stewart, R. and D.\
    \ Otis, \"Stream Control\n                     Transmission Protocol (SCTP) Checksum\
    \ Change\", RFC\n                     3309, September 2002.\n   [RFC3330]    \
    \     IANA, \"Special-Use IPv4 Addresses\", RFC 3330,\n                     September\
    \ 2002.\n   [RFC3360]         Floyd, S., \"Inappropriate TCP Resets Considered\n\
    \                     Harmful\", BCP 60, RFC 3360, August 2002.\n   [RFC3410]\
    \         Case, J., Mundy, R., Partain, D. and B. Stewart,\n                 \
    \    \"Introduction and Applicability Statements for\n                     Internet-Standard\
    \ Management Framework\", RFC 3410,\n                     December 2002.\n   [RFC3411]\
    \         Harrington, D., Presuhn, R., and B. Wijnen, \"An\n                 \
    \    Architecture for Describing Simple Network\n                     Management\
    \ Protocol (SNMP) Management Frameworks\",\n                     STD 62, RFC 3411,\
    \ December 2002.\n   [RFC3447]         Jonsson, J. and B. Kaliski, \"Public-Key\n\
    \                     Cryptography Standards (PKCS) #1: RSA Cryptography\n   \
    \                  Specifications Version 2.1\", RFC 3447, February\n        \
    \             2003.\n   [RFC3562]         Leech, M., \"Key Management Considerations\
    \ for the\n                     TCP MD5 Signature Option\", RFC 3562, July 2003.\n\
    \   [RFC3579]         Aboba, B. and P. Calhoun, \"RADIUS (Remote\n           \
    \          Authentication Dial In User Service) Support For\n                \
    \     Extensible Authentication Protocol (EAP)\", RFC\n                     3579,\
    \ September 2003.\n   [RFC3588]         Calhoun, P., Loughney, J., Guttman, E.,\
    \ Zorn, G.,\n                     and J. Arkko, \"Diameter Base Protocol\", RFC\
    \ 3588,\n                     September 2003.\n   [RFC3631]         Bellovin,\
    \ S., Schiller, J., and C. Kaufman, Eds.,\n                     \"Security Mechanisms\
    \ for the Internet\", RFC 3631,\n                     December 2003.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3766]         Orman, H. and P. Hoffman,\
    \ \"Determining Strengths\n                     For Public Keys Used For Exchanging\
    \ Symmetric\n                     Keys\", BCP 86, RFC 3766, April 2004.\n   [RFC3704]\
    \         Baker, F. and P. Savola, \"Ingress Filtering for\n                 \
    \    Multihomed Networks\", BCP 84, RFC 3704, March 2004.\n   [bmwg-acc-bench]\
    \  Poretsky, S., \"Framework for Accelerated Stress\n                     Benchmarking\"\
    , Work in Progress, October 2003.\n   [Schneier]        Schneier, B., \"Applied\
    \ Cryptography, 2nd Ed.,\n                     Publisher John Wiley & Sons, Inc.\"\
    , 1996.\n"
- title: Appendix A.  Requirement Profiles
  contents:
  - "Appendix A.  Requirement Profiles\n   This Appendix lists different profiles.\
    \  A profile is a list of list\n   of requirements that apply to a particular\
    \ class of devices.  The\n   minimum requirements profile applies to all devices.\n"
- title: A.1.  Minimum Requirements Profile
  contents:
  - "A.1.  Minimum Requirements Profile\n   The functionality listed here represents\
    \ a minimum set of\n   requirements to which managed infrastructure of large IP\
    \ networks\n   should adhere.\n   The minimal requirements profile addresses functionality\
    \ which will\n   provide reasonable capabilities to manage the devices in the\
    \ event of\n   attacks, simplify troubleshooting, keep track of events which affect\n\
    \   system integrity, help analyze causes of attacks, as well as provide\n   administrators\
    \  control over IP addresses and protocols to help\n   mitigate the most common\
    \ attacks and exploits.\n   o  Support Secure Channels For Management\n   o  Use\
    \ Protocols Subject To Open Review For Management\n   o  Use Cryptographic Algorithms\
    \ Subject To Open Review\n   o  Use Strong Cryptography\n   o  Allow Selection\
    \ of Cryptographic Parameters\n   o  Management Functions Should Have Increased\
    \ Priority\n   o  Support a 'Console' Interface\n   o  'Console' Communication\
    \ Profile Must Support Reset\n   o  'Console' Default Communication Profile Documented\n\
    \   o  'Console' Requires Minimal Functionality of Attached Devices.\n   o  Support\
    \ Separate Management Plane IP Interfaces\n   o  No Forwarding Between Management\
    \ Plane And Other Interfaces\n   o  'CLI' Provides Access to All Configuration\
    \ and Management\n      Functions\n   o  'CLI' Supports Scripting of Configuration\n\
    \   o  'CLI' Supports Management Over 'Slow' Links\n   o  Document Command Line\
    \ Interface\n   o  Support Software Installation\n   o  Support Remote Configuration\
    \ Backup\n   o  Support Remote Configuration Restore\n   o  Support Text Configuration\
    \ Files\n   o  Ability to Identify All Listening Services\n   o  Ability to Disable\
    \ Any and All Services\n   o  Ability to Control Service Bindings for Listening\
    \ Services\n   o  Ability to Control Service Source Addresses\n   o  Ability to\
    \ Filter Traffic\n   o  Ability to Filter Traffic TO the Device\n   o  Support\
    \ Route Filtering\n   o  Ability to Specify Filter Actions\n   o  Ability to Log\
    \ Filter Actions\n   o  Ability to Filter Without Significant Performance Degradation\n\
    \   o  Ability to Specify Filter Log Granularity\n   o  Ability to Filter on Protocols\n\
    \   o  Ability to Filter on Addresses\n   o  Ability to Filter on Protocol Header\
    \ Fields\n   o  Ability to Filter Inbound and Outbound\n   o  Packet Filtering\
    \ Counter Requirements\n   o  Ability to Display Filter Counters\n   o  Ability\
    \ to Display Filter Counters per Rule\n   o  Ability to Display Filter Counters\
    \ per Filter Application\n   o  Ability to Reset Filter Counters\n   o  Filter\
    \ Counters Must Be Accurate\n   o  Logging Facility Uses Protocols Subject To\
    \ Open Review\n   o  Logs Sent To Remote Servers\n   o  Ability to Log Locally\n\
    \   o  Ability to Maintain Accurate System Time\n   o  Display Timezone And UTC\
    \ Offset\n   o  Default Timezone Should Be UTC\n   o  Logs Must Be Timestamped\n\
    \   o  Logs Contain Untranslated IP Addresses\n   o  Logs Contain Records Of Security\
    \ Events\n   o  Authenticate All User Access\n   o  Support Authentication of\
    \ Individual Users\n   o  Support Simultaneous Connections\n   o  Ability to Disable\
    \ All Local Accounts\n   o  Support Centralized User Authentication Methods\n\
    \   o  Support Local User Authentication Method\n   o  Support Configuration of\
    \ Order of Authentication Methods\n   o  Ability To Authenticate Without Plaintext\
    \ Passwords\n   o  Passwords Must Be Explicitly Configured Prior To Use\n   o\
    \  No Default Passwords\n   o  Ability to Define Privilege Levels\n   o  Ability\
    \ to Assign Privilege Levels to Users\n   o  Default Privilege Level Must Be 'None'\n\
    \   o  Change in Privilege Levels Requires Re-Authentication\n   o  Support Recovery\
    \ Of Privileged Access\n   o  Logs Do Not Contain Passwords\n   o  Security Features\
    \ Must Not Cause Operational Problems\n   o  Security Features Should Have Minimal\
    \ Performance Impact\n   o  Identify Services That May Be Listening\n   o  Document\
    \ Service Defaults\n   o  Document Service Activation Process\n   o  Identify\
    \ Origin of IP Stack\n   o  Identify Origin of Operating System\n   o  Identify\
    \ Origin of IP Stack\n   o  Identify Origin of Operating System\n   o  Layer 2\
    \ Devices Must Meet Higher Layer Requirements\n"
- title: A.2.  Layer 3 Network Edge Profile
  contents:
  - "A.2.  Layer 3 Network Edge Profile\n   This section builds on the minimal requirements\
    \ listed in A.1 and\n   adds more stringent security functionality specific to\
    \ layer 3\n   devices which are part of the network edge.  The network edge is\n\
    \   typically where much of the filtering and traffic control policies\n   are\
    \ implemented.\n   An edge device is defined as a device that makes up the network\n\
    \   infrastructure and connects directly to customers or peers.  This\n   would\
    \ include routers connected to peering points, switches\n   connecting customer\
    \ hosts, etc.\n   o  Support Automatic Anti-spoofing for Single-Homed Networks\n\
    \   o  Support Automatic Discarding Of Bogons and Martians\n   o  Support Counters\
    \ For Dropped Packets\n   o  Support Rate Limiting\n   o  Support Directional\
    \ Application Of Rate Limiting Per Interface\n   o  Support Rate Limiting Based\
    \ on State\n   o  Ability to Filter Traffic THROUGH the Device\n"
- title: Appendix B.  Acknowledgments
  contents:
  - "Appendix B.  Acknowledgments\n   This document grew out of an internal security\
    \ requirements document\n   used by UUNET for testing devices that were being\
    \ proposed for\n   connection to the backbone.\n   The editor gratefully acknowledges\
    \ the contributions of:\n   o  Greg Sayadian, author of a predecessor of this\
    \ document.\n   o  Eric Brandwine, a major source of ideas/critiques.\n   o  The\
    \ MITRE Corporation for supporting continued development of this\n      document.\
    \  NOTE: The editor's affiliation with The MITRE\n      Corporation is provided\
    \ for identification purposes only, and is\n      not intended to convey or imply\
    \ MITRE's concurrence with, or\n      support for, the positions, opinions or\
    \ viewpoints expressed by\n      the editor.\n   o  The former UUNET network security\
    \ team: Jared Allison, Eric\n      Brandwine, Clarissa Cook, Dave Garn, Tae Kim,\
    \ Kent King, Neil\n      Kirr, Mark Krause, Michael Lamoureux, Maureen Lee, Todd\
    \ MacDermid,\n      Chris Morrow, Alan Pitts, Greg Sayadian, Bruce Snow, Robert\
    \ Stone,\n      Anne Williams, Pete White.\n   o  Others who have provided significant\
    \ feedback at various stages of\n      the life of this document are: Ran Atkinson,\
    \ Fred Baker, Steve\n      Bellovin, David L. Black, Michael H. Behringer, Matt\
    \ Bishop, Scott\n      Blake, Randy Bush, Pat Cain, Ross Callon, Steven Christey,\
    \ Owen\n      Delong, Sean Donelan, Robert Elmore, Barbara Fraser, Barry Greene,\n\
    \      Jeffrey Haas, David Harrington, Dan Hollis, Jeffrey Hutzelman,\n      Merike\
    \ Kaeo, James Ko, John Kristoff, Chris Lonvick, Chris\n      Liljenstolpe, James\
    \ W. Laferriere, Jared Mauch, Perry E. Metzger,\n      Mike O'Connor, Alan Paller,\
    \ Rob Pickering, Pekka Savola, Gregg\n      Schudel, Juergen Schoenwaelder, Don\
    \ Smith, Rodney Thayer, David\n      Walters, Joel N. Weber II, Russ White, Anthony\
    \ Williams, Neal\n      Ziring.\n   o  Madge B. Harrison and Patricia L. Jones,\
    \ technical writing review.\n   o  This listing is intended to acknowledge contributions,\
    \ not to\n      imply that the individual or organizations approve the content\
    \ of\n      this document.\n   o  Apologies to those who commented on/contributed\
    \ to the document\n      and were not listed.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   George M. Jones, Editor\n   The MITRE Corporation\n   7515\
    \ Colshire Drive, M/S WEST\n   McLean, Virginia  22102-7508\n   U.S.A.\n   Phone:\
    \ +1 703 488 9740\n   EMail: gmj3871@pobox.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78, and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
