- contents:
  - '      Network Configuration Protocol (NETCONF) Base Notifications

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The Network Configuration Protocol (NETCONF) provides mechanisms
    to\n   manipulate configuration datastores.  However, client applications\n   often
    need to be aware of common events, such as a change in NETCONF\n   server capabilities,
    that may impact management applications.\n   Standard mechanisms are needed to
    support the monitoring of the base\n   system events within the NETCONF server.
    \ This document defines a\n   YANG module that allows a NETCONF client to receive
    notifications for\n   some common system events.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6470.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Terminology ................................................2\n   2.
    YANG Module for NETCONF Base Notifications ......................3\n      2.1.
    Overview ...................................................3\n      2.2. Definitions
    ................................................4\n   3. IANA Considerations ............................................11\n
    \  4. Security Considerations ........................................12\n   5.
    Acknowledgements ...............................................14\n   6. Normative
    References ...........................................14\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The NETCONF protocol [RFC6241] provides mechanisms to manipulate\n
    \  configuration datastores.  However, client applications often need to\n   be
    aware of common events, such as a change in NETCONF server\n   capabilities, that
    may impact management applications.  Standard\n   mechanisms are needed to support
    the monitoring of the base system\n   events within the NETCONF server.  This
    document defines a YANG\n   module [RFC6020] that allows a NETCONF client to receive\n
    \  notifications for some common system events.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n
      \  The following terms are defined in [RFC6241]:\n   o  client\n   o  datastore\n
      \  o  protocol operation\n   o  server\n   The following terms are defined in
      [RFC5277]:\n   o  event\n   o  stream\n   o  subscription\n   The following
      term is defined in [RFC6020]:\n   o  data node\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - '2.  YANG Module for NETCONF Base Notifications

    '
  - contents:
    - "2.1.  Overview\n   The YANG module defined within this document specifies a
      small number\n   of event notification messages for use within the 'NETCONF'
      stream,\n   and accessible to clients via the subscription mechanism described
      in\n   [RFC5277].  This module imports data types from the 'ietf-netconf'\n
      \  module defined in [RFC6241] and 'ietf-inet-types' module defined in\n   [RFC6021].\n
      \  These notifications pertain to configuration and monitoring portions\n   of
      the managed system, not the entire system.  A server MUST report\n   events
      that are directly related to the NETCONF protocol.  A server\n   MAY report
      events for non-NETCONF management sessions, using the\n   'session-id' value
      of zero.\n   This module defines the following notifications for the 'NETCONF'\n
      \  stream to notify a client application that the NETCONF server state\n   has
      changed:\n   netconf-config-change:\n      Generated when the NETCONF server
      detects that the <running> or\n      <startup> configuration datastore has been
      changed by a management\n      session.  The notification summarizes the edits
      that have been\n      detected.\n   netconf-capability-change:\n      Generated
      when the NETCONF server detects that the server\n      capabilities have changed.
      \ Indicates which capabilities have been\n      added, deleted, and/or modified.
      \ The manner in which a server\n      capability is changed is outside the scope
      of this document.\n   netconf-session-start:\n      Generated when a NETCONF
      server detects that a NETCONF session has\n      started.  A server MAY generate
      this event for non-NETCONF\n      management sessions.  Indicates the identity
      of the user that\n      started the session.\n   netconf-session-end:\n      Generated
      when a NETCONF server detects that a NETCONF session has\n      terminated.
      \ A server MAY optionally generate this event for\n      non-NETCONF management
      sessions.  Indicates the identity of the\n      user that owned the session,
      and why the session was terminated.\n   netconf-confirmed-commit:\n      Generated
      when a NETCONF server detects that a confirmed-commit\n      event has occurred.
      \ Indicates the event and the current state of\n      the confirmed-commit procedure
      in progress.\n"
    title: 2.1.  Overview
  - contents:
    - "2.2.  Definitions\n   <CODE BEGINS> file=\"ietf-netconf-notifications@2011-12-09.yang\"\n
      \  module ietf-netconf-notifications {\n      namespace\n        \"urn:ietf:params:xml:ns:yang:ietf-netconf-notifications\";\n
      \     prefix ncn;\n      import ietf-inet-types { prefix inet; }\n      import
      ietf-netconf { prefix nc; }\n      organization\n        \"IETF NETCONF (Network
      Configuration Protocol) Working Group\";\n      contact\n        \"WG Web:   <http://tools.ietf.org/wg/netconf/>\n
      \        WG List:  <mailto:netconf@ietf.org>\n         WG Chair: Bert Wijnen\n
      \                  <mailto:bertietf@bwijnen.net>\n         WG Chair: Mehmet
      Ersue\n                   <mailto:mehmet.ersue@nsn.com>\n         Editor:   Andy
      Bierman\n                   <mailto:andy@netconfcentral.org>\";\n      description\n
      \       \"This module defines a YANG data model for use with the\n         NETCONF
      protocol that allows the NETCONF client to\n         receive common NETCONF
      base event notifications.\n         Copyright (c) 2012 IETF Trust and the persons
      identified as\n         the document authors.  All rights reserved.\n         Redistribution
      and use in source and binary forms, with or\n         without modification,
      is permitted pursuant to, and subject\n         to the license terms contained
      in, the Simplified BSD License\n         set forth in Section 4.c of the IETF
      Trust's Legal Provisions\n         Relating to IETF Documents\n         (http://trustee.ietf.org/license-info).\n
      \        This version of this YANG module is part of RFC 6470; see\n         the
      RFC itself for full legal notices.\";\n      revision \"2012-02-06\" {\n        description\n
      \         \"Initial version.\";\n        reference\n          \"RFC 6470: NETCONF
      Base Notifications\";\n      }\n     grouping common-session-parms {\n       description\n
      \        \"Common session parameters to identify a\n          management session.\";\n
      \      leaf username {\n         type string;\n         mandatory true;\n         description\n
      \          \"Name of the user for the session.\";\n       }\n       leaf session-id
      {\n         type nc:session-id-or-zero-type;\n         mandatory true;\n         description\n
      \          \"Identifier of the session.\n            A NETCONF session MUST
      be identified by a non-zero value.\n            A non-NETCONF session MAY be
      identified by the value zero.\";\n       }\n       leaf source-host {\n         type
      inet:ip-address;\n         description\n           \"Address of the remote host
      for the session.\";\n       }\n     }\n      grouping changed-by-parms {\n       description\n
      \        \"Common parameters to identify the source\n          of a change event,
      such as a configuration\n          or capability change.\";\n       container
      changed-by {\n         description\n           \"Indicates the source of the
      change.\n            If caused by internal action, then the\n            empty
      leaf 'server' will be present.\n            If caused by a management session,
      then\n            the name, remote host address, and session ID\n            of
      the session that made the change will be reported.\";\n         choice server-or-user
      {\n           mandatory true;\n           leaf server {\n             type empty;\n
      \            description\n               \"If present, the change was caused\n
      \               by the server.\";\n           }\n           case by-user {\n
      \            uses common-session-parms;\n           }\n         } // choice
      server-or-user\n       } // container changed-by-parms\n     }\n     notification
      netconf-config-change {\n       description\n         \"Generated when the NETCONF
      server detects that the\n          <running> or <startup> configuration datastore\n
      \         has been changed by a management session.\n          The notification
      summarizes the edits that\n          have been detected.\n          The server
      MAY choose to also generate this\n          notification while loading a datastore
      during the\n          boot process for the device.\";\n       uses changed-by-parms;\n
      \      leaf datastore {\n         type enumeration {\n           enum running
      {\n             description \"The <running> datastore has changed.\";\n           }\n
      \          enum startup {\n             description \"The <startup> datastore
      has changed\";\n           }\n         }\n         default \"running\";\n         description\n
      \          \"Indicates which configuration datastore has changed.\";\n       }\n
      \      list edit {\n         description\n           \"An edit record SHOULD
      be present for each distinct\n            edit operation that the server has
      detected on\n            the target datastore.  This list MAY be omitted\n            if
      the detailed edit operations are not known.\n            The server MAY report
      entries in this list for\n            changes not made by a NETCONF session
      (e.g., CLI).\";\n         leaf target {\n           type instance-identifier;\n
      \          description\n             \"Topmost node associated with the configuration
      change.\n              A server SHOULD set this object to the node within\n
      \             the datastore that is being altered.  A server MAY\n              set
      this object to one of the ancestors of the actual\n              node that was
      changed, or omit this object, if the\n              exact node is not known.\";\n
      \        }\n         leaf operation {\n           type nc:edit-operation-type;\n
      \          description\n             \"Type of edit operation performed.\n              A
      server MUST set this object to the NETCONF edit\n              operation performed
      on the target datastore.\";\n         }\n       } // list edit\n     } // notification
      netconf-config-change\n     notification netconf-capability-change {\n       description\n
      \        \"Generated when the NETCONF server detects that\n          the server
      capabilities have changed.\n          Indicates which capabilities have been
      added, deleted,\n          and/or modified.  The manner in which a server\n
      \         capability is changed is outside the scope of this\n          document.\";\n
      \      uses changed-by-parms;\n       leaf-list added-capability {\n         type
      inet:uri;\n         description\n           \"List of capabilities that have
      just been added.\";\n       }\n       leaf-list deleted-capability {\n         type
      inet:uri;\n         description\n           \"List of capabilities that have
      just been deleted.\";\n       }\n       leaf-list modified-capability {\n         type
      inet:uri;\n         description\n           \"List of capabilities that have
      just been modified.\n            A capability is considered to be modified if
      the\n            base URI for the capability has not changed, but\n            one
      or more of the parameters encoded at the end of\n            the capability
      URI have changed.\n            The new modified value of the complete URI is
      returned.\";\n       }\n     } // notification netconf-capability-change\n     notification
      netconf-session-start {\n       description\n         \"Generated when a NETCONF
      server detects that a\n          NETCONF session has started.  A server MAY
      generate\n          this event for non-NETCONF management sessions.\n          Indicates
      the identity of the user that started\n          the session.\";\n       uses
      common-session-parms;\n     } // notification netconf-session-start\n     notification
      netconf-session-end {\n       description\n         \"Generated when a NETCONF
      server detects that a\n          NETCONF session has terminated.\n          A
      server MAY optionally generate this event for\n          non-NETCONF management
      sessions.  Indicates the\n          identity of the user that owned the session,\n
      \         and why the session was terminated.\";\n       uses common-session-parms;\n
      \      leaf killed-by {\n         when \"../termination-reason = 'killed'\";\n
      \        type nc:session-id-type;\n         description\n           \"The ID
      of the session that directly caused this session\n            to be abnormally
      terminated.  If this session was abnormally\n            terminated by a non-NETCONF
      session unknown to the server,\n            then this leaf will not be present.\";\n
      \      }\n       leaf termination-reason {\n         type enumeration {\n           enum
      \"closed\" {\n             description\n               \"The session was terminated
      by the client in normal\n                fashion, e.g., by the NETCONF <close-session>\n
      \               protocol operation.\";\n           }\n           enum \"killed\"
      {\n             description\n               \"The session was terminated in
      abnormal\n                fashion, e.g., by the NETCONF <kill-session>\n                protocol
      operation.\";\n           }\n           enum \"dropped\" {\n             description\n
      \              \"The session was terminated because the transport layer\n                connection
      was unexpectedly closed.\";\n           }\n           enum \"timeout\" {\n             description\n
      \              \"The session was terminated because of inactivity,\n                e.g.,
      waiting for the <hello> message or <rpc>\n                messages.\";\n           }\n
      \          enum \"bad-hello\" {\n             description\n               \"The
      client's <hello> message was invalid.\";\n           }\n           enum \"other\"
      {\n             description\n               \"The session was terminated for
      some other reason.\";\n           }\n         }\n         mandatory true;\n
      \        description\n           \"Reason the session was terminated.\";\n       }\n
      \    } // notification netconf-session-end\n     notification netconf-confirmed-commit
      {\n       description\n         \"Generated when a NETCONF server detects that
      a\n          confirmed-commit event has occurred.  Indicates the event\n          and
      the current state of the confirmed-commit procedure\n          in progress.\";\n
      \      reference\n         \"RFC 6241, Section 8.4\";\n       uses common-session-parms
      {\n         when \"../confirm-event != 'timeout'\";\n       }\n       leaf confirm-event
      {\n         type enumeration {\n           enum \"start\" {\n             description\n
      \              \"The confirmed-commit procedure has started.\";\n           }\n
      \          enum \"cancel\" {\n             description\n               \"The
      confirmed-commit procedure has been canceled,\n                e.g., due to
      the session being terminated, or an\n                explicit <cancel-commit>
      operation.\";\n           }\n           enum \"timeout\" {\n             description\n
      \              \"The confirmed-commit procedure has been canceled\n                due
      to the confirm-timeout interval expiring.\n                The common session
      parameters will not be present\n                in this sub-mode.\";\n           }\n
      \          enum \"extend\" {\n             description\n               \"The
      confirmed-commit timeout has been extended,\n                e.g., by a new
      <confirmed-commit> operation.\";\n           }\n           enum \"complete\"
      {\n             description\n               \"The confirmed-commit procedure
      has been completed.\";\n           }\n         }\n         mandatory true;\n
      \        description\n           \"Indicates the event that caused the notification.\";\n
      \      }\n       leaf timeout {\n         when\n           \"../confirm-event
      = 'start' or ../confirm-event = 'extend'\";\n         type uint32;\n         units
      \"seconds\";\n         description\n           \"The configured timeout value
      if the event type\n            is 'start' or 'extend'.  This value represents\n
      \           the approximate number of seconds from the event\n            time
      when the 'timeout' event might occur.\";\n       }\n     } // notification netconf-confirmed-commit\n
      \  }\n   <CODE ENDS>\n"
    title: 2.2.  Definitions
  title: 2.  YANG Module for NETCONF Base Notifications
- contents:
  - "3.  IANA Considerations\n   This document registers one XML namespace URN in
    the 'IETF XML\n   registry', following the format defined in [RFC3688].\n      URI:
    urn:ietf:params:xml:ns:yang:ietf-netconf-notifications\n   Registrant Contact:
    The IESG.\n   XML: N/A; the requested URI is an XML namespace.\n   This document
    registers one module name in the 'YANG Module Names'\n   registry, defined in
    [RFC6020].\n      name: ietf-netconf-notifications\n      prefix: ncn\n      namespace:
    urn:ietf:params:xml:ns:yang:ietf-netconf-notifications\n      RFC: 6470\n"
  title: 3.  IANA Considerations
- contents:
  - "4.  Security Considerations\n   The YANG module defined in this memo is designed
    to be accessed via\n   the NETCONF protocol [RFC6241].  The lowest NETCONF layer
    is the\n   secure transport layer and the mandatory-to-implement secure\n   transport
    is SSH, defined in [RFC6242].\n   Some of the readable data nodes in this YANG
    module may be considered\n   sensitive or vulnerable in some network environments.
    \ It is thus\n   important to control read access (e.g., via get, get-config,
    or\n   notification) to these data nodes.  These are the subtrees and data\n   nodes
    and their sensitivity/vulnerability:\n   /netconf-config-change:\n      Event
    type itself indicates that the system configuration has\n      changed.  This
    event could alert an attacker that specific\n      configuration data nodes have
    been altered.\n   /netconf-config-change/changed-by:\n      Indicates whether
    the server or a specific user management session\n      made the configuration
    change.  Identifies the user name,\n      session-id, and source host address
    associated with the\n      configuration change, if any.\n   /netconf-config-change/datastore:\n
    \     Indicates which datastore has been changed.  This data can be used\n      to
    determine if the non-volatile startup configuration data has\n      been changed.\n
    \  /netconf-config-change/edit:\n      Identifies the specific edit operations
    and specific datastore\n      subtree(s) that have changed.  This data could be
    used to\n      determine if specific server vulnerabilities may now be present.\n
    \  /netconf-capability-change:\n      Event type itself indicates that the system
    capabilities have\n      changed, and may now be vulnerable to unspecified attacks.
    \ An\n      attacker will likely need to understand the content represented by\n
    \     specific capability URI strings.  For example, knowing that a\n      packet
    capture monitoring capability has been added to the system\n      might help an
    attacker identify the device for possible\n      unauthorized eavesdropping.\n
    \  /netconf-capability-change/changed-by:\n      Indicates whether the server
    or a specific user management session\n      made the capability change.  Identifies
    the user name, session-id,\n      and source host address associated with the
    capability change, if\n      any.\n   /netconf-capability-change/added-capability:\n
    \     Indicates the specific capability URIs that have been added.  This\n      data
    could be used to determine if specific server vulnerabilities\n      may now be
    present.\n   /netconf-capability-change/deleted-capability:\n      Indicates the
    specific capability URIs that have been deleted.\n      This data could be used
    to determine if specific server\n      vulnerabilities may now be present.\n   /netconf-capability-change/modified-capability:\n
    \     Indicates the specific capability URIs that have been modified.\n      This
    data could be used to determine if specific server\n      vulnerabilities may
    now be present.\n   /netconf-session-start:\n      Event type itself indicates
    that a NETCONF or other management\n      session may start altering the device
    configuration and/or state.\n      It may be possible for an attacker to alter
    the configuration by\n      somehow taking advantage of another session concurrently
    editing\n      an unlocked datastore.\n   /netconf-session-start/username:\n      Indicates
    the user name associated with the session.\n   /netconf-session-start/source-host:\n
    \     Indicates the source host address associated with the session.\n   /netconf-session-end:\n
    \     Event type itself indicates that a NETCONF or other management\n      session
    may be finished altering the device configuration.  This\n      event could alert
    an attacker that a datastore may have been\n      altered.\n   /netconf-session-end/username:\n
    \     Indicates the user name associated with the session.\n   /netconf-session-end/source-host:\n
    \     Indicates the source host address associated with the session.\n   /netconf-confirmed-commit:\n
    \     Event type itself indicates that the <running> datastore may have\n      changed.
    \ This event could alert an attacker that the device\n      behavior has changed.\n
    \  /netconf-confirmed-commit/username:\n      Indicates the user name associated
    with the session.\n   /netconf-confirmed-commit/source-host:\n      Indicates
    the source host address associated with the session.\n   /netconf-confirmed-commit/confirm-event:\n
    \     Indicates the specific confirmed-commit state change that\n      occurred.
    \ A value of 'complete' probably indicates that the\n      <running> datastore
    has changed.\n   /netconf-confirmed-commit/timeout:\n      Indicates the number
    of seconds in the future when the <running>\n      datastore may change, due to
    the server reverting to an older\n      configuration.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  Acknowledgements\n   Thanks to Martin Bjorklund, Juergen Schoenwaelder, Kent
    Watsen, and\n   many other members of the NETCONF WG for providing important input
    to\n   this document.\n"
  title: 5.  Acknowledgements
- contents:
  - "6.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January
    2004.\n   [RFC5277]  Chisholm, S. and H. Trevino, \"NETCONF Event\n              Notifications\",
    RFC 5277, July 2008.\n   [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling
    Language for\n              the Network Configuration Protocol (NETCONF)\", RFC
    6020,\n              October 2010.\n   [RFC6021]  Schoenwaelder, J., Ed., \"Common
    YANG Data Types\",\n              RFC 6021, October 2010.\n   [RFC6241]  Enns,
    R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and A. Bierman,
    Ed., \"Network Configuration Protocol\n              (NETCONF)\", RFC 6241, June
    2011.\n   [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n
    \             Shell (SSH)\", RFC 6242, June 2011.\n"
  title: 6.  Normative References
- contents:
  - "Author's Address\n   Andy Bierman\n   Brocade\n   EMail: andy@netconfcentral.org\n"
  title: Author's Address
