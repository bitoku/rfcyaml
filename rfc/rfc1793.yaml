- title: __initial_text__
  contents:
  - '               Extending OSPF to Support Demand Circuits

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines enhancements to the OSPF protocol that allow\n\
    \   efficient operation over \"demand circuits\". Demand circuits are\n   network\
    \ segments whose costs vary with usage; charges can be based\n   both on connect\
    \ time and on bytes/packets transmitted. Examples of\n   demand circuits include\
    \ ISDN circuits, X.25 SVCs, and dial-up lines.\n   The periodic nature of OSPF\
    \ routing traffic has until now required a\n   demand circuit's underlying data-link\
    \ connection to be constantly\n   open, resulting in unwanted usage charges. With\
    \ the modifications\n   described herein, OSPF Hellos and the refresh of OSPF\
    \ routing\n   information are suppressed on demand circuits, allowing the\n  \
    \ underlying data-link connections to be closed when not carrying\n   application\
    \ traffic.\n   Demand circuits and regular network segments (e.g., leased lines)\
    \ are\n   allowed to be combined in any manner. In other words, there are no\n\
    \   topological restrictions on the demand circuit support. However,\n   while\
    \ any OSPF network segment can be defined as a demand circuit,\n   only point-to-point\
    \ networks receive the full benefit. When broadcast\n   and NBMA networks are\
    \ declared demand circuits, routing update\n   traffic is reduced but the periodic\
    \ sending of Hellos is not, which\n   in effect still requires that the data-link\
    \ connections remain\n   constantly open.\n   While mainly intended for use with\
    \ cost-conscious network links such\n   as ISDN, X.25 and dial-up, the modifications\
    \ in this memo may also\n   prove useful over bandwidth-limited network links\
    \ such as slow-speed\n   leased lines and packet radio.\n   The enhancements defined\
    \ in this memo are backward-compatible with\n   the OSPF specification defined\
    \ in [1], and with the OSPF extensions\n   defined in [3] (OSPF NSSA areas), [4]\
    \ (MOSPF) and [8] (OSPF Point-\n   to-MultiPoint Interface).\n   This memo provides\
    \ functionality similar to that specified for RIP in\n   [2], with the main difference\
    \ being the way the two proposals handle\n   oversubscription (see Sections 4.3\
    \ and 7 below).  However, because\n   OSPF employs link-state routing technology\
    \ as opposed to RIP's\n   Distance Vector base, the mechanisms used to achieve\
    \ the demand\n   circuit functionality are quite different.\n   Please send comments\
    \ to ospf@gated.cornell.edu.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The author would like to acknowledge the helpful comments\
    \ of Fred\n   Baker, Rob Coltun, Dawn Li, Gerry Meyer, Tom Pusateri and Zhaohui\n\
    \   Zhang. This memo is a product of the OSPF Working Group.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.      Model for demand circuits ..............................\
    \ 3\n    2.      Modifications to all OSPF routers ...................... 4\n\
    \    2.1     The OSPF Options field ................................. 4\n    2.2\
    \     The LS age field ....................................... 5\n    2.3    \
    \ Removing stale DoNotAge LSAs ........................... 6\n    2.4     A change\
    \ to the flooding algorithm ..................... 6\n    2.5     Interoperability\
    \ with unmodified OSPF routers .......... 7\n    2.5.1   Indicating across area\
    \ boundaries ...................... 8\n    2.5.1.1 Limiting indication-LSA origination\
    \ .................... 9\n    3.      Modifications to demand circuit endpoints\
    \ ............. 10\n    3.1     Interface State machine modifications .................\
    \ 10\n    3.2     Sending and Receiving OSPF Hellos ..................... 11\n\
    \    3.2.1   Negotiating Hello suppression ......................... 11\n    3.2.2\
    \   Neighbor state machine modifications .................. 12\n    3.3     Flooding\
    \ over demand circuits ......................... 12\n    3.4     Virtual link\
    \ support .................................. 13\n    3.5     Point-to-MultiPoint\
    \ Interface support ................. 14\n    4.      Examples ..............................................\
    \ 15\n    4.1     Example 1: Sole connectivity through demand circuits .. 15\n\
    \    4.2     Example 2: Demand and non-demand circuits in parallel . 19\n    4.3\
    \     Example 3: Operation when oversubscribed .............. 23\n    5.     \
    \ Topology recommendations .............................. 25\n    6.      Lost\
    \ functionality .................................... 25\n    7.      Future work:\
    \ Oversubscription ......................... 26\n    8.      Unsupported capabilities\
    \ .............................. 28\n    A.      Format of the OSPF Options field\
    \ ...................... 30\n    B.      Configurable Parameters ...............................\
    \ 31\n    C.      Architectural Constants ............................... 31\n\
    \            References ............................................ 32\n    \
    \        Security Considerations ............................... 32\n        \
    \    Author's Address ...................................... 32\n"
- title: 1.  Model for demand circuits
  contents:
  - "1.  Model for demand circuits\n   In this memo, demand circuits refer to those\
    \ network segments whose\n   cost depends on either connect time and/or usage\
    \ (expressed in terms\n   of bytes or packets). Examples include ISDN circuits\
    \ and X.25 SVCs.\n   On these circuits, it is desirable for a routing protocol\
    \ to send as\n   little routing traffic as possible. In fact, when there is no\
    \ change\n   in network topology it is desirable for a routing protocol to send\
    \ no\n   routing traffic at all; this allows the underlying data-link\n   connection\
    \ to be closed when not needed for application data traffic.\n   The model used\
    \ within this memo for the maintenance of demand\n   circuits is as follows. If\
    \ there is no data to send (either routing\n   protocol traffic or application\
    \ data), the data-link connection\n   remains closed.  As soon as there is data\
    \ to be sent, an attempt to\n   open the data-link connection is made (e.g., an\
    \ ISDN or X.25 call is\n   placed). When/if the data-link connection is established,\
    \ the data is\n   sent, and the connection stays open until some period of time\
    \ elapses\n   without more data to send. At this point the data-link connection\
    \ is\n   again closed, in order to conserve cost and resources (see Section 1\n\
    \   of [2]).\n   The \"Presumption of Reachability\" described in [2] is also\
    \ used.\n   Even though a circuit's data-link connection may be closed at any\n\
    \   particular time, it is assumed by the routing layer (i.e., OSPF) that\n  \
    \ the circuit is available unless other information, such as a\n   discouraging\
    \ diagnostic code resulting from an attempted data-link\n   connection, is present.\n\
    \   It may be possible that a data-link connection cannot be established\n   due\
    \ to resource shortages. For example, a router with a single basic\n   rate ISDN\
    \ interface cannot open more than two simultaneous ISDN\n   data-link connections\
    \ (one for each B channel), and limitations in\n   interface firmware and/or switch\
    \ capacity may limit the number of\n   X.25 SVCs simultaneously supported. When\
    \ a router cannot\n   simultaneously open all of its circuits' underlying data-link\n\
    \   connections due to resource limitations, we say that the router is\n   oversubscribed.\
    \ In these cases, datagrams to be forwarded out the\n   (temporarily unopenable)\
    \ data-link connections are discarded, instead\n   of being queued. Note also\
    \ that this temporary inability to open\n   data-link connections due to oversubscription\
    \ is NOT reported by the\n   OSPF routing system as unreachability; see Section\
    \ 4.3 for more\n   information.\n   Either end of a demand circuit may attempt\
    \ to open the data-link\n   connection. When both ends attempt to open the connection\n\
    \   simultaneously, there is the possibility of call collision. Not all\n   data-links\
    \ specify how call collisions are handled. Also, while OSPF\n   requires that\
    \ all periodic timers be randomized to avoid\n   synchronization (see Section\
    \ 4.4 of [1]), if call attempts are\n   strictly data-driven there may still be\
    \ insufficient spacing of call\n   attempts to avoid collisions on some data-links.\
    \ For these reasons,\n   for those data-links without collision detection/avoidance\
    \ support,\n   it is suggested (but not specified herein) that an exponential\n\
    \   backoff scheme for call retries be employed at the data-link layer.\n   Besides\
    \ helping with call collisions, such a scheme could minimize\n   charges (if they\
    \ exist) for failed call attempts.\n   As a result of the physical implementation\
    \ of some demand circuits,\n   only one end of the circuit may be capable of opening\
    \ the data-link\n   connection. For example, some async modems can initiate calls,\
    \ but\n   cannot accept incoming calls. In these cases, since connection\n   initiation\
    \ in this memo is data-driven, care must be taken to ensure\n   that the initiating\
    \ application party is located at the calling end\n   of the demand circuit.\n"
- title: 2.  Modifications to all OSPF routers
  contents:
  - "2.  Modifications to all OSPF routers\n   While most of the modifications to\
    \ support demand circuits are\n   isolated to the demand circuit endpoints (see\
    \ Section 3), there are\n   changes required of all OSPF routers. These changes\
    \ are described in\n   the subsections below.\n   2.1.  The OSPF Options field\n\
    \      A new bit is added to the OSPF Options field to support the demand\n  \
    \    circuit extensions. This bit is called the \"DC-bit\". The resulting\n  \
    \    format of the Options field is described in Appendix A.\n      A router implementing\
    \ the functionality described in Section 2 of\n      this memo sets the DC-bit\
    \ in the Options field of all LSAs that it\n      originates. This is regardless\
    \ of the LSAs' LS type, and also\n      regardless of whether the router implements\
    \ the more substantial\n      modifications required of demand circuit endpoints\
    \ (see Section\n      3).  Setting the DC-bit in self-originated LSAs tells the\
    \ rest of\n      the routing domain that the router can correctly process DoNotAge\n\
    \      LSAs (see Sections 2.2, 2.3 and 2.5).\n      There is a single exception\
    \ to the above rule. A router\n      implementing Section 2 of this memo may sometimes\
    \ originate an\n      \"indication-LSA\"; these LSAs always have the DC-bit clear.\n\
    \      Indication-LSAs are used to convey across area boundaries the\n      existence\
    \ of routers incapable of DoNotAge processing; see Section\n      2.5.1 for details.\n\
    \   2.2.  The LS age field\n      The semantics of the LSA's LS age field are\
    \ changed, allowing the\n      high bit of the LS age field to be set. This bit\
    \ is called\n      \"DoNotAge\"; see Appendix C for its formal definition. LSAs\
    \ whose\n      LS age field have the DoNotAge bit set are not aged while they\
    \ are\n      held in the link state database, which means that they do not have\n\
    \      to be refreshed every LSRefreshInterval as is done with all other\n   \
    \   OSPF LSAs.\n      By convention, in the rest of this memo we will express\
    \ LS age\n      fields having the DoNotAge bit set as \"DoNotAge+x\", while an\
    \ LS\n      age expressed as just \"x\" is assumed to not have the DoNotAge bit\n\
    \      set. LSAs having DoNotAge set are also sometimes referred to as\n     \
    \ \"DoNotAge LSAs\".\n      When comparing two LSA instances to see which one\
    \ is most recent,\n      the two LSAs' LS age fields are compared whenever the\
    \ LS sequence\n      numbers and LS checksums are found identical (see Section\
    \ 13.1 of\n      [1]). Before comparing, the LS age fields must have their DoNotAge\n\
    \      bits masked off.  For example, in determining which LSA is more\n     \
    \ recent, LS ages of 1 and DoNotAge+1 are considered equivalent; an\n      LSA\
    \ flooded with LS age of 1 may be acknowledged with a Link State\n      Acknowledgement\
    \ listing an LS age of DoNotAge+1, or vice versa. In\n      particular, DoNotAge+MaxAge\
    \ is equivalent to MaxAge; however for\n      backward-compatibility the MaxAge\
    \ form should always be used when\n      flushing LSAs from the routing domain\
    \ (see Section 14.1 of [1]).\n      Thus, the set of allowable values for the\
    \ LS age field fall into\n      the two ranges: 0 through MaxAge and DoNotAge\
    \ through\n      DoNotAge+MaxAge.  (Previously the LS age field could not exceed\n\
    \      the value of MaxAge.) Any LS age field not falling into these two\n   \
    \   ranges should be considered to be equal to MaxAge.\n      When an LSA is flooded\
    \ out an interface, the constant\n      InfTransDelay is added to the LSA's LS\
    \ age field. This happens\n      even if the DoNotAge bit is set; in this case\
    \ the LS age field is\n      not allowed to exceed DoNotAge+MaxAge. If the LS\
    \ age field reaches\n      DoNotAge+MaxAge during flooding, the LSA is flushed\
    \ from the\n      routing domain. This preserves the protection in [1] afforded\n\
    \      against flooding loops.\n      The LS age field is not checksum protected.\
    \ Errors in a router's\n      memory may mistakenly set an LSA's DoNotAge bit,\
    \ stopping the\n      aging of the LSA. However, a router should note that its\
    \ own\n      self-originated LSAs should never have the DoNotAge bit set in its\n\
    \      own database. This means that in any case the router's self-\n      originated\
    \ LSAs will be refreshed every LSRefreshInterval.  As\n      this refresh is flooded\
    \ throughout the OSPF routing domain, it\n      will replace any LSA copies in\
    \ other routers' databases whose\n      DoNotAge bits were mistakenly set.\n \
    \  2.3.  Removing stale DoNotAge LSAs\n      Because LSAs with the DoNotAge bit\
    \ set are never aged, they can\n      stay in the link state database even when\
    \ the originator of the\n      LSA no longer exists. To ensure that these LSAs\
    \ are eventually\n      flushed from the routing domain, and that the size of\
    \ the link\n      state database doesn't grow without bound, routers are required\
    \ to\n      flush a DoNotAge LSA if BOTH of the following conditions are met:\n\
    \        (1) The LSA has been in the router's database for at least\n        \
    \    MaxAge seconds.\n        (2) The originator of the LSA has been unreachable\
    \ (according to\n            the routing calculations specified by Section 16\
    \ of [1]) for\n            at least MaxAge seconds.\n      For an example, see\
    \ Time T8 in the example of Section 4.1. Note\n      that the above functionality\
    \ is an exception to the general OSPF\n      rule that a router can only flush\
    \ (i.e., prematurely age; see\n      Section 14.1 of [1]) its own self-originated\
    \ LSAs. The above\n      functionality pertains only to DoNotAge LSAs. An LSA\
    \ having\n      DoNotAge clear still can be prematurely aged only by its\n   \
    \   originator; otherwise, the LSA must age naturally to MaxAge before\n     \
    \ being removed from the routing domain.\n      An interval as long as MaxAge\
    \ has been chosen to avoid any\n      possibility of thrashing (i.e., flushing\
    \ an LSA only to have it\n      reoriginated soon afterwards). Note that by the\
    \ above rules, a\n      DoNotAge LSA will be removed from the routing domain no\
    \ faster\n      than if it were being aged naturally (i.e., if DoNotAge were not\n\
    \      set).\n"
- title: 2.4.  A change to the flooding algorithm
  contents:
  - "2.4.  A change to the flooding algorithm\n      The following change is made\
    \ to the OSPF flooding algorithm.  When\n      a Link State Update Packet is received\
    \ that contains an LSA\n      instance which is actually less recent than the\
    \ the router's\n      current database copy, the router must now process the LSA\
    \ as\n      follows (modifying Step 8 of Section 13 in [1] accordingly):\n   \
    \     o   If the database copy has LS age equal to MaxAge and LS\n           \
    \ sequence number equal to MaxSequenceNumber, simply discard\n            the\
    \ received LSA without acknowledging it. (In this case,\n            the LSA's\
    \ sequence number is wrapping, and the\n            MaxSequenceNumber LSA must\
    \ be completely flushed before any\n            new LSAs can be introduced). This\
    \ is identical to the\n            behavior specified by Step 8 of Section 13\
    \ in [1].\n        o   Otherwise, send the database copy back to the sending\n\
    \            neighbor, encapsulated within a Link State Update Packet. In\n  \
    \          so doing, do not put the database copy of the LSA on the\n        \
    \    neighbor's link state retransmission list, and do not\n            acknowledge\
    \ the received (less recent) LSA instance.\n      This change is necessary to\
    \ support flooding over demand circuits.\n      For example, see Time T4 in the\
    \ example of Section 4.2.\n      However, this change is beneficial when flooding\
    \ over non-demand\n      interfaces as well. For this reason, the flooding change\
    \ pertains\n      to all interfaces, not just interfaces to demand circuits. The\n\
    \      main example involves MaxAge LSAs. There are times when MaxAge\n      LSAs\
    \ stay in a router's database for extended intervals: 1) when\n      they are\
    \ stuck in a retransmission queue on a slow link or 2) when\n      a router is\
    \ not properly flushing them from its database, due to\n      software bugs. The\
    \ prolonged existence of these MaxAge LSAs can\n      inhibit the flooding of\
    \ new instances of the LSA. New instances\n      typically start with the initial\
    \ LS sequence number, and are\n      treated as less recent (and hence discarded)\
    \ by routers still\n      holding MaxAge instances. However, with the above change\
    \ to\n      flooding, a router with a MaxAge instance will respond back with\n\
    \      the MaxAge instance. This will get back to the LSA's originator,\n    \
    \  which will then pick the next highest LS sequence number and\n      reflood,\
    \ overwriting the MaxAge instance.\n      This change will be included in future\
    \ revisions of the base OSPF\n      specification [1].\n   2.5.  Interoperability\
    \ with unmodified OSPF routers\n      Unmodified OSPF routers will probably treat\
    \ DoNotAge LSAs as if\n      they had LS age of MaxAge. At the very worst, this\
    \ will cause\n      continual retransmissions of the DoNotAge LSAs. (An example\n\
    \      scenario follows. Suppose Routers A and B are connected by a\n      point-to-point\
    \ link. Router A implements the demand circuit\n      extensions, Router B does\
    \ not. Neither one treats their connecting\n      link as a demand circuit. At\
    \ some point in time, Router A receives\n      from another neighbor via flooding\
    \ a DoNotAge LSA. The DoNotAge\n      LSA is then flooded by Router A to Router\
    \ B.  Router B, not\n      understanding DoNotAge LSAs, treats it as a MaxAge\
    \ LSA and\n      acknowledges it as such to Router A. Router A receives the\n\
    \      acknowledgment, but notices that the acknowledgment is for a\n      different\
    \ instance, and so starts retransmitting the LSA.)\n      However, to avoid this\
    \ confusion, DoNotAge LSAs will be allowed in\n      an OSPF area if and only\
    \ if, in the area's link state database,\n      all LSAs have the DC-bit set in\
    \ their Options field (see Section\n      2.1). Note that it is not required that\
    \ the LSAs' Advertising\n      Router be reachable; if any LSA is found not having\
    \ its DC-bit set\n      (regardless of reachability), then the router should flush\
    \ (i.e.,\n      prematurely age; see Section 14.1 of [1]) from the area all\n\
    \      DoNotAge LSAs. These LSAs will then be reoriginated at their\n      sources,\
    \ this time with DoNotAge clear.  Like the change in\n      Section 2.3, this\
    \ change is an exception to the general OSPF rule\n      that a router can only\
    \ flush its own self-originated LSAs. Both\n      changes pertain only to DoNotAge\
    \ LSAs, and in both cases a flushed\n      LSA's LS age field should be set to\
    \ MaxAge and not\n      DoNotAge+MaxAge.\n      2.5.1.  Indicating across area\
    \ boundaries\n         AS-external-LSAs are flooded throughout the entire OSPF\
    \ routing\n         domain, excepting only OSPF stub areas and NSSAs.  For that\n\
    \         reason, if an OSPF router that is incapable of DoNotAge\n         processing\
    \ exists in any \"regular\" area (i.e., an area that is\n         not a stub nor\
    \ an NSSA), no AS-external-LSA can have DoNotAge\n         set. This memo simplifies\
    \ that requirement by broadening it to\n         the following rule: LSAs in regular\
    \ OSPF areas are allowed to\n         have DoNotAge set if and only if every router\
    \ in the OSPF\n         domain (excepting those in stub areas and NSSAs) is capable\
    \ of\n         DoNotAge processing. The rest of this section describes how the\n\
    \         rule is implemented.\n         As described above in Sections 2.1 and\
    \ 2.5, a router indicates\n         that it is capable of DoNotAge processing\
    \ by setting the DC-bit\n         in the LSAs that it originates. However, there\
    \ is a problem. It\n         is possible that, in all areas to which Router X\
    \ directly\n         attaches, all the routers are capable of DoNotAge processing,\n\
    \         yet there is some router in a remote \"regular\" area that cannot\n\
    \         process DoNotAge LSAs.  This information must then be conveyed\n   \
    \      to Router X, so that it does not mistakenly flood/create\n         DoNotAge\
    \ LSAs.\n         The solution is as follows. Area border routers transmit the\n\
    \         existence of DoNotAge-incapable routers across area boundaries,\n  \
    \       using \"indication-LSAs\". Indication-LSAs are type-4-summary\n      \
    \   LSAs (also called ASBR-summary-LSAs), listing the area border\n         router\
    \ itself as the described ASBR, with the LSA's cost set to\n         LSInfinity\
    \ and the DC-bit clear. Note that indication-LSAs\n         convey no additional\
    \ information; in particular, they are used\n         even if the area border\
    \ router is not really an AS boundary\n         router (ASBR).\n         Taking\
    \ indication-LSAs into account, the rule as to whether\n         DoNotAge LSAs\
    \ are allowed in any particular area is EXACTLY the\n         same as given previously\
    \ in Section 2.5, namely: DoNotAge LSAs\n         will be allowed in an OSPF area\
    \ if and only if, in the area's\n         link state database, all LSAs have the\
    \ DC-bit set in their\n         Options field.\n         Through origination of\
    \ indication-LSAs, the existence of\n         DoNotAge-incapable routers can be\
    \ viewed as going from non-\n         backbone regular areas, to the backbone\
    \ area and from there to\n         all other regular areas. The following two\
    \ cases summarize the\n         requirements for an area border router to originate\n\
    \         indication-LSAs:\n            (1) Suppose an area border router (Router\
    \ X) is connected to\n                a regular non-backbone OSPF area (Area A).\
    \ Furthermore,\n                assume that Area A has LSAs with the DC-bit clear,\
    \ other\n                than indication-LSAs. Then Router X should originate\n\
    \                indication-LSAs into all other directly-connected\n         \
    \       \"regular\" areas, including the backbone area, keeping\n            \
    \    the guidelines of Section 2.5.1.1 in mind.\n            (2) Suppose an area\
    \ border router (Router X) is connected to\n                the backbone OSPF\
    \ area (Area 0.0.0.0). Furthermore,\n                assume that the backbone\
    \ has LSAs with the DC-bit clear\n                that are either a) not indication-LSAs\
    \ or b)\n                indication-LSAs that have been originated by routers\n\
    \                other than Router X itself. Then Router X should\n          \
    \      originate indication-LSAs into all other directly-\n                connected\
    \ \"regular\" non-backbone areas, keeping the\n                guidelines of Section\
    \ 2.5.1.1 in mind.\n         2.5.1.1.  Limiting indication-LSA origination\n \
    \           To limit the number of indication-LSAs originated, the\n         \
    \   following guidelines should be observed by an area border\n            router\
    \ (Router X) when originating indication-LSAs. First,\n            indication-LSAs\
    \ are not originated into an Area A when A\n            already has LSAs with\
    \ DC-bit clear other than indication-\n            LSAs. Second, if another area\
    \ border router has originated a\n            indication-LSA into Area A, and\
    \ that area border router has\n            a higher OSPF Router ID than Router\
    \ X (same tie-breaker as\n            for forwarding address origination; see\
    \ Section 12.4.5 of\n            [1]), then Router X should not originate an indication-LSA\n\
    \            into Area A.\n            As an example, suppose that three regular\
    \ OSPF areas (Areas\n            A, B and C) are connected by routers X, Y and\
    \ Z\n            (respectively) to the backbone area.  Furthermore, suppose\n\
    \            that all routers are capable of DoNotAge processing, except\n   \
    \         for routers in Areas A and B.  Finally, suppose that Router\n      \
    \      Z has a higher Router ID than Y, which in turn has a higher\n         \
    \   Router ID than X.  In this case, two indication-LSAs will be\n           \
    \ generated (if the rules of Section 2.5.1 and the guidelines\n            of\
    \ the preceding paragraph are followed): Router Y will\n            originate\
    \ an indication-LSA into the backbone, and Router Z\n            will originate\
    \ an indication-LSA into Area C.\n"
- title: 3.  Modifications to demand circuit endpoints
  contents:
  - "3.  Modifications to demand circuit endpoints\n   The following subsections detail\
    \ the modifications required of the\n   routers at the endpoints of demand circuits.\
    \ These consist of\n   modifications to two main pieces of OSPF: 1) sending and\
    \ receiving\n   Hello Packets over demand circuits and 2) flooding LSAs over demand\n\
    \   circuits.\n   An additional OSPF interface configuration parameter, ospfIfDemand,\n\
    \   is defined to indicate whether an OSPF interface connects to a demand\n  \
    \ circuit (see Appendix B). Two routers connecting to a common network\n   segment\
    \ need not agree on that segment's demand circuit status.\n   However, to get\
    \ full benefit of the demand circuit extensions, the\n   two ends of a point-to-point\
    \ link must both agree to treat the link\n   as a demand circuit (see Section\
    \ 3.2).\n   3.1.  Interface State machine modifications\n      An OSPF point-to-point\
    \ interface connecting to a demand circuit is\n      considered to be in state\
    \ \"Point-to-point\" if and only if its\n      associated neighbor is in state\
    \ \"1-Way\" or greater; otherwise the\n      interface is considered to be in\
    \ state \"Down\". Hellos are sent out\n      such an interface when it is in \"\
    Down\" state, at the reduced\n      interval of PollInterval. If the negotiation\
    \ in Section 3.2.1\n      succeeds, Hellos will cease to be sent out the interface\
    \ whenever\n      the associated neighbor reaches state \"Full\".\n      Note\
    \ that as a result, an \"LLDown\" event for the point-to-point\n      demand circuit's\
    \ neighbor forces both the neighbor and the\n      interface into state \"Down\"\
    \ (see Section 3.2.2).\n      For OSPF broadcast and NBMA networks that have been\
    \ configured as\n      demand circuits, there are no changes to the Interface\
    \ State\n      Machine.\n   3.2.  Sending and Receiving OSPF Hellos\n      The\
    \ following sections describe the required modifications to OSPF\n      Hello\
    \ Packet processing on point-to-point demand circuits.\n      For OSPF broadcast\
    \ and NBMA networks that have been configured as\n      demand circuits, there\
    \ is no change to the sending and receiving\n      of Hellos, nor are there any\
    \ changes to the Neighbor State\n      Machine. This is because the proper operation\
    \ of the Designated\n      Router election algorithm requires periodic exchange\
    \ of Hello\n      Packets.\n      3.2.1.  Negotiating Hello suppression\n    \
    \     On point-to-point demand circuits, both endpoints must agree to\n      \
    \   suppress the sending of Hello Packets.  To ensure this\n         agreement,\
    \ a router sets the DC-bit in OSPF Hellos and Database\n         Description Packets\
    \ sent out the demand interface.  Receiving\n         an Hello or a Database Description\
    \ Packet with the DC-bit set\n         indicates agreement. Receiving an Hello\
    \ with the DC-bit clear\n         and also listing the router's Router ID in the\
    \ body of the\n         Hello message, or a Database Description Packet with the\
    \ DC-bit\n         clear (either one indicating bidirectional connectivity)\n\
    \         indicates that the other end refuses to suppress Hellos. In\n      \
    \   these latter cases, the router reverts to the normal periodic\n         sending\
    \ of Hello Packets out the interface (see Section 9.5 of\n         [1]).\n   \
    \      A demand point-to-point circuit need be configured in only one\n      \
    \   of the two endpoints (see Section 4.1).  If a router\n         implementing\
    \ Sections 2 and 3 of this memo receives an Hello\n         Packet with the DC-bit\
    \ set, it should treat the point-to-point\n         link as a demand circuit,\
    \ making the appropriate changes to its\n         Hello Processing (see Section\
    \ 3.2.2) and flooding (see Section\n         3.3).\n         Even if the above\
    \ negotiation fails, the router should continue\n         setting the DC-bit in\
    \ its Hellos and Database Descriptions (the\n         neighbor will just ignore\
    \ the bit). The router will then\n         automatically attempt to renegotiate\
    \ Hello suppression whenever\n         the link goes down and comes back up. \
    \ For example, if the\n         neighboring router is rebooted with software that\
    \ is capable of\n         operating over demand circuits (i.e., implements Sections\
    \ 2 and\n         3 of this memo), a future negotiation will succeed.\n      \
    \   Also, even if the negotiation to suppress Hellos fails, the\n         flooding\
    \ modifications described in Section 3.3 are still\n         performed over the\
    \ link.\n      3.2.2.  Neighbor state machine modifications\n         When the\
    \ above negotiation succeeds, Hello Packets are sent\n         over point-to-point\
    \ demand circuits only until initial link-\n         state database synchronization\
    \ is achieved with the neighbor\n         (i.e., the state of the neighbor connection\
    \ reaches \"Full\", as\n         defined in Section 10.1 of [1]). After this,\
    \ Hellos are\n         suppressed and the data-link connection to the neighbor\
    \ is\n         assumed available until evidence is received to the contrary.\n\
    \         When the router finds that the neighbor is no longer available,\n  \
    \       presumably from something like a discouraging diagnostic code\n      \
    \   contained in a response to a failed call request, the neighbor\n         connection\
    \ transitions back to \"Down\" and Hellos are sent\n         periodically (at\
    \ Intervals of PollInterval) in an attempt to\n         restart synchronization\
    \ with the neighbor.\n         This requires changes to the OSPF Neighbor State\
    \ Machine (see\n         Section 10.3 of [1]). The receipt of Hellos from demand\
    \ circuit\n         neighbors in state \"Loading\" or \"Full\" can no longer be\n\
    \         required. In other words, the InactivityTimer event defined in\n   \
    \      Section 10.2 of [1] has no effect on demand circuit neighbors\n       \
    \  in state \"Loading\" or \"Full\".  An additional clarification is\n       \
    \  needed in the Neighbor State Machine's LLDown event. For demand\n         circuits,\
    \ this event should be mapped into the \"discouraging\n         diagnostic code\"\
    \ discussed previously in Section 1, and should\n         not be generated when\
    \ the data-link connection has been closed\n         simply to save resources.\
    \ Nor should LLDown be generated if a\n         data-link connection fails due\
    \ to temporary lack of resources.\n   3.3.  Flooding over demand circuits\n  \
    \    Flooding over demand circuits (point-to-point or otherwise) is\n      modified\
    \ if and only if all routers have indicated that they can\n      process LSAs\
    \ having DoNotAge set. This is determined by examining\n      the link state database\
    \ of the OSPF area containing the demand\n      circuit.  All LSAs in the database\
    \ must have the DC-bit set.  If\n      one or more LSAs have the DC-bit clear,\
    \ flooding over demand\n      circuits is unchanged from [1].  Otherwise, flooding\
    \ is changed as\n      follows.\n        (1) Only truly changed LSAs are flooded\
    \ over demand circuits.\n            When a router receives a new LSA instance,\
    \ it checks first\n            to see whether the contents have changed. If not,\
    \ the new\n            LSA is simply a periodic refresh and it is not flooded\
    \ out\n            attached demand circuits (it is still flooded out other\n \
    \           interfaces however).  This check should be performed in Step\n   \
    \         5b of Section 13 in [1]. When comparing an LSA to its\n            previous\
    \ instance, the following are all considered to be\n            changes in contents:\n\
    \            o   The LSA's Options field has changed.\n            o   One or\
    \ both of the LSA instances has LS age set to\n                MaxAge (or DoNotAge+MaxAge).\n\
    \            o   The length field in the LSA header has changed.\n           \
    \ o   The contents of the LSA, excluding the 20-byte link\n                state\
    \ header, have changed. Note that this excludes\n                changes in LS\
    \ Sequence Number and LS Checksum.\n        (2) When it has been decided to flood\
    \ an LSA over a demand\n            circuit, DoNotAge should be set in the copy\
    \ of the LSA that\n            is flooded out the demand interface. (There is\
    \ one\n            exception: DoNotAge should not be set if the LSA's LS age is\n\
    \            equal to MaxAge.) Setting DoNotAge will cause the routers on\n  \
    \          the other side of the demand circuit to hold the LSA in\n         \
    \   their databases indefinitely, removing the need for periodic\n           \
    \ refresh. Note that it is perfectly possible that DoNotAge\n            will\
    \ already be set. This simply indicates that the LSA has\n            already\
    \ been flooded over demand circuits. In any case, the\n            flooded copy's\
    \ LS age field must also be incremented by\n            InfTransDelay (see Step\
    \ 5 of Section 13.3 in [1], and\n            Section 2.2 of this memo), as protection\
    \ against flooding\n            loops.\n            The previous paragraph also\
    \ pertains to LSAs flooded over\n            demand circuits in response to Link\
    \ State Requests. It also\n            pertains to LSAs that are retransmitted\
    \ over demand\n            circuits.\n   3.4.  Virtual link support\n      OSPF\
    \ virtual links are essentially unnumbered point-to-point links\n      (see Section\
    \ 15 of [1]). Accordingly, demand circuit support for\n      virtual links resembles\
    \ that described for point-to-point links in\n      the previous sections. The\
    \ main difference is that a router\n      implementing Sections 2 and 3 of this\
    \ memo, and supporting virtual\n      links, always treats virtual links as if\
    \ they were demand\n      circuits. Otherwise, when a virtual link's underlying\
    \ physical\n      path contains one or more demand circuits, periodic OSPF protocol\n\
    \      exchanges over the virtual link would unnecessarily keep the\n      underlying\
    \ demand circuits open.\n      Demand circuit support on virtual links can be\
    \ summarized as\n      follows:\n        o   Instead of modifying the Interface\
    \ state machine for virtual\n            links as was done for point-to-point\
    \ links in Section 3.1,\n            the Interface state machine for virtual links\
    \ remains\n            unchanged. A virtual link is considered to be in state\n\
    \            \"Point-to-point\" if an intra-area path (through the virtual\n \
    \           link's transit area) exists to the other endpoint. Otherwise\n   \
    \         it is considered to be in state \"Down\". See Section 15 of\n      \
    \      [1] for more details.\n        o   Virtual links are always treated as\
    \ demand circuits. In\n            particular, over virtual links a router always\
    \ negotiates to\n            suppress the sending of Hellos. See Sections 3.2.1\
    \ and 3.2.2\n            for details.\n        o   In the demand circuit support\
    \ over virtual links, there is\n            no \"discouraging diagnostic code\"\
    \ as described in Section 1.\n            Instead, the connection is considered\
    \ to exist if and only\n            if an intra-area path (through the virtual\
    \ link's transit\n            area) exists to the other endpoint. See Section\
    \ 15 of [1]\n            for more details.\n        o   Since virtual links are\
    \ always treated as demand circuits,\n            flooding over virtual links\
    \ always proceeds as in Section\n            3.3.\n   3.5.  Point-to-MultiPoint\
    \ Interface support\n      The OSPF Point-to-MultiPoint interface has recently\
    \ been developed\n      for use with non-mesh-connected network segments. A common\
    \ example\n      is a Frame Relay subnet where PVCs are provisioned between some\n\
    \      pairs of routers, but not all pairs. In this case the Point-to-\n     \
    \ Multipoint interface represents the single physical interface to\n      the\
    \ Frame relay network, over which multiple point-to-point OSPF\n      conversations\
    \ (one on each PVC) are taking place. For more\n      information on the Point-to-MultiPoint\
    \ interface, see [8].\n      Since an OSPF Point-to-MultiPoint interface essentially\
    \ consists\n      of multiple point-to-point links, demand circuit support on\
    \ the\n      Point-to-Multipoint interface strongly resembles demand circuit\n\
    \      support for point-to-point links. However, since the Point-to-\n      MultiPoint\
    \ interface requires commonality of its component point-\n      to-point links'\
    \ configurations, there are some differences.\n      Demand circuit support on\
    \ Point-to-Multipoint interfaces can be\n      summarized as follows:\n      \
    \  o   Instead of modifying the Interface state machine for Point-\n         \
    \   to-Multipoint interfaces as was done for point-to-point\n            links\
    \ in Section 3.1, the Interface state machine for\n            Point-to-Multipoint\
    \ interfaces remains unchanged.\n        o   When ospfIfDemand is set on a Point-to-MultiPoint\
    \ interface,\n            the router tries to negotiate Hello suppression separately\n\
    \            on each of interface's component point-to-point links. This\n   \
    \         negotiation proceeds as in Section 3.2.1.  Negotiation may\n       \
    \     fail on some component point-to-point links, and succeed on\n          \
    \  others. This is acceptable. On those component links where\n            the\
    \ negotiation fails, Hellos will always be sent;\n            otherwise, Hellos\
    \ will cease to be sent when the Database\n            Description process completes\
    \ on the component link (see\n            Section 3.2.2).\n        o   Section\
    \ 3.3 defines the demand circuit flooding behavior for\n            all OSPF interface\
    \ types. This includes Point-to-Multipoint\n            interfaces.\n"
- title: 4.  Examples
  contents:
  - "4.  Examples\n   This section gives three examples of the operation over demand\n\
    \   circuits. The first example is probably the most common and certainly\n  \
    \ the most basic. It shows a single point-to-point demand circuit\n   connecting\
    \ two routers.  The second illustrates what happens when\n   demand circuits and\
    \ leased lines are used in parallel. The third\n   explains what happens when\
    \ a router has multiple demand circuits and\n   cannot keep them all open (for\
    \ resource reasons) at the same time.\n   4.1.  Example 1: Sole connectivity through\
    \ demand circuits\n      Figure 1 shows a sample internetwork with a single demand\
    \ circuit\n      providing connectivity to the LAN containing Host H2.  Assume\
    \ that\n      all three routers (RTA, RTB and RTC) have implemented the\n    \
    \  functionality in Section 2 of this memo, and thus will be setting\n      the\
    \ DC-bit in their LSAs. Furthermore assume that Router RTB has\n      been configured\
    \ to treat the link to Router RTC as a demand\n      circuit, but Router RTC has\
    \ not been so configured. Finally assume\n      that the LAN interface connecting\
    \ Router RTA to Host H1 is\n      initially down.\n      The following sequence\
    \ of events may then transpire, starting with\n      Router RTB booting and bringing\
    \ up its link to Router RTC:\n        Time T0: RTB negotiates Hello suppression\n\
    \            Router RTB will start sending Hellos over the demand circuit\n  \
    \          with the DC-bit set in the Hello's Options field. Because\n       \
    \     RTC is not configured to treat the link as a demand circuit,\n         \
    \   the first Hello that RTB receives from RTC may not have the\n            DC-bit\
    \ set. However, subsequent Hellos and Database\n            Description Packets\
    \ received from RTC will have the DC-bit\n            set, indicating that the\
    \ two routers have agreed that the\n            link will be treated as a demand\
    \ circuit. The entire\n            negotiation is pictured in Figure 2. Note that\
    \ if RTC were\n            unable or unwilling to suppress Hellos on the link,\
    \ the\n            initial Database Description sent from Router RTC to RTB\n\
    \            would have the DC-bit clear, forcing Router RTB to revert to\n  \
    \          the periodic sending of Hellos specified in Section 9.5 of\n      \
    \      [1].\n        Time T1: Database exchange over demand circuit\n        \
    \    The initial synchronization of link state databases (the\n            Database\
    \ Exchange Process) over the demand circuit then\n            occurs as over any\
    \ point-to-point link, with one exception.\n            LSAs included in Link\
    \ State Updates Packets sent over the\n               +           +          \
    \                   +\n               |   +---+   |                          \
    \   |\n        +--+   |---|RTA|---|                             |   +--+\n   \
    \     |H1|---|   +---+   |                             |---|H2|\n        +--+\
    \   |           |   +---+    ODL      +---+   |   +--+\n               |LAN Y\
    \      |---|RTB|-------------|RTC|---|\n               +           |   +---+ \
    \            +---+   |\n                           +                         \
    \    +\n               Figure 1: In the example of Section 4.1,\n            \
    \        a single demand circuit (labeled\n                     ODL) bisects an\
    \ internetwork.\n            +---+                                        +---+\n\
    \            |RTB|                                        |RTC|\n            +---+\
    \                                        +---+\n                          Hello\
    \ (DC-bit set)\n                  ------------------------------------->\n   \
    \                       Hello (DC-bit clear)\n                  <-------------------------------------\n\
    \                       Hello (DC-bit set, RTC seen)\n                  ------------------------------------->\n\
    \                     Database Description (DC-bit set)\n                  <-------------------------------------\n\
    \              Figure 2: Successful negotiation of Hello\n                   \
    \           suppression.\n            demand circuit (in response to Link State\
    \ Request Packets),\n            will have the DoNotAge bit set in their LS age\
    \ field. So,\n            after the Database Exchange Process is finished, all\
    \ routers\n            will have 3 LSAs in their link state databases (router-LSAs\n\
    \            for Routers RTA, RTB and RTC), but the LS age fields\n          \
    \  belonging to the LSAs will vary depending on which side of\n            the\
    \ demand circuit they were originated from (see Table 1).\n            For example,\
    \ all routers other than Router RTC have the\n            DoNotAge bit set in\
    \ Router RTC's router-LSA; this removes\n            the need for Router RTC to\
    \ refresh its router-LSA over the\n            demand circuit.\n             \
    \                             LS age\n             LSA                in RTB \
    \       in RTC\n             ______________________________________________\n\
    \             RTA's Router-LSA   1000          DoNotAge+1001\n             RTB's\
    \ Router-LSA   10            DoNotAge+11\n             RTC's Router-LSA   DoNotAge+11\
    \   10\n                 Table 1: After Time T1 in Section 4.1,\n            \
    \        possible LS age fields on either\n                       side of the\
    \ demand circuit\n        Time T2: Hello traffic ceases\n            After the\
    \ Database Exchange Process has completed, no Hellos\n            are sent over\
    \ the demand circuit. If there is no application\n            data to be sent\
    \ over the demand circuit, the circuit will be\n            idle.\n        Time\
    \ T3: Underlying data-link connection torn down\n            After some period\
    \ of inactivity, the underlying data-link\n            connection will be torn\
    \ down (e.g., an ISDN call would be\n            cleared) in order to save connect\
    \ charges. This will be\n            transparent to the OSPF routing; no LSAs\
    \ or routing table\n            entries will change as a result.\n        Time\
    \ T4: Router RTA's LSA is refreshed\n            At some point Router RTA will\
    \ refresh its own router-LSA\n            (i.e., when the LSA's LS age hits LSRefreshInterval).\
    \ This\n            refresh will be flooded to Router RTB, who will look at it\n\
    \            and decide NOT to flood it over the demand circuit to Router\n  \
    \          RTC, because the LSA's contents have not really changed\n         \
    \   (only the LS Sequence Number). At this point, the LS\n            sequence\
    \ numbers that the routers have for RTA's router-LSA\n            differ depending\
    \ on which side of the demand circuit the\n            routers lie. Because there\
    \ is still no application traffic,\n            the underlying data-link connection\
    \ remains disconnected.\n        Time T5: Router RTA's LAN interface comes up\n\
    \            When Router RTA's LAN interface (connecting to Host H1)\n       \
    \     comes up, RTA will originate a new router-LSA. This router-\n          \
    \  LSA WILL be flooded over the demand circuit because its\n            contents\
    \ have now changed. The underlying data-link\n            connection will have\
    \ to be brought up to flood the LSA.\n            After flooding, routers on both\
    \ sides of the demand circuit\n            will again agree on the LS Sequence\
    \ Number for RTA's\n            router-LSA.\n        Time T6: Underlying data-link\
    \ connection is torn down again\n            Assuming that there is still no application\
    \ traffic\n            transiting the demand circuit, the underlying data-link\n\
    \            connection will again be torn down after some period of\n       \
    \     inactivity.\n        Time T7: File transfer started between Hosts H1 and\
    \ H2\n            As soon as application data needs to be sent across the\n  \
    \          demand circuit the underlying data-link connection is\n           \
    \ brought back up.\n        Time T8: Physical link becomes inoperative\n     \
    \       If an indication is received from the data-link or physical\n        \
    \    layers indicating that the demand circuit can no longer be\n            established,\
    \ Routers RTB and RTC declare their point-to-\n            point interfaces down,\
    \ and originate new router-LSAs. Both\n            routers will attempt to bring\
    \ the connection back up by\n            sending Hellos at the reduced rate of\
    \ PollInterval. Note\n            that while the connection is inoperative, Routers\
    \ RTA and\n            RTB will continue to have an old router-LSA for RTC in\
    \ their\n            link state database, and this LSA will not age out because\n\
    \            it has the DoNotAge bit set. However, according to Section\n    \
    \        2.3 they will flush Router RTC's router-LSA if the demand\n         \
    \   circuit remains inoperative for longer than MaxAge.\n   4.2.  Example 2: Demand\
    \ and non-demand circuits in parallel\n      This example demonstrates the demand\
    \ circuit functionality when\n      both demand circuits and non-demand circuits\
    \ (e.g., leased lines)\n      are used to interconnect regions of an internetwork.\
    \ Such an\n      internetwork is shown in Figure 3. Host H1 can communicate with\n\
    \      Host H2 either over the demand link between Routers RTB and RTC,\n    \
    \  or over the leased line between Routers RTB and RTD.\n      Because the basic\
    \ properties of the demand circuit functionality\n      were presented in the\
    \ previous example, this example will only\n      address the unique issues involved\
    \ when using both demand and\n      non-demand circuits in parallel.\n      Assume\
    \ that Routers RTB and RTY are initially powered off, but\n      that all other\
    \ routers and their attached links are both\n      operational and implement the\
    \ demand circuit modifications to\n      OSPF. Throughout the example, a TCP connection\
    \ between Hosts H1\n      and H2 is transmitting data. Furthermore, assume that\
    \ the cost of\n      the demand circuit from RTB to RTC has been set considerably\n\
    \      higher than the cost of the leased line between RTB and RTD; for\n    \
    \  this reason traffic between Hosts H1 and H2 will always be sent\n      over\
    \ the leased line when it is operational.\n      The following events may then\
    \ transpire:\n                                             +\n               \
    \                       +---+  |\n                                      |RTC|--|\
    \         +\n                                      +---+  |  +---+  |\n      \
    \         +                     /       |--|RTE|--|  +--+\n       +--+    |  \
    \                  /ODL     |  +---+  |--|H2|\n       |H1|----|  +---+       +---+/\
    \         |         +  +--+\n       +--+    |--|RTA|-------|RTB|          |\n\
    \               |  +---+       +---+\\         |         +\n               + \
    \                   \\        |  +---+  |\n                                  \
    \   \\       |--|RTY|--|\n                                      +---+  |  +---+\
    \  |\n                                      |RTD|--|         +\n             \
    \                         +---+  |\n                                         \
    \    +\n                       Figure 3: Example 2's internetwork.\n         \
    \        Vertical lines are LAN segments. Six routers\n                 are pictured,\
    \ Routers RTA-RTE and RTY.\n                 RTB has three serial line interfaces,\
    \ two of\n                 which are leased lines and the third (connecting to\n\
    \                 RTC) a demand circuit. Two hosts, H1 and\n                 H2,\
    \ are pictured to illustrate the effect of\n                              application\
    \ traffic.\n        Time T0: Router RTB comes up.\n            Assume RTB supports\
    \ the demand circuit OSPF modifications.\n            When Router RTB comes up\
    \ and establishes links to Routers\n            RTC and RTD, it will flood the\
    \ same information over both.\n            However, LSAs sent over the demand\
    \ circuit (to Router RTC)\n            will have the DoNotAge bit set, while those\
    \ sent over the\n            leased line to Router RTD will not. Because the DoNotAge\
    \ bit\n            is not taken into account when comparing LSA instances, the\n\
    \            routers on the right side of RTB (RTC, RTE and RTD) may or\n    \
    \        may not have the DoNotAge bit set in their database copies\n        \
    \    of RTA's and RTB's router-LSAs.  This depends on whether the\n          \
    \  LSAs sent over the demand link reach the routers before\n            those\
    \ sent over the leased line. One possibility is pictured\n            in Table\
    \ 2.\n                                          LS age\n            LSA      \
    \          in RTC        in RTD   in RTE\n            ________________________________________________\n\
    \            RTA's Router-LSA   DoNotAge+20   21       21\n            RTB's Router-LSA\
    \   DoNotAge+5    6        6\n              Table 2: After Time T0 in Example\
    \ 2, LS age\n                fields on the right side of Router RTB.\n       \
    \                                   LS age\n            LSA                in\
    \ RTC       in RTD   in RTE\n            _______________________________________________\n\
    \            RTA's Router-LSA   5            6        6\n            RTB's Router-LSA\
    \   DoNotAge+5   1785     1785\n              Table 3: After Time T2 in Example\
    \ 2, LS age\n                fields on the right side of Router RTB.\n       \
    \                                   LS age\n        LSA                in RTC\
    \       in RTD       in RTE\n        _______________________________________________________\n\
    \        RTA's Router-LSA   325          326          326\n        RTB's Router-LSA\
    \   DoNotAge+5   DoNotAge+6   DoNotAge+6\n              Table 4: After Time T3\
    \ in Example 2, LS age\n                fields on the right side of Router RTB.\n\
    \                                          LS age\n        LSA               \
    \ in RTC       in RTD       in RTE\n        _______________________________________________________\n\
    \        RTA's Router-LSA   DoNotAge+7   DoNotAge+8   DoNotAge+8\n        RTB's\
    \ Router-LSA   DoNotAge+5   DoNotAge+6   DoNotAge+6\n              Table 5: After\
    \ Time T4 in Example 2, LS age\n                fields on the right side of Router\
    \ RTB.\n        Time T1: Underlying data-link connection is torn down.\n     \
    \       All application traffic is flowing over the leased line\n            connecting\
    \ Routers RTB and RTD instead of the demand\n            circuit, due to the leased\
    \ line's lesser OSPF cost. After\n            some period of inactivity, the data-link\
    \ connection\n            underlying the demand circuit will be torn down. This\
    \ does\n            not affect the OSPF database or the routers' routing tables.\n\
    \        Time T2: Router RTA refreshes its router-LSA.\n            When Router\
    \ RTA refreshes its router-LSA (as all routers do\n            every LSRefreshInterval),\
    \ Router RTB floods the refreshed\n            LSA over the leased line but not\
    \ over the demand circuit,\n            because the contents of the LSA have not\
    \ changed. This new\n            LSA will not have the DoNotAge bit set, and will\
    \ replace the\n            old instances (whether or not they have the DoNotAge\
    \ bit\n            set) by virtue of its higher LS Sequence number. This is\n\
    \            pictured in Table 3.\n        Time T3: Leased line becomes inoperational.\n\
    \            When the leased line becomes inoperational, the data-link\n     \
    \       connection underlying the demand circuit will be reopened,\n         \
    \   in order to flood a new (and changed) router-LSA for RTB and\n           \
    \ also to carry the application traffic between Hosts H1 and\n            H2.\
    \ After flooding the new LSA, all routers on the right\n            side of the\
    \ demand circuit will have DoNotAge set in their\n            copy of RTB's router-LSA\
    \ and DoNotAge clear in their copy of\n            RTA's router-LSA (see Table\
    \ 4).\n        Time T4: In Router RTE, Router RTA's router-LSA times out.\n  \
    \          Refreshes of Router RTA's router-LSA are not being flooded\n      \
    \      over the demand circuit. However, RTA's router-LSA is aging\n         \
    \   in all of the routers to the right of the demand circuit.\n            For\
    \ this reason, the router-LSA will eventually be aged out\n            and reflooded\
    \ (by router RTE in our example).  Because this\n            aged out LSA constitutes\
    \ a real change (see Section 3.3), it\n            is flooded over the demand\
    \ circuit from Router RTC to RTB.\n            There are then two possible scenarios.\
    \ First, the LS\n            Sequence number for RTA's router-LSA may be larger\
    \ on RTB's\n            side of the demand link. In this case, when router RTB\n\
    \            receives the flushed LSA it will respond by flooding back\n     \
    \       the more recent instance (see Section 2.4). If instead the\n         \
    \   LS sequence numbers are the same, the flushed LSA will be\n            flooded\
    \ all the way back to Router RTA, which will then be\n            forced to reoriginate\
    \ the LSA.\n            In any case, after a small period all the routers on the\n\
    \            right side of the demand link will have the DoNotAge bit set\n  \
    \          in their copy of RTA's router-LSA (see Table 5). In the\n         \
    \   small interval between the flushing and waiting for a new\n            instance\
    \ of the LSA, there will be a temporary loss of\n            connectivity between\
    \ Hosts H1 and H2.\n        Time T5: A non-supporting router joins.\n        \
    \    Suppose Router RTY now becomes operational, and does not\n            support\
    \ the demand circuit OSPF extensions. Router RTY's\n            router-LSA then\
    \ will not have the DC-bit set in its Options\n            field, and as the router-LSA\
    \ is flooded throughout the\n            internetwork it flushes all LSAs having\
    \ the DoNotAge bit set\n            and causes the flooding behavior over the\
    \ demand circuit to\n            revert back to the normal flooding behavior defined\
    \ in [1].\n            However, although all LSAs will now be flooded over the\n\
    \            demand circuit, regardless of whether their contents have\n     \
    \       really changed, Hellos will still continue to be suppressed\n        \
    \    on the demand circuit (see Section 3.2.2).\n   4.3.  Example 3: Operation\
    \ when oversubscribed\n      The following example shows the behavior of the demand\
    \ circuit\n      extensions in the presence of oversubscribed interfaces. Note\
    \ that\n      the example's topology excludes the possibility of alternative\n\
    \      paths. The combination of oversubscription and redundant topology\n   \
    \   (i.e., alternative paths) poses special problems for the demand\n      circuit\
    \ extensions. These problems are discussed later in Section\n      7.\n      Figure\
    \ 4 shows a single Router (RT1) connected via demand circuits\n      to three\
    \ other routers (RT2-RT4). Assume that RT1 can only have\n      two out of three\
    \ underlying data-link connections open at once.\n      This may be due to one\
    \ of the following reasons: Router RT1 may be\n      using a single Basic Rate\
    \ ISDN interface (2 B channels) to support\n      all three demand circuits, or,\
    \ RT1 may be connected to a data-link\n      switch (e.g., an X.25 or Frame relay\
    \ switch) that is only capable\n      of so many simultaneous data-link connections.\n\
    \      The following events may transpire, starting with Router RT1\n      coming\
    \ up.\n        Time T0: Router RT1 comes up.\n            Router RT1 attempts\
    \ to establish neighbor connections and\n            synchronize OSPF databases\
    \ with routers RT2-RT4. But,\n                                               \
    \  +  +--+\n                                          +---+  |--|H2|\n       \
    \                         +---------|RT2|--|  +--+\n                         \
    \      /          +---+  |\n                              / ODL              +\n\
    \                +--+  +      /\n                |H1|--|     /               \
    \     +\n                +--+  |  +---+    ODL     +---+  |  +--+\n          \
    \            |--|RT1|------------|RT3|--|--|H3|\n                      |  +---+\
    \            +---+  |  +--+\n                      |      \\                 \
    \  +\n                      +       \\ODL\n                               \\ \
    \                +  +--+\n                                \\         +---+  |--|H4|\n\
    \                                 +--------|RT4|--|  +--+\n                  \
    \                        +---+  |\n                                          \
    \       +\n                     Figure 4: Example 3's internetwork.\n        \
    \    because it cannot have data-link connections open to all\n            three\
    \ at once, it will synchronize with RT2 and RT3, while\n            Hellos sent\
    \ to RT4 will be discarded (see Section 1).\n        Time T1: Data-link connection\
    \ to RT2 closed due to inactivity.\n            Assuming that no application traffic\
    \ is being sent to/from\n            Host H2, the underlying data-link connection\
    \ to RT2 will\n            eventually close due to inactivity. This will allow\
    \ RT1 to\n            finally synchronize with RT4; the next Hello that RT1\n\
    \            attempts to send to RT4 will cause that data-link connection\n  \
    \          to open and synchronization with RT4 will ensue. Note that,\n     \
    \       until this time, H4 will have been considered unreachable by\n       \
    \     OSPF routing. However, data traffic would not have been\n            deliverable\
    \ to H4 until now in any case.\n        Time T2: RT2's LAN interface becomes inoperational\n\
    \            This causes RT2 to reissue its router-LSA. However, it may\n    \
    \        be unable to flood it to RT1 if RT1 already has data-link\n         \
    \   connections open to RT3 and RT4. While the data-link\n            connection\
    \ from RT2 to RT1 cannot be opened due to resource\n            shortages, the\
    \ new router-LSA will be continually\n            retransmitted (and dropped by\
    \ RT2's ISDN interface; see\n            Section 1). This means that the routers\
    \ RT1, RT3 and RT4\n            will not detect the unreachability of Host H2\
    \ until a data-\n            link connection on RT1 becomes available.\n"
- title: 5.  Topology recommendations
  contents:
  - "5.  Topology recommendations\n   Because LSAs indicating topology changes are\
    \ still flooded over\n   demand circuits, it is still advantageous to design networks\
    \ so that\n   the demand circuits are isolated from as many topology changes as\n\
    \   possible. In OSPF, this is done by encasing the demand circuits\n   within\
    \ OSPF stub areas or within NSSAs (see [3]). In both cases, this\n   isolates\
    \ the demand circuits from AS external routing changes, which\n   in many networks\
    \ are the most frequent (see [6]). Stub areas can even\n   isolate the demand\
    \ circuits from changes in other OSPF areas.\n   Also, considering the interoperation\
    \ of OSPF routers supporting\n   demand circuits and those that do not (see Section\
    \ 2.5), isolated\n   stub areas or NSSAs can be converted independently to support\
    \ demand\n   circuits. In contrast, regular OSPF areas must all be converted\n\
    \   before the functionality can take effect in any particular regular\n   OSPF\
    \ area.\n"
- title: 6.  Lost functionality
  contents:
  - "6.  Lost functionality\n   The enhancements defined in this memo to support demand\
    \ circuits come\n   at some cost. Although we gain an efficient use of demand\
    \ circuits,\n   holding them open only when there is actual application data to\
    \ send,\n   we lose the following:\n    Robustness\n        In regular OSPF [1],\
    \ all LSAs are refreshed every\n        LSRefreshInterval.  This provides protection\
    \ against routers\n        losing LSAs from (or LSAs getting corrupted in) their\
    \ link state\n        databases due to software errors, etc.  Over demand circuits\n\
    \        this periodic refresh is removed, and we depend on routers\n        correctly\
    \ holding LSAs marked with DoNotAge in their databases\n        indefinitely.\n\
    \    Database Checksum\n        OSPF supplies network management variables, namely\n\
    \        ospfExternLSACksumSum and ospfAreaLSACksumSum in [7], allowing a\n  \
    \      network management station to verify OSPF database\n        synchronization\
    \ among routers. However, these variables are sums\n        of the individual\
    \ LSAs' LS checksum fields, which are no longer\n        guaranteed to be identical\
    \ across demand circuits (because the\n        LS checksum covers the LS Sequence\
    \ Number, which will in general\n        differ across demand circuits). This\
    \ means that these variables\n        can no longer be used to verify database\
    \ synchronization in OSPF\n        networks containing demand circuits.\n"
- title: '7.  Future work: Oversubscription'
  contents:
  - "7.  Future work: Oversubscription\n   An internetwork is oversubscribed when\
    \ not all of its demand\n   circuits' underlying connections can be open at once,\
    \ due to resource\n   limitations.  These internetworks were addressed in Section\
    \ 4.3.\n   However, when all possible sources in the internetwork are active at\n\
    \   once, problems can occur which are not addressed in this memo:\n    (1) There\
    \ is a network design problem. Does a subset of demand\n        circuits exist\
    \ such that a) their data-link connections can be\n        open simultaneously\
    \ and b) they can provide connectivity for all\n        possible sources? This\
    \ requires that (at least) a spanning tree\n        be formed out of established\
    \ connections. Figure 4 shows an\n        example where this is not possible;\
    \ Hosts H1 through H4 cannot\n        simultaneously talk, since Router RT1 is\
    \ limited to two\n        simultaneously open demand circuits.\n    (2) Even if\
    \ it is possible that a spanning tree can form, will one?\n        Given the model\
    \ in Section 1, demand circuits are brought up\n        when needed for data traffic,\
    \ and stay established as long as\n        data traffic is present. One example\
    \ is shown in Figure 5. Four\n        routers are interconnected via demand circuits,\
    \ with each router\n        being able to establish a circuit to any other. However,\
    \ we\n        assume that each router can only have two circuits open at once\n\
    \        (e.g., the routers could be using Basic Rate ISDN).  In this\n      \
    \  case, one would hope that the data-link connections in Figure 5a\n        would\
    \ form.  But the connections in Figure 5b are equally\n        likely, which leave\
    \ Host H2 unable to communicate.\n        One possible approach to this problem\
    \ would be for a) the OSPF\n        database to indicate which demand circuits\
    \ have actually been\n        established and b) implement a distributed spanning\
    \ tree\n        construction (see for example Chapter 5.2.2 of [9]) when\n   \
    \     necessary.\n    (3) Even when a spanning tree has been built, will it be\
    \ used?\n        Routers implementing the functionality described in this memo\
    \ do\n        not necessarily know which data-link connections are established\n\
    \        at any one time. In fact, they view all demand circuits as being\n  \
    \      equally available, whether or not they are currently\n        established.\
    \ So for example, even when the established\n        connections form the pattern\
    \ in Figure 5a, Router RT1 may still\n        believe that the best path to Router\
    \ RT3 is through the direct\n        demand circuit.  However, this circuit cannot\
    \ be established due\n        to resource shortages.\n                     +--+\
    \  +                     +  +--+\n                     |H1|--|  +---+  ODL  +---+\
    \  |--|H2|\n                     +--+  |--|RT1|-------|RT2|--|  +--+\n       \
    \                    |  +---+       +---+  |\n                           +   \
    \ |  \\     /  |    +\n                                |   \\   /   |\n      \
    \                          |    \\ /    |\n                                |ODL\
    \  /     |ODL\n                                |    / \\ODL |\n              \
    \                  |   /   \\   |\n                           +    |  /ODL  \\\
    \  |    +\n                     +--+  |  +---+       +---+  |  +--+\n        \
    \             |H4|--|--|RT4|-------|RT3|--|--|H3|\n                     +--+ \
    \ |  +---+  ODL  +---+  |  +--+\n                           +                \
    \     +\n                     Figure 5: Example of an oversubscribed\n       \
    \                         internetwork\n              +---+       +---+      \
    \        +---+       +---+\n              |RT1|-------|RT2|              |RT1|\
    \       |RT2|\n              +---+       +---+              +---+       +---+\n\
    \                |           |                  |  \\\n                |     \
    \      |                  |   \\\n                |           |              \
    \    |    \\\n                |           |                  |     \\\n      \
    \          |           |                  |      \\\n                |       \
    \    |                  |       \\\n                |           |            \
    \      |        \\\n              +---+       +---+              +---+       +---+\n\
    \              |RT4|-------|RT3|              |RT4|-------|RT3|\n            \
    \  +---+       +---+              +---+       +---+\n           Figure 5a: One\
    \ possible        Figure 5b: Another possible\n             pattern of data-link\
    \           pattern of data-link\n                connections                \
    \    connections\n   On possible approach to this problem is to increase the OSPF\
    \ cost of\n   demand circuits that are currently discarding application packets\n\
    \   (i.e., can't be established) due to resource shortages. This may help\n  \
    \ the routing find paths that can actually deliver the packets. On the\n   downside,\
    \ it would create more routing traffic. Also, unwanted\n   routing oscillations\
    \ may result when you start varying routing\n   metrics to reflect dynamic network\
    \ conditions; see [10].\n"
- title: 8.  Unsupported capabilities
  contents:
  - "8.  Unsupported capabilities\n   The following possible capabilities associated\
    \ with demand circuit\n   routing have explicitly not been supported by this memo:\n\
    \    o   When the topology of an OSPF area changes, the changes are\n        flooded\
    \ over the area's demand circuits, even if this requires\n        (re)establishing\
    \ the demand circuits' data-link connections. One\n        might imagine a routing\
    \ system where the flooding of topology\n        changes over demand circuits\
    \ were delayed until the demand\n        circuits were (re)opened for application\
    \ traffic. However, this\n        capability is unsupported because delaying the\
    \ flooding in this\n        manner would sometimes impair the ability to discover\
    \ new\n        network destinations.\n    o   Refining the previous capability,\
    \ one might imagine that the\n        network administrator would be able to configure\
    \ for each demand\n        interface whether flooding should be immediate, or\
    \ whether it\n        should be delayed until the data-link connection is established\n\
    \        for application traffic. This would allow certain \"application-\n  \
    \      specific\" routing behaviors. For example, a demand circuit may\n     \
    \   connect a collection of client-based subnets to a collection of\n        server-based\
    \ subnets. If the client end was configured to delay\n        flooding, while\
    \ the server end was configured to flood changes\n        immediately, then new\
    \ servers would be discovered promptly while\n        clients might not be discovered\
    \ until they initiate\n        conversations. However, this capability is unsupported\
    \ because\n        of the increased complexity of (and possibility for error in)\n\
    \        the network configuration.\n"
- title: A. Format of the OSPF Options field
  contents:
  - "A. Format of the OSPF Options field\n   The OSPF Options field is present in\
    \ OSPF Hello packets, Database\n   Description packets and all LSAs. The Options\
    \ field enables OSPF\n   routers to support (or not support) optional capabilities,\
    \ and to\n   communicate their capability level to other OSPF routers. Through\n\
    \   this mechanism routers of differing capabilities can be mixed within\n   an\
    \ OSPF routing domain.\n   The memo defines one of the Option bits: the DC-bit\
    \ (for Demand\n   Circuit capability). The DC-bit is set in a router's self-originated\n\
    \   LSAs if and only if it supports the functionality defined in Section\n   2\
    \ of this memo. Note that this does not necessarily mean that the\n   router can\
    \ be the endpoint of a demand circuit, but only that it can\n   properly process\
    \ LSAs having the DoNotAge bit set. In contrast, the\n   DC-bit is set in Hello\
    \ Packets and Database Description Packets sent\n   out an interface if and only\
    \ if the router wants to treat the\n   attached point-to-point network as a demand\
    \ circuit (see Section\n   3.2.1).\n   The addition of the DC-bit makes the current\
    \ assignment of the OSPF\n   Options field as follows:\n                     \
    \  +------------------------------------+\n                       | * | * | DC\
    \ | EA | N/P | MC | E | T |\n                       +------------------------------------+\n\
    \                         Figure 5: The OSPF Options field\n    T-bit\n      \
    \  This bit describes TOS-based routing capability, as specified in\n        [1].\n\
    \    E-bit\n        This bit describes the way AS-external-LSAs are flooded, as\n\
    \        described in [1].\n    MC-bit\n        This bit describes whether IP\
    \ multicast datagrams are forwarded\n        according to the specifications in\
    \ [4].\n    N/P-bit\n        This bit describes the handling of Type-7 LSAs, as\
    \ specified in\n        [3].\n    EA-bit\n        This bit describes the router's\
    \ willingness to receive and\n        forward External-Attributes-LSAs, as specified\
    \ in [5].\n    DC-bit\n        This bit describes the handling of demand circuits,\
    \ as specified\n        in this memo.  Its setting in Hellos and Database Description\n\
    \        Packets is described in Sections 3.2.1 and 3.2.2. Its setting in\n  \
    \      LSAs is described in Sections 2.1 and 2.5.\n"
- title: B. Configurable Parameters
  contents:
  - "B. Configurable Parameters\n   This memo defines a single additional configuration\
    \ parameter for\n   OSPF interfaces. In addition, the OSPF Interface configuration\n\
    \   parameter PollInterval, previously used only on NBMA networks, is now\n  \
    \ also used on point-to-point networks (see Sections 3.1 and 3.2.2).\n    ospfIfDemand\n\
    \        Indicates whether the interface connects to a demand circuit.\n     \
    \   When set to TRUE, the procedures described in Section 3 of this\n        memo\
    \ are followed, in order to send a minimum of routing traffic\n        over the\
    \ demand circuit. On point-to-point networks, this allows\n        the circuit\
    \ to be closed when not carrying application traffic.\n        When a broadcast\
    \ or NBMA interface is configured to connect to a\n        demand circuit (see\
    \ Section 1.2 of [1]), the data-link\n        connections will be kept open constantly\
    \ due to OSPF Hello\n        traffic, but the amount of flooding traffic will\
    \ still be\n        greatly reduced.\n"
- title: C. Architectural Constants
  contents:
  - "C. Architectural Constants\n   This memo defines a single additional OSPF architectural\
    \ constant.\n    DoNotAge\n        Equal to the hexadecimal value 0x8000, which\
    \ is the high bit of\n        the 16-bit LS age field in OSPF LSAs. When this\
    \ bit is set in\n        the LS age field, the LSA is not aged as it is held in\
    \ the\n        router's link state database. This allows the elimination of the\n\
    \        periodic LSA refresh over demand circuits. See Section 2.2 for\n    \
    \    more information on processing the DoNotAge bit.\n"
- title: References
  contents:
  - "References\n   [1] Moy, J., \"OSPF Version 2\", RFC 1583, Proteon, Inc., March\
    \ 1994.\n   [2] Meyer, G., \"Extensions to RIP to Support Demand Circuits\", RFC\n\
    \       1582, Spider Systems, February 1994.\n   [3] Coltun, R. and V. Fuller,\
    \ \"The OSPF NSSA Option\", RFC 1587,\n       RainbowBridge Communications, Stanford\
    \ University, March 1994.\n   [4] Moy, J., \"Multicast Extensions to OSPF\", RFC\
    \ 1584, Proteon, Inc.,\n       March 1994.\n   [5] Ferguson, D., \"The OSPF External\
    \ Attributes LSA\", Work in\n       Progress.\n   [6] Moy, J., Editor, \"OSPF\
    \ Protocol Analysis\", RFC 1245, Proteon,\n       Inc., July 1991.\n   [7] Baker\
    \ F. and R. Coltun, \"OSPF Version 2 Management Information\n       Base\", RFC\
    \ 1253, ACC, University of Maryland, August 1991.\n   [8] Baker F., \"OSPF Point-to-MultiPoint\
    \ Interface\", Work in Progress.\n   [9] Bertsekas, D., and R. Gallager, \"Data\
    \ Networks\", Prentice Hall,\n       Inc., 1992.\n  [10] Khanna, A., \"Short-Term\
    \ Modifications to Routing and Congestion\n       Control\", BBN Report 6714,\
    \ BBN, February 1988.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Moy\n   Cascade Communications Corp.\n   5 Carlisle\
    \ Road\n   Westford, MA 01886\n   Phone: 508-692-2600 Ext. 394\n   Fax:   508-692-9214\n\
    \   EMail: jmoy@casc.com\n"
