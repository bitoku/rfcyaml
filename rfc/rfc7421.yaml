- title: __initial_text__
  contents:
  - '           Analysis of the 64-bit Boundary in IPv6 Addressing

    '
- title: Abstract
  contents:
  - "Abstract\n   The IPv6 unicast addressing format includes a separation between\
    \ the\n   prefix used to route packets to a subnet and the interface identifier\n\
    \   used to specify a given interface connected to that subnet.\n   Currently,\
    \ the interface identifier is defined as 64 bits long for\n   almost every case,\
    \ leaving 64 bits for the subnet prefix.  This\n   document describes the advantages\
    \ of this fixed boundary and analyzes\n   the issues that would be involved in\
    \ treating it as a variable\n   boundary.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7421.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Advantages of a Fixed Identifier Length . . . . . . .\
    \ . . . .   4\n   3.  Arguments for Shorter Identifier Lengths  . . . . . . .\
    \ . . .   5\n     3.1.  Insufficient Address Space Delegated  . . . . . . . .\
    \ . .   5\n     3.2.  Hierarchical Addressing . . . . . . . . . . . . . . . .\
    \ .   6\n     3.3.  Audit Requirement . . . . . . . . . . . . . . . . . . . .\
    \   7\n     3.4.  Concerns over ND Cache Exhaustion . . . . . . . . . . . .  \
    \ 7\n   4.  Effects of Varying the Interface Identifier Length  . . . . .   8\n\
    \     4.1.  Interaction with IPv6 Specifications  . . . . . . . . . .   8\n  \
    \   4.2.  Possible Failure Modes  . . . . . . . . . . . . . . . . .  10\n    \
    \ 4.3.  Experimental Observations . . . . . . . . . . . . . . . .  12\n      \
    \ 4.3.1.  Survey of the processing of Neighbor Discovery\n               Options\
    \ with Prefixes Other than /64  . . . . . . . .  12\n       4.3.2.  Other Observations\
    \  . . . . . . . . . . . . . . . . .  14\n     4.4.  Implementation and Deployment\
    \ Issues  . . . . . . . . . .  14\n     4.5.  Privacy Issues  . . . . . . . .\
    \ . . . . . . . . . . . . .  16\n   5.  Security Considerations . . . . . . .\
    \ . . . . . . . . . . . .  16\n   6.  References  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . .  17\n     6.1.  Normative References  . . . . . . . .\
    \ . . . . . . . . . .  17\n     6.2.  Informative References  . . . . . . . .\
    \ . . . . . . . . .  21\n   Acknowledgements .  . . . . . . . . . . . . . . .\
    \ . . . . . . . .  23\n   Authors' Addresses  . . . . . . . . . . . . . . . .\
    \ . . . . . . .  24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Rather than simply overcoming the IPv4 address shortage\
    \ by doubling\n   the address size to 64 bits, IPv6 addresses were originally\
    \ chosen to\n   be 128 bits long to provide flexibility and new possibilities.\
    \  In\n   particular, the notion of a well-defined interface identifier was\n\
    \   added to the IP addressing model.  The IPv6 addressing architecture\n   [RFC4291]\
    \ specifies that a unicast address is divided into n bits of\n   subnet prefix\
    \ followed by (128-n) bits of interface identifier (IID).\n   The bits in the\
    \ IID may have significance only in the process of\n   deriving the IID; once\
    \ it is derived, the entire identifier should be\n   treated as an opaque value\
    \ [RFC7136].  Also, since IPv6 routing is\n   entirely based on variable length\
    \ prefixes (also known as variable\n   length subnet masks), there is no basic\
    \ architectural assumption that\n   n has any particular fixed value.  All IPv6\
    \ routing protocols support\n   prefixes of any length up to /128.\n   The IID\
    \ is of basic importance in the IPv6 stateless address\n   autoconfiguration (SLAAC)\
    \ process [RFC4862].  However, it is\n   important to understand that its length\
    \ is a parameter in the SLAAC\n   process, and it is determined in a separate\
    \ link-type specific\n   document (see the definition of \"interface identifier\"\
    \ in Section 2\n   of RFC 4862).  The SLAAC protocol does not define its length\
    \ or\n   assume any particular length.  Similarly, DHCPv6 [RFC3315] does not\n\
    \   include a prefix length in its address assignment.\n   The notion of a /64\
    \ boundary in the address was introduced after the\n   initial design of IPv6,\
    \ following a period when it was expected to be\n   at /80.  There were two motivations\
    \ for setting it at /64.  One was\n   the original \"8+8\" proposal [ODELL] that\
    \ eventually led to the\n   Identifier-Locator Network Protocol (ILNP) [RFC6741],\
    \ which required\n   a fixed point for the split between local and wide-area parts\
    \ of the\n   address.  The other was the expectation that 64-bit Extended Unique\n\
    \   Identifier (EUI-64) Media Access Control (MAC) addresses would become\n  \
    \ widespread in place of 48-bit addresses, coupled with the plan at\n   that time\
    \ that auto-configured addresses would normally be based on\n   interface identifiers\
    \ derived from MAC addresses.\n   As a result, RFC 4291 describes a method of\
    \ forming interface\n   identifiers from IEEE EUI-64 hardware addresses [IEEE802],\
    \ and this\n   specifies that such interface identifiers are 64 bits long.  Various\n\
    \   other methods of forming interface identifiers also specify a length\n   of\
    \ 64 bits.  The addressing architecture, as modified by [RFC7136],\n   states\
    \ that:\n      For all unicast addresses, except those that start with the binary\n\
    \      value 000, Interface IDs are required to be 64 bits long.  If\n      derived\
    \ from an IEEE MAC-layer address, they must be constructed\n      in Modified\
    \ EUI-64 format.\n   The de facto length of almost all IPv6 interface identifiers\
    \ is\n   therefore 64 bits.  The only documented exception is in [RFC6164],\n\
    \   which standardizes 127-bit prefixes for point-to-point links between\n   routers,\
    \ among other things, to avoid a loop condition known as the\n   ping-pong problem.\n\
    \   With that exception, and despite the comments above about the routing\n  \
    \ architecture and the design of SLAAC, using an IID shorter than 64\n   bits\
    \ and a subnet prefix longer than 64 bits is outside the current\n   IPv6 specifications,\
    \ so results may vary.\n   The question is often asked why the subnet prefix boundary\
    \ is set\n   rigidly at /64.  The first purpose of this document is to explain\
    \ the\n   advantages of the fixed IID length.  Its second purpose is to\n   analyze,\
    \ in some detail, the effects of hypothetically varying the\n   IID length.  The\
    \ fixed-length limits the practical length of a\n   routing prefix to 64 bits,\
    \ whereas architecturally, and from the\n   point of view of routing protocols,\
    \ it could be any value up to /128,\n   as in the case of host routes.  Whatever\
    \ the length of the IID, the\n   longest match is done on the concatenation of\
    \ prefix and IID.  Here,\n   we mainly discuss the question of a shorter IID,\
    \ which would allow a\n   longer subnet prefix.  The document makes no proposal\
    \ for a change to\n   the IID length.\n   The following three sections describe,\
    \ in turn, the advantages of the\n   fixed-length IID, some arguments for shorter\
    \ lengths, and the\n   expected effects of varying the length.\n"
- title: 2.  Advantages of a Fixed Identifier Length
  contents:
  - "2.  Advantages of a Fixed Identifier Length\n   As mentioned in Section 1, the\
    \ existence of an IID of a given length\n   is a necessary part of IPv6 stateless\
    \ address autoconfiguration\n   (SLAAC) [RFC4862].  This length is normally the\
    \ same for all nodes on\n   a given link that is running SLAAC.  Even though this\
    \ length is a\n   parameter for SLAAC, determined separately for the link-layer\
    \ media\n   type of each interface, a globally fixed IID length for all link-\n\
    \   layer media is the simplest solution and is consistent with the\n   principles\
    \ of Internet host configuration described in [RFC5505].\n   An interface identifier\
    \ of significant length, clearly separated from\n   the subnet prefix, makes it\
    \ possible to limit the traceability of a\n   host computer by varying the identifier.\
    \  This is discussed further\n   in Section 4.5.\n   An interface identifier of\
    \ significant length guarantees that there\n   are always enough addresses in\
    \ any subnet to add one or more real or\n   virtual interfaces.  There might be\
    \ other limits, but IP addressing\n   will never get in the way.\n   The addressing\
    \ architecture [RFC4291] [RFC7136] sets the IID length\n   at 64 bits for all\
    \ unicast addresses and therefore for all media\n   supporting SLAAC.  An immediate\
    \ effect of fixing the IID length at 64\n   bits is, of course, that it fixes\
    \ the subnet prefix length also at 64\n   bits, regardless of the aggregate prefix\
    \ assigned to the site\n   concerned, which in accordance with [RFC6177] should\
    \ be /56 or\n   shorter.  This situation has various specific advantages:\n  \
    \ o  Everything is the same.  Compared to IPv4, there is no more\n      calculating\
    \ leaf subnet sizes, no more juggling between subnets,\n      and fewer consequent\
    \ errors.  Network design is therefore simpler\n      and much more straightforward.\
    \  This is of importance for all\n      types of networks -- enterprise, campus,\
    \ small office, or home\n      networks -- and for all types of operator, from\
    \ professional to\n      consumer.\n   o  Adding a subnet is easy -- just take\
    \ another /64 from the pool.\n      No estimates, calculations, consideration,\
    \ or judgement is needed.\n   o  Router configurations are homogeneous and easier\
    \ to understand.\n   o  Documentation is easier to write and easier to read; training\
    \ is\n      easier.\n   The remainder of this document describes arguments that\
    \ have been\n   made against the current fixed IID length and analyzes the effects\
    \ of\n   a possible change.  However, the consensus of the IETF is that the\n\
    \   benefits of keeping the length fixed at 64 bits and the practical\n   difficulties\
    \ of changing it outweigh the arguments for change.\n"
- title: 3.  Arguments for Shorter Identifier Lengths
  contents:
  - "3.  Arguments for Shorter Identifier Lengths\n   In this section, we describe\
    \ arguments for scenarios where shorter\n   IIDs, implying prefixes longer than\
    \ /64, have been used or proposed.\n"
- title: 3.1.  Insufficient Address Space Delegated
  contents:
  - "3.1.  Insufficient Address Space Delegated\n   A site may not be delegated a\
    \ sufficiently generous prefix from which\n   to allocate a /64 prefix to all\
    \ of its internal subnets.  In this\n   case, the site may either determine that\
    \ it does not have enough\n   address space to number all its network elements\
    \ and thus, at the\n   very best, be only partially operational, or it may choose\
    \ to use\n   internal prefixes longer than /64 to allow multiple subnets and the\n\
    \   hosts within them to be configured with addresses.\n   In this case, the site\
    \ might choose, for example, to use a /80 per\n   subnet in combination with hosts\
    \ using either manually configured\n   addressing or DHCPv6 [RFC3315].\n   Scenarios\
    \ that have been suggested where an insufficient prefix might\n   be delegated\
    \ include home or small office networks, vehicles,\n   building services, and\
    \ transportation services (e.g., road signs).\n   It should be noted that the\
    \ homenet architecture text [RFC7368]\n   states that Customer Premises Equipment\
    \ (CPE) should consider the\n   lack of sufficient address space to be an error\
    \ condition, rather\n   than using prefixes longer than /64 internally.\n   Another\
    \ scenario occasionally suggested is one where the Internet\n   address registries\
    \ actually begin to run out of IPv6 prefix space,\n   such that operators can\
    \ no longer assign reasonable prefixes to users\n   in accordance with [RFC6177].\
    \  It is sometimes suggested that\n   assigning a prefix such as /48 or /56 to\
    \ every user site (including\n   the smallest) as recommended by [RFC6177] is\
    \ wasteful.  In fact, the\n   currently released unicast address space, 2000::/3,\
    \ contains 35\n   trillion /48 prefixes ((2**45 = 35,184,372,088,832), of which\
    \ only a\n   small fraction have been allocated.  Allowing for a conservative\n\
    \   estimate of allocation efficiency, i.e., an HD-ratio of 0.94\n   [RFC4692],\
    \ approximately 5 trillion /48 prefixes can be allocated.\n   Even with a relaxed\
    \ HD-ratio of 0.89, approximately one trillion /48\n   prefixes can be allocated.\
    \  Furthermore, with only 2000::/3 currently\n   committed for unicast addressing,\
    \ we still have approximately 85% of\n   the address space in reserve.  Thus,\
    \ there is no objective risk of\n   prefix depletion by assigning /48 or /56 prefixes\
    \ even to the\n   smallest sites.\n"
- title: 3.2.  Hierarchical Addressing
  contents:
  - "3.2.  Hierarchical Addressing\n   Some operators have argued that more prefix\
    \ bits are needed to allow\n   an aggregated hierarchical addressing scheme within\
    \ a campus or\n   corporate network.  However, if a campus or enterprise gets\
    \ a /48\n   prefix (or shorter), then that already provides 16 bits for\n   hierarchical\
    \ allocation.  In any case, flat IGP routing is widely and\n   successfully used\
    \ within rather large networks, with hundreds of\n   routers and thousands of\
    \ end systems.  Therefore, there is no\n   objective need for additional prefix\
    \ bits to support hierarchy and\n   aggregation within enterprises.\n"
- title: 3.3.  Audit Requirement
  contents:
  - "3.3.  Audit Requirement\n   Some network operators wish to know and audit nodes\
    \ that are active\n   on a network, especially those that are allowed to communicate\
    \ off-\n   link or off-site.  They may also wish to limit the total number of\n\
    \   active addresses and sessions that can be sourced from a particular\n   host,\
    \ LAN, or site, in order to prevent potential resource-depletion\n   attacks or\
    \ other problems spreading beyond a certain scope of\n   control.  It has been\
    \ argued that this type of control would be\n   easier if only long network prefixes\
    \ with relatively small numbers of\n   possible hosts per network were used, reducing\
    \ the discovery problem.\n   However, such sites most typically operate using\
    \ DHCPv6, which means\n   that all legitimate hosts are automatically known to\
    \ the DHCPv6\n   servers, which is sufficient for audit purposes.  Such hosts\
    \ could,\n   if desired, be limited to a small range of IID values without\n \
    \  changing the /64 subnet length.  Any hosts inadvertently obtaining\n   addresses\
    \ via SLAAC can be audited through Neighbor Discovery (ND)\n   logs.\n"
- title: 3.4.  Concerns over ND Cache Exhaustion
  contents:
  - "3.4.  Concerns over ND Cache Exhaustion\n   A site may be concerned that it is\
    \ open to ND cache exhaustion\n   attacks [RFC3756], whereby an attacker sends\
    \ a large number of\n   messages in rapid succession to a series of (most likely\
    \ inactive)\n   host addresses within a specific subnet.  Such an attack attempts\
    \ to\n   fill a router's ND cache with ND requests pending completion, which\n\
    \   results in denying correct operation to active devices on the\n   network.\n\
    \   One potential way to mitigate this attack would be to consider using\n   a\
    \ /120 prefix, thus limiting the number of addresses in the subnet to\n   be similar\
    \ to an IPv4 /24 prefix, which should not cause any concerns\n   for ND cache\
    \ exhaustion.  Note that the prefix does need to be quite\n   long for this scenario\
    \ to be valid.  The number of theoretically\n   possible ND cache slots on the\
    \ segment needs to be of the same order\n   of magnitude as the actual number\
    \ of hosts.  Thus, small increases\n   from the /64 prefix length do not have\
    \ a noticeable impact; even 2^32\n   potential entries, a factor of two billion\
    \ decrease compared to 2^64,\n   is still more than enough to exhaust the memory\
    \ on current routers.\n   Given that most link-layer mappings cause SLAAC to assume\
    \ a 64-bit\n   network boundary, in such an approach hosts would likely need to\
    \ use\n   DHCPv6 or be manually configured with addresses.\n   It should be noted\
    \ that several other mitigations of the ND cache\n   attack are described in [RFC6583],\
    \ and that limiting the size of the\n   cache and the number of incomplete entries\
    \ allowed would also defeat\n   the attack.  For the specific case of a point-to-point\
    \ link between\n   routers, this attack is indeed mitigated by a /127 prefix [RFC6164].\n"
- title: 4.  Effects of Varying the Interface Identifier Length
  contents:
  - "4.  Effects of Varying the Interface Identifier Length\n   This section of the\
    \ document analyzes the impact and effects of\n   varying the length of an IPv6\
    \ unicast IID by reducing it to less than\n   64 bits.\n"
- title: 4.1.  Interaction with IPv6 Specifications
  contents:
  - "4.1.  Interaction with IPv6 Specifications\n   The precise 64-bit length of the\
    \ IID is widely mentioned in numerous\n   RFCs describing various aspects of IPv6.\
    \  It is not straightforward\n   to distinguish cases where this has normative\
    \ impact or affects\n   interoperability.  This section aims to identify specifications\
    \ that\n   contain an explicit reference to the 64-bit length.  Regardless of\n\
    \   implementation issues, the RFCs themselves would all need to be\n   updated\
    \ if the 64-bit rule was changed, even if the updates were\n   small, which would\
    \ involve considerable time and effort.\n   First and foremost, the RFCs describing\
    \ the architectural aspects of\n   IPv6 addressing explicitly state, refer, and\
    \ repeat this apparently\n   immutable value: Addressing Architecture [RFC4291],\
    \ IPv6 Address\n   Assignment to End Sites [RFC6177], Reserved IIDs [RFC5453],\
    \ and ILNP\n   Node Identifiers [RFC6741].  Customer edge routers impose /64 for\n\
    \   their interfaces [RFC7084].  The IPv6 Subnet Model [RFC5942] points\n   out\
    \ that the assumption of a /64 prefix length is a potential\n   implementation\
    \ error.\n   Numerous IPv6-over-foo documents make mandatory statements with\n\
    \   respect to the 64-bit length of the IID to be used during the\n   Stateless\
    \ Autoconfiguration.  These documents include [RFC2464]\n   (Ethernet), [RFC2467]\
    \ (Fiber Distributed Data Interface (FDDI)),\n   [RFC2470] (Token Ring), [RFC2492]\
    \ (ATM), [RFC2497] (ARCnet),\n   [RFC2590] (Frame Relay), [RFC3146] (IEEE 1394),\
    \ [RFC4338] (Fibre\n   Channel), [RFC4944] (IEEE 802.15.4), [RFC5072] (PPP), [RFC5121]\n\
    \   [RFC5692] (IEEE 802.16), [RFC2529] (6over4), [RFC5214] (Intra-Site\n   Automatic\
    \ Tunnel Addressing Protocol (ISATAP)), [AERO-TRANS]\n   (Asymmetric Extended\
    \ Route Optimization (AERO)), [BLUETOOTH-LE]\n   (BLUETOOTH Low Energy), [IPv6-TRANS]\
    \ (IPv6 over MS/TP), and\n   [IPv6-G9959] (IPv6 packets over ITU-T G.9959).\n\
    \   To a lesser extent, the address configuration RFCs themselves may in\n   some\
    \ ways assume the 64-bit length of an IID (e.g, RFC 4862 for the\n   link-local\
    \ addresses, DHCPv6 for the potentially assigned EUI-\n   64-based IP addresses,\
    \ and Optimistic Duplicate Address Detection\n   [RFC4429] that computes 64-bit-based\
    \ collision probabilities).\n   The Multicast Listener Discovery Version 1 (MLDv1)\
    \ [RFC2710] and\n   MLDv2 [RFC3810] protocols mandate that all queries be sent\
    \ with a\n   link-local source address, with the exception of MLD messages sent\n\
    \   using the unspecified address when the link-local address is\n   tentative\
    \ [RFC3590].  At the time of publication of RFC 2710, the\n   IPv6 addressing\
    \ architecture specified link-local addresses with\n   64-bit interface identifiers.\
    \  MLDv2 explicitly specifies the use of\n   the fe80::/64 link-local prefix and\
    \ bases the querier election\n   algorithm on the link-local subnet prefix of\
    \ length /64.\n   The \"IPv6 Flow Label Specification\" [RFC6437] gives an example\
    \ of a\n   20-bit hash function generation, which relies on splitting an IPv6\n\
    \   address in two equally sized, 64-bit-length parts.\n   The basic transition\
    \ mechanisms [RFC4213] refer to IIDs of length 64\n   for link-local addresses;\
    \ other transition mechanisms such as Teredo\n   [RFC4380] assume the use of IIDs\
    \ of length 64.  Similar assumptions\n   are found in 6to4 [RFC3056] and 6rd [RFC5969].\
    \  Translation-based\n   transition mechanisms such as NAT64 and NPTv6 have some\
    \ dependency on\n   prefix length, discussed below.\n   The proposed method [RFC7278]\
    \ of extending an assigned /64 prefix\n   from a smartphone's cellular interface\
    \ to its WiFi link relies on\n   prefix length, and implicitly on the length of\
    \ the IID, to be valued\n   at 64.\n   The Cryptographically Generated Addresses\
    \ (CGA) and Hash-Based\n   Addresses (HBA) specifications rely on the 64-bit identifier\
    \ length\n   (see below), as do the Privacy extensions [RFC4941] and some examples\n\
    \   in \"Internet Key Exchange Version 2 (IKEv2)\" [RFC7296].\n   464XLAT [RFC6877]\
    \ explicitly mentions acquiring /64 prefixes.\n   However, it also discusses the\
    \ possibility of using the interface\n   address on the device as the end point\
    \ for the traffic, thus\n   potentially removing this dependency.\n   [RFC2526]\
    \ reserves a number of subnet anycast addresses by reserving\n   some anycast\
    \ IIDs.  An anycast IID so reserved cannot be less than 7\n   bits long.  This\
    \ means that a subnet prefix length longer than /121\n   is not possible, and\
    \ a subnet of exactly /121 would be useless since\n   all its identifiers are\
    \ reserved.  It also means that half of a /120\n   is reserved for anycast.  This\
    \ could of course be fixed in the way\n   described for /127 in [RFC6164], i.e.,\
    \ avoiding the use of anycast\n   within a /120 subnet.  Note that support for\
    \ \"on-link anycast\" is a\n   standard IPv6 neighbor discovery capability [RFC4861]\
    \ [RFC7094];\n   therefore, applications and their developers would expect it\
    \ to be\n   available.\n   The Mobile IP home network models [RFC4887] rely heavily\
    \ on the /64\n   subnet length and assume a 64-bit IID.\n   While preparing this\
    \ document, it was noted that many other IPv6\n   specifications refer to mandatory\
    \ alignment on 64-bit boundaries,\n   64-bit data structures, 64-bit counters\
    \ in MIBs, 64-bit sequence\n   numbers and cookies in security, etc.  Finally,\
    \ the number \"64\" may\n   be considered \"magic\" in some RFCs, e.g., 64k limits\
    \ in DNS and\n   Base64 encodings in MIME.  None of this has any influence on\
    \ the\n   length of the IID but might confuse a careless reader.\n"
- title: 4.2.  Possible Failure Modes
  contents:
  - "4.2.  Possible Failure Modes\n   This section discusses several specific aspects\
    \ of IPv6 where we can\n   expect operational failures with subnet prefixes other\
    \ than /64.\n   o  Router implementations: Router implementors might interpret\
    \ IETF\n      specifications such as [RFC6164] and [RFC7136] as indicating that\n\
    \      prefixes between /65 and /126 (inclusive) for unicast packets on-\n   \
    \   the-wire are invalid and that operational practices that utilize\n      prefix\
    \ lengths in this range may fail on some devices, as\n      discussed in Section\
    \ 4.3.2.\n   o  Multicast: [RFC3306] defines a method for generating IPv6\n  \
    \    multicast group addresses based on unicast prefixes.  This method\n     \
    \ assumes a longest prefix of 64 bits.  If a longer prefix is used,\n      there\
    \ is no way to generate a specific multicast group address\n      using this method.\
    \  In such cases, the administrator would need to\n      use an \"artificial\"\
    \ prefix from within their allocation (a /64 or\n      shorter) from which to\
    \ generate the group address.  This prefix\n      would not correspond to a real\
    \ subnet.\n      Similarly, [RFC3956], which specifies the Embedded Rendezvous\n\
    \      Point (RP)) allowing IPv6 multicast rendezvous point addresses to\n   \
    \   be embedded in the multicast group address, would also fail, as\n      the\
    \ scheme assumes a maximum prefix length of 64 bits.\n   o  CGA: The Cryptographically\
    \ Generated Address format [RFC3972] is\n      heavily based on a /64 interface\
    \ identifier.  [RFC3972] has\n      defined a detailed algorithm showing how to\
    \ generate a 64-bit\n      interface identifier from a public key and a 64-bit\
    \ subnet prefix.\n      Changing the /64 boundary would certainly invalidate the\
    \ current\n      CGA definition.  However, the CGA might benefit in a redefined\n\
    \      version if more bits are used for interface identifiers (which\n      means\
    \ shorter prefix length).  For now, 59 bits are used for\n      cryptographic\
    \ purposes.  The more bits are available, the stronger\n      CGA could be.  Conversely,\
    \ longer prefixes would weaken CGA.\n   o  NAT64: Both stateless NAT64 [RFC6052]\
    \ and stateful NAT64 [RFC6146]\n      are flexible for the prefix length.  [RFC6052]\
    \ has defined\n      multiple address formats for NAT64.  In Section 2 of\n  \
    \    \"IPv4-Embedded IPv6 Address Prefix and Format\" [RFC6052], the\n      network-specific\
    \ prefix could be one of /32, /40, /48, /56, /64,\n      and /96.  The remaining\
    \ part of the IPv6 address is constructed by\n      a 32-bit IPv4 address, an\
    \ 8-bit u byte and a variable length\n      suffix (there is no u byte and suffix\
    \ in the case of the 96-bit\n      Well-Known Prefix).  NAT64 is therefore OK\
    \ with a subnet boundary\n      out to /96 but not longer.\n   o  NPTv6: IPv6-to-IPv6\
    \ Network Prefix Translation [RFC6296] is also\n      bound to /64 boundary. \
    \ NPTv6 maps a /64 prefix to another /64\n      prefix.  When the NPTv6 Translator\
    \ is configured with a /48 or\n      shorter prefix, the 64-bit interface identifier\
    \ is kept unmodified\n      during translation.  However, the /64 boundary might\
    \ be changed as\n      long as the \"inside\" and \"outside\" prefixes have the\
    \ same length.\n   o  ILNP: Identifier-Locator Network Protocol (ILNP) [RFC6741]\
    \ is\n      designed around the /64 boundary, since it relies on locally\n   \
    \   unique 64-bit node identifiers (in the interface identifier\n      field).\
    \  While a redesign to use longer prefixes is not\n      inconceivable, this would\
    \ need major changes to the existing\n      specification for the IPv6 version\
    \ of ILNP.\n   o  Shim6: The Multihoming Shim Protocol for IPv6 (Shim6) [RFC5533]\
    \ in\n      its insecure form treats IPv6 addresses as opaque 128-bit objects.\n\
    \      However, to secure the protocol against spoofing, it is essential\n   \
    \   to either use CGAs (see above) or HBAs [RFC5535].  Like CGAs, HBAs\n     \
    \ are generated using a procedure that assumes a 64-bit identifier.\n      Therefore,\
    \ in effect, secure shim6 is affected by the /64 boundary\n      exactly like\
    \ CGAs.\n   o  Duplicate address risk: If SLAAC was modified to work with shorter\n\
    \      IIDs, the statistical risk of hosts choosing the same pseudo-\n      random\
    \ identifier [RFC7217] would increase correspondingly.  The\n      practical impact\
    \ of this would range from slight to dramatic,\n      depending on how much the\
    \ IID length was reduced.  In particular,\n      a /120 prefix would imply an\
    \ 8-bit IID and address collisions\n      would be highly probable.\n   o  The\
    \ link-local prefix: While RFC 4862 is careful not to define any\n      specific\
    \ length of link-local prefix within fe80::/10, the\n      addressing architecture\
    \ [RFC4291] does define the link-local IID\n      length to be 64 bits.  If different\
    \ hosts on a link used IIDs of\n      different lengths to form a link-local address,\
    \ there is potential\n      for confusion and unpredictable results.  Typically\
    \ today the\n      choice of 64 bits for the link-local IID length is hard-coded\
    \ per\n      interface, in accordance with the relevant IPv6-over-foo\n      specification,\
    \ and systems behave as if the link-local prefix was\n      actually fe80::/64.\
    \  There might be no way to change this except\n      conceivably by manual configuration,\
    \ which will be impossible if\n      the host concerned has no local user interface.\n\
    \   It goes without saying that if prefixes longer than /64 are to be\n   used,\
    \ all hosts must be capable of generating IIDs shorter than 64\n   bits, in order\
    \ to follow the auto-configuration procedure correctly\n   [RFC4862].\n"
- title: 4.3.  Experimental Observations
  contents:
  - '4.3.  Experimental Observations

    '
- title: 4.3.1.  Survey of the processing of Neighbor Discovery Options with
  contents:
  - "4.3.1.  Survey of the processing of Neighbor Discovery Options with\n       \
    \ Prefixes Other than /64\n   This section provides a survey of the processing\
    \ of Neighbor\n   Discovery options that include prefixes that are different than\
    \ /64.\n   The behavior of nodes was assessed with respect to the following\n\
    \   options:\n   o  PIO-A: Prefix Information Option (PIO) [RFC4861] with the\
    \ A bit\n      set.\n   o  PIO-L: Prefix Information Option (PIO) [RFC4861] with\
    \ the L bit\n      set.\n   o  PIO-AL: Prefix Information Option (PIO) [RFC4861]\
    \ with both the A\n      and L bits set.\n   o  RIO: Route Information Option\
    \ (RIO) [RFC4191].\n   In the tables below, the following notation is used:\n\
    \   NOT-SUP:\n      This option is not supported (i.e., it is ignored no matter\
    \ the\n      prefix length used).\n   LOCAL:\n      The corresponding prefix is\
    \ considered \"on-link\".\n   ROUTE:\n      The corresponding route is added to\
    \ the IPv6 routing table.\n   NOT-DEF:\n      The default configuration is NOT-SUP,\
    \ but there is an option to\n      enable ROUTE.\n   IGNORE:\n      The option\
    \ is ignored as an error.\n        +--------------------+--------+-------+--------+---------+\n\
    \        |  Operating System  | PIO-A  | PIO-L | PIO-AL |   RIO   |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |    FreeBSD 9.0     | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |   Linux 3.0.0-15   | IGNORE | LOCAL | LOCAL  | NOT-DEF |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |   Linux-current    | IGNORE | LOCAL | LOCAL  | NOT-DEF |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |     NetBSD 5.1     | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |  OpenBSD-current   | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |     Win XP SP2     | IGNORE | LOCAL | LOCAL  |  ROUTE  |\n        +--------------------+--------+-------+--------+---------+\n\
    \        | Win 7 Home Premium | IGNORE | LOCAL | LOCAL  |  ROUTE  |\n        +--------------------+--------+-------+--------+---------+\n\
    \      Table 1: Processing of ND options with prefixes longer than /64\n     \
    \   +--------------------+--------+-------+--------+---------+\n        |  Operating\
    \ System  | PIO-A  | PIO-L | PIO-AL |   RIO   |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |    FreeBSD 9.0     | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |   Linux 3.0.0-15   | IGNORE | LOCAL | LOCAL  | NOT-DEF |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |   Linux-current    | IGNORE | LOCAL | LOCAL  | NOT-DEF |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |     NetBSD 5.1     | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |  OpenBSD-current   | IGNORE | LOCAL | LOCAL  | NOT-SUP |\n        +--------------------+--------+-------+--------+---------+\n\
    \        |     Win XP SP2     | IGNORE | LOCAL | LOCAL  |  ROUTE  |\n        +--------------------+--------+-------+--------+---------+\n\
    \        | Win 7 Home Premium | IGNORE | LOCAL | LOCAL  |  ROUTE  |\n        +--------------------+--------+-------+--------+---------+\n\
    \     Table 2: Processing of ND options with prefixes shorter than /64\n   The\
    \ results obtained can be summarized as follows:\n   o  The \"A\" bit in the Prefix\
    \ Information Options is honored only if\n      the prefix length is 64.  This\
    \ is consistent with [RFC4862], at\n      least for the case where the IID length\
    \ is defined to be 64 bits\n      in the corresponding link-type-specific document,\
    \ which is the\n      case for all currently published such documents.  [RFC4862]\n\
    \      defines the case where the sum of the advertised prefix length and\n  \
    \    the IID length does not equal 128 as an error condition.\n   o  The \"L\"\
    \ bit in the Prefix Information Options is honored for any\n      arbitrary prefix\
    \ length (whether shorter or longer than /64).\n   o  Nodes that support the Route\
    \ Information Option allow such routes\n      to be specified with prefixes of\
    \ any arbitrary length (whether\n      shorter or longer than /64)\n"
- title: 4.3.2.  Other Observations
  contents:
  - "4.3.2.  Other Observations\n   Participants in the V6OPS working group have indicated\
    \ that some\n   forwarding devices have been shown to work correctly with long\n\
    \   prefixes such as /80 or /96.  Indeed, it is to be expected that\n   forwarding\
    \ based on the longest prefix match will work for any prefix\n   length, and no\
    \ reports of this completely failing have been noted.\n   Also, DHCPv6 is in widespread\
    \ use without any dependency on the /64\n   boundary.  Reportedly, there are deployments\
    \ of /120 subnets\n   configured using DHCPv6.\n   There have been definite reports\
    \ that some routers have a performance\n   drop-off or even resource exhaustion\
    \ for prefixes longer than /64 due\n   to design issues.  In particular, some\
    \ routing chip designs allocate\n   much less space for longer prefixes than for\
    \ prefixes up to /64 for\n   the sake of savings in memory, power, and lookup\
    \ latency.  Some\n   devices need special-case code to handle point-to-point links\n\
    \   according to [RFC6164].\n   It has been reported that at least one type of\
    \ switch has a content-\n   addressable memory limited to 144 bits, which is indeed\
    \ a typical\n   value for commodity components [TCAM].  This means that packet\n\
    \   filters or access control lists cannot be defined based on 128-bit\n   addresses\
    \ and two 16-bit port numbers; the longest prefix that could\n   be used in such\
    \ a filter is a /112.\n"
- title: 4.4.  Implementation and Deployment Issues
  contents:
  - "4.4.  Implementation and Deployment Issues\n   From an early stage, implementations\
    \ and deployments of IPv6 assumed\n   the /64 subnet length, even though routing\
    \ was based on prefixes of\n   any length.  As shown above, this became anchored\
    \ in many\n   specifications (Section 4.1) and in important aspects of\n   implementations\
    \ commonly used in local area networks (Section 4.3).\n   In fact, a programmer\
    \ might be lulled into assuming a comfortable\n   rule of thumb that subnet prefixes\
    \ are always /64 and an IID is\n   always of length 64.  Apart from the limited\
    \ evidence in\n   Section 4.3.1, we cannot tell without code inspections or tests\n\
    \   whether existing stacks are able to handle a flexible IID length or\n   whether\
    \ they would require modification to do so.  A conforming\n   implementation of\
    \ an IPv6-over-foo that specifies a 64 bit IID for\n   foo links will of course\
    \ only support 64.  But in a well designed\n   stack, the IP layer itself will\
    \ treat that 64 as a parameter, so\n   changing the IID length in the IPv6-over-foo\
    \ code should be all that\n   is necessary.\n   The main practical consequence\
    \ of the existing specifications is that\n   deployments in which longer subnet\
    \ prefixes are used cannot make use\n   of SLAAC-configured addresses and require\
    \ either manually configured\n   addresses or DHCPv6.  To reverse this argument,\
    \ if it was considered\n   desirable to allow auto-configured addresses with subnet\
    \ prefixes\n   longer than /64, all of the specifications identified above as\n\
    \   depending on /64 would have to be modified with due regard to\n   interoperability\
    \ with unmodified stacks.  In fact, [RFC7217] allows\n   for this possibility.\
    \  Then, modified stacks would have to be\n   developed and deployed.  It might\
    \ be the case that some stacks\n   contain dependencies on the /64 boundary that\
    \ are not directly\n   implied by the specifications, and any such hidden dependencies\
    \ would\n   also need to be found and removed.\n   At least one DHCPv6 client\
    \ unconditionally installs a /64 prefix as\n   on-link when it configures an interface\
    \ with an address, although\n   some specific operating system vendors seem to\
    \ change this default\n   behavior by tweaking a client-side script.  This is\
    \ in clear\n   violation of the IPv6 subnet model [RFC5942].  The motivation for\n\
    \   this choice is that if there is no router on the link, the hosts\n   would\
    \ fail to communicate with each other using the configured\n   addresses because\
    \ the \"on-link assumption\" was removed in [RFC4861].\n   This is not really\
    \ about the magic number of 64, but an\n   implementation may sometimes pick an\
    \ arbitrary value of prefix length\n   due to the removal of the on-link assumption,\
    \ and the value chosen\n   will most likely be 64.\n   Typical IP Address Management\
    \ (IPAM) tools treat /64 as the default\n   subnet length but allow users to specify\
    \ longer subnet prefixes if\n   desired.  Clearly, all IPAM tools and network\
    \ management systems\n   would need to be checked in detail.\n   Finally, IPv6\
    \ is already deployed at many sites, with a large number\n   of staff trained\
    \ on the basis of the existing standards, supported by\n   documentation and tools\
    \ based on those standards.  Numerous existing\n   middlebox devices are also\
    \ based on those standards.  These people,\n   documents, tools, and devices represent\
    \ a very large investment that\n   would be seriously impacted by a change in\
    \ the /64 boundary.\n"
- title: 4.5.  Privacy Issues
  contents:
  - "4.5.  Privacy Issues\n   The length of the interface identifier has implications\
    \ for privacy\n   [ADDRESS-PRIVACY].  In any case in which the value of the identifier\n\
    \   is intended to be hard to guess, whether or not it is\n   cryptographically\
    \ generated, it is apparent that more bits are\n   better.  For example, if there\
    \ are only 20 bits to be guessed, then\n   at most just over a million guesses\
    \ are needed, which is well within\n   the capacity of a low-cost attack mechanism.\
    \  It is hard to state in\n   general how many bits are enough to protect privacy,\
    \ since this\n   depends on the resources available to the attacker, but it seems\n\
    \   clear that a privacy solution needs to resist an attack requiring\n   billions\
    \ rather than millions of guesses.  Trillions would be better,\n   suggesting\
    \ that at least 40 bits should be available.  Thus, we can\n   argue that subnet\
    \ prefixes longer than say /80 might raise privacy\n   concerns by making the\
    \ IID guessable.\n   A prefix long enough to limit the number of addresses comparably\
    \ to\n   an IPv4 subnet, such as /120, would create exactly the same situation\n\
    \   for privacy as IPv4 except for the absence of NAT.  In particular, a\n   host\
    \ would be forced to pick a new IID when roaming to a new network\n   to avoid\
    \ collisions.  As mentioned earlier, it is likely that SLAAC\n   will not be used\
    \ on such a subnet.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   In addition to the privacy issues mentioned in\
    \ Section 4.5 and the\n   issues mentioned with CGAs and HBAs in Section 4.2,\
    \ the length of the\n   subnet prefix affects the matter of defense against scanning\
    \ attacks\n   [HOST-SCANNING].  Assuming the attacker has discovered or guessed\
    \ the\n   prefix length, a longer prefix reduces the space that the attacker\n\
    \   needs to scan, e.g., to only 256 addresses if the prefix is /120.  On\n  \
    \ the other hand, if the attacker has not discovered the prefix length\n   and\
    \ assumes it to be /64, routers can trivially discard attack\n   packets that\
    \ do not fall within an actual subnet.\n   However, assume that an attacker finds\
    \ one valid address \"A\" and\n   assumes that it is within a long prefix such\
    \ as a /120.  The attacker\n   then starts a scanning attack by scanning \"outwards\"\
    \ from A, by\n   trying A+1, A-1, A+2, A-2, etc.  This attacker will easily find\
    \ all\n   hosts in any subnet with a long prefix, because they will have\n   addresses\
    \ close to A.  We therefore conclude that any prefix\n   containing densely packed\
    \ valid addresses is vulnerable to a scanning\n   attack, without the attacker\
    \ needing to guess the prefix length.\n   Therefore, to preserve IPv6's advantage\
    \ over IPv4 in resisting\n   scanning attacks, it is important that subnet prefixes\
    \ are short\n   enough to allow sparse allocation of identifiers within each subnet.\n\
    \   The considerations are similar to those for privacy, and we can again\n  \
    \ argue that prefixes longer than say /80 might significantly increase\n   vulnerability.\
    \  Ironically, this argument is exactly converse to the\n   argument for longer\
    \ prefixes to resist an ND cache attack, as\n   described in Section 3.4.\n  \
    \ Denial-of-service attacks related to Neighbor Discovery are discussed\n   in\
    \ Section 3.4 and in [RFC6583].  One of the mitigations suggested by\n   that\
    \ document is \"sizing subnets to reflect the number of addresses\n   actually\
    \ in use\", but the fact that this greatly simplifies scanning\n   attacks is\
    \ not noted.  For further discussion of scanning attacks,\n   see [HOST-SCANNING].\n\
    \   Note that, although not known at the time of writing, there might be\n   other\
    \ resource exhaustion attacks available, similar in nature to the\n   ND cache\
    \ attack.  We cannot exclude that such attacks might be\n   exacerbated by sparsely\
    \ populated subnets such as a /64.  It should\n   also be noted that this analysis\
    \ assumes a conventional deployment\n   model with a significant number of end-systems\
    \ located in a single\n   LAN broadcast domain.  Other deployment models might\
    \ lead to\n   different conclusions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2464]  Crawford, M., \"Transmission of IPv6\
    \ Packets over Ethernet\n              Networks\", RFC 2464, December 1998,\n\
    \              <http://www.rfc-editor.org/info/rfc2464>.\n   [RFC2467]  Crawford,\
    \ M., \"Transmission of IPv6 Packets over FDDI\n              Networks\", RFC\
    \ 2467, December 1998,\n              <http://www.rfc-editor.org/info/rfc2467>.\n\
    \   [RFC2470]  Crawford, M., Narten, T., and S. Thomas, \"Transmission of\n  \
    \            IPv6 Packets over Token Ring Networks\", RFC 2470, December\n   \
    \           1998, <http://www.rfc-editor.org/info/rfc2470>.\n   [RFC2492]  Armitage,\
    \ G., Schulter, P., and M. Jork, \"IPv6 over ATM\n              Networks\", RFC\
    \ 2492, January 1999,\n              <http://www.rfc-editor.org/info/rfc2492>.\n\
    \   [RFC2497]  Souvatzis, I., \"Transmission of IPv6 Packets over ARCnet\n   \
    \           Networks\", RFC 2497, January 1999,\n              <http://www.rfc-editor.org/info/rfc2497>.\n\
    \   [RFC2526]  Johnson, D. and S. Deering, \"Reserved IPv6 Subnet Anycast\n  \
    \            Addresses\", RFC 2526, March 1999,\n              <http://www.rfc-editor.org/info/rfc2526>.\n\
    \   [RFC2529]  Carpenter, B. and C. Jung, \"Transmission of IPv6 over IPv4\n \
    \             Domains without Explicit Tunnels\", RFC 2529, March 1999,\n    \
    \          <http://www.rfc-editor.org/info/rfc2529>.\n   [RFC2590]  Conta, A.,\
    \ Malis, A., and M. Mueller, \"Transmission of\n              IPv6 Packets over\
    \ Frame Relay Networks Specification\", RFC\n              2590, May 1999, <http://www.rfc-editor.org/info/rfc2590>.\n\
    \   [RFC2710]  Deering, S., Fenner, W., and B. Haberman, \"Multicast\n       \
    \       Listener Discovery (MLD) for IPv6\", RFC 2710, October\n             \
    \ 1999, <http://www.rfc-editor.org/info/rfc2710>.\n   [RFC3056]  Carpenter, B.\
    \ and K. Moore, \"Connection of IPv6 Domains\n              via IPv4 Clouds\"\
    , RFC 3056, February 2001,\n              <http://www.rfc-editor.org/info/rfc3056>.\n\
    \   [RFC3146]  Fujisawa, K. and A. Onoe, \"Transmission of IPv6 Packets\n    \
    \          over IEEE 1394 Networks\", RFC 3146, October 2001,\n              <http://www.rfc-editor.org/info/rfc3146>.\n\
    \   [RFC3306]  Haberman, B. and D. Thaler, \"Unicast-Prefix-based IPv6\n     \
    \         Multicast Addresses\", RFC 3306, August 2002,\n              <http://www.rfc-editor.org/info/rfc3306>.\n\
    \   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n     \
    \         and M. Carney, \"Dynamic Host Configuration Protocol for\n         \
    \     IPv6 (DHCPv6)\", RFC 3315, July 2003,\n              <http://www.rfc-editor.org/info/rfc3315>.\n\
    \   [RFC3590]  Haberman, B., \"Source Address Selection for the Multicast\n  \
    \            Listener Discovery (MLD) Protocol\", RFC 3590, September\n      \
    \        2003, <http://www.rfc-editor.org/info/rfc3590>.\n   [RFC3810]  Vida,\
    \ R. and L. Costa, \"Multicast Listener Discovery\n              Version 2 (MLDv2)\
    \ for IPv6\", RFC 3810, June 2004,\n              <http://www.rfc-editor.org/info/rfc3810>.\n\
    \   [RFC3956]  Savola, P. and B. Haberman, \"Embedding the Rendezvous\n      \
    \        Point (RP) Address in an IPv6 Multicast Address\", RFC\n            \
    \  3956, November 2004,\n              <http://www.rfc-editor.org/info/rfc3956>.\n\
    \   [RFC3972]  Aura, T., \"Cryptographically Generated Addresses (CGA)\",\n  \
    \            RFC 3972, March 2005,\n              <http://www.rfc-editor.org/info/rfc3972>.\n\
    \   [RFC4191]  Draves, R. and D. Thaler, \"Default Router Preferences and\n  \
    \            More-Specific Routes\", RFC 4191, November 2005,\n              <http://www.rfc-editor.org/info/rfc4191>.\n\
    \   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms\n \
    \             for IPv6 Hosts and Routers\", RFC 4213, October 2005,\n        \
    \      <http://www.rfc-editor.org/info/rfc4213>.\n   [RFC4291]  Hinden, R. and\
    \ S. Deering, \"IP Version 6 Addressing\n              Architecture\", RFC 4291,\
    \ February 2006,\n              <http://www.rfc-editor.org/info/rfc4291>.\n  \
    \ [RFC4338]  DeSanti, C., Carlson, C., and R. Nixon, \"Transmission of\n     \
    \         IPv6, IPv4, and Address Resolution Protocol (ARP) Packets\n        \
    \      over Fibre Channel\", RFC 4338, January 2006,\n              <http://www.rfc-editor.org/info/rfc4338>.\n\
    \   [RFC4380]  Huitema, C., \"Teredo: Tunneling IPv6 over UDP through\n      \
    \        Network Address Translations (NATs)\", RFC 4380, February\n         \
    \     2006, <http://www.rfc-editor.org/info/rfc4380>.\n   [RFC4429]  Moore, N.,\
    \ \"Optimistic Duplicate Address Detection (DAD)\n              for IPv6\", RFC\
    \ 4429, April 2006,\n              <http://www.rfc-editor.org/info/rfc4429>.\n\
    \   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n      \
    \        \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n         \
    \     September 2007, <http://www.rfc-editor.org/info/rfc4861>.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862, September 2007,\n              <http://www.rfc-editor.org/info/rfc4862>.\n\
    \   [RFC4941]  Narten, T., Draves, R., and S. Krishnan, \"Privacy\n          \
    \    Extensions for Stateless Address Autoconfiguration in\n              IPv6\"\
    , RFC 4941, September 2007,\n              <http://www.rfc-editor.org/info/rfc4941>.\n\
    \   [RFC4944]  Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler,\n    \
    \          \"Transmission of IPv6 Packets over IEEE 802.15.4\n              Networks\"\
    , RFC 4944, September 2007,\n              <http://www.rfc-editor.org/info/rfc4944>.\n\
    \   [RFC5072]  Varada, S., Haskins, D., and E. Allen, \"IP Version 6 over\n  \
    \            PPP\", RFC 5072, September 2007,\n              <http://www.rfc-editor.org/info/rfc5072>.\n\
    \   [RFC5121]  Patil, B., Xia, F., Sarikaya, B., Choi, JH., and S.\n         \
    \     Madanapalli, \"Transmission of IPv6 via the IPv6\n              Convergence\
    \ Sublayer over IEEE 802.16 Networks\", RFC 5121,\n              February 2008,\
    \ <http://www.rfc-editor.org/info/rfc5121>.\n   [RFC5214]  Templin, F., Gleeson,\
    \ T., and D. Thaler, \"Intra-Site\n              Automatic Tunnel Addressing Protocol\
    \ (ISATAP)\", RFC 5214,\n              March 2008, <http://www.rfc-editor.org/info/rfc5214>.\n\
    \   [RFC5453]  Krishnan, S., \"Reserved IPv6 Interface Identifiers\", RFC\n  \
    \            5453, February 2009,\n              <http://www.rfc-editor.org/info/rfc5453>.\n\
    \   [RFC5533]  Nordmark, E. and M. Bagnulo, \"Shim6: Level 3 Multihoming\n   \
    \           Shim Protocol for IPv6\", RFC 5533, June 2009,\n              <http://www.rfc-editor.org/info/rfc5533>.\n\
    \   [RFC5535]  Bagnulo, M., \"Hash-Based Addresses (HBA)\", RFC 5535, June\n \
    \             2009, <http://www.rfc-editor.org/info/rfc5535>.\n   [RFC5692]  Jeon,\
    \ H., Jeong, S., and M. Riegel, \"Transmission of IP\n              over Ethernet\
    \ over IEEE 802.16 Networks\", RFC 5692,\n              October 2009, <http://www.rfc-editor.org/info/rfc5692>.\n\
    \   [RFC5942]  Singh, H., Beebee, W., and E. Nordmark, \"IPv6 Subnet\n       \
    \       Model: The Relationship between Links and Subnet\n              Prefixes\"\
    , RFC 5942, July 2010,\n              <http://www.rfc-editor.org/info/rfc5942>.\n\
    \   [RFC5969]  Townsley, W. and O. Troan, \"IPv6 Rapid Deployment on IPv4\n  \
    \            Infrastructures (6rd) -- Protocol Specification\", RFC\n        \
    \      5969, August 2010,\n              <http://www.rfc-editor.org/info/rfc5969>.\n\
    \   [RFC6052]  Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n    \
    \          Li, \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052,\n     \
    \         October 2010, <http://www.rfc-editor.org/info/rfc6052>.\n   [RFC6146]\
    \  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n              NAT64:\
    \ Network Address and Protocol Translation from IPv6\n              Clients to\
    \ IPv4 Servers\", RFC 6146, April 2011,\n              <http://rfc-editor.org/info/rfc6146>.\n\
    \   [RFC6164]  Kohno, M., Nitzan, B., Bush, R., Matsuzaki, Y., Colitti,\n    \
    \          L., and T. Narten, \"Using 127-Bit IPv6 Prefixes on Inter-\n      \
    \        Router Links\", RFC 6164, April 2011,\n              <http://www.rfc-editor.org/info/rfc6164>.\n\
    \   [RFC6177]  Narten, T., Huston, G., and L. Roberts, \"IPv6 Address\n      \
    \        Assignment to End Sites\", BCP 157, RFC 6177, March 2011,\n         \
    \     <http://www.rfc-editor.org/info/rfc6177>.\n   [RFC6296]  Wasserman, M. and\
    \ F. Baker, \"IPv6-to-IPv6 Network Prefix\n              Translation\", RFC 6296,\
    \ June 2011,\n              <http://www.rfc-editor.org/info/rfc6296>.\n   [RFC6437]\
    \  Amante, S., Carpenter, B., Jiang, S., and J. Rajahalme,\n              \"IPv6\
    \ Flow Label Specification\", RFC 6437, November 2011,\n              <http://www.rfc-editor.org/info/rfc6437>.\n\
    \   [RFC7084]  Singh, H., Beebee, W., Donley, C., and B. Stark, \"Basic\n    \
    \          Requirements for IPv6 Customer Edge Routers\", RFC 7084,\n        \
    \      November 2013, <http://www.rfc-editor.org/info/rfc7084>.\n   [RFC7136]\
    \  Carpenter, B. and S. Jiang, \"Significance of IPv6\n              Interface\
    \ Identifiers\", RFC 7136, February 2014,\n              <http://www.rfc-editor.org/info/rfc7136>.\n\
    \   [RFC7296]  Kaufman, C., Hoffman, P., Nir, Y., Eronen, P., and T.\n       \
    \       Kivinen, \"Internet Key Exchange Protocol Version 2\n              (IKEv2)\"\
    , STD 79, RFC 7296, October 2014,\n              <http://www.rfc-editor.org/info/rfc7296>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [ADDRESS-PRIVACY]\n              Cooper, A.,\
    \ Gont, F., and D. Thaler, \"Privacy\n              Considerations for IPv6 Address\
    \ Generation Mechanisms\",\n              Work in Progress, draft-ietf-6man-ipv6-address-generation-\n\
    \              privacy-02, October 2014.\n   [AERO-TRANS]\n              Templin,\
    \ F., \"Transmission of IP Packets over AERO Links\",\n              Work in Progress,\
    \ draft-templin-aerolink-46, October 2014.\n   [BLUETOOTH-LE]\n              Nieminen,\
    \ J., Savolainen, T., Isomaki, M., Patil, B.,\n              Shelby, Z., and C.\
    \ Gomez, \"Transmission of IPv6 Packets\n              over BLUETOOTH Low Energy\"\
    , Work in Progress, draft-ietf-\n              6lowpan-btle-12, February 2013.\n\
    \   [HOST-SCANNING]\n              Gont, F. and T. Chown, \"Network Reconnaissance\
    \ in IPv6\n              Networks\", Work in Progress, draft-ietf-opsec-ipv6-host-\n\
    \              scanning-04, June 2014.\n   [IEEE802]  IEEE, \"IEEE Standard for\
    \ Local and Metropolitan Area\n              Networks: Overview and Architecture\"\
    , IEEE Std 802-2001\n              (R2007), 2007.\n   [IPv6-G9959]\n         \
    \     Brandt, A. and J. Buron, \"Transmission of IPv6 packets\n              over\
    \ ITU-T G.9959 Networks\", Work in Progress, draft-ietf-\n              6lo-lowpanz-08,\
    \ October 2014.\n   [IPv6-TRANS]\n              Lynn, K., Ed., Martocci, J., Neilson,\
    \ C., and S.\n              Donaldson, \"Transmission of IPv6 over MS/TP Networks\"\
    ,\n              Work in Progress, draft-ietf-6lo-6lobac-00, July 2014.\n   [ODELL]\
    \    O'Dell, M., \"8+8 - An Alternate Addressing Architecture\n              for\
    \ IPv6\", Work in Progress, draft-odell-8+8-00, October\n              1996.\n\
    \   [RFC2629]  Rose, M., \"Writing I-Ds and RFCs using XML\", RFC 2629,\n    \
    \          June 1999, <http://www.rfc-editor.org/info/rfc2629>.\n   [RFC3756]\
    \  Nikander, P., Kempf, J., and E. Nordmark, \"IPv6 Neighbor\n              Discovery\
    \ (ND) Trust Models and Threats\", RFC 3756, May\n              2004, <http://www.rfc-editor.org/info/rfc3756>.\n\
    \   [RFC4692]  Huston, G., \"Considerations on the IPv6 Host Density\n       \
    \       Metric\", RFC 4692, October 2006,\n              <http://www.rfc-editor.org/info/rfc4692>.\n\
    \   [RFC4887]  Thubert, P., Wakikawa, R., and V. Devarapalli, \"Network\n    \
    \          Mobility Home Network Models\", RFC 4887, July 2007,\n            \
    \  <http://www.rfc-editor.org/info/rfc4887>.\n   [RFC5505]  Aboba, B., Thaler,\
    \ D., Andersson, L., and S. Cheshire,\n              \"Principles of Internet\
    \ Host Configuration\", RFC 5505, May\n              2009, <http://www.rfc-editor.org/info/rfc5505>.\n\
    \   [RFC6583]  Gashinsky, I., Jaeggli, J., and W. Kumari, \"Operational\n    \
    \          Neighbor Discovery Problems\", RFC 6583, March 2012,\n            \
    \  <http://rfc-editor.org/info/rfc6583>.\n   [RFC6741]  Atkinson,, RJ., \"Identifier-Locator\
    \ Network Protocol\n              (ILNP) Engineering Considerations\", RFC 6741,\
    \ November\n              2012, <http://www.rfc-editor.org/info/rfc6741>.\n  \
    \ [RFC6877]  Mawatari, M., Kawashima, M., and C. Byrne, \"464XLAT:\n         \
    \     Combination of Stateful and Stateless Translation\", RFC\n             \
    \ 6877, April 2013,\n              <http://www.rfc-editor.org/info/rfc6877>.\n\
    \   [RFC7094]  McPherson, D., Oran, D., Thaler, D., and E. Osterweil,\n      \
    \        \"Architectural Considerations of IP Anycast\", RFC 7094,\n         \
    \     January 2014, <http://www.rfc-editor.org/info/rfc7094>.\n   [RFC7217]  Gont,\
    \ F., \"A Method for Generating Semantically Opaque\n              Interface Identifiers\
    \ with IPv6 Stateless Address\n              Autoconfiguration (SLAAC)\", RFC\
    \ 7217, April 2014,\n              <http://www.rfc-editor.org/info/rfc7217>.\n\
    \   [RFC7278]  Byrne, C., Drown, D., and A. Vizdal, \"Extending an IPv6\n    \
    \          /64 Prefix from a Third Generation Partnership Project\n          \
    \    (3GPP) Mobile Interface to a LAN Link\", RFC 7278, June\n              2014,\
    \ <http://www.rfc-editor.org/info/rfc7278>.\n   [RFC7368]  Chown, T., Ed., Arkko,\
    \ J., Brandt, A., Troan, O., and J.\n              Weil, \"IPv6 Home Networking\
    \ Architecture Principles\", RFC,\n              7368, October 2014.\n   [TCAM]\
    \     Meiners, C., Liu, A., and E. Torng, \"Algorithmic\n              Approaches\
    \ to Redesigning TCAM-Based Systems\", ACM\n              SIGMETRICS'08 467-468,\
    \ 2008.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document was inspired by a vigorous discussion on the\
    \ V6OPS\n   working group mailing list with at least 20 participants.  Later,\n\
    \   valuable comments were received from Ran Atkinson, Fred Baker, Steven\n  \
    \ Blake, Lorenzo Colitti, David Farmer, Bill Fenner, Ray Hunter,\n   Paraskevi\
    \ Iliadou, Jen Linkova, Philip Matthews, Matthew Petach,\n   Scott Schmit, Tatuya\
    \ Jinmei, Fred Templin, Ole Troan, Stig Venaas,\n   and numerous other participants\
    \ in the 6MAN working group.  An\n   extremely detailed review by Mark Smith was\
    \ especially helpful.\n   This document was originally produced using the xml2rfc\
    \ tool\n   [RFC2629].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter (editor)\n   Department of Computer Science\n\
    \   University of Auckland\n   PB 92019\n   Auckland  1142\n   New Zealand\n \
    \  EMail: brian.e.carpenter@gmail.com\n   Tim Chown\n   University of Southampton\n\
    \   Southampton, Hampshire  SO17 1BJ\n   United Kingdom\n   EMail: tjc@ecs.soton.ac.uk\n\
    \   Fernando Gont\n   SI6 Networks / UTN-FRH\n   Evaristo Carriego 2644\n   Haedo,\
    \ Provincia de Buenos Aires  1706\n   Argentina\n   EMail: fgont@si6networks.com\n\
    \   Sheng Jiang\n   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus\n   No.156\
    \ Beiqing Road\n   Hai-Dian District, Beijing  100095\n   P.R. China\n   EMail:\
    \ jiangsheng@huawei.com\n   Alexandru Petrescu\n   CEA, LIST\n   CEA Saclay\n\
    \   Gif-sur-Yvette, Ile-de-France  91190\n   France\n   EMail: Alexandru.Petrescu@cea.fr\n\
    \   Andrew Yourtchenko\n   Cisco\n   7a de Kleetlaan\n   Diegem  1830\n   Belgium\n\
    \   EMail: ayourtch@cisco.com\n"
