- contents:
  - '    IKEv2 Extensions to Support Robust Header Compression over IPsec

    '
  title: __initial_text__
- contents:
  - "Abstract\n   In order to integrate Robust Header Compression (ROHC) with IPsec,
    a\n   mechanism is needed to signal ROHC channel parameters between\n   endpoints.
    \ Internet Key Exchange (IKE) is a mechanism that can be\n   leveraged to exchange
    these parameters.  This document specifies\n   extensions to IKEv2 that will allow
    ROHC and its associated channel\n   parameters to be signaled for IPsec Security
    Associations (SAs).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5857.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Terminology .....................................................3\n   3.
    ROHC Channel Initialization for ROHCoIPsec ......................3\n      3.1.
    ROHC_SUPPORTED Notify Message ..............................3\n           3.1.1.
    ROHC Attributes .....................................5\n           3.1.2. ROHC
    Attribute Types ................................6\n      3.2. ROHC Channel Parameters
    That Are Implicitly Set ............9\n   4. Security Considerations .........................................9\n
    \  5. IANA Considerations .............................................9\n   6.
    Acknowledgments ................................................10\n   7. References
    .....................................................11\n      7.1. Normative
    References ......................................11\n      7.2. Informative References
    ....................................12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Increased packet header overhead due to IPsec [IPSEC] can
    result in\n   the inefficient utilization of bandwidth.  Coupling ROHC [ROHC]
    with\n   IPsec offers an efficient way to transfer protected IP traffic.\n   ROHCoIPsec
    [ROHCOIPSEC] requires configuration parameters to be\n   initialized at the compressor
    and decompressor.  Current\n   specifications for hop-by-hop ROHC negotiate these
    parameters through\n   a link-layer protocol such as the Point-to-Point Protocol
    (PPP)\n   (i.e., ROHC over PPP [ROHC-PPP]).  Since key exchange protocols\n   (e.g.,
    IKEv2 [IKEV2]) can be used to dynamically establish parameters\n   between IPsec
    peers, this document defines extensions to IKEv2 to\n   signal ROHC parameters
    for ROHCoIPsec.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [BRA97].\n"
  title: 2.  Terminology
- contents:
  - "3.  ROHC Channel Initialization for ROHCoIPsec\n   The following subsections
    define extensions to IKEv2 that enable an\n   initiator and a responder to signal
    parameters required to establish\n   a ROHC channel for a ROHCoIPsec session.\n"
  title: 3.  ROHC Channel Initialization for ROHCoIPsec
- contents:
  - "3.1.  ROHC_SUPPORTED Notify Message\n   ROHC channel parameters MUST be signaled
    separately for each ROHC-\n   enabled IPsec SA.  Specifically, a new Notify message
    type MUST be\n   included in the IKE_AUTH and CREATE_CHILD_SA exchanges whenever
    a new\n   ROHC-enabled IPsec SA is created, or an existing one is rekeyed.\n   The
    Notify payload sent by the initiator MUST contain the channel\n   parameters for
    the ROHC session.  These parameters indicate the\n   capabilities of the ROHC
    decompressor at the initiator.  Upon receipt\n   of the initiator's request, the
    responder will either ignore the\n   payload (if it doesn't support ROHC or the
    proposed parameters) or\n   respond with a Notify payload that contains its own
    ROHC channel\n   parameters.\n   Note that only one Notify payload is used to
    convey ROHC parameters.\n   If multiple Notify payloads containing ROHC parameters
    are received,\n   all but the first such Notify payload MUST be dropped.  If the\n
    \  initiator does not receive a Notify payload with the responder's ROHC\n   channel
    parameters, ROHC MUST NOT be enabled on the Child SA.\n   A new Notify Message
    Type value, denoted ROHC_SUPPORTED, indicates\n   that the Notify payload is conveying
    ROHC channel parameters (Section\n   4).\n   The Notify payload (defined in RFC
    4306 [IKEV2]) is illustrated in\n   Figure 1.\n                           1                   2
    \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ! Next Payload  !C!  RESERVED   !         Payload Length        !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     !  Protocol ID  !   SPI Size    !      Notify Message Type      !\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     !                                                               !\n      ~
    \               Security Parameter Index (SPI)                 ~\n      !                                                               !\n
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      !
    \                                                              !\n      ~                       Notification
    Data                       ~\n      !                                                               !\n
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                         Figure
    1. Notify Payload Format\n   The fields of the Notify payload are set as follows:\n
    \  Next Payload (1 octet)\n      Identifier for the payload type of the next payload
    in the\n      message.  Further details can be found in RFC 4306 [IKEV2].\n   Critical
    (1 bit)\n      Since all IKEv2 implementations support the Notify payload, this\n
    \     value MUST be set to zero.\n   Payload Length (2 octets)\n      As defined
    in RFC 4306 [IKEV2], this field indicates the length of\n      the current payload,
    including the generic payload header.\n   Protocol ID (1 octet)\n      Since this
    notification message is used during the creation of a\n      Child SA, this field
    MUST be set to zero.\n   SPI Size (1 octet)\n      This value MUST be set to zero,
    since no SPI is applicable (ROHC\n      parameters are set at SA creation; thus,
    the SPI has not been\n      defined).\n   Notify Message Type (2 octets)\n      This
    field MUST be set to ROHC_SUPPORTED.\n   Security Parameter Index (SPI)\n      Since
    the SPI Size field is 0, this field MUST NOT be transmitted.\n   Notification
    Data (variable)\n      This field MUST contain at least three ROHC Attributes
    (Section\n      3.1.1).\n"
  title: 3.1.  ROHC_SUPPORTED Notify Message
- contents:
  - "3.1.1.  ROHC Attributes\n   The ROHC_SUPPORTED Notify message is used to signal
    channel\n   parameters between ROHCoIPsec compressor and decompressor.  The\n
    \  message contains a list of \"ROHC Attributes\", which contain the\n   parameters
    required for the ROHCoIPsec session.\n   The format for signaling ROHC Attributes
    takes a similar format to\n   the Transform Attributes described in Section 3.3.5
    of RFC 4306\n   [IKEV2].  The format of the ROHC Attribute is shown in Figure
    2.\n                            1                   2                   3\n        0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      !A!     ROHC Attribute Type     !  AF=0  ROHC Attribute Length  !\n       !F!
    \                            !  AF=1  ROHC Attribute Value   !\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      !                   AF=0  ROHC Attribute Value                  !\n       !
    \                  AF=1  Not Transmitted                       !\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                Figure 2.  Format of the ROHC Attribute\n   o  Attribute Format
    (AF) (1 bit) - If the AF bit is a zero (0), then\n      the ROHC Attribute is
    expressed in a Type/Length/Value format.  If\n      the AF bit is a one (1), then
    the ROHC attribute is expressed in a\n      Type/Value (TV) format.\n   o  ROHC
    Attribute Type (15 bits) - Unique identifier for each type of\n      ROHC attribute
    (Section 3.1.2).\n   o  ROHC Attribute Length (2 octets) - Length (in octets)
    of the\n      Attribute Value.  When the AF bit is a one (1), the ROHC Attribute\n
    \     Value is 2 octets and the ROHC Attribute Length field is not\n      present.\n
    \  o  ROHC Attribute Value (variable length) - Value of the ROHC\n      Attribute
    associated with the ROHC Attribute Type.  If the AF bit\n      is a zero (0),
    this field's length is defined by the ROHC\n      Attribute Length field.  If
    the AF bit is a one (1), the length of\n      the ROHC Attribute Value is 2 octets.\n"
  title: 3.1.1.  ROHC Attributes
- contents:
  - "3.1.2.  ROHC Attribute Types\n   This section describes five ROHC Attribute Types:
    MAX_CID,\n   ROHC_PROFILE, ROHC_INTEG, ROHC_ICV_LEN, and MRRU.  The value\n   allocated
    for each ROHC Attribute Type is specified in Section 4.\n   MAX_CID (Maximum Context
    Identifier, AF = 1)\n      The MAX_CID attribute is a mandatory attribute.  Exactly
    one\n      MAX_CID attribute MUST be sent.  The MAX_CID field indicates the\n
    \     maximum value of a context identifier supported by the ROHCoIPsec\n      decompressor.
    \ This attribute value is 2 octets in length.  The\n      value for MAX_CID MUST
    be at least 0 and at most 16383.  Since\n      CIDs can take values between 0
    and MAX_CID, the actual number of\n      contexts that can be used are MAX_CID+1.
    \ If MAX_CID is 0, this\n      implies having one context.  The recipient of the
    MAX_CID\n      Attribute MUST only use context identifiers up to MAX_CID for\n
    \     compression.\n      Note that the MAX_CID parameter is a one-way notification
    (i.e.,\n      the sender of the attribute indicates what it can handle to the\n
    \     other end); therefore, different values for MAX_CID may be\n      announced
    in each direction.\n   ROHC_PROFILE (ROHC Profile, AF = 1)\n      The ROHC_PROFILE
    attribute is a mandatory attribute.  Each\n      ROHC_PROFILE attribute has a
    fixed length of 4 octets, and its\n      attribute value is a 2-octet long ROHC
    Profile Identifier\n      [ROHCPROF].  There MUST be at least one ROHC_PROFILE
    attribute\n      included in the ROHC_SUPPORTED Notify message.  If multiple\n
    \     ROHC_PROFILE attributes are sent, the order is arbitrary.  The\n      recipient
    of a ROHC_PROFILE attribute(s) MUST only use the\n      profile(s) proposed for
    compression.\n      Several common profiles are defined in RFCs 3095 [ROHCV1]
    and 5225\n      [ROHCV2].  Note, however, that two versions of the same profile\n
    \     MUST NOT be signaled.  For example, if a ROHCoIPsec decompressor\n      supports
    both ROHCv1 UDP (0x0002) and ROHCv2 UDP (0x0102), both\n      profiles MUST NOT
    be signaled.  This restriction is needed, as\n      packets compressed by ROHC
    express only the 8 least-significant\n      bits of the profile identifier; since
    the 8 least-significant bits\n      for corresponding profiles in ROHCv1 and ROHCv2
    are identical, the\n      decompressor is not capable of determining the ROHC
    version that\n      was used to compress the packet.\n      Note that the ROHC_PROFILE
    attribute is a one-way notification;\n      therefore, different values for ROHC_PROFILE
    may be announced in\n      each direction.\n   ROHC_INTEG (Integrity Algorithm
    for Verification of Decompressed\n   Headers, AF = 1)\n      The ROHC_INTEG attribute
    is a mandatory attribute.  There MUST be\n      at least one ROHC_INTEG attribute
    contained within the\n      ROHC_SUPPORTED Notify message.  The attribute value
    contains the\n      identifier of an integrity algorithm that is used to ensure
    the\n      integrity of the decompressed packets (i.e., ensure that the\n      decompressed
    packet headers are identical to the original packet\n      headers prior to compression).\n
    \     Authentication algorithms that MUST be supported are specified in\n      the
    \"Authentication Algorithms\" table in Section 3.1.1 (\"ESP\n      Encryption
    and Authentication Algorithms\") of RFC 4835\n      [CRYPTO-ALG] (or its successor).\n
    \     The integrity algorithm is represented by a 2-octet value that\n      corresponds
    to the value listed in the IKEv2 Parameters registry\n      [IKEV2-PARA], \"Transform
    Type 3 - Integrity Algorithm Transform\n      IDs\" section.  Upon receipt of
    the ROHC_INTEG attribute(s), the\n      responder MUST select exactly one of the
    proposed algorithms; the\n      chosen value is sent back in the ROHC_SUPPORTED
    Notify message\n      returned by the responder to the initiator.  The selected\n
    \     integrity algorithm MUST be used in both directions.  If the\n      responder
    does not accept any of the algorithms proposed by the\n      initiator, ROHC MUST
    NOT be enabled on the SA.\n      It is noted that:\n      1.  The keys (one for
    each direction) for this integrity algorithm\n          are derived from the IKEv2
    KEYMAT (see [IKEV2], Section 2.17).\n          For the purposes of this key derivation,
    ROHC is considered to\n          be an IPsec protocol.  When a ROHC-enabled CHILD_SA
    is\n          rekeyed, the key associated with this integrity algorithm is\n          rekeyed
    as well.\n      2.  A ROHCoIPsec initiator MAY signal a value of zero (0x0000)
    in\n          a ROHC_INTEG attribute.  This corresponds to \"NONE\" in the\n          \"IKEv2
    Integrity Algorithm Transform IDs\" registry.  The\n          ROHCoIPsec responder
    MAY select this value by responding to\n          the initiator with a ROHC_INTEG
    attribute of zero (0x0000).\n          In this scenario, no integrity algorithm
    is applied in either\n          direction.\n      3.  The ROHC_INTEG attribute
    is a parameter that is negotiated\n          between two ends.  In other words,
    the initiator indicates\n          what it supports, the responder selects one
    of the ROHC_INTEG\n          values proposed and sends the selected value to the
    initiator.\n   ROHC_ICV_LEN (Integrity Algorithm Length, AF = 1)\n      The ROHC_ICV_LEN
    attribute is an optional attribute.  There MAY be\n      zero or one ROHC_ICV_LEN
    attribute contained within the\n      ROHC_SUPPORTED Notify message.  The attribute
    specifies the number\n      of Integrity Check Value (ICV) octets the sender expects
    to\n      receive on incoming ROHC packets.  The ICV of the negotiated\n      ROHC_INTEG
    algorithms MUST be truncated to ROHC_ICV_LEN bytes by\n      taking the first
    ROHC_ICV_LEN bytes of the output.  Both the\n      initiator and responder announce
    a single value for their own ICV\n      length.  The recipient of the ROHC_ICV_LEN
    attribute MUST truncate\n      the ICV to the length contained in the message.
    \ If the value of\n      the ROHC_ICV_LEN attribute is zero, then an ICV MUST
    NOT be sent.\n      If no ROHC_ICV_LEN attribute is sent at all or if the ROHC_ICV_LEN\n
    \     is larger than the length of the ICV of selected algorithm, then\n      the
    full ICV length as specified by the ROHC_INTEG algorithm MUST\n      be sent.\n
    \     Note that the ROHC_ICV_LEN attribute is a one-way notification;\n      therefore,
    different values for ROHC_ICV_LEN may be announced in\n      each direction.\n
    \  MRRU (Maximum Reconstructed Reception Unit, AF = 1)\n      The MRRU attribute
    is an optional attribute.  There MAY be zero or\n      one MRRU attribute contained
    within the ROHC_SUPPORTED Notify\n      message.  The attribute value is 2 octets
    in length.  The\n      attribute specifies the size of the largest reconstructed
    unit in\n      octets that the ROHCoIPsec decompressor is expected to reassemble\n
    \     from ROHC segments (see Section 5.2.5 of [ROHCV1]).  This size\n      includes
    the Cyclic Redundancy Check (CRC) and the ROHC ICV.  If\n      MRRU is 0 or if
    no MRRU attribute is sent, segment headers MUST\n      NOT be transmitted on the
    ROHCoIPsec channel.\n      Note that the MRRU attribute is a one-way notification;
    therefore,\n      different values for MRRU may be announced in each direction.\n
    \  If an unknown ROHC Attribute Type Value is received, it MUST be\n   silently
    ignored.\n"
  title: 3.1.2.  ROHC Attribute Types
- contents:
  - "3.2.  ROHC Channel Parameters That Are Implicitly Set\n   The following ROHC
    channel parameters MUST NOT be signaled:\n   o  LARGE_CIDS: This value is implicitly
    determined by the value of\n      MAX_CID (i.e., if MAX_CID is <= 15, LARGE_CIDS
    is assumed to be\n      0).\n   o  FEEDBACK_FOR: When a pair of SAs is created
    (one in each\n      direction), the ROHC channel parameter FEEDBACK_FOR MUST be
    set\n      implicitly to the other SA of the pair (i.e., the SA pointing in\n
    \     the reverse direction).\n"
  title: 3.2.  ROHC Channel Parameters That Are Implicitly Set
- contents:
  - "4.  Security Considerations\n   The ability to negotiate the length of the ROHC
    ICV may introduce\n   vulnerabilities to the ROHCoIPsec protocol.  Specifically,
    the\n   capability to signal a short ICV length may result in scenarios where\n
    \  erroneous packets are forwarded into the protected domain.  This\n   security
    consideration is documented in further detail in Section\n   6.1.4 of [ROHCOIPSEC]
    and Section 5 of [IPSEC-ROHC].\n   This security consideration can be mitigated
    by using longer ICVs,\n   but this comes at the cost of additional overhead, which
    reduces the\n   overall benefits offered by ROHCoIPsec.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This document defines a new Notify message (Status
    Type).  Therefore,\n   IANA has allocated one value from the \"IKEv2 Notify Message
    Types\"\n   registry to indicate ROHC_SUPPORTED.\n   In addition, IANA has created
    a new \"ROHC Attribute Types\" registry\n   in the \"Internet Key Exchange Version
    2 (IKEv2) Parameters\" registry\n   [IKEV2-PARA].  Within the \"ROHC Attribute
    Types\" registry, this\n   document allocates the following values:\n"
  - 'Registry:

    '
  - 'Value        ROHC Attribute Type                        Format Reference

    '
  - '-----------  --------------------------------------     ------ ---------

    '
  - '0            RESERVED                                          [RFC5857]

    '
  - '1            Maximum Context Identifier (MAX_CID)        TV    [RFC5857]

    '
  - '2            ROHC Profile (ROHC_PROFILE)                 TV    [RFC5857]

    '
  - '3            ROHC Integrity Algorithm (ROHC_INTEG)       TV    [RFC5857]

    '
  - '4            ROHC ICV Length in bytes (ROHC_ICV_LEN)     TV    [RFC5857]

    '
  - '5            Maximum Reconstructed Reception Unit (MRRU) TV    [RFC5857]

    '
  - '6-16383      Unassigned

    '
  - "16384-32767  Private use                                       [RFC5857]\n   Following
    the policies outlined in [IANA-CONSIDERATIONS], the IANA\n   policy for assigning
    new values for the ROHC Attribute Types registry\n   shall be Expert Review.\n
    \  For registration requests, the responsible IESG Area Director will\n   appoint
    the Designated Expert.  The Designated Expert will post a\n   request to both
    the ROHC and IPsec mailing lists (or a successor\n   designated by the Area Director)
    for comment and review.  The\n   Designated Expert will either approve or deny
    the registration\n   request and publish a notice of the decision to both mailing
    lists\n   (or their successors), as well as informing IANA.  A denial notice\n
    \  must be justified by an explanation.\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Acknowledgments\n   The authors would like to thank Sean O'Keeffe, James
    Kohler, and\n   Linda Noone of the Department of Defense, as well as Rich Espy
    of\n   OPnet for their contributions and support in the development of this\n
    \  document.\n   The authors would also like to thank Yoav Nir and Robert A Stangarone\n
    \  Jr.: both served as committed document reviewers for this\n   specification.\n
    \  In addition, the authors would like to thank the following for their\n   numerous
    reviews and comments to this document:\n   o  Magnus Westerlund\n   o  Stephen
    Kent\n   o  Lars-Erik Jonsson\n   o  Pasi Eronen\n   o  Jonah Pezeshki\n   o  Carl
    Knutsson\n   o  Joseph Touch\n   o  David Black\n   o  Glen Zorn\n   Finally,
    the authors would also like to thank Tom Conkle, Michele\n   Casey, and Etzel
    Brower.\n"
  title: 6.  Acknowledgments
- contents:
  - '7.  References

    '
  title: 7.  References
- contents:
  - "7.1.  Normative References\n   [IPSEC]      Kent, S. and K. Seo, \"Security Architecture
    for the\n                Internet Protocol\", RFC 4301, December 2005.\n   [ROHC]
    \      Sandlund, K., Pelletier, G., and L-E. Jonsson, \"The\n                RObust
    Header Compression (ROHC) Framework\", RFC 5795,\n                March 2010.\n
    \  [IKEV2]      Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\",\n                RFC
    4306, December 2005.\n   [BRA97]      Bradner, S., \"Key words for use in RFCs
    to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [ROHCV1]     Bormann, C., Burmeister, C., Degermark, M., Fukushima,\n                H.,
    Hannu, H., Jonsson, L-E., Hakenberg, R., Koren, T.,\n                Le, K., Liu,
    Z., Martensson, A., Miyazaki, A., Svanbro,\n                K., Wiebke, T., Yoshimura,
    T., and H. Zheng, \"RObust\n                Header Compression (ROHC): Framework
    and four profiles:\n                RTP, UDP, ESP, and uncompressed\", RFC 3095,
    July 2001.\n   [ROHCV2]     Pelletier, G. and K. Sandlund, \"RObust Header\n                Compression
    Version 2 (ROHCv2): Profiles for RTP, UDP,\n                IP, ESP and UDP-Lite\",
    RFC 5225, April 2008.\n   [IPSEC-ROHC] Ertekin, E., Christou, C., and C. Bormann,
    \"IPsec\n                Extensions to Support Robust Header Compression over\n
    \               IPsec\", RFC 5858, May 2010.\n   [IANA-CONSIDERATIONS]\n                Narten,
    T. and H. Alvestrand, \"Guidelines for Writing an\n                IANA Considerations
    Section in RFCs\", BCP 26, RFC 5226,\n                May 2008.\n"
  title: 7.1.  Normative References
- contents:
  - "7.2.  Informative References\n   [ROHCOIPSEC] Ertekin, E., Jasani, R., Christou,
    C., and C. Bormann,\n                \"Integration of Header Compression over
    IPsec Security\n                Associations\", RFC 5856, May 2010.\n   [ROHC-PPP]
    \  Bormann, C., \"Robust Header Compression (ROHC) over\n                PPP\",
    RFC 3241, April 2002.\n   [ROHCPROF]   IANA, \"RObust Header Compression (ROHC)
    Profile\n                Identifiers\", <http://www.iana.org>.\n   [CRYPTO-ALG]
    Manral, V., \"Cryptographic Algorithm Implementation\n                Requirements
    for Encapsulating Security Payload (ESP)\n                and Authentication Header
    (AH)\", RFC 4835, April 2007.\n   [IKEV2-PARA] IANA, \"Internet Key Exchange Version
    2 (KEv2)\n                Parameters\", <http://www.iana.org>.\n"
  title: 7.2.  Informative References
- contents:
  - "Authors' Addresses\n   Emre Ertekin\n   Booz Allen Hamilton\n   5220 Pacific
    Concourse Drive, Suite 200\n   Los Angeles, CA  90045\n   US\n   EMail: ertekin_emre@bah.com\n
    \  Chris Christou\n   Booz Allen Hamilton\n   13200 Woodland Park Dr.\n   Herndon,
    VA  20171\n   US\n   EMail: christou_chris@bah.com\n   Rohan Jasani\n   Booz Allen
    Hamilton\n   13200 Woodland Park Dr.\n   Herndon, VA  20171\n   US\n   EMail:
    ro@breakcheck.com\n   Tero Kivinen\n   AuthenTec, Inc.\n   Fredrikinkatu 47\n
    \  HELSINKI\n   FI\n   EMail: kivinen@iki.fi\n   Carsten Bormann\n   Universitaet
    Bremen TZI\n   Postfach 330440\n   Bremen  D-28334\n   Germany\n   EMail: cabo@tzi.org\n"
  title: Authors' Addresses
