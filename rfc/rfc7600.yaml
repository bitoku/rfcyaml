- title: __initial_text__
  contents:
  - '     IPv4 Residual Deployment via IPv6 - A Stateless Solution (4rd)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a stateless solution for service providers\
    \ to\n   progressively deploy IPv6-only network domains while still offering\n\
    \   IPv4 service to customers.  The solution's distinctive properties are\n  \
    \ that TCP/UDP IPv4 packets are valid TCP/UDP IPv6 packets during\n   domain traversal\
    \ and that IPv4 fragmentation rules are fully\n   preserved end to end.  Each\
    \ customer can be assigned one public IPv4\n   address, several public IPv4 addresses,\
    \ or a shared address with a\n   restricted port set.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7600.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Terminology .....................................................5\n  \
    \ 3. The 4rd Model ...................................................7\n   4.\
    \ Protocol Specifications .........................................9\n      4.1.\
    \ NAT44 on CE ................................................9\n      4.2. Mapping\
    \ Rules and Other Domain Parameters .................10\n      4.3. Reversible\
    \ Packet Translations at Domain Entries\n           and Exits .................................................11\n\
    \      4.4. Address Mapping from CE IPv6 Prefixes to 4rd IPv4\n           Prefixes\
    \ ..................................................17\n      4.5. Address Mapping\
    \ from 4rd IPv4 Addresses to 4rd\n           IPv6 Addresses ............................................19\n\
    \      4.6. Fragmentation Processing ..................................23\n  \
    \         4.6.1. Fragmentation at Domain Entry ......................23\n    \
    \       4.6.2. Ports of Fragments Addressed to\n                  Shared-Address\
    \ CEs .................................24\n           4.6.3. Packet Identifications\
    \ from Shared-Address CEs .....26\n      4.7. TOS and Traffic Class Processing\
    \ ..........................26\n      4.8. Tunnel-Generated ICMPv6 Error Messages\
    \ ....................27\n      4.9. Provisioning 4rd Parameters to CEs ........................27\n\
    \   5. Security Considerations ........................................30\n  \
    \ 6. IANA Considerations ............................................31\n   7.\
    \ Relationship with Previous Works ...............................31\n   8. References\
    \ .....................................................33\n      8.1. Normative\
    \ References ......................................33\n      8.2. Informative\
    \ References ....................................34\n   Appendix A. Textual Representation\
    \ of Mapping Rules ...............37\n   Appendix B. Configuring Multiple Mapping\
    \ Rules ....................37\n   Appendix C. Adding Shared IPv4 Addresses to\
    \ an IPv6 Network .......39\n     C.1. With CEs within CPEs .......................................39\n\
    \     C.2. With Some CEs behind Third-Party Router CPEs  ..............41\n  \
    \ Appendix D. Replacing Dual-Stack Routing with IPv6-Only Routing ...42\n   Appendix\
    \ E. Adding IPv6 and 4rd Service to a Net-10 Network .......43\n   Acknowledgements\
    \ ..................................................44\n   Authors' Addresses\
    \ ................................................44\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   For service providers to progressively deploy IPv6-only\
    \ network\n   domains while still offering IPv4 service to customers, the need\
    \ for\n   a stateless solution, i.e., one where no per-customer state is needed\n\
    \   in IPv4-IPv6 gateway nodes of the provider, has been discussed in\n   [Solutions-4v6].\
    \  This document specifies one such solution, named\n   \"4rd\" for IPv4 Residual\
    \ Deployment.  Its distinctive properties are\n   that TCP/UDP IPv4 packets are\
    \ valid TCP/UDP IPv6 packets during\n   domain traversal and that IPv4 fragmentation\
    \ rules are fully\n   preserved end to end.\n   Using this solution, IPv4 packets\
    \ are transparently tunneled across\n   IPv6 networks (the reverse of IPv6 Rapid\
    \ Deployment on IPv4\n   Infrastructures (6rd) [RFC5969], in which IPv6 packets\
    \ are\n   statelessly tunneled across IPv4 networks).\n   While IPv6 headers are\
    \ too long to be mapped into IPv4 headers (which\n   is why 6rd requires encapsulation\
    \ of full IPv6 packets in IPv4\n   packets), IPv4 headers can be reversibly translated\
    \ into IPv6 headers\n   in such a way that, during IPv6 domain traversal, UDP\
    \ packets having\n   checksums and TCP packets are valid IPv6 packets.  IPv6-only\n\
    \   middleboxes that perform deep packet inspection can operate on them,\n   in\
    \ particular for port inspection and web caches.\n   In order to deal with the\
    \ IPv4 address shortage, customers can be\n   assigned shared public IPv4 addresses\
    \ with statically assigned\n   restricted port sets.  As such, it is a particular\
    \ application of the\n   Address plus Port (A+P) approach [RFC6346].\n   Deploying\
    \ 4rd in networks that have enough public IPv4 addresses,\n   customer sites can\
    \ also be assigned full public IPv4 addresses.  4rd\n   also supports scenarios\
    \ where a set of public IPv4 addresses are\n   assigned to customer sites.\n \
    \  The design of 4rd builds on a number of previous proposals made for\n   IPv4-via-IPv6\
    \ transition technologies (Section 7).\n   In some use cases, IPv4-only applications\
    \ of 4rd-capable customer\n   nodes can also work with stateful NAT64s [RFC6146],\
    \ provided these\n   are upgraded to support 4rd tunnels in addition to their\
    \ IP/ICMP\n   translation [RFC6145].  The advantage is then a more complete IPv4\n\
    \   transparency than with double translation.\n   How the 4rd model fits in the\
    \ Internet architecture is summarized in\n   Section 3.  The protocol specifications\
    \ are detailed in Section 4.\n   Sections 5 and 6 deal with security considerations\
    \ and IANA\n   considerations, respectively.  Previous proposals that influenced\n\
    \   this specification are listed in Section 7.  A few typical 4rd use\n   cases\
    \ are presented in Appendices A, B, C, D, and E.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   ISP: Internet Service Provider.  In this document, the service it\n      \
    \  offers can be DSL, fiber-optics, cable, or mobile.  The ISP can\n        also\
    \ be a private-network operator.\n   4rd (IPv4 Residual Deployment):  An extension\
    \ of the IPv4 service\n        where public IPv4 addresses can be statically shared\
    \ among\n        several customer sites, each one being assigned an exclusive\n\
    \        port set.  This service is supported across IPv6-routing\n        domains.\n\
    \   4rd domain (or Domain):  An ISP-operated IPv6 network across which\n     \
    \   4rd is supported according to the present specification.\n   Tunnel packet:\
    \  An IPv6 packet that transparently conveys an IPv4\n        packet across a\
    \ 4rd domain.  Its header has enough information\n        to reconstitute the\
    \ IPv4 header at Domain exit.  Its payload is\n        the original IPv4 payload.\n\
    \   CE (Customer Edge):  A customer-side tunnel endpoint.  It can be in a\n  \
    \      node that is a host, a router, or both.\n   BR (Border Relay):  An ISP-side\
    \ tunnel endpoint.  Because its\n        operation is stateless (neither per CE\
    \ nor per session state),\n        it can be replicated in as many nodes as needed\
    \ for scalability.\n   4rd IPv6 address:  IPv6 address used as the destination\
    \ of a Tunnel\n        packet sent to a CE or a BR.\n   NAT64+:  An ISP NAT64\
    \ [RFC6146] that is upgraded to support 4rd\n        tunneling when IPv6 addresses\
    \ it deals with are 4rd IPv6\n        addresses.\n   4rd IPv4 address:  A public\
    \ IPv4 address or, in the case of a shared\n        public IPv4 address, a public\
    \ transport address (public IPv4\n        address plus port number).\n   PSID\
    \ (Port-Set Identifier):  A flexible-length field that\n        algorithmically\
    \ identifies a port set.\n   4rd IPv4 prefix:  A flexible-length prefix that may\
    \ be a public IPv4\n        prefix, a public IPv4 address, or a public IPv4 address\
    \ followed\n        by a PSID.\n   Mapping rule:  A set of parameters that are\
    \ used by BRs and CEs to\n        derive 4rd IPv6 addresses from 4rd IPv4 addresses.\
    \  Mapping\n        rules are also used by each CE to derive a 4rd IPv4 prefix\
    \ from\n        an IPv6 prefix that has been delegated to it.\n   EA bits (Embedded\
    \ Address bits):  Bits that are the same in a 4rd\n        IPv4 address and in\
    \ the 4rd IPv6 address derived from it.\n   BR Mapping rule:  The Mapping rule\
    \ that is applicable to off-domain\n        IPv4 addresses (addresses reachable\
    \ via BRs).  It can also apply\n        to some or all CE-assigned IPv4 addresses.\n\
    \   CE Mapping rule:  A Mapping rule that is applicable only to\n        CE-assigned\
    \ IPv4 addresses (shared or not).\n   NAT64+ Mapping rule:  The Mapping rule that\
    \ is applicable to IPv4\n        addresses reachable via a NAT64+.\n   CNP (Checksum\
    \ Neutrality Preserver):  A field of 4rd IPv6 addresses\n        that ensures\
    \ that TCP-like checksums do not change when IPv4\n        addresses are replaced\
    \ with 4rd IPv6 addresses.\n   4rd Tag:  A 16-bit tag whose value allows 4rd CEs,\
    \ BRs, and NAT64+s\n        to distinguish 4rd IPv6 addresses from other IPv6\
    \ addresses.\n"
- title: 3.  The 4rd Model
  contents:
  - "3.  The 4rd Model\n                                    4rd Domain\n         \
    \              +-----------------------------+\n                       |     \
    \   IPv6 routing         |\n                       |  Enforced ingress filtering\
    \ | +----------\n                  ...  |                             | |\n  \
    \                     |                          +------+\n        Customer site\
    \  |                          |BR(s) |  IPv4\n        +------------+ |      BR\
    \ IPv6 prefix  --> |and/or| Internet\n        | dual-stack | |               \
    \           |N4T64+|\n        |         +--+ |                          +------+\n\
    \        |         |CE+-+ <-- a CE IPv6 prefix        | |\n        |         +--+\
    \ |                             | +----------\n        |            | |      \
    \                       |\n        +------------+ |     <--IPv4 tunnels-->   \
    \   +------------\n          => Derived   |  (Mesh or hub-and-spoke     |\n  \
    \      4rd IPv4 prefix|         topologies)         |    IPv6\n              \
    \         |                             |  Internet\n                  ...  |\
    \                             |\n                       |                    \
    \         +------------\n                       +-----------------------------+\n\
    \                      <== one or several Mapping rules\n                  (e.g.,\
    \ announced to CEs in stateless DHCPv6)\n           Figure 1: The 4rd Model in\
    \ the Internet Architecture\n   How the 4rd model fits in the Internet architecture\
    \ is represented in\n   Figure 1.\n   A 4rd domain is an IPv6 network that includes\
    \ one or several 4rd BRs\n   or NAT64+s at its border with the public IPv4 Internet\
    \ and that can\n   advertise its IPv4-IPv6 Mapping rule(s) to CEs according to\n\
    \   Section 4.9.\n   BRs of a 4rd Domain are all identical as far as 4rd is concerned.\
    \  In\n   a 4rd CE, the IPv4 packets that need to reach a BR will be\n   transformed\
    \ (as detailed in Section 4.3) into IPv6 packets that have\n   the same anycast\
    \ IPv6 prefix, which is the 80-bit BR prefix, in their\n   destination addresses.\
    \  They are then routed to any of the BRs.  The\n   80-bit BR IPv6 prefix is an\
    \ arbitrarily chosen /64 prefix from the\n   IPv6 address space of the network\
    \ operator and appended with 0x0300\n   (16-bit 4rd Tag; see R-9 in Section 4.5).\n\
    \   Using the Mapping rule that applies, each CE derives its 4rd IPv4\n   prefix\
    \ from its delegated IPv6 prefix, or one of them if it has\n   several; see Section\
    \ 4.4 for details.  If the obtained IPv4 prefix\n   has more than 32 bits, the\
    \ assigned IPv4 address is shared among\n   several CEs.  Bits beyond the first\
    \ 32 specify a set of ports whose\n   use is reserved for the CE.\n   IPv4 traffic\
    \ is automatically tunneled across the Domain, in either\n   mesh topology or\
    \ hub-and-spoke topology [RFC4925].  By default, IPv4\n   traffic between two\
    \ CEs follows a direct IPv6 route between them\n   (mesh topology).  If the ISP\
    \ configures the hub-and-spoke option,\n   each IPv4 packet from one CE to another\
    \ is routed via a BR.\n   During Domain traversal, each tunneled TCP/UDP IPv4\
    \ packet looks like\n   a valid TCP/UDP IPv6 packet.  Thus, TCP/UDP access control\
    \ lists that\n   apply to IPv6, and possibly some other functions using deep packet\n\
    \   inspection, also apply to IPv4.\n   In order for IPv4 anti-spoofing protection\
    \ in CEs and BRs to remain\n   effective when combined with 4rd tunneling, ingress\
    \ filtering\n   [RFC3704] has to be in effect in IPv6 (see R-12 and Section 5).\n\
    \   If an ISP wishes to support dynamic IPv4 address sharing in addition\n   to\
    \ or in place of 4rd stateless address sharing, it can do so by\n   means of a\
    \ stateful NAT64.  By upgrading this NAT to add support for\n   4rd tunnels, which\
    \ makes it a NAT64+, CEs that are assigned no static\n   IPv4 space can benefit\
    \ from complete IPv4 transparency between the CE\n   and the NAT64.  (Without\
    \ this NAT64 upgrade, IPv4 traffic is\n   translated to IPv6 and back to IPv4,\
    \ during which time the DF =\n   MF = 1 combination for IPv4, as recommended for\
    \ host fragmentation in\n   Section 8 of [RFC4821], is lost.)\n   IPv4 packets\
    \ are kept unchanged by Domain traversal, except that:\n   o  The IPv4 Time To\
    \ Live (TTL), unless it is 1 or 255 at Domain\n      entry, decreases during Domain\
    \ traversal by the number of\n      traversed routers.  This is acceptable because\
    \ it is undetectable\n      end to end and also because TTL values that can be\
    \ used with some\n      protocols to test the adjacency of communicating routers\
    \ are\n      preserved [RFC4271] [RFC5082].  The effect on the traceroute\n  \
    \    utility, which uses TTL expiry to discover routers of end-to-end\n      paths,\
    \ is noted in Section 4.3.\n   o  IPv4 packets whose lengths are <= 68 octets\
    \ always have their\n      \"Don't Fragment\" (DF) flags set to 1 at Domain exit\
    \ even if they\n      had DF = 0 at Domain entry.  This is acceptable because\
    \ these\n      packets are too short to be fragmented [RFC791] and so their DF\n\
    \      bits have no meaning.  Besides, both [RFC1191] and [RFC4821]\n      recommend\
    \ that sources always set DF to 1.\n   o  Unless the Tunnel Traffic Class option\
    \ applies to a Domain\n      (Section 4.2), IPv4 packets may have their Type of\
    \ Service (TOS)\n      fields modified after Domain traversal (Section 4.7).\n"
- title: 4.  Protocol Specifications
  contents:
  - "4.  Protocol Specifications\n   This section describes detailed 4rd protocol\
    \ specifications.  They\n   are mainly organized by functions.  As a brief summary:\n\
    \   o  A 4rd CE MUST follow R-1, R-2, R-3, R-4, R-6, R-7, R-8, R-9, R-10,\n  \
    \    R-11, R-12, R-13, R-14, R-16, R-17, R-18, R-19, R-20, R-21, R-22,\n     \
    \ R-23, R-24, R-25, R-26, and R-27.\n   o  A 4rd BR MUST follow R-2, R-3, R-4,\
    \ R-5, R-6, R-9, R-12, R-13,\n      R-14, R-15, R-19, R-20, R-21, R-22, and R-24.\n"
- title: 4.1.  NAT44 on CE
  contents:
  - "4.1.  NAT44 on CE\n   R-1:  A CE node that is assigned a shared public IPv4 address\
    \ MUST\n         include a NAT44 [RFC3022].  This NAT44 MUST only use external\n\
    \         ports that are in the CE-assigned port set.\n   NOTE: This specification\
    \ only concerns IPv4 communication between\n   IPv4-capable endpoints.  For communication\
    \ between IPv4-only\n   endpoints and IPv6-only remote endpoints, the \"Bump-in-the-Host\"\
    \n   (BIH) specification [RFC6535] can be used.  It can coexist in a node\n  \
    \ with the CE function, including scenarios where the IPv4-only\n   function is\
    \ a NAT44 [RFC3022].\n"
- title: 4.2.  Mapping Rules and Other Domain Parameters
  contents:
  - "4.2.  Mapping Rules and Other Domain Parameters\n   R-2:  CEs and BRs MUST be\
    \ configured with the following Domain\n         parameters:\n         A.  One\
    \ or several Mapping rules, each one comprising the\n             following:\n\
    \             1.  Rule IPv4 prefix\n             2.  EA-bits length\n        \
    \     3.  Rule IPv6 prefix\n             4.  Well-Known Ports (WKPs) authorized\
    \ (OPTIONAL)\n         B.  Domain Path MTU (PMTU)\n         C.  Hub-and-spoke\
    \ topology (Yes or No)\n         D.  Tunnel Traffic Class (OPTIONAL)\n   \"Rule\
    \ IPv4 prefix\" is used to find, by a longest match, which Mapping\n   rule applies\
    \ to a 4rd IPv4 address (Section 4.5).  A Mapping rule\n   whose Rule IPv4 prefix\
    \ is longer than /0 is a CE Mapping rule.  BR\n   and NAT64+ Mapping rules, which\
    \ must apply to all off-domain IPv4\n   addresses, have /0 as their Rule IPv4\
    \ prefixes.\n   \"EA-bits length\" is the number of bits that are common to 4rd\
    \ IPv4\n   addresses and 4rd IPv6 addresses derived from them.  In a CE Mapping\n\
    \   rule, it is also the number of bits that are common to a CE-delegated\n  \
    \ IPv6 prefix and the 4rd IPv4 prefix derived from it.  BR and NAT64+\n   Mapping\
    \ rules have EA-bits lengths equal to 32.\n   \"Rule IPv6 prefix\" is the prefix\
    \ that is used as a substitute for the\n   Rule IPv4 prefix when a 4rd IPv6 address\
    \ is derived from a 4rd IPv4\n   address (Section 4.5).  In a BR Mapping rule\
    \ or a NAT64+ Mapping\n   rule, it MUST be a /80 prefix whose bits 64-79 are the\
    \ 4rd Tag.\n   \"WKPs authorized\" may be set for Mapping rules that assign shared\n\
    \   IPv4 addresses to CEs.  (These rules are those whose length of the\n   Rule\
    \ IPv4 prefix plus the EA-bits length exceeds 32.)  If set,\n   well-known ports\
    \ may be assigned to some CEs having particular IPv6\n   prefixes.  If not set,\
    \ fairness is privileged: all IPv6 prefixes\n   concerned with the Mapping rule\
    \ have port sets having identical\n   values (no port set includes any of the\
    \ well-known ports).\n   \"Domain PMTU\" is the IPv6 Path MTU that the ISP can\
    \ guarantee for all\n   of its IPv6 paths between CEs and between BRs and CEs.\
    \  It MUST be at\n   least 1280 octets [RFC2460].\n   \"Hub-and-spoke topology\"\
    , if set to Yes, requires CEs to tunnel all\n   IPv4 packets via BRs.  If set\
    \ to No, CE-to-CE packets take the same\n   routes as native IPv6 packets between\
    \ the same CEs (mesh topology).\n   \"Tunnel Traffic Class\", if provided, is\
    \ the IPv6 traffic class that\n   BRs and CEs MUST set in Tunnel packets.  In\
    \ this case, evolutions of\n   the IPv6 traffic class that may occur during Domain\
    \ traversal are not\n   reflected in TOS fields of IPv4 packets at Domain exit\
    \ (Section 4.7).\n"
- title: 4.3.  Reversible Packet Translations at Domain Entries and Exits
  contents:
  - "4.3.  Reversible Packet Translations at Domain Entries and Exits\n   R-3:  Domain-entry\
    \ nodes that receive IPv4 packets with IPv4 options\n         MUST discard these\
    \ packets and return ICMPv4 error messages to\n         signal IPv4-option incompatibility\
    \ (Type = 12, Code = 0,\n         Pointer = 20) [RFC792].  This limitation is\
    \ acceptable because\n         there are a lot of firewalls in the current IPv4\
    \ Internet that\n         also filter IPv4 packets with IPv4 options.\n   R-4:\
    \  Domain-entry nodes that receive IPv4 packets without IPv4\n         options\
    \ MUST convert them to Tunnel packets, with or without\n         IPv6 fragment\
    \ headers, depending on what is needed to ensure\n         IPv4 transparency (Figure\
    \ 2).  Domain-exit nodes MUST convert\n         them back to IPv4 packets.\n \
    \        An IPv6 fragmentation header MUST be included at tunnel entry\n     \
    \    (Figure 2) if and only if one or several of the following\n         conditions\
    \ hold:\n         *  The Tunnel Traffic Class option applies to the Domain.\n\
    \         *  TTL = 1 OR TTL = 255.\n         *  The IPv4 packet is already fragmented,\
    \ or may be fragmented\n            later on, i.e., if MF = 1 OR offset > 0 OR\
    \ (total length >\n            68 AND DF = 0).\n         In order to optimize\
    \ cases where fragmentation headers are\n         unnecessary, the NAT44 of a\
    \ CE that has one SHOULD send packets\n         with TTL = 254.\n   R-5:  In Domains\
    \ whose chosen topology is hub-and-spoke, BRs that\n         receive 4rd IPv6\
    \ packets whose embedded destination IPv4\n         addresses match a CE Mapping\
    \ rule MUST do the equivalent of\n         reversibly translating their headers\
    \ to IPv4 and then\n         reversibly translate them back to IPv6 as though\
    \ packets would\n         be entering the Domain.\n                     (A) Without\
    \ IPv6 fragment header\n            IPv4 packet                          Tunnel\
    \ packet\n       +--------------------+ :            : +--------------------+\n\
    \     20|     IPv4 Header    | :    <==>    : |     IPv6 Header    | 40\n    \
    \   +--------------------+ :            : +--------------------+\n       |   \
    \  IP Payload     |      <==>      |     IP Payload     |\n       |          \
    \          |     Layer 4    |                    |\n       +--------------------+\
    \    unchanged   +--------------------+\n                     (B) With IPv6 fragment\
    \ header\n                                                 Tunnel packet\n   \
    \                                        : +--------------------+\n          \
    \  IPv4 packet                    : |     IPv6 Header    | 40\n       +--------------------+\
    \ :            : +--------------------+\n     20|     IPv4 Header    | :    <==>\
    \    : |IPv6 Fragment Header|  8\n       +--------------------+ :            :\
    \ +--------------------+\n       |     IP Payload     |      <==>      |     IP\
    \ Payload     |\n       |                    |     Layer 4    |              \
    \      |\n       +--------------------+    unchanged   +--------------------+\n\
    \                  Figure 2: Reversible Packet Translation\n   R-6:  Values to\
    \ be set in IPv6 header fields at Domain entry are\n         detailed in Table\
    \ 1 (no fragment header) and Table 2 (with\n         fragment header).  Those\
    \ to be set in IPv4 header fields at\n         Domain exit are detailed in Table\
    \ 3 (no fragment header) and\n         Table 4 (with fragment header).\n     \
    \    To convey IPv4 header information that has no equivalent in\n         IPv6,\
    \ some ad hoc fields are placed in IPv6 flow labels and in\n         Identification\
    \ fields of IPv6 fragment headers, as detailed in\n         Figure 3.\n      \
    \              |0      |4                            19|\n                   \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                    |   0   |   \
    \      Addr_Prot_Cksm        |\n                    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                               IPv6 Flow Label\n       0 1 2          |8    \
    \          |16                           31|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |.|.|.|    0    |    IPv4_TOS   |             IPv4_ID           |\n   \
    \   /-+-\\-\\-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ /     \\ TTL_255         IPv6 Identification Field\n   IPv4_DF  TTL_1      \
    \      (in fragment header if needed)\n       Figure 3: 4rd Identification Fields\
    \ of IPv6 Fragment Headers\n     +---------------------+----------------------------------------+\n\
    \     | IPv6 Field          | Value (fields from IPv4 header)        |\n     +---------------------+----------------------------------------+\n\
    \     | Version             | 6                                      |\n     |\
    \ Traffic Class       | TOS                                    |\n     | Addr_Prot_Cksm\
    \      | Sum of addresses and Protocol (Note 1) |\n     | Payload length     \
    \ | Total length - 20                      |\n     | Next header         | Protocol\
    \                               |\n     | Hop limit           | Time to Live \
    \                          |\n     | Source address      | See Section 4.5   \
    \                     |\n     | Destination address | See Section 4.5        \
    \                |\n     +---------------------+----------------------------------------+\n\
    \            Table 1: IPv4-to-IPv6 Reversible Header Translation\n           \
    \              (without Fragment Header)\n    +-----------------+----------------------------------------------+\n\
    \    | IPv6 Field      | Value (fields from IPv4 header)              |\n    +-----------------+----------------------------------------------+\n\
    \    | Version         | 6                                            |\n    |\
    \ Traffic Class   | TOS OR Tunnel Traffic Class (Section 4.7)    |\n    | Addr_Prot_Cksm\
    \  | Sum of addresses and Protocol (Note 1)       |\n    | Payload length  | Total\
    \ length - 12                            |\n    | Next header     | 44 (fragment\
    \ header)                         |\n    | Hop limit       | IF Time to Live =\
    \ 1 or 255 THEN 254          |\n    |                 |   ELSE Time to Live (Note\
    \ 2)                 |\n    | Source address  | See Section 4.5              \
    \                |\n    | Dest. address   | See Section 4.5                  \
    \            |\n    | 2nd next header | Protocol                             \
    \        |\n    | Fragment offset | IPv4 fragment offset                     \
    \    |\n    | M               | More Fragments flag (MF)                     |\n\
    \    | IPv4_DF         | Don't Fragment flag (DF)                     |\n    |\
    \ TTL_1           | IF Time to Live = 1 THEN 1 ELSE 0 (Note 2)   |\n    | TTL_255\
    \         | IF Time to Live = 255 THEN 1 ELSE 0 (Note 2) |\n    | IPv4_TOS   \
    \     | Type of Service (TOS)                        |\n    | IPv4_ID        \
    \ | Identification                               |\n    +-----------------+----------------------------------------------+\n\
    \            Table 2: IPv4-to-IPv6 Reversible Header Translation\n           \
    \               (with Fragment Header)\n         +-----------------+------------------------------------+\n\
    \         | IPv4 Field      | Value (fields from IPv6 header)    |\n         +-----------------+------------------------------------+\n\
    \         | Version         | 4                                  |\n         |\
    \ Header length   | 5                                  |\n         | TOS     \
    \        | Traffic Class                      |\n         | Total length    |\
    \ Payload length + 20                |\n         | Identification  | 0       \
    \                           |\n         | DF              | 1                \
    \                  |\n         | MF              | 0                         \
    \         |\n         | Fragment offset | 0                                  |\n\
    \         | Time to Live    | Hop count                          |\n         |\
    \ Protocol        | Next header                        |\n         | Header checksum\
    \ | Computed as per [RFC791] (Note 3)  |\n         | Source address  | Bits 80-111\
    \ of source address      |\n         | Dest. address   | Bits 80-111 of destination\
    \ address |\n         +-----------------+------------------------------------+\n\
    \            Table 3: IPv6-to-IPv4 Reversible Header Translation\n           \
    \              (without Fragment Header)\n    +-----------------------+-----------------------------------------+\n\
    \    | IPv4 Field            | Value (fields from IPv6 header)         |\n   \
    \ +-----------------------+-----------------------------------------+\n    | Version\
    \               | 4                                       |\n    | Header length\
    \         | 5                                       |\n    | TOS             \
    \      | Traffic Class OR IPv4_TOS (Section 4.7) |\n    | Total length       \
    \   | Payload length + 12                     |\n    | Identification        |\
    \ IPv4_ID                                 |\n    | DF                    | IPv4_DF\
    \                                 |\n    | MF                    | M         \
    \                              |\n    | Fragment offset       | Fragment offset\
    \                         |\n    | Time to Live (Note 2) | IF TTL_255 = 1 THEN\
    \ 255                 |\n    |                       |   ELSEIF TTL_1 = 1 THEN\
    \ 1               |\n    |                       |   ELSE hop count          \
    \              |\n    | Protocol              | 2nd next header              \
    \           |\n    | Header checksum       | Computed as per [RFC791] (Note 3)\
    \       |\n    | Source address        | Bits 80-111 of source address       \
    \    |\n    | Destination address   | Bits 80-111 of destination address     \
    \ |\n    +-----------------------+-----------------------------------------+\n\
    \            Table 4: IPv6-to-IPv4 Reversible Header Translation\n           \
    \               (with Fragment Header)\n   NOTE 1: The need to save in the IPv6\
    \ header a checksum of both IPv4\n   addresses and the IPv4 protocol field results\
    \ from the following\n   facts: (1) header checksums, present in IPv4 but not\
    \ in IPv6, protect\n   addresses or protocol integrity; (2) in IPv4, ICMP messages\
    \ and\n   null-checksum UDP datagrams depend on this protection because, unlike\n\
    \   other datagrams, they have no other address-and-protocol integrity\n   protection.\
    \  The sum MUST be performed in ordinary two's complement\n   arithmetic.\n  \
    \ IP-layer Packet length is another field covered by the IPv4 header\n   checksum.\
    \  It is not included in the saved checksum because (1) doing\n   so would have\
    \ conflicted with [RFC6437] (flow labels must be the same\n   in all packets of\
    \ each flow); (2) ICMPv4 messages have good enough\n   protection with their own\
    \ checksums; (3) the UDP length field\n   provides to null-checksum UDP datagrams\
    \ the same level of protection\n   after Domain traversal as without Domain traversal\
    \ (consistency\n   between IP-layer and UDP-layer lengths can be checked).\n \
    \  NOTE 2: TTL treatment has been chosen to permit adjacency tests\n   between\
    \ two IPv4 nodes situated at both ends of a 4rd tunnel.  TTL\n   values to be\
    \ preserved for this are TTL = 255 and TTL = 1.  For other\n   values, TTL decreases\
    \ between two IPv4 nodes as though the traversed\n   IPv6 routers were IPv4 routers.\n\
    \   The effect of this TTL treatment on IPv4 traceroute is specific:\n   (1) the\
    \ number of routers of the end-to-end path includes traversed\n   IPv6 routers;\
    \ (2) IPv6 routers of a Domain are listed after IPv4\n   routers of Domain entry\
    \ and exit; (3) the IPv4 address shown for an\n   IPv6 router is the IPv6-only\
    \ dummy IPv4 address (Section 4.8);\n   (4) the response time indicated for an\
    \ IPv6 router is that of the\n   next router.\n   NOTE 3: Provided the sum of\
    \ obtained IPv4 addresses and protocol\n   matches Addr_Prot_Cksm.  If not, the\
    \ packet MUST be silently\n   discarded.\n"
- title: 4.4.  Address Mapping from CE IPv6 Prefixes to 4rd IPv4 Prefixes
  contents:
  - "4.4.  Address Mapping from CE IPv6 Prefixes to 4rd IPv4 Prefixes\n     +--------------------------------------+\n\
    \     |             CE IPv6 prefix           |\n     +--------------------------+-----------+\n\
    \     :     Longest match        :           :\n     :  with a Rule IPv6 prefix\
    \ :           :\n     :           ||             :  EA-bits  :\n     :       \
    \    \\/             :   length  :\n     +--------------------------+     |  \
    \   :\n     |    Rule IPv6 prefix      |<----'---->:\n     +--------------------------+\
    \           :\n                   ||           :           :\n               \
    \    \\/           :           :\n              +-----------------+-----------+\n\
    \              |Rule IPv4 prefix |  EA bits  |\n              +-----------------+-----------+\n\
    \              :                             :\n              +-----------------------------+\n\
    \              |     CE 4rd IPv4 prefix      |\n              +-----------------------------+\n\
    \     ________/ \\_________                   :\n    /                    \\ \
    \                 :\n   :                  ____:________________/ \\__\n   : \
    \                /    :                     \\\n   :    <= 32       :     :  \
    \        > 32        :\n   +----------------+     +-----------------+----+\n \
    \  |IPv4 prfx or add|  OR |   IPv4 address  |PSID|\n   +----------------+    \
    \ +-----------------+----+\n                          :       32        : || :\n\
    \                                              \\/\n                    (by default)\
    \          (If WKPs authorized)\n                        :    :              \
    \       :    :\n                    +---+----+---------+           +----+-------------+\n\
    \      Ports in      |> 0|PSID|any value|    OR     |PSID|  any value  |\n   the\
    \ CE port set  +---+----+---------+           +----+-------------+\n         \
    \           : 4 :     12       :           :        16        :\n      Figure\
    \ 4: From CE IPv6 Prefix to 4rd IPv4 Address and Port Set\n   R-7:  A CE whose\
    \ delegated IPv6 prefix matches the Rule IPv6 prefix\n         of one or several\
    \ Mapping rules MUST select the CE Mapping rule\n         for which the match\
    \ is the longest.  It then derives its 4rd\n         IPv4 prefix as shown in Figure\
    \ 4: (1) The CE replaces the Rule\n         IPv6 prefix with the Rule IPv4 prefix.\
    \  The result is the CE\n         4rd IPv4 prefix.  (2) If this CE 4rd IPv4 prefix\
    \ has less than\n         32 bits, the CE takes it as its assigned IPv4 prefix.\
    \  If it\n         has exactly 32 bits, the CE takes it as its IPv4 address. \
    \ If\n         it has more than 32 bits, the CE MUST take the first 32 bits as\n\
    \         its shared public IPv4 address and bits beyond the first 32 as\n   \
    \      its Port-Set identifier (PSID).  Ports of its restricted port\n       \
    \  set are by default those that have any non-zero value in their\n         first\
    \ 4 bits (the PSID offset), followed by the PSID, and\n         followed by any\
    \ values in remaining bits.  If the WKP\n         authorized option applies to\
    \ the Mapping rule, there is no\n         4-bit offset before the PSID so that\
    \ all ports can be assigned.\n         NOTE: The choice of the default PSID position\
    \ in port fields\n         has been guided by the following objectives: (1) for\
    \ fairness,\n         avoid having any of the well-known ports 0-1023 in the port\
    \ set\n         specified by any PSID value; (2) for compatibility with RTP/\n\
    \         RTCP [RFC4961], include in each port set pairs of consecutive\n    \
    \     ports; (3) in order to facilitate operation and training, have\n       \
    \  the PSID at a fixed position in port fields; (4) in order to\n         facilitate\
    \ documentation in hexadecimal notation, and to\n         facilitate maintenance,\
    \ have this position nibble-aligned.\n         Ports that are excluded from assignment\
    \ to CEs are 0-4095,\n         instead of just 0-1023, in a trade-off to favor\
    \ nibble\n         alignment of PSIDs and overall simplicity.\n   R-8:  A CE whose\
    \ delegated IPv6 prefix has its longest match with the\n         Rule IPv6 prefix\
    \ of the BR Mapping rule MUST take as its IPv4\n         address the 32 bits that,\
    \ in the delegated IPv6 prefix, follow\n         this Rule IPv6 prefix.  If this\
    \ is the case while the hub-and-\n         spoke option applies to the Domain,\
    \ or if the Rule IPv6 prefix\n         is not a /80, there is a configuration\
    \ error in the Domain.  An\n         implementation-dependent administrative action\
    \ MAY be taken.\n         A CE whose delegated IPv6 prefix does not match the\
    \ Rule IPv6\n         prefix of either any CE Mapping rule or the BR Mapping rule,\n\
    \         and is in a Domain that has a NAT64+ Mapping rule, MUST be\n       \
    \  noted as having the unspecified IPv4 address.\n"
- title: 4.5.  Address Mapping from 4rd IPv4 Addresses to 4rd IPv6 Addresses
  contents:
  - "4.5.  Address Mapping from 4rd IPv4 Addresses to 4rd IPv6 Addresses\n   :   \
    \         32              :  :       16      : \\\n   +----------------------------+\
    \  +---------------+ |\n   |         IPv4 address       |  |Port_or_ICMP_ID| |\
    \  Shared-address\n   +----------------------------+  +---+------+----+ |    \
    \   case\n   :      Longest match         :  : 4 : PSID :      |   (PSID length\n\
    \   :  with a Rule IPv4 prefix   :      :length:      |  of the rule > 0)\n  \
    \ :       ||                   :      :      :      |    with WKPs\n   :     \
    \  \\/                   :      :      :      |  not authorized\n   +----------------+-----------+\
    \      +------+      | (PSID offset = 4)\n   |Rule IPv4 prefix|IPv4 suffix|  \
    \    | PSID |      |\n   +----------------+-----------+      +------+      |\n\
    \   :       ||        \\_______    \\____ |      |      |\n   :       \\/    \
    \            \\        \\|      /      |\n   +--------------------------+--------+-----+\
    \      /\n   |    Rule IPv6 prefix      |    EA bits   |\n   +--------------------------+--------------+\n\
    \   :                                         :\n   +-----------------------------------------+\n\
    \   |                 IPv6 prefix             |\n   +-----------------------------------------+\n\
    \   :\\_______________________________        / \\\n   :             ___________________\\\
    ______/   \\_______________\n   :            /                    \\         \
    \                \\\n   :           / (CE Mapping rule)    \\   (BR Mapping rule)\
    \     \\\n   :   <= 64  :                        :          112            :\n\
    \   +----------+---+---+------+---+     +--------------+---+------+---+\n   |CE\
    \ v6 prfx| 0 |tag|v4 add|CNP|     |BR IPv6 prefix|tag|v4 add|CNP|\n   +----------+-|-+---+------+---+\
    \     +--------------+---+------+---+\n   :   <= 64  : | :16 :  32  :16 :    \
    \ :      64      :16 :  32  :16 :\n                |\n          Padding to /64\n\
    \            Figure 5: From 4rd IPv4 Address to 4rd IPv6 Address\n   R-9:  BRs,\
    \ and CEs that are assigned public IPv4 addresses, shared or\n         not, MUST\
    \ derive 4rd IPv6 addresses from 4rd IPv4 addresses via\n         the steps below\
    \ or their functional equivalent (Figure 5\n         details the shared public\
    \ IPv4 address case):\n         NOTE: The rules for forming 4rd-specific Interface\
    \ Identifiers\n         (IIDs) are to obey [RFC7136]:\n         \"Specifications\
    \ of other forms of 64-bit IIDs MUST specify how\n         all 64 bits are set.\"\
    \n         and\n         \"the whole IID value MUST be viewed as an opaque bit\
    \ string by\n         third parties, except possibly in the local context.\"\n\
    \         (1)  If hub-and-spoke topology does not apply to the Domain, or\n  \
    \            if it applies but the IPv6 address to be derived is a\n         \
    \     source address from a CE or a destination address from a\n             \
    \ BR, find the CE Mapping rule whose Rule IPv4 prefix has\n              the longest\
    \ match with the IPv4 address.\n              If no Mapping rule is thus obtained,\
    \ take the BR Mapping\n              rule.\n              If the obtained Mapping\
    \ rule assigns IPv4 prefixes to CEs,\n              i.e., if the length of the\
    \ Rule IPv4 prefix plus EA-bits\n              length is 32 - k, with k >= 0,\
    \ delete the last k bits of\n              the IPv4 address.\n              Otherwise,\
    \ if the length of the Rule IPv4 prefix plus the\n              EA-bits length\
    \ is 32 + k, with k > 0, take k as the PSID\n              length and append to\
    \ the IPv4 address the PSID copied from\n              bits p to p+3 of the Port_or_ICMP_ID\
    \ field where (1) p,\n              the PSID offset, is 4 by default and 0 if\
    \ the WKPs\n              authorized option applies to the rule; (2) the\n   \
    \           Port_or_ICMP_ID field is in bits of the IP payload that\n        \
    \      depend on whether the address is source or destination, on\n          \
    \    whether the packet is ICMP or not, and, if it is ICMP,\n              whether\
    \ it is an error message or an Echo message.  This\n              field is:\n\
    \              a.  If the packet Protocol is not ICMP, the port field\n      \
    \            associated with the address (bits 0-15 for a source\n           \
    \       address and bits 16-31 for a destination address).\n              b. \
    \ If the packet is an ICMPv4 Echo or Echo reply message,\n                  the\
    \ ICMPv4 Identification field (bits 32-47).\n              c.  If the packet is\
    \ an ICMPv4 error message, the port\n                  field associated with the\
    \ address in the returned\n                  packet header (bits 240-255 for a\
    \ source address and\n                  bits 224-239 for a destination address).\n\
    \              NOTE 1: Using Identification fields of ICMP messages as\n     \
    \         port fields permits the exchange of Echo requests and Echo\n       \
    \       replies between shared-address CEs and IPv4 hosts having\n           \
    \   exclusive IPv4 addresses.  Echo exchanges between two\n              shared-address\
    \ CEs remain impossible, but this is a\n              limitation inherent in address\
    \ sharing (one reason among\n              many to use IPv6).\n              NOTE\
    \ 2: When the PSID is taken in the port fields of the\n              IPv4 payload,\
    \ implementation is kept independent from any\n              particular Layer\
    \ 4 protocol having such port fields by not\n              checking that the protocol\
    \ is indeed one that has such\n              port fields.  A packet may consequently\
    \ go, in the case of\n              a source mistake, from a BR to a shared-address\
    \ CE with a\n              protocol that is not supported by this CE.  In this\
    \ case,\n              the CE NAT44 returns an ICMPv4 \"protocol unreachable\"\
    \n              error message.  The IPv4 source is thus appropriately\n      \
    \        informed of its mistake.\n         (2)  In the result, replace the Rule\
    \ IPv4 prefix with the Rule\n              IPv6 prefix.\n         (3)  If the\
    \ result is shorter than a /64, append to the result\n              a null padding\
    \ up to 64 bits, followed by the 4rd Tag\n              (0x0300), and followed\
    \ by the IPv4 address.\n              NOTE: The 4rd Tag is a 4rd-specific mark.\
    \  Its function is\n              to ensure that 4rd IPv6 addresses are recognizable\
    \ by CEs\n              without any interference with the choice of subnet\n \
    \             prefixes in CE sites.  (These choices may have been done\n     \
    \         before 4rd is enabled.)\n              For this, the 4rd Tag has its\
    \ \"u\" and \"g\" bits [RFC4291]\n              both set to 1, so that they maximally\
    \ differ from these\n              existing IPv6 address schemas.  So far, u =\
    \ g = 1 has not\n              been used in any IPv6 addressing architecture.\n\
    \              With the 4rd Tag, IPv6 packets can be routed to the 4rd\n     \
    \         function within a CE node based on a /80 prefix that no\n          \
    \    native IPv6 address can contain.\n         (4)  Add to the result a Checksum\
    \ Neutrality Preserver (CNP).\n              Its value, in one's complement arithmetic,\
    \ is the opposite\n              of the sum of 16-bit fields of the IPv6 address\
    \ other than\n              the IPv4 address and the CNP themselves (i.e., five\n\
    \              consecutive fields in address bits 0-79).\n              NOTE:\
    \ The CNP guarantees that Tunnel packets are valid\n              IPv6 packets\
    \ for all Layer 4 protocols that use the same\n              checksum algorithm\
    \ as TCP.  This guarantee does not depend\n              on where the checksum\
    \ fields of these protocols are placed\n              in IP payloads.  (Today,\
    \ such protocols are UDP [RFC768],\n              TCP [RFC793], UDP-Lite [RFC3828],\
    \ and the Datagram\n              Congestion Control Protocol (DCCP) [RFC5595].\
    \  Should new\n              ones be specified, BRs will support them without\
    \ needing\n              an update.)\n   R-10: A 4rd-capable CE SHOULD, and a\
    \ 4rd-enabled CE MUST, always\n         prohibit all addresses that use its advertised\
    \ prefix and have\n         an IID starting with 0x0300 (4rd Tag), by using Duplicate\n\
    \         Address Detection [RFC4862].\n   R-11: A CE that is assigned the unspecified\
    \ IPv4 address (see\n         Section 4.4) MUST use, for packets tunneled between\
    \ itself and\n         the Domain NAT64+, addresses as detailed in Figure 6: part\
    \ (a)\n         for its IPv6 source, and part (b) as IPv6 destinations that\n\
    \         depend on IPv4 destinations.  A NAT64+, being NAT64 conforming\n   \
    \      [RFC6146], MUST accept IPv6 packets whose destination conforms\n      \
    \   to Figure 6(b) (4rd Tag instead of \"u\" and 0x00 octets).  In\n         its\
    \ Binding Information Base, it MUST remember whether a\n         mapping was created\
    \ with a \"u\" or 4rd-tag destination.  In the\n         IPv4-to-IPv6 direction,\
    \ it MUST use 4rd tunneling, with source\n         address conforming to Figure\
    \ 6(b), when using a mapping that\n         was created with a 4rd-tag destination.\n\
    \        +---------------------+---------+-------+-------------+------+\n    (a)\
    \ |   CE IPv6 prefix    |    0    |4rd Tag|      0      |  CNP |\n        +---------------------+---------+-------+-------------+------+\n\
    \        :      <= 64          :  >= 0   :   16  :     32      :  16  :\n    \
    \        4rd IPv6 address of a CE having no public IPv4 address\n        <-----------\
    \ Rule IPv6 prefix --------->:\n        +-------------------------------+-------+-------------+------+\n\
    \    (b) |      NAT64+ IPv6 prefix       |4rd Tag|IPv4 address |  CNP |\n    \
    \    +-------------------------------+-------+-------------+------+\n        :\
    \               64              :   16  :      32     :  16  :\n             \
    \  4rd IPv6 address of a host reachable via a NAT64+\n                     Figure\
    \ 6: Rules for CE and NAT64+\n   R-12: For anti-spoofing protection, CEs and BRs\
    \ MUST check that the\n         IPv6 source address of each received Tunnel packet\
    \ is that\n         which, according to R-9, is derived from the source 4rd IPv4\n\
    \         address.  For this, the IPv4 address used to obtain the source\n   \
    \      4rd IPv4 address is that embedded in the IPv6 source address\n        \
    \ (in its bits 80-111).  (This verification is needed because\n         IPv6 ingress\
    \ filtering [RFC3704] applies only to IPv6 prefixes,\n         without any guarantee\
    \ that Tunnel packets are built as\n         specified in R-9.)\n   R-13: For\
    \ additional protection against packet corruption at a link\n         layer that\
    \ might be undetected at this layer during Domain\n         traversal, CEs and\
    \ BRs SHOULD verify that source and\n         destination IPv6 addresses have\
    \ not been modified.  This can be\n         done by checking that they remain\
    \ checksum neutral (see the\n         Note above regarding the CNP).\n"
- title: 4.6.  Fragmentation Processing
  contents:
  - '4.6.  Fragmentation Processing

    '
- title: 4.6.1.  Fragmentation at Domain Entry
  contents:
  - "4.6.1.  Fragmentation at Domain Entry\n   R-14: If an IPv4 packet enters a CE\
    \ or BR with a size such that the\n         derived Tunnel packet would be longer\
    \ than the Domain PMTU, the\n         packet has to be either discarded or fragmented.\
    \  The\n         Domain-entry node MUST discard it if the packet has DF = 1,\n\
    \         with an ICMP error message returned to the source.  It MUST\n      \
    \   fragment it otherwise, with the payload of each fragment not\n         exceeding\
    \ PMTU - 48.  The first fragment has its offset equal\n         to the received\
    \ offset.  Subsequent fragments have offsets\n         increased by the lengths\
    \ of the payloads of previous fragments.\n         Functionally, fragmentation\
    \ is supposed to be done in IPv4\n         before applying reversible header translation\
    \ to each fragment;\n         see Section 4.3.\n"
- title: 4.6.2.  Ports of Fragments Addressed to Shared-Address CEs
  contents:
  - "4.6.2.  Ports of Fragments Addressed to Shared-Address CEs\n   Because ports\
    \ are available only in the first fragments of IPv4\n   fragmented packets, a\
    \ BR needs a mechanism to send to the right\n   shared-address CEs all fragments\
    \ of fragmented packets.\n   For this, a BR MAY systematically reassemble fragmented\
    \ IPv4 packets\n   before tunneling them.  But this consumes large memory space,\
    \ creates\n   opportunities for denial-of-service-attacks, and can significantly\n\
    \   increase forwarding delays.  This is the reason for the following\n   requirement:\n\
    \   R-15: BRs SHOULD support an algorithm whereby received IPv4 packets\n    \
    \     can be forwarded on the fly.  The following is an example of\n         such\
    \ an algorithm:\n         (1)  At BR initialization, if at least one CE Mapping\
    \ rule\n              deals with one or more shared public IPv4 addresses (i.e.,\n\
    \              length of Rule IPv4 prefix + EA-bits length > 32), the BR\n   \
    \           initializes an empty \"IPv4 packet table\" whose entries\n       \
    \       have the following items:\n                 - IPv4 source\n          \
    \       - IPv4 destination\n                 - IPv4 identification\n         \
    \        - Destination port\n         (2)  When the BR receives an IPv4 packet\
    \ whose matching Mapping\n              rule deals with one or more shared public\
    \ IPv4 addresses\n              (i.e., length of Rule IPv4 prefix + EA-bits length\
    \ > 32),\n              the BR searches the table for an entry whose IPv4 source,\n\
    \              IPv4 destination, and IPv4 identification are those of the\n  \
    \            received packet.  The BR then performs actions as detailed\n    \
    \          in Table 5, depending on which conditions hold.\n      +-----------------------------+---+---+---+---+---+---+---+---+\n\
    \      | - CONDITIONS -              |   |   |   |   |   |   |   |   |\n     \
    \ | First Fragment (offset = 0) | Y | Y | Y | Y | N | N | N | N |\n      | Last\
    \ fragment (MF = 0)      | Y | Y | N | N | Y | Y | N | N |\n      | An entry has\
    \ been found     | Y | N | Y | N | Y | N | Y | N |\n      | -------------------------\
    \   |   |   |   |   |   |   |   |   |\n      | - RESULTING ACTIONS -       | \
    \  |   |   |   |   |   |   |   |\n      | Create a new entry          | - | -\
    \ | - | X | - | - | - | - |\n      | Use port of the entry       | - | - | - |\
    \ - | X | - | X | - |\n      | Update port of the entry    | - | - | X | - | -\
    \ | - | - | - |\n      | Delete the entry            | X | - | - | - | X | - |\
    \ - | - |\n      | Forward the packet          | X | X | X | X | X | - | X | -\
    \ |\n      +-----------------------------+---+---+---+---+---+---+---+---+\n \
    \                           Table 5: BR Actions\n         (3)  The BR performs\
    \ garbage collection for table entries that\n              remain unchanged for\
    \ longer than some limit.  This limit,\n              which is normally longer\
    \ than the maximum time normally\n              needed to reassemble a packet,\
    \ is not critical.  It should\n              not, however, be longer than 15 seconds\
    \ [RFC791].\n   R-16: For the above algorithm to be effective, CEs that are assigned\n\
    \         shared public IPv4 addresses MUST NOT interleave fragments of\n    \
    \     several fragmented packets.\n   R-17: CEs that are assigned IPv4 prefixes\
    \ and are in nodes that route\n         public IPv4 addresses rather than only\
    \ using NAT44s MUST have\n         the same behavior as that described just above\
    \ for BRs.\n"
- title: 4.6.3.  Packet Identifications from Shared-Address CEs
  contents:
  - "4.6.3.  Packet Identifications from Shared-Address CEs\n   When packets go from\
    \ CEs that share the same IPv4 address to a common\n   destination, a precaution\
    \ is needed to guarantee that packet\n   identifications set by sources are different.\
    \  Otherwise, packet\n   reassembly at the destination could be confused because\
    \ it is based\n   only on source IPv4 address and Identification.  The probability\
    \ of\n   such confusing situations may in theory be very low, but a safe\n   solution\
    \ is needed in order to avoid creating new attack\n   opportunities.\n   R-18:\
    \ A CE that is assigned a shared public IPv4 address MUST only\n         use packet\
    \ identifications that have the CE PSID in their\n         bits 0 to PSID length\
    \ - 1.\n   R-19: A BR or a CE that receives a packet from a shared-address CE\n\
    \         MUST check that bits 0 to PSID length - 1 of their packet\n        \
    \ identifications are equal to the PSID found in the source 4rd\n         IPv4\
    \ address.\n"
- title: 4.7.  TOS and Traffic Class Processing
  contents:
  - "4.7.  TOS and Traffic Class Processing\n   IPv4 TOS and IPv6 traffic class have\
    \ the same semantic, that of the\n   differentiated services field, or DS field,\
    \ specified in [RFC2474]\n   and [RFC6040].  Their first 6 bits contain a differentiated\
    \ services\n   codepoint (DSCP), and their last 2 bits can convey explicit\n \
    \  congestion notifications (ECNs), which both may evolve during Domain\n   traversal.\
    \  [RFC2983] discusses how the DSCP can be handled by tunnel\n   endpoints.  The\
    \ Tunnel Traffic Class option provides permission to\n   ignore DS-field evolutions\
    \ occurring during Domain traversal, if the\n   desired behavior is that of generic\
    \ tunnels conforming to [RFC2473].\n   R-20: Unless the Tunnel Traffic Class option\
    \ is configured for the\n         Domain, BRs and CEs MUST copy the IPv4 TOS into\
    \ the IPv6\n         traffic class at Domain entry and copy back the IPv6 traffic\n\
    \         class into the IPv4 TOS at Domain exit.\n   R-21: If the Tunnel Traffic\
    \ Class option is configured for a Domain,\n         BRs and CEs MUST at Domain\
    \ entry take the configured Tunnel\n         Traffic Class as the IPv6 traffic\
    \ class and copy the received\n         IPv4 TOS into the IPv4_TOS of the fragment\
    \ header (Figure 3).\n         At Domain exit, they MUST copy back the IPv4_TOS\
    \ of the\n         fragment header into the IPv4 TOS.\n"
- title: 4.8.  Tunnel-Generated ICMPv6 Error Messages
  contents:
  - "4.8.  Tunnel-Generated ICMPv6 Error Messages\n   If a Tunnel packet is discarded\
    \ on its way across a 4rd domain\n   because of an unreachable destination, an\
    \ ICMPv6 error message is\n   returned to the IPv6 source.  For the IPv4 source\
    \ of the discarded\n   packet to be informed of packet loss, the ICMPv6 message\
    \ has to be\n   converted into an ICMPv4 message.\n   R-22: If a CE or BR receives\
    \ an ICMPv6 error message [RFC4443], it\n         MUST synthesize an ICMPv4 error\
    \ packet [RFC792].  This packet\n         MUST contain the first 8 octets of the\
    \ discarded packet's IP\n         payload.  The reserved IPv4 dummy address (192.0.0.8/32;\
    \ see\n         Section 6) MUST be used as its source address.\n         As described\
    \ in [RFC6145], ICMPv6 Type = 1 and Code = 0\n         (Destination Unreachable,\
    \ No route to destination) MUST be\n         translated into ICMPv4 Type = 3 and\
    \ Code = 0 (Destination\n         Unreachable, Net unreachable), and ICMPv6 Type\
    \ = 3 and Code = 0\n         (Time Exceeded, Hop limit exceeded in transit) MUST\
    \ be\n         translated into ICMPv4 Type = 11 and Code = 0 (Time Exceeded,\n\
    \         time to live exceeded in transit).\n"
- title: 4.9.  Provisioning 4rd Parameters to CEs
  contents:
  - "4.9.  Provisioning 4rd Parameters to CEs\n   Domain parameters listed in Section\
    \ 4.2 are subject to the following\n   constraints:\n   R-23: Each Domain MUST\
    \ have a BR Mapping rule and/or a NAT64+ Mapping\n         rule.  The BR Mapping\
    \ rule is only used by CEs that are\n         assigned public IPv4 addresses,\
    \ shared or not.  The NAT64+\n         Mapping rule is only used by CEs that are\
    \ assigned the\n         unspecified IPv4 address (Section 4.4) and therefore\
    \ need an\n         ISP NAT64 to reach IPv4 destinations.\n   R-24: Each CE and\
    \ each BR MUST support up to 32 Mapping rules.\n         Support for up to 32\
    \ Mapping rules ensures that independently\n         acquired CEs and BR nodes\
    \ can always interwork.\n         ISPs that need Mapping rules for more IPv4 prefixes\
    \ than this\n         number SHOULD split their networks into multiple Domains.\n\
    \         Communication between these domains can be done in IPv4 or by\n    \
    \     some other implementation-dependent, but equivalent, means.\n   R-25: For\
    \ mesh topologies, where CE-CE paths don't go via BRs, all\n         Mapping rules\
    \ of the Domain MUST be sent to all CEs.  For\n         hub-and-spoke topologies,\
    \ where all CE-CE paths go via BRs,\n         each CE MAY be sent only the BR\
    \ Mapping rule of the Domain\n         plus, if different, the CE Mapping rule\
    \ that applies to its CE\n         IPv6 prefix.\n   R-26: In a Domain where the\
    \ chosen topology is hub-and-spoke, all CEs\n         MUST have IPv6 prefixes\
    \ that match a CE Mapping rule.\n         (Otherwise, packets sent to CEs whose\
    \ IPv6 prefixes would match\n         only the BR Mapping rule would, with longest-match\
    \ selected\n         routes, be routed directly to these CEs.  This would be\n\
    \         contrary to the hub-and-spoke requirement.)\n   R-27: CEs MUST be able\
    \ to acquire parameters of 4rd domains\n         (Section 4.2) in DHCPv6 [RFC3315].\
    \  Formats of DHCPv6 options\n         to be used are detailed in Figures 7, 8,\
    \ and 9, with field\n         values specified after each figure.\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      option = OPTION_4RD      |         option-length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                 encapsulated 4rd rule options                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      Figure 7: DHCPv6 Option for 4rd\n   o  option code: 97,\
    \ OPTION_4RD (see Section 6)\n   o  option-length: the length of encapsulated\
    \ options, in octets\n   o  encapsulated 4rd rule options: The OPTION_4RD DHCPv6\
    \ option\n      contains at least one encapsulated OPTION_4RD_MAP_RULE option\
    \ and\n      a maximum of one encapsulated OPTION_4RD_NON_MAP_RULE option.\n \
    \     Since DHCP servers normally send whatever options the operator\n      configures,\
    \ operators are advised to configure these options\n      appropriately.  DHCP\
    \ servers MAY check to see that the\n      configuration follows these rules and\
    \ notify the operator in an\n      implementation-dependent manner if the settings\
    \ for these options\n      aren't valid.  The length of encapsulated options is\
    \ in octets.\n      0                   1                   2                \
    \   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \ | option = OPTION_4RD_MAP_RULE  |         option-length         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |  prefix4-len  |  prefix6-len  |    ea-len     |W|   Reserved  |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                  rule-ipv4-prefix                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ +                                                               +\n     |  \
    \                      rule-ipv6-prefix                       |\n     +      \
    \                                                         +\n     |          \
    \                                                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \         Figure 8: Encapsulated Option for Mapping-Rule Parameters\n   o  option\
    \ code: 98, encapsulated OPTION_4RD_MAP_RULE option (see\n      Section 6)\n \
    \  o  option-length: 20\n   o  prefix4-len: number of bits of the Rule IPv4 prefix\n\
    \   o  prefix6-len: number of bits of the Rule IPv6 prefix\n   o  ea-len: EA-bits\
    \ length\n   o  W: WKP authorized, = 1 if set\n   o  rule-ipv4-prefix: Rule IPv4\
    \ prefix, left-aligned\n   o  rule-ipv6-prefix: Rule IPv6 prefix, left-aligned\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |option =OPTION_4RD_NON_MAP_RULE|         option-length         |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |H|\
    \      0    |T| traffic-class |         domain-pmtu           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Figure 9: Encapsulated Option for Non-Mapping-Rule Parameters\n      \
    \                        of 4rd Domains\n   o  option code: 99, encapsulated OPTION_4RD_NON_MAP_RULE\
    \ option (see\n      Section 6)\n   o  option-length: 4\n   o  H: Hub-and-spoke\
    \ topology (= 1 if Yes)\n   o  T: Traffic Class flag (= 1 if a Tunnel Traffic\
    \ Class is provided)\n   o  traffic-class: Tunnel Traffic Class\n   o  domain-pmtu:\
    \ Domain PMTU (at least 1280 octets)\n   Means other than DHCPv6 that may prove\
    \ useful to provide 4rd\n   parameters to CEs are off-scope for this document.\
    \  The same or\n   similar parameter formats would, however, be recommended to\n\
    \   facilitate training and operation.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Spoofing attacks\n      With IPv6 ingress filtering\
    \ in effect in the Domain [RFC3704], as\n      required in Section 3 (Figure 1\
    \ in particular), and with\n      consistency checks between 4rd IPv4 and IPv6\
    \ addresses\n      (Section 4.5), no spoofing opportunity in IPv4 is introduced\
    \ by\n      4rd: being able to use as source IPv6 address only one that has\n\
    \      been allocated to him, a customer can only provide as source 4rd\n    \
    \  IPv4 address that which derives this IPv6 address according to\n      Section\
    \ 4.5, i.e., one that his ISP has allocated to him.\n   Routing loop attacks\n\
    \      Routing loop attacks that may exist in some \"automatic tunneling\"\n \
    \     scenarios are documented in [RFC6324].  No opportunities for\n      routing\
    \ loop attacks have been identified with 4rd.\n   Fragmentation-related attacks\n\
    \      As discussed in Section 4.6, each BR of a Domain that assigns\n      shared\
    \ public IPv4 addresses should maintain a dynamic table of\n      fragmented packets\
    \ that go to these shared-address CEs.\n      This leaves BRs vulnerable to denial-of-service\
    \ attacks from hosts\n      that would send very large numbers of first fragments\
    \ and would\n      never send last fragments having the same packet identifications.\n\
    \      This vulnerability is inherent in IPv4 address sharing, be it\n      static\
    \ or dynamic.  Compared to what it is with algorithms that\n      reassemble IPv4\
    \ packets in BRs, it is, however, significantly\n      mitigated by the algorithm\
    \ provided in Section 4.6.2, as that\n      algorithm uses much less memory space.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has allocated the following:\n   o  Encapsulated\
    \ options OPTION_4RD (97), OPTION_4RD_MAP_RULE (98),\n      and OPTION_4RD_NON_MAP_RULE\
    \ (99).  These options have been\n      recorded in the option code space of the\
    \ \"Dynamic Host\n      Configuration Protocol for IPv6 (DHCPv6)\" registry. \
    \ See\n      Section 4.9 of this document and Section 24.3 of [RFC3315]).\n  \
    \       Value   |      Description        |  Reference\n      -----------+-------------------------+---------------\n\
    \           97    |       OPTION_4RD        | this document\n           98   \
    \ |   OPTION_4RD_MAP_RULE   | this document\n           99    | OPTION_4RD_NON_MAP_RULE\
    \ | this document\n   o  Reserved IPv4 address 192.0.0.8/32 to be used as the\
    \ \"IPv4 dummy\n      address\" (Section 4.8).\n"
- title: 7.  Relationship with Previous Works
  contents:
  - "7.  Relationship with Previous Works\n   The present specification has been influenced\
    \ by many previous IETF\n   drafts, in particular those accessible at\n   <http://tools.ietf.org/html/draft-xxxx>,\
    \ where \"xxxx\" refers to the\n   following (listed in order, by date of their\
    \ first versions):\n   o  bagnulo-behave-nat64 (2008-06-10)\n   o  xli-behave-ivi\
    \ (2008-07-06)\n   o  despres-sam-scenarios (2008-09-28)\n   o  boucadair-port-range\
    \ (2008-10-23)\n   o  ymbk-aplusp (2008-10-27)\n   o  xli-behave-divi (2009-10-19)\n\
    \   o  thaler-port-restricted-ip-issues (2010-02-28)\n   o  cui-softwire-host-4over6\
    \ (2010-07-06)\n   o  dec-stateless-4v6 (2011-03-05)\n   o  matsushima-v6ops-transition-experience\
    \ (2011-03-07)\n   o  despres-intarea-4rd (2011-03-07)\n   o  deng-aplusp-experiment-results\
    \ (2011-03-07)\n   o  operators-softwire-stateless-4v6-motivation (2011-05-05)\n\
    \   o  xli-behave-divi-pd (2011-07-04)\n   o  murakami-softwire-4rd (2011-07-04)\n\
    \   o  murakami-softwire-4v6-translation (2011-07-04)\n   o  despres-softwire-4rd-addmapping\
    \ (2011-08-19)\n   o  boucadair-softwire-stateless-requirements (2011-09-08)\n\
    \   o  chen-softwire-4v6-add-format (2011-10-12)\n   o  mawatari-softwire-464xlat\
    \ (2011-10-16)\n   o  mdt-softwire-map-dhcp-option (2011-10-24)\n   o  mdt-softwire-mapping-address-and-port\
    \ (2011-10-24)\n   o  mdt-softwire-map-translation (2012-01-10)\n   o  mdt-softwire-map-encapsulation\
    \ (2012-01-27)\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC791]   Postel, J., \"Internet Protocol\",\
    \ STD 5, RFC 791,\n              DOI 10.17487/RFC0791, September 1981,\n     \
    \         <http://www.rfc-editor.org/info/rfc791>.\n   [RFC792]   Postel, J.,\
    \ \"Internet Control Message Protocol\", STD 5,\n              RFC 792, DOI 10.17487/RFC0792,\
    \ September 1981,\n              <http://www.rfc-editor.org/info/rfc792>.\n  \
    \ [RFC793]   Postel, J., \"Transmission Control Protocol\", STD 7,\n         \
    \     RFC 793, DOI 10.17487/RFC0793, September 1981,\n              <http://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/\n              RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2460]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", RFC 2460, DOI 10.17487/RFC2460,\n              December 1998,\n\
    \              <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC2474]  Nichols,\
    \ K., Blake, S., Baker, F., and D. Black,\n              \"Definition of the Differentiated\
    \ Services Field (DS\n              Field) in the IPv4 and IPv6 Headers\", RFC\
    \ 2474,\n              DOI 10.17487/RFC2474, December 1998,\n              <http://www.rfc-editor.org/info/rfc2474>.\n\
    \   [RFC2983]  Black, D., \"Differentiated Services and Tunnels\",\n         \
    \     RFC 2983, DOI 10.17487/RFC2983, October 2000,\n              <http://www.rfc-editor.org/info/rfc2983>.\n\
    \   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n    \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \      for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315,\n              July\
    \ 2003,\n              <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC4291]\
    \  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n              Architecture\"\
    , RFC 4291, DOI 10.17487/RFC4291,\n              February 2006,\n            \
    \  <http://www.rfc-editor.org/info/rfc4291>.\n   [RFC4443]  Conta, A., Deering,\
    \ S., and M. Gupta, Ed., \"Internet\n              Control Message Protocol (ICMPv6)\
    \ for the Internet\n              Protocol Version 6 (IPv6) Specification\", RFC\
    \ 4443,\n              DOI 10.17487/RFC4443, March 2006,\n              <http://www.rfc-editor.org/info/rfc4443>.\n\
    \   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n    \
    \          Address Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862,\
    \ September 2007,\n              <http://www.rfc-editor.org/info/rfc4862>.\n \
    \  [RFC4925]  Li, X., Ed., Dawkins, S., Ed., Ward, D., Ed., and A.\n         \
    \     Durand, Ed., \"Softwire Problem Statement\", RFC 4925,\n              DOI\
    \ 10.17487/RFC4925, July 2007,\n              <http://www.rfc-editor.org/info/rfc4925>.\n\
    \   [RFC5082]  Gill, V., Heasley, J., Meyer, D., Savola, P., Ed., and C.\n   \
    \           Pignataro, \"The Generalized TTL Security Mechanism\n            \
    \  (GTSM)\", RFC 5082, DOI 10.17487/RFC5082, October 2007,\n              <http://www.rfc-editor.org/info/rfc5082>.\n\
    \   [RFC6040]  Briscoe, B., \"Tunnelling of Explicit Congestion\n            \
    \  Notification\", RFC 6040, DOI 10.17487/RFC6040,\n              November 2010,\n\
    \              <http://www.rfc-editor.org/info/rfc6040>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [NAT444]   Yamagata, I., Shirasaki, Y., Nakagawa,\
    \ A., Yamaguchi, J.,\n              and H. Ashida, \"NAT444\", Work in Progress,\n\
    \              draft-shirasaki-nat444-06, July 2012.\n   [RFC768]   Postel, J.,\
    \ \"User Datagram Protocol\", STD 6, RFC 768,\n              DOI 10.17487/RFC0768,\
    \ August 1980,\n              <http://www.rfc-editor.org/info/rfc768>.\n   [RFC1191]\
    \  Mogul, J. and S. Deering, \"Path MTU discovery\", RFC 1191,\n             \
    \ DOI 10.17487/RFC1191, November 1990,\n              <http://www.rfc-editor.org/info/rfc1191>.\n\
    \   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G.,\n   \
    \           and E. Lear, \"Address Allocation for Private Internets\",\n     \
    \         BCP 5, RFC 1918, DOI 10.17487/RFC1918, February 1996,\n            \
    \  <http://www.rfc-editor.org/info/rfc1918>.\n   [RFC2473]  Conta, A. and S. Deering,\
    \ \"Generic Packet Tunneling in\n              IPv6 Specification\", RFC 2473,\
    \ DOI 10.17487/RFC2473,\n              December 1998,\n              <http://www.rfc-editor.org/info/rfc2473>.\n\
    \   [RFC3022]  Srisuresh, P. and K. Egevang, \"Traditional IP Network\n      \
    \        Address Translator (Traditional NAT)\", RFC 3022,\n              DOI\
    \ 10.17487/RFC3022, January 2001,\n              <http://www.rfc-editor.org/info/rfc3022>.\n\
    \   [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n \
    \             Networks\", BCP 84, RFC 3704, DOI 10.17487/RFC3704,\n          \
    \    March 2004,\n              <http://www.rfc-editor.org/info/rfc3704>.\n  \
    \ [RFC3828]  Larzon, L-A., Degermark, M., Pink, S., Jonsson, L-E., Ed.,\n    \
    \          and G. Fairhurst, Ed., \"The Lightweight User Datagram\n          \
    \    Protocol (UDP-Lite)\", RFC 3828, DOI 10.17487/RFC3828,\n              July\
    \ 2004,\n              <http://www.rfc-editor.org/info/rfc3828>.\n   [RFC4271]\
    \  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed.,\n              \"A Border\
    \ Gateway Protocol 4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271,\
    \ January 2006,\n              <http://www.rfc-editor.org/info/rfc4271>.\n   [RFC4821]\
    \  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\"\
    , RFC 4821, DOI 10.17487/RFC4821, March 2007,\n              <http://www.rfc-editor.org/info/rfc4821>.\n\
    \   [RFC4961]  Wing, D., \"Symmetric RTP / RTP Control Protocol (RTCP)\",\n  \
    \            BCP 131, RFC 4961, DOI 10.17487/RFC4961, July 2007,\n           \
    \   <http://www.rfc-editor.org/info/rfc4961>.\n   [RFC5595]  Fairhurst, G., \"\
    The Datagram Congestion Control Protocol\n              (DCCP) Service Codes\"\
    , RFC 5595, DOI 10.17487/RFC5595,\n              September 2009,\n           \
    \   <http://www.rfc-editor.org/info/rfc5595>.\n   [RFC5969]  Townsley, W. and\
    \ O. Troan, \"IPv6 Rapid Deployment on IPv4\n              Infrastructures (6rd)\
    \ -- Protocol Specification\", RFC\n              5969, DOI 10.17487/RFC5969,\
    \ August 2010,\n              <http://www.rfc-editor.org/info/rfc5969>.\n   [RFC6145]\
    \  Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation\n              Algorithm\"\
    , RFC 6145, DOI 10.17487/RFC6145, April 2011,\n              <http://www.rfc-editor.org/info/rfc6145>.\n\
    \   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n   \
    \           NAT64: Network Address and Protocol Translation from IPv6\n      \
    \        Clients to IPv4 Servers\", RFC 6146, DOI 10.17487/RFC6146,\n        \
    \      April 2011,\n              <http://www.rfc-editor.org/info/rfc6146>.\n\
    \   [RFC6324]  Nakibly, G. and F. Templin, \"Routing Loop Attack Using\n     \
    \         IPv6 Automatic Tunnels: Problem Statement and Proposed\n           \
    \   Mitigations\", RFC 6324, DOI 10.17487/RFC6324, August 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6324>.\n   [RFC6346]  Bush, R., Ed., \"\
    The Address plus Port (A+P) Approach to\n              the IPv4 Address Shortage\"\
    , RFC 6346, DOI 10.17487/\n              RFC6346, August 2011,\n             \
    \ <http://www.rfc-editor.org/info/rfc6346>.\n   [RFC6437]  Amante, S., Carpenter,\
    \ B., Jiang, S., and J. Rajahalme,\n              \"IPv6 Flow Label Specification\"\
    , RFC 6437,\n              DOI 10.17487/RFC6437, November 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6437>.\n   [RFC6535]  Huang, B., Deng, H.,\
    \ and T. Savolainen, \"Dual-Stack Hosts\n              Using \"Bump-in-the-Host\"\
    \ (BIH)\", RFC 6535,\n              DOI 10.17487/RFC6535, February 2012,\n   \
    \           <http://www.rfc-editor.org/info/rfc6535>.\n   [RFC6887]  Wing, D.,\
    \ Ed., Cheshire, S., Boucadair, M., Penno, R., and\n              P. Selkirk,\
    \ \"Port Control Protocol (PCP)\", RFC 6887,\n              DOI 10.17487/RFC6887,\
    \ April 2013,\n              <http://www.rfc-editor.org/info/rfc6887>.\n   [RFC7136]\
    \  Carpenter, B. and S. Jiang, \"Significance of IPv6\n              Interface\
    \ Identifiers\", RFC 7136, DOI 10.17487/RFC7136,\n              February 2014,\n\
    \              <http://www.rfc-editor.org/info/rfc7136>.\n   [Solutions-4v6]\n\
    \              Boucadair, M., Ed., Matsushima, S., Lee, Y., Bonness, O.,\n   \
    \           Borges, I., and G. Chen, \"Motivations for Carrier-side\n        \
    \      Stateless IPv4 over IPv6 Migration Solutions\", Work in\n             \
    \ Progress, draft-ietf-softwire-stateless-4v6-motivation-05,\n              November\
    \ 2012.\n"
- title: Appendix A.  Textual Representation of Mapping Rules
  contents:
  - "Appendix A.  Textual Representation of Mapping Rules\n   In the sections that\
    \ follow, each Mapping rule will be represented as\n   follows, using 0bXXX to\
    \ represent binary number XXX; square brackets\n   (\"[ ]\") indicate optional\
    \ items:\n   {Rule IPv4 prefix, EA-bits length, Rule IPv6 prefix\n      [, WKPs\
    \ authorized]}\n   EXAMPLES:\n    {0.0.0.0/0, 32, 2001:db8:0:1:300::/80}\n   \
    \                            a BR Mapping rule\n    {198.16.0.0/14, 22, 2001:db8:4000::/34}\n\
    \                               a CE Mapping rule\n    {0.0.0.0/0, 32, 2001:db8:0:1::/80}\n\
    \                               a NAT64+ Mapping rule\n    {198.16.0.0/14, 22,\
    \ 2001:db8:4000::/34, Yes}\n                               a CE Mapping rule\n\
    \                                 and hub-and-spoke topology\n"
- title: Appendix B.  Configuring Multiple Mapping Rules
  contents:
  - "Appendix B.  Configuring Multiple Mapping Rules\n   As far as Mapping rules are\
    \ concerned, the simplest deployment model\n   is that in which the Domain has\
    \ only one rule (the BR Mapping rule).\n   To assign an IPv4 address to a CE in\
    \ this model, an IPv6 /112 is\n   assigned to it, comprising the BR /64 prefix,\
    \ the 4rd Tag, and the\n   IPv4 address.  However, this model has the following\
    \ limitations: (1)\n   shared IPv4 addresses are not supported; (2) IPv6 prefixes\
    \ used for\n   4rd are too long to also be used for native IPv6 addresses; (3)\
    \ if\n   the IPv4 address space of the ISP is split with many disjoint IPv4\n\
    \   prefixes, the IPv6 routing plan must be as complex as an IPv4 routing\n  \
    \ plan based on these prefixes.\n   With more Mapping rules, CE prefixes used\
    \ for 4rd can be those used\n   for native IPv6.  How to choose CE Mapping rules\
    \ for a particular\n   deployment does not need to be standardized.\n   The following\
    \ is only a particular pragmatic approach that can be\n   used for various deployment\
    \ scenarios.  It is applied in some of the\n   use cases that follow.\n   (1)\
    \  Select a \"Common_IPv6_prefix\" that will appear at the beginning\n       \
    \ of all 4rd CE IPv6 prefixes.\n   (2)  Choose all IPv4 prefixes to be used, and\
    \ assign one of them to\n        each CE Mapping rule i.\n   (3)  For each CE\
    \ Mapping rule i, do the following:\n        A.  Choose the length of its Rule\
    \ IPv6 prefix (possibly the same\n            for all CE Mapping rules).\n   \
    \     B.  Determine its PSID_length(i).  A CE Mapping rule that\n            assigns\
    \ shared addresses with a sharing ratio of 2^Ki has\n            PSID_length =\
    \ Ki.  A CE Mapping rule that assigns IPv4\n            prefixes of length L <\
    \ 32 is considered to have a negative\n            PSID_length (PSID_length =\
    \ L - 32).\n        C.  Derive EA-bits length(i) = 32 - L(Rule IPv4 prefix(i))\
    \ +\n            PSID_length(i).\n        D.  Derive the length of Rule_code(i),\
    \ the prefix to be appended\n            to the common prefix to get the Rule\
    \ IPv6 prefix of rule i:\n              L(Rule_code(i)) = L(CE IPv6 prefix(i))\n\
    \                                - L(Common_IPv6_prefix)\n                   \
    \             - (32 - L(Rule IPv4 prefix(i)))\n                              \
    \  - PSID_length(i)\n        E.  Derive Rule_code(i) with the following constraints:\
    \ (1) its\n            length is L(Rule_code(i)); (2) it does not overlap with\
    \ any\n            of the previously obtained Rule_codes (for instance, 010 and\n\
    \            01011 do overlap, while 00, 011, and 010 do not); (3) it has\n  \
    \          the lowest possible value as a fractional binary number (for\n    \
    \        instance, 0100 < 10 < 11011 < 111).  Thus, rules whose\n            Rule_code\
    \ lengths are 4, 3, 5, and 2 give Rule_codes 0000,\n            001, 00010, and\
    \ 01.\n        F.  Take Rule IPv6 prefix(i) = the Common_IPv6_prefix followed\n\
    \            by Rule_code(i).\n   :<--------------------- L(CE IPv6 prefix(i))\
    \ --------------------->:\n   :                                              \
    \                    :\n   :                       32 - L(Rule IPv4 prefix(i))\
    \  PSID_length(i):\n   :                                                \\   \
    \          |   :\n   :                                      :<---------'--------><--'-->:\n\
    \   :                                      :              ||           :\n   :\
    \                                      :              \\/           :\n   :  \
    \                          :<------->:<--- EA-bits length(i) --->:\n   :     \
    \                     L(Rule_code(i))\n   :                            :     \
    \    :\n   +----------------------------+---------+\n   |    Common_IPv6_prefix\
    \      |Rule_code|\n   |                            |   (i)   |\n   +----------------------------+---------+\n\
    \   :<------ L(Rule IPv6 prefix(i)) ------>:\n               Figure 10: Diagram\
    \ of One Pragmatic Approach\n"
- title: Appendix C.  Adding Shared IPv4 Addresses to an IPv6 Network
  contents:
  - 'Appendix C.  Adding Shared IPv4 Addresses to an IPv6 Network

    '
- title: C.1.  With CEs within CPEs
  contents:
  - "C.1.  With CEs within CPEs\n   Here, we consider an ISP that offers IPv6-only\
    \ service to up to 2^20\n   customers.  Each customer is delegated a /56, starting\
    \ with common\n   prefix 2001:db8:0::/36.  The ISP wants to add public IPv4 service\
    \ for\n   customers that are 4rd capable.  It prefers to do so with stateless\n\
    \   operation in its nodes but has significantly fewer IPv4 addresses\n   than\
    \ IPv6 addresses, so a sharing ratio is necessary.\n   The only IPv4 prefixes\
    \ it can use are 192.8.0.0/15, 192.4.0.0/16,\n   192.2.0.0/16, and 192.1.0.0/16\
    \ (neither overlapping nor\n   aggregatable).  This gives 2^(32 - 15) + 3 * 2^(32\
    \ - 16) IPv4\n   addresses, i.e., 2^18 + 2^16.  For the 2^20 customers to have\
    \ the\n   same sharing ratio, the number of IPv4 addresses to be shared has to\n\
    \   be a power of 2.  The ISP can therefore give up using one of its\n   /16s,\
    \ say the last one.  (Whether or not it could be motivated to\n   return it to\
    \ its Internet Registry is off-scope for this document.)\n   The sharing ratio\
    \ to apply is then 2^20 / 2^18 = 2^2 = 4, giving a\n   PSID length of 2.\n   Applying\
    \ the principles of Appendix B with L(Common_IPv6_prefix) =\n   36, L(PSID) =\
    \ 2 for all rules, and L(CE IPv6 prefix(i)) = 56 for all\n   rules, Rule_codes\
    \ and Rule IPv6 prefixes are as follows:\n   +--------------+--------+-----------+-----------+-------------------+\n\
    \   | CE Rule IPv4 | EA     | Rule-Code | Code      | CE Rule IPv6      |\n  \
    \ | prefix       | bits   | length    | (binary)  | prefix            |\n   |\
    \              | length |           |           |                   |\n   +--------------+--------+-----------+-----------+-------------------+\n\
    \   | 192.8.0.0/15 | 19     | 1         | 0         | 2001:db8:0::/37   |\n  \
    \ | 192.4.0.0/16 | 18     | 2         | 10        | 2001:db8:800::/38 |\n   |\
    \ 192.2.0.0/16 | 18     | 2         | 11        | 2001:db8:c00::/38 |\n   +--------------+--------+-----------+-----------+-------------------+\n\
    \   Mapping rules are then the following:\n             {192.8.0.0/15, 19, 2001:0db8:0000::/37}\n\
    \             {192.4.0.0/16, 18, 2001:0db8:0800::/38}\n             {192.2.0.0/16,\
    \ 18, 2001:0db8:0c00::/38}\n             {0.0.0.0/0,    32, 2001:0db8:0000:0001:300::/80}\n\
    \   The CE whose IPv6 prefix is, for example, 2001:db8:0bbb:bb00::/56\n   derives\
    \ its IPv4 address and its port set as follows (Section 4.4):\n      CE IPv6 prefix\
    \     : 2001:0db8:0bbb:bb00::/56\n      Rule IPv6 prefix(i): 2001:0db8:0800::/38\
    \ (longest match)\n      EA-bits length(i)  : 18\n      EA bits            : 0b11\
    \ 1011 1011 1011 1011\n      Rule IPv4 prefix(i): 0b1100 0000 0000 0100 (192.4.0.0/16)\n\
    \      IPv4 address       : 0b1100 0000 0000 0100 1110 1110 1110 1110\n      \
    \                   : 192.4.238.238\n      PSID               : 0b11\n      Ports\
    \              : 0bYYYY 11XX XXXX XXXX\n                           with YYYY >\
    \ 0, and X...X any value\n   An IPv4 packet sent to address 192.4.238.238 and\
    \ port 7777 is\n   tunneled to the IPv6 address obtained as follows (Section 4.5):\n\
    \      IPv4 address       : 192.4.238.238 (0xc004 eeee)\n                    \
    \     : 0b1100 0000 0000 0100 1110 1110 1110 1110\n      Rule IPv4 prefix(i):\
    \ 192.4.0.0/16  (longest match)\n                         : 0b1100 0000 0000 0100\n\
    \      IPv4 suffix(i)     : 0b1110 1110 1110 1110\n      EA-bits length(i)  :\
    \ 18\n      PSID length(i)     : 2  (= 16 + 18 - 32)\n      Port field       \
    \  : 0b 0001 1110 0110 0001 (7777)\n      PSID               : 0b11\n      Rule\
    \ IPv6 prefix(i): 2001:0db8:0800::/38\n      CE IPv6 prefix     : 2001:0db8:0bbb:bb00::/56\n\
    \      IPv6 address       : 2001:0db8:0bbb:bb00:300:c004:eeee:YYYY\n         \
    \                  with YYYY = the computed CNP\n"
- title: C.2.  With Some CEs behind Third-Party Router CPEs
  contents:
  - "C.2.  With Some CEs behind Third-Party Router CPEs\n   We now consider an ISP\
    \ that has the same need as the ISP described in\n   the previous section, except\
    \ that (1) instead of using only its own\n   IPv6 infrastructure, it uses that\
    \ of a third-party provider and (2)\n   some of its customers use this provider's\
    \ Customer Premises Equipment\n   (CPEs) so that they can use specific services\
    \ offered by the\n   provider.  In these CPEs, a non-zero index is used to route\
    \ IPv6\n   packets to the physical port to which CEs are attached, say 0x2.\n\
    \   Each such CPE delegates to the CE nodes the customer-site IPv6 prefix\n  \
    \ followed by this index.\n   The ISP is supposed to have the same IPv4 prefixes\
    \ as those in the\n   previous use case -- 192.8.0.0/15, 192.4.0.0/16, and 192.2.0.0/16\
    \ --\n   and to use the same Common_IPv6_prefix, 2001:db8:0::/36.\n   We also\
    \ assume that only a minority of customers use third-party\n   CPEs, so that it\
    \ is sufficient to use only one of the two /16s for\n   them.\n   Mapping rules\
    \ are then (see Appendix C.1):\n             {192.8.0.0/15, 19, 2001:0db8:0000::/37}\n\
    \             {192.4.0.0/16, 18, 2001:0db8:0800::/38}\n             {192.2.0.0/16,\
    \ 18, 2001:0db8:0c00::/38}\n             {0.0.0.0/0,    32, 2001:0db8:0000:0001:300::/80}\n\
    \   CEs that are behind third-party CPEs derive their own IPv4 addresses\n   and\
    \ port sets as described in Appendix C.1.\n   In a BR, and also in a CE if the\
    \ topology is mesh, the IPv6 address\n   that is derived from IPv4 address 192.4.238.238\
    \ and port 7777 is\n   obtained as described in the previous section, except for\
    \ the last\n   two steps, which are modified as follows:\n      IPv4 address \
    \      : 192.4.238.238 (0xc004 eeee)\n                         : 0b1100 0000 0000\
    \ 0100 1110 1110 1110 1110\n      Rule IPv4 prefix(i): 192.4.0.0/16  (longest\
    \ match)\n                         : 0b1100 0000 0000 0100\n      IPv4 suffix(i)\
    \     : 0b1110 1110 1110 1110\n      EA-bits length(i)  : 18\n      PSID length(i)\
    \     : 2  (= 16 + 18 - 32)\n      Port field         : 0b 0001 1110 0110 0001\
    \ (7777)\n      PSID               : 0b11\n      Rule IPv6 prefix(i): 2001:0db8:0800::/38\n\
    \      CE IPv6 prefix     : 2001:0db8:0bbb:bb00::/60\n      IPv6 address     \
    \  : 2001:0db8:0bbb:bb00:300:192.4.238.238:YYYY\n                           with\
    \ YYYY = the computed CNP\n"
- title: Appendix D.  Replacing Dual-Stack Routing with IPv6-Only Routing
  contents:
  - "Appendix D.  Replacing Dual-Stack Routing with IPv6-Only Routing\n   In this\
    \ use case, we consider an ISP that offers IPv4 service with\n   public addresses\
    \ individually assigned to its customers.  It also\n   offers IPv6 service, as\
    \ it has deployed dual-stack routing.  Because\n   it provides its own CPEs to\
    \ customers, it can upgrade all of its CPEs\n   to support 4rd.  It wishes to\
    \ take advantage of this capability to\n   replace dual-stack routing with IPv6-only\
    \ routing, without changing\n   any IPv4 address or IPv6 prefix.\n   For this,\
    \ the ISP can use the single-rule model described at the\n   beginning of Appendix\
    \ B.  If the prefix routed to BRs is chosen to\n   start with 2001:db8:0:1::/64,\
    \ this rule is:\n      {0.0.0.0/0, 32, 2001:db8:0:1:300::/80}\n   All that is\
    \ needed in the network before disabling IPv4 routing is\n   the following:\n\
    \   o  In all routers, where there is an IPv4 route toward x.x.x.x/n, add\n  \
    \    a parallel route toward 2001:db8:0:1:300:x.x.x.x::/(80+n).\n   o  Where IPv4\
    \ address x.x.x.x was assigned to a CPE, now delegate\n      IPv6 prefix 2001:db8:0:1:300:x.x.x.x::/112.\n\
    \   NOTE: In parallel with this deployment, or after it, shared IPv4\n   addresses\
    \ can be assigned to IPv6 customers.  It is sufficient that\n   IPv4 prefixes\
    \ used for this be different from those used for\n   exclusive-address assignments.\
    \  Under this constraint, Mapping rules\n   can be set up according to the same\
    \ principles as those described in\n   Appendix C.\n"
- title: Appendix E.  Adding IPv6 and 4rd Service to a Net-10 Network
  contents:
  - "Appendix E.  Adding IPv6 and 4rd Service to a Net-10 Network\n   In this use\
    \ case, we consider an ISP that has only deployed IPv4,\n   possibly because some\
    \ of its network devices are not yet IPv6\n   capable.  Because it did not have\
    \ enough IPv4 addresses, it has\n   assigned private IPv4 addresses [RFC1918]\
    \ to customers, say 10.x.x.x.\n   It thus supports up to 2^24 customers (a \"\
    Net-10\" network, using the\n   NAT444 model [NAT444]).\n   Now, it wishes to\
    \ offer IPv6 service without further delay, using 6rd\n   [RFC5969].  It also\
    \ wishes to offer incoming IPv4 connectivity to its\n   customers with a simpler\
    \ solution than that provided by the Port\n   Control Protocol (PCP) [RFC6887].\n\
    \   This appendix describes an example that adds IPv6 (using 6rd) and 4rd\n  \
    \ services to the \"Net-10\" private IPv4 network.\n   The IPv6 prefix to be used\
    \ for 6rd is supposed to be 2001:db8::/32,\n   and the public IPv4 prefix to be\
    \ used for shared addresses is\n   supposed to be 198.16.0.0/16 (0xc610).  The\
    \ resulting sharing ratio\n   is 2^24 / 2^(32 - 16) = 256, giving a PSID length\
    \ of 8.\n   The ISP installs one or several BRs at its border to the public IPv4\n\
    \   Internet.  They support 6rd, and 4rd above it.  The BR prefix /64 is\n   supposed\
    \ to be that which is derived from IPv4 address 10.0.0.1\n   (i.e., 2001:db8:0:100:/64).\n\
    \   In accordance with [RFC5969], 6rd BRs are configured with the\n   following\
    \ parameters: IPv4MaskLen = 8; 6rdPrefix = 2001:db8::/32;\n   6rdBRIPv4Address\
    \ = 192.168.0.1 (0xc0a80001).\n   4rd Mapping rules are then the following:\n\
    \               {198.16.0.0/16, 24, 2001:db8:0:0:300::/80}\n               {0.0.0.0/0,\
    \     32, 2001:db8:0:100:300:/80,}\n   Any customer device that supports 4rd in\
    \ addition to 6rd can then use\n   its assigned shared IPv4 address with 240 assigned\
    \ ports.\n   If its NAT44 supports port forwarding to provide incoming IPv4\n\
    \   connectivity (statically, or dynamically with Universal Plug and Play\n  \
    \ (UPnP) and/or the NAT Port Mapping Protocol (NAT-PMP)), it can use it\n   with\
    \ ports of the assigned port set (a possibility that does not\n   exist in Net-10\
    \ networks without 4rd/6rd).\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This specification has benefited over several years from\
    \ independent\n   proposals, questions, comments, constructive suggestions, and\
    \ useful\n   criticisms from numerous IETF contributors.  The authors would like\n\
    \   to express recognition of all of these contributors, and especially\n   the\
    \ following, in alphabetical order by their first names: Behcet\n   Sarikaya,\
    \ Bing Liu, Brian Carpenter, Cameron Byrne, Congxiao Bao, Dan\n   Wing, Derek\
    \ Atkins, Erik Kline, Francis Dupont, Gabor Bajko, Hui\n   Deng, Jacni Quin (who\
    \ was an active coauthor of some earlier versions\n   of this specification),\
    \ James Huang, Jan Zorz, Jari Arkko, Kathleen\n   Moriarty, Laurent Toutain, Leaf\
    \ Yeh, Lorenzo Colitti, Marcello\n   Bagnulo, Mark Townsley, Mohamed Boucadair,\
    \ Nejc Skoberne, Olaf\n   Maennel, Ole Troan, Olivier Vautrin, Peng Wu, Qiong\
    \ Sun, Rajiv Asati,\n   Ralph Droms, Randy Bush, Satoru Matsushima, Simon Perreault,\
    \ Stuart\n   Cheshire, Suresh Krishnan, Ted Lemon, Teemu Savolainen, Tetsuya\n\
    \   Murakami, Tina Tsou, Tomek Mrugalski, Washam Fan, Wojciech Dec,\n   Xiaohong\
    \ Deng, Xing Li, and Yu Fu.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Remi Despres\n   RD-IPtech\n   3 rue du President Wilson\n\
    \   Levallois\n   France\n   Email: despres.remi@laposte.net\n   Sheng Jiang (editor)\n\
    \   Huawei Technologies Co., Ltd\n   Q14, Huawei Campus, No. 156 BeiQing Road\n\
    \   Hai-Dian District, Beijing  100095\n   China\n   Email: jiangsheng@huawei.com\n\
    \   Reinaldo Penno\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose,\
    \ CA  95134\n   United States\n   Email: repenno@cisco.com\n   Yiu Lee\n   Comcast\n\
    \   One Comcast Center\n   Philadelphia, PA  19103\n   United States\n   Email:\
    \ yiu_lee@cable.comcast.com\n   Gang Chen\n   China Mobile\n   29, Jinrong Avenue\n\
    \   Xicheng District, Beijing  100033\n   China\n   Email: phdgang@gmail.com,\
    \ chengang@chinamobile.com\n   Maoke Chen (a.k.a. Noriyuki Arai)\n   BBIX, Inc.\n\
    \   Tokyo Shiodome Building, Higashi-Shimbashi 1-9-1\n   Minato-ku, Tokyo  105-7310\n\
    \   Japan\n   Email: maoke@bbix.net\n"
