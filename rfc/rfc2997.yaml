- title: __initial_text__
  contents:
  - '                 Specification of the Null Service Type

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   In the typical Resource Reservation Protocol (RSVP)/Intserv model,\n\
    \   applications request a specific Intserv service type and quantify the\n  \
    \ resources required for that service.  For certain applications, the\n   determination\
    \ of service parameters is best left to the discretion of\n   the network administrator.\
    \  For example, ERP applications are often\n   mission critical and require some\
    \ form of prioritized service, but\n   cannot readily specify their resource requirements.\
    \  To serve such\n   applications, we introduce the notion of the 'Null Service'.\
    \  The\n   Null Service allows applications to identify themselves to network\n\
    \   Quality of Service (QoS) policy agents, using RSVP signaling.\n   However,\
    \ it does not require them to specify resource requirements.\n   QoS policy agents\
    \ in the network respond by applying QoS policies\n   appropriate for the application\
    \ (as determined by the network\n   administrator).  This mode of RSVP usage is\
    \ particularly applicable\n   to networks that combine differentiated service\
    \ (diffserv) QoS\n   mechanisms with RSVP signaling [intdiff].  In this environment,\
    \ QoS\n   policy agents may direct the signaled application's traffic to a\n \
    \  particular diffserv class of service.\n"
- title: 1. Motivation
  contents:
  - "1. Motivation\n   Using standard RSVP/Intserv signaling, applications running\
    \ on hosts\n   issue requests for network resources by communicating the following\n\
    \   information to network devices:\n   1. A requested service level (Guaranteed\
    \ or Controlled Load).\n   2. The quantity of resources required at that service\
    \ level.\n   3. Classification information by which the network can recognize\n\
    \      specific traffic (filterspec).\n   4. Policy/identity information indicating\
    \ the user and/or the\n      application for which resources are required.\n \
    \  In response, standard RSVP aware network nodes choose to admit or\n   deny\
    \ a resource request.  The decision is based on the availability\n   of resources\
    \ along the relevant path and on policies.  Policies\n   define the resources\
    \ that may be granted to specific users and/or\n   applications.  When a resource\
    \ request is admitted, network nodes\n   install classifiers that are used to\
    \ recognize the admitted traffic\n   and policers that are used to assure that\
    \ the traffic remains within\n   the limits of the resources requested.\n   The\
    \ Guaranteed and Controlled Load Intserv services are not suitable\n   for certain\
    \ applications that are unable to (or choose not to)specify\n   the resources\
    \ they require from the network.  Diffserv services are\n   better suited for\
    \ this type of application.  Nodes in a diffserv\n   network are typically provisioned\
    \ to classify arriving packets to\n   some small number of behavior aggregates\
    \ (BAs) [diffarch].  Traffic\n   is handled on a per-BA basis.  This provisioning\
    \ tends to be 'top-\n   down' with respect to end-user traffic flows in the sense\
    \ that there\n   is no signaling between hosts and the network.  Instead, the\
    \ network\n   administrator uses a combination of heuristics, measurement and\n\
    \   experience to provision the network devices to handle aggregated\n   traffic,\
    \ with no deterministic knowledge of the volume of traffic\n   that will arrive\
    \ at any specific node.\n   In applying diffserv mechanisms to manage application\
    \ traffic,\n   network administrators are faced with two challenges:\n   1. Provisioning\
    \ - network administrators need to anticipate the\n      volume of traffic likely\
    \ to arrive at each network node for each\n      diffserv BA.  If the volume of\
    \ traffic arriving is likely to\n      exceed the capacity available for the BA\
    \ claimed, the network\n      administrator has the choice of increasing the capacity\
    \ for the\n      BA, reducing the volume of traffic claiming the BA, or\n    \
    \  compromising service to all traffic arriving for the BA.\n   2. Classification\
    \ - diffserv nodes classify traffic to user and/or\n      application, based on\
    \ the diff-serv codepoint (DSCP) in each\n      packet's IP header or based on\
    \ other fields in the packet's IP\n      header (source/destination address/port\
    \ and protocol).  The latter\n      method of classification is referred to as\
    \ MF classification.\n      This method of classification may be unreliable and\
    \ imposes a\n      management burden.\n   By using RSVP signaling, the management\
    \ of application traffic in\n   diffserv networks can be significantly facilitated.\
    \  (Note that\n   RSVP/diffserv interoperability has been discussed previously\
    \ in the\n   context of the Guaranteed and Controlled Load Intserv services.)\n\
    \   This document focuses on RSVP/diffserv interoperability in the\n   context\
    \ of the Null Service.\n"
- title: 2. Operational Overview
  contents:
  - "2. Operational Overview\n   In the proposed mechanism, the RSVP sender offers\
    \ the new service\n   type, 'Null Service Type' in the ADSPEC that is included\
    \ with the\n   PATH message.  A new Tspec corresponding to the new service type\
    \ is\n   added to the SENDER_TSPEC.  In addition, the RSVP sender will\n   typically\
    \ include with the PATH message policy objects identifying\n   the user, application\
    \ and sub application ID [identity, application].\n   (Note that at this time,\
    \ the new Tspec is defined only to carry the\n   maximum packet size parameter\
    \ (M), for the purpose of avoiding\n   fragmentation.  No other parameters are\
    \ defined.)\n   Network nodes receiving these PATH messages interpret the service\n\
    \   type to indicate that the application is requesting no specific\n   service\
    \ type or quantifiable resources.  Instead, network nodes\n   manage the traffic\
    \ flow based on the requesting user, the requesting\n   application and the type\
    \ of application sub-flow.\n   This mechanism offers significant advantages over\
    \ a pure diffserv\n   network.  At the very least, it informs each network node\
    \ which would\n   be affected by the traffic flow (and which is interested in\n\
    \   intercepting the signaling) of:\n   1. The demand for resources in terms of\
    \ number of flows of a\n      particular type traversing the node.\n   2. The\
    \ binding between classification information and user,\n      application and\
    \ sub-application.\n   This information is particularly useful to policy enforcement\
    \ points\n   and policy decision points (PEPs and PDPs).  The network\n   administrator\
    \ can configure these elements of the policy management\n   system to apply appropriate\
    \ policy based on the identity of the user,\n   the application and the specific\
    \ sub application ID.\n   PEPs and PDPs may be configured to return an RSVP RESV\
    \ message to the\n   sender.  The returned RESV message may include a DCLASS object\n\
    \   [dclass].  The DCLASS object instructs the sender to mark packets on\n   the\
    \ corresponding flow with a specific DSCP (or set of DSCPs).  This\n   mechanism\
    \ allows PEP/PDPs to affect the volume of traffic arriving at\n   a node for any\
    \ given BA.  It enables the PEP/PDP to do so based on\n   sophisticated policies.\n"
- title: 2.1 Operational Notes
  contents:
  - '3.1 Operational Notes

    '
- title: 2.1.1 Scalability Issues
  contents:
  - "3.1.1 Scalability Issues\n   In any network in which per-flow signaling is used,\
    \ it is wise to\n   consider scalability concerns.  The Null Service encourages\
    \ signaling\n   for a broader set of applications than that which would otherwise\
    \ be\n   signaled for.  However, RSVP signaling does not, in general, generate\n\
    \   a significant amount of traffic relative to the actual data traffic\n   associated\
    \ with the session.  In addition, the Null Service does not\n   encourage every\
    \ application to signal.  It should be used by\n   applications that are considered\
    \ mission critical or needing QoS\n   management by network administrators.\n\
    \   Perhaps of more concern is the impact on processing resources at\n   network\
    \ nodes that process the signaling messages.  When considering\n   this issue,\
    \ it's important to point out that it is not necessary to\n   process the signaling\
    \ messages at each network node.  In fact, the\n   combination of RSVP signaling\
    \ with diff-serv networks may afford\n   significant benefits even when the RSVP\
    \ messages are processed only\n   at certain key nodes (such as boundaries between\
    \ network domains,\n   first-hop routers, PEPs or any subset of these).  Individual\
    \ nodes\n   should be enabled or disabled for RSVP processing at the discretion\n\
    \   of the network administrator.  See [intdiff] for a discussion of the\n   impact\
    \ of RSVP signaling on diff-serv networks.\n   In any case, per-flow state is\
    \ not necessarily required, even in\n   nodes that apply per-flow processing.\n"
- title: 2.1.2 Policy Enforcement in Legacy Networks
  contents:
  - "2.1.2 Policy Enforcement in Legacy Networks\n   Network nodes that adhere to\
    \ the RSVP spec should transparently pass\n   signaling messages  for the Null\
    \ Service.  As such, it is possible to\n   introduce a small number of PEPs that\
    \ are enabled for Null Service\n   into a legacy network and to realize the benefits\
    \ described in this\n   document.\n"
- title: 2.1.3 Combining Existing Intserv Services with the Null Service
  contents:
  - "2.1.3 Combining Existing Intserv Services with the Null Service\n   This document\
    \ does not preclude applications from offering both a\n   quantitative Intserv\
    \ service (Guaranteed or Controlled Load)and the\n   Null Service, at the same\
    \ time.  An example of such an application\n   would be a telephony application\
    \ that benefits from the Guaranteed\n   Service but is able to adapt to a less\
    \ strict service.  By\n   advertising its support for both, the application enables\
    \ network\n   policy to decide which service type to provide.\n"
- title: 3. Signaling Details
  contents:
  - '3. Signaling Details

    '
- title: 3.1 ADSPEC Generation
  contents:
  - "3.1 ADSPEC Generation\n   The RSVP sender constructs an initial RSVP ADSPEC object\
    \ specifying\n   the Null Service Type.  Since there are no service specific\n\
    \   parameters associated with this service type, the associated ADSPEC\n   fragment\
    \ is empty and contains only the header word.  Network nodes\n   may or may not\
    \ supply valid values for bandwidth and latency general\n   parameters.  As such,\
    \ they may use the unknown values defined in\n   [RFC2216].\n   The ADSPEC is\
    \ added to the RSVP PATH message created at the sender.\n"
- title: 3.2 RSVP SENDER_TSPEC Object
  contents:
  - "3.2 RSVP SENDER_TSPEC Object\n   An additional Tspec is defined to correspond\
    \ to the Null Service.  If\n   only the Null Service is offered in the ADSPEC,\
    \ then this is the only\n   Tspec included in the SENDER_TSPEC object.  If guaranteed\
    \ or\n   controlled load services are also offered in the ADSPEC, then the new\n\
    \   Tspec is appended following the standard Intserv token-bucket Tspec\n   [RFC2210].\n"
- title: 3.3 RSVP FLOWSPEC Object
  contents:
  - "3.3 RSVP FLOWSPEC Object\n   Receivers may respond to PATH messages by generating\
    \ an RSVP RESV\n   message including a FLOWSPEC object.  The FLOWSPEC object should\n\
    \   specify that it is requesting the Null Service.  It is possible that,\n  \
    \ in the future, a specific Rspec may be defined to correspond to the\n   new\
    \ service type.\n"
- title: 4. Detailed Message Formats
  contents:
  - '4. Detailed Message Formats

    '
- title: 4.1 Standard ADSPEC Format
  contents:
  - "4.1 Standard ADSPEC Format\n   A standard RSVP ADSPEC object is described in\
    \ [RFC2210].  It includes\n   a message header and a default general parameters\
    \ fragment.\n   Following the default general parameters fragment are fragments\
    \ for\n   each supported service type.\n"
- title: 4.2 ADSPEC for Null Service Type
  contents:
  - "4.2 ADSPEC for Null Service Type\n   The Null Service ADSPEC includes the message\
    \ header and the default\n   general parameters fragment, followed by a single\
    \ fragment denoting\n   the Null Service.  The new fragment introduced for the\
    \ Null Service\n   is formatted as follows:\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    6 (a)      |x| Reserved    |           0 (b)               |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   a - indicates\
    \ Null Service (6).\n   x - is the break-bit.\n   b - indicates zero words in\
    \ addition to the header.\n   A complete ADSPEC supporting only the Null Service\
    \ is illustrated\n   below:\n      31            24 23           16 15       \
    \     8 7\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    1 | 0 (a) |    Reserved           |  Msg length -1 (b)            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    2 |\
    \ 1 (c)         |x| Reserved    |           8 (d)               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    3 |    4 (e)        |    (f)      |           1 (g)               |\n   \
    \ + +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    4 |\
    \                    IS hop cnt (32-bit unsigned)               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    5 |    6 (h)        |    (i)      |           1 (j)               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    6 |\
    \   Path b/w estimate  (32-bit IEEE floating point number)      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    7 |    8 (k)        |    (l)      |           1 (m)               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    8 |\
    \        Minimum path latency (32-bit integer)                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    9 |   10 (n)        |    (o)      |           1 (p)               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   10 |\
    \        Composed MTU (32-bit unsigned)                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   11 |    6 (q)      |x| Reserved    |           0 (r)               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    Word\
    \ 1: Message Header:\n    (a) - Message header and version number\n    (b) - Message\
    \ length (10 words not including header)\n    Words 2-10: Default general characterization\
    \ parameters\n    (c) - Per-Service header, service number 1  (Default General\n\
    \          Parameters)\n    (x) - Global Break bit (NON_IS_HOP general parameter\
    \ 2)\n    (d) - Length of General Parameters data block (8 words)\n    (e) - Parameter\
    \ ID, parameter 4 (NUMBER_OF_IS_HOPS general\n          parameter)\n    (f) -\
    \ Parameter 4 flag byte\n    (g) - Parameter 4 length, 1 word not including header\n\
    \    (h) - Parameter ID, parameter 6 (AVAILABLE_PATH_BANDWIDTH general\n     \
    \     parameter)\n    (i) - Parameter 6 flag byte\n    (j) - Parameter 6 length,\
    \ 1 word not including header\n    (k) - Parameter ID, parameter 8 (MINIMUM_PATH_LATENCY\
    \ general\n          parameter)\n    (l) - Parameter 8 flag byte\n    (m) - Parameter\
    \ 8 length, 1 word not including header\n    (n) - Parameter ID, parameter 10\
    \ (PATH_MTU general parameter)\n    (o) - Parameter 10 flag byte\n    (p) - Parameter\
    \ 10 length, 1 word not including header\n    Word 11: Null Service parameters\n\
    \    (q) - Per-Service header, service number 6 (Null)\n    (x) - Break bit for\
    \ Null Service\n    (r) - Length (0) of per-service data not including header\
    \ word.\n   Note that the standard rules for parsing ADSPEC service fragments\n\
    \   ensure that the ADSPEC will not be rejected by legacy network\n   elements.\
    \  Specifically, these rules state that a network element\n   encountering a per-service\
    \ data header which it does not understand\n   should set bit 23 (the break-bit)\
    \ to indicate that the service is not\n   supported and should use the length\
    \ field from the header to skip\n   over the rest of the fragment.\n   Also note\
    \ that it is likely that it will not be possible for hosts or\n   network nodes\
    \ to generate meaningful values for words 5 and/or 7\n   (bandwidth estimates\
    \ and path latency), due to the nature of the\n   service.  In this case, the\
    \ unknown values from [RFC2216] should be\n   used.\n"
- title: 4.3 SENDER_TSPEC Object Format
  contents:
  - "4.3 SENDER_TSPEC Object Format\n   The following Tspec is defined to correspond\
    \ to the Null Service:\n     31            24 23           16 15            8\
    \ 7\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   1 |   6 (a)       |0|  Reserved   |             2 (b)             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   2 | 128\
    \ (c)       |    0 (d)      |             1 (e)             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   3 | Maximum Packet Size [M] (32-bit integer)                      |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    Word\
    \ 1: Service header\n    (a) - Service number 6 (Null Service)\n    (b) - Length\
    \ of per-service data, 2 words not including per-service\n          header\n \
    \   Word 2-3: Parameter\n    (c) - Parameter ID, parameter 128 (Null Service TSpec)\n\
    \    (d) - Parameter 128 flags (none set)\n    (e) - Parameter 128 length, 1 words\
    \ not including parameter header\n   Note that the illustration above does not\
    \ include the standard RSVP\n   SENDER_TSPEC object header, nor does it include\
    \ the sub-object header\n   (which indicates the message format version number\
    \ and length),\n   defined in RFC 2205 and RFC 2210, respectively.\n   In the\
    \ case that only the Null Service is advertised in the ADSPEC,\n   the Tspec above\
    \ would be appended immediately after the SENDER_TSPEC\n   object header and sub-object\
    \ header.  In the case that additional\n   service types are advertised, requiring\
    \ the token bucket specific\n   Tspec defined in RFC2210, the Tspec above would\
    \ be appended following\n   the token bucket Tspec, which would in turn follow\
    \ the object header\n   and sub-object header.\n"
- title: 4.4 FLOWSPEC Object Format
  contents:
  - "4.4 FLOWSPEC Object Format\n   The format of an RSVP FLOWSPEC object originating\
    \ at a receiver\n   requesting the Null Service is shown below.  The value of\
    \ 6 in the\n   per-service header (field (c), below) indicates that Null Service\
    \ is\n   being requested.\n     31            24 23           16 15          \
    \  8 7\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   1 | 0 (a)         |    reserved   |         3 (b)                 |\n   +\
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   2 |  \
    \ 6 (c)       |0|  Reserved   |             2 (d)             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   3 | 128 (e)       |    0 (f)      |             1 (g)             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   4 | Maximum\
    \ Packet Size [M] (32-bit integer)                      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    (a) - Message format version number (0)\n    (b) - Overall length (3 words\
    \ not including header)\n    (c) - Service header, service number 6 (Null)\n \
    \   (d) - Length of data, 2 words not including per-service header\n    (e) -\
    \ Parameter ID, parameter 128 (Null Service TSpec)\n    (f) - Parameter 128 flags\
    \ (none set)\n    (g) - Parameter 128 length, 1 words not including parameter\
    \ header\n"
- title: 4.5 DCLASS Object Format
  contents:
  - "4.5 DCLASS Object Format\n   DCLASS objects may be included in RESV messages.\
    \  For details\n   regarding the DCLASS object format, see [dclass].\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   The message formatting and usage rules described\
    \ in this note raise\n   no new security issues beyond standard RSVP.\n"
- title: 6. References
  contents:
  - "6. References\n   [RFC2205]     Braden, R., Zhang, L., Berson, S., Herzog, S.\
    \ and S.\n                 Jamin, \"Resource Reservation Protocol (RSVP) - Version\n\
    \                 1 Functional Specification\", RFC 2205, September 1997.\n  \
    \ [RFC2216]     Shenker, S. and J. Wroclawski, \"Network Element QoS\n       \
    \          Control Service Specification Template\", RFC 2216,\n             \
    \    September 1997.\n   [RFC2210]     Wroclawski, J., \"The Use of RSVP with\
    \ IETF Integrated\n                 Services\", RFC 2210, September 1997.\n  \
    \ [intdiff]     Bernet, Y., Yavatkar, R., Ford, P., Baker, F., Zhang,\n      \
    \           L., Nichols, K., Speer, M., Braden, B. and B. Davie, \"A\n       \
    \          Framework for Integrated Services Operation over\n                \
    \ Diffserv Networks\", RFC 2998, November 2000.\n   [diffarch]    Blake, S., Black,\
    \ D., Carlson, M., Davies, E., Wang, Z.\n                 and W. Weiss, \"An Architecture\
    \ for Differentiated\n                 Services\", RFC 2475, December 1998.\n\
    \   [identity]    Yadav, S., Yavatkar, R., Pabbati, R., Ford, P., Moore,\n   \
    \              T., Herzog, S., \"Identity Representation for RSVP\", RFC\n   \
    \              2752, January 2000.\n   [application] Bernet, Y., \"Application\
    \ and Sub Application Identity\n                 Policy Objects for Use with RSVP\"\
    , RFC 2872, June 2000.\n   [dclass]      Bernet, Y., \"Format of the RSVP DCLASS\
    \ Object\", RFC\n                 2996, November 2000.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   We thank Fred Baker, Dinesh Dutt, Nitsan Elfassy, John\
    \ Schnizlein,\n   Ramesh Pabbati and Sanjay Kaniyar for their comments on this\
    \ memo.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Yoram Bernet\n   Microsoft\n   One Microsoft Way\n\
    \   Redmond, WA 98052\n   Phone: +1 (425) 936-9568\n   EMail: Yoramb@microsoft.com\n\
    \   Andrew Smith\n   Allegro Networks\n   6399 San Ignacio Ave.\n   San Jose,\
    \ CA 95119, USA\n   FAX: +1 415 345 1827\n   Email: andrew@allegronetworks.com\n\
    \   Bruce Davie\n   Cisco Systems\n   250 Apollo Drive\n   Chelmsford, MA 01824\n\
    \   Phone: +1 (978)-244-8000\n   EMail: bsd@cisco.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
