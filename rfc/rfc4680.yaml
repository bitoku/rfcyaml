- title: __initial_text__
  contents:
  - '              TLS Handshake Message for Supplemental Data

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification defines a TLS handshake message for exchange\
    \ of\n   supplemental application data.  TLS hello message extensions are used\n\
    \   to determine which supplemental data types are supported by both the\n   TLS\
    \ client and the TLS server.  Then, the supplemental data handshake\n   message\
    \ is used to exchange the data.  Other documents will define\n   the syntax of\
    \ these extensions and the syntax of the associated\n   supplemental data types.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Recent standards activities have proposed different mechanisms\
    \ for\n   transmitting supplemental application data in the TLS handshake\n  \
    \ message.  For example, recent proposals transfer data that is not\n   processed\
    \ by the TLS protocol itself, but assist the TLS-protected\n   application in\
    \ the authentication and authorization decisions.  One\n   proposal transfers\
    \ user name hints for locating credentials, and\n   another proposal transfers\
    \ attribute certificates and Security\n   Assertions Markup Language (SAML) assertions\
    \ for authorization\n   checks.\n   In order to avoid definition of multiple handshake\
    \ messages, one for\n   each new type of application-specific supplemental data,\
    \ this\n   specification defines a new handshake message type that bundles\n \
    \  together all data objects that are to be delivered to the TLS-\n   protected\
    \ application and sends them in a single handshake message.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [N1].\n   The syntax for the supplemental_data handshake message is\
    \ defined\n   using the TLS Presentation Language, which is specified in Section\
    \ 4\n   of [N2].\n"
- title: 2.  Supplemental Data Handshake Message
  contents:
  - "2.  Supplemental Data Handshake Message\n   The new supplemental_data handshake\
    \ message type is defined to\n   accommodate communication of supplemental data\
    \ objects as agreed\n   during the exchange of extensions in the client and server\
    \ hello\n   messages.  See RFC 2246 (TLS 1.0) [N2] and RFC 4346 (TLS 1.1) [N3]\n\
    \   for other handshake message types.\n   Information provided in a supplemental\
    \ data object MUST be intended\n   to be used exclusively by applications and\
    \ protocols above the TLS\n   protocol layer.  Any such data MUST NOT need to\
    \ be processed by the\n   TLS protocol.\n      enum {\n             supplemental_data(23),\
    \ (255)\n         } HandshakeType;\n      struct {\n             HandshakeType\
    \ msg_type;    /* handshake type */\n             uint24 length;             /*\
    \ octets in message */\n             select (HandshakeType) {\n              \
    \      case supplemental_data:   SupplementalData;\n               } body;\n \
    \         } Handshake;\n      struct {\n            SupplementalDataEntry supp_data<1..2^24-1>;\n\
    \         } SupplementalData;\n      struct {\n            SupplementalDataType\
    \ supp_data_type;\n            uint16 supp_data_length;\n            select(SupplementalDataType)\
    \ { }\n         } SupplementalDataEntry;\n      enum {\n            (65535)\n\
    \        } SupplementalDataType;\n   supp_data_length\n      This field is the\
    \ length (in bytes) of the data selected by\n      SupplementalDataType.\n   The\
    \ client MUST NOT send more than one SupplementalData handshake\n   message, and\
    \ the server MUST NOT send more than one SupplementalData\n   handshake message.\
    \  Receiving more than one SupplementalData\n   handshake message results in a\
    \ fatal error, and the receiver MUST\n   close the connection with a fatal unexpected_message\
    \ alert.\n   If present, the SupplementalData handshake message MUST contain a\n\
    \   non-empty SupplementalDataEntry structure carrying data associated\n   with\
    \ at least one defined SupplementalDataType.  An explicit\n   agreement that governs\
    \ presence of any supplemental data MUST be\n   concluded between client and server\
    \ for each SupplementalDataType\n   using the TLS extensions [N4] in the client\
    \ and server hello\n   messages.  Receiving an unexpected SupplementalData handshake\
    \ message\n   results in a fatal error, and the receiver MUST close the connection\n\
    \   with a fatal unexpected_message alert.\n   Other documents will define specific\
    \ SupplementalDataTypes and their\n   associated data syntax and processing. \
    \ These same specifications\n   must also specify the client and server hello\
    \ message extensions that\n   are used to negotiate the support for the specified\
    \ supplemental data\n   type.  This document simply specifies the TLS Handshake\
    \ Protocol\n   message that will carry the supplemental data objects.\n   Different\
    \ situations require the transfer of supplemental data from\n   the client to\
    \ the server, require the transfer of supplemental data\n   from the server to\
    \ the client, or both ways.  All three situations\n   are fully supported.\n"
- title: 3.  Message Flow
  contents:
  - "3.  Message Flow\n   The SupplementalData handshake message, if exchanged, MUST\
    \ be sent as\n   the first handshake message as illustrated in Figure 1 below.\n\
    \     Client                                               Server\n     ClientHello\
    \ (with extensions) -------->\n                                    ServerHello(with\
    \ extensions)\n                                               SupplementalData*\n\
    \                                                    Certificate*\n          \
    \                                    ServerKeyExchange*\n                    \
    \                         CertificateRequest*\n                              \
    \    <--------      ServerHelloDone\n     SupplementalData*\n     Certificate*\n\
    \     ClientKeyExchange\n     CertificateVerify*\n     [ChangeCipherSpec]\n  \
    \   Finished                     -------->\n                                 \
    \             [ChangeCipherSpec]\n                                  <--------\
    \             Finished\n     Application Data             <------->     Application\
    \ Data\n       *  Indicates optional or situation-dependent messages.\n      \
    \         Figure 1.  Message Flow with SupplementalData\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Each SupplementalDataType included in the handshake\
    \ message defined\n   in this specification introduces its own unique set of security\n\
    \   properties and related considerations.  Security considerations must\n   therefore\
    \ be defined in each document that defines a supplemental\n   data type.\n   In\
    \ some cases, the SupplementalData information may be sensitive.\n   The double\
    \ handshake technique can be used to provide protection for\n   the SupplementalData\
    \ information.  Figure 2 illustrates the double\n   handshake, where the initial\
    \ handshake does not include any\n   extensions, but it does result in protected\
    \ communications.  Then, a\n   second handshake that includes the SupplementalData\
    \ information is\n   performed using the protected communications.  In Figure\
    \ 2, the\n   number on the right side indicates the amount of protection for the\n\
    \   TLS message on that line.  A zero (0) indicates that there is no\n   communication\
    \ protection; a one (1) indicates that protection is\n   provided by the first\
    \ TLS session; and a two (2) indicates that\n   protection is provided by both\
    \ TLS sessions.\n   The placement of the SupplementalData message in the TLS Handshake\n\
    \   results in the server providing its SupplementalData information\n   before\
    \ the client is authenticated.  In many situations, servers will\n   not want\
    \ to provide authorization information until the client is\n   authenticated.\
    \  The double handshake illustrated in Figure 2 provides\n   a technique to ensure\
    \ that the parties are mutually authenticated\n   before either party provides\
    \ SupplementalData information.\n   Client                                   \
    \                Server\n   ClientHello (no extensions) -------->            \
    \                |0\n                                       ServerHello (no extensions)\
    \  |0\n                                                      Certificate*  |0\n\
    \                                                ServerKeyExchange*  |0\n    \
    \                                           CertificateRequest*  |0\n        \
    \                       <--------           ServerHelloDone  |0\n   Certificate*\
    \                                                     |0\n   ClientKeyExchange\
    \                                                |0\n   CertificateVerify*   \
    \                                            |0\n   [ChangeCipherSpec]       \
    \                                        |0\n   Finished                    -------->\
    \                            |1\n                                            \
    \    [ChangeCipherSpec]  |0\n                               <--------        \
    \          Finished  |1\n   ClientHello (w/ extensions) -------->            \
    \                |1\n                                       ServerHello (w/ extensions)\
    \  |1\n                                                 SupplementalData*  |1\n\
    \                                                      Certificate*  |1\n    \
    \                                            ServerKeyExchange*  |1\n        \
    \                                       CertificateRequest*  |1\n            \
    \                   <--------           ServerHelloDone  |1\n   SupplementalData*\
    \                                                |1\n   Certificate*         \
    \                                            |1\n   ClientKeyExchange        \
    \                                        |1\n   CertificateVerify*           \
    \                                    |1\n   [ChangeCipherSpec]               \
    \                                |1\n   Finished                    -------->\
    \                            |2\n                                            \
    \    [ChangeCipherSpec]  |1\n                               <--------        \
    \          Finished  |2\n   Application Data            <------->          Application\
    \ Data  |2\n   *  Indicates optional or situation-dependent messages.\n      \
    \   Figure 2.  Double Handshake to Protect Supplemental Data\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has taken the following actions:\n   1) Created\
    \ an entry, supplemental_data(23), in the existing registry\n      for HandshakeType\
    \ (defined in RFC 2246 [N2]).\n   2) Established a registry for TLS Supplemental\
    \ Data Formats\n      (SupplementalDataType).  Values in the inclusive range 0-16385\n\
    \      (decimal) are assigned via RFC 2434 [N5] Standards Action.  Values\n  \
    \    from the inclusive range 16386-65279 (decimal) are assigned via\n      RFC\
    \ 2434 IETF Consensus.  Values from the inclusive range\n      65280-65535 (decimal)\
    \ are reserved for RFC 2434 Private Use.\n"
- title: 6.  Normative References
  contents:
  - "6.  Normative References\n   [N1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n          Requirement Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [N2]   Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\", RFC\n  \
    \        2246, January 1999.\n   [N3]   Dierks, T. and E. Rescorla, \"The Transport\
    \ Layer Security\n          (TLS) Protocol Version 1.1\", RFC 4346, April 2006.\n\
    \   [N4]   Blake-Wilson, S., Nystrom, M., Hopwood, D., Mikkelsen, J., and\n  \
    \        T. Wright, \"Transport Layer Security (TLS) Extensions\", RFC\n     \
    \     4366, April 2006.\n   [N5]   Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an IANA\n          Considerations Section in RFCs\", BCP 26, RFC\
    \ 2434, October\n          1998.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The fundamental architectural idea for the supplemental\
    \ data\n   handshake message was provided by Russ Housley and Eric Rescorla.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Stefan Santesson\n   Microsoft\n   Finlandsgatan 30\n  \
    \ 164 93 KISTA\n   Sweden\n   EMail: stefans@microsoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
