- title: __initial_text__
  contents:
  - '         Mapping of Address and Port with Encapsulation (MAP-E)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a mechanism for transporting IPv4 packets\n\
    \   across an IPv6 network using IP encapsulation.  It also describes a\n   generic\
    \ mechanism for mapping between IPv6 addresses and IPv4\n   addresses as well\
    \ as transport-layer ports.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7597.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Conventions .....................................................5\n  \
    \ 3. Terminology .....................................................5\n   4.\
    \ Architecture ....................................................7\n   5. Mapping\
    \ Algorithm ...............................................8\n      5.1. Port-Mapping\
    \ Algorithm ....................................10\n      5.2. Basic Mapping Rule\
    \ (BMR) ..................................11\n      5.3. Forwarding Mapping Rule\
    \ (FMR) .............................14\n      5.4. Destinations outside the MAP\
    \ Domain .......................14\n   6. The IPv6 Interface Identifier ..................................15\n\
    \   7. MAP Configuration ..............................................15\n  \
    \    7.1. MAP CE ....................................................15\n    \
    \  7.2. MAP BR ....................................................16\n   8. Forwarding\
    \ Considerations ......................................17\n      8.1. Receiving\
    \ Rules ...........................................17\n      8.2. ICMP ......................................................18\n\
    \      8.3. Fragmentation and Path MTU Discovery ......................18\n  \
    \         8.3.1. Fragmentation in the MAP Domain ....................18\n    \
    \       8.3.2. Receiving IPv4 Fragments on the MAP Domain\n                  Borders\
    \ ............................................19\n           8.3.3. Sending IPv4\
    \ Fragments to the Outside ..............19\n   9. NAT44 Considerations ...........................................19\n\
    \   10. Security Considerations .......................................20\n  \
    \ 11. References ....................................................21\n    \
    \  11.1. Normative References .....................................21\n      11.2.\
    \ Informative References ...................................21\n   Appendix A.\
    \ Examples ..............................................25\n   Appendix B. A\
    \ More Detailed Description of the Derivation of the\n               Port-Mapping\
    \ Algorithm ................................29\n     B.1. Bit Representation of\
    \ the Algorithm ........................31\n     B.2. GMA Examples ...............................................32\n\
    \   Acknowledgements ..................................................32\n  \
    \ Contributors ......................................................33\n   Authors'\
    \ Addresses ................................................34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Mapping of IPv4 addresses in IPv6 addresses has been described\
    \ in\n   numerous mechanisms dating back to the mid-1990s [RFC1933] [RFC4213].\n\
    \   The \"automatic tunneling\" mechanism as first described in [RFC1933]\n  \
    \ assigned a globally unique IPv6 address to a host by combining the\n   host's\
    \ IPv4 address with a well-known IPv6 prefix.  Given an IPv6\n   packet with a\
    \ destination address with an embedded IPv4 address, a\n   node could automatically\
    \ tunnel this packet by extracting the IPv4\n   tunnel endpoint address from the\
    \ IPv6 destination address.\n   There are numerous variations of this idea, as\
    \ described in 6over4\n   [RFC2529], 6to4 [RFC3056], the Intra-Site Automatic\
    \ Tunnel Addressing\n   Protocol (ISATAP) [RFC5214], and IPv6 Rapid Deployment\
    \ on IPv4\n   Infrastructures (6rd) [RFC5969].\n   The commonalities of all of\
    \ these IPv6-over-IPv4 mechanisms are as\n   follows:\n   o  Automatic provisioning\
    \ of an IPv6 address for a host or an IPv6\n      prefix for a site.\n   o  Algorithmic\
    \ or implicit address resolution of tunnel endpoint\n      addresses.  Given an\
    \ IPv6 destination address, an IPv4 tunnel\n      endpoint address can be calculated.\n\
    \   o  Embedding of an IPv4 address or part thereof into an IPv6 address.\n  \
    \ In later phases of IPv4-to-IPv6 migration, it is expected that\n   IPv6-only\
    \ networks will be common, while there will still be a need\n   for residual IPv4\
    \ deployment.  This document describes a generic\n   mapping of IPv4 to IPv6 and\
    \ a mechanism for encapsulating IPv4\n   over IPv6.\n   Just as for the IPv6-over-IPv4\
    \ mechanisms referred to above, the\n   residual IPv4-over-IPv6 mechanism must\
    \ be capable of:\n   o  Provisioning an IPv4 prefix, an IPv4 address, or a shared\
    \ IPv4\n      address.\n   o  Algorithmically mapping between an IPv4 prefix,\
    \ an IPv4 address,\n      or a shared IPv4 address and an IPv6 address.\n   The\
    \ mapping scheme described here supports encapsulation of IPv4\n   packets in\
    \ IPv6 in both mesh and hub-and-spoke topologies, including\n   address mappings\
    \ with full independence between IPv6 and IPv4\n   addresses.\n   This document\
    \ describes the delivery of IPv4 unicast service across\n   an IPv6 infrastructure.\
    \  IPv4 multicast is not considered in this\n   document.\n   The Address plus\
    \ Port (A+P) architecture of sharing an IPv4 address\n   by distributing the port\
    \ space is described in [RFC6346].\n   Specifically, Section 4 of [RFC6346] covers\
    \ stateless mapping.  The\n   corresponding stateful solution, Dual-Stack Lite\
    \ (DS-Lite), is\n   described in [RFC6333].  The motivations for this work are\
    \ described\n   in [Solutions-4v6].\n   [RFC7598] defines DHCPv6 options for the\
    \ provisioning of MAP.  Other\n   means of provisioning are possible.  Deployment\
    \ considerations are\n   described in [MAP-Deploy].\n   MAP relies on IPv6 and\
    \ is designed to deliver dual-stack service\n   while allowing IPv4 to be phased\
    \ out within the service provider's\n   (SP's) network.  The phasing out of IPv4\
    \ within the SP network is\n   independent of whether the end user disables IPv4\
    \ service or not.\n   Further, \"greenfield\" IPv6-only networks may use MAP in\
    \ order to\n   deliver IPv4 to sites via the IPv6 network.\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   MAP domain:             One or more MAP Customer Edge (CE)\
    \ devices\n                           and Border Relays (BRs) connected to the\
    \ same\n                           virtual link.  A service provider may deploy\n\
    \                           a single MAP domain or may utilize multiple\n    \
    \                       MAP domains.\n   MAP Rule:               A set of parameters\
    \ describing the mapping\n                           between an IPv4 prefix, IPv4\
    \ address, or\n                           shared IPv4 address and an IPv6 prefix\
    \ or\n                           address.  Each domain uses a different\n    \
    \                       mapping rule set.\n   MAP node:               A device\
    \ that implements MAP.\n   MAP Border Relay (BR):  A MAP-enabled router managed\
    \ by the service\n                           provider at the edge of a MAP domain.\
    \  A BR\n                           has at least an IPv6-enabled interface and\
    \ an\n                           IPv4 interface connected to the native IPv4\n\
    \                           network.  A MAP BR may also be referred to as\n  \
    \                         simply a \"BR\" within the context of MAP.\n   MAP Customer\
    \ Edge (CE): A device functioning as a Customer Edge\n                       \
    \    router in a MAP deployment.  A typical MAP CE\n                         \
    \  adopting MAP Rules will serve a residential\n                           site\
    \ with one WAN-side interface and one or\n                           more LAN-side\
    \ interfaces.  A MAP CE may also\n                           be referred to as\
    \ simply a \"CE\" within the\n                           context of MAP.\n   Port\
    \ set:               Each node has a separate part of the\n                  \
    \         transport-layer port space; this is denoted\n                      \
    \     as a port set.\n   Port Set ID (PSID):     Algorithmically identifies a\
    \ set of ports\n                           exclusively assigned to a CE.\n   Shared\
    \ IPv4 address:    An IPv4 address that is shared among multiple\n           \
    \                CEs.  Only ports that belong to the assigned\n              \
    \             port set can be used for communication.  Also\n                \
    \           known as a port-restricted IPv4 address.\n   End-user IPv6 prefix:\
    \   The IPv6 prefix assigned to an End-user CE by\n                          \
    \ means other than MAP itself, e.g.,\n                           provisioned using\
    \ DHCPv6 Prefix Delegation\n                           (PD) [RFC3633], assigned\
    \ via Stateless\n                           Address Autoconfiguration (SLAAC)\
    \ [RFC4862],\n                           or configured manually.  It is unique\
    \ for\n                           each CE.\n   MAP IPv6 address:       The IPv6\
    \ address used to reach the MAP\n                           function of a CE from\
    \ other CEs and from BRs.\n   Rule IPv6 prefix:       An IPv6 prefix assigned\
    \ by a service provider\n                           for a mapping rule.\n   Rule\
    \ IPv4 prefix:       An IPv4 prefix assigned by a service provider\n         \
    \                  for a mapping rule.\n   Embedded Address (EA) bits:\n     \
    \                      The IPv4 EA-bits in the IPv6 address identify\n       \
    \                    an IPv4 prefix/address (or part thereof) or a\n         \
    \                  shared IPv4 address (or part thereof) and a\n             \
    \              Port Set Identifier.\n"
- title: 4.  Architecture
  contents:
  - "4.  Architecture\n   In accordance with the requirements stated above, the MAP\
    \ mechanism\n   can operate with shared IPv4 addresses, full IPv4 addresses, or\
    \ IPv4\n   prefixes.  Operation with shared IPv4 addresses is described here,\n\
    \   and the differences for full IPv4 addresses and prefixes are\n   described\
    \ below.\n   The MAP mechanism uses existing standard building blocks.  The\n\
    \   existing Network Address and Port Translator (NAPT) [RFC2663] on the\n   CE\
    \ is used with additional support for restricting transport-protocol\n   ports,\
    \ ICMP identifiers, and fragment identifiers to the configured\n   port set. \
    \ For packets outbound from the private IPv4 network, the CE\n   NAPT MUST translate\
    \ transport identifiers (e.g., TCP and UDP port\n   numbers) so that they fall\
    \ within the CE's assigned port range.\n   The NAPT MUST in turn be connected\
    \ to a MAP-aware forwarding function\n   that does encapsulation/decapsulation\
    \ of IPv4 packets in IPv6.  MAP\n   supports the encapsulation mode specified\
    \ in [RFC2473].  In addition,\n   MAP specifies an algorithm to do \"address resolution\"\
    \ from an IPv4\n   address and port to an IPv6 address.  This algorithmic mapping\
    \ is\n   specified in Section 5.\n   The MAP architecture described here restricts\
    \ the use of the shared\n   IPv4 address to only be used as the global address\
    \ (outside) of the\n   NAPT running on the CE.  A shared IPv4 address MUST NOT\
    \ be used to\n   identify an interface.  While it is theoretically possible to\
    \ make\n   host stacks and applications port-aware, it would be a drastic change\n\
    \   to the IP model [RFC6250].\n   For full IPv4 addresses and IPv4 prefixes,\
    \ the architecture just\n   described applies, with two differences: first, a\
    \ full IPv4 address\n   or IPv4 prefix can be used as it is today, e.g., for identifying\
    \ an\n   interface or as a DHCP pool, respectively.  Second, the NAPT is not\n\
    \   required to restrict the ports used on outgoing packets.\n   This architecture\
    \ is illustrated in Figure 1.\n         User N\n       Private IPv4\n      | \
    \ Network\n      |\n   O--+---------------O\n   |  |  MAP CE       |\n   | +-----+--------+\
    \ |\n   | NAPT44|  MAP   | |\n   | +-----+        | |\\     ,-------.        \
    \              .------.\n   |       +--------+ | \\ ,-'         `-.          \
    \       ,-'       `-.\n   O------------------O  /              \\   O---------O\
    \  /   Public   \\\n                        /    IPv6-only  \\  |  MAP    | /\
    \     IPv4      \\\n                       (    Network      --+  Border +-  \
    \   Network    )\n                        \\  (MAP Domain) /  |  Relay  | \\ \
    \              /\n   O------------------O  \\              /   O---------O  \\\
    \            /\n   |    MAP   CE      |  /\".         ,-'                 `-.\
    \       ,-'\n   | +-----+--------+ | /   `----+--'                       ------'\n\
    \   | NAPT44|  MAP   | |/\n   | +-----+        | |\n   |   |   +--------+ |\n\
    \   O---+--------------O\n       |\n        User M\n      Private IPv4\n     \
    \   Network\n                        Figure 1: Network Topology\n   The MAP BR\
    \ connects one or more MAP domains to external IPv4\n   networks.\n"
- title: 5.  Mapping Algorithm
  contents:
  - "5.  Mapping Algorithm\n   A MAP node is provisioned with one or more mapping\
    \ rules.\n   Mapping rules are used differently, depending on their function.\n\
    \   Every MAP node must be provisioned with a Basic Mapping Rule.  This\n   is\
    \ used by the node to configure its IPv4 address, IPv4 prefix, or\n   shared IPv4\
    \ address.  This same basic rule can also be used for\n   forwarding, where an\
    \ IPv4 destination address and, optionally, a\n   destination port are mapped\
    \ into an IPv6 address.  Additional mapping\n   rules are specified to allow for\
    \ multiple different IPv4 subnets to\n   exist within the domain and optimize\
    \ forwarding between them.\n   Traffic outside of the domain (i.e., when the destination\
    \ IPv4\n   address does not match (using longest matching prefix) any Rule IPv4\n\
    \   prefix in the Rules database) is forwarded to the BR.\n   There are two types\
    \ of mapping rules:\n   1.  Basic Mapping Rule (BMR) - mandatory.  A CE can be\
    \ provisioned\n       with multiple End-user IPv6 prefixes.  There can only be\
    \ one\n       Basic Mapping Rule per End-user IPv6 prefix.  However, all CEs\n\
    \       having End-user IPv6 prefixes within (aggregated by) the same\n      \
    \ Rule IPv6 prefix may share the same Basic Mapping Rule.  In\n       combination\
    \ with the End-user IPv6 prefix, the Basic Mapping Rule\n       is used to derive\
    \ the IPv4 prefix, address, or shared address and\n       the PSID assigned to\
    \ the CE.\n   2.  Forwarding Mapping Rule (FMR) - optional; used for forwarding.\n\
    \       The Basic Mapping Rule may also be a Forwarding Mapping Rule.\n      \
    \ Each Forwarding Mapping Rule will result in an entry in the rule\n       table\
    \ for the Rule IPv4 prefix.  Given a destination IPv4 address\n       and port\
    \ within the MAP domain, a MAP node can use the matching\n       FMR to derive\
    \ the End-user IPv6 address of the interface through\n       which that IPv4 destination\
    \ address and port combination can be\n       reached.  In hub-and-spoke mode,\
    \ there are no FMRs.\n   Both mapping rules share the same parameters:\n   o \
    \ Rule IPv6 prefix (including prefix length)\n   o  Rule IPv4 prefix (including\
    \ prefix length)\n   o  Rule EA-bit length (in bits)\n   A MAP node finds its\
    \ BMR by doing a longest match between the\n   End-user IPv6 prefix and the Rule\
    \ IPv6 prefix in the Mapping Rules\n   table.  The rule is then used for IPv4\
    \ prefix, address, or shared\n   address assignment.\n   A MAP IPv6 address is\
    \ formed from the BMR Rule IPv6 prefix.  This\n   address MUST be assigned to\
    \ an interface of the MAP node and is used\n   to terminate all MAP traffic being\
    \ sent or received to the node.\n   Port-restricted IPv4 routes are installed\
    \ in the rule table for all\n   the Forwarding Mapping Rules, and a default route\
    \ is installed to the\n   MAP BR (see Section 5.4).\n   Forwarding Mapping Rules\
    \ are used to allow direct communication\n   between MAP CEs; this is known as\
    \ \"Mesh mode\".  In hub-and-spoke\n   mode, there are no Forwarding Mapping Rules;\
    \ all traffic MUST be\n   forwarded directly to the BR.\n   While an FMR is optional\
    \ in the sense that a MAP CE MAY be configured\n   with zero or more FMRs -- depending\
    \ on the deployment -- all MAP CEs\n   MUST implement support for both rule types.\n"
- title: 5.1.  Port-Mapping Algorithm
  contents:
  - "5.1.  Port-Mapping Algorithm\n   The port-mapping algorithm is used in domains\
    \ whose rules allow IPv4\n   address sharing.\n   The simplest way to represent\
    \ a port range is using a notation\n   similar to Classless Inter-Domain Routing\
    \ (CIDR) [RFC4632].  For\n   example, the first 256 ports are represented as port\
    \ prefix 0.0/8 and\n   the last 256 ports as 255.0/8.  In hexadecimal, these would\
    \ be\n   0x0000/8 (PSID = 0) and 0xFF00/8 (PSID = 0xFF), respectively.  Using\n\
    \   this technique but wishing to avoid allocating the system ports\n   [RFC6335]\
    \ to the user, one would have to exclude the use of one or\n   more PSIDs (e.g.,\
    \ PSIDs 0 to 3 in the example just given).\n   When the PSID is embedded in the\
    \ End-user IPv6 prefix, it is\n   desirable to minimize the restrictions of possible\
    \ PSID values in\n   order to minimize dependencies between the End-user IPv6\
    \ prefix and\n   the assigned port set.  This is achieved by using an infix\n\
    \   representation of the port value.  Using such a representation, the\n   well-known\
    \ ports are excluded by restrictions on the value of the\n   high-order bit field\
    \ (A) rather than the PSID.\n   The infix algorithm allocates ports to a given\
    \ CE as a series of\n   contiguous ranges spaced at regular intervals throughout\
    \ the complete\n   range of possible port-set values.\n                      \
    \        0                   1\n                              0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5\n                             +-----------+-----------+-------+\n\
    \               Ports in      |     A     |    PSID   |   j   |\n            the\
    \ CE port set  |    > 0    |           |       |\n                           \
    \  +-----------+-----------+-------+\n                             |  a bits \
    \  |  k bits   |m bits |\n            Figure 2: Structure of a Port-Restricted\
    \ Port Field\n   a bits:  The number of offset bits -- 6 by default, as this excludes\n\
    \            the system ports (0-1023).  To guarantee non-overlapping\n      \
    \      port sets, the offset 'a' MUST be the same for every MAP CE\n         \
    \   sharing the same address.\n        A:  Selects the range of the port number.\
    \  For 'a' > 0, A MUST\n            be larger than 0.  This ensures that the algorithm\
    \ excludes\n            the system ports.  For the default value of 'a' (6), the\n\
    \            system ports are excluded by requiring that A be greater\n      \
    \      than 0.  Smaller values of 'a' exclude a larger initial\n            range,\
    \ e.g., 'a' = 4 will exclude ports 0-4095.  The\n            interval between\
    \ initial port numbers of successive\n            contiguous ranges assigned to\
    \ the same user is 2^(16 - a).\n   k bits:  The length in bits of the PSID field.\
    \  To guarantee\n            non-overlapping port sets, the length 'k' MUST be\
    \ the same\n            for every MAP CE sharing the same address.  The sharing\n\
    \            ratio is 2^k.  The number of ports assigned to the user is\n    \
    \        2^(16 - k) - 2^m (excluded ports).\n     PSID:  The Port Set Identifier\
    \ (PSID).  Different PSID values\n            guarantee non-overlapping port sets,\
    \ thanks to the\n            restrictions on 'a' and 'k' stated above, because\
    \ the PSID\n            always occupies the same bit positions in the port number.\n\
    \   m bits:  The number of contiguous ports is given by 2^m.\n        j:  Selects\
    \ the specific port within a particular range\n            specified by the concatenation\
    \ of A and the PSID.\n"
- title: 5.2.  Basic Mapping Rule (BMR)
  contents:
  - "5.2.  Basic Mapping Rule (BMR)\n   The Basic Mapping Rule is mandatory and is\
    \ used by the CE to\n   provision itself with an IPv4 prefix, IPv4 address, or\
    \ shared IPv4\n   address.  Recall from Section 5 that the BMR consists of the\n\
    \   following parameters:\n   o  Rule IPv6 prefix (including prefix length)\n\
    \   o  Rule IPv4 prefix (including prefix length)\n   o  Rule EA-bit length (in\
    \ bits)\n   Figure 3 shows the structure of the complete MAP IPv6 address as\n\
    \   specified in this document.\n   |     n bits         |  o bits   | s bits\
    \  |   128-n-o-s bits      |\n   +--------------------+-----------+---------+-----------------------+\n\
    \   |  Rule IPv6 prefix  |  EA bits  |subnet ID|     interface ID      |\n   +--------------------+-----------+---------+-----------------------+\n\
    \   |<---  End-user IPv6 prefix  --->|\n                     Figure 3: MAP IPv6\
    \ Address Format\n   The Rule IPv6 prefix is common among all CEs using the same\
    \ Basic\n   Mapping Rule within the MAP domain.  The EA bit field encodes the\n\
    \   CE-specific IPv4 address and port information.  The EA bit field,\n   which\
    \ is unique for a given Rule IPv6 prefix, can contain a full or\n   partial IPv4\
    \ address and, in the shared IPv4 address case, a PSID.\n   An EA bit field length\
    \ of 0 signifies that all relevant MAP IPv4\n   addressing information is passed\
    \ directly in the BMR and is not\n   derived from the EA bit field in the End-user\
    \ IPv6 prefix.\n   The MAP IPv6 address is created by concatenating the End-user\
    \ IPv6\n   prefix with the MAP subnet identifier (if the End-user IPv6 prefix\
    \ is\n   shorter than 64 bits) and the interface identifier as specified in\n\
    \   Section 6.\n   The MAP subnet identifier is defined to be the first subnet\
    \ (s bits\n   set to zero).\n   Define:\n      r = length of the IPv4 prefix given\
    \ by the BMR;\n      o = length of the EA bit field as given by the BMR;\n   \
    \   p = length of the IPv4 suffix contained in the EA bit field.\n   The length\
    \ r MAY be zero, in which case the complete IPv4 address or\n   prefix is encoded\
    \ in the EA bits.  If only a part of the IPv4\n   address / prefix is encoded\
    \ in the EA bits, the Rule IPv4 prefix is\n   provisioned to the CE by other means\
    \ (e.g., a DHCPv6 option).  To\n   create a complete IPv4 address (or prefix),\
    \ the IPv4 address suffix\n   (p) from the EA bits is concatenated with the Rule\
    \ IPv4 prefix\n   (r bits).\n   The offset of the EA bit field in the IPv6 address\
    \ is equal to the\n   BMR Rule IPv6 prefix length.  The length of the EA bit field\
    \ (o) is\n   given by the BMR Rule EA-bit length and can be between 0 and 48.\
    \  A\n   length of 48 means that the complete IPv4 address and port are\n   embedded\
    \ in the End-user IPv6 prefix (a single port is assigned).  A\n   length of 0\
    \ means that no part of the IPv4 address or port is\n   embedded in the address.\
    \  The sum of the Rule IPv6 Prefix length and\n   the Rule EA-bit length MUST\
    \ be less than or equal to the End-user\n   IPv6 prefix length.\n   If o + r <\
    \ 32 (length of the IPv4 address in bits), then an IPv4\n   prefix is assigned.\
    \  This case is shown in Figure 4.\n                   |   r bits    |  o bits\
    \ =  p bits   |\n                   +-------------+---------------------+\n  \
    \                 |  Rule IPv4  | IPv4 address suffix |\n                   +-------------+---------------------+\n\
    \                   |           < 32 bits               |\n                  \
    \         Figure 4: IPv4 Prefix\n   If o + r is equal to 32, then a full IPv4\
    \ address is to be assigned.\n   The address is created by concatenating the Rule\
    \ IPv4 prefix and the\n   EA-bits.  This case is shown in Figure 5.\n        \
    \           |   r bits    |  o bits = p bits    |\n                   +-------------+---------------------+\n\
    \                   |  Rule IPv4  | IPv4 address suffix |\n                  \
    \ +-------------+---------------------+\n                   |            32 bits\
    \                |\n                      Figure 5: Complete IPv4 Address\n  \
    \ If o + r is > 32, then a shared IPv4 address is to be assigned.  The\n   number\
    \ of IPv4 address suffix bits (p) in the EA bits is given by\n   32 - r bits.\
    \  The PSID bits are used to create a port set.  The\n   length of the PSID bit\
    \ field within the EA bits is q = o - p.\n       |   r bits    |        p bits\
    \       |         |   q bits   |\n       +-------------+---------------------+\
    \         +------------+\n       |  Rule IPv4  | IPv4 address suffix |       \
    \  |Port Set ID |\n       +-------------+---------------------+         +------------+\n\
    \       |            32 bits                |\n                       Figure 6:\
    \ Shared IPv4 Address\n   The length of r MAY be 32, with no part of the IPv4\
    \ address embedded\n   in the EA bits.  This results in a mapping with no dependence\
    \ between\n   the IPv4 address and the IPv6 address.  In addition, the length\
    \ of o\n   MAY be zero (no EA bits embedded in the End-user IPv6 prefix),\n  \
    \ meaning that the PSID is also provisioned using, for example, DHCP.\n   See\
    \ Appendix A for an example of the Basic Mapping Rule.\n"
- title: 5.3.  Forwarding Mapping Rule (FMR)
  contents:
  - "5.3.  Forwarding Mapping Rule (FMR)\n   The Forwarding Mapping Rule is optional\
    \ and is used in Mesh mode to\n   enable direct CE-to-CE connectivity.\n   On\
    \ adding an FMR rule, an IPv4 route is installed in the rule table\n   for the\
    \ Rule IPv4 prefix (Figures 4, 5, and 6).\n   |        32 bits           |   \
    \      |    16 bits        |\n   +--------------------------+         +-------------------+\n\
    \   | IPv4 destination address |         |  IPv4 dest port   |\n   +--------------------------+\
    \         +-------------------+\n                  :           :           ___/\
    \       :\n                  |  p bits   |          /  q bits   :\n          \
    \        +-----------+         +------------+\n                  |IPv4 suffix|\
    \         |Port Set ID |\n                  +-----------+         +------------+\n\
    \                   \\          /    ____/    ________/\n                    \
    \ \\       :  __/   _____/\n                       \\     : /     /\n   |    \
    \ n bits         |  o bits   | s bits  |   128-n-o-s bits      |\n   +--------------------+-----------+---------+------------+----------+\n\
    \   |  Rule IPv6 prefix  |  EA bits  |subnet ID|     interface ID      |\n   +--------------------+-----------+---------+-----------------------+\n\
    \   |<---  End-user IPv6 prefix  --->|\n                 Figure 7: Derivation\
    \ of MAP IPv6 Address\n   See Appendix A for an example of the Forwarding Mapping\
    \ Rule.\n"
- title: 5.4.  Destinations outside the MAP Domain
  contents:
  - "5.4.  Destinations outside the MAP Domain\n   IPv4 traffic between MAP nodes\
    \ that are all within one MAP domain is\n   encapsulated in IPv6, with the sender's\
    \ MAP IPv6 address as the IPv6\n   source address and the receiving MAP node's\
    \ MAP IPv6 address as the\n   IPv6 destination address.  To reach IPv4 destinations\
    \ outside of the\n   MAP domain, traffic is also encapsulated in IPv6, but the\
    \ destination\n   IPv6 address is set to the configured IPv6 address of the MAP\
    \ BR.\n   On the CE, the path to the BR can be represented as a point-to-point\n\
    \   IPv4-over-IPv6 tunnel [RFC2473] with the source address of the tunnel\n  \
    \ being the CE's MAP IPv6 address and the BR IPv6 address as the remote\n   tunnel\
    \ address.  When MAP is enabled, a typical CE router will\n   install a default\
    \ IPv4 route to the BR.\n   The BR forwards traffic received from the outside\
    \ to CEs using the\n   normal MAP forwarding rules.\n"
- title: 6.  The IPv6 Interface Identifier
  contents:
  - "6.  The IPv6 Interface Identifier\n   The interface identifier format of a MAP\
    \ node is described below.\n                   |          128-n-o-s bits     \
    \     |\n                   | 16 bits|    32 bits     | 16 bits|\n           \
    \        +--------+----------------+--------+\n                   |   0    | \
    \ IPv4 address  |  PSID  |\n                   +--------+----------------+--------+\n\
    \                    Figure 8: IPv6 Interface Identifier\n   In the case of an\
    \ IPv4 prefix, the IPv4 address field is right-padded\n   with zeros up to 32\
    \ bits.  The PSID field is left-padded with zeros\n   to create a 16-bit field.\
    \  For an IPv4 prefix or a complete IPv4\n   address, the PSID field is zero.\n\
    \   If the End-user IPv6 prefix length is larger than 64, the most\n   significant\
    \ parts of the interface identifier are overwritten by the\n   prefix.\n"
- title: 7.  MAP Configuration
  contents:
  - "7.  MAP Configuration\n   For a given MAP domain, the BR and CE MUST be configured\
    \ with the\n   following MAP elements.  The configured values for these elements\
    \ are\n   identical for all CEs and BRs within a given MAP domain.\n   o  The\
    \ Basic Mapping Rule and, optionally, the Forwarding Mapping\n      Rules, including\
    \ the Rule IPv6 prefix, Rule IPv4 prefix, and\n      Length of EA bits.\n   o\
    \  Hub-and-spoke mode or Mesh mode (if all traffic should be sent to\n      the\
    \ BR, or if direct CE-to-CE traffic should be supported).\n   In addition, the\
    \ MAP CE MUST be configured with the IPv6 address(es)\n   of the MAP BR (Section\
    \ 5.4).\n"
- title: 7.1.  MAP CE
  contents:
  - "7.1.  MAP CE\n   The MAP elements are set to values that are the same across\
    \ all CEs\n   within a MAP domain.  The values may be configured in a variety\
    \ of\n   ways, including provisioning methods such as the Broadband Forum's\n\
    \   \"TR-69\" Residential Gateway management interface [TR069], an\n   XML-based\
    \ object retrieved after IPv6 connectivity is established, or\n   manual configuration\
    \ by an administrator.  IPv6 DHCP options for MAP\n   configuration are defined\
    \ in [RFC7598].  Other configuration and\n   management methods may use the formats\
    \ described by these options for\n   consistency and convenience of implementation\
    \ on CEs that support\n   multiple configuration methods.\n   The only remaining\
    \ provisioning information the CE requires in order\n   to calculate the MAP IPv4\
    \ address and enable IPv4 connectivity is the\n   IPv6 prefix for the CE.  The\
    \ End-user IPv6 prefix is configured as\n   part of obtaining IPv6 Internet access.\n\
    \   The MAP provisioning parameters, and hence the IPv4 service itself,\n   are\
    \ tied to the associated End-user IPv6 prefix lifetime; thus, the\n   MAP service\
    \ is also tied to this in terms of authorization,\n   accounting, etc.\n   A single\
    \ MAP CE MAY be connected to more than one MAP domain, just as\n   any router\
    \ may have more than one IPv4-enabled service-provider-\n   facing interface and\
    \ more than one set of associated addresses\n   assigned by DHCP.  Each domain\
    \ within which a given CE operates would\n   require its own set of MAP configuration\
    \ elements and would generate\n   its own IPv4 address.  Each MAP domain requires\
    \ a distinct End-user\n   IPv6 prefix.\n   MAP DHCP options are specified in [RFC7598].\n"
- title: 7.2.  MAP BR
  contents:
  - "7.2.  MAP BR\n   The MAP BR MUST be configured with corresponding mapping rules\
    \ for\n   each MAP domain for which it is acting as a BR.\n   For increased reliability\
    \ and load balancing, the BR IPv6 address MAY\n   be an anycast address shared\
    \ across a given MAP domain.  As MAP is\n   stateless, any BR may be used at any\
    \ time.  If the BR IPv6 address is\n   anycast, the relay MUST use this anycast\
    \ IPv6 address as the source\n   address in packets relayed to CEs.\n   Since\
    \ MAP uses provider address space, no specific routes need to be\n   advertised\
    \ externally for MAP to operate in IPv6 or IPv4 BGP.\n   However, if anycast is\
    \ used for the MAP IPv6 relays, the anycast\n   addresses must be advertised in\
    \ the service provider's IGP.\n"
- title: 8.  Forwarding Considerations
  contents:
  - "8.  Forwarding Considerations\n   Figure 1 depicts the overall MAP architecture\
    \ with IPv4 users\n   connected to a routed IPv6 network.\n   MAP uses encapsulation\
    \ mode as specified in [RFC2473].\n   For a shared IPv4 address, a MAP CE forwarding\
    \ IPv4 packets from the\n   LAN performs NAT44 functions first and creates appropriate\
    \ NAT44\n   bindings.  The resulting IPv4 packets MUST contain the source IPv4\n\
    \   address and source transport identifiers specified by the MAP\n   provisioning\
    \ parameters.  The IPv4 packet is forwarded using the CE's\n   MAP forwarding\
    \ function.  The IPv6 source and destination addresses\n   MUST then be derived\
    \ as per Section 5 of this document.\n"
- title: 8.1.  Receiving Rules
  contents:
  - "8.1.  Receiving Rules\n   A MAP CE receiving an IPv6 packet to its MAP IPv6 address\
    \ sends this\n   packet to the CE's MAP function, where it is decapsulated.  The\n\
    \   resulting IPv4 packet is then forwarded to the CE's NAT44 function,\n   where\
    \ it is handled according to the NAT's translation table.\n   A MAP BR receiving\
    \ IPv6 packets selects a best matching MAP domain\n   rule (Rule IPv6 prefix)\
    \ based on a longest address match of the\n   packet's IPv6 source address, as\
    \ well as a match of the packet\n   destination address against the configured\
    \ BR IPv6 address(es).  The\n   selected MAP Rule allows the BR to determine the\
    \ EA-bits from the\n   source IPv6 address.\n   To prevent spoofing of IPv4 addresses,\
    \ any MAP node (CE and BR) MUST\n   perform the following validation upon reception\
    \ of a packet.  First,\n   the embedded IPv4 address or prefix, as well as the\
    \ PSID (if any),\n   are extracted from the source IPv6 address using the matching\
    \ MAP\n   Rule.  These represent the range of what is acceptable as source IPv4\n\
    \   address and port.  Second, the node extracts the source IPv4 address\n   and\
    \ port from the IPv4 packet encapsulated inside the IPv6 packet.\n   If they are\
    \ found to be outside the acceptable range, the packet MUST\n   be silently discarded\
    \ and a counter incremented to indicate that a\n   potential spoofing attack may\
    \ be underway.  The source validation\n   checks just described are not done for\
    \ packets whose source IPv6\n   address is that of the BR (BR IPv6 address).\n\
    \   By default, the CE router MUST drop packets received on the MAP\n   virtual\
    \ interface (i.e., after decapsulation of IPv6) for IPv4\n   destinations not\
    \ for its own IPv4 shared address, full IPv4 address,\n   or IPv4 prefix.\n"
- title: 8.2.  ICMP
  contents:
  - "8.2.  ICMP\n   ICMP messages should be supported in MAP domains.  Hence, the\
    \ NAT44\n   in the MAP CE MUST implement the behavior for ICMP messages\n   conforming\
    \ to the best current practice documented in [RFC5508].\n   If a MAP CE receives\
    \ an ICMP message having the ICMP Identifier field\n   in the ICMP header, the\
    \ NAT44 in the MAP CE MUST rewrite this field\n   to a specific value assigned\
    \ from the port set.  BRs and other CEs\n   must handle this field in a way similar\
    \ to the handling of a port\n   number in the TCP/UDP header upon receiving the\
    \ ICMP message with the\n   ICMP Identifier field.\n   If a MAP node receives\
    \ an ICMP error message without the ICMP\n   Identifier field for errors that\
    \ are detected inside an IPv6 tunnel,\n   a node should relay the ICMP error message\
    \ to the original source.\n   This behavior SHOULD be implemented in accordance\
    \ with Section 8 of\n   [RFC2473].\n"
- title: 8.3.  Fragmentation and Path MTU Discovery
  contents:
  - "8.3.  Fragmentation and Path MTU Discovery\n   Due to the different sizes of\
    \ the IPv4 and IPv6 headers, handling the\n   maximum packet size is relevant\
    \ for the operation of any system\n   connecting the two address families.  There\
    \ are three mechanisms to\n   handle this issue: Path MTU Discovery (PMTUD), fragmentation,\
    \ and\n   transport-layer negotiation such as the TCP Maximum Segment Size\n \
    \  (MSS) option [RFC879].  MAP uses all three mechanisms to deal with\n   different\
    \ cases.\n"
- title: 8.3.1.  Fragmentation in the MAP Domain
  contents:
  - "8.3.1.  Fragmentation in the MAP Domain\n   Encapsulating an IPv4 packet to carry\
    \ it across the MAP domain will\n   increase its size (typically by 40 bytes).\
    \  It is strongly\n   recommended that the MTU in the MAP domain be well managed\
    \ and that\n   the IPv6 MTU on the CE WAN-side interface be set so that no\n \
    \  fragmentation occurs within the boundary of the MAP domain.\n   For an IPv4\
    \ packet entering a MAP domain, fragmentation is performed\n   as described in\
    \ Section 7.2 of [RFC2473].\n   The use of an anycast source address could lead\
    \ to an ICMP error\n   message generated on the path being sent to a different\
    \ BR.\n   Therefore, using a dynamically set tunnel MTU (Section 6.7 of\n   [RFC2473])\
    \ is subject to IPv6 Path MTU black holes.  A MAP BR using\n   an anycast source\
    \ address SHOULD NOT by default use Path MTU\n   Discovery across the MAP domain.\n\
    \   Multiple BRs using the same anycast source address could send\n   fragmented\
    \ packets to the same CE at the same time.  If the\n   fragmented packets from\
    \ different BRs happen to use the same\n   fragment ID, incorrect reassembly might\
    \ occur.  See [RFC4459] for an\n   analysis of the problem; Section 3.4 of [RFC4459]\
    \ suggests solving\n   the problem by fragmenting the inner packet.\n"
- title: 8.3.2.  Receiving IPv4 Fragments on the MAP Domain Borders
  contents:
  - "8.3.2.  Receiving IPv4 Fragments on the MAP Domain Borders\n   The forwarding\
    \ of an IPv4 packet received from outside of the MAP\n   domain requires the IPv4\
    \ destination address and the\n   transport-protocol destination port.  The transport-protocol\n\
    \   information is only available in the first fragment received.  As\n   described\
    \ in Section 5.3.3 of [RFC6346], a MAP node receiving an\n   IPv4 fragmented packet\
    \ from outside has to reassemble the packet\n   before sending the packet onto\
    \ the MAP link.  If the first packet\n   received contains the transport-protocol\
    \ information, it is possible\n   to optimize this behavior by using a cache and\
    \ forwarding the\n   fragments unchanged.  Implementers of MAP should be aware\
    \ that there\n   are a number of well-known attacks against IP fragmentation;\
    \ see\n   [RFC1858] and [RFC3128].  Implementers should also be aware of\n   additional\
    \ issues with reassembling packets at high rates, as\n   described in [RFC4963].\n"
- title: 8.3.3.  Sending IPv4 Fragments to the Outside
  contents:
  - "8.3.3.  Sending IPv4 Fragments to the Outside\n   If two IPv4 hosts behind two\
    \ different MAP CEs with the same IPv4\n   address send fragments to an IPv4 destination\
    \ host outside the\n   domain, those hosts may use the same IPv4 fragmentation\
    \ identifier,\n   resulting in incorrect reassembly of the fragments at the destination\n\
    \   host.  Given that the IPv4 fragmentation identifier is a 16-bit\n   field,\
    \ it could be used similarly to port ranges.  A MAP CE could\n   rewrite the IPv4\
    \ fragmentation identifier to be within its allocated\n   port set, if the resulting\
    \ fragment identifier space was large enough\n   related to the rate at which\
    \ fragments were sent.  However, splitting\n   the identifier space in this fashion\
    \ would increase the probability\n   of reassembly collisions for all connections\
    \ through the Customer\n   Premises Equipment (CPE).  See also [RFC6864].\n"
- title: 9.  NAT44 Considerations
  contents:
  - "9.  NAT44 Considerations\n   The NAT44 implemented in the MAP CE SHOULD conform\
    \ to the behavior\n   and best current practices documented in [RFC4787], [RFC5508],\
    \ and\n   [RFC5382].  In MAP address-sharing mode (determined by the MAP\n   domain\
    \ / rule configuration parameters), the operation of the NAT44\n   MUST be restricted\
    \ to the available port numbers derived via the\n   Basic Mapping Rule.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Spoofing attacks:  With consistency checks between\
    \ IPv4 and IPv6\n      sources that are performed on IPv4/IPv6 packets received\
    \ by MAP\n      nodes, MAP does not introduce any new opportunity for spoofing\n\
    \      attacks that would not already exist in IPv6.\n   Denial-of-service attacks:\
    \  In MAP domains where IPv4 addresses are\n      shared, the fact that IPv4 datagram\
    \ reassembly may be necessary\n      introduces an opportunity for DoS attacks.\
    \  This is inherent in\n      address sharing and is common with other address-sharing\n\
    \      approaches such as DS-Lite and NAT64/DNS64.  The best protection\n    \
    \  against such attacks is to accelerate IPv6 deployment so that\n      address\
    \ sharing is used less and less where MAP is supported.\n   Routing loop attacks:\
    \  Routing loop attacks may exist in some\n      \"automatic tunneling\" scenarios\
    \ and are documented in [RFC6324].\n      They cannot exist with MAP because each\
    \ BR checks that the IPv6\n      source address of a received IPv6 packet is a\
    \ CE address based on\n      the Forwarding Mapping Rule.\n   Attacks facilitated\
    \ by restricted port set:  From hosts that are not\n      subject to ingress filtering\
    \ [RFC2827], an attacker can inject\n      spoofed packets during ongoing transport\
    \ connections [RFC4953]\n      [RFC5961] [RFC6056].  The attacks depend on guessing\
    \ which ports\n      are currently used by target hosts.  Using an unrestricted\
    \ port\n      set is preferable, i.e., using native IPv6 connections that are\n\
    \      not subject to MAP port-range restrictions.  To minimize these\n      types\
    \ of attacks when using a restricted port set, the MAP CE's\n      NAT44 filtering\
    \ behavior SHOULD be \"Address-Dependent Filtering\"\n      as described in Section\
    \ 5 of [RFC4787].  Furthermore, the MAP CEs\n      SHOULD use a DNS transport\
    \ proxy [RFC5625] function to handle DNS\n      traffic and source such traffic\
    \ from IPv6 interfaces not assigned\n      to MAP.\n   [RFC6269] outlines general\
    \ issues with IPv4 address sharing.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2473]  Conta, A. and S. Deering, \"Generic Packet Tunneling in\n     \
    \         IPv6 Specification\", RFC 2473, DOI 10.17487/RFC2473,\n            \
    \  December 1998, <http://www.rfc-editor.org/info/rfc2473>.\n   [RFC5625]  Bellis,\
    \ R., \"DNS Proxy Implementation Guidelines\",\n              BCP 152, RFC 5625,\
    \ DOI 10.17487/RFC5625, August 2009,\n              <http://www.rfc-editor.org/info/rfc5625>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [MAP-Deploy]\n              Sun, Q., Chen,\
    \ M., Chen, G., Tsou, T., and S. Perreault,\n              \"Mapping of Address\
    \ and Port (MAP) - Deployment\n              Considerations\", Work in Progress,\n\
    \              draft-ietf-softwire-map-deployment-06, June 2015.\n   [RFC879]\
    \   Postel, J., \"The TCP Maximum Segment Size and Related\n              Topics\"\
    , RFC 879, DOI 10.17487/RFC0879, November 1983,\n              <http://www.rfc-editor.org/info/rfc879>.\n\
    \   [RFC1858]  Ziemba, G., Reed, D., and P. Traina, \"Security\n             \
    \ Considerations for IP Fragment Filtering\", RFC 1858,\n              DOI 10.17487/RFC1858,\
    \ October 1995,\n              <http://www.rfc-editor.org/info/rfc1858>.\n   [RFC1933]\
    \  Gilligan, R. and E. Nordmark, \"Transition Mechanisms for\n              IPv6\
    \ Hosts and Routers\", RFC 1933, DOI 10.17487/RFC1933,\n              April 1996,\
    \ <http://www.rfc-editor.org/info/rfc1933>.\n   [RFC2529]  Carpenter, B. and C.\
    \ Jung, \"Transmission of IPv6 over IPv4\n              Domains without Explicit\
    \ Tunnels\", RFC 2529,\n              DOI 10.17487/RFC2529, March 1999,\n    \
    \          <http://www.rfc-editor.org/info/rfc2529>.\n   [RFC2663]  Srisuresh,\
    \ P. and M. Holdrege, \"IP Network Address\n              Translator (NAT) Terminology\
    \ and Considerations\",\n              RFC 2663, DOI 10.17487/RFC2663, August\
    \ 1999,\n              <http://www.rfc-editor.org/info/rfc2663>.\n   [RFC2827]\
    \  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n              Defeating\
    \ Denial of Service Attacks which employ IP Source\n              Address Spoofing\"\
    , BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n              May 2000, <http://www.rfc-editor.org/info/rfc2827>.\n\
    \   [RFC3056]  Carpenter, B. and K. Moore, \"Connection of IPv6 Domains\n    \
    \          via IPv4 Clouds\", RFC 3056, DOI 10.17487/RFC3056,\n              February\
    \ 2001, <http://www.rfc-editor.org/info/rfc3056>.\n   [RFC3128]  Miller, I., \"\
    Protection Against a Variant of the Tiny\n              Fragment Attack (RFC 1858)\"\
    , RFC 3128,\n              DOI 10.17487/RFC3128, June 2001,\n              <http://www.rfc-editor.org/info/rfc3128>.\n\
    \   [RFC3633]  Troan, O. and R. Droms, \"IPv6 Prefix Options for Dynamic\n   \
    \           Host Configuration Protocol (DHCP) version 6\", RFC 3633,\n      \
    \        DOI 10.17487/RFC3633, December 2003,\n              <http://www.rfc-editor.org/info/rfc3633>.\n\
    \   [RFC4213]  Nordmark, E. and R. Gilligan, \"Basic Transition Mechanisms\n \
    \             for IPv6 Hosts and Routers\", RFC 4213,\n              DOI 10.17487/RFC4213,\
    \ October 2005,\n              <http://www.rfc-editor.org/info/rfc4213>.\n   [RFC4459]\
    \  Savola, P., \"MTU and Fragmentation Issues with\n              In-the-Network\
    \ Tunneling\", RFC 4459, DOI 10.17487/RFC4459,\n              April 2006, <http://www.rfc-editor.org/info/rfc4459>.\n\
    \   [RFC4632]  Fuller, V. and T. Li, \"Classless Inter-domain Routing\n      \
    \        (CIDR): The Internet Address Assignment and Aggregation\n           \
    \   Plan\", BCP 122, RFC 4632, DOI 10.17487/RFC4632,\n              August 2006,\
    \ <http://www.rfc-editor.org/info/rfc4632>.\n   [RFC4787]  Audet, F., Ed., and\
    \ C. Jennings, \"Network Address\n              Translation (NAT) Behavioral Requirements\
    \ for Unicast\n              UDP\", BCP 127, RFC 4787, DOI 10.17487/RFC4787,\n\
    \              January 2007, <http://www.rfc-editor.org/info/rfc4787>.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862, September\
    \ 2007,\n              <http://www.rfc-editor.org/info/rfc4862>.\n   [RFC4953]\
    \  Touch, J., \"Defending TCP Against Spoofing Attacks\",\n              RFC 4953,\
    \ DOI 10.17487/RFC4953, July 2007,\n              <http://www.rfc-editor.org/info/rfc4953>.\n\
    \   [RFC4963]  Heffner, J., Mathis, M., and B. Chandler, \"IPv4 Reassembly\n \
    \             Errors at High Data Rates\", RFC 4963,\n              DOI 10.17487/RFC4963,\
    \ July 2007,\n              <http://www.rfc-editor.org/info/rfc4963>.\n   [RFC5214]\
    \  Templin, F., Gleeson, T., and D. Thaler, \"Intra-Site\n              Automatic\
    \ Tunnel Addressing Protocol (ISATAP)\", RFC 5214,\n              DOI 10.17487/RFC5214,\
    \ March 2008,\n              <http://www.rfc-editor.org/info/rfc5214>.\n   [RFC5382]\
    \  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P.\n              Srisuresh,\
    \ \"NAT Behavioral Requirements for TCP\", BCP 142,\n              RFC 5382, DOI\
    \ 10.17487/RFC5382, October 2008,\n              <http://www.rfc-editor.org/info/rfc5382>.\n\
    \   [RFC5508]  Srisuresh, P., Ford, B., Sivakumar, S., and S. Guha, \"NAT\n  \
    \            Behavioral Requirements for ICMP\", BCP 148, RFC 5508,\n        \
    \      DOI 10.17487/RFC5508, April 2009,\n              <http://www.rfc-editor.org/info/rfc5508>.\n\
    \   [RFC5961]  Ramaiah, A., Stewart, R., and M. Dalal, \"Improving TCP's\n   \
    \           Robustness to Blind In-Window Attacks\", RFC 5961,\n             \
    \ DOI 10.17487/RFC5961, August 2010,\n              <http://www.rfc-editor.org/info/rfc5961>.\n\
    \   [RFC5969]  Townsley, W. and O. Troan, \"IPv6 Rapid Deployment on IPv4\n  \
    \            Infrastructures (6rd) -- Protocol Specification\",\n            \
    \  RFC 5969, DOI 10.17487/RFC5969, August 2010,\n              <http://www.rfc-editor.org/info/rfc5969>.\n\
    \   [RFC6056]  Larsen, M. and F. Gont, \"Recommendations for\n              Transport-Protocol\
    \ Port Randomization\", BCP 156, RFC 6056,\n              DOI 10.17487/RFC6056,\
    \ January 2011,\n              <http://www.rfc-editor.org/info/rfc6056>.\n   [RFC6250]\
    \  Thaler, D., \"Evolution of the IP Model\", RFC 6250,\n              DOI 10.17487/RFC6250,\
    \ May 2011,\n              <http://www.rfc-editor.org/info/rfc6250>.\n   [RFC6269]\
    \  Ford, M., Ed., Boucadair, M., Durand, A., Levis, P., and\n              P.\
    \ Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n              DOI 10.17487/RFC6269,\
    \ June 2011,\n              <http://www.rfc-editor.org/info/rfc6269>.\n   [RFC6324]\
    \  Nakibly, G. and F. Templin, \"Routing Loop Attack Using\n              IPv6\
    \ Automatic Tunnels: Problem Statement and Proposed\n              Mitigations\"\
    , RFC 6324, DOI 10.17487/RFC6324, August 2011,\n              <http://www.rfc-editor.org/info/rfc6324>.\n\
    \   [RFC6333]  Durand, A., Droms, R., Woodyatt, J., and Y. Lee,\n            \
    \  \"Dual-Stack Lite Broadband Deployments Following IPv4\n              Exhaustion\"\
    , RFC 6333, DOI 10.17487/RFC6333, August 2011,\n              <http://www.rfc-editor.org/info/rfc6333>.\n\
    \   [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.\n   \
    \           Cheshire, \"Internet Assigned Numbers Authority (IANA)\n         \
    \     Procedures for the Management of the Service Name and\n              Transport\
    \ Protocol Port Number Registry\", BCP 165,\n              RFC 6335, DOI 10.17487/RFC6335,\
    \ August 2011,\n              <http://www.rfc-editor.org/info/rfc6335>.\n   [RFC6346]\
    \  Bush, R., Ed., \"The Address plus Port (A+P) Approach to\n              the\
    \ IPv4 Address Shortage\", RFC 6346,\n              DOI 10.17487/RFC6346, August\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6346>.\n   [RFC6864]\
    \  Touch, J., \"Updated Specification of the IPv4 ID Field\",\n              RFC\
    \ 6864, DOI 10.17487/RFC6864, February 2013,\n              <http://www.rfc-editor.org/info/rfc6864>.\n\
    \   [RFC7598]  Mrugalski, T., Troan, O., Farrer, I., Perreault, S., Dec,\n   \
    \           W., Bao, C., Yeh, L., and X. Deng, \"DHCPv6 Options for\n        \
    \      Configuration of Softwire Address and Port-Mapped\n              Clients\"\
    , RFC 7598, DOI 10.17487/RFC7598, July 2015,\n              <http://www.rfc-editor.org/info/rfc7598>.\n\
    \   [Solutions-4v6]\n              Boucadair, M., Ed., Matsushima, S., Lee, Y.,\
    \ Bonness, O.,\n              Borges, I., and G. Chen, \"Motivations for Carrier-side\n\
    \              Stateless IPv4 over IPv6 Migration Solutions\", Work in\n     \
    \         Progress, draft-ietf-softwire-stateless-4v6-motivation-05,\n       \
    \       November 2012.\n   [TR069]    Broadband Forum TR-069, \"CPE WAN Management\
    \ Protocol\",\n              Amendment 5, CWMP Version: 1.4, November 2013,\n\
    \              <https://www.broadband-forum.org>.\n"
- title: Appendix A.  Examples
  contents:
  - "Appendix A.  Examples\n   Example 1 - Basic Mapping Rule:\n   Given the MAP domain\
    \ information and an IPv6 address of\n   an endpoint:\n   End-user IPv6 prefix:\
    \ 2001:db8:0012:3400::/56\n   Basic Mapping Rule:   {2001:db8:0000::/40 (Rule\
    \ IPv6 prefix),\n                          192.0.2.0/24 (Rule IPv4 prefix),\n\
    \                          16 (Rule EA-bit length)}\n   PSID length:         \
    \ (16 - (32 - 24) = 8 (sharing ratio of 256)\n   PSID offset:          6 (default)\n\
    \   A MAP node (CE or BR) can, via the BMR or equivalent FMR,\n   determine the\
    \ IPv4 address and port set as shown below:\n   EA bits offset:       40\n   IPv4\
    \ suffix bits (p)  Length of IPv4 address (32) -\n                         IPv4\
    \ prefix length (24) = 8\n   IPv4 address:         192.0.2.18 (0xc0000212)\n \
    \  PSID start:           40 + p = 40 + 8 = 48\n   PSID length:          o - p\
    \ = (56 - 40) - 8 = 8\n   PSID:                 0x34\n   Available ports (63 ranges):\
    \ 1232-1235, 2256-2259, ...... ,\n                                63696-63699,\
    \ 64720-64723\n   The BMR information allows a MAP CE to determine (complete)\n\
    \   its IPv6 address within the indicated IPv6 prefix.\n   IPv6 address of MAP\
    \ CE:  2001:db8:0012:3400:0000:c000:0212:0034\n   Example 2 - BR:\n   Another\
    \ example is a MAP BR, configured with the following FMR\n   when receiving a\
    \ packet with the following characteristics:\n   IPv4 source address:       1.2.3.4\
    \ (0x01020304)\n   IPv4 source port:          80\n   IPv4 destination address:\
    \  192.0.2.18 (0xc0000212)\n   IPv4 destination port:     1232\n   Forwarding\
    \ Mapping Rule: {2001:db8::/40 (Rule IPv6 prefix),\n                         \
    \    192.0.2.0/24 (Rule IPv4 prefix),\n                             16 (Rule EA-bit\
    \ length)}\n   IPv6 address of MAP BR:              2001:db8:ffff::1\n   The above\
    \ information allows the BR to derive the mapped\n   destination IPv6 address\
    \ for the corresponding MAP CE, and also\n   the mapped source IPv6 address for\
    \ the IPv4 source address,\n   as follows:\n   IPv4 suffix bits (p):  32 - 24\
    \ = 8 (18 (0x12))\n   PSID length:           8\n   PSID:                  0x34\
    \ (1232)\n   The resulting IPv6 packet will have the following key fields:\n \
    \  IPv6 source address:       2001:db8:ffff::1\n   IPv6 destination address: \
    \ 2001:db8:0012:3400:0000:c000:0212:0034\n   Example 3 - Forwarding Mapping Rule:\n\
    \   An IPv4 host behind the MAP CE (addressed as per the previous\n   examples)\
    \ corresponding with IPv4 host 1.2.3.4 will have its\n   packets encapsulated\
    \ by IPv6 using the IPv6 address of the BR\n   configured on the MAP CE as follows:\n\
    \   IPv6 address of BR:         2001:db8:ffff::1\n   IPv4 source address:    \
    \    192.0.2.18\n   IPv4 destination address:   1.2.3.4\n   IPv4 source port:\
    \           1232\n   IPv4 destination port:      80\n   MAP CE IPv6 source address:\
    \ 2001:db8:0012:3400:0000:c000:0212:0034\n   IPv6 destination address:   2001:db8:ffff::1\n\
    \   Example 4 - Rule with no embedded address bits and no address\n   sharing:\n\
    \   End-user IPv6 prefix: 2001:db8:0012:3400::/56\n   Basic Mapping Rule:   {2001:db8:0012:3400::/56\
    \ (Rule IPv6 prefix),\n                          192.0.2.18/32 (Rule IPv4 prefix),\n\
    \                          0 (Rule EA-bit length)}\n   PSID length:          0\
    \ (sharing ratio is 1)\n   PSID offset:          n/a\n   A MAP node (CE or BR)\
    \ can, via the BMR or equivalent FMR, determine\n   the IPv4 address and port\
    \ set as shown below:\n   EA bits offset:       0\n   IPv4 suffix bits (p): Length\
    \ of IPv4 address (32) -\n                         IPv4 prefix length (32) = 0\n\
    \   IPv4 address:         192.0.2.18 (0xc0000212)\n   PSID start:           0\n\
    \   PSID length:          0\n   PSID:                 null\n   The BMR information\
    \ allows a MAP CE to also determine (complete)\n   its full IPv6 address by combining\
    \ the IPv6 prefix with the MAP\n   interface identifier (that embeds the IPv4\
    \ address).\n   IPv6 address of MAP CE:  2001:db8:0012:3400:0000:c000:0212:0000\n\
    \   Example 5 - Rule with no embedded address bits and address sharing\n   (sharing\
    \ ratio of 256):\n   End-user IPv6 prefix: 2001:db8:0012:3400::/56\n   Basic Mapping\
    \ Rule:   {2001:db8:0012:3400::/56 (Rule IPv6 prefix),\n                     \
    \     192.0.2.18/32 (Rule IPv4 prefix),\n                          0 (Rule EA-bit\
    \ length)}\n   PSID length:          8 (from DHCP; sharing ratio of 256)\n   PSID\
    \ offset:          6 (default)\n   PSID:                 0x34 (from DHCP)\n  \
    \ A MAP node can, via the Basic Mapping Rule, determine the IPv4\n   address and\
    \ port set as shown below:\n   EA bits offset:        0\n   IPv4 suffix bits (p):\
    \  Length of IPv4 address (32) -\n                          IPv4 prefix length\
    \ (32) = 0\n   IPv4 address:          192.0.2.18 (0xc0000212)\n   PSID offset:\
    \           6\n   PSID length:           8\n   PSID:                  0x34\n \
    \  Available ports (63 ranges): 1232-1235, 2256-2259, ...... ,\n             \
    \                   63696-63699, 64720-64723\n   The Basic Mapping Rule information\
    \ allows a MAP CE to also\n   determine (complete) its full IPv6 address by combining\
    \ the IPv6\n   prefix with the MAP interface identifier (that embeds the IPv4\n\
    \   address and PSID).\n   IPv6 address of MAP CE: 2001:db8:0012:3400:0000:c000:0212:0034\n\
    \   Note that the IPv4 address and PSID are not derived from the IPv6\n   prefix\
    \ assigned to the CE but are provisioned separately using,\n   for example, DHCP.\n"
- title: Appendix B.  A More Detailed Description of the Derivation of the
  contents:
  - "Appendix B.  A More Detailed Description of the Derivation of the\n         \
    \    Port-Mapping Algorithm\n   This appendix describes how the port-mapping algorithm\
    \ described in\n   Section 5.1 was derived.  The algorithm is used in domains\
    \ whose\n   rules allow IPv4 address sharing.\n   The basic requirement for a\
    \ port-mapping algorithm is that the port\n   sets it assigns to different MAP\
    \ CEs MUST be non-overlapping.  A\n   number of other requirements guided the\
    \ choice of the algorithm:\n   o  In keeping with the general MAP algorithm, the\
    \ port set MUST be\n      derivable from a Port Set identifier (PSID) that can\
    \ be embedded\n      in the End-user IPv6 prefix.\n   o  The mapping MUST be reversible\
    \ such that, given the port number,\n      the PSID of the port set to which it\
    \ belongs can be quickly\n      derived.\n   o  The algorithm MUST allow a broad\
    \ range of address-sharing ratios.\n   o  It SHOULD be possible to exclude subsets\
    \ of the complete port\n      numbering space from assignment.  Most operators\
    \ would exclude the\n      system ports (0-1023).  A conservative operator might\
    \ exclude all\n      but the transient ports (49152-65535).\n   o  The effect\
    \ of port exclusion on the possible values of the\n      End-user IPv6 prefix\
    \ (i.e., due to restrictions on the PSID value)\n      SHOULD be minimized.\n\
    \   o  For administrative simplicity, the algorithm SHOULD allocate the\n    \
    \  same or almost the same number of ports to each CE sharing a given\n      IPv4\
    \ address.\n   The two extreme cases that an algorithm satisfying those conditions\n\
    \   might support are when (1) the port numbers are not contiguous for\n   each\
    \ PSID but uniformly distributed across the allowed port range and\n   (2) the\
    \ port numbers are contiguous in a single range for each PSID.\n   The port-mapping\
    \ algorithm proposed here is called the Generalized\n   Modulus Algorithm (GMA)\
    \ and supports both of these cases.\n   For a given IPv4 address-sharing ratio\
    \ (R) and the maximum number of\n   contiguous ports (M) in a port set, the GMA\
    \ is defined as follows:\n   a.  The port numbers (P) corresponding to a given\
    \ PSID are\n       generated by:\n       (1) ... P = (R * M) * i + M * PSID +\
    \ j\n       where i and j are indices and the ranges of i, j, and the PSID\n \
    \      are discussed below.\n   b.  For any given port number P, the PSID is calculated\
    \ as:\n       (2) ... PSID = trunc((P modulo (R * M)) / M)\n       where trunc()\
    \ is the operation of rounding down to the nearest\n       integer.\n   Formula\
    \ (1) can be interpreted as follows.  First, the available port\n   space is divided\
    \ into blocks of size R * M.  Each block is divided\n   into R individual ranges\
    \ of length M.  The index i in formula (1)\n   selects a block, PSID selects a\
    \ range within that block, and the\n   index j selects a specific port value within\
    \ the range.  On the basis\n   of this interpretation:\n   o  i ranges from ceil(N\
    \ / (R * M)) to trunc(65536/(R * M)) - 1, where\n      ceil is the operation of\
    \ rounding up to the nearest integer and N\n      is the number of ports (e.g.,\
    \ 1024) excluded from the lower end of\n      the range.  That is, any block containing\
    \ excluded values is\n      discarded at the lower end, and if the final block\
    \ has fewer than\n      R * M values it is discarded.  This ensures that the same\
    \ number\n      of ports is assigned to every PSID.\n   o  PSID ranges from 0\
    \ to R - 1.\n   o  j ranges from 0 to M - 1.\n"
- title: B.1.  Bit Representation of the Algorithm
  contents:
  - "B.1.  Bit Representation of the Algorithm\n   If R and M are powers of 2 (R =\
    \ 2^k, M = 2^m), formula (1) translates\n   to a computationally convenient structure\
    \ for any port number\n   represented as a 16-bit binary number.  This structure\
    \ is shown in\n   Figure 9.\n          0                          8          \
    \               15\n          +---------------+----------+------+-------------------+\n\
    \          |                     P                               |\n         \
    \ ----------------+-----------------+-------------------+\n          |       \
    \ i      |       PSID      |        j          |\n          +---------------+----------+------+-------------------+\n\
    \          |<----a bits--->|<-----k bits---->|<------m bits----->|\n         \
    \      Figure 9: Bit Representation of a Port Number\n   As shown in the figure,\
    \ the index value i of formula (1) is given by\n   the first a = 16 - k - m bits\
    \ of the port number.  The PSID value is\n   given by the next k bits, and the\
    \ index value j is given by the last\n   m bits.\n   Because the PSID is always\
    \ in the same position in the port number\n   and always the same length, different\
    \ PSID values are guaranteed to\n   generate different sets of port numbers. \
    \ In the reverse direction,\n   the generating PSID can be extracted from any\
    \ port number by a\n   bitmask operation.\n   Note that when M and R are powers\
    \ of 2, 65536 divides evenly by\n   R * M.  Hence, the final block is complete,\
    \ and the upper bound on i\n   is exactly 65536/(R * M) - 1.  The lower bound\
    \ on i is still the\n   minimum required to ensure that the required set of ports\
    \ is\n   excluded.  No port numbers are wasted through the discarding of\n   blocks\
    \ at the lower end if block size R * M is a factor of N, the\n   number of ports\
    \ to be excluded.\n   As a final note, the number of blocks into which the range\
    \ 0-65535 is\n   being divided in the above representation is given by 2^a.  Hence,\n\
    \   the case where a = 0 can be interpreted as one where the complete\n   range\
    \ has been divided into a single block, and individual port sets\n   are contained\
    \ in contiguous ranges in that block.  We cannot throw\n   away the whole block\
    \ in that case, so port exclusion has to be\n   achieved by putting a lower bound\
    \ equal to ceil(N / M) on the allowed\n   set of PSID values instead.\n"
- title: B.2.  GMA Examples
  contents:
  - "B.2.  GMA Examples\n   For example, for R = 256, PSID = 0, offset: a = 6 and\
    \ PSID length:\n   k = 8 bits:\n   Available ports (63 ranges): 1024-1027, 2048-2051,\
    \ ...... ,\n                                63488-63491, 64512-64515\n       \
    \             Example 1: with offset = 6 (a = 6)\n   For example, for R = 64,\
    \ PSID = 0, a = 0 (PSID offset = 0 and PSID\n   length = 6 bits), no port exclusion:\n\
    \   Available ports (1 range): 0-1023\n               Example 2: with offset =\
    \ 0 (a = 0) and N = 0\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is based on the ideas of many, including Masakazu\n\
    \   Asama, Mohamed Boucadair, Gang Chen, Maoke Chen, Wojciech Dec,\n   Xiaohong\
    \ Deng, Jouni Korhonen, Tomek Mrugalski, Jacni Qin, Chunfa\n   Sun, Qiong Sun,\
    \ and Leaf Yeh.  The authors want in particular to\n   recognize Remi Despres,\
    \ who has tirelessly worked on generalized\n   mechanisms for stateless address\
    \ mapping.\n   The authors would like to thank Lichun Bao, Guillaume Gottard,\
    \ Dan\n   Wing, Jan Zorz, Necj Scoberne, Tina Tsou, Kristian Poscic, and\n   especially\
    \ Tom Taylor and Simon Perreault for the thorough review and\n   comments of this\
    \ document.  Useful IETF Last Call comments were\n   received from Brian Weis\
    \ and Lei Yan.\n"
- title: Contributors
  contents:
  - "Contributors\n   This document is the result of the IETF Softwire MAP design\
    \ team\n   effort and numerous previous individual contributions in this area:\n\
    \   Chongfeng Xie\n   China Telecom\n   Room 708, No. 118, Xizhimennei Street\n\
    \   Beijing  100035\n   China\n   Phone: +86-10-58552116\n   Email: xiechf@ctbri.com.cn\n\
    \   Qiong Sun\n   China Telecom\n   Room 708, No. 118, Xizhimennei Street\n  \
    \ Beijing  100035\n   China\n   Phone: +86-10-58552936\n   Email: sunqiong@ctbri.com.cn\n\
    \   Gang Chen\n   China Mobile\n   29, Jinrong Avenue\n   Xicheng District, Beijing\
    \  100033\n   China\n   Email: phdgang@gmail.com, chengang@chinamobile.com\n \
    \  Yu Zhai\n   CERNET Center/Tsinghua University\n   Room 225, Main Building,\
    \ Tsinghua University\n   Beijing  100084\n   China\n   Email: jacky.zhai@gmail.com\n\
    \   Wentao Shang\n   CERNET Center/Tsinghua University\n   Room 225, Main Building,\
    \ Tsinghua University\n   Beijing  100084\n   China\n   Email: wentaoshang@gmail.com\n\
    \   Guoliang Han\n   CERNET Center/Tsinghua University\n   Room 225, Main Building,\
    \ Tsinghua University\n   Beijing  100084\n   China\n   Email: bupthgl@gmail.com\n\
    \   Rajiv Asati\n   Cisco Systems\n   7025-6 Kit Creek Road\n   Research Triangle\
    \ Park, NC  27709\n   United States\n   Email: rajiva@cisco.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ole Troan (editor)\n   Cisco Systems\n   Philip Pedersens\
    \ vei 1\n   Lysaker  1366\n   Norway\n   Email: ot@cisco.com\n   Wojciech Dec\n\
    \   Cisco Systems\n   Haarlerbergpark Haarlerbergweg 13-19\n   Amsterdam, NOORD-HOLLAND\
    \  1101 CH\n   The Netherlands\n   Email: wdec@cisco.com\n   Xing Li\n   CERNET\
    \ Center/Tsinghua University\n   Room 225, Main Building, Tsinghua University\n\
    \   Beijing  100084\n   China\n   Email: xing@cernet.edu.cn\n   Congxiao Bao\n\
    \   CERNET Center/Tsinghua University\n   Room 225, Main Building, Tsinghua University\n\
    \   Beijing  100084\n   China\n   Email: congxiao@cernet.edu.cn\n   Satoru Matsushima\n\
    \   SoftBank Telecom\n   1-9-1 Higashi-Shinbashi, Munato-ku\n   Tokyo\n   Japan\n\
    \   Email: satoru.matsushima@g.softbank.co.jp\n   Tetsuya Murakami\n   IP Infusion\n\
    \   1188 East Arques Avenue\n   Sunnyvale, CA  94085\n   United States\n   Email:\
    \ tetsuya@ipinfusion.com\n   Tom Taylor (editor)\n   Huawei Technologies\n   Ottawa\n\
    \   Canada\n   Email: tom.taylor.stds@gmail.com\n"
