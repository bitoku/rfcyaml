Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in TCP/IP based internets.
In particular, it defines objects for managing routes in the IP Internet.
It is proposed that the ipRouteTable defined by MIB II (RFC 1213) be deprecated and replaced with this table.
This adds the ability to set or display multi path routes, and varying routes by network management policy.
The Internet standard Network Management Framework consists of three components.
They are: RFC 1155 which defines the SMI, the mechanisms used for describing and naming objects for the purpose of management.
RFC 1212 defines a more concise description mechanism, which is wholly consistent with the SMI.
RFC 1156 which defines MIB I, the core set of managed objects for the Internet suite of protocols.
RFC 1213 defines MIB II, an evolution of MIB I based on implementation experience and new operational requirements.
RFC 1157 which defines the SNMP, the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Objects Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1)
[7] defined in the SMI.
In particular, each object has a name, a syntax, and an encoding.
The name is an object identifier, an administratively assigned name, which specifies an object type.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the OBJECT DESCRIPTOR, to also refer to the object type.
The syntax of an object type defines the abstract data structure corresponding to that object type.
The ASN.1 language is used for this purpose.
However, the SMI [3] purposely restricts the ASN.1 constructs which may be used.
These restrictions are explicitly made for simplicity.
The encoding of an object type is simply how that object type is represented using the object type's syntax.
Implicitly tied to the notion of an object type's syntax and encoding
is how the object type is represented when being transmitted on the network.
The SMI specifies the use of the basic encoding rules of ASN.1 [8], subject to the additional requirements imposed by the SNMP.
Format of Definitions Section 4 contains contains the specification of all object types contained in this MIB module.
The object types are defined using the conventions defined in the SMI, as amended by the extensions specified in [9].
The IP Forwarding Table is quite analogous to the older ipRoute Table.
The principal differences are: (1)
It is somewhat re organized, for aesthetic reasons,
It has the Next Hop Autonomous System Number, useful primarily to the administrators of regional networks,
(3)  It is instanced by Policy and Next Hop as well as by ultimate destination.
Thus, multiple multipath routes can be managed, not just a single route, along with the circumstances under which the any given route might be chosen.
BEGIN IMPORTS Gauge, IpAddress FROM RFC1155
SMI mib 2, ip FROM RFC1213
MIB OBJECT TYPE FROM RFC 1212;
This MIB module uses the extended OBJECT TYPE macro as    defined in [9].
The IP Forwarding Table obsoletes and replaces the ipRoute    Table current in MIB I and MIB II.
It adds knowledge of    the autonomous system of the next hop, multiple next hop    support, and policy routing support.
"This entity's IP Routing table."
mandatory DESCRIPTION "A particular route to  a  particular  destina  tion, under a particular policy.
ipForwardMask IpAddress, ipForwardPolicy INTEGER, ipForwardNextHop IpAddress, ipForwardIfIndex INTEGER, ipForwardType INTEGER, ipForwardProto INTEGER, ipForwardAge INTEGER, ipForwardInfo OBJECT IDENTIFIER, ipForwardNextHopAS INTEGER, ipForwardMetric1 INTEGER, ipForwardMetric2 INTEGER, ipForwardMetric3 INTEGER, ipForwardMetric4 INTEGER, ipForwardMetric5 INTEGER }
"The destination IP address of this route.
An entry  with  a value of 0.0.0.0 is considered a default route.
This object may not take a Multicast (Class  D) address value.
Any assignment (implicit or  otherwise)  of  an instance  of  this  object to a value x must be rejected if the bitwise logical AND of
"Indicate the mask to be logical ANDed with the destination
being compared to the value  in  the  ipForwardDest  field.
For those  systems  that  do  not support arbitrary subnet masks, an agent constructs the value  of the  ipForwardMask  by  reference to the IP Ad  dress Class.
Any assignment (implicit or  otherwise)  of  an instance  of  this  object to a value x must be rejected if the bitwise logical AND of
x  with the  value of the corresponding instance of the ipForwardDest object is not equal to ipForward  Dest."
The following convention is included for specification   of TOS Field contents.
At this time, the Host Requirements   and the Router Requirements documents disagree on the width   of the TOS field.
This mapping describes the Router   Requirements mapping, and leaves room to widen the TOS field   without impact to fielded systems.
INTEGER ACCESS   read only STATUS
"The general set of conditions that would cause the  selection  of  one multipath route (set of next hops for a given destination) is  referred to as 'policy'.
Unless the mechanism indicated by ipForwardPro  to specifies otherwise, the policy specifier is the IP TOS Field.
The encoding of IP TOS is as specified  by
Zero indicates the default path if no more  specific policy applies.
6 0 1 0 0
10 0 1 1 0
14 1 0 0 0
18 1 0 1 0
22 1 1 0 0
26 1 1 1 0
30 Protocols defining 'policy' otherwise must  ei  ther define a set of values which are valid for this  object  or
must  implement  an  integer  instanced  policy table for which this object's value acts as an index."
INTEGER ACCESS   read write STATUS
"The ifIndex value which identifies  the  local interface  through  which  the next hop of this route should be reached."
Note that local(3)  refers to  a route for which the next hop is the final destination
; remote(4) refers to  a  route  for which  the  next  hop is not the final destina  tion.
Setting this object to the value invalid(2) has the  effect  of  invalidating the corresponding entry in the ipForwardTable object.
the destination identified with said entry from the route iden  tified    with    said   entry.
It   is   an implementation specific matter  as  to  whether the agent removes an invalidated entry from the table.
must be prepared to receive tabular information from agents that corresponds to entries not current
Proper interpretation of such en  tries requires examination of the relevant  ip  ForwardType object.
"The routing mechanism via which this route was learned.
Inclusion of values for gateway rout
ing protocols is not  intended  to  imply  that hosts should support those protocols."
INTEGER ACCESS   read only STATUS
"The number of seconds  since  this  route  was last  updated  or  otherwise  determined  to be correct.
Note that no semantics of  `too  old' can  be implied except through knowledge of the routing  protocol  by  which
"A reference to MIB definitions specific to the particular  routing protocol which is responsi  ble for this route, as determined by the  value specified  in the route's ipForwardProto value.
If this information is not present,  its  value should be set to the OBJECT IDENTIFIER { 0 0 }, which is a syntactically valid object  identif  ier, and any implementation conforming to ASN.1 and the Basic Encoding Rules
must  be  able  to generate and recognize this value."
INTEGER ACCESS   read write STATUS
"The Autonomous System Number of the Next  Hop.
When  this  is  unknown  or not relevant to the protocol indicated by ipForwardProto, zero.
INTEGER ACCESS   read write STATUS
The  semantics of this metric are determined by the routing protocol specified in  the  route's ipForwardProto  value.
If  this metric is not used, its value should be set to  1.
INTEGER ACCESS   read write STATUS
An alternate routing metric  for  this  route.
The  semantics of this metric are determined by the routing protocol specified in  the  route's ipForwardProto  value.
If  this metric is not used, its value should be set to  1.
} ipForwardMetric3 OBJECT TYPE SYNTAX
INTEGER ACCESS   read write STATUS
An alternate routing metric  for  this  route.
The  semantics of this metric are determined by the routing protocol specified in  the  route's ipForwardProto  value.
If  this metric is not used, its value should be set to  1.
INTEGER ACCESS   read write STATUS
An alternate routing metric  for  this  route.
The  semantics of this metric are determined by the routing protocol specified in  the  route's ipForwardProto  value.
If  this metric is not used, its value should be set to  1.
INTEGER ACCESS   read write STATUS
An alternate routing metric  for  this  route.
The  semantics of this metric are determined by the routing protocol specified in  the  route's ipForwardProto  value.
If  this metric is not used, its value should be set to  1.
Security Considerations Security issues are not discussed in this memo.
