- title: __initial_text__
  contents:
  - ' Digital Signatures for the v1.0 Internet Open Trading Protocol (IOTP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   A syntax and procedures are described for the computation and\n\
    \   verification of digital signatures for use within Version 1.0 of the\n   Internet\
    \ Open Trading Protocol (IOTP).\n"
- title: Acknowledgment
  contents:
  - "Acknowledgment\n   This document is based on work originally done on general\
    \ XML digital\n   signatures by:\n     Richard Brown of GlobeSet, Inc. <rdbrown@GlobeSet.com>\n\
    \   Other contributors to the design of the IOTP DSIG DTD include, in\n   alphabetic\
    \ order:\n     David Burdett, Commerce One\n     Andrew Drapp, Hitachi\n     Donald\
    \ Eastlake 3rd, Motorola, Inc.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction............................................3\n\
    \   2. Objective and Requirements..............................3\n   3. Signature\
    \ Basics........................................3\n   3.1 Signature Element......................................3\n\
    \   3.2 Digest Element.........................................4\n   3.3 Originator\
    \ and Recipient Information Elements..........5\n   3.4 Algorithm Element......................................5\n\
    \   4. Detailed Signature Syntax...............................6\n   4.1 Uniform\
    \ Resource Names.................................6\n   4.2 IotpSignatures.........................................6\n\
    \   4.3 Signature Component....................................6\n   4.3.1 Signature............................................6\n\
    \   4.3.2 Manifest.............................................7\n   4.3.3 Algorithm............................................9\n\
    \   4.3.4 Digest...............................................9\n   4.3.5 Attribute...........................................10\n\
    \   4.3.6 OriginatorInfo......................................11\n   4.3.7 RecipientInfo.......................................11\n\
    \   4.3.8 KeyIdentifier.......................................12\n   4.3.9 Parameter...........................................13\n\
    \   4.4 Certificate Component.................................13\n   4.4.1 Certificate.........................................13\n\
    \   4.4.2 IssuerAndSerialNumber...............................14\n   4.5 Common\
    \ Components.....................................15\n   4.5.1 Value...............................................15\n\
    \   4.5.2 Locator.............................................15\n   5. Supported\
    \ Algorithms...................................16\n   5.1 Digest Algorithms.....................................16\n\
    \   5.1.1 SHA1................................................16\n   5.1.2 DOM-HASH............................................17\n\
    \   5.2 Signature Algorithms..................................17\n   5.2.1 DSA.................................................17\n\
    \   5.2.2 HMAC................................................18\n   5.2.3 RSA.................................................20\n\
    \   5.2.4 ECDSA...............................................20\n   6. Examples...............................................21\n\
    \   7. Signature DTD..........................................23\n   8. Security\
    \ Considerations................................25\n   References................................................26\n\
    \   Authors' Addresses........................................28\n   Full Copyright\
    \ Statement..................................29\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Internet Open Trading Protocol (IOTP) provides a payment\
    \ system\n   independent interoperable framework for Internet commerce as\n  \
    \ documented in [RFC 2801]. All IOTP messages are XML documents. XML,\n   the\
    \ Extensible Markup Language [XML], is a syntactical standard\n   promulgated\
    \ by the World Wide Web Consortium. XML is intended\n   primarily for structuring\
    \ data exchanged and served over the World\n   Wide Web.\n   Although IOTP assumes\
    \ that any payment system used with it provides\n   its own security, there are\
    \ numerous cases where IOTP requires\n   authentication and integrity services\
    \ for portions of the XML\n   messages it specifies.\n"
- title: 2. Objective and Requirements
  contents:
  - "2. Objective and Requirements\n   This document covers how digital signatures\
    \ may be used with XML\n   documents to provide authentication and tamper-proof\
    \ protocol\n   messages specifically for Version 1.0 of the IOTP protocol. The\n\
    \   reader should recognize that an effort towards general XML digital\n   signatures\
    \ exists but is unlikely to produce its final result in time\n   for IOTP Version\
    \ 1.0.  Future versions of IOTP will probably adopt by\n   reference the results\
    \ of this general XML digital signature effort.\n   The objective of this document\
    \ is to propose syntax and procedures\n   for the computation and verification\
    \ of digital signatures applicable\n   to Version 1.0 IOTP protocol messages,\
    \ providing for:\n   -- Authentication of IOTP transactions\n   -- Provide a means\
    \ by which an IOTP message may be made \"tamper-\n      proof\", or detection\
    \ of tampering is made evident\n   -- Describe a set of available digest and signature\
    \ algorithms at\n      least one of which is mandatory to implement for interoperability\n\
    \   -- Easily integrate within the IOTP 1.0 Specification\n   -- Provide lightweight\
    \ signatures with minimal redundancy\n   -- Allow signed portions of IOTP message\
    \ to be \"forwarded\" to another\n      trading roles with different signature\
    \ algorithms than the\n      original recipient\n"
- title: 3. Signature Basics
  contents:
  - '3. Signature Basics

    '
- title: 3.1 Signature Element
  contents:
  - "3.1 Signature Element\n   This specification consists primarily of the definition\
    \ of an XML\n   element known as the Signature element. This element consists\
    \ of two\n   sub-elements. The first one is a set of authenticated attributes,\n\
    \   known as the signature Manifest, which comprises such things as a\n   unique\
    \ reference to the resources being authenticated and an\n   indication of the\
    \ keying material and algorithms being used. The\n   second sub-element consists\
    \ of the digital signature value.\n   <Signature>\n           <Manifest>\n   \
    \                (resource information block)\n                   (originator\
    \ information block)\n                   (recipient information block)\n     \
    \              (other attributes)\n                   (signature algorithms information\
    \ block)\n           </Manifest>\n           <Value encoding 'encoding scheme'>\n\
    \                   (encoded signature value)\n           <Value>\n   </Signature>\n\
    \   The digital signature is not computed directly from the pieces of\n   information\
    \ to be authenticated. Instead, the digital signature is\n   computed from a set\
    \ of authenticated attributes (the Manifest), which\n   include references to,\
    \ and a digests of, those pieces of information.\n   The authentication is therefore\
    \ \"indirect\".\n"
- title: 3.2 Digest Element
  contents:
  - "3.2 Digest Element\n   The Digest element consists of a unique and unambiguous\
    \ reference to\n   the XML resources being authenticated. It is constructed of\
    \ a locator\n   and the digest value data itself. The Digest algorithm is referred\
    \ to\n   indirectly via a DigestAlgorithmRef, so that Digest algorithms may be\n\
    \   shared by multiple resources.\n   <Digest DigestAlgorithmRef='D.1'>\n    \
    \   <Locator href='resource locator'/>\n       <Value>\n            (Digest value)\n\
    \       </Value>\n   </Digest>\n   The resource locator is implemented as a simple\
    \ XML Link [XLink].\n   This not only provides a unique addressing scheme for\
    \ internal and\n   external resources, but also facilitates authentication of\
    \ composite\n   documents.\n"
- title: 3.3 Originator and Recipient Information Elements
  contents:
  - "3.3 Originator and Recipient Information Elements\n   The purpose of the Originator\
    \ and Recipient information elements is\n   to provide identification and keying\
    \ material for these respective\n   parties.\n   <OriginatorInfo>\n       (identification\
    \ information block)\n       (keying material information block)\n   </OriginatorInfo>\n\
    \   <RecipientInfo>\n       (identification information block)\n       (keying\
    \ material information block)\n   </RecipientInfo>\n   The actual content of these\
    \ two elements depends on the\n   authentication scheme being used and the existence\
    \ or non-existence\n   of a prior relationship between the parties. In some circumstances,\n\
    \   it may be quite difficult to distinguish between identification and\n   keying\
    \ material information. A unique reference to a digital\n   certificate provides\
    \ for both. This may also stand true for an\n   account number when a prior relationship\
    \ exists between the parties.\n   The Originator information element is mandatory.\
    \ Depending on the\n   existence or non-existence of a prior relationship with\
    \ the\n   recipient, this block either refers to a public credential such as a\n\
    \   digital certificate or displays a unique identifier known by the\n   recipient.\n\
    \   The Recipient information element may be used when a document\n   contains\
    \ multiple signature information blocks, each being intended\n   for a particular\
    \ recipient.  A unique reference in the Recipient\n   information block helps\
    \ the recipients identify their respective\n   Signature information block.\n\
    \   The Recipient information element may also be used when determination\n  \
    \ of the authentication key consists of a combination of keying\n   material provided\
    \ by both parties. This would be the case, for\n   example, when establishing\
    \ a key by means of Diffie Hellman\n   [Schneier] Key Exchange algorithm.\n"
- title: 3.4 Algorithm Element
  contents:
  - "3.4 Algorithm Element\n   The Algorithm element is a generalized place to put\
    \ any type of\n   algorithm used within the signed IOTP message. The Algorithm\
    \ may be a\n   Signature algorithm or a Digest algorithm.  Each algorithm contains\n\
    \   parameters specific to the algorithm used.\n      <Algorithm type='digest'\
    \ ID='12'>\n          (algorithm information block)\n      </Algorithm>\n   Algorithms\
    \ are required to contain an ID which allows for indirect\n   reference to them\
    \ from other places in the XML signature.\n"
- title: 4. Detailed Signature Syntax
  contents:
  - '4. Detailed Signature Syntax

    '
- title: 4.1 Uniform Resource Names
  contents:
  - "4.1 Uniform Resource Names\n   To prevent potential name conflicts in the definition\
    \ of the numerous\n   type qualifiers considered herein, this specification uses\
    \ Uniform\n   Resource Names  [RFC 2141].\n"
- title: 4.2 IotpSignatures
  contents:
  - "4.2 IotpSignatures\n   The IotpSignatures element is the top-level element in\
    \ an IOTP\n   signature block. It consists of a collection of Signature elements,\n\
    \   and an optional set of Certificates.\n   <!ELEMENT IotpSignatures (Signature+,\
    \ Certificate*) >\n   <!ATTLIST IotpSignatures\n           ID             ID \
    \           #IMPLIED >\n   Content Description\n   Signature: A collection of\
    \ Signature elements.\n   Certificate: Zero or more certificates used for signing\n\
    \   Attributes Description\n   ID: Element identifier that may be used to reference\
    \ the entire\n   Signature element from a Resource element when implementing\n\
    \   endorsement.\n"
- title: 4.3 Signature Component
  contents:
  - '4.3 Signature Component

    '
- title: 4.3.1 Signature
  contents:
  - "4.3.1 Signature\n   The Signature element constitutes the majority of this specification.\n\
    \   It is comprised of two sub-elements. The first one is a set of\n   attributes,\
    \ known as the Manifest, which actually constitutes the\n   authenticated part\
    \ of the document.  The second sub-element consists\n   of the signature value\
    \ or values.\n   The Value element contained within the Signature element is the\n\
    \   encoded form of the signature of the Manifest element, and thus\n   provides\
    \ the verification of the Manifest.\n   The process for generating the signed\
    \ value is a multi-step process,\n   involving a canonicalization algorithm, a\
    \ digest algorithm, and a\n   signature algorithm.\n   First, the Manifest is\
    \ canonicalized with an algorithm specified\n   within the Algorithm element of\
    \ the Manifest. The canonicalized form\n   removes any inconsistencies in white\
    \ space introduced by XML parsing\n   engines.\n   This canonicalized form is\
    \ then converted into a digest form which\n   uniquely identifies the canonicalized\
    \ document. Any slight\n   modification in the original document will result in\
    \ a very different\n   digest value.\n   Finally, the digest is then signed using\
    \ a public/symmetric key\n   algorithm which digitally stamps the digest (with\
    \ the certificate of\n   the signer if available). The final signed digest is\
    \ the value which\n   is stored within the Signature's Value element.\n   <!ELEMENT\
    \ Signature (Manifest, Value+) >\n   <!ATTLIST Signature\n           ID      \
    \        ID            #IMPLIED >\n   Content Description\n   Manifest: A set\
    \ of attributes that actually constitutes the\n   authenticated part of the document.\n\
    \   Value:  One or more encodings of signature values. Multiple values\n   allow\
    \ for a multiple algorithms to be supported within a single\n   signature component.\n\
    \   Attributes Description\n   ID: Element identifier that may be used to reference\
    \ the Signature\n   element from a Resource element when implementing endorsement.\n"
- title: 4.3.2 Manifest
  contents:
  - "4.3.2 Manifest\n   The Manifest element consists of a collection of attributes\
    \ that\n   specify such things as references to the resources being\n   authenticated\
    \ and an indication of the keying material and algorithms\n   to be used.\n  \
    \ <!ELEMENT Manifest\n           (       Algorithm+,\n                   Digest+,\n\
    \                   Attribute*,\n                   OriginatorInfo,\n        \
    \           RecipientInfo+,\n           )\n   <!ATTLIST Manifest\n           LocatorHRefBase\
    \          CDATA        #IMPLIED\n   >\n   Content Description\n   Algorithm:\
    \ A list of algorithms used for signing, digest computation,\n   and canonicalization.\n\
    \   Digest: A list of digests of resources to be authentication and\n   signed.\n\
    \   Attribute: Optional element that consists of a collection of\n   complementary\
    \ attributes to be authenticated.\n   OriginatorInfo: Element that provides identification\
    \ and keying\n   material information related to the originator.\n   RecipientInfo:\
    \ Optional element that provides identification and\n   keying material information\
    \ related to the recipient.\n   Attributes Description\n   LocatorHrefBase: The\
    \ LocatorHrefBase provides a similar construct to\n   the HTML HREFBASE attribute\
    \ and implicitly sets all relative URL\n   references within the Manifest to be\
    \ relative to the HrefBase. For\n   example, the IOTP Manifest may contain:\n\
    \   <Manifest LocatorHrefBase='iotp:<globally-unique-tid>'>\n   And subsequent\
    \ Locators may be:\n   <Locator href='C.9'>\n   An implementation should concatenate\
    \ the two locator references with\n   \"#\" to create the entire URL. See definition\
    \ of the Locator attribute\n   on the Digest element for more detail.\n"
- title: 4.3.3 Algorithm
  contents:
  - "4.3.3 Algorithm\n   This specification uses an Algorithm data type which indicates\
    \ many\n   different types of algoirithms. The Algorithm element allows for\n\
    \   specification of sub-algorithms as parameters of the primary\n   algorithm.\
    \ This is performed via a parameter within the algorithm\n   that provides a reference\
    \ to another Algorithm. An example of this is\n   shown in the Parameter section.\n\
    \   <!ELEMENT Algorithm (Parameter*) >\n   <!ATTLIST Algorithm\n           ID\
    \             ID                #REQUIRED\n           type     (digest|signature)\
    \      #IMPLIED\n           name           NMTOKEN           #REQUIRED >\n   Content\
    \ Description\n   Parameter: The contents of an Algorithm element consists of\
    \ an\n   optional collection of Parameter elements which are specified on a\n\
    \   per algorithm basis.\n   Attributes Description\n   ID: The ID of the algorithm\
    \ is used by the Digest and RecipientInfo\n   to refer to the signing or digest\
    \ algorithm used.\n   type: The type of algorithm, either a digest or signature.\
    \ This is\n   implied by the element to which the algorithm is referred. That\
    \ is,\n   if the DigestAlgorithmRef refers to an algorithm, it is implicit by\n\
    \   reference that the targeted algorithm is a digest.\n   name:  The type of\
    \ the algorithm expressed as a Uniform Resource\n   Name.\n"
- title: 4.3.4 Digest
  contents:
  - "4.3.4 Digest\n   The Digest element consists of the fingerprint of a given resource.\n\
    \   This element is constructed of two sub-elements. This first one\n   indicates\
    \ the algorithm to be used for computation of the\n   fingerprint. The second\
    \ element consists of the fingerprint value.\n   <!ELEMENT Digest (Locator, Value)\
    \ >\n   <!ATTLIST Digest\n           DigestAlgorithmRef       IDREF    #REQUIRED\n\
    \   >\n   Content Description\n   Locator: Contains a \"HREF\" or URL Locator\
    \ for the resources to be\n   fingerprinted. For use within IOTP a \"scheme\"\
    \ with the value \"iotp\"\n   may be used with the following structure:\n    \
    \ 'iotp:<globally-unique-tid>#<id-value>'.\n   This should be interpreted as referring\
    \ to an element with an ID\n   attribute that matches <id-value> in any IOTP Message\
    \ that has a\n   TransRefBlk Block with an IotpTransId that matches <globally-unique-\n\
    \   tid>.\n   If the LocatorHrefBase attribute is set on the Manifest element\
    \ of\n   which this Digest element is a child, then concatenate the value of\n\
    \   the LocatorHrefBase attribute with the value of the Locator attribute\n  \
    \ before identifying the element that is being referred to.\n   If the LocatorHrefBase\
    \ attribute is omitted, <globally-unique-tid>\n   should be interpreted as the\
    \ current IotpTransId, which is included\n   in the IOTP message which contains\
    \ the Manifest component.\n   Value: Encoding of the fingerprint value.\n   Attributes\
    \ Description\n   DigestAlgorithmRef: ID Reference of algorithm used for computation\
    \ of\n   the digest.\n"
- title: 4.3.5 Attribute
  contents:
  - "4.3.5 Attribute\n   The Attribute element consists of a complementary piece of\n\
    \   information, which shall be included in the authenticated part of the\n  \
    \ document. This element has been defined primarily for enabling some\n   level\
    \ of customization in the signature element. This is the area\n   where a specific\
    \ IOTP implementation may include custom attributes\n   which must be authenticated\
    \ directly. An Attribute element consists\n   of a value, a type, and a criticality.\n\
    \   At this time, no IOTP specific attributes are specified.\n   <!ELEMENT Attribute\
    \ ANY >\n   <!ATTLIST Attribute\n           type               NMTOKEN       \
    \    #REQUIRED\n           critical        ( true | false )     #REQUIRED\n  \
    \ >\n   Content Description\n   ANY: The actual value of an attribute depends\
    \ solely upon its type.\n   Attributes Description\n   type:  Type of the attribute.\n\
    \   critical: Boolean value that indicates if the attribute is critical\n   (true)\
    \ or not (false). A recipient shall reject a signature that\n   contains a critical\
    \ attribute that he does not recognize. However, an\n   unrecognized non-critical\
    \ attribute may be ignored.\n"
- title: 4.3.6 OriginatorInfo
  contents:
  - "4.3.6 OriginatorInfo\n   The OriginatorInfo element is used for providing identification\
    \ and\n   keying material information for the originator.\n   <!ELEMENT OriginatorInfo\
    \ ANY >\n   <!ATTLIST OriginatorInfo\n           OriginatorRef       NMTOKEN \
    \     #IMPLIED\n   >\n   Content Description\n   ANY:  Identification and keying\
    \ material information may consist of\n   ANY construct.  Such a definition allows\
    \ the adoption of\n   application-specific schemes.\n   Attributes Description\n\
    \   OriginatorRef: A reference to the IOTP Org ID of the originating\n   signer.\n"
- title: 4.3.7 RecipientInfo
  contents:
  - "4.3.7 RecipientInfo\n   The RecipientInfo element is used for providing identification\
    \ and\n   keying material information for the recipient. This element is used\n\
    \   either for enabling recognition of a Signature element by a given\n   recipient\
    \ or when determination of the authentication key consists of\n   the combination\
    \ of keying material provided by both the recipient and\n   the originator.\n\
    \   The RecipientInfo attributes provide a centralized location where\n   signatures,\
    \ algorithms, and certificates intended for a particular\n   recipient are specified.\n\
    \   The signature certificate reference ID MUST point to a certificate\n   object.\n\
    \   <!ELEMENT RecipientInfo ANY >\n   <!ATTLIST RecipientInfo\n           SignatureAlgorithmRef\
    \   IDREF        #REQUIRED\n           SignatureValueRef       IDREF        #IMPLIED\n\
    \           SignatureCertRef        IDREF        #IMPLIED\n           RecipientRefs\
    \           NMTOKENS     #IMPLIED\n   >\n   Content Description\n   ANY:  Identification\
    \ and keying material information may consist of\n   ANY construct.\n   Attributes\
    \ Description\n   SignatureAlgorithmRef: A reference to the signature algorithm\
    \ used to\n   sign the SignatureValueRef intended for this recipient. The signature\n\
    \   algorithm reference ID MUST point to a signature algorithm within the\n  \
    \ Manifest.\n   SignatureValueRef: A reference to the signature value for this\n\
    \   recipient. The signature value reference ID MUST point to a value\n   structure\
    \ directly included within a Manifest. This reference can be\n   omitted if the\
    \ application can specify the digest value.\n   SignatureCertRef: A reference\
    \ to the certificate used to sign the\n   Value pointed to by the SignatureValueRef.\
    \ This reference can be\n   omitted if the application can identify the certificate.\n\
    \   RecipientRefs: A list of references to the IOTP Org ID of the\n   recipients\
    \ this signature is intended for.\n"
- title: 4.3.8 KeyIdentifier
  contents:
  - "4.3.8 KeyIdentifier\n   The key identifier element can identify the shared public/symmetric\n\
    \   key identification between parties that benefit from a prior\n   relationship.\
    \ This element can be included in the ReceipientInfo\n   Element.\n   <!ELEMENT\
    \ KeyIdentifier EMPTY>\n   <!ATTLIST KeyIdentifier\n     value             CDATA\
    \        #REQUIRED\n   >\n"
- title: 4.3.9 Parameter
  contents:
  - "4.3.9 Parameter\n   A Parameter element provides the value of a particular algorithm\n\
    \   parameter, whose name and format have been specified for the\n   algorithm\
    \ considered.\n   <!ELEMENT Parameter ANY >\n   <!ATTLIST Parameter\n        \
    \   type       CDATA       #REQUIRED\n   >\n   For IOTP 1.0, the following parameter\
    \ type is standardized:\n   \"AlgorithmRef\".\n   An AlgorithmRef contains an\
    \ ID of a \"sub-Algorithm\" used when\n   computing a sequence of algorithms.\
    \ For example, a signature\n   algorithm actually signs a digest algorithm. To\
    \ specify a chain of\n   algorithms used to compute a signature, AlgorithmRef\
    \ parameter types\n   are used in the following manner:\n"
- title: <Algorithm ID='A1' type='digest' name='urn:ibm-com:dom-hash'>
  contents:
  - "<Algorithm ID='A1' type='digest' name='urn:ibm-com:dom-hash'>\n        <Parameter\
    \ type='AlgorithmRef'>A2</Parameter>\n"
- title: </Algorithm>
  contents:
  - '</Algorithm>

    '
- title: <Algorithm ID='A2' type='digest' name='urn:nist-gov:sha1'>
  contents:
  - '<Algorithm ID=''A2'' type=''digest'' name=''urn:nist-gov:sha1''>

    '
- title: </Algorithm>
  contents:
  - '</Algorithm>

    '
- title: <Algorithm ID='A3' type='signature' name='urn:rsasdi-com:rsa-encryption'>
  contents:
  - "<Algorithm ID='A3' type='signature' name='urn:rsasdi-com:rsa-encryption'>\n \
    \       <Parameter type='AlgorithmRef'>A1</Parameter>\n"
- title: </Algorithm>
  contents:
  - "</Algorithm>\n   Content Description\n   ANY:  The contents of a Parameter element\
    \ consists of ANY valid\n   construct, which is specified on a per algorithm per\
    \ parameter basis.\n   Attributes Description\n   type:  The type of the parameter\
    \ expressed as a free form string,\n   whose value is specified on a per algorithm\
    \ basis.\n"
- title: 4.4 Certificate Component
  contents:
  - '4.4 Certificate Component

    '
- title: 4.4.1 Certificate
  contents:
  - "4.4.1 Certificate\n   The Certificate element may be used for either providing\
    \ the value of\n   a digital certificate or specifying a location from where it\
    \ may be\n   retrieved.\n   <!ELEMENT Certificate\n   (       IssuerAndSerialNumber,\n\
    \           ( Value | Locator ) )\n   >\n   <!ATTLIST Certificate\n          \
    \ ID           ID           #IMPLIED\n           type         NMTOKEN      #REQUIRED\
    \ >\n   Content Description\n   IssuerAndSerialNumber:  Unique identifier of this\
    \ certificate. This\n   element has been made mandatory is order to prevent unnecessary\n\
    \   decoding during validation of a certificate chain. This feature also\n   helps\
    \ certificates caching, especially when the value is not directly\n   provided.\n\
    \   Value: Encoding of the certificate value. The actual value to be\n   encoded\
    \ depends upon the type of the certificate.\n   Locator: XML link element that\
    \ could be used for retrieving a copy of\n   the digital certificate. The actual\
    \ value being returned by means of\n   this locator depends upon the security\
    \ protocol being used.\n   Attributes Description\n   ID: Element identifier that\
    \ may be used to reference the Certificate\n   element from a RecipientInfo element.\n\
    \   type: Type of the digital certificate. This attribute is specified as\n  \
    \ a Universal Resource Name. Support for the X.509 version 3\n   certificate [X.509]\
    \ is mandatory in this specification if the\n   Certificate element is used. \
    \ The URN for such certificates is\n   \"urn:X500:X509v3\".\n"
- title: 4.4.2 IssuerAndSerialNumber
  contents:
  - "4.4.2 IssuerAndSerialNumber\n   The IssuerAndSerialNumber element identifies\
    \ a certificate, and\n   thereby an entity and a public key, by the name of the\
    \ certificate\n   issuer and an issuer-specific certificate identification.\n\
    \   <!ELEMENT IssuerAndSerialNumber EMPTY >\n   <!ATTLIST IssuerAndSerialNumber\n\
    \           issuer        CDATA         #REQUIRED\n           number        CDATA\
    \         #REQUIRED >\n   Attributes Description\n   issuer: Name of the issuing\
    \ certification authority.  See [RFC 2253]\n   for RECOMMENDED syntax.\n   number:\
    \ Issuer-specific certificate identification.\n"
- title: 4.5 Common Components
  contents:
  - '4.5 Common Components

    '
- title: 4.5.1 Value
  contents:
  - "4.5.1 Value\n   A value contains the \"raw\" data of a signature or digest algorithm,\n\
    \   usually in a base-64 encoded form. See [RFC 2045] for algorithm used\n   to\
    \ base-64 encode data.\n   <!ELEMENT Value ( #PCDATA ) >\n   <!ATTLIST Value\n\
    \           ID                 ID            #IMPLIED\n           encoding   \
    \   (base64|none)     'base64'\n   >\n   Content Description\n   PCDATA:  Content\
    \ value after adequate encoding.\n   Attributes Description\n   encoding:  This\
    \ attribute specifies the decoding scheme to be\n   employed for recovering the\
    \ original byte stream from the content of\n   the element. This document recognizes\
    \ the following two schemes:\n   none: the content has not been subject to any\
    \ particular encoding.\n   This does not preclude however the use of native XML\
    \ encoding such as\n   CDATA section or XML escaping.\n   base64: The content\
    \ has been encoded by means of the base64 encoding\n   scheme.\n"
- title: 4.5.2 Locator
  contents:
  - "4.5.2 Locator\n   The Locator element consists of simple XML link [XLink].  This\n\
    \   element allows unambiguous reference to a resource or fragment of a\n   resource.\n\
    \   <!ELEMENT Locator EMPTY>\n   <!ATTLIST Locator\n           xml:link      \
    \   CDATA        #FIXED         'simple'\n           href             CDATA  \
    \      #REQUIRED >\n   Attributes Description\n   xml:link: Required XML link\
    \ attribute that specifies the nature of\n   the link (simple in this case).\n\
    \   href: Locator value that may contains either a URI [RFC 2396], a\n   fragment\
    \ identifier, or both.\n"
- title: 5. Supported Algorithms
  contents:
  - "5. Supported Algorithms\n   The IOTP specification 1.0 requires the implementation\
    \ of the DSA,\n   DOM-HASH, SHA1, HMAC algorithms. Implementation of RSA is also\n\
    \   recommended.\n"
- title: 5.1 Digest Algorithms
  contents:
  - "5.1 Digest Algorithms\n   This specification contemplates two types of digest\
    \ algorithms, both\n   of which provide a digest string as a result:\n   Surface\
    \ string digest algorithms\n   These algorithms do not have any particular knowledge\
    \ about the\n   content being digested and operate on the raw content value. Any\n\
    \   changes in the surface string of a given content affect directly the\n   value\
    \ of the digest being produced.\n   Canonical digest algorithms\n   These algorithms\
    \ have been tailored for a particular content type and\n   produce a digest value\
    \ that depends upon the core semantics of such\n   content. Changes limited to\
    \ the surface string of a given content do\n   not affect the value of the digest\
    \ being produced unless they affect\n   the core semantic.\n"
- title: 5.1.1 SHA1
  contents:
  - "5.1.1 SHA1\n   Surface string digest algorithm designed by NIST and NSA for use\
    \ with\n   the Digital Signature Standard. This algorithm produces a 160-bit\n\
    \   hash value. This algorithm is documented in NIST FIPS Publication\n   180-1\
    \ [SHA1].\n   This algorithm does not require any parameter.\n   The SHA1 URN\
    \ used for this specification is \"urn:nist-gov:sha1\".\n"
- title: 5.1.2 DOM-HASH
  contents:
  - "5.1.2 DOM-HASH\n   XML canonical digest algorithm proposed by IBM Tokyo Research\n\
    \   Laboratory. This algorithm operates on the DOM representation of the\n   document\
    \ and provides an unambiguous means for recursive computation\n   of the hash\
    \ value of the nodes that constitute the DOM tree [RFC\n   2803]. This algorithm\
    \ has many applications such as computation of\n   digital signature and synchronization\
    \ of DOM trees. However, because\n   the hash value of an element is computed\
    \ from the hash values of the\n   inner elements, this algorithm is better adapted\
    \ to small documents\n   that do not require one-pass processing.\n   As of today,\
    \ this algorithm is limited to the contents of an XML\n   document and, therefore,\
    \ does not provide for authentication of the\n   internal or external subset of\
    \ the DTD.\n   The DOM-HASH algorithm requires a single parameter, which shall\n\
    \   include a surface string digest algorithm such as SHA1.\n   The DOM-HASH URN\
    \ used for this specification is \"urn:ibm-com:dom-\n   hash\".\n   The DOM-HASH\
    \ uses a surface-string digest algorithm for computation\n   of a fingerprint.\
    \ The SHA1 is recommended in this specification.\n   Example\n   <Algorithm name='urn:fips:sha1'\
    \ type='digest' ID='P.3'>\n   </Algorithm>\n   <Algorithm name='urn:ibm:dom-hash'\
    \ type='digest' ID='P.5'>\n     <Parameter type='AlgorithmRef'>P.3</Parameter>\n\
    \   </Algorithm>\n"
- title: 5.2 Signature Algorithms
  contents:
  - "5.2 Signature Algorithms\n   This specification uses the terminology of 'digital\
    \ signature' for\n   qualifying indifferently digital signature and message authentication\n\
    \   codes.  Thus, the signature algorithms contemplated herein include\n   public\
    \ key digital signature algorithms such as ECDSA and message\n   authentication\
    \ codes such as HMAC [RFC 2104].\n"
- title: 5.2.1 DSA
  contents:
  - "5.2.1 DSA\n   Public-key signature algorithm proposed by NIST for use with the\n\
    \   Digital Signature Standard. This standard is documented in NIST FIPS\n   Publication\
    \ 186 [DSS] and ANSI X9.30 [X9.30].\n   The DSA algorithm requires a single parameter,\
    \ which includes the\n   canonical digest algorithm to be used for computing the\
    \ fingerprint\n   of the signature Manifest.\n   The DSA URN used in this specification\
    \ is \"urn:nist-gov:dsa\".\n   The DSA uses a canonical or surface-string digest\
    \ algorithm for\n   computation of the Manifest fingerprint. The DOM-HASH is recommended\n\
    \   in this specification.\n   Signature Value Encoding:\n   The output of this\
    \ algorithm consists of a pair of integers usually\n   referred by the pair (r,\
    \ s). The signature value shall consist of the\n   concatenation of two octet-streams\
    \ that respectively result from the\n   octet-encoding of the values r and s.\
    \ Integer to octet-stream\n   conversion shall be done according to PKCS#1 [RFC\
    \ 2437] specification\n   with a k parameter equals to 20.\n   Example\n   <Algorithm\
    \ name='urn:nist-gov:dsa' type='signature' ID='P.3'>\n     <Parameter type='AlgorithmRef'>P.4</Parameter>\n\
    \   </Algorithm>\n   <Algorithm name='urn:ibm-com:dom-hash' type='digest' ID='P.4'>\n\
    \     <Parameter type='AlgorithmRef'>P.5</Parameter>\n   </Algorithm>\n   <Algorithm\
    \ name='urn:nist-gov:sha1' type='digest' ID='P.5'>\n   </Algorithm>\n"
- title: 5.2.2 HMAC
  contents:
  - "5.2.2 HMAC\n   Message Authentication Code proposed by H. Krawczyk et al., and\n\
    \   documented in [RFC 2104].\n   This specification adopts a scheme that differs\
    \ a bit from the common\n   usage of this algorithm -- computation of the MAC\
    \ is performed on the\n   hash of the contents being authenticated instead of\
    \ the actual\n   contents. Thence, the actual signature value output by the algorithm\n\
    \   might be depicted as follows:\n     SignatureValue = HMAC( SecretKey, H(Manifest))\n\
    \   This specification also considered HMAC output truncation such as\n   proposed\
    \ by Preneel and van Oorschot. In their paper [PV] these two\n   researchers have\
    \ shown some analytical advantages of truncating the\n   output of hash-based\
    \ MAC functions. Such output truncation is also\n   considered in the RFC document.\n\
    \   HMAC requires three parameters. The first one consists of a canonical\n  \
    \ digest algorithm. The second one consists of a hash function. The\n   last one\
    \ is optional and specifies the length in bit of the truncated\n   output. If\
    \ this last parameter is absent, no truncation shall occur.\n   The HMAC URN used\
    \ in this specification is \"urn:ietf-org:hmac\".\n   Canonical digest algorithm:\
    \ Canonical or surface-string digest\n   algorithm is to be used for computation\
    \ of the Manifest fingerprint.\n   The type of this parameter is set to \"AlgorithmRef\"\
    .  The recommended\n   value of this Parameter should be the ID reference for\
    \ the Algorithm\n   element DOM-HASH.\n   Hash-function: Hash function is to be\
    \ used to compute the MAC value\n   from the secret key and the fingerprint of\
    \ the signature Manifest.\n   The type of this parameter is set to \"HashAlgorithmRef\"\
    \ and the value\n   of this parameter should be set to the ID reference for the\
    \ Algorithm\n   element of SHA1.\n   Output-length: Length in bits of the truncated\
    \ MAC value. The type of\n   this parameter is set to \"KeyLength\" and the value\
    \ of this parameter\n   is set the length in bits of the truncated MAC value.\n\
    \   Signature Value Encoding:\n   The output of this algorithm can be assumed\
    \ as a large integer value.\n   The signature value shall consist of the octet-encoded\
    \ value of this\n   integer. Integer to octet-stream conversion shall be done\
    \ according\n   to PKCS#1 [RFC 2437] specification with a k parameter equals to\n\
    \   ((Hlen +7) mod8), Mlen being the length in bits of the MAC value.\n   Example\n\
    \   <Algorithm name='urn:ietf-org:hmac' type='signature' ID='P.3'>\n     <Parameter\
    \ type='AlgorithmRef'>P.4</Parameter>\n     <Parameter type='HashAlgorithmRef'>P.5</Parameter>\n\
    \     <Parameter type='KeyLength'>128</Parameter>\n   </Algorithm>\n   <Algorithm\
    \ name='urn:ibm-com:dom-hash' type='digest' ID='P.4'>\n     <Parameter type='AlgorithmRef'>P.5</Parameter>\n\
    \   </Algorithm>\n   <Algorithm name='urn:nist-gov:sha1' type='digest' ID='P.5'>\n\
    \   </Algorithm>\n"
- title: 5.2.3 RSA
  contents:
  - "5.2.3 RSA\n   Public-key signature algorithm proposed by RSA Laboratories and\n\
    \   documented in PKCS#1 [RFC 2437].\n   This specification adopts the RSA encryption\
    \ algorithm with padding\n   block type 01. For computing the signature value,\
    \ the signer shall\n   first digest the signature Manifest and then encrypt the\
    \ resulting\n   digest with his private key.\n   This signature algorithm requires\
    \ a single parameter, which consists\n   of the canonical digest algorithm to\
    \ be used for computing the\n   fingerprint of the signature Manifest.\n   Specifications\n\
    \   The RSA URN used in this specification is \"urn:rsasdi-com:rsa-\n   encription\"\
    .\n   The RSA uses a canonical or surface-string digest algorithm for\n   computation\
    \ of the Manifest fingerprint. The DOM-HASH is recommended\n   in this specification.\n\
    \   Signature Value Encoding:\n   The output of this algorithm consists of single\
    \ octet-stream. No\n   further encoding is required.\n   Example\n   <Algorithm\
    \ name='urn:rsasdi-com:rsa-encription'\n                                     \
    \  type='signature' ID='P.3'>\n     <Parameter type='AlgorithmRef'>P.4</Parameter>\n\
    \   </Algorithm>\n   <Algorithm name='urn:ibm-com:dom-hash' type='digest' ID='P.4'>\n\
    \     <Parameter type='AlgorithmRef'>P.5</Parameter>\n   </Algorithm>\n   <Algorithm\
    \ name='urn:nist-gov:sha1' type='digest' ID='P.5'>\n   </Algorithm>\n"
- title: 5.2.4 ECDSA
  contents:
  - "5.2.4 ECDSA\n   Public-key signature algorithm proposed independently by Neil\
    \ Koblitz\n   and Victor Miller. This algorithm is being proposed as an ANSI\n\
    \   standard and is documented in ANSI X9.62 standard proposal [X9.62]\n   and\
    \ IEEE/P1363 standard draft proposal [IEEE P1363].\n   The ECDSA algorithm requires\
    \ a single parameter, which consists of\n   the canonical digest algorithm to\
    \ be used for computing the\n   fingerprint of the signature Manifest.\n   Specifications\n\
    \   The ECDSA URN used in this specification is \"urn:ansi-org:ecdsa\".\n   The\
    \ ECDSA uses a canonical or surface-string digest algorithm for\n   computation\
    \ of the Manifest fingerprint. The DOM-HASH [RFC 2803] is\n   recommended in this\
    \ specification.\n   Signature Value Encoding:\n   The output of this algorithm\
    \ consists of a pair of integers usually\n   referred by the pair (r, s). The\
    \ signature value shall consist of the\n   concatenation of two octet-streams\
    \ that respectively result from the\n   octet-encoding of the values r and s.\
    \ Integer to octet-stream\n   conversion shall be done according to PKCS#1 [RFC\
    \ 2437] specification\n   with a k parameter equals to 20.\n   Example\n   <Algorithm\
    \ name='urn:ansi-org:ecdsa' type='signature' ID='P.3'>\n     <Parameter type='AlgorithmRef'>P.4</Parameter>\n\
    \   </Algorithm>\n   <Algorithm name='urn:ibm-com:dom-hash' type='digest' ID='P.4'>\n\
    \     <Parameter type='AlgorithmRef'>P.5</Parameter>\n   </Algorithm>\n   <Algorithm\
    \ name='urn:nist-gov:sha1' type='digest' ID='P.5'>\n   </Algorithm>\n"
- title: 6. Examples
  contents:
  - "6. Examples\n   The following is an example signed IOTP message:\n   <IotpMessage>\n\
    \      <TransRefBlk ID='M.1'>\n          <TransId\n              ID='M.2'\n  \
    \            version='1.0'\n              IotpTransID='19990809215923@www.iotp.org'\n\
    \              IotpTransType='BaselinePurchase'\n              TransTimeStamp='1999-08-09T12:58:40.000Z+9'>\n\
    \          </TransId>\n          <MsgId xml:lang='en' SoftwareID='Iotp wallet\
    \ version 1.0'>\n          </MsgId>\n      </TransRefBlk>\n      <IotpSignatures>\n\
    \          <Signature>\n              <Manifest>\n                  <Algorithm\
    \ name='urn:nist-gov:sha1'\n                                              type='digest'\
    \ ID='P.3'>\n                  </Algorithm>\n                  <Algorithm name='urn:nist-gov:dsa'\n\
    \                                              type='signature' ID='P.4'>\n  \
    \                    <Parameter type='AlgorithmRef'>P.5</Parameter>\n        \
    \          </Algorithm>\n                  <Algorithm name='urn:ibm-com:dom-hash'\n\
    \                                              type='digest' ID='P.5'>\n     \
    \                 <Parameter type='AlgorithmRef'>P.3</Parameter>\n           \
    \       </Algorithm>\n                  <Digest DigestAlgorithmRef='P.6'>\n  \
    \                    <Locator href='P.1'/>\n                      <Value>\n  \
    \                     xsqsfasDys2h44u4ehJDe54he5j4dJYTJ\n                    \
    \  </Value>\n                  </Digest>\n                  <OriginatorInfo\n\
    \                      <IssuerAndSerialNumber\n                       issuer='o=Iotp\
    \ Ltd., c=US'\n                       number='12345678987654'/>\n            \
    \      </OriginatorInfo>\n                  <RecipientInfo\n                 \
    \     SignatureAlgorithmRef='P.4'\n                  </RecipientInfo>\n      \
    \        </Manifest>\n              <Value>\n                   9dj28fjakA9sked0Ks01k2d7a0kgmf9dk19lf63kkDSs0\n\
    \              </Value>\n          </Signature>\n          <Certificate type='urn:X500:X509v3'>\n\
    \              <IssuerAndSerialNumber\n                   issuer='o=GlobeSet Inc.,\
    \ c=US'\n                   number='123456789102356'/>\n              <Value>\n\
    \               xsqsfasDys2h44u4ehJDe54he5j4dJYTJ=\n              </Value>\n \
    \        </Certificate>\n      </IotpSignatures>\n      <PayExchBlk ID='P.1'>\n\
    \          <PaySchemeData\n              ID='P.2'\n              PaymentRef='M.5'\n\
    \              ContentSoftwareId='abcdefg'>\n                  <PackagedContent\
    \ Name='FirstPiece'>\n                       snroasdfnas934k\n               \
    \   </PackagedContent>\n         </PaySchemeData>\n      </PayExchBlk>\n   </IotpMessage>\n"
- title: 7. Signature DTD
  contents:
  - "7. Signature DTD\n   <!--\n   ******************************************************\n\
    \   * IOTP SIGNATURES BLOCK DEFINITION                   *\n   ******************************************************\n\
    \   -->\n   <!ELEMENT IotpSignatures (Signature+ ,Certificate*) >\n   <!ATTLIST\
    \ IotpSignatures\n           ID        ID        #IMPLIED\n   >\n   <!--\n   ******************************************************\n\
    \   * IOTP SIGNATURE COMPONENT DEFINITION                *\n   ******************************************************\n\
    \   -->\n   <!ELEMENT Signature (Manifest, Value+) >\n   <!ATTLIST Signature\n\
    \           ID         ID        #IMPLIED\n   >\n   <!ELEMENT Manifest\n     \
    \      (       Algorithm+,\n                   Digest+,\n                   Attribute*,\n\
    \                   OriginatorInfo,\n                   RecipientInfo+\n     \
    \      )\n   >\n   <!ATTLIST Manifest\n           LocatorHRefBase       CDATA\
    \             #IMPLIED\n   >\n   <!ELEMENT Algorithm (Parameter*) >\n   <!ATTLIST\
    \ Algorithm\n           ID                     ID                #REQUIRED\n \
    \          type            (digest|signature)      #IMPLIED\n           name \
    \                 NMTOKEN           #REQUIRED\n   >\n   <!ELEMENT Digest (Locator,\
    \ Value) >\n   <!ATTLIST Digest\n           DigestAlgorithmRef    IDREF      \
    \       #REQUIRED\n   >\n   <!ELEMENT Attribute ANY >\n   <!ATTLIST Attribute\n\
    \           type                   NMTOKEN           #REQUIRED\n           critical\
    \            ( true | false )     #REQUIRED\n   >\n   <!ELEMENT OriginatorInfo\
    \ ANY >\n   <!ATTLIST OriginatorInfo\n           OriginatorRef           NMTOKEN\
    \          #IMPLIED\n   >\n   <!ELEMENT RecipientInfo ANY >\n   <!ATTLIST RecipientInfo\n\
    \           SignatureAlgorithmRef   IDREF            #REQUIRED\n           SignatureValueRef\
    \       IDREF            #IMPLIED\n           SignatureCertRef        IDREF  \
    \          #IMPLIED\n           RecipientRefs           NMTOKENS         #IMPLIED\n\
    \   >\n   <!ELEMENT KeyIdentifier EMPTY>\n   <!ATTLIST KeyIdentifier\n       \
    \    value                    CDATA           #REQUIRED\n   >\n   <!ELEMENT Parameter\
    \ ANY >\n   <!ATTLIST Parameter\n           type                     CDATA   \
    \        #REQUIRED\n   >\n   <!--\n   ******************************************************\n\
    \   * IOTP CERTIFICATE COMPONENT DEFINITION              *\n   ******************************************************\n\
    \   -->\n   <!ELEMENT Certificate\n     (  IssuerAndSerialNumber,  ( Value | Locator\
    \ ) )\n   >\n   <!ATTLIST Certificate\n           ID                        ID\
    \                #IMPLIED\n           type                      NMTOKEN      \
    \     #REQUIRED\n   >\n   <!ELEMENT IssuerAndSerialNumber EMPTY >\n   <!ATTLIST\
    \ IssuerAndSerialNumber\n           issuer                     CDATA         \
    \   #REQUIRED\n           number                     CDATA            #REQUIRED\n\
    \   >\n   <!--\n   ******************************************************\n  \
    \ * IOTP SHARED COMPONENT DEFINITION                   *\n   ******************************************************\n\
    \   -->\n   <!ELEMENT Value ( #PCDATA ) >\n   <!ATTLIST Value\n           ID \
    \              ID           #IMPLIED\n           encoding    (base64|none    \
    \  'base64'\n   >\n   <!ELEMENT Locator EMPTY>\n   <!ATTLIST Locator\n       \
    \    xml:link        CDATA         #FIXED        'simple'\n           href   \
    \         CDATA         #REQUIRED\n   >\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   This entire document concerns the IOTP v1 protocol\
    \ signature element\n   which is used for authentication.  See the Security Considerations\n\
    \   section of [RFC 2801] \"Internet Open Trading Protocol - IOTP, Version\n \
    \  1.0\".\n"
- title: References
  contents:
  - "References\n   [DSA]        Federal Information Processing Standards Publication\n\
    \                FIPS PUB 186, \"Digital Signature Standard(DSS)\", 1994,\n  \
    \              <http://csrc.nist.gov>\n   [IEEE P1363] IEEE P1363, \"Standard\
    \ Specifications for Public-Key\n                Cryptography\", Work in Progress,\
    \ 1997,\n                <http://stdsbbs.ieee.org/>\n   [PV]         Preneel,\
    \ B. and P. van Oorschot, \"Building fast MACs\n                from hash functions\"\
    , Advances in Cryptology --\n                CRYPTO'95 Proceedings, Lecture Notes\
    \ in Computer\n                Science, Springer-Verlag Vol.963, 1995, pp. 1-14.\n\
    \   [RFC 1321]   Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC\n     \
    \           1321, April 1992.\n   [RFC 2045]   Freed, N. and N. Borenstein, \"\
    Multipurpose Internet Mail\n                Extensions (MIME) Part One: Format\
    \ of Internet Message\n                Bodies\", RFC 2045, November 1996.\n  \
    \ [RFC 2046]   Freed N. and N. Borenstein, \"Multipurpose Internet Mail\n    \
    \            Extensions (MIME) Part Two: Media Types\", RFC 2046,\n          \
    \      November 1996.\n   [RFC 2104]   Krawczyk, H., Bellare, M. and R. Canetti,\
    \ \"HMAC: Keyed-\n                Hashing for Message Authentication\", RFC 2104,\
    \ February\n                1997.\n   [RFC 2141]   Moats, R., \"URN Syntax\",\
    \ RFC 2141, May 1997.\n   [RFC 2253]   Wahl, W., Kille, S. and T. Howes, \"Lightweight\
    \ Directory\n                Access Protocol (v3): UTF-8 String Representation\
    \ of\n                Distinguished Names\", RFC 2253, December 1997.\n   [RFC\
    \ 2396]   Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform\n         \
    \       Resource Identifiers (URI): Generic Syntax\", RFC 2396,\n            \
    \    August 1998.\n   [RFC 2437]   Kaliski, B. and J. Staddon, \"PKCS #1: RSA\
    \ Cryptography\n                Specifications, Version 2.0\", RFC 2437, October\
    \ 1998.\n   [RFC 2801]   Burdett, D., \"Internet Open Trading Protocol - IOTP,\n\
    \                Version 1.0\", RFC 2801, April 2000.\n   [RFC 2803]   Maruyama,\
    \ H., Tamura, K. and N. Uramot, \"Digest Values\n                for DOM (DOMHASH)\"\
    , RFC 2803, April 2000.\n   [Schneier]   Bruce Schneier, \"Applied Cryptography:\
    \ Protocols,\n                Algorithms, and Source Code in C\", 1996, John Wiley\
    \ and\n                Sons\n   [SHA1]       NIST FIPS PUB 180-1, \"Secure Hash\
    \ Standard,\" National\n                Institute of Standards and Technology,\
    \ U.S. Department\n                of Commerce, April 1995.\n   [X.509]      ITU-T\
    \ Recommendation X.509 (1997 E), \"Information\n                Technology - Open\
    \ Systems Interconnection - The\n                Directory:  Authentication Framework\"\
    , June 1997.\n   [X9.30]      ASC X9 Secretariat: American Bankers Association,\n\
    \                \"American National Standard for Financial Services -\n     \
    \           Public Key Cryptography Using Irreversible Algorithms\n          \
    \      for the Financial Services Industry - Part 1: The\n                Digital\
    \ Signature Algorithm(DSA)\", 1995.\n   [X9.62]      ASC X9 Secretariat: American\
    \ Bankers\n                Association,\"American National Standard for Financial\n\
    \                Services - Public Key Cryptography Using Irreversible\n     \
    \           Algorithms for the Financial Services Industry - The\n           \
    \     Elliptic Curve Digital Signature Algorithm (ECDSA)\",\n                Work\
    \ in Progress, 1997.\n   [XLink]      Eve Maler, Steve DeRose, \"XML Linking Language\
    \ (XLink)\",\n                <http://www.w3.org/TR/1998/WD-xlink-19980303>\n\
    \   [XML]        Tim Bray, Jean Paoli, C. M. Sperber-McQueen, \"Extensible\n \
    \               Markup Language (XML) 1.0\",\n                <http://www.w3.org/TR/1998/REC-xml-19980210>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   The authors of this document are:\n   Kent M. Davidson\n\
    \   Differential, Inc.\n   440 Clyde Ave.\n   Mountain View, CA 94043 USA\n  \
    \ EMail: kent@differential.com\n   Yoshiaki Kawatsura\n   Hitachi, Ltd.\n   890-12\
    \ Kashimada Saiwai Kawasaki,\n   Kanagawa 2128567 Japan\n   EMail: kawatura@bisd.hitachi.co.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
