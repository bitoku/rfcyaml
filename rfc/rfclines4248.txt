Abstract This document specifies the telnet Uniform Resource Identifier (URI) scheme that was originally specified in RFC 1738.
The purpose of this document is to allow RFC 1738 to be made obsolete while keeping the information about the scheme on standards track.
Introduction URIs were previously defined in [RFC2396], which was updated by [RFC3986].
Those documents also specify how to define schemes for URIs.
The first definition for many URI schemes appeared in [RFC1738].
Because that document has been made obsolete, this document copies the telnet URI scheme from it to allow that material to remain on standards track.
The Telnet URL scheme is used to designate interactive services that may be accessed by the Telnet protocol [STD8].
A telnet URL takes the form: telnet://<user>:<password>@<host>:<port>/
If :<port> is omitted, the port defaults to 23.
The :<password> can be omitted, as well as the whole <user>:<password> part.
Few implementations handle the user name and password very well, if at all.
This URL does not designate a data object, but rather an interactive service.
Remote interactive services vary widely in the means by which they allow remote logins; in practice, the <user> and <password>
supplied are advisory only: clients accessing a telnet URL merely advise the user of the suggested username and password.
Many RFCs have added various services to the Telnet protocol for better authentication, encryption of traffic, or both.
Those RFCs have not specified new URI schemes for Telnet to invoke those services (along the lines of "https" being a different URI scheme from "http").
Some modern telnet clients attempt to invoke those more secure versions of Telnet when resolving a "telnet" URL.
There are many security considerations for URI schemes discussed in [RFC3986].
The Telnet protocol normally uses passwords in the clear for authentication, and normally offers no privacy.
In normal telnet, both the user's identity and their password are exposed without any protection; after that, the contents of the entire Telnet session is exposed without any protection.
Many extensions have been made to Telnet to make it more secure in different ways.
In particular, [RFC2941] gives a framework based on a telnet option that many other security extensions have leveraged off of.
These extensions are certainly worthwhile methods for reducing the obvious problems with exposing the user's name, password, and plaintext of the session in the clear.
Although some modern telnet clients attempt to invoke those more  secure versions of Telnet when resolving a "telnet" URL, other telnet clients do not, so a user cannot rely on this type of security unless it is explicitly enabled and the results of the security negotiation are checked.
