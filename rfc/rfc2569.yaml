- title: __initial_text__
  contents:
  - '                 Mapping between LPD and IPP Protocols

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document defines an Experimental protocol for the Internet\n\
    \   community.  The IESG expects that a revised version of this protocol\n   will\
    \ be published as Proposed Standard protocol.  The Proposed\n   Standard, when\
    \ published, is expected to change from the protocol\n   defined in this memo.\
    \  In particular, it is expected that the\n   standards-track version of the protocol\
    \ will incorporate strong\n   authentication and privacy features, and that an\
    \ \"ipp:\" URL type will\n   be defined which supports those security measures.\
    \  Other changes to\n   the protocol are also possible.  Implementors are warned\
    \ that future\n   versions of this protocol may not interoperate with the version\
    \ of\n   IPP defined in this document, or if they do interoperate, that some\n\
    \   protocol features may not be available.\n   The IESG encourages experimentation\
    \ with this protocol, especially in\n   combination with Transport Layer Security\
    \ (TLS) [RFC 2246], to help\n   determine how TLS may effectively be used as a\
    \ security layer for\n   IPP.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents, which together describe\n\
    \   all aspects of a new Internet Printing Protocol (IPP). IPP is an\n   application\
    \ level protocol that can be used for distributed printing\n   using Internet\
    \ tools and technologies. This document gives some\n   advice to implementers\
    \ of gateways between IPP and LPD (Line Printer\n   Daemon). This document describes\
    \ the mapping between (1) the commands\n   and operands of the 'Line Printer Daemon\
    \ (LPD) Protocol' specified in\n   RFC 1179 and (2) the operations, operation\
    \ attributes and job\n   template attributes of the Internet Printing Protocol/1.0\
    \ (IPP).  One\n   of the purposes of this document is to compare the functionality\
    \ of\n   the two protocols.  Another purpose is to facilitate implementation\n\
    \   of gateways between LPD and IPP.\n   WARNING: RFC 1179 was not on the IETF\
    \ standards track.  While RFC\n   1179 was intended to record existing practice,\
    \ it fell short in some\n   areas.  However, this specification maps between (1)\
    \ the actual\n   current practice of RFC 1179 and (2) IPP.  This document does\
    \ not\n   attempt to map the numerous divergent extensions to the LPD protocol\n\
    \   that have been made by many implementers.\n   The full set of IPP documents\
    \ includes:\n      Design Goals for an Internet Printing Protocol [RFC2567]\n\
    \      Rationale for the Structure and Model and Protocol for the\n      Internet\
    \ Printing Protocol [RFC2568]\n      Internet Printing Protocol/1.0: Model and\
    \ Semantics [RFC2566]\n      Internet Printing Protocol/1.0: Encoding and Transport\
    \ [RFC2565]\n      Internet Printing Protocol/1.0: Implementors Guide [ipp-iig]\n\
    \      Mapping between LPD and IPP Protocols (this document)\n   The document,\
    \ \"Design Goals for an Internet Printing Protocol\", takes\n   a broad look at\
    \ distributed printing functionality, and it enumerates\n   real-life scenarios\
    \ that help to clarify the features that need to be\n   included in a printing\
    \ protocol for the Internet. It identifies\n   requirements for three types of\
    \ users: end users, operators, and\n   administrators. It calls out a subset of\
    \ end user requirements that\n   are satisfied in IPP/1.0. Operator and administrator\
    \ requirements are\n   out of scope for version 1.0.\n   The document, \"Rationale\
    \ for the Structure and Model and Protocol for\n   the Internet Printing Protocol\"\
    , describes IPP from a high level\n   view, defines a roadmap for the various\
    \ documents that form the suite\n   of IPP specifications, and gives background\
    \ and rationale for the\n   IETF working group's major decisions.\n   The document,\
    \ \"Internet Printing Protocol/1.0: Model and Semantics\",\n   describes a simplified\
    \ model with abstract objects, their attributes,\n   and their operations. It\
    \ introduces a Printer and a Job object. The\n   Job object supports multiple\
    \ documents per Job. It also addresses\n   security, internationalization, and\
    \ directory issues.\n   The document, \"Internet Printing Protocol/1.0: Encoding\
    \ and\n   Transport\", is a formal mapping of the abstract operations and\n  \
    \ attributes defined in the model document onto HTTP/1.1. It defines\n   the encoding\
    \ rules for a new Internet media type called '\n   application/ipp'.\n   This\
    \ document \"Internet Printing Protocol/1.0: Implementer's Guide\",\n   gives\
    \ advice to implementers of IPP clients and IPP objects.\n"
- title: TABLE OF CONTENTS
  contents:
  - "TABLE OF CONTENTS\n   1. Introduction.....................................................4\n\
    \   2. Terminology......................................................5\n  \
    \ 3. Mapping from LPD Commands to IPP Operations......................5\n   3.1\
    \ Print any waiting jobs..........................................6\n   3.2 Receive\
    \ a printer job...........................................6\n   3.2.1 Abort job.....................................................7\n\
    \   3.2.2 Receive control file..........................................7\n  \
    \ 3.2.3 Receive data file.............................................8\n   3.3\
    \ Send queue state (short)........................................8\n   3.4 Send\
    \ queue state (long)........................................10\n   3.5 Remove\
    \ jobs....................................................12\n   4. Mapping of\
    \ LPD Control File Lines to IPP Operation and Job\n      Template Attributes.............................................13\n\
    \   4.1 Required Job Functions.........................................13\n  \
    \ 4.2 Optional Job Functions.........................................14\n   4.3\
    \ Required Document Functions....................................14\n   4.4 Recommended\
    \ Document Functions.................................16\n   5. Mapping from IPP\
    \ operations to LPD commands.....................16\n   5.1 Print-Job......................................................16\n\
    \   5.2 Print-URI......................................................18\n  \
    \ 5.3 Validate-Job...................................................18\n   5.4\
    \ Create-Job.....................................................18\n   5.5 Send-Document..................................................18\n\
    \   5.6 Send-URI.......................................................18\n  \
    \ 5.7 Cancel-Job.....................................................18\n   5.8\
    \ Get-Printer-Attributes.........................................19\n   5.9 Get-Job-Attributes.............................................19\n\
    \   5.10 Get-Jobs......................................................20\n  \
    \ 6. Mapping of IPP Attributes to LPD Control File Lines.............20\n   6.1\
    \ Required Job Functions.........................................21\n   6.2 Optional\
    \ Job Functions.........................................21\n   6.3 Required Document\
    \ Functions....................................22\n   7. Security Considerations.........................................23\n\
    \   8. References......................................................23\n  \
    \ 9. Authors' Addresses..............................................24\n   10.Appendix\
    \ A: ABNF Syntax for response of Send-queue-state (short)25\n   11.Appendix B:\
    \ ABNF Syntax for response of Send-queue-state (long) 26\n   12.Appendix C: Unsupported\
    \ LPD functions...........................27\n   13.Full Copyright Statement........................................28\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The reader of this specification is expected to be familiar\
    \ with the\n   IPP Model and Semantics specification [RFC2566], the IPP Encoding\
    \ and\n   Transport [RF2565], and the Line Printer Daemon (LPD) protocol\n   specification\
    \ [RFC1179] as described in RFC 1179.\n   RFC 1179 was written in 1990 in an attempt\
    \ to document existing LPD\n   protocol implementations.  Since then, a number\
    \ of undocumented\n   extensions have been made by vendors to support functionality\n\
    \   specific to their printing solutions.  All of these extensions\n   consist\
    \ of additional control file commands.  This document does not\n   address any\
    \ of these vendor extensions.  Rather it addresses existing\n   practice within\
    \ the context of the features described by RFC 1179.\n   Deviations of existing\
    \ practice from RFC 1179 are so indicated.\n   Other LPD control file commands\
    \ in RFC 1179 are obsolete. They are\n   intended to work on \"text\" only formats\
    \ and are inappropriate for\n   many contemporary document formats that completely\
    \ specify each page.\n   This document does not address the support of these obsolete\n\
    \   features.\n   In the area of document formats, also known as page description\n\
    \   languages (PDL), RFC 1179 defines a fixed set with no capability for\n   extension.\
    \  Consequently, some new PDL's are not supported, and some\n   of those that\
    \ are supported are sufficiently unimportant now that\n   they have not been registered\
    \ for use with the Printer MIB [RFC1759]\n   and IPP [RFC2566] [RFC2565], though\
    \ they could be registered if\n   desired.  See the Printer MIB specification\
    \ [RFC1759] and/or the IPP\n   Model specification [RFC2566] for instructions\
    \ for registration of\n   document-formats with IANA.  IANA lists the registered\
    \ document-\n   formats as \"printer languages\".\n   This document addresses\
    \ the protocol mapping for both directions:\n   mapping of the LPD protocol to\
    \ the IPP protocol and mapping of the\n   IPP protocol to the LPD protocol. The\
    \ former is called the \"LPD-to-\n   IPP mapper\" and the latter is called the\
    \ \"IPP-to-LPD mapper\".\n   This document is an informational document that is\
    \ not on the\n   standards track.  It is intended to help implementers of gateways\n\
    \   between IPP and LPD.  It also provides an example, which gives\n   additional\
    \ insight into IPP.\n"
- title: 2. Terminology
  contents:
  - "2. Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n   RFC 1179 uses the word \"command\" in two contexts: for\
    \ over-the-wire\n   operations and for command file functions. This document SHALL\
    \ use\n   the word \"command\" for the former and the phrase \"functions\" for\
    \ the\n   latter.  The syntax of the LPD commands is given using ABNF\n   [RFC2234].\n\
    \   The following tokens are used in order to make the syntax more\n   readable:\n\
    \      LF stands for %x0A (linefeed)\n      SP stands for %x20.  (space)\n   \
    \   DIGIT stands for %x30-39 (\"0\" to \"9\")\n"
- title: 3. Mapping from LPD Commands to IPP Operations
  contents:
  - "3. Mapping from LPD Commands to IPP Operations\n   This section describes the\
    \ mapping from LPD commands to IPP\n   operations.  Each of the following sub-sections\
    \ appear as sub-\n   sections of section 5 of RFC 1179.\n   The following table\
    \ summarizes the IPP operation that the mapper uses\n   when it receives an LPD\
    \ command. Each section below gives more\n   detail:\n      LPD command      \
    \          IPP operation\n      print-any-waiting-jobs     ignore\n      receive-a-printer-job\
    \      Print-Job or Create-Job/Send-Document\n            send queue state   \
    \    Get-Printer-Attributes and Get-Jobs\n              (short or long)\n    \
    \        remove-jobs          Cancel-Job\n"
- title: 3.1 Print any waiting jobs
  contents:
  - "3.1 Print any waiting jobs\n   Command syntax:\n     print-waiting-jobs = %x01\
    \ printer-name LF\n   This command causes the LPD daemon check its queue and print\
    \ any\n   waiting jobs. An IPP printer handles waiting jobs without such a\n \
    \  nudge.\n   If the  mapper receives this LPD command, it SHALL ignore it and\
    \ send\n   no IPP operation.\n"
- title: 3.2 Receive a printer job
  contents:
  - "3.2 Receive a printer job\n   Command syntax:\n     receive-job = %x02 printer-name\
    \ LF\n   The control file and data files mentioned in the following paragraphs\n\
    \   are received via LPD sub-commands that follow this command. Their\n   mapping\
    \ to IPP commands and attributes is described later in this\n   section.\n   The\
    \ mapper maps the 'Receive a printer job' command to either:\n      - the Print-Job\
    \ operation which includes a single data file or\n      - the Create-Job operation\
    \ followed by one Send-Document operation\n        for each data file.\n   If\
    \ the IPP printer supports both Create-Job and Send-Document, and if\n   a job\
    \ consists of:\n      - a single data file, the mapper SHOULD use the Print-Job\n\
    \        operation, but MAY use the Create-Job and Send-Document\n        operations.\n\
    \      - more than one data file, the mapper SHALL use Create-Job\n        followed\
    \ by one Send-Document for each received LPD data file.\n   If the IPP printer\
    \ does not support both Create-Job and Send-\n   Document, and if a job consists\
    \ of:\n      - a single data file, the mapper SHALL use the PrintJob\n       \
    \ operation.\n      - more than one data file, the mapper SHALL submit each received\n\
    \        LPD data file as a separate Print-Job operation (thereby\n        converting\
    \ a single LPD job into multiple IPP jobs).\n   If the mapper uses Create-Job\
    \ and Send-Document, it MUST send the\n   Create-Job operation before it sends\
    \ any Send-Document operations\n   whether the LPD control file, which supplies\
    \ attributes for Create-\n   Job, arrives before or after all LPD data files.\n\
    \   NOTE: This specification does not specify how the mapper maps: the\n   LPD\
    \ Printer-name operand to the IPP \"printer-uri\" operation\n   attribute.\n \
    \  The following three sub-sections gives further details about the\n   mapping\
    \ from LPD receive-a-printer-job sub-commands.  Each of the\n   following subsections\
    \ appear as sub-sections of section 6 of RFC\n   1179.\n"
- title: 3.2.1 Abort job
  contents:
  - "3.2.1 Abort job\n   Sub-command syntax:\n      abort-job = %x1 LF\n   This sub-command\
    \ of receive-a-printer-job is intended to abort any\n   job transfer in process.\n\
    \   If the mapper receives this sub-command, it SHALL cancel the job that\n  \
    \ it is in the process of transmitting.\n   If the mapper is in the process of\
    \ sending a Print-Job or Create-Job\n   operation, it terminates the job either\
    \ by closing the connection, or\n   performing the Cancel-Job operation with the\
    \ job-uri that it received\n   from the Print-Job or Create-Job operation.\n \
    \  NOTE: This sub-command is implied if at any time the connection\n   between\
    \ the LPD client and server is terminated before an entire\n   print job has been\
    \ transferred via an LPD Receive-a-printer-job\n   request.\n"
- title: 3.2.2 Receive control file
  contents:
  - "3.2.2 Receive control file\n   Sub-command syntax:\n   receive-control-file =\
    \ %x2 number-of-bytes SP name-of-control-file LF\n   number-of-bytes = 1*DIGIT\n\
    \   name-of-control-file = \"cfA\" job-number client-host-name\n             \
    \             ; e.g. \"cfA123woden\"\n   job-number = 3DIGIT\n   client-host-name\
    \ = <a host name>\n   This sub-command is roughly equivalent to the IPP Create-Job\n\
    \   operation.\n   The mapper SHALL use the contents of the received LPD control\
    \ file to\n   create IPP operation attribute and job template attribute values\
    \ to\n   transmit with the Print-Job or Create-Job operation.\n"
- title: 3.2.3 Receive data file
  contents:
  - '3.2.3 Receive data file

    '
- title: 'Sub-command syntax:  %x3 number-of-bytes-in-data-file Name-of-data-file'
  contents:
  - "Sub-command syntax:  %x3 number-of-bytes-in-data-file Name-of-data-file\n   receive-data-file\
    \ = %x03 number-of-bytes SP name-of-data-file LF\n   number-of-bytes = 1*DIGIT\n\
    \   name-of-data-file = \"df\" letter job-number client-host-name\n          \
    \     ; e.g. \"dfA123woden for the first file\n   letter = %x41-5A /  %x61-7A\
    \    ;  \"A\" to \"Z\", \"a\" to \"z\"\n                                  ;  first\
    \ file is \"A\",\n                                  ; second \"B\", and  52nd\
    \ file is \"z\"\n   job-number = 3DIGIT\n   client-host-name = <a host name>\n\
    \   This sub-command is roughly equivalent to the IPP Send-Document\n   operation.\n\
    \   The mapper SHALL use the contents of the received LPD data file as\n   the\
    \ data to transmit with the IPP Print-Job or Send-Document\n   operation.\n  \
    \ Although RFC 1179 alludes to a method for passing an unspecified\n   length\
    \ data file by using an octet-count of zero, no implementations\n   support this\
    \ feature. The mapper SHALL reject a job that has a value\n   of 0 in the number-of-bytes\
    \ field.\n"
- title: 3.3 Send queue state (short)
  contents:
  - "3.3 Send queue state (short)\n   Command syntax:\n"
- title: send-queue-short  = %x03 printer-name *(SP(user-name / job-number)) LF
  contents:
  - "send-queue-short  = %x03 printer-name *(SP(user-name / job-number)) LF\n   The\
    \ mapper's response to this command includes information about the\n   printer\
    \ and its jobs. RFC 1179 specifies neither the information nor\n   the format\
    \ of its response. This document requires the mapper to\n   follow existing practice\
    \ as specified in this document.\n   The mapper SHALL produce a response in the\
    \ following format which\n   consists of a printer-status line optionally followed\
    \ by a heading\n   line, and a list of jobs. This format is defined by examples\
    \ below.\n   Appendix A contains the ABNF syntax.\n   For an printer with no jobs,\
    \ the response starts in column 1 and is:\n      no entries\n   For a printer\
    \ with jobs, an example of the response is:\n     killtree is ready and printing\n\
    \     Rank   Owner      Job          Files             Total Size\n     active\
    \ fred       123          stuff             1204 bytes\n     1st    smith    \
    \  124          resume, foo       34576 bytes\n     2nd    fred       125    \
    \      more              99 bytes\n     3rd    mary       126          mydoc \
    \            378 bytes\n     4th    jones      127          statistics.ps    \
    \ 4567 bytes\n     5th    fred       128          data.txt          9 bytes\n\
    \   The column numbers of above headings and job entries are:\n     |      | \
    \         |            |                 |\n     01     08         19        \
    \   35                63\n   The mapper SHALL produce each field above from the\
    \ following IPP\n   attribute:\n   LPD field IPP attribute          special conversion\
    \ details\n   printer-  printer-state and      For a printer-state of idle or\n\
    \   status    printer-state-reasons  processing, the mapper SHALL use\n      \
    \                              the formats above.  For stopped,\n            \
    \                        the mapper SHALL use printer-\n                     \
    \               state-reasons to produce an\n                                \
    \    unspecified format for the error.\n   rank      number-of-             the\
    \ mapper SHALL the format above\n             intervening-jobs\n   owner     job-originating-user-\
    \  unspecified conversion; job-\n             name                   originating-user-name\
    \ may be the\n                                    mapper's user-name\n   job \
    \      job-id                 the mapper shall use the job-id\n   files     document-name\
    \          the mapper shall create a comma\n                                 \
    \   separated list of the document-\n                                    names\
    \ and then truncate this list\n                                    to the first\
    \ 24 characters\n   total-    job-k-                 the mapper shall multiple\
    \ the\n   size      octets*copies*1024     value of job-k-octets by 1024 and\n\
    \                                    by the value of the \"copies\"\n        \
    \                            attribute.\n   A mapper SHOULD use the job attribute\
    \ number-of-intervening-jobs\n   rather than the job's position in a list of jobs\
    \ to determine 'rank'\n   because a Printer may omit jobs that it wants to keep\
    \ secret. If a\n   printer doesn't support the job attribute number-of-intervening-jobs,\n\
    \   a mapper MAY use the job's position.\n   Note: a Printer may set the value\
    \ of job-originating-user-name to the\n   authenticated user or to the value of\
    \ \"requesting-user-name\",\n   depending on the implementation and configuration.\
    \ For a gateway, the\n   authenticated user is the user-id of the gateway, but\
    \ the\n   \"requesting-user-name\" may contain the name of the user who is the\n\
    \   gateway's client.\n   In order to obtain the information specified above,\
    \ The LPD-to-IPP\n   mapper SHALL use the Get-Printer-Attributes operation to\
    \ get\n   printer-status and SHOULD use the Get-Jobs operation to get\n   information\
    \ about all of the jobs. If the LPD command contains job-\n   numbers or user-names,\
    \ the mapper MAY handle the filtering of the\n   response. If the LPD command\
    \ contains job-numbers but no user-names,\n   the mapper MAY use Get-Job-Attributes\
    \ on each converted job-number\n   rather than Get-Jobs. If the LPD command contains\
    \ a single user-name\n   but no job-numbers, the mapper MAY use Get-Jobs with\
    \ the my-jobs\n   option if the server supports this option and if the server\
    \ allows\n   the client to be a proxy for the LPD user.\n   NOTE: This specification\
    \ does not define how the mapper maps the LPD\n   Printer-name operand to the\
    \ IPP \"printer-uri\" operation attribute.\n"
- title: 3.4 Send queue state (long)
  contents:
  - "3.4 Send queue state (long)\n   Command syntax:\n   send-queue-long = %x04 printer-name\
    \ *(SP(user-name / job-number)) LF\n   The mapper's response to this command includes\
    \ information about the\n   printer and its jobs. RFC 1179 specifies neither the\
    \ information nor\n   the format of its response. This document requires the mapper\
    \ to\n   follow existing practice as specified in this document.\n   The mapper\
    \ SHALL produce a response in the following format which\n   consists of a printer-status\
    \ line optionally followed a list of jobs,\n   where each job consists of a blank\
    \ line, a description line, and one\n   line for each file. The description line\
    \ contains the user-name,\n   rank, job-number and host. This format is defined\
    \ by examples below.\n   Appendix B contain the ABNF syntax.\n   For an printer\
    \ with no jobs the response is:\n      no entries\n   For a printer with jobs,\
    \ an example of the response is:\n      killtree is ready and printing\n     \
    \ fred: active                        [job 123 tiger]\n              2 copies\
    \ of stuff           602 bytes\n      smith: 1st                          [job\
    \ 124 snail]\n              2 copies of resume          7088 bytes\n         \
    \     2 copies of foo             10200 bytes\n      fred: 2nd               \
    \            [job 125 tiger]\n              more                        99 bytes\n\
    \      The column numbers of above headings and job entries are:\n      |    \
    \   |                           |\n      01      09                          41\n\
    \   Although the format of the long form is different from the format of\n   the\
    \ short form, their fields are identical except for a) the copies\n   and host\
    \ fields which are only in the long form, and b) the \"size\"\n   field contains\
    \ the single copy size of each file.  Thus the sum of\n   the file sizes in the\
    \ \"size\" field times the value of the \"copies\"\n   field produces the value\
    \ for the \"Total Size\" field in the short\n   form. For fields other than the\
    \ host and copies fields, see the\n   preceding section.  For the host field see\
    \ the table below.\n      LPD field IPP attribute        special conversion details\n\
    \      host                           unspecified conversion; job-\n         \
    \                            originating-host may be the\n                   \
    \                  mapper's host\n      copies    copies               the mapper\
    \ shall assume the\n                                     value of copies precedes\
    \ the\n                                     string \"copies of \"; otherwise,\n\
    \                                     the value of copies is 1.\n   NOTE: This\
    \ specification does not define how the mapper maps the LPD\n   Printer-name operand\
    \ to the IPP printer-uri operation attribute.\n"
- title: 3.5 Remove jobs
  contents:
  - "3.5 Remove jobs\n   Command syntax:\n      remove-jobs = %x05 printer-name SP\
    \ agent\n                          *(SP(user-name / job-number)) LF\n   The agent\
    \ operand is the user-name of the user initiating the\n   remove-jobs command.\
    \ The special user-name 'root' indicates a\n   privileged user who can remove\
    \ jobs whose user-name differs from the\n   agent.\n   The mapper SHALL issue\
    \ one Cancel-Job operation for each job\n   referenced by the remove-jobs command.\
    \ Each job-number in the\n   remove-jobs command references a single job. Each\
    \ user-name in the\n   remove-jobs command implicitly references all jobs owned\
    \ by the\n   specified user. The active job is implicitly referenced when the\n\
    \   remove-jobs command contains neither job-numbers nor user-names. The\n   mapper\
    \ MAY use Get-Jobs to determine the job-uri of implicitly\n   referenced jobs.\n\
    \   The mapper SHALL not use the agent name of 'root' when end-users\n   cancel\
    \ their own jobs.  Violation of this rule creates a potential\n   security violation,\
    \ and it may cause the printer to issue a\n   notification that misleads a user\
    \ into thinking that some other\n   person canceled the job.\n   If the agent\
    \ of a remove-jobs command for a job J is the same as the\n   user name specified\
    \ with the 'P' function in the control file for job\n   J, then the mapper SHALL\
    \ ensure that the initiator of the Cancel-Job\n   command for job J is the same\
    \ as job-originating-user for job J.\n   Note: This requirement means that a mapper\
    \ must be consistent in who\n   the receiver perceives as the initiator of IPP\
    \ operations. The mapper\n   either acts as itself or acts on behalf of another\
    \ user. The latter\n   is preferable if it is possible. This consistency is necessary\n\
    \   between Print-Job/Create-Job and Cancel-Job in order for Cancel-Job\n   to\
    \ work, but it is also desirable for other operations. For example,\n   Get-Jobs\
    \ may give more information about job submitted by the\n   initiator of this operation.\n\
    \   NOTE: This specification does not define how the mapper maps: (1) the\n  \
    \ LPD printer-name to the IPP \"printer-uri\" or (2) the LPD job-number\n   to\
    \ the IPP \"job-uri\".\n   NOTE: This specification does not specify how the mapper\
    \ maps the LPD\n   user-name to the IPP job-originating-user because the mapper\
    \ may use\n   its own user-name with jobs.\n"
- title: 4. Mapping of LPD Control File Lines to IPP Operation and Job Template
  contents:
  - "4. Mapping of LPD Control File Lines to IPP Operation and Job Template\n   Attributes\n\
    \   This section describes the mapping from LPD control file lines\n   (called\
    \ 'functions') to IPP operation attributes and job template\n   attributes.  The\
    \ mapper receives the control file lines via the LPD\n   receive-control-file\
    \ sub-command.  Each of the LPD functions appear\n   as sub-sections of section\
    \ 7 of RFC 1179.\n   In LPD control file lines, the text operands have a maximum\
    \ length of\n   31 or 99 while IPP operation attribute and job template attribute\n\
    \   values have a maximum of 255 or 1023 octets, depending on the\n   attribute\
    \ syntax.  Therefore, no data is lost.\n   The mapper converts each supported\
    \ LPD function to its corresponding\n   IPP operation or job template attribute\
    \ as defined by tables in the\n   subsections that follow. These subsections group\
    \ functions according\n   to whether they are:\n      - required with a job,\n\
    \      - optional with a job\n      - required with each document.\n   In the\
    \ tables below, each LPD value is given a name, such as 'h'. If\n   an IPP value\
    \ uses the LPD value, then the IPP value column contains\n   the LPD name, such\
    \ as 'h' to denote this.  Otherwise, the IPP value\n   column specifies the literal\
    \ value.\n"
- title: 4.1 Required Job Functions
  contents:
  - "4.1 Required Job Functions\n   The following LPD functions MUST be in a received\
    \ LPD job. The mapper\n   SHALL receive each of the following LPD functions and\
    \ SHALL include\n   the information as a operation or job template attribute with\
    \ each\n   IPP job.  The functions SHOULD be in the order 'H', 'P' and they\n\
    \   SHOULD be the first two functions in the control file, but they MAY\n   be\
    \ anywhere in the control file and in any order:\n   LPD function            \
    \         IPP\n   name value   description         name          value\n   H \
    \   h       Originating Host                  h (in security layer)\n   P    u\
    \       User identification requesting-   u (and in security\n               \
    \                     user-name     layer)\n                none             \
    \   ipp-          'true'\n                                    attribute-\n   \
    \                                 fidelity\n   A mapper MAY send its own host\
    \ rather than the client's host, and a\n   mapper MAY send its own user-name as\
    \ user identification rather than\n   the client user. But in any case, the values\
    \ sent SHALL be compatible\n   with the Cancel-Job operation. The IPP operation\
    \ MAY have no way to\n   specify an originating host-name.\n   The mapper SHALL\
    \ include ipp-attribute-fidelity = true so that it\n   doesn't have to determine\
    \ which attributes a printer supports.\n"
- title: 4.2 Optional Job Functions
  contents:
  - "4.2 Optional Job Functions\n   The following LPD functions MAY be present in\
    \ a received job. These\n   functions SHOULD follow the required job functions\
    \ and precede the\n   document functions, but they MAY be anywhere in the control\
    \ file.\n   If the mapper receives such an LPD function, the mapper SHALL include\n\
    \   the corresponding IPP attribute with the value converted as specified\n  \
    \ in the table below.  If the mapper does not receive such an LPD\n   attribute,\
    \ the mapper SHALL NOT include the corresponding IPP\n   attribute, except the\
    \ 'L' LPD function whose absence has a special\n   meaning as noted in the table.\n\
    \   LPD function                  IPP\n   name value  description       name \
    \        value\n   J    j      Job name for      job-name     j\n            \
    \   banner page\n   L    l      Print banner page job-sheets   'standard' if 'L'\
    \ is\n                                              present\n                \
    \                              'none' if 'L' is present\n   M    m      Mail When\
    \ Printed              IPP has no notification\n                             \
    \                 mechanism. To support\n                                    \
    \          this LPD feature, the\n                                           \
    \   gateway must poll using\n                                              the\
    \ Get-Job-Attributes\n                                              operation.\n"
- title: 4.3 Required Document Functions
  contents:
  - "4.3 Required Document Functions\n   The mapper SHALL receive one set of the required\
    \ document functions\n   with each copy of a document, and SHALL include the converted\n\
    \   information as operation or job template attributes with each IPP\n   document.\n\
    \   If the control file contains required and recommended document\n   functions,\
    \ the required functions SHOULD precede the recommended ones\n   and if the job\
    \ contains multiple documents, all the functions for\n   each document are grouped\
    \ together as shown in the example of section\n   6.3 \"Required Document Functions\"\
    . However, the document functions\n   MAY be in any order.\n   LPD function  \
    \                 IPP\n   name value description         name             value\n\
    \   f     fff  Print formatted     document-format  'application/octet-\n    \
    \          file                                 stream'\n   l     fff  Print file\
    \ leaving  document-format  'application/octet-\n              control characters\
    \                   stream'\n   o     fff  Print Postscript    document-format\
    \  'application/PostScri\n              output file                          pt'\n\
    \                                  copies           see note\n   Note: In practice,\
    \ the 'f' LPD function is often overloaded. It is\n   often used with any format\
    \ of document data including PostScript and\n   PCL data.\n   Note: In practice,\
    \ the 'l' LPD function is often used as a rough\n   equivalent to the 'f' function.\n\
    \   Note: When RFC 1179 was written, no implementation supported the 'o'\n   function;\
    \ instead 'f' was used for PostScript. Windows NT now sends '\n   o' function\
    \ for a PostScript file.\n   Note: the value 'fff' of the 'f', 'l' and 'o' functions\
    \ is the name\n   of the data file as transferred, e.g. \"dfA123woden\".\n   If\
    \ the mapper receives any other lower case letter, the mapper SHALL\n   reject\
    \ the job because the document contains a format that the mapper\n   does not\
    \ support.\n   The mapper determines the number of copies by counting the number\
    \ of\n   occurrences of each 'fff' file with one of the lower-case functions\n\
    \   above. For example, if 'f dfA123woden' occurs 4 times, then copies\n   has\
    \ a value of 4. Although the LPD protocol allows the value of\n   copies to be\
    \ different for each document, the commands and the\n   receiving print systems\
    \ don't support this.\n"
- title: 4.4 Recommended Document Functions
  contents:
  - "4.4 Recommended Document Functions\n   The mapper SHOULD receive one set of the\
    \ recommended document\n   functions with each document, and SHOULD include the\
    \ converted\n   information as an operation or job template attribute with each\
    \ IPP\n   document. The functions SHOULD be received in the order 'U' and 'N',\n\
    \   but they MAY arrive in any order.\n   LPD function                       IPP\n\
    \   name  value   description          name              value\n   U     fff \
    \                         ignored\n   N     n       Name of source file  document-name\
    \     n\n   Note: the value 'fff' of the 'U' function is the name of the data\n\
    \   file as transferred, e.g. \"dfA123woden\".\n"
- title: 5. Mapping from IPP operations to LPD commands
  contents:
  - "5. Mapping from IPP operations to LPD commands\n   If the IPP-to-LPD mapper receives\
    \ an IPP operation, the following\n   table summarizes the LPD command that it\
    \ uses. Each section below\n   gives the detail. Each of the following sub-sections\
    \ appear as sub-\n   sections of section 3 in the document \"Internet Printing\n\
    \   Protocol/1.0: Model and Semantics\" [RFC2566].\n   IPP operation         \
    \            LPD command\n   Print-Job or Print-URI or         receive-a-printer-job\n\
    \   Create-Job/Send-Document/Send-URI and then print-any-waiting-jobs\n   Validate-Job\
    \                      implemented by the mapper\n   Cancel-Job              \
    \          remove-jobs\n   Get-Printer-Attributes, Get-Job-  send queue state\
    \ (short or long)\n   Attributes or Get-Jobs\n"
- title: 5.1 Print-Job
  contents:
  - "5.1 Print-Job\n   The mapper SHALL send the following commands in the order listed\n\
    \   below:\n      - receive-a-printer-job command\n      - both receive-control-file\
    \ sub-command and receive-data-file\n        sub-command (unspecified order, see\
    \ Note below)\n      - print-any-waiting-jobs command, except that if the mapper\
    \ is\n        sending a sequence of receive a printer-job commands, it MAY\n \
    \       omit sending print-any-waiting-jobs after any receive a\n        printer-job\
    \ command that is neither the first nor last command\n        in this sequence\n\
    \   Note: it is recommended that the order of the receive-control-file\n   subcommand\
    \ and the receive-data-file sub-command be configurable\n   because either order\
    \ fails for some print systems. Some print systems\n   assume that the control\
    \ file follows all data files and start\n   printing immediately on receipt of\
    \ the control file. When such a\n   print system tries to print a data file that\
    \ has not arrived, it\n   produces an error.  Other print systems assume that\
    \ the control file\n   arrives before the data files and start printing when the\
    \ first data\n   file arrives. Such a system ignores the control information,\
    \ such as\n   banner page or copies.\n   NOTE: This specification does not define\
    \ the mapping between the IPP\n   printer-uri and the LPD printer-name.\n   The\
    \ mapper SHALL send the IPP operation attributes and job template\n   attributes\
    \ received from the operation to the LPD printer by using\n   the LPD receive-control-file\
    \ sub-command. The mapper SHALL create the\n   LPD job-number for use in the control\
    \ file name, but the receiving\n   printer MAY, in some circumstances, assign\
    \ a different job-number to\n   the job.  The mapper SHALL create the IPP job-id\
    \ and IPP job-uri\n   returned in the Print-Job response.\n   NOTE: This specification\
    \ does not specify how the mapper determines\n   the LPD job-number, the IPP job-id\
    \ or the IPP job-uri of a job that\n   it creates nor does it specify the relationship\
    \ between the IPP job-\n   uri, IPP the job-id and the LPD job-number, both of\
    \ which the mapper\n   creates.  However, it is likely that the mapper will use\
    \ the same\n   integer value for both the LPD job-number and the IPP job-id, and\n\
    \   that the IPP Job-uri is the printer's URI with the job-id\n   concatenated\
    \ on the end.\n   The mapper SHALL send data received in the IPP operation to\
    \ the LPD\n   printer by using the LPD receive-data-file sub-command. The mapper\n\
    \   SHALL specify the exact number of bytes being transmitted in the\n   number-of-bytes\
    \ field of the receive-data-file sub-command. It SHALL\n   NOT use a value of\
    \ 0 in this field.\n   If the mapper, while it is transmitting a receive-a-printer-job\n\
    \   command or sub-command, either detects that its IPP connection has\n   closed\
    \ or receives a Cancel-Job operation, the mapper SHALL terminate\n   the LPD job\
    \ either with the abort sub-command or the remove-jobs\n   command.\n   This document\
    \ does not address error code conversion.\n"
- title: 5.2 Print-URI
  contents:
  - "5.2 Print-URI\n   The mapper SHALL handle this operation in the same way as a\
    \ Print-Job\n   operation except that it SHALL obtain data referenced by the\n\
    \   \"document-uri\" operation attribute and SHALL then treat that data as\n \
    \  if it had been received via a Print-Job operation.\n"
- title: 5.3 Validate-Job
  contents:
  - "5.3 Validate-Job\n   The mapper SHALL perform this operation directly. Because\
    \ LPD\n   supports very few attributes, this operation doesn't have much to\n\
    \   check.\n"
- title: 5.4 Create-Job
  contents:
  - "5.4 Create-Job\n   The mapper SHALL handle this operation like Print-Job, except:\n\
    \      - the mapper SHALL send the control file after it has received the\n  \
    \      last Send-Document or Send-URI operation because the control\n        file\
    \ contains all the document-name and document-format values\n        specified\
    \ in the Send-Document and Send-URI operations.\n      - the mapper SHALL perform\
    \ one receive-data-file sub-command for\n        each Send-Document or Send-URI\
    \ operation received and in the\n        same order received.\n      - the mapper\
    \ SHALL send the control file either before all data\n        files or after all\
    \ data files. (See the note in the section on\n        Print-Job about the dilemma\
    \ of sending the control file either\n        before or after the data files.\n"
- title: 5.5 Send-Document
  contents:
  - "5.5 Send-Document\n   The mapper performs a receive-data-file sub-command on\
    \ the received\n   data. See the preceding section 5.4 \"Create-Job\" for the\
    \ details.\n"
- title: 5.6 Send-URI
  contents:
  - "5.6 Send-URI\n   The mapper SHALL obtain the data referenced by the \"document-uri\"\
    \n   operation attribute, and SHALL then treat that data as if it had been\n \
    \  received via a Send-Document operation. See the preceding section 5.5\n   \"\
    Send-Document\" for the details.\n"
- title: 5.7 Cancel-Job
  contents:
  - "5.7 Cancel-Job\n   The mapper SHALL perform a remove-jobs command with the following\n\
    \   operation attributes:\n      - the printer is the one to which the job was\
    \ submitted, that is\n        the IPP printer-uri is mapped to an LPD printer-name\
    \ by the same\n        mechanism as for all commands\n      - the agent is the\
    \ authenticated user-name of the IPP client\n      - the job-number is the job-id\
    \ returned by the Print-Job command,\n        that is, the LPD job-number has\
    \ the same value as the IPP job-id\n        for likely implementations\n"
- title: 5.8 Get-Printer-Attributes
  contents:
  - "5.8 Get-Printer-Attributes\n   LPD severely limits the set of attributes that\
    \ the mapper is able to\n   return in its response for this operation. The mapper\
    \ SHALL support,\n   at most, the following printer attributes:\n      - printer-state\n\
    \      - printer-state-reasons\n   The mapper uses either the long or short form\
    \ of the \"send queue\n   state\" command.\n   The mapper SHALL assume that the\
    \ LPD response that it receives has\n   the format and information specified in\
    \ section 3.3 \"Send queue state\n   (short)\" and section 3.4 \"Send queue state\
    \ (long)\".  The mapper SHALL\n   determine the value of each requested attribute\
    \ by using the inverse\n   of the mapping specified in the two aforementioned\
    \ sections.\n   Note: the mapper can determine the response from the printer-status\n\
    \   line without examining the rest of the LPD response.\n"
- title: 5.9 Get-Job-Attributes
  contents:
  - "5.9 Get-Job-Attributes\n   LPD severely limits the set of attributes that the\
    \ mapper is able to\n   return in its response for this operation. The mapper\
    \ SHALL support,\n   at most, the following job attributes:\n      - number-of-intervening-jobs\n\
    \      - job-originating-user-name\n      - job-id\n      - document-name\n  \
    \    - job-k-octets\n      - copies\n   The mapper uses either the long or short\
    \ form of the \"send queue\n   state\" command. If it receives a request for the\
    \ \"job-k-octets\" or\n   \"copies\" and supports the attribute it SHALL use the\
    \ long form;\n   otherwise, it SHALL use the short form.\n   Note: the value of\
    \ job-k-octets is the value in the short form\n   divided by the number of \"\
    copies\" which is on the long form only. Its\n   value can also be determined\
    \ by adding the \"size\" field values for\n   each document in the job in the\
    \ long form.\n   The mapper SHALL assume that the LPD response that it receives\
    \ has\n   the format and information specified in section 3.3 \"Send queue state\n\
    \   (short)\" and section 3.4 \"Send queue state (long)\".  The mapper SHALL\n\
    \   determine the value of each requested attribute by using the inverse\n   of\
    \ the mapping specified in the two aforementioned sections.\n   Note: when the\
    \ mapper uses the LPD short form, it can determine the\n   response from the single\
    \ LPD line that pertains to the job specified\n   by the Get-Job-Attributes operation.\n\
    \   Note: the mapper can use its correspondence between the IPP job-id,\n   job-uri\
    \ and the LPD job-number.\n"
- title: 5.10 Get-Jobs
  contents:
  - "5.10 Get-Jobs\n   The mapper SHALL perform this operation in the same way as\
    \ Get-Job-\n   Attributes except that the mapper converts all the LPD job-lines,\
    \ and\n   the IPP response contains one job object for each job-line in the LPD\n\
    \   response.\n"
- title: 6. Mapping of IPP Attributes to LPD Control File Lines
  contents:
  - "6. Mapping of IPP Attributes to LPD Control File Lines\n   This section describes\
    \ the mapping from IPP operation attributes and\n   job template attributes to\
    \ LPD control file lines (called '\n   functions'). The mapper receives the IPP\
    \ operation attributes and job\n   template atributes via the IPP operation. \
    \ Each of the IPP operation\n   attributes and job template attributes appear\
    \ as sub-sections of\n   section 3 and 4.2 in the IPP model document [RFC2566].\n\
    \   In the context of LPD control file lines, the text operands have a\n   maximum\
    \ length of 31 or 99 while IPP operation attributes and job\n   template attributes\
    \ have a maximum of 255 or 1023 octets, depending\n   on the attribute syntax.\
    \  Therefore, there may be some data loss if\n   the IPP operation attribute and\
    \ job template attribute values exceed\n   the maximum length of the LPD equivalent\
    \ operands.\n   The mapper converts each supported IPP operation attribute and\
    \ job\n   template attribute to its corresponding LPD function as defined by\n\
    \   tables in the subsections that follow. These subsections group\n   functions\
    \ according to whether they are:\n      - required with a job,\n      - optional\
    \ with a job\n      - required with each document.\n   In the tables below, each\
    \ IPP value is given a name, such as 'h'. If\n   an LPD value uses the IPP value,\
    \ then the LPD value column contains\n   the IPP name, such as 'h' to denote this.\
    \  Otherwise, the LPD value\n   column specifies the literal value.\n"
- title: 6.1 Required Job Functions
  contents:
  - "6.1 Required Job Functions\n   The mapper SHALL include the following LPD functions\
    \ with each job,\n   and they SHALL have the specified value. They SHALL be the\
    \ first\n   functions in the control file and they SHALL be in the order \"H\"\
    \ and\n   then \"P\".\n   IPP                           LPD function\n   name\
    \                  value   name  value         description\n   (perhaps in security\
    \  h       H     gateway host  Originating Host\n   layer)\n   requesting-user-name\
    \  u       P     u             User identification\n   and in the security\n \
    \  layer\n   A mapper SHALL sends its own host rather than the client's host,\n\
    \   because some LPD systems require that it be the same as the host from\n  \
    \ which the remove-jobs command comes.  A mapper MAY send its own user\n   name\
    \ as user identification rather than the client user. But in any\n   case, the\
    \ values sent SHALL be compatible with the LPD remove-jobs\n   operation.\n"
- title: 6.2 Optional Job Functions
  contents:
  - "6.2 Optional Job Functions\n   The mapper MAY include the following LPD functions\
    \ with each job.\n   They SHALL have the specified value if they are sent. These\n\
    \   functions, if present, SHALL follow the require job functions, and\n   they\
    \ SHALL precede the required document functions.\n   IPP attribute           \
    \           LPD function\n   name           value               name value  description\n\
    \   job-name       j                   J    j      Job name for banner\n     \
    \                                             page\n   job-sheets     'standard'\
    \          L    u      Print banner page\n   job-sheets     'none'           \
    \               omit 'L' function\n   Note: 'L' has special meaning when it is\
    \ omitted. If 'J' is omitted,\n   some undefined behavior occurs with respect\
    \ to the banner page.\n"
- title: 6.3 Required Document Functions
  contents:
  - "6.3 Required Document Functions\n   The mapper SHALL include one set of the following\
    \ LPD functions with\n   each document, and they SHALL have the specified values.\
    \ For each\n   document, the order of the functions SHALL be 'f', 'U' and then\
    \ 'N',\n   where 'f' is replicated once for each copy.\n   IPP attribute     \
    \                 LPD function\n   name        value                  name value\
    \  description\n   document-   'application/octet-    f    fff    Print formatted\
    \ file\n   format      stream' or\n               'application/PostScript'\n \
    \  copies      c                                  replicate 'f' 'c'\n        \
    \                                          times\n   none                    \
    \           U    fff    Unlink data file\n   document-   n                   \
    \   N    n      Name of source file\n   name\n   Note: the value 'fff' of the\
    \ 'f' and 'U' functions is the name of the\n   data file as transferred, e.g.\
    \ \"dfA123woden\".\n   Note: the mapper SHALL not send the 'o' function\n   ISSUE:\
    \ should we register DVI, troff or ditroff?\n   If the mapper receives no \"ipp-attribute-fidelitybest-effort\"\
    \ or it\n   has a value of false, then the mapper SHALL reject the job if it\n\
    \   specifies attributes or attribute values that are not among those\n   supported\
    \ in the above tables.\n   Below is an example of the minimal control file for\
    \ a job with three\n   copies of two files 'foo' and 'bar':\n      H tiger\n \
    \     P jones\n      f dfA123woden\n      f dfA123woden\n      f dfA123woden\n\
    \      U dfA123woden\n      N foo\n      f dfB123woden\n      f dfB123woden\n\
    \      f dfB123woden\n      U dfB123woden\n      N bar\n"
- title: 7. Security Considerations
  contents:
  - "7. Security Considerations\n   There are no security issues beyond those covered\
    \ in the IPP Encoding\n   and Transport document [RFC2565], the IPP model document\
    \ [RFC2566]\n   and the LPD document [RFC1179].\n"
- title: 8. References
  contents:
  - "8. References\n   [ipp-iig] Hasting, T., et al., \"Internet Printing Protocol/1.0:\n\
    \             Implementer's Guide\", Work in Progress.\n   [RFC1759] Smith, R.,\
    \ Wright, F., Hastings, T., Zilles, S., and J.\n             Gyllenskog, \"Printer\
    \ MIB\", RFC 1759, March 1995.\n   [RFC1179] McLaughlin, L., \"Line Printer Daemon\
    \ Protocol\", RFC 1179,\n             August 1990.\n   [RFC2119] Bradner, S. \"\
    Key words for use in RFCs to Indicate\n             Requirement Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [RFC2234] D. Crocker et al., \"Augmented BNF for\
    \ Syntax\n             Specifications:  ABNF\", RFC 2234, November 1997.\n   [RFC2565]\
    \ Herriot, R., Butler, S., Moore, P. and R. Tuner, \"Internet\n             Printing\
    \ Protocol/1.0: Encoding and Transport\", RFC 2565,\n             April 1999.\n\
    \   [RFC2566] deBry, R., Hastings, T., Herriot, R., Isaacson, S., and P.\n   \
    \          Powell, \"Internet Printing Protocol/1.0: Model and\n             Semantics\"\
    , RFC 2566, April 1999.\n   [RFC2567] Wright, D., \"Design Goals for an Internet\
    \ Printing\n             Protocol\", RFC 2567, April 1999.\n   [RFC2568] Zilles,\
    \ S., \"Rationale for the Structure and Model and\n             Protocol for the\
    \ Internet Printing Protocol\", RFC 2568,\n             April 1999.\n"
- title: 9. Authors' Addresses
  contents:
  - "9. Authors' Addresses\n   Robert Herriot (Editor)\n   Xerox Corporation\n   3400\
    \ Hillview Ave., Bldg #1\n   Palo Alto, CA 94304\n   Phone: 650-813-7696\n   Fax:\
    \  650-813-6860\n   EMail:  rherriot@pahv.xerox.com\n   Norm Jacobs\n   Sun Microsystems\
    \ Inc.\n   1430 Owl Ridge Rd.\n   Colorado Springs, CO 80919\n   Phone:  719-532-9927\n\
    \   Fax:    719-535-0956\n   EMail:  Norm.Jacobs@Central.sun.com\n   Thomas N.\
    \ Hastings\n   Xerox Corporation\n   701 S. Aviation Blvd., ESAE-231\n   El Segundo,\
    \ CA 90245\n   Phone: 310-333-6413\n   Fax:   310-333-5514\n   EMail: hastings@cp10.es.xerox.com\n\
    \   Jay Martin\n   Underscore, Inc.\n   41-C Sagamore Park Road\n   Hudson, NH\
    \ 03051-4915\n   Phone:  603-889-7000\n   Fax:  603-889-2699\n   EMail:  jkm@underscore.com\n"
- title: '10. Appendix A: ABNF Syntax for response of Send-queue-state (short)'
  contents:
  - "10. Appendix A: ABNF Syntax for response of Send-queue-state (short)\n   The\
    \ syntax in ABNF for the response to the LPD command 'send-queue-\n   state (long)'\
    \ is:\n    status-response = empty-queue / nonempty-queue\n    empty-queue = \"\
    no-entries\" LF\n    nonempty-queue = printer-status LF heading LF *(job LF)\n\
    \    printer-status =  OK-status / error-status\n    OK-status = printer-name\
    \ SP \"ready and printing\" LF\n    error-status = < implementation dependent\
    \ status information >\n    heading = \"Rank\" 3SP \"Owner\" 6SP \"Job\" 13SP\
    \ \"Files\"\n                    23SP \"Total Size\" LF\n                    \
    \   ; the column headings and their values below begin\n    at the columns\n \
    \                      ; 1, 8, 19, 35 and 63\n    job = rank *SP owner *SP job\
    \ *SP files *SP total-size \"bytes\"\n                      ; jobs are in order\
    \ of oldest to newest\n    rank = \"active\" / \"1st\" / \"2nd\" / \"3rd\" / integer\
    \ \"th\"\n                      ; job that is printing is \"active\"\n       \
    \               ; other values show position in the queue\n    owner = <user name\
    \ of person who submitted the job>\n    job = 1*3DIGIT   ; job-number\n    files\
    \ = <file name> *( \",\" <file name>) ; truncated to 24 characters\n    total-size\
    \ = 1*DIGIT  ; combined size in bytes of all documents\n"
- title: '11. Appendix B: ABNF Syntax for response of Send-queue-state (long)'
  contents:
  - "11. Appendix B: ABNF Syntax for response of Send-queue-state (long)\n   The syntax\
    \ in ABNF for the response to the LPD command 'send-queue-\n   state (long)' is:\n\
    \    status-response = empty-queue / nonempty-queue\n    empty-queue = \"no-entries\"\
    \ LF\n    nonempty-queue = printer-status LF  *job\n    printer-status =  OK-status\
    \ / error-status\n    OK-status = printer-name SP \"ready and printing\" LF\n\
    \    error-status = < implementation dependent status information >\n    job =\
    \ LF line-1 LF line-2 LF\n    line-1 = owner \":\" SP rank 1*SP \"[job\" job SP\
    \ host \"]\"\n    line-2 =  file-name 1*SP document-size \"bytes\"\n         \
    \ ; jobs are in order of oldest to newest\n    rank = \"active\" / \"1st\" / \"\
    2nd\" / \"3rd\" / integer \"th\"\n            ; job that is printing is \"active\"\
    \n            ; other values show position in the queue\n    owner = <user name\
    \ of person who submitted the job>\n    job = 1*3DIGIT\n    file-name = [ 1*DIGIT\
    \  \"copies of\" SP ] <file name>\n                  ; truncated to 24 characters\n\
    \    document-size = 1*DIGIT  ;size of single copy of the document.\n"
- title: '12. Appendix C: Unsupported LPD functions'
  contents:
  - "12. Appendix C: Unsupported LPD functions\n   The follow LPD functions have no\
    \ IPP equivalent. The LPD-to-IPP\n   mapper ignores them and the IPP-to-LPD mapper\
    \ does not send them.\n    LPD command\n    name  description\n    C     Class\
    \ for banner page\n    I     Indent Printing\n    H     Host of client\n    M\
    \     Mail when printed\n    S     Symbolic link data\n    T     Title for pr\n\
    \    W     Width of output\n    1     troff R font\n    2     troff I font\n \
    \   3     troff B font\n    4     troff S font\n   The follow LPD functions specify\
    \ document-formats which have no IPP\n   equivalent, unless someone registers\
    \ them. The LPD-to-IPP mapper\n   rejects jobs that request such a document format,\
    \ and the IPP-to-LPD\n   mapper does not send them.\n    LPD command\n    name\
    \   description\n    c      Plot CIF file\n    d      Print DVI file\n    g  \
    \    Plot file\n    k      reserved for Kerberized clients and servers\n    n\
    \      Print ditroff output file\n    p      Print file with 'pr' format\n   \
    \ r      File to print with FORTRAN carriage control\n    t      Print troff output\
    \ file\n    v      Print raster file\n    z      reserved for future use with\
    \ the Palladium\n           print system\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
