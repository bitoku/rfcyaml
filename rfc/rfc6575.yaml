- title: __initial_text__
  contents:
  - "            Address Resolution Protocol (ARP) Mediation for\n               \
    \     IP Interworking of Layer 2 VPNs\n"
- title: Abstract
  contents:
  - "Abstract\n   The Virtual Private Wire Service (VPWS), detailed in RFC 4664,\n\
    \   provides point-to-point connections between pairs of Customer Edge\n   (CE)\
    \ devices.  It does so by binding two Attachment Circuits (each\n   connecting\
    \ a CE device with a Provider Edge (PE) device) to a\n   pseudowire (connecting\
    \ the two PEs).  In general, the Attachment\n   Circuits must be of the same technology\
    \ (e.g., both Ethernet or both\n   ATM), and the pseudowire must carry the frames\
    \ of that technology.\n   However, if it is known that the frames' payload consists\
    \ solely of\n   IP datagrams, it is possible to provide a point-to-point connection\n\
    \   in which the pseudowire connects Attachment Circuits of different\n   technologies.\
    \  This requires the PEs to perform a function known as\n   \"Address Resolution\
    \ Protocol (ARP) Mediation\".  ARP Mediation refers\n   to the process of resolving\
    \ Layer 2 addresses when different\n   resolution protocols are used on either\
    \ Attachment Circuit.  The\n   methods described in this document are applicable\
    \ even when the CEs\n   run a routing protocol between them, as long as the routing\
    \ protocol\n   runs over IP.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6575.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Conventions Used in This Document ..........................4\n  \
    \ 2. ARP Mediation (AM) Function .....................................5\n   3.\
    \ IP Layer 2 Interworking Circuit .................................6\n   4. IP\
    \ Address Discovery Mechanisms .................................6\n      4.1.\
    \ Discovery of IP Addresses of Locally Attached IPv4 CE ......7\n           4.1.1.\
    \ Monitoring Local Traffic ............................7\n           4.1.2. CE\
    \ Devices Using ARP ................................7\n           4.1.3. CE Devices\
    \ Using Inverse ARP ........................8\n           4.1.4. CE Devices Using\
    \ PPP ................................9\n           4.1.5. Router Discovery Method\
    \ ............................10\n           4.1.6. Manual Configuration ...............................10\n\
    \      4.2. How a CE Learns the IPv4 Address of a Remote CE ...........10\n  \
    \         4.2.1. CE Devices Using ARP ...............................11\n    \
    \       4.2.2. CE Devices Using Inverse ARP .......................11\n      \
    \     4.2.3. CE Devices Using PPP ...............................11\n      4.3.\
    \ Discovery of IP Addresses of IPv6 CE Devices ..............11\n           4.3.1.\
    \ Distinguishing Factors between IPv4 and IPv6 .......11\n           4.3.2. Requirements\
    \ for PEs ...............................12\n           4.3.3. Processing of Neighbor\
    \ Solicitations ...............12\n           4.3.4. Processing of Neighbor Advertisements\
    \ ..............13\n           4.3.5. Processing Inverse Neighbor Solicitations\
    \ (INSs) ...14\n           4.3.6. Processing of Inverse Neighbor\n           \
    \       Advertisements (INAs) ..............................15\n           4.3.7.\
    \ Processing of Router Solicitations .................15\n           4.3.8. Processing\
    \ of Router Advertisements ................15\n           4.3.9. Duplicate Address\
    \ Detection ........................16\n           4.3.10. CE Address Discovery\
    \ for CEs Attached Using PPP ...16\n   5. CE IPv4 Address Signaling between PEs\
    \ ..........................16\n      5.1. When to Signal an IPv4 Address of a\
    \ CE ....................16\n      5.2. LDP-Based Distribution of CE IPv4 Addresses\
    \ ...............17\n   6. IPv6 Capability Advertisement ..................................20\n\
    \      6.1. PW Operational Down on Stack Capability Mismatch ..........21\n  \
    \    6.2. Stack Capability Fallback .................................21\n   7.\
    \ IANA Considerations ............................................22\n      7.1.\
    \ LDP Status Messages .......................................22\n      7.2. Interface\
    \ Parameters ......................................22\n   8. Security Considerations\
    \ ........................................22\n      8.1. Control Plane Security\
    \ ....................................23\n      8.2. Data Plane Security .......................................24\n\
    \   9. Acknowledgements ...............................................24\n  \
    \ 10. Contributors ..................................................24\n   11.\
    \ References ....................................................25\n      11.1.\
    \ Normative References .....................................25\n      11.2. Informative\
    \ References ...................................26\n   Appendix A.  Use of IGPs\
    \ with IP L2 Interworking L2VPNs ...........27\n      A.1. OSPF ......................................................27\n\
    \      A.2. RIP .......................................................27\n  \
    \    A.3. IS-IS .....................................................28\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Layer 2 Virtual Private Networks (L2VPNs) are constructed\
    \ over a\n   Service Provider IP/MPLS backbone but are presented to the Customer\n\
    \   Edge (CE) devices as Layer 2 networks.  In theory, L2VPNs can carry\n   any\
    \ Layer 3 protocol, but in many cases, the Layer 3 protocol is IP.\n   Thus, it\
    \ makes sense to consider procedures that are optimized for\n   IP.\n   In a typical\
    \ implementation, illustrated in the diagram below, the CE\n   devices are connected\
    \ to the Provider Edge (PE) devices via\n   Attachment Circuits (ACs).  The ACs\
    \ are Layer 2 circuits.  In a pure\n   L2VPN, if traffic sent from CE1 via AC1\
    \ reaches CE2 via AC2, both ACs\n   would have to be of the same type (i.e., both\
    \ Ethernet, both Frame\n   Relay, etc.).  However, if it is known that only IP\
    \ traffic will be\n   carried, the ACs can be of different technologies, provided\
    \ that the\n   PEs provide the appropriate procedures to allow the proper transfer\n\
    \   of IP packets.\n                                           +-----+\n     \
    \                         +------ -----| CE3 |\n                             \
    \ |AC3         +-----+\n                           +-----+\n                 \
    \    ......| PE3 |...........\n                     .     +-----+          .\n\
    \                     .        |             .\n                     .       \
    \ |             .\n      +-----+ AC1 +-----+    Service      +-----+ AC2 +-----+\n\
    \      | CE1 |-----| PE1 |--- Provider ----| PE2 |-----| CE2 |\n      +-----+\
    \     +-----+    Backbone     +-----+     +-----+\n                     .    \
    \                  .\n                     ........................\n   A CE,\
    \ which is connected via a given type of AC, may use an IP\n   address resolution\
    \ procedure that is specific to that type of AC.\n   For example, an Ethernet-attached\
    \ IPv4 CE would use ARP [RFC826] and\n   a Frame-Relay-attached CE might use Inverse\
    \ ARP [RFC2390].  If we are\n   to allow the two CEs to have a Layer 2 connection\
    \ between them, even\n   though each AC uses a different Layer 2 technology, the\
    \ PEs must\n   intercept and \"mediate\" the Layer-2-specific address resolution\n\
    \   procedures.\n   In this document, we specify the procedures for VPWS services\n\
    \   [RFC4664], which the PEs need to implement in order to mediate the IP\n  \
    \ address resolution mechanism.  We call these procedures \"ARP\n   Mediation\"\
    .  Consider a Virtual Private Wire Service (VPWS)\n   constructed between CE1\
    \ and CE2 in the diagram above.  If AC1 and AC2\n   are of different technologies,\
    \ e.g., AC1 is Ethernet and AC2 is Frame\n   Relay (FR), then ARP requests coming\
    \ from CE1 cannot be passed\n   transparently to CE2.  PE1 MUST interpret the\
    \ meaning of the ARP\n   requests and mediate the necessary information with PE2\
    \ before\n   responding.\n   This document uses the term \"ARP\" to mean any protocol\
    \ that is used\n   to resolve IP addresses to link-layer addresses.  For instance,\
    \ in\n   IPv4, ARP and Inverse ARP protocols are used for address resolution\n\
    \   while in IPv6, Neighbor Discovery [RFC4861] and Inverse Neighbor\n   Discovery\
    \ [RFC3122] based on ICMPv6 are used for address resolution.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  ARP Mediation (AM) Function
  contents:
  - "2.  ARP Mediation (AM) Function\n   The ARP Mediation (AM) function is an element\
    \ of a PE node that deals\n   with the IP address resolution for CE devices connected\
    \ via a VPWS\n   L2VPN.  By placing this function in the PE node, ARP Mediation\
    \ is\n   transparent to the CE devices.\n   For a given point-to-point connection\
    \ between a pair of CEs, the ARP\n   Mediation procedure depends on whether the\
    \ packets being forwarded\n   are IPv4 or IPv6.  A PE that is to perform ARP Mediation\
    \ for IPv4\n   packets MUST perform the following logical steps:\n   1.  Discover\
    \ the IP address of the locally attached CE device.\n   2.  Terminate.  Do not\
    \ forward ARP and Inverse ARP requests from the\n       CE device at the local\
    \ PE.\n   3.  Distribute the IP address to the remote PE using pseudowire\n  \
    \     control signaling.\n   4.  Notify the locally attached CE of the IP address\
    \ of the remote\n       CE.\n   5.  Respond appropriately to ARP and Inverse ARP\
    \ requests from the\n       local CE device using the IP address of the remote\
    \ CE and the\n       hardware address of the local PE.\n   A PE that is to perform\
    \ ARP Mediation for IPv6 packets MUST perform\n   the following logical steps:\n\
    \   1.  Discover the IPv6 addresses of the locally attached CE device,\n     \
    \  together with those of the remote CE device.\n   2.  Perform the following\
    \ steps:\n       a.  Intercept Neighbor Discovery (ND) and Inverse Neighbor\n\
    \           Discovery (IND) packets received from the local CE device.\n     \
    \  b.  From these ND and IND packets, learn the IPv6 configuration\n         \
    \  of the CE.\n       c.  Forward the ND and IND packets over the pseudowire to\
    \ the\n           remote PE.\n   3.  Intercept Neighbor Discovery and Inverse\
    \ Neighbor Discovery\n       packets received over the pseudowire from the remote\
    \ PE, possibly\n       modifying them (if required for the type of outgoing AC)\
    \ before\n       forwarding to the local CE and learning information about the\n\
    \       IPv6 configuration of the remote CE.\n   Details for the procedures described\
    \ above are given in the following\n   sections.\n"
- title: 3.  IP Layer 2 Interworking Circuit
  contents:
  - "3.  IP Layer 2 Interworking Circuit\n   The IP Layer 2 Interworking Circuit refers\
    \ to interconnection of the\n   Attachment Circuit with the IP Layer 2 Transport\
    \ pseudowire that\n   carries IP datagrams as the payload.  The ingress PE removes\
    \ the data\n   link header of its local Attachment Circuit and transmits the payload\n\
    \   (an IP packet) over the pseudowire with or without the optional\n   control\
    \ word.  If the IP packet arrives at the ingress PE with\n   multiple data link\
    \ headers (for example, in the case of bridged\n   Ethernet PDU on an ATM Attachment\
    \ Circuit), all data link headers\n   MUST be removed from the IP packet before\
    \ transmission over the\n   pseudowire (PW).  The egress PE encapsulates the IP\
    \ packet with the\n   data link header used on its local Attachment Circuit.\n\
    \   The encapsulation for the IP Layer 2 Transport pseudowire is\n   described\
    \ in [RFC4447].  The \"IP Layer 2 Interworking Circuit\"\n   pseudowire is also\
    \ referred to as \"IP pseudowire\" in this document.\n   In the case of an IPv6\
    \ L2 Interworking Circuit, the egress PE MAY\n   modify the contents of Neighbor\
    \ Discovery or Inverse Neighbor\n   Discovery packets before encapsulating the\
    \ IP packet with the data\n   link header.\n"
- title: 4.  IP Address Discovery Mechanisms
  contents:
  - "4.  IP Address Discovery Mechanisms\n   An IP Layer 2 Interworking Circuit enters\
    \ monitoring state\n   immediately after configuration.  During this state, it\
    \ performs two\n   functions:\n   o  Discovery of the CE IP device(s)\n   o  Establishment\
    \ of the PW\n   The establishment of the PW occurs independently from local CE\
    \ IP\n   address discovery.  During the period when the PW has been\n   established\
    \ but the local CE IP device has not been discovered, only\n   broadcast/multicast\
    \ IP frames are propagated between the Attachment\n   Circuit and pseudowire;\
    \ unicast IP datagrams are dropped.  The IP\n   destination address is used to\
    \ classify unicast/multicast packets.\n   Unicast IP frames are propagated between\
    \ the AC and pseudowire only\n   when CE IP devices on both Attachment Circuits\
    \ have been discovered\n   and notified and proxy functions have completed.\n\
    \   The need to wait for address resolution completion before unicast IP\n   traffic\
    \ can flow is simple.\n   o  PEs do not perform routing operations.\n   o  The\
    \ destination IP address in the packet is not necessarily that\n      of the attached\
    \ CE.\n   o  On a broadcast link, there is no way to find out the Media Access\n\
    \      Control (MAC) address of the CE based on the destination IP\n      address\
    \ of the packet.\n"
- title: 4.1.  Discovery of IP Addresses of Locally Attached IPv4 CE
  contents:
  - "4.1.  Discovery of IP Addresses of Locally Attached IPv4 CE\n   A PE MUST support\
    \ manual configuration of IPv4 CE addresses.  This\n   section also describes\
    \ automated mechanisms by which a PE MAY also\n   discover an IPv4 CE address.\n"
- title: 4.1.1.  Monitoring Local Traffic
  contents:
  - "4.1.1.  Monitoring Local Traffic\n   The PE devices MAY learn the IP addresses\
    \ of the locally attached CEs\n   from any IP traffic, such as link-local multicast\
    \ packets (e.g.,\n   destined to 224.0.0.x), and are not restricted to the operations\n\
    \   below.\n"
- title: 4.1.2.  CE Devices Using ARP
  contents:
  - "4.1.2.  CE Devices Using ARP\n   If a CE device uses ARP to determine the IP-address-to-MAC-address\n\
    \   binding of its neighbor, the PE processes the ARP requests to learn\n   the\
    \ IP address of the local CE for the local Attachment Circuit.\n   The method\
    \ described in this document only supports the case where\n   there is a single\
    \ CE per Attachment Circuit.  However, customer-\n   facing access topologies\
    \ may exist whereby more than one CE appears\n   to be connected to the PE on\
    \ a single Attachment Circuit.  For\n   example, this could be the case when CEs\
    \ are connected to a shared\n   LAN that connects to the PE.  In such a case,\
    \ the PE MUST select one\n   local CE.  The selection could be based on manual\
    \ configuration or\n   the PE MAY optionally use the following selection criteria.\
    \  In\n   either case, manual configuration of the IP address of the local CE\n\
    \   (and its MAC address) MUST be supported.\n   o  Wait to learn the IP address\
    \ of the remote CE (through PW\n      signaling) and then select the local CE\
    \ that is sending the\n      request for IP address of the remote CE.\n   o  Augment\
    \ cross-checking with the local IP address learned through\n      listening for\
    \ link-local multicast packets (as per Section 4.1.1).\n   o  Augment cross-checking\
    \ with the local IP address learned through\n      the Router Discovery Protocol\
    \ (as described in Section 4.1.5).\n   o  There is still a possibility that the\
    \ local PE may not receive an\n      IP address advertisement from the remote\
    \ PE, and there may exist\n      multiple local IP routers that attempt to 'connect'\
    \ to remote CEs.\n      In this situation, the local PE MAY use some other criteria\
    \ to\n      select one IP device from many (such as \"the first ARP received\"\
    ),\n      or an operator MAY configure the IP address of the local CE.  Note\n\
    \      that the operator does not have to configure the IP address of the\n  \
    \    remote CE (as that would be learned through pseudowire signaling).\n   Once\
    \ the local and remote CEs have been discovered for the given\n   Attachment Circuit,\
    \ the local PE responds with its own MAC address to\n   any subsequent ARP requests\
    \ from the local CE with a destination IP\n   address matching the IP address\
    \ of the remote CE.\n   The local PE signals the IP address of the local CE to\
    \ the remote PE\n   and MAY initiate an unsolicited ARP response to notify the\
    \ IP-\n   address-to-MAC-address binding for the remote CE to the local CE\n \
    \  (again using its own MAC address).\n   Once the ARP Mediation function is completed\
    \ (i.e., the PE device\n   knows both the local and remote CE IP addresses), unicast\
    \ IP frames\n   are propagated between the AC and the established PW.\n   The\
    \ PE MAY periodically generate ARP request messages for the IP\n   address of\
    \ the CE as a means of verifying the continued existence of\n   the IP address\
    \ and its MAC address binding.  The absence of a\n   response from the CE device\
    \ for a given number of retries could be\n   used as a trigger for withdrawal\
    \ of the IP address advertisement to\n   the remote PE.  The local PE would then\
    \ re-enter the address\n   resolution phase to rediscover the IP address of the\
    \ attached CE.\n   Note that this \"heartbeat\" scheme is needed only where the\
    \ failure of\n   a CE device may otherwise be undetectable.\n"
- title: 4.1.3.  CE Devices Using Inverse ARP
  contents:
  - "4.1.3.  CE Devices Using Inverse ARP\n   If a CE device uses Inverse ARP to determine\
    \ the IP address of its\n   neighbor, the attached PE processes the Inverse ARP\
    \ request from the\n   Attachment Circuit and responds with an Inverse ARP reply\
    \ containing\n   the IP address of the remote CE, if the address is known.  If\
    \ the PE\n   does not yet have the IP address of the remote CE, it does not\n\
    \   respond, but records the IP address of the local CE and the circuit\n   information.\
    \  Subsequently, when the IP address of the remote CE\n   becomes available, the\
    \ PE MAY initiate an Inverse ARP request as a\n   means of notifying the local\
    \ CE of the IP address of the remote CE.\n   This is the typical mode of operation\
    \ for Frame Relay and ATM\n   Attachment Circuits.  If the CE does not use Inverse\
    \ ARP, the PE can\n   still discover the IP address of the local CE using the\
    \ mechanisms\n   described in Sections 4.1.1 and 4.1.5.\n"
- title: 4.1.4.  CE Devices Using PPP
  contents:
  - "4.1.4.  CE Devices Using PPP\n   The IP Control Protocol [RFC1332] describes\
    \ a procedure to establish\n   and configure IP on a point-to-point connection,\
    \ including the\n   negotiation of IP addresses.  When such an Attachment Circuit\
    \ is\n   configured for IP interworking, PPP negotiation is not performed end-\n\
    \   to-end between CE devices.  Instead, PPP negotiation takes place\n   between\
    \ the CE and its local PE.  The PE performs proxy PPP\n   negotiation and informs\
    \ the attached CE of the IP address of the\n   remote CE during IP Control Protocol\
    \ (IPCP) negotiation using the IP-\n   Address option (0x03).\n   When a PPP link\
    \ completes Link Control Protocol (LCP) negotiations,\n   the local PE MAY perform\
    \ the following IPCP actions:\n   o  The PE learns the IP address of the local\
    \ CE from the Configure-\n      Request received with the IP-Address option (0x03).\
    \  If the IP\n      address is non-zero, the PE records the address and responds\
    \ with\n      Configure-Ack.  However, if the IP address is zero, the PE\n   \
    \   responds with Configure-Reject (as this is a request from the CE\n      to\
    \ assign it an IP address).  Also, the IP-Address option is set\n      with a\
    \ zero value in the Configure-Reject response to instruct the\n      CE not to\
    \ include that option in any subsequent Configure-Request.\n   o  If the PE receives\
    \ a Configure-Request without the IP-Address\n      option, it responds with a\
    \ Configure-Ack.  In this case, the PE is\n      unable to learn the IP address\
    \ of the local CE using IPCP; hence,\n      it MUST rely on other means as described\
    \ in Sections 4.1.1 and\n      4.1.5.  Note that in order to employ other learning\
    \ mechanisms,\n      the IPCP negotiations MUST have reached the open state.\n\
    \   o  If the PE does not know the IP address of the remote CE, it sends\n   \
    \   a Configure-Request without the IP-Address option.\n   o  If the PE knows\
    \ the IP address of the remote CE, it sends a\n      Configure-Request with the\
    \ IP-Address option containing the IP\n      address of the remote CE.\n   The\
    \ IPCP IP-Address option MAY be negotiated between the PE and the\n   local CE\
    \ device.  Configuration of other IPCP options MAY be\n   rejected.  Other Network\
    \ Control Protocols (NCPs), with the exception\n   of the Compression Control\
    \ Protocol (CCP) and the Encryption Control\n   Protocol (ECP), MUST be rejected.\
    \  The PE device MAY reject\n   configuration of the CCP and ECP.\n"
- title: 4.1.5.  Router Discovery Method
  contents:
  - "4.1.5.  Router Discovery Method\n   In order to learn the IP address of the CE\
    \ device for a given\n   Attachment Circuit, the PE device MAY execute the Router\
    \ Discovery\n   Protocol [RFC1256] whereby a Router Discovery Request (ICMP -\
    \ Router\n   Solicitation) message is sent using a source IP address of zero.\
    \  The\n   IP address of the CE device is extracted from the Router Discovery\n\
    \   Response (ICMP - Router Advertisement) message from the CE.  It is\n   possible\
    \ that the response contains more than one router address with\n   the same preference\
    \ level, in which case, some heuristics (such as\n   first on the list) are necessary.\
    \  The use of the Router Discovery\n   method by the PE is optional.\n"
- title: 4.1.6.  Manual Configuration
  contents:
  - "4.1.6.  Manual Configuration\n   In some cases, it may not be possible to discover\
    \ the IP address of\n   the local CE device using the mechanisms described in\
    \ Sections 4.1.1\n   to 4.1.5.  In such cases, manual configuration MAY be used.\
    \  All\n   implementations of this document MUST support manual configuration\
    \ of\n   the IPv4 address of the local CE.  This is the only REQUIRED mode for\n\
    \   a PE to support.\n   The support for configuration of the IP address of the\
    \ remote CE is\n   OPTIONAL.\n"
- title: 4.2.  How a CE Learns the IPv4 Address of a Remote CE
  contents:
  - "4.2.  How a CE Learns the IPv4 Address of a Remote CE\n   Once the local PE has\
    \ received the IP address information of the\n   remote CE from the remote PE,\
    \ it will either initiate an address\n   resolution request or respond to an outstanding\
    \ request from the\n   attached CE device.\n   In the event that the IPv4 address\
    \ of the remote CE is manually\n   configured, the address resolution can begin\
    \ immediately as receipt\n   of remote IP address of the CE becomes unnecessary.\n"
- title: 4.2.1.  CE Devices Using ARP
  contents:
  - "4.2.1.  CE Devices Using ARP\n   When the PE learns the IP address of the remote\
    \ CE as described in\n   Section 5.1, it may or may not already know the IP address\
    \ of the\n   local CE.  If the IP address is not known, the PE MUST wait until\
    \ it\n   is acquired through one of the methods described in Sections 4.1.1,\n\
    \   4.1.2, and 4.1.5.  If the IP address of the local CE is known, the PE\n  \
    \ MAY choose to generate an unsolicited ARP message to notify the local\n   CE\
    \ about the binding of the IP address of the remote CE with the PE's\n   own MAC\
    \ address.\n   When the local CE generates an ARP request, the PE MUST proxy the\
    \ ARP\n   response [RFC925] using its own MAC address as the source hardware\n\
    \   address and the IP address of the remote CE as the source protocol\n   address.\
    \  The PE MUST respond only to those ARP requests whose\n   destination protocol\
    \ address matches the IP address of the remote CE.\n"
- title: 4.2.2.  CE Devices Using Inverse ARP
  contents:
  - "4.2.2.  CE Devices Using Inverse ARP\n   When the PE learns the IP address of\
    \ the remote CE, it SHOULD\n   generate an Inverse ARP request.  If the Attachment\
    \ Circuit requires\n   activation (e.g., Frame Relay), the PE SHOULD activate\
    \ it first\n   before the Inverse ARP request.  It should be noted that the PE\
    \ might\n   never receive the response to its own request, nor see any Inverse\n\
    \   ARP request from the CE, in cases where the CE is pre-configured with\n  \
    \ the IP address of the remote CE or where the use of Inverse ARP has\n   not\
    \ been enabled.  In either case, the CE has used other means to\n   learn the\
    \ IP address of its neighbor.\n"
- title: 4.2.3.  CE Devices Using PPP
  contents:
  - "4.2.3.  CE Devices Using PPP\n   When the PE learns the IP address of the remote\
    \ CE, it SHOULD\n   initiate a Configure-Request and set the IP-Address option\
    \ to the IP\n   address of the remote CE.  This notifies the local CE of the IP\n\
    \   address of the remote CE.\n"
- title: 4.3.  Discovery of IP Addresses of IPv6 CE Devices
  contents:
  - '4.3.  Discovery of IP Addresses of IPv6 CE Devices

    '
- title: 4.3.1.  Distinguishing Factors between IPv4 and IPv6
  contents:
  - "4.3.1.  Distinguishing Factors between IPv4 and IPv6\n   IPv4 uses ARP and Inverse\
    \ ARP to resolve IP address and link-layer\n   associations.  Since these are\
    \ dedicated address resolution\n   protocols, and not IP packets, they cannot\
    \ be carried on an IP\n   pseudowire.  They MUST be processed locally and the\
    \ IPv4 address\n   information they carry signaled between the PEs using the pseudowire\n\
    \   control plane.  IPv6 uses ICMPv6 extensions to resolve IP address and\n  \
    \ link address associations.  As these are IPv6 packets, they can be\n   carried\
    \ on an IP pseudowire; therefore, no IPv6 address signaling is\n   required.\n"
- title: 4.3.2.  Requirements for PEs
  contents:
  - "4.3.2.  Requirements for PEs\n   A PE device that supports IPv6 MUST be capable\
    \ of the following:\n   o  Intercepting ICMPv6 Neighbor Discovery [RFC4861] and\
    \ Inverse\n      Neighbor Discovery [RFC3122] packets received over the AC as\
    \ well\n      as over the PW,\n   o  Recording the IPv6 interface addresses and\
    \ CE link-layer addresses\n      present in these packets,\n   o  Possibly modifying\
    \ these packets as dictated by the data link type\n      of the egress AC (described\
    \ in the following sections), and\n   o  Forwarding them towards the original\
    \ destination.\n   The PE MUST also be capable of generating packets in order\
    \ to\n   interwork between Neighbor Discovery (ND) and Inverse Neighbor\n   Discovery\
    \ (IND).  This is specified in Sections 4.3.3 to 4.3.6.\n   If an IP PW is used\
    \ to interconnect CEs that use IPv6 Router\n   Discovery [RFC4861], a PE device\
    \ MUST also be capable of intercepting\n   and processing those Router Discovery\
    \ packets.  This is required in\n   order to translate between different link-layer\
    \ addresses.  If a\n   Router Discovery message contains a link-layer address,\
    \ then the PE\n   MAY also use this message to discover the link-layer address\
    \ and IPv6\n   interface address.  This is described in more detail in Sections\n\
    \   4.3.7 and 4.3.8.\n   The PE device MUST learn a list of CE IPv6 interface\
    \ addresses for\n   its directly attached CE and another list of CE IPv6 interface\n\
    \   addresses for the far-end CE.  The PE device MUST also learn the\n   link-layer\
    \ address of the local CE and be able to use it when\n   forwarding traffic between\
    \ the local and far-end CEs.  The PE MAY\n   also wish to monitor the source link-layer\
    \ address of data packets\n   received from the CE and discard packets not matching\
    \ its learned CE\n   link-layer address.\n"
- title: 4.3.3.  Processing of Neighbor Solicitations
  contents:
  - "4.3.3.  Processing of Neighbor Solicitations\n   A Neighbor Solicitation received\
    \ on an AC from a local CE SHOULD be\n   inspected to determine and learn an IPv6\
    \ interface address (if\n   provided, this will not be the case for Duplicate\
    \ Address Detection)\n   and any link-layer address provided.  The packet MUST\
    \ then be\n   forwarded over the pseudowire unmodified.  A Neighbor Solicitation\n\
    \   received over the pseudowire SHOULD be inspected to determine and\n   learn\
    \ an IPv6 interface address for the far-end CE.  If a source\n   link-layer address\
    \ option is present, the PE MUST remove it.  The PE\n   MAY substitute an appropriate\
    \ link-layer address option, specifying\n   the link-layer address of the PE interface\
    \ attached to the local AC.\n   Note that if the local AC is Ethernet, failure\
    \ to substitute a link-\n   layer address option may mean that the CE has no valid\
    \ link-layer\n   address with which to transmit data packets.\n   When a PE with\
    \ a local AC, which is of the type point-to-point Layer\n   2 circuit, e.g., FR,\
    \ ATM or PPP, receives a Neighbor Solicitation\n   from a far-end PE over the\
    \ pseudowire, after learning the IP address\n   of the far-end CE, the PE MAY\
    \ use one of the following procedures:\n   1.  Forward the Neighbor Solicitation\
    \ to the local CE after replacing\n       the source link-layer address with the\
    \ link-layer address of the\n       local AC.\n   2.  Send an Inverse Neighbor\
    \ Solicitation to the local CE, specifying\n       the far-end CE's IP address\
    \ and the link-layer address of the PE\n       interface attached to local AC.\n\
    \   3.  Reply to the far-end PE with a Neighbor Advertisement, using the\n   \
    \    IP address of the local CE as the source address and an\n       appropriate\
    \ link-layer address option that specifies the link-\n       layer address of\
    \ the PE interface attached to local AC.  As\n       described in Section 4.3.10,\
    \ the IP address of the local CE is\n       learned through IPv6 Control Protocol\
    \ (IPv6CP) in the case of PPP\n       and through Neighbor Solicitation in other\
    \ cases.\n"
- title: 4.3.4.  Processing of Neighbor Advertisements
  contents:
  - "4.3.4.  Processing of Neighbor Advertisements\n   A Neighbor Advertisement received\
    \ on an AC from a local CE SHOULD be\n   inspected to determine and learn an IPv6\
    \ interface address and any\n   link-layer address provided.  The packet MUST\
    \ then be forwarded over\n   the IP pseudowire unmodified.\n   A Neighbor Advertisement\
    \ received over the pseudowire SHOULD be\n   inspected to determine and learn\
    \ an IPv6 interface address for the\n   far-end CE.  If a source link-layer address\
    \ option is present, the PE\n   MUST remove it.  The PE MAY substitute an appropriate\
    \ link-layer\n   address option, specifying the link-layer address of the PE interface\n\
    \   attached to local AC.  Note that if the local AC is Ethernet, failure\n  \
    \ to substitute a link-layer address option may mean that the local AC\n   has\
    \ no valid link-layer address with which to transmit data packets.\n   When a\
    \ PE with a local AC that is of the type point-to-point Layer 2\n   circuit, such\
    \ as ATM, FR, or PPP, receives a Neighbor Advertisement\n   over the pseudowire,\
    \ in addition to learning the remote CE's IPv6\n   address, it SHOULD perform\
    \ the following steps:\n   o  If the AC supports Inverse Neighbor Discovery (IND)\
    \ and the PE had\n      already processed an Inverse Neighbor Solicitation (INS)\
    \ from the\n      local CE, it SHOULD send an Inverse Neighbor Advertisement (INA)\n\
    \      on the local AC using source IP address information received in an\n  \
    \    ND advertisement (ND-ADV) and its own local AC link-layer\n      information.\n\
    \   o  If the PE has not received any Inverse Neighbor Solicitation (INS)\n  \
    \    from the local CE and the AC supports Inverse Neighbor Discovery\n      (IND),\
    \ it SHOULD send an INS on the local AC using source IP\n      address information\
    \ received in the INA together with its own\n      local AC link-layer information.\n"
- title: 4.3.5.  Processing Inverse Neighbor Solicitations (INSs)
  contents:
  - "4.3.5.  Processing Inverse Neighbor Solicitations (INSs)\n   An INS received\
    \ on an AC from a local CE SHOULD be inspected to\n   determine and learn the\
    \ IPv6 addresses and the link-layer addresses.\n   The packet MUST then be forwarded\
    \ over the pseudowire unmodified.\n   An INS received over the pseudowire SHOULD\
    \ be inspected to determine\n   and learn one or more IPv6 addresses for the far-end\
    \ CE.  If the\n   local AC supports IND (e.g., a switched Frame Relay AC), the\
    \ packet\n   SHOULD be forwarded to the local CE after modifying the link-layer\n\
    \   address options to match the type of the local AC.\n   If the local AC does\
    \ not support IND, processing of the packet\n   depends on whether the PE has\
    \ learned at least one interface address\n   for its directly attached CE.\n \
    \  o  If it has learned at least one IPv6 address for the CE, the PE\n      MUST\
    \ discard the Inverse Neighbor Solicitation (INS) and generate\n      an Inverse\
    \ Neighbor Advertisement (INA) back into the pseudowire.\n      The destination\
    \ address of the INA is the source address from the\n      INS; the source address\
    \ is one of the local CE's interface\n      addresses; and all the local CE's\
    \ interface addresses that have\n      been learned so far SHOULD be included\
    \ in the Target Address List.\n      The Source and Target link-layer addresses\
    \ are copied from the\n      INS.  In addition, the PE SHOULD generate ND advertisements\
    \ on the\n      local AC using the IPv6 address of the remote CE and the link-\n\
    \      layer address of the local PE.\n   o  If it has not learned at least one\
    \ IPv6 and link-layer address of\n      its directly connected CE, the INS MUST\
    \ continue to be discarded\n      until the PE learns an IPv6 and link-layer address\
    \ from the local\n      CE (through receiving, for example, a Neighbor Solicitation).\n\
    \      After this has occurred, the PE will be able to respond to INS\n      messages\
    \ received over the pseudowire as described above.\n"
- title: 4.3.6.  Processing of Inverse Neighbor Advertisements (INAs)
  contents:
  - "4.3.6.  Processing of Inverse Neighbor Advertisements (INAs)\n   An INA received\
    \ on an AC from a local CE SHOULD be inspected to\n   determine and learn one\
    \ or more IPv6 addresses for the CE.  It MUST\n   then be forwarded unmodified\
    \ over the pseudowire.\n   An INA received over the pseudowire SHOULD be inspected\
    \ to determine\n   and learn one or more IPv6 addresses for the far-end CE.\n\
    \   If the local AC supports IND (e.g., a Frame Relay AC), the packet MAY\n  \
    \ be forwarded to the local CE after modifying the link-layer address\n   options\
    \ to match the type of the local AC.\n   If the local AC does not support IND,\
    \ the PE MUST discard the INA and\n   generate a Neighbor Advertisement (NA) towards\
    \ its local CE.  The\n   source IPv6 address of the NA is the source IPv6 address\
    \ from the\n   INA; the destination IPv6 address is the destination IPv6 address\n\
    \   from the INA; and the link-layer address is that of the local AC on\n   the\
    \ PE.\n"
- title: 4.3.7.  Processing of Router Solicitations
  contents:
  - "4.3.7.  Processing of Router Solicitations\n   A Router Solicitation received\
    \ on an AC from a local CE SHOULD be\n   inspected to determine and learn an IPv6\
    \ address for the CE and, if\n   present, the link-layer address of the CE.  It\
    \ MUST then be forwarded\n   unmodified over the pseudowire.\n   A Router Solicitation\
    \ received over the pseudowire SHOULD be\n   inspected to determine and learn\
    \ an IPv6 address for the far-end CE.\n   If a source link-layer address option\
    \ is present, the PE MUST remove\n   it.  The PE MAY substitute a source link-layer\
    \ address option\n   specifying the link-layer address of its local AC.  The packet\
    \ is\n   then forwarded to the local CE.\n"
- title: 4.3.8.  Processing of Router Advertisements
  contents:
  - "4.3.8.  Processing of Router Advertisements\n   A Router Advertisement received\
    \ on an AC from a local CE SHOULD be\n   inspected to determine and learn an IPv6\
    \ address for the CE and, if\n   present, the link-layer address of the CE.  It\
    \ MUST then be forwarded\n   unmodified over the pseudowire.\n   A Router Advertisement\
    \ received over the pseudowire SHOULD be\n   inspected to determine and learn\
    \ an IPv6 address for the far-end CE.\n   If a source link-layer address option\
    \ is present, the PE MUST remove\n   it.  The PE MAY substitute a source link-layer\
    \ address option\n   specifying the link-layer address of its local AC.  If an\
    \ MTU option\n   is present, the PE MAY reduce the specified MTU if the MTU of\
    \ the\n   pseudowire is less than the value specified in the option.  The\n  \
    \ packet is then forwarded to the local CE.\n"
- title: 4.3.9.  Duplicate Address Detection
  contents:
  - "4.3.9.  Duplicate Address Detection\n   Duplicate Address Detection [RFC4862]\
    \ allows IPv6 hosts and routers\n   to ensure that the addresses assigned to interfaces\
    \ are unique on a\n   link.  As with all Neighbor Discovery packets, those used\
    \ in\n   Duplicate Address Detection will simply flow through the pseudowire,\n\
    \   being inspected at the PEs at each end.  Processing is performed as\n   detailed\
    \ in Sections 4.3.3 and 4.3.4.  However, the source IPv6\n   address of Neighbor\
    \ Solicitations used in Duplicate Address Detection\n   is the unspecified address,\
    \ so the PEs cannot learn the CE's IPv6\n   interface address (nor would it make\
    \ sense to do so, given that at\n   least one address is tentative at that time).\n"
- title: 4.3.10.  CE Address Discovery for CEs Attached Using PPP
  contents:
  - "4.3.10.  CE Address Discovery for CEs Attached Using PPP\n   The IPv6 Control\
    \ Protocol (IPv6CP) [RFC5072] describes a procedure\n   for establishing and configuring\
    \ IPv6 on a point-to-point connection,\n   including the negotiation of a link-local\
    \ interface identifier.  As\n   in the case of IPv4, when such an AC is configured\
    \ for IP\n   interworking, PPP negotiation is not performed end-to-end between\
    \ CE\n   devices.  Instead, PPP negotiation takes place between the CE and its\n\
    \   local PE.  The PE performs proxy PPP negotiation and informs the\n   attached\
    \ CE of the link-local identifier of its local interface using\n   the Interface-Identifier\
    \ option (0x01).  This local interface\n   identifier is used by stateless address\
    \ autoconfiguration [RFC4862].\n   When a PPP link completes IPv6CP negotiations\
    \ and the PPP link is\n   open, a PE MAY discover the IPv6 unicast address of\
    \ the CE using any\n   of the mechanisms described above.\n"
- title: 5.  CE IPv4 Address Signaling between PEs
  contents:
  - '5.  CE IPv4 Address Signaling between PEs

    '
- title: 5.1.  When to Signal an IPv4 Address of a CE
  contents:
  - "5.1.  When to Signal an IPv4 Address of a CE\n   A PE device advertises the IPv4\
    \ address of the attached CE only when\n   the encapsulation type of the pseudowire\
    \ is IP Layer2 Transport (the\n   value 0x000B, as defined in [RFC4446]).  The\
    \ IP Layer2 transport PW\n   is also referred to as IP PW and is used interchangeably\
    \ in this\n   document.  It is quite possible that the IPv4 address of a CE device\n\
    \   is not available at the time the PW labels are signaled.  For\n   example,\
    \ in Frame Relay, the CE device sends an Inverse ARP request\n   only when the\
    \ Data Link Connection Identifier (DLCI) is active.  If\n   the PE signals the\
    \ DLCI to be active only when it has received the\n   IPv4 address along with\
    \ the PW Forwarding Equivalence Class (FEC)\n   from the remote PE, a deadlock\
    \ situation arises.  In order to avoid\n   such problems, the PE MUST be prepared\
    \ to advertise the PW FEC before\n   the IPv4 address of the CE is known; hence,the\
    \ PE uses an IPv4\n   address value zero.  When the IPv4 address of the CE device\
    \ does\n   become available, the PE re-advertises the PW FEC along with the IPv4\n\
    \   address of the CE.\n   Similarly, if the PE detects that an IP address of\
    \ a CE is no longer\n   valid (by methods described above), the PE MUST re-advertise\
    \ the PW\n   FEC with a null IP address to denote the withdrawal of the IP address\n\
    \   of the CE.  The receiving PE then waits for notification of the\n   remote\
    \ IP address.  During this period, propagation of unicast IPv4\n   traffic is\
    \ suspended, but multicast IPv4 traffic can continue to flow\n   between the AC\
    \ and the pseudowire.\n   If two CE devices are locally attached to the PE on\
    \ disparate AC\n   types (for example, one CE connected to an Ethernet port and\
    \ the\n   other to a Frame Relay port), the IPv4 addresses are learned in the\n\
    \   same manner as described above.  However, since the CE devices are\n   local,\
    \ the distribution of IPv4 addresses for these CE devices is a\n   local step.\n\
    \   Note that the PEs discover the IPv6 addresses of the remote CE by\n   intercepting\
    \ Neighbor Discovery and Inverse Neighbor Discovery\n   packets that have been\
    \ passed in-band through the pseudowire.  Hence,\n   there is no need to communicate\
    \ the IPv6 addresses of the CEs through\n   LDP signaling.\n   If the pseudowire\
    \ is carrying both IPv4 and IPv6 traffic, the\n   mechanisms used for IPv6 and\
    \ IPv4 SHOULD NOT interact.  In\n   particular, just because a PE has learned\
    \ a link-layer address for\n   IPv6 traffic by intercepting a Neighbor Advertisement\
    \ from its\n   directly connected CE, it SHOULD NOT assume that it can use that\n\
    \   link-layer address for IPv4 traffic until that fact is confirmed by\n   reception\
    \ of, for example, an IPv4 ARP message from the CE.\n"
- title: 5.2.  LDP-Based Distribution of CE IPv4 Addresses
  contents:
  - "5.2.  LDP-Based Distribution of CE IPv4 Addresses\n   [RFC4447] uses Label Distribution\
    \ Protocol (LDP) transport to\n   exchange PW FECs in the Label Mapping message\
    \ in the Downstream\n   Unsolicited (DU) mode.  The PW FEC comes in two flavors,\
    \ with some\n   common fields between them: PWid and Generalized ID FEC elements.\n\
    \   The discussions below refer to these common fields for IP L2\n   Interworking\
    \ encapsulation.\n   In addition to PW FEC, this document uses an IP Address List\
    \ TLV (as\n   defined in [RFC5036]) that is to be included in the optional\n \
    \  parameter field of the Label Mapping message when advertising the PW\n   FEC\
    \ for the IP Layer2 Transport.  The use of optional parameters in\n   the Label\
    \ Mapping message to extend the attributes of the PW FEC is\n   specified in [RFC4447].\n\
    \   As defined in [RFC4447], when processing a received PW FEC, the PE\n   matches\
    \ the PW ID and PW type with the locally configured PW ID and\n   PW Type.  If\
    \ there is a match and if the PW Type is IP Layer2\n   Transport, the PE further\
    \ checks for the presence of an Address List\n   TLV [RFC5036] in the optional\
    \ parameter TLVs.  The processing of the\n   Address List TLV is as follows.\n\
    \   o  If a PE is configured for an AC to a CE enabled for IPv4 or dual-\n   \
    \   stack IPv4/IPv6, the PE SHOULD advertise an Address List TLV with\n      address\
    \ family type of IPv4 address.  The PE SHOULD process the\n      IPv4 Address\
    \ List TLV as described in this document.  The PE MUST\n      advertise and process\
    \ IPv6 capability using the procedures\n      described in Section 6.\n   o  If\
    \ a PE does not receive any IPv4 address in the Address List TLV,\n      it MAY\
    \ assume IPv4 behavior.  The address resolution for IPv4 MUST\n      then depend\
    \ on local manual configuration.  In the case of\n      mismatched configuration\
    \ whereby one PE has manual configuration\n      while the other does not, the\
    \ IP address to link-layer address\n      mapping remains unresolved, resulting\
    \ in unsuccessful propagation\n      of IPv4 traffic to the local CE.\n   o  If\
    \ a PE is configured for an AC to a CE enabled for IPv6 only, the\n      PE MUST\
    \ advertise IPv6 capability using the procedures described\n      in Section 6.\
    \  In addition, by virtue of not setting the manual\n      configuration for IPv4\
    \ support, IPv6-only support is realized.\n   We use the Address List TLV [RFC5036]\
    \ to signal the IPv4 address of\n   the local CE.  This IP Address List TLV is\
    \ included in the optional\n   parameter field of the Label Mapping message.\n\
    \   The Address List TLV is only used for IPv4 addresses.\n   The fields of the\
    \ IP Address List TLV are set as follows:\n   Length\n      Set to 6 to encompass\
    \ 2 bytes of Address Family field and 4 bytes\n      of Addresses field (because\
    \ a single IPv4 address is used).\n   Address Family\n      Set to 1 to indicate\
    \ IPv4 as defined in [RFC5036].\n   Addresses\n      Contains a single IPv4 address\
    \ that is the address of the CE\n      attached to the advertising PE.\n   The\
    \ address in the Addresses field is set to all zeros to denote that\n   the advertising\
    \ PE has not learned the IPv4 address of its local CE.\n   Any non-zero address\
    \ value denotes the IPv4 address of the\n   advertising PE's attached CE device.\n\
    \   The IPv4 address of the CE is also supplied in the optional\n   parameters\
    \ field of the LDP Notification message along with the PW\n   FEC.  The LDP Notification\
    \ message is used to signal any change in\n   the status of the CE's IPv4 address.\n\
    \   The encoding of the LDP Notification message is as follows.\n     0      \
    \             1                   2                   3\n     0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |0|   Notification (0x0001)     |      Message Length           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                     Message ID                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                       Status TLV                              |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \               IP Address List TLV (as defined above)        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                 PWid FEC or Generalized ID FEC                |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   The Status\
    \ TLV status code is set to 0x0000002C \"IP address of CE\",\n   to indicate that\
    \ an IP address update follows.  Since this\n   notification does not refer to\
    \ any particular message, the Message ID\n   field is set to 0.\n   The PW FEC\
    \ TLV SHOULD NOT include the interface parameters as they\n   are ignored in the\
    \ context of this message.\n"
- title: 6.  IPv6 Capability Advertisement
  contents:
  - "6.  IPv6 Capability Advertisement\n   A Stack Capability Interface Parameter\
    \ sub-TLV is signaled by the two\n   PEs so that they can agree which network\
    \ protocol(s) they SHOULD be\n   using.  As discussed earlier, the use of the\
    \ Address List TLV\n   signifies support for IPv4 stack, so the Stack Capability\
    \ Interface\n   Parameter sub-TLV is used to indicate whether support for IPv6\
    \ stack\n   is required on a given IP PW.\n   The Stack Capability Interface Parameter\
    \ sub-TLV is part of the\n   interface parameters.  The proposed format for the\
    \ Stack Capability\n   Interface Parameter sub-TLV is as follows:\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Parameter ID  |     Length    |       Stack Capability        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Parameter ID = 0x16\n   Length = 4\n   The Stack Capability field is a bit\
    \ field.  Only one bit is defined\n   in this document.  When bit zero (the least\
    \ significant bit with\n   bitmask 0x0001) is set, it indicates IPv6 Stack Capability.\n\
    \   The presence of the Stack Capability Interface Parameter sub-TLV is\n   relevant\
    \ only when the PW type is IP PW.  A PE that supports IPv6 on\n   an IP PW MUST\
    \ signal the Stack Capability Interface Parameter sub-TLV\n   in the initial Label\
    \ Mapping message for the PW.  The PE nodes\n   compare the value advertised by\
    \ the remote PE with the local\n   configuration and only use a capability that\
    \ is supported by both.\n   The behavior of a PE that does not understand an Interface\
    \ Parameter\n   sub-TLV is specified in Section 5.5 of RFC 4447 [RFC4447].\n \
    \  In some deployment scenarios, it may be desirable to take a PW\n   operationally\
    \ down if there is a mismatch of the Stack Capability\n   between the PEs.  In\
    \ other deployment scenarios, an operator may wish\n   the IP version supported\
    \ by both PEs to fall back to IPv4 if one of\n   the PEs does not support IPv6.\
    \  The following procedures MUST be\n   followed for each of these cases.\n"
- title: 6.1.  PW Operational Down on Stack Capability Mismatch
  contents:
  - "6.1.  PW Operational Down on Stack Capability Mismatch\n   If a PE that supports\
    \ IPv6 and has not yet sent a Label Mapping\n   message receives an initial Label\
    \ Mapping message from the far-end PE\n   that does not include the Stack Capability\
    \ Interface Parameter sub-\n   TLV, or one is received but it is not set to the\
    \ 'IPv6 Stack\n   Capability' value, then the PE supporting this procedure MUST\
    \ NOT\n   send a Label Mapping message for this PW.\n   If a PE that supports\
    \ IPv6 has already sent an initial Label Mapping\n   message for the PW and does\
    \ not receive a Stack Capability Interface\n   Parameter sub-TLV in the Label\
    \ Mapping message from the far-end PE,\n   or one is received but it is not set\
    \ to 'IPv6 Stack Capability', the\n   PE supporting this procedure MUST withdraw\
    \ its PW label with the LDP\n   status code meaning \"IP Address type mismatch\"\
    \ (Status Code\n   0x0000004A).  However, subsequently, if the configuration was\
    \ to\n   change at the far-end PE and a Stack Capability Interface Parameter\n\
    \   sub-TLV in the Label Mapping message is received from the far-end PE,\n  \
    \ the local PE MUST re-advertise the Label Mapping message for the PW.\n"
- title: 6.2.  Stack Capability Fallback
  contents:
  - "6.2.  Stack Capability Fallback\n   If a PE that supports IPv6 and has not yet\
    \ sent a Label Mapping\n   message receives an initial Label Mapping message from\
    \ the far-end PE\n   that does not include the Stack Capability Interface Parameter\
    \ sub-\n   TLV, or one is received but it is not set to the 'IPv6 Stack\n   Capability'\
    \ value, then it MAY send a Label Mapping message for this\n   PW but MUST NOT\
    \ include the Stack Capability Interface Parameter sub-\n   TLV.\n   If a PE that\
    \ supports IPv6 and has already sent a Label Mapping\n   message for the PW with\
    \ the Stack Capability Interface Parameter sub-\n   TLV but does not receive a\
    \ Stack Capability Interface Parameter sub-\n   TLV from the far-end PE in the\
    \ initial Label Mapping message (or one\n   is received but it is not set to the\
    \ 'IPv6 Stack Capability' value),\n   the PE following this procedure MUST send\
    \ a Label Withdraw for its PW\n   label with the LDP status code meaning \"Wrong\
    \ IP Address type\"\n   (Status Code 0x000004B) followed by a Label Mapping message\
    \ that does\n   not include the Stack Capability Interface Parameter sub-TLV.\
    \  If a\n   Label Withdraw message with the \"Wrong IP Address Type\" status code\n\
    \   is received by a PE, it SHOULD treat this as a normal Label Withdraw\n   but\
    \ MUST NOT respond with a Label Release.  It MUST continue to wait\n   for the\
    \ next control message for the PW as specified in Section 6.2\n   of RFC 4447\
    \ [RFC4447].\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  LDP Status Messages
  contents:
  - "7.1.  LDP Status Messages\n   This document uses new LDP status codes.  IANA\
    \ already maintains a\n   registry of name \"Status Code Name Space\" defined\
    \ by [RFC5036].  The\n   following values have been assigned:\n      0x0000002C\
    \ \"IP Address of CE\"\n      0x0000004A \"IP Address Type Mismatch\"\n      0x0000004B\
    \ \"Wrong IP Address Type\"\n"
- title: 7.2.  Interface Parameters
  contents:
  - "7.2.  Interface Parameters\n   This document proposes a new Interface Parameters\
    \ sub-TLV, that has\n   been assigned from the 'Pseudowire Interface Parameters\
    \ Sub-TLV type\n   Registry'.  The following value has been assigned for the Parameter\n\
    \   ID:\n      0x16   \"Stack Capability\"\n   IANA has also set up a registry\
    \ of \"L2VPN PE stack Capabilities\".\n   This is a 16-bit field.  Stack Capability\
    \ bitmask 0x0001 is specified\n   in Section 6 of this document.  The remaining\
    \ bitfield values\n   (0x0002,..,0x8000) are to be assigned by IANA using the\
    \ \"IETF Review\"\n   policy defined in [RFC5226].\n   L2VPN PE Stack Capabilities:\n\
    \   Bit (Value)       Description\n   ===============   ========================\n\
    \   Bit 0  (0x0001) - IPv6 stack capability\n   Bit 1  (0x0002) - Unassigned\n\
    \   Bit 2  (0x0004) - Unassigned\n            .\n            .\n            .\n\
    \   Bit 14 (0x4000) - Unassigned\n   Bit 15 (0x8000) - Unassigned\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The security aspect of this solution is addressed\
    \ for two planes: the\n   control plane and the data plane.\n"
- title: 8.1.  Control Plane Security
  contents:
  - "8.1.  Control Plane Security\n   Control plane security pertains to establishing\
    \ the LDP connection\n   and to pseudowire signaling and CE IP address distribution\
    \ over that\n   LDP connection.  For greater security, the LDP connection between\
    \ two\n   trusted PEs MUST be secured by each PE verifying the incoming\n   connection\
    \ against the configured address of the peer and\n   authenticating the LDP messages,\
    \ as described in Section 2.9 of\n   [RFC5036].  Pseudowire signaling between\
    \ two secure LDP peers does\n   not pose a security issue but mis-wiring could\
    \ occur due to\n   configuration error.  However, the fact that the pseudowire\
    \ will only\n   be established if the two PEs have matching configurations (e.g.,\
    \ PW\n   ID, PW type, and MTU) provides some protection against mis-wiring due\n\
    \   to configuration errors.\n   Learning the IP address of the appropriate CE\
    \ can be a security\n   issue.  It is expected that the Attachment Circuit to\
    \ the local CE\n   will be physically secured.  If this is a concern, the PE MUST\
    \ be\n   configured with the IP and MAC address of the CE when connected with\n\
    \   Ethernet, IP and virtual circuit information (DLCI or VPI/VCI\n   (Virtual\
    \ Path Identifier / Virtual Circuit Identifier) when connected\n   over Frame\
    \ Relay or ATM, and IP address only when connected over PPP.\n   During ARP/Inverse\
    \ ARP frame processing, the PE MUST verify the\n   received information against\
    \ local configuration before forwarding\n   the information to the remote PE to\
    \ protect against hijacking of the\n   connection.\n   For IPv6, the preferred\
    \ means of security is Secure Neighbor\n   Discovery (SEND) [RFC3971].  SEND provides\
    \ a mechanism for securing\n   Neighbor Discovery packets over media (such as\
    \ wireless links) that\n   may be insecure and open to packet interception and\
    \ substitution.\n   SEND is based upon cryptographic signatures of Neighbor Discovery\n\
    \   packets.  These signatures allow the receiving node to detect packet\n   modification\
    \ and confirm that a received packet originated from the\n   claimed source node.\
    \  SEND is incompatible with the Neighbor\n   Discovery packet modifications described\
    \ in this document.  As such,\n   SEND cannot be used for Neighbor Discovery across\
    \ an ARP Mediation\n   pseudowire.  PEs taking part in IPv6 ARP Mediation MUST\
    \ remove all\n   SEND packet options from Neighbor Discovery packets before forwarding\n\
    \   into the pseudowire.  If the CE devices are configured to accept only\n  \
    \ SEND Neighbor Discovery packets, Neighbor Discovery will fail.  Thus,\n   the\
    \ CE devices MUST be configured to accept non-SEND packets, even if\n   they treat\
    \ them with lower priority than SEND packets.  Because SEND\n   cannot be used\
    \ in combination with IPv6 ARP Mediation, it is\n   suggested that IPv6 ARP Mediation\
    \ only be used with secure Attachment\n   Circuits.  An exception to this recommendation\
    \ applies to an\n   implementation that supports the SEND Proxy [RFC6496], which\
    \ allows a\n   device such as PE to act as an ND proxy as described in [RFC6496].\n"
- title: 8.2.  Data Plane Security
  contents:
  - "8.2.  Data Plane Security\n   The data traffic between CE and PE is not encrypted,\
    \ and it is\n   possible that in an insecure environment, a malicious user may\
    \ tap\n   into the CE-to-PE connection and generate traffic using the spoofed\n\
    \   destination MAC address on the Ethernet Attachment Circuit.  In order\n  \
    \ to avoid such hijacking, the local PE may verify the source MAC\n   address\
    \ of the received frame against the MAC address of the admitted\n   connection.\
    \  The frame is forwarded to the PW only when authenticity\n   is verified.  When\
    \ spoofing is detected, the PE MUST sever the\n   connection with the local CE,\
    \ tear down the PW, and start over.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The authors would like to thank Yetik Serbest, Prabhu\
    \ Kavi, Bruce\n   Lasley, Mark Lewis, Carlos Pignataro, and others who participated\
    \ in\n   the discussions related to this document.\n"
- title: 10.  Contributors
  contents:
  - "10.  Contributors\n   This document is the combined effort of many who have contributed,\n\
    \   carefully reviewed, and provided technical clarifications.  This\n   includes\
    \ the individuals listed in this section and those listed in\n   the Editors'\
    \ Addresses.\n   Matthew Bocci\n   Alcatel-Lucent\n   EMail: Mathew.bocci@alcatel-lucent.com\n\
    \   Tiberiu Grigoriu\n   Alcatel-Lucent\n   EMail: Tiberiu.Grigoriu@alcatel-lucent.com\n\
    \   Neil Hart\n   Alcatel-Lucent\n   EMail: Neil.Hart@alcatel-lucent.com\n   Andrew\
    \ Dolganow\n   Alcatel-Lucent\n   EMail: Andrew.Dolganow@alcatel-lucent.com\n\
    \   Shane Amante\n   Level 3\n   EMail: Shane@castlepoint.net\n   Toby Smith\n\
    \   Google\n   EMail: tob@google.com\n   Andrew G. Malis\n   Verizon\n   EMail:\
    \ Andy.g.Malis@verizon.com\n   Steven Wright\n   Bell South Corp\n   EMail: steven.wright@bellsouth.com\n\
    \   Waldemar Augustyn\n   Consultant\n   EMail: waldemar@wdmsys.com\n   Arun Vishwanathan\n\
    \   Juniper Networks\n   EMail: arunvn@juniper.net\n   Ashwin Moranganti\n   IneoQuest\
    \ Technologies\n   EMail: Ashwin.Moranganti@Ineoquest.com\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC826]   Plummer, D., \"Ethernet Address Resolution\
    \ Protocol: Or\n              Converting Network Protocol Addresses to 48.bit\
    \ Ethernet\n              Address for Transmission on Ethernet Hardware\", STD\
    \ 37,\n              RFC 826, November 1982.\n   [RFC2390]  Bradley, T., Brown,\
    \ C., and A. Malis, \"Inverse Address\n              Resolution Protocol\", RFC\
    \ 2390, September 1998.\n   [RFC4447]  Martini, L., Ed., Rosen, E., El-Aawar,\
    \ N., Smith, T., and\n              G. Heron, \"Pseudowire Setup and Maintenance\
    \ Using the\n              Label Distribution Protocol (LDP)\", RFC 4447, April\
    \ 2006.\n   [RFC4446]  Martini, L., \"IANA Allocations for Pseudowire Edge to\
    \ Edge\n              Emulation (PWE3)\", BCP 116, RFC 4446, April 2006.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC5036]  Andersson, L., Ed., Minei,\
    \ I., Ed., and B. Thomas, Ed.,\n              \"LDP Specification\", RFC 5036,\
    \ October 2007.\n   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n\
    \              \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n   \
    \           September 2007.\n   [RFC3122]  Conta, A., \"Extensions to IPv6 Neighbor\
    \ Discovery for\n              Inverse Discovery Specification\", RFC 3122, June\
    \ 2001.\n   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n\
    \              Address Autoconfiguration\", RFC 4862, September 2007.\n   [RFC3971]\
    \  Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure\
    \ Neighbor Discovery (SEND)\", RFC 3971, March 2005.\n   [RFC5226]  Narten, T.\
    \ and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC4664]  Andersson, L., Ed., and E. Rosen,\
    \ Ed., \"Framework for\n              Layer 2 Virtual Private Networks (L2VPNs)\"\
    , RFC 4664,\n              September 2006.\n   [RFC1332]  McGregor, G., \"The\
    \ PPP Internet Protocol Control Protocol\n              (IPCP)\", RFC 1332, May\
    \ 1992.\n   [RFC5072]  Varada, S., Ed., Haskins, D., and E. Allen, \"IP Version\
    \ 6\n              over PPP\", RFC 5072, September 2007.\n   [RFC925]   Postel,\
    \ J., \"Multi-LAN address resolution\", RFC 925,\n              October 1984.\n\
    \   [RFC1256]  Deering, S., Ed., \"ICMP Router Discovery Messages\", RFC\n   \
    \           1256, September 1991.\n   [RFC5309]  Shen, N., Ed., and A. Zinin,\
    \ Ed., \"Point-to-Point\n              Operation over LAN in Link State Routing\
    \ Protocols\", RFC\n              5309, October 2008.\n   [RFC6496]   Krishnan,\
    \ S., Laganier, J., Bonola, M., and A. Garcia-\n              Martinez, \"Secure\
    \ Proxy ND Support for SEcure Neighbor\n              Discovery (SEND)\", RFC\
    \ 6496, February 2012.\n"
- title: Appendix A.  Use of IGPs with IP L2 Interworking L2VPNs
  contents:
  - "Appendix A.  Use of IGPs with IP L2 Interworking L2VPNs\n   In an IP L2 interworking\
    \ L2VPN, when an IGP on a CE connected to a\n   broadcast link is cross-connected\
    \ with an IGP on a CE connected to a\n   point-to-point link, there are routing\
    \ protocol related issues that\n   MUST be addressed.  The link state routing\
    \ protocols are cognizant of\n   the underlying link characteristics and behave\
    \ accordingly when\n   establishing neighbor adjacencies, representing the network\
    \ topology,\n   and passing protocol packets.  The point-to-point operations of\
    \ the\n   routing protocols over a LAN are discussed in [RFC5309].\n"
- title: A.1.  OSPF
  contents:
  - "A.1.  OSPF\n   The OSPF protocol treats a broadcast link type with a special\n\
    \   procedure that engages in Neighbor Discovery to elect a designated\n   router\
    \ and a backup designated router (DR and BDR, respectively),\n   with which each\
    \ other router on the link forms adjacencies.  However,\n   these procedures are\
    \ neither applicable nor understood by OSPF\n   running on a point-to-point link.\
    \  By cross-connecting two neighbors\n   with disparate link types, an IP L2 interworking\
    \ L2VPN may experience\n   connectivity issues.\n   Additionally, the link type\
    \ specified in the router Link State\n   Advertisement (LSA) will not match for\
    \ the two cross-connected\n   routers.\n   Finally, each OSPF router generates\
    \ network LSAs when connected to a\n   broadcast link such as Ethernet, receipt\
    \ of which by an OSPF router\n   that believes itself to be connected to a point-to-point\
    \ link further\n   adds to the confusion.\n   Fortunately, the OSPF protocol provides\
    \ a configuration option\n   (ospfIfType) whereby OSPF will treat the underlying\
    \ physical\n   broadcast link as a point-to-point link.\n   It is strongly recommended\
    \ that all OSPF protocols on CE devices\n   connected to Ethernet interfaces use\
    \ this configuration option when\n   attached to a PE that is participating in\
    \ an IP L2 Interworking VPN.\n"
- title: A.2.  RIP
  contents:
  - "A.2.  RIP\n   The RIP protocol broadcasts RIP advertisements every 30 seconds.\
    \  If\n   the multicast/broadcast traffic snooping mechanism is used as\n   described\
    \ in Section 4.1, the attached PE can learn the local CE\n   router's IP address\
    \ from the IP header of its advertisements.  No\n   special configuration is required\
    \ for RIP in this type of Layer 2 IP\n   Interworking L2VPN.\n"
- title: A.3.  IS-IS
  contents:
  - "A.3.  IS-IS\n   The IS-IS protocol does not encapsulate its PDUs in IP; hence,\
    \ it\n   cannot be supported in IP L2 Interworking L2VPNs.\n"
- title: Editors' Addresses
  contents:
  - "Editors' Addresses\n   Himanshu Shah (editor)\n   Ciena\n   EMail: hshah@ciena.com\n\
    \   Eric Rosen (editor)\n   Cisco Systems\n   EMail: erosen@cisco.com\n   Giles\
    \ Heron (editor)\n   Cisco Systems\n   EMail: giheron@cisco.com\n   Vach Kompella\
    \ (editor)\n   Alcatel-Lucent\n   EMail: vach.kompella@alcatel-lucent.com\n"
