- title: __initial_text__
  contents:
  - '               GigaBeam High-Speed Radio Link Encryption

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the encryption and key management used by\n\
    \   GigaBeam as part of the WiFiber(tm) family of radio link products.\n   The\
    \ security solution is documented in the hope that other wireless\n   product\
    \ development efforts will include comparable capabilities.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The GigaBeam WiFiber(tm) product family provides a high-speed\
    \ point-\n   to-point radio link.  Data rates exceed 1 gigabit/second at a\n \
    \  distance of about a mile.  The transmission beam width is less than\n   one\
    \ degree, which means that attempts to intercept the signal are\n   most successful\
    \ when the attacker is either between the transmitter\n   and receiver or the\
    \ attacker is directly behind the receiver.  Since\n   interception is possible,\
    \ some customers require confidentiality and\n   integrity protection for the\
    \ data on the radio link.  This document\n   describes the security solution designed\
    \ and deployed by GigaBeam to\n   provide these security services.\n   The GigaBeam\
    \ security solution employs:\n      o  AES-GCM [GCM] with a custom security protocol\
    \ specified in this\n         document to provide confidentiality and integrity\
    \ protection of\n         subscriber traffic on the radio link;\n      o  AES-CBC\
    \ [CBC] and HMAC-SHA-1 [HMAC] with IPsec ESP [ESP] to\n         provide confidentiality\
    \ and integrity protection of management\n         traffic between the radio control\
    \ modules;\n      o  AES-CBC [CBC] and HMAC-SHA-1 [HMAC] with the IKE protocol\
    \ [IKE]\n         to provide confidentiality and integrity protection of key\n\
    \         management traffic between the radio control modules; and\n      o \
    \ OAKLEY key agreement [OAKLEY] and RSA digital signatures\n         [PKCS1] are\
    \ used with IKE to establish keying material and to\n         provide authentication.\n\
    \   AES-GCM is used with the custom security protocol in a manner that is\n  \
    \ very similar to its use in ESP [ESP-GCM].\n"
- title: 2.  GigaBeam High-Speed Radio Link Overview
  contents:
  - "2.  GigaBeam High-Speed Radio Link Overview\n   The GigaBeam high-speed radio\
    \ link appears to be a fiber interface\n   between two network devices.  Figure\
    \ 1 illustrates the connection of\n   two devices that normally communicate using\
    \ Gigabit Ethernet over a\n   fiber optic cable.\n     +---------+     +----------+\
    \        +----------+     +---------+\n     |         |     |          +----/\
    \   |          |     |         |\n     | Network |     | GigaBeam |   /    | GigaBeam\
    \ |     | Network |\n     | Device  +=====+  Radio   |  /---- +  Radio   +=====+\
    \ Device  |\n     |         |     |          |        |          |     |     \
    \    |\n     +---------+  ^  +----------+   ^    +----------+  ^  +---------+\n\
    \                  |                 |                  |\n                  |\
    \                 |                  |\n          Gigabit Ethernet          |\
    \          Gigabit Ethernet\n                           GigaBeam Radio Link\n\
    \                     Figure 1.  GigaBeam Radio Link Example.\n   Gigabit Ethernet\
    \ traffic is encoded in 8B/10B format.  The GigaBeam\n   Radio Control Module\
    \ (RCM) removes this coding to recover the 8-bit\n   characters plus an indication\
    \ of whether the character is a control\n   code.  The radio link frame is constructed\
    \ from 224 10-bit input\n   words, and a 4-way interleaved (56,50,10) Reed-Solomon\
    \ Forward Error\n   Correction (FEC) block is employed.  Conversion of the Gigabit\n\
    \   Ethernet data from 8B/10B format creates 224 bits of additional\n   capacity\
    \ in each frame, and another 196 bits is gained by recoding\n   the 9-bit data\
    \ using 64B/65B block codes.  This additional 420 bits\n   of capacity is used\
    \ for the framing overhead required for FEC and\n   link control.\n"
- title: 2.1.  GigaBeam Radio Link Frame Format
  contents:
  - "2.1.  GigaBeam Radio Link Frame Format\n   The GigaBeam radio link frame fields\
    \ are summarized in Figure 2,\n   which also provides the length of each field\
    \ in bits.\n      Field   Length   Description\n      -----   ------   -----------\n\
    \      SYNC       11    Frame Synchronization Pattern ('10110111000'b)\n     \
    \ KEYSEL      1    Indicates which AES key was used for this frame\n      PN \
    \        40    AES-GCM Packet Number\n      FLAGS      28    Control bits, one\
    \ bit for each 64B/65B data block\n      DCC         8    Data Communications\
    \ Channel\n      DATA     1792    Data (28 encrypted 64B/65B code blocks)\n  \
    \    TAG        96    Authentication Tag\n      SPARE      24    Reserved for\
    \ alternative FEC algorithms\n      CHECK     240    Reed-Solomon Check Words\
    \ for 4 10-bit\n                       symbol (56,50) code\n              Figure\
    \ 2.  GigaBeam Radio Link Frame Structure.\n   Each of the fields in the GigaBeam\
    \ 2240-bit radio link frame is\n   described below.\n      SYNC     Synchronization\
    \ field, an 11-bit Barker code.  Always set\n               to '10110111000'b.\n\
    \      KEYSEL   Key Selector -- select the appropriate key register for\n    \
    \           this frame.  Two key registers are maintained to allow\n         \
    \      seamless rollover between encryption keys.\n      PN       Packet Number\
    \ -- needed by AES-GCM; it carries the unique\n               counter value for\
    \ this frame.  The value is incremented\n               for each frame.\n    \
    \  FLAGS    Control bits, one for each 64B/65B data block carried in\n       \
    \        the DATA field.  If the bit is set, then the\n               corresponding\
    \ 64B/65B block in the DATA field contains a\n               control code.  This\
    \ field is integrity protected by AES-\n               GCM.\n      DCC      Data\
    \ Communications Channel -- each frame carries one\n               octet of the\
    \ point-to-point data communications channel\n               between the two radio\
    \ control modules.  See Section 2.2\n               for more information on the\
    \ DCC.\n      DATA     Subscriber data carried as 28 64B/65B code blocks.  This\n\
    \               field is encrypted and integrity protected by AES-GCM.\n     \
    \ TAG      The authentication tag generated by AES-GCM, truncated to\n       \
    \        96 bits.\n      SPARE    24 bits, set to zero.\n      CHECK    Forward\
    \ error correction check value -- 24 check symbols\n               are generated\
    \ by a 4-way interleaved Reed-Solomon\n               (56,50,10) algorithm.  FEC\
    \ is always active, but\n               correction can be selectively enabled.\
    \  For each frame,\n               FEC processing also returns the number of bit\
    \ errors, the\n               number of symbols in error, and whether the FEC\n\
    \               processing failed for the frame.  This information allows\n  \
    \             an estimation of the bit error rate for the link.\n"
- title: 2.2.  Data Communications Channel
  contents:
  - "2.2.  Data Communications Channel\n   The Data Communications Channel (DCC) field\
    \ reserves eight bits in\n   each 2240-bit radio link frame for use in constructing\
    \ a dedicated\n   point-to-point link between the two RCMs.  The DCC content is\n\
    \   connected to a Universal Asynchronous Receiver/Transmitter (UART)\n   controller\
    \ that processes the DCC bit stream to provide an\n   asynchronous serial channel\
    \ that is visible to the RCM operating\n   system.  The Point-to-Point Protocol\
    \ (PPP) [PPP] is used on the\n   serial channel to create a simple two-node Internet\
    \ Protocol (IP)\n   network.  Each IP datagram is spread over a large number of\
    \ radio\n   link frames.  This two-node IP network carries management protocols\n\
    \   between the GigaBeam RCMs.\n   IKE [IKE] runs on this two-node IP network\
    \ to manage all\n   cryptographic keying material.  IPsec ESP [ESP] is used in\
    \ the usual\n   fashion to protect all non-IKE traffic on the data control channel.\n\
    \   IPsec ESP employs AES-CBC as described in [ESP-CBC] and HMAC-SHA-1 as\n  \
    \ described in [ESP-HMAC].\n"
- title: 3.  Radio Link Processing
  contents:
  - "3.  Radio Link Processing\n   The fiber interface constantly provides a stream\
    \ of data encoded in\n   8B/10B format.  A radio link frame is constructed from\
    \ 224 10-bit\n   input words.  Conversion of the data from 8B/10B format creates\
    \ 224\n   bits of additional capacity in each frame, and then recoding using\n\
    \   64B/65B block codes creates another 196 bits of additional capacity.\n   After\
    \ encryption, the 64B/65B blocks are carried in the DATA field,\n   and the control\
    \ code indicator bits are carried in the FLAGS field.\n   The additional capacity\
    \ is used for the framing overhead.\n   Processing proceeds as follows:\n   o\
    \  encryption and integrity protection as described in Section 3.1;\n   o  forward\
    \ error correction (FEC) processing as described in Section\n      3.2;\n   o\
    \  scrambling as described in Section 3.3; and\n   o  differential encoding as\
    \ described in Section 3.4.\n"
- title: 3.1.  Encryption and Integrity Protection
  contents:
  - "3.1.  Encryption and Integrity Protection\n   The GigaBeam RCM contains two key\
    \ registers.  The single-bit KEYSEL\n   field indicates which of the two registers\
    \ was used for the frame.\n   AES-GCM [GCM] employs counter mode for encryption.\
    \  Therefore, a\n   unique value for each frame is needed to construct the counter.\
    \  The\n   counter includes a 32-bit salt value provided by IKE and a 40-bit\n\
    \   packet number from the PN field in the radio link frame.  The same\n   counter\
    \ value must not be used for more than one frame encrypted with\n   the same key.\
    \  The 128-bit counter block is constructed as shown in\n   Figure 3.  The first\
    \ 96 bits of the AES counter block are called the\n   Nonce in the AES-GCM algorithm\
    \ description.  Note that AES-GCM uses\n   BLOCK values of zero and one for its\
    \ own use.  The values beginning\n   with two are used for encrypting the radio\
    \ link frame payload.\n      Field   Length   Description\n      -----   ------\
    \   -----------\n      SALT       32    Salt value generated during the IKE exchange\n\
    \      MBZ1       24    These bits must be zero\n      PN         40    AES-GCM\
    \ Packet Number carried in PN field\n      MBZ2       28    These bits must be\
    \ zero\n      BLOCK       4    Block counter used in AES-GCM\n               \
    \ Figure 3.  AES Counter Block Construction.\n   AES-GCM is used to protect the\
    \ FLAGS and DATA fields.  The FLAGS\n   field is treated as authenticated header\
    \ data, and it is integrity\n   protected, but it is not encrypted.  The DATA\
    \ field is encrypted and\n   authenticated.  The TAG field contains the authentication\
    \ tag\n   generated by AES-GCM, truncated to 96 bits.\n   Reception processing\
    \ performs decryption and integrity checking.  If\n   the integrity checks fail,\
    \ to maintain a continuous stream of\n   traffic, the frame is replaced with K30.7\
    \ control characters.  These\n   control characters are normally used to mark\
    \ errors in the data\n   stream.  Without encryption and integrity checking, these\
    \ control\n   characters usually indicate 8B/10B running disparity or code errors.\n"
- title: 3.2.  Forward Error Correction (FEC)
  contents:
  - "3.2.  Forward Error Correction (FEC)\n   The 224 10-bit data symbols that make\
    \ up each radio link frame are\n   grouped into 4 subframes each consisting of\
    \ 56 symbols.  The\n   subframes are formed by symbol interleaving.  A Reed-Solomon\
    \ Code,\n   RS(56,50), designed for 10-bit symbols is applied to each subframe.\n\
    \   This Reed Solomon Code detects 6 errors and corrects 3 errors within\n   each\
    \ subframe.  The FEC function is always active; however, it is\n   possible to\
    \ disable correction of the received data to support\n   debugging.\n"
- title: 3.3.  Scrambler
  contents:
  - "3.3.  Scrambler\n   The scrambler ensures that long series of one bits and long\
    \ series of\n   zero bits do not occur.  When encryption is enabled, long series\
    \ of\n   common bit values is very unlikely; however, during the initial IKE\n\
    \   exchange, the radio link frame payload is all zero bits.\n   The scrambling\
    \ polynomial is (1 + x^14 + x^15).  All words of a frame\n   except the SYNC pattern\
    \ are scrambled prior to transmission using\n   this linear feedback shift register\
    \ (LFSR).  The LFSR is initialized\n   to all ones at the start of each frame,\
    \ prior to the first processed\n   bit.  Each processed input bit is added modulo\
    \ 2 (i.e., an XOR) to\n   the output of the x15 tap to form the output bit.\n\
    \   On reception, an identical process is performed after frame\n   synchronization\
    \ and prior to subsequent processing to recover the\n   original bit pattern.\n"
- title: 3.4.  Differential Encoding
  contents:
  - "3.4.  Differential Encoding\n   The data stream is differentially encoded to\
    \ avoid symbol ambiguity\n   at the receiver.  Since the demodulator could produce\
    \ true or\n   inverted data depending on the details of the radio frequency (RF)\n\
    \   and intermediate frequency (IF) processing chains, differential\n   encoding\
    \ is used to ensure proper reception of the intended bit\n   value.  A zero bit\
    \ is encoded as no change from the previous output\n   bit, and a one bit is encoded\
    \ as a change from the previous output\n   bit.  Thus, an output bit is the result\
    \ of XORing the unencoded bit\n   with the previously transmitted encoded bit.\n\
    \   On reception, a complementary operation will be performed to produce\n   the\
    \ decoded datastream.  The bitstream is formed by XORing the\n   received encoded\
    \ bit and the previously received encoded bit.\n"
- title: 4.  Key Management
  contents:
  - "4.  Key Management\n   The Internet Key Exchange (IKE) is used for key management\
    \ [IKE].\n   IKE has two phases.  In Phase 1, two Internet Security Association\n\
    \   and Key Management Protocol (ISAKMP) peers establish a secure,\n   authenticated\
    \ channel with which to communicate.  This is called the\n   ISAKMP Security Association\
    \ (SA).  In the GigaBeam environment, the\n   Phase 1 exchange is IKE Aggressive\
    \ Mode with signatures and\n   certificates.  The RSA signature algorithm is used.\n\
    \   Phase 2 negotiates the Security Associations for the GigaBeam custom\n   security\
    \ protocol that protects subscriber traffic and IPsec ESP that\n   protects management\
    \ traffic between the GigaBeam RCMs.  In the\n   GigaBeam environment, the Phase\
    \ 2 exchange is IKE Quick Mode, without\n   perfect forward secrecy (PFS).  The\
    \ information exchanged along with\n   Quick Mode is protected by the ISAKMP SA.\
    \  That is, all payloads\n   except the ISAKMP header are encrypted.  A detailed\
    \ description of\n   Quick Mode can be found in Section 5.5 of [IKE].\n   When\
    \ the Security Association is no longer needed, the ISAKMP Delete\n   Payload\
    \ is used to tell the peer GigaBeam device that it is being\n   discarded.\n"
- title: 4.1.  Certificates
  contents:
  - "4.1.  Certificates\n   Each GigaBeam device generates its own public/private\
    \ key pair.  This\n   generation is performed at the factory, and the public key\
    \ is\n   certified by a Certification Authority (CA) in the factory.  The\n  \
    \ certificate includes a name of the following format:\n   C=US O=GigaBeam Corporation\
    \ OU=GigaBeam WiFiber(tm)\n   SerialNumber=<device-model-identifier>/<device-serial-number>\n\
    \   The ISAKMP Certificate Payload is used to transport certificates, and\n  \
    \ in the GigaBeam environment, the \"X.509 Certificate - Signature\"\n   certificate\
    \ encoding type (indicated by a value of 4) is always used.\n   GigaBeam devices\
    \ are always installed in pairs.  At installation\n   time, each one is configured\
    \ with the device model identifier and\n   device serial number of its peer. \
    \ The device model identifier and\n   device serial number of a backup device\
    \ can also be provided.  An\n   access control check is performed when certificates\
    \ are exchanged.\n   The certificate subject name must match one of these configured\n\
    \   values, and the certification path must validate to a configured\n   trust\
    \ anchor, such as the GigaBeam Root CA, using the validation\n   rules in [PKIX1].\n"
- title: 4.2.  Oakley Groups
  contents:
  - "4.2.  Oakley Groups\n   With IKE, several possible Diffie-Hellman groups are\
    \ supported.\n   These groups originated with the Oakley protocol and are therefore\n\
    \   called \"Oakley Groups\".\n   GigaBeam devices use group 14, which is described\
    \ in Section 3 of\n   [MODP].\n"
- title: 4.3.  Security Protocol Identifier
  contents:
  - "4.3.  Security Protocol Identifier\n   The ISAKMP proposal syntax was specifically\
    \ designed to allow for the\n   simultaneous negotiation of multiple Phase 2 security\
    \ protocol\n   suites.  The identifiers for the IPsec Domain of Interpretation\
    \ (DOI)\n   are given in [IPDOI].\n   The GigaBeam custom security protocol has\
    \ been assigned the\n   PROTO_GIGABEAM_RADIO protocol identifier, with a value\
    \ of 5.\n   The PROTO_GIGABEAM_RADIO specifies the use of the GigaBeam radio link\n\
    \   frame structure, which uses a single algorithm for both\n   confidentiality\
    \ and authentication.  The following table indicates\n   the algorithm values\
    \ that are currently defined.\n      Transform ID                      Value\n\
    \      ------------                      -----\n      RESERVED               \
    \             0\n      GIGABEAM_AES128_GCM                 1\n"
- title: 4.4.  Keying Material
  contents:
  - "4.4.  Keying Material\n   GIGABEAM_AES128_GCM requires 20 octets of keying material\
    \ (called\n   KEYMAT in [IKE]).  The first 16 octets are the 128-bit AES key,\
    \ and\n   the remaining four octets are used as the salt value in the AES\n  \
    \ counter block.\n   Presently, AES with a 128-bit key is the only encryption\
    \ algorithm\n   that is supported.  Other encryption algorithms could be registered\n\
    \   in the future.\n"
- title: 4.5.  Identification Type Values
  contents:
  - "4.5.  Identification Type Values\n   The following table lists the assigned values\
    \ for the Identification\n   Type field found in the ISAKMP Identification Payload.\n\
    \      ID Type                           Value\n      -------                \
    \           -----\n      RESERVED                            0\n      ID_IPV4_ADDR\
    \                        1\n      ID_FQDN                             2\n    \
    \  ID_USER_FQDN                        3\n      ID_IPV4_ADDR_SUBNET          \
    \       4\n      ID_IPV6_ADDR                        5\n      ID_IPV6_ADDR_SUBNET\
    \                 6\n      ID_IPV4_ADDR_RANGE                  7\n      ID_IPV6_ADDR_RANGE\
    \                  8\n      ID_DER_ASN1_DN                      9\n      ID_DER_ASN1_GN\
    \                     10\n      ID_KEY_ID                          11\n   The\
    \ ID_DER_ASN1_DN will be used when negotiating security\n   associations for use\
    \ with the GigaBeam custom security protocol.  The\n   provided distinguished\
    \ name must match the peer's subject name\n   provided in the X.509 certificate.\n"
- title: 4.6.  Security Parameter Index
  contents:
  - "4.6.  Security Parameter Index\n   The least significant bit of the Security\
    \ Parameter Index (SPI) is\n   used in the GigaBeam custom security protocol.\
    \  When two GigaBeam\n   custom security protocol security associations are active\
    \ at the same\n   time for communications in the same direction, the least significant\n\
    \   bit of the SPI must be different to ensure that these active security\n  \
    \ associations can be distinguished by the single bit in the GigaBeam\n   custom\
    \ security protocol.\n"
- title: 4.7.  Key Management Latency
  contents:
  - "4.7.  Key Management Latency\n   The IKE exchange over the DCC must complete\
    \ before subscriber data\n   can be exchanged in the GigaBeam radio link frame\
    \ payload.  Since\n   each radio link frame carries a small portion of an IP datagram,\
    \ many\n   radio link frames carrying all zero bits must be sent and received\
    \ to\n   complete the IKE exchange.\n   Once the initial keying material is in\
    \ place, the IKE exchanges to\n   establish subsequent keying material can be\
    \ performed concurrent with\n   the transfer of subscriber data in the radio link\
    \ frame payload.  The\n   KEYSEL field in the radio link frame is used to indicate\
    \ which keying\n   material is being used.\n   The PN field in radio link frame\
    \ provides a continuous indication of\n   the number of frames that have been\
    \ encrypted with a particular key.\n   Once a threshold is exceeded, the IKE exchanges\
    \ begin to establish\n   the replacement keying material.  Currently, the exchanges\
    \ begin when\n   half of the packet numbers have been used, but any threshold\
    \ can be\n   employed, as long as the replacement keying material is available\n\
    \   before the packet counters are exhausted.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The security considerations in [IKE], [OAKLEY],\
    \ [PKCS1], and [ESP]\n   apply to the security system defined in this document.\n\
    \   Confidentiality and integrity are provided by the use of negotiated\n   algorithms.\
    \  AES-GCM [GCM] is used with the GigaBeam custom security\n   protocol to provide\
    \ confidentiality and integrity protection of\n   subscriber traffic on the radio\
    \ link.  AES-CBC [CBC] and HMAC-SHA-1\n   [HMAC] are used with IPsec ESP [ESP]\
    \ to provide confidentiality and\n   integrity protection of management traffic\
    \ between the radio control\n   modules.\n   AES-GCM makes use of AES Counter\
    \ mode to provide confidentiality.\n   Unfortunately, it is very easy to misuse\
    \ counter mode.  If counter\n   block values are ever used for more than one frame\
    \ with the same key,\n   then the same key stream will be used to encrypt both\
    \ frames, and the\n   confidentiality guarantees are voided.  Using AES Counter\
    \ mode with\n   the same counter values to encrypt two plaintexts under the same\
    \ key\n   leaks the plaintext.  The automated key management described here is\n\
    \   intended to prevent this from ever happening.\n   Since AES has a 128-bit\
    \ block size, regardless of the mode employed,\n   the ciphertext generated by\
    \ AES encryption becomes distinguishable\n   from random values after 2^64 blocks\
    \ are encrypted with a single key.\n   Since the GigaBeam radio link frame allows\
    \ for up to 2^40 fixed-\n   length frames in a single security association, there\
    \ is no\n   possibility for more than 2^64 blocks to be encrypted with one key.\n\
    \   The lifetime of a particular AES key can be shorter than 2^40 frames.\n  \
    \ A smaller threshold can be used as a trigger to transition to the\n   next key.\
    \  This capability allows straightforward implementation of\n   policies that\
    \ require the key to be changed after a particular volume\n   of traffic or a\
    \ particular amount of time.\n   There are fairly generic precomputation attacks\
    \ against all block\n   cipher modes that allow a meet-in-the-middle attack against\
    \ the key.\n   These attacks require the creation and searching of huge tables\
    \ of\n   ciphertext associated with known plaintext and known keys.  Assuming\n\
    \   that the memory and processor resources are available for a\n   precomputation\
    \ attack, then the theoretical strength of AES Counter\n   mode (and any other\
    \ block cipher mode) is limited to 2^(n/2) bits,\n   where n is the number of\
    \ bits in the key.  The use of long keys is\n   the best countermeasure to precomputation\
    \ attacks.  The unpredictable\n   nonce value in the counter block significantly\
    \ increases the size of\n   the table that the attacker must compute to mount\
    \ a successful\n   precomputation attack.\n   Rekeying with Quick Mode results\
    \ in new keys to protect GigaBeam\n   radio link frames; however, these keys are\
    \ generated from the same\n   Diffie-Hellman shared secret.  In order to limit\
    \ the amount of data\n   that would be exposed by the disclosure of this Diffie-Hellman\
    \ shared\n   secret or the associated Diffie-Hellman private key, implementations\n\
    \   should periodically rekey using a new Phase 1 exchange.\n   Diffie-Hellman\
    \ exponents used in IKE Phase 1 should be erased from\n   memory immediately after\
    \ use.  Likewise, AES and HMAC-SHA-1 keying\n   material should be erased from\
    \ memory when it is no longer needed.\n   This security solution makes use of\
    \ IKEv1 [IKE].  IKEv1 was selected\n   over IKEv2 [IKEv2] primarily due to the\
    \ availability of an\n   implementation for the processing environment.  The use\
    \ of IKEv2\n   would provide some useful capabilities, such as Diffie-Hellman\
    \ group\n   negotiation.  These additional capabilities would not significantly\n\
    \   improve the security of the overall key management solution that runs\n  \
    \ on the two-node IP network.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has assigned one IPsec Security Protocol Identifier\
    \ in\n   http://www.iana.org/assignments/isakmp-registry for\n   PROTO_GIGABEAM_RADIO.\
    \  It was assigned the value 5.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [CBC]      Dworkin, M., \"Recommendation for Block\
    \ Cipher Modes of\n              Operation: Methods and Techniques,\" NIST Special\n\
    \              Publication 800-38A, December 2001.\n   [ESP]      Kent, S., \"\
    IP Encapsulating Security Payload (ESP)\", RFC\n              4303, December 2005.\n\
    \   [ESP-CBC]  Frankel, S., Glenn, R., and S. Kelly, \"The AES-CBC Cipher\n  \
    \            Algorithm and Its Use with IPsec\", RFC 3602, September\n       \
    \       2003.\n   [ESP-GCM]  Viega, J. and D. McGrew, \"The Use of Galois/Counter\
    \ Mode\n              (GCM) in IPsec Encapsulating Security Payload (ESP)\", RFC\n\
    \              4106, June 2005.\n   [ESP-HMAC] Madson, C. and R. Glenn, \"The\
    \ Use of HMAC-SHA-1-96 within\n              ESP and AH\", RFC 2404, November\
    \ 1998.\n   [GCM]      McGrew, D. and J. Viega, \"The Galois/Counter Mode of\n\
    \              Operation (GCM)\", Submission to NIST.\n              http://csrc.nist.gov/CryptoToolkit/modes/proposedmodes/\n\
    \              gcm/gcm-spec.pdf, January 2004.  [Soon: NIST SP 800-38D.]\n   [HMAC]\
    \     Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC:  Keyed-\n           \
    \   Hashing for Message Authentication\", RFC 2104, February\n              1997.\n\
    \   [IKE]      Harkins, D. and D. Carrel, \"The Internet Key Exchange\n      \
    \        (IKE)\", RFC 2409, November 1998.\n   [IKEv2]    Kaufman, C., \"The Internet\
    \ Key Exchange (IKEv2) Protocol\",\n              RFC 2306, December 2005.\n \
    \  [IPDOI]    Piper, D., \"The Internet IP Security Domain of\n              Interpretation\
    \ for ISAKMP\", RFC 2407, November 1998.\n   [MODP]     Kivinen, T. and M. Kojo.\
    \ \"More Modular Exponential (MODP)\n              Diffie-Hellman groups for Internet\
    \ Key Exchange (IKE)\",\n              RFC 3526, May 2003.\n   [OAKLEY]   Orman,\
    \ H., \"The Oakley Key Determination Protocol\", RFC\n              2412, November\
    \ 1998.\n   [PKCS1]    Kaliski, B., \"PKCS #1: RSA Encryption Version 1.5\", RFC\n\
    \              2313, March 1998.\n   [PKIX1]    Housley, R., Polk, W., Ford, W.,\
    \ and D. Solo, \"Internet\n              X.509 Public Key Infrastructure Certificate\
    \ and\n              Certificate Revocation List (CRL) Profile\", RFC 3280,\n\
    \              April 2002.\n   [PPP]      Simpson, W., \"The Point-to-Point Protocol\
    \ (PPP)\", STD 51,\n              RFC 1661, July 1994.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors thank Bob Sutherland and Dave Marcellas\
    \ for their\n   contributions and review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Russell Housley\n   Vigil Security, LLC\n   918 Spring\
    \ Knoll Drive\n   Herndon, VA 20170\n   USA\n   EMail: housley@vigilsec.com\n\
    \   Alan Corry\n   GigaBeam Corporation\n   470 Springpark Place, Suite 900\n\
    \   Herndon, VA 20170\n   USA\n   EMail: publications@gigabeam.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
