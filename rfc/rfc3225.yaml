- contents:
  - '                 Indicating Resolver Support of DNSSEC

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   In order to deploy DNSSEC (Domain Name System Security Extensions)\n
    \  operationally, DNSSEC aware servers should only perform automatic\n   inclusion
    of DNSSEC RRs when there is an explicit indication that the\n   resolver can understand
    those RRs.  This document proposes the use of\n   a bit in the EDNS0 header to
    provide that explicit indication and\n   describes the necessary protocol changes
    to implement that\n   notification.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   DNSSEC [RFC2535] has been specified to provide data integrity
    and\n   authentication to security aware resolvers and applications through\n
    \  the use of cryptographic digital signatures.  However, as DNSSEC is\n   deployed,
    non-DNSSEC-aware clients will likely query DNSSEC-aware\n   servers.  In such
    situations, the DNSSEC-aware server (responding to\n   a request for data in a
    signed zone) will respond with SIG, KEY,\n   and/or NXT records.  For reasons
    described in the subsequent section,\n   such responses can have significant negative
    operational impacts for\n   the DNS infrastructure.\n   This document discusses
    a method to avoid these negative impacts,\n   namely DNSSEC-aware servers should
    only respond with SIG, KEY, and/or\n   NXT RRs when there is an explicit indication
    from the resolver that\n   it can understand those RRs.\n   For the purposes of
    this document, \"DNSSEC security RRs\" are\n   considered RRs of type SIG, KEY,
    or NXT.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL
    NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 1. Introduction
- contents:
  - "2. Rationale\n   Initially, as DNSSEC is deployed, the vast majority of queries
    will\n   be from resolvers that are not DNSSEC aware and thus do not\n   understand
    or support the DNSSEC security RRs.  When a query from\n   such a resolver is
    received for a DNSSEC signed zone, the DNSSEC\n   specification indicates the
    nameserver must respond with the\n   appropriate DNSSEC security RRs.  As DNS
    UDP datagrams are limited to\n   512 bytes [RFC1035], responses including DNSSEC
    security RRs have a\n   high probability of resulting in a truncated response
    being returned\n   and the resolver retrying the query using TCP.\n   TCP DNS
    queries result in significant overhead due to connection\n   setup and teardown.
    \ Operationally, the impact of these TCP queries\n   will likely be quite detrimental
    in terms of increased network\n   traffic (typically five packets for a single
    query/response instead\n   of two), increased latency resulting from the additional
    round trip\n   times, increased incidences of queries failing due to timeouts,
    and\n   significantly increased load on nameservers.\n   In addition, in preliminary
    and experimental deployment of DNSSEC,\n   there have been reports of non-DNSSEC
    aware resolvers being unable to\n   handle responses which contain DNSSEC security
    RRs, resulting in the\n   resolver failing (in the worst case) or entire responses
    being\n   ignored (in the better case).\n   Given these operational implications,
    explicitly notifying the\n   nameserver that the client is prepared to receive
    (if not understand)\n   DNSSEC security RRs would be prudent.\n   Client-side
    support of DNSSEC is assumed to be binary -- either the\n   client is willing
    to receive all DNSSEC security RRs or it is not\n   willing to accept any.  As
    such, a single bit is sufficient to\n   indicate client-side DNSSEC support.  As
    effective use of DNSSEC\n   implies the need of EDNS0 [RFC2671], bits in the \"classic\"
    (non-EDNS\n   enhanced DNS header) are scarce, and there may be situations in
    which\n   non-compliant caching or forwarding servers inappropriately copy data\n
    \  from classic headers as queries are passed on to authoritative\n   servers,
    the use of a bit from the EDNS0 header is proposed.\n   An alternative approach
    would be to use the existence of an EDNS0\n   header as an implicit indication
    of client-side support of DNSSEC.\n   This approach was not chosen as there may
    be applications in which\n   EDNS0 is supported but in which the use of DNSSEC
    is inappropriate.\n"
  title: 2. Rationale
- contents:
  - "3. Protocol Changes\n   The mechanism chosen for the explicit notification of
    the ability of\n   the client to accept (if not understand) DNSSEC security RRs
    is using\n   the most significant bit of the Z field on the EDNS0 OPT header in\n
    \  the query.  This bit is referred to as the \"DNSSEC OK\" (DO) bit.  In\n   the
    context of the EDNS0 OPT meta-RR, the DO bit is the first bit of\n   the third
    and fourth bytes of the \"extended RCODE and flags\" portion\n   of the EDNS0
    OPT meta-RR, structured as follows:\n                +0 (MSB)                +1
    (LSB)\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n      0: |
    \  EXTENDED-RCODE      |       VERSION         |\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2: |DO|                    Z                       |\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \  Setting the DO bit to one in a query indicates to the server that the\n   resolver
    is able to accept DNSSEC security RRs.  The DO bit cleared\n   (set to zero) indicates
    the resolver is unprepared to handle DNSSEC\n   security RRs and those RRs MUST
    NOT be returned in the response\n   (unless DNSSEC security RRs are explicitly
    queried for).  The DO bit\n   of the query MUST be copied in the response.\n   More
    explicitly, DNSSEC-aware nameservers MUST NOT insert SIG, KEY,\n   or NXT RRs
    to authenticate a response as specified in [RFC2535]\n   unless the DO bit was
    set on the request.  Security records that\n   match an explicit SIG, KEY, NXT,
    or ANY query, or are part of the\n   zone data for an AXFR or IXFR query, are
    included whether or not the\n   DO bit was set.\n   A recursive DNSSEC-aware server
    MUST set the DO bit on recursive\n   requests, regardless of the status of the
    DO bit on the initiating\n   resolver request.  If the initiating resolver request
    does not have\n   the DO bit set, the recursive DNSSEC-aware server MUST remove
    DNSSEC\n   security RRs before returning the data to the client, however cached\n
    \  data MUST NOT be modified.\n   In the event a server returns a NOTIMP, FORMERR
    or SERVFAIL response\n   to a query that has the DO bit set, the resolver SHOULD
    NOT expect\n   DNSSEC security RRs and SHOULD retry the query without EDNS0 in\n
    \  accordance with section 5.3 of [RFC2671].\n"
  title: 3. Protocol Changes
- contents:
  - "Security Considerations\n   The absence of DNSSEC data in response to a query
    with the DO bit set\n   MUST NOT be taken to mean no security information is available
    for\n   that zone as the response may be forged or a non-forged response of\n
    \  an altered (DO bit cleared) query.\n"
  title: Security Considerations
- contents:
  - "IANA Considerations\n   EDNS0 [RFC2671] defines 16 bits as extended flags in
    the OPT record,\n   these bits are encoded into the TTL field of the OPT record
    (RFC2671\n   section 4.6).\n   This document reserves one of these bits as the
    OK bit.  It is\n   requested that the left most bit be allocated.  Thus the USE
    of the\n   OPT record TTL field would look like\n                +0 (MSB)                +1
    (LSB)\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n      0: |
    \  EXTENDED-RCODE      |       VERSION         |\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
    \     2: |DO|                    Z                       |\n         +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n"
  title: IANA Considerations
- contents:
  - "Acknowledgements\n   This document is based on a rough draft by Bob Halley with
    input from\n   Olafur Gudmundsson, Andreas Gustafsson, Brian Wellington, Randy
    Bush,\n   Rob Austein, Steve Bellovin, and Erik Nordmark.\n"
  title: Acknowledgements
- contents:
  - "References\n   [RFC1034] Mockapetris, P., \"Domain Names - Concepts and Facilities\",\n
    \            STD 13, RFC 1034, November 1987.\n   [RFC1035] Mockapetris, P., \"Domain
    Names - Implementation and\n             Specifications\", STD 13, RFC 1035, November
    1987.\n   [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n             Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2535] Eastlake, D., \"Domain Name
    System Security Extensions\", RFC\n             2535, March 1999.\n   [RFC2671]
    Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\", RFC\n             2671, August
    1999.\n"
  title: References
- contents:
  - "Author's Address\n   David Conrad\n   Nominum Inc.\n   950 Charter Street\n   Redwood
    City, CA 94063\n   USA\n   Phone: +1 650 381 6003\n   EMail: david.conrad@nominum.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
