- contents:
  - "                    Pseudowire Setup and Maintenance\n              Using the
    Label Distribution Protocol (LDP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Layer 2 services (such as Frame Relay, Asynchronous Transfer Mode,\n
    \  and Ethernet) can be emulated over an MPLS backbone by encapsulating\n   the
    Layer 2 Protocol Data Units (PDUs) and then transmitting them\n   over pseudowires
    (PWs).  It is also possible to use pseudowires to\n   provide low-rate Time-Division
    Multiplexed and Synchronous Optical\n   NETworking circuit emulation over an MPLS-enabled
    network.  This\n   document specifies a protocol for establishing and maintaining
    the\n   pseudowires, using extensions to the Label Distribution Protocol\n   (LDP).
    \ Procedures for encapsulating Layer 2 PDUs are specified in\n   other documents.\n
    \  This document is a rewrite of RFC 4447 for publication as an Internet\n   Standard.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8077.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Changes from RFC 4447 ...........................................6\n   3.
    Specification of Requirements ...................................6\n   4. The
    Pseudowire Label ............................................7\n   5. Details
    Specific to Particular Emulated Services ................9\n      5.1. IP Layer
    2 Transport .......................................9\n   6. LDP .............................................................9\n
    \     6.1. The PWid FEC Element .......................................9\n      6.2.
    The Generalized PWid FEC Element ..........................11\n           6.2.1.
    Attachment Identifiers .............................12\n           6.2.2. Encoding
    the Generalized PWid FEC Element ..........14\n                  6.2.2.1. PW Interface
    Parameters TLV ...............15\n                  6.2.2.2. PW Group ID TLV ...........................15\n
    \          6.2.3. Signaling Procedures ...............................16\n      6.3.
    Signaling of Pseudowire Status ............................17\n           6.3.1.
    Use of Label Mapping Messages ......................17\n           6.3.2. Signaling
    PW Status ................................18\n           6.3.3. Pseudowire Status
    Negotiation Procedures ...........19\n      6.4. Interface Parameter Sub-TLV ...............................20\n
    \     6.5. LDP Label Withdrawal Procedures ...........................21\n   7.
    Control Word ...................................................22\n      7.1.
    PW Types for Which the Control Word Is REQUIRED ...........22\n      7.2. PW Types
    for Which the Control Word Is NOT Mandatory ......22\n      7.3. Control-Word
    Renegotiation by Label Request Message .......24\n      7.4. Sequencing Considerations
    .................................25\n           7.4.1. Label Advertisements ...............................25\n
    \          7.4.2. Label Release ......................................25\n   8.
    IANA Considerations ............................................26\n      8.1.
    LDP TLV TYPE ..............................................26\n      8.2. LDP
    Status Codes ..........................................26\n      8.3. FEC Type
    Name Space .......................................26\n   9. Security Considerations
    ........................................26\n      9.1. Data-Plane Security .......................................27\n
    \     9.2. Control-Plane Security ....................................28\n   10.
    Interoperability and Deployment ...............................29\n   11. References
    ....................................................29\n      11.1. Normative
    References .....................................29\n      11.2. Informative References
    ...................................30\n   Acknowledgments ...................................................31\n
    \  Contributors ......................................................32\n   Authors'
    Addresses ................................................35\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC4619], [RFC4717], [RFC4618], and [RFC4448] explain how
    to\n   encapsulate a Layer 2 Protocol Data Unit (PDU) for transmission over\n
    \  an MPLS-enabled network.  Those documents specify that a \"pseudowire\n   header\",
    consisting of a demultiplexer field, will be prepended to\n   the encapsulated
    PDU.  The pseudowire demultiplexer field is\n   prepended before transmitting
    a packet on a pseudowire.  When the\n   packet arrives at the remote endpoint
    of the pseudowire, the\n   demultiplexer is what enables the receiver to identify
    the particular\n   pseudowire on which the packet has arrived.  To transmit the
    packet\n   from one pseudowire endpoint to another, the packet may need to\n   travel
    through a \"Packet Switched Network (PSN) tunnel\"; this will\n   require that
    an additional header be prepended to the packet.\n   [RFC4842] and [RFC4553] specify
    two methods for transporting time-\n   division multiplexing (TDM) digital signals
    (TDM circuit emulation)\n   over a packet-oriented MPLS-enabled network.  The
    transmission system\n   for circuit-oriented TDM signals is the Synchronous Optical
    Network\n   (SONET) [ANSI] / Synchronous Digital Hierarchy (SDH) [ITUG].  To\n
    \  support TDM traffic, which includes voice, data, and private leased-\n   line
    service, the pseudowires must emulate the circuit\n   characteristics of SONET/SDH
    payloads.  The TDM signals and payloads\n   are encapsulated for transmission
    over pseudowires.  A pseudowire\n   demultiplexer and a PSN tunnel header are
    prepended to this\n   encapsulation.\n   [RFC4553] describes methods for transporting
    low-rate time-division\n   multiplexing (TDM) digital signals (TDM circuit emulation)
    over PSNs,\n   while [RFC4842] similarly describes transport of high-rate TDM\n
    \  (SONET/SDH).  To support TDM traffic, the pseudowires must emulate\n   the
    circuit characteristics of the original T1, E1, T3, E3, SONET, or\n   SDH signals.
    \ [RFC4553] does this by encapsulating an arbitrary but\n   constant amount of
    the TDM data in each packet, and the other methods\n   encapsulate TDM structures.\n
    \  In this document, we specify the use of the MPLS Label Distribution\n   Protocol
    (LDP) [RFC5036] as a protocol for setting up and maintaining\n   the pseudowires.
    \ In particular, we define new TLVs, Forwarding\n   Equivalence Class (FEC) elements,
    parameters, and codes for LDP,\n   which enable LDP to identify pseudowires and
    to signal attributes of\n   pseudowires.  We specify how a pseudowire endpoint
    uses these TLVs in\n   LDP to bind a demultiplexer field value to a pseudowire
    and how it\n   informs the remote endpoint of the binding.  We also specify\n
    \  procedures for reporting pseudowire status changes, for passing\n   additional
    information about the pseudowire as needed, and for\n   releasing the bindings.
    \ These procedures are intended to be\n   independent of the underlying version
    of IP used for LDP signaling.\n   In the protocol specified herein, the pseudowire
    demultiplexer field\n   is an MPLS label.  Thus, the packets that are transmitted
    from one\n   end of the pseudowire to the other are MPLS packets, which must be\n
    \  transmitted through an MPLS tunnel.  However, if the pseudowire\n   endpoints
    are immediately adjacent and penultimate hop popping\n   behavior is in use, the
    MPLS tunnel may not be necessary.  Any sort\n   of PSN tunnel can be used, as
    long as it is possible to transmit MPLS\n   packets through it.  The PSN tunnel
    can itself be an MPLS LSP, or any\n   other sort of tunnel that can carry MPLS
    packets.  Procedures for\n   setting up and maintaining the MPLS tunnels are outside
    the scope of\n   this document.\n   This document deals only with the setup and
    maintenance of point-to-\n   point pseudowires.  Neither point-to-multipoint nor
    multipoint-to-\n   point pseudowires are discussed.\n   QoS-related issues are
    not discussed in this document.\n   The following two figures describe the reference
    models that are\n   derived from [RFC3985] to support the PW emulated services.\n
    \        |<-------------- Emulated Service ---------------->|\n         |                                                  |\n
    \        |          |<------- Pseudowire ------->|          |\n         |          |
    \                           |          |\n         |Attachment|    |<-- PSN Tunnel
    -->|    |Attachment|\n         |  Circuit V    V                  V    V  Circuit
    |\n         V   (AC)   +----+                  +----+   (AC)   V\n   +-----+    |
    \    | PE1|==================| PE2|     |    +-----+\n   |     |----------|............PW1.............|----------|
    \    |\n   | CE1 |    |     |    |                  |    |     |    | CE2 |\n
    \  |     |----------|............PW2.............|----------|     |\n   +-----+
    \ ^ |     |    |==================|    |     | ^  +-----+\n         ^  |       +----+
    \                 +----+     | |  ^\n         |  |   Provider Edge 1         Provider
    Edge 2  |  |\n         |  |                                            |  |\n
    \  Customer |                                            | Customer\n   Edge 1
    \  |                                            | Edge 2\n            |                                            |\n
    \     native service                               native service\n                     Figure
    1: PWE3 Reference Model\n    +-----------------+                           +-----------------+\n
    \   |Emulated Service |                           |Emulated Service |\n    |(e.g.,
    TDM, ATM) |<==== Emulated Service ===>|(e.g., TDM, ATM) |\n    +-----------------+
    \                          +-----------------+\n    |    Payload      |                           |
    \   Payload      |\n    |  Encapsulation  |<====== Pseudowire =======>|  Encapsulation
    \ |\n    +-----------------+                           +-----------------+\n    |PW
    Demultiplexer |                           |PW Demultiplexer |\n    |   PSN Tunnel,
    \  |<======= PSN Tunnel ======>|  PSN Tunnel,    |\n    | PSN & Physical  |                           |
    PSN & Physical  |\n    |     Layers      |                           |    Layers
    \      |\n    +-------+---------+        ___________        +---------+-------+\n
    \           |                /             \\                 |\n            +===============/
    \    PSN       \\================+\n                            \\               /\n
    \                            \\_____________/\n              Figure 2: PWE3 Protocol
    Stack Reference Model\n   For the purpose of this document, PE1 (Provider Edge
    1) will be\n   defined as the ingress router, and PE2 as the egress router.  A
    Layer\n   2 PDU will be received at PE1, encapsulated at PE1, transported and\n
    \  decapsulated at PE2, and transmitted out of PE2.\n"
  title: 1.  Introduction
- contents:
  - "2.  Changes from RFC 4447\n   The changes in this document are mostly minor fixes
    to spelling and\n   grammar, or clarifications to the text, which were either
    noted as\n   errata to [RFC4447] or found by the editors.\n   Additionally, Section
    7.3 (\"Control-Word Renegotiation by Label\n   Request Message\") has been added,
    obsoleting [RFC6723].  The diagram\n   of C-bit handling procedures has also been
    removed.  A note has been\n   added in Section 6.3.2 to clarify that the C-bit
    is part of the FEC.\n   A reference has also been added to [RFC7358] to indicate
    the use of\n   downstream unsolicited mode to distribute PW FEC label bindings,\n
    \  independent of the negotiated label advertisement mode of the LDP\n   session.\n"
  title: 2.  Changes from RFC 4447
- contents:
  - "3.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 3.  Specification of Requirements
- contents:
  - "4.  The Pseudowire Label\n   Suppose that it is desired to transport Layer 2
    PDUs from ingress LSR\n   PE1 to egress LSR PE2, across an intervening MPLS-enabled
    network.\n   We assume that there is an MPLS tunnel from PE1 to PE2.  That is,
    we\n   assume that PE1 can cause a packet to be delivered to PE2 by\n   encapsulating
    the packet in an \"MPLS tunnel header\" and sending the\n   result to one of its
    adjacencies.  The MPLS tunnel is an MPLS Label\n   Switched Path (LSP); thus,
    putting on an MPLS tunnel encapsulation is\n   a matter of pushing on an MPLS
    label.\n   We presuppose that a large number of pseudowires can be carried\n   through
    a single MPLS tunnel.  Thus, it is never necessary to\n   maintain state in the
    network core for individual pseudowires.  We do\n   not presuppose that the MPLS
    tunnels are point to point; although the\n   pseudowires are point to point, the
    MPLS tunnels may be multipoint to\n   point.  We do not presuppose that PE2 will
    even be able to determine\n   the MPLS tunnel through which a received packet
    was transmitted.\n   (For example, if the MPLS tunnel is an LSP and penultimate
    hop\n   popping is used, when the packet arrives at PE2, it will contain no\n
    \  information identifying the tunnel.)\n   When PE2 receives a packet over a
    pseudowire, it must be able to\n   determine that the packet was in fact received
    over a pseudowire, and\n   it must be able to associate that packet with a particular\n
    \  pseudowire.  PE2 is able to do this by examining the MPLS label that\n   serves
    as the pseudowire demultiplexer field shown in Figure 2.  Call\n   this label
    the \"PW label\".\n   When PE1 sends a Layer 2 PDU to PE2, it creates an MPLS
    packet by\n   adding the PW label to the packet, thus creating the first entry
    of\n   the label stack.  If the PSN tunnel is an MPLS LSP, the PE1 pushes\n   another
    label (the tunnel label) onto the packet as the second entry\n   of the label
    stack.  The PW label is not visible again until the MPLS\n   packet reaches PE2.
    \ PE2's disposition of the packet is based on the\n   PW label.\n   If the payload
    of the MPLS packet is, for example, an ATM Adaptation\n   Layer 5 (AAL5) PDU,
    the PW label will generally correspond to a\n   particular ATM Virtual Circuit
    (VC) at PE2.  That is, PE2 needs to be\n   able to infer from the PW label the
    outgoing interface and the\n   VPI/VCI (Virtual Path Identifier / Virtual Circuit
    Identifier) value\n   for the AAL5 PDU.  If the payload is a Frame Relay PDU,
    then PE2\n   needs to be able to infer from the PW label the outgoing interface\n
    \  and the Data Link Connection Identifier (DLCI) value.  If the payload\n   is
    an Ethernet frame, then PE2 needs to be able to infer from the PW\n   label the
    outgoing interface, and perhaps the VLAN identifier.  This\n   process is unidirectional
    and will be repeated independently for\n   bidirectional operation.  When using
    the PWid FEC Element, it is\n   REQUIRED that the same PW ID and PW type be assigned
    for a given\n   circuit in both directions.  The Group ID (see below) MUST NOT
    be\n   required to match in both directions.  The transported frame MAY be\n   modified
    when it reaches the egress router.  If the header of the\n   transported Layer
    2 frame is modified, this MUST be done at the\n   egress LSR only.  Note that
    the PW label must always be at the bottom\n   of the packet's label stack, and
    labels MUST be allocated from the\n   per-platform label space.\n   This document
    does not specify a method for distributing the MPLS\n   tunnel label or any other
    labels that may appear above the PW label\n   on the stack.  Any acceptable method
    of MPLS label distribution will\n   do.  This document specifies a protocol for
    assigning and\n   distributing the PW label.  This protocol is LDP, extended as\n
    \  specified in the remainder of this document.  An LDP session must be\n   set
    up between the pseudowire endpoints.  LDP MUST exchange PW FEC\n   label bindings
    in downstream unsolicited mode, independent of the\n   negotiated label advertisement
    mode of the LDP session according to\n   the specifications in [RFC7358].  LDP's
    \"liberal label retention\"\n   mode SHOULD be used.  However, all the LDP procedures
    that are\n   specified in [RFC5036] and that are also applicable to this protocol\n
    \  specification MUST be implemented.\n   This document requires that a receiving
    LSR MUST respond to a Label\n   Request message with either a Label Mapping for
    the requested label\n   or a Notification message that indicates why it cannot
    satisfy the\n   request.  These procedures are specified in [RFC5036], Sections
    3.5.7\n   (\"Label Mapping Message\") and 3.5.8 (\"Label Request Message\").  Note\n
    \  that sending these responses is a stricter requirement than is\n   specified
    in [RFC5036], but these response messages are REQUIRED to\n   ensure correct operation
    of this protocol.\n   In addition to the protocol specified herein, static assignment
    of PW\n   labels may be used, and implementations of this protocol SHOULD\n   provide
    support for static assignment.  PW encapsulation is always\n   symmetrical in
    both directions of traffic along a specific PW,\n   whether or not the PW uses
    an LDP control plane.\n   This document specifies all the procedures necessary
    to set up and\n   maintain the pseudowires needed to support \"unswitched\" point-to-\n
    \  point services, where each endpoint of the pseudowire is provisioned\n   with
    the identity of the other endpoint.  There are also protocol\n   mechanisms specified
    herein that can be used to support switched\n   services and other provisioning
    models.  However, the use of the\n   protocol mechanisms to support those other
    models and services is not\n   described in this document.\n"
  title: 4.  The Pseudowire Label
- contents:
  - '5.  Details Specific to Particular Emulated Services

    '
  - contents:
    - "5.1.  IP Layer 2 Transport\n   This mode carries IP packets over a pseudowire.
      \ The encapsulation\n   used is according to [RFC3032].  The PW control word
      MAY be inserted\n   between the MPLS label stack and the IP payload.  The encapsulation\n
      \  of the IP packets for forwarding on the Attachment Circuit is\n   implementation
      specific, is part of the native service processing\n   (NSP) function [RFC3985],
      and is outside the scope of this document.\n"
    title: 5.1.  IP Layer 2 Transport
  title: 5.  Details Specific to Particular Emulated Services
- contents:
  - "6.  LDP\n   The PW label bindings are distributed using the LDP downstream\n
    \  unsolicited mode described in [RFC5036].  The PEs will establish an\n   LDP
    session using the Extended Discovery mechanism described in\n   Sections 2.4.2
    and 2.5 of [RFC5036].\n   An LDP Label Mapping message contains a FEC TLV, a Label
    TLV, and\n   zero or more optional parameter TLVs.\n   The FEC TLV is used to
    indicate the meaning of the label.  In the\n   current context, the FEC TLV would
    be used to identify the particular\n   pseudowire that a particular label is bound
    to.  In this\n   specification, we define two new FEC TLVs to be used for identifying\n
    \  pseudowires.  When setting up a particular pseudowire, only one of\n   these
    FEC TLVs is used.  The one to be used will depend on the\n   particular service
    being emulated and on the particular provisioning\n   model being supported.\n
    \  LDP allows each FEC TLV to consist of a set of FEC elements.  For\n   setting
    up and maintaining pseudowires, however, each FEC TLV MUST\n   contain exactly
    one FEC element.\n   The LDP base specification has several kinds of label TLVs,
    including\n   the Generic Label TLV, as specified in Section 3.4.2.1 of [RFC5036].\n
    \  For setting up and maintaining pseudowires, the Generic Label TLV\n   MUST
    be used.\n"
  - contents:
    - "6.1.  The PWid FEC Element\n   The PWid FEC Element may be used whenever both
      pseudowire endpoints\n   have been provisioned with the same 32-bit identifier
      for the\n   pseudowire.\n   For this purpose, a new type of FEC element is defined.
      \ The FEC\n   element type is 0x80 and is defined as follows:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |  PWid (0x80)  |C|         PW type             |PW info length |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                          Group ID                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                           PW ID                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                Interface Parameter Sub-TLV                    |\n   |                              \"
      \                               |\n   |                              \"                                |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   -  Control
      word bit (C)\n      The C-bit is used to flag the presence of a control word
      as\n      follows:\n         C = 1 control word present on this PW.\n         C
      = 0 no control word present on this PW.\n      Please see Section 7 (\"Control
      Word\") for further explanation.\n   -  PW type\n      A 15-bit quantity containing
      a value that represents the type of\n      PW.  Assigned Values are specified
      in \"IANA Allocations for\n      Pseudowire Edge to Edge Emulation (PWE3)\"
      [RFC4446].\n   -  PW info length\n      Length of the PW ID field and the Interface
      Parameter Sub-TLV\n      field in octets.  If this value is 0, then it references
      all PWs\n      using the specified Group ID, and there is no PW ID present,
      nor\n      are there any Interface Parameter Sub-TLVs.\n   -  Group ID\n      An
      arbitrary 32-bit value that represents a group of PWs that is\n      used to
      create groups in the PW space.  The Group ID is intended\n      to be used as
      a port index or a virtual tunnel index.  To simplify\n      configuration, a
      particular PW Group ID at ingress could be part\n      of a Group ID assigned
      to the virtual tunnel for transport to the\n      egress router.  The Group
      ID is very useful for sending wildcard\n      label withdrawals or PW wildcard
      status Notification messages to\n      remote PEs upon physical port failure.\n
      \  -  PW ID\n      A non-zero, 32-bit connection ID that together with the PW
      type\n      identifies a particular PW.  Note that the PW ID and the PW type\n
      \     MUST be the same at both endpoints.\n   -  Interface Parameter Sub-TLV\n
      \     This variable length TLV is used to provide interface-specific\n      parameters,
      such as Attachment Circuit MTU.\n      Note that as the Interface Parameter
      Sub-TLV is part of the FEC,\n      the rules of LDP make it impossible to change
      the interface\n      parameters once the pseudowire has been set up.  Thus,
      the\n      interface parameters field must not be used to pass information,\n
      \     such as status information, that may change during the life of the\n      pseudowire.
      \ Optional parameter TLVs should be used for that\n      purpose.\n   Using
      the PWid FEC, each of the two pseudowire endpoints\n   independently initiates
      the setup of a unidirectional LSP.  An\n   outgoing LSP and an incoming LSP
      are bound together into a single\n   pseudowire if they have the same PW ID
      and PW type.\n"
    title: 6.1.  The PWid FEC Element
  - contents:
    - "6.2.  The Generalized PWid FEC Element\n   The PWid FEC Element can be used
      if a unique 32-bit value has been\n   assigned to the PW and if each endpoint
      has been provisioned with\n   that value.  The Generalized PWid FEC Element
      requires that the PW\n   endpoints be uniquely identified; the PW itself is
      identified as a\n   pair of endpoints.  In addition, the endpoint identifiers
      are\n   structured to support applications where the identity of the remote\n
      \  endpoints needs to be auto-discovered rather than statically\n   configured.\n
      \  The \"Generalized PWid FEC Element\" is FEC type 0x81.\n   The Generalized
      PWid FEC Element does not contain anything\n   corresponding to the Group ID
      of the PWid FEC Element.  The\n   functionality of the Group ID is provided
      by a separate optional LDP\n   TLV, the PW Group ID TLV, described in Section
      6.2.2.2.  The\n   interface parameters field of the PWid FEC Element is also
      absent;\n   its functionality is replaced by the optional PW Interface Parameters\n
      \  TLV, described in Section 6.2.2.1.\n"
    - contents:
      - "6.2.1.  Attachment Identifiers\n   As discussed in [RFC3985], a pseudowire
        can be thought of as\n   connecting two \"forwarders\".  The protocol used
        to set up a\n   pseudowire must allow the forwarder at one end of a pseudowire
        to\n   identify the forwarder at the other end.  We use the term \"Attachment\n
        \  Identifier\", or \"AI\", to refer to the field that the protocol uses to\n
        \  identify the forwarders.  In the PWid FEC, the PWid field serves as\n   the
        AI.  In this section, we specify a more general form of AI that\n   is structured
        and of variable length.\n   Every Forwarder in a PE must be associated with
        an Attachment\n   Identifier (AI), either through configuration or through
        some\n   algorithm.  The Attachment Identifier must be unique in the context\n
        \  of the PE router in which the Forwarder resides.  The combination <PE\n
        \  router IP address, AI> must be globally unique.\n   It is frequently convenient
        to regard a set of Forwarders as being\n   members of a particular \"group\",
        where PWs may only be set up among\n   members of a group.  In such cases,
        it is convenient to identify the\n   Forwarders relative to the group, so
        that an Attachment Identifier\n   would consist of an Attachment Group Identifier
        (AGI) plus an\n   Attachment Individual Identifier (AII).\n   An Attachment
        Group Identifier may be thought of as a VPN-id, or a\n   VLAN identifier,
        some attribute that is shared by all the Attachment\n   PWs (or pools thereof)
        that are allowed to be connected.\n   The details of how to construct the
        AGI and AII fields identifying\n   the pseudowire endpoints are outside the
        scope of this specification.\n   Different pseudowire applications, and different
        provisioning models,\n   will require different sorts of AGI and AII fields.
        \ The\n   specification of each such application and/or model must include
        the\n   rules for constructing the AGI and AII fields.\n   As previously discussed,
        a (bidirectional) pseudowire consists of a\n   pair of unidirectional LSPs,
        one in each direction.  If a particular\n   pseudowire connects PE1 with PE2,
        the PW direction from PE1 to PE2\n   can be identified as:\n      <PE1, <AGI,
        AII1>, PE2, <AGI, AII2>>,\n   and the PW direction from PE2 to PE1 can be
        identified by:\n      <PE2, <AGI, AII2>, PE1, <AGI, AII1>>.\n   Note that
        the AGI must be the same at both endpoints, but the AII\n   will in general
        be different at each endpoint.  Thus, from the\n   perspective of a particular
        PE, each pseudowire has a local or\n   \"Source AII\", and a remote or \"Target
        AII\".  The pseudowire setup\n   protocol can carry all three of these quantities:\n
        \  -  Attachment Group Identifier (AGI)\n   -  Source Attachment Individual
        Identifier (SAII)\n   -  Target Attachment Individual Identifier (TAII)\n
        \  If the AGI is non-null, then the Source AI (SAI) consists of the AGI\n
        \  together with the SAII, and the Target AI (TAI) consists of the TAII\n
        \  together with the AGI.  If the AGI is null, then the SAII and TAII\n   are
        the SAI and TAI, respectively.\n   The interpretation of the SAI and TAI is
        a local matter at the\n   respective endpoint.\n   The association of two
        unidirectional LSPs into a single\n   bidirectional pseudowire depends on
        the SAI and the TAI.  Each\n   application and/or provisioning model that
        uses the Generalized PWid\n   FEC must specify the rules for performing this
        association.\n"
      title: 6.2.1.  Attachment Identifiers
    - contents:
      - "6.2.2.  Encoding the Generalized PWid FEC Element\n   FEC element type 0x81
        is used.  The FEC element is encoded as\n   follows:\n     0                   1
        \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |Gen PWid (0x81)|C|         PW Type             |PW info length |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |   AGI Type    |    Length     |      Value                    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   ~                    AGI  Value (contd.)                        ~\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |   AII Type    |    Length     |      Value                    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   ~                   SAII  Value (contd.)                        ~\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |   AII Type    |    Length     |      Value                    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   ~                   TAII Value (contd.)                         ~\n    |
        \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  This document does not specify the AII and AGI type field values;\n   specification
        of the type field values to be used for a particular\n   application is part
        of the specification of that application.  IANA\n   has assigned these values
        using the method defined in [RFC4446].\n   The SAII, TAII, and AGI are simply
        carried as octet strings.  The\n   Length byte specifies the size of the Value
        field.  The null string\n   can be sent by setting the Length byte to 0.  If
        a particular\n   application does not need all three of these sub-elements,
        it MUST\n   send all the sub-elements but set the Length to 0 for the unused
        sub-\n   elements.\n   The PW information length field contains the length
        of the SAII,\n   TAII, and AGI, combined in octets.  If this value is 0, then
        it\n   references all PWs using the specific Group ID (specified in the PW\n
        \  Group ID TLV).  In this case, there are no other FEC element fields\n   (AGI,
        SAII, etc.) present, nor any PW Interface Parameters TLVs.\n   Note that the
        interpretation of a particular field as AGI, SAII, or\n   TAII depends on
        the order of its occurrence.  The Type field\n   identifies the type of the
        AGI, SAII, or TAII.  When comparing two\n   occurrences of an AGI (or SAII
        or TAII), the two occurrences are\n   considered identical if the Type, Length,
        and Value fields of one are\n   identical, respectively, to those of the other.\n"
      - contents:
        - "6.2.2.1.  PW Interface Parameters TLV\n   This TLV MUST only be used when
          sending the Generalized PWid FEC.  It\n   specifies interface-specific parameters.
          \ Specific parameters, when\n   applicable, MUST be used to validate that
          the PEs and the ingress and\n   egress ports at the edges of the circuit
          have the necessary\n   capabilities to interoperate with each other.\n     0
          \                  1                   2                   3\n     0 1 2
          3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \   |0|0|  PW Intf P. TLV (0x096B)  |            Length             |\n
          \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \   | Sub-TLV Type  |    Length     |    Variable Length Value      |\n
          \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \   |                         Variable Length Value                 |\n
          \   |                             \"                                 |\n
          \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  A more detailed description of this field can be found in Section 6.4\n
          \  (\"Interface Parameter Sub-TLV\").\n"
        title: 6.2.2.1.  PW Interface Parameters TLV
      - contents:
        - "6.2.2.2.  PW Group ID TLV\n     0                   1                   2
          \                  3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
          3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \   |0|0| PW Group ID TLV (0x096C)  |            Length             |\n
          \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \   |                             Value                             |\n
          \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  The PW Group ID is an arbitrary 32-bit value that represents an\n   arbitrary
          group of PWs.  It is used to create group PWs; for example,\n   a PW Group
          ID can be used as a port index and assigned to all PWs\n   that lead to
          that port.  Use of the PW Group ID enables a PE to send\n   \"wildcard\"
          label withdrawals, or \"wildcard\" status Notification\n   messages, to
          remote PEs upon physical port failure.\n   Note Well: The PW Group ID is
          different from and has no relation to\n   the Attachment Group Identifier.\n
          \  The PW Group ID TLV is not part of the FEC and will not be advertised\n
          \  except in the PW FEC advertisement.  The advertising PE MAY use the\n
          \  wildcard withdraw semantics, but the remote PEs MUST implement\n   support
          for wildcard messages.  This TLV MUST only be used when\n   sending the
          Generalized PWid FEC.\n   To issue a wildcard command (status or withdraw):\n
          \  -  Set the PW Info Length to 0 in the Generalized PWid FEC Element.\n
          \  -  Send only the PW Group ID TLV with the FEC (no AGI/SAII/TAII is\n
          \     sent).\n"
        title: 6.2.2.2.  PW Group ID TLV
      title: 6.2.2.  Encoding the Generalized PWid FEC Element
    - contents:
      - "6.2.3.  Signaling Procedures\n   In order for PE1 to begin signaling PE2,
        PE1 must know the address of\n   the remote PE2 and a TAI.  This information
        may have been configured\n   at PE1, or it may have been learned dynamically
        via some auto-\n   discovery procedure.\n   The egress PE (PE1), which has
        knowledge of the ingress PE, initiates\n   the setup by sending a Label Mapping
        message to the ingress PE (PE2).\n   The Label Mapping message contains the
        FEC TLV, carrying the\n   Generalized PWid FEC Element (type 0x81).  The Generalized
        PWid FEC\n   Element contains the AGI, SAII, and TAII information.\n   Next,
        when PE2 receives such a Label Mapping message, PE2 interprets\n   the message
        as a request to set up a PW whose endpoint (at PE2) is\n   the Forwarder identified
        by the TAI.  From the perspective of the\n   signaling protocol, exactly how
        PE2 maps AIs to Forwarders is a local\n   matter.  In some Virtual Private
        Wire Service (VPWS) provisioning\n   models, the TAI might, for example, be
        a string that identifies a\n   particular Attachment Circuit, such as \"ATM3VPI4VCI5\",
        or it might,\n   for example, be a string, such as \"Fred\", that is associated
        by\n   configuration with a particular Attachment Circuit.  In Virtual\n   Private
        LAN Service (VPLS), the AGI could be a VPN-id, identifying a\n   particular
        VPLS instance.\n   If PE2 cannot map the TAI to one of its Forwarders, then
        PE2 sends a\n   Label Release message to PE1, with a Status Code of\n   \"Unassigned/Unrecognized
        TAI\", and the processing of the Label\n   Mapping message is complete.\n
        \  The FEC TLV sent in a Label Release message is the same as the FEC\n   TLV
        received in the Label Mapping message being released (but without\n   the
        interface parameter TLV).  More generally, the FEC TLV is the\n   same in
        all LDP messages relating to the same PW.  In a Label Release\n   message,
        this means that the SAII is the remote peer's AII and the\n   TAII is the
        sender's local AII.\n   If the Label Mapping message has a valid TAI, PE2
        must decide whether\n   to accept it.  The procedures for so deciding will
        depend on the\n   particular type of Forwarder identified by the TAI.  Of
        course, the\n   Label Mapping message may be rejected due to standard LDP
        error\n   conditions as detailed in [RFC5036].\n   If PE2 decides to accept
        the Label Mapping message, then it has to\n   make sure that a PW LSP is set
        up in the opposite (PE1-->PE2)\n   direction.  If it has already signaled
        for the corresponding PW LSP\n   in that direction, nothing more needs to
        be done.  Otherwise, it must\n   initiate such signaling by sending a Label
        Mapping message to PE1.\n   This is very similar to the Label Mapping message
        PE2 received, but\n   the SAI and TAI are reversed.\n   Thus, a bidirectional
        PW consists of two LSPs, where the FEC of one\n   has the SAII and TAII reversed
        with respect to the FEC of the other.\n"
      title: 6.2.3.  Signaling Procedures
    title: 6.2.  The Generalized PWid FEC Element
  - contents:
    - '6.3.  Signaling of Pseudowire Status

      '
    - contents:
      - "6.3.1.  Use of Label Mapping Messages\n   The PEs MUST send Label Mapping
        messages to their peers as soon as\n   the PW is configured and administratively
        enabled, regardless of the\n   Attachment Circuit state.  The PW label should
        not be withdrawn\n   unless the operator administratively configures the pseudowire
        down\n   (or the PW configuration is deleted entirely).  Using the procedures\n
        \  outlined in this section, a simple label withdraw method MAY also be\n
        \  supported as a legacy means of signaling PW status and AC status.  In\n
        \  any case, if the label-to-PW binding is not available, the PW MUST be\n
        \  considered in the down state.\n   Once the PW status negotiation procedures
        are completed, if they\n   result in the use of the label withdraw method
        for PW status\n   communication, and this method is not supported by one of
        the PEs,\n   then that PE must send a Label Release message to its peer with
        the\n   following error:\n   \"Label Withdraw PW Status Method Not Supported\"\n
        \  If the label withdraw method for PW status communication is selected\n
        \  for the PW, it will result in the Label Mapping message being\n   advertised
        only if the Attachment Circuit is active.  The PW status\n   signaling procedures
        described in this section MUST be fully\n   implemented.\n"
      title: 6.3.1.  Use of Label Mapping Messages
    - contents:
      - "6.3.2.  Signaling PW Status\n   The PE devices use an LDP TLV to indicate
        status to their remote\n   peers.  This PW Status TLV contains more information
        than the\n   alternative simple Label Withdraw message.\n   The format of
        the PW Status TLV is:\n     0                   1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |1|0|     PW Status (0x096A)    |            Length             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                         Status Code                           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  The status code is a 4-octet bit field as specified in \"IANA\n   Allocations
        for Pseudowire Edge to Edge Emulation (PWE3)\" [RFC4446].\n   The Length field
        specifies the length of the Status Code field in\n   octets (equal to 4).\n
        \  Each bit in the Status Code field can be set individually to indicate\n
        \  more than a single failure at once.  Each fault can be cleared by\n   sending
        an appropriate Notification message in which the respective\n   bit is cleared.
        \ The presence of the lowest bit (PW Not Forwarding)\n   acts only as a generic
        failure indication when there is a link-down\n   event for which none of the
        other bits apply.\n   The Status TLV is transported to the remote PW peer
        via the LDP\n   Notification message as described in [RFC5036].  The format
        of the\n   Notification message for carrying the PW Status is as follows:\n
        \    0                   1                   2                   3\n     0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |0|   Notification (0x0001)     |      Message Length           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                       Message ID                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                       Status (TLV)                            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                      PW Status TLV                            |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |           PWid FEC TLV or Generalized ID FEC TLV              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                PW Group ID TLV (Optional)                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  The Status TLV status code is set to 0x00000028, \"PW status\", to\n   indicate
        that PW status follows.  Since this notification does not\n   refer to any
        particular message, the Message ID field is set to 0.\n   The PW FEC TLV SHOULD
        NOT include the Interface Parameter Sub-TLVs,\n   as they are ignored in the
        context of this message.  However, the PW\n   FEC TLV MUST include the C-bit,
        where applicable, as it is part of\n   the FEC.  When a PE's Attachment Circuit
        encounters an error, use of\n   the PW Notification message allows the PE
        to send a single \"wildcard\"\n   status message, using a PW FEC TLV with
        only the Group ID set, to\n   denote this change in status for all affected
        PW connections.  This\n   status message contains either the PW FEC TLV with
        only the Group ID\n   set, or else it contains the Generalized FEC TLV with
        only the PW\n   Group ID TLV.\n   As mentioned above, the Group ID field of
        the PWid FEC Element, or\n   the PW Group ID TLV used with the Generalized
        PWid FEC Element, can\n   be used to send a status notification for all arbitrary
        sets of PWs.\n   This procedure is OPTIONAL, and if it is implemented, the
        LDP\n   Notification message should be as follows: If the PWid FEC Element
        is\n   used, the PW information length field is set to 0, the PW ID field
        is\n   not present, and the Interface Parameter Sub-TLVs are not present.\n
        \  If the Generalized FEC Element is used, the AGI, SAII, and TAII are\n   not
        present, the PW information length field is set to 0, the PW\n   Group ID
        TLV is included, and the PW Interface Parameters TLV is\n   omitted.  For
        the purpose of this document, this is called the\n   \"wildcard PW status
        notification procedure\", and all PEs implementing\n   this design are REQUIRED
        to accept such a Notification message but\n   are not required to send it.\n"
      title: 6.3.2.  Signaling PW Status
    - contents:
      - "6.3.3.  Pseudowire Status Negotiation Procedures\n   When a PW is first set
        up, the PEs MUST attempt to negotiate the\n   usage of the PW Status TLV.
        \ This is accomplished as follows: A PE\n   that supports the PW Status TLV
        MUST include it in the initial Label\n   Mapping message following the PW
        FEC and the Interface Parameter Sub-\n   TLVs.  The PW Status TLV will then
        be used for the lifetime of the\n   pseudowire.  This is shown in the following
        diagram:\n     0                   1                   2                   3\n
        \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                                                               |\n    +
        \                PWid FEC or Generalized PWid FEC              +\n    |                                                               |\n
        \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |
        \                      Interface Parameters                    |\n    |                              \"
        \                               |\n    |                              \"                                |\n
        \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    |0|0|
        Generic Label (0x0200)    |      Length                   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |     Label                                                     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |1|0|     PW Status (0x096A)    |            Length             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \   |                         Status Code                           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  If a PW Status TLV is included in the initial Label Mapping message\n   for
        a PW, then if the Label Mapping message from the remote PE for\n   that PW
        does not include a PW Status TLV, or if the remote PE does\n   not support
        the PW Status TLV, the PW will revert to the label\n   withdraw method of
        signaling PW status.  Note that if the PW Status\n   TLV is not supported
        by the remote peer, the peer will automatically\n   ignore it, since the I
        (ignore) bit is set in the TLV.  The PW Status\n   TLV, therefore, will not
        be present in the corresponding FEC\n   advertisement from the remote LDP
        peer, which results in exactly the\n   above behavior.\n   If the PW Status
        TLV is not present following the FEC TLV in the\n   initial PW Label Mapping
        message received by a PE, then the PW Status\n   TLV will not be used, and
        both PEs supporting the pseudowire will\n   revert to the label withdraw procedure
        for signaling status changes.\n   If the negotiation process results in the
        usage of the PW Status TLV,\n   then the actual PW status is determined by
        the PW Status TLV that was\n   sent within the initial PW Label Mapping message.
        \ Subsequent updates\n   of PW status are conveyed through the Notification
        message.\n"
      title: 6.3.3.  Pseudowire Status Negotiation Procedures
    title: 6.3.  Signaling of Pseudowire Status
  - contents:
    - "6.4.  Interface Parameter Sub-TLV\n   This field specifies interface-specific
      parameters.  When applicable,\n   it MUST be used to validate that the PEs and
      the ingress and egress\n   ports at the edges of the circuit have the necessary
      capabilities to\n   interoperate with each other.  The field structure is defined
      as\n   follows:\n     0                   1                   2                   3\n
      \    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   | Sub-TLV Type  |    Length     |    Variable Length Value      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                         Variable Length Value                 |\n    |
      \                            \"                                 |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  The Length field is defined as the length of the interface parameter\n   including
      the Sub-TLV Type and Length field itself.  Processing of\n   the interface parameters
      should continue when unknown interface\n   parameters are encountered, and they
      MUST be silently ignored.\n   The Interface Parameter Sub-TLV Type values are
      specified in \"IANA\n   Allocations for Pseudowire Edge to Edge Emulation (PWE3)\"
      [RFC4446].\n   -  Interface MTU sub-TLV type\n      A 2-octet value indicating
      the MTU in octets.  This is the Maximum\n      Transmission Unit, excluding
      encapsulation overhead, of the egress\n      packet interface that will be transmitting
      the decapsulated PDU\n      that is received from the MPLS-enabled network.
      \ This parameter is\n      applicable only to PWs transporting packets and is
      REQUIRED for\n      these PW types.  If this parameter does not match in both\n
      \     directions of a specific PW, that PW MUST NOT be enabled.\n   -  Optional
      Interface Description string sub-TLV type\n      This arbitrary, and OPTIONAL,
      interface description string is used\n      to send a human-readable administrative
      string describing the\n      interface to the remote PE.  This parameter is
      OPTIONAL and is\n      applicable to all PW types.  The interface description
      parameter\n      string length is variable and can be from 0 to 80 octets.  Human-\n
      \     readable text MUST be provided in the UTF-8 charset using the\n      Default
      Language [RFC2277].\n"
    title: 6.4.  Interface Parameter Sub-TLV
  - contents:
    - "6.5.  LDP Label Withdrawal Procedures\n   As mentioned above, the Group ID
      field of the PWid FEC Element, or\n   the PW Group ID TLV used with the Generalized
      PWid FEC Element, can\n   be used to withdraw all PW labels associated with
      a particular PW\n   group.  This procedure is OPTIONAL, and if it is implemented,
      the LDP\n   Label Withdraw message should be as follows: If the PWid FEC Element\n
      \  is used, the PW information length field is set to 0, the PW ID field\n   is
      not present, the Interface Parameter Sub-TLVs are not present, and\n   the Label
      TLV is not present.  If the Generalized FEC Element is\n   used, the AGI, SAII,
      and TAII are not present, the PW information\n   length field is set to 0, the
      PW Group ID TLV is included, the PW\n   Interface Parameters TLV is not present,
      and the Label TLV is not\n   present.  For the purpose of this document, this
      is called the\n   \"wildcard withdraw procedure\", and all PEs implementing
      this design\n   are REQUIRED to accept such withdraw messages but are not required
      to\n   send it.  Note that the PW Group ID TLV only applies to PWs using the\n
      \  Generalized ID FEC Element, while the Group ID only applies to PWid\n   FEC
      Element.\n   The Interface Parameter Sub-TLVs, or TLV, MUST NOT be present in
      any\n   LDP PW Label Withdraw or Label Release message.  A wildcard Label\n
      \  Release message MUST include only the Group ID or PW Group ID TLV.  A\n   Label
      Release message initiated by a PE router must always include\n   the PW ID.\n"
    title: 6.5.  LDP Label Withdrawal Procedures
  title: 6.  LDP
- contents:
  - '7.  Control Word

    '
  - contents:
    - "7.1.  PW Types for Which the Control Word Is REQUIRED\n   The Label Mapping
      messages that are sent in order to set up these PWs\n   MUST have C=1.  When
      a Label Mapping message for a PW of one of these\n   types is received and C=0,
      a Label Release message MUST be sent, with\n   an \"Illegal C-bit\" status code.
      \ In this case, the PW will not be\n   enabled.\n"
    title: 7.1.  PW Types for Which the Control Word Is REQUIRED
  - contents:
    - "7.2.  PW Types for Which the Control Word Is NOT Mandatory\n   If a system
      is capable of sending and receiving the control word on\n   PW types for which
      the control word is not mandatory, then each such\n   PW endpoint MUST be configurable
      with a parameter that specifies\n   whether the use of the control word is PREFERRED
      or NOT PREFERRED.\n   For each PW, there MUST be a default value of this parameter.
      \ This\n   specification does NOT state what the default value should be.\n
      \  If a system is NOT capable of sending and receiving the control word\n   on
      PW types for which the control word is not mandatory, then it\n   behaves exactly
      as if it were configured for the use of the control\n   word to be NOT PREFERRED.\n
      \  If a Label Mapping message for the PW has already been received but\n   no
      Label Mapping message for the PW has yet been sent, then the\n   procedure is
      as follows:\n        -i. If the received Label Mapping message has C=0, send
      a Label\n            Mapping message with C=0; the control word is not used.\n
      \      -ii. If the received Label Mapping message has C=1, and the PW is\n            locally
      configured such that the use of the control word is\n            preferred,
      then send a Label Mapping message with C=1; the\n            control word is
      used.\n      -iii. If the received Label Mapping message has C=1, and the PW
      is\n            locally configured such that the use of the control word is\n
      \           not preferred or the control word is not supported, then act\n            as
      if no Label Mapping message for the PW had been received\n            (i.e.,
      proceed to the next paragraph).\n   If a Label Mapping message for the PW has
      not already been received\n   (or if the received Label Mapping message had
      C=1 and either local\n   configuration says that the use of the control word
      is not preferred\n   or the control word is not supported), then send a Label
      Mapping\n   message in which the C-bit is set to correspond to the locally\n
      \  configured preference for use of the control word.  (That is, set C=1\n   if
      locally configured to prefer the control word, and set C=0 if\n   locally configured
      to prefer not to use the control word or if the\n   control word is not supported).\n
      \  The next action depends on what control message is next received for\n   that
      PW.  The possibilities are as follows:\n        -i. A Label Mapping message
      with the same C-bit value as\n            specified in the Label Mapping message
      that was sent.  PW\n            setup is now complete, and the control word
      is used if C=1\n            but is not used if C=0.\n       -ii. A Label Mapping
      message with C=1, but the Label Mapping\n            message that was sent has
      C=0.  In this case, ignore the\n            received Label Mapping message and
      continue to wait for the\n            next control message for the PW.\n      -iii.
      A Label Mapping message with C=0, but the Label Mapping\n            message
      that was sent has C=1.  In this case, send a Label\n            Withdraw message
      with a \"Wrong C-bit\" status code, followed\n            by a Label Mapping
      message that has C=0.  PW setup is now\n            complete, and the control
      word is not used.\n       -iv. A Label Withdraw message with the \"Wrong C-bit\"
      status code.\n            Treat as a normal Label Withdraw message, but do not\n
      \           respond.  Continue to wait for the next control message for\n            the
      PW.\n   If at any time after a Label Mapping message has been received a\n   corresponding
      Label Withdraw or Release is received, the action taken\n   is the same as for
      any Label Withdraw or Release messages that might\n   be received at any time.\n
      \  If both endpoints prefer the use of the control word, this procedure\n   will
      cause it to be used.  If either endpoint prefers not to use the\n   control
      word or does not support the control word, this procedure\n   will cause it
      not to be used.  If one endpoint prefers to use the\n   control word but the
      other does not, the one that prefers not to use\n   it has no extra protocol
      to execute; it just waits for a Label\n   Mapping message that has C=0.\n"
    title: 7.2.  PW Types for Which the Control Word Is NOT Mandatory
  - contents:
    - "7.3.  Control-Word Renegotiation by Label Request Message\n   It is possible
      that after the PW C-bit negotiation procedure\n   described above is complete,
      the local PE is re-provisioned with a\n   different control word preference.
      \ Therefore, once the control-word\n   negotiation procedures are complete,
      the procedure can be restarted\n   as follows:\n        -i. If the local PE
      previously sent a Label Mapping message, it\n            MUST send a Label Withdraw
      message to the remote PE and wait\n            until it has received a Label
      Release message from the\n            remote PE.\n       -ii. The local PE MUST
      send a Label Release message to the remote\n            PE for the specific
      label associated with the FEC that was\n            advertised for this specific
      PW.  Note: The above-mentioned\n            steps of the Label Release message
      and Label Withdraw\n            message are not required to be executed in any
      specific\n            sequence.\n      -iii. The local PE MUST send a Label
      Request message to the peer\n            PE and then MUST wait until it receives
      a Label Mapping\n            message containing the remote PE's currently configured\n
      \           preference for use of the control word.\n   Once the remote PE has
      successfully processed the Label Withdraw\n   message and Label Release messages,
      it will reset the C-bit\n   negotiation state machine and its use of the control
      word with the\n   locally configured preference.\n   From this point on, the
      local and remote PEs will follow the C-bit\n   negotiation procedures defined
      in the previous section.\n   The above C-bit renegotiation process SHOULD NOT
      be interrupted until\n   it is completed, or unpredictable results might occur.\n"
    title: 7.3.  Control-Word Renegotiation by Label Request Message
  - contents:
    - "7.4.  Sequencing Considerations\n   In the case where the router considers
      the sequence number field in\n   the control word, it is important to note the
      following details when\n   advertising labels.\n"
    - contents:
      - "7.4.1.  Label Advertisements\n   After a label has been withdrawn by the
        output router and/or released\n   by the input router, care must be taken
        not to advertise (reuse) the\n   same released label until the output router
        can be reasonably certain\n   that old packets containing the released label
        no longer persist in\n   the MPLS-enabled network.\n   This precaution is
        required to prevent the imposition router from\n   restarting packet forwarding
        with a sequence number of 1 when it\n   receives a Label Mapping message that
        binds the same FEC to the same\n   label if there are still older packets
        in the network with a sequence\n   number between 1 and 32768.  For example,
        if there is a packet with\n   sequence number=n, where n is in the interval
        [1,32768] traveling\n   through the network, it would be possible for the
        disposition router\n   to receive that packet after it re-advertises the label.
        \ Since the\n   label has been released by the imposition router, the disposition\n
        \  router SHOULD be expecting the next packet to arrive with a sequence\n
        \  number of 1.  Receipt of a packet with a sequence number equal to n\n   will
        result in n packets potentially being rejected by the\n   disposition router
        until the imposition router imposes a sequence\n   number of n+1 into a packet.
        \ Possible methods to avoid this are for\n   the disposition router always
        to advertise a different PW label, or\n   for the disposition router to wait
        for a sufficient time before\n   attempting to re-advertise a recently released
        label.  This is only\n   an issue when sequence number processing is enabled
        at the\n   disposition router.\n"
      title: 7.4.1.  Label Advertisements
    - contents:
      - "7.4.2.  Label Release\n   In situations where the imposition router wants
        to restart forwarding\n   of packets with sequence number 1, the router shall
        1) send to the\n   disposition router a Label Release message, and 2) send
        to the\n   disposition router a Label Request message.  When sequencing is\n
        \  supported, advertisement of a PW label in response to a Label Request\n
        \  message MUST also consider the issues discussed in Section 7.4.1\n   (\"Label
        Advertisements\").\n"
      title: 7.4.2.  Label Release
    title: 7.4.  Sequencing Considerations
  title: 7.  Control Word
- contents:
  - '8.  IANA Considerations

    '
  - contents:
    - "8.1.  LDP TLV TYPE\n   This document uses several new LDP TLV types; IANA already
      maintains\n   a registry titled \"TLV Type Name Space\", defined by RFC 5036.
      \ The\n   following values have been assigned from said registry:\n     TLV
      Type  Description\n     =====================================\n     0x096A    PW
      Status TLV\n     0x096B    PW Interface Parameters TLV\n     0x096C    PW Group
      ID TLV\n"
    title: 8.1.  LDP TLV TYPE
  - contents:
    - "8.2.  LDP Status Codes\n   This document uses several new LDP status codes;
      IANA already\n   maintains a registry titled \"Status Code Name Space\", defined
      by RFC\n   5036.  The following values have been assigned:\n     Range/Value
      \    E     Description                       Reference\n     ------------- -----
      \  ----------------------            ---------\n     0x00000024      0     Illegal
      C-Bit                     [RFC8077]\n     0x00000025      0     Wrong C-Bit
      \                      [RFC8077]\n     0x00000026      0     Incompatible bit-rate
      \            [RFC8077]\n     0x00000027      0     CEP-TDM mis-configuration
      \        [RFC8077]\n     0x00000028      0     PW Status                         [RFC8077]\n
      \    0x00000029      0     Unassigned/Unrecognized TAI       [RFC8077]\n     0x0000002A
      \     0     Generic Misconfiguration Error    [RFC8077]\n     0x0000002B      0
      \    Label Withdraw PW Status          [RFC8077]\n                           Method
      Not Supported\n"
    title: 8.2.  LDP Status Codes
  - contents:
    - "8.3.  FEC Type Name Space\n   This document uses two new FEC element types,
      0x80 and 0x81, from the\n   registry \"Forwarding Equivalence Class (FEC) Type
      Name Space\" for the\n   Label Distribution Protocol (LDP) [RFC5036].\n"
    title: 8.3.  FEC Type Name Space
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   This document specifies the LDP extensions that
    are needed for\n   setting up and maintaining pseudowires.  The purpose of setting
    up\n   pseudowires is to enable Layer 2 frames to be encapsulated in MPLS\n   and
    transmitted from one end of a pseudowire to the other.\n   Therefore, we address
    the security considerations for both the data\n   plane and the control plane.\n"
  - contents:
    - "9.1.  Data-Plane Security\n   With regard to the security of the data plane,
      the following areas\n   must be considered:\n      - MPLS PDU inspection\n      -
      MPLS PDU spoofing\n      - MPLS PDU alteration\n      - MPLS PSN protocol security\n
      \     - Access Circuit security\n      - Denial-of-service prevention on the
      PE routers\n   When an MPLS PSN is used to provide pseudowire service, there
      is a\n   perception that security must be at least equal to the currently\n
      \  deployed Layer 2 native protocol networks that the MPLS/PW network\n   combination
      is emulating.  This means that the MPLS-enabled network\n   SHOULD be isolated
      from outside packet insertion in such a way that\n   it SHOULD NOT be possible
      to insert an MPLS packet into the network\n   directly.  To prevent unwanted
      packet insertion, it is also important\n   to prevent unauthorized physical
      access to the PSN, as well as\n   unauthorized administrative access to individual
      network elements.\n   As mentioned above, an MPLS-enabled network should not
      accept MPLS\n   packets from its external interfaces (i.e., interfaces to CE
      devices\n   or to other providers' networks) unless the top label of the packet\n
      \  was legitimately distributed to the system from which the packet is\n   being
      received.  If the packet's incoming interface leads to a\n   different Service
      Provider (SP) (rather than to a customer), an\n   appropriate trust relationship
      must also be present, including the\n   trust that the other SP also provides
      appropriate security measures.\n   The three main security problems faced when
      using an MPLS-enabled\n   network to transport PWs are spoofing, alteration,
      and inspection.\n   First, there is a possibility that the PE receiving PW PDUs
      will get\n   a PDU that appears to be from the PE transmitting the PW into the
      PSN\n   but that was not actually transmitted by the PE originating the PW.\n
      \  (That is, the specified encapsulations do not by themselves enable\n   the
      decapsulator to authenticate the encapsulator.)  A second problem\n   is the
      possibility that the PW PDU will be altered between the time\n   it enters the
      PSN and the time it leaves the PSN (i.e., the specified\n   encapsulations do
      not by themselves assure the decapsulator of the\n   packet's integrity.)  A
      third problem is the possibility that the\n   PDU's contents will be seen while
      the PDU is in transit through the\n   PSN (i.e., the specification encapsulations
      do not ensure privacy.)\n   How significant these issues are in practice depends
      on the security\n   requirements of the applications whose traffic is being
      sent through\n   the tunnel and how secure the PSN itself is.\n"
    title: 9.1.  Data-Plane Security
  - contents:
    - "9.2.  Control-Plane Security\n   General security considerations with regard
      to the use of LDP are\n   specified in Section 5 of [RFC5036].  Those considerations
      also apply\n   to the case where LDP is used to set up pseudowires.\n   A pseudowire
      connects two Attachment Circuits.  It is important to\n   make sure that LDP
      connections are not arbitrarily accepted from\n   anywhere, or else a local
      Attachment Circuit might get connected to\n   an arbitrary remote Attachment
      Circuit.  Therefore, an incoming LDP\n   session request MUST NOT be accepted
      unless its IP source address is\n   known to be the source of an \"eligible\"
      LDP peer.  The set of\n   eligible peers could be preconfigured (either as a
      list of IP\n   addresses or as a list of address/mask combinations), or it could
      be\n   discovered dynamically via an auto-discovery protocol that is itself\n
      \  trusted.  (Obviously, if the auto-discovery protocol were not\n   trusted,
      the set of eligible peers it produces could not be trusted.)\n   Even if an
      LDP connection request appears to come from an eligible\n   peer, its source
      address may have been spoofed.  Therefore, some\n   means of preventing source
      address spoofing must be in place.  For\n   example, if all the eligible peers
      are in the same network, source\n   address filtering at the border routers
      of that network could\n   eliminate the possibility of source address spoofing.\n
      \  The LDP MD5 authentication key option, as described in Section 2.9 of\n   [RFC5036],
      MUST be implemented, and for a greater degree of security,\n   it must be used.
      \ This provides integrity and authentication for the\n   LDP messages and eliminates
      the possibility of source address\n   spoofing.  Use of the MD5 option does
      not provide privacy, but\n   privacy of the LDP control messages is not usually
      considered\n   important.  As the MD5 option relies on the configuration of
      pre-\n   shared keys, it does not provide much protection against replay\n   attacks.
      \ In addition, its reliance on pre-shared keys may make it\n   very difficult
      to deploy when the set of eligible neighbors is\n   determined by an auto-configuration
      protocol.\n   When the Generalized PWid FEC Element is used, it is possible
      that a\n   particular LDP peer may be one of the eligible LDP peers but may
      not\n   be the right one to connect to the particular Attachment Circuit\n   identified
      by the particular instance of the Generalized PWid FEC\n   Element.  However,
      given that the peer is known to be one of the\n   eligible peers (as discussed
      above), this would be the result of a\n   configuration error rather than a
      security problem.  Nevertheless, it\n   may be advisable for a PE to associate
      each of its local Attachment\n   Circuits with a set of eligible peers rather
      than have just a single\n   set of eligible peers associated with the PE as
      a whole.\n"
    title: 9.2.  Control-Plane Security
  title: 9.  Security Considerations
- contents:
  - "10.  Interoperability and Deployment\n   Section 2.2 of [RFC6410] specifies four
    requirements that an Internet\n   Standard must meet.  This section documents
    how this document meets\n   those requirements.\n   The pseudowire technology
    was first deployed in 2001 and has been\n   widely deployed by many carriers.
    \ [RFC7079] documents the results of\n   a survey of PW implementations with specific
    emphasis on control-word\n   usage.  [EANTC] documents a public multi-vendor interoperability
    test\n   of MPLS and Carrier Ethernet equipment, which included testing of\n   Ethernet,
    ATM, and TDM pseudowires.\n   The errata against [RFC4447] are generally editorial
    in nature and\n   have been addressed in this document.\n   All features in this
    specification have been implemented by multiple\n   vendors.\n   No IPR disclosures
    have been made to the IETF related to this\n   document, to RFCs 4447 or 6723,
    or to the Internet-Drafts that\n   resulted in RFCs 4447 and 6723.\n"
  title: 10.  Interoperability and Deployment
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, DOI\n
      \             10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n              \"LDP
      Specification\", RFC 5036, DOI 10.17487/RFC5036,\n              October 2007,
      <http://www.rfc-editor.org/info/rfc5036>.\n   [RFC3032]  Rosen, E., Tappan,
      D., Fedorkow, G., Rekhter, Y.,\n              Farinacci, D., Li, T., and A.
      Conta, \"MPLS Label Stack\n              Encoding\", RFC 3032, DOI 10.17487/RFC3032,
      January 2001,\n              <http://www.rfc-editor.org/info/rfc3032>.\n   [RFC4446]
      \ Martini, L., \"IANA Allocations for Pseudowire Edge to Edge\n              Emulation
      (PWE3)\", BCP 116, RFC 4446, DOI\n              10.17487/RFC4446, April 2006,\n
      \             <http://www.rfc-editor.org/info/rfc4446>.\n   [RFC7358]  Raza,
      K., Boutros, S., Martini, L., and N. Leymann, \"Label\n              Advertisement
      Discipline for LDP Forwarding Equivalence\n              Classes (FECs)\", RFC
      7358, DOI 10.17487/RFC7358, October\n              2014, <http://www.rfc-editor.org/info/rfc7358>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC2277]  Alvestrand, H., \"IETF Policy
      on Character Sets and\n              Languages\", BCP 18, RFC 2277, DOI 10.17487/RFC2277,\n
      \             January 1998, <http://www.rfc-editor.org/info/rfc2277>.\n   [RFC3985]
      \ Bryant, S., Ed., and P. Pate, Ed., \"Pseudo Wire Emulation\n              Edge-to-Edge
      (PWE3) Architecture\", RFC 3985, DOI\n              10.17487/RFC3985, March
      2005,\n              <http://www.rfc-editor.org/info/rfc3985>.\n   [RFC4842]
      \ Malis, A., Pate, P., Cohen, R., Ed., and D. Zelig,\n              \"Synchronous
      Optical Network/Synchronous Digital Hierarchy\n              (SONET/SDH) Circuit
      Emulation over Packet (CEP)\", RFC\n              4842, DOI 10.17487/RFC4842,
      April 2007,\n              <http://www.rfc-editor.org/info/rfc4842>.\n   [RFC4553]
      \ Vainshtein, A., Ed., and YJ. Stein, Ed., \"Structure-\n              Agnostic
      Time Division Multiplexing (TDM) over Packet\n              (SAToP)\", RFC 4553,
      DOI 10.17487/RFC4553, June 2006,\n              <http://www.rfc-editor.org/info/rfc4553>.\n
      \  [RFC4619]  Martini, L., Ed., Kawa, C., Ed., and A. Malis, Ed.,\n              \"Encapsulation
      Methods for Transport of Frame Relay over\n              Multiprotocol Label
      Switching (MPLS) Networks\", RFC 4619,\n              DOI 10.17487/RFC4619,
      September 2006,\n              <http://www.rfc-editor.org/info/rfc4619>.\n   [RFC4717]
      \ Martini, L., Jayakumar, J., Bocci, M., El-Aawar, N.,\n              Brayley,
      J., and G. Koleyni, \"Encapsulation Methods for\n              Transport of
      Asynchronous Transfer Mode (ATM) over MPLS\n              Networks\", RFC 4717,
      DOI 10.17487/RFC4717, December 2006,\n              <http://www.rfc-editor.org/info/rfc4717>.\n
      \  [RFC4618]  Martini, L., Rosen, E., Heron, G., and A. Malis,\n              \"Encapsulation
      Methods for Transport of PPP/High-Level\n              Data Link Control (HDLC)
      over MPLS Networks\", RFC 4618,\n              DOI 10.17487/RFC4618, September
      2006,\n              <http://www.rfc-editor.org/info/rfc4618>.\n   [RFC4448]
      \ Martini, L., Ed., Rosen, E., El-Aawar, N., and G. Heron,\n              \"Encapsulation
      Methods for Transport of Ethernet over MPLS\n              Networks\", RFC 4448,
      DOI 10.17487/RFC4448, April 2006,\n              <http://www.rfc-editor.org/info/rfc4448>.\n
      \  [RFC4447]  Martini, L., Ed., Rosen, E., El-Aawar, N., Smith, T., and\n              G.
      Heron, \"Pseudowire Setup and Maintenance Using the\n              Label Distribution
      Protocol (LDP)\", RFC 4447, DOI\n              10.17487/RFC4447, April 2006,\n
      \             <http://www.rfc-editor.org/info/rfc4447>.\n   [RFC6410]  Housley,
      R., Crocker, D., and E. Burger, \"Reducing the\n              Standards Track
      to Two Maturity Levels\", BCP 9, RFC 6410,\n              DOI 10.17487/RFC6410,
      October 2011,\n              <http://www.rfc-editor.org/info/rfc6410>.\n   [RFC6723]
      \ Jin, L., Ed., Key, R., Ed., Delord, S., Nadeau, T., and S.\n              Boutros,
      \"Update of the Pseudowire Control-Word\n              Negotiation Mechanism\",
      RFC 6723, DOI 10.17487/RFC6723,\n              September 2012, <http://www.rfc-editor.org/info/rfc6723>.\n
      \  [RFC7079]  Del Regno, N., Ed., and A. Malis, Ed., \"The Pseudowire\n              (PW)
      and Virtual Circuit Connectivity Verification (VCCV)\n              Implementation
      Survey Results\", RFC 7079, DOI\n              10.17487/RFC7079, November 2013,\n
      \             <http://www.rfc-editor.org/info/rfc7079>.\n   [ANSI]     American
      National Standards Institute, \"Telecommunications\n              - Synchronous
      Optical Network (SONET) - Basic Description\n              Including Multiplex
      Structures, Rates, and Formats\", ANSI\n              T1.105, October 1995.\n
      \  [ITUG]     International Telecommunications Union, \"Network node\n              interface
      for the synchronous digital hierarchy (SDH)\",\n              ITU-T Recommendation
      G.707, May 1996.\n   [EANTC]    European Advanced Networking Test Center, \"MPLS
      and\n              Carrier Ethernet: Service - Connect - Transport. Public\n
      \             Multi-Vendor Interoperability Test\", February 2009.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Acknowledgments\n   The authors wish to acknowledge the contributions of Vach
    Kompella,\n   Vanson Lim, Wei Luo, Himanshu Shah, and Nick Weeds.  The authors
    wish\n   to also acknowledge the contribution of the authors of RFC 6723,\n   whose
    work has been incorporated in this document: Lizhong Jin,\n   Raymond Key, Simon
    Delord, Tom Nadeau, and Sami Boutros.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   The following individuals were either authors or contributing
    authors\n   for RFC 4447.  They are listed here in recognition of their work on\n
    \  that document.\n   Nasser El-Aawar\n   Level 3 Communications, LLC.\n   1025
    Eldorado Blvd.\n   Broomfield, CO 80021\n   United States of America\n   Email:
    nna@level3.net\n   Eric C.  Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Avenue\n   Boxborough, MA 01719\n   United States of America\n   Email: erosen@cisco.com\n
    \  Dan Tappan\n   Cisco Systems, Inc.\n   1414 Massachusetts Avenue\n   Boxborough,
    MA 01719\n   United States of America\n   Email: tappan@cisco.com\n   Toby Smith\n
    \  Google\n   6425 Penn Ave. #700\n   Pittsburgh, PA 15206\n   United States of
    America\n   Email: tob@google.com\n   Dimitri Vlachos\n   Riverbed Technology\n
    \  Email: dimitri@riverbed.com\n   Jayakumar Jayakumar\n   Cisco Systems Inc.\n
    \  3800 Zanker Road, MS-SJ02/2\n   San Jose, CA 95134\n   United States of America\n
    \  Email: jjayakum@cisco.com\n   Alex Hamilton,\n   Cisco Systems Inc.\n   485
    East Tasman Drive, MS-SJC07/3\n   San Jose, CA 95134\n   United States of America\n
    \  Email: tahamilt@cisco.com\n   Steve Vogelsang\n   ECI Telecom\n   Omega Corporate
    Center\n   1300 Omega Drive\n   Pittsburgh, PA 15205\n   United States of America\n
    \  Email: stephen.vogelsang@ecitele.com\n   John Shirron\n   ECI Telecom\n   Omega
    Corporate Center\n   1300 Omega Drive\n   Pittsburgh, PA 15205\n   United States
    of America\n   Email: john.shirron@ecitele.com\n   Andrew G. Malis\n   Verizon\n
    \  60 Sylvan Rd.\n   Waltham, MA 02451\n   United States of America\n   Email:
    andrew.g.malis@verizon.com\n   Vinai Sirkay\n   Reliance Infocomm\n   Dhirubai
    Ambani Knowledge City\n   Navi Mumbai 400 709\n   India\n   Email: vinai@sirkay.com\n
    \  Vasile Radoaca\n   Nortel Networks\n   600  Technology Park\n   Billerica MA
    01821\n   United States of America\n   Email: vasile@nortelnetworks.com\n   Chris
    Liljenstolpe\n   149 Santa Monica Way\n   San Francisco, CA 94127\n   United States
    of America\n   Email: ietf@cdl.asgaard.org\n   Dave Cooper\n   Global Crossing\n
    \  960 Hamlin Court\n   Sunnyvale, CA 94089\n   United States of America\n   Email:
    dcooper@gblx.net\n   Kireeti Kompella\n   Juniper Networks\n   1194 N. Mathilda
    Ave\n   Sunnyvale, CA 94089\n   United States of America\n   Email: kireeti@juniper.net\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Luca Martini (editor)\n   Cisco Systems, Inc.\n   1899
    Wynkoop Street, Suite 600\n   Denver, CO 80202\n   United States of America\n
    \  Email: lmartini@monoski.com\n   Giles Heron (editor)\n   Cisco Systems\n   10
    New Square\n   Bedfont Lakes\n   Feltham\n   Middlesex\n   TW14 8HA\n   United
    Kingdom\n   Email: giheron@cisco.com\n"
  title: Authors' Addresses
