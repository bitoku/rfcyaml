- title: __initial_text__
  contents:
  - "             Definitions of Managed Objects for IEEE 802.3\n               Medium\
    \ Attachment Units (MAUs) using SMIv2\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1997).  All Rights Reserved.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 The SNMPv2 Network Management Framework ...............\
    \    2\n   1.1 Object Definitions ..................................    2\n  \
    \ 2 Overview ..............................................    3\n   2.1 Relationship\
    \ to RFC 1515 ............................    3\n   2.2 MAU Management ......................................\
    \    3\n   2.3 Relationship to Other MIBs ..........................    3\n  \
    \ 2.3.1 Relationship to the MIB-II 'interfaces' group .....    3\n   2.3.2 Relationship\
    \ to the 802.3 Repeater MIB ............    4\n   2.4 Management of Internal MAUs\
    \ .........................    4\n   3 Definitions ...........................................\
    \    4\n   4 Acknowledgements ......................................   39\n  \
    \ 5 References ............................................   40\n   6 Security\
    \ Considerations ...............................   41\n   7 Authors' Addresses\
    \ ....................................   41\n   8 Full Copyright Statement ..............................\
    \   43\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing 10 and 100 Mb/second\n   Medium\
    \ Attachment Units (MAUs) based on IEEE Std 802.3 Section 30,\n   \"10 & 100 Mb/s\
    \ Management,\" October 26, 1995.\n"
- title: 1.  The SNMPv2 Network Management Framework
  contents:
  - "1.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework presently consists of three\n   major components.  They are:\n   o\
    \    the SMI, described in RFC 1902 [6] - the mechanisms used\n        for describing\
    \ and naming objects for the purpose of management.\n   o    the MIB-II, STD 17,\
    \ RFC 1213 [5] - the core set of\n        managed objects for the Internet suite\
    \ of protocols.\n   o    the protocol, STD 15, RFC 1157 [10] and/or RFC 1905 [9]\
    \ -\n        the protocol used for accessing managed information.\n   Textual\
    \ conventions are defined in RFC 1903 [7], and conformance\n   statements are\
    \ defined in RFC 1904 [8].\n   The Framework permits new objects to be defined\
    \ for the purpose of\n   experimentation and evaluation.\n"
- title: 1.1.  Object Definitions
  contents:
  - "1.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI.  In particular, each object type is named by an\n   OBJECT\
    \ IDENTIFIER, an administratively assigned name.  The object\n   type together\
    \ with an object instance serves to uniquely identify a\n   specific instantiation\
    \ of the object.  For human convenience, we\n   often use a textual string, termed\
    \ the descriptor, to refer to the\n   object type.\n"
- title: 2.  Overview
  contents:
  - '2.  Overview

    '
- title: 2.1.  Relationship to RFC 1515
  contents:
  - "2.1.  Relationship to RFC 1515\n   This MIB is intended to be a superset of that\
    \ defined by RFC 1515\n   [11], which will go to historic status.  This MIB includes\
    \ all of the\n   objects contained in that MIB, plus several new ones which provide\n\
    \   additional capabilities.  Implementors are encouraged to support all\n   applicable\
    \ conformance groups in order to make the best use of the\n   new functionality\
    \ provided by this MIB.  The new objects provide\n   management support for:\n\
    \   o    management of 100 Mb/s devices\n   o    auto-negotiation on interface\
    \ MAUs\n   o    jack management\n"
- title: 2.2.  MAU Management
  contents:
  - "2.2.  MAU Management\n   Instances of these object types represent attributes\
    \ of an IEEE 802.3\n   MAU.  Several types of MAUs are defined in the IEEE 802.3\
    \ CSMA/CD\n   standard [1] and [2].  These MAUs may be connected to IEEE 802.3\n\
    \   repeaters or to 802.3 (Ethernet-like) interfaces.  For convenience\n   this\
    \ document refers to these devices as \"repeater MAUs\" and\n   \"interface MAUs.\"\
    \n   The definitions presented here are based on Section 30.5, \"Layer\n   Management\
    \ for 10 & 100 Mb/s Medium Attachment Units (MAUs)\", and\n   Annex 30A, \"GDMO\
    \ Specifications for 802.3 managed objects\" of IEEE\n   Std 802.3u-1995.  That\
    \ specification includes definitions for both\n   10Mb/s and 100Mb/s devices,\
    \ and is essentially a superset of the\n   10Mb/s definitions given by IEEE 802.3\
    \ Section 20.  This\n   specification is intended to serve the same purpose: to\
    \ provide for\n   management of both 10Mb/s and 100Mb/s MAUs.\n"
- title: 2.3.  Relationship to Other MIBs
  contents:
  - "2.3.  Relationship to Other MIBs\n   It is assumed that an agent implementing\
    \ this MIB will also implement\n   (at least) the 'system' group defined in MIB-II\
    \ [5].  The following\n   sections identify other MIBs that such an agent should\
    \ implement.\n"
- title: 2.3.1.  Relationship to the MIB-II 'interfaces' group
  contents:
  - "2.3.1.  Relationship to the MIB-II 'interfaces' group\n   The sections of this\
    \ document that define interface MAU-related\n   objects specify an extension\
    \ to the 'interfaces' group of MIB-II.  An\n   agent implementing these interface-MAU\
    \ related objects must also\n   implement the 'interfaces' group of MIB-II.  The\
    \ value of the object\n   ifMauIfIndex is the same as the value of 'ifIndex' used\
    \ to\n   instantiate the interface to which the given MAU is connected.\n   It\
    \ is expected that an agent implementing the interface-MAU related\n   objects\
    \ in this MIB will also implement the Ethernet- like Interfaces\n   MIB, RFC 1650.\n\
    \   (Note that repeater ports are not represented as interfaces in the\n   sense\
    \ of MIB-II's 'interfaces' group.)\n"
- title: 2.3.2.  Relationship to the 802.3 Repeater MIB
  contents:
  - "2.3.2.  Relationship to the 802.3 Repeater MIB\n   The section of this document\
    \ that defines repeater MAU-related\n   objects specifies an extension to the\
    \ 802.3 Repeater MIB defined in\n   [4].  An agent implementing these repeater-MAU\
    \ related objects must\n   also implement the 802.3 Repeater MIB.\n   The values\
    \ of 'rpMauGroupIndex' and 'rpMauPortIndex' used to\n   instantiate a repeater\
    \ MAU variable shall be the same as the values\n   of 'rptrPortGroupIndex' and\
    \ 'rptrPortIndex' used to instantiate the\n   port to which the given MAU is connected.\n"
- title: 2.4.  Management of Internal MAUs
  contents:
  - "2.4.  Management of Internal MAUs\n   In some situations, a MAU can be \"internal\"\
    \ -- i.e., its\n   functionality is implemented entirely within a device.  For\
    \ example,\n   a managed repeater may contain an internal repeater- MAU and/or\
    \ an\n   internal interface-MAU through which management communications\n   originating\
    \ on one of the repeater's external ports pass in order to\n   reach the management\
    \ agent associated with the repeater.  Such\n   internal MAUs may or may not be\
    \ managed.  If they are managed,\n   objects describing their attributes should\
    \ appear in the appropriate\n   MIB subtree:\n   dot3RpMauBasicGroup for internal\
    \ repeater-MAUs and\n   dot3IfMauBasicGroup for internal interface-MAUs.\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   MAU-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       Counter32,\
    \ Integer32,\n       OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE,\n      \
    \ OBJECT-IDENTITY, mib-2\n           FROM SNMPv2-SMI\n       TruthValue, TEXTUAL-CONVENTION\n\
    \           FROM SNMPv2-TC\n       OBJECT-GROUP, MODULE-COMPLIANCE, NOTIFICATION-GROUP\n\
    \           FROM SNMPv2-CONF;\n   mauMod MODULE-IDENTITY\n       LAST-UPDATED\
    \ \"9710310000Z\"\n       ORGANIZATION \"IETF HUB MIB Working Group\"\n      \
    \ CONTACT-INFO\n           \"WG E-mail: hubmib@hprnd.rose.hp.com\n           \
    \     Chair: Dan Romascanu\n               Postal: Madge Networks (Israel) Ltd.\n\
    \                       Atidim Technology Park, Bldg. 3\n                    \
    \   Tel Aviv 61131, Israel\n                  Tel: 972-3-6458414, 6458458\n  \
    \                Fax: 972-3-6487146\n               E-mail: dromasca@madge.com\n\
    \               Editor: Kathryn de Graaf\n               Postal: 3Com Corporation\n\
    \                       118 Turnpike Rd.\n                       Southborough,\
    \ MA  01772\n                       USA\n                  Tel: (508)229-1627\n\
    \                  Fax: (508)490-5882\n               E-mail: kdegraaf@isd.3com.com\"\
    \n       DESCRIPTION\n               \"Management information for 802.3 MAUs.\n\
    \               The following references are used throughout this\n          \
    \     MIB module:\n               [IEEE 802.3 Std]\n                  refers to\
    \ IEEE 802.3/ISO 8802-3 Information\n                  processing systems - Local\
    \ area networks -\n                  Part 3: Carrier sense multiple access with\n\
    \                  collision detection (CSMA/CD) access method\n             \
    \     and physical layer specifications (1993),\n                  and to IEEE\
    \ Std 802.3u-1995, Supplement to\n                  IEEE Std 802.3, clauses 22\
    \ through 29.\n               [IEEE 802.3 Mgt]\n                  refers to IEEE\
    \ 802.3u-1995, - 10 Mb/s &\n                  100 Mb/s Management, Section 30\
    \ -\n                  Supplement to IEEE Std 802.3.\"\n       ::= { snmpDot3MauMgt\
    \ 6 }\n   snmpDot3MauMgt OBJECT IDENTIFIER ::= { mib-2 26 }\n   -- textual conventions\n\
    \   JackType ::= TEXTUAL-CONVENTION\n       STATUS     current\n       DESCRIPTION\n\
    \               \"Common enumeration values for repeater and\n               interface\
    \ MAU jack types.\"\n       SYNTAX     INTEGER {\n                      other(1),\n\
    \                      rj45(2),\n                      rj45S(3), -- rj45 shielded\n\
    \                      db9(4),\n                      bnc(5),\n              \
    \        fAUI(6),  -- female aui\n                      mAUI(7),  -- male aui\n\
    \                      fiberSC(8),\n                      fiberMIC(9),\n     \
    \                 fiberST(10),\n                      telco(11)\n            \
    \      }\n   dot3RpMauBasicGroup         OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 1 }\n   dot3IfMauBasicGroup         OBJECT IDENTIFIER ::= { snmpDot3MauMgt 2\
    \ }\n   dot3BroadMauBasicGroup      OBJECT IDENTIFIER ::= { snmpDot3MauMgt 3 }\n\
    \   dot3IfMauAutoNegGroup       OBJECT IDENTIFIER ::= { snmpDot3MauMgt 5 }\n \
    \  -- object identities for MAU types\n   --  (see rpMauType and ifMauType for\
    \ usage)\n   dot3MauType\n       OBJECT IDENTIFIER ::= { snmpDot3MauMgt 4 }\n\
    \   dot3MauTypeAUI OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n\
    \               \"no internal MAU, view from AUI\"\n       ::= { dot3MauType 1\
    \ }\n   dot3MauType10Base5 OBJECT-IDENTITY\n       STATUS     current\n      \
    \ DESCRIPTION\n               \"thick coax MAU (per 802.3 section 8)\"\n     \
    \  ::= { dot3MauType 2 }\n   dot3MauTypeFoirl OBJECT-IDENTITY\n       STATUS \
    \    current\n       DESCRIPTION\n               \"FOIRL MAU (per 802.3 section\
    \ 9.9)\"\n       ::= { dot3MauType 3 }\n   dot3MauType10Base2 OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"thin coax MAU\
    \ (per 802.3 section 10)\"\n       ::= { dot3MauType 4 }\n   dot3MauType10BaseT\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"UTP MAU (per 802.3 section 14)\"\n       ::= { dot3MauType 5 }\n   dot3MauType10BaseFP\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"passive fiber MAU (per 802.3 section 16)\"\n       ::= { dot3MauType 6\
    \ }\n   dot3MauType10BaseFB OBJECT-IDENTITY\n       STATUS     current\n     \
    \  DESCRIPTION\n               \"sync fiber MAU (per 802.3 section 17)\"\n   \
    \    ::= { dot3MauType 7 }\n   dot3MauType10BaseFL OBJECT-IDENTITY\n       STATUS\
    \     current\n       DESCRIPTION\n               \"async fiber MAU (per 802.3\
    \ section 18)\"\n       ::= { dot3MauType 8 }\n   dot3MauType10Broad36 OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"broadband DTE\
    \ MAU (per 802.3 section 11). Note\n               that 10BROAD36 MAUs can be\
    \ attached to interfaces\n               but not to repeaters.\"\n       ::= {\
    \ dot3MauType 9 }\n   ------ new since RFC 1515:\n   dot3MauType10BaseTHD OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"UTP MAU (per\
    \ 802.3 section 14), half duplex mode\"\n       ::= { dot3MauType 10 }\n   dot3MauType10BaseTFD\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"UTP MAU (per 802.3 section 14), full duplex mode\"\n       ::= { dot3MauType\
    \ 11 }\n   dot3MauType10BaseFLHD OBJECT-IDENTITY\n       STATUS     current\n\
    \       DESCRIPTION\n               \"async fiber MAU (per 802.3 section 18),\
    \ half\n               duplex mode\"\n       ::= { dot3MauType 12 }\n   dot3MauType10BaseFLFD\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"async fiber MAU (per 802.3 section 18), full\n               duplex mode\"\
    \n       ::= { dot3MauType 13 }\n   dot3MauType100BaseT4 OBJECT-IDENTITY\n   \
    \    STATUS     current\n       DESCRIPTION\n               \"4 pair categ. 3\
    \ UTP (per 802.3 section 23)\"\n       ::= { dot3MauType 14 }\n   dot3MauType100BaseTXHD\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"2 pair categ. 5 UTP (per 802.3 section 25), half\n               duplex\
    \ mode\"\n       ::= { dot3MauType 15 }\n   dot3MauType100BaseTXFD OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"2 pair categ.\
    \ 5 UTP (per 802.3 section 25), full\n               duplex mode\"\n       ::=\
    \ { dot3MauType 16 }\n   dot3MauType100BaseFXHD OBJECT-IDENTITY\n       STATUS\
    \     current\n       DESCRIPTION\n               \"X fiber over PMT (per 802.3\
    \ section 26), half\n               duplex mode\"\n       ::= { dot3MauType 17\
    \ }\n   dot3MauType100BaseFXFD OBJECT-IDENTITY\n       STATUS     current\n  \
    \     DESCRIPTION\n               \"X fiber over PMT (per 802.3 section 26), full\n\
    \               duplex mode\"\n       ::= { dot3MauType 18 }\n   dot3MauType100BaseT2HD\
    \ OBJECT-IDENTITY\n       STATUS     current\n       DESCRIPTION\n           \
    \    \"2 pair categ. 3 UTP (per 802.3 section 32), half\n               duplex\
    \ mode\"\n       ::= { dot3MauType 19 }\n   dot3MauType100BaseT2FD OBJECT-IDENTITY\n\
    \       STATUS     current\n       DESCRIPTION\n               \"2 pair categ.\
    \ 3 UTP (per 802.3 section 32), full\n               duplex mode\"\n       ::=\
    \ { dot3MauType 20 }\n   --\n   -- The Basic Repeater MAU Table\n   --\n   rpMauTable\
    \ OBJECT-TYPE\n       SYNTAX     SEQUENCE OF RpMauEntry\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"Table of descriptive\
    \ and status information about\n               the MAU(s) attached to the ports\
    \ of a repeater.\"\n       ::= { dot3RpMauBasicGroup 1 }\n   rpMauEntry OBJECT-TYPE\n\
    \       SYNTAX     RpMauEntry\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"An entry in the table, containing\
    \ information\n               about a single MAU.\"\n       INDEX      { rpMauGroupIndex,\
    \ rpMauPortIndex, rpMauIndex }\n       ::= { rpMauTable 1 }\n   RpMauEntry ::=\n\
    \       SEQUENCE {\n           rpMauGroupIndex\n               Integer32,\n  \
    \         rpMauPortIndex\n               Integer32,\n           rpMauIndex\n \
    \              Integer32,\n           rpMauType\n               OBJECT IDENTIFIER,\n\
    \           rpMauStatus\n               INTEGER,\n           rpMauMediaAvailable\n\
    \               INTEGER,\n           rpMauMediaAvailableStateExits\n         \
    \      Counter32,\n           rpMauJabberState\n               INTEGER,\n    \
    \       rpMauJabberingStateEnters\n               Counter32,\n           rpMauFalseCarriers\n\
    \               Counter32\n       }\n   rpMauGroupIndex OBJECT-TYPE\n       SYNTAX\
    \     Integer32 (1..2147483647)\n       MAX-ACCESS read-only\n       STATUS  \
    \   current\n       DESCRIPTION\n               \"This variable uniquely identifies\
    \ the group\n               containing the port to which the MAU described by\n\
    \               this entry is connected.\n               Note:  In practice, a\
    \ group will generally be a\n               field-replaceable unit (i.e., module,\
    \ card, or\n               board) that can fit in the physical system\n      \
    \         enclosure, and the group number will correspond to\n               a\
    \ number marked on the physical enclosure.\n               The group denoted by\
    \ a particular value of this\n               object is the same as the group denoted\
    \ by the\n               same value of rptrGroupIndex.\"\n       ::= { rpMauEntry\
    \ 1 }\n   rpMauPortIndex OBJECT-TYPE\n       SYNTAX     Integer32 (1..2147483647)\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This variable uniquely identifies the repeater\n           \
    \    port within group rpMauGroupIndex to which the MAU\n               described\
    \ by this entry is connected.\"\n       REFERENCE\n               \"Reference\
    \ RFC 1516, rptrPortIndex.\"\n       ::= { rpMauEntry 2 }\n   rpMauIndex OBJECT-TYPE\n\
    \       SYNTAX     Integer32 (1..2147483647)\n       MAX-ACCESS read-only\n  \
    \     STATUS     current\n       DESCRIPTION\n               \"This variable uniquely\
    \ identifies the MAU\n               described by this entry from among other\
    \ MAUs\n               connected to the same port (rpMauPortIndex).\"\n      \
    \ REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.1, aMAUID.\"\n      \
    \ ::= { rpMauEntry 3 }\n   rpMauType OBJECT-TYPE\n       SYNTAX     OBJECT IDENTIFIER\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This object identifies the 10 or 100 Mb/s\n               baseband\
    \ MAU type.  An initial set of MAU types\n               are defined above.  The\
    \ assignment of OBJECT\n               IDENTIFIERs to new types of MAUs is managed\
    \ by the\n               IANA.  If the MAU type is unknown, the object\n     \
    \          identifier\n               unknownMauType OBJECT IDENTIFIER ::= { 0\
    \ 0 }\n               is returned.  Note that unknownMauType is a\n          \
    \     syntactically valid object identifier, and any\n               conformant\
    \ implementation of ASN.1 and the BER\n               must be able to generate\
    \ and recognize this\n               value.\"\n       REFERENCE\n            \
    \   \"[IEEE 802.3 Mgt], 30.5.1.1.2, aMAUType.\"\n       ::= { rpMauEntry 4 }\n\
    \   rpMauStatus OBJECT-TYPE\n       SYNTAX     INTEGER {\n                   \
    \   other(1),\n                      unknown(2),\n                      operational(3),\n\
    \                      standby(4),\n                      shutdown(5),\n     \
    \                 reset(6)\n                  }\n       MAX-ACCESS read-write\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The current state\
    \ of the MAU.  This object may be\n               implemented as a read-only object\
    \ by those agents\n               and MAUs that do not implement software control\
    \ of\n               the MAU state.  Some agents may not support\n           \
    \    setting the value of this object to some of the\n               enumerated\
    \ values.\n               The value other(1) is returned if the MAU is in a\n\
    \               state other than one of the states 2 through 6.\n            \
    \   The value unknown(2) is returned when the MAU's\n               true state\
    \ is unknown; for example, when it is\n               being initialized.\n   \
    \            A MAU in the operational(3) state is fully\n               functional,\
    \ operates, and passes signals to its\n               attached DTE or repeater\
    \ port in accordance to its\n               specification.\n               A MAU\
    \ in standby(4) state forces DI and CI to idle\n               and the media transmitter\
    \ to idle or fault, if\n               supported.  Standby(4) mode only applies\
    \ to link\n               type MAUs.  The state of rpMauMediaAvailable is\n  \
    \             unaffected.\n               A MAU in shutdown(5) state assumes the\
    \ same\n               condition on DI, CI, and the media transmitter as\n   \
    \            though it were powered down or not connected.  The\n            \
    \   MAU may return other(1) value for the\n               rpMauJabberState and\
    \ rpMauMediaAvailable objects\n               when it is in this state.  For an\
    \ AUI, this state\n               will remove power from the AUI.\n          \
    \     Setting this variable to the value reset(6) resets\n               the MAU\
    \ in the same manner as a power-off, power-\n               on cycle of at least\
    \ one-half second would.  The\n               agent is not required to return\
    \ the value reset\n               (6).\n               Setting this variable to\
    \ the value operational(3),\n               standby(4), or shutdown(5) causes\
    \ the MAU to\n               assume the respective state except that setting a\n\
    \               mixing-type MAU or an AUI to standby(4) will cause\n         \
    \      the MAU to enter the shutdown state.\"\n       REFERENCE\n            \
    \   \"[IEEE 802.3 Mgt], 30.5.1.1.7, aMAUAdminState,\n               30.5.1.2.2,\
    \ acMAUAdminControl, and 30.5.1.2.1,\n               acRESETMAU.\"\n       ::=\
    \ { rpMauEntry 5 }\n   rpMauMediaAvailable OBJECT-TYPE\n       SYNTAX     INTEGER\
    \ {\n                      other(1),\n                      unknown(2),\n    \
    \                  available(3),\n                      notAvailable(4),\n   \
    \                   remoteFault(5),\n                      invalidSignal(6),\n\
    \                      remoteJabber(7),\n                      remoteLinkLoss(8),\n\
    \                      remoteTest(9)\n                  }\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"If the MAU is\
    \ a link or fiber type (FOIRL,\n               10BASE-T, 10BASE-F) then this is\
    \ equivalent to the\n               link test fail state/low light function. \
    \ For an\n               AUI or a coax (including broadband) MAU this\n      \
    \         indicates whether or not loopback is detected on\n               the\
    \ DI circuit.  The value of this attribute\n               persists between packets\
    \ for MAU types AUI,\n               10BASE5, 10BASE2, 10BROAD36, and 10BASE-FP.\n\
    \               The value other(1) is returned if the\n               mediaAvailable\
    \ state is not one of 2 through 6.\n               The value unknown(2) is returned\
    \ when the MAU's\n               true state is unknown; for example, when it is\n\
    \               being initialized.  At power-up or following a\n             \
    \  reset, the value of this attribute will be unknown\n               for AUI,\
    \ coax, and 10BASE-FP MAUs.  For these MAUs\n               loopback will be tested\
    \ on each transmission\n               during which no collision is detected.\
    \  If DI is\n               receiving input when DO returns to IDL after a\n \
    \              transmission and there has been no collision\n               during\
    \ the transmission then loopback will be\n               detected.  The value\
    \ of this attribute will only\n               change during non-collided transmissions\
    \ for AUI,\n               coax, and 10BASE-FP MAUs.\n               For 100BASE-T4,\
    \ 100BASE-TX and 100BASE-FX the\n               enumerations match the states\
    \ within the\n               respective link integrity state diagrams, fig 23-\n\
    \               12 and 24-15 of sections 23 and 24 of [2].  Any\n            \
    \   MAU which implements management of auto-\n               negotiation will\
    \ map remote fault indication to\n               remote fault.\n             \
    \  The value available(3) indicates that the link,\n               light, or loopback\
    \ is normal.  The value\n               notAvailable(4) indicates link loss, low\
    \ light, or\n               no loopback.\n               The value remoteFault(5)\
    \ indicates that a fault\n               has been detected at the remote end of\
    \ the link.\n               This value applies to 10BASE-FB, 100BASE-T4 Far\n\
    \               End Fault Indication and non-specified remote\n              \
    \ faults from a system running auto-negotiation.\n               The values remoteJabber(7),\
    \ remoteLinkLoss(8), and\n               remoteTest(9) should be used instead\
    \ of\n               remoteFault(5) where the reason for remote fault\n      \
    \         is identified in the remote signaling protocol.\n               The\
    \ value invalidSignal(6) indicates that an\n               invalid signal has\
    \ been received from the other\n               end of the link.  InvalidSignal(6)\
    \ applies only to\n               MAUs of type 10BASE-FB.\n               Where\
    \ an IEEE Std 802.3u-1995 clause 22 MII is\n               present, a logic one\
    \ in the remote fault bit\n               (reference section 22.2.4.2.8 of that\
    \ document)\n               maps to the value remoteFault(5), and a logic zero\n\
    \               in the link status bit (reference section\n               22.2.4.2.10\
    \ of that document) maps to the value\n               notAvailable(4).  The value\
    \ notAvailable(4) takes\n               precedence over the value remoteFault(5).\"\
    \n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.4, aMediaAvailable.\"\
    \n       ::= { rpMauEntry 6 }\n   rpMauMediaAvailableStateExits OBJECT-TYPE\n\
    \       SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A count of the number of times that\n  \
    \             rpMauMediaAvailable for this MAU instance leaves\n             \
    \  the state available(3).\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt],\
    \ 30.5.1.1.5, aLoseMediaCounter.\"\n       ::= { rpMauEntry 7 }\n   rpMauJabberState\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER {\n                      other(1),\n\
    \                      unknown(2),\n                      noJabber(3),\n     \
    \                 jabbering(4)\n                  }\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The value other(1)\
    \ is returned if the jabber\n               state is not 2, 3, or 4.  The agent\
    \ must always\n               return other(1) for MAU type dot3MauTypeAUI.\n \
    \              The value unknown(2) is returned when the MAU's\n             \
    \  true state is unknown; for example, when it is\n               being initialized.\n\
    \               If the MAU is not jabbering the agent returns\n              \
    \ noJabber(3).  This is the 'normal' state.\n               If the MAU is in jabber\
    \ state the agent returns\n               the jabbering(4) value.\"\n       REFERENCE\n\
    \               \"[IEEE 802.3 Mgt], 30.5.1.1.6,\n               aJabber.jabberFlag.\"\
    \n       ::= { rpMauEntry 8 }\n   rpMauJabberingStateEnters OBJECT-TYPE\n    \
    \   SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A count of the number of times that\n  \
    \             mauJabberState for this MAU instance enters the\n              \
    \ state jabbering(4).  For MAUs of type\n               dot3MauTypeAUI, dot3MauType100BaseT4,\n\
    \               dot3MauType100BaseTX, and dot3MauType100BaseFX,\n            \
    \   this counter will always indicate zero.\"\n       REFERENCE\n            \
    \   \"[IEEE 802.3 Mgt], 30.5.1.1.6,\n               aJabber.jabberCounter.\"\n\
    \       ::= { rpMauEntry 9 }\n   rpMauFalseCarriers OBJECT-TYPE\n       SYNTAX\
    \     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n    \
    \   DESCRIPTION\n               \"A count of the number of false carrier events\n\
    \               during IDLE in 100BASE-X links.  This counter does\n         \
    \      not increment at the symbol rate.  It can\n               increment after\
    \ a valid carrier completion at a\n               maximum rate of once per 100\
    \ ms until the next\n               carrier event.\n               This counter\
    \ increments only for MAUs of type\n               dot3MauType100BaseT4, dot3MauType100BaseTX,\
    \ and\n               dot3MauType100BaseFX.  For all other MAU types,\n      \
    \         this counter will always indicate zero.\n               The approximate\
    \ minimum time for rollover of this\n               counter is 7.4 hours.\"\n\
    \       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.10, aFalseCarriers.\"\
    \n       ::= { rpMauEntry 10 }\n   -- The rpJackTable applies to MAUs attached\
    \ to repeaters\n   -- which have one or more external jacks (connectors).\n  \
    \ rpJackTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF RpJackEntry\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     current\n       DESCRIPTION\n            \
    \   \"Information about the external jacks attached to\n               MAUs attached\
    \ to the ports of a repeater.\"\n       ::= { dot3RpMauBasicGroup 2 }\n   rpJackEntry\
    \ OBJECT-TYPE\n       SYNTAX     RpJackEntry\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"An entry in the\
    \ table, containing information\n               about a particular jack.\"\n \
    \      INDEX    { rpMauGroupIndex,\n                  rpMauPortIndex,\n      \
    \            rpMauIndex,\n                  rpJackIndex }\n       ::= { rpJackTable\
    \ 1 }\n   RpJackEntry ::=\n       SEQUENCE {\n           rpJackIndex\n       \
    \        Integer32,\n           rpJackType\n               JackType\n       }\n\
    \   rpJackIndex OBJECT-TYPE\n       SYNTAX     Integer32 (1..2147483647)\n   \
    \    MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This variable uniquely identifies the jack\n               described\
    \ by this entry from among other jacks\n               attached to the same MAU\
    \ (rpMauIndex).\"\n       ::= { rpJackEntry 1 }\n   rpJackType OBJECT-TYPE\n \
    \      SYNTAX     JackType\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"The jack connector type, as it appears on\
    \ the\n               outside of the system.\"\n       ::= { rpJackEntry 2 }\n\
    \   --\n   -- The Basic Interface MAU Table\n   --\n   ifMauTable OBJECT-TYPE\n\
    \       SYNTAX     SEQUENCE OF IfMauEntry\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"Table of descriptive\
    \ and status information about\n               MAU(s) attached to an interface.\"\
    \n       ::= { dot3IfMauBasicGroup 1 }\n   ifMauEntry OBJECT-TYPE\n       SYNTAX\
    \     IfMauEntry\n       MAX-ACCESS not-accessible\n       STATUS     current\n\
    \       DESCRIPTION\n               \"An entry in the table, containing information\n\
    \               about a single MAU.\"\n       INDEX      { ifMauIfIndex, ifMauIndex\
    \ }\n       ::= { ifMauTable 1 }\n   IfMauEntry ::=\n       SEQUENCE {\n     \
    \      ifMauIfIndex\n               Integer32,\n           ifMauIndex\n      \
    \         Integer32,\n           ifMauType\n               OBJECT IDENTIFIER,\n\
    \           ifMauStatus\n               INTEGER,\n           ifMauMediaAvailable\n\
    \               INTEGER,\n           ifMauMediaAvailableStateExits\n         \
    \      Counter32,\n           ifMauJabberState\n               INTEGER,\n    \
    \       ifMauJabberingStateEnters\n               Counter32,\n           ifMauFalseCarriers\n\
    \               Counter32,\n           ifMauTypeList\n               Integer32,\n\
    \           ifMauDefaultType\n               OBJECT IDENTIFIER,\n           ifMauAutoNegSupported\n\
    \               TruthValue\n       }\n   ifMauIfIndex OBJECT-TYPE\n       SYNTAX\
    \     Integer32 (1..2147483647)\n       MAX-ACCESS read-only\n       STATUS  \
    \   current\n       DESCRIPTION\n               \"This variable uniquely identifies\
    \ the interface\n               to which the MAU described by this entry is\n\
    \               connected.\"\n       REFERENCE\n               \"RFC 1213, ifIndex\"\
    \n       ::= { ifMauEntry 1 }\n   ifMauIndex OBJECT-TYPE\n       SYNTAX     Integer32\
    \ (1..2147483647)\n       MAX-ACCESS read-only\n       STATUS     current\n  \
    \     DESCRIPTION\n               \"This variable uniquely identifies the MAU\n\
    \               described by this entry from among other MAUs\n              \
    \ connected to the same interface (ifMauIfIndex).\"\n       REFERENCE\n      \
    \         \"[IEEE 802.3 Mgt], 30.5.1.1.1, aMAUID.\"\n       ::= { ifMauEntry 2\
    \ }\n   ifMauType OBJECT-TYPE\n       SYNTAX     OBJECT IDENTIFIER\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    This object identifies the 10 or 100 Mb/s\n               baseband or broadband\
    \ MAU type.  An initial set of\n               MAU types are defined above.  The\
    \ assignment of\n               OBJECT IDENTIFIERs to new types of MAUs is managed\n\
    \               by the IANA.  If the MAU type is unknown, the\n              \
    \ object identifier\n               unknownMauType OBJECT IDENTIFIER ::= { 0 0\
    \ }\n               is returned.  Note that unknownMauType is a\n            \
    \   syntactically valid object identifier, and any\n               conformant\
    \ implementation of ASN.1 and the BER\n               must be able to generate\
    \ and recognize this value.\n               This object represents the operational\
    \ type of the\n               MAU, as determined by either (1) the result of the\n\
    \               auto-negotiation function or (2) if auto-\n               negotiation\
    \ is not enabled or is not implemented\n               for this MAU, by the value\
    \ of the object\n               ifMauDefaultType.  In case (2), a set to the\n\
    \               object ifMauDefaultType will force the MAU into\n            \
    \   the new operating mode.\"\n       REFERENCE\n               \"[IEEE 802.3\
    \ Mgt], 30.5.1.1.2, aMAUType.\"\n       ::= { ifMauEntry 3 }\n   ifMauStatus OBJECT-TYPE\n\
    \       SYNTAX     INTEGER {\n                      other(1),\n              \
    \        unknown(2),\n                      operational(3),\n                \
    \      standby(4),\n                      shutdown(5),\n                     \
    \ reset(6)\n                  }\n       MAX-ACCESS read-write\n       STATUS \
    \    current\n       DESCRIPTION\n               \"The current state of the MAU.\
    \  This object may be\n               implemented as a read-only object by those\
    \ agents\n               and MAUs that do not implement software control of\n\
    \               the MAU state.  Some agents may not support\n               setting\
    \ the value of this object to some of the\n               enumerated values.\n\
    \               The value other(1) is returned if the MAU is in a\n          \
    \     state other than one of the states 2 through 6.\n               The value\
    \ unknown(2) is returned when the MAU's\n               true state is unknown;\
    \ for example, when it is\n               being initialized.\n               A\
    \ MAU in the operational(3) state is fully\n               functional, operates,\
    \ and passes signals to its\n               attached DTE or repeater port in accordance\
    \ to its\n               specification.\n               A MAU in standby(4) state\
    \ forces DI and CI to idle\n               and the media transmitter to idle or\
    \ fault, if\n               supported.  Standby(4) mode only applies to link\n\
    \               type MAUs.  The state of ifMauMediaAvailable is\n            \
    \   unaffected.\n               A MAU in shutdown(5) state assumes the same\n\
    \               condition on DI, CI, and the media transmitter as\n          \
    \     though it were powered down or not connected.  The\n               MAU may\
    \ return other(1) value for the\n               ifMauJabberState and ifMauMediaAvailable\
    \ objects\n               when it is in this state.  For an AUI, this state\n\
    \               will remove power from the AUI.\n               Setting this variable\
    \ to the value reset(6) resets\n               the MAU in the same manner as a\
    \ power-off, power-\n               on cycle of at least one-half second would.\
    \  The\n               agent is not required to return the value reset\n     \
    \          (6).\n               Setting this variable to the value operational(3),\n\
    \               standby(4), or shutdown(5) causes the MAU to\n               assume\
    \ the respective state except that setting a\n               mixing-type MAU or\
    \ an AUI to standby(4) will cause\n               the MAU to enter the shutdown\
    \ state.\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.7, aMAUAdminState,\n\
    \               30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1,\n             \
    \  acRESETMAU.\"\n       ::= { ifMauEntry 4 }\n   ifMauMediaAvailable OBJECT-TYPE\n\
    \       SYNTAX     INTEGER {\n                      other(1),\n              \
    \        unknown(2),\n                      available(3),\n                  \
    \    notAvailable(4),\n                      remoteFault(5),\n               \
    \       invalidSignal(6),\n                      remoteJabber(7),\n          \
    \            remoteLinkLoss(8),\n                      remoteTest(9)\n       \
    \           }\n       MAX-ACCESS read-only\n       STATUS     current\n      \
    \ DESCRIPTION\n               \"If the MAU is a link or fiber type (FOIRL,\n \
    \              10BASE-T, 10BASE-F) then this is equivalent to the\n          \
    \     link test fail state/low light function.  For an\n               AUI or\
    \ a coax (including broadband) MAU this\n               indicates whether or not\
    \ loopback is detected on\n               the DI circuit.  The value of this attribute\n\
    \               persists between packets for MAU types AUI,\n               10BASE5,\
    \ 10BASE2, 10BROAD36, and 10BASE-FP.\n               The value other(1) is returned\
    \ if the\n               mediaAvailable state is not one of 2 through 6.\n   \
    \            The value unknown(2) is returned when the MAU's\n               true\
    \ state is unknown; for example, when it is\n               being initialized.\
    \  At power-up or following a\n               reset, the value of this attribute\
    \ will be unknown\n               for AUI, coax, and 10BASE-FP MAUs.  For these\
    \ MAUs\n               loopback will be tested on each transmission\n        \
    \       during which no collision is detected.  If DI is\n               receiving\
    \ input when DO returns to IDL after a\n               transmission and there\
    \ has been no collision\n               during the transmission then loopback\
    \ will be\n               detected.  The value of this attribute will only\n \
    \              change during non-collided transmissions for AUI,\n           \
    \    coax, and 10BASE-FP MAUs.\n               For 100BASE-T4, 100BASE-TX and\
    \ 100BASE-FX the\n               enumerations match the states within the\n  \
    \             respective link integrity state diagrams, fig 23-\n            \
    \   12 and 24-15 of sections 23 and 24 of [2].  Any\n               MAU which\
    \ implements management of auto-\n               negotiation will map remote fault\
    \ indication to\n               remote fault.\n               The value available(3)\
    \ indicates that the link,\n               light, or loopback is normal.  The\
    \ value\n               notAvailable(4) indicates link loss, low light, or\n \
    \              no loopback.\n               The value remoteFault(5) indicates\
    \ that a fault\n               has been detected at the remote end of the link.\n\
    \               This value applies to 10BASE-FB, 100BASE-T4 Far\n            \
    \   End Fault Indication and non-specified remote\n               faults from\
    \ a system running auto-negotiation.\n               The values remoteJabber(7),\
    \ remoteLinkLoss(8), and\n               remoteTest(9) should be used instead\
    \ of\n               remoteFault(5) where the reason for remote fault\n      \
    \         is identified in the remote signaling protocol.\n               The\
    \ value invalidSignal(6) indicates that an\n               invalid signal has\
    \ been received from the other\n               end of the link.  InvalidSignal(6)\
    \ applies only to\n               MAUs of type 10BASE-FB.\n               Where\
    \ an IEEE Std 802.3u-1995 clause 22 MII is\n               present, a logic one\
    \ in the remote fault bit\n               (reference section 22.2.4.2.8 of that\
    \ document)\n               maps to the value remoteFault(5), and a logic zero\n\
    \               in the link status bit (reference section\n               22.2.4.2.10\
    \ of that document) maps to the value\n               notAvailable(4).  The value\
    \ notAvailable(4) takes\n               precedence over the value remoteFault(5).\"\
    \n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.4, aMediaAvailable.\"\
    \n       ::= { ifMauEntry 5 }\n   ifMauMediaAvailableStateExits OBJECT-TYPE\n\
    \       SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A count of the number of times that\n  \
    \             ifMauMediaAvailable for this MAU instance leaves\n             \
    \  the state available(3).\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt],\
    \ 30.5.1.1.5, aLoseMediaCounter.\"\n       ::= { ifMauEntry 6 }\n   ifMauJabberState\
    \ OBJECT-TYPE\n       SYNTAX     INTEGER {\n                      other(1),\n\
    \                      unknown(2),\n                      noJabber(3),\n     \
    \                 jabbering(4)\n                  }\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"The value other(1)\
    \ is returned if the jabber\n               state is not 2, 3, or 4.  The agent\
    \ must always\n               return other(1) for MAU type dot3MauTypeAUI.\n \
    \              The value unknown(2) is returned when the MAU's\n             \
    \  true state is unknown; for example, when it is\n               being initialized.\n\
    \               If the MAU is not jabbering the agent returns\n              \
    \ noJabber(3).  This is the 'normal' state.\n               If the MAU is in jabber\
    \ state the agent returns\n               the jabbering(4) value.\"\n       REFERENCE\n\
    \               \"[IEEE 802.3 Mgt], 30.5.1.1.6,\n               aJabber.jabberFlag.\"\
    \n       ::= { ifMauEntry 7 }\n   ifMauJabberingStateEnters OBJECT-TYPE\n    \
    \   SYNTAX     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A count of the number of times that\n  \
    \             mauJabberState for this MAU instance enters the\n              \
    \ state jabbering(4).  For MAUs of type\n               dot3MauTypeAUI, dot3MauType100BaseT4,\n\
    \               dot3MauType100BaseTX, and dot3MauType100BaseFX,\n            \
    \   this counter will always indicate zero.\"\n       REFERENCE\n            \
    \   \"[IEEE 802.3 Mgt], 30.5.1.1.6,\n               aJabber.jabberCounter.\"\n\
    \       ::= { ifMauEntry 8 }\n   ifMauFalseCarriers OBJECT-TYPE\n       SYNTAX\
    \     Counter32\n       MAX-ACCESS read-only\n       STATUS     current\n    \
    \   DESCRIPTION\n               \"A count of the number of false carrier events\n\
    \               during IDLE in 100BASE-X links.  This counter does\n         \
    \      not increment at the symbol rate.  It can\n               increment after\
    \ a valid carrier completion at a\n               maximum rate of once per 100\
    \ ms until the next\n               carrier event.\n               This counter\
    \ increments only for MAUs of type\n               dot3MauType100BaseT4, dot3MauType100BaseTX,\
    \ and\n               dot3MauType100BaseFX.  For all other MAU types,\n      \
    \         this counter will always indicate zero.\n               The approximate\
    \ minimum time for rollover of this\n               counter is 7.4 hours.\"\n\
    \       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.1.10, aFalseCarriers.\"\
    \n       ::= { ifMauEntry 9 }\n   ifMauTypeList OBJECT-TYPE\n       SYNTAX   \
    \  Integer32\n       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"A value that uniquely identifies the set of\n              \
    \ possible IEEE 802.3 types that the MAU could be.\n               The value is\
    \ a sum which initially takes the value\n               zero.  Then, for each\
    \ type capability of this MAU,\n               2 raised to the power noted below\
    \ is added to the\n               sum. For example, a MAU which has the capability\n\
    \               to be only 10BASE-T would have a value of 512\n              \
    \ (2**9).  In contrast, a MAU which supports both\n               10Base-T (full\
    \ duplex) and 100BASE-TX (full\n               duplex) would have a value of ((2**11)\
    \ + (2**16))\n               or 67584.\n               The powers of 2 assigned\
    \ to the capabilities are\n               these:\n               Power  Capability\n\
    \                 0      other or unknown\n                 1      AUI\n     \
    \            2      10BASE-5\n                 3      FOIRL\n                \
    \ 4      10BASE-2\n                 5      10BASE-T duplex mode unknown\n    \
    \             6      10BASE-FP\n                 7      10BASE-FB\n          \
    \       8      10BASE-FL duplex mode unknown\n                 9      10BROAD36\n\
    \                10      10BASE-T  half duplex mode\n                11      10BASE-T\
    \  full duplex mode\n                12      10BASE-FL half duplex mode\n    \
    \            13      10BASE-FL full duplex mode\n                14      100BASE-T4\n\
    \                15      100BASE-TX half duplex mode\n                16     \
    \ 100BASE-TX full duplex mode\n                17      100BASE-FX half duplex\
    \ mode\n                18      100BASE-FX full duplex mode\n                19\
    \      100BASE-T2 half duplex mode\n                20      100BASE-T2 full duplex\
    \ mode\n               If auto-negotiation is present on this MAU, this\n    \
    \           object will map to ifMauAutoNegCapability.\"\n       ::= { ifMauEntry\
    \ 10 }\n   ifMauDefaultType OBJECT-TYPE\n       SYNTAX     OBJECT IDENTIFIER\n\
    \       MAX-ACCESS read-write\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This object identifies the default administrative\n        \
    \       10 or 100 Mb/s baseband MAU type, to be used in\n               conjunction\
    \ with the operational MAU type denoted\n               by ifMauType.\n      \
    \         The set of possible values for this object is the\n               same\
    \ as the set defined for the ifMauType object.\n               This object represents\
    \ the administratively-\n               configured type of the MAU.  If auto-negotiation\n\
    \               is not enabled or is not implemented for this MAU,\n         \
    \      the value of this object determines the\n               operational type\
    \ of the MAU.  In this case, a set\n               to this object will force the\
    \ MAU into the\n               specified operating mode.\n               If auto-negotiation\
    \ is implemented and enabled for\n               this MAU, the operational type\
    \ of the MAU is\n               determined by auto-negotiation, and the value\
    \ of\n               this object denotes the type to which the MAU will\n    \
    \           automatically revert if/when auto-negotiation is\n               later\
    \ disabled.\n               NOTE TO IMPLEMENTORS:  It may be necessary to\n  \
    \             provide for underlying hardware implementations\n              \
    \ which do not follow the exact behavior specified\n               above.  In\
    \ particular, when\n               ifMauAutoNegAdminStatus transitions from enabled\n\
    \               to disabled, the agent implementation must ensure\n          \
    \     that the operational type of the MAU (as reported\n               by ifMauType)\
    \ correctly transitions to the value\n               specified by this object,\
    \ rather than continuing\n               to operate at the value earlier determined\
    \ by the\n               auto-negotiation function.\"\n       REFERENCE\n    \
    \           \"[IEEE 802.3 Mgt], 30.5.1.1.1, aMAUID, and [IEEE\n              \
    \ 802.3 Std], 22.2.4.1.4.\"\n       ::= { ifMauEntry 11 }\n   ifMauAutoNegSupported\
    \ OBJECT-TYPE\n       SYNTAX     TruthValue\n       MAX-ACCESS read-only\n   \
    \    STATUS     current\n       DESCRIPTION\n               \"This object indicates\
    \ whether or not auto-\n               negotiation is supported on this MAU.\"\
    \n       ::= { ifMauEntry 12 }\n   -- The ifJackTable applies to MAUs attached\
    \ to interfaces\n   -- which have one or more external jacks (connectors).\n \
    \  ifJackTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF IfJackEntry\n      \
    \ MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n \
    \              \"Information about the external jacks attached to\n          \
    \     MAUs attached to an interface.\"\n       ::= { dot3IfMauBasicGroup 2 }\n\
    \   ifJackEntry OBJECT-TYPE\n       SYNTAX     IfJackEntry\n       MAX-ACCESS\
    \ not-accessible\n       STATUS     current\n       DESCRIPTION\n            \
    \   \"An entry in the table, containing information\n               about a particular\
    \ jack.\"\n       INDEX    { ifMauIfIndex,\n                  ifMauIndex,\n  \
    \                ifJackIndex }\n       ::= { ifJackTable 1 }\n   IfJackEntry ::=\n\
    \       SEQUENCE {\n           ifJackIndex\n               Integer32,\n      \
    \     ifJackType\n               JackType\n       }\n   ifJackIndex OBJECT-TYPE\n\
    \       SYNTAX     Integer32 (1..2147483647)\n       MAX-ACCESS not-accessible\n\
    \       STATUS     current\n       DESCRIPTION\n               \"This variable\
    \ uniquely identifies the jack\n               described by this entry from among\
    \ other jacks\n               attached to the same MAU.\"\n       ::= { ifJackEntry\
    \ 1 }\n   ifJackType OBJECT-TYPE\n       SYNTAX     JackType\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    The jack connector type, as it appears on the\n               outside of the system.\"\
    \n       ::= { ifJackEntry 2 }\n   -- The ifMauAutoNegTable applies to systems\
    \ in which\n   -- auto-negotiation is supported on one or more MAUs\n   -- attached\
    \ to interfaces.  Note that if auto-negotiation\n   -- is present and enabled,\
    \ the ifMauType object reflects\n   -- the result of the auto-negotiation function.\n\
    \   ifMauAutoNegTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF IfMauAutoNegEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"Configuration and status objects for the auto-\n           \
    \    negotiation function of MAUs attached to\n               interfaces.\"\n\
    \       ::= { dot3IfMauAutoNegGroup 1 }\n   ifMauAutoNegEntry OBJECT-TYPE\n  \
    \     SYNTAX     IfMauAutoNegEntry\n       MAX-ACCESS not-accessible\n       STATUS\
    \     current\n       DESCRIPTION\n               \"An entry in the table, containing\
    \ configuration\n               and status information for the auto-negotiation\n\
    \               function of a particular MAU.\"\n           INDEX     { ifMauIfIndex,\
    \ ifMauIndex }\n       ::= { ifMauAutoNegTable 1 }\n   IfMauAutoNegEntry ::=\n\
    \       SEQUENCE {\n           ifMauAutoNegAdminStatus\n               INTEGER,\n\
    \           ifMauAutoNegRemoteSignaling\n               INTEGER,\n           ifMauAutoNegConfig\n\
    \               INTEGER,\n           ifMauAutoNegCapability\n               Integer32,\n\
    \           ifMauAutoNegCapAdvertised\n               Integer32,\n           ifMauAutoNegCapReceived\n\
    \               Integer32,\n           ifMauAutoNegRestart\n               INTEGER\n\
    \       }\n   ifMauAutoNegAdminStatus OBJECT-TYPE\n       SYNTAX     INTEGER {\n\
    \                      enabled(1),\n                      disabled(2)\n      \
    \            }\n       MAX-ACCESS read-write\n       STATUS     current\n    \
    \   DESCRIPTION\n               \"Setting this object to enabled(1) will cause\
    \ the\n               interface which has the auto-negotiation signaling\n   \
    \            ability to be enabled.\n               If the value of this object\
    \ is disabled(2) then\n               the interface will act as it would if it\
    \ had no\n               auto-negotiation signaling.  Under these\n          \
    \     conditions, an IEEE 802.3 MAU will immediately be\n               forced\
    \ to the state indicated by the value of the\n               object ifMauDefaultType.\n\
    \               NOTE TO IMPLEMENTORS:  When\n               ifMauAutoNegAdminStatus\
    \ transitions from enabled\n               to disabled, the agent implementation\
    \ must ensure\n               that the operational type of the MAU (as reported\n\
    \               by ifMauType) correctly transitions to the value\n           \
    \    specified by the ifMauDefaultType object, rather\n               than continuing\
    \ to operate at the value earlier\n               determined by the auto-negotiation\
    \ function.\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.6.1.1.2,\
    \ aAutoNegAdminState\n               and 30.6.1.2.2, acAutoNegAdminControl.\"\n\
    \       ::= { ifMauAutoNegEntry 1 }\n   ifMauAutoNegRemoteSignaling OBJECT-TYPE\n\
    \       SYNTAX     INTEGER {\n                      detected(1),\n           \
    \           notdetected(2)\n                  }\n       MAX-ACCESS read-only\n\
    \       STATUS     current\n       DESCRIPTION\n               \"A value indicating\
    \ whether the remote end of the\n               link is using auto-negotiation\
    \ signaling. It takes\n               the value detected(1) if and only if, during\
    \ the\n               previous link negotiation, FLP Bursts were\n           \
    \    received.\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.6.1.1.3,\n\
    \               aAutoNegRemoteSignaling.\"\n       ::= { ifMauAutoNegEntry 2 }\n\
    \   ifMauAutoNegConfig OBJECT-TYPE\n       SYNTAX     INTEGER {\n            \
    \          other(1),\n                      configuring(2),\n                \
    \      complete(3),\n                      disabled(4),\n                    \
    \  parallelDetectFail(5)\n                  }\n       MAX-ACCESS read-only\n \
    \      STATUS     current\n       DESCRIPTION\n               \"A value indicating\
    \ the current status of the\n               auto-negotiation process.  The enumeration\n\
    \               parallelDetectFail(5) maps to a failure in\n               parallel\
    \ detection as defined in 28.2.3.1 of [IEEE\n               802.3 Std].\"\n  \
    \     REFERENCE\n               \"[IEEE 802.3 Mgt], 30.6.1.1.4,\n            \
    \   aAutoNegAutoConfig.\"\n       ::= { ifMauAutoNegEntry 4 }\n   ifMauAutoNegCapability\
    \ OBJECT-TYPE\n       SYNTAX     Integer32\n       MAX-ACCESS read-only\n    \
    \   STATUS     current\n       DESCRIPTION\n               \"A value that uniquely\
    \ identifies the set of\n               capabilities of the local auto-negotiation\
    \ entity.\n               The value is a sum which initially takes the value\n\
    \               zero.  Then, for each capability of this\n               interface,\
    \ 2 raised to the power noted below is\n               added to the sum. For example,\
    \ an interface which\n               has the capability to support only 100Base-TX\
    \ half\n               duplex would have a value of 32768 (2**15).  In\n     \
    \          contrast, an interface which supports both\n               100Base-TX\
    \ half duplex and and 100Base-TX full\n               duplex would have a value\
    \ of 98304 ((2**15) +\n               (2**16)).\n               The powers of\
    \ 2 assigned to the capabilities are\n               these:\n               Power\
    \   Capability\n                 0       other or unknown\n                (1-9)\
    \    (reserved)\n                10       10BASE-T  half duplex mode\n       \
    \         11       10BASE-T  full duplex mode\n                12       (reserved)\n\
    \                13       (reserved)\n                14       100BASE-T4\n  \
    \              15       100BASE-TX half duplex mode\n                16      \
    \ 100BASE-TX full duplex mode\n                17       (reserved)\n         \
    \       18       (reserved)\n                19      100BASE-T2 half duplex mode\n\
    \                20      100BASE-T2 full duplex mode\n               Note that\
    \ interfaces that support this MIB may\n               have capabilities that\
    \ extend beyond the scope of\n               this MIB.\"\n       REFERENCE\n \
    \              \"[IEEE 802.3 Mgt], 30.6.1.1.5,\n               aAutoNegLocalTechnologyAbility.\"\
    \n       ::= { ifMauAutoNegEntry 5 }\n   ifMauAutoNegCapAdvertised OBJECT-TYPE\n\
    \       SYNTAX     Integer32\n       MAX-ACCESS read-write\n       STATUS    \
    \ current\n       DESCRIPTION\n               \"A value that uniquely identifies\
    \ the set of\n               capabilities advertised by the local auto-\n    \
    \           negotiation entity. Refer to\n               ifMauAutoNegCapability\
    \ for a description of the\n               possible values of this object.\n \
    \              Capabilities in this object that are not available\n          \
    \     in ifMauAutoNegCapability cannot be enabled.\"\n       REFERENCE\n     \
    \          \"[IEEE 802.3 Mgt], 30.6.1.1.6,\n               aAutoNegAdvertisedTechnologyAbility.\"\
    \n       ::= { ifMauAutoNegEntry 6 }\n   ifMauAutoNegCapReceived OBJECT-TYPE\n\
    \       SYNTAX     Integer32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"A value that uniquely identifies the set\
    \ of\n               capabilities received from the remote auto-\n           \
    \    negotiation entity. Refer to\n               ifMauAutoNegCapability for a\
    \ description of the\n               possible values of this object.\n       \
    \        Note that interfaces that support this MIB may be\n               attached\
    \ to remote auto-negotiation entities which\n               have capabilities\
    \ beyond the scope of this MIB.\"\n       REFERENCE\n               \"[IEEE 802.3\
    \ Mgt], 30.6.1.1.7,\n               aAutoNegReceivedTechnologyAbility.\"\n   \
    \    ::= { ifMauAutoNegEntry 7 }\n   ifMauAutoNegRestart OBJECT-TYPE\n       SYNTAX\
    \     INTEGER {\n                      restart(1),\n                      norestart(2)\n\
    \                  }\n       MAX-ACCESS read-write\n       STATUS     current\n\
    \       DESCRIPTION\n               \"If the value of this object is set to restart(1)\n\
    \               then this will force auto-negotiation to begin\n             \
    \  link renegotiation. If auto-negotiation signaling\n               is disabled,\
    \ a write to this object has no effect.\n               Setting the value of this\
    \ object to norestart(2)\n               has no effect.\"\n       REFERENCE\n\
    \               \"[IEEE 802.3 Mgt], 30.6.1.2.1,\n               acAutoNegRestartAutoConfig.\"\
    \n       ::= { ifMauAutoNegEntry 8 }\n   --\n   -- The Basic Broadband MAU Table\n\
    \   --\n   broadMauBasicTable OBJECT-TYPE\n       SYNTAX     SEQUENCE OF BroadMauBasicEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"Table of descriptive and status information about\n        \
    \       the broadband MAUs connected to interfaces.\"\n       ::= { dot3BroadMauBasicGroup\
    \ 1 }\n   broadMauBasicEntry OBJECT-TYPE\n       SYNTAX     BroadMauBasicEntry\n\
    \       MAX-ACCESS not-accessible\n       STATUS     current\n       DESCRIPTION\n\
    \               \"An entry in the table, containing information\n            \
    \   about a single broadband MAU.\"\n       INDEX     { broadMauIfIndex, broadMauIndex\
    \ }\n       ::= { broadMauBasicTable 1 }\n   BroadMauBasicEntry ::=\n       SEQUENCE\
    \ {\n           broadMauIfIndex\n               Integer32,\n           broadMauIndex\n\
    \               Integer32,\n           broadMauXmtRcvSplitType\n             \
    \  INTEGER,\n           broadMauXmtCarrierFreq\n               Integer32,\n  \
    \         broadMauTranslationFreq\n               Integer32\n       }\n   broadMauIfIndex\
    \ OBJECT-TYPE\n       SYNTAX     Integer32 (1..2147483647)\n       MAX-ACCESS\
    \ read-only\n       STATUS     current\n       DESCRIPTION\n               \"\
    This variable uniquely identifies the interface\n               to which the MAU\
    \ described by this entry is\n               connected.\"\n       REFERENCE\n\
    \               \"Reference RFC 1213, ifIndex.\"\n       ::= { broadMauBasicEntry\
    \ 1 }\n   broadMauIndex OBJECT-TYPE\n       SYNTAX     Integer32 (1..2147483647)\n\
    \       MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n\
    \               \"This variable uniquely identifies the MAU\n               connected\
    \ to interface broadMauIfIndex that is\n               described by this entry.\"\
    \n       REFERENCE\n               \"Reference IEEE 802.3 MAU Mgt, 20.2.3.2, aMAUID.\"\
    \n       ::= { broadMauBasicEntry 2 }\n   broadMauXmtRcvSplitType OBJECT-TYPE\n\
    \       SYNTAX     INTEGER {\n                      other(1),\n              \
    \        single(2),\n                      dual(3)\n                  }\n    \
    \   MAX-ACCESS read-only\n       STATUS     current\n       DESCRIPTION\n    \
    \           \"This object indicates the type of frequency\n               multiplexing/cabling\
    \ system used to separate the\n               transmit and receive paths for the\
    \ 10BROAD36 MAU.\n               The value other(1) is returned if the split type\n\
    \               is not either single or dual.\n               The value single(2)\
    \ indicates a single cable\n               system.  The value dual(3) indicates\
    \ a dual cable\n               system, offset normally zero.\"\n       REFERENCE\n\
    \               \"Reference IEEE 802.3 MAU Mgt, 20.2.3.2,\n               aBbMAUXmitRcvSplitType.\"\
    \n       ::= { broadMauBasicEntry 3 }\n   broadMauXmtCarrierFreq OBJECT-TYPE\n\
    \       SYNTAX     Integer32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"This variable indicates the transmit carrier\n\
    \               frequency of the 10BROAD36 MAU in MHz/4; that is,\n          \
    \     in units of 250 kHz.\"\n       REFERENCE\n               \"Reference IEEE\
    \ 802.3 MAU Mgt, 20.2.3.2,\n               aBroadbandFrequencies.xmitCarrierFrequency.\"\
    \n       ::= { broadMauBasicEntry 4 }\n   broadMauTranslationFreq OBJECT-TYPE\n\
    \       SYNTAX     Integer32\n       MAX-ACCESS read-only\n       STATUS     current\n\
    \       DESCRIPTION\n               \"This variable indicates the translation\
    \ offset\n               frequency of the 10BROAD36 MAU in MHz/4; that is,\n \
    \              in units of 250 kHz.\"\n       REFERENCE\n               \"Reference\
    \ IEEE 802.3 MAU Mgt, 20.2.3.2,\n               aBroadbandFrequencies.translationFrequency.\"\
    \n       ::= { broadMauBasicEntry 5 }\n   -- Notifications for use by 802.3 MAUs\n\
    \   rpMauJabberTrap NOTIFICATION-TYPE\n       OBJECTS     { rpMauJabberState }\n\
    \       STATUS      current\n       DESCRIPTION\n               \"This trap is\
    \ sent whenever a managed repeater MAU\n               enters the jabber state.\n\
    \               The agent must throttle the generation of\n               consecutive\
    \ rpMauJabberTraps so that there is at\n               least a five-second gap\
    \ between them.\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.3.1,\
    \ nJabber\n               notification.\"\n       ::= { snmpDot3MauMgt 0 1 }\n\
    \   ifMauJabberTrap NOTIFICATION-TYPE\n       OBJECTS     { ifMauJabberState }\n\
    \       STATUS      current\n       DESCRIPTION\n               \"This trap is\
    \ sent whenever a managed interface\n               MAU enters the jabber state.\n\
    \               The agent must throttle the generation of\n               consecutive\
    \ ifMauJabberTraps so that there is at\n               least a five-second gap\
    \ between them.\"\n       REFERENCE\n               \"[IEEE 802.3 Mgt], 30.5.1.3.1,\
    \ nJabber\n               notification.\"\n       ::= { snmpDot3MauMgt 0 2 }\n\
    \   -- Conformance information\n   mauModConf\n           OBJECT IDENTIFIER ::=\
    \ { mauMod 1 }\n     mauModCompls\n           OBJECT IDENTIFIER ::= { mauModConf\
    \ 1 }\n     mauModObjGrps\n           OBJECT IDENTIFIER ::= { mauModConf 2 }\n\
    \     mauModNotGrps\n           OBJECT IDENTIFIER ::= { mauModConf 3 }\n   --\
    \ Object groups\n   mauRpGrpBasic OBJECT-GROUP\n       OBJECTS     { rpMauGroupIndex,\n\
    \                     rpMauPortIndex,\n                     rpMauIndex,\n    \
    \                 rpMauType,\n                     rpMauStatus,\n            \
    \         rpMauMediaAvailable,\n                     rpMauMediaAvailableStateExits,\n\
    \                     rpMauJabberState,\n                     rpMauJabberingStateEnters\
    \ }\n       STATUS      current\n       DESCRIPTION\n           \"Basic conformance\
    \ group for MAUs attached to\n           repeater ports.  This group is also the\n\
    \           conformance specification for RFC 1515\n           implementations.\"\
    \n       ::= { mauModObjGrps 1 }\n   mauRpGrp100Mbs OBJECT-GROUP\n       OBJECTS\
    \     { rpMauFalseCarriers }\n       STATUS      current\n       DESCRIPTION\n\
    \           \"Conformance group for MAUs attached to\n           repeater ports\
    \ with 100 Mb/s capability.\"\n       ::= { mauModObjGrps 2 }\n   mauRpGrpJack\
    \ OBJECT-GROUP\n       OBJECTS     { rpJackType }\n       STATUS      current\n\
    \       DESCRIPTION\n           \"Conformance group for MAUs attached to\n   \
    \        repeater ports with managed jacks.\"\n       ::= { mauModObjGrps 3 }\n\
    \   mauIfGrpBasic OBJECT-GROUP\n       OBJECTS     { ifMauIfIndex,\n         \
    \            ifMauIndex,\n                     ifMauType,\n                  \
    \   ifMauStatus,\n                     ifMauMediaAvailable,\n                \
    \     ifMauMediaAvailableStateExits,\n                     ifMauJabberState,\n\
    \                     ifMauJabberingStateEnters }\n       STATUS      current\n\
    \       DESCRIPTION\n           \"Basic conformance group for MAUs attached to\n\
    \           interfaces.  This group also provides a\n           conformance specification\
    \ for RFC 1515\n           implementations.\"\n       ::= { mauModObjGrps 4 }\n\
    \   mauIfGrp100Mbs OBJECT-GROUP\n       OBJECTS     { ifMauFalseCarriers,\n  \
    \                   ifMauTypeList,\n                     ifMauDefaultType,\n \
    \                    ifMauAutoNegSupported }\n       STATUS      current\n   \
    \    DESCRIPTION\n           \"Conformance group for MAUs attached\n         \
    \  to interfaces with 100 Mb/s capability.\"\n       ::= { mauModObjGrps 5 }\n\
    \   mauIfGrpJack OBJECT-GROUP\n       OBJECTS     { ifJackType }\n       STATUS\
    \      current\n       DESCRIPTION\n           \"Conformance group for MAUs attached\n\
    \           to interfaces with managed jacks.\"\n       ::= { mauModObjGrps 6\
    \ }\n   mauIfGrpAutoNeg OBJECT-GROUP\n       OBJECTS     { ifMauAutoNegAdminStatus,\n\
    \                     ifMauAutoNegRemoteSignaling,\n                     ifMauAutoNegConfig,\n\
    \                     ifMauAutoNegCapability,\n                     ifMauAutoNegCapAdvertised,\n\
    \                     ifMauAutoNegCapReceived,\n                     ifMauAutoNegRestart\
    \ }\n       STATUS      current\n       DESCRIPTION\n           \"Conformance\
    \ group for MAUs attached to\n           interfaces with managed auto-negotiation.\"\
    \n       ::= { mauModObjGrps 7 }\n   mauBroadBasic OBJECT-GROUP\n       OBJECTS\
    \     { broadMauIfIndex,\n                     broadMauIndex,\n              \
    \       broadMauXmtRcvSplitType,\n                     broadMauXmtCarrierFreq,\n\
    \                     broadMauTranslationFreq }\n       STATUS      current\n\
    \       DESCRIPTION\n           \"Conformance group for broadband MAUs\n     \
    \      attached to interfaces.  This group\n           provides a conformance\
    \ specification\n           for RFC 1515 implementations.\"\n       ::= { mauModObjGrps\
    \ 8 }\n   -- Notification groups\n   rpMauNotifications NOTIFICATION-GROUP\n \
    \      NOTIFICATIONS { rpMauJabberTrap }\n       STATUS      current\n       DESCRIPTION\n\
    \           \"Notifications for repeater MAUs.\"\n       ::= { mauModNotGrps 1\
    \ }\n   ifMauNotifications NOTIFICATION-GROUP\n       NOTIFICATIONS { ifMauJabberTrap\
    \ }\n       STATUS      current\n       DESCRIPTION\n           \"Notifications\
    \ for interface MAUs.\"\n       ::= { mauModNotGrps 2 }\n   -- Compliances\n \
    \  mauModRpCompl MODULE-COMPLIANCE\n       STATUS      current\n       DESCRIPTION\n\
    \           \"Compliance for MAUs attached to repeater ports.\"\n       MODULE\
    \ -- this module\n           MANDATORY-GROUPS { mauRpGrpBasic }\n           GROUP\
    \ mauRpGrp100Mbs\n           DESCRIPTION\n               \"Implementation of this\
    \ optional group is\n               recommended for MAUs which have 100Mb/s\n\
    \               capability.\"\n           GROUP mauRpGrpJack\n           DESCRIPTION\n\
    \               \"Implementation of this optional group is\n               recommended\
    \ for MAUs which have one or more\n               external jacks.\"\n        \
    \   GROUP rpMauNotifications\n           DESCRIPTION\n               \"Implementation\
    \ of this group is\n               recommended for MAUs attached to repeater\n\
    \               ports.\"\n       ::= { mauModCompls 1 }\n   mauModIfCompl MODULE-COMPLIANCE\n\
    \       STATUS      current\n       DESCRIPTION\n           \"Compliance for MAUs\
    \ attached to interfaces.\"\n       MODULE -- this module\n           MANDATORY-GROUPS\
    \ { mauIfGrpBasic }\n           GROUP mauIfGrp100Mbs\n           DESCRIPTION\n\
    \               \"Implementation of this optional group is\n               recommended\
    \ for MAUs which have 100Mb/s\n               capability.\"\n           GROUP\
    \ mauIfGrpJack\n           DESCRIPTION\n               \"Implementation of this\
    \ optional group is\n               recommended for MAUs which have one or more\n\
    \               external jacks.\"\n           GROUP mauIfGrpAutoNeg\n        \
    \   DESCRIPTION\n               \"Implementation of this group is\n          \
    \     mandatory for MAUs which support\n               managed auto-negotiation.\"\
    \n           GROUP mauBroadBasic\n           DESCRIPTION\n               \"Implementation\
    \ of this group is\n               mandatory for broadband MAUs.\"\n         \
    \  GROUP ifMauNotifications\n           DESCRIPTION\n               \"Implementation\
    \ of this group is\n               recommended for MAUs attached to\n        \
    \       interfaces.\"\n       ::= { mauModCompls 2 }\n   END\n"
- title: 4.  Acknowledgements
  contents:
  - "4.  Acknowledgements\n   This document was produced by the IETF Hub MIB Working\
    \ Group, whose\n   efforts were greatly advanced by the contributions of the following\n\
    \   people:\n        Chuck Black\n        John Flick\n        Jeff Johnson\n \
    \       Leon Leong\n        Mike Lui\n        Dave Perkins\n        Geoff Thompson\n\
    \        Maurice Turcotte\n        Paul Woodruff\n   Special thanks as well to\
    \ Dave Perkins for his excellent work on the\n   SMICng compiler, which made it\
    \ easy to take advantage of the latest\n   SNMPv2 constructs in this MIB.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1]  IEEE 802.3/ISO 8802-3 Information processing systems\
    \ -\n        Local area networks - Part 3:  Carrier sense multiple\n        access\
    \ with collision detection (CSMA/CD) access method\n        and physical layer\
    \ specifications, 1993.\n   [2]  IEEE 802.3u-1995, \"MAC Parameters, Physical\
    \ Layer, Medium\n        Attachment Units and Repeater for 100 Mb/s Operation,\n\
    \        Type 100BASE-T,\" Sections 21 through 29, Supplement to\n        IEEE\
    \ Std 802.3, October 26, 1995.\n   [3]  IEEE 802.3u-1995, \"10 & 100 Mb/s Management,\"\
    \ Section 30,\n        Supplement to IEEE Std 802.3, October 26, 1995.\n   [4]\
    \  de Graaf, K., D. Romascanu, D. McMaster and K.\n        McCloghrie, \"Definitions\
    \ of Managed Objects for IEEE\n        802.3 Repeater Devices using SMIv2\", RFC\
    \ 2108, February\n        1997.\n   [5]  McCloghrie, K. and M. Rose, Editors,\
    \ \"Management\n        Information Base for Network Management of TCP/IP-based\n\
    \        internets: MIB-II\", STD 17, RFC 1213, March 1991.\n   [6]  Case, J.,\
    \ McCloghrie, K., Rose, M. and S. Waldbusser,\n        \"Structure of Management\
    \ Information for version 2 of the\n        Simple Network Management Protocol\
    \ (SNMPv2)\", RFC 1902,\n        January 1996.\n   [7]  Case, J., McCloghrie,\
    \ K., Rose, M. and S. Waldbusser, \"Textual\n        Conventions for version 2\
    \ of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1903, January\
    \ 1996.\n   [8]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n     \
    \   \"Conformance Statements for version 2 of the Simple Network\n        Management\
    \ Protocol (SNMPv2)\", RFC 1904, January 1996.\n   [9]  Case, J., McCloghrie,\
    \ K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations for version 2\
    \ of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1905, January\
    \ 1996.\n   [10] Case, J., M. Fedor, M. Schoffstall and  J. Davin, \"Simple\n\
    \        Network Management Protocol\", STD 15, RFC 1157, May 1990.\n   [11] McMaster,\
    \ D., K. McCloghrie and  S. Roberts, \"Definitions of\n        Managed Objects\
    \ for IEEE 802.3 Medium Attachment Units\n        (MAUs)\", RFC 1515, September\
    \ 1993.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Certain management information defined in this\
    \ MIB may be considered\n   sensitive in some network environments.  Therefore,\
    \ authentication of\n   received SNMP requests and controlled access to management\n\
    \   information should be employed in such environments.  The method for\n   this\
    \ authentication is a function of the SNMP Administrative\n   Framework, and has\
    \ not been expanded by this MIB.\n   Several objects in this MIB allow write access.\
    \  Setting these\n   objects can have a serious effect on the operation of the\
    \ network,\n   including enabling or disabling a MAU, changing a MAU's default\
    \ type,\n   enabling, disabling or restarting autonegotiation, or modifying the\n\
    \   capabilities that a MAU advertizes during autonegotiation.  It is\n   recommended\
    \ that implementers seriously consider whether set\n   operations should be allowed\
    \ without providing, at a minimum,\n   authentication of request origin.\n"
- title: 7.  Authors' Addresses
  contents:
  - "7.  Authors' Addresses\n   Kathryn de Graaf\n   3Com Corporation\n   118 Turnpike\
    \ Rd.\n   Southborough, MA 01772 USA\n   Phone: (508)229-1627\n   Fax:   (508)490-5882\n\
    \   EMail: kdegraaf@isd.3com.com\n   Dan Romascanu\n   Madge Networks (Israel)\
    \ Ltd.\n   Atidim Technology Park, Bldg. 3\n   Tel Aviv 61131, Israel\n   Phone:\
    \ 972-3-6458414, 6458458\n   Fax:   972-3-6487146\n   EMail: dromasca@madge.com\n\
    \   Donna McMaster\n   Cisco Systems Inc.\n   170 West Tasman Drive\n   San Jose,\
    \ CA 95134\n   Phone:: (408) 526-5260\n   EMail: mcmaster@cisco.com\n   Keith\
    \ McCloghrie\n   Cisco Systems Inc.\n   170 West Tasman Drive\n   San Jose, CA\
    \ 95134\n   Phone: (408) 526-5260\n   EMail: kzm@cisco.com\n   Sam Roberts\n \
    \  Farallon Computing, Inc.\n   2470 Mariner Square Loop\n   Alameda, CA 94501-1010\n\
    \   Phone:: (510) 814-5215\n   EMail: sroberts@farallon.com\n"
- title: 8.  Full Copyright Statement
  contents:
  - "8.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
