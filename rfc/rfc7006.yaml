- contents:
  - "             Miscellaneous Capabilities Negotiation in the\n                   Session
    Description Protocol (SDP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Session Description Protocol (SDP) has been extended with a\n
    \  capability negotiation mechanism framework that allows the endpoints\n   to
    negotiate transport protocols and attributes.  This framework has\n   been extended
    with a media capabilities negotiation mechanism that\n   allows endpoints to negotiate
    additional media-related capabilities.\n   This negotiation is embedded into the
    widely used SDP offer/answer\n   procedures.\n   This memo extends the SDP capability
    negotiation framework to allow\n   endpoints to negotiate three additional SDP
    capabilities.  In\n   particular, this memo provides a mechanism to negotiate
    bandwidth\n   (\"b=\" line), connection data (\"c=\" line), and session or media
    titles\n   (\"i=\" line for each session or media).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7006.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Conventions Used in This Document ...............................3\n   3.
    Protocol Description ............................................4\n      3.1.
    Extensions to SDP ..........................................4\n           3.1.1.
    Bandwidth Capability ................................6\n           3.1.2. Connection
    Data Capability ..........................8\n           3.1.3. Title Capability
    ...................................12\n      3.2. Session Level versus Media Level
    ..........................16\n      3.3. Offer/Answer Model Extensions .............................17\n
    \          3.3.1. Generating the Initial Offer .......................17\n           3.3.2.
    Generating the Answer ..............................17\n           3.3.3. Offerer
    Processing of the Answer ...................18\n           3.3.4. Modifying the
    Session ..............................18\n   4. Field Replacement Rules ........................................18\n
    \  5. Security Considerations ........................................18\n   6.
    IANA Considerations ............................................19\n      6.1.
    New SDP Attributes ........................................19\n      6.2. New
    Option Tags ...........................................20\n      6.3. New SDP
    Capability Negotiation Configuration Parameters ...20\n   7. Acknowledgments ................................................20\n
    \  8. References .....................................................20\n      8.1.
    Normative References ......................................20\n      8.2. Informative
    References ....................................21\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Session Description Protocol (SDP) [RFC4566] is intended
    for\n   describing multimedia sessions for the purposes of session\n   announcement,
    session invitation, and other forms of multimedia\n   session initiation.  SDP
    has been extended with an SDP Capability\n   Negotiation Mechanism Framework [RFC5939]
    that allows the endpoints\n   to negotiate capabilities, such as support for the
    Real-time\n   Transport Protocol (RTP) [RFC3550] and the Secure Real-time Transport\n
    \  Protocol (SRTP) [RFC3711].  The SDP Media Capabilities Negotiation\n   [RFC6871]
    provides negotiation capabilities to media lines as well.\n   The capability negotiation
    is embedded into the widely used SDP\n   offer/answer procedure [RFC3264].  This
    memo provides the means to\n   negotiate further capabilities than those specified
    in the SDP\n   Capability Negotiation Mechanism Framework [RFC5939] and the SDP\n
    \  Media Capabilities Negotiation [RFC6871].  In particular, this memo\n   provides
    a mechanism to negotiate bandwidth (\"b=\"), connection data\n   (\"c=\"), and
    session or media titles (\"i=\").\n   Since the three added capabilities are independent,
    it is not\n   expected that implementations will necessarily support all of them
    at\n   the same time.  Instead, it is expected that applications will choose\n
    \  their needed capability for their specific purpose.  For this reason,\n   the
    normative part pertaining to each capability is in a self-\n   contained section:
    Section 3.1.1 describes the bandwidth capability\n   extension, Section 3.1.2
    describes the connection data capability\n   extension, and Section 3.1.3 describes
    the title capability\n   extension.  Separate SDP Capability Negotiation option
    tags are\n   defined for each capability, allowing endpoints to indicate and/or\n
    \  require support for these extensions according to procedures defined\n   in
    SDP Capability Negotiation [RFC5939].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in BCP 14, RFC 2119\n   [RFC2119] and indicate requirement levels for compliant\n
    \  implementations.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - '3.  Protocol Description

    '
  - contents:
    - "3.1.  Extensions to SDP\n   The SDP Capability Negotiation Framework [RFC5939]
      and the SDP Media\n   Capabilities Negotiation [RFC6871] specify attributes
      for negotiating\n   SDP capabilities.  These documents specify new attributes
      (e.g.,\n   \"acap\", \"tcap\", \"rmcap\", and \"omcap\") for achieving their
      purpose.\n   In this document, we define three new additional capability\n   attributes
      for SDP lines of the general form:\n      type=value\n   for types \"b\", \"c\",
      and \"i\".  The corresponding capability attributes\n   are respectively defined
      as:\n   o  \"bcap\": bandwidth capability\n   o  \"ccap\": connection data capability\n
      \  o  \"icap\": title capability\n   From the sub-rules of the attribute (\"a=\")
      line in SDP [RFC4566], SDP\n   attributes are of the form:\n         attribute
      \         = (att-field \":\" att-value) / att-field\n         att-field          =
      token\n         att-value          = byte-string\n   Capability attributes use
      only the \"att-field:att-value\" form.\n   The new capabilities may be referenced
      in potential configurations\n   (\"a=pcfg\") or in latent configurations (\"a=lcfg\")
      as productions\n   conforming to the <extension-config-list>, as respectively
      defined in\n   RFC 5939 [RFC5939] and RFC 6871 [RFC6871].\n      extension-config-list
      = [\"+\"] ext-cap-name \"=\" ext-cap-list\n      ext-cap-name          = 1*(ALPHA
      / DIGIT)\n                              ; ALPHA and DIGIT defined in RFC 5234\n
      \     ext-cap-list          = 1*VCHAR  ; VCHAR defined in RFC 5234\n   The optional
      \"+\" is used to indicate that the extension is mandatory\n   and MUST be supported
      in order to use that particular configuration.\n   The new capabilities may
      also be referenced in actual configurations\n   (\"a=acfg\") as productions
      conforming to the <sel-extension-config>\n   defined in RFC 5939 [RFC5939].\n
      \        sel-extension-config = ext-cap-name \"=\" 1*VCHAR\n   The specific
      parameters are defined in the individual description of\n   each capability
      below.\n   The \"bcap\", \"ccap\", and \"icap\" capability attributes can be
      provided\n   at the SDP session and/or media level.  According to the SDP\n
      \  Capability Negotiation [RFC5939], each extension capability must\n   specify
      the implication of making it part of a configuration at the\n   media level.\n
      \  According to SDP [RFC4566], \"b=\", \"c=\", and \"i=\" lines may appear at\n
      \  either session or media level.  In line with this, the \"bcap\",\n   \"ccap\",
      and \"icap\" capability attributes, when declared at session\n   level, are
      to be interpreted as if that attribute was provided with\n   that value at the
      session level.  The \"bcap\", \"ccap\", and \"icap\"\n   capability attributes
      declared at media level are to be interpreted\n   as if that capability attribute
      was declared at the media level.\n   For example, extending the example in [RFC6871]
      with \"icap\" and\n   \"bcap\" capability attributes, we get the following SDP:\n
      \        v=0\n         o=- 25678 753849 IN IP4 192.0.2.1\n         s=\n         c=IN
      IP4 192.0.2.1\n         t=0 0\n         a=bcap:1 CT:200\n         a=icap:1 Video
      conference\n         m=audio 54320 RTP/AVP 0\n         a=rmcap:1 L16/8000/1\n
      \        a=rmcap:2 L16/16000/2\n         a=pcfg:1 m=1|2 pt=1:99,2:98\n         m=video
      66544 RTP/AVP 100\n         a=rmcap:3 H263-1998/90000\n         a=rtpmap:100
      H264/90000\n         a=pcfg:10 m=3 pt=3:101 b=1 i=1\n              Figure 1:
      Example SDP offer with bcap and icap\n                          efined at session
      level\n   The above SDP defines one PCMU audio stream and one H.264 video\n
      \  stream.  It also defines two RTP-based media capabilities (\"rmcap\"\n   numbered
      1 and 2), using 16-bit linear (L16) audio at 8 kbps and 16\n   kbps, respectively,
      as well as an RTP-based media capability for\n   H.263 video (\"rmcap\" numbered
      3).  The RTP-based media capabilities\n   all appear at the media level.  The
      example also contains a single\n   bandwidth capability (\"bcap\") and a single
      title capability (\"icap\"),\n   both defined at session level.  According to
      the definition above,\n   when the capabilities defined in the \"bcap\" and
      \"icap\" attributes are\n   referenced from the potential configuration, in
      the resulting SDP\n   they are to be interpreted as session-level attributes
      (but the\n   RTP-based media capabilities are to be interpreted as media-level\n
      \  attributes).\n"
    - contents:
      - "3.1.1.  Bandwidth Capability\n   According to RFC 4566 [RFC4566], the bandwidth
        field denotes the\n   proposed bandwidth to be used by the session or media.
        \ In this memo,\n   we specify the bandwidth capability attribute, which can
        also appear\n   at the SDP session and/or media level.  The bandwidth field
        is\n   specified in RFC 4566 [RFC4566] with the following syntax:\n      b=<bwtype>:<bandwidth>\n
        \  where <bwtype> is an alphanumeric modifier giving the meaning of the\n
        \  <bandwidth> figure.\n   In this document, we define a new capability attribute:
        the bandwidth\n   capability attribute \"bcap\".  This attribute lists bandwidth
        as\n   capabilities, according to the following definition:\n      \"a=bcap:\"
        bw-cap-num 1*WSP bwtype \":\" bandwidth CRLF\n   where <bw-cap-num> is a unique
        integer within all the bandwidth\n   capabilities in the entire SDP, which
        is used to number the bandwidth\n   capability and can take a value between
        1 and 2^31-1 (both included).\n   The other elements are as defined for the
        \"b=\" field in SDP\n   [RFC4566].\n   This format satisfies the general attribute
        production rules in SDP\n   [RFC4566], according to the following Augmented
        Backus-Naur Form\n   (ABNF) [RFC5234] syntax:\n         att-field       =/
        \"bcap\"\n         att-value       =/ bw-cap-num 1*WSP bwtype \":\" bandwidth\n
        \        bw-cap-num      = 1*10(DIGIT)   ; DIGIT defined in RFC 5234\n                 Figure
        2: Syntax of the \"bcap\" attribute\n   Negotiation of bandwidth per media
        stream can be useful when\n   negotiating media encoding capabilities with
        different bandwidths.\n"
      - contents:
        - "3.1.1.1.  Configuration Parameters\n   The SDP Capability Negotiation Framework
          [RFC5939] provides for the\n   existence of the \"pcfg\" and \"acfg\" attributes.
          \ The concept is\n   extended by the SDP Media Capabilities Negotiation
          [RFC6871] with an\n   \"lcfg\" attribute that conveys latent configurations.\n
          \  Extensions to the \"pcfg\" and \"lcfg\" attributes are defined through\n
          \  <extension-config-list>, and extensions to the \"acfg\" attribute are\n
          \  defined through the <sel-extension-config>, as defined in the SDP\n   Capability
          Negotiation [RFC5939].\n   In this document, we extend the <extension-config-list>
          field to be\n   able to convey lists of bandwidth capabilities in latent
          or potential\n   configurations, according to the following Augmented Backus-Naur
          Form\n   (ABNF) [RFC5234] syntax:\n     extension-config-list  =/ bandwidth-config-list\n
          \    bandwidth-config-list  = [\"+\"] \"b=\" bw-cap-list *(BAR bw-cap-list)\n
          \                                ; BAR defined in RFC 5939\n     bw-cap-list
          \           = bw-cap-num *(\",\" bw-cap-num)\n     bw-cap-num             =
          1*10(DIGIT)   ; DIGIT defined in RFC 5234\n                Figure 3: Syntax
          of the bandwidth parameter\n                      in \"lcfg\" and \"pcfg\"
          attributes\n   Each bandwidth capability configuration is a comma-separated
          list of\n   bandwidth capability attribute numbers where <bw-cap-num> refers
          to\n   the <bw-cap-num> bandwidth capability numbers defined explicitly\n
          \  earlier in this document, and hence MUST be between 1 and 2^31-1\n   (both
          included).  Alternative bandwidth configurations are separated\n   by a
          vertical bar (\"|\").\n   The above syntax is very flexible, allowing referencing
          to multiple\n   \"b=\" lines per configuration, even for the same <bwtype>.
          \ While the\n   need for such definitions is not seen, we have not restricted
          this,\n   as it is not restricted in SDP [RFC4566] either.\n   The bandwidth
          parameter to the actual configuration attribute\n   (\"a=acfg\") is formulated
          as a <sel-extension-config> with\n      ext-cap-name = \"b\"\n   hence\n
          \    sel-extension-config =/ sel-bandwidth-config\n     sel-bandwidth-config
          = \"b=\" bw-cap-list  ; bw-cap-list as above.\n     Figure 4: Syntax of
          the bandwidth parameter in \"acfg\" attributes\n"
        title: 3.1.1.1.  Configuration Parameters
      - contents:
        - "3.1.1.2.  Option Tag\n   The SDP Capability Negotiation Framework [RFC5939]
          allows for\n   capability negotiation extensions to be defined.  Associated
          with\n   each such extension is an option tag that identifies the extension
          in\n   question.  Hereby, we define a new option tag \"bcap-v0\" that\n
          \  identifies support for the bandwidth capability.  The endpoints using\n
          \  the \"bcap\" capability attribute SHOULD add the option tag to other\n
          \  existing option tags present in the \"csup\" and \"creq\" attributes
          in\n   SDP, according to the procedures defined in the SDP Capability\n
          \  Negotiation Framework [RFC5939].\n"
        title: 3.1.1.2.  Option Tag
      title: 3.1.1.  Bandwidth Capability
    - contents:
      - "3.1.2.  Connection Data Capability\n   According to SDP [RFC4566], the connection
        data field in SDP contains\n   the connection data, and it has the following
        syntax:\n      c=<nettype> <addrtype> <connection-address>\n   where <nettype>
        indicates the network type, <addrtype> indicates the\n   address type, and
        the <connection-address> is the connection address,\n   which is dependent
        on the address type.\n   At the moment, network types already defined include
        \"IN\", which\n   indicates Internet network type, and \"ATM\" (see RFC 3108
        [RFC3108]),\n   used for describing Asynchronous Transfer Mode (ATM) bearer\n
        \  connections.  The Circuit-Switched (CS) descriptions in the SDP\n   document
        [SDP-CS] adds a \"PSTN\" network type for expressing a Public\n   Switched
        Telephone Network (PSTN) circuit switch.\n   SDP [RFC4566] permits specification
        of connection data at the SDP\n   session and/or media level.  In order to
        permit negotiation of\n   connection data at the media level, we define the
        connection data\n   capability attribute (\"a=ccap\") in the form:\n      \"a=ccap:\"
        conn-cap-num 1*WSP nettype SP addrtype SP\n      connection-address CRLF\n
        \  where <conn-cap-num> is a unique integer within all the connection\n   capabilities
        in the entire SDP, which is used to identify the\n   connection data capability
        and can take a value between 1 and 2^31-1\n   (both included).  The other
        elements are as defined in [RFC4566].\n   This format corresponds to the [RFC4566]
        attribute production rules,\n   according to the following Augmented Backus-Naur
        Form (ABNF)\n   [RFC5234] syntax:\n         att-field       =/ \"ccap\"\n
        \        att-value       =/ conn-cap-num 1*WSP nettype SP addrtype\n                           SP
        connection-address\n         conn-cap-num    = 1*10(DIGIT)   ; 1 to 2^31-1,
        inclusive\n                                         ; DIGIT defined in RFC
        5234\n                 Figure 5: Syntax of the \"ccap\" attribute\n   The
        \"ccap\" capability attribute allows for expressing alternative\n   connections
        address (\"c=\") lines in SDP as part of the SDP Capability\n   Negotiation
        process.  One of the primary use cases for this is\n   offering alternative
        connection addresses where the <nettype> is \"IN\"\n   or \"PSTN\", i.e.,
        selecting between an IP-based bearer or a\n   circuit-switched bearer.\n   By
        supporting the \"IN\" <nettype>, the \"ccap\" attribute enables the\n   signaling
        of multiple IPv4 and IPv6 addresses; however, the Standards\n   Track mechanism
        for negotiation of alternative IP addresses in SDP is\n   Interactive Connectivity
        Establishment (ICE) [RFC5245].  The \"ccap\"\n   attribute does not change
        that; hence, the combined set of actual and\n   potential configurations (as
        defined in [RFC5939]) for any given\n   media description MUST NOT use the
        \"ccap\" attribute to negotiate more\n   than one address with an IN network
        type (i.e., it is not permissible\n   to select between \"IPv4\" and \"IPv6\"
        address families or different IP\n   addresses within the same IP address
        family.\n   Figure 6 is an example of an SDP offer that includes a \"ccap\"\n
        \  capability attribute.  An audio stream can be set up with an RTP flow\n
        \  or by establishing a circuit-switched audio stream:\n             v=0\n
        \            o=2987933123 2987933123 IN IP4 198.51.100.7\n             s=-\n
        \            t=0 0\n             a=creq:med-v0,ccap-v0\n             m=audio
        38902 RTP/AVP 0 8\n             c=IN IP4 198.51.100.7\n             a=ccap:1
        PSTN E164 +15555556666\n             a=tcap:2 PSTN\n             a=omcap:1
        -\n             a=acap:1 setup:actpass\n             a=acap:2 connection:new\n
        \            a=acap:3 cs-correlation:callerid:+15555556666\n             a=pcfg:1
        c=1 t=2 m=1 a=1,2,3\n            Figure 6: Example SDP offer with a \"ccap\"
        attribute\n   The example in Figure 6 represents an SDP offer indicating an
        audio\n   flow using RTP, such as the one represented in Figure 7, or an audio\n
        \  flow using a circuit-switched connection, such as the one represented\n
        \  in Figure 8.\n             v=0\n             o=2987933123 2987933123 IN
        IP4 198.51.100.7\n             s=-\n             t=0 0\n             m=audio
        38902 RTP/AVP 0 8\n             c=IN IP4 198.51.100.7\n             Figure
        7: Equivalent SDP offer with the RTP flow\n             v=0\n             o=2987933123
        2987933123 IN IP4 198.51.100.7\n             s=-\n             t=0 0\n             m=audio
        9 PSTN -\n             c=PSTN E164 +15555556666\n             a=setup:actpass\n
        \            a=connection:new\n             a=cs-correlation:callerid:+15555556666\n
        \      Figure 8: Equivalent SDP offer with the circuit-switched flow\n   This
        document does not define any mechanism for negotiating or\n   describing different
        port numbers; hence, the port number from the\n   \"m=\" line MUST be used
        by default.  Exceptions to this default can be\n   provided by extension mechanisms
        or network type specific rules.\n   This document defines an exception when
        the network type is \"PSTN\",\n   in which case the port number is replaced
        with 9 (the \"discard\"\n   port), as described in \"Session Description Protocol
        (SDP) Extension\n   for Setting Audio and Video Media Streams over Circuit-Switched\n
        \  Bearers in the Public Switched Telephone Network (PSTN)\" [SDP-CS].\n   An
        endpoint offering alternative IP and PSTN bearers MUST include the\n   IP
        media description in the actual configuration (IP address in the\n   \"c=\"
        line and port number in the \"m=\" line) and the PSTN media\n   description
        in the potential configuration.\n   Exceptions for other network types, such
        as for the \"ATM\" network\n   type defined in [RFC3108], require additional
        specifications.\n"
      - contents:
        - "3.1.2.1.  Configuration Parameters\n   The SDP Capability Negotiation Framework
          [RFC5939] provides for the\n   existence of the \"pcfg\" and \"acfg\" attributes,
          which can convey one\n   or more configurations to be negotiated.  The concept
          is extended by\n   the SDP Media Capabilities Negotiation [RFC6871] with
          an \"lcfg\"\n   attribute that conveys latent configurations.\n   In this
          document, we define a <connection-config> parameter to be\n   used to specify
          a connection data capability in a potential or latent\n   configuration
          attribute.  The parameter follows the form of an\n   <extension-config-list>
          with\n      ext-cap-name = \"c\"\n      ext-cap-list = conn-cap-list\n   where,
          according to the following Augmented Backus-Naur Form (ABNF)\n   [RFC5234]
          syntax:\n         extension-config-list =/ conn-config-list\n         conn-config-list
          \     = [\"+\"] \"c=\" conn-cap-list\n         conn-cap-list         = conn-cap-num
          *(BAR conn-cap-num)\n         conn-cap-num          = 1*10(DIGIT)   ; 1
          to 2^32-1 inclusive\n                  Figure 9: Syntax of the connection
          data\n                 parameter in \"lcfg\" and \"pcfg\" attributes\n   Each
          capability configuration alternative contains a single\n   connection data
          capability attribute number and refers to the\n   conn-cap-num capability
          number defined explicitly earlier in this\n   document; hence, the values
          MUST be between 1 and 2^31-1 (both\n   included).  The connection data capability
          allows the expression of\n   only a single capability in each alternative,
          rather than a list of\n   capabilities, since no more than a single connection
          data field is\n   permitted per media block.  Nevertheless, it is still
          allowed to\n   express alternative potential connection configurations separated
          by\n   a vertical bar (\"|\").\n   An endpoint includes a plus sign (\"+\")
          in the configuration attribute\n   to mandate support for this extension.
          \ An endpoint that receives\n   this parameter prefixed with a plus sign
          and does not support this\n   extension MUST treat that potential configuration
          as not valid.\n   The connection data parameter to the actual configuration
          attribute\n   (\"a=acfg\") is formulated as a <sel-extension-config> with\n
          \     ext-cap-name = \"c\"\n   hence\n         sel-extension-config =/ sel-connection-config\n
          \        sel-connection-config = \"c=\" conn-cap-num  ; as defined above.\n
          \           Figure 10: Syntax of the connection data parameter\n                           in
          \"acfg\" attributes\n"
        title: 3.1.2.1.  Configuration Parameters
      - contents:
        - "3.1.2.2.  Option Tag\n   The SDP Capability Negotiation Framework [RFC5939]
          solution allows\n   for capability negotiation extensions to be defined.
          \ Associated with\n   each such extension is an option tag that identifies
          the extension in\n   question.  Hereby, we define a new option tag of \"ccap-v0\"
          that\n   identifies support for the connection data capability.  This option\n
          \  tag SHOULD be added to other existing option tags present in the\n   \"csup\"
          and \"creq\" attributes in SDP, according to the procedures\n   defined
          in the SDP Capability Negotiation Framework [RFC5939].\n"
        title: 3.1.2.2.  Option Tag
      title: 3.1.2.  Connection Data Capability
    - contents:
      - "3.1.3.  Title Capability\n   SDP [RFC4566] provides for the existence of
        an information field\n   expressed in the format of the \"i=\" line, which
        can appear at the SDP\n   session and/or media level.  An \"i=\" line that
        is present at the\n   session level is known as the \"session name\", and
        its purpose is to\n   convey human-readable textual information about the
        session.\n   The \"i=\" line in SDP can also appear at the media level, in
        which\n   case it is used to provide human-readable information about the
        media\n   stream to which it is related; for example, it may indicate the\n
        \  purpose of the media stream.  The \"i=\" line is not to be confused\n   with
        the label attribute (\"a=label:\", [RFC4574]), which provides a\n   machine-readable
        tag.  It is foreseen that applications declaring\n   capabilities related
        to different configurations of a media stream\n   may need to provide different
        identifying information for each of\n   those configurations.  That is, a
        party might offer alternative media\n   configurations for a stream, each
        of which represents a different\n   presentation of the same or similar information.
        \ For example, an\n   audio stream might offer English or Spanish configurations,
        or a\n   video stream might offer a choice of video source such as speaker\n
        \  camera, group camera, or document viewer.  The title capability is\n   needed
        to inform the answering user in order to select the proper\n   choice, and
        the label is used to inform the offering machine which\n   choice the answerer
        has selected.  Hence, there is value in defining\n   a mechanism to provide
        titles of media streams as capabilities.\n   As defined in SDP [RFC4566],
        the session information field (\"i=\",\n   referred to as \"title\" in this
        document) is subject to the\n   \"a=charset\" attribute in order to support
        different character sets\n   and hence internationalization.  The title capability
        attribute\n   itself (\"a=icap\") is, however, not subject to the \"a=charset\"\n
        \  attribute as this would preclude the inclusion of alternative\n   session/title
        information each using different character sets.\n   Instead, the session/title
        value embedded in an \"a=icap\" attribute\n   (title capability) will be subject
        to the \"a=charset\" value used\n   within a configuration that includes that
        title capability.  This\n   provides for consistent SDP operation while allowing
        for capabilities\n   and configurations with different session/title information
        values\n   with different character set encodings (with each such configuration\n
        \  including an \"a=charset\" value with the relevant character set for\n
        \  the session/title information in question).\n   According to SDP [RFC4566],
        the session information (\"i=\") line has\n   the following syntax:\n      \"i=\"
        text\n   where \"text\" represents a human-readable text indicating the purpose\n
        \  of the session or media stream.\n   In this document, we define a new capability
        attribute: the title\n   capability \"icap\".  This attribute lists session
        or media titles as\n   capabilities, according to the following definition:\n
        \     \"a=icap:\" title-cap-num 1*WSP text\n   where <title-cap-num> is a
        unique integer within all the connection\n   capabilities in the entire SDP,
        which is used to identify the\n   particular title capability and can take
        a value between 1 and 2^31-1\n   (both included). <text> is a human-readable
        text that indicates the\n   purpose of the session or media stream it is supposed
        to\n   characterize.\n   As an example, one might use:\n      a=icap:1 Document
        Camera\n   to define a title capability number 1 to identify a particular
        source\n   of a media stream.\n   Or, in another example, one might offer
        two title capabilities with\n   different character encodings (using the charset
        attribute defined in\n   \"SDP: Session Description Protocol\" [RFC4566] and
        the generic\n   attribute capability attribute (\"a=acap:\") defined in \"Session\n
        \  Description Protocol (SDP) Capability Negotiation\" [RFC5939]).\n               a=icap:1
        [Text encoded in ISO-8859-1]\n               a=acap:1 charset:ISO-8859-1\n
        \              a=icap:2 [Text encoded in UTF-8]\n               a=acap:2 charset:UTF-8\n
        \  NOTE: Due to limitations of the ASCII encoding of RFCs, the actual\n   text
        with non-printable characters cannot be represented in the text.\n   See the
        PDF format of this RFC for a figure with non-printable\n   characters.\n   The
        title capability attribute satisfies the general attribute\n   production
        rules in SDP [RFC4566], according to the following\n   Augmented Backus-Naur
        Form (ABNF) [RFC5234] syntax:\n         att-field       =/ \"icap\"\n         att-value
        \      =/ title-cap-num 1*WSP text\n                                     ;
        text defined in RFC 4566\n         title-cap-num   = 1*10(DIGIT)   ; DIGIT
        defined in RFC 5234\n                 Figure 11: Syntax of the \"icap\" attribute\n"
      - contents:
        - "3.1.3.1.  Configuration Parameters\n   The SDP Capability Negotiation Framework
          [RFC5939] provides for the\n   existence of the \"pcfg\" and \"acfg\" attributes.
          \ The concept is\n   extended by the SDP Media Capabilities Negotiation
          [RFC6871] with an\n   \"lcfg\" attribute that conveys latent configurations.\n
          \  In this document, we define a <title-config-list> parameter to be\n   used
          to convey title capabilities in a potential or latent\n   configuration.
          \ This parameter is defined as an\n   <extension-config-list> with the following
          associations:\n      ext-cap-name = \"i\"\n      ext-cap-list = title-cap-list\n
          \  This leads to the following definition for the title capability\n   parameter:\n
          \        extension-config-list =/ title-config-list\n         title-config-list
          \    = [\"+\"] \"i=\" title-cap-list\n         title-cap-list        = title-cap-num
          *(BAR title-cap-num)\n                                         ; BAR defined
          in RFC 5939\n         title-cap-num         = 1*10(DIGIT) ; DIGIT defined
          in RFC 5234\n            Figure 12: Syntax of the title capability parameter\n
          \                     in \"lcfg\" and \"pcfg\" attributes\n   Each potential
          capability configuration contains a single title\n   capability attribute
          number where \"title-cap-num\" is the title\n   capability number defined
          explicitly earlier in this document, and\n   hence must be between 1 and
          2^31-1 (both included).  The title\n   capability allows the expression
          of only a single capability in each\n   alternative, since no more than
          a single-title field is permitted per\n   block.  Nevertheless, it is still
          allowed to express alternative\n   potential title configurations separated
          by a vertical bar (\"|\").\n   An endpoint includes a plus sign (\"+\")
          in the configuration attribute\n   to mandate support for this extension.
          \ An endpoint that receives\n   this parameter prefixed with a plus sign
          and does not support this\n   extension MUST treat that potential configuration
          as not valid.\n   The title parameter to the actual configuration attribute
          (\"a=acfg\")\n   is formulated as a <sel-extension-config> with\n      ext-cap-name
          = \"i\"\n   hence\n         sel-extension-config =/ sel-title-config\n         sel-title-config
          = \"i=\" title-cap-num  ; as defined above.\n       Figure 13: Syntax of
          the title parameter in \"acfg\" attributes\n"
        title: 3.1.3.1.  Configuration Parameters
      - contents:
        - "3.1.3.2.  Option Tag\n   At present, it is difficult to envision a scenario
          in which the\n   \"icap\" attribute must be supported or the offer must
          be rejected.  In\n   most cases, if the icap attribute or its contents were
          to be ignored,\n   an offered configuration could still be chosen based
          on other\n   criteria such as configuration numbering.  However, one might
          imagine\n   an SDP offer that contained English and Spanish potential\n
          \  configurations for an audio stream.  The session might be\n   unintelligible
          if the choice is based on configuration numbering,\n   rather than informed
          user selection.  Based on such considerations,\n   it may well prove useful
          to announce the ability to use the icap\n   attribute and its contents to
          select media configurations, or to\n   inform the user about the selected
          configuration(s).  Therefore, we\n   define a new option tag of \"icap-v0\"
          that identifies support for the\n   title capability.  This option tag SHOULD
          be added to other existing\n   option tags present in the \"csup\" and/or
          \"creq\" attributes in SDP,\n   according to the procedures defined in the
          SDP Capability Negotiation\n   Framework [RFC5939].  The discussion above
          suggests that \"icap-v0\"\n   will typically appear in a \"csup\" attribute,
          but rarely in a \"creq\"\n   attribute.\n"
        title: 3.1.3.2.  Option Tag
      title: 3.1.3.  Title Capability
    title: 3.1.  Extensions to SDP
  - contents:
    - "3.2.  Session Level versus Media Level\n   The \"bcap\", \"ccap\", and \"icap\"
      attributes can appear at the SDP\n   session and/or media level.  Endpoints
      MUST interpret capabilities\n   declared at session level as part of the session
      level in the\n   resulting SDP for that particular configuration.  Endpoints
      MUST\n   interpret capabilities declared at media description as part of the\n
      \  media level in the resulting SDP for that particular configuration.\n   The
      presence of the \"bcap\" capability for the same <bwtype> at both\n   the session
      and media level is subject to the same constraints and\n   restrictions specified
      in RFC 4566 [RFC4566] for the bandwidth\n   attribute \"b=\".\n   To avoid confusion,
      the <type-attr-num> for each \"a=bcap\", \"a=ccap\",\n   and \"a=icap\" line
      MUST be unique across all capability attributes of\n   the same type within
      the entire session description.\n"
    title: 3.2.  Session Level versus Media Level
  - contents:
    - "3.3.  Offer/Answer Model Extensions\n   In this section, we define extensions
      to the offer/answer model\n   defined in SDP Offer/Answer Model [RFC3264] and
      extended in the SDP\n   Capability Negotiation [RFC5939] to allow for bandwidth,
      connection,\n   and title capabilities to be used with the SDP Capability Negotiation\n
      \  Framework.\n"
    - contents:
      - "3.3.1.  Generating the Initial Offer\n   When an endpoint generates an initial
        offer and wants to use the\n   functionality described in the current document,
        it first defines\n   appropriate values for the bandwidth, connection data,
        and/or title\n   capability attributes according to the rules defined in [RFC4566]
        for\n   \"b=\", \"c=\", and \"i=\" lines.  The endpoint then MUST include
        the\n   respective capability attributes and associated values in the SDP\n
        \  offer.  The preferred configurations for each media stream are\n   identified
        following the media line in a \"pcfg\" attribute.  Bandwidth\n   and title
        capabilities may also be referenced in latent\n   configurations in an \"lcfg\"
        attribute, as defined in the SDP Media\n   Capabilities Negotiation [RFC6871].\n
        \  Implementations are advised to pay attention to the port number that\n
        \  is used in the \"m=\" line.  By default, a potential configuration that\n
        \  includes a connection data capability will use the port number from\n   the
        \"m=\" line, unless the network type is \"PSTN\", in which case the\n   default
        port number used will be 9.\n   The offer SHOULD include the level of capability
        negotiation\n   extensions needed to support this functionality in a \"creq\"\n
        \  attribute.\n"
      title: 3.3.1.  Generating the Initial Offer
    - contents:
      - "3.3.2.  Generating the Answer\n   When the answering party receives the offer,
        and if it supports the\n   required capability negotiation extensions, it
        SHOULD select the most\n   preferred configuration it can support for each
        media stream and\n   build the answer accordingly, as defined in Section 3.6.2
        of the SDP\n   Capability Negotiation [RFC5939].\n   If the connection data
        capability is used in a selected potential\n   configuration chosen by the
        answerer, that offer configuration MUST\n   by default use the port number
        from the actual offer configuration\n   (i.e., the \"m=\" line), unless the
        network type is \"PSTN\", in which\n   case the default port MUST be assumed
        to be 9.  Extensions may be\n   defined to negotiate the port number explicitly
        instead.\n"
      title: 3.3.2.  Generating the Answer
    - contents:
      - "3.3.3.  Offerer Processing of the Answer\n   When the offerer receives the
        answer, it MUST process the media lines\n   according to normal SDP processing
        rules to identify the media\n   stream(s) accepted by the answer, if any,
        as defined in Section 3.6.3\n   of the SDP Capability Negotiation [RFC5939].
        \ The \"acfg\" attribute,\n   if present, MUST be used to verify the proposed
        configuration used to\n   form the answer and to infer the lack of acceptability
        of\n   higher-preference configurations that were not chosen.\n"
      title: 3.3.3.  Offerer Processing of the Answer
    - contents:
      - "3.3.4.  Modifying the Session\n   If, at a later time, one of the parties
        wishes to modify the\n   operating parameters of a session, e.g., by adding
        a new media stream\n   or by changing the properties used on an existing stream,
        it may do\n   so via the mechanisms defined for SDP offer/answer [RFC3264]
        and in\n   accordance with the procedures defined in Section 3.6.4 of the
        SDP\n   Capability Negotiation [RFC5939].\n"
      title: 3.3.4.  Modifying the Session
    title: 3.3.  Offer/Answer Model Extensions
  title: 3.  Protocol Description
- contents:
  - "4.  Field Replacement Rules\n   To simplify the construction of SDP records,
    given the need to\n   include fields within the media description in question
    for endpoints\n   that do not support capabilities negotiation, we define some
    simple\n   field-replacement rules for those fields invoked by potential or\n
    \  latent configurations.  In particular, any \"i=\" or \"c=\" lines invoked\n
    \  by a configuration MUST replace the corresponding line, if present\n   within
    the media description in question.  Any \"b=\" line invoked by a\n   configuration
    MUST replace any \"b=\" of the same bandwidth type at the\n   media level, but
    not at the session level.\n"
  title: 4.  Field Replacement Rules
- contents:
  - "5.  Security Considerations\n   This document provides an extension on top of
    the SDP [RFC4566], SDP\n   Offer/Answer Model [RFC3264], SDP Capability Negotiation
    Framework\n   [RFC5939], and SDP Media Capabilities Negotiation [RFC6871].  As\n
    \  such, the security considerations of those documents apply.\n   The bandwidth
    capability attribute may be used for reserving\n   resources at endpoints and
    intermediaries that inspect SDP.\n   Modification of the bandwidth value by an
    attacker can lead to the\n   network being underutilized (too high bandwidth value)
    or congested\n   (too low bandwidth value).\n   Similarly, by modifying the alternative
    connection address(es), an\n   attacker would be able to direct media streams
    to a desired endpoint,\n   thus launching a version of the well-known voice hammer
    attack (see\n   Section 18.5.1 of [RFC5245]).\n   The title capability provides
    for alternative \"i=\" line information,\n   which is intended for human consumption.
    \ However, manipulating the\n   textual information could be misused to provide
    false information,\n   leading to a bad user experience or the person using the
    service\n   making a wrong choice regarding the available media streams.\n   In
    case it is essential to protect the capability attribute values,\n   one of the
    security mechanisms proposed in [RFC5939] SHOULD be used.\n   The \"i=\" line,
    and thus the value carried in the title capability\n   attribute, is intended
    for human-readable description only.  It\n   should not be parsed programmatically.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  IANA Considerations

    '
  - contents:
    - "6.1.  New SDP Attributes\n   IANA has registered new attributes in the \"att-field
      (both session\n   and media level)\" subregistry of the \"Session Description
      Protocol\n   (SDP) Parameters\" registry, according to the following registration\n
      \  form:\n      Attribute name:      bcap\n      Long form name:      Bandwidth
      Capability\n      Type of attribute:   Both media and session level\n      Subject
      to charset:  No\n      Purpose:             Negotiate session or media-level
      bandwidths\n      Appropriate values:  See RFC 7066, Section 3.1.1\n      Contact
      name:        Miguel A. Garcia\n                           Miguel.A.Garcia@ericsson.com\n
      \     Attribute name:      ccap\n      Long form name:      Connection Data
      Capability\n      Type of attribute:   Both media and session level\n      Subject
      to charset:  No\n      Purpose:             Negotiate media-level connection
      data\n      Appropriate values:  See RFC 7066, Section 3.1.2\n      Contact
      name:        Miguel A. Garcia\n                           Miguel.A.Garcia@ericsson.com\n
      \     Attribute name:      icap\n      Long form name:      Title Capability\n
      \     Type of attribute:   Both media and session level\n      Subject to charset:
      \ Yes\n      Purpose:             Negotiate human-readable information\n                           describing
      the session or media\n      Appropriate values:  See RFC 7066, Section 3.1.3\n
      \     Contact name:        Miguel A. Garcia\n                           Miguel.A.Garcia@ericsson.com\n"
    title: 6.1.  New SDP Attributes
  - contents:
    - "6.2.  New Option Tags\n   IANA has added the new option tags \"bcap-v0\", \"ccap-v0\",
      and \"icap-\n   v0\", defined herein, to the \"SDP Capability Negotiation Option
      Tag\"\n   subregistry of the \"Session Description Protocol (SDP) Parameters\"\n
      \  registry.\n"
    title: 6.2.  New Option Tags
  - contents:
    - "6.3.  New SDP Capability Negotiation Configuration Parameters\n   IANA has
      added the new parameter identifiers \"b\" for \"Bandwidth\", \"c\"\n   for \"Connection
      Data\", and \"i\" for \"Title\" to the \"SDP Capability\n   Negotiation Configuration
      Parameters\" subregistry of the \"Session\n   Description Protocol (SDP) Parameters\"
      registry.  These parameters\n   are permitted in \"lcfg\", \"acfg\", and \"pcfg\"
      attributes.\n"
    title: 6.3.  New SDP Capability Negotiation Configuration Parameters
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgments\n   Thanks to Christer Holmberg, Alf Heidermark, and Ingemar
    Johansson\n   for arguing for the existence of this document and reviewing it
    in\n   the early stages.  Thanks to Flemming Andreasen, Andrew Allen, and\n   Jonathan
    Lennox for a detailed review and many suggestions for\n   improvement.\n"
  title: 7.  Acknowledgments
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3264]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model\n
      \             with Session Description Protocol (SDP)\", RFC 3264, June\n              2002.\n
      \  [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n              Description
      Protocol\", RFC 4566, July 2006.\n   [RFC5234]  Crocker, D. and P. Overell,
      \"Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC
      5234, January 2008.\n   [RFC5939]  Andreasen, F., \"Session Description Protocol
      (SDP)\n              Capability Negotiation\", RFC 5939, September 2010.\n   [RFC6871]
      \ Gilman, R., Even, R., and F. Andreasen, \"Session\n              Description
      Protocol (SDP) Media Capabilities\n              Negotiation\", RFC 6871, February
      2013.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC3108]  Kumar, R. and M. Mostafa, \"Conventions
      for the use of the\n              Session Description Protocol (SDP) for ATM
      Bearer\n              Connections\", RFC 3108, May 2001.\n   [RFC3550]  Schulzrinne,
      H., Casner, S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport
      Protocol for Real-Time\n              Applications\", STD 64, RFC 3550, July
      2003.\n   [RFC3711]  Baugher, M., McGrew, D., Naslund, M., Carrara, E., and
      K.\n              Norrman, \"The Secure Real-time Transport Protocol (SRTP)\",\n
      \             RFC 3711, March 2004.\n   [RFC4574]  Levin, O. and G. Camarillo,
      \"The Session Description\n              Protocol (SDP) Label Attribute\", RFC
      4574, August 2006.\n   [RFC5245]  Rosenberg, J., \"Interactive Connectivity
      Establishment\n              (ICE): A Protocol for Network Address Translator
      (NAT)\n              Traversal for Offer/Answer Protocols\", RFC 5245, April\n
      \             2010.\n   [SDP-CS]   Garcia, M. and S. Veikkolainen, \"Session
      Description\n              Protocol (SDP) Extension for Setting Audio and Video
      Media\n              Streams over Circuit-Switched Bearers in the Public\n              Switched
      Telephone Network (PSTN)\", Work in Progress, June\n              2013.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Authors' Addresses\n   Miguel A. Garcia-Martin\n   Ericsson\n   Calle Via de
    los Poblados 13\n   Madrid  28033\n   Spain\n   Phone: +34 91 339 1000\n   EMail:
    miguel.a.garcia@ericsson.com\n   Simo Veikkolainen\n   Nokia\n   P.O. Box 226\n
    \  NOKIA GROUP, FI  00045\n   Finland\n   Phone: +358 50 486 4463\n   EMail: simo.veikkolainen@nokia.com\n
    \  Robert R. Gilman\n   3243 W. 11th Ave. Dr.\n   Broomfield, Colorado  80020\n
    \  U.S.A.\n   Phone: +1 303 898 9780\n   EMail: bob_gilman@comcast.net\n"
  title: Authors' Addresses
