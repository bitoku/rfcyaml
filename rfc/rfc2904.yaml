- title: __initial_text__
  contents:
  - '                      AAA Authorization Framework

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo serves as the base requirements for Authorization of\n\
    \   Internet Resources and Services (AIRS).  It presents an architectural\n  \
    \ framework for understanding the authorization of Internet resources\n   and\
    \ services and derives requirements for authorization protocols.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \  2\n   2. Authorization Entities and Trust Relationships ..............  4\n\
    \   3. Message Sequences ...........................................  7\n    \
    \  3.1. Single Domain Case .....................................  7\n        \
    \   3.1.1. The Agent Sequence ..............................  7\n           3.1.2.\
    \ The Pull Sequence ...............................  8\n           3.1.3. The\
    \ Push Sequence ...............................  9\n      3.2. Roaming ................................................\
    \ 10\n      3.3. Distributed Services ................................... 13\n\
    \      3.4. Combining Roaming and Distributed Services ............. 15\n   4.\
    \ Relationship of Authorization and Policy .................... 16\n      4.1.\
    \ Policy Retrieval ....................................... 16\n      4.2. Policy\
    \ Evaluation ...................................... 17\n      4.3. Policy Enforcement\
    \ ..................................... 17\n      4.4. Distributed Policy .....................................\
    \ 18\n   5. Use of Attribute Certificates ............................... 19\n\
    \   6. Resource Management ......................................... 22\n    \
    \  6.1. Session Management ..................................... 23\n      6.2.\
    \ The Resource Manager ................................... 24\n   7. AAA Message\
    \ Forwarding and Delivery ......................... 25\n   8. End-to-End Security\
    \ ......................................... 26\n   9. Streamlined Authorization\
    \ Process ........................... 27\n   10. Summary of the Authorization\
    \ Framework ..................... 28\n   11. Security Considerations ....................................\
    \ 28\n   Glossary ....................................................... 29\n\
    \   References ..................................................... 31\n   Authors'\
    \ Addresses ............................................. 32\n   Full Copyright\
    \ Statement ....................................... 35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is one of a series of three documents under\n\
    \   consideration by the AAAarch RG dealing with the authorization\n   requirements\
    \ for AAA protocols.  The three documents are:\n         AAA Authorization Framework\
    \ (this document)\n         AAA Authorization Requirements [2]\n         AAA Authorization\
    \ Application Examples [3]\n   There is a demonstrated need for a common scheme\
    \ which covers all\n   Internet services which offer Authorization.  This common\
    \ scheme will\n   address various functional architectures which meet the requirements\n\
    \   of basic services.  We attempt to describe these architectures and\n   functions\
    \ as a basis for deriving requirements for an authorization\n   protocol [2].\n\
    \   These architectures include Policy structures, Certificate\n   Authorities,\
    \ Resource Managers, Inter-Domain and Multi-Domain\n   schemes, and Distributed\
    \ Services.  The requirements are for the\n   expected use of Authorization services\
    \ across these architectures.\n   A representative set of applications that may\
    \ use this architecture\n   to support their authorization needs is presented\
    \ in [3].  The\n   examples in [3] show how this framework may be used to meet\
    \ a wide\n   variety of different authorization needs.\n   We expect that this\
    \ work may be extended in the future to a more\n   comprehensive model and that\
    \ the scheme described here will be\n   incorporated into a framework that includes\
    \ authentication,\n   accounting and auditing.  We have referenced a number of\n\
    \   authorization sources, but also recognize that there may be some that\n  \
    \ we have missed and that should be included.  Please notify one of the\n   authors\
    \ of any such oversight so it can be corrected in a future\n   revision.\n   In\
    \ general, it is assumed that the parties who are participating in\n   the authorization\
    \ process have already gone through an authentication\n   phase.  The authentication\
    \ method used by those parties is outside\n   the scope of this document except\
    \ to the extent that it influences\n   the requirements found in a subsequent\
    \ authorization process.\n   Likewise, accounting requirements are outside the\
    \ scope of this\n   document other than recording accounting data or establishing\
    \ trust\n   relationships during an authorization that will facilitate a\n   subsequent\
    \ accounting phase.\n   The work for this memo was done by a group that originally\
    \ was the\n   Authorization subgroup of the AAA Working Group of the IETF.  When\n\
    \   the charter of the AAA working group was changed to focus on MobileIP\n  \
    \ and NAS requirements, the AAAarch Research Group was chartered within\n   the\
    \ IRTF to continue and expand the architectural work started by the\n   Authorization\
    \ subgroup.  This memo is one of four which were created\n   by the subgroup.\
    \  This memo is a starting point for further work\n   within the AAAarch Research\
    \ Group.  It is still a work in progress\n   and is published so that the work\
    \ will be available for the AAAarch\n   subgroup and others working in this area,\
    \ not as a definitive\n   description of architecture or requirements.\n   This\
    \ document uses the terms 'MUST', 'SHOULD' and 'MAY', and their\n   negatives,\
    \ in the way described in RFC 2119 [4].\n"
- title: 2.  Authorization Entities and Trust Relationships
  contents:
  - "2.  Authorization Entities and Trust Relationships\n   The following framework\
    \ is being presented in order to provide a\n   framework for discussing authorization\
    \ requirements for a large\n   number of applications.  The intent is to provide\
    \ some common\n   vocabulary for the discussion.  Terminology is introduced for\
    \ basic\n   elements in the authorization transaction and for concepts that\n\
    \   appear to be common to all (or at least many) authorization\n   proposals.\n\
    \   Figure 1, below,  identifies the basic conceptual entities that may\n   be\
    \ participants in an authorization:\n   1. A User who wants access to a service\
    \ or resource.\n   2. A User Home Organization (UHO) that has an agreement with\
    \ the user\n      and checks whether the user is allowed to obtain the requested\n\
    \      service or resource.  This entity may carry information required\n    \
    \  to authorize the User, which might not be known to the Service\n      Provider\
    \ (such as a credit limit).\n   3. A Service Provider's AAA Server which authorizes\
    \ a service based\n      on an agreement with the User Home Organization without\
    \ specific\n      knowledge about the individual User.  This agreement may contain\n\
    \      elements that are not relevant to an individual user (e.g., the\n     \
    \ total agreed bandwidth between the User Home Organization and the\n      Service\
    \ Provider).\n   4. A Service Provider's Service Equipment which provides the\
    \ service\n      itself. This might, for example, be a NAS in dial service, or\
    \ a\n      Router in the QoS service, or a print server in the Internet\n    \
    \  Printing service.\n               +------+      +-------------------------+\n\
    \               |      |      | User Home Organization  |\n               |  \
    \    |      |  +-------------------+  |\n               |      |      |  |   \
    \ AAA Server     |  |\n               |      |      |  |                   | \
    \ |\n               |      |      |  +-------------------+  |\n              \
    \ |      |      |                         |\n               |      |      +-------------------------+\n\
    \               |      |\n               |      |\n               |      |\n \
    \              | User |      +-------------------------+\n               |   \
    \   |      | Service Provider        |\n               |      |      |  +-------------------+\
    \  |\n               |      |      |  |    AAA Server     |  |\n             \
    \  |      |      |  |                   |  |\n               |      |      | \
    \ +-------------------+  |\n               |      |      |                   \
    \      |\n               |      |      |  +-------------------+  |\n         \
    \      |      |      |  |      Service      |  |\n               |      |    \
    \  |  |     Equipment     |  |\n               |      |      |  +-------------------+\
    \  |\n               |      |      |                         |\n             \
    \  +------+      +-------------------------+\n              Fig. 1 -- The Basic\
    \ Authorization Entities\n   These entities will be referenced in the authorization\
    \ requirements.\n   There may be bilateral agreements between pairs of organizations\n\
    \   involved in an authorization transaction.  Agreements between\n   organizations\
    \ may take the form of formal contracts or Service Level\n   Agreements.  Figure\
    \ 2 uses double lines to show relationships that\n   may exist between the User\
    \ and the User Home Organization and between\n   the User Home Organization and\
    \ the Service Provider.\n              +------+      +-------------------------+\n\
    \              |      |      | User Home Organization  |\n              |    \
    \  |======|  +-------------------+  |\n              |      |      |  |    AAA\
    \ Server     |  |\n              |      |      |  |                   |  |\n \
    \             |      |      |  +-------------------+  |\n              |     \
    \ |      |                         |\n              |      |      +-------------------------+\n\
    \              |      |                  ||\n              |      |          \
    \        ||\n              |      |                  ||\n              | User\
    \ |      +-------------------------+\n              |      |      | Service Provider\
    \        |\n              |      |      |  +-------------------+  |\n        \
    \      |      |      |  |    AAA Server     |  |\n              |      |     \
    \ |  |                   |  |\n              |      |      |  +-------------------+\
    \  |\n              |      |      |                         |\n              |\
    \      |      |  +-------------------+  |\n              |      |      |  |  \
    \    Service      |  |\n              |      |      |  |     Equipment     | \
    \ |\n              |      |      |  +-------------------+  |\n              |\
    \      |      |                         |\n              +------+      +-------------------------+\n\
    \                     Fig. 2 -- Service Agreements\n   Authorization is based\
    \ on these bilateral agreements between\n   entities. Agreements may be chained,\
    \ as shown in figure 2.  The User\n   has an agreement with the User Home Organization\
    \ (e.g., the User may\n   have access to the service between 9:00 a.m. and 11:00\
    \ a.m. daily).\n   The User Home Organization has an agreement with the Service\
    \ Provider\n   (e.g., that all requests for access will be granted, except between\n\
    \   5:00 a.m. and 10:00 a.m. on Sunday).  The fulfillment of the User's\n   request\
    \ depends on both agreements being honored.\n   Note that these agreements may\
    \ be implemented by hand configuration\n   or by evaluation of Policy data stored\
    \ in a Policy database.  The\n   point is that there must be a set of known rules\
    \ in place between\n   entities in order for authorization transactions to be\
    \ executed.\n   Trust is necessary to allow each entity to \"know\" that the policy\
    \ it\n   is authorizing is correct.  This is a business issue as well as a\n \
    \  protocol issue.  Trust is often established through third party\n   authentication\
    \ servers (such as Kerberos), via a certificate\n   authority, by configuring\
    \ shared secrets or passwords, or by sharing\n   a common facility (such as a\
    \ connecting wire between processors).\n   These \"static\" trust relationships\
    \ are necessary for authorization\n   transactions to take place.  Static trust\
    \ relationships are used in\n   an authorization sequence to establish a \"dynamic\"\
    \ relationship\n   between the User and the Service Equipment.  Several possible\n\
    \   authorization sequences are possible, each of which use the static\n   trust\
    \ \"chain\" to have the user first be approved by the User Home\n   Organization,\
    \ and then have the Service Provider accept the request\n   based on its trust\
    \ of the User Home Organization.\n"
- title: 3.  Message Sequences
  contents:
  - "3.  Message Sequences\n   In general, the User Home Organization and the Service\
    \ Provider are\n   different entities or different \"administrative domains\"\
    .  In the\n   simplest case, however, the User Home Organization and the Service\n\
    \   Provider may be combined as a single entity.  This case will be used\n   to\
    \ describe three authorization sequences possible with the simple\n   case.\n\
    \   In following sections these concepts will be applied to more\n   complicated\
    \ cases involving separate User Home Organization and\n   Service Provider entities\
    \ (as in roaming) and multiple Service\n   Providers each with their own AAA Servers\
    \ and Service Equipment (as\n   in distributed services).\n"
- title: 3.1.  Single Domain Case
  contents:
  - "3.1.  Single Domain Case\n   This case includes the User, the Service Provider's\
    \ AAA Server, and\n   the Service Provider's Service Equipment.  Examples of this\
    \ case\n   include a NAS supported by a standalone RADIUS server, or a QoS\n \
    \  Router supported by a local bandwidth broker.\n   The sequences considered\
    \ in the following figures are the \"agent\",\n   \"pull\", and \"push\" sequences\
    \ for the single domain case.\n"
- title: 3.1.1.  The Agent Sequence
  contents:
  - "3.1.1.  The Agent Sequence\n   In the agent sequence (see figure 3), the Service\
    \ Provider AAA Server\n   functions as an agent between the User and the service\
    \ itself.  The\n   AAA Server receives a request from the User and forwards\n\
    \   authorization and possibly configuration information to the Service\n   Equipment.\
    \  In this model, the User sends a request to the Service\n   Provider's AAA Server\
    \ (1), which will apply a policy associated with\n   the User and the particular\
    \ service being requested.  The AAA Server\n   sends a request to the Service\
    \ Equipment, and the Service Equipment\n   sets up whatever is requested (2).\
    \  The Service Equipment then\n   responds to the AAA Server acknowledging that\
    \ it has set up the\n   Service for the user (3).  The AAA Server replies to the\
    \ User telling\n   it that the Service is set up (4).\n   Depending on the nature\
    \ of the service, further communication may\n   take place between the User and\
    \ the Service Equipment.  For this to\n   occur, there needs to be a binding between\
    \ the User and the\n   authorized service.  This requires further study.\n   \
    \                       +-------------------------+\n            +------+    \
    \  | Service Provider        |\n            |      |   1  |  +-------------------+\
    \  |\n            |      |------+->|    AAA Server     |  |\n            |   \
    \   |<-----+--|                   |  |\n            |      |   4  |  +-------------------+\
    \  |\n            | User |      |          |  /|\\         |\n            |  \
    \    |      |          |2  |3         |\n            |      |      |         \\\
    |/  |          |\n            |      |      |  +-------------------+  |\n    \
    \        |      |      |  |      Service      |  |\n            |      |     \
    \ |  |     Equipment     |  |\n            |      |      |  +-------------------+\
    \  |\n            +------+      |                         |\n                \
    \          +-------------------------+\n                     Fig. 3 -- Agent Sequence\n\
    \   Example: A regular user may ask for 1 Mb/s bandwidth (1).  The\n   bandwidth\
    \ broker (AAA Server) tells the router (Service Equipment) to\n   set this user\
    \ into the 1Mb/s \"queue\" (2).  The router responds that\n   it has done so (3),\
    \ and the bandwidth broker tells the User the\n   bandwidth is set up (4).\n"
- title: 3.1.2.  The Pull Sequence
  contents:
  - "3.1.2.  The Pull Sequence\n   The pull sequence (figure 4) is what is typically\
    \ used in the Dialin\n   application, in the Mobile-IP proposal, and in some QoS\
    \ proposals.\n   The User sends a request to the Service Equipment (1), which\
    \ forwards\n   it to the Service Provider's AAA Server (2), which evaluates the\n\
    \   request and returns an appropriate response to the Service Equipment\n   (3),\
    \ which sets up the service and tells the User it is ready (4).\n            \
    \              +-------------------------+\n            +------+      | Service\
    \ Provider        |\n            |      |      |  +-------------------+  |\n \
    \           |      |      |  |    AAA Server     |  |\n            |      |  \
    \    |  |                   |  |\n            |      |      |  +-------------------+\
    \  |\n            | User |      |         /|\\  |          |\n            |  \
    \    |      |          |2  |3         |\n            |      |      |         \
    \ |  \\|/         |\n            |      |   1  |  +-------------------+  |\n \
    \           |      |------+->|      Service      |  |\n            |      |<-----+--|\
    \     Equipment     |  |\n            |      |   4  |  +-------------------+ \
    \ |\n            +------+      |                         |\n                 \
    \         +-------------------------+\n                     Fig. 4 -- Pull Sequence\n"
- title: 3.1.3.  The Push Sequence
  contents:
  - "3.1.3.  The Push Sequence\n   The push sequence (figure 5) requires that the\
    \ User get from the\n   Service Provider's AAA Server a ticket or certificate\
    \ verifying that\n   it is o.k. for the User to have access to the service (1,2).\
    \   The\n   User includes the ticket in the request (3) to the Service Equipment.\n\
    \   The Service Equipment uses the ticket to verify that the request is\n   approved\
    \ by the Service Provider's AAA Server.  The Service Equipment\n   then sends\
    \ an o.k. to the User (4).\n   The ticket the user gets from the Service Provider's\
    \ AAA Server will\n   typically have some time limit on it.  It may contain an\
    \ indication\n   of service location, and in some applications, it might be used\
    \ for\n   more than one request.\n   In the push sequence the communication between\
    \ the AAA Server and the\n   Service Equipment is relayed through the User rather\
    \ than directly\n   between themselves.\n                            +-------------------------+\n\
    \              +------+      | Service Provider        |\n              |    \
    \  |   1  |  +-------------------+  |\n              |      |------+->|    AAA\
    \ Server     |  |\n              |      |<-----+--|                   |  |\n \
    \             |      |   2  |  +-------------------+  |\n              | User\
    \ |      |                         |\n              |      |      |          \
    \               |\n              |      |      |                         |\n \
    \             |      |   3  |  +-------------------+  |\n              |     \
    \ |------+->|      Service      |  |\n              |      |<-----+--|     Equipment\
    \     |  |\n              |      |   4  |  +-------------------+  |\n        \
    \      +------+      |                         |\n                           \
    \ +-------------------------+\n                     Fig. 5 -- Push Sequence\n"
- title: 3.2.  Roaming -- the User Home Organization is not the Service Provider
  contents:
  - "3.2.  Roaming -- the User Home Organization is not the Service Provider\n   In\
    \ many interesting situations, the organization that authorizes and\n   authenticates\
    \ the User is different from the organization providing\n   the service.  This\
    \ situation has been explored in the Roaming\n   Operations (roamops) Working\
    \ Group.  For purposes of this discussion,\n   any situation in which the User\
    \ Home Organization is different from\n   the Service Provider is considered to\
    \ be roaming.\n   Examples of roaming include an ISP selling dialin ports to other\n\
    \   organizations or a Mobile-IP provider allowing access to a user from\n   another\
    \ domain.\n   The same agent, pull and push sequences are possible with roaming.\n\
    \   If the Service Provider's AAA Server and the Service Equipment are\n   grouped\
    \ as a logical entity for purposes of description, then the\n   following figures\
    \ illustrate these cases.\n            +------+      +-------------------------+\n\
    \            |      |   1  | User Home Organization  |\n            |      |----->|\
    \  +-------------------+  |\n            |      |      |  |    AAA Server    \
    \ |  |\n            |      |<-----|  |                   |  |\n            | \
    \     |   4  |  +-------------------+  |\n            |      |      |        \
    \                 |\n            |      |      +-------------------------+\n \
    \           |      |                 |  /|\\\n            |      |           \
    \      |2  |3\n            |      |                \\|/  |\n            | User\
    \ |      +-------------------------+\n            |      |      | Service Provider\
    \        |\n            |      |      |  +-------------------+  |\n          \
    \  |      |      |  |    AAA Server     |  |\n            |      |      |  | \
    \                  |  |\n            |      |      |  +-------------------+  |\n\
    \            |      |      |                         |\n            |      | \
    \     |  +-------------------+  |\n            |      |      |  |      Service\
    \      |  |\n            |      |      |  |     Equipment     |  |\n         \
    \   |      |      |  +-------------------+  |\n            |      |      |   \
    \                      |\n            +------+      +-------------------------+\n\
    \                 Fig. 6 -- Roaming Agent Sequence\n            +------+     \
    \ +-------------------------+\n            |      |      | User Home Organization\
    \  |\n            |      |      |  +-------------------+  |\n            |   \
    \   |      |  |    AAA Server     |  |\n            |      |      |  |       \
    \            |  |\n            |      |      |  +-------------------+  |\n   \
    \         |      |      |                         |\n            |      |    \
    \  +-------------------------+\n            |      |                /|\\  |\n\
    \            |      |                 |2  |3\n            |      |           \
    \      |  \\|/\n            |      |      +-------------------------+\n      \
    \      |      |      | Service Provider        |\n            | User |      |\
    \  +-------------------+  |\n            |      |      |  |    AAA Server    \
    \ |  |\n            |      |   1  |  |                   |  |\n            | \
    \     |----->|  +-------------------+  |\n            |      |      |        \
    \                 |\n            |      |<-----|  +-------------------+  |\n \
    \           |      |   4  |  |      Service      |  |\n            |      |  \
    \    |  |     Equipment     |  |\n            |      |      |  +-------------------+\
    \  |\n            |      |      |                         |\n            +------+\
    \      +-------------------------+\n                 Fig. 7 -- Roaming Pull Sequence\n\
    \            +------+      +-------------------------+\n            |      | \
    \  1  | User Home Organization  |\n            |      |----->|  +-------------------+\
    \  |\n            |      |      |  |    AAA Server     |  |\n            |   \
    \   |<-----|  |                   |  |\n            |      |   2  |  +-------------------+\
    \  |\n            |      |      |                         |\n            |   \
    \   |      +-------------------------+\n            |      |\n            |  \
    \    |\n            |      |\n            | User |      +-------------------------+\n\
    \            |      |      | Service Provider        |\n            |      | \
    \     |  +-------------------+  |\n            |      |      |  |    AAA Server\
    \     |  |\n            |      |   3  |  |                   |  |\n          \
    \  |      |----->|  +-------------------+  |\n            |      |      |    \
    \                     |\n            |      |<-----|  +-------------------+  |\n\
    \            |      |   4  |  |      Service      |  |\n            |      | \
    \     |  |     Equipment     |  |\n            |      |      |  +-------------------+\
    \  |\n            |      |      |                         |\n            +------+\
    \      +-------------------------+\n               Fig. 8 -- Roaming Push Sequence\n"
- title: 3.3.  Distributed Services
  contents:
  - "3.3.  Distributed Services\n   To provide a complete service to a user, offerings\
    \ from several\n   service providers may need to be combined.  An example would\
    \ be a\n   user who requires a QoS service for a session that crosses multiple\n\
    \   ISPs.  Any service that is provided by more than one Service Provider\n  \
    \ acting in concert is a distributed service.  Figure 9 illustrates\n   distributed\
    \ services.\n                 +-------------------+      +-------------------+\n\
    \   +------+      | Org1              |      | Org2              |\n   |     \
    \ |      |  +-------------+  |      |  +-------------+  |\n   |      |      |\
    \  | AAA Server  |  |      |  | AAA Server  |  |\n   |      |      |  |      \
    \       |  |      |  |             |  |\n   |      |      |  +-------------+ \
    \ |      |  +-------------+  |\n   | User |======|                   |======|\
    \                   |\n   |      |      |  +-------------+  |      |  +-------------+\
    \  |\n   |      |      |  |   Service   |  |      |  |   Service   |  |\n   |\
    \      |      |  |  Equipment  |  |      |  |  Equipment  |  |\n   |      |  \
    \    |  +-------------+  |      |  +-------------+  |\n   +------+      |    \
    \               |      |                   |\n                 +-------------------+\
    \      +-------------------+\n                  Fig. 9 -- Distributed Services\n\
    \   The agreements between entities in figure 9 imply that the request\n   from\
    \ the User will be authenticated and authorized by the first\n   organization,\
    \ then forwarded to the second organization.  Note that\n   the sequence between\
    \ User and Org1 may be different than between Org1\n   and Org2.  The first might\
    \ use a pull sequence, and the second might\n   use an agent sequence.  This example\
    \ is illustrated in figure 10.\n                 +-------------------+      +-------------------+\n\
    \   +------+      | Org1              |      | Org2              |\n   |     \
    \ |      |  +-------------+  |   3  |  +-------------+  |\n   |      |      |\
    \  | AAA Server  |--+------+->| AAA Server  |  |\n   |      |      |  |      \
    \       |<-+------+--|             |  |\n   |      |      |  +-------------+ \
    \ |   6  |  +-------------+  |\n   | User |      |       /|\\  |      |      |\
    \        |  /|\\     |\n   |      |      |        |2  |7     |      |        |4\
    \  |5     |\n   |      |      |        |  \\|/     |      |       \\|/  |    \
    \  |\n   |      |   1  |  +-------------+  |      |  +-------------+  |\n   |\
    \      |------+->|   Service   |  |      |  |   Service   |  |\n   |      |<-----+--|\
    \  Equipment  |  |      |  |  Equipment  |  |\n   |      |   8  |  +-------------+\
    \  |      |  +-------------+  |\n   +------+      |                   |      |\
    \                   |\n                 +-------------------+      +-------------------+\n\
    \             Fig. 10 -- A Possible Distributed Sequence\n   There are a number\
    \ of other ways that authorization sequences for\n   distributed services can\
    \ be set up.  For example, it is possible\n   that, in order to reduce delay time\
    \ in setting up a session, Org1\n   could send a response to the user before receiving\
    \ a verification\n   that Org2 has authorized the service.  In that case Org1\
    \ would need\n   to be able to revoke the authorization sent earlier if Org2 does\
    \ not\n   send the authorization in some amount of time.\n"
- title: 3.4.  Combining Roaming and Distributed Services
  contents:
  - "3.4.  Combining Roaming and Distributed Services\n   Figure 11 shows a combination\
    \ of Roaming and Distributed Services.\n   Contract and trust relationships may\
    \ be set up in number of ways,\n   depending on a variety of factors, especially\
    \ the business model.\n   +------+      +-------------------+      +-------------------+\n\
    \   |      |      | User Home Org     |      | SuperOrg          |\n   |     \
    \ |      |  +-------------+  |      |  +-------------+  |\n   |      |      |\
    \  | AAA Server  |  |      |  | AAA Server  |  |\n   |      |      |  |      \
    \       |  |      |  |             |  |\n   |      |      |  +-------------+ \
    \ |      |  +-------------+  |\n   |      |      |                   |      |\
    \                   |\n   |      |      +-------------------+      +-------------------+\n\
    \   |      |\n   |      |\n   |      |      +-------------------+      +-------------------+\n\
    \   | User |      | Org1              |      | Org2              |\n   |     \
    \ |      |  +-------------+  |      |  +-------------+  |\n   |      |      |\
    \  | AAA Server  |  |      |  | AAA Server  |  |\n   |      |      |  |      \
    \       |  |      |  |             |  |\n   |      |      |  +-------------+ \
    \ |      |  +-------------+  |\n   |      |      |                   |      |\
    \                   |\n   |      |      |  +-------------+  |      |  +-------------+\
    \  |\n   |      |      |  |   Service   |  |      |  |   Service   |  |\n   |\
    \      |      |  |  Equipment  |  |      |  |  Equipment  |  |\n   |      |  \
    \    |  +-------------+  |      |  +-------------+  |\n   |      |      |    \
    \               |      |                   |\n   +------+      +-------------------+\
    \      +-------------------+\n            Fig. 11 -- Roaming and Distributed Services\n\
    \   New entities that combine or add capabilities can be created to meet\n   business\
    \ needs.   In figure 11, one such possibility, a SuperOrg\n   entity is shown.\
    \  The idea is that this entity would provide\n   authentication and authorization\
    \ for organizations that are providing\n   services to end-users. It could be\
    \ considered to be a wholesaler or\n   broker.  While not all authorization will\
    \ require having a broker,\n   authorization protocols should allow such entities\
    \ to be created to\n   meet legitimate requirements.\n   Having considered the\
    \ basic players and how they interact, we will\n   now consider different ways\
    \ that authorization data may be stored in\n   the network.\n"
- title: 4.  Relationship of Authorization and Policy
  contents:
  - "4.  Relationship of Authorization and Policy\n   The Policy Framework (policy)\
    \ Working Group is seeking to provide a\n   framework to represent, manage, and\
    \ share policies and policy\n   information in a vendor-independent, interoperable,\
    \ scalable manner.\n   [5],[6],[7].  This section explores the relationship of\
    \ policy and\n   authorization and sets the stage for defining protocol requirements\n\
    \   for supporting policy when included as part of multi-domain\n   authorization.\
    \  The work presented here builds on the policy\n   framework, extending it to\
    \ support policy across multiple domains.\n   One view of an authorization is\
    \ that it is the result of evaluating\n   policies of each organization that has\
    \ an interest in the\n   authorization decision.  In this document the assumption\
    \ is that each\n   administration may have policies which may be indexed by user,\
    \ by\n   service, or by other attributes of the request.  The policies of each\n\
    \   administration are defined independently of other administrations.\n   Each\
    \ independent policy must be 1) retrieved, 2) evaluated, and 3)\n   enforced.\n"
- title: 4.1.  Policy Retrieval
  contents:
  - "4.1.  Policy Retrieval\n   Policy definitions are maintained and stored in a\
    \ policy repository\n   [5] by (or on behalf of) the organization that requires\
    \ them.  The\n   Policy Framework WG is working on a way to describe policy [7].\n\
    \   Other implementations describe policy as a set of ACL lists.  Policy\n   definitions\
    \ must be retrieved in order to be evaluated and enforced.\n   Policy Definitions\
    \ can be indexed by requester, by service attribute,\n   or by some other key.\
    \  The organization requiring the policy is also\n   responsible for determining\
    \ which policy is to be applied to a\n   specific authorization request.\n   Policy\
    \ retrieval is typically done by the administration that defines\n   the policy\
    \ or by an agent acting for that administration.  Thus a\n   policy defining the\
    \ times of day that a particular User is allowed to\n   connect to the network\
    \ is maintained and retrieved by the User\n   Organization.  A policy defining\
    \ a time that ports will be unusable\n   because of maintenance is maintained\
    \ and retrieved by the Service\n   Provider.\n   Note that some implementation\
    \ may choose to have the Service Provider\n   retrieve a policy from the User\
    \ Home Organization using a distributed\n   directory access protocol.  This may\
    \ be appropriate in some cases,\n   but is not a general solution.  To understand\
    \ why, suppose the remote\n   administration and the home administration communicate\
    \ via a broker\n   which proxies their communications.  In this case the remote\
    \ and home\n   administrations have no prior relationship, and therefore the home\n\
    \   administration directory is unlikely to be open for access by the\n   remote\
    \ administration and vice versa.\n"
- title: 4.2.  Policy Evaluation
  contents:
  - "4.2.  Policy Evaluation\n   Evaluation of policy requires access to information\
    \ referenced by the\n   policy.  Often the information required is not available\
    \ in the\n   administration where the policy is retrieved.  For example, checking\n\
    \   that a user is allowed to login at the current time can readily be\n   done\
    \ by the User Home Organization because the User Home Organization\n   has access\
    \ to current time.  But authorizing a user requiring a 2Mb/s\n   path with less\
    \ than 4 hops requires information available at a\n   Service Provider and not\
    \ directly available to the UHO, so the UHO\n   must either 1) have a way to query\
    \ a remote administration for the\n   needed information or 2) forward the policy\
    \ to the remote\n   administration and have the remote administration do the actual\n\
    \   evaluation or 3) attempt somehow to \"shadow\" the authoritative source\n\
    \   of the information (e.g by having the Service Provider send updates\n   to\
    \ the UHO).\n   Applications might support either 1) or 2), and a general\n  \
    \ authorization protocol must allow both.  Case 3) is not considered\n   further\
    \ as shadowing seems too \"expensive\" to be supported by an AAA\n   protocol.\n\
    \   An example of case 1 is when a Service Provider forwards a request to\n  \
    \ a UHO which includes a query for the clearance code of the User.  The\n   Service\
    \ Provider policy includes reference to the clearance code and\n   the information\
    \ in the reply is used as input to that policy.\n   An example of case 2 is when\
    \ the UHO approves an authorization\n   conditional on the Service Provider confirming\
    \ that there is\n   currently a specific resource available for its use.  The\
    \ UHO\n   includes the \"policy\" along with a conditional authorization to the\n\
    \   Service Provider.\n"
- title: 4.3.  Policy Enforcement
  contents:
  - "4.3.  Policy Enforcement\n   Policy Enforcement is typically done by the Service\
    \ Provider on the\n   Service Equipment.  The Service Equipment is equivalent\
    \ to the Policy\n   Target described in the Policy Framework [5].  Thus a NAS\
    \ may enforce\n   destination IP address limits via \"filters\" and a Router may\
    \ enforce\n   QoS restrictions on incoming packets.  The protocol that sends the\n\
    \   information between the Service Equipment and the Service Provider\n   AAA\
    \ Server may be specific to the Service Equipment, but it seems\n   that the requirements\
    \ are not different in kind from what is required\n   between other AAA servers.\n\
    \   In particular, an AAA Server could send a \"policy\" to the Service\n   Equipment\
    \ stating what the equipment should do under various\n   situations.  The Service\
    \ equipment should either set up to \"enforce\"\n   the policy or reject the request.\n\
    \   The AAA Server could also send a query to the Service Equipment for\n   information\
    \ it requires to evaluate a policy.\n"
- title: 4.4.  Distributed Policy
  contents:
  - "4.4.  Distributed Policy\n   A policy is retrieved by a Policy Retrieval Point\
    \ (PRP) from a Policy\n   Repository, evaluated at a Policy Decision Point (PDP)\
    \ or Policy\n   Consumer, and enforced at a Policy Enforcement Point (PEP) or\
    \ Policy\n   Target [5].\n   Generally, any of the AAA Servers involved in an\
    \ authorization\n   transaction may retrieve a policy or evaluate a policy, and\
    \ any of\n   the Service Equipment may enforce a policy.  Policy Repositories\
    \ may\n   reside on any of the AAA Servers or be located elsewhere in the\n  \
    \ network.\n   Information against which policy conditions are evaluated (such\
    \ as\n   resource status, session state, or time of day) are accessible at\n \
    \  Policy Information Points (PIPs) and might be accessed using Policy\n   Information\
    \ Blocks (PIBs). An interesting question in any\n   authorization application\
    \ that uses policy is where are the PDPs,\n   PRPs, PIPs  and PEPs?\n   Figure\
    \ 12 shows which policy elements may be available at different\n   points in the\
    \ model.  In distributed services, there may be multiple\n   Service Providers\
    \ involved in the authorization transaction, and each\n   may act as the policy\
    \ elements shown below.\n   Note that the User (or requester) may also be a PRP\
    \ (e.g. use policy\n   description to specify what service is being requested),\
    \ a PIP (have\n   information needed by other entities to evaluate their policy),\
    \ and a\n   PDP (decide if it will accept a service with specific parameters).\n\
    \            +------+      +------------------------------+\n            |   \
    \   |      | User Home Organization       |\n            |      |      |  +-------------------+\
    \  PRP  |\n            |      |      |  |    AAA Server     |  PIP  |\n      \
    \      |      |      |  |                   |  PDP  |\n            |      |  \
    \    |  +-------------------+       |\n            |      |      |           \
    \                   |\n            |      |      +------------------------------+\n\
    \            |      |\n            |      |\n            |      |      +------------------------------+\n\
    \            | User |      | Service Provider             |\n            |   \
    \   |      |  +-------------------+  PRP  |\n            | PRP  |      |  |  \
    \  AAA Server     |  PIP  |\n            | PIP  |      |  |                  \
    \ |  PDP  |\n            | PDP  |      |  +-------------------+       |\n    \
    \        |      |      |                              |\n            |      |\
    \      |  +-------------------+       |\n            |      |      |  |      Service\
    \      |  PIP  |\n            |      |      |  |     Equipment     |  PEP  |\n\
    \            |      |      |  +-------------------+       |\n            |   \
    \   |      |                              |\n            +------+      +------------------------------+\n\
    \              PRP = Policy Retrieval Point\n              PIP = Policy Information\
    \ Point\n              PDP = Policy Decision Point\n              PEP = Policy\
    \ Enforcement Point\n       Fig. 12 -- Where Different Policy Elements May be\
    \ Located\n   An AAA protocol must be able to transport both policy definitions\
    \ and\n   the information needed to evaluate policies.  It must also support\n\
    \   queries for policy information.\n"
- title: 5.  Use of Attribute Certificates to Store Authorization Data
  contents:
  - "5.  Use of Attribute Certificates to Store Authorization Data\n   This section\
    \ outlines another mechanism that could be used for\n   securely transporting\
    \ the attributes on which an authorization\n   decision is to be made.   Work\
    \ on X.509 Attribute Certificates is\n   currently being undertaken in the Public\
    \ Key Infrastructure (PKIX)\n   Working Group [8].  This proposal is largely based\
    \ on that work.\n   When considering authorization using certificate-based mechanisms,\n\
    \   one is often less interested in the identity of the entity than in\n   some\
    \ other attributes, (e.g. roles, account limits etc.), which\n   should be used\
    \ to make an authorization decision.\n   In many such cases, it is better to separate\
    \ this information from\n   the identity for management, security, interoperability\
    \ or other\n   reasons. However, this authorization information may also need\
    \ to be\n   protected in a fashion similar to a public key certificate.  The name\n\
    \   used here for such a structure is an Attribute Certificate (AC) which\n  \
    \ is a digitally signed (certified) set of attributes.\n   An AC is a structure\
    \ that is similar to an X.509 public key\n   certificate [9] with the main difference\
    \ being that it contains no\n   public key.  The AC typically contains group membership,\
    \ role,\n   clearance and other access control information associated with the\
    \ AC\n   owner.  A syntax for ACs is also defined in the X.509 standard.\n   When\
    \ making an access decision based on an AC, an access decision\n   function (in\
    \ a PEP, PDP or elsewhere) may need to ensure that the\n   appropriate AC owner\
    \ is the entity that has requested access.  The\n   linkage between the request\
    \ and the AC can be achieved if the AC has\n   a \"pointer\" to a Public Key Certificate\
    \ (PKC) for the requester and\n   that the PKC has been used to authenticate the\
    \ request.  Other forms\n   of linkage can be defined which work with other authentication\n\
    \   schemes.\n   As there is often confusion about the difference between public\
    \ key\n   certificates (PKC's) and attribute certificates (ACs), an analogy may\n\
    \   help. A PKC can be considered to be like a passport: it identifies\n   the\
    \ owner, it tends to be valid for a long period, it is difficult to\n   forge,\
    \ and it has a strong authentication process to establish the\n   owner's identity.\
    \  An AC is more like an entry visa in that it is\n   typically issued by a different\
    \ authority than the passport issuing\n   authority, and it doesn't have as long\
    \ a validity period as a\n   passport.  Acquiring an entry visa typically requires\
    \ presenting a\n   passport that authenticates that owner's identity.  As a consequence,\n\
    \   acquiring the entry visa becomes a simpler procedure.  The entry visa\n  \
    \ will refer to the passport as a part of how that visa specifies the\n   terms\
    \ under which the passport owner is authorized to enter a\n   country.\n   In\
    \ conjunction with authentication services, ACs provide a means to\n   transport\
    \ authorization information securely to applications.\n   However, there are a\
    \ number of possible communication paths that an\n   AC may take.\n   In some\
    \ environments, it is suitable for a client to \"push\" an AC to\n   a server.\
    \  This means that no new connections between the client and\n   server domains\
    \ are required.  It also means that no search burden is\n   imposed on servers,\
    \ which improves performance.\n   In other cases, it is more suitable for a client\
    \ simply to\n   authenticate to the server and for the server to request the client's\n\
    \   AC from an AC issuer or a repository.  A major benefit of the this\n   model\
    \ is that it can be implemented without changes to the client and\n   client/server\
    \ protocol.  It is also more suitable for some inter-\n   domain cases where the\
    \ client's rights should be assigned within the\n   server's domain, rather than\
    \ within the client's \"home\" domain.\n   There are a number of possible exchanges\
    \ that can occur, and there\n   are three entities involved: client, server, and\
    \ AC issuer.  In\n   addition the use of a directory service as a repository for\
    \ AC\n   retrieval may be supported.\n   Figure 13 shows an abstract view of the\
    \ exchanges that may involve\n   ACs. Note that the lines in the diagram represent\
    \ protocols which\n   must be defined, not data flows.  The PKIX working group\
    \ will define\n   the required acquisition protocols.  One candidate for the lookup\n\
    \   protocols is LDAP (once an LDAP schema exists which states where an\n   AC\
    \ is to be found).\n      +--------------+                        +---------------+\n\
    \      |  AAA Server/ |                        |               |\n      |  AC\
    \ Issuer   +----+                   |   Directory   |\n      |              |\
    \    |                   |               |\n      +--+-----------+    | Server\
    \            +-------+-------+\n         |                | Acquisition      \
    \         |\n         |Client          |                           |Server\n \
    \        |Acquisition     +----------------------+    |Lookup\n         |    \
    \                                   |    |\n      +--+-----------+           \
    \             +--+----+-------+\n      |              |     AC in application\
    \  |   Service     |\n      |     User     +------------------------+  Equipment/\
    \   |\n      |              |        protocol        | AAA Server    |\n     \
    \ +--+-----------+                        +---------------+\n         |\n    \
    \     | Client Lookup\n      +--+-----------+\n      |              |\n      |\
    \  Directory   |\n      |              |\n      +--------------+\n           \
    \            Fig. 13 -- AC Exchanges\n   Figure 14 shows the data flows which\
    \ may occur in one particular\n   case, that termed \"push\" above (section 2.1.3).\n\
    \      +--------------+\n      |  AAA Server/ |\n      |  AC Issuer   |\n    \
    \  |              |\n      +--+-----------+\n         |\n         |Client\n  \
    \       |Acquisition (1)\n         |\n      +--+-----------+                 \
    \       +---------------+\n      |              |     AC in application  |   Service\
    \     |\n      |     User     +------------------------+  Equipment/   |\n   \
    \   |              |        protocol (2)    | AAA Server    |\n      +--------------+\
    \                        +---------------+\n              Fig. 14 -- One example\
    \ of an AC exchange\n   In the diagram, the user first contacts the AC Issuer\
    \ and then\n   incorporates the AC into the application protocol.  The Service\n\
    \   Equipment must then validate the AC and use it as the basis for the\n   access\
    \ decision (this functionality may be distributed between a PEP\n   and PDP).\n"
- title: 6.  Resource Management
  contents:
  - "6.  Resource Management\n   Authorization requests may be chained through a set\
    \ of servers, as\n   described in previous sections.  Each of the servers may\
    \ have a\n   contractual relationship with servers on either side of it in the\n\
    \   chain.  In many of the applications being considered, the\n   authorization\
    \ results in establishing of an ongoing service which we\n   call a session. \
    \ Each of the servers involved in the authorization\n   may also want to keep\
    \ track of the state of the session, and be able\n   to effect changes to the\
    \ session if required.  To make it simple to\n   discuss this capability, we assume\
    \ that each AAA Server MAY have a\n   Resource Manager component.  Resource Managers\
    \ tracking the same\n   session need to be able to initiate changes to the session,\
    \ and to\n   inform other Resource Managers when changes occur.  Communication\n\
    \   between Resource Managers creates requirements for an authorization\n   protocol.\n\
    \   An example of the use of resource management might be a user which\n   sets\
    \ up a QoS path through two ISPs, and while this path is active,\n   one of the\
    \ ISPs gets a request for more bandwidth from a higher\n   priority user.  The\
    \ ISP may need to take some bandwidth from a the\n   lower priority user's previously\
    \ allocated session and give it to the\n   new request.  To do this, each of the\
    \ administrations in the\n   authorization path must be informed and agree to\
    \ the change (this\n   could be considered to be \"authorizing the new value\"\
    ).\n"
- title: 6.1.  Session Management and State Synchronization
  contents:
  - "6.1.  Session Management and State Synchronization\n   When an AAA Server grants\
    \ authorization of some resource to an AAA\n   requester (either a User or another\
    \ AAA Server), the server may need\n   to maintain session state information.\
    \  This is used to make\n   decisions about new sessions based on the state of\
    \ current sessions,\n   and to allow monitoring of sessions by all interested\
    \ AAA Servers.\n   Each session is identified by a session identifier, which must\
    \ be\n   unique within each AAA Server.  Communication between AAA Servers\n \
    \  must include the session identifier.  It is desirable that the\n   session\
    \ identifier is the same across all AAA servers, otherwise each\n   server will\
    \ have to map identifiers from other servers to its own\n   identifiers.  A single\
    \ session identifier significantly simplifies\n   auditing and session control\
    \ functions.\n   Maintaining session state across AAA administrative boundaries\n\
    \   increases the complexity of the problem, especially if each AAA\n   Server\
    \ in the trust chain must keep state as well.  This can be\n   viewed as an interdomain\
    \ database replication problem.  The protocol\n   must include tools to help manage\
    \ replicated state.  Some of the\n   problems to be addressed are:\n   a) Service\
    \ Equipment must be able to notify its Resource Manager when\n      a session\
    \ terminates or changes state in some other way.  The\n      Resource Manager\
    \ must inform other Resource Managers which keep\n      state for this session.\n\
    \   b) The Resource Manager will need to set a time limit for each\n      session\
    \ which must be refreshed by having the Resource Manager\n      query for authoritative\
    \ status or by having the authoritative\n      source send periodic keep alive\
    \ messages that are forwarded to all\n      Resource Managers in the authorization\
    \ chain.  Determining the\n      appropriate session lifetime may be application\
    \ specific and\n      depends on the acceptable level of risk.  If the service\
    \ being\n      offered is billed based on time, the session lifetime may need\
    \ to\n      be relatively small; if the service is billed on usage, the\n    \
    \  lifetime may be relatively large.\n   c) Any Resource Manager in the chain\
    \ must have the ability to\n      terminate a session.  This requires the Resource\
    \ Manager to have\n      knowledge of at least the adjacent AAA Servers in the\n\
    \      authorization chain.\n   An example of how resource management can be used\
    \ is in the PPP\n   dialin application.  A home ISP may wish to restrict the number\
    \ of\n   concurrent sessions that a user can have at any given time.  This is\n\
    \   particularly important when service providers give all-you-can-eat\n   Internet\
    \ access.  The possibility for fraud is quite large, since a\n   user could provide\
    \ his or her username/password to many people,\n   causing a loss of revenue.\
    \  Resource management would allow the home\n   ISP AAA server to identify when\
    \ a user is active and to reject any\n   authorization request for the user until\
    \ termination indication is\n   received from the NAS or until the session expires.\n"
- title: 6.2.  The Resource Manager
  contents:
  - "6.2.  The Resource Manager\n   This section describes the functions of the Resource\
    \ Manager in more\n   detail.\n   The Resource Manager is the component which\
    \ tracks the state of\n   sessions associated with an AAA Server or Service Equipment.\
    \  It also\n   may allocate resources to a session (e.g. IP addresses) and may\
    \ track\n   use of resources allocated by peer resource managers to a session\n\
    \   (e.g. bandwidth in a foreign administrative domain).  The resource\n   manager\
    \ also provides interfaces to allow the User to acquire or\n   release authorized\
    \ sessions.\n   The Resource Manager maintains all session specific AAA state\n\
    \   information required by the AAA Server.  That state information may\n   include\
    \ pointers to peer Resource Managers in other administrative\n   domains that\
    \ possess additional AAA state information that refers to\n   the same session.\
    \  The Resource Manager is the anchor point in the\n   AAA Server from which a\
    \ session can be controlled, monitored, and\n   coordinated even if that session\
    \ is consuming network resources or\n   services across multiple Service Provider\
    \ administrative domains.\n   The Resource Manager has several important functions:\n\
    \   a) It allows a Service Provider operations staff to inspect the\n      status\
    \ of any of the allocated resources and services including\n      resources that\
    \ span foreign Service Provider administrative\n      boundaries.  The peer Resource\
    \ Managers will cooperatively share\n      only the state information subset that\
    \ is required to assist in\n      diagnosing cross-domain trouble tickets.  The\
    \ network operator may\n      also modify or altogether cancel one of the User's\
    \ active\n      authorizations.\n   b) It is the process contacted by other Resource\
    \ Managers to inform\n      the AAA Server that a specific session has been cancelled.\
    \  This\n      information is relayed to the other peer Resource Managers that\n\
    \      also know about that session and hence must cancel it.\n   c) The Resource\
    \ Manager conceals the identity and location of its\n      private internal AAA\
    \ components from other administrative domains\n      and from the User, while\
    \ at the same time facilitating cooperation\n      between those domains.\n  \
    \ d) The Resource Manager cooperates with \"policy servers\" or Policy\n     \
    \ Decision Points (PDPs).  The Resource Manager maintains internal\n      state\
    \ information, possibly complex cross-administrative domain\n      information,\
    \ supported by dialogues with its peer Resource\n      Managers.  A policy server\
    \ can use the state information when\n      evaluating a particular policy.\n\
    \   e) The separation of the Resource Manager and the policy server into\n   \
    \   two distinct architectural components allows a single session to\n      span\
    \ multiple administrative domains, where each administrative\n      domain has\
    \ one or more policy server cooperating with its Resource\n      Manager.\n  \
    \ AAA resource managers will normally use the same trust relationships\n   needed\
    \ for authorization sequences.  It is possible for independent\n   relationships\
    \ to be established, but that is discouraged.\n"
- title: 7.  AAA Message Forwarding and Delivery
  contents:
  - "7.  AAA Message Forwarding and Delivery\n   An AAA Server is responsible for\
    \ securely forwarding AAA messages to\n   the correct destination system or process\
    \ in the AAA infrastructure.\n   Two well known examples are forwarding AAA messages\
    \ for a roaming AAA\n   service, and forwarding AAA messages for a distributed\
    \ AAA service.\n   The same principle can also be applied to intra-domain\n  \
    \ communications.  The message forwarding is done in one of two modes.\n   The\
    \ first mode is when an AAA server needs to forward a message to a\n   peer AAA\
    \ server that has a known \"logical destination address\" that\n   must be resolved\
    \ by an application-specific procedure into its actual\n   network address.  Typically\
    \ the forwarding procedure indexes into a\n   database by an application-specific\
    \ identifier to discover the peer's\n   network address.  For example, in the\
    \ roaming dialin application, the\n   application-specific identifier may be an\
    \ NAI. A bandwidth brokerage\n   application would use other search indices unique\
    \ to its problem\n   domain to select the addressed peer AAA server. After the\
    \ address\n   resolution procedure has completed successfully, then the AAA server\n\
    \   transmits the message to its peer over the connection associated with\n  \
    \ that destination network address.\n   The second mode is when the AAA server\
    \ already has an established\n   session representing an authorization.  The session's\
    \ state contains\n   the addressing and context used to direct the message to\
    \ its\n   destination peer AAA server, PDP, PEP, or User.  The message is sent\n\
    \   over the AAA server's connection to that destination peer,\n   multiplexed\
    \ with other session's messages. The message must be\n   qualified by a session\
    \ identifier that is understood by both end\n   points.  The AAA message's destination\
    \ may be either intra-\n   administrative domain, or inter-administrative domain.\
    \  In the former\n   case, the destination process may reside on the same system\
    \ as the\n   AAA server.\n   In addition to the above message forwarding processing,\
    \ the\n   underlying message delivery service must meet the following\n   requirements:\n\
    \   -  Unicast capability -- An end system can send a message to any\n      other\
    \ end system with minimal latency of session setup/disconnect\n      overhead\
    \ messages, and no end system overhead of keeping state\n      information about\
    \ every potential peer.\n   -  Data integrity and error detection -- This data\
    \ transport protocol\n      assumes an underlying datagram network layer service\
    \ that includes\n      packet discard on error detection, and data integrity protection\n\
    \      against third party modifications.\n   -  Reliable data transport assurance\
    \ -- When an end system\n      successfully receives a message marked receipt\
    \ requested, it must\n      acknowledge that message to the sending system by\
    \ either\n      piggybacking the acknowledgement on an application-specific reply\n\
    \      message, or else as a standalone acknowledgement message.  The\n      sending\
    \ system maintains a retry timer; when the timer expires,\n      the sending system\
    \ retransmits a copy of its original message. It\n      gives up after a configurable\
    \ number of unsuccessful retries.\n   -  Sequenced data delivery -- If multiple\
    \ messages are sent between a\n      pair of end systems, those messages are delivered\
    \ to the addressed\n      application in the same order as they were transmitted.\n\
    \      Duplicates are silently suppressed.\n   -  Responsive to network congestion\
    \ feedback -- When the network\n      enters into congestion, the end systems\
    \ must detect that\n      condition, and they must back off their transmission\
    \ rate until\n      the congestion subsides.  The back off and recovery algorithms\n\
    \      must avoid oscillations.\n"
- title: 8.  End-to-End Security
  contents:
  - "8.  End-to-End Security\n   When AAA servers communicate through intermediate\
    \ AAA servers, such\n   as brokers, it may be necessary that a part of the payload\
    \ be secure\n   between the originator and the target AAA server.  The security\n\
    \   requirement may consist of one or more of the following: end-to-end\n   message\
    \ integrity, confidentiality, replay protection, and\n   nonrepudiation.  Furthermore,\
    \ it is a requirement that intermediate\n   AAA servers be able to append information\
    \ such as local policy to a\n   message before forwarding the message to its intended\
    \ destination.\n   It may also be required that an intermediate AAA Server sign\
    \ such\n   appended information.\n   This requirement has been clearly documented\
    \ in [10], which describes\n   many current weaknesses of the RADIUS protocol\
    \ [11] in roaming\n   networks since RADIUS does not provide such functionality.\
    \  One\n   well-known attack is the ability for the intermediate nodes to modify\n\
    \   critical accounting information, such as a session time.\n   Most popular\
    \ security protocols (e.g. IPSec, SSL, etc.) do not\n   provide the ability to\
    \ secure a portion of the payload. Therefore, it\n   may be necessary for the\
    \ AAA protocol to implement its own security\n   extensions to provide end-to-end\
    \ security.\n"
- title: 9.  Streamlined Authorization Process
  contents:
  - "9.  Streamlined Authorization Process\n   The techniques described above allow\
    \ for great flexibility in\n   distributing the components required for authentication\
    \ and\n   authorization.  However, working groups such as Roamops and MobileIP\n\
    \   have identified requirements to minimize Internet traversals in order\n  \
    \ to reduce latency.  To support these requirements, data fields\n   necessary\
    \ for both authentication and authorization SHOULD be able to\n   be carried in\
    \ a single message set.  This is especially important\n   when there are intermediate\
    \ servers (such as Brokers) in the AAA\n   chain.\n   Furthermore, it should be\
    \ possible for the Brokers to allow end-to-\n   end (direct) authentication and\
    \ authorization.  This can be done as\n   follows. The User Home Organization\
    \ generates a ticket which is\n   signed using the UHO's private key.  The ticket\
    \ is carried in the\n   accounting messages. The accounting messages must flow\
    \ through the\n   Broker since the Broker is acting as the settlement agent and\n\
    \   requires this information.  There are Brokers that will require to be\n  \
    \ in the authentication and authorization path as well since they will\n   use\
    \ this information to detect fraudulent activity, so the above\n   should be optional.\n\
    \   In order for end-to-end authentication and authorization to occur, it\n  \
    \ may be necessary for the Broker to act as a certificate authority.\n   All members\
    \ of the roaming consortium would be able to trust each\n   other (to an extent)\
    \ using the certificates.  A Service Provider's\n   AAA server that sends a request\
    \ to the Broker should be able to\n   receive a redirect message which would allow\
    \ the two peers (Service\n   Provider and UHO) to interact directly.  The redirect\
    \ message from\n   the Broker should include the UHO's certificate, which eliminates\
    \ the\n   Service Provider from accessing the certificate archive.  The request\n\
    \   from the Service Provider could include its own certificate, and a\n   token\
    \ from the Broker's redirect message that is timestamped and\n   guarantees that\
    \ the Service Provider is in good standing with the\n   Broker.  This eliminates\
    \ the home domain from accessing the\n   Certificate Revocation List (CRL).\n"
- title: 10.  Summary of the Authorization Framework
  contents:
  - "10.  Summary of the Authorization Framework\n   The above has introduced the\
    \ basic players in an authorization\n   transaction as User, User Home Organization,\
    \ Service Provider's AAA\n   Server, and Service Equipment.  It has discussed\
    \ relationships\n   between entities based on agreements or contracts, and on\
    \ \"trust\".\n   Examples of authorization sequences have been given.\n   Concepts\
    \ of roaming and distributed services have been briefly\n   described.  Combination\
    \ of roaming and distributed services was also\n   considered and the concept\
    \ of a \"wholesaler\" or Broker was\n   introduced. We have considered the use\
    \ of policies and attribute\n   certificates to store and transmit authorization\
    \ data.  We discussed\n   the problem of managing the resources to which access\
    \ has been\n   authorized including the problem of tracking state information\
    \ for\n   session-oriented services, and we defined the Resource Manager\n   component\
    \ of a AAA Server.  We considered the problem of forwarding\n   AAA messages among\
    \ servers in possibly different administrative\n   domains.  We considered the\
    \ need for end-to-end security of portions\n   of the payload of authorization\
    \ messages that pass through\n   intermediate AAA Servers.  Finally we stressed\
    \ the need for support\n   of a streamlined authorization process that minimizes\
    \ delay for\n   latency-sensitive applications.\n   The intent is that this will\
    \ provide support for discussing and\n   understanding requirements of specific\
    \ applications that need\n   authorization services.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   Authorization is itself a security mechanism.\
    \  As such, it is\n   important that authorization protocols cannot easily be\
    \ abused to\n   circumvent the protection they are intended to ensure.  It is\
    \ the\n   responsibility of protocol designers to design their protocols to be\n\
    \   resilient against well-known types of attacks.  The following are\n   some\
    \ considerations that may guide protocol designers in the\n   development of authorization\
    \ protocols.\n   Authorization protocols must not be susceptible to replay attacks.\n\
    \   If authentication data is carried with the authorization data, for\n   example,\
    \ the authentication protocol used must either be impervious\n   to replay or\
    \ else the confidentiality of the authentication data must\n   be protected.\n\
    \   If proxying is required, the authorization protocol must not be\n   susceptible\
    \ to man-in-the-middle attacks.\n   If the push model is used, the confidentiality\
    \ of the authorization\n   data must be ensured so that it may not be hijacked\
    \ by third parties\n   and used to obtain a service fraudulently.\n   If the agent\
    \ model is used, the binding between the authorization and\n   the service itself\
    \ must be protected to prevent service authorized to\n   one party from being\
    \ fraudulently received by another.\n   In addition to guarding against circumvention,\
    \ authorization\n   protocols designed according to this framework will have some\n\
    \   intrinsic security requirements.  These are included among the\n   requirements\
    \ in [2] and summarized briefly below.\n   Among the intrinsic security needs\
    \ is the fact that authorization\n   protocols may carry sensitive information.\
    \  It is necessary to\n   protect such information from disclosure to unauthorized\
    \ parties\n   including (as discussed in section 8) even certain parties involved\n\
    \   in the authorization decision.\n   We have discussed the use of multi-party\
    \ trust chains involving\n   relaying of authorization data through brokers or\
    \ other parties.  In\n   such cases, the integrity of the chain must be maintained.\
    \  It may be\n   necessary to protect the data exchanged between parties using\
    \ such\n   mechanisms as encryption and digital signatures.\n   Finally, because\
    \ authorization will be necessary to gain access to\n   many Internet services,\
    \ a denial of service attack against an\n   authorization server can be just as\
    \ effective as a denial of service\n   attack against the service equipment itself\
    \ in preventing access to\n   Internet services.\n"
- title: Glossary
  contents:
  - "Glossary\n   Attribute Certificate -- structure containing authorization\n  \
    \    attributes which is digitally signed using public key\n      cryptography.\n\
    \   Contract Relationship -- a relation established between two or more\n    \
    \  business entities where terms and conditions determine the\n      exchange\
    \ of goods or services.\n   Distributed Service -- a service that is provided\
    \ by more than one\n      Service Provider acting in concert.\n   Dynamic Trust\
    \ Relationship -- a secure relationship which is\n      dynamically created between\
    \ two entities who may never have had\n      any prior relationship. This relationship\
    \ can be created if the\n      involved entities have a mutually trusted third\
    \ party. Example: A\n      merchant trusts a cardholder at the time of a payment\
    \ transaction\n      because they both are known by a credit card organization.\n\
    \   Policy Decision Point (PDP) -- The point where policy decisions are\n    \
    \  made.\n   Policy Enforcement Point (PEP) -- The point where the policy\n  \
    \    decisions are actually enforced.\n   Resource Manager -- the component of\
    \ an AAA Server which tracks the\n      state of sessions associated with the\
    \ AAA Server or its associated\n      Service Equipment and provides an anchor\
    \ point from which a\n      session can be controlled, monitored, and coordinated.\n\
    \   Roaming -- An authorization transaction in which the Service Provider\n  \
    \    and the User Home Organization are two different organizations.\n      (Note\
    \ that the dialin application is one for which roaming has\n      been actively\
    \ considered, but this definition encompasses other\n      applications as well.)\n\
    \   Security Association -- a collection of security contexts, between a\n   \
    \   pair of nodes, which may be applied to protocol messages exchanged\n     \
    \ between them. Each context indicates an authentication algorithm\n      and\
    \ mode, a secret (a shared key, or appropriate public/private\n      key pair),\
    \ and a style of replay protection in use. [12]\n   Service Equipment -- the equipment\
    \ which provides a service.\n   Service Provider -- an organization which provides\
    \ a service.\n   Static Trust Relationship -- a pre-established secure relationship\n\
    \      between two entities created by a trusted party.  This\n      relationship\
    \ facilitates the exchange of AAA messages with a\n      certain level of security\
    \ and traceability. Example: A network\n      operator (trusted party) who has\
    \ access to the wiring closet\n      creates a connection between a user's wall\
    \ outlet and a particular\n      network port.  The user is thereafter trusted\
    \ -- to a certain\n      level -- to be connected to this particular network port.\n\
    \   User -- the entity seeking authorization to use a resource or a\n      service.\n\
    \   User Home Organization (UHO) -- An organization with whom the User\n     \
    \ has a contractual relationship which can authenticate the User and\n      may\
    \ be able to authorize access to resources or services.\n"
- title: References
  contents:
  - "References\n   [1]  Bradner, S., \"The Internet Standards Process -- Revision\
    \ 3\", BCP\n        9, RFC 2026, October 1996.\n   [2]  Farrell, S., Vollbrecht,\
    \ J., Calhoun, P., Gommans, L., Gross,\n        G., de Bruijn, B., de Laat, C.,\
    \ Holdrege, M. and D. Spence, \"AAA\n        Authorization Requirements\", RFC\
    \ 2906, August 2000.\n   [3]  Vollbrecht, J., Calhoun, P., Farrell, S., Gommans,\
    \ L., Gross,\n        G., de Bruijn, B., de Laat, C., Holdrege, M. and D. Spence,\
    \ \"AAA\n        Authorization Application Examples\", RFC 2905, August 2000.\n\
    \   [4]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n  \
    \      Levels\", BCP 14, RFC 2119, March 1997.\n   [5]  Stevens, M., \"Policy\
    \ Framework\", Work in Progress.\n   [6]  Strassner, John, Ed Ellesson, and Bob\
    \ Moore, \"Policy Core\n        Information Model -- Version 1 Specification\"\
    , Work in Progress.\n   [7]  Strassner, John, et al, \"Policy Framework LDAP Core\
    \ Schema\",\n        Work in Progress.\n   [8]  Farrell, Stephen and Russell Housley,\
    \ \"An Internet Attribute\n        Certificate Profile for Authorization\", Work\
    \ in Progress.\n   [9]  Housley, R., Ford, W., Polk, W. and D. Solo, \"Internet\
    \ X.509\n        Public Key Infrastructure -- Certificate and CRL Profile\", RFC\n\
    \        2459, January 1999.\n   [10] Aboba, B. and J. Vollbrecht, \"Proxy Chaining\
    \ and Policy\n        Implementation in Roaming\", RFC 2607, June 1999.\n   [11]\
    \ Rigney, C., Rubens, A., Simpson, W. and S. Willens, \"Remote\n        Authentication\
    \ Dial In User Service (RADIUS)\", RFC 2138, April\n        1997.\n   [12] Perkins,\
    \ C., \"IP Mobility Support\", RFC 2002, October 1996.\n   [13] Yavatkar, R.,\
    \ Pendarakis, D. and R. Guerin, \"A Framework for\n        Policy-based Admission\
    \ Control\", RFC 2753, January 2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John R. Vollbrecht\n   Interlink Networks, Inc.\n   775\
    \ Technology Drive, Suite 200\n   Ann Arbor, MI  48108\n   USA\n   Phone: +1 734\
    \ 821 1205\n   Fax:   +1 734 821 1235\n   Mail: jrv@interlinknetworks.com\n  \
    \ Pat R. Calhoun\n   Network and Security Research Center, Sun Labs\n   Sun Microsystems,\
    \ Inc.\n   15 Network Circle\n   Menlo Park, California, 94025\n   USA\n   Phone:\
    \  +1 650 786 7733\n   Fax:    +1 650 786 6445\n   EMail:  pcalhoun@eng.sun.com\n\
    \   Stephen Farrell\n   Baltimore Technologies\n   61 Fitzwilliam Lane\n   Dublin\
    \ 2\n   Ireland\n   Phone:  +353 1 647 7406\n   Fax:    +353 1 647 7499\n   EMail:\
    \  stephen.farrell@baltimore.ie\n   Leon Gommans\n   Enterasys Networks EMEA\n\
    \   Kerkplein 24\n   2841 XM  Moordrecht\n   The Netherlands\n   Phone: +31 182\
    \ 379279\n   email: gommans@cabletron.com\n          or at University of Utrecht:\n\
    \          l.h.m.gommans@phys.uu.nl\n   George M. Gross\n   Lucent Technologies\n\
    \   184 Liberty Corner Road, m.s. LC2N-D13\n   Warren, NJ 07059\n   USA\n   Phone:\
    \  +1 908 580 4589\n   Fax:    +1 908-580-4991\n   Email:  gmgross@lucent.com\n\
    \   Betty de Bruijn\n   Interpay Nederland B.V.\n   Eendrachtlaan 315\n   3526\
    \ LB Utrecht\n   The Netherlands\n   Phone: +31 30 2835104\n   EMail: betty@euronet.nl\n\
    \   Cees T.A.M. de Laat\n   Physics and Astronomy dept.\n   Utrecht University\n\
    \   Pincetonplein 5,\n   3584CC Utrecht\n   Netherlands\n   Phone: +31 30 2534585\n\
    \   Phone: +31 30 2537555\n   EMail: delaat@phys.uu.nl\n   Matt Holdrege\n   ipVerse\n\
    \   223 Ximeno Ave.\n   Long Beach, CA 90803\n   EMail: matt@ipverse.com\n   David\
    \ W. Spence\n   Interlink Networks, Inc.\n   775 Technology Drive, Suite 200\n\
    \   Ann Arbor, MI  48108\n   USA\n   Phone: +1 734 821 1203\n   Fax:   +1 734\
    \ 821 1235\n   EMail: dspence@interlinknetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
