- title: __initial_text__
  contents:
  - '                   Non-Terminal DNS Name Redirection

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a new DNS Resource Record called \"\
    DNAME\", which\n   provides the capability to map an entire subtree of the DNS\
    \ name\n   space to another domain.  It differs from the CNAME record which maps\n\
    \   a single node of the name space.\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [KWORD].\n"
- title: 2.  Motivation
  contents:
  - "2.  Motivation\n   This Resource Record and its processing rules were conceived\
    \ as a\n   solution to the problem of maintaining address-to-name mappings in\
    \ a\n   context of network renumbering.  Without the DNAME mechanism, an\n   authoritative\
    \ DNS server for the address-to-name mappings of some\n   network must be reconfigured\
    \ when that network is renumbered.  With\n   DNAME, the zone can be constructed\
    \ so that it needs no modification\n   when renumbered.  DNAME can also be useful\
    \ in other situations, such\n   as when an organizational unit is renamed.\n"
- title: 3. The DNAME Resource Record
  contents:
  - "3. The DNAME Resource Record\n   The DNAME RR has mnemonic DNAME and type code\
    \ 39 (decimal).\n   DNAME has the following format:\n      <owner> <ttl> <class>\
    \ DNAME <target>\n   The format is not class-sensitive.  All fields are required.\
    \  The\n   RDATA field <target> is a <domain-name> [DNSIS].\n   The DNAME RR causes\
    \ type NS additional section processing.\n   The effect of the DNAME record is\
    \ the substitution of the record's\n   <target> for its <owner> as a suffix of\
    \ a domain name.  A \"no-\n   descendants\" limitation governs the use of DNAMEs\
    \ in a zone file:\n      If a DNAME RR is present at a node N, there may be other\
    \ data at N\n      (except a CNAME or another DNAME), but there MUST be no data\
    \ at\n      any descendant of N.  This restriction applies only to records of\n\
    \      the same class as the DNAME record.\n   This rule assures predictable results\
    \ when a DNAME record is cached\n   by a server which is not authoritative for\
    \ the record's zone.  It\n   MUST be enforced when authoritative zone data is\
    \ loaded.  Together\n   with the rules for DNS zone authority [DNSCLR] it implies\
    \ that DNAME\n   and NS records can only coexist at the top of a zone which has\
    \ only\n   one node.\n   The compression scheme of [DNSIS] MUST NOT be applied\
    \ to the RDATA\n   portion of a DNAME record unless the sending server has some\
    \ way of\n   knowing that the receiver understands the DNAME record format.\n\
    \   Signalling such understanding is expected to be the subject of future\n  \
    \ DNS Extensions.\n   Naming loops can be created with DNAME records or a combination\
    \ of\n   DNAME and CNAME records, just as they can with CNAME records alone.\n\
    \   Resolvers, including resolvers embedded in DNS servers, MUST limit\n   the\
    \ resources they devote to any query.  Implementors should note,\n   however,\
    \ that fairly lengthy chains of DNAME records may be valid.\n"
- title: 4.  Query Processing
  contents:
  - "4.  Query Processing\n   To exploit the DNAME mechanism the name resolution algorithms\
    \ [DNSCF]\n   must be modified slightly for both servers and resolvers.\n   Both\
    \ modified algorithms incorporate the operation of making a\n   substitution on\
    \ a name (either QNAME or SNAME) under control of a\n   DNAME record.  This operation\
    \ will be referred to as \"the DNAME\n   substitution\".\n"
- title: 4.1.  Processing by Servers
  contents:
  - "4.1.  Processing by Servers\n   For a server performing non-recursive service\
    \ steps 3.c and 4 of\n   section 4.3.2 [DNSCF] are changed to check for a DNAME\
    \ record before\n   checking for a wildcard (\"*\") label, and to return certain\
    \ DNAME\n   records from zone data and the cache.\n   DNS clients sending Extended\
    \ DNS [EDNS0] queries with Version 0 or\n   non-extended queries are presumed\
    \ not to understand the semantics of\n   the DNAME record, so a server which implements\
    \ this specification,\n   when answering a non-extended query, SHOULD synthesize\
    \ a CNAME record\n   for each DNAME record encountered during query processing\
    \ to help the\n   client reach the correct DNS data.  The behavior of clients\
    \ and\n   servers under Extended DNS versions greater than 0 will be specified\n\
    \   when those versions are defined.\n   The synthesized CNAME RR, if provided,\
    \ MUST have\n      The same CLASS as the QCLASS of the query,\n      TTL equal\
    \ to zero,\n      An <owner> equal to the QNAME in effect at the moment the DNAME\
    \ RR\n      was encountered, and\n      An RDATA field containing the new QNAME\
    \ formed by the action of\n      the DNAME substitution.\n   If the server has\
    \ the appropriate key on-line [DNSSEC, SECDYN], it\n   MAY generate and return\
    \ a SIG RR for the synthesized CNAME RR.\n   The revised server algorithm is:\n\
    \   1. Set or clear the value of recursion available in the response\n      depending\
    \ on whether the name server is willing to provide\n      recursive service. \
    \ If recursive service is available and\n      requested via the RD bit in the\
    \ query, go to step 5, otherwise\n      step 2.\n   2. Search the available zones\
    \ for the zone which is the nearest\n      ancestor to QNAME.  If such a zone\
    \ is found, go to step 3,\n      otherwise step 4.\n   3. Start matching down,\
    \ label by label, in the zone.  The matching\n      process can terminate several\
    \ ways:\n      a. If the whole of QNAME is matched, we have found the node.\n\
    \         If the data at the node is a CNAME, and QTYPE doesn't match\n      \
    \   CNAME, copy the CNAME RR into the answer section of the\n         response,\
    \ change QNAME to the canonical name in the CNAME RR,\n         and go back to\
    \ step 1.\n         Otherwise, copy all RRs which match QTYPE into the answer\n\
    \         section and go to step 6.\n      b. If a match would take us out of\
    \ the authoritative data, we have\n         a referral.  This happens when we\
    \ encounter a node with NS RRs\n         marking cuts along the bottom of a zone.\n\
    \         Copy the NS RRs for the subzone into the authority section of\n    \
    \     the reply.  Put whatever addresses are available into the\n         additional\
    \ section, using glue RRs if the addresses are not\n         available from authoritative\
    \ data or the cache.  Go to step 4.\n      c. If at some label, a match is impossible\
    \ (i.e., the\n         corresponding label does not exist), look to see whether\
    \ the\n         last label matched has a DNAME record.\n         If a DNAME record\
    \ exists at that point, copy that record into\n         the answer section.  If\
    \ substitution of its <target> for its\n         <owner> in QNAME would overflow\
    \ the legal size for a <domain-\n         name>, set RCODE to YXDOMAIN [DNSUPD]\
    \ and exit; otherwise\n         perform the substitution and continue.  If the\
    \ query was not\n         extended [EDNS0] with a Version indicating understanding\
    \ of the\n         DNAME record, the server SHOULD synthesize a CNAME record as\n\
    \         described above and include it in the answer section.  Go back\n   \
    \      to step 1.\n         If there was no DNAME record, look to see if the \"\
    *\" label\n         exists.\n         If the \"*\" label does not exist, check\
    \ whether the name we are\n         looking for is the original QNAME in the query\
    \ or a name we\n         have followed due to a CNAME.  If the name is original,\
    \ set an\n         authoritative name error in the response and exit.  Otherwise\n\
    \         just exit.\n         If the \"*\" label does exist, match RRs at that\
    \ node against\n         QTYPE.  If any match, copy them into the answer section,\
    \ but\n         set the owner of the RR to be QNAME, and not the node with the\n\
    \         \"*\" label.  Go to step 6.\n   4. Start matching down in the cache.\
    \  If QNAME is found in the cache,\n      copy all RRs attached to it that match\
    \ QTYPE into the answer\n      section.  If QNAME is not found in the cache but\
    \ a DNAME record is\n      present at an ancestor of QNAME, copy that DNAME record\
    \ into the\n      answer section.  If there was no delegation from authoritative\n\
    \      data, look for the best one from the cache, and put it in the\n      authority\
    \ section.  Go to step 6.\n   5. Use the local resolver or a copy of its algorithm\
    \ (see resolver\n      section of this memo) to answer the query.  Store the results,\n\
    \      including any intermediate CNAMEs and DNAMEs, in the answer\n      section\
    \ of the response.\n   6. Using local data only, attempt to add other RRs which\
    \ may be\n      useful to the additional section of the query.  Exit.\n   Note\
    \ that there will be at most one ancestor with a DNAME as\n   described in step\
    \ 4 unless some zone's data is in violation of the\n   no-descendants limitation\
    \ in section 3.  An implementation might take\n   advantage of this limitation\
    \ by stopping the search of step 3c or\n   step 4 when a DNAME record is encountered.\n"
- title: 4.2.  Processing by Resolvers
  contents:
  - "4.2.  Processing by Resolvers\n   A resolver or a server providing recursive\
    \ service must be modified\n   to treat a DNAME as somewhat analogous to a CNAME.\
    \  The resolver\n   algorithm of [DNSCF] section 5.3.3 is modified to renumber\
    \ step 4.d\n   as 4.e and insert a new 4.d.  The complete algorithm becomes:\n\
    \   1. See if the answer is in local information, and if so return it to\n   \
    \   the client.\n   2. Find the best servers to ask.\n   3. Send them queries\
    \ until one returns a response.\n   4. Analyze the response, either:\n      a.\
    \ if the response answers the question or contains a name error,\n         cache\
    \ the data as well as returning it back to the client.\n      b. if the response\
    \ contains a better delegation to other servers,\n         cache the delegation\
    \ information, and go to step 2.\n      c. if the response shows a CNAME and that\
    \ is not the answer\n         itself, cache the CNAME, change the SNAME to the\
    \ canonical name\n         in the CNAME RR and go to step 1.\n      d. if the\
    \ response shows a DNAME and that is not the answer\n         itself, cache the\
    \ DNAME.  If substitution of the DNAME's\n         <target> for its <owner> in\
    \ the SNAME would overflow the legal\n         size for a <domain-name>, return\
    \ an implementation-dependent\n         error to the application; otherwise perform\
    \ the substitution\n         and go to step 1.\n      e. if the response shows\
    \ a server failure or other bizarre\n         contents, delete the server from\
    \ the SLIST and go back to step\n         3.\n   A resolver or recursive server\
    \ which understands DNAME records but\n   sends non-extended queries MUST augment\
    \ step 4.c by deleting from the\n   reply any CNAME records which have an <owner>\
    \ which is a subdomain of\n   the <owner> of any DNAME record in the response.\n"
- title: 5.  Examples of Use
  contents:
  - '5.  Examples of Use

    '
- title: 5.1.  Organizational Renaming
  contents:
  - "5.1.  Organizational Renaming\n   If an organization with domain name FROBOZZ.EXAMPLE\
    \ became part of an\n   organization with domain name ACME.EXAMPLE, it might ease\
    \ transition\n   by placing information such as this in its old zone.\n      \
    \ frobozz.example.  DNAME    frobozz-division.acme.example.\n                \
    \         MX       10       mailhub.acme.example.\n   The response to an extended\
    \ recursive query for www.frobozz.example\n   would contain, in the answer section,\
    \ the DNAME record shown above\n   and the relevant RRs for www.frobozz-division.acme.example.\n"
- title: 5.2.  Classless Delegation of Shorter Prefixes
  contents:
  - "5.2.  Classless Delegation of Shorter Prefixes\n   The classless scheme for in-addr.arpa\
    \ delegation [INADDR] can be\n   extended to prefixes shorter than 24 bits by\
    \ use of the DNAME record.\n   For example, the prefix 192.0.8.0/22 can be delegated\
    \ by the\n   following records.\n       $ORIGIN 0.192.in-addr.arpa.\n       8/22\
    \    NS       ns.slash-22-holder.example.\n       8       DNAME    8.8/22\n  \
    \     9       DNAME    9.8/22\n       10      DNAME    10.8/22\n       11    \
    \  DNAME    11.8/22\n   A typical entry in the resulting reverse zone for some\
    \ host with\n   address 192.0.9.33 might be\n       $ORIGIN 8/22.0.192.in-addr.arpa.\n\
    \       33.9    PTR     somehost.slash-22-holder.example.\n   The same advisory\
    \ remarks concerning the choice of the \"/\" character\n   apply here as in [INADDR].\n"
- title: 5.3.  Network Renumbering Support
  contents:
  - "5.3.  Network Renumbering Support\n   If IPv4 network renumbering were common,\
    \ maintenance of address space\n   delegation could be simplified by using DNAME\
    \ records instead of NS\n   records to delegate.\n      $ORIGIN new-style.in-addr.arpa.\n\
    \      189.190           DNAME    in-addr.example.net.\n      $ORIGIN in-addr.example.net.\n\
    \      188               DNAME    in-addr.customer.example.\n      $ORIGIN in-addr.customer.example.\n\
    \      1                 PTR      www.customer.example.\n      2             \
    \    PTR      mailhub.customer.example.\n      ; etc ...\n   This would allow\
    \ the address space 190.189.0.0/16 assigned to the ISP\n   \"example.net\" to\
    \ be changed without the necessity of altering the\n   zone files describing the\
    \ use of that space by the ISP and its\n   customers.\n   Renumbering IPv4 networks\
    \ is currently so arduous a task that\n   updating the DNS is only a small part\
    \ of the labor, so this scheme\n   may have a low value.  But it is hoped that\
    \ in IPv6 the renumbering\n   task will be quite different and the DNAME mechanism\
    \ may play a\n   useful part.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document defines a new DNS Resource Record type\
    \ with the\n   mnemonic DNAME and type code 39 (decimal).  The naming/numbering\n\
    \   space is defined in [DNSIS].  This name and number have already been\n   registered\
    \ with the IANA.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The DNAME record is similar to the CNAME record\
    \ with regard to the\n   consequences of insertion of a spoofed record into a\
    \ DNS server or\n   resolver, differing in that the DNAME's effect covers a whole\
    \ subtree\n   of the name space.  The facilities of [DNSSEC] are available to\n\
    \   authenticate this record type.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [DNSCF]  Mockapetris, P., \"Domain names - concepts and facilities\"\
    ,\n            STD 13, RFC 1034, November 1987.\n   [DNSCLR] Elz, R. and R. Bush,\
    \ \"Clarifications to the DNS\n            Specification\", RFC 2181, July 1997.\n\
    \   [DNSIS]  Mockapetris, P., \"Domain names - implementation and\n          \
    \  specification\", STD 13, RFC 1035, November 1987.\n   [DNSSEC] Eastlake, 3rd,\
    \ D. and C. Kaufman, \"Domain Name System\n            Security Extensions\",\
    \ RFC 2065, January 1997.\n   [DNSUPD] Vixie, P., Ed., Thomson, S., Rekhter, Y.\
    \ and J. Bound,\n            \"Dynamic Updates in the Domain Name System\", RFC\
    \ 2136, April\n            1997.\n   [EDNS0]  Vixie, P., \"Extensions mechanisms\
    \ for DNS (EDNS0)\", RFC\n            2671, August 1999.\n   [INADDR] Eidnes,\
    \ H., de Groot, G. and P. Vixie, \"Classless IN-\n            ADDR.ARPA delegation\"\
    , RFC 2317, March 1998.\n   [KWORD]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n            Requirement Levels,\" BCP 14, RFC 2119, March 1997.\n\
    \   [SECDYN] D. Eastlake, 3rd, \"Secure Domain Name System Dynamic\n         \
    \   Update\", RFC 2137, April 1997.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Matt Crawford\n   Fermilab MS 368\n   PO Box 500\n \
    \  Batavia, IL 60510\n   USA\n   Phone: +1 630 840-3461\n   EMail: crawdad@fnal.gov\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
