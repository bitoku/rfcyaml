- title: __initial_text__
  contents:
  - '                           IP in IP Tunneling

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n   Note that this memo is an individual effort of the author.\
    \  This\n   document reflects a current informal practice in the internet.  There\n\
    \   is an effort underway within the IETF Mobile-IP Working Group to\n   provide\
    \ an appropriate proposed standard to address this issue.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses implementation techniques for using IP\n\
    \   Protocol/Payload number 4 Encapsulation for tunneling with IP\n   Security\
    \ and other protocols.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n     1.     Introduction ..........................................\
    \    2\n     2.     Encapsulation .........................................  \
    \  3\n     3.     Tunnel Management .....................................    5\n\
    \        3.1       Tunnel MTU Discovery ............................    5\n  \
    \      3.2       Congestion ......................................    6\n    \
    \    3.3       Routing Failures ................................    6\n      \
    \  3.4       Other ICMP Messages .............................    6\n     SECURITY\
    \ CONSIDERATIONS ......................................    7\n     REFERENCES\
    \ ...................................................    7\n     ACKNOWLEDGEMENTS\
    \ .............................................    8\n     AUTHOR'S ADDRESS .............................................\
    \    8\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IP in IP encapsulation Protocol/Payload number 4 [RFC-1700]\
    \ has\n   long been used to bridge portions of the Internet which have disjoint\n\
    \   capabilities or policies.  This document describes implementation\n   techniques\
    \ used for many years by the Amateur Packet Radio network\n   for joining a large\
    \ mobile network, and also by early implementations\n   of IP Security protocols.\n\
    \   Use of IP in IP encapsulation differs from later tunneling techniques\n  \
    \ (for example, protocol numbers 98 [RFC-1241], 94 [IDM91a], 53\n   [swIPe], and\
    \ 47 [RFC-1701]) in that it does not insert its own\n   special glue header between\
    \ IP headers.  Instead, the original\n   unadorned IP Header is retained, and\
    \ simply wrapped in another\n   standard IP header.\n   This information applies\
    \ principally to encapsulation of IP version\n   4.  Other IP versions will be\
    \ described in separate documents.\n"
- title: 2.  Encapsulation
  contents:
  - "2.  Encapsulation\n   The encapsulation technique is fairly simple.  An outer\
    \ IP header is\n   added before the original IP header.  Between them are any\
    \ other\n   headers for the path, such as security headers specific to the tunnel\n\
    \   configuration.\n   The outer IP header Source and Destination identify the\
    \ \"endpoints\"\n   of the tunnel.  The inner IP header Source and Destination\
    \ identify\n   the original sender and recipient of the datagram.\n   Each header\
    \ chains to the next using IP Protocol values [RFC-1700].\n                  \
    \                        +---------------------------+\n                     \
    \                     |      Outer IP Header      |\n                        \
    \                  +---------------------------+\n                           \
    \               |      Tunnel Headers       |\n      +---------------------------+\
    \       +---------------------------+\n      |         IP Header         |   \
    \    |      Inner IP Header      |\n      +---------------------------+ ====>\
    \ +---------------------------+\n      |                           |       | \
    \                          |\n      |         IP Payload        |       |    \
    \     IP Payload        |\n      |                           |       |       \
    \                    |\n      +---------------------------+       +---------------------------+\n\
    \   The format of IP headers is described in [RFC-791].\n   Type Of Service  copied\
    \ from the inner IP header.  Optionally,\n                    another TOS may\
    \ be used between cooperating peers.\n                    This is in keeping with\
    \ the transparency principle\n                    that if the user was expecting\
    \ a given level of\n                    service, then the tunnel should provide\
    \ the same\n                    service.  However, some tunnels may be constructed\n\
    \                    specifically to provide a different level of service\n  \
    \                  as a matter of policy.\n   Identification   A new number is\
    \ generated for each outer IP header.\n                    The encapsulated datagram\
    \ may have already been\n                    fragmented, and another level of\
    \ fragmentation may\n                    occur due to the tunnel encapsulation.\
    \  These tunnel\n                    fragments will be reassembled by the decapsulator,\n\
    \                    rather than the final destination.\n   Reserved\n       \
    \             ignored (set to zero).\n                    This unofficial flag\
    \ has seen experimental use, and\n                    while it remains in the\
    \ inner IP header, does not\n                    affect the tunnel.\n   Don't\
    \ Fragment   copied from the inner IP header.  This allows the\n             \
    \       originator to control the level of performance\n                    tradeoffs.\
    \  See \"Tunnel MTU Discovery\".\n   More Fragments   set as required when fragmenting.\n\
    \                    The flag is not copied for the same reason that a\n     \
    \               separate Identification is used.\n   Time To Live     the default\
    \ value specified in the most recent\n                    \"Assigned Numbers\"\
    \ [RFC-1700].  This ensures that\n                    long unanticipated tunnels\
    \ do not interrupt the flow\n                    of datagrams between endpoints.\n\
    \                    The inner TTL is decremented once before\n              \
    \      encapsulation, and is not affected by decapsulation.\n   Protocol     \
    \    the next header; 4 for the inner IP header, when no\n                   \
    \ intervening tunnel headers are in use.\n   Source           an IP address associated\
    \ with the interface used to\n                    send the datagram.\n   Destination\
    \      an IP address of the tunnel decapsulator.\n   Options          not copied\
    \ from the inner IP header.  However, new\n                    options particular\
    \ to the path MAY be added.\n                    Timestamp, Loose Source Route,\
    \ Strict Source Route,\n                    and Record Route are deliberately\
    \ hidden within the\n                    tunnel.  Often, tunnels are constructed\
    \ to overcome\n                    the inadequacies of these options.\n      \
    \              Any supported flavors of security options of the\n            \
    \        inner IP header MAY affect the choice of security\n                 \
    \   options for the tunnel.  It is not expected that\n                    there\
    \ be a one-to-one mapping of such options to the\n                    options\
    \ or security headers selected for the tunnel.\n"
- title: 3.  Tunnel Management
  contents:
  - "3.  Tunnel Management\n   It is possible that one of the routers along the tunnel\
    \ interior\n   might encounter an error while processing the datagram, causing\
    \ it to\n   return an ICMP [RFC-792] error message to the encapsulator at the\
    \ IP\n   Source of the tunnel.  Unfortunately, ICMP only requires IP routers\n\
    \   to return 8 bytes (64 bits) of the datagram beyond the IP header.\n   This\
    \ is not enough to include the entire encapsulated header.  Thus,\n   it is not\
    \ generally possible for an encapsulating router to\n   immediately reflect an\
    \ ICMP message from the interior of a tunnel\n   back to the originating host.\n\
    \   However, by carefully maintaining \"soft state\" about its tunnels, the\n\
    \   encapsulator can return accurate ICMP messages in most cases.  The\n   router\
    \ SHOULD maintain at least the following soft state information\n   about each\
    \ tunnel:\n    - Reachability of the end of the tunnel.\n    - Congestion of the\
    \ tunnel.\n    - MTU of the tunnel.\n   The router uses the ICMP messages it receives\
    \ from the interior of a\n   tunnel to update the soft state information for that\
    \ tunnel.  When\n   subsequent datagrams arrive that would transit the tunnel,\
    \ the router\n   checks the soft state for the tunnel.  If the datagram would\
    \ violate\n   the state of the tunnel (such as the MTU is greater than the tunnel\n\
    \   MTU when Don't Fragment is set), the router sends an appropriate ICMP\n  \
    \ error message back to the originator, but also forwards the datagram\n   into\
    \ the tunnel.  Forwarding the datagram despite returning the error\n   message\
    \ ensures that changes in tunnel state will be learned.\n   Using this technique,\
    \ the ICMP error messages from encapsulating\n   routers will not always match\
    \ one-to-one with errors encountered\n   within the tunnel, but they will accurately\
    \ reflect the state of the\n   network.\n"
- title: 3.1.  Tunnel MTU Discovery
  contents:
  - "3.1.  Tunnel MTU Discovery\n   When the Don't Fragment bit is set by the originator\
    \ and copied into\n   the outer IP header, the proper MTU of the tunnel will be\
    \ learned\n   from ICMP (Type 3 Code 4) \"Datagram Too Big\" errors reported to\
    \ the\n   encapsulator.  To support originating hosts which use this\n   capability,\
    \ all implementations MUST support Path MTU Discovery\n   [RFC-1191, RFC-1435]\
    \ within their tunnels.\n   As a benefit of Tunnel MTU Discovery, any fragmentation\
    \ which occurs\n   because of the size of the encapsulation header is done only\
    \ once\n   after encapsulation.  This prevents more than one fragmentation of\
    \ a\n   single datagram, which improves processing efficiency of the path\n  \
    \ routers and tunnel decapsulator.\n"
- title: 3.2.  Congestion
  contents:
  - "3.2.  Congestion\n   Tunnel soft state will collect indications of congestion,\
    \ such as an\n   ICMP (Type 4) Source Quench in datagrams from the decapsulator\n\
    \   (tunnel peer).  When forwarding another datagram into the tunnel,\n   it is\
    \ appropriate to send Source Quench messages to the originator.\n"
- title: 3.3.  Routing Failures
  contents:
  - "3.3.  Routing Failures\n   Because the TTL is reset each time that a datagram\
    \ is encapsulated,\n   routing loops within a tunnel are particularly dangerous\
    \ when they\n   arrive again at the encapsulator.  If the IP Source matches any\
    \ of\n   its interfaces, an implementation MUST NOT further encapsulate.\n   Instead,\
    \ the datagram is forwarded normally.\n   ICMP (Type 11) Time Exceeded messages\
    \ report routing loops within the\n   tunnel itself.  ICMP (Type 3) Destination\
    \ Unreachable messages report\n   delivery failures to the decapsulator.  This\
    \ soft state MUST be\n   reported to the originator as (Type 3 Code 0) Network\
    \ Unreachable.\n"
- title: 3.4.  Other ICMP Messages
  contents:
  - "3.4.  Other ICMP Messages\n   Most ICMP error messages are not relevant to the\
    \ use of the tunnel.\n   In particular, parameter problems are likely to be a\
    \ result of\n   misconfiguration of the encapsulator, and MUST NOT be reported\
    \ to the\n   originator.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are briefly discussed in this memo.\
    \  The use of\n   tunneling may obviate some older IP security options (labelling),\
    \ but\n   will better support newer IP Security headers.\n"
- title: References
  contents:
  - "References\n   [IDM91a] Ioannidis, J., Duchamp, D., Maguire, G., \"IP-based\n\
    \            protocols for mobile internetworking\", Proceedings of\n        \
    \    SIGCOMM '91, ACM, September 1991.\n   [RFC-791]\n            Postel, J.,\
    \ \"Internet Protocol\", STD 5, RFC 791,\n            USC/Information Sciences\
    \ Institute, September 1981.\n   [RFC-792]\n            Postel, J., \"Internet\
    \ Control Message Protocol\", STD 5,\n            RFC 792, USC/Information Sciences\
    \ Institute, September\n            1981.\n   [RFC-1191]\n            Mogul, J.,\
    \ and S. Deering, \"Path MTU Discovery\", RFC 1191,\n            DECWRL, Stanford\
    \ University, November 1990.\n   [RFC-1241]\n            Mills, D., and R. Woodburn,\
    \ \"A Scheme for an Internet\n            Encapsulation Protocol: Version 1\"\
    , UDEL, July 1991.\n   [RFC-1435]\n            Knowles, S., \"IESG Advice from\
    \ Experience with Path MTU\n            Discovery\", RFC 1435, FTP Software, March\
    \ 1993.\n   [RFC-1700]\n            Reynolds, J., and J. Postel, \"Assigned Numbers\"\
    , STD 2, RFC\n            1700, USC/Information Sciences Institute, October 1994.\n\
    \   [RFC-1701]\n            Hanks, S., Li, T., Farinacci, D., and P. Traina, \"\
    Generic\n            Routing Encapsulation (GRE)\", RFC 1701, October 1994.\n\
    \   [swIPe]  Ioannidis, J., and Blaze, M., \"The Architecture and\n          \
    \  Implementation of Network-Layer Security Under Unix\", Fourth\n           \
    \ Usenix Security Symposium Proceedings, October 1993.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   These implementation details of IP Tunneling are derived\
    \ in large\n   part from independent work in 1990 by Phil Karn and the TCP-Group\n\
    \   hams using KA9Q NOS.\n   Special thanks to John Ioannidis (then of Columbia\
    \ University) for\n   inspiration and experimentation which began this most recent\
    \ round of\n   IP Mobility and IP Security development.  Some of this text was\n\
    \   derived from [IDM91a] and [swIPe].\n   The chaining of headers was also described\
    \ in \"Simple Internet\n   Protocol\", by Steve Deering (Xerox PARC).\n   The\
    \ overall organization and some of this text was derived from\n   [RFC-1241],\
    \ by David Mills (U Delaware) and Robert Woodburn (SAIC).\n   Some of the text\
    \ on tunnel soft state was derived from \"IP Address\n   Encapsulation (IPAE)\"\
    , by Robert E. Gilligan, Erik Nordmark, and Bob\n   Hinden (all of Sun Microsystems).\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Questions about this memo can also be directed to:\n   \
    \   William Allen Simpson\n      Daydreamer\n      Computer Systems Consulting\
    \ Services\n      1384 Fontaine\n      Madison Heights, Michigan  48071\n    \
    \  Bill.Simpson@um.cc.umich.edu\n          bsimpson@MorningStar.com\n"
