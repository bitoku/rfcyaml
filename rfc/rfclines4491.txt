Abstract This document supplements RFC 3279.
It describes encoding formats, identifiers, and parameter formats for the algorithms GOST R 34.10  94, GOST R 34.10 2001, and GOST R 34.11 94 for use in Internet X.509 Public Key Infrastructure (PKI).
It describes the conventions for using the GOST R 34.10 94 [GOST3431095, GOSTR341094] and GOST R 34.10 2001
signature algorithms, VKO GOST R 34.10 94 and VKO GOST R 34.10 2001 key derivation algorithms, and GOST R 34.11 94
hash function in the Internet X.509 Public Key Infrastructure (PKI) [PROFILE].
This document provides supplemental information and specifications needed by the "Russian Cryptographic Software Compatibility Agreement" community.
The algorithm identifiers and associated parameters are specified for subject public keys that employ the GOST R 34.10 94
[GOSTR341094]/VKO GOST R 34.10 94
[CPALGS] or the GOST R 34.10 2001
[GOSTR341001]/VKO GOST R 34.10 2001
[CPALGS] algorithms, as is the encoding format for the signatures produced by these algorithms.
Also, the algorithm identifiers for using the GOST R 34.11 94 one way hash function with the GOST R 34.10 94 and GOST R 34.10 2001
This specification defines the contents of the signatureAlgorithm, signatureValue, signature, and subjectPublicKeyInfo fields within X.509 Certificates and CRLs.
For each algorithm, the appropriate alternatives for the keyUsage certificate extension are provided.
ASN.1 modules, including all the definitions used in this document, can be found in [CPALGS].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
This section is an overview of cryptographic algorithms that may be used within the Internet X.509 certificates and CRL profile [PROFILE].
It describes one way hash functions and digital signature algorithms that may be used to sign certificates and CRLs, and it identifies object identifiers (OIDs) and ASN.1 encoding for public keys contained in a certificate.
and/or applications conforming to this standard MUST support at least one of the specified public key and signature algorithms.
This section describes the use of a one way, collision free hash function GOST R 34.11 94, the only one that can be used in the digital signature algorithm GOST R 34.10 94/2001.
The data that is hashed for certificates and CRL signing is fully described in RFC 3280 [PROFILE].
One Way Hash Function GOST R 34.11 94 GOST R 34.11 94 has been developed by "GUBS of Federal Agency Government Communication and Information" and "All Russian Scientific and Research Institute of Standardization".
The algorithm GOST R 34.11 94 produces a 256 bit hash value of an arbitrary finite bit length input.
This document does not contain the full GOST R 34.11  94 specification, which can be found in [GOSTR341194] (in Russian).
18.11, p. 454, contains a brief technical description in English.
This function MUST always be used with parameter set identified by id GostR3411 94 CryptoProParamSet (see Section 8.2 of [CPALGS]).
Signature Algorithms Conforming CAs may use GOST R 34.10 94 or GOST R 34.10 2001 signature algorithms to sign certificates and CRLs.
These signature algorithms MUST always be used with a one way hash function GOST R 34.11 94 as indicated in [GOSTR341094] and [GOSTR341001].
This section defines algorithm identifiers and parameters to be used in the signatureAlgorithm field in a Certificate or CertificateList.
Signature Algorithm GOST R 34.10 94 GOST R 34.10 94 has been developed by "GUBS of Federal Agency Government Communication and Information" and "All Russian Scientific and Research Institute of Standardization".
This document does not contain the full GOST R 34.10 94 specification, which can be found in [GOSTR341094] (in Russian).
20.3, p. 495, contains a brief technical description in English.
The ASN.1 object identifier used to identify this signature algorithm
id GostR3411 94 with GostR3410 94 OBJECT
gostR3411 94 with gostR3410 94(4)
} When the id GostR3411 94 with GostR3410 94 algorithm identifier appears as the algorithm field in an AlgorithmIdentifier, the encoding SHALL omit the parameters field.
That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component:
id GostR3411 94 with GostR3410 94.
The signature algorithm GOST R 34.10 94 generates a digital signature in the form of two 256 bit numbers, r' and s.
Its octet string representation consists of 64 octets, where the first 32 octets contain the big endian representation of s and the second 32 octets contain the big endian representation of r'.
This definition of a signature value is directly usable in CMS [CMS], where such values are represented as octet strings.
However, signature values in certificates and CRLs [PROFILE] are represented as bit strings, and thus the octet string representation must be converted.
To convert an octet string signature value to a bit string, the most significant bit of the first octet of the signature value SHALL become the first bit of the bit string, and so on through the least significant bit of the last octet of the signature value, which SHALL become the last bit of the bit string.
Signature Algorithm GOST R 34.10 2001 GOST R 34.10 2001 was developed by "GUBS of Federal Agency Government Communication and Information" and "All Russian Scientific and Research Institute of Standardization".
This document does not contain the full GOST R 34.10 2001 specification, which can be found in [GOSTR341001] (in Russian).
The ASN.1 object identifier used to identify this signature algorithm
gostR3411 94 with gostR3410 2001(3)
} When the id GostR3411 94 with GostR3410 2001 algorithm identifier appears as the algorithm field in an AlgorithmIdentifier, the encoding SHALL omit the parameters field.
That is, the AlgorithmIdentifier SHALL be a SEQUENCE of one component:
GostR3411 94 with GostR3410 2001.
The signature algorithm GOST R 34.10 2001 generates a digital signature in the form of two 256 bit numbers, r and s.
Its octet string representation consists of 64 octets, where the first 32 octets contain the big endian representation of s and the second 32 octets contain the big endian representation of r.
The process described above (Section 2.2.1) MUST be used to convert this octet string representation to a bit string for use in certificates and CRLs.
This section defines OIDs and public key parameters for public keys that employ the GOST R 34.10
[GOSTR341094]/VKO GOST R 34.10 94
[CPALGS] or the GOST R 34.10 2001
[GOSTR341001]/VKO GOST R 34.10 2001 [CPALGS] algorithms.
Use of the same key for both signature and key derivation is NOT RECOMMENDED.
The intended application for the key MAY be indicated in the keyUsage certificate extension (see [PROFILE], Section 4.2.1.3).
GOST R 34.10 94 Keys GOST R
34.10 94 public keys can be used for the signature algorithm GOST R 34.10 94 [GOSTR341094] and for the key derivation algorithm VKO GOST R 34.10 94 [CPALGS].
GOST R 34.10 94 public keys are identified by the following OID: id GostR3410
The SubjectPublicKeyInfo.algorithm.algorithm field (see RFC 3280 [PROFILE]) for GOST R 34.10 94 keys MUST be set to id GostR3410 94.
When the id GostR3410 94 algorithm identifier appears as the algorithm field in an AlgorithmIdentifier, the encoding MAY omit the parameters field or set it to NULL.
where:   publicKeyParamSet public key parameters identifier for GOST R 34.10 94 (see Section 8.3 of [CPALGS])
digestParamSet parameters identifier for GOST R 34.11 94 (see Section 8.2 of [CPALGS])
encryptionParamSet parameters identifier for GOST 28147
(see Section 8.1 of [CPALGS])
The absence of parameters SHALL be processed as described in RFC 3280 [PROFILE], Section 6.1; that is, parameters are inherited from the issuer certificate.
When the working public key parameters variable is set to null, the certificate and any signature verifiable on this certificate SHALL be rejected.
The GOST R 34.10 94 public key MUST be ASN.1 DER encoded as an OCTET STRING; this encoding shall be used as the contents (i.e., the value) of the subjectPublicKey component (a BIT STRING) of the SubjectPublicKeyInfo data element.
public key, Y GostR3410 94 PublicKey MUST contain 128 octets of the little endian representation of the public key Y   a^x (mod p), where a and p are public key parameters, and x is a private key.
Some erroneous applications discard zero bits at the end of BIT STRING containing the public key.
It is RECOMMENDED to pad the bit string with zeroes up to 1048 bits (131 octets) on decoding to be able to decode the encapsulated OCTET STRING.
If the keyUsage extension is present in an end entity certificate that contains a GOST R 34.10 94 public key, the following values MAY be present: digitalSignature; nonRepudiation; keyEncipherment; and keyAgreement.
If the keyAgreement or keyEnchiperment extension is present in a certificate GOST R 34.10 94 public key, the following values MAY be present as well: encipherOnly; and decipherOnly.
The keyUsage extension MUST NOT assert both encipherOnly and decipherOnly.
If the keyUsage extension is present in an CA or CRL signer certificate that contains a GOST R 34.10 94 public key, the following values MAY be present: digitalSignature
; nonRepudiation; keyCertSign; and cRLSign.
GOST R 34.10 2001 Keys GOST R 34.10 2001
public keys can be used for the signature algorithm GOST R 34.10 2001 [GOSTR341001] and for the key derivation algorithm VKO GOST R 34.10 2001 [CPALGS].
public keys are identified by the following OID: id GostR3410 2001
The SubjectPublicKeyInfo.algorithm.algorithm field (see RFC 3280 [PROFILE]) for GOST R 34.10 2001 keys MUST be set to id GostR3410  2001.
When the id GostR3410 2001 algorithm identifier appears as the algorithm field in an AlgorithmIdentifier, the encoding MAY omit the parameters field or set it to NULL.
Otherwise, this field MUST have the following structure:
where:   publicKeyParamSet public key parameters identifier for GOST R 34.10 2001 (see Section 8.4 of [CPALGS])
digestParamSet parameters identifier for GOST R 34.11 94 (see Section 8.2 of [CPALGS])
encryptionParamSet parameters identifier for GOST 28147
(see Section 8.1 of [CPALGS])
The absence of parameters SHALL be processed as described in RFC 3280 [PROFILE], Section 6.1; that is, parameters are inherited from the issuer certificate.
When the working public key parameters variable is set to null, the certificate and any signature verifiable on this certificate SHALL be rejected.
The GOST R 34.10 2001
public key MUST be ASN.1 DER encoded as an OCTET STRING; this encoding shall be used as the contents (i.e., the value) of the subjectPublicKey component (a BIT STRING) of the SubjectPublicKeyInfo data element.
According to [GOSTR341001], a public key is a point on the elliptic curve Q   (x,y).
GostR3410 2001 PublicKey MUST contain 64 octets, where the first 32 octets contain the little endian representation of x and the second 32 octets contain the little endian representation of y.
This corresponds to the binary representation of (<y>256  <x>256) from [GOSTR341001], ch.
Some erroneous applications discard zero bits at the end of BIT STRING containing the public key.
It is RECOMMENDED to pad the bit string with zeroes up to 528 bits (66 octets) on decoding to be able to decode the encapsulated OCTET STRING.
The same keyUsage constraints apply for use of GOST R 34.10 2001 keys as described in Section 2.3.1 for GOST R 34.10 94 keys.
It is RECOMMENDED that applications verify signature values and subject public keys to conform to [GOSTR341001, GOSTR341094] standards prior to their use.
When a certificate is used to support digital signatures as an analogue to manual ("wet") signatures, in the context of Russian Federal Electronic Digital Signature Law [RFEDSL], the certificate MUST contain keyUsage extension, it MUST be critical, and keyUsage MUST NOT include keyEncipherment and keyAgreement.
It is RECOMMENDED that CAs and applications make sure that the private key for creating signatures is not used for more than its allowed validity period (typically 15 months for both the GOST R 34.10 94 and GOST R 34.10 2001 algorithms).
For security discussion concerning use of algorithm parameters, see the Security Considerations section in [CPALGS].
GOST R 34.10 94 Certificate  BEGIN CERTIFICATE
END CERTIFICATE  0 30  523: SEQUENCE { 4 30  442:
SEQUENCE { 8 02   16:
23 0E E3 60 46 95 24 CE C7 0B
18 2E 7E EB 26 30    8:
94 with GostR3410 94 (
1 2 643 2 2 4)
commonName (2 5 4 3) 47 0C   20:
organizationName (2 5 4 10)
OBJECT IDENTIFIER countryName (2 5 4 6) 98 13    2:
2 5 4 3) 186 0C
organizationName (2 5 4 10)
OBJECT IDENTIFIER id GostR3410 94 (
1 2 643 2 2 20)
1 2 643 2 2 32 2)
1 2 643 2 2 30 1)
BIT STRING 0 unused bits, encapsulates { 319 04  128:
BB 84 66 E1 79 9E 5B 34 D8 2C 80 7F 13 A8 19 66 :
71 57 FE 8C 54 25 21 47 6F 30 0B
27 77 46 98 C6 :
FB 47 55 BE B7 B2 F3 93 6C 39 B5 42 37
8B C1 A8 FE 1B 63 12 F6 09 25 87 CC :
SEQUENCE { 452 06    6:
94 with GostR3410 94 (
1 2 643 2 2 4)
23 29 47 76 8F
50 E3 07 CC F2 E4 31 23 89 42 C8 73 E1 DE :
22 F7 85 F3 55 BD 94
In the signature of the above certificate, r' equals 0x22F785F355BD94EC46919C67AC58D7052AA78CB7852A017585F7D73803FBCD43
and s equals 0x11C7087E12DC02F102232947768F472A818350E307CCF2E431238942C873E1DE 4.2.
GOST R 34.10 2001 Certificate  BEGIN CERTIFICATE
MIIB0DCCAX8CECv1xh7CEb0Xx9zUYma0LiEwCAYGKoUDAgIDMG0xHzAdBgNVBAMM Fkdvc3RSMzQxMC0yMDAxIGV4YW1wbGUxEjAQBgNVBAoMCUNyeXB0b1BybzELMAkG A1UEBhMCUlUxKTAnBgkqhkiG9w0BCQEWGkdvc3RSMzQxMC0yMDAxQGV4YW1wbGUu Y29tMB4XDTA1MDgxNjE0MTgyMFoXDTE1MDgxNjE0MTgyMFowbTEfMB0GA1UEAwwW R29zdFIzNDEwLTIwMDEgZXhhbXBsZTESMBAGA1UECgwJQ3J5cHRvUHJvMQswCQYD VQQGEwJSVTEpMCcGCSqGSIb3DQEJARYaR29zdFIzNDEwLTIwMDFAZXhhbXBsZS5j
SEQUENCE { 4 30  383:  SEQUENCE { 8 02   16:   INTEGER :
2B F5 C6 1E C2 11 BD 17
C7 DC D4 62 66 B4 2E 21
(1 2 643 2 2 3)
commonName (2 5 4 3)
organizationName (2 5 4 10)
OBJECT IDENTIFIER countryName (2 5 4 6)
commonName (2 5 4 3) 190 0C   22:
organizationName (2 5 4 10)
SET { 249 30   39:
(1 2 643 2 2 19)
1 2 643 2 2 36 0)
1 2 643 2 2 30 1)
88 03 D0 9A 7C 85 AE 0F E4 8D :
SEQUENCE { 393 06    6:
(1 2 643 2 2 3)
BIT STRING 0 unused bits :
3C 2F C9 09 44 B7 27 A9 EC A7 D5 E9 FB 53 6D D2 :
64 7C 44 2E DE ED 31 16 45 4F BC
In the public key of the above certificate, x equals 0x577E324FE70F2B6DF45C437A0305E5FD2C89318C13CD0875401A026075689584 and y equals
The corresponding private key d equals 0x0B293BE050D0082BDAE785631A6BAB68F35B42786D6DDA56AFAF169891040F77
In the signature of the above certificate, r equals 0xC1DE176E8D1BEC71B593F3DD36935577688989176220F4DAB131D5B51C33DEE2 and s equals 0x3C2FC90944B727A9ECA7D5E9FB536DD2C3AA647C442EDEED3116454FBC543FDD
