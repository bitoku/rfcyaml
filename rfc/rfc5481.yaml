- title: __initial_text__
  contents:
  - '             Packet Delay Variation Applicability Statement

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   Packet delay variation metrics appear in many different standards\n\
    \   documents.  The metric definition in RFC 3393 has considerable\n   flexibility,\
    \ and it allows multiple formulations of delay variation\n   through the specification\
    \ of different packet selection functions.\n   Although flexibility provides wide\
    \ coverage and room for new ideas,\n   it can make comparisons of independent\
    \ implementations more\n   difficult.  Two different formulations of delay variation\
    \ have come\n   into wide use in the context of active measurements.  This memo\n\
    \   examines a range of circumstances for active measurements of delay\n   variation\
    \ and their uses, and recommends which of the two forms is\n   best matched to\
    \ particular conditions and tasks.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Requirements Language ......................................5\n  \
    \    1.2. Background Literature in IPPM and Elsewhere ................5\n    \
    \  1.3. Organization of the Memo ...................................6\n   2. Purpose\
    \ and Scope ...............................................7\n   3. Brief Descriptions\
    \ of Delay Variation Uses ......................7\n      3.1. Inferring Queue\
    \ Occupation on a Path .......................7\n      3.2. Determining De-Jitter\
    \ Buffer Size ..........................8\n      3.3. Spatial Composition .......................................10\n\
    \      3.4. Service-Level Comparison ..................................10\n  \
    \    3.5. Application-Layer FEC Design ..............................10\n   4.\
    \ Formulations of IPDV and PDV ...................................10\n      4.1.\
    \ IPDV: Inter-Packet Delay Variation ........................11\n      4.2. PDV:\
    \ Packet Delay Variation ...............................11\n      4.3. A \"Point\"\
    \ about Measurement Points ........................12\n      4.4. Examples and\
    \ Initial Comparisons ..........................12\n   5. Survey of Earlier Comparisons\
    \ ..................................13\n      5.1. Demichelis' Comparison ....................................13\n\
    \      5.2. Ciavattone et al. .........................................15\n  \
    \    5.3. IPPM List Discussion from 2000 ............................16\n    \
    \  5.4. Y.1540 Appendix II ........................................18\n      5.5.\
    \ Clark's ITU-T SG 12 Contribution ..........................18\n   6. Additional\
    \ Properties and Comparisons ..........................18\n      6.1. Packet Loss\
    \ ...............................................18\n      6.2. Path Changes ..............................................19\n\
    \           6.2.1. Lossless Path Change ...............................20\n  \
    \         6.2.2. Path Change with Loss ..............................21\n    \
    \  6.3. Clock Stability and Error .................................22\n      6.4.\
    \ Spatial Composition .......................................24\n      6.5. Reporting\
    \ a Single Number (SLA) ...........................24\n      6.6. Jitter in RTCP\
    \ Reports ....................................25\n      6.7. MAPDV2 ....................................................25\n\
    \      6.8. Load Balancing ............................................26\n  \
    \ 7. Applicability of the Delay Variation Forms and\n      Recommendations ................................................27\n\
    \      7.1. Uses ......................................................27\n  \
    \         7.1.1. Inferring Queue Occupancy ..........................27\n    \
    \       7.1.2. Determining De-Jitter Buffer Size (and FEC\n                  Design)\
    \ ............................................27\n           7.1.3. Spatial Composition\
    \ ................................28\n           7.1.4. Service-Level Specification:\
    \ Reporting a\n                  Single Number ......................................28\n\
    \      7.2. Challenging Circumstances .................................28\n  \
    \         7.2.1. Clock and Storage Issues ...........................28\n    \
    \       7.2.2. Frequent Path Changes ..............................29\n      \
    \     7.2.3. Frequent Loss ......................................29\n        \
    \   7.2.4. Load Balancing .....................................29\n      7.3.\
    \ Summary ...................................................30\n   8. Measurement\
    \ Considerations .....................................31\n      8.1. Measurement\
    \ Stream Characteristics ........................31\n      8.2. Measurement Devices\
    \ .......................................32\n      8.3. Units of Measurement ......................................33\n\
    \      8.4. Test Duration .............................................33\n  \
    \    8.5. Clock Sync Options ........................................33\n    \
    \  8.6. Distinguishing Long Delay from Loss .......................34\n      8.7.\
    \ Accounting for Packet Reordering ..........................34\n      8.8. Results\
    \ Representation and Reporting ......................35\n   9. Security Considerations\
    \ ........................................35\n   10. Acknowledgments ...............................................35\n\
    \   11. Appendix on Calculating the D(min) in PDV .....................35\n  \
    \ 12. References ....................................................36\n    \
    \  12.1. Normative References .....................................36\n      12.2.\
    \ Informative References ...................................37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   There are many ways to formulate packet delay variation\
    \ metrics for\n   the Internet and other packet-based networks.  The IETF itself\
    \ has\n   several specifications for delay variation [RFC3393], sometimes\n  \
    \ called jitter [RFC3550] or even inter-arrival jitter [RFC3550], and\n   these\
    \ have achieved wide adoption.  The International\n   Telecommunication Union\
    \ - Telecommunication Standardization Sector\n   (ITU-T) has also recommended\
    \ several delay variation metrics (called\n   parameters in their terminology)\
    \ [Y.1540] [G.1020], and some of these\n   are widely cited and used.  Most of\
    \ the standards above specify more\n   than one way to quantify delay variation,\
    \ so one can conclude that\n   standardization efforts have tended to be inclusive\
    \ rather than\n   selective.\n   This memo uses the term \"delay variation\" for\
    \ metrics that quantify a\n   path's ability to transfer packets with consistent\
    \ delay.  [RFC3393]\n   and [Y.1540] both prefer this term.  Some refer to this\
    \ phenomenon as\n   \"jitter\" (and the buffers that attempt to smooth the variations\
    \ as\n   de-jitter buffers).  Applications of the term \"jitter\" are much\n \
    \  broader than packet transfer performance, with \"unwanted signal\n   variation\"\
    \ as a general definition.  \"Jitter\" has been used to\n   describe frequency\
    \ or phase variations, such as data stream rate\n   variations or carrier signal\
    \ phase noise.  The phrase \"delay\n   variation\" is almost self-defining and\
    \ more precise, so it is\n   preferred in this memo.\n   Most (if not all) delay\
    \ variation metrics are derived metrics, in\n   that their definitions rely on\
    \ another fundamental metric.  In this\n   case, the fundamental metric is one-way\
    \ delay, and variation is\n   assessed by computing the difference between two\
    \ individual one-way-\n   delay measurements, or a pair of singletons.  One of\
    \ the delay\n   singletons is taken as a reference, and the result is the variation\n\
    \   with respect to the reference.  The variation is usually summarized\n   for\
    \ all packets in a stream using statistics.\n   The industry has predominantly\
    \ implemented two specific formulations\n   of delay variation (for one survey\
    \ of the situation, see\n   [Krzanowski]):\n   1.  Inter-Packet Delay Variation,\
    \ IPDV, where the reference is the\n       previous packet in the stream (according\
    \ to sending sequence),\n       and the reference changes for each packet in the\
    \ stream.\n       Properties of variation are coupled with packet sequence in\
    \ this\n       formulation.  This form was called Instantaneous Packet Delay\n\
    \       Variation in early IETF contributions, and is similar to the\n       packet\
    \ spacing difference metric used for interarrival jitter\n       calculations\
    \ in [RFC3550].\n   2.  Packet Delay Variation, PDV, where a single reference\
    \ is chosen\n       from the stream based on specific criteria.  The most common\n\
    \       criterion for the reference is the packet with the minimum delay\n   \
    \    in the sample.  This term derives its name from a similar\n       definition\
    \ for Cell Delay Variation, an ATM performance metric\n       [I.356].\n   It\
    \ is important to note that the authors of relevant standards for\n   delay variation\
    \ recognized there are many different users with\n   varying needs, and allowed\
    \ sufficient flexibility to formulate\n   several metrics with different properties.\
    \  Therefore, the comparison\n   is not so much between standards bodies or their\
    \ specifications as it\n   is between specific formulations of delay variation.\
    \  Both Inter-\n   Packet Delay Variation and Packet Delay Variation are compliant\
    \ with\n   [RFC3393], because different packet selection functions will produce\n\
    \   either form.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.2.  Background Literature in IPPM and Elsewhere
  contents:
  - "1.2.  Background Literature in IPPM and Elsewhere\n   With more people joining\
    \ the measurement community every day, it is\n   possible this memo is the first\
    \ from the IP Performance Metrics\n   (IPPM) Working Group that the reader has\
    \ consulted.  This section\n   provides a brief road map and background on the\
    \ IPPM literature, and\n   the published specifications of other relevant standards\n\
    \   organizations.\n   The IPPM framework [RFC2330] provides a background for\
    \ this memo and\n   other IPPM RFCs.  Key terms such as singleton, sample, and\
    \ statistic\n   are defined there, along with methods of collecting samples (Poisson\n\
    \   streams), time-related issues, and the \"packet of Type-P\" convention.\n\
    \   There are two fundamental and related metrics that can be applied to\n   every\
    \ packet transfer attempt: one-way loss [RFC2680] and one-way\n   delay [RFC2679].\
    \  The metrics use a waiting time threshold to\n   distinguish between lost and\
    \ delayed packets.  Packets that arrive at\n   the measurement destination within\
    \ their waiting time have finite\n   delay and are not lost.  Otherwise, packets\
    \ are designated lost and\n   their delay is undefined.  Guidance on setting the\
    \ waiting time\n   threshold may be found in [RFC2680] and [IPPM-Reporting].\n\
    \   Another fundamental metric is packet reordering as specified in\n   [RFC4737].\
    \  The reordering metric was defined to be \"orthogonal\" to\n   packet loss.\
    \  In other words, the gap in a packet sequence caused by\n   loss does not result\
    \ in reordered packets, but a rearrangement of\n   packet arrivals from their\
    \ sending order constitutes reordering.\n   Derived metrics are based on the fundamental\
    \ metrics.  The metric of\n   primary interest here is delay variation [RFC3393],\
    \ a metric that is\n   derived from one-way delay [RFC2680].  Another derived\
    \ metric is the\n   loss patterns metric [RFC3357], which is derived from loss.\n\
    \   The measured values of all metrics (both fundamental and derived)\n   depend\
    \ to great extent on the stream characteristics used to collect\n   them.  Both\
    \ Poisson streams [RFC3393] and Periodic streams [RFC3432]\n   have been used\
    \ with the IPDV and PDV metrics.  The choice of stream\n   specification for active\
    \ measurement will depend on the purpose of\n   the characterization and the constraints\
    \ of the testing environment.\n   Periodic streams are frequently chosen for use\
    \ with IPDV and PDV,\n   because the application streams that are most sensitive\
    \ to delay\n   variation exhibit periodicity.  Additional details that are method-\n\
    \   specific are discussed in Section 8 on \"Measurement Considerations\".\n \
    \  In the ITU-T, the framework, fundamental metrics, and derived metrics\n   for\
    \ IP performance are specified in Recommendation Y.1540 [Y.1540].\n   [G.1020]\
    \ defines additional delay variation metrics, analyzes the\n   operation of fixed\
    \ and adaptive de-jitter buffers, and describes an\n   example adaptive de-jitter\
    \ buffer emulator.  Appendix II of [G.1050]\n   describes the models for network\
    \ impairments (including delay\n   variation) that are part of standardized IP\
    \ network emulator that may\n   be useful when evaluating measurement techniques.\n"
- title: 1.3.  Organization of the Memo
  contents:
  - "1.3.  Organization of the Memo\n   The Purpose and Scope follows in Section 2.\
    \  We then give a summary\n   of the main tasks for delay variation metrics in\
    \ Section 3.\n   Section 4 defines the two primary forms of delay variation, and\n\
    \   Section 5 presents summaries of four earlier comparisons.  Section 6\n   adds\
    \ new comparisons to the analysis, and Section 7 reviews the\n   applicability\
    \ and recommendations for each form of delay variation.\n   Section 8 then looks\
    \ at many important delay variation measurement\n   considerations.  Following\
    \ the Security Considerations, there is an\n   appendix on the calculation of\
    \ the minimum delay for the PDV form.\n"
- title: 2.  Purpose and Scope
  contents:
  - "2.  Purpose and Scope\n   The IPDV and PDV formulations have certain features\
    \ that make them\n   more suitable for one circumstance and less so for another.\
    \  The\n   purpose of this memo is to compare two forms of delay variation, so\n\
    \   that it will be evident which of the two is better suited for each of\n  \
    \ many possible uses and their related circumstances.\n   The scope of this memo\
    \ is limited to the two forms of delay variation\n   briefly described above (Inter-Packet\
    \ Delay Variation and Packet\n   Delay Variation), circumstances related to active\
    \ measurement, and\n   uses that are deemed relevant and worthy of inclusion here\
    \ through\n   IPPM Working Group consensus.\n   It is entirely possible that the\
    \ analysis and conclusions drawn here\n   are applicable beyond the intended scope,\
    \ but the reader is cautioned\n   to fully appreciate the circumstances of active\
    \ measurement on IP\n   networks before doing so.\n   The scope excludes assessment\
    \ of delay variation for packets with\n   undefined delay.  This is accomplished\
    \ by conditioning the delay\n   distribution on arrival within a reasonable waiting\
    \ time based on an\n   understanding of the path under test and packet lifetimes.\
    \  The\n   waiting time is sometimes called the loss threshold [RFC2680]: if a\n\
    \   packet arrives beyond this threshold, it may as well have been lost\n   because\
    \ it is no longer useful.  This is consistent with [RFC3393],\n   where the Type-P-One-way-ipdv\
    \ is undefined when the destination fails\n   to receive one or both packets in\
    \ the selected pair.  Furthermore, it\n   is consistent with application performance\
    \ analysis to consider only\n   arriving packets, because a finite waiting time-out\
    \ is a feature of\n   many protocols.\n"
- title: 3.  Brief Descriptions of Delay Variation Uses
  contents:
  - "3.  Brief Descriptions of Delay Variation Uses\n   This section presents a set\
    \ of tasks that call for delay variation\n   measurements.  Here, the memo provides\
    \ several answers to the\n   question, \"How will the results be used?\" for the\
    \ delay variation\n   metric.\n"
- title: 3.1.  Inferring Queue Occupation on a Path
  contents:
  - "3.1.  Inferring Queue Occupation on a Path\n   As packets travel along the path\
    \ from source to destination, they\n   pass through many network elements, including\
    \ a series of router\n   queues.  Some types of the delay sources along the path\
    \ are constant,\n   such as links between two locations.  But the latency encountered\
    \ in\n   each queue varies, depending on the number of packets in the queue\n\
    \   when a particular packet arrives.  If one assumes that at least one\n   of\
    \ the packets in a test stream encounters virtually empty queues all\n   along\
    \ the path (and the path is stable), then the additional delay\n   observed on\
    \ other packets can be attributed to the time spent in one\n   or more queues.\
    \  Otherwise, the delay variation observed is the\n   variation in queue time\
    \ experienced by the test stream.\n   It is worth noting that delay variation\
    \ can occur beyond IP router\n   queues, in other communication components.  Examples\
    \ include media\n   contention: DOCSIS, IEEE 802.11, and some mobile radio technologies.\n\
    \   However, delay variation from all sources at the IP layer and below\n   will\
    \ be quantified using the two formulations discussed here.\n"
- title: 3.2.  Determining De-Jitter Buffer Size
  contents:
  - "3.2.  Determining De-Jitter Buffer Size\n   Note -- while this memo and other\
    \ IPPM literature prefer the term\n   \"delay variation\", the terms \"jitter\
    \ buffer\" and the more accurate\n   \"de-jitter buffer\" are widely adopted names\
    \ for a component of packet\n   communication systems, and they will be used here\
    \ to designate that\n   system component.\n   Most isochronous applications (a.k.a.\
    \ real-time applications) employ\n   a buffer to smooth out delay variation encountered\
    \ on the path from\n   source to destination.  The buffer must be big enough to\
    \ accommodate\n   the expected variation of delay, or packet loss will result.\n\
    \   However, if the buffer is too large, then some of the desired\n   spontaneity\
    \ of communication will be lost and conversational dynamics\n   will be affected.\
    \  Therefore, application designers need to know the\n   range of delay variation\
    \ they must accommodate, whether they are\n   designing fixed or adaptive buffer\
    \ systems.\n   Network service providers also attempt to constrain delay variation\n\
    \   to ensure the quality of real-time applications, and monitor this\n   metric\
    \ (possibly to compare with a numerical objective or Service\n   Level Agreement).\n\
    \   De-jitter buffer size can be expressed in units of octets of storage\n   space\
    \ for the packet stream, or in units of time that the packets are\n   stored.\
    \  It is relatively simple to convert between octets and time\n   when the buffer\
    \ read rate (in octets per second) is constant:\n   read_rate * storage_time =\
    \ storage_octets\n   Units of time are used in the discussion below.\n   The objective\
    \ of a de-jitter buffer is to compensate for all prior\n   sources of delay variation\
    \ and produce a packet stream with constant\n   delay.  Thus, a packet experiencing\
    \ the minimum transit delay from\n   source to destination, D_min, should spend\
    \ the maximum time in a\n   de-jitter buffer, B_max.  The sum of D_min and B_max\
    \ should equal the\n   sum of the maximum transit delay (D_max) and the minimum\
    \ buffer time\n   (B_min).  We have\n   Constant = D_min + B_max = D_max + B_min,\n\
    \   after rearranging terms,\n   B_max - B_min = D_max - D_min = range(B) = range(D)\n\
    \   where range(B) is the range of packet buffering times, and range(D)\n   is\
    \ the range of packet transit delays from source to destination.\n   Packets with\
    \ transit delay between the max and min spend a\n   complementary time in the\
    \ buffer and also see the constant delay.\n   In practice, the minimum buffer\
    \ time, B_min, may not be zero, and the\n   maximum transit delay, D_max, may\
    \ be a high percentile (99.9th\n   percentile) instead of the maximum.\n   Note\
    \ that B_max - B_min = range(B) is the range of buffering times\n   needed to\
    \ compensate for delay variation.  The actual size of the\n   buffer may be larger\
    \ (where B_min > 0) or smaller than range(B).\n   There must be a process to align\
    \ the de-jitter buffer time with\n   packet transit delay.  This is a process\
    \ to identify the packets with\n   minimum delay and schedule their play-out time\
    \ so that they spend the\n   maximum time in the buffer.  The error in the alignment\
    \ process can\n   be accounted for by a variable, A.  In the equation below, the\
    \ range\n   of buffering times *available* to the packet stream, range(b),\n \
    \  depends on buffer alignment with the actual arrival times of D_min\n   and\
    \ D_max.\n   range(b) = b_max - b_min = D_max - D_min + A\n   where variable b\
    \ represents the *available* buffer in a system with a\n   specific alignment,\
    \ A, and b_max and b_min represent the limits of\n   the available buffer.\n \
    \  When A is positive, the de-jitter buffer applies more delay than\n   necessary\
    \ (where Constant = D_max + b_min + A represents one possible\n   alignment).\
    \  When A is negative, there is insufficient buffer time\n   available to compensate\
    \ for range(D) because of misalignment.\n   Packets with D_min may be arriving\
    \ too early and encountering a full\n   buffer, or packets with D_max may be arriving\
    \ too late, and in either\n   case, the packets would be discarded.\n   In summary,\
    \ the range of transit delay variation is a critical factor\n   in the determination\
    \ of de-jitter buffer size.\n"
- title: 3.3.  Spatial Composition
  contents:
  - "3.3.  Spatial Composition\n   In Spatial Composition, the tasks are similar to\
    \ those described\n   above, but with the additional complexity of a multiple\
    \ network path\n   where several sub-paths are measured separately and no source-to-\n\
    \   destination measurements are available.  In this case, the source-to-\n  \
    \ destination performance must be estimated, using Composed Metrics as\n   described\
    \ in [IPPM-Framework] and [Y.1541].  Note that determining\n   the composite delay\
    \ variation is not trivial: simply summing the sub-\n   path variations is not\
    \ accurate.\n"
- title: 3.4.  Service-Level Comparison
  contents:
  - "3.4.  Service-Level Comparison\n   IP performance measurements are often used\
    \ as the basis for\n   agreements (or contracts) between service providers and\
    \ their\n   customers.  The measurement results must compare favorably with the\n\
    \   performance levels specified in the agreement.\n   Packet delay variation\
    \ is usually one of the metrics specified in\n   these agreements.  In principle,\
    \ any formulation could be specified\n   in the Service Level Agreement (SLA).\
    \  However, the SLA is most\n   useful when the measured quantities can be related\
    \ to ways in which\n   the communication service will be utilized by the customer,\
    \ and this\n   can usually be derived from one of the tasks described above.\n"
- title: 3.5.  Application-Layer FEC Design
  contents:
  - "3.5.  Application-Layer FEC Design\n   The design of application-layer Forward\
    \ Error Correction (FEC)\n   components is closely related to the design of a\
    \ de-jitter buffer in\n   several ways.  The FEC designer must choose a protection\
    \ interval\n   (time to send/receive a block of packets in a constant packet rate\n\
    \   system) consistent with the packet-loss characteristics, but also\n   mindful\
    \ of the extent of delay variation expected.  Further, the\n   system designer\
    \ must decide how long to wait for \"late\" packets to\n   arrive.  Again, the\
    \ range of delay variation is the relevant\n   expression delay variation for\
    \ these tasks.\n"
- title: 4.  Formulations of IPDV and PDV
  contents:
  - "4.  Formulations of IPDV and PDV\n   This section presents the formulations of\
    \ IPDV and PDV, and provides\n   some illustrative examples.  We use the basic\
    \ singleton definition in\n   [RFC3393] (which itself is based on [RFC2679]):\n\
    \   \"Type-P-One-way-ipdv is defined for two packets from Src to Dst\n   selected\
    \ by the selection function F, as the difference between the\n   value of the\
    \ Type-P-One-way-delay from Src to Dst at T2 and the value\n   of the Type-P-One-Way-Delay\
    \ from Src to Dst at T1\".\n"
- title: '4.1.  IPDV: Inter-Packet Delay Variation'
  contents:
  - "4.1.  IPDV: Inter-Packet Delay Variation\n   If we have packets in a stream consecutively\
    \ numbered i = 1,2,3,...\n   falling within the test interval, then IPDV(i) =\
    \ D(i)-D(i-1) where\n   D(i) denotes the one-way delay of the ith packet of a\
    \ stream.\n   One-way delays are the difference between timestamps applied at\
    \ the\n   ends of the path, or the receiver time minus the transmission time.\n\
    \   So D(2) = R2-T2.  With this timestamp notation, it can be shown that\n   IPDV\
    \ also represents the change in inter-packet spacing between\n   transmission\
    \ and reception:\n   IPDV(2) = D(2) - D(1) = (R2-T2) - (R1-T1) = (R2-R1) - (T2-T1)\n\
    \   An example selection function given in [RFC3393] is \"Consecutive\n   Type-P\
    \ packets within the specified interval\".  This is exactly the\n   function needed\
    \ for IPDV.  The reference packet in the pair is the\n   previous packet in the\
    \ sending sequence.\n   Note that IPDV can take on positive and negative values\
    \ (and zero).\n   One way to analyze the IPDV results is to concentrate on the\
    \ positive\n   excursions.  However, this approach has limitations that are\n\
    \   discussed in more detail below (see Section 5.3).\n   The mean of all IPDV(i)\
    \ for a stream is usually zero.  However, a\n   slow delay change over the life\
    \ of the stream, or a frequency error\n   between the measurement system clocks,\
    \ can result in a non-zero mean.\n"
- title: '4.2.  PDV: Packet Delay Variation'
  contents:
  - "4.2.  PDV: Packet Delay Variation\n   The name Packet Delay Variation is used\
    \ in [Y.1540] and its\n   predecessors, and refers to a performance parameter\
    \ equivalent to the\n   metric described below.\n   The Selection Function for\
    \ PDV requires two specific roles for the\n   packets in the pair.  The first\
    \ packet is any Type-P packet within\n   the specified interval.  The second,\
    \ or reference packet is the\n   Type-P packet within the specified interval with\
    \ the minimum one-way\n   delay.\n   Therefore, PDV(i) = D(i)-D(min) (using the\
    \ nomenclature introduced in\n   the IPDV section).  D(min) is the delay of the\
    \ packet with the lowest\n   value for delay (minimum) over the current test interval.\
    \  Values of\n   PDV may be zero or positive, and quantiles of the PDV distribution\n\
    \   are direct indications of delay variation.\n   PDV is a version of the one-way-delay\
    \ distribution, shifted to the\n   origin by normalizing to the minimum delay.\n"
- title: 4.3.  A "Point" about Measurement Points
  contents:
  - "4.3.  A \"Point\" about Measurement Points\n   Both IPDV and PDV are derived\
    \ from the one-way-delay metric.  One-way\n   delay requires knowledge of time\
    \ at two points, e.g., the source and\n   destination of an IP network path in\
    \ end-to-end measurement.\n   Therefore, both IPDV and PDV can be categorized\
    \ as 2-point metrics\n   because they are derived from one-way delay.  Specific\
    \ methods of\n   measurement may make assumptions or have a priori knowledge about\
    \ one\n   of the measurement points, but the metric definitions themselves are\n\
    \   based on information collected at two measurement points.\n"
- title: 4.4.  Examples and Initial Comparisons
  contents:
  - "4.4.  Examples and Initial Comparisons\n   Note: This material originally presented\
    \ in Slides 2 and 3 of\n   [Morton06].\n   The Figure below gives a sample of\
    \ packet delays, calculates IPDV and\n   PDV values, and depicts a histogram for\
    \ each one.\n                       Packet #     1   2   3   4   5\n         \
    \              -------------------------------\n                       Delay,\
    \ ms   20  10  20  25  20\n                       IPDV         U -10  10   5 \
    \ -5\n                       PDV         10   0  10  15  10\n                \
    \          |                 |\n                         4|                4|\n\
    \                          |                 |\n                         3|  \
    \              3|         H\n                          |                 |   \
    \      H\n                         2|                2|         H\n          \
    \                |                 |         H\n                  H   H  1|  \
    \ H   H        1|H        H   H\n                  H   H   |   H   H         |H\
    \        H   H\n                 ---------+--------         +---------------\n\
    \                -10  -5   0   5  10          0   5   10  15\n               \
    \    IPDV Histogram             PDV Histogram\n                     Figure 1:\
    \ IPDV and PDV Comparison\n   The sample of packets contains three packets with\
    \ \"typical\" delays of\n   20 ms, one packet with a low delay of 10 ms (the minimum\
    \ of the\n   sample) and one packet with 25 ms delay.\n   As noted above, this\
    \ example illustrates that IPDV may take on\n   positive and negative values,\
    \ while the PDV values are greater than\n   or equal to zero.  The histograms\
    \ of IPDV and PDV are quite different\n   in general shape, and the ranges are\
    \ different, too (IPDV range =\n   20ms, PDV range = 15 ms).  Note that the IPDV\
    \ histogram will change\n   if the sequence of delays is modified, but the PDV\
    \ histogram will\n   stay the same.  PDV normalizes the one-way-delay distribution\
    \ to the\n   minimum delay and emphasizes the variation independent from the\n\
    \   sequence of delays.\n"
- title: 5.  Survey of Earlier Comparisons
  contents:
  - "5.  Survey of Earlier Comparisons\n   This section summarizes previous work to\
    \ compare these two forms of\n   delay variation.\n"
- title: 5.1.  Demichelis' Comparison
  contents:
  - "5.1.  Demichelis' Comparison\n   In [Demichelis], Demichelis compared the early\
    \ versions of two forms\n   of delay variation.  Although the IPDV form would\
    \ eventually see\n   widespread use, the ITU-T work-in-progress he cited did not\
    \ utilize\n   the same reference packets as PDV.  Demichelis compared IPDV with\
    \ the\n   alternatives of using the delay of the first packet in the stream and\n\
    \   the mean delay of the stream as the PDV reference packet.  Neither of\n  \
    \ these alternative references were used in practice, and they are now\n   deprecated\
    \ in favor of the minimum delay of the stream [Y.1540].\n   Active measurements\
    \ of a transcontinental path (Torino to Tokyo)\n   provided the data for the comparison.\
    \  The Poisson test stream had\n   0.764 second average inter-packet interval,\
    \ with more than 58\n   thousand packets over 13.5 hours.  Among Demichelis' observations\n\
    \   about IPDV are the following:\n   1.  IPDV is a measure of the network's ability\
    \ to preserve the\n       spacing between packets.\n   2.  The distribution of\
    \ IPDV is usually symmetrical about the origin,\n       having a balance of negative\
    \ and positive values (for the most\n       part).  The mean is usually zero,\
    \ unless some long-term delay\n       trend is present.\n   3.  IPDV singletons\
    \ distinguish quick-delay variations (short-term,\n       on the order of the\
    \ interval between packets) from longer-term\n       variations.\n   4.  IPDV\
    \ places reduced demands on the stability and skew of\n       measurement clocks.\n\
    \   He also notes these features of PDV:\n   1.  The PDV distribution does not\
    \ distinguish short-term variation\n       from variation over the complete test\
    \ interval.  (Comment: PDV\n       can be determined over any sub-intervals when\
    \ the singletons are\n       stored.)\n   2.  The location of the distribution\
    \ is very sensitive to the delay\n       of the first packet, IF this packet is\
    \ used as the reference.\n       This would be a new formulation that differs\
    \ from the PDV\n       definition in this memo (PDV references the packet with\
    \ minimum\n       delay, so it does not have this drawback).\n   3.  The shape\
    \ of the PDV distribution is identical to the delay\n       distribution, but\
    \ shifted by the reference delay.\n   4.  Use of a common reference over measurement\
    \ intervals that are\n       longer than a typical session length may indicate\
    \ more PDV than\n       would be experienced by streams that support such sessions.\n\
    \       (Ideally, the measurement interval should be aligned with the\n      \
    \ session length of interest, and this influences determination of\n       the\
    \ reference delay, D(min).)\n   5.  The PDV distribution characterizes the range\
    \ of queue occupancies\n       along the measurement path (assuming the path is\
    \ fixed), but the\n       range says nothing about how the variation took place.\n\
    \   The summary metrics used in this comparison were the number of values\n  \
    \ exceeding a +/-50ms range around the mean, the Inverse Percentiles,\n   and\
    \ the Inter-Quartile Range.\n"
- title: 5.2.  Ciavattone et al.
  contents:
  - "5.2.  Ciavattone et al.\n   In [Cia03], the authors compared IPDV and PDV (referred\
    \ to as delta)\n   using a periodic packet stream conforming to [RFC3432] with\
    \ inter-\n   packet interval of 20 ms.\n   One of the comparisons between IPDV\
    \ and PDV involves a laboratory\n   setup where a queue was temporarily congested\
    \ by a competing packet\n   burst.  The additional queuing delay was 85 ms to\
    \ 95 ms, much larger\n   than the inter-packet interval.  The first packet in\
    \ the stream that\n   follows the competing burst spends the longest time queued,\
    \ and\n   others experience less and less queuing time until the queue is\n  \
    \ drained.\n   The authors observed that PDV reflects the additional queuing time\
    \ of\n   the packets affected by the burst, with values of 85, 65, 45, 25, and\n\
    \   5 ms.  Also, it is easy to determine (by looking at the PDV range)\n   that\
    \ a de-jitter buffer of >85 ms would have been sufficient to\n   accommodate the\
    \ delay variation.  Again, the measurement interval is\n   a key factor in the\
    \ validity of such observations (it should have\n   similar length to the session\
    \ interval of interest).\n   The IPDV values in the congested queue example are\
    \ very different:\n   85, -20, -20, -20, -20, -5 ms.  Only the positive excursion\
    \ of IPDV\n   gives an indication of the de-jitter buffer size needed.  Although\n\
    \   the variation exceeds the inter-packet interval, the extent of\n   negative\
    \ IPDV values is limited by that sending interval.  This\n   preference for information\
    \ from the positive IPDV values has prompted\n   some to ignore the negative values,\
    \ or to take the absolute value of\n   each IPDV measurement (sacrificing key\
    \ properties of IPDV in the\n   process, such as its ability to distinguish delay\
    \ trends).\n   Note that this example illustrates a case where the IPDV distribution\n\
    \   is asymmetrical, because the delay variation range (85 ms) exceeds\n   the\
    \ inter-packet spacing (20 ms).  We see that the IPDV values 85,\n   -20, -20,\
    \ -20, -20, -5 ms have zero mean, but the left side of the\n   distribution is\
    \ truncated at -20 ms.\n   Elsewhere in the article, the authors considered the\
    \ range as a\n   summary statistic for IPDV, and the 99.9th percentile minus the\n\
    \   minimum delay as a summary statistic for delay variation, or PDV.\n"
- title: 5.3.  IPPM List Discussion from 2000
  contents:
  - "5.3.  IPPM List Discussion from 2000\n   Mike Pierce made many comments in the\
    \ context of a working version of\n   [RFC3393].  One of his main points was that\
    \ a delay histogram is a\n   useful approach to quantifying variation.  Another\
    \ point was that the\n   time duration of evaluation is a critical aspect.\n \
    \  Carlo Demichelis then mailed his comparison paper [Demichelis] to the\n   IPPM\
    \ list, as discussed in more detail above.\n   Ruediger Geib observed that both\
    \ IPDV and the delay histogram (PDV)\n   are useful, and suggested that they might\
    \ be applied to different\n   variation time scales.  He pointed out that loss\
    \ has a significant\n   effect on IPDV, and encouraged that the loss information\
    \ be retained\n   in the arrival sequence.\n   Several example delay variation\
    \ scenarios were discussed, including:\n          Packet #     1   2   3   4 \
    \  5   6   7   8   9  10  11\n          -------------------------------------------------------\n\
    \          Ex. A\n          Lost\n          Delay, ms  100 110 120 130 140 150\
    \ 140 130 120 110 100\n          IPDV        U   10  10  10  10  10 -10 -10 -10\
    \ -10 -10\n          PDV         0   10  20  30  40  50  40  30  20  10   0\n\
    \          -------------------------------------------------------\n         \
    \ Ex. B\n          Lost                     L\n          Delay, ms  100 110 150\
    \   U 120 100 110 150 130 120 100\n          IPDV        U   10  40   U   U -10\
    \  10  40 -20 -10 -20\n          PDV         0   10  50   U  20   0  10  50  30\
    \  20   0\n                         Figure 2: Delay Examples\n   Clearly, the\
    \ range of PDV values is 50 ms in both cases above, and\n   this is the statistic\
    \ that determines the size of a de-jitter buffer.\n   The IPDV range is minimal\
    \ in response to the smooth variation in\n   Example A (20 ms).  However, IPDV\
    \ responds to the faster variations\n   in Example B (60 ms range from 40 to -20).\
    \  Here the IPDV range is\n   larger than the PDV range, and overestimates the\
    \ buffer size\n   requirements.\n   A heuristic method to estimate buffer size\
    \ using IPDV is to sum the\n   consecutive positive or zero values as an estimate\
    \ of PDV range.\n   However, this is more complicated to assess than the PDV range,\
    \ and\n   has strong dependence on the actual sequence of IPDV values (any\n \
    \  negative IPDV value stops the summation, and again causes an\n   underestimate).\n\
    \   IPDV values can be viewed as the adjustments that an adaptive de-\n   jitter\
    \ buffer would make, if it could make adjustments on a packet-\n   by-packet basis.\
    \  However, adaptive de-jitter buffers don't make\n   adjustments this frequently,\
    \ so the value of this information is\n   unknown.  The short-term variations\
    \ may be useful to know in some\n   other cases.\n"
- title: 5.4.  Y.1540 Appendix II
  contents:
  - "5.4.  Y.1540 Appendix II\n   Appendix II of [Y.1540] describes a secondary terminology\
    \ for delay\n   variation.  It compares IPDV, PDV (referred to as 2-point PDV),\
    \ and\n   1-point packet delay variation (which assumes a periodic stream and\n\
    \   assesses variation against an ideal arrival schedule constructed at a\n  \
    \ single measurement point).  This early comparison discusses some of\n   the\
    \ same considerations raised in Section 6 below.\n"
- title: 5.5.  Clark's ITU-T SG 12 Contribution
  contents:
  - "5.5.  Clark's ITU-T SG 12 Contribution\n   Alan Clark's contribution to ITU-T\
    \ Study Group 12 in January 2003\n   provided an analysis of the root causes of\
    \ delay variation and\n   investigated different techniques for measurement and\
    \ modeling of\n   \"jitter\" [COM12.D98].  Clark compared a metric closely related\
    \ to\n   IPDV, Mean Packet-to-Packet Delay Variation, MPPDV = mean(abs(D(i)-\n\
    \   D(i-1))) to the newly proposed Mean Absolute Packet Delay Variation\n   (MAPDV2,\
    \ see [G.1020]).  One of the tasks for this study was to\n   estimate the number\
    \ of packet discards in a de-jitter buffer.  Clark\n   concluded that MPPDV did\
    \ not track the ramp delay variation he\n   associated access link congestion\
    \ (similar to Figure 2, Example A\n   above), but MAPDV2 did.\n   Clark also briefly\
    \ looked at PDV (as described in the 2002 version of\n   [Y.1541]).  He concluded\
    \ that if PDV was applied to a series of very\n   short measurement intervals\
    \ (e.g., 200 ms), it could be used to\n   determine the fraction of intervals\
    \ with high packet discard rates.\n"
- title: 6.  Additional Properties and Comparisons
  contents:
  - "6.  Additional Properties and Comparisons\n   This section treats some of the\
    \ earlier comparison areas in more\n   detail and introduces new areas for comparison.\n"
- title: 6.1.  Packet Loss
  contents:
  - "6.1.  Packet Loss\n   The measurement of packet loss is of great influence for\
    \ the delay\n   variation results, as displayed in the Figures 3 and 4 (L means\
    \ Lost\n   and U means Undefined).  Figure 3 shows that in the extreme case of\n\
    \   every other packet loss, the IPDV metric doesn't produce any results,\n  \
    \ while the PDV produces results for all arriving packets.\n                 \
    \ Packet #   1  2  3  4  5  6  7  8  9 10\n                  Lost          L \
    \    L     L     L     L\n                  ---------------------------------------\n\
    \                  Delay, ms  3  U  5  U  4  U  3  U  4  U\n                 \
    \ IPDV       U  U  U  U  U  U  U  U  U  U\n                  PDV        0  U \
    \ 2  U  1  U  0  U  1  U\n                  Figure 3: Path Loss Every Other Packet\n\
    \   In case of a burst of packet loss, as displayed in Figure 4, both the\n  \
    \ IPDV and PDV metrics produce some results.  Note that PDV still\n   produces\
    \ more values than IPDV.\n                  Packet #   1  2  3  4  5  6  7  8\
    \  9 10\n                  Lost             L  L  L  L  L\n                  ---------------------------------------\n\
    \                  Delay, ms  3  4  U  U  U  U  U  5  4  3\n                 \
    \ IPDV       U  1  U  U  U  U  U  U -1 -1\n                  PDV        0  1 \
    \ U  U  U  U  U  2  1  0\n                      Figure 4: Burst of Packet Loss\n\
    \   In conclusion, the PDV results are affected by the packet-loss ratio.\n  \
    \ The IPDV results are affected by both the packet-loss ratio and the\n   packet-loss\
    \ distribution.  In the extreme case of loss of every other\n   packet, IPDV doesn't\
    \ provide any results.\n"
- title: 6.2.  Path Changes
  contents:
  - "6.2.  Path Changes\n   When there is little or no stability in the network under\
    \ test, then\n   the devices that attempt to characterize the network are equally\n\
    \   stressed, especially if the results displayed are used to make\n   inferences\
    \ that may not be valid.\n   Sometimes the path characteristics change during\
    \ a measurement\n   interval.  The change may be due to link or router failure,\n\
    \   administrative changes prior to maintenance (e.g., link-cost change),\n  \
    \ or re-optimization of routing using new information.  All these\n   causes are\
    \ usually infrequent, and network providers take appropriate\n   measures to ensure\
    \ this.  Automatic restoration to a back-up path is\n   seen as a desirable feature\
    \ of IP networks.\n   Frequent path changes and prolonged congestion with substantial\n\
    \   packet loss clearly make delay variation measurements challenging.\n   Path\
    \ changes are usually accompanied by a sudden, persistent increase\n   or decrease\
    \ in one-way delay.  [Cia03] gives one such example.  We\n   assume that a restoration\
    \ path either accepts a stream of packets or\n   is not used for that particular\
    \ stream (e.g., no multi-path for\n   flows).\n   In any case, a change in the\
    \ Time to Live (TTL) (or Hop Limit) of the\n   received packets indicates that\
    \ the path is no longer the same.\n   Transient packet reordering may also be\
    \ observed with path changes,\n   due to use of non-optimal routing while updates\
    \ propagate through the\n   network (see [Casner] and [Cia03] )\n   Many, if not\
    \ all, packet streams experience packet loss in\n   conjunction with a path change.\
    \  However, it is certainly possible\n   that the active measurement stream does\
    \ not experience loss.  This\n   may be due to use of a long inter-packet sending\
    \ interval with\n   respect to the restoration time, and it becomes more likely\
    \ as \"fast\n   restoration\" techniques see wider deployment (e.g., [RFC4090]).\n\
    \   Thus, there are two main cases to consider, path changes accompanied\n   by\
    \ loss, and those that are lossless from the point of view of the\n   active measurement\
    \ stream.  The subsections below examine each of\n   these cases.\n"
- title: 6.2.1.  Lossless Path Change
  contents:
  - "6.2.1.  Lossless Path Change\n   In the lossless case, a path change will typically\
    \ affect only one\n   IPDV singleton.  For example, the delay sequence in the\
    \ Figure below\n   always produces IPDV=0 except in the one case where the value\
    \ is 5\n   (U, 0, 0, 0, 5, 0, 0, 0, 0).\n                    Packet #   1  2 \
    \ 3  4  5  6  7  8  9\n                    Lost\n                    ------------------------------------\n\
    \                    Delay, ms  4  4  4  4  9  9  9  9  9\n                  \
    \  IPDV       U  0  0  0  5  0  0  0  0\n                    PDV        0  0 \
    \ 0  0  5  5  5  5  5\n                      Figure 5: Lossless Path Change\n\
    \   However, if the change in delay is negative and larger than the\n   inter-packet\
    \ sending interval, then more than one IPDV singleton may\n   be affected because\
    \ packet reordering is also likely to occur.\n   The use of the new path and its\
    \ delay variation can be quantified by\n   treating the PDV distribution as bi-modal,\
    \ and characterizing each\n   mode separately.  This would involve declaring a\
    \ new path within the\n   sample, and using a new local minimum delay as the PDV\
    \ reference\n   delay for the sub-sample (or time interval) where the new path\
    \ is\n   present.\n   The process of detecting a bi-modal delay distribution is\
    \ made\n   difficult if the typical delay variation is larger than the delay\n\
    \   change associated with the new path.  However, information on a TTL\n   (or\
    \ Hop Limit) change or the presence of transient reordering can\n   assist in\
    \ an automated decision.\n   The effect of path changes may also be reduced by\
    \ making PDV\n   measurements over short intervals (minutes, as opposed to hours).\n\
    \   This way, a path change will affect one sample and its PDV values.\n   Assuming\
    \ that the mean or median one-way delay changes appreciably on\n   the new path,\
    \ then subsequent measurements can confirm a path change\n   and trigger special\
    \ processing on the interval to revise the PDV\n   result.\n   Alternatively,\
    \ if the path change is detected, by monitoring the test\n   packets TTL or Hop\
    \ Limit, or monitoring the change in the IGP link-\n   state database, the results\
    \ of measurement before and after the path\n   change could be kept separated,\
    \ presenting two different\n   distributions.  This avoids the difficult task\
    \ of determining the\n   different modes of a multi-modal distribution.\n"
- title: 6.2.2.  Path Change with Loss
  contents:
  - "6.2.2.  Path Change with Loss\n   If the path change is accompanied by loss,\
    \ such that there are no\n   consecutive packet pairs that span the change, then\
    \ no IPDV\n   singletons will reflect the change.  This may or may not be\n  \
    \ desirable, depending on the ultimate use of the delay variation\n   measurement.\
    \  Figure 6, in which L means Lost and U means Undefined,\n   illustrates this\
    \ case.\n                    Packet #   1  2  3  4  5  6  7  8  9\n          \
    \          Lost                   L  L\n                    ------------------------------------\n\
    \                    Delay, ms  3  4  3  3  U  U  8  9  8\n                  \
    \  IPDV       U  1 -1  0  U  U  U  1 -1\n                    PDV        0  1 \
    \ 0  0  U  U  5  6  5\n                      Figure 6: Path Change with Loss\n\
    \   PDV will again produce a bi-modal distribution.  But here, the\n   decision\
    \ process to define sub-intervals associated with each path is\n   further assisted\
    \ by the presence of loss, in addition to TTL,\n   reordering information, and\
    \ use of short measurement intervals\n   consistent with the duration of user\
    \ sessions.  It is reasonable to\n   assume that at least loss and delay will\
    \ be measured simultaneously\n   with PDV and/or IPDV.\n   IPDV does not help\
    \ to detect path changes when accompanied by loss,\n   and this is a disadvantage\
    \ for those who rely solely on IPDV\n   measurements.\n"
- title: 6.3.  Clock Stability and Error
  contents:
  - "6.3.  Clock Stability and Error\n   Low cost or low complexity measurement systems\
    \ may be embedded in\n   communication devices that do not have access to high\
    \ stability\n   clocks, and time errors will almost certainly be present.  However,\n\
    \   larger time-related errors (~1 ms) may offer an acceptable trade-off\n   for\
    \ monitoring performance over a large population (the accuracy\n   needed to detect\
    \ problems may be much less than required for a\n   scientific study, ~0.01 ms\
    \ for example).\n   Maintaining time accuracy <<1 ms has typically required access\
    \ to\n   dedicated time receivers at all measurement points.  Global\n   positioning\
    \ system (GPS) receivers have often been installed to\n   support measurements.\
    \  The GPS installation conditions are fairly\n   restrictive, and many prospective\
    \ measurement efforts have found the\n   deployment complexity and system maintenance\
    \ too difficult.\n   As mentioned above, [Demichelis] observed that PDV places\
    \ greater\n   demands on clock synchronization than for IPDV.  This observation\n\
    \   deserves more discussion.  Synchronization errors have two\n   components:\
    \ time-of-day errors and clock-frequency errors (resulting\n   in skew).\n   Both\
    \ IPDV and PDV are sensitive to time-of-day errors when attempting\n   to align\
    \ measurement intervals at the source and destination.  Gross\n   misalignment\
    \ of the measurement intervals can lead to lost packets,\n   for example, if the\
    \ receiver is not ready when the first test packet\n   arrives.  However, both\
    \ IPDV and PDV assess delay differences, so the\n   error present in any two one-way-delay\
    \ singletons will cancel as long\n   as the error is constant.  So, the demand\
    \ for NTP or GPS\n   synchronization comes primarily from one-way-delay measurement\
    \ time-\n   of-day accuracy requirements.  Delay variation and measurement\n \
    \  interval alignment are relatively less demanding.\n   Skew is a measure of\
    \ the change in clock time over an interval with\n   respect to a reference clock.\
    \  Both IPDV and PDV are affected by\n   skew, but the error sensitivity in IPDV\
    \ singletons is less because\n   the intervals between consecutive packets are\
    \ rather small,\n   especially when compared to the overall measurement interval.\
    \  Since\n   PDV computes the difference between a single reference delay (the\n\
    \   sample minimum) and all other delays in the measurement interval, the\n  \
    \ constraint on skew error is greater to attain the same accuracy as\n   IPDV.\
    \  Again, use of short PDV measurement intervals (on the order of\n   minutes,\
    \ not hours) provides some relief from the effects of skew\n   error.  Thus, the\
    \ additional accuracy demand of PDV can be expressed\n   as a ratio of the measurement\
    \ interval to the inter-packet spacing.\n   A practical example is a measurement\
    \ between two hosts, one with a\n   synchronized clock and the other with a free-running\
    \ clock having 50\n   parts per million (ppm) long term accuracy.\n   o  If IPDV\
    \ measurements are made on packets with a 1 second spacing,\n      the maximum\
    \ singleton error will be 1 x 5 x 10^-5 seconds, or 0.05\n      ms.\n   o  If\
    \ PDV measurements are made on the same packets over a 60 second\n      measurement\
    \ interval, then the delay variation due to the max\n      free-running clock\
    \ error will be 60 x 5 x 10-5 seconds, or 3 ms\n      delay variation error from\
    \ the first packet to the last.\n   Therefore, the additional accuracy required\
    \ for equivalent PDV error\n   under these conditions is a factor of 60 more than\
    \ for IPDV.  This is\n   a rather extreme scenario, because time-of-day error\
    \ of 1 second\n   would accumulate in ~5.5 hours, potentially causing the measurement\n\
    \   interval alignment issue described above.\n   If skew is present in a sample\
    \ of one-way delays, its symptom is\n   typically a nearly linear growth or decline\
    \ over all the one-way-\n   delay values.  As a practical matter, if the same\
    \ slope appears\n   consistently in the measurements, then it may be possible\
    \ to fit the\n   slope and compensate for the skew in the one-way-delay measurements,\n\
    \   thereby avoiding the issue in the PDV calculations that follow.  See\n   [RFC3393]\
    \ for additional information on compensating for skew.\n   Values for IPDV may\
    \ have non-zero mean over a sample when clock skew\n   is present.  This tends\
    \ to complicate IPDV analysis when using the\n   assumptions of a zero mean and\
    \ a symmetric distribution.\n   There is a third factor related to clock error\
    \ and stability: this is\n   the presence of a clock-synchronization protocol\
    \ (e.g., NTP) and the\n   time-adjustment operations that result.  When a time\
    \ error is\n   detected (typically on the order of a few milliseconds), the host\n\
    \   clock frequency is continuously adjusted to reduce the time error.\n   If\
    \ these adjustments take place during a measurement interval, they\n   may appear\
    \ as delay variation when none was present, and therefore\n   are a source of\
    \ error (regardless of the form of delay variation\n   considered).\n"
- title: 6.4.  Spatial Composition
  contents:
  - "6.4.  Spatial Composition\n   ITU-T Recommendation [Y.1541] gives a provisional\
    \ method to compose a\n   PDV metric using PDV measurement results from two or\
    \ more sub-paths.\n   Additional methods are considered in [IPPM-Spatial].\n \
    \  PDV has a clear advantage at this time, since there is no validated\n   method\
    \ to compose an IPDV metric.  In addition, IPDV results depend\n   greatly on\
    \ the exact sequence of packets and may not lend themselves\n   easily to the\
    \ composition problem, where segments must be assumed to\n   have independent\
    \ delay distributions.\n"
- title: 6.5.  Reporting a Single Number (SLA)
  contents:
  - "6.5.  Reporting a Single Number (SLA)\n   Despite the risk of over-summarization,\
    \ measurements must often be\n   displayed for easy consumption.  If the right\
    \ summary report is\n   prepared, then the \"dashboard\" view correctly indicates\
    \ whether there\n   is something different and worth investigating further, or\
    \ that the\n   status has not changed.  The dashboard model restricts every\n\
    \   instrument display to a single number.  The packet network dashboard\n   could\
    \ have different instruments for loss, delay, delay variation,\n   reordering,\
    \ etc., and each must be summarized as a single number for\n   each measurement\
    \ interval.  The single number summary statistic is a\n   key component of SLAs,\
    \ where a threshold on that number must be met\n   x% of the time.\n   The simplicity\
    \ of the PDV distribution lends itself to this\n   summarization process (including\
    \ use of the percentiles, median or\n   mean).  An SLA of the form \"no more than\
    \ x% of packets in a\n   measurement interval shall have PDV >= y ms, for no less\
    \ than z% of\n   time\" is relatively straightforward to specify and implement.\n\
    \   [Y.1541] introduced the notion of a pseudo-range when setting an\n   objective\
    \ for the 99.9th percentile of PDV.  The conventional range\n   (max-min) was\
    \ avoided for several reasons, including stability of the\n   maximum delay. \
    \ The 99.9th percentile of PDV is helpful to\n   performance planners (seeking\
    \ to meet some user-to-user objective for\n   delay) and in design of de-jitter\
    \ buffer sizes, even those with\n   adaptive capabilities.\n   IPDV does not lend\
    \ itself to summarization so easily.  The mean IPDV\n   is typically zero.  As\
    \ the IPDV distribution will have two tails\n   (positive and negative), the range\
    \ or pseudo-range would not match\n   the needed de-jitter buffer size.  Additional\
    \ complexity may be\n   introduced when the variation exceeds the inter-packet\
    \ sending\n   interval, as discussed above (in Sections 5.2 and 6.2.1).  Should\
    \ the\n   Inter-Quartile Range be used?  Should the singletons beyond some\n \
    \  threshold be counted (e.g., mean +/- 50 ms)?  A strong rationale for\n   one\
    \ of these summary statistics has yet to emerge.\n   When summarizing IPDV, some\
    \ prefer the simplicity of the single-sided\n   distribution created by taking\
    \ the absolute value of each singleton\n   result, abs(D(i)-D(i-1)).  This approach\
    \ sacrifices the two-sided\n   inter-arrival spread information in the distribution.\
    \  It also makes\n   the evaluation using percentiles more confusing, because\
    \ a single\n   late packet that exceeds the variation threshold will cause two\
    \ pairs\n   of singletons to fail the criteria (one positive, the other negative\n\
    \   converted to positive).  The single-sided PDV distribution is an\n   advantage\
    \ in this category.\n"
- title: 6.6.  Jitter in RTCP Reports
  contents:
  - "6.6.  Jitter in RTCP Reports\n   Section 6.4.1 of [RFC3550] gives the calculation\
    \ of the \"inter-\n   arrival jitter\" field for the RTP Control Protocol (RTCP)\
    \ report,\n   with a sample implementation in an Appendix.\n   The RTCP \"interarrival\
    \ jitter\" value can be calculated using IPDV\n   singletons.  If there is packet\
    \ reordering, as defined in [RFC4737],\n   then estimates of Jitter based on IPDV\
    \ may vary slightly, because\n   [RFC3550] specifies the use of receive-packet\
    \ order.\n   Just as there is no simple way to convert PDV singletons to IPDV\n\
    \   singletons without returning to the original sample of delay\n   singletons,\
    \ there is no clear relationship between PDV and [RFC3550]\n   \"interarrival\
    \ jitter\".\n"
- title: 6.7.  MAPDV2
  contents:
  - "6.7.  MAPDV2\n   MAPDV2 stands for Mean Absolute Packet Delay Variation (version)\
    \ 2,\n   and is specified in [G.1020].  The MAPDV2 algorithm computes a\n   smoothed\
    \ running estimate of the mean delay using the one-way delays\n   of 16 previous\
    \ packets.  It compares the current one-way delay to the\n   estimated mean, separately\
    \ computes the means of positive and\n   negative deviations, and sums these deviation\
    \ means to produce\n   MAPVDV2.  In effect, there is a MAPDV2 singleton for every\
    \ arriving\n   packet, so further summarization is usually warranted.\n   Neither\
    \ IPDV or PDV forms assist in the computation of MAPDV2.\n"
- title: 6.8.  Load Balancing
  contents:
  - "6.8.  Load Balancing\n   Network traffic load balancing is a process to divide\
    \ packet traffic\n   in order to provide a more even distribution over two or\
    \ more equally\n   viable paths.  The paths chosen are based on the IGP cost metrics,\n\
    \   while the delay depends on the path's physical layout.  Usually, the\n   balancing\
    \ process is performed on a per-flow basis to avoid delay\n   variation experienced\
    \ when packets traverse different physical paths.\n   If the sample includes test\
    \ packets with different characteristics\n   such as IP addresses/ports, there\
    \ could be multi-modal delay\n   distributions present.  The PDV form makes the\
    \ identification of\n   multiple modes possible.  IPDV may also reveal that multiple\
    \ paths\n   are in use with a mixed-flow sample, but the different delay modes\n\
    \   are not easily divided and analyzed separately.\n   Should the delay singletons\
    \ using multiple addresses/ports be\n   combined in the same sample?  Should we\
    \ characterize each mode\n   separately?  (This question also applies to the Path\
    \ Change case.)\n   It depends on the task to be addressed by the measurement.\n\
    \   For the task of de-jitter buffer sizing or assessing queue\n   occupation,\
    \ the modes should be characterized separately because\n   flows will experience\
    \ only one mode on a stable path.  Use of a\n   single flow description (address/port\
    \ combination) in each sample\n   simplifies this analysis.  Multiple modes may\
    \ be identified by\n   collecting samples with different flow attributes, and\n\
    \   characterization of multiple paths can proceed with comparison of the\n  \
    \ delay distributions from each sample.\n   For the task of capacity planning\
    \ and routing optimization,\n   characterizing the modes separately could offer\
    \ an advantage.\n   Network-wide capacity planning (as opposed to link capacity\
    \ planning)\n   takes as input the core traffic matrix, which corresponds to a\
    \ matrix\n   of traffic transferred from every source to every destination in\
    \ the\n   network.  Applying the core traffic matrix along with the routing\n\
    \   information (typically the link state database of a routing protocol)\n  \
    \ in a capacity planning tool offers the possibility to visualize the\n   paths\
    \ where the traffic flows and to optimize the routing based on\n   the link utilization.\
    \  In the case where equal cost multiple paths\n   (ECMPs) are used, the traffic\
    \ will be load balanced onto multiple\n   paths.  If each mode of the IP delay\
    \ multi-modal distribution can be\n   associated with a specific path, the delay\
    \ performance offers an\n   extra optimization parameter, i.e., the routing optimization\
    \ based on\n   the IP delay variation metric.  As an example, the load balancing\n\
    \   across ECMPs could be suppressed so that the Voice over IP (VoIP)\n   calls\
    \ would only be routed via the path with the lower IP delay\n   variation.  Clearly,\
    \ any modifications can result in new delay\n   performance measurements, so there\
    \ must be a verification step to\n   ensure the desired outcome.\n"
- title: 7.  Applicability of the Delay Variation Forms and Recommendations
  contents:
  - "7.  Applicability of the Delay Variation Forms and Recommendations\n   Based\
    \ on the comparisons of IPDV and PDV presented above, this\n   section matches\
    \ the attributes of each form with the tasks described\n   earlier.  We discuss\
    \ the more general circumstances first.\n"
- title: 7.1.  Uses
  contents:
  - '7.1.  Uses

    '
- title: 7.1.1.  Inferring Queue Occupancy
  contents:
  - "7.1.1.  Inferring Queue Occupancy\n   The PDV distribution is anchored at the\
    \ minimum delay observed in the\n   measurement interval.  When the sample minimum\
    \ coincides with the\n   true minimum delay of the path, then the PDV distribution\
    \ is\n   equivalent to the queuing time distribution experienced by the test\n\
    \   stream.  If the minimum delay is not the true minimum, then the PDV\n   distribution\
    \ captures the variation in queuing time and some\n   additional amount of queuing\
    \ time is experienced, but unknown.  One\n   can summarize the PDV distribution\
    \ with the mean, median, and other\n   statistics.\n   IPDV can capture the difference\
    \ in queuing time from one packet to\n   the next, but this is a different distribution\
    \ from the queue\n   occupancy revealed by PDV.\n"
- title: 7.1.2.  Determining De-Jitter Buffer Size (and FEC Design)
  contents:
  - "7.1.2.  Determining De-Jitter Buffer Size (and FEC Design)\n   This task is complimentary\
    \ to the problem of inferring queue\n   occupancy through measurement.  Again,\
    \ use of the sample minimum as\n   the reference delay for PDV yields a distribution\
    \ that is very\n   relevant to de-jitter buffer size.  This is because the minimum\
    \ delay\n   is an alignment point for the smoothing operation of de-jitter\n \
    \  buffers.  A de-jitter buffer that is ideally aligned with the delay\n   variation\
    \ adds zero buffer time to packets with the longest\n   accommodated network delay\
    \ (any packets with longer delays are\n   discarded).  Thus, a packet experiencing\
    \ minimum network delay should\n   be aligned to wait the maximum length of the\
    \ de-jitter buffer.  With\n   this alignment, the stream is smoothed with no unnecessary\
    \ delay\n   added.  Figure 5 of [G.1020] illustrates the ideal relationship\n\
    \   between network delay variation and buffer time.\n   The PDV distribution\
    \ is also useful for this task, but different\n   statistics are preferred.  The\
    \ range (max-min) or the 99.9th\n   percentile of PDV (pseudo-range) are closely\
    \ related to the buffer\n   size needed to accommodate the observed network delay\
    \ variation.\n   The PDV distribution directly addresses the FEC waiting time\n\
    \   question.  When the PDV distribution has a 99th percentile of 10 ms,\n   then\
    \ waiting 10 ms longer than the FEC protection interval will allow\n   99% of\
    \ late packets to arrive and be used in the FEC block.\n   In some cases, the\
    \ positive excursions (or series of positive\n   excursions) of IPDV may help\
    \ to approximate the de-jitter buffer\n   size, but there is no guarantee that\
    \ a good buffer estimate will\n   emerge, especially when the delay varies as\
    \ a positive trend over\n   several test packets.\n"
- title: 7.1.3.  Spatial Composition
  contents:
  - "7.1.3.  Spatial Composition\n   PDV has a clear advantage at this time, since\
    \ there is no validated\n   method to compose an IPDV metric.\n"
- title: '7.1.4.  Service-Level Specification: Reporting a Single Number'
  contents:
  - "7.1.4.  Service-Level Specification: Reporting a Single Number\n   The one-sided\
    \ PDV distribution can be constrained with a single\n   statistic, such as an\
    \ upper percentile, so it is preferred.  The IPDV\n   distribution is two-sided,\
    \ usually has zero mean, and no universal\n   summary statistic that relates to\
    \ a physical quantity has emerged in\n   years of experience.\n"
- title: 7.2.  Challenging Circumstances
  contents:
  - "7.2.  Challenging Circumstances\n   Note that measurement of delay variation\
    \ may not be the primary\n   concern under unstable and unreliable circumstances.\n"
- title: 7.2.1.  Clock and Storage Issues
  contents:
  - "7.2.1.  Clock and Storage Issues\n   When appreciable skew is present between\
    \ measurement system clocks,\n   IPDV has an advantage because PDV would require\
    \ processing over the\n   entire sample to remove the skew error.  However, significant\
    \ skew\n   can invalidate IPDV analysis assumptions, such as the zero-mean and\n\
    \   symmetric-distribution characteristics.  Small skew may well be\n   within\
    \ the error tolerance, and both PDV and IPDV results will be\n   usable.  There\
    \ may be a portion of the skew, measurement interval,\n   and required accuracy\
    \ 3-D space where IPDV has an advantage,\n   depending on the specific measurement\
    \ specifications.\n   Neither form of delay variation is more suited than the\
    \ other to\n   on-the-fly summarization without memory, and this may be one of\
    \ the\n   reasons that [RFC3550] RTCP Jitter and MAPDV2 in [G.1020] have\n   attained\
    \ deployment in low-cost systems.\n"
- title: 7.2.2.  Frequent Path Changes
  contents:
  - "7.2.2.  Frequent Path Changes\n   If the network under test exhibits frequent\
    \ path changes, on the\n   order of several new routes per minute, then IPDV appears\
    \ to isolate\n   the delay variation on each path from the transient effect of\
    \ path\n   change (especially if there is packet loss at the time of path\n  \
    \ change).  However, if one intends to use IPDV to indicate path\n   changes,\
    \ it cannot do this when the change is accompanied by loss.\n   It is possible\
    \ to make meaningful PDV measurements when paths are\n   unstable, but great importance\
    \ would be placed on the algorithms that\n   infer path change and attempt to\
    \ divide the sample on path change\n   boundaries.\n   When path changes are frequent\
    \ and cause packet loss, delay variation\n   is probably less important than the\
    \ loss episodes and attention\n   should be turned to the loss metric instead.\n"
- title: 7.2.3.  Frequent Loss
  contents:
  - "7.2.3.  Frequent Loss\n   If the network under test exhibits frequent loss, then\
    \ PDV may\n   produce a larger set of singletons for the sample than IPDV.  This\
    \ is\n   due to IPDV requiring consecutive packet arrivals to assess delay\n \
    \  variation, compared to PDV where any packet arrival is useful.  The\n   worst\
    \ case is when no consecutive packets arrive and the entire IPDV\n   sample would\
    \ be undefined, yet PDV would successfully produce a\n   sample based on the arriving\
    \ packets.\n"
- title: 7.2.4.  Load Balancing
  contents:
  - "7.2.4.  Load Balancing\n   PDV distributions offer the most straightforward way\
    \ to identify that\n   a sample of packets have traversed multiple paths.  The\
    \ tasks of\n   de-jitter buffer sizing or assessing queue occupation with PDV\
    \ should\n   be use a sample with a single flow because flows will experience\
    \ only\n   one mode on a stable path, and it simplifies the analysis.\n"
- title: 7.3.  Summary
  contents:
  - "7.3.  Summary\n   +---------------+----------------------+----------------------------+\n\
    \   | Comparison    | PDV = D(i)-D(min)    | IPDV = D(i)-D(i-1)         |\n  \
    \ | Area          |                      |                            |\n   +---------------+----------------------+----------------------------+\n\
    \   | Challenging   | Less sensitive to    | Preferred when path        |\n  \
    \ | Circumstances | packet loss, and     | changes are frequent or    |\n   |\
    \               | simplifies analysis  | when measurement clocks    |\n   |  \
    \             | when load balancing  | exhibit some skew          |\n   |    \
    \           | or multiple paths    |                            |\n   |      \
    \         | are present          |                            |\n   |---------------|----------------------|----------------------------|\n\
    \   | Spatial       | All validated        | Has sensitivity to         |\n  \
    \ | Composition   | methods use this     | sequence and spacing       |\n   |\
    \ of DV metric  | form                 | changes, which tends to    |\n   |  \
    \             |                      | break the requirement for  |\n   |    \
    \           |                      | independent distributions  |\n   |      \
    \         |                      | between path segments      |\n   |---------------|----------------------|----------------------------|\n\
    \   | Determine     | \"Pseudo-range\"       | No reliable relationship,  |\n\
    \   | De-Jitter     | reveals this         | but some heuristics        |\n  \
    \ | Buffer Size   | property by          |                            |\n   |\
    \ Required      | anchoring the        |                            |\n   |  \
    \             | distribution at the  |                            |\n   |    \
    \           | minimum delay        |                            |\n   |---------------|----------------------|----------------------------|\n\
    \   | Estimate of   | Distribution has     | No reliable relationship   |\n  \
    \ | Queuing Time  | one-to-one           |                            |\n   |\
    \ and Variation | relationship on a    |                            |\n   |  \
    \             | stable path,         |                            |\n   |    \
    \           | especially when      |                            |\n   |      \
    \         | sample min = true    |                            |\n   |        \
    \       | min                  |                            |\n   |---------------|----------------------|----------------------------|\n\
    \   | Specification | One constraint       | Distribution is two-sided, |\n  \
    \ | Simplicity:   | needed for           | usually has zero mean, and |\n   |\
    \ Single Number | single-sided         | no universal summary       |\n   | SLA\
    \           | distribution, and    | statistic that relates to  |\n   |      \
    \         | easily related to    | a physical quantity        |\n   |        \
    \       | quantities above     |                            |\n   +---------------+----------------------+----------------------------+\n\
    \                          Summary of Comparisons\n"
- title: 8.  Measurement Considerations
  contents:
  - "8.  Measurement Considerations\n   This section discusses the practical aspects\
    \ of delay variation\n   measurement, with special attention to the two formulations\
    \ compared\n   in this memo.\n"
- title: 8.1.  Measurement Stream Characteristics
  contents:
  - "8.1.  Measurement Stream Characteristics\n   As stated in Section 1.2, there\
    \ is a strong dependency between the\n   active measurement stream characteristics\
    \ and the results.  The IPPM\n   literature includes two primary methods for collecting\
    \ samples:\n   Poisson sampling described in [RFC2330], and Periodic sampling\
    \ in\n   [RFC3432].  The Poisson method was intended to collect an unbiased\n\
    \   sample of performance, while the Periodic method addresses a \"known\n   bias\
    \ of interest\".  Periodic streams are required to have random\n   start times\
    \ and limited stream duration, in order to avoid unwanted\n   synchronization\
    \ with some other periodic process, or cause\n   congestion-aware senders to synchronize\
    \ with the stream and produce\n   atypical results.  The random start time should\
    \ be different for each\n   new stream.\n   It is worth noting that [RFC3393]\
    \ was developed in parallel with\n   [RFC3432].  As a result, all the stream metrics\
    \ defined in [RFC3393]\n   specify the Poisson sampling method.\n   Periodic sampling\
    \ is frequently used in measurements of delay\n   variation.  Several factors\
    \ foster this choice:\n   1.  Many application streams that are sensitive to delay\
    \ variation\n       also exhibit periodicity, and so exemplify the bias of interest.\n\
    \       If the application has a constant packet spacing, this constant\n    \
    \   spacing can be the inter-packet gap for the test stream.  VoIP\n       streams\
    \ often use 20 ms spacing, so this is an obvious choice for\n       an Active\
    \ stream.  This applies to both IPDV and PDV forms.\n   2.  The spacing between\
    \ packets in the stream will influence whether\n       the stream experiences\
    \ short-range dependency, or only long-range\n       dependency, as investigated\
    \ in [Li.Mills].  The packet spacing\n       also influences the IPDV distribution\
    \ and the stream's\n       sensitivity to reordering.  For example, with a 20\
    \ ms spacing the\n       IPDV distribution cannot go below -20 ms without packet\n\
    \       reordering.\n   3.  The measurement process may make several simplifying\
    \ assumptions\n       when the send spacing and send rate are constant.  For example,\n\
    \       the inter-arrival times at the destination can be compared with\n    \
    \   an ideal sending schedule, and allowing a one-point measurement\n       of\
    \ delay variation (described in [Y.1540]) that approximates the\n       IPDV form.\
    \  Simplified methods that approximate PDV are possible\n       as well (some\
    \ are discussed in Appendix II of [Y.1541]).\n   4.  Analysis of truncated, or\
    \ non-symmetrical IPDV distributions is\n       simplified.  Delay variations\
    \ in excess of the periodic sending\n       interval can cause multiple singleton\
    \ values at the negative\n       limit of the packet spacing (see Section 5.2\
    \ and [Cia03]).  Only\n       packet reordering can cause the negative spacing\
    \ limit to be\n       exceeded.\n   Despite the emphasis on inter-packet delay\
    \ differences with IPDV,\n   both Poisson [Demichelis] and Periodic [Li.Mills]\
    \ streams have been\n   used, and these references illustrate the different analyses\
    \ that are\n   possible.\n   The advantages of using a Poisson distribution are\
    \ discussed in\n   [RFC2330].  The main properties are to avoid predicting the\
    \ sample\n   times, avoid synchronization with periodic events that are present\
    \ in\n   networks, and avoid inducing synchronization with congestion-aware\n\
    \   senders.  When a Poisson stream is used with IPDV, the distribution\n   will\
    \ reflect inter-packet delay variation on many different time\n   scales (or packet\
    \ spacings).  The unbiased Poisson sampling brings a\n   new layer of complexity\
    \ in the analysis of IPDV distributions.\n"
- title: 8.2.  Measurement Devices
  contents:
  - "8.2.  Measurement Devices\n   One key aspect of measurement devices is their\
    \ ability to store\n   singletons (or individual measurements).  This feature\
    \ usually is\n   closely related to local calculation capabilities.  For example,\
    \ an\n   embedded measurement device with limited storage will like provide\n\
    \   only a few statistics on the delay variation distribution, while\n   dedicated\
    \ measurement systems store all the singletons and allow\n   detailed analysis\
    \ (later calculation of either form of delay\n   variation is possible with the\
    \ original singletons).\n   Therefore, systems with limited storage must choose\
    \ their metrics and\n   summary statistics in advance.  If both IPDV and PDV statistics\
    \ are\n   desired, the supporting information must be collected as packets\n \
    \  arrive.  For example, the PDV range and high percentiles can be\n   determined\
    \ later if the minimum and several of the largest delays are\n   stored while\
    \ the measurement is in-progress.\n"
- title: 8.3.  Units of Measurement
  contents:
  - "8.3.  Units of Measurement\n   Both IPDV and PDV can be summarized as a range\
    \ in milliseconds.\n   With IPDV, it is interesting to report on a positive percentile,\
    \ and\n   an inter-quantile range is appropriate to reflect both positive and\n\
    \   negative tails (e.g., 5% to 95%).  If the IPDV distribution is\n   symmetric\
    \ around a mean of zero, then it is sufficient to report on\n   the positive side\
    \ of the distribution.\n   With PDV, it is sufficient to specify the upper percentile\
    \ (e.g.,\n   99.9%).\n"
- title: 8.4.  Test Duration
  contents:
  - "8.4.  Test Duration\n   At several points in this memo, we have recommended use\
    \ of test\n   intervals on the order of minutes.  In their paper examining the\n\
    \   stability of Internet path properties [Zhang.Duff], Zhang et al.\n   concluded\
    \ that consistency was present on the order of minutes for\n   the performance\
    \ metrics considered (loss, delay, and throughput) for\n   the paths they measured.\n\
    \   The topic of temporal aggregation of performance measured in small\n   intervals\
    \ to estimate some larger interval is described in the Metric\n   Composition\
    \ Framework [IPPM-Framework].\n   The primary recommendation here is to test using\
    \ durations that are\n   similar in length to the session time of interest.  This\
    \ applies to\n   both IPDV and PDV, but is possibly more relevant for PDV since\
    \ the\n   duration determines how often the D_min will be determined, and the\n\
    \   size of the associated sample.\n"
- title: 8.5.  Clock Sync Options
  contents:
  - "8.5.  Clock Sync Options\n   As with one-way-delay measurements, local clock\
    \ synchronization is an\n   important matter for delay variation measurements.\n\
    \   There are several options available:\n   1.  Global Positioning System receivers\n\
    \   2.  In some parts of the world, Cellular Code Division Multiple\n       Access\
    \ (CDMA) systems distribute timing signals that are derived\n       from GPS and\
    \ traceable to UTC.\n   3.  Network Time Protocol [RFC1305] is a convenient choice\
    \ in many\n       cases, but usually offers lower accuracy than the options above.\n\
    \   When clock synchronization is inconvenient or subject to appreciable\n   errors,\
    \ then round-trip measurements may give a cumulative indication\n   of the delay\
    \ variation present on both directions of the path.\n   However, delay distributions\
    \ are rarely symmetrical, so it is\n   difficult to infer much about the one-way-delay\
    \ variation from round-\n   trip measurements.  Also, measurements on asymmetrical\
    \ paths add\n   complications for the one-way-delay metric.\n"
- title: 8.6.  Distinguishing Long Delay from Loss
  contents:
  - "8.6.  Distinguishing Long Delay from Loss\n   Lost and delayed packets are separated\
    \ by a waiting time threshold.\n   Packets that arrive at the measurement destination\
    \ within their\n   waiting time have finite delay and are not lost.  Otherwise,\
    \ packets\n   are designated lost and their delay is undefined.  Guidance on\n\
    \   setting the waiting time threshold may be found in [RFC2680] and\n   [IPPM-Reporting].\n\
    \   In essence, [IPPM-Reporting] suggests to use a long waiting time to\n   serve\
    \ network characterization and revise results for specific\n   application delay\
    \ thresholds as needed.\n"
- title: 8.7.  Accounting for Packet Reordering
  contents:
  - "8.7.  Accounting for Packet Reordering\n   Packet reordering, defined in [RFC4737],\
    \ is essentially an extreme\n   form of delay variation where the packet stream\
    \ arrival order differs\n   from the sending order.\n   PDV results are not sensitive\
    \ to packet arrival order, and are not\n   affected by reordering other than to\
    \ reflect the more extreme\n   variation.\n   IPDV results will change if reordering\
    \ is present because they are\n   sensitive to the sequence of delays of arriving\
    \ packets.  The main\n   example of this sensitivity is in the truncation of the\
    \ negative tail\n   of the distribution.\n   o  When there is no reordering, the\
    \ negative tail is limited by the\n      sending time spacing between packets.\n\
    \   o  If reordering occurs (and the reordered packets are not\n      discarded),\
    \ the negative tail can take on any value (in\n      principal).\n   In general,\
    \ measurement systems should have the capability to detect\n   when sequence has\
    \ changed.  If IPDV measurements are made without\n   regard to packet arrival\
    \ order, the IPDV will be under-reported when\n   reordering occurs.\n"
- title: 8.8.  Results Representation and Reporting
  contents:
  - "8.8.  Results Representation and Reporting\n   All of the references that discuss\
    \ or define delay variation suggest\n   ways to represent or report the results,\
    \ and interested readers\n   should review the various possibilities.\n   For\
    \ example, [IPPM-Reporting] suggests reporting a pseudo-range of\n   delay variation\
    \ based on calculating the difference between a high\n   percentile of delay and\
    \ the minimum delay.  The 99.9th percentile\n   minus the minimum will give a\
    \ value that can be compared with\n   objectives in [Y.1541].\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The security considerations that apply to any\
    \ active measurement of\n   live networks are relevant here as well.  See the\
    \ \"Security\n   Considerations\" sections in [RFC2330], [RFC2679], [RFC3393],\n\
    \   [RFC3432], and [RFC4656].\n   Security considerations do not contribute to\
    \ the selection of PDV or\n   IPDV forms of delay variation, because measurements\
    \ using these\n   metrics involve exactly the same security issues.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   The authors would like to thank Phil Chimento for his\
    \ suggestion to\n   employ the convention of conditional distributions of delay\
    \ to deal\n   with packet loss, and his encouragement to \"write the memo\" after\n\
    \   hearing \"the talk\" on this topic at IETF 65.  We also acknowledge\n   constructive\
    \ comments from Alan Clark, Loki Jorgenson, Carsten\n   Schmoll, and Robert Holley.\n"
- title: 11.  Appendix on Calculating the D(min) in PDV
  contents:
  - "11.  Appendix on Calculating the D(min) in PDV\n   Practitioners have raised\
    \ several questions that this section intends\n   to answer:\n   -  How is this\
    \ D_min calculated?  Is it DV(99%) as mentioned in\n      [Krzanowski]?\n   -\
    \  Do we need to keep all the values from the interval, then take the\n      minimum?\
    \  Or do we keep the minimum from previous intervals?\n   The value of D_min used\
    \ as the reference delay for PDV calculations\n   is simply the minimum delay\
    \ of all packets in the current sample.\n   The usual single value summary of\
    \ the PDV distribution is D_(99.9th\n   percentile) minus D_min.\n   It may be\
    \ appropriate to segregate sub-sets and revise the minimum\n   value during a\
    \ sample.  For example, if it can be determined with\n   certainty that the path\
    \ has changed by monitoring the Time to Live or\n   Hop Count of arriving packets,\
    \ this may be sufficient justification\n   to reset the minimum for packets on\
    \ the new path.  There is also a\n   simpler approach to solving this problem:\
    \ use samples collected over\n   short evaluation intervals (on the order of minutes).\
    \  Intervals with\n   path changes may be more interesting from the loss or one-way-delay\n\
    \   perspective (possibly failing to meet one or more SLAs), and it may\n   not\
    \ be necessary to conduct delay variation analysis.  Short\n   evaluation intervals\
    \ are preferred for measurements that serve as a\n   basis for troubleshooting,\
    \ since the results are available to report\n   soon after collection.\n   It\
    \ is not necessary to store all delay values in a sample when\n   storage is a\
    \ major concern.  D_min can be found by comparing each new\n   singleton value\
    \ with the current value and replacing it when\n   required.  In a sample with\
    \ 5000 packets, evaluation of the 99.9th\n   percentile can also be achieved with\
    \ limited storage.  One method\n   calls for storing the top 50 delay singletons\
    \ and revising the top\n   value list each time 50 more packets arrive.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]         Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n                     Requirement Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [RFC2330]         Paxson, V., Almes, G., Mahdavi,\
    \ J., and M. Mathis,\n                     \"Framework for IP Performance Metrics\"\
    , RFC 2330,\n                     May 1998.\n   [RFC2679]         Almes, G., Kalidindi,\
    \ S., and M. Zekauskas, \"A One-\n                     way Delay Metric for IPPM\"\
    , RFC 2679,\n                     September 1999.\n   [RFC2680]         Almes,\
    \ G., Kalidindi, S., and M. Zekauskas, \"A One-\n                     way Packet\
    \ Loss Metric for IPPM\", RFC 2680,\n                     September 1999.\n  \
    \ [RFC3393]         Demichelis, C. and P. Chimento, \"IP Packet Delay\n      \
    \               Variation Metric for IP Performance Metrics\n                \
    \     (IPPM)\", RFC 3393, November 2002.\n   [RFC3432]         Raisanen, V., Grotefeld,\
    \ G., and A. Morton,\n                     \"Network performance measurement with\
    \ periodic\n                     streams\", RFC 3432, November 2002.\n   [RFC4090]\
    \         Pan, P., Swallow, G., and A. Atlas, \"Fast Reroute\n               \
    \      Extensions to RSVP-TE for LSP Tunnels\", RFC 4090,\n                  \
    \   May 2005.\n   [RFC4656]         Shalunov, S., Teitelbaum, B., Karp, A., Boote,\
    \ J.,\n                     and M. Zekauskas, \"A One-way Active Measurement\n\
    \                     Protocol (OWAMP)\", RFC 4656, September 2006.\n   [RFC4737]\
    \         Morton, A., Ciavattone, L., Ramachandran, G.,\n                    \
    \ Shalunov, S., and J. Perser, \"Packet Reordering\n                     Metrics\"\
    , RFC 4737, November 2006.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [COM12.D98]       Clark, A., \"Analysis, measurement\
    \ and modelling of\n                     Jitter\", ITU-T Delayed Contribution\
    \ COM 12 - D98,\n                     January 2003.\n   [Casner]          Casner,\
    \ S., Alaettinoglu, C., and C. Kuan, \"A Fine-\n                     Grained View\
    \ of High Performance Networking\",\n                     NANOG 22, May 20-22,\
    \ 2001,\n                     <http://www.nanog.org/mtg-0105/agenda.html>.\n \
    \  [Cia03]           Ciavattone, L., Morton, A., and G. Ramachandran,\n      \
    \               \"Standardized Active Measurements on a Tier 1 IP\n          \
    \           Backbone\", IEEE Communications Magazine, p. 90-97,\n            \
    \         June 2003.\n   [Demichelis]      Demichelis, C., \"Packet Delay Variation\
    \ Comparison\n                     between ITU-T and IETF Draft Definitions\"\
    ,\n                     November 2000, <http://www.advanced.org/ippm/\n      \
    \               archive.3/att-0075/01-pap02.doc>.\n   [G.1020]          ITU-T,\
    \ \"Performance parameter definitions for the\n                     quality of\
    \ speech and other voiceband applications\n                     utilizing IP networks\"\
    , ITU-T\n                     Recommendation G.1020, 2006.\n   [G.1050]      \
    \    ITU-T, \"Network model for evaluating multimedia\n                     transmission\
    \ performance over Internet Protocol\",\n                     ITU-T Recommendation\
    \ G.1050, November 2005.\n   [I.356]           ITU-T, \"B-ISDN ATM Layer Cell\
    \ Transfer\n                     Performance\", ITU-T Recommendation I.356,\n\
    \                     March 2000.\n   [IPPM-Framework]  Morton, A., \"Framework\
    \ for Metric Composition\",\n                     Work in Progress, October 2008.\n\
    \   [IPPM-Reporting]  Morton, A., Ramachandran, G., and G. Maguluri,\n       \
    \              \"Reporting Metrics: Different Points of View\", Work\n       \
    \              in Progress, January 2009.\n   [IPPM-Spatial]    Morton, A. and\
    \ E. Stephan, \"Spatial Composition of\n                     Metrics\", Work in\
    \ Progress, July 2008.\n   [Krzanowski]      Presentation at IPPM, IETF-64, \"\
    Jitter Definitions:\n                     What is What?\", November 2005.\n  \
    \ [Li.Mills]        Li, Q. and D. Mills, \"The Implications of Short-\n      \
    \               Range Dependency on Delay Variation Measurement\",\n         \
    \            Second IEEE Symposium on Network Computing\n                    \
    \ and Applications, 2003.\n   [Morton06]        Morton, A., \"A Brief Jitter Metrics\
    \ Comparison, and\n                     not the last word, by any means...\",\
    \ slide\n                     presentation at IETF 65, IPPM Session, March 2006.\n\
    \   [RFC1305]         Mills, D., \"Network Time Protocol (Version 3)\n       \
    \              Specification, Implementation\", RFC 1305,\n                  \
    \   March 1992.\n   [RFC3357]         Koodli, R. and R. Ravikanth, \"One-way Loss\
    \ Pattern\n                     Sample Metrics\", RFC 3357, August 2002.\n   [RFC3550]\
    \         Schulzrinne, H., Casner, S., Frederick, R., and V.\n               \
    \      Jacobson, \"RTP: A Transport Protocol for Real-Time\n                 \
    \    Applications\", STD 64, RFC 3550, July 2003.\n   [Y.1540]          ITU-T,\
    \ \"Internet protocol data communication\n                     service - IP packet\
    \ transfer and availability\n                     performance parameters\", ITU-T\
    \ Recommendation\n                     Y.1540, November 2007.\n   [Y.1541]   \
    \       ITU-T, \"Network Performance Objectives for IP-Based\n               \
    \      Services\", ITU-T Recommendation Y.1541,\n                     February\
    \ 2006.\n   [Zhang.Duff]      Zhang, Y., Duffield, N., Paxson, V., and S.\n  \
    \                   Shenker, \"On the Constancy of Internet Path\n           \
    \          Properties\", Proceedings of ACM SIGCOMM Internet\n               \
    \      Measurement Workshop, November 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Al Morton\n   AT&T Labs\n   200 Laurel Avenue South\n\
    \   Middletown, NJ  07748\n   USA\n   Phone: +1 732 420 1571\n   Fax:   +1 732\
    \ 368 1192\n   EMail: acmorton@att.com\n   URI:   http://home.comcast.net/~acmacm/\n\
    \   Benoit Claise\n   Cisco Systems, Inc.\n   De Kleetlaan 6a b1\n   Diegem, \
    \  1831\n   Belgium\n   Phone: +32 2 704 5622\n   EMail: bclaise@cisco.com\n"
