- title: __initial_text__
  contents:
  - "          Network Working Group                                  J. Case\n  \
    \        Request for Comments: 1449                 SNMP Research, Inc.\n    \
    \                           for version 2 of the\n                   Simple Network\
    \ Management Protocol (SNMPv2)\n          Status of this Memo\n          This\
    \ RFC specifes an IAB standards track protocol for the\n          Internet community,\
    \ and requests discussion and suggestions\n          for improvements.  Please\
    \ refer to the current edition of the\n          \"IAB Official Protocol Standards\"\
    \ for the standardization\n          state and status of this protocol.  Distribution\
    \ of this memo\n          is unlimited.\n          Table of Contents\n       \
    \   RFC 1449        Transport Mappings for SNMPv2       April 1993\n         \
    \ 8 Serialization using the Basic Encoding Rules ..........   16\n          8.1\
    \ Usage Example .......................................   17\n          9 Acknowledgements\
    \ ......................................   18\n          10 References ...........................................\
    \   22\n          11 Security Considerations ..............................  \
    \ 24\n          12 Authors' Addresses ...................................   24\n\
    \          13 Security Considerations ..............................   25\n  \
    \        14 Authors' Addresses ...................................   25\n    \
    \      RFC 1449        Transport Mappings for SNMPv2       April 1993\n      \
    \    1.  Introduction\n          A network management system contains: several\
    \ (potentially\n          many) nodes, each with a processing entity, termed an\
    \ agent,\n          which has access to management instrumentation; at least one\n\
    \          management station; and, a management protocol, used to convey\n  \
    \        management information between the agents and management\n          stations.\
    \  Operations of the protocol are carried out under an\n          administrative\
    \ framework which defines both authentication and\n          authorization policies.\n\
    \          Network management stations execute management applications\n     \
    \     which monitor and control network elements.  Network elements\n        \
    \  are devices such as hosts, routers, terminal servers, etc.,\n          which\
    \ are monitored and controlled through access to their\n          management information.\n\
    \          The management protocol, version 2 of the Simple Network\n        \
    \  Management Protocol [1], may be used over a variety of\n          protocol\
    \ suites.  It is the purpose of this document to define\n          how the SNMPv2\
    \ maps onto an initial set of transport domains.\n          Other mappings may\
    \ be defined in the future.\n          Although several mappings are defined,\
    \ the mapping onto UDP is\n          the preferred mapping.  As such, to provide\
    \ for the greatest\n          level of interoperability, systems which choose\
    \ to deploy\n          other mappings should also provide for proxy service to\
    \ the\n          UDP mapping.\n          1.1.  A Note on Terminology\n       \
    \   For the purpose of exposition, the original Internet-standard\n          Network\
    \ Management Framework, as described in RFCs 1155, 1157,\n          and 1212,\
    \ is termed the SNMP version 1 framework (SNMPv1).\n          The current framework\
    \ is termed the SNMP version 2 framework\n          (SNMPv2).\n          RFC 1449\
    \        Transport Mappings for SNMPv2       April 1993\n          2.  Definitions\n\
    \          SNMPv2-TM DEFINITIONS ::= BEGIN\n          IMPORTS\n              snmpDomains,\
    \ snmpProxys\n                  FROM SNMPv2-SMI\n              TEXTUAL-CONVENTION\n\
    \                  FROM SNMPv2-TC;\n          -- SNMPv2 over UDP\n          snmpUDPDomain\
    \  OBJECT IDENTIFIER ::= { snmpDomains 1 }\n          -- for a SnmpUDPAddress\
    \ of length 6:\n          --\n          -- octets   contents        encoding\n\
    \          --  1-4     IP-address      network-byte order\n          --  5-6 \
    \    UDP-port        network-byte order\n          --\n          SnmpUDPAddress\
    \ ::= TEXTUAL-CONVENTION\n              DISPLAY-HINT \"1d.1d.1d.1d/2d\"\n    \
    \          STATUS       current\n              DESCRIPTION\n                 \
    \     \"Represents a UDP address.\"\n              SYNTAX       OCTET STRING (SIZE\
    \ (6))\n          RFC 1449        Transport Mappings for SNMPv2       April 1993\n\
    \          -- SNMPv2 over OSI\n          snmpCLNSDomain OBJECT IDENTIFIER ::=\
    \ { snmpDomains 2 }\n          snmpCONSDomain OBJECT IDENTIFIER ::= { snmpDomains\
    \ 3 }\n          -- for a SnmpOSIAddress of length m:\n          --\n        \
    \  -- octets   contents            encoding\n          --    1     length of NSAP\
    \      \"n\" as an unsigned-integer\n          --                            \
    \    (either 0 or from 3 to 20)\n          -- 2..(n+1) NSAP                concrete\
    \ binary representation\n          -- (n+2)..m TSEL                string of (up\
    \ to 64) octets\n          --\n          SnmpOSIAddress ::= TEXTUAL-CONVENTION\n\
    \              DISPLAY-HINT \"*1x:/1x:\"\n              STATUS       current\n\
    \              DESCRIPTION\n                      \"Represents an OSI transport-address.\"\
    \n              SYNTAX       OCTET STRING (SIZE (1 | 4..85))\n          RFC 1449\
    \        Transport Mappings for SNMPv2       April 1993\n          -- SNMPv2 over\
    \ DDP\n          snmpDDPDomain  OBJECT IDENTIFIER ::= { snmpDomains 4 }\n    \
    \      -- for a SnmpNBPAddress of length m:\n          --\n          --    octets\
    \      contents         encoding\n          --       1        length of object\
    \ \"n\" as an unsigned integer\n          --     2..(n+1)   object           string\
    \ of (up to 32) octets\n          --      n+2       length of type   \"p\" as\
    \ an unsigned integer\n          -- (n+3)..(n+2+p) type             string of\
    \ (up to 32) octets\n          --     n+3+p      length of zone   \"q\" as an\
    \ unsigned integer\n          -- (n+4+p)..m     zone             string of (up\
    \ to 32) octets\n          --\n          -- for comparison purposes, strings are\
    \ case-insensitive\n          --\n          -- all strings may contain any octet\
    \ other than 255 (hex ff)\n          --\n          SnmpNBPAddress ::= TEXTUAL-CONVENTION\n\
    \              STATUS       current\n              DESCRIPTION\n             \
    \         \"Represents an NBP name.\"\n              SYNTAX       OCTET STRING\
    \ (SIZE (3..99))\n          -- SNMPv2 over IPX\n          snmpIPXDomain  OBJECT\
    \ IDENTIFIER ::= { snmpDomains 5 }\n          -- for a SnmpIPXAddress of length\
    \ 12:\n          --\n          -- octets   contents            encoding\n    \
    \      --  1-4     network-number      network-byte order\n          --  5-10\
    \    physical-address    network-byte order\n          -- 11-12    socket-number\
    \       network-byte order\n          --\n          SnmpIPXAddress ::= TEXTUAL-CONVENTION\n\
    \              DISPLAY-HINT \"4x.1x:1x:1x:1x:1x:1x.2d\"\n              STATUS\
    \       current\n              DESCRIPTION\n                      \"Represents\
    \ an IPX address.\"\n              SYNTAX       OCTET STRING (SIZE (12))\n   \
    \       RFC 1449        Transport Mappings for SNMPv2       April 1993\n     \
    \     -- for proxy to community-based SNMPv1 (RFC 1157)\n          rfc1157Proxy\
    \   OBJECT IDENTIFIER ::= { snmpProxys 1 }\n          -- uses SnmpUDPAddress\n\
    \          rfc1157Domain  OBJECT IDENTIFIER ::= { rfc1157Proxy 1 }\n         \
    \ -- the community-based noAuth\n          rfc1157noAuth  OBJECT IDENTIFIER ::=\
    \ { rfc1157Proxy 2 }\n          END\n          RFC 1449        Transport Mappings\
    \ for SNMPv2       April 1993\n          3.  SNMPv2 over UDP\n          This is\
    \ the preferred transport mapping.\n          3.1.  Serialization\n          Each\
    \ instance of a message is serialized onto a single UDP[2]\n          datagram,\
    \ using the algorithm specified in Section 8.\n          3.2.  Well-known Values\n\
    \          Although the partyTable gives transport addressing information\n  \
    \        for an SNMPv2 party, it is suggested that administrators\n          configure\
    \ their SNMPv2 entities acting in an agent role to\n          listen on UDP port\
    \ 161.  Further, it is suggested that\n          notification sinks be configured\
    \ to listen on UDP port 162.\n          The partyTable also lists the maximum\
    \ message size which a\n          SNMPv2 party is willing to accept.  This value\
    \ must be at\n          least 484 octets.  Implementation of larger values is\n\
    \          encouraged whenever possible.\n          RFC 1449        Transport\
    \ Mappings for SNMPv2       April 1993\n          4.  SNMPv2 over OSI\n      \
    \    This is an optional transport mapping.\n          4.1.  Serialization\n \
    \         Each instance of a message is serialized onto a single TSDU\n      \
    \    [3,4] for the OSI Connectionless-mode Transport Service\n          (CLTS),\
    \ using the algorithm specified in Section 8.\n          4.2.  Well-known Values\n\
    \          Although the partyTable gives transport addressing information\n  \
    \        for an SNMPv2 party, it is suggested that administrators\n          configure\
    \ their SNMPv2 entities acting in an agent role to\n          listen on transport\
    \ selector \"snmp-l\" (which consists of six\n          ASCII characters), when\
    \ using a CL-mode network service to\n          realize the CLTS.  Further, it\
    \ is suggested that notification\n          sinks be configured to listen on transport\
    \ selector \"snmpt-l\"\n          (which consists of seven ASCII characters) when\
    \ using a CL-\n          mode network service to realize the CLTS.  Similarly,\
    \ when\n          using a CO-mode network service to realize the CLTS, the\n \
    \         suggested transport selectors are \"snmp-o\"  and \"snmpt-o\", for\n\
    \          agent and notification sink, respectively.\n          The partyTable\
    \ also lists the maximum message size which a\n          SNMPv2 party is willing\
    \ to accept.  This value must be at\n          least 484 octets.  Implementation\
    \ of larger values is\n          encouraged whenever possible.\n          RFC\
    \ 1449        Transport Mappings for SNMPv2       April 1993\n          5.  SNMPv2\
    \ over DDP\n          This is an optional transport mapping.\n          5.1. \
    \ Serialization\n          Each instance of a message is serialized onto a single\
    \ DDP\n          datagram [5], using the algorithm specified in Section 8.\n \
    \         5.2.  Well-known Values\n          SNMPv2 messages are sent using DDP\
    \ protocol type 8.  SNMPv2\n          entities acting in an agent role listens\
    \ on DDP socket number\n          8, whilst notification sinks listen on DDP socket\
    \ number 9.\n          Although the partyTable gives transport addressing information\n\
    \          for an SNMPv2 party, administrators must configure their\n        \
    \  SNMPv2 entities acting in an agent role to use NBP type \"SNMP\n          Agent\"\
    \ (which consists of ten ASCII characters), whilst\n          notification sinks\
    \ must be configured to use NBP type \"SNMP\n          Trap Handler\" (which consists\
    \ of seventeen ASCII characters).\n          The NBP name for agents and notification\
    \ sinks should be\n          stable - NBP names should not change any more often\
    \ than the\n          IP address of a typical TCP/IP node.  It is suggested that\
    \ the\n          NBP name be stored in some form of stable storage.\n        \
    \  The partyTable also lists the maximum message size which a\n          SNMPv2\
    \ party is willing to accept.  This value must be at\n          least 484 octets.\
    \  Implementation of larger values is\n          encouraged whenever possible.\n\
    \          5.3.  Discussion of AppleTalk Addressing\n          The AppleTalk protocol\
    \ suite has certain features not manifest\n          in the TCP/IP suite.  AppleTalk's\
    \ naming strategy and the\n          dynamic nature of address assignment can\
    \ cause problems for\n          SNMPv2 entities that wish to manage AppleTalk\
    \ networks.\n          TCP/IP nodes have an associated IP address which distinguishes\n\
    \          each from the other.  In contrast, AppleTalk nodes generally\n    \
    \      have no such characteristic.  The network-level address, while\n      \
    \    often relatively stable, can change at every reboot (or more\n          RFC\
    \ 1449        Transport Mappings for SNMPv2       April 1993\n          frequently).\n\
    \          Thus, when SNMPv2 is mapped over DDP, nodes are identified by\n   \
    \       a \"name\", rather than by an \"address\".  Hence, all AppleTalk\n   \
    \       nodes that implement this mapping are required to respond to\n       \
    \   NBP lookups and confirms (e.g., implement the NBP protocol\n          stub),\
    \ which guarantees that a mapping from NBP name to DDP\n          address will\
    \ be possible.\n          In determining the SNMP identity to register for an\
    \ SNMPv2\n          entity, it is suggested that the SNMP identity be a name which\n\
    \          is associated with other network services offered by the\n        \
    \  machine.\n          NBP lookups, which are used to map NBP names into DDP\n\
    \          addresses, can cause large amounts of network traffic as well\n   \
    \       as consume CPU resources.  It is also the case that the\n          ability\
    \ to perform an NBP lookup is sensitive to certain\n          network disruptions\
    \ (such as zone table inconsistencies) which\n          would not prevent direct\
    \ AppleTalk communications between two\n          SNMPv2 entities.\n         \
    \ Thus, it is recommended that NBP lookups be used infrequently,\n          primarily\
    \ to create a cache of name-to-address mappings.\n          These cached mappings\
    \ should then be used for any further SNMP\n          traffic.  It is recommended\
    \ that SNMPv2 entities acting in a\n          manager role should maintain this\
    \ cache between reboots.  This\n          caching can help minimize network traffic,\
    \ reduce CPU load on\n          the network, and allow for (some amount of) network\
    \ trouble\n          shooting when the basic name-to-address translation mechanism\n\
    \          is broken.\n          5.3.1.  How to Acquire NBP names\n          An\
    \ SNMPv2 entity acting in a manager role may have a pre-\n          configured\
    \ list of names of \"known\" SNMPv2 entities acting in\n          an agent role.\
    \  Similarly, an SNMPv2 entity acting in a\n          manager role might interact\
    \ with an operator.  Finally, an\n          SNMPv2 entity acting in a manager\
    \ role might communicate with\n          all SNMPv2 entities acting in an agent\
    \ role in a set of zones\n          or networks.\n          RFC 1449        Transport\
    \ Mappings for SNMPv2       April 1993\n          5.3.2.  When to Turn NBP names\
    \ into DDP addresses\n          When an SNMPv2 entity uses a cache entry to address\
    \ an SNMP\n          packet, it should attempt to confirm the validity mapping,\
    \ if\n          the mapping hasn't been confirmed within the last T1 seconds.\n\
    \          This cache entry lifetime, T1, has a minimum, default value of\n  \
    \        60 seconds, and should be configurable.\n          An SNMPv2 entity acting\
    \ in a manager role may decide to prime\n          its cache of names prior to\
    \ actually communicating with\n          another SNMPv2 entity.  In general, it\
    \ is expected that such\n          an entity may want to keep certain mappings\
    \ \"more current\"\n          than other mappings, e.g., those nodes which represent\
    \ the\n          network infrastructure (e.g., routers) may be deemed \"more\n\
    \          important\".\n          Note that an SNMPv2 entity acting in a manager\
    \ role should not\n          prime its entire cache upon initialization - rather,\
    \ it should\n          attempt resolutions over an extended period of time (perhaps\n\
    \          in some pre-determined or configured priority order).  Each of\n  \
    \        these resolutions might, in fact, be a wildcard lookup in a\n       \
    \   given zone.\n          An SNMPv2 entity acting in an agent role must never\
    \ prime its\n          cache.  Such an entity should do NBP lookups (or confirms)\n\
    \          only when it needs to send an SNMP trap.  When generating a\n     \
    \     response, such an entity does not need to confirm a cache\n          entry.\n\
    \          5.3.3.  How to Turn NBP names into DDP addresses\n          If the\
    \ only piece of information available is the NBP name,\n          then an NBP\
    \ lookup should be performed to turn that name into\n          a DDP address.\
    \  However, if there is a piece of stale\n          information, it can be used\
    \ as a hint to perform an NBP\n          confirm (which sends a unicast to the\
    \ network address which is\n          presumed to be the target of the name lookup)\
    \ to see if the\n          stale information is, in fact, still valid.\n     \
    \     An NBP name to DDP address mapping can also be confirmed\n          implicitly\
    \ using only SNMP transactions.  For example, an\n          SNMPv2 entity acting\
    \ in a manager role issuing a retrieval\n          operation could also retrieve\
    \ the relevant objects from the\n          NBP group [6] for the SNMPv2 entity\
    \ acting in an agent role.\n          RFC 1449        Transport Mappings for SNMPv2\
    \       April 1993\n          This information can then be correlated with the\
    \ source DDP\n          address of the response.\n          5.3.4.  What if NBP\
    \ is broken\n          Under some circumstances, there may be connectivity between\n\
    \          two SNMPv2 entities, but the NBP mapping machinery may be\n       \
    \   broken, e.g.,\n          o    the NBP FwdReq (forward NBP lookup onto local\
    \ attached\n               network) mechanism might be broken at a router on the\n\
    \               other entity's network; or,\n          o    the NBP BrRq (NBP\
    \ broadcast request) mechanism might be\n               broken at a router on\
    \ the entity's own network; or,\n          o    NBP might be broken on the other\
    \ entity's node.\n          An SNMPv2 entity acting in a manager role which is\
    \ dedicated\n          to AppleTalk management might choose to alleviate some\
    \ of\n          these failures by directly implementing the router portion of\n\
    \          NBP.  For example, such an entity might already know all the\n    \
    \      zones on the AppleTalk internet and the networks on which each\n      \
    \    zone appears.  Given an NBP lookup which fails, the entity\n          could\
    \ send an NBP FwdReq to the network in which the agent was\n          last located.\
    \  If that failed, the station could then send an\n          NBP LkUp (NBP lookup\
    \ packet) as a directed (DDP) multicast to\n          each network number on that\
    \ network.  Of the above (single)\n          failures, this combined approach\
    \ will solve the case where\n          either the local router's BrRq-to-FwdReq\
    \ mechanism is broken\n          or the remote router's FwdReq-to-LkUp mechanism\
    \ is broken.\n          RFC 1449        Transport Mappings for SNMPv2       April\
    \ 1993\n          6.  SNMPv2 over IPX\n          This is an optional transport\
    \ mapping.\n          6.1.  Serialization\n          Each instance of a message\
    \ is serialized onto a single IPX\n          datagram [7], using the algorithm\
    \ specified in Section 8.\n          6.2.  Well-known Values\n          SNMPv2\
    \ messages are sent using IPX packet type 4 (i.e., Packet\n          Exchange\
    \ Packet).\n          Although the partyTable gives transport addressing information\n\
    \          for an SNMPv2 party, it is suggested that administrators\n        \
    \  configure their SNMPv2 entities acting in an agent role to\n          listen\
    \ on IPX socket 36879 (900f hexadecimal).  Further, it is\n          suggested\
    \ that notification sinks be configured to listen on\n          IPX socket 36880\
    \ (9010 hexadecimal)\n          The partyTable also lists the maximum message\
    \ size which a\n          SNMPv2 party is willing to accept.  This value must\
    \ be at\n          least 546 octets.  Implementation of larger values is\n   \
    \       encouraged whenever possible.\n          RFC 1449        Transport Mappings\
    \ for SNMPv2       April 1993\n          7.  Proxy to SNMPv1\n          In order\
    \ to provide proxy to community-based SNMP [8], some\n          definitions are\
    \ necessary for both transport domains and\n          authentication protocols.\n\
    \          7.1.  Transport Domain: rfc1157Domain\n          The transport domain,\
    \ rfc1157Domain, indicates the transport\n          mapping for community-based\
    \ SNMP messages defined in RFC 1157.\n          When a party's transport domain\
    \ (partyTDomain) is\n          rfc1157Domain:\n          (1)  the party's transport\
    \ address (partyTAddress) shall be 6\n               octets long, the initial\
    \ 4 octets containing the IP-\n               address in network-byte order, and\
    \ the last two octets\n               containing the UDP port in network-byte\
    \ order; and,\n          (2)  the party's authentication protocol (partyAuthProtocol)\n\
    \               shall be rfc1157noAuth.\n          When a proxy relationship identifies\
    \ a proxy destination party\n          which has rfc1157Domain as its transport\
    \ domain:\n          (1)  the proxy source party (contextSrcPartyIndex) and proxy\n\
    \               context (contextProxyContext) components of the proxy\n      \
    \         relationship are irrelevant; and,\n          (2)  Section 3.1 of [9]\
    \ specifies the behavior of the proxy\n               agent.\n          7.2. \
    \ Authentication Algorithm: rfc1157noAuth\n          A party's authentication\
    \ protocol (partyAuthProtocol)\n          specifies the protocol and mechanism\
    \ by which the party\n          authenticates the integrity and origin of the\
    \ SNMPv1 or SNMPv2\n          PDUs it generates.  When a party's authentication\
    \ protocol is\n          rfc1157noAuth:\n          (1)  the party's public authentication\
    \ key (partyAuthPublic),\n               clock (partyAuthClock), and lifetime\
    \ (partyAuthLifetime)\n               are irrelevant; and,\n          RFC 1449\
    \        Transport Mappings for SNMPv2       April 1993\n          (2)  the party's\
    \ private authentication key\n               (partySecretsAuthPrivate) shall be\
    \ used as the 1157\n               community for the proxy destination, and shall\
    \ be at\n               least one octet in length.  (No maximum length is\n  \
    \             specified.)\n          Note that when setting the party's private\
    \ authentication key,\n          the exclusive-OR semantics specified in [10]\
    \ still apply.\n          RFC 1449        Transport Mappings for SNMPv2      \
    \ April 1993\n          8.  Serialization using the Basic Encoding Rules\n   \
    \       When the Basic Encoding Rules [11] are used for serialization:\n     \
    \     (1)  When encoding the length field, only the definite form is\n       \
    \        used; use of the indefinite form encoding is prohibited.\n          \
    \     Note that when using the definite-long form, it is\n               permissible\
    \ to use more than the minimum number of length\n               octets necessary\
    \ to encode the length field.\n          (2)  When encoding the value field, the\
    \ primitive form shall\n               be used for all simple types, i.e., INTEGER,\
    \ OCTET\n               STRING, OBJECT IDENTIFIER, and BIT STRING (either\n  \
    \             IMPLICIT or explicit).  The constructed form of encoding\n     \
    \          shall be used only for structured types, i.e., a SEQUENCE\n       \
    \        or an IMPLICIT SEQUENCE.\n          (3)  When a BIT STRING is serialized,\
    \ all named-bits are\n               transferred regardless of their truth-value.\
    \  Further, if\n               the number of named-bits is not an integral multiple\
    \ of\n               eight, then the fewest number of additional zero-valued\n\
    \               bits are transferred so that an integral multiple of\n       \
    \        eight bits is transferred.\n          These restrictions apply to all\
    \ aspects of ASN.1 encoding,\n          including the message wrappers, protocol\
    \ data units, and the\n          data objects they contain.\n          RFC 1449\
    \        Transport Mappings for SNMPv2       April 1993\n          8.1.  Usage\
    \ Example\n          As an example of applying the Basic Encoding Rules, suppose\n\
    \          one wanted to encode an instance of the GetBulkRequest-PDU\n      \
    \    [1]:\n               [5] IMPLICIT SEQUENCE {\n                       request-id\
    \      1414684022,\n                       non-repeaters   1,\n              \
    \         max-repetitions 2,\n                       variable-bindings {\n   \
    \                        { name sysUpTime,\n                             value\
    \ { unspecified NULL } },\n                           { name ipNetToMediaPhysAddress,\n\
    \                             value { unspecified NULL } },\n                \
    \           { name ipNetToMediaType,\n                             value { unspecified\
    \ NULL } }\n                       }\n                   }\n          Applying\
    \ the BER, this would be encoded (in hexadecimal) as:\n          [5] IMPLICIT\
    \ SEQUENCE          a5 82 00 39\n              INTEGER                    02 04\
    \ 52 54 5d 76\n              INTEGER                    02 01 01\n           \
    \   INTEGER                    02 01 02\n              SEQUENCE              \
    \     30 2b\n                  SEQUENCE               30 0b\n                \
    \      OBJECT IDENTIFIER  06 07 2b 06 01 02 01 01 03\n                      NULL\
    \               05 00\n                  SEQUENCE               30 0d\n      \
    \                OBJECT IDENTIFIER  06 09 2b 06 01 02 01 04 16 01 02\n       \
    \               NULL               05 00\n                  SEQUENCE         \
    \      30 0d\n                      OBJECT IDENTIFIER  06 09 2b 06 01 02 01 04\
    \ 16 01 04\n                      NULL               05 00\n          Note that\
    \ the initial SEQUENCE is not encoded using the\n          minimum number of length\
    \ octets.  (The first octet of the\n          length, 82, indicates that the length\
    \ of the content is\n          encoded in the next two octets.)\n          RFC\
    \ 1449        Transport Mappings for SNMPv2       April 1993\n          9.  Acknowledgements\n\
    \          The UDP-based mapping is based, in part, on RFC 1157.\n          The\
    \ OSI-based mapping is based, in part, on RFC 1283.\n          The DDP-based mapping\
    \ is based, in part, on earlier work by\n          Greg Minshall of Novell, Inc.,\
    \ and Mike Ritter of Apple\n          Computer, Inc.\n          The IPX-based\
    \ mapping is based, in part, on RFC 1298.\n          The section on proxy to community-based\
    \ SNMP is based on\n          earlier work that was based in part on a suggestion\
    \ by\n          Jonathan Biggar of Netlabs, Inc.\n          Finally, the comments\
    \ of the SNMP version 2 working group are\n          gratefully acknowledged:\n\
    \               Beth Adams, Network Management Forum\n               Steve Alexander,\
    \ INTERACTIVE Systems Corporation\n               David Arneson, Cabletron Systems\n\
    \               Toshiya Asaba\n               Fred Baker, ACC\n              \
    \ Jim Barnes, Xylogics, Inc.\n               Brian Bataille\n               Andy\
    \ Bierman, SynOptics Communications, Inc.\n               Uri Blumenthal, IBM\
    \ Corporation\n               Fred Bohle, Interlink\n               Jack Brown\n\
    \               Theodore Brunner, Bellcore\n               Stephen F. Bush, GE\
    \ Information Services\n               Jeffrey D. Case, University of Tennessee,\
    \ Knoxville\n               John Chang, IBM Corporation\n               Szusin\
    \ Chen, Sun Microsystems\n               Robert Ching\n               Chris Chiotasso,\
    \ Ungermann-Bass\n               Bobby A. Clay, NASA/Boeing\n               John\
    \ Cooke, Chipcom\n               Tracy Cox, Bellcore\n               Juan Cruz,\
    \ Datability, Inc.\n               David Cullerot, Cabletron Systems\n       \
    \        Cathy Cunningham, Microcom\n               James R. (Chuck) Davin, Bellcore\n\
    \               Michael Davis, Clearpoint\n          RFC 1449        Transport\
    \ Mappings for SNMPv2       April 1993\n               Mike Davison, FiberCom\n\
    \               Cynthia DellaTorre, MITRE\n               Taso N. Devetzis, Bellcore\n\
    \               Manual Diaz, DAVID Systems, Inc.\n               Jon Dreyer, Sun\
    \ Microsystems\n               David Engel, Optical Data Systems\n           \
    \    Mike Erlinger, Lexcel\n               Roger Fajman, NIH\n               Daniel\
    \ Fauvarque, Sun Microsystems\n               Karen Frisa, CMU\n             \
    \  Shari Galitzer, MITRE\n               Shawn Gallagher, Digital Equipment Corporation\n\
    \               Richard Graveman, Bellcore\n               Maria Greene, Xyplex,\
    \ Inc.\n               Michel Guittet, Apple\n               Robert Gutierrez,\
    \ NASA\n               Bill Hagerty, Cabletron Systems\n               Gary W.\
    \ Haney, Martin Marietta Energy Systems\n               Patrick Hanil, Nokia Telecommunications\n\
    \               Matt Hecht, SNMP Research, Inc.\n               Edward A. Heiner,\
    \ Jr., Synernetics Inc.\n               Susan E. Hicks, Martin Marietta Energy\
    \ Systems\n               Geral Holzhauer, Apple\n               John Hopprich,\
    \ DAVID Systems, Inc.\n               Jeff Hughes, Hewlett-Packard\n         \
    \      Robin Iddon, Axon Networks, Inc.\n               David Itusak\n       \
    \        Kevin M. Jackson, Concord Communications, Inc.\n               Ole J.\
    \ Jacobsen, Interop Company\n               Ronald Jacoby, Silicon Graphics, Inc.\n\
    \               Satish Joshi, SynOptics Communications, Inc.\n               Frank\
    \ Kastenholz, FTP Software\n               Mark Kepke, Hewlett-Packard\n     \
    \          Ken Key, SNMP Research, Inc.\n               Zbiginew Kielczewski,\
    \ Eicon\n               Jongyeoi Kim\n               Andrew Knutsen, The Santa\
    \ Cruz Operation\n               Michael L. Kornegay, VisiSoft\n             \
    \  Deirdre C. Kostik, Bellcore\n               Cheryl Krupczak, Georgia Tech\n\
    \               Mark S. Lewis, Telebit\n               David Lin\n           \
    \    David Lindemulder, AT&T/NCR\n               Ben Lisowski, Sprint\n      \
    \         David Liu, Bell-Northern Research\n          RFC 1449        Transport\
    \ Mappings for SNMPv2       April 1993\n               John Lunny, The Wollongong\
    \ Group\n               Robert C. Lushbaugh Martin, Marietta Energy Systems\n\
    \               Michael Luufer, BBN\n               Carl Madison, Star-Tek, Inc.\n\
    \               Keith McCloghrie, Hughes LAN Systems\n               Evan McGinnis,\
    \ 3Com Corporation\n               Bill McKenzie, IBM Corporation\n          \
    \     Donna McMaster, SynOptics Communications, Inc.\n               John Medicke,\
    \ IBM Corporation\n               Doug Miller, Telebit\n               Dave Minnich,\
    \ FiberCom\n               Mohammad Mirhakkak, MITRE\n               Rohit Mital,\
    \ Protools\n               George Mouradian, AT&T Bell Labs\n               Patrick\
    \ Mullaney, Cabletron Systems\n               Dan Myers, 3Com Corporation\n  \
    \             Rina Nathaniel, Rad Network Devices Ltd.\n               Hien V.\
    \ Nguyen, Sprint\n               Mo Nikain\n               Tom Nisbet\n      \
    \         William B. Norton, MERIT\n               Steve Onishi, Wellfleet Communications,\
    \ Inc.\n               David T. Perkins, SynOptics Communications, Inc.\n    \
    \           Carl Powell, BBN\n               Ilan Raab, SynOptics Communications,\
    \ Inc.\n               Richard Ramons, AT&T\n               Venkat D. Rangan,\
    \ Metric Network Systems, Inc.\n               Louise Reingold, Sprint\n     \
    \          Sam Roberts, Farallon Computing, Inc.\n               Kary Robertson,\
    \ Concord Communications, Inc.\n               Dan Romascanu, Lannet Data Communications\
    \ Ltd.\n               Marshall T. Rose, Dover Beach Consulting, Inc.\n      \
    \         Shawn A. Routhier, Epilogue Technology Corporation\n               Chris\
    \ Rozman\n               Asaf Rubissa, Fibronics\n               Jon Saperia,\
    \ Digital Equipment Corporation\n               Michael Sapich\n             \
    \  Mike Scanlon, Interlan\n               Sam Schaen, MITRE\n               John\
    \ Seligson, Ultra Network Technologies\n               Paul A. Serice, Corporation\
    \ for Open Systems\n               Chris Shaw, Banyan Systems\n              \
    \ Timon Sloane\n               Robert Snyder, Cisco Systems\n               Joo\
    \ Young Song\n          RFC 1449        Transport Mappings for SNMPv2       April\
    \ 1993\n               Roy Spitier, Sprint\n               Einar Stefferud, Network\
    \ Management Associates\n               John Stephens, Cayman Systems, Inc.\n\
    \               Robert L. Stewart, Xyplex, Inc. (chair)\n               Kaj Tesink,\
    \ Bellcore\n               Dean Throop, Data General\n               Ahmet Tuncay,\
    \ France Telecom-CNET\n               Maurice Turcotte, Racal Datacom\n      \
    \         Warren Vik, INTERACTIVE Systems Corporation\n               Yannis Viniotis\n\
    \               Steven L. Waldbusser, Carnegie Mellon Universitty\n          \
    \     Timothy M. Walden, ACC\n               Alice Wang, Sun Microsystems\n  \
    \             James Watt, Newbridge\n               Luanne Waul, Timeplex\n  \
    \             Donald E. Westlake III, Digital Equipment Corporation\n        \
    \       Gerry White\n               Bert Wijnen, IBM Corporation\n           \
    \    Peter Wilson, 3Com Corporation\n               Steven Wong, Digital Equipment\
    \ Corporation\n               Randy Worzella, IBM Corporation\n              \
    \ Daniel Woycke, MITRE\n               Honda Wu\n               Jeff Yarnell,\
    \ Protools\n               Chris Young, Cabletron\n               Kiho Yum, 3Com\
    \ Corporation\n          RFC 1449        Transport Mappings for SNMPv2       April\
    \ 1993\n          10.  References\n          [1]  Case, J., McCloghrie, K., Rose,\
    \ M., and Waldbusser, S.,\n               \"Protocol Operations for version 2\
    \ of the Simple Network\n               Management Protocol (SNMPv2)\", RFC 1448,\
    \ SNMP Research,\n               Inc., Hughes LAN Systems, Dover Beach Consulting,\
    \ Inc.,\n               Carnegie Mellon University, April 1993.\n          [2]\
    \  Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n               USC/Information\
    \ Sciences Institute, August 1980.\n          [3]  Information processing systems\
    \ - Open Systems\n               Interconnection - Transport Service Definition,\n\
    \               International Organization for Standardization.\n            \
    \   International Standard 8072, (June, 1986).\n          [4]  Information processing\
    \ systems - Open Systems\n               Interconnection - Transport Service Definition\
    \ - Addendum\n               1: Connectionless-mode Transmission, International\n\
    \               Organization for Standardization.  International Standard\n  \
    \             8072/AD 1, (December, 1986).\n          [5]  G. Sidhu, R. Andrews,\
    \ A. Oppenheimer, Inside AppleTalk\n               (second edition).  Addison-Wesley,\
    \ 1990.\n          [6]  Waldbusser, S., \"AppleTalk Management Information Base\"\
    ,\n               RFC 1243, Carnegie Mellon University, July 1991.\n         \
    \ [7]  Network System Technical Interface Overview.  Novell,\n               Inc,\
    \ (June, 1989).\n          [8]  Case, J., Fedor, M., Schoffstall, M., Davin, J.,\
    \ \"Simple\n               Network Management Protocol\", STD 15, RFC 1157, SNMP\n\
    \               Research, Performance Systems International, MIT\n           \
    \    Laboratory for Computer Science, May 1990.\n          [9]  Case, J., McCloghrie,\
    \ K., Rose, M., and Waldbusser, S.,\n               \"Coexistence between version\
    \ 1 and version 2 of the\n               Internet-standard Network Management\
    \ Framework\", RFC\n               1452, SNMP Research, Inc., Hughes LAN Systems,\
    \ Dover\n               Beach Consulting, Inc., Carnegie Mellon University, April\n\
    \               1993.\n          [10] McCloghrie, K., and Galvin, J., \"Party\
    \ MIB for version 2\n               of the Simple Network Management Protocol\
    \ (SNMPv2)\", RFC\n          RFC 1449        Transport Mappings for SNMPv2   \
    \    April 1993\n               1447, Hughes LAN Systems, Trusted Information\
    \ Systems,\n               April 1993.\n          [11] Information processing\
    \ systems - Open Systems\n               Interconnection - Specification of Basic\
    \ Encoding Rules\n               for Abstract Syntax Notation One (ASN.1), International\n\
    \               Organization for Standardization.  International Standard\n  \
    \             8825, (December, 1987).\n          RFC 1449        Transport Mappings\
    \ for SNMPv2       April 1993\n          11.  Security Considerations\n      \
    \    Security issues are not discussed in this memo.\n          12.  Authors'\
    \ Addresses\n               Jeffrey D. Case\n               SNMP Research, Inc.\n\
    \               3001 Kimberlin Heights Rd.\n               Knoxville, TN  37920-9716\n\
    \               US\n               Phone: +1 615 573 1434\n               Email:\
    \ case@snmp.com\n               Keith McCloghrie\n               Hughes LAN Systems\n\
    \               1225 Charleston Road\n               Mountain View, CA  94043\n\
    \               US\n               Phone: +1 415 966 7934\n               Email:\
    \ kzm@hls.com\n               Marshall T. Rose\n               Dover Beach Consulting,\
    \ Inc.\n               420 Whisman Court\n               Mountain View, CA  94043-2186\n\
    \               US\n               Phone: +1 415 968 1052\n               Email:\
    \ mrose@dbc.mtview.ca.us\n               Steven Waldbusser\n               Carnegie\
    \ Mellon University\n               4910 Forbes Ave\n               Pittsburgh,\
    \ PA  15213\n               US\n               Phone: +1 412 268 6628\n      \
    \         Email: waldbusser@cmu.edu\n"
