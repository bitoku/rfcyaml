Abstract This document describes the representation of a session authorization policy element for supporting policy based per session authorization and admission control.
The goal of session authorization is to allow the exchange of information between network elements in order to authorize the use of resources for a service and to co ordinate actions between the signaling and transport planes.
This document describes how a process on a system authorizes the reservation of resources by a host and then provides that host with a session authorization policy element which can be inserted into a resource reservation protocol (e.g., the Resource ReSerVation Protocol (RSVP) PATH message) to facilitate proper and secure reservation of those resources within the network.
We describe the encoding of session authorization information as a policy element conforming to the format of a Policy Data object (RFC 2750) and provide details relating to operations, processing rules and error scenarios.
Conventions used in this document The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC 2119].
Introduction RSVP [RFC 2205] is one example of a resource reservation protocol that is used by a host to request specific services from the network for particular application data streams or flows.
RSVP requests will generally result in resources being reserved in each router along the data path.
RSVP allows users to obtain preferential access to network resources, under the control of an admission control mechanism.
Such admission control is often based on user or application identity
[RFC 3182], however, it is also valuable to provide the ability for per session admission control.
In order to allow for per session admission control, it is necessary to provide a mechanism for ensuring use of resources by a host has been properly authorized before allowing the reservation of those resources.
In order to meet this requirement, there must be information in the resource reservation message which may be used to verify the validity of the reservation request.
This can be done by providing the host with a session authorization policy element which is inserted into the resource reservation message and verified by the network.
This document describes the session authorization policy element (AUTH SESSION) used to convey information about the resources authorized for use by a session.
The host must obtain an AUTH SESSION element from an authorizing entity via a session signaling protocol such as SIP [RFC 3261].
The host then inserts the AUTH SESSION element into the resource reservation message to allow verification of the network resource request; in the case of RSVP, this element MUST be encapsulated in the Policy Data object [RFC  2750] of an RSVP PATH message.
Network elements verify the request and then process the resource reservation message based on admission policy.
[RFC 3521] describes a framework in which a session authorization policy element may be utilized to contain information relevant to the network's decision to grant a reservation request.
Policy Element for Session Authorization 3.1 Policy Data Object Format
The Session Authorization policy element conforms to the format of a POLICY DATA object which contains policy information and is carried by policy based admission protocols such as RSVP.
A detailed description of the POLICY DATA object can be found in "RSVP Extensions for Policy Control" [RFC 2750].
3.2 Session Authorization Policy Element
In this section we describe a policy element (PE) called session authorization (AUTH SESSION).
The AUTH SESSION policy element contains a list of fields which describe the session, along with other attributes.
The length of the policy element (including the Length and P Type) is in number of octets
(MUST be in multiples of 4) and indicates the end of the session authorization information block.
P Type: 16 bits (Session Authorization Type)
The Policy element type (P type) of this element.
The Internet Assigned Numbers Authority (IANA) acts as a registry for policy element types as described in [RFC 2750].
The session authorization attribute list is a collection of objects which describes the session and provides other information necessary to verify the resource reservation request.
An initial set of valid objects is described in Section 3.3.
3.3 Session Authorization Attributes A session authorization attribute may contain a variety of information and has both an attribute type and subtype.
The attribute itself MUST be a multiple of 4 octets in length, and any attributes that are not a multiple of 4 octets long MUST be padded to a 4 octet boundary.
All padding bytes MUST have a value of zero.
The length field is two octets and indicates the actual length of the attribute (including Length, X Type and SubType fields) in number of octets.
The length does NOT include any bytes padding to the value field to make the attribute a multiple of 4 octets long.
X Type: 8 bits Session authorization attribute type (X Type) field is one octet.
IANA acts as a registry for X Types as described in section 7, IANA Considerations.
Initially, the registry contains the following X Types:
The unique identifier of the entity which authorized the session.
Unique identifier for this session.
The starting time for the session.
The end time for the session.
The resources which the user is authorized to request.
AUTHENTICATION DATA  Authentication data of the session authorization policy element.
SubType: 8 bits Session authorization attribute sub type is one octet in length.
The value of the SubType depends on the X Type.
Authorizing Entity Identifier AUTH ENT ID is used to identify the entity which authorized the initial service request and generated the session authorization policy element.
The AUTH ENT ID may be represented in various formats, and the SubType is used to define the format for the ID.
Length Length of the attribute, which MUST be > 4.
X Type AUTH ENT ID SubType
The following sub types for AUTH ENT ID are defined.
IANA acts as a registry for AUTH ENT ID sub types as described in section 7, IANA Considerations.
The Distinguished Name of the subject of the certificate as defined in RFC 2253 as a UTF 8 string.
The PGP digital certificate of the authorizing entity as defined in RFC 2440.
OctetString Contains the authorizing entity identifier.
3.3.2 Session Identifier SESSION ID is a unique identifier used by the authorizing entity to identify the request.
It may be used for a number of purposes, including replay detection, or to correlate this request to a policy decision entry made by the authorizing entity.
For example, the SESSION ID can be based on simple sequence numbers or on a standard NTP timestamp.
Length Length of the attribute, which MUST be > 4.
X Type SESSION ID SubType
No subtypes for SESSION ID are currently defined; this field MUST be set to zero.
The authorizing entity is the only network entity that needs to interpret the contents of the SESSION ID therefore the contents and format are implementation dependent.
OctetString Contains the session identifier.
3.3.3 Source Address SOURCE ADDR is used to identify the source address specification of the authorized session.
This X Type may be useful in some scenarios to make sure the resource request has been authorized for that particular source address and/or port.
Length Length of the attribute, which MUST be > 4.
X Type SOURCE ADDR SubType
The following sub types for SOURCE ADDR are defined.
IANA acts as a registry for SOURCE ADDR sub types as described in section 7, IANA Considerations.
OctetString The OctetString contains the source address information.
In scenarios where a source address is required (see Section 5), at least one of the subtypes 1 through 2 (inclusive) MUST be included in every Session Authorization Data Policy Element.
Multiple SOURCE ADDR attributes MAY be included if multiple addresses have been authorized.
The source address field of the resource reservation datagram (e.g., RSVP PATH) MUST match one of the SOURCE ADDR attributes contained in this Session Authorization Data Policy Element.
At most, one instance of subtype 3 MAY be included in every Session Authorization Data Policy Element.
At most, one instance of subtype 4 MAY be included in every Session Authorization Data Policy Element.
Inclusion of a subtype 3 attribute does not prevent inclusion of a subtype 4 attribute (i.e., both UDP and TCP ports may be authorized).
If no PORT attributes are specified, then all ports are considered valid; otherwise, only the specified ports are authorized for use.
Every source address and port list must be included in a separate SOURCE ADDR attribute.
3.3.4 Destination Address DEST ADDR is used to identify the destination address of the authorized session.
This X Type may be useful in some scenarios to make sure the resource request has been authorized for that particular destination address and/or port.
Length Length of the attribute, which MUST be > 4.
X Type DEST ADDR SubType
The following sub types for DEST ADDR are defined.
IANA acts as a registry for DEST ADDR sub types as described in section 7, IANA Considerations.
OctetString The OctetString contains the destination address specification.
In scenarios where a destination address is required (see Section 5), at least one of the subtypes 1 through 2 (inclusive) MUST be included in every Session Authorization Data Policy Element.
Multiple DEST ADDR attributes MAY be included if multiple addresses have been authorized.
The destination address field of the resource reservation datagram (e.g., RSVP PATH) MUST match one of the DEST ADDR attributes contained in this Session Authorization Data Policy Element.
At most, one instance of subtype 3 MAY be included in every Session Authorization Data Policy Element.
At most, one instance of subtype 4 MAY be included in every Session Authorization Data Policy Element.
Inclusion of a subtype 3 attribute does not prevent inclusion of a subtype 4 attribute (i.e., both UDP and TCP ports may be authorized).
If no PORT attributes are specified, then all ports are considered valid; otherwise, only the specified ports are authorized for use.
Every destination address and port list must be included in a separate DEST ADDR attribute.
3.3.5 Start time START TIME is used to identify the start time of the authorized session and can be used to prevent replay attacks.
If the AUTH SESSION policy element is presented in a resource request, the network SHOULD reject the request if it is not received within a few seconds of the start time specified.
Length Length of the attribute, which MUST be > 4.
The following sub types for START TIME are defined.
IANA acts as a registry for START TIME sub types as described in section 7, IANA Considerations.
OctetString The OctetString contains the start time.
3.3.6 End time END TIME is used to identify the end time of the authorized session and can be used to limit the amount of time that resources are authorized for use (e.g., in prepaid session scenarios).
Length Length of the attribute, which MUST be > 4.
The following sub types for END TIME are defined.
IANA acts as a registry for END TIME sub types as described in section 7, IANA Considerations.
OctetString The OctetString contains the end time.
3.3.7 Resources Authorized RESOURCES is used to define the characteristics of the authorized session.
This X Type may be useful in some scenarios to specify the specific resources authorized to ensure the request fits the authorized specifications.
Length Length of the attribute, which MUST be > 4.
The following sub types for RESOURCES are defined.
IANA acts as a registry for RESOURCES sub types as described in section 7, IANA Considerations.
Initially, the registry contains the following sub types for RESOURCES: 1  BANDWIDTH
OctetString The OctetString contains the resources specification.
In scenarios where a resource specification is required (see Section 5), at least one of the subtypes 1 through 4 (inclusive) MUST be included in every Session Authorization Data Policy Element.
Multiple RESOURCE attributes MAY be included if multiple types of resources have been authorized (e.g., DSCP and BANDWIDTH).
The AUTHENTICATION DATA attribute contains the authentication data of the AUTH SESSION policy element and signs all the data in the policy element up to the AUTHENTICATION DATA.
If the AUTHENTICATION DATA attribute has been included in the AUTH SESSION policy element, it MUST be the last attribute in the list.
The algorithm used to compute the authentication data depends on the AUTH ENT ID SubType field.
See Section 4 entitled Integrity of the AUTH SESSION policy element.
A summary of AUTHENTICATION DATA attribute format is described below.
Length Length of the attribute, which MUST be > 4.
X Type AUTHENTICATION DATA SubType
No sub types for AUTHENTICATION DATA are currently defined.
This field MUST be set to 0.
OctetString The OctetString contains the authentication data of the AUTH SESSION.
Integrity of the AUTH SESSION policy element This section describes how to ensure the integrity of the policy element is preserved.
In shared symmetric key environments, the AUTH ENT ID MUST be of subtypes:
IPV4 ADDRESS, IPV6 ADDRESS, FQDN, ASCII DN, UNICODE DN or URI.
An example AUTH SESSION policy element is shown below.
Operational Setting using shared symmetric keys
both the Authorizing Entity and the Network router/PDP are provisioned with shared symmetric keys and with policies detailing which algorithm to be used for computing the authentication data along with the expected length of the authentication data for that particular algorithm.
Key maintenance is outside the scope of this document, but AUTH SESSION implementations MUST at least provide the ability to manually configure keys and their parameters locally.
The key used to produce the authentication data is identified by the AUTH ENT ID field.
Since multiple keys may be configured for a particular AUTH ENT ID value, the first 32 bits of the AUTH DATA field MUST be a key ID to be used to identify the appropriate key.
Each key must also be configured with lifetime parameters for the time period within which it is valid as well as an associated cryptographic algorithm parameter specifying the algorithm to be used with the key.
At a minimum, all AUTH SESSION implementations MUST support the HMAC MD5 128 [RFC 2104], [RFC 1321] cryptographic algorithm for computing the authentication data.
New algorithms may be added by the IETF standards process.
It is good practice to regularly change keys.
Keys MUST be configurable such that their lifetimes overlap allowing smooth transitions between keys.
At the midpoint of the lifetime overlap between two keys, senders should transition from using the current key to the next/longer lived key.
Meanwhile, receivers simply accept any identified key received within its configured lifetime and reject those that are not.
In a Kerberos environment, the AUTH ENT ID MUST be of the subtype KRB PRINCIPAL.
The KRB PRINCIPAL field is defined as the Fully Qualified Kerberos Principal name of the authorizing entity.
Kerberos [RFC 1510] authentication uses a trusted third party (the Kerberos Distribution Center KDC) to provide for authentication of the AUTH SESSION to a network server.
It is assumed that a KDC is present and both host and verifier of authentication information (authorizing entity and router/PDP) implement Kerberos authentication.
An example of the Kerberos AUTH DATA policy element is shown below.
An authorizing entity is configured to construct the AUTH SESSION policy element that designates use of the Kerberos authentication method (KRB PRINCIPAL) as defined in RFC 1510.
Upon reception of the resource reservation request, the router/PDP contacts the local KDC, with a KRB AS REQ message, to request credentials for the authorizing entity (principal@realm).
In this request, the client (router/PDP) sends (in cleartext) its own identity and the identity of the server (the authorizing entity taken from the AUTH ENT ID field) for which it is requesting credentials.
The local KDC responds with these credentials in a KRB AS REP message, encrypted in the client's key.
The credentials consist of 1) a "ticket" for the server and 2) a temporary encryption key (often called a "session key").
The router/PDP uses the ticket to access the authorizing entity with a KRB AP REQ message.
The session key (now shared by the router/PDP and the authorizing entity) is used to authenticate the router/PDP, and is used to authenticate the authorizing entity.
The session key is an encryption key and is also used to encrypt further communication between the two parties.
The authorizing entity responds by sending a concatenated message of a KRB AP REP and a KRB SAFE.
The KRB AP REP is used to authenticate the authorizing entity.
The KRB SAFE message contains the authentication data in the safe body field.
The authentication data must be either a 16 byte MD5 hash or 20 byte SHA 1 hash of all data in the AUTH SESSION policy element up to the AUTHENTICATION DATA (note that when using Kerberos the AUTH SESSION PE should not include AUTHENTICATION DATA as this is sent in the KRB SAFE message).
The router/PDP independently computes the hash, and compares it with the received hash in the user data field of the KRB SAFE BODY [RFC 1510].
At a minimum, all AUTH SESSION implementations using Kerberos MUST support the Kerberos des cbc md5 encryption type [RFC 1510] (for encrypted data in tickets and Kerberos messages) and the Kerberos rsa md5 des checksum type [RFC 1510] (for the KRB SAFE checksum) checksum.
New algorithms may be added by the IETF standards process.
Triple DES encryption is supported in many Kerberos implementations (although not specified in [RFC 1510]), and SHOULD be used over single DES.
For cases where the authorizing entity is in a different realm (i.e., administrative domain, organizational boundary), the router/PDP needs to fetch a cross realm Ticket Granting Ticket (TGT) from its local KDC.
This TGT can be used to fetch authorizing entity tickets from the KDC in the remote realm.
Note that for performance considerations, tickets are typically cached for extended periods.
In a public key environment, the AUTH ENT ID MUST be of the subtypes: X509 V3 CERT or PGP CERT.
The authentication data is used for authenticating the authorizing entity.
An example of the public key AUTH SESSION policy element is shown below.
Operational Setting for public key based authentication
Public key based authentication assumes the following:
Authorizing entities have a pair of keys (private key and public key).
Private key is secured with the authorizing entity.
Public keys are stored in digital certificates and a trusted party, certificate authority (CA) issues these digital certificates.
The verifier (PDP or router) has the ability to verify the digital certificate.
Authorizing entity uses its private key to generate AUTHENTICATION DATA.
Authenticators (router, PDP) use the authorizing entity's public key (stored in the digital certificate) to verify and authenticate the policy element.
4.3.1.1 X.509 V3 digital certificates
When the AUTH ENT ID is of type X509 V3 CERT, AUTHENTICATION DATA MUST be generated following these steps:  A Signed data is constructed as defined in section 5 of CMS [RFC 3369].
A digest is computed on the content (as specified in section 6.1) with a signer specific message digest algorithm.
The certificates field contains the chain of authorizing entity's X.509 V3 digital certificates.
The certificate revocation list is defined in the crls field.
The digest output is digitally signed following section 8 of RFC 3447, using the signer's private key.
When the AUTH ENT ID is of type X509 V3 CERT, verification MUST be done following these steps:  Parse the X.509 V3 certificate to extract the distinguished name of the issuer of the certificate.
Certification Path Validation is performed as defined in section 6 of RFC 3280.
Parse through the Certificate Revocation list to verify that the received certificate is not listed.
Once  the X.509 V3 certificate is validated, the public key of the authorizing entity can be extracted from the certificate.
Extract the digest algorithm and the length of the digested data by parsing the CMS signed data.
The recipient independently computes the message digest.
This message digest and the signer's public key are used to verify the signature value.
This verification ensures integrity, non repudiation and data origin.
4.3.1.2 PGP digital certificates When the AUTH ENT ID is of type PGP CERT, AUTHENTICATION DATA MUST be generated following these steps:  AUTHENTICATION DATA contains a Signature Packet as defined in section 5.2.3 of RFC 2440.
In summary:  Compute the hash of all data in the AUTH SESSION policy element up to the AUTHENTICATION DATA.
The hash output is digitally signed following section 8 of RFC 3447, using the signer's private key.
When the AUTH ENT ID is of type PGP CERT, verification MUST be done following these steps:  Validate the certificate.
Once the PGP certificate is validated, the public key of the authorizing entity can be extracted from the certificate.
Extract the hash algorithm and the length of the hashed data by parsing the PGP signature packet.
The recipient independently computes the message digest.
This message digest and the signer's public key are used to verify the signature value.
This verification ensures integrity, non repudiation and data origin.
Framework [RFC 3521] describes a framework in which the AUTH SESSION policy element may be utilized to transport information required for authorizing resource reservation for media flows.
[RFC 3521] introduces 4 different models: 1  the coupled model 2  the associated model with one policy server 3  the associated model with two policy servers 4  the non associated model.
The fields that are required in an AUTH SESSION policy element dependent on which of the models is used.
The coupled model In the Coupled Model, the only information that MUST be included in the policy element is the SESSION ID; it is used by the Authorizing Entity to correlate the resource reservation request with the media authorized during session set up.
Since the End Host is assumed to be untrusted, the Policy Server SHOULD take measures to ensure that the integrity of the SESSION ID is preserved in transit; the exact mechanisms to be used and the format of the SESSION ID are implementation dependent.
The associated model with one policy server In this model
, the contents of the AUTH SESSION policy element MUST include:  A session identifier SESSION ID.
This is information that the authorizing entity can use to correlate the resource reservation request with the media authorized during session set up.
The identity of the authorizing entity AUTH ENT ID.
This information is used by the Edge Router to determine which authorizing entity (Policy Server) should be used to solicit resource policy decisions.
In some environments, an Edge Router may have no means for determining if the identity refers to a legitimate Policy Server within its domain.
In order to protect against redirection of authorization requests to a bogus authorizing entity, the AUTH SESSION MUST also include:  AUTHENTICATION DATA.
This authentication data is calculated over all other fields of the AUTH SESSION policy element.
The associated model with two policy servers
The content of the AUTH SESSION Policy Element is identical to the associated model with one policy server.
In this model, the AUTH SESSION MUST contain sufficient information to allow the Policy Server to make resource policy decisions autonomously from the authorizing entity.
The policy element is created using information about the session by the authorizing entity.
The information in the AUTH SESSION policy element MUST include:  Calling party IP address or Identity
(e.g., FQDN) SOURCE ADDR X TYPE  Called party IP address or Identity (e.g., FQDN
) DEST ADDR X TYPE
The characteristics of (each of)
the media stream(s) authorized for this session RESOURCES X TYPE
The authorization lifetime START TIME
The identity of the authorizing entity to allow for validation of the token in shared symmetric key and Kerberos schemes AUTH
The credentials of the authorizing entity in a public key scheme AUTH ENT ID X TYPE  Authentication data used to prevent tampering with the AUTH SESSION policy element AUTHENTICATION DATA
Furthermore, the AUTH SESSION policy element MAY contain:
The lifetime of (each of)
the media stream(s) END TIME X TYPE
All AUTH SESSION fields MUST match with the resource request.
If a field does not match, the request SHOULD be denied.
6.1 Generation of the AUTH SESSION by the authorizing entity 1.
Generate the AUTH SESSION policy element with the appropriate contents as specified in section 5.
If authentication is needed, the entire AUTH SESSION policy element is constructed, excluding the length, type and subtype fields of the AUTH SESSION field.
Note that the message MUST include either a START TIME or a SESSION ID (See Section 9), to prevent replay attacks.
The output of the authentication algorithm, plus appropriate header information, is appended to the AUTH SESSION policy element.
6.2 Message Generation (RSVP Host)
An RSVP message is created as specified in [RFC 2205] with the following modifications.
RSVP message MUST contain at most one AUTH SESSION policy element.
The AUTH SESSION policy element received from the authorizing entity (Section 3.2) MUST be copied without modification into the POLICY DATA object.
POLICY DATA object (containing the AUTH SESSION policy element) is inserted in the RSVP message in the appropriate place.
6.3 Message Reception (RSVP aware Router)
RSVP message is processed as specified in [RFC 2205] with following modifications.
If router is policy aware then it SHOULD send the RSVP message to the PDP and wait for response.
If the router is policy unaware then it ignores the policy data objects and continues processing the RSVP message.
Reject the message if the response from the PDP is negative.
Continue processing the RSVP message.
Retrieve the AUTH SESSION policy element.
Check the PE type field and return an error if the identity type is not supported.
Shared symmetric key authentication: The Network router/PDP uses the AUTH ENT ID field to consult a table keyed by that field.
The table should identify the cryptographic authentication algorithm to be used along with the expected length of the authentication data and the shared symmetric key for the authorizing entity.
Verify that the indicated length of the authentication data is consistent with the configured table entry and validate the authentication data.
: Validate the certificate chain against the trusted Certificate Authority (CA) and validate the message signature using the public key.
Kerberos Ticket: If the AUTH ENT ID is of subtype KRB PRINCIPAL, Request a ticket for the authorizing entity (principal@realm) from the local KDC.
Use the ticket to access the authorizing entity and obtain authentication data for the message.
Once the identity of the authorizing entity and the validity of the service request has been established, the authorizing router/PDP MUST then consult its local policy tables (the contents of which are a local matter) in order to determine whether or not the specific request is authorized.
To the extent to which these access control decisions require supplementary information, routers/PDPs MUST ensure that supplementary information is obtained securely.
An example of insecure access control decisions would be if the authorizing party relies upon an insecure database (such as DNS or a public LDAP directory) and authorizes with a certificate or an FQDN.
Verify the requested resources do not exceed the authorized QoS. 7.
Error Signaling If a PDP fails to verify the AUTH SESSION policy element then it MUST return a policy control failure (Error Code   02) to the PEP.
The error values are described in [RFC 2205] and [RFC 2750].
Also the PDP SHOULD supply a policy data object containing an AUTH DATA Policy Element with A Type POLICY ERROR CODE containing more details on the Policy Control failure [RFC 3182].
If RSVP is being used, the PEP MUST include this Policy Data object in the outgoing RSVP Error message.
Following the policies outlined in [IANA CONSIDERATIONS], Standard RSVP Policy Elements (P type values) are assigned by IETF Consensus action as described in [RFC 2750].
P Type AUTH SESSION is assigned the value 0x04.
Following the policies outlined in [IANA CONSIDERATIONS], session authorization attribute types (X Type)in the range 0 127 are allocated through an IETF Consensus action; X Type values between 128 255 are reserved for Private Use and are not assigned by IANA.
X Type AUTH ENT ID is assigned the value 1.
X Type SESSION ID is assigned the value 2.
X Type SOURCE ADDR is assigned the value 3.
X Type DEST ADDR is assigned the value 4.
X Type START TIME is assigned the value 5.
X Type END TIME is assigned the value 6.
X Type RESOURCES is assigned the value 7.
X Type AUTHENTICATION DATA is assigned the value 8.
Following the policies outlined in [IANA CONSIDERATIONS], AUTH ENT ID SubType values in the range 0 127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
ENT ID SubType IPV4 ADDRESS is assigned the value 1.
SubType IPV6 ADDRESS is assigned the value 2.
SubType FQDN is assigned the value 3.
SubType ASCII DN is assigned the value 4.
SubType UNICODE DN is assigned the value 5.
SubType URI is assigned the value 6.
SubType KRB PRINCIPAL is assigned the value 7.
SubType X509 V3 CERT is assigned the value 8.
SubType PGP CERT is assigned the value 9.
Following the policies outlined in [IANA CONSIDERATIONS], SOURCE ADDR SubType values in the range 0
127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
SOURCE ADDR SubType IPV4 ADDRESS is assigned the value 1.
SubType IPV6 ADDRESS is assigned the value 2.
SubType UDP PORT LIST is assigned the value 3.
SubType TCP PORT LIST is assigned the value 4.
Following the policies outlined in [IANA CONSIDERATIONS], DEST ADDR SubType values in the range 0 127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
DEST ADDR SubType IPV4 ADDRESS is assigned the value 1.
SubType IPV6 ADDRESS is assigned the value 2.
SubType UDP PORT LIST is assigned the value 3.
SubType TCP PORT LIST is assigned the value 4.
Following the policies outlined in [IANA CONSIDERATIONS], START TIME SubType values in the range 0 127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
START TIME SubType NTP TIMESTAMP is assigned the value 1.
Following the policies outlined in [IANA CONSIDERATIONS], END TIME SubType values in the range 0
127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
END TIME SubType NTP TIMESTAMP is assigned the value 1.
Following the policies outlined in [IANA CONSIDERATIONS], RESOURCES SubType values in the range 0 127 are allocated through an IETF Consensus action; SubType values between 128 255 are reserved for Private Use and are not assigned by IANA.
RESOURCES SubType BANDWIDTH is assigned the value 1.
SubType FLOW SPEC is assigned the value 2.
SubType SDP is assigned the value 3.
SubType DSCP is assigned the value 4.
The purpose of this document is to describe a mechanism for session authorization to prevent theft of service.
Replay attacks MUST be prevented.
In the non associated model, the AUTH SESSION policy element MUST include a START TIME field and the Policy Servers MUST support NTP to ensure proper clock synchronization.
Failure to ensure proper clock synchronization will allow replay attacks since the clocks of the different network entities may not be in synch.
The start time is used to verify that the request is not being replayed at a later time.
In all other models, the SESSION ID is used by the Policy Server to ensure that the resource request successfully correlates with records of an authorized session.
If a AUTH SESSION is replayed, it MUST be detected by the policy server (using internal algorithms) and the request MUST be rejected.
To ensure that the integrity of the policy element is preserved in untrusted environments, the AUTHENTICATION DATA attribute MUST be included.
In environments where shared symmetric keys are possible, they should be used in order to keep the AUTH SESSION policy element size to a strict minimum.
This is especially true in wireless environments where the AUTH SESSION policy element is sent over the air.
The shared symmetric keys authentication option MUST be supported by all AUTH SESSION implementations.
If shared symmetric keys are not a valid option, the Kerberos authentication mechanism is reasonably well secured and efficient in terms of AUTH SESSION size.
The AUTH SESSION only needs to contain the principal@realm name of the authorizing entity.
This is much more efficient than the PKI authentication option.
PKI authentication option provides a high level of security and good scalability, however it requires the presence of credentials in the AUTH SESSION policy element which impacts its size.
Contributors Matt Broda Nortel Networks EMail:
Louis LeVay Nortel Networks EMail:
Dennis Beard Nortel Networks EMail:
Lawrence Dobranski Nortel Networks EMail:
