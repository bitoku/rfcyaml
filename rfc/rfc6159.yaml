- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                           T. Tsou
  contents:
  - "Independent Submission                                           T. Tsou\n  \
    \         Session-Specific Explicit Diameter Request Routing\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a mechanism to enable specific Diameter\n\
    \   proxies to remain in the path of all message exchanges constituting a\n  \
    \ Diameter session.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6159.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   Techniques similar to those discussed in this document were discussed\n\
    \   in the IETF Diameter Maintenance and Extensions (DIME) Working Group.\n  \
    \ The group had no consensus that the problems addressed by such work\n   are\
    \ a real concern in Diameter deployments.  Furthermore, there was\n   no consensus\
    \ that the proposed solutions are in line with the\n   architectural principles\
    \ of the Diameter protocol.  As a result, the\n   working group decided not to\
    \ undertake the work.  There has also not\n   been a formal request for this functionality\
    \ from any standards body.\n   This RFC represents a continuation of the abandoned\
    \ work.  Readers of\n   this specification should be aware that the IETF has not\
    \ reviewed\n   this specification and cannot say anything about suitability for\
    \ a\n   particular purpose or compatibility with the Diameter architecture\n \
    \  and other extensions.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. The 3GPP Wireless LAN (WLAN) Access Architecture ................4\n    \
    \  3.1. Maintaining the Routing Path ...............................5\n   4. Diameter\
    \ Explicit Routing (ER) ..................................6\n      4.1. Originating\
    \ a Request (ER-Originator) ......................6\n      4.2. Relaying and Proxying\
    \ Requests (ER-Proxy) ..................8\n      4.3. Receiving Requests (ER-Destination)\
    \ .......................10\n      4.4. Diameter Answer Processing ................................11\n\
    \      4.5. Failover and Failback Considerations ......................12\n  \
    \    4.6. Attribute-Value Pairs .....................................12\n    \
    \       4.6.1. Explicit-Path-Record AVP ...........................12\n      \
    \            4.6.1.1. Proxy-Host AVP ............................13\n        \
    \          4.6.1.2. Proxy-Realm AVP ...........................13\n          \
    \ 4.6.2. Explicit-Path AVP ..................................13\n      4.7. Error\
    \ Handling ............................................13\n   5. Example Message\
    \ Flow ...........................................14\n   6. RADIUS/Diameter Protocol\
    \ Interactions ..........................16\n   7. Security Considerations ........................................17\n\
    \   8. Acknowledgements ...............................................17\n  \
    \ 9. References .....................................................18\n    \
    \  9.1. Normative References ......................................18\n      9.2.\
    \ Informative References ....................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In the Diameter base protocol [RFC3588], the routing of\
    \ request\n   messages is based solely on the routing decisions made separately\
    \ by\n   each node along the path.  [RFC5729] has added the ability to force\n\
    \   messages to pass through a specified set of realms through the use of\n  \
    \ Network Access Identifier (NAI) decoration.  However, no other\n   specification\
    \ provides the ability to force routing through a\n   specific set of agents.\
    \  Therefore, in a topology where multiple\n   paths exist from source to destination,\
    \ there is no guarantee that\n   all messages relating to a given session will\
    \ take the same path.  In\n   general, this has not caused problems, but some\
    \ architectures (e.g.,\n   WLAN Third Generation Partnership Project (3GPP) IP\
    \ access\n   [TS23.234]) require that once certain agents become engaged in a\n\
    \   session, they be able to process all subsequent messages for that\n   session.\n\
    \   While the solution presented in this document is valid, it violates\n   one\
    \ of the basic premises of Diameter -- the robustness of its\n   architecture.\
    \  With normal Diameter routing, sessions will survive\n   failures of agents\
    \ along the routing path.  With the proposals in\n   this document, routing becomes\
    \ pinned to specific agents whose\n   failure will terminate the session.\n  \
    \ The authors see no interaction between explicit routing and the\n   specific\
    \ applications with which it is employed.  Hence, in principle\n   it can be added\
    \ to existing applications if they support the\n   necessary extensibility, and\
    \ equally can be used with new\n   applications.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   The following terms are used to define the functionality and\n   participants\
    \ in the routing extensions described in this document.\n   ER\n      Explicit\
    \ routing -- the mechanism provided by this specification\n      to allow proxies\
    \ traversed by the initial message of a session to\n      ensure that they remain\
    \ on the messaging path for all subsequent\n      request messages of a session.\n\
    \   ER-Proxy\n      A proxy that implements the ER mechanism and can therefore\
    \ use it\n      to remain in the path for subsequent messages of a session.\n\
    \   ER-Destination\n      A Diameter node that is capable of participating in\
    \ ER and that\n      will ultimately consume the request sent by an ER-Originator.\n\
    \   ER-Originator\n      A Diameter node initiating a session and sending the\
    \ requests.\n      The ER-Originator can be any Diameter node sending a request,\n\
    \      i.e., a client, server or proxy capable of initiating sessions and\n  \
    \    participating in ER.\n   Authentication, Authorization, and Accounting (AAA)\
    \ Relays\n      Other Diameter nodes interspersed between the ER-Originator,\n\
    \      ER-Proxies, and the ER-Destination.  These nodes represent\n      existing\
    \ Diameter agents and proxies that do not participate in ER\n      and do not\
    \ recognize Explicit-Path Attribute Value Pairs (AVPs).\n"
- title: 3.  The 3GPP Wireless LAN (WLAN) Access Architecture
  contents:
  - "3.  The 3GPP Wireless LAN (WLAN) Access Architecture\n   The 3GPP WLAN IP access\
    \ architecture [TS23.234] is one example of a\n   system requiring that certain\
    \ agents (stateful proxies, in this case)\n   remain in the forwarding path of\
    \ all session messages.  The 3GPP WLAN\n   interworking architecture extends 3GPP\
    \ services to the WLAN access\n   side, enabling a 3GPP subscriber to use a WLAN\
    \ to access 3GPP\n   services.\n   WLAN AAA provides access to the WLAN to be\
    \ authenticated and\n   authorized through the 3GPP system.  This access control\
    \ can permit\n   or deny a subscriber access to the WLAN system and/or the 3GPP\n\
    \   system.\n   There are two 3GPP WLAN interworking reference models:\n   1.\
    \  In the non-roaming case, the model includes the WLAN access\n       network\
    \ and the 3GPP AAA server in the home network.  The 3GPP\n       AAA server is\
    \ responsible for access control as well as charging.\n   2.  In the roaming case,\
    \ the model includes the WLAN access network,\n       the 3GPP AAA proxy in the\
    \ visited network, and the 3GPP AAA\n       server in the home network.  The 3GPP\
    \ AAA server is responsible\n       for access control.  Charging records may\
    \ be generated by the AAA\n       proxy and/or the AAA server.  The AAA proxy\
    \ relays access control\n       and charging messages to the AAA server.  The\
    \ AAA proxy will also\n       do offline charging, if required.\n   The roaming\
    \ case presents two problems for which the Diameter routing\n   mechanism described\
    \ in [RFC3588] does not offer any unambiguous and\n   standard solution.\n   Network\
    \ Selection\n      Selecting an initial message path for the Diameter session\
    \ through\n      (possibly many) alternative visited network(s) to the home\n\
    \      network.\n   Explicit Routing (ER)\n      Maintaining the selected message\
    \ path for all messages in the\n      Diameter session.\n   Selecting an initial\
    \ message path is outside the scope of this\n   document.  A mechanism for maintaining\
    \ the selected message path is\n   described in detail below.\n"
- title: 3.1.  Maintaining the Routing Path
  contents:
  - "3.1.  Maintaining the Routing Path\n   After a successful authentication, a Diameter\
    \ session is established\n   involving (at least) the following stateful entities:\n\
    \   o  the Diameter client in the WLAN access node (e.g., the 3GPP AAA\n     \
    \ client in the terminal visited network),\n   o  a Diameter proxy in the visited\
    \ mobile network (e.g., the 3GPP AAA\n      proxy in the terminal visited network),\
    \ and\n   o  a Diameter server in the user's home realm (e.g., the destination\n\
    \      3GPP AAA server in the terminal home network).\n   Message routing for\
    \ the initial session request uses the normal\n   Diameter routing tables (Section\
    \ 2.7 of [RFC3588]) in the 3GPP AAA\n   client, the 3GPP AAA proxy in the visited\
    \ network, and any\n   intermediate proxies after that.  The 3GPP AAA client sends\
    \ the\n   initial session request to the 3GPP AAA proxy in the visited network.\n\
    \   The 3GPP AAA proxy processes the request, then forwards it towards\n   the\
    \ destination 3GPP AAA server, through an intermediate proxy if\n   necessary.\
    \  The request may be forwarded through other intermediate\n   proxies in the\
    \ same way, until it reaches the destination 3GPP AAA\n   server in the terminal\
    \ home network.\n   The functions assigned to the 3GPP AAA proxy include:\n  \
    \ o  Reporting charging information to the offline charging system in\n      the\
    \ visited network,\n   o  Policy enforcement based on roaming agreements, and\n\
    \   o  Service termination initiated by the visited network's operator.\n   These\
    \ functions all require that state be maintained within the\n   visited network.\
    \  The 3GPP's choice is to maintain that state at the\n   3GPP AAA proxy.  This\
    \ means that the latter must remain in the\n   messaging path for all subsequent\
    \ messages relating to the same\n   session.\n"
- title: 4.  Diameter Explicit Routing (ER)
  contents:
  - "4.  Diameter Explicit Routing (ER)\n   This section outlines a Diameter ER mechanism\
    \ by which Diameter nodes\n   participating in ER can remain in the path of all\
    \ request messages\n   for a specific session.  A new Explicit-Path AVP is defined\
    \ to enable\n   ER participants to manipulate the Destination-Host and/or\n  \
    \ Destination-Realm AVPs of request messages in order to ensure the\n   correct\
    \ routing behavior.  The following sections describe the\n   extensions to the\
    \ request routing in [RFC3588] to implement the ER\n   mechanism.  The proposed\
    \ extensions utilize existing routing\n   strategies in [RFC3588] and do not mandate\
    \ modifications to it.  The\n   mechanism imposes loose rather than strict source\
    \ routing, in that\n   subsequent messages of a session are forced through the\
    \ participating\n   nodes, but not through any individual non-participating nodes.\
    \  In\n   summary, only Diameter nodes interested in participating in the ER\n\
    \   scheme will be involved in it.\n"
- title: 4.1.  Originating a Request (ER-Originator)
  contents:
  - "4.1.  Originating a Request (ER-Originator)\n   A Diameter node acting as an\
    \ ER-Originator for a particular session\n   MUST maintain a local cache that\
    \ enumerates all the Diameter\n   identities of the ER-Proxies that the request\
    \ messages must traverse\n   along the path to the ER-Destination.  The identity\
    \ of a Diameter\n   node is defined in [RFC3588].  The local cache MAY also include\
    \ the\n   node's realm.  The data structure of the cache is left up to the\n \
    \  implementation and SHOULD persist as part of the session attributes\n   or\
    \ properties.\n   An ER-Originator sending request messages MUST add an Explicit-Path\n\
    \   AVP to these requests.  The contents of the cache SHOULD be used to\n   populate\
    \ the Explicit-Path AVP, with each cached entry represented by\n   a corresponding\
    \ instance of the Explicit-Path-Record AVP.  ER-Proxies\n   along the path of\
    \ the request message MUST examine the contents of\n   the Explicit-Path AVP and\
    \ make routing adjustments based on records\n   it contains.  An example of the\
    \ message flow is shown in Section 5.\n   Note that the ER-Originator can be any\
    \ Diameter node, i.e., a client,\n   server, or proxy.\n   The ER-Originator can\
    \ populate the cache either by pre-configuring\n   its contents or by using the\
    \ first request message of the session to\n   gather identities of participating\
    \ ER-Proxies along the routing path.\n   The latter scheme is known as Explicit-Path\
    \ discovery.  The contents\n   of the cache can be pre-configured if the ER-Originator\
    \ has explicit\n   knowledge of the ER-Proxies the request messages must traverse;\n\
    \   otherwise, the ER-Originator can use Explicit-Path discovery.  It is\n   RECOMMENDED\
    \ that Explicit-Path discovery be used whenever possible\n   since pre-configuration\
    \ is less flexible by nature.\n   Explicit-Path discovery is useful if the identities\
    \ of the ER-Proxies\n   are not known or if there are several ER-capable proxies\
    \ (a cluster\n   of proxies) that can be dynamically chosen based on other routing\n\
    \   policies.  In Explicit-Path discovery, the cache of the ER-Originator\n  \
    \ is initially empty.  To initiate discovery, when the ER-Originator\n   sends\
    \ the first request message of a session, it MUST include the\n   Explicit-Path\
    \ AVP containing a single Explicit-Path-Record AVP with\n   the identity and/or\
    \ the realm of the ER-Originator.  The\n   ER-Originator MUST set the Destination-Host\
    \ and/or Destination-Realm\n   AVP of the request message to the identity and/or\
    \ the realm of the\n   ER-Destination, respectively, as specified in [RFC3588].\n\
    \      Note that ER-Originator initial request message routing procedures\n  \
    \    and the process of population of the Destination-Realm may be\n      affected\
    \ by the User-Name AVP NAI decoration [RFC5729].  NAI\n      decoration is a form\
    \ of request message source routing and defines\n      realms that the request\
    \ message must traverse through before\n      routing towards the ER-Destination.\
    \  Diameter nodes participating\n      in request message routing must examine\
    \ and process the User-Name\n      AVP, and modify the Destination-Realm AVP accordingly\
    \ as long as\n      there are realms left in the decorated NAI.  Source routing\
    \ based\n      upon NAI decoration does not affect Explicit-Path discovery as\n\
    \      defined in this document.\n   If the path taken by the initial request\
    \ encounters one or more\n   participating ER-Proxies and a participating ER-Destination,\
    \ the\n   procedures described in Section 4.2 and Section 4.3 ensure that a\n\
    \   successful response to that request will contain an Explicit-Path AVP\n  \
    \ that includes one or more Explicit-Path-Records containing the\n   ER-Originator's\
    \ identity, the identities of all participating\n   ER-Proxies, and the identity\
    \ of the ER-Destination.  The\n   ER-Originator SHOULD populate its local cache\
    \ with the contents of\n   the Explicit-Path AVP received in this initial answer\
    \ message.\n   If the answer message does not contain an Explicit-Path AVP or\
    \ the\n   Result-Code AVP is set to DIAMETER_ER_NOT_AVAILABLE (Section 4.7), it\n\
    \   is an indication to the ER-Originator that the destination of the\n   request\
    \ does not support ER and that the ER-Originator SHOULD avoid\n   sending an Explicit-Path\
    \ AVP in subsequent request messages.\n   If the initial request message initiated\
    \ Explicit-Path discovery, but\n   the Explicit-Path AVP in the answer message\
    \ contains Explicit-Path-\n   Records for the ER-Originator and ER-Destination\
    \ only, it is an\n   indication to the ER-Originator that there are no Diameter\
    \ proxies\n   capable of participating in ER along the path and that the\n   ER-Originator\
    \ SHOULD NOT send an Explicit-Path AVP in subsequent\n   request messages of this\
    \ session.  See Section 4.5 for more\n   discussion.  In such cases, the situation\
    \ may be transient, and\n   Explicit-Path discovery may find participating proxies\
    \ in succeeding\n   sessions.  It is left up to the ER-Originator to decide if\
    \ Explicit-\n   Path discovery should be attempted in succeeding sessions.\n \
    \  Once the ER-Originator's local cache has been populated, whether by\n   pre-configuration\
    \ or through Explicit-Path discovery, all request\n   messages for the session\
    \ MUST include the Explicit-Path AVP using the\n   contents of the local cache.\
    \  The Explicit-Path AVP MUST contain the\n   Explicit-Path-Records of all the\
    \ nodes enumerated in the cache except\n   that of the ER-Originator itself. \
    \ The identities enumerated in the\n   Explicit-Path AVP MUST appear in the order\
    \ they will be traversed in\n   the routing path.  The last entry in the Explicit-Path\
    \ AVP MUST be\n   the Explicit-Path-Record of the ER-Destination.  In addition,\
    \ the\n   value of the Destination-Host and possibly the Destination-Realm in\n\
    \   the request message MUST be copied from the values of the Proxy-Host\n   AVP\
    \ and, if present, the Proxy-Realm AVP of the first Explicit-Path-\n   Record\
    \ AVP present in the Explicit-Path AVP.\n      This ensures that the ER-Originator\
    \ as well as any AAA relays\n      between the ER-Originator and the first ER-Proxy\
    \ will route the\n      message towards the first ER-Proxy as specified in RFC\
    \ 3588\n      [RFC3588].\n   Subsequent actions taken by the first ER-Proxy upon\
    \ receipt of the\n   message are described in Section 4.2 and will mimic those\
    \ of the\n   ER-Originator.\n   Answer messages received by the ER-Originator\
    \ to subsequent request\n   messages after the Explicit-Path has been established\
    \ SHOULD NOT have\n   an Explicit-Path AVP.  If they do, this SHOULD be considered\
    \ a\n   suspect condition that may be caused by a misbehaving ER participant.\n\
    \   It is left up to the ER-Originator whether to continue using the ER\n   scheme\
    \ when such a condition arises or to attempt another Explicit-\n   Path discovery\
    \ for subsequent sessions.\n"
- title: 4.2.  Relaying and Proxying Requests (ER-Proxy)
  contents:
  - "4.2.  Relaying and Proxying Requests (ER-Proxy)\n   The basic action taken by\
    \ an ER-Proxy upon receiving a request is to\n   check whether explicit routing\
    \ is supported in the request and if so,\n   check whether it is already a participant\
    \ in explicit routing for the\n   said request.  If it is not an existing participant,\
    \ if Explicit-Path\n   discovery is in progress, and if it wishes to participate,\
    \ it appends\n   an Explicit-Path-Record AVP identifying itself to the end of\
    \ the\n   Explicit-Path AVP.  If it is an existing participant, the ER-Proxy\n\
    \   pops/removes the Explicit-Path-Record AVP pertaining to itself from\n   the\
    \ Explicit-Path AVP and then uses the next Explicit-Path-Record AVP\n   for subsequent\
    \ routing.  Details of this operation follow.\n   An ER-Proxy is not required\
    \ to keep local state or cache state\n   regarding the explicit routing procedure.\
    \  However, it MUST check\n   whether an incoming request contains an Explicit-Path\
    \ AVP.  The\n   following cases can occur.\n   1.  If an incoming request does\
    \ not contain an Explicit-Path AVP,\n       then the ER-Proxy takes no action\
    \ beyond processing and\n       forwarding the request as specified in [RFC3588].\n\
    \   2.  If the incoming request contains an Explicit-Path AVP, the\n       ER-Proxy\
    \ MUST check whether its identity is present in the\n       Explicit-Path AVP.\
    \  Determining whether its identity is present\n       can be done by matching\
    \ its identity to the Proxy-Host AVP\n       contained in each Explicit-Path-Record.\
    \  If its identity is not\n       present, then:\n       A.  If it wishes to participate\
    \ in explicit routing, the ER-Proxy\n           MUST verify that Explicit-Path\
    \ discovery is in progress by\n           verifying that the Proxy-Host AVP in\
    \ the first Explicit-Path-\n           Record AVP in the Explicit-Path AVP does\
    \ not match the\n           Destination-Host AVP (if present).  If this verification\n\
    \           succeeds or the Destination-Host AVP is absent, the ER-Proxy\n   \
    \        MAY append a new Explicit-Path-Record as the last AVP in the\n      \
    \     Explicit-Path AVP prior to forwarding the request.  The new\n          \
    \ Explicit-Path-Record MUST contain a Proxy-Host AVP set to the\n           proxy's\
    \ identity, and MAY contain a Proxy-Realm AVP giving\n           the proxy's realm.\
    \  If, however, the Destination-Host AVP is\n           present and matches the\
    \ Proxy-Host AVP of the first Explicit-\n           Path-Record AVP, then the\
    \ Explicit-Path contains an already-\n           defined source route that does\
    \ not include the ER-Proxy.  The\n           ER-Proxy SHOULD process the request\
    \ as if the ER-Path AVP\n           were absent.\n       B.  If the ER-Proxy does\
    \ not wish to participate in the ER, it\n           SHOULD NOT modify the Explicit-Path\
    \ AVP and SHOULD simply\n           process and forward the request as specified\
    \ in [RFC3588]\n           using the existing values of the Destination-Host and/or\n\
    \           Destination-Realm AVPs.  Non-ER-Proxies and relays that do\n     \
    \      not support ER and do not recognize Explicit-Path AVP will\n          \
    \ take the same action.\n   3.  If the identity of the ER-Proxy is present in\
    \ the Explicit-Path\n       AVP, then:\n       A.  If it is not the first Explicit-Path-Record\
    \ in the AVP, this\n           MUST be considered an error, and an answer message\
    \ with the\n           'E' bit set and the Result-Code set to\n           DIAMETER_INVALID_PROXY_PATH_STACK\
    \ MUST be sent back to the\n           ER-Originator (Section 4.7).\n       B.\
    \  If the identity of the ER-Proxy matches the first Explicit-\n           Path-Record,\
    \ the ER-Proxy MUST remove this record from the\n           Explicit-Path AVP\
    \ and repopulate the Destination-Host and\n           possibly the Destination-Realm\
    \ AVP from the next Explicit-\n           Path-Record present in the Explicit-Path\
    \ AVP.  Setting the\n           Destination-Host and possibly the Destination-Realm\
    \ AVP will\n           ensure that the ER-Proxy as well as all AAA relays between\n\
    \           the current ER-Proxy and the next ER-Proxy enumerated in the\n   \
    \        Explicit-Path AVP will route the message towards the next\n         \
    \  ER-Proxy.  The process of removing the ER-Proxy's record is\n           analogous\
    \ to popping an entry from a stack represented by the\n           Explicit-Path\
    \ AVP.\n   The behavior specified above also applies to a Diameter node that\n\
    \   acts as a relay agent and participates in the ER scheme.\n"
- title: 4.3.  Receiving Requests (ER-Destination)
  contents:
  - "4.3.  Receiving Requests (ER-Destination)\n   A Diameter node that locally processes\
    \ requests sent by the\n   ER-Originator (Section 4.1) and is able to support\
    \ ER (an\n   ER-Destination) MUST check for the presence of an Explicit-Path AVP\n\
    \   in the request message.\n   1.  If an incoming request does not contain an\
    \ Explicit-Path AVP,\n       then it is an indication that messages belonging\
    \ to this session\n       will not use ER.  The ER-Destination MUST simply process\
    \ the\n       request for local consumption and formulate an answer message as\n\
    \       specified in [RFC3588].\n   2.  If the incoming request contains an Explicit-Path\
    \ AVP, the\n       ER-Destination MUST check whether its identity is present in\
    \ the\n       Explicit-Path AVP.  If its identity is not present, indicating\n\
    \       that Explicit-Path discovery is in progress, then:\n       A.  If it wishes\
    \ to participate in the ER, and subject to\n           paragraph B below, the\
    \ ER-Destination MUST append a new\n           Explicit-Path-Record to the Explicit-Path\
    \ AVP in the received\n           message.  The new Explicit-Path-Record MUST\
    \ contain at the\n           least a Proxy-Host AVP set to the ER-Destination's\
    \ identity.\n           The ER-Destination MUST then copy the resulting Explicit-Path\n\
    \           AVP to the subsequent answer message.\n       B.  If there is only\
    \ one Explicit-Path-Record in the incoming\n           Explicit-Path AVP, then\
    \ this is an indication of a successful\n           Explicit-Path discovery, but\
    \ with no participating\n           ER-Proxies.  The ER-Destination SHOULD NOT\
    \ copy the Explicit-\n           Path AVP into the subsequent answer message.\n\
    \       C.  If the ER-Destination supports ER but does not wish to or\n      \
    \     cannot participate, it MAY send a Result-Code AVP set to\n           DIAMETER_ER_NOT_AVAILABLE\
    \ as defined in Section 4.7.  The\n           ER-Destination MUST NOT include\
    \ any Explicit-Path AVP in the\n           subsequent answer.  Diameter servers\
    \ that do not support ER\n           and do not recognize the Explicit-Path AVP\
    \ will also omit the\n           Explicit-Path AVP from the answer message.\n\
    \   3.  If the identity of the ER-Destination matches a record in the\n      \
    \ Explicit-Path AVP, then it MUST be the only Explicit-Path-Record\n       present\
    \ in the Explicit-Path AVP.  Otherwise, this MUST be\n       considered an error,\
    \ and an answer message with the 'E' bit set\n       and containing an Experimental-Result-Code\
    \ AVP set to\n       DIAMETER_INVALID_PROXY_PATH_STACK MUST be sent back to the\n\
    \       ER-Originator (Section 4.7).  If the identity of the\n       ER-Destination\
    \ does match the only existing Explicit-Path-Record,\n       then this is an indication\
    \ that the request reached the\n       ER-Destination by way of a successfully\
    \ executed explicit route.\n       The ER-Destination MUST NOT include the Explicit-Path\
    \ AVP in the\n       subsequent answer message.\n"
- title: 4.4.  Diameter Answer Processing
  contents:
  - "4.4.  Diameter Answer Processing\n   There is no requirement on Diameter nodes\
    \ participating in ER to\n   provide special handling or routing of answer messages.\
    \  Answer\n   messages SHOULD be processed normally as specified in [RFC3588].\n\
    \   However, a Diameter node acting as an ER-Destination MUST formulate a\n  \
    \ proper Explicit-Path AVP in answer messages as described in\n   Section 4.3.\n"
- title: 4.5.  Failover and Failback Considerations
  contents:
  - "4.5.  Failover and Failback Considerations\n   If there is no ER-Proxy along\
    \ the selected path, the answer message\n   MAY contain an Explicit-Path AVP that\
    \ contains only the Explicit-\n   Route-Records of the ER-Originator and the ER-Destination,\
    \ indicating\n   that there is no ER support found in Diameter nodes along the\
    \ path.\n   It is left to the ER-Originator to continue with processing of the\n\
    \   request without ER support or terminate the session.  The\n   ER-Originator\
    \ SHOULD NOT attempt to perform Explicit-Path discovery\n   in subsequent request\
    \ messages of this session in such cases, to\n   protect against failback conditions\
    \ where an ER-Proxy suddenly\n   appears in the path and attempts to add a new\
    \ Explicit-Path-Record\n   for request messages other than the initial request.\n\
    \      Allowing an ER-Proxy to join the session after the initial request\n  \
    \    makes sense only if the application requirements do not mandate\n      that\
    \ every participating ER-Proxy receive all of the messages of a\n      session.\n\
    \   However, depending on local policy, the ER-Originator MAY attempt ER\n   path\
    \ discovery in subsequent sessions despite the lack of proxy\n   participants\
    \ in the earlier attempt.\n   If a failover occurs in a Diameter node preceding\
    \ an ER-Proxy when\n   the Explicit-Path is already established, it is possible\
    \ that a\n   DIAMETER_UNABLE_TO_DELIVER error will be received by the\n   ER-Originator\
    \ if there are no alternative paths towards the ER-Proxy.\n   In such a case,\
    \ it is left to the ER-Originator to handle the error\n   as specified in the\
    \ Diameter application or in [RFC3588].\n"
- title: 4.6.  Attribute-Value Pairs
  contents:
  - "4.6.  Attribute-Value Pairs\n   The following sections define the AVPs used in\
    \ the ER process.  All\n   of these AVPs MUST have the 'V' bit set and the 'M'\
    \ bit cleared, with\n   the Vendor-ID field set to 2011 (as assigned by IANA in\
    \ \"Private\n   Enterprise Numbers\" registry; see http://www.iana.org/).\n"
- title: 4.6.1.  Explicit-Path-Record AVP
  contents:
  - "4.6.1.  Explicit-Path-Record AVP\n   The Explicit-Path-Record AVP (AVP Code 35001)\
    \ is of type Group.  The\n   identity added in the Proxy-Host [RFC3588] element\
    \ of this AVP MUST\n   be the same as the one advertised by the Diameter node\
    \ in the Origin-\n   Host AVP during the Capabilities Exchange messages.\n   \
    \     Explicit-Path-Record ::= < AVP Header: 35001 >\n                       \
    \          { Proxy-Host }\n                                 [ Proxy-Realm ]\n"
- title: 4.6.1.1.  Proxy-Host AVP
  contents:
  - "4.6.1.1.  Proxy-Host AVP\n   The Proxy-Host AVP (AVP Code 35004) is of type DiameterIdentity.\
    \  It\n   identifies the ER node that is inserting the record.  The Proxy-Host\n\
    \   AVP MUST be present.\n"
- title: 4.6.1.2.  Proxy-Realm AVP
  contents:
  - "4.6.1.2.  Proxy-Realm AVP\n   The Proxy-Realm AVP (AVP Code 35002) is of type\
    \ DiameterIdentity, and\n   contains the realm of the ER node inserting the record.\
    \  The Proxy-\n   Realm AVP MAY be present in the Explicit-Path-Record.  If it\
    \ is\n   present, the realm name included in the value of the Proxy-Host AVP\n\
    \   MUST match the value of the Proxy-Realm AVP.\n"
- title: 4.6.2.  Explicit-Path AVP
  contents:
  - "4.6.2.  Explicit-Path AVP\n   The Explicit-Path AVP (AVP Code 35003) is of type\
    \ Grouped.  This AVP\n   MUST be present in all request messages performing ER.\
    \  It MAY be\n   present in the answer to the initial session request message\
    \ if\n   Explicit-Path discovery was successfully executed for the request.\n\
    \         Explicit-Path ::= < AVP Header: 35003 >\n                        1*\
    \ [ Explicit-Path-Record ]\n                         * [ AVP ]\n"
- title: 4.7.  Error Handling
  contents:
  - "4.7.  Error Handling\n   The following error conditions may occur during ER processing.\
    \  All\n   error indications MUST be encapsulated in an instance of the\n   Experimental-Result\
    \ AVP [RFC3588] with the Vendor-ID AVP set to 2011\n   and the Experimental-Result-Code\
    \ set as specified below.\n   DIAMETER_INVALID_PROXY_PATH_STACK     3501\n   \
    \   A request message received by an ER-Proxy or ER-Destination after\n      an\
    \ Explicit-Path has been established has the first or only\n      Explicit-Path-Record\
    \ AVP not matching the ER-Proxy's or the\n      ER-Destination's identity.  The\
    \ same error applies to\n      ER-Destinations receiving an Explicit-Path-AVP\
    \ containing more\n      than one Explicit-Path-Record or an Explicit-Path-AVP\
    \ with only\n      one Explicit-Path-Record not matching its own identity.\n \
    \     This error SHOULD be considered a protocol failure and SHOULD be\n     \
    \ treated on a per-hop basis; Diameter proxies may attempt to\n      correct the\
    \ error, if possible.  Diameter answer messages\n      containing this error indication\
    \ MUST have the 'E' bit set and\n      MUST conform to Section 7.2 of [RFC3588].\n\
    \   DIAMETER_ER_NOT_AVAILABLE     4501\n      An ER-Destination that supports\
    \ ER routing but is unable to comply\n      for unknown reasons MAY send an answer\
    \ message with the Result-\n      Code AVP set to this error code.  This error\
    \ value SHOULD be\n      considered a transient failure indicating that subsequent\
    \ ER\n      attempts may succeed.\n"
- title: 5.  Example Message Flow
  contents:
  - "5.  Example Message Flow\n   The example presented here illustrates the flow\
    \ of Diameter messages\n   with the typical attributes present in the ER scenario.\n\
    \   The ER-Originator in the example below shows the use of Explicit-Path\n  \
    \ discovery with the first request.  However, the ER-Originator could\n   also\
    \ use a pre-configured cache.  The ER-Originator can be any\n   Diameter node\
    \ sending a request, i.e., a client, server, or proxy.\n   In this scenario, the\
    \ local cache of the ER-Originator is initially\n   empty.\n   The AAA relays\
    \ between the ER-Proxies, ER-Originator, and\n   ER-Destination may or may not\
    \ be present and are shown here to depict\n   routing paths that the requests\
    \ may take prior to being processed by\n   nodes participating in the ER scheme.\
    \  The AAA relays also depict\n   existing Diameter relays or proxies that do\
    \ not recognize Explicit-\n   Path AVPs and therefore do not participate in ER.\n\
    \      ER-                     ER-                   ER-         ER-\n  Originator\
    \   AAA relays   Proxy1   AAA relays   Proxy2    Destination\n     (o.r1     \
    \             (p.r1                 (p.r2       (d.r2\n    .example)         \
    \     .example)             .example)   .example)\n                    |     \
    \     |          |          |          |\n  cache=(empty)     |          |   \
    \       |          |          |\n      ------------->|--------->|          | \
    \         |          |\n   (1st request of the session)|          |          |\
    \          |\n        Explicit-Path=         |          |          |         \
    \ |\n          o.r1.example,r1.example         |          |          |\n    dest-host=d.r2.example\
    \     |          |          |          |\n    dest-realm=r2.example      |   \
    \       |          |          |\n                    |          |          | \
    \         |          |\n                    |          |--------->|--------->|\
    \          |\n                    |          |  (forwarded request)|         \
    \ |\n                    |          |  Explicit-Path=     |          |\n     \
    \               |          |    record1=o.r1.example,r1.example\n            \
    \        |          |    record2=p.r1.example,r1.example\n                   \
    \ |          |  dest-host=d.r2.example        |\n                    |       \
    \   |  dest-realm=r2.example         |\n                    |          |     \
    \     |          |          |\n                    |          |          |   \
    \       |--------->|\n                    |          |          |      (forwarded\
    \ request)\n                    |          |          |      Explicit-Path=\n\
    \                    |          |          |       record1=o.r1.example,\n   \
    \                 |          |          |               r1.example\n         \
    \           |          |          |       record2=p.r1.example,\n            \
    \        |          |          |               r1.example\n                  \
    \  |          |          |       record3=p.r2.example,\n                    |\
    \          |          |               r2.example\n                    |      \
    \    |          |     dest-host=d.r2.example\n                    |          |\
    \          |     dest-realm=r2.example\n                    |          |     \
    \     |          |          |\n   cache=           |<---------|<---------|<---------|<---------|\n\
    \     record1=o.r1.example,r1.example         (answer)           |\n     record2=p.r1.example,r1.example\
    \   Explicit-Path=\n     record3=p.r2.example,r2.example    record1=o.r1.example,r1.example\n\
    \     record4=d.r2.example,r2.example    record2=p.r1.example,r1.example\n   \
    \                 |          |        record3=p.r2.example,r2.example\n      \
    \              |          |        record4=d.r2.example,r2.example\n   Note: An\
    \ originator pre-configuring    |          |          |\n         its local cache\
    \ can skip the     |          |          |\n         exchange above and send the\
    \      |          |          |\n         initial request as shown below.  |  \
    \        |          |\n                    |          |          |          |\
    \          |\n      ------------->|--------->|          |          |         \
    \ |\n   (subsequent request of the session)    |          |          |\n     \
    \   Explicit-Path=         |          |          |          |\n  record1=p.r1.example,r1.example\
    \         |          |          |\n  record2=p.r2.example,r2.example         |\
    \          |          |\n  record3=d.r2.example,r2.example         |         \
    \ |          |\n    dest-host=p.r1.example     |          |          |       \
    \   |\n    dest-realm=r1.example      |          |          |          |\n   \
    \                 |          |--------->|--------->|          |\n            \
    \        |          |  (forwarded request)|          |\n                    |\
    \          |  Explicit-Path=     |          |\n                    |         \
    \ |      record1=p.r2.example,r2.example\n                    |          |   \
    \   record2=d.r2.example,r2.example\n                    |          |  dest-host=p.r2.example\
    \        |\n                    |          |  dest-realm=r2.example         |\n\
    \                    |          |          |          |          |\n         \
    \           |          |          |          |--------->|\n                  \
    \  |          |          |     (forwarded request)\n                    |    \
    \      |          |     Explicit-Path\n                    |          |      \
    \    |       record1=d.r2.example,\n                    |          |         \
    \ |               r2.example\n                    |          |          |    \
    \ dest-host=d.r2.example\n                    |          |          |     dest-realm=r2.example\n\
    \                    |          |          |          |          |\n   cache=\
    \           |<---------|<---------|<---------|<---------|\n     record1=o.r1.example,r1.example\
    \    (answer)     |          |\n     record2=p.r1.example,r1.example    * no Explicit-Path-AVP\
    \ present\n     record3=p.r2.example,r2.example      |          |          |\n\
    \     record4=d.r2.example,r2.example      |          |          |\n         \
    \           |          |          |          |          |\n                  \
    \  |          |          |          |          |\n    (subsequent request of the\
    \ session will repeat the process above)\n                    |          |   \
    \       |          |          |\n                    |          |          | \
    \         |          |\n                     Figure 1: Example ER Message Flow\n"
- title: 6.  RADIUS/Diameter Protocol Interactions
  contents:
  - "6.  RADIUS/Diameter Protocol Interactions\n   No actions need to be taken with\
    \ regards to RADIUS/Diameter\n   interaction.  The routing extension described\
    \ in this document is\n   transparent to any translation gateway and relevant\
    \ only to Diameter\n   routing.  The assumption is that if there is a RADIUS proxy\
    \ chain\n   between Diameter translation agents, the route between translation\n\
    \   agents remains stable during the session and does not cause an\n   invalidation\
    \ of the proxy path stack.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The security considerations in [RFC3588] apply\
    \ to this extension.  In\n   addition, this extension raises questions of authorization\
    \ and can\n   potentially allow a new denial-of-service attack.\n   The authorization\
    \ issue comes about because the proxies that\n   participate in ER are self-selected.\
    \  An ER-Proxy is able, through\n   the operation of ER, to guarantee that it\
    \ can monitor every message\n   of a session.  This is in contrast to ordinary\
    \ Diameter routing,\n   where some messages may pass by an alternate route.  The\
    \ question is\n   whether the originating party is prepared to extend this additional\n\
    \   degree of trust to arbitrary parties along the path.  If not, the\n   ER-Originator\
    \ requires a mechanism to determine whether an ER-Proxy\n   listed in the returned\
    \ Explicit-Path AVP can be trusted.  If it has\n   such a mechanism, then an unwanted\
    \ ER-Proxy can be deleted from its\n   cache and thus not appear in the ER-Path\
    \ AVP in subsequent requests.\n   This specification assumes that either the originating\
    \ party is\n   prepared to allow arbitrary Diameter nodes along the path to attach\n\
    \   themselves to the session as ER-Proxies, or the ER-Originator\n   maintains\
    \ a pre-configured list of ER-Proxies in its cache.\n   The potential denial-of-service\
    \ attack is not a serious one because\n   the same result can be obtained more\
    \ directly.  An attacker with\n   control of a Diameter node along the path of\
    \ the original request\n   could insert an Explicit-Path-Record containing the\
    \ identity of\n   another node or a non-existent node, rather than its own identity.\n\
    \   Routing subsequent messages of the session through another node could\n  \
    \ result in violation of the trust assumptions made upstream.  Routing\n   subsequent\
    \ messages to a non-existent node causes them to be lost and\n   terminates the\
    \ session.  It would seem simpler to perpetrate whatever\n   harm the attacker\
    \ intends at the subverted Diameter node itself.  The\n   advantage of using ER\
    \ to accomplish either of the attacks is that it\n   makes it more difficult to\
    \ determine which node misbehaved, but the\n   extra effort involved to implement\
    \ the attack does not seem to be\n   worth the potential gain.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors gratefully acknowledge the contributions\
    \ of Tony Zhang,\n   Fortune Huang, Rajith R., Victor Fajardo, Jouni Korhonen,\
    \ Tolga\n   Asveren, Mark Jones, Avi Lior, Steve Norreys, Lionel Morand, Dave\n\
    \   Frascone, and Hannes Tschofenig.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC3588]   Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and\
    \ J.\n               Arkko, \"Diameter Base Protocol\", RFC 3588,\n          \
    \     September 2003.\n   [RFC5729]   Korhonen, J., Ed., Jones, M., Morand, L.,\
    \ and T. Tsou,\n               \"Clarifications on the Routing of Diameter Requests\
    \ Based\n               on the Username and the Realm\", RFC 5729, December 2009.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [TS23.234]  3GPP, \"3GPP system to Wireless\
    \ Local Area Network (WLAN)\n               interworking; System description\"\
    , TS 23.234\n               Version 7.4.0, 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tina Tsou\n   Huawei Technologies (USA)\n   2330 Central\
    \ Expressway\n   Santa Clara, CA  95050\n   USA\n   Phone: +1 408 330 4424\n \
    \  EMail: tena@huawei.com\n   URI:   http://tinatsou.weebly.com/contact.html\n\
    \   Glen Zorn\n   Network Zen\n   227/358 Thanon Sanphawut\n   Bang Na, Bangkok\
    \  10260\n   Thailand\n   Phone: +66 (0) 87-040-4617\n   EMail: gwz@net-zen.net\n\
    \   Tom Taylor (editor)\n   Huawei Technologies\n   1852 Lorraine Ave.\n   Ottawa\n\
    \   Canada\n   EMail: tom111.taylor@bell.net\n"
