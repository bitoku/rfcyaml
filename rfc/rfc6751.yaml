- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                   R. Despres, Ed.
  contents:
  - "Independent Submission                                   R. Despres, Ed.\n Native\
    \ IPv6 behind IPv4-to-IPv4 NAT Customer Premises Equipment (6a44)\n"
- title: Abstract
  contents:
  - "Abstract\n   In customer sites having IPv4-only Customer Premises Equipment (CPE),\n\
    \   Teredo (RFC 4380, RFC 5991, RFC 6081) provides last-resort IPv6\n   connectivity.\
    \  However, because it is designed to work without the\n   involvement of Internet\
    \ Service Providers, it has significant\n   limitations (connectivity between\
    \ IPv6 native addresses and Teredo\n   addresses is uncertain; connectivity between\
    \ Teredo addresses fails\n   for some combinations of NAT types).  6a44 is a complementary\n\
    \   solution that, being based on ISP cooperation, avoids these\n   limitations.\
    \  At the beginning of 6a44 IPv6 addresses, it replaces\n   the Teredo well-known\
    \ prefix, present at the beginning of Teredo IPv6\n   addresses, with network-specific\
    \ /48 prefixes assigned by local ISPs\n   (an evolution similar to that from 6to4\
    \ to 6rd (IPv6 Rapid Deployment\n   on IPv4 Infrastructures)).  The specification\
    \ is expected to be\n   complete enough for running code to be independently written\
    \ and the\n   solution to be incrementally deployed and used.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This is a contribution to the RFC Series, independently\n   of any other RFC\
    \ stream.  The RFC Editor has chosen to publish this\n   document at its discretion\
    \ and makes no statement about its value for\n   implementation or deployment.\
    \  Documents approved for publication by\n   the RFC Editor are not a candidate\
    \ for any level of Internet\n   Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6751.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Language ...........................................5\n  \
    \ 3. Definitions .....................................................5\n   4.\
    \ Design Goals, Requirements, and Model of Operation ..............7\n      4.1.\
    \ Hypotheses about NAT Behavior ..............................7\n      4.2. Native\
    \ IPv6 Connectivity for Unmanaged Hosts behind\n           NAT44s .....................................................7\n\
    \      4.3. Operational Requirements ...................................8\n  \
    \    4.4. Model of Operation .........................................9\n   5.\
    \ 6a44 Addresses .................................................12\n   6. Specification\
    \ of Clients and Relays ............................14\n      6.1. Packet Formats\
    \ ............................................14\n      6.2. IPv6 Packet Encapsulations\
    \ ................................14\n      6.3. 6a44 Bubbles ..............................................14\n\
    \      6.4. MTU Considerations ........................................16\n  \
    \    6.5. 6a44 Client Specification .................................16\n    \
    \       6.5.1. Tunnel Maintenance .................................16\n      \
    \     6.5.2. Client Transmission ................................19\n        \
    \   6.5.3. Client Reception ...................................20\n      6.6.\
    \ 6a44 Relay Specification ..................................23\n           6.6.1.\
    \ Relay Reception in IPv6 ............................23\n           6.6.2. Relay\
    \ Reception in IPv4 ............................24\n      6.7. Implementation\
    \ of Automatic Sunset ........................26\n   7. Security Considerations\
    \ ........................................26\n   8. IANA Considerations ............................................30\n\
    \   9. Acknowledgments ................................................30\n  \
    \ 10. References ....................................................30\n    \
    \  10.1. Normative References .....................................30\n      10.2.\
    \ Informative References ...................................31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Although most Customer Premises Equipment (CPE) should soon\
    \ be dual-\n   stack capable, a large installed base of IPv4-only CPEs is likely\
    \ to\n   remain for several years.  Their operation is based on IPv4-to-IPv4\n\
    \   NATs (NAT44s).  Also, due to the IPv4 address shortage, more and more\n  \
    \ Internet Service Providers (ISPs), and more and more mobile\n   operators, will\
    \ assign private IPv4 addresses ([RFC1918]) to their\n   customers (the [NAT444]\
    \ model).  For rapid and extensive use of IPv6\n   [RFC2460], there is therefore\
    \ a need for IPv6 connectivity behind\n   NAT44s, including those of the [NAT444]\
    \ model.\n   At the moment, there are two tunneling techniques specified for IPv6\n\
    \   connectivity behind NAT44s:\n   o  Configured tunnels.  These involve tunnel\
    \ brokers with which users\n      must register [RFC3053].  Well-known examples\
    \ include deployments\n      of the Hexago tool, and the SixXS collaboration,\
    \ which are\n      suitable for IPv6 early trials.  However, this approach is\
    \ not\n      adequate for mass deployment: it imposes the restriction that even\n\
    \      if two hosts are in the same customer site, IPv6 packets between\n    \
    \  them must transit via tunnel servers, which may be far away.\n   o  Automatic\
    \ Teredo tunnels [RFC4380] [RFC5991].  Teredo is specified\n      as a last-resort\
    \ solution that, due to its objective to work\n      without local ISP involvement,\
    \ has the following limitations:\n      *  Connectivity between IPv6 native addresses\
    \ and Teredo addresses\n         is uncertain.  (As explained in [RFC4380] Section\
    \ 8.3, this\n         connectivity depends on paths being available from all IPv6\n\
    \         native addresses to some Teredo relays.  ISPs lack sufficient\n    \
    \     motivations to ensure it.)\n      *  Between two Teredo addresses, IPv6\
    \ connectivity fails for some\n         combinations of NAT44 types ([RFC6081]\
    \ Section 3).\n      *  According to [RFC4380] Section 5.2, each Teredo host has\
    \ to be\n         configured with the IPv4 address of a Teredo server (a\n   \
    \      constraint that can, however, be avoided in some\n         implementations).\n\
    \   6a44 is designed to avoid Teredo limitations: with 6a44, ISPs can\n   participate\
    \ in the solution.  The approach for this is similar to the\n   approach that\
    \ permitted 6rd [RFC5569] [RFC5969] to avoid the\n   limitations of 6to4 [RFC3056]\
    \ [RFC3068]: at the beginning of IPv6\n   addresses, the Teredo well-known prefix\
    \ is replaced by network-\n   specific prefixes assigned by local ISPs.\n   This\
    \ document is organized as follows: terms used in the document are\n   defined\
    \ in Section 3; design goals and model of operation are\n   presented in Section\
    \ 4; Section 5 describes the format of 6a44 IPv6\n   addresses; Section 6 specifies\
    \ in detail the behaviors of 6a44\n   clients and 6a44 relays; security and IANA\
    \ considerations are covered\n   in Sections 7 and 8, respectively.\n   This specification\
    \ is expected to be complete enough for running code\n   to be independently written\
    \ and the solution to be incrementally\n   deployed and used.  Its status is Experimental\
    \ rather than Standards\n   Track, to reflect uncertainty as to which major Internet\
    \ players may\n   be willing to support it.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   The following definitions are used in this document:\n  \
    \ MAJOR NEW DEFINITIONS\n   6a44 ISP network:  An IPv4-capable ISP network that\
    \ supports at least\n      one 6a44 relay.  Additional conditions are that it\
    \ assigns\n      individual IPv4 addresses to its customer sites (global or\n\
    \      private), that it supports ingress filtering [RFC2827], and that\n    \
    \  its path MTUs are at least 1308 octets.\n   6a44 relay:  A node that supports\
    \ the 6a44 relay function defined in\n      this document and that has interfaces\
    \ to an IPv6-capable upstream\n      network and to an IPv4-capable downstream\
    \ network.\n   6a44 client:  A host that supports the 6a44 client function defined\n\
    \      in this document and has no means other than 6a44 to have an IPv6\n   \
    \   native address.\n   6a44 tunnel:  A tunnel established and maintained between\
    \ a 6a44\n      client and 6a44 relays of its ISP network.\n   6a44 bubble:  A\
    \ UDP/IPv4 packet sent from a 6a44 client to the\n      6a44-relay address, or\
    \ vice versa, and having a UDP payload that\n      cannot be confused with an\
    \ IPv6 packet.  In the client-to-relay\n      direction, it is a request for a\
    \ response bubble.  In the relay-\n      to-client direction, it conveys the up-to-date\
    \ IPv6 prefix of the\n      client.\n   SECONDARY NEW DEFINITIONS\n   (This list\
    \ is for reference and can be skipped by readers familiar\n   with the usual terminology.)\n\
    \   6a44 service:  The service offered by a 6a44 ISP network to its 6a44\n   \
    \   clients.\n   6a44-client IPv6 address:  The IPv6 address of a 6a44 client.\
    \  It is\n      composed of the client IPv6 prefix, received from a 6a44 relay,\n\
    \      followed by the client local IPv4 address.\n   6a44-client IPv6 prefix:\
    \  For a 6a44 client, the IPv6 prefix (/96)\n      composed of the IPv6 prefix\
    \ of the local 6a44 network (/48)\n      followed by the UDP/IPv4 mapped address\
    \ of the client (32 +\n      16 bits).\n   6a44-client UDP/IPv4 mapped address:\
    \  For a 6a44 client, the external\n      UDP/IPv4 address that, in the CPE NAT44\
    \ of the site, is that of\n      its 6a44 tunnel.\n   6a44-client UDP/IPv4 local\
    \ address:  For a 6a44 client, the\n      combination of its local IPv4 address\
    \ and the 6a44 port.\n   6a44 port:  UDP port 1027, reserved by IANA for 6a44\
    \ (see Section 8).\n   6a44-relay UDP/IPv4 address:  The UDP/IPv4 address composed\
    \ of the\n      6a44-relay anycast address and the 6a44 port.\n   6a44-relay anycast\
    \ address:  IPv4 anycast address 192.88.99.2,\n      reserved by IANA for 6a44\
    \ (see Section 8).\n   6a44-network IPv6 prefix:  An IPv6 /48 prefix assigned\
    \ by an ISP to a\n      6a44 network.\n   USUAL DEFINITIONS\n   (This list is\
    \ for reference and can be skipped by readers familiar\n   with the usual terminology.)\n\
    \   Upstream direction:  For a network border node, the direction toward\n   \
    \   the Internet core.\n   Downstream direction:  For a network border node, the\
    \ direction\n      toward end-user nodes (opposite to the upstream direction).\n\
    \   IPv4 private address:  An address that starts with one of the three\n    \
    \  [RFC1918] prefixes (10/8, 172.16/12, or 192.168/16).\n   IPv6 native address:\
    \  An IPv6 global unicast address that starts with\n      an aggregatable prefix\
    \ assigned to an ISP.\n   UDP/IPv4 address:  The combination of an IPv4 address\
    \ and a UDP port.\n   UDP/IPv4 packet:  A UDP datagram contained in an IPv4 packet.\n\
    \   IPv6/UDP/IPv4 packet:  An IPv6 packet contained in a UDP/IPv4 packet.\n"
- title: 4.  Design Goals, Requirements, and Model of Operation
  contents:
  - '4.  Design Goals, Requirements, and Model of Operation

    '
- title: 4.1.  Hypotheses about NAT Behavior
  contents:
  - "4.1.  Hypotheses about NAT Behavior\n   6a44 is designed to work with NAT44 behaviors\
    \ identified in Section 3\n   of [RFC6081].  In particular, it has to work with\
    \ endpoint-dependent\n   mappings as well as with endpoint-independent mappings,\
    \ including\n   cases where there are dynamic changes from one mode to the other.\n\
    \   The only assumption is that, after a mapping has been established in\n   the\
    \ NAT44, it is maintained as long as it is reused at least once, in\n   each direction,\
    \ every 30 seconds.\n   NOTE: 30 seconds is the value used for the same mapping-maintenance\n\
    \   purpose in Teredo [RFC4380] and in SIP [RFC5626].\n"
- title: 4.2.  Native IPv6 Connectivity for Unmanaged Hosts behind NAT44s
  contents:
  - "4.2.  Native IPv6 Connectivity for Unmanaged Hosts behind NAT44s\n   The objective\
    \ remains that, as soon as possible, CPEs and ISPs\n   support IPv6 native prefixes.\
    \  6a44 is therefore designed only as a\n   temporary solution for hosts to obtain\
    \ IPv6 native addresses in sites\n   whose CPEs are not IPv6 capable yet.\n  \
    \ As noted in Section 1, IPv6 native addresses obtainable with\n   configured\
    \ tunnels have important limitations.  However, compared to\n   6a44 addresses,\
    \ they have the advantage of remaining unchanged in the\n   case of NAT44 reset.\
    \  6a44 therefore remains the last-resort solution\n   for IPv6 native addresses\
    \ in unmanaged hosts of IPv4-only-CPE sites,\n   while configured tunnels may\
    \ still be preferred for some managed\n   hosts if reported limitations of configured\
    \ tunnels are judged to be\n   acceptable.  As their scopes are different, the\
    \ two solutions can\n   usefully coexist.\n   Note that Teredo remains a last-resort\
    \ solution for hosts to have\n   IPv6 addresses where IPv6 native addresses cannot\
    \ be made available\n   (and where Teredo limitations are judged to be acceptable).\n"
- title: 4.3.  Operational Requirements
  contents:
  - "4.3.  Operational Requirements\n   Operational requirements of 6a44 include the\
    \ following:\n   Robust IPv6 connectivity:  A node having a 6a44 address must\
    \ have\n      paths across the Internet to and from all IPv6 native addresses\n\
    \      that are not subject to voluntary firewall filtering.\n   Intra-site path\
    \ efficiency:  Packets exchanged between 6a44 clients\n      that are behind the\
    \ same CPE NAT44 must not have to traverse it.\n      If these clients have IPv4\
    \ connectivity using their private IPv4\n      addresses, they must also have\
    \ IPv6 connectivity using their 6a44\n      addresses.\n   Plug-and-play operation\
    \ of 6a44 clients:  In order to obtain a 6a44\n      address from its local ISP,\
    \ a 6a44 client must need no parameter\n      configuration.\n   Scalability of\
    \ ISP functions:  For the solution to be easily\n      scalable, ISP-supported\
    \ functions have to be completely stateless.\n   Anti-spoofing protection:  Where\
    \ address anti-spoofing is ensured in\n      IPv4 with ingress filtering [RFC2827]\
    \ [RFC3704], IPv6 addresses\n      must benefit from the same degree of anti-spoofing\
    \ protection.\n   Overall operational simplicity:  To paraphrase what Antoine\
    \ de Saint-\n      Exupery said in [TheTool], \"it seems that perfection is attained\n\
    \      not when there is nothing more to add, but when there is nothing\n    \
    \  more to remove\".\n   Incremental deployability:  Hosts and ISP networks must\
    \ be able to\n      become 6a44 capable independently of each other.  IPv6 must\
    \ be\n      operational where both are available, and there must be no\n     \
    \ perceptible effect where they are not both available.\n"
- title: 4.4.  Model of Operation
  contents:
  - "4.4.  Model of Operation\n   Operation of 6a44 involves two types of nodes: 6a44\
    \ clients and 6a44\n   relays.  Figure 1 shows the two applicability scenarios:\n\
    \   o  In the first one, IPv4 addresses assigned to customer sites are\n     \
    \ global IPv4.\n   o  In the second one, they are private IPv4 addresses (the\
    \ [NAT444]\n      model, where ISPs operate one or several NAT44s, also called\n\
    \      Carrier-Grade NATs (CGNs)).\n                             (A) GLOBAL IPv4\
    \ ISP NETWORK\n                                   +------------------+\n     \
    \   6a44 customer network(s)   |GLOBAL IPv4       |       Upstream\n         \
    \      +-----------+    ---| MTU >= 1308      +---  IPv4 network\n           \
    \ ---| Private   |       | ingress filtering|   (<== no route\n    +----+    \
    \ |  IPv4  +-----+    | IPv6 optional    |  to 6a44 relays)\n    |    |-----|\
    \        |NAT44|----+                  |\n    +----+     |        +-----+    |\
    \      +-------------+\n     6a44   ---|MTU >= 1308|       |    --+6a44 relay(s)|---\
    \ Upstream\n   client(s)   |   no      |    ---|      +-------------+  IPv6 network\n\
    \               |native IPv6|       |                  |\n               +-----------+\
    \       +------------------+\n                             (B) PRIVATE IPv4 ISP\
    \ NETWORK\n                                   +------------------+\n         \
    \                          |PRIVATE IPv4      |\n                            \
    \       | as above         |\n                                ---|           \
    \       |\n                                   |     +--------------+\n       \
    \                            |   --+ ISP NAT44(s) |--- Upstream\n            \
    \      as above     ----+     +--------------+   IPv4 network\n              \
    \                     |                  |\n                                 \
    \  |     +--------------+\n                                ---|   --+6a44 relay(s)\
    \ |--- Upstream\n                                   |     +--------------+   IPv6\
    \ network\n                                   |                  |\n         \
    \                          +------------------+\n                  Figure 1: 6a44\
    \ Applicability Scenarios\n   In both configurations, the ISP network may also\
    \ assign IPv6 prefixes\n   to customer sites:\n   o  If customer sites are only\
    \ assigned IPv4 addresses (IPv6 prefix\n      available neither natively nor with\
    \ any tunnel), 6a44 applies not\n      only to sites whose CPEs are IPv4-only\
    \ capable but also to those\n      whose CPEs are dual-stack capable.\n   o  If\
    \ customer sites are assigned both IPv4 addresses and IPv6\n      prefixes, 6a44\
    \ only applies to sites whose CPEs are IPv4-only\n      capable.\n   Figure 2\
    \ illustrates paths of IPv6 packets between a 6a44 client, A,\n   and various\
    \ possible locations of remote hosts (E in the same site, F\n   in another 6a44\
    \ site of the same ISP, G in a non-6a44 IPv6 site of\n   the same ISP, D in an\
    \ IPv6 site of another ISP).  Between 6a44\n   clients of a same site, IPv6 packets\
    \ are encapsulated in IPv4\n   packets.  Those between 6a44 clients and 6a44 relays\
    \ are encapsulated\n   in UDP/IPv4 packets.\n   6a44 operates as follows (details\
    \ in Section 6):\n   1.   A 6a44 client starts operation by sending a 6a44 bubble\
    \ to the\n        6a44-relay UDP/IPv4 address.\n   2.   When a 6a44 relay receives\
    \ a bubble from one of its 6a44\n        clients, it returns to this client a\
    \ bubble containing the IPv6\n        prefix of this client.\n   3.   When a 6a44\
    \ client receives a bubble from a 6a44 relay, it\n        updates (or confirms)\
    \ its 6a44 address.  It is an update if the\n        client has no IPv6 address\
    \ yet or if, due to a CPE reset, this\n        address has changed.  After receiving\
    \ a bubble, a client is\n        ready to start, or to continue, IPv6 operation.\n\
    \   4.   When a 6a44 client having a 6a44 address has an IPv6 packet to\n    \
    \    send whose destination IS in the same customer site, it\n        encapsulates\
    \ it in an IPv4 packet whose destination is found in\n        the IPv6 destination\
    \ address.  It then sends the resulting IPv6/\n        IPv4 packet.\n   5.   When\
    \ a 6a44 client receives a valid IPv6/IPv4 packet from a 6a44\n        client\
    \ of the same site, it decapsulates the IPv6 packet and\n        submits it to\
    \ further IPv6 processing.\n   6.   When a 6a44 client having a 6a44 address has\
    \ an IPv6 packet to\n        send whose destination IS NOT in the same customer\
    \ site, it\n        encapsulates the packet in a UDP/IPv4 packet whose destination\n\
    \        is the 6a44-relay UDP/IPv4 address.  It then sends the IPv6/UDP/\n  \
    \      IPv4 packet.\n   7.   When a 6a44 relay receives via its IPv4 interface\
    \ a valid IPv6/\n        UDP/IPv4 packet whose destination IS one of its 6a44\
    \ clients, it\n        forwards the contained IPv6 packet in a modified IPv6/UDP/IPv4\n\
    \        packet.  The UDP/IPv4 destination of this packet is found in the\n  \
    \      IPv6 destination address.\n   8.   When a 6a44 client receives a valid\
    \ IPv6/UDP/IPv4 packet from a\n        6a44 relay, it decapsulates the IPv6 packet\
    \ and submits it to\n        further IPv6 processing.\n   9.   When a 6a44 relay\
    \ receives via its IPv4 interface a valid IPv6/\n        UDP/IPv4 packet whose\
    \ IPv6 destination IS NOT one of its 6a44\n        clients, it decapsulates the\
    \ IPv6 packet and sends it via its\n        IPv6 interface.\n   10.  When a 6a44\
    \ relay receives via its IPv6 interface a valid IPv6\n        packet whose destination\
    \ is one of its 6a44 clients, it\n        encapsulates the packet in a UDP/IPv4\
    \ packet whose destination\n        is the UDP/IPv4 address found in the IPv6\
    \ destination address.\n        It then sends the resulting IPv6/UDP/IPv4 packet\
    \ via its IPv4\n        interface.\n   11.  To maintain the NAT44 mapping of its\
    \ 6a44 tunnel, and to quickly\n        detect the need to change its 6a44 address\
    \ in case of NAT44\n        reset, a 6a44 client from time to time sends a bubble\
    \ to the\n        6a44-relay address (see Section 6.5.1).\n   12.  When a 6a44\
    \ relay receives via its IPv4 interface an IPv6/UDP/\n        IPv4 packet whose\
    \ IPv6 and UDP/IPv4 source addresses are not\n        consistent, it discards\
    \ the invalid packet and returns a bubble\n        to the UDP/IPv4 source address.\
    \  (This permits the 6a44 client\n        at this address to update its IPv6 address.)\n\
    \           CUSTOMER         +-------------------------+\n             SITES \
    \         |      ISP NETWORK        |\n          +---------+       +----------------+\
    \        |\n          |         |       |6a44 ISP NETWORK|        |   GLOBAL\n\
    \          |         |       |                |        |  INTERNET\n   HOSTS \
    \ |      IPv6/UDP/IPv4         +---------+    |             HOST\n    +-+   |\
    \      +-----+    |         B|   6a44  |C/48|     IPv6    +-+\n    |A|---|--.---|NAT44|----|----------.---------.----|---\
    \ - - - ---|D|\n    +-+   |   \\  +-----+    |         /| relay(s)|\\   |    \
    \         +-+\n    +-+   |   /     |       |        ' +---------+ '  |\n    |E|---|--'\
    \      |       |        |       |     |  |\n    +-+ IPv6/IPv4   |       |    \
    \    |       |     |  |\n          +---------+       |        |       |     |\
    \  |\n                            |        |       |     |  |\n          +---------+\
    \       |        |       |     |  |\n          |      IPv6/UDP/IPv4       .  \
    \     |     |  |\n    +-+   |      +-----+    |       /        |     |  |\n  \
    \  |F|---|------|NAT44|----|------'         |     |  |\n    +-+   |      +-----+\
    \    |                |     |  |\n          |         |       +----------------+\
    \     |  |\n          +---------+       |                      .  |\n    +-+ \
    \                    |                     /   |\n    |G|---- - - - - - - ----|--------------------'\
    \    |\n    +-+           IPv6      |                         |\n            \
    \                +-------------------------+\n   IPv6 PATHS A-D:   D is IPv6 of\
    \ another ISP\n              A-E:   E is a 6a44 client in the same site\n    \
    \          A-F:   F is a 6a44 client in another site of the same ISP\n       \
    \       A-G:   G is IPv6 of the same ISP, other than 6a44\n         Figure 2:\
    \ IPv6 Paths between 6a44 Hosts and Remote Hosts\n"
- title: 5.  6a44 Addresses
  contents:
  - "5.  6a44 Addresses\n   The 6a44 IPv6 address an ISP assigns to a host must contain\
    \ all\n   pieces of information needed to reach it from other IPv6 addresses.\n\
    \   These pieces are described below and illustrated in Figure 3:\n   o  the 6a44-network\
    \ IPv6 prefix C (a /48 the ISP has assigned to its\n      6a44 relays);\n   o\
    \  the customer-site IPv4 address N (either global IPv4 or, if the\n      ISP\
    \ uses a [NAT444] model, private IPv4);\n   o  the mapped port Z of the 6a44 tunnel\
    \ (i.e., the external port\n      assigned by the NAT44 to the tunnel that the\
    \ client maintains\n      between its UDP/IPv4 local address A:W and the 6a44-relay\
    \ UDP/IPv4\n      address B:W);\n   o  the client local IPv4 address A (i.e.,\
    \ the private IPv4 address\n      assigned to the client in its customer site;\
    \ it is needed for\n      intra-site IPv6 connectivity).\n                  Customer\
    \ network       ISP network\n                  +--------------+       +------------------+\n\
    \       Client     |IPv4         CPE      |IPv4              |\n       +----+\
    \     |           +-----+    |        +----------+\n       | ^  |-----|      \
    \     |NAT44|----+        |6a44 relay|---- IPv6\n       +-|-^+     |         \
    \  +-----+    |        +----------+^\n         | |      |          ^   |   ^ \
    \  |         ^        | |\n         | |      +----------|---+   |   +---------|--------+\
    \ |\n         | |                 |   ^   |             |          |\n       \
    \  | |             >0/0|   |   |N/32<        |          |\n         | |      \
    \               |                 |          |\n         | |                 \
    \ Mapping              |          |\n         | |                <a:w>-<N:Z> (*)\
    \        |          |\n         | |                                       |  \
    \        |\n         | |A:W<                               >B:W|          |\n\
    \         |                                                    |\n    IPv6 |C.N.Z.A/128<\
    \                                        |C/48<\n    (*) With NAT44(s) between\
    \ client and CPE, a:w may differ from A:W\n    |0                    47|48   \
    \        79|80   95|96          127|\n    +-------+-------+-------+-------+-------+-------+-------+-------+\n\
    \    |      6a44-network     | Customer-site |Tunnel |  6a44-client  |\n    |\
    \      IPv6 prefix      |  IPv4 address |mapped |  local IPv4   |\n    |     \
    \     (C)          |      (N)      |port(Z)|  address (A)  |\n    +-------+-------+-------+-------+-------+-------+-------+-------+\n\
    \                                  6a44-client\n                            <--\
    \ UDP/IPv4 address -->\n    <------------ 6a44-client IPv6 prefix --------->\n\
    \    <---------------- 6a44-client IPv6 address --------------------->\n     \
    \               Figure 3: Host-Address Construction\n   NOTE: 6a44 addresses are\
    \ not guaranteed to comply with the rule\n   listed in [RFC4291], according to\
    \ which bits 64-127 of aggregatable\n   unicast addresses have to be in Modified-EUI-64\
    \ Interface Identifier\n   (IID) format.  However, these bits within the 6a44\
    \ addresses are\n   interpreted only where 6a44 addresses are processed, i.e.,\
    \ in 6a44\n   relays and clients.  No operational problem is therefore foreseen.\n\
    \   Besides, because it is a purely transitional tool, it shouldn't\n   prevent\
    \ any \"development of future technology that can take advantage\n   of interface\
    \ identifiers with universal scope\" (the purpose of this\n   format, as expressed\
    \ in [RFC4291].\n"
- title: 6.  Specification of Clients and Relays
  contents:
  - '6.  Specification of Clients and Relays

    '
- title: 6.1.  Packet Formats
  contents:
  - '6.1.  Packet Formats

    '
- title: 6.2.  IPv6 Packet Encapsulations
  contents:
  - "6.2.  IPv6 Packet Encapsulations\n   For NAT44 traversal, an IPv6 packet transmitted\
    \ from a 6a44 client to\n   a 6a44 relay, or vice versa, is encapsulated in a\
    \ UDP/IP packet whose\n   source and destination addresses are those of the two\
    \ endpoints (A:W\n   and B:W in the notations of Figure 3).  The IPv4 packet is\
    \ that of a\n   complete datagram (its more-fragment bit is set to 0, its offset\
    \ is\n   set to 0, and its datagram identification may be set to 0).  The UDP\n\
    \   checksum is set to 0 (there is no need for an additional layer of\n   checksum\
    \ protection).  The length of the IPv6 packet SHOULD NOT\n   exceed 1280 octets\
    \ (see Section 6.4).\n        Octets: |0         |20 |28                 |68 \
    \           |\n                +----------+---+-------------------+-------//-----+\n\
    \                |   IPv4   |UDP|    IPv6 header    | IPv6 payload |\n       \
    \         +----------+---+-------------------+-------//-----+\n   An IPv6 packet\
    \ transmitted from a 6a44 client to another 6a44 client\n   of the same site is\
    \ encapsulated in an IPv4 packet whose source and\n   destination addresses are\
    \ the private IPv4 addresses of the two\n   hosts.  The IPv4 packet is that of\
    \ a complete datagram (its\n   more-fragment bit is set to 0, its offset is set\
    \ to 0, and its\n   datagram identification may be set to 0).  The size of the\
    \ IPv6\n   packet SHOULD NOT exceed 1280 octets (see Section 6.4).\n         \
    \ Octets:  |0         |20                 |60            |\n                 \
    \  +----------+-------------------+-------//-----+\n                   |   IPv4\
    \   |    IPv6 header    | IPv6 payload |\n                   +----------+-------------------+-------//-----+\n"
- title: 6.3.  6a44 Bubbles
  contents:
  - "6.3.  6a44 Bubbles\n   A \"bubble\" is a UDP/IPv4 packet whose UDP payload is\
    \ comprised of a\n   \"6a44-client IPv6 prefix\" field and a \"Bubble ID\" field\
    \ and whose UDP\n   checksum is set to 0.  Having no UDP checksum protection in\
    \ bubbles\n   is a simplification that is acceptable because bubble contents are\n\
    \   regularly updated and non-critical (a client accepting a corrupted\n   IPv6\
    \ prefix never leads to any IPv6 packet being accepted by any\n   wrong destination).\n\
    \                      \"6a44-client IPv6 prefix\" field\n         . from a 6a44\
    \ client = 0 (also denoted by ::/96)\n         . from a 6a44 relay = 6a44-client\
    \ IPv6 prefix\n                                    |\n         Octets:  |0   \
    \      |20 |28| |40 |48\n                  +----------+---+--|-+---+\n       \
    \           |   IPv4   |UDP|  . | . |\n                  +----------+---+----+-|-+\n\
    \                                        |\n                                 \
    \  \"Bubble ID\" field\n          . from a 6a44 client: a client-selected value\n\
    \          . from a 6a44 relay:\n             - in a response bubble, copy of\
    \ the received Bubble ID\n             - in an error-signaling bubble, 0\n   \
    \                    Figure 4: 6a44 Bubble Format\n   In a bubble from a 6a44\
    \ client to a 6a44 relay, the \"6a44-client\n   IPv6 prefix\" field is only reserved\
    \ space for the response and is set\n   to 0.  In a bubble from a 6a44 relay to\
    \ a 6a44 client, this field\n   contains the IPv6 prefix of the client, left-justified.\n\
    \   In a bubble from a 6a44 client to a 6a44 relay, the \"Bubble ID\" field\n\
    \   contains a randomly chosen value, renewed under the circumstances\n   defined\
    \ in Section 6.5.1.  In a bubble from a 6a44 relay to a 6a44\n   client, if the\
    \ bubble is a response to a bubble received from the\n   client, the field contains\
    \ the value found in the received bubble; if\n   the bubble is a reaction to a\
    \ received IPv6/UDP/IPv4 packet whose\n   IPv6 and UDP/IPv4 sources are inconsistent\
    \ (i.e., not conforming to\n   R44-2 condition (3) in Section 6.6.2), the field\
    \ is set to 0.  The\n   purpose of this field is to protect against 6a44-relay\
    \ spoofing\n   attacks (see Section 7).\n   In order to preserve forward compatibility\
    \ with any extension of\n   bubble formats -- should one prove useful in the future\
    \ -- 6a44\n   clients and 6a44 relays MUST be configured to receive bubbles whose\n\
    \   UDP payload lengths are longer than 20 octets (up to that of an IPv6-\n  \
    \ packet header since, as detailed in Sections 6.5.3 and 6.6.2, bubbles\n   are\
    \ recognized by the fact that their lengths are shorter than that\n   of tunneled\
    \ IPv6 packets).\n"
- title: 6.4.  MTU Considerations
  contents:
  - "6.4.  MTU Considerations\n   Reassembly of a fragmented IPv4 datagram necessitates\
    \ that its\n   identifier be remembered from reception of the first fragment to\n\
    \   reception of the last one, and necessitates a timeout protection\n   against\
    \ packet losses.  If such stateful IP-layer processing would be\n   necessary\
    \ for 6a44, it would make it more complex than needed, would\n   introduce a vulnerability\
    \ to denial-of-service attacks, and would\n   impose the restriction that all\
    \ fragments of a fragmented IPv4\n   datagram go to the same relay.  This last\
    \ point would be a constraint\n   on how load balancing may be performed between\
    \ multiple 6a44 relays,\n   and would therefore be detrimental to scalability.\n\
    \   For 6a44 processing to remain completely stateless, IPv4 packets\n   containing\
    \ encapsulated IPv6 packets must never be fragmented (DF\n   always set to 1).\
    \  For this requirement to be met, the following\n   apply:\n   o  In customer\
    \ sites, 6a44 clients MUST have IPv4 link MTUs that\n      support encapsulated\
    \ IPv6 packets of lengths up to 1280 octets,\n      i.e., for IPv6/UDP/IPv4 packets\
    \ that traverse the CPE, link MTUs\n      of at least 1280+20+8=1308 octets. \
    \ (This condition is in general\n      satisfied.)\n   o  For the same reason,\
    \ 6a44 ISP networks must have IPv4 path MTUs of\n      at least 1308 octets. \
    \ (This condition is in general satisfied.)\n   o  6a44 clients SHOULD limit the\
    \ size of IPv6 packets they transmit\n      to 1280 octets.\n   o  6a44 relays\
    \ SHOULD set their IPv6 MTU to 1280.  (If a relay\n      receives an IPv6 packet\
    \ longer than this MTU via its IPv6 upstream\n      interface, it MUST return\
    \ an ICMPv6 Packet Too Big error message.)\n      Typical ISP networks have path\
    \ MTUs that would permit IPv6 MTUs of\n      6a44 devices to be longer than 1280\
    \ octets, but accepting 1280\n      octets is a precaution that guarantees against\
    \ problems with\n      customer sites that may have internal path MTUs smaller\
    \ than those\n      supported by their ISP networks.\n"
- title: 6.5.  6a44 Client Specification
  contents:
  - '6.5.  6a44 Client Specification

    '
- title: 6.5.1.  Tunnel Maintenance
  contents:
  - "6.5.1.  Tunnel Maintenance\n   For a 6a44-client IPv6 address to remain valid,\
    \ the port mapping of\n   the 6a44 tunnel MUST be maintained in the CPE NAT44.\n\
    \   For this, the 6a44 client SHOULD apply the equivalent of the\n   following\
    \ TM-x rules, as illustrated in Figure 5.\n   TM-1  At initialization, a timer\
    \ value T1 is randomly chosen in the\n         recommended range of 1 to 1.5 seconds,\
    \ and the \"6a44 disabled\"\n         state is entered.  (Randomness of this value\
    \ is a precaution to\n         avoid the following scenario: if many hosts happened\
    \ to be\n         re-initialized at the same time, the bubble traffic resulting\n\
    \         from the following rules would be synchronized.)\n   TM-2  In the \"\
    6a44-disabled\" state, if it appears that the interface\n         has no IPv6\
    \ native address BUT has a private IPv4 address, then\n         (1) the Attempt\
    \ count (a local variable) is set to 1; (2) a new\n         Bubble ID (another\
    \ local variable) is randomly chosen (it is\n         not critical how random\
    \ this new value is, as explained in\n         Section 7); (3) a bubble is sent\
    \ with this Bubble ID; (4) the\n         \"Bubble sent\" state is entered with\
    \ the timer set to T1.\n   TM-3  In the \"Bubble sent\" state, if the timer expires\
    \ AND the\n         Attempt count is less than 4, then (1) the Attempt count is\n\
    \         increased by 1; (2) a new bubble is sent with the current\n        \
    \ Bubble ID; (3) the \"Bubble sent\" state is re-entered with the\n         timer\
    \ reset to T1.\n   TM-4  In the \"Bubble sent\" state, if a bubble is received,\
    \ then\n         (1) the 6a44-client IPv6 address is set to the received\n   \
    \      6a44-client IPv6 prefix followed by the host local IPv4\n         address;\
    \ (2) the \"Bubble received\" state is entered with the\n         timer set to\
    \ T2, whose recommended value is 30 seconds minus 4\n         times T1.\n   TM-5\
    \  In the \"Bubble sent\" state, if timer T1 expires AND the Attempt\n       \
    \  count is equal to 4, then the \"No 6a44 relay\" state is entered\n        \
    \ with the timer set to T3, whose recommended value is 30\n         minutes.\n\
    \   TM-6  In the \"Bubble sent\" state, OR the \"Bubble received\" state, OR\n\
    \         the \"No 6a44 relay\" state, if an IPv6 native address is\n        \
    \ obtained by some other means, OR if the private IPv4 address of\n         the\
    \ host is no longer valid, then (1) the timer is disarmed;\n         (2) the \"\
    6a44 disabled\" state is entered.\n   TM-7  In the \"Bubble received\" state,\
    \ if timer T2 expires, then\n         (1) the Attempt count is reset to 1; (2)\
    \ a new Bubble ID is\n         randomly chosen; (3) a bubble is sent with this\
    \ Bubble ID;\n         (4) the \"Bubble sent\" state is entered with the timer\
    \ set\n         to T1.\n   TM-8  In the \"Bubble received\" state, if a bubble\
    \ is received, then\n         the timer is reset to T2.  (NOTE: Since a bubble\
    \ is received by\n         a 6a44 client either in response to a bubble it has\
    \ sent or in\n         reaction to a packet it has sent with inconsistent IPv6\
    \ and\n         UDP/IPv4 source addresses, receiving a bubble is a sign that\n\
    \         the tunnel mapping reported in the received bubble prefix has\n    \
    \     recently been used in BOTH directions, a condition required by\n       \
    \  some NAT44s to maintain their mappings.)\n   TM-9  In the \"No 6a44 relay\"\
    \ state, if the timer expires, then\n         (1) the Attempt count is reset to\
    \ 1; (2) a new Bubble ID is\n         randomly chosen; (3) a bubble is sent with\
    \ this Bubble ID;\n         (4) the \"Bubble sent\" state is entered with the\
    \ timer set\n         to T1.\n                        Initialization\n       \
    \               ________v________\n                     /                 \\\n\
    \                     | \"6a44 disabled\" |------------<-----------------+\n \
    \                    \\_________________/                              ^\n   \
    \                           v no v6-add AND v4-add                  ^\n     +--------->--------------v\
    \                                       ^\n     ^         +--------------v--------------+\
    \                        ^\n     ^         |   Reset the Attempt count   |   \
    \                     ^\n     ^         |   Renew the Bubble ID       |      \
    \                  ^\n     ^         +--------------+--------------+         \
    \               ^\n     ^    +----->-------------v                           \
    \            ^\n     ^    ^    +--------------v--------------+               \
    \         ^\n     ^    ^    |          Send a bubble      |                  \
    \      ^\n     ^    ^    +--------------v--------------+                     \
    \   ^\n     ^    ^           ________v________                               ^\n\
    \     ^    ^ Timer T1 /                 \\ 4 attempts without answer    ^\n  \
    \   ^    +----<-----|  \"Bubble sent\"  |-------->----------------+    ^\n   \
    \  ^   (1 to 1.5 s)\\_________________/                         v    ^\n     ^\
    \                        v        \\ v6-add OR no v4-add     v    ^\n     ^  \
    \      Bubble received v         +-----------------------------+\n     ^     \
    \                   v-----------------<-----------+    v    ^\n     ^        \
    \       _________v_________                    ^    v    ^\n     ^     Timer T2\
    \ /                   \\Bubble received    ^    v    ^\n     +----------<---|\
    \ \"Bubble received\" |-------->----------+    v    ^\n     ^ (30 s - 4*T1)\\\
    ___________________/                        v    ^\n     ^                   \
    \               \\ v6-add OR no v4-add    v    ^\n     ^                     \
    \              +------->--------------------+\n     ^                        \
    \                                   v    ^\n     ^                        +----------------------------------+\
    \    ^\n     ^                 _______v________                              \
    \ ^\n     ^       Timer T3 /                 \\ v6-add OR no v4-add         ^\n\
    \     +-----------<----| \"No 6a44 relay\" |----->-----------------------+\n \
    \            (30 min) \\_________________/\n                  Figure 5: Tunnel\
    \ Maintenance Algorithm\n"
- title: 6.5.2.  Client Transmission
  contents:
  - "6.5.2.  Client Transmission\n   A 6a44 client transmits packets according to\
    \ the following CT-x\n   rules.  In figures that illustrate these rules, symbols\
    \ used in\n   Section 5 are reused; packets are represented as a succession of\n\
    \   significant fields separated by commas, with sources preceding\n   destinations\
    \ as usual; != means \"different from\".\n   CT-1  BUBBLE SENT BY A 6a44 CLIENT\n\
    \               (IPv4, A, B, UDP[W, W, ::/96, <current Bubble ID>])\n        \
    \                                 |\n                 +-------+--------+     \
    \ |\n                 |       |  6a44  |      |\n                 |       | client\
    \ +------>---------- >B:W\n                 |       |function|A:W<     UDP/IPv4\n\
    \                 +-------+--------+\n                        Host\n   Bubbles\
    \ are transmitted from time to time.  Conditions of their\n   transmission are\
    \ specified in Section 6.5.1, and their format is\n   specified in Section 6.3.\n\
    \   CT-2  IPv6/IPv4 PACKET SENT TO A HOST OF THE SAME SITE\n            [IPv6,\
    \ <C.N.Z.A>, <C.N..E>,...]\n                  |\n                  | (IPv4, A,\
    \ A2, IP-in-IP[encapsulated packet])\n                  |                  |\n\
    \             +----|--+--------+      |\n             |    |  |  6a44  |     \
    \ |\n             |  -->--+ client +------>------ >A2\n             |  IPv6 |function|<A\
    \       IPv4\n             +-------+--------+\n                     Host\n   If\
    \ an IPv6 packet is submitted for transmission with ALL the\n   following conditions\
    \ satisfied, the 6a44 client MUST encapsulate the\n   IPv6 packet in an IPv4 packet\
    \ whose protocol is set to IP in IP\n   (protocol = 41) and whose IPv4 destination\
    \ is copied from the last 32\n   bits of the IPv6 destination: (1) the IPv6 source\
    \ address is the\n   6a44-client IPv6 address; (2) the IPv6 destination is a 6a44\
    \ address\n   of the same site (it has the same 80 bits as the 6a44-client IPv6\n\
    \   address); (3) either the IPv6 packet does not exceed 1280 octets, or\n   it\
    \ is longer but it does not exceed the IPv4 link MTU minus 20 octets\n   and the\
    \ IPv4 destination address starts with the IPv4 link prefix.\n   CT-3  IPv6/UDP/IPv4\
    \ PACKET TO A HOST OF ANOTHER SITE\n           [IPv6, <C.N.Z.A>, X != <C.N...>,\
    \ ...]\n                 |\n                 | (IPv4, B, A, UDP(W, W, [encapsulated\
    \ packet])\n                 |                  |\n            +----|--+--------+\
    \      |\n            |    |  |  6a44  |      |\n            |  -->--+ client\
    \ +------>---------- >B:W\n            |  IPv6 |function|A:W<     UDP/IPv4\n \
    \           +-------+--------+\n                    Host\n   If an IPv6 packet\
    \ is submitted for transmission and ALL the following\n   conditions are satisfied,\
    \ the IPv6 packet MUST be encapsulated in a\n   UDP/IPv4 packet whose destination\
    \ is the 6a44-relay anycast address\n   and whose source and destination ports\
    \ are both the 6a44 port:\n   (1) the source address is the local 6a44-client\
    \ IPv6 address; (2) the\n   destination is not a 6a44 address of the same site\
    \ (its first 80 bits\n   differ from those of the 6a44-client IPv6 address); (3)\
    \ the IPv6\n   packet does not exceed 1280 octets.\n   CT-4  IPv6 PACKET THAT\
    \ DOESN'T CONCERN 6a44\n         If an IPv6 packet is submitted to the 6a44 client\
    \ function for\n         transmission with an IPv6 source address that is not\
    \ the\n         6a44-client IPv6 address, the packet does not concern 6a44.  It\n\
    \         MUST be left for any other IPv6 transmission function that may\n   \
    \      apply (the source address can be a link-local address or a\n         Unique\
    \ Local Address (ULA) [RFC4193]).\n"
- title: 6.5.3.  Client Reception
  contents:
  - "6.5.3.  Client Reception\n   Upon reception of an IPv4 packet, a 6a44 client\
    \ applies the following\n   CR-x rules:\n   CR-1  BUBBLE RECEIVED FROM A 6a44\
    \ RELAY\n                (IPv4, B, A, UDP(W, W, [<C.N.Z>, <current Bubble ID>])\n\
    \                                    |\n            +-------+--------+      |\n\
    \            |       |  6a44  |      |\n            |       | client +------<----------\
    \ <B:W\n            |       |        |A:W<     UDP/IPv4\n            +-------+--------+\n\
    \                   Host\n              (updates C.N.Z)\n   If ALL the following\
    \ conditions are satisfied (i.e., the packet is a\n   6a44 bubble from a 6a44\
    \ relay), the 6a44-client IPv6 address MUST be\n   updated using the received\
    \ IPv6 prefix C.N.Z: (1) the IPv4 packet\n   contains a complete UDP datagram\
    \ (protocol = 17, offset = 0,\n   more-fragment bit = 0); (2) both ports of the\
    \ UDP datagram are the\n   6a44 port, and the payload length is enough to contain\
    \ a 6a44-client\n   IPv6 prefix and a Bubble ID but shorter than an IPv6-packet\
    \ header\n   (protocol = 17, UDP payload length = at least 20 octets and less\
    \ than\n   40 octets); (3) the received Bubble ID matches the current value of\n\
    \   the Bubble-ID local variable.\n   CR-2  IPv6/IPv4 PACKET FROM A HOST OF THE\
    \ SAME SITE\n             (IPv4, E, A, IP-in-IP, [IPv6, <C.N..A2>, <C.N.Z.A>,\
    \ ...])\n                                  |\n         [decapsulated packet] \
    \   |\n               |                  |\n          +----|--+--------+     \
    \ |\n          |    |  |  6a44  |      |\n          |  --<--+ client +------<------\
    \ <A2\n          |  IPv6 |        |A<       IPv4\n          +-------+--------+\n\
    \                  Host\n   If ALL the following conditions are satisfied (i.e.,\
    \ the packet comes\n   from a 6a44 client of the same site), the 6a44 client MUST\n\
    \   decapsulate the inner packet and treat it as a received IPv6 packet:\n   (1)\
    \ the IPv4 packet contains a complete UDP datagram (protocol = 17,\n   offset\
    \ = 0, more-fragment bit = 0); (2) both ports of the UDP\n   datagram are the\
    \ 6a44 port, and the UDP payload is an IPv6 packet\n   (UDP length of at least\
    \ 40 octets, version = 6); (3) the IPv6 source\n   address is one of the same\
    \ site (the first 80 bits match those of the\n   6a44-client IPv6 address; (4)\
    \ its last 32 bits are equal to the IPv4\n   source address; (5) the IPv6 destination\
    \ address is the 6a44-client\n   IPv6 address.\n   CR-3  IPv6/UDP/IPv4 PACKET\
    \ FROM A HOST OF ANOTHER SITE\n                    (IPv4, B, A, UDP(W, W, [IPv6,\
    \ X, <C.N.Z.A>,...])\n                                       |\n             \
    \ [decapsulated packet]    |\n                    |                  |\n     \
    \          +----|--+--------+      |\n               |    |  |  6a44  |      |\n\
    \               |  --<--+ client +------<---------- <B:W\n               |  IPv6\
    \ |        |A:W<     UDP/IPv4\n               +-------+--------+\n           \
    \            Host\n   If ALL the following conditions are satisfied (i.e., the\
    \ packet has\n   been relayed by a 6a44 relay), the 6a44 client MUST decapsulate\
    \ the\n   inner packet and treat it as a received IPv6 packet: (1) the IPv4\n\
    \   packet contains a complete UDP datagram (protocol = 17, offset = 0,\n   more-fragment\
    \ bit = 0); (2) the UDP payload is an IPv6 packet (length\n   of at least 40 octets,\
    \ version = 6); (3) the UDP/IPv4 source address\n   is the 6a44-relay UDP/IPv4\
    \ address; (4) the IPv6 destination address\n   is the 6a44-client IPv6 address.\n\
    \   CR-4  RECEIVED ICMPv4 ERROR MESSAGE CONCERNING A 6a44 PACKET\n         If\
    \ the 6a44 client receives an IPv4 error message [RFC0792]\n         that concerns\
    \ a discarded 6a44 packet (i.e., if the copied\n         header of the discarded\
    \ packet is that of a transmitted packet\n         according to CT-2 or CT-3),\
    \ it SHOULD translate it into an\n         ICMPv6 error message [RFC4443] and\
    \ then treat it as a received\n         IPv6 packet.  Translation of Type and\
    \ Code conversions between\n         IPv4 and IPv6 is described in Section 4.2\
    \ of [RFC6145], under\n         \"ICMPv4 error messages\".\n   CR-5  RECEIVED\
    \ IPv4 PACKET OTHER THAN 6a44\n         If ANY one or more of the following conditions\
    \ are verified,\n         the received IPv4 packet does not concern 6a44 and MUST\n\
    \         therefore be left for any other IPv4 reception function that\n     \
    \    may apply: (1) the IPv4 payload is neither UDP nor IPv6\n         (protocol\
    \ = neither 17 nor 41, or protocol = 41 and IP version\n         in the payload\
    \ is not = 6); (2) the IPv4 packet is an\n         IP-datagram fragment other\
    \ than the first one (offset > 0);\n         (3) the IPv4 packet contains the\
    \ first or unique fragment of a\n         UDP datagram (protocol = 17, offset\
    \ = 0), with neither port\n         equal to the 6a44 port.\n"
- title: 6.6.  6a44 Relay Specification
  contents:
  - '6.6.  6a44 Relay Specification

    '
- title: 6.6.1.  Relay Reception in IPv6
  contents:
  - "6.6.1.  Relay Reception in IPv6\n   Upon reception of a packet via its IPv6 interface\
    \ with a destination\n   address starting with the 6a44-network IPv6 prefix, a\
    \ 6a44 relay MUST\n   apply the following RR6-x rules:\n   RR6-1  VALID IPv6 PACKET\
    \ FROM OUTSIDE THE 6a44 ISP NETWORK\n    [IPv6, (X != <C...> AND != <Teredo(IPv4=B)>),\
    \ <C.<N != B>.Z...>,...]\n                                      |\n    (IPv4,\
    \ B, N, UDP(W, Z,            |\n          [encapsulated packet]))     |\n    \
    \        |                         |\n            |        +--------+       |\n\
    \            |   >B:W |  6a44  |C/48<  |\n    N:Z< ---<--------| relay  |-------<----\
    \ C.N.Z...<\n         IPv4        |        |        IPv6\n                   \
    \  +--------+\n   If ALL the following conditions are satisfied, the IPv6 packet\
    \ MUST\n   be encapsulated in a UDP/IPv4 packet whose UDP/IPv4 destination is\n\
    \   copied from bits 48 to 95 of the IPv6 destination address: (1) the\n   IPv6\
    \ source address is not that of a 6a44 client of the ISP (it does\n   not start\
    \ with the 6a44-network IPv6 prefix); (2) the IPv6 source\n   address is not a\
    \ Teredo address whose embedded UDP/IPv4 address is\n   the 6a44-relay anycast\
    \ address; (3) the customer-site IPv4 address\n   embedded in the 6a44 destination\
    \ address is not the 6a44-relay\n   anycast address; (4) the packet has at most\
    \ 1280 octets.\n   RR6-2  INVALID IPv6 PACKET FROM OUTSIDE THE 6a44 ISP NETWORK\n\
    \          If ANY one or more of the following conditions are satisfied,\n   \
    \       the IPv6 packet MUST be discarded: (1) the packet has more\n         \
    \ than 1280 octets (in this case, an ICMPv6 Packet Too Big error\n          message\
    \ MUST be returned to the source); (2) the customer-site\n          IPv4 address\
    \ embedded in the IPv6 destination address is the\n          6a44-relay anycast\
    \ address; (3) the IPv6 source address is a\n          Teredo address whose embedded\
    \ IPv4 address is the 6a44-relay\n          anycast address.\n"
- title: 6.6.2.  Relay Reception in IPv4
  contents:
  - "6.6.2.  Relay Reception in IPv4\n   Upon reception via its IPv4 downstream interface\
    \ of an IPv4 packet\n   that contains a complete IP datagram (fragment offset\
    \ = 0 and\n   more-fragment bit = 0) and that contains a UDP datagram whose UDP/\n\
    \   IPv4 destination is the 6a44-relay UDP/IPv4 address, a 6a44 relay\n   MUST\
    \ apply the following rules:\n   RR4-1  BUBBLE FROM 6a44 CLIENT\n            \
    \   (IPv4, N, B, UDP(Z, W, [::/96, Bubble ID]))\n                            \
    \         |\n                              IPv4   |    +--------+\n          \
    \                    ------->----|        |\n                                \
    \      >B:W|  6a44  |\n                                          |  relay |\n\
    \                         N:Z< -------<----|        |\n                      \
    \        IPv4   |    +--------+\n                                     |\n    \
    \                                 |\n                (IPv4, B, N, UDP(W, Z, [<C.N.Z>,\
    \ Bubble ID]))\n   If the following condition is satisfied, the 6a44 relay MUST\
    \ return\n   to the source a bubble derived from the bubble it just received by\n\
    \   permuting its UDP/IPv4 source and destination, and by putting in its\n   6a44-client-IPv6-prefix\
    \ field the received UDP/IPv4 source address:\n   the UDP payload is a bubble,\
    \ i.e., has at least 20 octets and less\n   than 40 octets.\n   RR4-2  IPv6 PACKET\
    \ FROM A 6a44 CLIENT TO ANOTHER 6a44 CLIENT\n     (IPv4, N1, B, UDP(Z1, W, [IPv6,\
    \ <C.N1.Z1...>, <C.N2.Z2...>, ...]))\n                   |\n            IPv4 \
    \  |    +--------+\n            ------->----|        |\n                    >B:W|\
    \  6a44  |\n                        | relay  |\n                        |    \
    \    |\n     N2.Z2< -------<----|        |\n            IPv4   |    +--------+\n\
    \                   |        6a44 relay\n                   |\n     (IPv4, B,\
    \ N2, UDP(W, Z2, [encapsulated packet]))\n   If ALL the following conditions are\
    \ satisfied, the 6a44 relay MUST\n   return back via its downstream IPv4 interface\
    \ an IPv6/ UDP/IPv4\n   packet containing the same encapsulated packet, having\
    \ its UDP/IPv4\n   destination set to the UDP/IPv4 address found in the 6a44 destination\n\
    \   address, and having its UDP/IPv4 source set to the 6a44-relay\n   UDP/IPv4\
    \ address: (1) the IPv4 packet contains a complete UDP\n   datagram (protocol\
    \ = 17, offset = 0, more-fragment bit = 0); (2) the\n   UDP payload is an IPv6\
    \ packet (length of at least 40 octets, version\n   = 6); (3) the IPv6 source\
    \ address starts with the 6a44-network IPv6\n   prefix followed by the UDP/IPv4\
    \ source address of the received\n   packet; (4) the IPv6 destination address\
    \ starts with the 6a44-network\n   IPv6 prefix.\n   RR4-3  IPv6 PACKET FROM A\
    \ 6a44 CLIENT TO A NON-6a44 CLIENT\n        (IPv4, N, B, UDP(Z, W, [IPv6, <C.N.Z...>,\n\
    \                  |    (X != <C...> AND != <Teredo(IPv4=B)), ...]))\n       \
    \           |\n                  |                      [decapsulated packet]\n\
    \                  |                           |\n                  |        \
    \  +--------+       |\n                  |      B:W>|  6a44  |       |\n     \
    \    >B:W  --->----------| relay  |------->---- >\n               IPv4       \
    \   |        |        IPv6\n                             +--------+\n   If ALL\
    \ the following conditions are satisfied, the 6a44 relay MUST\n   decapsulate\
    \ the IPv6 packet and forward it via the IPv6 interface:\n   (1) the IPv4 packet\
    \ contains a complete UDP datagram (protocol = 17,\n   offset = 0, more-fragment\
    \ bit = 0); (2) the UDP payload is an IPv6\n   packet (length of at least 40 octets,\
    \ version = 6); (3) the IPv6\n   source address starts with the 6a44-network IPv6\
    \ prefix followed by\n   the UDP/IPv4 source address of the received packet; (4)\
    \ the IPv6\n   destination address does not start with the 6a44-network IPv6 prefix\n\
    \   and is not a Teredo address whose embedded IPv4 address is the\n   6a44-relay\
    \ anycast address.\n   RR4-4  RECEIVED ICMPv4 ERROR MESSAGE CONCERNING A 6a44\
    \ PACKET\n          If the 6a44 relay receives an IPv4 error message [RFC0792]\n\
    \          that concerns a discarded 6a44 packet (i.e., if the copied\n      \
    \    header of the discarded packet is that of a transmitted packet\n        \
    \  according to RR6-1 or RR4-2), it SHOULD translate it into an\n          ICMPv6\
    \ error message [RFC4443] and then treat it as a received\n          IPv6 packet.\
    \  Translation of Type and Code conversions between\n          IPv4 and IPv6 is\
    \ described in Section 4.2 of [RFC6145], under\n          \"ICMPv4 error messages\"\
    .\n   RR4-5  INVALID IPv6/UDP/IPv4 PACKET\n          For ANY other case, the 6a44\
    \ relay MUST discard the packet.\n"
- title: 6.7.  Implementation of Automatic Sunset
  contents:
  - "6.7.  Implementation of Automatic Sunset\n   6a44 is designed as an interim transition\
    \ mechanism, not to be used\n   any longer than strictly necessary.  Its sole\
    \ purpose is to\n   accelerate availability of IPv6 native addresses where, for\
    \ any\n   reason, CPEs cannot quickly be replaced, or where, for any reason,\n\
    \   ISP networks cannot quickly support dual-stack routing or 6rd.\n   A 6a44-capable\
    \ ISP can first have an increase in its 6a44 traffic as\n   more and more hosts\
    \ behind IPv4-only CPEs support the 6a44 client\n   function, but it should later\
    \ have a decrease in this traffic as more\n   and more CPEs operate in dual stack.\n\
    \   When this traffic becomes sufficiently negligible, the ISP may, after\n  \
    \ due prior notice, discontinue 6a44-relay operation.  This terminates\n   its\
    \ sunset procedure.\n   In a host that obtains an IPv6 native address by some\
    \ means other\n   than 6a44, the effect of having the 6a44 function in its protocol\n\
    \   stack is inexistent.  OS providers may therefore keep this function\n   in\
    \ their code for many years.  When it becomes clear that the number\n   of users\
    \ of this function has become negligible, they can delete it\n   from later releases.\
    \  This terminates their sunset procedure.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Incoming reachability:\n      Hosts that acquire\
    \ 6a44 addresses become reachable from the\n      Internet in IPv6 while they\
    \ remain unreachable in IPv4 at their\n      private IPv4 addresses.\n      For\
    \ ordinary use, this should not introduce a perceptible new\n      security risk\
    \ for two reasons: (1) hosts can, without IPv6, use\n      NAT44 hole-punching\
    \ techniques such as Interactive Connectivity\n      Establishment (ICE) [RFC5245]\
    \ to receive incoming connections;\n      (2) by default, modern operating systems\
    \ that support IPv6 have\n      their own protections against incoming connections.\n\
    \      If 6a44 reachability across an ordinary NAT44 nevertheless has to\n   \
    \   be barred, this can be done by configuring its port-forwarding\n      function\
    \ with the 6a44 port bound to any internal address that is\n      not assigned\
    \ to any host.  Thus, no bubble from a 6a44 relay can\n      reach any 6a44-capable\
    \ host, and this is sufficient to prevent\n      hosts from using 6a44.\n    \
    \  For more sophisticated uses with managed firewalls, default\n      configurations\
    \ generally specify that packets that are not\n      explicitly authorized are\
    \ discarded.  Thus, 6a44 can be used only\n      if the 6a44 port is deliberately\
    \ opened to incoming traffic.\n   Subscriber authentication:\n      Any authentication\
    \ that applies to an IPv4 address extends its\n      effect to 6a44 addresses\
    \ that are derived from it.\n   Host-address spoofing:\n      With ingress filtering\
    \ required in 6a44 ISP networks, and with the\n      address checks specified\
    \ in Section 6, no new IPv6 address-\n      spoofing vulnerability is introduced\
    \ by 6a44.\n   Address-and-port scanning:\n      To mitigate the (limited) risk\
    \ of a malicious user trying to scan\n      IPv4 address/port pairs to reach a\
    \ host, Teredo addresses contain\n      12 random bits [RFC5991].  6a44 addresses\
    \ have no random bits but\n      contain local IPv4 addresses of clients.  Since\
    \ possible values of\n      these addresses are not deterministically known from\
    \ outside\n      customer sites and are in ranges that can be configured in typical\n\
    \      NAT44s, some protection against address and port scanning is thus\n   \
    \   achieved.  This protection may be less effective than that\n      achieved\
    \ with random bits but is in any case better for 6a44 IPv6\n      addresses than\
    \ for IPv4 addresses alone.\n   Denial of service:\n      Provided 6a44 relays\
    \ are provisioned with enough processing power,\n      which is facilitated by\
    \ their being completely stateless, 6a44\n      introduces no denial-of-service\
    \ vulnerabilities of its own.\n   Routing loops:\n      A risk of routing-loop\
    \ attacks has been identified in [RFC6324].\n      Without taking precautions,\
    \ it applies to some combinations of\n      automatic-tunnel mechanisms such as\
    \ 6to4, the Intra-Site Automatic\n      Tunnel Addressing Protocol (ISATAP), 6rd,\
    \ and Teredo.  This risk\n      does not exist with 6a44 for the following reasons:\n\
    \      1.  When a packet enters a 6a44 relay via its IPv6 interface, the\n   \
    \       following apply:\n          +  An IPv6/UDP/IPv4 packet cannot be sent\
    \ to another 6a44\n             relay because its IPv4 destination would have\
    \ to be a\n             6a44-relay IPv4 address.  This is prevented by rule RR6-1\n\
    \             of Section 6.6.1.\n          +  If an IPv6/UDP/IPv4 packet is sent\
    \ to the address of a 6to4\n             relay, 6rd relay, or ISATAP relay, it\
    \ will be discarded\n             there because these relays don't accept UDP/IPv4\
    \ packets.\n          +  If an IPv6/UDP/IPv4 packet is sent to a Teredo relay,\
    \ it\n             will be discarded there because (1) Teredo relays check\n \
    \            that the IPv4 address that is embedded in the IPv6 source\n     \
    \        address of a received IPv6/IPv4 packet matches the IPv4\n           \
    \  source address of the encapsulating packet (Section 5.4.2\n             of\
    \ [RFC4380]); (2) encapsulating packets sent by 6a44\n             relays have\
    \ the 6a44-relay anycast address as the IPv4\n             source address; (3)\
    \ a 6a44 relay forwards a received IPv6\n             packet as an IPv6/UDP/IPv4\
    \ packet only if its IPv6 source\n             address is not a Teredo address\
    \ whose embedded IPv4 address\n             is the 6a44-relay IPv4 address.\n\
    \      2.  When a packet enters a 6a44 relay via its IPv4 interface, the\n   \
    \       following apply:\n          +  The received packet cannot come from another\
    \ 6a44 relay (as\n             just explained, 6rd relays do not send IPv6/UDP/IPv4\n\
    \             packets to other 6a44 relays).\n          +  If the IPv4 packet\
    \ comes from a 6to4 relay, a 6rd relay, or\n             an ISATAP relay, its\
    \ IPv6 encapsulated packet cannot be\n             forwarded (the received packet\
    \ is IPv6/IPv4 instead of\n             being IPv6/UDP/IPv4, as required by rules\
    \ RR4-2 and RR4-3\n             of Section 6.6.2).\n          +  If the received\
    \ packet is an IPv6/UDP/IPv4 packet coming\n             from a Teredo relay,\
    \ this packet cannot have been sent to\n             the Teredo relay by a 6a44\
    \ relay: (1) in order to reach the\n             6a44 relay, the IPv6 destination\
    \ of the IPv6 encapsulated\n             packet must be a Teredo address whose\
    \ embedded IPv4 address\n             is the 6a44-relay anycast address (Section\
    \ 5.4.1 of\n             [RFC4380]); (2) a 6a44 relay does not forward via its\
    \ IPv6\n             interface an IPv6 packet whose destination is a Teredo\n\
    \             address whose embedded IPv4 address is the 6a44-relay\n        \
    \     anycast address (rule RR4-3 of Section 6.6.2).\n   6a44-relay spoofing:\n\
    \      In a 6a44 network, no node can spoof a 6a44 relay because ingress\n   \
    \   filtering prevents any 6a44-relay anycast address from being\n      spoofed.\n\
    \      In a network that does not support ingress filtering (and\n      therefore\
    \ is not a 6a44 network), the following apply:\n      *  6a44 packets sent by\
    \ 6a44-capable hosts are discarded in the\n         IPv4 backbone because their\
    \ IPv4 destination, the 6a44-relay\n         anycast address, does not start with\
    \ any ISP-assigned prefix.\n      *  If an attacker tries to send to a 6a44-capable\
    \ host a fake\n         relay-to-client bubble, the probability that it would\
    \ be\n         accepted by its destination is negligible.  It would require\n\
    \         that all the following conditions be simultaneously satisfied:\n   \
    \      +  The UDP/IPv4 destination set by the attacker must reach a\n        \
    \    NAT44 node in which it is the external mapping of a 6a44\n            tunnel\
    \ established by a 6a44-capable host.\n         +  This host must be in the \"\
    Bubble sent\" state -- the only one\n            in which it listens to bubbles\
    \ when its ISP is not 6a44\n            capable.  This state is taken only for\
    \ a few seconds every\n            30 minutes (rule TM-5 of Section 6.5.1).\n\
    \         +  This host accepts the bubble only if its Bubble ID has the\n    \
    \        right value -- an extremely unlikely possibility with a\n           \
    \ 64-bit randomly chosen Bubble ID (see Section 6.5.1).\n      *  If a 6a44-capable\
    \ host -- despite this scenario being very\n         unlikely -- accepts a fake\
    \ bubble, the effect is that it\n         wrongly believes, for about 30 seconds,\
    \ that it has an assigned\n         public IPv6 address.  All IPv6 packets it\
    \ then sends with this\n         address as the source cannot be accepted by any\
    \ destination (no\n         relay will forward them, and no host of the same site\
    \ will\n         accept them).  The consequences of this scenario would\n    \
    \     therefore not impair security.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA has assigned the following:\n   1.  IPv4 address\
    \ 192.88.99.2 as the 6a44-relay anycast address (B in\n       this document).\n\
    \   2.  UDP port 1027 as the 6a44 port (W in this document).\n   The choice of\
    \ 192.88.99.2 as the 6a44 IPv4 anycast address doesn't\n   conflict with any existing\
    \ IETF specification because\n   o  it starts with the 6to4 prefix 192.88.99.0/24\
    \ [RFC3068].\n   o  it differs from the only currently assigned address that starts\n\
    \      with this prefix (the anycast address of 6to4 relays --\n      192.88.99.1\
    \ [RFC3068].\n   This choice is made to permit implementations of 6a44 relays\
    \ in\n   physical nodes that are independent from any 6to4 relay or, if found\n\
    \   to be more optimum, in nodes in which 6to4 relays and 6a44 relays are\n  \
    \ collocated.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   This specification, whose origin is a convergence effort\
    \ based on two\n   independent proposals -- [6rd+] and [SAMPLE] -- has benefited\
    \ from\n   various suggestions.  Comments have been received during this\n   process,\
    \ in particular from Dave Thaler, Fred Templin, Ole Troan,\n   Olivier Vautrin,\
    \ Pascal Thubert, Washam Fan, and Yu Lee.  The authors\n   wish to thank them,\
    \ and all others, for their useful contributions.\n   Special recognition is due\
    \ to Dave Thaler and John Mann.  Their\n   detailed reviews led to a few useful\
    \ modifications and editorial\n   improvements.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC0792]  Postel, J., \"Internet Control Message\
    \ Protocol\", STD 5,\n              RFC 792, September 1981.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet\
    \ Protocol, Version 6\n              (IPv6) Specification\", RFC 2460, December\
    \ 1998.\n   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \              Architecture\", RFC 4291, February 2006.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [6rd+]     Despres, R., \"Rapid Deployment\
    \ of Native IPv6 Behind IPv4\n              NATs (6rd+)\", Work in Progress, July\
    \ 2010.\n   [NAT444]   Yamaguchi, J., Shirasaki, Y., Miyakawa, S., Nakagawa, A.,\n\
    \              and H. Ashida, \"NAT444 addressing models\", Work\n           \
    \   in Progress, July 2012.\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC2827]  Ferguson,\
    \ P. and D. Senie, \"Network Ingress Filtering:\n              Defeating Denial\
    \ of Service Attacks which employ IP Source\n              Address Spoofing\"\
    , BCP 38, RFC 2827, May 2000.\n   [RFC3053]  Durand, A., Fasano, P., Guardini,\
    \ I., and D. Lento, \"IPv6\n              Tunnel Broker\", RFC 3053, January 2001.\n\
    \   [RFC3056]  Carpenter, B. and K. Moore, \"Connection of IPv6 Domains\n    \
    \          via IPv4 Clouds\", RFC 3056, February 2001.\n   [RFC3068]  Huitema,\
    \ C., \"An Anycast Prefix for 6to4 Relay Routers\",\n              RFC 3068, June\
    \ 2001.\n   [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n\
    \              Networks\", BCP 84, RFC 3704, March 2004.\n   [RFC4193]  Hinden,\
    \ R. and B. Haberman, \"Unique Local IPv6 Unicast\n              Addresses\",\
    \ RFC 4193, October 2005.\n   [RFC4380]  Huitema, C., \"Teredo: Tunneling IPv6\
    \ over UDP through\n              Network Address Translations (NATs)\", RFC 4380,\n\
    \              February 2006.\n   [RFC4443]  Conta, A., Deering, S., and M. Gupta,\
    \ Ed., \"Internet\n              Control Message Protocol (ICMPv6) for the Internet\n\
    \              Protocol Version 6 (IPv6) Specification\", RFC 4443,\n        \
    \      March 2006.\n   [RFC5245]  Rosenberg, J., \"Interactive Connectivity Establishment\n\
    \              (ICE): A Protocol for Network Address Translator (NAT)\n      \
    \        Traversal for Offer/Answer Protocols\", RFC 5245,\n              April\
    \ 2010.\n   [RFC5569]  Despres, R., \"IPv6 Rapid Deployment on IPv4\n        \
    \      Infrastructures (6rd)\", RFC 5569, January 2010.\n   [RFC5626]  Jennings,\
    \ C., Ed., Mahy, R., Ed., and F. Audet, Ed.,\n              \"Managing Client-Initiated\
    \ Connections in the Session\n              Initiation Protocol (SIP)\", RFC 5626,\
    \ October 2009.\n   [RFC5969]  Townsley, W. and O. Troan, \"IPv6 Rapid Deployment\
    \ on IPv4\n              Infrastructures (6rd) -- Protocol Specification\",\n\
    \              RFC 5969, August 2010.\n   [RFC5991]  Thaler, D., Krishnan, S.,\
    \ and J. Hoagland, \"Teredo\n              Security Updates\", RFC 5991, September\
    \ 2010.\n   [RFC6081]  Thaler, D., \"Teredo Extensions\", RFC 6081, January 2011.\n\
    \   [RFC6145]  Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation\n        \
    \      Algorithm\", RFC 6145, April 2011.\n   [RFC6324]  Nakibly, G. and F. Templin,\
    \ \"Routing Loop Attack Using\n              IPv6 Automatic Tunnels: Problem Statement\
    \ and Proposed\n              Mitigations\", RFC 6324, August 2011.\n   [SAMPLE]\
    \   Carpenter, B. and S. Jiang, \"Legacy NAT Traversal for\n              IPv6:\
    \ Simple Address Mapping for Premises Legacy Equipment\n              (SAMPLE)\"\
    , Work in Progress, June 2010.\n   [TheTool]  de Saint-Exupery, A., \"Wind, Sand\
    \ and Stars\", Chapter III\n              (The Tool), 1939.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Remi Despres (editor)\n   RD-IPtech\n   3 rue du President\
    \ Wilson\n   Levallois\n   France\n   EMail: despres.remi@laposte.net\n   Brian\
    \ Carpenter\n   University of Auckland\n   Department of Computer Science\n  \
    \ PB 92019\n   Auckland  1142\n   New Zealand\n   EMail: brian.e.carpenter@gmail.com\n\
    \   Dan Wing\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, California\
    \  95134\n   USA\n   EMail: dwing@cisco.com\n   Sheng Jiang\n   Huawei Technologies\
    \ Co., Ltd.\n   Q14, Huawei Campus - No. 156 Beiqing Road\n   Hai-Dian District,\
    \ Beijing  100095\n   P.R. China\n   EMail: jiangsheng@huawei.com\n"
