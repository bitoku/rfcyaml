- title: __initial_text__
  contents:
  - '                         Graceful OSPF Restart

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo documents an enhancement to the OSPF routing protocol,\n\
    \   whereby an OSPF router can stay on the forwarding path even as its\n   OSPF\
    \ software is restarted.  This is called \"graceful restart\" or\n   \"non-stop\
    \ forwarding\".  A restarting router may not be capable of\n   adjusting its forwarding\
    \ in a timely manner when the network topology\n   changes.  In order to avoid\
    \ the possible resulting routing loops, the\n   procedure in this memo automatically\
    \ reverts to a normal OSPF restart\n   when such a topology change is detected,\
    \ or when one or more of the\n   restarting router's neighbors do not support\
    \ the enhancements in this\n   memo.  Proper network operation during a graceful\
    \ restart makes\n   assumptions upon the operating environment of the restarting\
    \ router;\n   these assumptions are also documented.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Overview . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Operation of Restarting Router . . . . . . . . . . .\
    \ . . . . .  3\n       2.1.  Entering Graceful Restart. . . . . . . . . . . .\
    \ . . . .  4\n       2.2.  When to Exit Graceful Restart. . . . . . . . . . .\
    \ . . .  5\n       2.3.  Actions on Exiting Graceful Restart. . . . . . . . .\
    \ . .  6\n   3.  Operation of Helper Neighbor . . . . . . . . . . . . . . . .\
    \ .  7\n       3.1.  Entering Helper Mode . . . . . . . . . . . . . . . . . .\
    \  7\n       3.2.  Exiting Helper Mode. . . . . . . . . . . . . . . . . . .  8\n\
    \   4.  Backward Compatibility . . . . . . . . . . . . . . . . . . . .  9\n  \
    \ 5.  Unplanned Outages. . . . . . . . . . . . . . . . . . . . . . . 10\n   6.\
    \  Interaction with Traffic Engineering . . . . . . . . . . . . . 11\n   7.  Possible\
    \ Future Work . . . . . . . . . . . . . . . . . . . . . 11\n   8.  Intellectual\
    \ Property Rights Notice. . . . . . . . . . . . . . 11\n   9.  References . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . 11\n       9.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . . 11\n       9.2.  Informative References\
    \ . . . . . . . . . . . . . . . . . 11\n   A.  Grace-LSA Format . . . . . . .\
    \ . . . . . . . . . . . . . . . . 13\n   B.  Configurable Parameters. . . . .\
    \ . . . . . . . . . . . . . . . 15\n   Security Considerations. . . . . . . .\
    \ . . . . . . . . . . . . . . 16\n   Acknowledgements . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 16\n   Authors' Addresses . . . . . . . . . . . .\
    \ . . . . . . . . . . . . 17\n   Full Copyright Statement . . . . . . . . . .\
    \ . . . . . . . . . . . 18\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   Today many Internet routers implement a separation of control\
    \ and\n   forwarding functions.  Certain processors are dedicated to control\n\
    \   and management tasks such as OSPF routing, while other processors\n   perform\
    \ the data forwarding tasks.  This separation creates the\n   possibility of maintaining\
    \ a router's data forwarding capability\n   while the router's control software\
    \ is restarted/reloaded.  We call\n   such a possibility \"graceful restart\"\
    \ or \"non-stop forwarding\".\n   The OSPF protocol presents a problem to graceful\
    \ restart whereby,\n   under normal operation, OSPF intentionally routes around\
    \ a restarting\n   router while it rebuilds its link-state database.  OSPF avoids\
    \ the\n   restarting router to minimize the possibility of routing loops and/or\n\
    \   black holes caused by lack of database synchronization.  Avoidance is\n  \
    \ accomplished by having the router's neighbors reissue their LSAs,\n   omitting\
    \ links to the restarting router.\n   However, if (a) the network topology remains\
    \ stable and (b) the\n   restarting router is able to keep its forwarding table(s)\
    \ across the\n   restart, it would be safe to keep the restarting router on the\n\
    \   forwarding path.  This memo documents an enhancement to OSPF that\n   makes\
    \ such graceful restart possible, and automatically reverts back\n   to a standard\
    \ OSPF restart for safety when network topology changes\n   are detected.\n  \
    \ In a nutshell, the OSPF enhancements for graceful restart are as\n   follows:\n\
    \   -  The router attempting a graceful restart originates link-local\n      Opaque-LSAs,\
    \ herein called Grace-LSAs, announcing its intention to\n      perform a graceful\
    \ restart within a specified amount of time or\n      \"grace period\".\n   -\
    \  During the grace period, its neighbors continue to announce the\n      restarting\
    \ router in their LSAs as if it were fully adjacent\n      (i.e., OSPF neighbor\
    \ state Full), but only if the network topology\n      remains static (i.e., the\
    \ contents of the LSAs in the link-state\n      database having LS types 1-5,7\
    \ remain unchanged and periodic\n      refreshes are allowed).\n   There are two\
    \ roles being played by OSPF routers during graceful\n   restart.  First there\
    \ is the router that is being restarted.  The\n   operation of this router during\
    \ graceful restart, including how the\n   router enters and exits graceful restart,\
    \ is the subject of Section\n   2.  Then there are the router's neighbors, which\
    \ must cooperate in\n   order for the restart to be graceful.  During graceful\
    \ restart, we\n   say that the neighbors are running in \"helper mode\".  Section\
    \ 3\n   covers the responsibilities of a router running in helper mode,\n   including\
    \ entering and exiting helper mode.\n"
- title: 2.  Operation of Restarting Router
  contents:
  - "2.  Operation of Restarting Router\n   After the router restarts/reloads, it\
    \ must change its OSPF processing\n   somewhat until it re-establishes full adjacencies\
    \ with all its former\n   fully-adjacent neighbors.  This time period, between\
    \ the\n   restart/reload and the reestablishment of adjacencies, is called\n \
    \  \"graceful restart\".  During graceful restart:\n      1) The restarting router\
    \ does not originate LSAs with LS types 1-\n         5,7.  Instead, the restarting\
    \ router wants the other routers in\n         the OSPF domain to calculate routes\
    \ using the LSAs that it\n         originated prior to its restart.   During this\
    \ time, the\n         restarting router does not modify or flush received self-\n\
    \         originated LSAs, (see Section 13.4 of [1]). Instead they are\n     \
    \    accepted as valid.  In particular, the grace-LSAs that the\n         restarting\
    \ router originated before the restart are left in\n         place.  Received\
    \ self-originated LSAs will be dealt with when\n         the router exits graceful\
    \ restart (see Section 2.3).\n      2) The restarting router runs its OSPF routing\
    \ calculations, as\n         specified in Section 16 of [1].  This is necessary\
    \ to return\n         any OSPF virtual links to operation.  However, the restarting\n\
    \         router does *not* install OSPF routes into the system's\n         forwarding\
    \ table(s) and relies on the forwarding entries that\n         it installed prior\
    \ to the restart.\n      3) If the restarting router determines that it was the\
    \ Designated\n         Router on a given segment prior to the restart, it elects\n\
    \         itself as the Designated Router again.  The restarting router\n    \
    \     knows that it was the Designated Router if, while the\n         associated\
    \ interface is in Waiting state, a Hello packet is\n         received from a neighbor\
    \ listing the router as the Designated\n         Router.\n   Otherwise, the restarting\
    \ router operates the same as any other OSPF\n   router.  It discovers neighbors\
    \ using OSPF's Hello protocol, elects\n   Designated and Backup Designated Routers,\
    \ performs the Database\n   Exchange procedure to initially synchronize link-state\
    \ databases with\n   its neighbors, and maintains this synchronization through\
    \ flooding.\n   The processes of entering graceful restart, and of exiting graceful\n\
    \   restart (either successfully or not) are covered in the following\n   sections.\n"
- title: 2.1.  Entering Graceful Restart
  contents:
  - "2.1.  Entering Graceful Restart\n   The router (call it Router X) is informed\
    \ of the desire for its\n   graceful restart when an appropriate command is issued\
    \ by the network\n   operator.  The network operator may also specify the length\
    \ of the\n   grace period, or the necessary grace period may be calculated by\
    \ the\n   router's OSPF software.  In order to avoid the restarting router's\n\
    \   LSAs from aging out, the grace period should not exceed LSRefreshTime\n  \
    \ (1800 second) [1].\n   In preparation for the graceful restart, Router X must\
    \ perform the\n   following actions before its software is restarted/reloaded:\n\
    \      (Note that common OSPF shutdown procedures are *not* performed,\n     \
    \ since we want the other OSPF routers to act as if Router X remains\n      in\
    \ continuous service.  For example, Router X does not flush its\n      locally\
    \ originated LSAs, since we want them to remain in other\n      routers' link-state\
    \ databases throughout the restart period.)\n      1) Router X must ensure that\
    \ its forwarding table(s) is/are up-\n         to-date and will remain in place\
    \ across the restart.\n      2) The router may need to preserve the cryptographic\
    \ sequence\n         numbers being used on each interface in non-volatile storage.\n\
    \         An alternative is to use the router's clock for cryptographic\n    \
    \     sequence number generation and ensure that the clock is\n         preserved\
    \ across restarts (either on the same or redundant\n         route processors).\
    \  If neither of these can be guaranteed, it\n         can take up to RouterDeadInterval\
    \ seconds after the restart\n         before adjacencies can be reestablished\
    \ and this would force\n         the grace period to be lengthened greatly.\n\
    \   Router X then originates the grace-LSAs.  These are link-local\n   Opaque-LSAs\
    \ (see Appendix A).  Their LS Age field is set to 0, and\n   the requested grace\
    \ period (in seconds) is inserted into the body of\n   the grace-LSA.  The precise\
    \ contents of the grace-LSA are described\n   in Appendix A.\n   A grace-LSA is\
    \ originated for each of the router's OSPF interfaces.\n   If Router X wants to\
    \ ensure that its neighbors receive the grace-\n   LSAs, it should retransmit\
    \ the grace-LSAs until they are acknowledged\n   (i.e., perform standard OSPF\
    \ reliable flooding of the grace-LSAs).\n   If one or more fully adjacent neighbors\
    \ do not receive grace-LSAs,\n   they will more than likely cause premature termination\
    \ of the\n   graceful restart procedure (see Section 4).\n   After the grace-LSAs\
    \ have been sent, the router should store the fact\n   that it is performing graceful\
    \ restart along with the length of the\n   requested grace period in non-volatile\
    \ storage.  (Note to\n   implementors: It may be easiest to simply store the absolute\
    \ time of\n   the end of the grace period).  The OSPF software should then be\n\
    \   restarted/reloaded.  When the reloaded software starts executing the\n   graceful\
    \ restart, the protocol modifications in Section 2 are\n   followed.  (Note that\
    \ prior to the restart, the router does not know\n   whether its neighbors are\
    \ going to cooperate as \"helpers\"; the mere\n   reception of grace-LSAs does\
    \ not imply acceptance of helper\n   responsibilities.  This memo assumes that\
    \ the router would want to\n   restart anyway, even if the restart is not going\
    \ to be graceful).\n"
- title: 2.2.  When to Exit Graceful Restart
  contents:
  - "2.2.  When to Exit Graceful Restart\n   A Router X exits graceful restart when\
    \ any of the following occurs:\n      1) Router X has reestablished all its adjacencies.\
    \  Router X can\n         determine this by examining the router-LSAs that it\
    \ last\n         originated before the restart (called the \"pre-restart router-\n\
    \         LSA\"), and, on those segments where the router is the\n         Designated\
    \ Router, the pre-restart network-LSAs.  These LSAs\n         will have been received\
    \ from the helping neighbors, and need\n         not have been stored in non-volatile\
    \ storage across the\n         restart.  All previous adjacencies will be listed\
    \ as type-1 and\n         type-2 links in the router-LSA, and as neighbors in\
    \ the body of\n         the network-LSA.\n      2) Router X receives an LSA that\
    \ is inconsistent with its pre-\n         restart router-LSA.  For example, X\
    \ receives a router-LSA\n         originated by router Y that does not contain\
    \ a link to X, even\n         though X's pre-start router-LSA did contain a link\
    \ to Y.  This\n         indicates that either a) Y does not support graceful restart,\n\
    \         b) Y never received the grace-LSA or c) Y has terminated its\n     \
    \    helper mode for some reason (Section 3.2).  A special case of\n         LSA\
    \ inconsistency is when Router X establishes an adjacency\n         with router\
    \ Y and doesn't receive an instance of its own pre-\n         restart router LSA.\n\
    \      3) The grace period expires.\n"
- title: 2.3.  Actions on Exiting Graceful Restart
  contents:
  - "2.3.  Actions on Exiting Graceful Restart\n   Upon exiting \"graceful restart\"\
    , the restarting router reverts back\n   to completely normal OSPF operation,\
    \ reoriginating LSAs based on the\n   router's current state and updating its\
    \ forwarding table(s) based on\n   the current contents of the link-state database.\
    \  In particular, the\n   following actions should be performed when exiting,\
    \ either\n   successfully or unsuccessfully, graceful restart:\n      1) The router\
    \ should reoriginate its router-LSAs for all attached\n         areas in order\
    \ to make sure they have the correct contents.\n      2) The router should reoriginate\
    \ network-LSAs on all segments\n         where it is the Designated Router.\n\
    \      3) The router reruns its OSPF routing calculations (Section 16 of\n   \
    \      [1]), this time installing the results into the system\n         forwarding\
    \ table, and originating summary-LSAs, Type-7 LSAs and\n         AS-external-LSAs\
    \ as necessary.\n      4) Any remnant entries in the system forwarding table that\
    \ were\n         installed before the restart, but that are no longer valid,\n\
    \         should be removed.\n      5) Any received self-originated LSAs that\
    \ are no longer valid\n         should be flushed.\n      6) Any grace-LSAs that\
    \ the router originated should be flushed.\n"
- title: 3.  Operation of Helper Neighbor
  contents:
  - "3.  Operation of Helper Neighbor\n   The helper relationship is per network segment.\
    \  As a \"helper\n   neighbor\" on a segment S for a restarting router X, router\
    \ Y has\n   several duties.  It monitors the network for topology changes, and\
    \ as\n   long as there are none, continues to advertise its LSAs as if X had\n\
    \   remained in continuous OSPF operation.  This means that Y's LSAs\n   continue\
    \ to list an adjacency to X over network segment S, regardless\n   of the adjacency's\
    \ current synchronization state.  This logic affects\n   the contents of both\
    \ router-LSAs and network-LSAs, and also depends\n   on the type of network segment\
    \ S (see Sections 12.4.1.1 through\n   12.4.1.5 and Section 12.4.2 of [1]).  When\
    \ helping over a virtual\n   link, the helper must also continue to set bit V\
    \ in its router-LSA\n   for the virtual link's transit area (Section 12.4.1 of\
    \ [1]).\n   Also, if X was the Designated Router on network segment S when the\n\
    \   helping relationship began, Y maintains X as the Designated Router\n   until\
    \ the helping relationship is terminated.\n"
- title: 3.1.  Entering Helper Mode
  contents:
  - "3.1.  Entering Helper Mode\n   When a router Y receives a grace-LSA from router\
    \ X, it enters helper\n   mode for X on the associated network segment, as long\
    \ as all the\n   following checks pass:\n      1) Y currently has a full adjacency\
    \ with X (neighbor state Full)\n         over the associated network segment.\
    \  On broadcast, NBMA and\n         Point-to-MultiPoint segments, the neighbor\
    \ relationship with X\n         is identified by the IP interface address in the\
    \ body of the\n         grace-LSA (see Appendix A).  On all other segment types,\
    \ X is\n         identified by the grace-LSA's Advertising Router field.\n   \
    \   2) There have been no changes in content to the link-state\n         database\
    \ (LS types 1-5,7) since router X restarted.  This is\n         determined as\
    \ follows:\n         -  Router Y examines the link-state retransmission list for\
    \ X\n            over the associated network segment.\n            -  If there\
    \ are any LSAs with LS types 1-5,7 on the list,\n               then they all\
    \ must be periodic refreshes.\n            -  If there are instead LSAs on the\
    \ list whose contents have\n               changed (see Section 3.3 of [7]), Y\
    \ must refuse to enter\n               helper mode.\n            Router Y may\
    \ optionally disallow graceful restart with\n            Router X on other network\
    \ segments.  Determining whether\n            changed LSAs have been successfully\
    \ flooded to router Y on\n            other network segments is feasible but beyond\
    \ the scope of\n            this document.\n      3) The grace period has not\
    \ yet expired.  This means that the LS\n         age of the grace-LSA is less\
    \ than the grace period specified in\n         the body of the grace-LSA (Appendix\
    \ A).\n      4) Local policy allows Y to act as the helper for X.  Examples of\n\
    \         configured policies might be a) never act as helper, b) never\n    \
    \     allow the grace period to exceed a Time T, c) only help on\n         software\
    \ reloads/upgrades, or d) never act as a helper for\n         specific routers\
    \ (specified by OSPF Router ID).\n      5) Router Y is not in the process of graceful\
    \ restart.\n   There is one exception to the above requirements.  If Y was already\n\
    \   helping X on the associated network segment, the new grace-LSA should\n  \
    \ be accepted and the grace period should be updated accordingly.\n   Note that\
    \ Router Y may be helping X on some network segments, and not\n   on others. \
    \ However, that circumstance will probably lead to the\n   premature termination\
    \ of X's graceful restart, as Y will not continue\n   to advertise adjacencies\
    \ on the segments where it is not helping (see\n   Section 2.2).\n   Alternately,\
    \ Router Y may choose to enter helper mode when a grace-\n   LSA is received and\
    \ the above checks pass for all adjacencies with\n   Router X.  This implementation\
    \ alternative of aggregating the\n   adjacencies with respect to helper mode is\
    \ compatible with\n   implementations considering each adjacency independently.\n\
    \   A single router is allowed to simultaneously serve as a helper for\n   multiple\
    \ restarting neighbors.\n"
- title: 3.2.  Exiting Helper Mode
  contents:
  - "3.2.  Exiting Helper Mode\n   Router Y ceases to perform the helper function\
    \ for its neighbor\n   Router X on a given segment when one of the following events\
    \ occurs:\n      1) The grace-LSA originated by X on the segment is flushed. \
    \ This\n         indicates the successful termination of graceful restart.\n \
    \     2) The grace-LSA's grace period expires.\n      3) A change in link-state\
    \ database contents indicates a network\n         topology change, which forces\
    \ termination of a graceful\n         restart.  Specifically, if router Y installs\
    \ a new LSA in its\n         database with LS types 1-5,7 and having the following\
    \ two\n         properties, it should cease helping X.  The two properties of\n\
    \         the LSA are:\n         a) the contents of the LSA have changed; this\
    \ includes LSAs\n            with no previous link-state database instance and\
    \ the\n            flushing of LSAs from the database, but excludes periodic\n\
    \            LSA refreshes (see Section 3.3 of [7]), and\n         b) the LSA\
    \ would have been flooded to X, had Y and X been fully\n            adjacent.\
    \  As an example of the second property, if Y\n            installs a changed\
    \ AS-external-LSA, it should not terminate\n            a helping relationship\
    \ with a neighbor belonging to a stub\n            area, as that neighbor would\
    \ not see the AS-external-LSA in\n            any case.  An implementation MAY\
    \ provide a configuration\n            option to disable link-state database options\
    \ from\n            terminating graceful restart.  Such an option will, however,\n\
    \            increase the risk of transient routing loops and black\n        \
    \    holes.\n   When Router Y exits helper mode for X on a given network segment,\
    \ it\n   reoriginates its LSAs based on the current state of its adjacency to\n\
    \   Router X over the segment.  In detail, Y takes the following actions:\n  \
    \    a) Y recalculates the Designated Router for the segment,\n      b) Y reoriginates\
    \ its router-LSA for the segment's OSPF area,\n      c) if Y is Designated Router\
    \ for the segment, it reoriginates the\n         network-LSA for the segment and\n\
    \      d) if the segment was a virtual link, Y reoriginates its router-\n    \
    \     LSA for the virtual link's transit area.\n   If Router Y aggregated adjacencies\
    \ with Router X when entering helper\n   mode (as described in section 3.1), it\
    \ must also exit helper mode for\n   all adjacencies with Router X when any one\
    \ of the exit events occurs\n   for an adjacency with Router X.\n"
- title: 4.  Backward Compatibility
  contents:
  - "4.  Backward Compatibility\n   Backward-compatibility with unmodified OSPF routers\
    \ is an automatic\n   consequence of the functionality documented above.  If one\
    \ or more\n   neighbors of a router requesting graceful restart are unmodified,\
    \ or\n   if they do not receive the grace-LSA, the graceful restart reverts to\n\
    \   a normal OSPF restart.\n   The unmodified routers will start routing around\
    \ the restarted router\n   X as it performs initial database synchronization by\
    \ reissuing their\n   LSAs with links to X omitted.  These LSAs will be interpreted\
    \ by\n   helper neighbors as a topology change, and by X as an LSA\n   inconsistency,\
    \ in either case, reverting to normal OSPF operation.\n"
- title: 5.  Unplanned Outages
  contents:
  - "5.  Unplanned Outages\n   The graceful restart mechanisms in this memo can be\
    \ used for\n   unplanned outages.  (Examples of unplanned outages include the\
    \ crash\n   of a router's control software, an unexpected switchover to a\n  \
    \ redundant control processor, etc).  However, implementors and network\n   operators\
    \ should note that attempting graceful restart from an\n   unplanned outage may\
    \ not be a good idea, owing to the router's\n   inability to properly prepare\
    \ for the restart (see Section 2.1).  In\n   particular, it seems unlikely that\
    \ a router could guarantee the\n   sanity of its forwarding table(s) across an\
    \ unplanned restart.  In\n   any event, implementors providing the option to recover\
    \ gracefully\n   from unplanned outages must allow a network operator to turn\
    \ the\n   option off.\n   In contrast to the procedure for planned restart/reloads\
    \ that was\n   described in Section 2.1, a router attempting graceful restart\
    \ after\n   an unplanned outage must originate grace-LSAs *after* its control\n\
    \   software resumes operation.  The following points must be observed\n   during\
    \ this grace-LSA origination.\n   o  The grace-LSAs must be originated and be\
    \ sent *before* the\n      restarted router sends any OSPF Hello Packets.  On\
    \ broadcast\n      networks, this LSA must be flooded to the AllSPFRouters multicast\n\
    \      address (224.0.0.5) since the restarting router is not aware of\n     \
    \ its previous DR state.\n   o  The grace-LSAs are encapsulated in Link State\
    \ Update Packets and\n      sent out to all interfaces, even though the restarted\
    \ router has\n      no adjacencies and no knowledge of previous adjacencies.\n\
    \   o  To improve the probability that grace-LSAs will be delivered, an\n    \
    \  implementation may send them multiple times (see for example the\n      Robustness\
    \ Variable in [8]).\n   o  The restart reason in the grace-LSAs must be set to\
    \ 0 (unknown) or\n      3 (switch to redundant control processor).  This enables\
    \ the\n      neighbors to decide whether they want to help the router through\n\
    \      an unplanned restart.\n"
- title: 6.  Interaction with Traffic Engineering
  contents:
  - "6.  Interaction with Traffic Engineering\n   The operation of the Traffic Engineering\
    \ Extensions to OSPF [4]\n   during OSPF Graceful Restart is specified in [6].\n"
- title: 7.  Possible Future Work
  contents:
  - "7.  Possible Future Work\n   Devise a less conservative algorithm for graceful\
    \ restart helper\n   termination that provides a comparable level of black hole\
    \ and\n   routing loop avoidance.\n"
- title: 8.  Intellectual Property Rights Notice
  contents:
  - "8.  Intellectual Property Rights Notice\n   The IETF takes no position regarding\
    \ the validity or scope of any\n   intellectual property or other rights that\
    \ might be claimed to\n   pertain to the implementation or use of the technology\
    \ described in\n   this document or the extent to which any license under such\
    \ rights\n   might or might not be available; neither does it represent that it\n\
    \   has made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1] Moy, J., \"OSPF Version 2\", STD 54, RFC 2328,\
    \ April 1998.\n   [2] Coltun, R., \"The OSPF Opaque LSA Option\", RFC 2370, July\
    \ 1998.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [3] Murphy, S., Badger, M. and B. Wellington,\
    \ \"OSPF with Digital\n       Signatures\", RFC 2154, June 1997.\n   [4] Katz,\
    \ D., Kompella, K. and D. Yeung, \"Traffic Engineering (TE)\n       Extensions\
    \ to OSPF Version 2\", RFC 3630, September 2003.\n   [5] Murphy, P., \"The OSPF\
    \ Not-So-Stubby Area (NSSA) Option\", RFC\n       3101, January 2003.\n   [6]\
    \ Kompella, K., et al., \"Routing Extensions in Support of\n       Generalized\
    \ MPLS\", Work in Progress.\n   [7] Moy, J., \"Extending OSPF to Support Demand\
    \ Circuits\", RFC 1793,\n       April 1995.\n   [8] Cain, B., Deering, S., Kouvelas,\
    \ I., Fenner, B. and A.\n       Thyagarajan, \"Internet Group Management Protocol,\
    \ Version 3\", RFC\n       3376, October 2002.\n"
- title: A.  Grace-LSA Format
  contents:
  - "A.  Grace-LSA Format\n   The grace-LSA is a link-local scoped Opaque-LSA [2],\
    \ having an Opaque\n   Type of 3 and an Opaque ID equal to 0.  Grace-LSAs are\
    \ originated by\n   a router that wishes to execute a graceful restart of its\
    \ OSPF\n   software.  A grace-LSA requests that the router's neighbors aid in\n\
    \   its graceful restart by continuing to advertise the router as fully\n   adjacent\
    \ during a specified grace period.\n   Each grace-LSA has an LS age field set\
    \ to 0 when the LSA is first\n   originated; the current value of the LS age then\
    \ indicates how long\n   ago the restarting router made its request.  The body\
    \ of the LSA is\n   TLV-encoded.  The TLV-encoded information includes the length\
    \ of the\n   grace period, the reason for the graceful restart and, when the\n\
    \   grace-LSA is associated with a broadcast, NBMA or Point-to-MultiPoint\n  \
    \ network segment, the IP interface address of the restarting router.\n      \
    \ 0                   1                   2                   3\n       0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |            LS age             |     Options   |       9       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \       3       |                    0                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Advertising Router                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                     LS sequence number                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         LS checksum           |             length            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      +-  \
    \                          TLVs                             -+\n      |      \
    \                       ...                               |\n   The format of\
    \ the TLVs within the body of a grace-LSA is the same as\n   the format used by\
    \ the Traffic Engineering Extensions to OSPF [4].\n   The LSA payload consists\
    \ of one or more nested Type/Length/Value\n   (TLV) triplets.  The format of each\
    \ TLV is:\n       0                   1                   2                  \
    \ 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |              Type             |             Length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                            Value...                           |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   The\
    \ Length field defines the length of the value portion in octets\n   (thus a TLV\
    \ with no value portion would have a length of zero).  The\n   TLV is padded to\
    \ four-octet alignment; padding is not included in the\n   length field (so a\
    \ three octet value would have a length of three,\n   but the total size of the\
    \ TLV would be eight octets).  Nested TLVs\n   are also 32-bit aligned.  For example,\
    \ a one byte value would have\n   the length field set to 1, and three bytes of\
    \ padding would be added\n   to the end of the value portion of the TLV.  Unrecognized\
    \ types are\n   ignored.\n   The following is the list of TLVs that can appear\
    \ in the body of a\n   grace-LSA:\n   o  Grace Period (Type=1, length=4).  The\
    \ number of seconds that the\n      router's neighbors should continue to advertise\
    \ the router as\n      fully adjacent, regardless of the state of database\n \
    \     synchronization between the router and its neighbors.  Since this\n    \
    \  time period began when grace-LSA's LS age was equal to 0, the\n      grace\
    \ period terminates when either:\n      a) the LS age of the grace-LSA exceeds\
    \ the value of a Grace Period\n         or\n      b) the grace-LSA is flushed.\
    \  See Section 3.2 for other conditions\n         that terminate graceful restart.\n\
    \      This TLV must always appear in a grace-LSA.\n   o  Graceful restart reason\
    \ (Type=2, length=1).  Encodes the reason\n      for the router restart as one\
    \ of the following: 0 (unknown), 1\n      (software restart), 2 (software reload/upgrade)\
    \ or 3 (switch to\n      redundant control processor).  This TLV must always appear\
    \ in a\n      grace-LSA.\n   o  IP interface address (Type=3, length=4).  The\
    \ router's IP\n      interface address on the subnet associated with the grace-LSA.\n\
    \      Required on broadcast, NBMA and Point-to-MultiPoint segments,\n      where\
    \ the helper uses the IP interface address to identify the\n      restarting router\
    \ (see Section 3.1).\n   DoNotAge is never set in a grace-LSA, even if the grace-LSA\
    \ is\n   flooded over a demand circuit [7].  This is because the grace-LSA's\n\
    \   LS age field is used to calculate the duration of the grace period.\n   Grace-LSAs\
    \ have link-local scope because they only need to be seen by\n   the router's\
    \ direct neighbors.\n   Additional Grace-LSA TLVs must be described in an Internet\
    \ Draft and\n   will be subject to the expert review of the OSPF Working Group.\n"
- title: B.  Configurable Parameters
  contents:
  - "B.  Configurable Parameters\n   OSPF graceful restart parameters are suggested\
    \ below.  Section B.1\n   contains a minimum subset of parameters that should\
    \ be supported.\n   B.2 includes some additional configuration parameters that\
    \ an\n   implementation may choose to support.\n"
- title: B.1.  Global Parameters (Minimum subset)
  contents:
  - "B.1.  Global Parameters (Minimum subset)\n   RestartSupport\n      The router's\
    \ level of support for OSPF graceful restart.\n      Allowable values are none,\
    \ planned restart only, and\n      planned/unplanned.\n   RestartInterval\n  \
    \    The graceful restart interval in seconds.  The range is from 1 to\n     \
    \ 1800 seconds, with a suggested default of 120 seconds.\n"
- title: B.2.  Global Parameters (Optional)
  contents:
  - "B.2.  Global Parameters (Optional)\n   RestartHelperSupport\n      The router's\
    \ support for acting as an OSPF restart helper.\n      Allowable values are none,\
    \ planned restart only, and\n      planned/unplanned.\n   RestartHelperStrictLSAChecking\n\
    \      Indicates whether or not an OSPF restart helper should terminate\n    \
    \  graceful restart when there is a change to an LSA that would be\n      flooded\
    \ to the restarting router or when there is a changed LSA on\n      the restarting\
    \ router's retransmission list when graceful restart\n      is initiated.  The\
    \ suggested default is enabled.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   One of the ways to attack a link-state protocol such\
    \ as OSPF is to\n   inject false LSAs into, or corrupt existing LSAs in, the link-state\n\
    \   database.  Injecting a false grace-LSA would allow an attacker to\n   spoof\
    \ a router that, in reality, has been withdrawn from service.\n   The standard\
    \ way to prevent such corruption of the link-state\n   database is to secure OSPF\
    \ protocol exchanges using the cryptographic\n   authentication specified in [1].\
    \  An even stronger way of securing\n   link-state database contents has been\
    \ proposed in [3].\n   When cryptographic authentication [1] is used on the restarting\n\
    \   router the preservation of received sequence numbers in non-volatile\n   storage\
    \ is not mandatory.  There is a risk that a replayed Hello\n   packet could cause\
    \ neighbor state for a deceased neighbor to be\n   created.  However, the risk\
    \ is no greater than during normal\n   operation.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors wish to thank John Drake, Vishwas Manral, Kent\
    \ Wong, and\n   Don Goodspeed for their helpful comments.  We also wish to thank\
    \ Alex\n   Zinin and Bill Fenner for their thorough review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   J. Moy\n   Sycamore Networks, Inc.\n   150 Apollo Drive\n\
    \   Chelmsford, MA 01824\n   Phone: (978) 367-2505\n   Fax:   (978) 256-4203\n\
    \   EMail: jmoy@sycamorenet.com\n   Padma Pillay-Esnault\n   Juniper Networks\n\
    \   1194 N, Mathilda Avenue\n   Sunnyvale, CA 94089-1206\n   EMail: padma@juniper.net\n\
    \   Acee Lindem\n   Redback Networks\n   102 Carric Bend Court\n   Cary, NC 27519\n\
    \   EMail: acee@redback.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
