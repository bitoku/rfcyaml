- title: __initial_text__
  contents:
  - '               Security Label Framework for the Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The members of the Privacy and Security Research Group and\
    \ the\n   attendees of the invitational Security Labels Workshop (hosted by the\n\
    \   National Institute of Standards and Technology) helped me organize my\n  \
    \ thoughts on this subject.  The ideas of these professionals are\n   scattered\
    \ throughout the memo.\n"
- title: 1.0  Introduction
  contents:
  - "1.0  Introduction\n   This memo presents a security labeling framework for the\
    \ Internet.\n   The framework is intended to help protocol designers determine\
    \ what,\n   if any, security labeling should be supported by their protocols.\n\
    \   The framework should also help network architects determine whether\n   or\
    \ not a particular collection of protocols fulfill their security\n   labeling\
    \ requirements.  The Open Systems Interconnection Reference\n   Model [1] provides\
    \ the structure for the presentation, therefore OSI\n   protocol designers may\
    \ also find this memo useful.\n"
- title: 2.0  Security Labels
  contents:
  - "2.0  Security Labels\n   Data security is the set of measures taken to protect\
    \ data from\n   accidental, unauthorized, intentional, or malicious modification,\n\
    \   destruction, or disclosure.  Data security is also the condition that\n  \
    \ results from the establishment and maintenance of protective measures\n   [2].\
    \  Given this two-pronged definition for data security, this memo\n   examines\
    \ security labeling as one mechanism which provides data\n   security.  In general,\
    \ security labeling by itself does not provide\n   sufficient data security; it\
    \ must be complemented by other security\n   mechanisms.\n   In data communication\
    \ protocols, security labels tell the protocol\n   processing how to handle the\
    \ data transferred between two systems.\n   That is, the security label indicates\
    \ what measures need to be taken\n   to preserve the condition of security.  Handling\
    \ means the activities\n   performed on data such as collecting, processing, transferring,\n\
    \   storing, retrieving, sorting, transmitting, disseminating, and\n   controlling\
    \ [3].\n   The definition of data security includes protection from modification\n\
    \   and destruction.  In computer systems, this is protection from\n   writing\
    \ and deleting.  These protections implement the data integrity\n   service defined\
    \ in the OSI Security Architecture [4].\n   Biba [5] has defined a data integrity\
    \ model which includes security\n   labels.  The Biba model specifies rule-based\
    \ controls for writing and\n   deleting necessary to preserve data integrity.\
    \  The model also\n   specifies rule-based controls for reading to prevent a high\
    \ integrity\n   process from relying on data that has less integrity than the\n\
    \   process.\n   The definition of data security also includes protection from\n\
    \   disclosure.  In computer systems, this is protection from reading.\n   This\
    \ protection is the data confidentiality service defined in the\n   OSI Security\
    \ Architecture [4].\n   Bell and LaPadula [6] defined a data confidentiality model\
    \ which\n   includes security labels.  The Bell and LaPadula model specifies\n\
    \   rule-based controls for reading necessary to preserve data\n   confidentiality.\
    \  The model also specifies rule-based controls for\n   writing to ensure that\
    \ data is not copied to a container where\n   confidentiality can not be guaranteed.\n\
    \   In both the Biba model and the Bell and LaPadula model, the security\n   label\
    \ is an attribute of the data.  In general, the security label\n   associated\
    \ with the data remains constant.  Exceptions will be\n   discussed later in the\
    \ memo, but relabeling is always the result of\n   some network entity handling\
    \ the data.  Since the security label is\n   an attribute of data, it should be\
    \ bound to the data.  When data\n   moves through the network, the integrity security\
    \ service [4] is\n   generally used to accomplish this binding.  If the communications\n\
    \   environment does not include a protocol which provides the integrity\n   security\
    \ service to bind the security label to the data, then the\n   communications\
    \ environment should include other mechanisms to\n   preserve this binding.\n"
- title: 2.1  Integrity Labels
  contents:
  - "2.1  Integrity Labels\n   Integrity labels are security labels which support\
    \ data integrity\n   models, like the Biba model.  The integrity label tells the\
    \ degree of\n   confidence that may be placed in the data and also indicates which\n\
    \   measures the data requires for protection from modification and\n   destruction.\n\
    \   As data moves through the network, the confidence that may be placed\n   in\
    \ that data may change as a result of being handled by various\n   network components.\
    \  Therefore, the integrity label is a function of\n   the integrity of the data\
    \ before being transmitted on the network and\n   the path that the data takes\
    \ through the network.  The confidence\n   that may be placed in data does not\
    \ increase because it was\n   transferred across a network, but the confidence\
    \ that may be placed\n   in data may decrease as a result of being handled by\
    \ arbitrary\n   network components.  Entities are assigned integrity labels which\n\
    \   indicate how much confidence may be placed in data that is handled by\n  \
    \ them.  Thus, when data is handled by an entity with an integrity\n   label lower\
    \ than the integrity label of the data, the data is\n   relabeled with the integrity\
    \ label of the entity.  Such relabeling\n   should be avoided by limiting the\
    \ possible paths that data may take\n   through the network to those where the\
    \ data will be handled only by\n   entities with the same or a higher integrity\
    \ label than the data.\n   When integrity labels are used, each of the systems\
    \ on a network must\n   implement the integrity model and the protocol suite must\
    \ transfer\n   the integrity label with the data, if the confidence of the data\
    \ is\n   to be maintained throughout the network.  Each of the systems on a\n\
    \   network may have its own internal representation for a integrity\n   label,\
    \ but the protocols must provide common syntax and semantics for\n   the transfer\
    \ of the integrity label, as well as the data itself.  To\n   date, no protocols\
    \ have been standardized which include integrity\n   labels in the protocol control\
    \ information.\n"
- title: 2.2  Sensitivity Labels
  contents:
  - "2.2  Sensitivity Labels\n   Sensitivity labels are security labels which support\
    \ data\n   confidentiality models, like the Bell and LaPadula model.  The\n  \
    \ sensitivity label tells the amount of damage that will result from\n   the disclosure\
    \ of the data and also indicates which measures the data\n   requires for protection\
    \ from disclosure.  The amount of damage that\n   results from unauthorized disclosure\
    \ depends on who obtains the data;\n   the sensitivity label should reflect the\
    \ worst case.\n   As data moves through the network, it is processed by various\
    \ network\n   components and may be mixed with data of differing sensitivity.\
    \  If\n   these network components are not trusted to segregate data of\n   differing\
    \ sensitivities, then all of the data processed by those\n   components must be\
    \ handled as the most sensitive data processed by\n   those network components.\
    \  For example, poor buffer management may\n   append highly sensitive data to\
    \ the end of a protocol data unit that\n   was otherwise publicly releasable.\
    \  Therefore, the sensitivity label\n   is a function of the sensitivity of the\
    \ data before being transmitted\n   on the network and the most sensitive data\
    \ handled by the network\n   components, and the trustworthiness of those network\
    \ components.  The\n   amount of damage that will result from the disclosure of\
    \ the data\n   does not decrease because it was transferred across a network,\
    \ but\n   the amount of damage that will result from the disclosure of the data\n\
    \   may increase as a result of being mixed with more sensitive data by\n   arbitrary\
    \ network components.  Thus, when data is handled by an\n   untrusted entity with\
    \ a sensitivity label higher than the sensitivity\n   label of the data, the data\
    \ is relabeled with the higher sensitivity\n   label.  Such relabeling should\
    \ be avoided by limiting the possible\n   paths that data may take through the\
    \ network to those where the data\n   will be handled only by entities with the\
    \ same sensitivity label as\n   the data or by using trustworthy network components.\
    \  Entities with\n   lower sensitivity labels may not handle the data because\
    \ this would\n   be disclosure.\n   When sensitivity labels are used, each of\
    \ the systems on a network\n   must implement the sensitivity model and the protocol\
    \ suite must\n   transfer the sensitivity label with the data, if the protection\
    \ from\n   disclosure is to be maintained throughout the network.  Each of the\n\
    \   systems on a network may have its own internal representation for a\n   sensitivity\
    \ label, but the protocols must provide common syntax and\n   semantics for the\
    \ transfer of the sensitivity label, as well as the\n   data itself.  Sensitivity\
    \ labels, like the ones provided by the IP\n   Security Option (IPSO) [7], have\
    \ been used in a few networks for\n   years.\n"
- title: 3.0  Security Label Usage
  contents:
  - "3.0  Security Label Usage\n   The Internet includes two major types of systems:\
    \ end systems and\n   intermediate systems [1].  These terms should be familiar\
    \ to the\n   reader.  For this discussion, the definition of intermediate system\n\
    \   is understood to include routers, packet switches, and bridges.  End\n   systems\
    \ and intermediate systems use security labels differently.\n"
- title: 3.1  End System Security Label Usage
  contents:
  - "3.1  End System Security Label Usage\n   When two end systems communicate, common\
    \ security label syntax and\n   semantics are needed.  The security label, as\
    \ an attribute of the\n   data, indicates what measures need to be taken to preserve\
    \ the\n   condition of security.  The security label must communicate all of\n\
    \   the integrity and confidentiality handling requirements.  These\n   requirements\
    \ can become very complex.\n   Some operating systems label the data they process.\
    \  These security\n   labels are not part of the data; they are attributes of\
    \ the data.\n   Some database management systems (DBMSs) perform similar labeling.\n\
    \   The format of these security labels is a local matter, but they are\n   usually\
    \ in a format different than the one used by the data\n   communication protocols.\
    \  Security labels must be translated by these\n   operating systems and DBMSs\
    \ between the local format and the format\n   used in the data communication protocols\
    \ without any loss of meaning.\n   Trusted operating systems that implement rule-based\
    \ access control\n   policies require security labels on the data they import\
    \ [8,9].\n   These security labels permit the Trusted Computing Base (TCB) in\
    \ the\n   end system to perform trusted demultiplexing.  That is, the traffic\n\
    \   is relayed from the TCB to a process only if the process has\n   sufficient\
    \ authorization for the data.  In most cases, the TCB must\n   first translate\
    \ the security label into the local syntax before it\n   can make the access control\
    \ decision.\n"
- title: 3.2  Intermediate System Security Label Usage
  contents:
  - "3.2  Intermediate System Security Label Usage\n   This section discusses \"user\"\
    \ data security labels within the\n   intermediate system.  The labeling requirements\
    \ associated with\n   intermediate system-to-end system (IS-ES) traffic, intermediate\n\
    \   system-to-intermediate system (IS-IS) traffic, and intermediate\n   system-to-network\
    \ management (IS-NM) traffic are not included in this\n   discussion.\n   Intermediate\
    \ systems may make routing choices or discard traffic\n   based on the security\
    \ label.  The security label used by the\n   intermediate system should contain\
    \ only enough information to make\n   the routing/discard decision and may be\
    \ a subset of the security\n   label used by the end system.  Some portions of\
    \ the label may not\n   effect routing decisions, but they may effect processing\
    \ done within\n   the end system.\n   In the Internet today, very few intermediate\
    \ systems actually make\n   access control decisions.  For performance reasons,\
    \ only those\n   intermediate systems which do make access control decisions should\
    \ be\n   burdened with parsing the security label.  That is, information\n   hiding\
    \ principles apply.  Further, security labels which are to be\n   parsed only\
    \ by end systems should not be visible to physical, data\n   link, or network\
    \ layer protocols, where intermediate systems will\n   have to examine them.\n\
    \   Intermediate systems do not usually translate the security labels to\n   a\
    \ local format.  They use them \"as is\" to make their routing/discard\n   decisions.\
    \  However, when two classification authorities share a\n   network by bilateral\
    \ agreement, the intermediate systems may be\n   required to perform security\
    \ label translation.  Security label\n   translations should be avoided whenever\
    \ possible by using a security\n   label format that is supported by all systems\
    \ that will process the\n   security label.  Since end systems do not generally\
    \ know which\n   intermediate systems will process their traffic, security label\n\
    \   translation cannot always be avoided.\n   Since security labels which are\
    \ to be parsed only by end systems\n   should not be carried by protocols interpreted\
    \ by intermediate\n   systems, such security labels should be carried by upper\
    \ layer\n   protocols, and end systems which use different formats for such\n\
    \   security labels cannot rely on an intermediate systems to perform\n   security\
    \ label translation.  Neither the Internet nor the OSI\n   architecture includes\
    \ such transformation functions in the transport,\n   session, or presentation\
    \ layer, which means that application layer\n   gateways should be used to translate\
    \ between different end system\n   security label formats.  Such application gateways\
    \ should be avoided\n   because they impinge on operation, especially when otherwise\n\
    \   compatible protocols are used.  This complication is another reason\n   why\
    \ the use of a security label format that is supported by all\n   systems is desirable.\
    \  A standard label syntax with registered\n   security label semantics goes a\
    \ long way toward avoiding security\n   label translation [10].\n"
- title: 4.0  Approaches to Labeling
  contents:
  - "4.0  Approaches to Labeling\n   There are several tradeoffs to be made when determining\
    \ how a\n   particular network will perform security labeling.  Explicit or\n\
    \   implicit labels can be used.  Also, security labels can either be\n   connectionless\
    \ or connection-oriented.  A combination of these\n   alternatives may be appropriate.\n"
- title: 4.1  Explicit Versus Implicit Security Labels
  contents:
  - "4.1  Explicit Versus Implicit Security Labels\n   Explicit security labels are\
    \ actual bits in the protocol control\n   information (PCI).  The IP Security\
    \ Option (IPSO) is an example of an\n   explicit security label [7].  Explicit\
    \ security labels may be either\n   connectionless or connection-oriented.  The\
    \ syntax and semantics of\n   the explicit security label may be either tightly\
    \ or loosely coupled.\n   If the syntax and semantics are tightly coupled, then\
    \ the explicit\n   security label format supports a single security policy.  If\
    \ the\n   syntax and semantics are loosely coupled, then the explicit security\n\
    \   label format can support multiple security policies through\n   registration.\
    \  In both cases, software enforces the security policy,\n   but the label parsing\
    \ software can be written once if the syntax and\n   semantics are loosely coupled.\
    \  Fixed length explicit security label\n   format parsers are generally faster\
    \ than parsers for variable length\n   formats.  Intermediate systems suffer less\
    \ performance impact when\n   fixed length explicit security labels can be used,\
    \ but end systems\n   often need variable length explicit security labels to express\
    \ data\n   handling requirements.\n   Implicit security labels are not actual\
    \ bits in the PCI; instead,\n   some attribute is used to determine the security\
    \ label.  For example,\n   the choice of cryptographic key in the SP4 protocol\
    \ [11] can\n   determine the security label.  Implicit security labels may be\
    \ either\n   connectionless or connection-oriented.\n"
- title: 4.2  Connectionless Versus Connection-oriented Security Labels
  contents:
  - "4.2  Connectionless Versus Connection-oriented Security Labels\n   When connectionless\
    \ security labels are used, the security label\n   appears in every protocol data\
    \ unit (PDU).  The IP Security Option\n   (IPSO) [7] is an example of connectionless\
    \ labeling.  All protocols\n   have limits on the size of their PCI, and the explicit\
    \ security label\n   cannot exceed this size limit.  It cannot use the entire\
    \ PCI space\n   either; the protocol has other fields that must be transferred\
    \ as\n   well.  This size limitation may prohibit explicit connectionless\n  \
    \ security labels from meeting the requirements of end systems.\n   However, the\
    \ requirements of intermediate systems are more easily\n   satisfied by explicit\
    \ connectionless security labels.\n   Connection-oriented security labels are\
    \ attributes of virtual\n   circuits, connections, and associations.  For simplicity,\
    \ all of\n   these are subsequently referred to as connections.  Connection-\n\
    \   oriented security labels are used when the SDNS Key Management\n   Protocol\
    \ (KMP) [12] is used to associate security labels with each of\n   the transport\
    \ connection protected by the SP4 protocol [10,11] (using\n   SP4C).  The security\
    \ label is defined at connection establishment,\n   and all data transferred over\
    \ the connection inherits that security\n   label.  This approach is more compatible\
    \ with end system requirements\n   than intermediate system requirements.  One\
    \ noteworthy exception is\n   X.25 packets switches; these intermediate systems\
    \ could associate\n   connection-oriented labels with each virtual circuit.\n\
    \   Connectionless security labels may be used in conjunction with\n   connectionless\
    \ or connection-oriented data transfer protocols.\n   However, connection-oriented\
    \ security labels may only be used in\n   conjunction with connection-oriented\
    \ data transfer protocols.\n"
- title: 5.0  Labeling Within the OSI Reference Model
  contents:
  - "5.0  Labeling Within the OSI Reference Model\n   This section examines each of\
    \ the seven OSI layers with respect to\n   security labels.\n"
- title: 5.1  Layer 1, The Physical Layer
  contents:
  - "5.1  Layer 1, The Physical Layer\n   Explicit security labels are not possible\
    \ in the Physical Layer.  The\n   Physical Layer does not include any protocol\
    \ control information\n   (PCI), so there is no place to include the bits which\
    \ represent the\n   label.\n   Implicit security labels are possible in the Physical\
    \ Layer.  For\n   example, all of the data that comes in through a particular\
    \ physical\n   port could inherit one security label.  Most Physical Layer\n \
    \  communication is connectionless, supporting only bit-at-a-time or\n   byte-at-a-time\
    \ operations.  Thus, these implicit security labels are\n   connectionless.\n\
    \   Implicit security labels in the Physical Layer may be used to meet\n   the\
    \ requirements of either end systems or intermediate systems so\n   long as the\
    \ communication is single level.  That is, only one\n   security label is associated\
    \ with all of the data received or\n   transmitted through the physical connection.\n"
- title: 5.2  Layer 2, The Data Link Layer
  contents:
  - "5.2  Layer 2, The Data Link Layer\n   Explicit security labels are possible in\
    \ the Data Link Layer.  In\n   fact, the IEEE 802.2 Working Group is currently\
    \ working on an\n   optional security label standard for the Logical Link Control\
    \ (LLC)\n   protocol (IEEE 802.2) [13].  These labels will optionally appear in\n\
    \   each LLC frame.  These are connectionless security labels.\n   Explicit connection-oriented\
    \ security labels are also possible in the\n   Data Link Layer.  One could imagine\
    \ a security label standard which\n   worked with LLC Type II.\n   Of course,\
    \ implicit security labels are also possible in the Data\n   Link Layer.  Such\
    \ labels could be either connectionless or\n   connection-oriented.  One attribute\
    \ that might be used in IEEE 802.3\n   (CSMA/CD) [14] to determine the implicit\
    \ security label is the source\n   address of the frame.\n   Security labels in\
    \ the Data Link Layer may be used to meet the\n   requirements of end systems\
    \ and intermediate systems (especially\n   bridges).  Explicit security labels\
    \ in this layer tend to be small\n   because the protocol headers for data link\
    \ layer protocols are\n   themselves small.  Therefore, when end systems require\
    \ large security\n   labels, a higher protocol layer should used to carry them.\
    \  However,\n   when end systems do not require large security labels, the data\
    \ link\n   layer is attractive because in many cases the data link layer\n   protocol\
    \ supports several protocol suites simultaneously.  Label-\n   based routing/relay\
    \ decisions made by bridges are best supported in\n   this layer.\n"
- title: 5.3  Layer 3, The Network Layer
  contents:
  - "5.3  Layer 3, The Network Layer\n   Explicit security labels are possible in\
    \ the Network Layer.  In fact,\n   the IP Security Option (IPSO) [7] has been\
    \ used for many years.\n   These labels optionally appear in each IP datagram.\
    \  IPSO labels are\n   obviously connectionless security labels.\n   Explicit\
    \ connection-oriented security labels are also possible in the\n   Network Layer.\
    \  One could easily imagine a security label standard\n   for X.25 [15], but none\
    \ exists.\n   Of course, implicit security labels are also possible in the Network\n\
    \   Layer.  These labels could be either connectionless or connection-\n   oriented.\
    \  One attribute that might be used to determine the implicit\n   security label\
    \ is the X.25 virtual circuit.\n   Security labels in the Network Layer may be\
    \ used to meet the\n   requirements of end systems and intermediate systems. \
    \ Explicit\n   security labels in this layer tend to be small because the protocol\n\
    \   headers for network layer protocols are themselves small.  Small\n   fixed\
    \ size network layer protocol headers allow efficient router\n   implementations.\
    \  Therefore, when end systems require large security\n   labels, a higher protocol\
    \ layer should used to carry them.\n   Alternatively, the Network Layer (especially\
    \ the Subnetwork\n   Independent Convergence Protocol (SNICP) sublayer) is an\
    \ excellent\n   place to carry a security label to support trusted demultiplexing,\n\
    \   because many implementations demultiplex from an system-wide daemon\n   to\
    \ a user process after network layer processing.  The SNICP is end-\n   to-end,\
    \ yet it is low enough in the protocol stack to aid trusted\n   demultiplexing.\n\
    \   Label-based routing/relay decisions made by routers and packet\n   switches\
    \ are best supported in the Network Layer.  Routers can also\n   add labels at\
    \ subnetwork boundaries.  However, placement of these\n   security labels must\
    \ be done carefully to ensure that their addition\n   does not degrade overall\
    \ network performance by forcing routers that\n   do not make label-based routing\
    \ decisions to parse the security\n   label.  Also, performance will suffer if\
    \ the addition of security\n   labels at subnet boundaries induces fragmentation/segmentation.\n"
- title: 5.4  Layer 4, The Transport Layer
  contents:
  - "5.4  Layer 4, The Transport Layer\n   Explicit security labels are possible in\
    \ the Transport Layer.  For\n   example, the SP4 protocol [10,11] includes them.\
    \  These labels can be\n   either connectionless (using SP4E) or connection-oriented\
    \ (using\n   SP4C).  SP4 is an addendum to the TP [16] and CLTP [17] protocols.\n\
    \   Implicit security labels are also possible in the Transport Layer.\n   Such\
    \ labels could be either connectionless or connection-oriented.\n   One attribute\
    \ that might be used to determine the implicit label in\n   the SP4 protocol (when\
    \ explicit labels are not used as discussed\n   above) is the choice of cryptographic\
    \ key.\n   Security labels in the Transport Layer may be used to meet the\n  \
    \ requirements of end systems. The Transport Layer cannot be used to\n   meet\
    \ the requirements of intermediate systems because intermediate\n   systems, by\
    \ definition, do not process protocols above the Network\n   Layer.  Connection-oriented\
    \ explicit security labels in this layer\n   are especially good for meeting end\
    \ system requirements where large\n   labels are required.  The security label\
    \ is transmitted only at\n   connection establishment, so overhead is kept to\
    \ a minimum.  Of\n   course, connectionless transport protocols may not take advantage\
    \ of\n   this overhead reduction technique.  Yet, in many implementations the\n\
    \   Transport Layer is low enough in the protocol stack to aid trusted\n   demultiplexing.\n"
- title: 5.5  Layer 5, The Session Layer
  contents:
  - "5.5  Layer 5, The Session Layer\n   Explicit security labels are possible in\
    \ the Session Layer.  Such\n   labels could be either connectionless or connection-oriented.\n\
    \   However, it is unlikely that a standard will ever be developed for\n   such\
    \ labels because the OSI Security Architecture [4] does not\n   allocate any security\
    \ services to the Session Layer, and the Internet\n   protocol suite does not\
    \ have a Session Layer.\n   Implicit security labels are also possible in the\
    \ Session Layer.\n   These implicit labels could be either connectionless or connection-\n\
    \   oriented.  Again, the OSI Security Architecture makes this layer an\n   unlikely\
    \ choice for security labeling.\n   Security labels in the Session Layer may be\
    \ used to meet the\n   requirements of end systems, but the Session Layer is too\
    \ high in the\n   protocol stack to support trusted demultiplexing.  The Session\
    \ Layer\n   cannot be used to meet the requirements of intermediate systems\n\
    \   because intermediate systems, by definition, do not process protocols\n  \
    \ above the Network Layer.  Security labels in the Session Layer do not\n   offer\
    \ any advantages to security labels in the Transport Layer.\n"
- title: 5.6  Layer 6, The Presentation Layer
  contents:
  - "5.6  Layer 6, The Presentation Layer\n   Explicit security labels are possible\
    \ in the Presentation Layer.  The\n   presentation syntax may include a security\
    \ label.  This approach\n   naturally performs translation to the local label\
    \ format and supports\n   both connectionless and connection-oriented security\
    \ labeling.\n   Implicit security labels are also possible in the Presentation\
    \ Layer.\n   Such labels could be either connectionless or connection-oriented.\n\
    \   Security labels in the Presentation Layer may be used to meet the\n   requirements\
    \ of end systems, but the Presentation Layer is too high\n   in the protocol stack\
    \ to support trusted demultiplexing.  The\n   Presentation Layer cannot be used\
    \ to meet the requirements of\n   intermediate systems because intermediate systems,\
    \ by definition, do\n   not process protocols above the Network Layer.  To date,\
    \ no\n   Presentation Layer protocols have been standardized which include\n \
    \  security labels.\n"
- title: 5.7  Layer 7, The Application Layer
  contents:
  - "5.7  Layer 7, The Application Layer\n   Explicit security labels are possible\
    \ in the Application Layer.  The\n   CCITT X.400 message handling system includes\
    \ security labels in\n   message envelopes [18].  Other Application Layer protocols\
    \ will\n   probably include security labels in the future.  These labels could\n\
    \   be either connectionless or connection-oriented.  Should security\n   labels\
    \ be incorporated into transaction processing protocols and\n   message handling\
    \ protocols, these will most likely be connectionless\n   security labels; should\
    \ security labels be incorporated into other\n   application protocols, these\
    \ will most likely be connection-oriented\n   security labels.  Application layer\
    \ protocols are unique in that they\n   can include security label information\
    \ which is specific to a\n   particular application without burdening other applications\
    \ with the\n   syntax or semantics of that security label.\n   Store and forward\
    \ application protocols, like electronic messaging\n   and directory protocols,\
    \ deserve special attention.  In terms of the\n   OSI Reference Model, they are\
    \ end system protocols, but multiple end\n   systems cooperate to provide the\
    \ communications service.  End systems\n   may use security labels to determine\
    \ which end system should be next\n   in a chain of store and forward interactions;\
    \ this use of security\n   labels is very similar to the label-based routing/relay\
    \ decisions\n   made by routers except that the security labels are carried in\
    \ an\n   Application Layer protocol.  Also, Application Layer protocols must\n\
    \   be used to carry security labels in a store and forward application\n   when\
    \ sensitivity labels must be concealed from some end systems in\n   the chain\
    \ or when some end systems in the chain are untrustworthy.\n   Implicit security\
    \ labels are also possible in the Application Layer.\n   These labels could be\
    \ either connectionless or connection-oriented.\n   Application title or well\
    \ know port number might be used to determine\n   the implicit label.\n   Security\
    \ labels in the Application Layer may be used to meet the\n   requirements of\
    \ end systems, but the Application Layer is too high in\n   the protocol stack\
    \ to support trusted demultiplexing.  The\n   Application Layer cannot be used\
    \ to meet the requirements of\n   intermediate systems because intermediate systems,\
    \ by definition, do\n   not process protocols above the Network Layer.\n"
- title: 6.0  Summary
  contents:
  - "6.0  Summary\n   Very few hard rules exist for security labels. Internet architects\n\
    \   and protocol designers face many tradeoffs when making security label\n  \
    \ placement decisions.  However, a few guidelines can be derived from\n   the\
    \ preceding discussion:\n   First, security label-based routing decisions are\
    \ best supported by\n   explicit security labels in the Data Link Layer and the\
    \ Network\n   Layer.  When bridges are making the routing decisions, the Data\
    \ Link\n   Layer should carry the explicit security label; when routers are\n\
    \   making the routing decisions, the Network Layer should carry the\n   explicit\
    \ security label.\n   Second, when security labels are specific to a particular\
    \ application\n   it is wise to define them in the application protocol, so that\
    \ these\n   security labels will not burden other applications on the network.\n\
    \   Third, when trusted demultiplexing is a concern, the Network Layer\n   (preferably\
    \ the SNICP) or Transport Layer should be used to carry the\n   explicit security\
    \ label.  The SNICP or transport protocol are\n   especially attractive when combined\
    \ with a cryptographic protocol\n   that binds the security label to the data\
    \ and protects the both\n   against undetected modification.\n   Fourth, to avoid\
    \ explicit security label translation, a common\n   explicit security label format\
    \ should be defined for the Internet.\n   Registration of security label semantics\
    \ should be used so that many\n   security policies can be supported by the common\
    \ explicit security\n   label syntax.\n"
- title: References
  contents:
  - "References\n   [1] ISO Open Systems Interconnection - Basic Reference Model (ISO\n\
    \       7498).  International Organization for Standardization, 1981.\n   [2]\
    \ Dictionary of Military and Associated Terms (JCS Pub 1).  Joint\n       Chiefs\
    \ of Staff.  1 April 1984.\n   [3] Security Requirements for Automatic Data Processing\
    \ (ADP) Systems\n       (DODD 5200.28).  Department of Defense.  21 March 1988.\n\
    \   [4] Information Processing Systems - Open Systems Interconnection\n      \
    \ Reference Model - Security Architecture (ISO 7498-2).\n       Organization for\
    \ Standardization, 1988.\n   [5] Biba, K. J.  \"Integrity Considerations for Secure\
    \ Computer\n       Systems\",  MTR-3153, The Mitre Corporation, April 1977.\n\
    \   [6] Bell, D. E.;  LaPadula, L. J.  \"Secure Computer System: Unified\n   \
    \    Exposition and Multics Interpretation\", MTR-2997, The MITRE\n       Corporation,\
    \ March 1976.\n   [7] Kent, S.  \"U.S. Department of Defense Security Options\
    \ for the\n       Internet Protocol\", RFC 1108, BBN Communications, November\
    \ 1992.\n   [8] Trusted Computer System Evaluation Criteria (DoD 5200.28-STD)\n\
    \       National Computer Security Center, 26 December 1985.\n   [9] Trusted Network\
    \ Interpretation of the Trusted Computer System\n       Evaluation Criteria, (NCSC-TG-005,\
    \ Version-1).  National Computer\n       Security Center, 31 July 1987.\n  [10]\
    \ Nazario, Noel (Chairman). \"Standard Security Label for GOSIP An\n       Invitational\
    \ Workshop\", NISTIR 4614, June 1991.\n  [11] Dinkel, Charles (Editor). \"Secure\
    \ Data Network System (SDNS)\n       Network, Transport, and Message Security\
    \ Protocols\", NISTIR 90-\n       4250, February 1990, pp 39-62.\n  [12] Dinkel,\
    \ Charles (Editor). \"Secure Data Network System (SDNS) Key\n       Management\
    \ Documents\", NISTIR 90-4262, February 1990.\n  [13] IEEE Standards for Local\
    \ Area Networks: Logical Link Control,\n       IEEE 802.2.  The Institute of Electrical\
    \ and Electronics\n       Engineers, Inc, 1984.\n  [14] IEEE Standards for Local\
    \ Area Networks: Carrier Sense Multiple\n       Access with Collision Detection\
    \ (CSMA/CD) Access Method and\n       Physical Layer Specification, IEEE 802.3.\
    \  The Institute of\n       Electrical and Electronics Engineers, Inc, 1985.\n\
    \  [15] Recommendation X.25, Interface Between Data Terminal Equipment\n     \
    \  (DTE) and Data Circuit Terminating Equipment (DCE) for Terminals\n       Operating\
    \ in the Packet Mode on Public Data Networks.\n       Consultative Committee,\
    \ International Telephone and Telegraph\n       (CCITT), 1984.\n  [16] Information\
    \ Processing Systems - Open Systems Interconnection -\n       Connection oriented\
    \ transport protocol specification (ISO 8073).\n       Organization for Standardization,\
    \ 1985.  [Also ISO 8208]\n  [17] Information Processing Systems - Open Systems\
    \ Interconnection -\n       Protocol for providing the connectionless-mode transport\
    \ service\n       (ISO 8602).  Organization for Standardization, 1986.\n  [18]\
    \ Recommendation X.411, Message Handling Systems: Message Transfer\n       System:\
    \ Abstract Service Definition and Procedures.  Consultative\n       Committee,\
    \ International Telephone and Telegraph (CCITT), 1988.\n       [Also ISO 8883-1]\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   This entire memo is devoted to a discussion of a\
    \ Framework for\n   labeling information for security purposes in network protocols.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Russell Housley\n   Xerox Special Information Systems\n\
    \   7900 Westpark Drive\n   McLean, Virginia  22102\n   Phone:  703-790-3767\n\
    \   EMail:  Housley.McLean_CSD@Xerox.COM\n"
