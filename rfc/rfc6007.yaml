- title: __initial_text__
  contents:
  - "           Use of the Synchronization VECtor (SVEC) List for\n              \
    \  Synchronized Dependent Path Computations\n"
- title: Abstract
  contents:
  - "Abstract\n   A Path Computation Element (PCE) may be required to perform dependent\n\
    \   path computations.  Dependent path computations are requests that\n   need\
    \ to be synchronized in order to meet specific objectives.  An\n   example of\
    \ a dependent request would be a PCE computing a set of\n   services that are\
    \ required to be diverse (disjointed) from each\n   other.  When a PCE computes\
    \ sets of dependent path computation\n   requests concurrently, use of the Synchronization\
    \ VECtor (SVEC) list\n   is required for association among the sets of dependent\
    \ path\n   computation requests.  The SVEC object is optional and carried within\n\
    \   the Path Computation Element Communication Protocol (PCEP) PCRequest\n   (PCReq)\
    \ message.\n   This document does not specify the PCEP SVEC object or procedure.\n\
    \   This informational document clarifies the use of the SVEC list for\n   synchronized\
    \ path computations when computing dependent requests.\n   The document also describes\
    \ a number of usage scenarios for SVEC\n   lists within single-domain and multi-domain\
    \ environments.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6007.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. SVEC Object ................................................4\n  \
    \    1.2. Application of SVEC Lists ..................................5\n   2.\
    \ Terminology .....................................................6\n   3. SVEC\
    \ Association Scenarios ......................................7\n      3.1. Synchronized\
    \ Computation for Diverse Path Requests .........7\n      3.2. Synchronized Computation\
    \ for Point-to-Multipoint\n           Path Requests ..............................................8\n\
    \   4. SVEC Association ................................................9\n  \
    \    4.1. SVEC List ..................................................9\n    \
    \  4.2. Associated SVECs ...........................................9\n      4.3.\
    \ Non-Associated SVECs ......................................10\n   5. Processing\
    \ of SVEC List ........................................10\n      5.1. Single-PCE,\
    \ Single-Domain Environments ....................10\n      5.2. Multi-PCE, Single-Domain\
    \ Environments .....................11\n      5.3. Multi-PCE, Multi-Domain Environments\
    \ ......................11\n   6. End-to-End Diverse Path Computation ............................13\n\
    \      6.1. Disjoint VSPT .............................................13\n  \
    \    6.2. Disjoint VSPT Encoding ....................................14\n    \
    \  6.3. Path Computation Procedure ................................15\n   7. Manageability\
    \ Considerations ...................................15\n      7.1. Control of\
    \ Function and Policy ............................15\n      7.2. Information and\
    \ Data Models (MIB Modules) .................15\n      7.3. Liveness Detection\
    \ and Monitoring .........................15\n      7.4. Verifying Correct Operation\
    \ ...............................15\n      7.5. Requirements on Other Protocols\
    \ and Functional\n           Components ................................................16\n\
    \      7.6. Impact on Network Operation ...............................16\n  \
    \ 8. Security Considerations ........................................16\n   9.\
    \ References .....................................................16\n      9.1.\
    \ Normative References ......................................16\n      9.2. Informative\
    \ References ....................................17\n   10. Acknowledgements ..............................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC5440] describes the specifications for the Path Computation\n\
    \   Element Communication Protocol (PCEP).  PCEP specifies the\n   communication\
    \ between a Path Computation Client (PCC) and a Path\n   Computation Element (PCE),\
    \ or between two PCEs based on the PCE\n   architecture [RFC4655].  PCEP interactions\
    \ include path computation\n   requests and path computation replies.\n   The\
    \ PCE may be required to compute independent and dependent path\n   requests.\
    \  Path computation requests are said to be independent if\n   they are not related\
    \ to each other and therefore not required to be\n   synchronized.  Conversely,\
    \ a set of dependent path computation\n   requests is such that their computations\
    \ cannot be performed\n   independently of each other, and the requests must be\
    \ synchronized.\n   The Synchronization VECtor (SVEC) with a list of the path\
    \ computation\n   request identifiers carried within the request message allows\
    \ the PCC\n   or PCE to specify a list of multiple path computation requests that\n\
    \   must be synchronized.  Section 1.1 (\"SVEC Object\") describes the SVEC\n\
    \   object.  Section 1.2 (\"Application of SVEC Lists\") describes the\n   application\
    \ of SVEC lists in certain scenarios.\n   This informational document clarifies\
    \ the handling of dependent and\n   synchronized path computation requests, using\
    \ the SVEC list, based on\n   the PCE architecture [RFC4655] and PCEP [RFC5440].\
    \  The document also\n   describes a number of usage scenarios for SVEC lists\
    \ within single-\n   domain and multi-domain environments.  This document is not\
    \ intended\n   to specify the procedure when using SVEC lists for dependent and\n\
    \   synchronized path computation requests.\n"
- title: 1.1.  SVEC Object
  contents:
  - "1.1.  SVEC Object\n   When a PCC or PCE sends path computation requests to a\
    \ PCE, a PCEP\n   Path Computation Request (PCReq) message may carry multiple\
    \ requests,\n   each of which has a unique path computation request identifier.\
    \  The\n   SVEC with a list of the path computation request identifiers carried\n\
    \   within the request message allows the PCC or PCE to specify a list of\n  \
    \ multiple path computation requests that must be synchronized, and\n   also allows\
    \ the specification of any dependency relationships between\n   the paths.  The\
    \ path computation requests listed in the SVEC must be\n   handled in a specific\
    \ relation to each other (i.e., synchronized).\n   [RFC5440] defines two synchronous\
    \ path computation modes for\n   dependent or independent path computation requests\
    \ specified by the\n   dependency flags (i.e., Node, Link, or Shared Risk Link\
    \ Group (SRLG)\n   diverse flags) in the SVEC:\n   o  A set of independent and\
    \ synchronized path computation requests.\n   o  A set of dependent and synchronized\
    \ path computation requests.\n   See [RFC5440] for more details on dependent,\
    \ independent, and\n   synchronous path computation.\n   These computation modes\
    \ are exclusive to each other in a single SVEC.\n   If one of the dependency flags\
    \ in a SVEC is set, it indicates that a\n   set of synchronous path computation\
    \ requests has a dependency and\n   does not allow any other path computation\
    \ requests.  In order to be\n   synchronized with other path computation requests\
    \ with a dependency,\n   it is necessary to associate them.\n   The aim of the\
    \ SVEC object carried within a PCReq message is to\n   request the synchronization\
    \ of M path computation requests.  Each\n   path computation request is uniquely\
    \ identified by the Request-ID-\n   number carried within the respective Request\
    \ Parameters (RP) object.\n   The SVEC object also contains a set of flags that\
    \ specify the\n   synchronization type.  The SVEC object is defined in Section\
    \ 7.13\n   (\"SVEC Object\") of [RFC5440].\n"
- title: 1.2.  Application of SVEC Lists
  contents:
  - "1.2.  Application of SVEC Lists\n   It is important for the PCE, when performing\
    \ path computations, to\n   synchronize any path computation requests with a dependency.\
    \  For\n   example, consider two protected end-to-end services:\n   o  It would\
    \ be beneficial for each back-up path to be disjointed so\n      they do not share\
    \ the same links and nodes as the working path.\n   o  Two diverse path computation\
    \ requests would be needed to compute\n      the working and disjointed protected\
    \ paths.\n   If the diverse path requests are computed sequentially, fulfillment\n\
    \   of the initial diverse path computation without consideration of the\n   second\
    \ diverse path computation and disjoint constraint may result in\n   the PCE either\
    \ providing sub-optimal path disjoint results for the\n   protected path or failing\
    \ to meet the end-to-end disjoint requirement\n   altogether.\n   Additionally,\
    \ SVEC can be applied to end-to-end diverse path\n   computations that traverse\
    \ multiple domains.  [RFC5441] describes two\n   approaches, synchronous (i.e.,\
    \ simultaneous) and 2-step approaches,\n   for end-to-end diverse path computation\
    \ across a chain of domains.\n   The path computation procedure is specified for\
    \ the 2-step approaches\n   in [RFC5521], but no guidelines are provided for the\
    \ synchronous\n   approach described in this document.\n   The following scenarios\
    \ are specifically described within this\n   document:\n   o  Single-domain, single-PCE,\
    \ dependent and synchronized path\n      computation request.\n   o  Single-domain,\
    \ multi-PCE, dependent and synchronized path request.\n   o  Multi-domain, dependent\
    \ and synchronized path computation request,\n      including end-to-end diverse\
    \ path computation.\n   The association among multiple SVECs for multiple sets\
    \ of\n   synchronized dependent path computations is also described in this\n\
    \   document, as well as the disjoint Virtual Shortest Path Tree (VSPT)\n   encoding\
    \ rule for end-to-end diverse path computation across domains.\n   Path computation\
    \ algorithms for these path computation scenarios are\n   out of the scope of\
    \ this document.\n   The clarifications and use cases in this document are applicable\
    \ to\n   the Global Concurrent Optimization (GCO) path computation mechanism\n\
    \   specified in [RFC5557].  The GCO application provides the capability\n   to\
    \ optimize a set of services within the network, in order to\n   maximize efficient\
    \ use of network resources.  A single objective\n   function (OF) or a set of\
    \ OFs can be applied to a GCO.  To compute a\n   set of such traffic-engineered\
    \ paths for the GCO application, PCEP\n   supports the synchronous and dependent\
    \ path computation requests\n   required in [RFC4657].\n   The SVEC association\
    \ and the disjoint VSPT described in this document\n   do not require any extension\
    \ to PCEP messages and object formats,\n   when computing a GCO for multiple or\
    \ end-to-end diverse paths.  In\n   addition, the use of multiple SVECs is not\
    \ restricted to only SRLG,\n   node, and link diversity currently defined in the\
    \ SVEC object\n   [RFC5440], but is also available for other dependent path computation\n\
    \   requests.\n   The SVEC association and disjoint VSPT are available to both\
    \ single-\n   PCE path computation and multi-PCE path computation.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses PCE terminology defined in [RFC4655],\
    \ [RFC4875],\n   and [RFC5440].\n   Associated SVECs: A group of multiple SVECs\
    \ (Synchronization\n      VECtors), defined in this document, to indicate a set\
    \ of\n      synchronized or concurrent path computations.\n   Disjoint VSPT: A\
    \ set of VSPTs, defined in this document, to indicate\n      a set of virtual\
    \ diverse path trees.\n   GCO (Global Concurrent Optimization): A concurrent path\
    \ computation\n      application, defined in [RFC5557], where a set of traffic\n\
    \      engineered (TE) paths is computed concurrently in order to\n      efficiently\
    \ utilize network resources.\n   Synchronized: Describes a set of path computation\
    \ requests that the\n      PCE associates and that the PCE does not compute independently\
    \ of\n      each other.\n   VSPT: Virtual Shortest Path Tree, defined in [RFC5441].\n"
- title: 3.  SVEC Association Scenarios
  contents:
  - "3.  SVEC Association Scenarios\n   This section clarifies several path computation\
    \ scenarios in which\n   SVEC association can be applied.  Also, any combination\
    \ of scenarios\n   described in this section could be applicable.\n"
- title: 3.1.  Synchronized Computation for Diverse Path Requests
  contents:
  - "3.1.  Synchronized Computation for Diverse Path Requests\n   A PCE may compute\
    \ two or more point-to-point diverse paths\n   concurrently, in order to increase\
    \ the probability of meeting primary\n   and secondary path diversity (or disjointness)\
    \ objectives and network\n   resource optimization objectives.\n   Two scenarios\
    \ can be considered for the SVEC association of point-to-\n   point diverse paths.\n\
    \   o  Two or more end-to-end diverse paths\n   When concurrent path computation\
    \ of two or more end-to-end diverse\n   paths is requested, SVEC association is\
    \ needed among diverse path\n   requests.  Note here that each diverse path request\
    \ consists of\n   primary, secondary, and tertiary (and beyond) path requests,\
    \ in which\n   all path requests are grouped with one SVEC association.\n   Consider\
    \ two end-to-end services that are to be kept separate by\n   using diverse paths.\
    \  The path computation requests would need to be\n   associated so that diversity\
    \ could be assured.  Consider further that\n   each of these services requires\
    \ a backup path that can protect\n   against any failure in the primary path.\
    \  These backup paths must be\n   computed using requests that are associated\
    \ with the primary paths,\n   giving rise to a set of four associated requests.\n\
    \   o  End-to-end primary path and its segmented secondary paths\n   When concurrent\
    \ path computation for segment recovery paths, as shown\n   in Figure 1, is requested,\
    \ SVEC association is needed between a\n   primary path and several segmented\
    \ secondary paths.\n                   <------------ primary ----------->\n  \
    \                  A------B------C---D------E------F\n                      \\\
    \          /     \\           /\n                        P---Q---R        X---Y---Z\n\
    \                   <--secondary1-->   <--secondary2-->\n                    \
    \ Figure 1.  Segment Recovery Paths\n   In this scenario, we assume that the primary\
    \ path may be pre-computed\n   and used for specifying the segment for secondary\
    \ paths.  Otherwise,\n   the segment for secondary path requests is specified\
    \ in advance, by\n   using Exclude Route Object (XRO) and/or Include Route Object\
    \ (IRO)\n   constraints in the primary request.\n"
- title: 3.2.  Synchronized Computation for Point-to-Multipoint Path Requests
  contents:
  - "3.2.  Synchronized Computation for Point-to-Multipoint Path Requests\n   For\
    \ point-to-multipoint path requests, SVEC association can be\n   applied.\n  \
    \ o  Two or more point-to-multipoint paths\n      If a point-to-multipoint path\
    \ computation request is represented\n      as a set of point-to-point paths [RFC6006],\
    \ two or more point-to-\n      multipoint path computation requests can be associated\
    \ for\n      concurrent path computation, in order to optimize network\n     \
    \ resources.\n   o  Point-to-multipoint paths and their secondary paths\n    \
    \  When concurrent path computation of a point-to-multipoint path and\n      its\
    \ point-to-point secondary paths [RFC4875], or a point-to-\n      multipoint path\
    \ and its point-to-multipoint secondary paths is\n      requested, SVEC association\
    \ is needed among these requests.  In\n      this scenario, we use the same assumption\
    \ as the \"end-to-end\n      primary path and its segmented secondary paths\"\
    \ scenario in\n      Section 3.1.\n"
- title: 4.  SVEC Association
  contents:
  - "4.  SVEC Association\n   This section describes the associations among SVECs\
    \ in a SVEC list.\n"
- title: 4.1.  SVEC List
  contents:
  - "4.1.  SVEC List\n   PCEP provides the capability to carry one or more SVEC objects\
    \ in a\n   PCReq message, and this set of SVEC objects within the PCReq message\n\
    \   is termed a SVEC list.  Each SVEC object in the SVEC list contains a\n   distinct\
    \ group of path computation requests.  When requesting\n   association among such\
    \ distinct groups, associated SVECs described in\n   this document are used.\n"
- title: 4.2.  Associated SVECs
  contents:
  - "4.2.  Associated SVECs\n   \"Associated SVECs\" means that there are relationships\
    \ among multiple\n   SVECs in a SVEC list.  Note that there is no automatic association\
    \ in\n   [RFC5440] between the members of one SVEC and the members of another\n\
    \   SVEC in the same SVEC list.  The associated SVEC is introduced to\n   associate\
    \ these SVECs, especially for correlating among SVECs with\n   dependency flags.\n\
    \   Request identifiers in the SVEC objects are used to indicate the\n   association\
    \ among SVEC objects.  If the same request-IDs exist in\n   SVEC objects, this\
    \ indicates these SVEC objects are associated.  When\n   associating among SVEC\
    \ objects, at least one request identifier must\n   be shared between associated\
    \ SVECs.  The SVEC objects can be\n   associated regardless of the dependency\
    \ flags in each SVEC object,\n   but it is recommended to use a single SVEC if\
    \ the dependency flags\n   are not set in all SVEC objects.  Similarly, when associating\
    \ among\n   SVEC objects with dependency flags, it is recommended to construct\n\
    \   them using a minimum set of associated SVECs, thus avoiding complex\n   relational\
    \ associations.\n   Below is an example of associated SVECs.  In this example,\
    \ the first\n   SVEC is associated with the other SVECs, and all of the path\n\
    \   computation requests contained in the associated SVECs (i.e.,\n   Request-IDs\
    \ #1, #2, #3, #4, #X, #Y, and #Z) must be synchronized.\n      <SVEC-list>\n \
    \         <SVEC> without dependency flags\n           Request-ID #1, Request-ID\
    \ #3, Request-ID #X\n          <SVEC> with one or more dependency flags\n    \
    \       Request-ID #1, Request-ID #2\n          <SVEC> with one or more dependency\
    \ flags\n           Request-ID #3, Request-ID #4\n          <SVEC> without dependency\
    \ flag\n           Request-ID #X, Request-ID #Y, Request-ID #Z\n"
- title: 4.3.  Non-Associated SVECs
  contents:
  - "4.3.  Non-Associated SVECs\n   \"Non-associated SVECs\" means that there are\
    \ no relationships among\n   SVECs.  If none of the SVEC objects in the SVEC list\
    \ on a PCReq\n   message contains a common request-ID, there is no association\
    \ between\n   the SVECs and so no association between the requests in one SVEC\
    \ and\n   the requests in another SVEC.\n   Below is an example of non-associated\
    \ SVECs that do not contain any\n   common request-IDs.\n      <SVEC-list>\n \
    \         <SVEC> with one or more dependency flags\n           Request-ID #1,\
    \ Request-ID #2\n          <SVEC> with one or more dependency flags\n        \
    \   Request-ID #3, Request-ID #4\n          <SVEC> without dependency flags\n\
    \           Request-ID #X, Request-ID #Y, Request-ID #Z\n"
- title: 5.  Processing of SVEC List
  contents:
  - '5.  Processing of SVEC List

    '
- title: 5.1.  Single-PCE, Single-Domain Environments
  contents:
  - "5.1.  Single-PCE, Single-Domain Environments\n   In this environment, there is\
    \ a single PCE within the domain.\n   When a PCE receives PCReq messages with\
    \ more than one SVEC object in\n   the SVEC list, PCEP has to first check the\
    \ request-IDs in all SVEC\n   objects in order to identify any associations among\
    \ them.\n   If there are no matching request-IDs in the different SVEC objects,\n\
    \   these SVEC objects are not associated, and then each set of path\n   computation\
    \ requests in the non-associated SVEC objects has to be\n   computed separately.\n\
    \   If there are matching request-IDs in the different SVEC objects,\n   these\
    \ SVEC objects are associated, and then all path computation\n   requests in the\
    \ associated SVEC objects are treated in a synchronous\n   manner for GCO application.\n\
    \   If a PCE that is unable to handle the associated SVEC finds the\n   common\
    \ request-IDs in multiple SVEC objects, the PCE should cancel\n   the path computation\
    \ request and respond to the PCC with the PCErr\n   message Error-Type=\"Capability\
    \ not supported\".\n   In the case that M path computation requests are sent across\
    \ multiple\n   PCReq messages, the PCE may start a SyncTimer as recommended in\n\
    \   Section 7.13.3 (\"Handling of the SVEC Object\") of [RFC5440].  In this\n\
    \   case, the associated SVECs should also be handled as described in\n   [RFC5440],\
    \ i.e., after receiving the entire set of M path computation\n   requests associated\
    \ by SVECs, the computation should start at one.\n   If the SyncTimer has expired\
    \ or the subsequent PCReq messages are\n   malformed, the PCE should cancel the\
    \ path computation request and\n   respond to the PCC with the relevant PCErr\
    \ message.\n"
- title: 5.2.  Multi-PCE, Single-Domain Environments
  contents:
  - "5.2.  Multi-PCE, Single-Domain Environments\n   There are multiple PCEs in a\
    \ domain, to which PCCs can communicate\n   directly, and PCCs can choose an appropriate\
    \ PCE for load-balanced\n   path computation requests.  In this environment, it\
    \ is possible that\n   dependent path computation requests are sent to different\
    \ PCEs.\n   However, if a PCC sends path computation requests to a PCE, and then\n\
    \   sends a further path computation request to a different PCE using the\n  \
    \ SVEC list to show that the further request is dependent on the first\n   requests,\
    \ there is no method for the PCE to correlate the dependent\n   requests sent\
    \ to different PCEs.  No SVEC object correlation function\n   between the PCEs\
    \ is specified in [RFC5440].  No mechanism exists to\n   resolve this problem,\
    \ and the issue is open for future study.\n   Therefore, a PCC must not send dependent\
    \ path computation requests\n   associated by SVECs to different PCEs.\n"
- title: 5.3.  Multi-PCE, Multi-Domain Environments
  contents:
  - "5.3.  Multi-PCE, Multi-Domain Environments\n   In this environment, there are\
    \ multiple domains in which PCEs are\n   located in each domain, and end-to-end\
    \ dependent paths (i.e., diverse\n   paths) are computed using multiple PCEs.\
    \  Note that we assume a chain\n   of PCEs is predetermined and the Backward-Recursive\
    \ PCE-Based\n   Computation (BRPC) procedure [RFC5441] is in use.\n   The SVECs\
    \ can be applied to end-to-end diverse path computations that\n   traverse multiple\
    \ domains.  [RFC5441] describes two approaches,\n   synchronous (i.e., simultaneous)\
    \ and 2-step approaches, for\n   end-to-end diverse path computation across a\
    \ chain of domains.  In\n   the 2-step approaches described in [RFC5521], it is\
    \ not necessary to\n   use the associated SVECs if any of the dependency flags\
    \ in a SVEC\n   object are not set.  On the other hand, the simultaneous approach\
    \ may\n   require the associated SVEC because at least one of the dependency\n\
    \   flags is required to be set in a SVEC object.  Thus, a use case of\n   the\
    \ simultaneous approach is described in this environment.\n   When a chain of\
    \ PCEs located in separate domains is used for\n   simultaneous path computations,\
    \ additional path computation\n   processing is required, as described in Section\
    \ 6 of this document.\n   If the PCReq message contains multiple associated SVEC\
    \ objects and\n   these SVEC objects contain path computation requests that will\
    \ be\n   sent to the next PCE along the path computation chain, the following\n\
    \   procedures are applied.\n   When a chain of PCEs is a unique sequence for\
    \ all of the path\n   computation requests in a PCReq message, it is not necessary\
    \ to\n   reconstruct associations among SVEC objects.  Thus, the PCReq message\n\
    \   is passed to the tail-end PCE.  When a PCReq message contains more\n   than\
    \ one SVEC object with the dependency flag set, the contained\n   SVECs may then\
    \ be associated.  PCEs receiving the associated SVECs\n   must maintain their\
    \ association and must consider their relationship\n   when performing path computations\
    \ after receiving a corresponding\n   PCReply (PCRep) message.\n   When a chain\
    \ of PCEs is different, it is required that intermediate\n   PCEs receiving such\
    \ PCReq messages may reconstruct associations among\n   SVEC objects, and then\
    \ send PCReq messages to corresponding PCEs\n   located in neighboring domains.\
    \  If the associated SVECs are\n   reconstructed at the intermediate PCE, the\
    \ PCE must not start its\n   path computation until all PCRep messages have been\
    \ received from all\n   neighbor PCEs.  However, a complex PCE implementation\
    \ is required for\n   SVEC reconstruction, and waiting mechanisms must be implemented.\n\
    \   Therefore, it is not recommended to associate path computation\n   requests\
    \ with different PCE chains.  This is an open issue and is\n   currently being\
    \ discussed in [H-PCE], which proposes a hierarchical\n   PCE architecture.\n"
- title: 6.  End-to-End Diverse Path Computation
  contents:
  - "6.  End-to-End Diverse Path Computation\n   In this section, the synchronous\
    \ approach is provided to compute\n   primary and secondary paths simultaneously.\n"
- title: 6.1.  Disjoint VSPT
  contents:
  - "6.1.  Disjoint VSPT\n   The BRPC procedure constructs a VSPT to inform the enquiring\
    \ PCE of\n   potential paths to the destination node.\n   In the end-to-end diverse\
    \ path computation, diversity (or\n   disjointness) information among the potential\
    \ paths must be preserved\n   in the VSPT to ensure an end-to-end disjoint path.\
    \  In order to\n   preserve diversity (or disjointness) information, disjoint\
    \ VSPTs are\n   sent in the PCEP PCRep message.  The PCReq containing a SVEC object\n\
    \   with the appropriate diverse flag set would signal that the PCE\n   should\
    \ compute a disjoint VSPT.\n   A definition of the disjoint VSPT is a collection\
    \ of VSPTs, in which\n   each VSPT contains a potential set of primary and secondary\
    \ paths.\n   Figure 2 shows an example network.  Here, transit nodes in domains\n\
    \   are not depicted, and PCE1 and PCE2 may be located in border nodes.\n   In\
    \ this network, there are three VSPTs for the potential set of\n   diverse paths,\
    \ shown in Figure 3, when the primary path and secondary\n   path are requested\
    \ from S1 to D1.  These VSPTs consist of a disjoint\n   VSPT, which is indicated\
    \ in a PCRep to PCE1.  When receiving the\n   disjoint VSPT, PCE1 recognizes the\
    \ disjoint request and disjoint VSPT\n   information.  PCE1 will then continue\
    \ to process the request and\n   compute the diverse path using the BRPC procedure\
    \ [RFC5441].\n   Encoding for the disjoint VSPT is described in Section 6.2.\n\
    \              Domain1          Domain2\n           +----------+     +----------+\n\
    \           |   PCE1   |     |   PCE2   |    S1: Source node\n           |   \
    \      BN1---BN4         |    D1: Destination node\n           | S1      BN2---BN5\
    \      D1 |    BN1-BN6: Border nodes\n           |         BN3---BN6         |\n\
    \           +----------+     +----------+\n          Figure 2.  Example Network\
    \ for Diverse Path Computation\n               VSPT1:            VSPT2:      \
    \        VSPT3:\n                 D1                D1                  D1\n \
    \               / \\               / \\                 / \\\n             BN4\
    \   BN5         BN4   BN6           BN5   BN6\n                Figure 3.  Disjoint\
    \ VSPTs from PCE2 to PCE1\n"
- title: 6.2.  Disjoint VSPT Encoding
  contents:
  - "6.2.  Disjoint VSPT Encoding\n   Encoding for the disjoint VSPT follows the definition\
    \ of PCEP message\n   encoding in [RFC5440].\n   The PCEP PCRep message returns\
    \ a disjoint VSPT as <path list> for\n   each RP object (Request Parameter object).\
    \  The order of <path> in\n   <path list> among <responses> implies a set of primary\
    \ Explicit Route\n   Objects (EROs) and secondary EROs.\n   A PCE sending a PCRep\
    \ with a disjoint VSPT can reply with a partial\n   disjoint VSPT based on its\
    \ network operation policy, but the order of\n   <path> in <path list> must be\
    \ aligned correctly.\n   If confidentiality is required between domains, the path\
    \ key\n   mechanism defined in [RFC5520] is used for a disjoint VSPT.\n   Below\
    \ are the details of the disjoint VSPT encoding (in Figure 3),\n   when a primary\
    \ path and a secondary path are requested from S1 to D1.\n      o  Request ID\
    \ #1 (Primary)\n         - ERO1 BN4(TE route ID)- ...-D1(TE-Router ID)  [for VSPT1]\n\
    \         - ERO2 BN4(TE route ID)- ...-D1(TE-Router ID)  [for VSPT2]\n       \
    \  - ERO3 BN5(TE route ID)- ...-D1(TE-Router ID)  [for VSPT3]\n      o  Request\
    \ ID #2 (Secondary)\n         - ERO4 BN5(TE route ID)- ...-D1(TE-Router ID)  [for\
    \ VSPT1]\n         - ERO5 BN6(TE route ID)- ...-D1(TE-Router ID)  [for VSPT2]\n\
    \         - ERO6 BN6(TE route ID)- ...-D1(TE-Router ID)  [for VSPT3]\n"
- title: 6.3.  Path Computation Procedure
  contents:
  - "6.3.  Path Computation Procedure\n   For end-to-end diverse path computation,\
    \ the same mode of operation\n   as that of the BRPC procedure can be applied\
    \ (i.e., Step 1 to Step n\n   in Section 4.2 of [RFC5441]).  A question that must\
    \ be considered is\n   how to recognize disjoint VSPTs.\n   The recognition of\
    \ disjoint VSPTs is achieved by the PCE sending a\n   PCReq to its neighbor PCE,\
    \ which maintains the path computation\n   request (PCReq) information.  If the\
    \ PCReq has one or more SVEC\n   object(s) with the appropriate dependency flags,\
    \ the received PCRep\n   will contain the disjoint VSPT.  If not, the received\
    \ VSPT is a\n   normal VSPT based on the shortest path computation.\n   Note that\
    \ the PCE will apply a suitable algorithm for computing\n   requests with disjoint\
    \ VSPTs.  The selection and application of the\n   appropriate algorithm is out\
    \ of scope in this document.\n"
- title: 7.  Manageability Considerations
  contents:
  - "7.  Manageability Considerations\n   This section describes manageability considerations\
    \ specified in\n   [PCE-MNG-REQS].\n"
- title: 7.1.  Control of Function and Policy
  contents:
  - "7.1.  Control of Function and Policy\n   In addition to [RFC5440], PCEP implementations\
    \ should allow the PCC\n   to be responsible for mapping the requested paths to\
    \ computation\n   requests.  The PCC should construct the SVECs to identify and\n\
    \   associate SVEC relationships.\n"
- title: 7.2.  Information and Data Models (MIB Modules)
  contents:
  - "7.2.  Information and Data Models (MIB Modules)\n   There are currently no additional\
    \ parameters for MIB modules.  There\n   would be value in a MIB module that details\
    \ the SVEC association.\n   This work is currently out of scope of this document.\n"
- title: 7.3.  Liveness Detection and Monitoring
  contents:
  - "7.3.  Liveness Detection and Monitoring\n   The associated SVEC in this document\
    \ allows PCEs to compute optimal\n   sets of diverse paths.  This type of path\
    \ computation may require\n   more time to obtain its results.  Therefore, it\
    \ is recommended for\n   PCEP to support the PCE monitoring mechanism specified\
    \ in [RFC5886].\n"
- title: 7.4.  Verifying Correct Operation
  contents:
  - "7.4.  Verifying Correct Operation\n   [RFC5440] provides a sufficient description\
    \ for this document.  There\n   are no additional considerations.\n"
- title: 7.5.  Requirements on Other Protocols and Functional Components
  contents:
  - "7.5.  Requirements on Other Protocols and Functional Components\n   This document\
    \ does not require any other protocol and functional\n   components.\n"
- title: 7.6.  Impact on Network Operation
  contents:
  - "7.6.  Impact on Network Operation\n   [RFC5440] provides descriptions for the\
    \ mechanisms discussed in this\n   document.  There is value in considering that\
    \ large associated SVECs\n   will require greater PCE resources, compared to non-associated\
    \ SVECs.\n   Additionally, the sending of large associated SVECs within multiple\n\
    \   PCReq messages will require more network resources.  Solving these\n   specific\
    \ issues is out of scope of this document.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document describes the usage of the SVEC\
    \ list, and does not have\n   any extensions for PCEP.  The security of the procedures\
    \ described in\n   this document depends on PCEP [RFC5440].  However, a PCE that\n\
    \   supports associated SVECs may be open to Denial-of-Service (DoS)\n   attacks\
    \ from a rogue PCC.  A PCE may be made to queue large numbers\n   of requests\
    \ waiting for other requests that will never arrive.\n   Additionally, a PCE might\
    \ be made to compute exceedingly complex\n   associated SVEC computations.  These\
    \ DoS attacks may be mitigated\n   with the use of practical SVEC list limits,\
    \ as well as:\n   o  Applying provisioning to PCEs, e.g., for a given number of\n\
    \      simultaneous services (recommended).\n   o  Using a priority-based multi-queuing\
    \ mechanism in which path\n      computation requests with a smaller SVEC list\
    \ are prioritized for\n      path computation processing.\n   o  Specifying which\
    \ PCCs may request large SVEC associations through\n      PCE access policy control.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC4655]      Farrel, A., Vasseur, J.-P., and\
    \ J. Ash, \"A Path\n                  Computation Element (PCE)-Based Architecture\"\
    ,\n                  RFC 4655, August 2006.\n   [RFC4657]      Ash, J., Ed., and\
    \ J. Le Roux, Ed., \"Path Computation\n                  Element (PCE) Communication\
    \ Protocol Generic\n                  Requirements\", RFC 4657, September 2006.\n\
    \   [RFC4875]      Aggarwal, R., Ed., Papadimitriou, D., Ed., and S.\n       \
    \           Yasukawa, Ed., \"Extensions to Resource Reservation\n            \
    \      Protocol - Traffic Engineering (RSVP-TE) for Point-to-\n              \
    \    Multipoint TE Label Switched Paths (LSPs)\", RFC 4875,\n                \
    \  May 2007.\n   [RFC5440]      Vasseur, JP., Ed., and JL. Le Roux, Ed., \"Path\n\
    \                  Computation Element (PCE) Communication Protocol\n        \
    \          (PCEP)\", RFC 5440, March 2009.\n   [RFC5441]      Vasseur, JP., Ed.,\
    \ Zhang, R., Bitar, N., and JL. Le\n                  Roux, \"A Backward-Recursive\
    \ PCE-Based Computation\n                  (BRPC) Procedure to Compute Shortest\
    \ Constrained\n                  Inter-Domain Traffic Engineering Label Switched\n\
    \                  Paths\", RFC 5441, April 2009.\n   [RFC5520]      Bradford,\
    \ R., Ed., Vasseur, JP., and A. Farrel,\n                  \"Preserving Topology\
    \ Confidentiality in Inter-Domain\n                  Path Computation Using a\
    \ Path-Key-Based Mechanism\",\n                  RFC 5520, April 2009.\n   [RFC5521]\
    \      Oki, E., Takeda, T., and A. Farrel, \"Extensions to the\n             \
    \     Path Computation Element Communication Protocol (PCEP)\n               \
    \   for Route Exclusions\", RFC 5521, April 2009.\n   [RFC5557]      Lee, Y.,\
    \ Le Roux, JL., King, D., and E. Oki, \"Path\n                  Computation Element\
    \ Communication Protocol (PCEP)\n                  Requirements and Protocol Extensions\
    \ in Support of\n                  Global Concurrent Optimization\", RFC 5557,\
    \ July 2009.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [H-PCE]        King, D., Ed., and A. Farrel,\
    \ Ed., \"The Application of\n                  the Path Computation Element Architecture\
    \ to the\n                  Determination of a Sequence of Domains in MPLS &\n\
    \                  GMPLS\", Work in Progress, December 2009.\n   [PCE-MNG-REQS]\
    \ Farrel, A., \"Inclusion of Manageability Sections in\n                  PCE\
    \ Working Group Drafts\", Work in Progress, July\n                  2009.\n  \
    \ [RFC5886]      Vasseur, JP., Ed., Le Roux, JL., and Y. Ikejiri, \"A\n      \
    \            Set of Monitoring Tools for Path Computation Element\n          \
    \        (PCE)-Based Architecture\", RFC 5886, June 2010.\n   [RFC6006]      Zhao,\
    \ Q., Ed., King, D., Ed., Verhaeghe, F., Takeda,\n                  T., Ali, Z.,\
    \ and J. Meuric, \"Extensions to the Path\n                  Computation Element\
    \ Communication Protocol (PCEP) for\n                  Point-to-Multipoint Traffic\
    \ Engineering Label Switched\n                  Paths\", RFC 6006, September 2010.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The authors would like to thank Adrian Farrel, Julien\
    \ Meuric, and\n   Filippo Cugini for their valuable comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Itaru Nishioka\n   NEC Corp.\n   1753 Shimonumabe,\n \
    \  Kawasaki, 211-8666,\n   Japan\n   Phone: +81 44 396 3287\n   EMail: i-nishioka@cb.jp.nec.com\n\
    \   Daniel King\n   Old Dog Consulting\n   United Kingdom\n   Phone: +44 7790\
    \ 775187\n   EMail: daniel@olddog.co.uk\n"
