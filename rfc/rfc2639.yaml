- title: __initial_text__
  contents:
  - '          Internet Printing Protocol/1.0: Implementer''s Guide

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents, which together describe\n\
    \   all aspects of a new Internet Printing Protocol (IPP).  IPP is an\n   application\
    \ level protocol that can be used for distributed printing\n   using Internet\
    \ tools and technologies.  This document contains\n   information that supplements\
    \ the IPP Model and Semantics [RFC2566]\n   and the IPP Transport and Encoding\
    \ [RFC2565] documents.  It is\n   intended to help implementers understand IPP/1.0\
    \ and some of the\n   considerations that may assist them in the design of their\
    \ client\n   and/or IPP object implementations.  For example, a typical order\
    \ of\n   processing requests is given, including error checking.  Motivation\n\
    \   for some of the specification decisions is also included.\n   The full set\
    \ of IPP documents includes:\n     Design Goals for an Internet Printing Protocol\
    \ [RFC2567]\n     Rationale for the Structure and Model and Protocol for the Internet\n\
    \        Printing Protocol [RFC2568]\n     Internet Printing Protocol/1.0: Model\
    \ and Semantics [RFC2566]\n     Internet Printing Protocol/1.0: Encoding and Transport\
    \ [RFC2565]\n     Mapping between LPD and IPP Protocols [RFC2569]\n   The document,\
    \ \"Design Goals for an Internet Printing Protocol\", takes\n   a broad look at\
    \ distributed printing functionality, and it enumerates\n   real-life scenarios\
    \ that help to clarify the features that need to be\n   included in a printing\
    \ protocol for the Internet.  It identifies\n   requirements for three types of\
    \ users: end users, operators, and\n   administrators.  The design goals document\
    \ calls out a subset of end\n   user requirements that are satisfied in IPP/1.0.\
    \  Operator and\n   administrator requirements are out of scope for version 1.0.\n\
    \   The document, \"Rationale for the Structure and Model and Protocol for\n \
    \  the Internet Printing Protocol\", describes IPP from a high level\n   view,\
    \ defines a roadmap for the various documents that form the suite\n   of IPP specifications,\
    \ and gives background and rationale for the\n   IETF working group's major decisions.\n\
    \   The document, \"Internet Printing Protocol/1.0: Model and Semantics\",\n \
    \  describes a simplified model with abstract objects, their attributes,\n   and\
    \ their operations.  The model introduces a Printer and a Job.  The\n   Job supports\
    \ multiple documents per Job.  The model document also\n   addresses how security,\
    \ internationalization, and directory issues\n   are addressed.\n   The document,\
    \ \"Internet Printing Protocol/1.0: Encoding and\n   Transport\", is a formal\
    \ mapping of the abstract operations and\n   attributes defined in the model document\
    \ onto HTTP/1.1.  It also\n   defines the encoding rules for a new Internet media\
    \ type called\n   \"application/ipp\".\n   The document, \"Mapping between LPD\
    \ and IPP Protocols\", gives some\n   advice to implementers of gateways between\
    \ IPP and LPD (Line Printer\n   Daemon) implementations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n  1  Introduction......................................................4\n\
    \   1.1 Conformance language............................................4\n  \
    \ 1.2 Other terminology...............................................5\n  2 \
    \ Model and Semantics...............................................5\n   2.1\
    \ Summary of Operation Attributes.................................5\n   2.2 Suggested\
    \ Operation Processing Steps for IPP Objects ..........10\n       2.2.1 Suggested\
    \ Operation Processing Steps for all Operations..11\n       2.2.1.1  Validate\
    \ version number...............................11\n       2.2.1.2  Validate operation\
    \ identifier.........................11\n       2.2.1.3  Validate the request\
    \ identifier.......................11\n       2.2.1.4  Validate attribute group\
    \ and attribute presence and\n                order.................................................12\n\
    \       2.2.1.5  Validate the values of the REQUIRED Operation\n             \
    \   attributes............................................19\n       2.2.1.6 \
    \ Validate the values of the OPTIONAL Operation\n                attributes............................................23\n\
    \     2.2.2 Suggested Additional Processing Steps for Operations that\n      \
    \     Create/Validate Jobs and Add Documents.....................26\n       2.2.2.1\
    \  Default \"ipp-attribute-fidelity\" if not supplied......26\n       2.2.2.2\
    \  Check that the Printer object is accepting jobs.......26\n       2.2.2.3  Validate\
    \ the values of the Job Template attributes....26\n     2.2.3 Algorithm for job\
    \ validation...............................27\n       2.2.3.1  Check for conflicting\
    \ Job Template attributes values..33\n       2.2.3.2  Decide whether to REJECT\
    \ the request..................33\n       2.2.3.3  For the Validate-Job operation,\
    \ RETURN one of the\n                success status codes..................................34\n\
    \       2.2.3.4  Create the Job object with attributes to support......34\n  \
    \     2.2.3.5  Return one of the success status codes................36\n    \
    \   2.2.3.6  Accept appended Document Content......................36\n      \
    \ 2.2.3.7  Scheduling and Starting to Process the Job............36\n       2.2.3.8\
    \  Completing the Job....................................37\n       2.2.3.9  Destroying\
    \ the Job after completion...................37\n       2.2.3.10 Interaction with\
    \ \"ipp-attribute-fidelity\".............37\n   2.3 Status codes returned by operation\
    \ ............................37\n     2.3.1 Printer Operations.........................................38\n\
    \       2.3.1.1  Print-Job.............................................38\n  \
    \     2.3.1.2  Print-URI.............................................40\n    \
    \   2.3.1.3  Validate-Job..........................................40\n      \
    \ 2.3.1.4  Create-Job............................................41\n       2.3.1.5\
    \  Get-Printer-Attributes................................41\n       2.3.1.6  Get-Jobs..............................................42\n\
    \     2.3.2 Job Operations.............................................43\n  \
    \     2.3.2.1  Send-Document.........................................43\n    \
    \   2.3.2.2  Send-URI..............................................44\n      \
    \ 2.3.2.3  Cancel-Job............................................44\n       2.3.2.4\
    \  Get-Job-Attributes....................................45\n   2.4 Validate-Job...................................................46\n\
    \   2.5 Case Sensitivity in URIs ......................................46\n  \
    \ 2.6 Character Sets, natural languages, and internationalization....46\n    \
    \ 2.6.1 Character set code conversion support .....................46\n     2.6.2\
    \ What charset to return when an unsupported charset is\n           requested?.................................................48\n\
    \     2.6.3 Natural Language Override (NLO) ...........................48\n  \
    \ 2.7 The \"queued-job-count\" Printer Description attribute...........50\n  \
    \   2.7.1 Why is \"queued-job-count\" RECOMMENDED?.....................50\n  \
    \   2.7.2 Is \"queued-job-count\" a good measure of how busy a printer\n     \
    \      is?........................................................50\n   2.8 Sending\
    \ empty attribute groups ................................50\n   2.9 Returning\
    \ unsupported attributes in Get-Xxxx responses ........51\n   2.10 Returning job-state\
    \ in Print-Job response ....................51\n   2.11 Flow controlling the data\
    \ portion of a Print-Job request .....52\n   2.12 Multi-valued attributes ......................................53\n\
    \   2.13 Querying jobs with IPP that were submitted using other job\n        submission\
    \ protocols .........................................53\n   2.14 The 'none' value\
    \ for empty sets ..............................54\n   2.15 Get-Jobs, my-jobs='true',\
    \ and 'requesting-user-name'?.........54\n   2.16 The \"multiple-document-handling\"\
    \ Job Template attribute and\n        support of multiple document jobs.............................54\n\
    \  3  Encoding and Transport...........................................55\n  \
    \ 3.1 General Headers................................................56\n   3.2\
    \ Request  Headers...............................................57\n   3.3 Response\
    \ Headers...............................................58\n   3.4 Entity  Headers................................................59\n\
    \   3.5 Optional support for HTTP/1.0..................................60\n  \
    \ 3.6 HTTP/1.1 Chunking..............................................60\n    \
    \ 3.6.1 Disabling IPP Server Response Chunking.....................60\n     3.6.2\
    \ Warning About the Support of Chunked Requests..............60\n  4  References.......................................................61\n\
    \   4.1 Authors' Addresses.............................................62\n  5\
    \  Security Considerations..........................................62\n  6  Notices..........................................................62\n\
    \  Full Copyright Statement............................................65\n"
- title: 1  Introduction
  contents:
  - "1  Introduction\n  This document contains information that supplements the IPP\
    \ Model and\n  Semantics [RFC2566] and the IPP Transport and Encoding [RFC2565]\n\
    \  documents.  As such this information is not part of the formal\n  specifications.\
    \  Instead information is presented to help implementers\n  understand the specification,\
    \ including some of the motivation for\n  decisions taken by the committee in\
    \ developing the specification.\n  Some of the implementation considerations are\
    \ intended to help\n  implementers design their client and/or IPP object implementations.\n\
    \  If there are any contradictions between this document and [RFC2566] or\n  [RFC2565],\
    \ those documents take precedence over this document.\n"
- title: 1.1 Conformance language
  contents:
  - "1.1 Conformance language\n  Usually, this document does not contain the terminology\
    \ MUST, MUST\n  NOT, MAY, NEED NOT, SHOULD, SHOULD NOT, REQUIRED, and OPTIONAL.\n\
    \  However, when those terms do appear in this document, their intent is\n  to\
    \ repeat what the [RFC2566] and [RFC2565] documents require and\n  allow, rather\
    \ than specifying additional conformance requirements.\n  These terms are defined\
    \ in section 13 on conformance terminology in\n  [RFC2566], most of which is taken\
    \ from RFC 2119 [RFC2119].\n  Implementers should read section 13 in [RFC2566]\
    \ in order to\n  understand these capitalized words.  The words MUST, MUST NOT,\
    \ and\n  REQUIRED indicate what implementations are required to support in a\n\
    \  client or IPP object in order to be conformant to [RFC2566] and\n  [RFC2565].\
    \  MAY, NEED NOT, and OPTIONAL indicate was is merely allowed\n  as an implementer\
    \ option.  The verbs SHOULD and SHOULD NOT indicate\n  suggested behavior, but\
    \ which is not required or disallowed,\n  respectively, in order to conform to\
    \ the specification.\n"
- title: 1.2 Other terminology
  contents:
  - "1.2 Other terminology\n  The term \"sender\" refers to the client that sends\
    \ a request or an IPP\n  object that returns a response.  The term \"receiver\"\
    \ refers to the IPP\n  object that receives a request and to a client that receives\
    \ a\n  response.\n"
- title: 2  Model and Semantics
  contents:
  - "2  Model and Semantics\n  This section discusses various aspects of IPP/1.0 Model\
    \ and Semantics\n  [RFC2566].\n"
- title: 2.1 Summary of Operation Attributes
  contents:
  - "2.1 Summary of Operation Attributes\n  Legend for the following table:\n    \
    \  R indicates a REQUIRED operation or attribute for an\n        implementation\
    \ to support\n      O indicates an OPTIONAL operation or attribute for an\n  \
    \      implementation to support\n    Table 1.  Summary of operation attributes\
    \ for Printer operations\n                           Printer Operations\n    \
    \                     Requests                         Responses\n     Operation\
    \           Print-   Pri  Crea Get-     Get- All\n     Attributes          Job,\
    \     nt-  te-  Printer- Jobs Opera-\n                         Validate URI  Job\
    \  Attribut      tions\n                         -Job     (O)  (O)  es\n     Operation\
    \ parameters--REQUIRED to be supplied by the sender\n     operation-id       \
    \    R      R    R      R      R\n     status-code                           \
    \                 R\n     request-id             R      R    R      R      R \
    \    R\n     version-number         R      R    R      R      R     R\n     Operation\
    \ attributes-REQUIRED to be supplied by the sender\n     attributes-charset  \
    \   R      R    R      R      R     R\n     attributes-            R      R  \
    \  R      R      R     R\n     natural-language\n     document-uri           \
    \        R\n     job-id*\n     job-uri*\n     last-document\n     printer-uri\
    \            R      R    R      R      R\n     Operation attributes-RECOMMENDED\
    \ to be supplied by the sender\n     job-name               R      R    R\n  \
    \   requesting-user-       R      R    R      R      R\n     name\n          \
    \                 Printer Operations\n                         Requests      \
    \                  Responses\n      Operation          Print-   Pri  Crea Get-\
    \    Get-  All\n      Attributes         Job,     nt-  te-  Printer Jobs  Opera-\n\
    \                         Vali-    URI  Job  Attri-        tions\n           \
    \              date-Job (O)  (O)  butes\n      Operation attributes-OPTIONAL to\
    \ be supplied by the sender\n      status-message                            \
    \             O\n      compression           O     O\n      document-format  \
    \     R     R           O\n      document-name         O     O\n      document-natural-\
    \     O     O\n      language\n      ipp-attribute-        R     R    R\n    \
    \  fidelity\n      job-impressions       O     O    O\n      job-k-octets    \
    \      O     O    O\n      job-media-sheets      O     O    O\n      limit   \
    \                                        R\n      message\n      my-jobs     \
    \                                    R\n      requested-                     \
    \          R      R\n      attributes\n      which-jobs                      \
    \                R\n      *  \"job-id\" is REQUIRED only if used together with\n\
    \      \"printer-uri\" to identify the target job; otherwise, \"job-\n      uri\"\
    \ is REQUIRED.\n      Table 2.  Summary of operation attributes for Job operations\n\
    \                         Requests                         Responses\n      Operation\
    \          Send-    Send-  Cancel  Get-     All\n      Attributes         Document\
    \ URI    -Job    Job-     Opera-\n                         (O)      (O)      \
    \      Attri-   tions\n                                                 butes\n\
    \      Operation parameters--REQUIRED to be supplied by the sender\n      operation-id\
    \          R       R      R       R\n      status-code                       \
    \                   R\n      request-id            R       R      R       R  \
    \     R\n      version-number        R       R      R       R       R\n      Operation\
    \ attributes-REQUIRED to be supplied by the sender\n      attributes-        \
    \   R       R      R       R       R\n      charset\n      attributes-       \
    \    R       R      R       R       R\n      natural-language\n      document-uri\
    \                   R\n      job-id*               R       R      R       R\n\
    \      job-uri*              R       R      R       R\n      last-document   \
    \      R       R\n      printer-uri           R       R      R       R\n     \
    \ Operation attributes-RECOMMENDED to be supplied by the\n      sender\n     \
    \ job-name\n      requesting-user-      R       R      R       R\n      name\n\
    \                             Job Operations\n                           Requests\
    \                      Responses\n     Operation Attributes  Send-    Send-  \
    \ Cance Get-    All\n                           Document URI     l-Job Job-  \
    \  Opera-\n                           (O)      (O)           Attri-  tions\n \
    \                                                 butes\n     Operation attributes.OPTIONAL\
    \ to be supplied by the sender\n     status-message                          \
    \             O\n     compression               O       O\n     document-format\
    \           R       R\n     document-name             O       O\n     document-natural-\
    \         O       O\n     language\n     ipp-attribute-\n     fidelity\n     job-impressions\n\
    \     job-k-octets\n     job-media-sheets\n     limit\n     message          \
    \                         O\n     my-jobs\n     requested-attributes         \
    \                    R\n     which-jobs\n     *  \"job-id\" is REQUIRED only if\
    \ used together with \"printer-\n     uri\" to identify the target job; otherwise,\
    \ \"job-uri\" is\n     REQUIRED.\n"
- title: 2.2 Suggested Operation Processing Steps for IPP Objects
  contents:
  - "2.2 Suggested Operation Processing Steps for IPP Objects\n   This section suggests\
    \ the steps and error checks that an IPP object\n   MAY perform when processing\
    \ requests and returning responses.  An IPP\n   object MAY perform some or all\
    \ of the error checks.  However, some\n   implementations MAY choose to be more\
    \ forgiving than the error checks\n   shown here, in order to be able to accept\
    \ requests from non-\n   conforming clients.  Not performing all of these error\
    \ checks is a\n   so-called \"forgiving\" implementation.  On the other hand,\
    \ clients\n   that successfully submit requests to IPP objects that do perform\
    \ all\n   the error checks will be more likely to be able to interoperate with\n\
    \   other IPP object implementations.  Thus an implementer of an IPP\n   object\
    \ needs to decide whether to be a \"forgiving\" or a \"strict\"\n   implementation.\
    \  Therefore, the error status codes returned may\n   differ between implementations.\
    \   Consequentially, client SHOULD NOT\n   expect exactly the error code processing\
    \ described in this section.\n   When an IPP object receives a request, the IPP\
    \ object either accepts\n   or rejects the request. In order to determine whether\
    \ or not to\n   accept or reject the request, the IPP object SHOULD execute the\n\
    \   following steps.  The order of the steps may be rearranged and/or\n   combined,\
    \ including making one or multiple passes over the request.\n   A client MUST\
    \ supply requests that would pass all of the error checks\n   indicated here in\
    \ order to be a conforming client.  Therefore, a\n   client SHOULD supply requests\
    \ that are conforming, in order to avoid\n   being rejected by some IPP object\
    \ implementations and/or risking\n   different semantics by different implementations\
    \ of forgiving\n   implementations.  For example, a forgiving implementation that\n\
    \   accepts multiple occurrences of the same attribute, rather than\n   rejecting\
    \ the request might use the first occurrences, while another\n   might use the\
    \ last occurrence.  Thus such a non-conforming client\n   would get different\
    \ results from the two forgiving implementations.\n   In the following, processing\
    \ continues step by step until a \"RETURNS\n   the xxx status code .\" statement\
    \ is encountered.  Error returns are\n   indicated by the verb: \"REJECTS\". \
    \ Since clients have difficulty\n   getting the status code before sending all\
    \ of the document data in a\n   Print-Job request, clients SHOULD use the Validate-Job\
    \ operation\n   before sending large documents to be printed, in order to validate\n\
    \   whether the IPP Printer will accept the job or not.\n   It is assumed that\
    \ security authentication and authorization has\n   already taken place at a lower\
    \ layer.\n"
- title: 2.2.1 Suggested Operation Processing Steps for all Operations
  contents:
  - "2.2.1 Suggested Operation Processing Steps for all Operations\n   This section\
    \ is intended to apply to all operations.  The next\n   section contains the additional\
    \ steps for the Print-Job, Validate-\n   Job, Print-URI, Create-Job, Send-Document,\
    \ and Send-URI operations\n   that create jobs, adds documents, and validates\
    \ jobs.\n"
- title: 2.2.1.1   Validate version number
  contents:
  - "2.2.1.1   Validate version number\n   Every request and every response contains\
    \ the \"version-number\"\n   attribute.  The value of this attribute is the major\
    \ and minor\n   version number of the syntax and semantics that the client and\
    \ IPP\n   object is using, respectively.  The \"version-number\" attribute\n \
    \  remains in a fixed position across all future versions so that all\n   clients\
    \ and IPP object that support future versions can determine\n   which version\
    \ is being used.  The IPP object checks to see if the\n   major version number\
    \ supplied in the request is supported.  If not,\n   the Printer object REJECTS\
    \ the request and RETURNS the 'server-\n   error-version-not-supported' status\
    \ code in the response.  The IPP\n   object returns in the \"version-number\"\
    \ response attribute the major\n   and minor version for the error response. \
    \ Thus the client can learn\n   at least one major and minor version that the\
    \ IPP object supports.\n   The IPP object is encouraged to return the closest\
    \ version number to\n   the one supplied by the client.\n   The checking of the\
    \ minor version number is implementation dependent,\n   however if the client\
    \ supplied minor version is explicitly supported,\n   the IPP object MUST respond\
    \ using that identical minor version\n   number.  If the requested minor version\
    \ is not supported (the\n   requested minor version is either higher or lower)\
    \ than a supported\n   minor version, the IPP object SHOULD return the closest\
    \ supported\n   minor version.\n"
- title: 2.2.1.2   Validate operation identifier
  contents:
  - "2.2.1.2   Validate operation identifier\n   The Printer object checks to see\
    \ if the \"operation-id\" attribute\n   supplied by the client is supported as\
    \ indicated in the Printer\n   object's \"operations-supported\" attribute.  If\
    \ not, the Printer\n   REJECTS the request and returns the 'server-error-operation-not-\n\
    \   supported' status code in the response.\n"
- title: 2.2.1.3   Validate the request identifier
  contents:
  - "2.2.1.3   Validate the request identifier\n   The Printer object SHOULD NOT check\
    \ to see if the \"request-id\"\n   attribute supplied by the client is in range:\
    \ between 1 and 2**31 - 1\n   (inclusive), but copies all 32 bits.\n   Note: The\
    \ \"version-number\",  \"operation-id\", and the \"request-id\"\n   parameters\
    \ are in fixed octet positions in the IPP/1.0 encoding.  The\n   \"version-number\"\
    \ parameter will be the same fixed octet position in\n   all versions of the protocol.\
    \  These fields are validated before\n   proceeding with the rest of the validation.\n"
- title: 2.2.1.4   Validate attribute group and attribute presence and order
  contents:
  - "2.2.1.4   Validate attribute group and attribute presence and order\n   The order\
    \ of the following validation steps depends on\n   implementation.\n"
- title: 2.2.1.4.1 Validate the presence and order of attribute groups
  contents:
  - "2.2.1.4.1 Validate the presence and order of attribute groups\n   Client requests\
    \ and IPP object responses contain attribute groups\n   that Section 3 requires\
    \ to be present and in a specified order.  An\n   IPP object verifies that the\
    \ attribute groups are present and in the\n   correct order in requests supplied\
    \ by clients (attribute groups\n   without an * in the following tables).\n  \
    \ If an IPP object receives a request with (1) required attribute\n   groups missing,\
    \ or (2) the attributes groups are out of order, or (3)\n   the groups are repeated,\
    \ the IPP object REJECTS the request and\n   RETURNS the 'client-error-bad-request'\
    \ status code.  For example, it\n   is an error for the Job Template Attributes\
    \ group to occur before the\n   Operation Attributes group, for the Operation\
    \ Attributes group to be\n   omitted, or for an attribute group to occur more\
    \ than once, except in\n   the Get-Jobs response.\n   Since this kind of attribute\
    \ group error is most likely to be an\n   error detected by a client developer\
    \ rather than by a customer, the\n   IPP object NEED NOT return an indication\
    \ of which attribute group was\n   in error in either the Unsupported Attributes\
    \ group or the Status\n   Message.  Also, the IPP object NEED NOT find all attribute\
    \ group\n   errors before returning this error.\n"
- title: 2.2.1.4.2 Ignore unknown attribute groups in the expected position
  contents:
  - "2.2.1.4.2 Ignore unknown attribute groups in the expected position\n   Future\
    \ attribute groups may be added to the specification at the end\n   of requests\
    \ just before the Document Content and at the end of\n   response, except for\
    \ the Get-Jobs response, where it maybe there or\n   before the first job attributes\
    \ returned.  If an IPP object receives\n   an unknown attribute group in these\
    \ positions, it ignores the entire\n   group, rather than returning an error,\
    \ since that group may be a new\n   group in a later minor version of the protocol\
    \ that can be ignored.\n   (If the new attribute group cannot be ignored without\
    \ confusing the\n   client, the major version number would have been increased\
    \ in the\n   protocol document and in the request).  If the unknown group occurs\n\
    \   in a different position, the IPP object REJECTS the request and\n   RETURNS\
    \ the 'client-error-bad-request' status code.\n   Clients also ignore unknown\
    \ attribute groups returned in a response.\n   Note:  By validating that requests\
    \ are in the proper form, IPP\n   objects force clients to use the proper form\
    \ which, in turn,\n   increases the chances that customers will be able to use\
    \ such clients\n   from multiple vendors with IPP objects from other vendors.\n"
- title: 2.2.1.4.3 Validate the presence of a single occurrence of required
  contents:
  - "2.2.1.4.3 Validate the presence of a single occurrence of required\n        \
    \  Operation attributes\n   Client requests and IPP object responses contain Operation\
    \ attributes\n   that [RFC2566] Section 3 requires to be present.  Attributes\
    \ within a\n   group may be in any order, except for the ordering of target,\n\
    \   charset, and natural languages attributes.  These attributes MUST be\n   first,\
    \ and MUST be supplied in the following order: charset, natural\n   language,\
    \ and then target. An IPP object verifies that the attributes\n   that Section\
    \ 4 requires to be supplied by the client have been\n   supplied in the request\
    \ (attributes without an * in the following\n   tables).  An asterisk (*) indicates\
    \ groups and Operation attributes\n   that the client may omit in a request or\
    \ an IPP object may omit in a\n   response.\n   If an IPP object receives a request\
    \ with required attributes missing\n   or repeated from a group or in the wrong\
    \ position, the behavior of\n   the IPP object is IMPLEMENTATION DEPENDENT.  Some\
    \ of the possible\n   implementations are:\n      1.REJECTS the request and RETURNS\
    \ the 'client-error-bad-request'\n        status code\n      2.accepts the request\
    \ and uses the first occurrence of the\n        attribute no matter where it is\n\
    \      3.accepts the request and uses the last occurrence of the\n        attribute\
    \ no matter where it is\n      4.accept the request and assume some default value\
    \ for the missing\n        attribute\n   Therefore, client MUST send conforming\
    \ requests, if they want to\n   receive the same behavior from all IPP object\
    \ implementations.  For\n   example, it is an error for the \"attributes-charset\"\
    \ or \"attributes-\n   natural-language\" attribute to be omitted in any operation\
    \ request,\n   or for an Operation attribute to be supplied in a Job Template\
    \ group\n   or a Job Template attribute to be supplied in an Operation Attribute\n\
    \   group in a create request.  It is also an error to supply the\n   \"attributes-charset\"\
    \ attribute twice.\n   Since these kinds of attribute errors are most likely to\
    \ be detected\n   by a client developer rather than by a customer, the IPP object\
    \ NEED\n   NOT return an indication of which attribute was in error in either\n\
    \   the Unsupported Attributes group or the Status Message.  Also, the\n   IPP\
    \ object NEED NOT find all attribute errors before returning this\n   error.\n\
    \   The following tables list all the attributes for all the operations\n   by\
    \ attribute group in each request and each response.  The order of\n   the groups\
    \ is the order that the client supplies the groups as\n   specified in [RFC2566]\
    \ Section 3.  The order of the attributes within\n   a group is arbitrary, except\
    \ as noted for some of the special\n   operation attributes (charset, natural\
    \ language, and target).  The\n   tables below use the following notation:\n \
    \    R   indicates a REQUIRED attribute that an IPP object MUST support\n    \
    \ O   indicates an OPTIONAL attribute that an IPP object NEED NOT\n          \
    \     support\n     *   indicates that a client MAY omit the attribute in a request\n\
    \               and that an IPP object MAY omit the attribute in a\n         \
    \      response. The absence of an * means that a client MUST\n              \
    \ supply the attribute in a request and an IPP object MUST\n               supply\
    \ the attribute in a response.\n                            Operation Requests\n\
    \   The tables below show the attributes in their proper attribute groups\n  \
    \ for operation requests:\n   Note: All operation requests contain \"version-number\"\
    , \"operation-\n   id\", and \"request-id\" parameters.\n   Print-Job Request:\n\
    \        Group 1: Operation Attributes (R)\n             attributes-charset (R)\n\
    \             attributes-natural-language (R)\n             printer-uri (R)\n\
    \             requesting-user-name (R*)\n             job-name (R*)\n        \
    \     ipp-attribute-fidelity (R*)\n             document-name (R*)\n         \
    \    document-format (R*)\n             document-natural-language (O*)\n     \
    \        compression (O*)\n             job-k-octets (O*)\n             job-impressions\
    \ (O*)\n             job-media-sheets (O*)\n        Group 2: Job Template Attributes\
    \ (R*)\n             <Job Template attributes> (O*)\n                  (see [RFC2566]\
    \ Section 4.2)\n        Group 3: Document Content (R)\n             <document\
    \ content>\n   Validate-Job Request:\n        Group 1: Operation Attributes (R)\n\
    \             attributes-charset (R)\n             attributes-natural-language\
    \ (R)\n             printer-uri (R)\n             requesting-user-name (R*)\n\
    \             job-name (R*)\n             ipp-attribute-fidelity (R*)\n      \
    \       document-name (R*)\n             document-format (R*)\n             document-natural-language\
    \ (O*)\n             compression (O*)\n             job-k-octets (O*)\n      \
    \       job-impressions (O*)\n             job-media-sheets (O*)\n        Group\
    \ 2: Job Template Attributes (R*)\n             <Job Template attributes> (O*)\n\
    \                  (see [RFC2566] Section 4.2)\n   Create-Job Request:\n     \
    \   Group 1: Operation Attributes (R)\n             attributes-charset (R)\n \
    \            attributes-natural-language (R)\n             printer-uri (R)\n \
    \            requesting-user-name (R*)\n             job-name (R*)\n         \
    \    ipp-attribute-fidelity (R*)\n             job-k-octets (O*)\n           \
    \  job-impressions (O*)\n             job-media-sheets (O*)\n        Group 2:\
    \ Job Template Attributes (R*)\n             <Job Template attributes> (O*) (see\n\
    \                  (see [RFC2566] Section 4.2)\n   Print-URI Request:\n      \
    \  Group 1: Operation Attributes (R)\n             attributes-charset (R)\n  \
    \           attributes-natural-language (R)\n             printer-uri (R)\n  \
    \           document-uri (R)\n             requesting-user-name (R*)\n       \
    \      job-name (R*)\n             ipp-attribute-fidelity (R*)\n             document-name\
    \ (R*)\n             document-format (R*)\n             document-natural-language\
    \ (O*)\n             compression (O*)\n             job-k-octets (O*)\n      \
    \       job-impressions (O*)\n             job-media-sheets (O*)\n        Group\
    \ 2: Job Template Attributes (R*)\n             <Job Template attributes> (O*)\
    \ (see\n                  (see [RFC2566] Section 4.2)\n   Send-Document Request:\n\
    \        Group 1: Operation Attributes (R)\n             attributes-charset (R)\n\
    \             attributes-natural-language (R)\n             (printer-uri & job-id)\
    \ | job-uri (R)\n             last-document (R)\n             requesting-user-name\
    \ (R*)\n             document-name (R*)\n             document-format (R*)\n \
    \            document-natural-language (O*)\n             compression (O*)\n \
    \       Group 2: Document Content (R*)\n             <document content>\n   Send-URI\
    \ Request:\n        Group 1: Operation Attributes (R)\n             attributes-charset\
    \ (R)\n             attributes-natural-language (R)\n             (printer-uri\
    \ & job-id) | job-uri (R)\n             last-document (R)\n             document-uri\
    \ (R)\n             requesting-user-name (R*)\n             document-name (R*)\n\
    \             document-format (R*)\n             document-natural-language (O*)\n\
    \             compression (O*)\n   Cancel-Job Request:\n        Group 1: Operation\
    \ Attributes (R)\n             attributes-charset (R)\n             attributes-natural-language\
    \ (R)\n             (printer-uri & job-id) | job-uri (R)\n             requesting-user-name\
    \ (R*)\n             message (O*)\n   Get-Printer-Attributes Request:\n      \
    \  Group 1: Operation Attributes (R)\n             attributes-charset (R)\n  \
    \           attributes-natural-language (R)\n             printer-uri (R)\n  \
    \           requesting-user-name (R*)\n             requested-attributes (R*)\n\
    \             document-format (R*)\n   Get-Job-Attributes Request:\n        Group\
    \ 1: Operation Attributes (R)\n             attributes-charset (R)\n         \
    \    attributes-natural-language (R)\n             (printer-uri & job-id) | job-uri\
    \ (R)\n             requesting-user-name (R*)\n             requested-attributes\
    \ (R*)\n   Get-Jobs Request:\n        Group 1: Operation Attributes (R)\n    \
    \         attributes-charset (R)\n             attributes-natural-language (R)\n\
    \             printer-uri (R)\n             requesting-user-name (R*)\n      \
    \       limit (R*)\n             requested-attributes (R*)\n             which-jobs\
    \ (R*)\n             my-jobs (R*)\n                            Operation Responses\n\
    \   The tables below show the response attributes in their proper\n   attribute\
    \ groups for responses.\n   Note: All operation responses contain \"version-number\"\
    , \"status-\n   code\", and \"request-id\" parameters.\n   Print-Job Response:\n\
    \   Print-URI Response:\n   Create-Job Response:\n   Send-Document Response:\n\
    \   Send-URI Response:\n        Group 1: Operation Attributes (R)\n          \
    \   attributes-charset (R)\n             attributes-natural-language (R)\n   \
    \          status-message (O*)\n        Group 2: Unsupported Attributes (R*) (see\
    \ Note 3)\n             <unsupported attributes> (R*)\n        Group 3: Job Object\
    \ Attributes(R*) (see Note 2)\n             job-uri (R)\n             job-id (R)\n\
    \             job-state (R)\n             job-state-reasons (O*)\n           \
    \  job-state-message (O*)\n             number-of-intervening-jobs (O*)\n   Validate-Job\
    \ Response:\n   Cancel-Job Response:\n        Group 1: Operation Attributes (R)\n\
    \             attributes-charset (R)\n             attributes-natural-language\
    \ (R)\n             status-message (O*)\n        Group 2: Unsupported Attributes\
    \ (R*) (see Note 3)\n             <unsupported attributes> (R*)\n   Note 2 - the\
    \ Job Object Attributes and Printer Object Attributes are\n   returned only if\
    \ the IPP object returns one of the success status\n   codes.\n   Note 3 - the\
    \ Unsupported Attributes Group is present only if the\n   client included some\
    \ Operation and/or Job Template attributes or\n   values that the Printer doesn't\
    \ support whether a success or an error\n   return.\n   Get-Printer-Attributes\
    \ Response:\n        Group 1: Operation Attributes (R)\n             attributes-charset\
    \ (R)\n             attributes-natural-language (R)\n             status-message\
    \ (O*)\n        Group 2: Unsupported Attributes (R*) (see Note 4)\n          \
    \   <unsupported attributes> (R*)\n        Group 3: Printer Object Attributes(R*)\
    \ (see Note 2)\n             <requested attributes> (R*)\n   Note 4 - the Unsupported\
    \ Attributes Group is present only if the\n   client included some Operation attributes\
    \ that the Printer doesn't\n   support whether a success or an error return.\n\
    \   Get-Job-Attributes Response:\n        Group 1: Operation Attributes (R)\n\
    \             attributes-charset (R)\n             attributes-natural-language\
    \ (R)\n             status-message (O*)\n        Group 2: Unsupported Attributes\
    \ (R*) (see Note 4)\n             <unsupported attributes> (R*)\n        Group\
    \ 3: Job Object Attributes(R*) (see Note 2)\n             <requested attributes>\
    \ (R*)\n   Get-Jobs Response:\n        Group 1: Operation Attributes (R)\n   \
    \          attributes-charset (R)\n             attributes-natural-language (R)\n\
    \             status-message (O*)\n        Group 2: Unsupported Attributes (R*)\
    \ (see Note 4)\n             <unsupported attributes> (R*)\n        Group 3: Job\
    \ Object Attributes(R*) (see Note 2, 5)\n             <requested attributes> (R*)\n\
    \   Note 5:  for the Get-Jobs operation the response contains a separate\n   Job\
    \ Object Attributes group 3 to N containing requested-attributes\n   for each\
    \ job object in the response.\n"
- title: 2.2.1.5   Validate the values of the REQUIRED Operation attributes
  contents:
  - "2.2.1.5   Validate the values of the REQUIRED Operation attributes\n   An IPP\
    \ object validates the values supplied by the client of the\n   REQUIRED Operation\
    \ attribute that the IPP object MUST support.  The\n   next section specifies\
    \ the validation of the values of the OPTIONAL\n   Operation attributes that IPP\
    \ objects MAY support.\n   The IPP object performs the following syntactic validation\
    \ checks of\n   each Operation attribute value:\n      a)that the length of each\
    \ Operation attribute value is correct for\n        the attribute syntax tag supplied\
    \ by the client according to\n        [RFC2566] Section 4.1,\n      b)that the\
    \ attribute syntax tag is correct for that Operation\n        attribute according\
    \ to [RFC2566] Section 3,\n      c)that the value is in the range specified for\
    \ that Operation\n        attribute according to [RFC2566] Section 3,\n      d)that\
    \ multiple values are supplied by the client only for\n        operation attributes\
    \ that are multi-valued, i.e., that are\n        1setOf X according to [RFC2566]\
    \ Section 3.\n   If any of these checks fail, the IPP object REJECTS the request\
    \ and\n   RETURNS the 'client-error-bad-request' or the 'client-error-request-\n\
    \   value-too-long' status code.  Since such an error is most likely to\n   be\
    \ an error detected by a client developer, rather than by an end-\n   user, the\
    \ IPP object NEED NOT return an indication of which attribute\n   had the error\
    \ in either the Unsupported Attributes Group or the\n   Status Message.  The description\
    \ for each of these syntactic checks\n   is explicitly expressed in the first\
    \ IF statement in the following\n   table.\n   In addition, the IPP object checks\
    \ each Operation attribute value\n   against some Printer object attribute or\
    \ some hard-coded value if\n   there is no \"xxx-supported\" Printer object attribute\
    \ defined. If its\n   value is not among those supported or is not in the range\
    \ supported,\n   then the IPP object REJECTS the request and RETURNS the error\
    \ status\n   code indicated in the table by the second IF statement.  If the value\n\
    \   of the Printer object's \"xxx-supported\" attribute is 'no-value'\n   (because\
    \ the system administrator hasn't configured a value), the\n   check always fails.\n\
    \   attributes-charset (charset)\n      IF NOT a single non-empty 'charset' value,\
    \ REJECT/RETURN 'client-\n         error-bad-request'.\n      IF the value length\
    \ is greater than 63 octets, REJECT/RETURN '\n         client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"charset-supported\" attribute,\n     \
    \    REJECT/RETURN \"client-error-charset-not-supported\".\n   attributes-natural-language(naturalLanguage)\n\
    \      IF NOT a single non-empty 'naturalLanguage' value, REJECT/RETURN\n    \
    \     'client-error-bad-request'.\n      IF the value length is greater than 63\
    \ octets, REJECT/RETURN '\n         client-error-request-value-too-long'.\n  \
    \    ACCEPT the request even if not a member of the set in the Printer\n     \
    \    object's \"generated-natural-language-supported\" attribute.  If\n      \
    \   the supplied value is not a member of the Printer object's\n         \"generated-natural-language-supported\"\
    \ attribute, use the\n         Printer object's \"natural-language-configured\"\
    \ value.\n   requesting-user-name\n      IF NOT a single 'name' value, REJECT/RETURN\
    \ 'client-error-bad-\n         request'.\n      IF the value length is greater\
    \ than 255 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF the IPP object can obtain a better authenticated name, use it\n    \
    \     instead.\n   job-name(name)\n      IF NOT a single 'name' value, REJECT/RETURN\
    \ 'client-error-bad-\n         request'.\n      IF the value length is greater\
    \ than 255 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF NOT supplied by the client, the Printer object creates a name\n    \
    \     from the document-name or document-uri.\n   document-name (name)\n     \
    \ IF NOT a single 'name' value, REJECT/RETURN 'client-error-bad-\n         request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n       \
    \  'client-error-request-value-too-long'.\n   ipp-attribute-fidelity (boolean)\n\
    \      IF NEITHER a single 'true' NOR a single 'false' 'boolean' value,\n    \
    \     REJECT/RETURN 'client-error-bad-request'.\n      IF the value length is\
    \ NOT equal to 1 octet, REJECT/RETURN '\n         client-error-request-value-too-long'\n\
    \      IF NOT supplied by the client, the IPP object assumes the value\n     \
    \    'false'.\n   document-format (mimeMediaType)\n      IF NOT a single non-empty\
    \ 'mimeMediaType' value, REJECT/RETURN\n         'client-error-bad-request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n       \
    \  'client-error-request-value-too-long'.\n      IF NOT in the Printer object's\
    \ \"document-format-supported\"\n         attribute, REJECT/RETURN 'client-error-document-format-not-\n\
    \         supported'\n      IF NOT supplied by the client, the IPP object assumes\
    \ the value of\n         the Printer object's \"document-format-default\" attribute.\n\
    \   document-uri (uri)\n      IF NOT a single non-empty 'uri' value, REJECT/RETURN\
    \ 'client-\n         error-bad-request'.\n      IF the value length is greater\
    \ than 1023 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF the URI syntax is not valid, REJECT/RETURN 'client-error-bad-\n    \
    \     request'.\n      IF scheme is NOT in the Printer object's \"reference-uri-schemes-\n\
    \         supported\" attribute, REJECT/RETURN 'client-error-uri-scheme-\n   \
    \      not-supported'.\n      The Printer object MAY check to see if the document\
    \ exists and is\n         accessible.  If the document is not found or is not\
    \ accessible,\n         REJECT/RETURN 'client-error-not found'.\n   last-document\
    \ (boolean)\n      IF NEITHER a single 'true' NOR a single 'false' 'boolean' value,\n\
    \         REJECT/RETURN 'client-error-bad-request'.\n      IF the value length\
    \ is NOT equal to 1 octet, REJECT/RETURN '\n         client-error-request-value-too-long'\n\
    \   job-id (integer(1:MAX))\n      IF NOT an single 'integer' value equal to 4\
    \ octets AND in the\n         range 1 to MAX, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT a job-id of an existing Job object, REJECT/RETURN 'client-\n   \
    \      error-not-found' or 'client-error-gone' status code, if keep\n        \
    \ track of recently deleted jobs.\n   requested-attributes (1setOf keyword)\n\
    \      IF NOT one or more 'keyword' values, REJECT/RETURN 'client-error-\n   \
    \      bad-request'.\n      IF the value length is greater than 255 octets, REJECT/RETURN\n\
    \         'client-error-request-value-too-long'.\n      Ignore unsupported values\
    \ which are the keyword names of\n         unsupported attributes.  Don't bother\
    \ to copy such requested\n         (unsupported) attributes to the Unsupported\
    \ Attribute response\n         group since the response will not return them.\n\
    \   which-jobs (type2 keyword)\n      IF NOT a single 'keyword' value, REJECT/RETURN\
    \ 'client-error-bad-\n         request'.\n      IF the value length is greater\
    \ than 255 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF NEITHER 'completed' NOR 'not-completed', copy the attribute and\n  \
    \       the unsupported value to the Unsupported Attributes response\n       \
    \  group and REJECT/RETURN 'client-error-attributes-or-values-\n         not-supported'.\n\
    \      Note: a Printer still supports the 'completed' value even if it\n     \
    \    keeps no completed/canceled/aborted jobs:  by returning no jobs\n       \
    \  when so queried.\n      IF NOT supplied by the client, the IPP object assumes\
    \ the 'not-\n         completed' value.\n   my-jobs (boolean)\n      IF NEITHER\
    \ a single 'true' NOR a single 'false' 'boolean' value,\n         REJECT/RETURN\
    \ 'client-error-bad-request'.\n      IF the value length is NOT equal to 1 octet,\
    \ REJECT/RETURN '\n         client-error-request-value-too-long'\n      IF NOT\
    \ supplied by the client, the IPP object assumes the 'false'\n         value.\n\
    \   limit (integer(1:MAX))\n      IF NOT a single 'integer' value equal to 4 octets\
    \ AND in the range\n         1 to MAX, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT supplied by the client, the IPP object returns all jobs, no\n  \
    \       matter how many.\n"
- title: 2.2.1.6   Validate the values of the OPTIONAL Operation attributes
  contents:
  - "2.2.1.6   Validate the values of the OPTIONAL Operation attributes\n   OPTIONAL\
    \ Operation attributes are those that an IPP object MAY or MAY\n   NOT support.\
    \  An IPP object validates the values of the OPTIONAL\n   attributes supplied\
    \ by the client.  The IPP object performs the same\n   syntactic validation checks\
    \ for each OPTIONAL attribute value as in\n   Section 2.2.1.5.  As in Section\
    \ 2.2.1.5, if any fail, the IPP object\n   REJECTS the request and RETURNS the\
    \ 'client-error-bad-request' or the\n   'client-error-request-value-too-long'\
    \ status code.\n   In addition, the IPP object checks each Operation attribute\
    \ value\n   against some Printer attribute or some hard-coded value if there is\n\
    \   no \"xxx-supported\" Printer attribute defined. If its value is not\n   among\
    \ those supported or is not in the range supported, then the IPP\n   object REJECTS\
    \ the request and RETURNS the error status code\n   indicated in the table.  If\
    \ the value of the Printer object's \"xxx-\n   supported\" attribute is 'no-value'\
    \ (because the system administrator\n   hasn't configured a value), the check\
    \ always fails.\n   If the IPP object doesn't recognize/support an attribute,\
    \ the IPP\n   object treats the attribute as an unknown or unsupported attribute\n\
    \   (see the last row in the table below).\n   document-natural-language (naturalLanguage)\n\
    \      IF NOT a single non-empty 'naturalLanguage' value, REJECT/RETURN '\n  \
    \       client-error-bad-request'.\n      IF the value length is greater than\
    \ 63 octets, REJECT/RETURN '\n         client-error-request-value-too-long'.\n\
    \      IF NOT a value that the Printer object supports in document\n         formats,\
    \ (no corresponding \"xxx-supported\" Printer attribute),\n         REJECT/RETURN\
    \ 'client-error-natural-language-not-supported'.\n   compression (type3 keyword)\n\
    \      IF NOT a single 'keyword' value, REJECT/RETURN 'client-error-bad-\n   \
    \      request'.\n      IF the value length is greater than 255 octets, REJECT/RETURN\
    \ '\n         client-error-request-value-too-long'.\n      IF NOT in the Printer\
    \ object's \"compression-supported\" attribute,\n         copy the attribute and\
    \ the unsupported value to the Unsupported\n         Attributes response group\
    \ and REJECT/RETURN 'client-error-\n         attributes-or-values-not-supported'.\n\
    \   job-k-octets (integer(0:MAX))\n      IF NOT a single 'integer' value equal\
    \ to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n      IF NOT\
    \ in the range of the Printer object's \"job-k-octets-\n         supported\" attribute,\
    \ copy the attribute and the unsupported\n         value to the Unsupported Attributes\
    \ response group and\n         REJECT/RETURN 'client-error-attributes-or-values-not-\n\
    \         supported'.\n   job-impressions (integer(0:MAX))\n      IF NOT a single\
    \ 'integer' value equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in the range of the Printer object's \"job-impressions-\n      \
    \   supported\" attribute, copy the attribute and the unsupported\n         value\
    \ to the Unsupported Attributes response group and\n         REJECT/RETURN 'client-error-attributes-or-values-not-\n\
    \         supported'.\n   job-media-sheets (integer(0:MAX))\n      IF NOT a single\
    \ 'integer' value equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in the range of the Printer object's \"job-media-sheets-\n     \
    \    supported\" attribute, copy the attribute and the unsupported\n         value\
    \ to the Unsupported Attributes response group and\n         REJECT/RETURN 'client-error-attributes-or-values-not-\n\
    \         supported'.\n   message (text(127))\n      IF NOT a single 'text' value,\
    \ REJECT/RETURN 'client-error-bad-\n         request'.\n      IF the value length\
    \ is greater than 127 octets,\n      REJECT/RETURN 'client-error-request-value-too-long'.\n\
    \   unknown or unsupported attribute\n      IF the attribute syntax supplied by\
    \ the client is supported but\n         the length is not legal for that attribute\
    \ syntax,\n         REJECT/RETURN 'client-error-request-value-too-long'.\n   \
    \   ELSE copy the attribute and value to the Unsupported Attributes\n        \
    \ response group and change the attribute value to the \"out-of-\n         band\"\
    \ 'unsupported' value, but otherwise ignore the attribute.\n      Note: Future\
    \ Operation attributes may be added to the protocol\n      specification that\
    \ may occur anywhere in the specified group.\n      When the operation is otherwise\
    \ successful, the IPP object returns\n      the 'successful-ok-ignored-or-substituted-attributes'\
    \ status code.\n      Ignoring unsupported Operation attributes in all operations\
    \ is\n      analogous to the handling of unsupported Job Template attributes\n\
    \      in the create and Validate-Job operations when the client supplies\n  \
    \    the \"ipp-attribute-fidelity\" Operation attribute with the 'false'\n   \
    \   value.  This last rule is so that we can add OPTIONAL Operation\n      attributes\
    \ to future versions of IPP so that older clients can\n      inter-work with new\
    \ IPP objects and newer clients can inter-work\n      with older IPP objects.\
    \  (If the new attribute cannot be ignored\n      without performing unexpectedly,\
    \ the major version number would\n      have been increased in the protocol document\
    \ and in the request).\n      This rule for Operation attributes is independent\
    \ of the value of\n      the \"ipp-attribute-fidelity\" attribute.   For example,\
    \ if an IPP\n      object doesn't support the OPTIONAL \"job-k-octets\" attribute',\
    \ the\n      IPP object treats \"job-k-octets\" as an unknown attribute and only\n\
    \      checks the length for the 'integer' attribute syntax supplied by\n    \
    \  the client.  If it is not four octets, the IPP object REJECTS the\n      request\
    \ and RETURNS the 'client-error-bad-request' status code,\n      else the IPP\
    \ object copies the attribute to the Unsupported\n      Attribute response group,\
    \ setting the value to the \"out-of-band\" '\n      unsupported' value, but otherwise\
    \ ignores the attribute.\n"
- title: 2.2.2 Suggested Additional Processing Steps for Operations that
  contents:
  - "2.2.2 Suggested Additional Processing Steps for Operations that\n      Create/Validate\
    \ Jobs and Add Documents\n   This section in combination with the previous section\
    \ recommends the\n   processing steps for the Print-Job, Validate-Job, Print-URI,\
    \ Create-\n   Job, Send-Document, and Send-URI operations that IPP objects SHOULD\n\
    \   use.  These are the operations that create jobs, validate a Print-Job\n  \
    \ request, and add documents to a job.\n"
- title: 2.2.2.1   Default "ipp-attribute-fidelity" if not supplied
  contents:
  - "2.2.2.1   Default \"ipp-attribute-fidelity\" if not supplied\n   The Printer\
    \ object checks to see if the client supplied an \"ipp-\n   attribute-fidelity\"\
    \ Operation attribute.  If the attribute is not\n   supplied by the client, the\
    \ IPP object assumes that the value is\n   'false'.\n"
- title: 2.2.2.2   Check that the Printer object is accepting jobs
  contents:
  - "2.2.2.2   Check that the Printer object is accepting jobs\n   If the value of\
    \ the Printer object's \"printer-is-accepting-jobs\" is\n   'false', the Printer\
    \ object REJECTS the request and RETURNS the\n   'server-error-not-accepting-jobs'\
    \ status code.\n"
- title: 2.2.2.3   Validate the values of the Job Template attributes
  contents:
  - "2.2.2.3   Validate the values of the Job Template attributes\n   An IPP object\
    \ validates the values of all Job Template attribute\n   supplied by the client.\
    \  The IPP object performs the analogous\n   syntactic validation checks of each\
    \ Job Template attribute value that\n   it performs for Operation attributes (see\
    \ Section 2.2.1.5.):\n      a)that the length of each value is correct for the\
    \ attribute\n        syntax tag supplied by the client according to [RFC2566]\
    \ Section\n        4.1.\n      b)that the attribute syntax tag is correct for\
    \ that attribute\n        according to [RFC2566] Sections 4.2 to 4.4.\n      c)that\
    \ multiple values are supplied only for multi-valued\n        attributes, i.e.,\
    \ that are 1setOf  X according to [RFC2566]\n        Sections 4.2 to 4.4.\n  \
    \ As in Section 2.2.1.5, if any of these syntactic checks fail, the IPP\n   object\
    \ REJECTS the request and RETURNS the 'client-error-bad-request'\n   or 'client-error-request-value-too-long'\
    \ status code as appropriate,\n   independent of the value of the \"ipp-attribute-fidelity\"\
    .  Since such\n   an error is most likely to be an error detected by a client\n\
    \   developer, rather than by an end-user, the IPP object NEED NOT return\n  \
    \ an indication of which attribute had the error in either the\n   Unsupported\
    \ Attributes Group or the Status Message.  The description\n   for each of these\
    \ syntactic checks is explicitly expressed in the\n   first IF statement in the\
    \ following table.\n   Each Job Template attribute MUST occur no more than once.\
    \  If an IPP\n   Printer receives a create request with multiple occurrences of\
    \ a Job\n   Template attribute, it MAY:\n      1.reject the operation and return\
    \ the 'client-error-bad syntax'\n        error status code\n      2.accept the\
    \ operation and use the first occurrence of the\n        attribute\n      3.accept\
    \ the operation and use the last occurrence of the\n        attribute\n   depending\
    \ on implementation.  Therefore, clients MUST NOT supply\n   multiple occurrences\
    \ of the same Job Template attribute in the Job\n   Attributes group in the request.\n"
- title: 2.2.3 Algorithm for job validation
  contents:
  - "2.2.3 Algorithm for job validation\n   The process of validating a Job-Template\
    \ attribute \"xxx\" against a\n   Printer attribute \"xxx-supported\" can use\
    \ the following validation\n   algorithm (see section 3.2.1.2 in [RFC2566]).\n\
    \   To validate the value U of Job-Template attribute \"xxx\" against the\n  \
    \ value V of Printer \"xxx-supported\", perform the following algorithm:\n   \
    \   1.If U is multi-valued, validate each value X of U by performing\n       \
    \ the algorithm in Table 3 with each value X. Each validation is\n        separate\
    \ from the standpoint of returning unsupported values.\n        Example: If U\
    \ is \"finishings\" that the client supplies with\n        'staple', 'bind' values,\
    \ then X takes on the successive values:\n        'staple', then 'bind'\n    \
    \  2.If V is multi-valued, validate X against each Z of V by\n        performing\
    \ the algorithm in Table 3 with each value Z.  If a\n        value Z validates,\
    \ the validation for the attribute value X\n        succeeds. If it fails, the\
    \ algorithm is applied to the next\n        value Z of V. If there are no more\
    \ values Z of V, validation\n        fails.\n        Example: If V is \"sides-supported\"\
    \ with values: 'one-sided',\n        'two-sided-long', and 'two-sided-short',\
    \ then Z takes on the\n        successive values: 'one-sided', 'two-sided-long',\
    \ and\n        'two-sided-short'.  If the client supplies \"sides\" with 'two-\n\
    \        sided-long', the first comparison fails ('one-sided' is not\n       \
    \ equal to 'two-sided-long'), the second comparison succeeds\n        ('two-sided-long'\
    \ is equal to 'two-sided-long\"), and the third\n        comparison ('two-sided-short'\
    \ with 'two-sided-long') is not even\n        performed.\n      3.If both U and\
    \ V are single-valued, let X be U and Z be V and use\n        the validation rules\
    \ in Table 3.\n            Table 3 - Rules for validating single values X against\
    \ Z\n     attribute    attribute       validated if:\n     syntax of X  syntax\
    \ of Z\n     integer      rangeOfInteger  X is within the range of\n         \
    \                          Z\n     uri          uriScheme       the uri scheme\
    \ in X is\n                                   equal to Z\n     any          boolean\
    \         the value of Z is TRUE\n     any          any             X and Z are\
    \ of the same\n                                   type and are equal.\n   If the\
    \ value of the Printer object's \"xxx-supported\" attribute is '\n   no-value'\
    \ (because the system administrator hasn't configured a\n   value), the check\
    \ always fails.  If the check fails, the IPP object\n   copies the attribute to\
    \ the Unsupported Attributes response group\n   with its unsupported value.  If\
    \ the attribute contains more than one\n   value, each value is checked and each\
    \ unsupported value is separately\n   copied, while supported values are not copied.\
    \  If an IPP object\n   doesn't recognize/support a Job Template attribute, i.e.,\
    \ there is no\n   corresponding Printer object \"xxx-supported\" attribute, the\
    \ IPP\n   object treats the attribute as an unknown or unsupported attribute\n\
    \   (see the last row in the table below).\n   If some Job Template attributes\
    \ are supported for some document\n   formats and not for others or the values\
    \ are different for different\n   document formats, the IPP object SHOULD take\
    \ that into account in\n   this validation using the value of the \"document-format\"\
    \ supplied by\n   the client (or defaulted to the value of the Printer's \"document-\n\
    \   format-default\" attribute, if not supplied by the client).  For\n   example,\
    \ if \"number-up\" is supported for the 'text/plain' document\n   format, but\
    \ not for the 'application/postscript' document format, the\n   check SHOULD (though\
    \ it NEED NOT) depend on the value of the\n   \"document-format\" operation attribute.\
    \  See \"document-format\" in\n   [RFC2566] section 3.2.1.1 and 3.2.5.1.\n   Note:\
    \ whether the request is accepted or rejected is determined by\n   the value of\
    \ the \"ipp-attribute-fidelity\" attribute in a subsequent\n   step, so that all\
    \ Job Template attribute supplied are examined and\n   all unsupported attributes\
    \ and/or values are copied to the\n   Unsupported Attributes response group.\n\
    \   job-priority (integer(1:100))\n      IF NOT a single 'integer' value with\
    \ a length equal to 4 octets,\n         REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT supplied by the client, use the value of the Printer\n         object's\
    \ \"job-priority-default\" attribute at job submission\n         time.\n     \
    \ IF NOT in the range 1 to 100, inclusive, copy the attribute and\n         the\
    \ unsupported value to the Unsupported Attributes response\n         group.\n\
    \      Map the value to the nearest supported value in the range 1:100 as\n  \
    \       specified by the number of discrete values indicated by the\n        \
    \ value of the Printer's \"job-priority-supported\" attribute.  See\n        \
    \ the formula in [RFC2566] Section 4.2.1.\n   job-hold-until (type3 keyword |\
    \ name)\n      IF NOT a single 'keyword' or 'name' value, REJECT/RETURN 'client-\n\
    \         error-bad-request'.\n      IF the value length is greater than 255 octets,\
    \ REJECT/RETURN\n         'client-error-request-value-too-long'.\n      IF NOT\
    \ supplied by the client, use the value of the Printer\n         object's \"job-hold-until\"\
    \ attribute at job submission time.\n      IF NOT in the Printer object's \"job-hold-until-supported\"\
    \n         attribute, copy the attribute and the unsupported value to the\n  \
    \       Unsupported Attributes response group.\n   job-sheets (type3 keyword |\
    \ name)\n      IF NOT a single 'keyword' or 'name' value, REJECT/RETURN 'client-\n\
    \         error-bad-request'.\n      IF the value length is greater than 255 octets,\
    \ REJECT/RETURN\n         'client-error-request-value-too-long'.\n      IF NOT\
    \ in the Printer object's \"job-sheets-supported\" attribute,\n         copy the\
    \ attribute and the unsupported value to the Unsupported\n         Attributes\
    \ response group.\n   multiple-document-handling (type2 keyword)\n      IF NOT\
    \ a single 'keyword' value, REJECT/RETURN 'client-error-bad-\n         request'.\n\
    \      IF the value length is greater than 255 octets, REJECT/RETURN\n       \
    \  'client-error-request-value-too-long'.\n      IF NOT in the Printer object's\
    \ \"multiple-document-handling-\n         supported\" attribute, copy the attribute\
    \ and the unsupported\n         value to the Unsupported Attributes response group.\n\
    \   copies (integer(1:MAX))\n      IF NOT a single 'integer' value with a length\
    \ equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n      IF\
    \ NOT in range of the Printer object's \"copies-supported\"\n         attribute\
    \ copy the attribute and the unsupported value to the\n         Unsupported\n\
    \         Attributes response group.\n   finishings (1setOf type2 enum)\n    \
    \  IF NOT an 'enum' value(s) each with a length equal to 4 octets,\n         REJECT/RETURN\
    \ 'client-error-bad-request'.\n      IF NOT in the Printer object's \"finishings-supported\"\
    \ attribute,\n         copy the attribute and the unsupported value(s), but not\
    \ any\n         supported values, to the Unsupported Attributes response group.\n\
    \   page-ranges (1setOf  rangeOfInteger(1:MAX))\n      IF NOT a 'rangeOfInteger'\
    \ value(s) each with a length equal to 8\n         octets, REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF first value is greater than second value in any range, the\n       \
    \  ranges are not in ascending order, or ranges overlap,\n         REJECT/RETURN\
    \ 'client-error-bad-request'.\n      IF the value of the Printer object's \"page-ranges-supported\"\
    \n         attribute is 'false', copy the attribute to the Unsupported\n     \
    \    Attributes response group and set the value to the \"out-of-\n         band\"\
    \ 'unsupported' value.\n   sides (type2 keyword)\n      IF NOT a single 'keyword'\
    \ value, REJECT/RETURN 'client-error-bad-\n         request'.\n      IF the value\
    \ length is greater than 255 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"sides-supported\" attribute, copy\n  \
    \       the attribute and the unsupported value to the Unsupported\n         Attributes\
    \ response group.\n   number-up (integer(1:MAX))\n      IF NOT a single 'integer'\
    \ value with a length equal to 4 octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT a value or in the range of one of the values of the Printer\n  \
    \       object's \"number-up-supported\" attribute, copy the attribute\n     \
    \    and value to the Unsupported Attribute response group.\n   orientation-requested\
    \ (type2 enum)\n      IF NOT a single 'enum' value with a length equal to 4 octets,\n\
    \      REJECT/RETURN 'client-error-bad-request'.\n      IF NOT in the Printer\
    \ object's \"orientation-requested-supported\"\n         attribute, copy the attribute\
    \ and the unsupported value to the\n         Unsupported Attributes response group.\n\
    \   media (type3 keyword | name)\n      IF NOT a single 'keyword' or 'name' value,\
    \ REJECT/RETURN 'client-\n         error-bad-request'.\n      IF the value length\
    \ is greater than 255 octets, REJECT/RETURN\n         'client-error-request-value-too-long'.\n\
    \      IF NOT in the Printer object's \"media-supported\" attribute, copy\n  \
    \       the attribute and the unsupported value to the Unsupported\n         Attributes\
    \ response group.\n   printer-resolution (resolution)\n      IF NOT a single 'resolution'\
    \ value with a length equal to 9\n         octets,\n      REJECT/RETURN 'client-error-bad-request'.\n\
    \      IF NOT in the Printer object's \"printer-resolution-supported\"\n     \
    \    attribute, copy the attribute and the unsupported value to the\n        \
    \ Unsupported Attributes response group.\n   print-quality (type2 enum)\n    \
    \  IF NOT a single 'enum' value with a length equal to 4 octets,\n      REJECT/RETURN\
    \ 'client-error-bad-request'.\n      IF NOT in the Printer object's \"print-quality-supported\"\
    \n         attribute, copy the attribute and the unsupported value to the\n  \
    \       Unsupported Attributes response group.\n   unknown or unsupported attribute\
    \ (i.e., there is no corresponding\n   Printer object \"xxx-supported\" attribute)\n\
    \      IF the attribute syntax supplied by the client is supported but\n     \
    \    the length is not legal for that attribute syntax,\n      REJECT/RETURN 'client-error-bad-request'\
    \ if the length of the\n         attribute syntax is fixed or 'client-error-request-value-too-\n\
    \         long' if the length of the attribute syntax is variable.\n      ELSE\
    \ copy the attribute and value to the Unsupported Attributes\n         response\
    \ group and change the attribute value to the \"out-of-\n         band\" 'unsupported'\
    \ value.  Any remaining Job Template\n         Attributes are either unknown or\
    \ unsupported Job Template\n         attributes and are validated algorithmically\
    \ according to their\n         attribute syntax for proper length (see below).\n\
    \         If the attribute syntax is supported AND the length check\n        \
    \ fails, the IPP object REJECTS the request and RETURNS the '\n         client-error-bad-request'\
    \ if the length of the attribute syntax\n         is fixed or the 'client-error-request-value-too-long'\
    \ status\n         code if the length of the attribute syntax is variable.\n \
    \        Otherwise, the IPP object copies the unsupported Job Template\n     \
    \    attribute to the Unsupported Attributes response group and\n         changes\
    \ the attribute value to the \"out-of-band\" 'unsupported'\n         value.  The\
    \ following table shows the length checks for all\n         attribute syntaxes.\
    \  In the following table:  \"<=\" means less\n         than or equal, \"=\" means\
    \ equal to:\n   Name              Octet length check for read-write attributes\n\
    \   -----------       --------------------------------------------\n   'textWithLanguage\
    \    <= 1023 AND 'naturalLanguage'  <= 63\n   'textWithoutLanguage' <= 1023\n\
    \   'nameWithLanguage'    <= 255 AND 'naturalLanguage'  <= 63\n   'nameWithoutLanguage'\
    \ <= 255\n   'keyword'             <= 255\n   'enum'                = 4\n   'uri'\
    \                 <= 1023\n   'uriScheme'           <= 63\n   'charset'      \
    \       <= 63\n   'naturalLanguage'     <= 63\n   'mimeMediaType'       <= 255\n\
    \   'octetString'         <= 1023\n   'boolean'             = 1\n   'integer'\
    \             = 4\n   'rangeOfInteger'      = 8\n   'dateTime'            = 11\n\
    \   'resolution'          = 9\n   '1setOf  X'\n"
- title: 2.2.3.1   Check for conflicting Job Template attributes values
  contents:
  - "2.2.3.1   Check for conflicting Job Template attributes values\n   Once all the\
    \ Operation and Job Template attributes have been checked\n   individually, the\
    \ Printer object SHOULD check for any conflicting\n   values among all the supported\
    \ values supplied by the client.  For\n   example, a Printer object might be able\
    \ to staple and to print on\n   transparencies, however due to physical stapling\
    \ constraints, the\n   Printer object might not be able to staple transparencies.\
    \ The IPP\n   object copies the supported attributes and their conflicting\n \
    \  attribute values to the Unsupported Attributes response group.  The\n   Printer\
    \ object only copies over those attributes that the Printer\n   object either\
    \ ignores or substitutes in order to resolve the\n   conflict, and it returns\
    \ the original values which were supplied by\n   the client.  For example suppose\
    \ the client supplies \"finishings\"\n   equals 'staple' and \"media\" equals\
    \ 'transparency', but the Printer\n   object does not support stapling transparencies.\
    \  If the Printer\n   chooses to ignore the stapling request in order to resolve\
    \ the\n   conflict, the Printer objects returns \"finishings\" equal to 'staple'\n\
    \   in the Unsupported Attributes response group.  If any attributes are\n   multi-valued,\
    \ only the conflicting values of the attributes are\n   copied.\n   Note: The\
    \ decisions made to resolve the conflict (if there is a\n   choice) is implementation\
    \ dependent.\n"
- title: 2.2.3.2   Decide whether to REJECT the request
  contents:
  - "2.2.3.2   Decide whether to REJECT the request\n   If there were any unsupported\
    \ Job Template attributes or\n   unsupported/conflicting Job Template attribute\
    \ values and the client\n   supplied the \"ipp-attribute-fidelity\" attribute\
    \ with the 'true'\n   value, the Printer object REJECTS the request and return\
    \ the status\n   code:\n      (1) 'client-error-conflicting-attributes' status\
    \ code, if there\n          were any conflicts between attributes supplied by\
    \ the client.\n      (2) 'client-error-attributes-or-values-not-supported' status\
    \ code,\n          otherwise.\n   Note:  Unsupported Operation attributes or values\
    \ that are returned\n   do not affect the status returned in this step.  If the\
    \ unsupported\n   Operation attribute was a serious error, the above already rejected\n\
    \   the request in a previous step.  If control gets to this step with\n   unsupported\
    \ Operation attributes being returned, they are not serious\n   errors.\n"
- title: 2.2.3.3   For the Validate-Job operation, RETURN one of the success
  contents:
  - "2.2.3.3   For the Validate-Job operation, RETURN one of the success\n       \
    \   status codes\n   If the requested operation is the Validate-Job operation,\
    \ the Printer\n   object returns:\n      (1) the \"successful-ok\" status code,\
    \ if there are no unsupported\n          or conflicting Job Template attributes\
    \ or values.\n      (2) the \"successful-ok-conflicting-attributes, if there are\
    \ any\n          conflicting Job Template attribute or values.\n      (3) the\
    \ \"successful-ok-ignored-or-substituted-attributes, if there\n          are only\
    \ unsupported Job Template attributes or values.\n   Note:  Unsupported Operation\
    \ attributes or values that are returned\n   do not affect the status returned\
    \ in this step.  If the unsupported\n   Operation attribute was a serious error,\
    \ the above already rejected\n   the request in a previous step.  If control gets\
    \ to this step with\n   unsupported Operation attributes being returned, they\
    \ are not serious\n   errors.\n"
- title: 2.2.3.4   Create the Job object with attributes to support
  contents:
  - "2.2.3.4   Create the Job object with attributes to support\n   If \"ipp-attribute-fidelity\"\
    \ is set to 'false' (or it was not supplied\n   by the client), the Printer object:\n\
    \      (1) creates a Job object, assigns a unique value to the job's\n       \
    \   \"job-uri\" and \"job-id\" attributes, and initializes all of the\n      \
    \    job's other supported Job Description attributes.\n      (2) removes all\
    \ unsupported attributes from the Job object.\n      (3) for each unsupported\
    \ value, removes either the unsupported\n          value or substitutes the unsupported\
    \ attribute value with some\n          supported value.  If an attribute has no\
    \ values after removing\n          unsupported values from it, the attribute is\
    \ removed from the\n          Job object (so that the normal default behavior\
    \ at job\n          processing time will take place for that attribute).\n   \
    \   (4) for each conflicting value, removes either the conflicting\n         \
    \ value or substitutes the conflicting attribute value with some\n          other\
    \ supported value.  If an attribute has no values after\n          removing conflicting\
    \ values from it, the attribute is removed\n          from the Job object (so\
    \ that the normal default behavior at\n          job processing time will take\
    \ place for that attribute).\n   If there were no attributes or values flagged\
    \ as unsupported, or the\n   value of 'ipp-attribute-fidelity\" was 'false', the\
    \ Printer object is\n   able to accept the create request and create a new Job\
    \ object.  If\n   the \"ipp-attribute-fidelity\" attribute is set to 'true', the\
    \ Job\n   Template attributes that populate the new Job object are necessarily\n\
    \   all the Job Template attributes supplied in the create request.  If\n   the\
    \ \"ipp-attribute-fidelity\" attribute is set to 'false', the Job\n   Template\
    \ attributes that populate the new Job object are all the\n   client supplied\
    \ Job Template attributes that are supported or that\n   have value substitution.\
    \  Thus, some of the requested Job Template\n   attributes may not appear in the\
    \ Job object because the Printer\n   object did not support those attributes.\
    \  The attributes that\n   populate the Job object are persistently stored with\
    \ the Job object\n   for that Job.  A Get-Job-Attributes operation on that Job\
    \ object will\n   return only those attributes that are persistently stored with\
    \ the\n   Job object.\n   Note: All Job Template attributes that are persistently\
    \ stored with\n   the Job object are intended to be \"override values\"; that\
    \ is, they\n   that take precedence over whatever other embedded instructions\
    \ might\n   be in the document data itself.  However, it is not possible for all\n\
    \   Printer objects to realize the semantics of \"override\".  End users\n   may\
    \ query the Printer's \"pdl-override-supported\" attribute to\n   determine if\
    \ the Printer either attempts or does not attempt to\n   override document data\
    \ instructions with IPP attributes.\n   There are some cases, where a Printer\
    \ supports a Job Template\n   attribute and has an associated default value set\
    \ for that attribute.\n   In the case where a client does not supply the corresponding\n\
    \   attribute, the Printer does not use its default values to populate\n   Job\
    \ attributes when creating the new Job object; only Job Template\n   attributes\
    \ actually in the create request are used to populate the\n   Job object. The\
    \ Printer's default values are only used later at Job\n   processing time if no\
    \ other IPP attribute or instruction embedded in\n   the document data is present.\n\
    \   Note: If the default values associated with Job Template attributes\n   that\
    \ the client did not supply were to be used to populate the Job\n   object, then\
    \ these values would become \"override values\" rather than\n   defaults.  If\
    \ the Printer supports the 'attempted' value of the\n   \"pdl-override-supported\"\
    \ attribute, then these override values could\n   replace values specified within\
    \ the document data.  This is not the\n   intent of the default value mechanism.\
    \ A default value for an\n   attribute is used only if the create request did\
    \ not specify that\n   attribute (or it was ignored when allowed by \"ipp-attribute-fidelity\"\
    \n   being 'false') and no value was provided within the content of the\n   document\
    \ data.\n   If the client does not supply a value for some Job Template\n   attribute,\
    \ and the Printer does not support that attribute, as far as\n   IPP is concerned,\
    \ the result of processing that Job (with respect to\n   the missing attribute)\
    \ is undefined.\n"
- title: 2.2.3.5   Return one of the success status codes
  contents:
  - "2.2.3.5   Return one of the success status codes\n   Once the Job object has\
    \ been created, the Printer object accepts the\n   request and returns to the\
    \ client:\n      (1) the 'successful-ok' status code, if there are no unsupported\n\
    \          or conflicting Job Template attributes or values.\n      (2) the 'successful-ok-conflicting-attributes'\
    \ status code, if\n          there are any conflicting Job Template attribute\
    \ or values.\n      (3) the 'successful-ok-ignored-or-substituted-attributes'\
    \ status\n          code, if there are only unsupported Job Template attributes\
    \ or\n          values.\n   Note:  Unsupported Operation attributes or values\
    \ that are returned\n   do not affect the status returned in this step.  If the\
    \ unsupported\n   Operation attribute was a serious error, the above already rejected\n\
    \   the request in a previous step.  If control gets to this step with\n   unsupported\
    \ Operation attributes being returned, they are not serious\n   errors.\n   The\
    \ Printer object also returns Job status attributes that indicate\n   the initial\
    \ state of the Job ('pending', 'pending-held', '\n   processing', etc.), etc.\
    \  See Print-Job Response, [RFC2566] section\n   3.2.1.2.\n"
- title: 2.2.3.6   Accept appended Document Content
  contents:
  - "2.2.3.6   Accept appended Document Content\n   The Printer object accepts the\
    \ appended Document Content data and\n   either starts it printing, or spools\
    \ it for later processing.\n"
- title: 2.2.3.7   Scheduling and Starting to Process the Job
  contents:
  - "2.2.3.7   Scheduling and Starting to Process the Job\n   The Printer object uses\
    \ its own configuration and implementation\n   specific algorithms for scheduling\
    \ the Job in the correct processing\n   order.  Once the Printer object begins\
    \ processing the Job, the\n   Printer changes the Job's state to 'processing'.\
    \ If the Printer\n   object supports PDL override (the \"pdl-override-supported\"\
    \ attribute\n   set to 'attempted'), the implementation does its best to see that\
    \ IPP\n   attributes take precedence over embedded instructions in the document\n\
    \   data.\n"
- title: 2.2.3.8   Completing the Job
  contents:
  - "2.2.3.8   Completing the Job\n   The Printer object continues to process the\
    \ Job until it can move the\n   Job into the 'completed' state.  If an Cancel-Job\
    \ operation is\n   received, the implementation eventually moves the Job into\
    \ the '\n   canceled' state.  If the system encounters errors during processing\n\
    \   that do not allow it to progress the Job into a completed state, the\n   implementation\
    \ halts all processing, cleans up any resources, and\n   moves the Job into the\
    \ 'aborted' state.\n"
- title: 2.2.3.9   Destroying the Job after completion
  contents:
  - "2.2.3.9   Destroying the Job after completion\n   Once the Job moves to the 'completed',\
    \ 'aborted', or 'canceled'\n   state, it is an implementation decision as to when\
    \ to destroy the Job\n   object and release all associated resources.  Once the\
    \ Job has been\n   destroyed, the Printer would return either the \"client-error-not-\n\
    \   found\" or \"client-error-gone\" status codes for operations directed at\n\
    \   that Job.\n   Note:  the Printer object SHOULD NOT re-use a \"job-uri\" or\
    \ \"job-id\"\n   value for a sufficiently long time after a job has been destroyed,\
    \ so\n   that stale references kept by clients are less likely to access the\n\
    \   wrong (newer) job.\n"
- title: 2.2.3.10  Interaction with "ipp-attribute-fidelity"
  contents:
  - "2.2.3.10  Interaction with \"ipp-attribute-fidelity\"\n   Some Printer object\
    \ implementations may support \"ipp-attribute-\n   fidelity\" set to 'true' and\
    \ \"pdl-override-supported\" set to '\n   attempted' and yet still not be able\
    \ to realize exactly what the\n   client specifies in the create request.  This\
    \ is due to legacy\n   decisions and assumptions that have been made about the\
    \ role of job\n   instructions embedded within the document data and external\
    \ job\n   instructions that accompany the document data and how to handle\n  \
    \ conflicts between such instructions.  The inability to be 100%\n   precise about\
    \ how a given implementation will behave is also\n   compounded by the fact that\
    \ the two special attributes, \"ipp-\n   attribute-fidelity\" and \"pdl-override-supported\"\
    , apply to the whole\n   job rather than specific values for each attribute. For\
    \ example, some\n   implementations may be able to override almost all Job Template\n\
    \   attributes except for \"number-up\".\n"
- title: 2.3 Status codes returned by operation
  contents:
  - "2.3 Status codes returned by operation\n   This section lists all status codes\
    \ once in the first operation\n   (Print-Job).  Then it lists the status codes\
    \ that are different or\n   specialized for subsequent operations under each operation.\n"
- title: 2.3.1 Printer Operations
  contents:
  - '2.3.1 Printer Operations

    '
- title: 2.3.1.1   Print-Job
  contents:
  - "2.3.1.1   Print-Job\n   The Printer object MUST return one of the following \"\
    status-code\"\n   values for the indicated reason.  Whether all of the document\
    \ data\n   has been accepted or not before returning the success or error\n  \
    \ response depends on implementation.  See Section 14 for a more\n   complete\
    \ description of each status code.\n   For the following success status codes,\
    \ the Job object has been\n   created and the \"job-id\", and \"job-uri\" assigned\
    \ and returned in the\n   response:\n      successful-ok:  no request attributes\
    \ were substituted or ignored.\n      successful-ok-ignored-or-substituted-attributes:\
    \  some supplied\n         (1) attributes were ignored or (2) unsupported attribute\n\
    \         syntaxes or values were substituted with supported values or\n     \
    \    were ignored.  Unsupported attributes, attribute syntaxes, or\n         values\
    \ MUST be returned in the Unsupported Attributes group of\n         the response.\n\
    \      successful-ok-conflicting-attributes:  some supplied attribute\n      \
    \   values conflicted with the values of other supplied attributes\n         and\
    \ were either substituted or ignored.  Attributes or values\n         which conflict\
    \ with other attributes and have been substituted\n         or ignored MUST be\
    \ returned in the Unsupported Attributes group\n         of the response as supplied\
    \ by the client.\n   [RFC2566] section 3.1.6 Operation Status Codes and Messages\
    \ states:\n         If the Printer object supports the \"status-message\" operation\n\
    \         attribute, it SHOULD use the REQUIRED 'utf-8' charset to return\n  \
    \       a status message for the following error status codes (see\n         section\
    \ 14):  'client-error-bad-request', 'client-error-\n         charset-not-supported',\
    \ 'server-error-internal-error', '\n         server-error-operation-not-supported',\
    \ and 'server-error-\n         version-not-supported'.  In this case, it MUST\
    \ set the value of\n         the \"attributes-charset\" operation attribute to\
    \ 'utf-8' in the\n         error response.\n   For the following error status\
    \ codes, no job is created and no \"job-\n   id\" or \"job-uri\" is returned:\n\
    \      client-error-bad-request:  The request syntax does not conform to\n   \
    \      the specification.\n      client-error-forbidden:  The request is being\
    \ refused for\n         authorization or authentication reasons.  The implementation\n\
    \         security policy is to not reveal whether the failure is one of\n   \
    \      authentication or authorization.\n      client-error-not-authenticated:\
    \  Either the request requires\n         authentication information to be supplied\
    \ or the authentication\n         information is not sufficient for authorization.\n\
    \      client-error-not-authorized:  The requester is not authorized to\n    \
    \     perform the request on the target object.\n      client-error-not-possible:\
    \  The request cannot be carried out\n         because of the state of the system.\
    \  See also 'server-error-\n         not-accepting-jobs' status code which MUST\
    \ take precedence if\n         the Printer object's \"printer-accepting-jobs\"\
    \ attribute is '\n         false'.\n      client-error-timeout:  not applicable.\n\
    \      client-error-not-found:  the target object does not exist.\n      client-error-gone:\
    \  the target object no longer exists and no\n         forwarding address is known.\n\
    \      client-error-request-entity-too-large:  the size of the request\n     \
    \    and/or print data exceeds the capacity of the IPP Printer to\n         process\
    \ it.\n      client-error-request-value-too-long:  the size of request variable\n\
    \         length attribute values, such as 'text' and 'name' attribute\n     \
    \    syntaxes, exceed the maximum length specified in [RFC2566] for\n        \
    \ the attribute and MUST be returned in the Unsupported\n         Attributes Group.\n\
    \      client-error-document-format-not-supported:  the document format\n    \
    \     supplied is not supported.  The \"document-format\" attribute\n        \
    \ with the unsupported value MUST be returned in the Unsupported\n         Attributes\
    \ Group.  This error SHOULD take precedence over any\n         other 'xxx-not-supported'\
    \ error, except 'client-error-charset-\n         not-supported'.\n      client-error-attributes-or-values-not-supported:\
    \  one or more\n         supplied attributes, attribute syntaxes, or values are\
    \ not\n         supported and the client supplied the \"ipp-attributes-fidelity\"\
    \n         operation attribute with a 'true' value.  They MUST be returned\n \
    \        in the Unsupported Attributes Group as explained below.\n      client-error-uri-scheme-not-supported:\
    \  not applicable.\n      client-error-charset-not-supported:  the charset supplied\
    \ in the\n         \"attributes-charset\" operation attribute is not supported.\
    \  The\n         Printer's \"configured-charset\" MUST be returned in the response\n\
    \         as the value of the \"attributes-charset\" operation attribute\n   \
    \      and used for any 'text' and 'name' attributes returned in the\n       \
    \  error response.  This error SHOULD take precedence over any\n         other\
    \ error, unless the request syntax is so bad that the\n         client's supplied\
    \ \"attributes-charset\" cannot be determined.\n      client-error-conflicting-attributes:\
    \  one or more supplied\n         attribute va attribute values conflicted with\
    \ each other and\n         the client supplied the \"ipp-attributes-fidelity\"\
    \ operation\n         attribute with a 'true' value.  They MUST be returned in\
    \ the\n         Unsupported Attributes Group as explained below.\n      server-error-internal-error:\
    \  an unexpected condition prevents the\n         request from being fulfilled.\n\
    \      server-error-operation-not-supported:  not applicable (since\n        \
    \ Print-Job is REQUIRED).\n      server-error-service-unavailable:  the service\
    \ is temporarily\n         overloaded.\n      server-error-version-not-supported:\
    \  the version in the request is\n         not supported.  The \"closest\" version\
    \ number supported MUST be\n         returned in the response.\n      server-error-device-error:\
    \  a device error occurred while\n         receiving or spooling the request or\
    \ document data or the IPP\n         Printer object can only accept one job at\
    \ a time.\n      server-error-temporary-error:  a temporary error such as a buffer\n\
    \         full write error, a memory overflow, or a disk full condition\n    \
    \     occurred while receiving the request and/or the document data.\n      server-error-not-accepting-jobs:\
    \  the Printer object's \"printer-\n         is-not-accepting-jobs\" attribute\
    \ is 'false'.\n      server-error-busy:  the Printer is too busy processing jobs\
    \ to\n         accept another job at this time.\n      server-error-job-canceled:\
    \  the job has been canceled by an\n         operator or the system while the\
    \ client was transmitting the\n         document data.\n"
- title: 2.3.1.2   Print-URI
  contents:
  - "2.3.1.2   Print-URI\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to Print-URI with the following\n\
    \   specializations and differences.  See Section 14 for a more complete\n   description\
    \ of each status code.\n      server-error-uri-scheme-not-supported:  the URI\
    \ scheme supplied in\n         the \"document-uri\" operation attribute is not\
    \ supported and is\n         returned in the Unsupported Attributes group.\n"
- title: 2.3.1.3   Validate-Job
  contents:
  - "2.3.1.3   Validate-Job\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to Validate-Job.  See Section\
    \ 14\n   for a more complete description of each status code.\n"
- title: 2.3.1.4   Create-Job
  contents:
  - "2.3.1.4   Create-Job\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to Create-Job with the following\n\
    \   specializations and differences.  See Section 14 for a more complete\n   description\
    \ of each status code.\n      server-error-operation-not-supported:  the Create-Job\
    \ operation is\n         not supported.\n"
- title: 2.3.1.5   Get-Printer-Attributes
  contents:
  - "2.3.1.5   Get-Printer-Attributes\n   All of the Print-Job status codes described\
    \ in Section 3.2.1.2\n   Print-Job Response are applicable to the Get-Printer-Attributes\n\
    \   operation with the following specializations and differences.   See\n   Section\
    \ 14 for a more complete description of each status code.\n   For the following\
    \ success status codes, the requested attributes are\n   returned in Group 3 in\
    \ the response:\n      successful-ok:  no request attributes were substituted\
    \ or ignored\n         (same as Print-Job) and no requested attributes were\n\
    \         unsupported.\n      successful-ok-ignored-or-substituted-attributes:\
    \   same as Print-\n         Job, except the \"requested-attributes\" operation\
    \ attribute MAY,\n         but NEED NOT, be returned with the unsupported values.\n\
    \      successful-ok-conflicting-attributes:  same as Print-Job.\n   For the error\
    \ status codes, Group 3 is returned containing no\n   attributes or is not returned\
    \ at all:\n      client-error-not-possible:  Same as Print-Job, in addition the\n\
    \         Printer object is not accepting any requests.\n      client-error-request-entity-too-large:\
    \  same as Print-job, except\n         that no print data is involved.\n     \
    \ client-error-attributes-or-values-not-supported:  not applicable,\n        \
    \ since unsupported operation attributes MUST be ignored and '\n         successful-ok-ignored-or-substituted-attributes'\
    \ returned.\n      client-error-conflicting-attributes:  same as Print-Job, except\n\
    \         that \"ipp-attribute-fidelity\" is not involved.\n      server-error-operation-not-supported:\
    \  not applicable (since Get-\n         Printer-Attributes is REQUIRED).\n   \
    \   server-error-device-error:  same as Print-Job, except that no\n         document\
    \ data is involved.\n      server-error-temporary-error:  same as Print-Job, except\
    \ that no\n         document data is involved.\n      server-error-not-accepting-jobs:\
    \  not applicable.\n      server-error-busy:  same as Print-Job, except the IPP\
    \ object is\n         too busy to accept even query requests.\n      server-error-job-canceled:\
    \  not applicable.\n"
- title: 2.3.1.6   Get-Jobs
  contents:
  - "2.3.1.6   Get-Jobs\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to the Get-Jobs operation with\
    \ the\n   following specializations and differences.   See Section 14 for a\n\
    \   more complete description of each status code.\n   For the following success\
    \ status codes, the requested attributes are\n   returned in Group 3 in the response:\n\
    \      successful-ok:  no request attributes were substituted or ignored\n   \
    \      (same as Print-Job) and no requested attributes were\n         unsupported.\n\
    \      successful-ok-ignored-or-substituted-attributes:   same as Print-\n   \
    \      Job, except the \"requested-attributes\" operation attribute MAY,\n   \
    \      but NEED NOT, be returned with the unsupported values.\n      successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For any error status codes, Group 3 is returned containing\
    \ no\n   attributes or is not returned at all.  The following brief error\n  \
    \ status code descriptions contain unique information for use with\n   Get-Jobs\
    \ operation.  See section 14 for the other error status codes\n   that apply uniformly\
    \ to all operations:\n      client-error-not-possible:  Same as Print-Job, in\
    \ addition the\n         Printer object is not accepting any requests.\n     \
    \ client-error-request-entity-too-large:  same as Print-job, except\n        \
    \ that no print data is involved.\n      client-error-document-format-not-supported:\
    \  not applicable.\n      client-error-attributes-or-values-not-supported:  not\
    \ applicable,\n         since unsupported operation attributes MUST be ignored\
    \ and '\n         successful-ok-ignored-or-substituted-attributes' returned.\n\
    \      client-error-conflicting-attributes:  same as Print-Job, except\n     \
    \    that \"ipp-attribute-fidelity\" is not involved.\n      server-error-operation-not-supported:\
    \  not applicable (since Get-\n         Jobs is REQUIRED).\n      server-error-device-error:\
    \  same as Print-Job, except that no\n         document data is involved.\n  \
    \    server-error-temporary-error:  same as Print-Job, except that no\n      \
    \   document data is involved.\n      server-error-not-accepting-jobs:  not applicable.\n\
    \      server-error-job-canceled:  not applicable.\n"
- title: 2.3.2 Job Operations
  contents:
  - '2.3.2 Job Operations

    '
- title: 2.3.2.1   Send-Document
  contents:
  - "2.3.2.1   Send-Document\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to the Get-Printer-Attributes\n\
    \   operation with the following specializations and differences.   See\n   Section\
    \ 14 for a more complete description of each status code.\n   For the following\
    \ success status codes, the document has been added\n   to the specified Job object\
    \ and the job's \"number-of-documents\"\n   attribute has been incremented:\n\
    \      successful-ok:  no request attributes were substituted or ignored\n   \
    \      (same as Print-Job).\n      successful-ok-ignored-or-substituted-attributes:\
    \  same as Print-\n         Job.\n      successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For the error status codes, no document has been added\
    \ to the Job\n   object and the job's \"number-of-documents\" attribute has not\
    \ been\n   incremented:\n      client-error-not-possible: Same as Print-Job, except\
    \ that the\n         Printer's \"printer-is-accepting-jobs\" attribute is not\n\
    \         involved, so that the client is able to finish submitting a\n      \
    \   multi-document job after this attribute has been set to 'true'.\n        \
    \ Another condition is that the state of the job precludes Send-\n         Document,\
    \ i.e., the job has already been closed out by the\n         client.  However,\
    \ if the IPP Printer closed out the job due to\n         timeout, the 'client-error-timeout'\
    \ error status SHOULD  be\n         returned instead.\n      client-error-timeout:\
    \  This request was sent after the Printer\n         closed the job, because it\
    \ has not received a Send-Document or\n         Send-URI operation within the\
    \ Printer's \"multiple-operation-\n         time-out\" period.\n      client-error-request-entity-too-large:\
    \  same as Print-Job.\n      client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that \"ipp-attributes-fidelity\" operation attribute is not\n\
    \         involved.\n      server-error-operation-not-supported:  the Send-Document\
    \ request\n         is not supported.\n      server-error-not-accepting-jobs:\
    \  not applicable.\n      server-error-job-canceled:  the job has been canceled\
    \ by an\n         operator or the system while the client was transmitting the\n\
    \         data.\n"
- title: 2.3.2.2   Send-URI
  contents:
  - "2.3.2.2   Send-URI\n   All of the Print-Job status code descriptions in Section\
    \ 3.2.1.2\n   Print-Job Response with the specializations described for Send-\n\
    \   Document are applicable to Send-URI.  See Section 14 for a more\n   complete\
    \ description of each status code.\n      server-error-uri-scheme-not-supported:\
    \  the URI scheme supplied in\n         the \"document-uri\" operation attribute\
    \ is not supported and the\n         \"document-uri\" attribute MUST be returned\
    \ in the Unsupported\n         Attributes group.\n"
- title: 2.3.2.3   Cancel-Job
  contents:
  - "2.3.2.3   Cancel-Job\n   All of the Print-Job status codes described in Section\
    \ 3.2.1.2\n   Print-Job Response are applicable to Cancel-Job with the following\n\
    \   specializations and differences.  See Section 14 for a more complete\n   description\
    \ of each status code.\n   For the following success status codes, the Job object\
    \ is being\n   canceled or has been canceled:\n      successful-ok:  no request\
    \ attributes were substituted or ignored\n         (same as Print-Job).\n    \
    \  successful-ok-ignored-or-substituted-attributes:   same as Print-\n       \
    \  Job.\n      successful-ok-conflicting-attributes:  same as Print-Job.\n   For\
    \ any of the error status codes, the Job object has not been\n   canceled or was\
    \ previously canceled.\n      client-error-not-possible:  The request cannot be\
    \ carried out\n         because of the state of the Job object ('completed', '\n\
    \         canceled', or 'aborted') or the state of the system.\n      client-error-not-found:\
    \  the target Printer and/or Job object does\n         not exist.\n      client-error-gone:\
    \  the target Printer and/or Job object no longer\n         exists and no forwarding\
    \ address is known.\n      client-error-request-entity-too-large:  same as Print-Job,\
    \ except\n         no document data is involved.\n      client-error-document-format-not-supported:\
    \  not applicable.\n      client-error-attributes-or-values-not-supported:  not\
    \ applicable,\n         since unsupported operation attributes and values MUST\
    \ be\n         ignored.\n      client-error-conflicting-attributes:  same as Print-Job,\
    \ except\n         that the Printer's \"printer-is-accepting-jobs\" attribute\
    \ is not\n         involved.\n      server-error-operation-not-supported:  not\
    \ applicable (Cancel-Job\n         is REQUIRED).\n      server-error-device-error:\
    \  same as Print-Job, except no document\n         data is involved.\n      server-error-temporary-error:\
    \  same as Print-Job, except no\n         document data is involved.\n      server-error-not-accepting-jobs:\
    \  not applicable.\n      server-error-job-canceled:  not applicable.\n"
- title: 2.3.2.4   Get-Job-Attributes
  contents:
  - "2.3.2.4   Get-Job-Attributes\n   All of the Print-Job status codes described\
    \ in Section 3.2.1.2\n   Print-Job Response are applicable to Get-Job-Attributes\
    \ with the\n   following specializations and differences.  See Section 14 for\
    \ a more\n   complete description of each status code.\n   For the following success\
    \ status codes, the requested attributes are\n   returned in Group 3 in the response:\n\
    \      successful-ok:  no request attributes were substituted or ignored\n   \
    \      (same as Print-Job) and no requested attributes were\n         unsupported.\n\
    \      successful-ok-ignored-or-substituted-attributes:   same as Print-\n   \
    \      Job, except the \"requested-attributes\" operation attribute MAY,\n   \
    \      but NEED NOT, be returned with the unsupported values.\n      successful-ok-conflicting-attributes:\
    \  same as Print-Job.\n   For the error status codes, Group 3 is returned containing\
    \ no\n   attributes or is not returned at all.\n      client-error-not-possible:\
    \  Same as Print-Job, in addition the\n         Printer object is not accepting\
    \ any requests.\n      client-error-document-format-not-supported:  not applicable.\n\
    \      client-error-attributes-or-values-not-supported:  not applicable.\n   \
    \   client-error-uri-scheme-not-supported:  not applicable.\n      client-error-conflicting-attributes:\
    \  not applicable\n      server-error-operation-not-supported:  not applicable\
    \ (since Get-\n         Job-Attributes is REQUIRED).\n      server-error-device-error:\
    \  same as Print-Job, except no document\n         data is involved.\n      server-error-temporary-error:\
    \  sane as Print-Job, except no\n         document data is involved.\n      server-error-not-accepting-jobs:\
    \  not applicable.  server-error-\n      job-canceled:  not applicable.\n"
- title: 2.4 Validate-Job
  contents:
  - "2.4 Validate-Job\n   The Validate-Job operation has been designed so that its\n\
    \   implementation may be a part of the Print-Job operation.  Therefore,\n   requiring\
    \ Validate-Job is not a burden on implementers.  Also it is\n   useful for client's\
    \ to be able to count on its presence in all\n   conformance implementations,\
    \ so that the client can determine before\n   sending a long document, whether\
    \ the job will be accepted by the IPP\n   Printer or not.\n"
- title: 2.5 Case Sensitivity in URIs
  contents:
  - "2.5 Case Sensitivity in URIs\n   IPP client and server implementations must be\
    \ aware of the diverse\n   uppercase/lowercase nature of URIs.  RFC 2396 defines\
    \ URL schemes and\n   Host names as case insensitive but reminds us that the rest\
    \ of the\n   URL may well demonstrate case sensitivity.  When creating URL's for\n\
    \   fields where the choice is completely arbitrary, it is probably best\n   to\
    \ select lower case.  However, this cannot be guaranteed and\n   implementations\
    \ MUST NOT rely on any fields being case-sensitive or\n   case-insensitive in\
    \ the URL beyond the URL scheme and host name\n   fields.\n   The reason that\
    \ the IPP specification does not make any restrictions\n   on URIs, is so that\
    \ implementations of IPP may use off-the-shelf\n   components that conform to\
    \ the standards that define URIs, such as\n   RFC 2396 and the HTTP/1.1 specifications\
    \ [RFC2068].  See these\n   specifications for rules of matching, comparison,\
    \ and case-\n   sensitivity.\n   It is also recommended that System Administrators\
    \ and implementations\n   avoid creating URLs for different printers that differ\
    \ only in their\n   case.  For example, don't have Printer1 and printer1 as two\
    \ different\n   IPP Printers.\n   The HTTP/1.1 specification [RFC2068] contains\
    \ more details on\n   comparing URLs.\n"
- title: 2.6 Character Sets, natural languages, and internationalization
  contents:
  - "2.6 Character Sets, natural languages, and internationalization\n   This section\
    \ discusses character set support, natural language\n   support and internationalization.\n"
- title: 2.6.1 Character set code conversion support
  contents:
  - "2.6.1 Character set code conversion support\n   IPP clients and IPP objects are\
    \ REQUIRED to support UTF-8.  They MAY\n   support additional charsets.  It is\
    \ RECOMMENDED that an IPP object\n   also support US-ASCII, since many clients\
    \ support US-ASCII, and\n   indicate that UTF-8 and US-ASCII are supported by\
    \ populating the\n   Printer's \"charset-supported\" with 'utf-8' and 'us-ascii'\
    \ values.  An\n   IPP object is required to code covert with as little loss as\
    \ possible\n   between the charsets that it supports, as indicated in the Printer's\n\
    \   \"charsets-supported\" attribute.\n   How should the server handle the situation\
    \ where the \"attributes-\n   charset\" of the response itself is \"us-ascii\"\
    , but one or more\n   attributes in that response is in the \"utf-8\" format?\n\
    \   Example:  Consider a case where a client sends a Print-Job request\n   with\
    \ \"utf-8\" as the value of \"attributes-charset\" and with the \"job-\n   name\"\
    \ attribute supplied.  Later another client submits a Get-Job-\n   Attribute or\
    \ Get-Jobs request.  This second request contains the\n   \"attributes-charset\"\
    \ with value \"us-ascii\" and \"requested-attributes\"\n   attribute with exactly\
    \ one value \"job-name\".\n   According to the RFC2566 document (section 3.1.4.2),\
    \ the value of the\n   \"attributes-charset\" for the response of the second request\
    \ must be\n   \"us-ascii\" since that is the charset specified in the request.\
    \  The\n   \"job-name\" value, however, is in \"utf-8\" format.  Should the request\n\
    \   be rejected even though both \"utf-8\" and \"us-ascii\" charsets are\n   supported\
    \ by the server? or should the \"job-name\" value be converted\n   to \"us-ascii\"\
    \ and return \"successful-ok-conflicting-attributes\"\n   (0x0002) as the status\
    \ code?\n   Answer:  An IPP object that supports both utf-8 (REQUIRED) and us-\n\
    \   ascii, the second paragraph of section 3.1.4.2 applies so that the\n   IPP\
    \ object MUST accept the request, perform code set conversion\n   between these\
    \ two charsets with \"the highest fidelity possible\" and\n   return 'successful-ok',\
    \ rather than a warning 'successful-ok-\n   conflicting-attributes, or an error.\
    \  The printer will do the best it\n   can to convert between each of the character\
    \ sets that it supports--\n   even if that means providing a string of question\
    \ marks because none\n   of the characters are representable in US ASCII.  If\
    \ it can't perform\n   such conversion, it MUST NOT advertise us-ascii as a value\
    \ of its\n   \"attributes-charset-supported\" and MUST reject any request that\n\
    \   requests 'us-ascii'.\n   One IPP object implementation strategy is to convert\
    \ all request text\n   and name values to a Unicode internal representation. \
    \ This is 16-bit\n   and virtually universal.  Then convert to the specified operation\n\
    \   attributes-charset on output.\n   Also it would be smarter for a client to\
    \ ask for 'utf-8', rather than\n   'us-ascii' and throw away characters that it\
    \ doesn't understand,\n   rather than depending on the code conversion of the\
    \ IPP object.\n"
- title: 2.6.2 What charset to return when an unsupported charset is requested?
  contents:
  - "2.6.2 What charset to return when an unsupported charset is requested?\n   Section\
    \ 3.1.4.1 Request Operation attributes was clarified in\n   November 1998 as follows:\n\
    \      All clients and IPP objects MUST support the 'utf-8' charset\n      [RFC2044]\
    \ and MAY support additional charsets provided that they\n      are registered\
    \ with IANA [IANA-CS].  If the Printer object does\n      not support the client\
    \ supplied charset value, the Printer object\n      MUST reject the request, set\
    \ the \"attributes-charset\" to 'utf-8'\n      in the response, and return the\
    \ 'client-error-charset-not-\n      supported' status code and any 'text' or 'name'\
    \ attributes using\n      the 'utf-8' charset.\n   Since the client and IPP object\
    \ MUST support UTF-8, returning any\n   text or name attributes in UTF-8 when\
    \ the client requests a charset\n   that is not supported should allow the client\
    \ to display the text or\n   name.\n   Since such an error is a client error,\
    \ rather than a user error, the\n   client should check the status code first\
    \ so that it can avoid\n   displaying any other returned 'text' and 'name' attributes\
    \ that are\n   not in the charset requested.\n   Furthermore, [RFC2566] section\
    \ 14.1.4.14 client-error-charset-not-\n   supported (0x040D) was clarified in\
    \ November 1998 as follows:\n      For any operation, if the IPP Printer does\
    \ not support the charset\n      supplied by the client in the \"attributes-charset\"\
    \ operation\n      attribute, the Printer MUST reject the operation and return\
    \ this\n      status and any 'text' or 'name' attributes using the 'utf-8'\n \
    \     charset (see Section 3.1.4.1).\n"
- title: 2.6.3 Natural Language Override (NLO)
  contents:
  - "2.6.3 Natural Language Override (NLO)\n   The 'text' and 'name' attributes each\
    \ have two forms.  One has an\n   implicit natural language, and the other has\
    \ an explicit natural\n   language.  The 'textWithoutLanguage' and 'textWithoutLanguage'\
    \ are\n   the two 'text' forms.  The 'nameWithoutLanguage\" and '\n   nameWithLanguage\
    \ are the two 'name' forms.  If a receiver (IPP object\n   or IPP client) supports\
    \ an attribute with attribute syntax 'text', it\n   MUST support both forms in\
    \ a request and a response.  A sender (IPP\n   client or IPP object) MAY send\
    \ either form for any such attribute.\n   When a sender sends a WithoutLanguage\
    \ form, the implicit natural\n   language is specified in the \"attributes-natural-language\"\
    \ operation\n   attribute which all senders MUST include in every request and\n\
    \   response.\n   When a sender sends a WithLanguage form, it MAY be different\
    \ from the\n   implicit natural language supplied by the sender or it MAY be the\n\
    \   same.  The receiver MUST treat either form equivalently.\n   There is an implementation\
    \ decision for senders, whether to always\n   send the WithLanguage forms or use\
    \ the WithoutLanguage form when the\n   attribute's natural language is the same\
    \ as the request or response.\n   The former approach makes the sender implementation\
    \ simpler.  The\n   latter approach is more efficient on the wire and allows inter-\n\
    \   working with non-conforming receivers that fail to support the\n   WithLanguage\
    \ forms.  As each approach have advantages, the choice is\n   completely up to\
    \ the implementer of the sender.\n   Furthermore, when a client receives a 'text'\
    \ or 'name' job attribute\n   that it had previously supplied, that client MUST\
    \ NOT expect to see\n   the attribute in the same form, i.e., in the same WithoutLanguage\
    \ or\n   WithLanguage form as the client supplied when it created the job.\n \
    \  The IPP object is free to transform the attribute from the\n   WithLanguage\
    \ form to the WithoutLanguage form and vice versa, as long\n   as the natural\
    \ language is preserved.  However, in order to meet this\n   latter requirement,\
    \ it is usually simpler for the IPP object\n   implementation to store the natural\
    \ language explicitly with the\n   attribute value, i.e., to store using an internal\
    \ representation that\n   resembles the WithLanguage form.\n   The IPP Printer\
    \ MUST copy the natural language of a job, i.e., the\n   value of the \"attributes-natural-language\"\
    \ operation attribute\n   supplied by the client in the create operation, to the\
    \ Job object as\n   a Job Description attribute, so that a client is able to query\
    \ it.\n   In returning a Get-Job-Attributes response, the IPP object MAY return\n\
    \   one of three natural language values in the response's \"attributes-\n   natural-language\"\
    \ operation attribute: (1) that requested by the\n   requester, (2) the natural\
    \ language of the job, or (3) the configured\n   natural language of the IPP Printer,\
    \ if the requested language is not\n   supported by the IPP Printer.\n   This\
    \ \"attributes-natural-language\" Job Description attribute is\n   useful for\
    \ an IPP object implementation that prints start sheets in\n   the language of\
    \ the user who submitted the job.  This same Job\n   Description attribute is\
    \ useful to a multi-lingual operator who has\n   to communicate with different\
    \ job submitters in different natural\n   languages.  This same Job Description\
    \ attribute is expected to be\n   used in the future to generate notification\
    \ messages in the natural\n   language of the job submitter.\n   Early drafts\
    \ of [RFC2566] contained a job-level natural language\n   override (NLO) for the\
    \ Get-Jobs response.  A job-level (NLO) is an\n   (unrequested) Job Attribute\
    \ which then specified the implicit natural\n   language for any other WithoutLanguage\
    \ job attributes returned in the\n   response for that job.  Interoperability\
    \ testing of early\n   implementations showed that no one was implementing the\
    \ job-level NLO\n   in Get-Job responses.  So the job-level NLO was eliminated\
    \ from the\n   Get- Jobs response.  This simplification makes all requests and\n\
    \   responses consistent in that the implicit natural language for any\n   WithoutLanguage\
    \ 'text' or 'name' form is always supplied in the\n   request's or response's\
    \ \"attributes-natural-language\" operation\n   attribute.\n"
- title: 2.7 The "queued-job-count" Printer Description attribute
  contents:
  - '2.7 The "queued-job-count" Printer Description attribute

    '
- title: 2.7.1 Why is "queued-job-count" RECOMMENDED?
  contents:
  - "2.7.1 Why is \"queued-job-count\" RECOMMENDED?\n   The reason that \"queued-job-count\"\
    \ is RECOMMENDED, is that some\n   clients look at that attribute alone when summarizing\
    \ the status of a\n   list of printers, instead of doing a Get-Jobs to determine\
    \ the number\n   of jobs in the queue.  Implementations that fail to support the\n\
    \   \"queued-job-count\" will cause that client to display 0 jobs when\n   there\
    \ are actually queued jobs.\n   We would have made it a REQUIRED Printer attribute,\
    \ but some\n   implementations had already been completed before the issue was\n\
    \   raised, so making it a SHOULD was a compromise.\n"
- title: 2.7.2 Is "queued-job-count" a good measure of how busy a printer is?
  contents:
  - "2.7.2 Is \"queued-job-count\" a good measure of how busy a printer is?\n   The\
    \ \"queued-job-count\" is not a good measure of how busy the printer\n   is when\
    \ there are held jobs.  A future registration could be to add a\n   \"held-job-count\"\
    \ (or an \"active-job-count\") Printer Description\n   attribute if experience\
    \ shows that such an attribute (combination) is\n   needed to quickly indicate\
    \ how busy a printer really is.\n"
- title: 2.8 Sending empty attribute groups
  contents:
  - "2.8 Sending empty attribute groups\n   The [RFC2566] and [RFC2565] specifications\
    \ RECOMMEND that a sender\n   not send an empty attribute group in a request or\
    \ a response.\n   However, they REQUIRE a receiver to accept an empty attribute\
    \ group\n   as equivalent to the omission of that group.  So a client SHOULD omit\n\
    \   the Job Template Attributes group entirely in a create operation that\n  \
    \ is not supplying any Job Template attributes.  Similarly, an IPP\n   object\
    \ SHOULD omit an empty Unsupported Attributes group if there are\n   no unsupported\
    \ attributes to be returned in a response.\n   The [RFC2565] specification REQUIRES\
    \ a receiver to be able to receive\n   either an empty attribute group or an omitted\
    \ attribute group and\n   treat them equivalently.  The term \"receiver\" means\
    \ an IPP object for\n   a request and a client for a response.  The term \"sender'\
    \ means a\n   client for a request and an IPP object for a response.\n   There\
    \ is an exception to the rule for Get-Jobs when there are no\n   attributes to\
    \ be returned.  [RFC2565] contains the following\n   paragraph:\n      The syntax\
    \ allows an xxx-attributes-tag to be present when the\n      xxx-attribute-sequence\
    \ that follows is empty. The syntax is\n      defined this way to allow for the\
    \ response of Get-Jobs where no\n      attributes are returned for some job-objects.\
    \  Although it is\n      RECOMMENDED that the sender not send an xxx-attributes-tag\
    \ if\n      there are no attributes (except in the Get-Jobs response just\n  \
    \    mentioned), the receiver MUST be able to decode such syntax.\n"
- title: 2.9 Returning unsupported attributes in Get-Xxxx responses
  contents:
  - "2.9 Returning unsupported attributes in Get-Xxxx responses\n   In the Get-Printer-Attributes,\
    \ Get-Jobs, or Get-Job-Attributes\n   responses, the client cannot depend on getting\
    \ unsupported attributes\n   returned in the Unsupported Attributes group that\
    \ the client\n   requested, but are not supported by the IPP object.  However,\
    \ such\n   unsupported requested attributes will not be returned in the Job\n\
    \   Attributes or Printer Attributes group (since they are unsupported).\n   Furthermore,\
    \ the IPP object is REQUIRED to return the 'successful-\n   ok-ignored-or-substituted-attributes'\
    \ status code, so that the client\n   knows that not all that was requested has\
    \ been returned.\n"
- title: 2.10 Returning job-state in Print-Job response
  contents:
  - "2.10 Returning job-state in Print-Job response\n   An IPP client submits a small\
    \ job via Print-Job.  By the time the IPP\n   printer/print server is putting\
    \ together a response to the operation,\n   the job has finished printing and\
    \ been removed as an object from the\n   print system.  What should the job-state\
    \ be in the response?\n   The Model suggests that the Printer return a response\
    \ before it even\n   accepts the document content.  The Job Object Attributes\
    \ are returned\n   only if the IPP object returns one of the success status codes.\
    \ Then\n   the job-state would always be \"pending\" or \"pending-held\".\n  \
    \ This issue comes up for the implementation of an IPP Printer object\n   as a\
    \ server that forwards jobs to devices that do not provide job\n   status back\
    \ to the server.  If the server is reasonably certain that\n   the job completed\
    \ successfully, then it should return the job-state\n   as 'completed'.  Also\
    \ the server can keep the job in its \"job\n   history\" long after the job is\
    \ no longer in the device.  Then a user\n   could query the server and see that\
    \ the job was in the 'completed'\n   state and completed as specified by the job's\
    \ \"time-at-completed\"\n   time which would be the same as the server submitted\
    \ the job to the\n   device.\n   An alternative is for the server to respond to\
    \ the client before or\n   while sending the job to the device, instead of waiting\
    \ until the\n   server has finished sending the job to the device.  In this case,\
    \ the\n   server can return the job's state as 'pending' with the 'job-\n   outgoing'\
    \ value in the job's \"job-state-reasons\" attribute.\n   If the server doesn't\
    \ know for sure whether the job completed\n   successfully (or at all), it could\
    \ return the (out-of-band) 'unknown'\n   value.\n   On the other hand, if the\
    \ server is able to query the device and/or\n   setup some sort of event notification\
    \ that the device initiates when\n   the job makes state transitions, then the\
    \ server can return the\n   current job state in the Print-Job response and in\
    \ subsequent queries\n   because the server knows what the job state is in the\
    \ device (or can\n   query the device).\n   All of these alternatives depend on\
    \ implementation of the server and\n   the device.\n"
- title: 2.11 Flow controlling the data portion of a Print-Job request
  contents:
  - "2.11 Flow controlling the data portion of a Print-Job request\n   A paused printer\
    \ (or one that is stopped due to paper out or jam or\n   spool space full or buffer\
    \ space full, may flow control the data of a\n   Print-Job operation (at the TCP/IP\
    \ layer), so that the client is not\n   able to send all the document data.  Consequently,\
    \ the Printer will\n   not return a response until the condition is changed.\n\
    \   The Printer should not return a Print-Job response with an error code\n  \
    \ in any of these conditions, since either the printer will be resumed\n   and/or\
    \ the condition will be freed either by human intervention or as\n   jobs print.\n\
    \   In writing test scripts to test IPP Printers, the script must also be\n  \
    \ written not to expect a response, if the printer has been paused,\n   until\
    \ the printer is resumed, in order to work with all possible\n   implementations.\n"
- title: 2.12 Multi-valued attributes
  contents:
  - "2.12 Multi-valued attributes\n   What is the attribute syntax for a multi-valued\
    \ attribute?  Since\n   some attributes support values in more than one data type,\
    \ such as\n   \"media\", \"job-hold-until\", and \"job-sheets\", IPP semantics\
    \ associate\n   the attribute syntax with each value, not with the attribute as\
    \ a\n   whole.  The protocol associates the attribute syntax tag with each\n \
    \  value.  Don't be fooled, just because the attribute syntax tag comes\n   before\
    \ the attribute keyword.  All attribute values after the first\n   have a zero\
    \ length attribute keyword as the indication of a\n   subsequent value of the\
    \ same attribute.\n"
- title: 2.13 Querying jobs with IPP that were submitted using other job
  contents:
  - "2.13 Querying jobs with IPP that were submitted using other job\n     submission\
    \ protocols\n   The following clarification was added to [RFC2566] section 8.5:\n\
    \      8.5 Queries on jobs submitted using non-IPP protocols\n      If the device\
    \ that an IPP Printer is representing is able to\n      accept jobs using other\
    \ job submission protocols in addition to\n      IPP, it is RECOMMEND that such\
    \ an implementation at least allow\n      such \"foreign\" jobs to be queried\
    \ using Get-Jobs returning \"job-\n      id\" and \"job-uri\" as 'unknown'.  Such\
    \ an implementation NEED NOT\n      support all of the same IPP job attributes\
    \ as for IPP jobs.  The\n      IPP object returns the 'unknown' out-of-band value\
    \ for any\n      requested attribute of a foreign job that is supported for IPP\n\
    \      jobs, but not for foreign jobs.\n      It is further RECOMMENDED, that\
    \ the IPP Printer generate \"job-id\"\n      and \"job-uri\" values for such \"\
    foreign jobs\", if possible, so that\n      they may be targets of other IPP operations,\
    \ such as Get-Job-\n      Attributes and Cancel-Job.  Such an implementation also\
    \ needs to\n      deal with the problem of authentication of such foreign jobs.\
    \  One\n      approach would be to treat all such foreign jobs as belonging to\n\
    \      users other than the user of the IPP client.  Another approach\n      would\
    \ be for the foreign job to belong to 'anonymous'.  Only if\n      the IPP client\
    \ has been authenticated as an operator or\n      administrator of the IPP Printer\
    \ object, could the foreign jobs be\n      queried by an IPP request.  Alternatively,\
    \ if the security policy\n      is to allow users to query other users' jobs,\
    \ then the foreign\n      jobs would also be visible to an end-user IPP client\
    \ using Get-\n      Jobs and Get-Job-Attributes.\n   Thus IPP MAY be implemented\
    \ as a \"universal\" protocol that provides\n   access to jobs submitted with\
    \ any job submission protocol.  As IPP\n   becomes widely implemented, providing\
    \ a more universal access makes\n   sense.\n"
- title: 2.14 The 'none' value for empty sets
  contents:
  - "2.14 The 'none' value for empty sets\n   [RFC2566] states that the 'none' value\
    \ should be used as the value of\n   a 1SetOf when the set is empty. In most cases,\
    \ sets that are\n   potentially empty contain keywords so the keyword 'none' is\
    \ used, but\n   for the 3 finishings attributes, the values are enums and thus\
    \ the\n   empty set is represented by the enum 3.  Currently there are no other\n\
    \   attributes with 1SetOf values which can be empty and can contain\n   values\
    \ that are not keywords.  This exception requires special code\n   and is a potential\
    \ place for bugs.  It would have been better if we\n   had chosen an out-of-band\
    \ value, either \"no-value\" or some new value,\n   such as 'none'.  Since we\
    \ didn't, implementations have to deal with\n   the different representations\
    \ of 'none', depending on the attribute\n   syntax.\n"
- title: 2.15 Get-Jobs, my-jobs='true', and 'requesting-user-name'?
  contents:
  - "2.15 Get-Jobs, my-jobs='true', and 'requesting-user-name'?\n   In [RFC2566] section\
    \ 3.2.6.1 'Get-Jobs Request', if the attribute '\n   my-jobs' is present and set\
    \ to TRUE, MUST the 'requesting-user-name'\n   attribute be there to, and if it's\
    \ not present what should the IPP\n   printer do?\n   [RFC2566] Section 8.3 describes\
    \ the various cases of \"requesting-\n   user-name\" being present or not for\
    \ any operation.  If the client\n   does not supply a value for \"requesting-user-name\"\
    , the printer MUST\n   assume that the client is supplying some anonymous name,\
    \ such as\n   \"anonymous\".\n"
- title: 2.16 The "multiple-document-handling" Job Template attribute and support
  contents:
  - "2.16 The \"multiple-document-handling\" Job Template attribute and support\n\
    \     of multiple document jobs\n   ISSUE:  IPP/1.0 is silent on which of the\
    \ four effects an\n   implementation would perform if it supports Create-Job,\
    \ but does not\n   support \"multiple-document-handling\".\n   A fix to IPP/1.0\
    \ would be to require implementing all four values of\n   \"multiple-document-handling\"\
    \ if Create-Job is supported at all.  Or\n   at least 'single-document-new-sheet'\
    \ and 'separate-documents-\n   uncollated-copies'.  In any case, an implementation\
    \ that supports\n   Create-Job SHOULD also support \"multiple-document-handling\"\
    .  Support\n   for all four values is RECOMMENDED, but at least the 'single-\n\
    \   document-new-sheet' and 'separate-documents-uncollated-copies'\n   values,\
    \ along with the \"multiple-document-handling-default\"\n   indicating the default\
    \ behavior and \"multiple-document-handling-\n   supported\" values.  If an implementation\
    \ spools the data, it should\n   also support the 'separate-documents-collated-copies'\
    \ value as well.\n"
- title: 3  Encoding and Transport
  contents:
  - "3  Encoding and Transport\n   This section discusses various aspects of IPP/1.0\
    \ Encoding and\n   Transport [RFC2565].\n   A server is not required to send a\
    \ response until after it has\n   received the client.s entire request.  Hence,\
    \ a client must not\n   expect a response until after it has sent the entire request.\n\
    \   However, we recommend that the server return a response as soon as\n   possible\
    \ if an error is detected while the client is still sending\n   the data, rather\
    \ than waiting until all of the data is received.\n   Therefore, we also recommend\
    \ that a client listen for an error\n   response that an IPP server MAY send before\
    \ it receives all the data.\n   In this case a client, if chunking the data, can\
    \ send a premature\n   zero-length chunk to end the request before sending all\
    \ the data (and\n   so the client can keep the connection open for other requests,\
    \ rather\n   than closing it). If the request is blocked for some reason, a client\n\
    \   MAY determine the reason by opening another connection to query the\n   server\
    \ using Get-Printer-Attributes.\n   In the following sections, there are a tables\
    \ of all HTTP headers\n   which describe their use in an IPP client or server.\
    \  The following\n   is an explanation of each column in these tables.\n     \
    \ - the .header. column contains the name of a header.\n      - the .request/client.\
    \ column indicates whether a client sends the\n        header.\n      - the .request/\
    \ server. column indicates whether a server supports\n        the header when\
    \ received.\n      - the .response/ server. column indicates whether a server\
    \ sends\n        the header.\n      - the .response /client. column indicates\
    \ whether a client\n        supports the header when received.\n      - the .values\
    \ and conditions. column specifies the allowed header\n        values and the\
    \ conditions for the header to be present in a\n        request/response.\n  \
    \ The table for .request headers. does not have columns for responses,\n   and\
    \ the table for .response headers. does not have columns for\n   requests.\n \
    \  The following is an explanation of the values in the .request/client.\n   and\
    \ .response/ server. columns.\n      - must: the client or server MUST send the\
    \ header,\n      - must-if: the client or server MUST send the header when the\n\
    \        condition described in the .values and conditions. column is\n      \
    \  met,\n      - may: the client or server MAY send the header\n      - not: the\
    \ client or server SHOULD NOT send the header. It is not\n        relevant to\
    \ an IPP implementation.\n   The following is an explanation of the values in\
    \ the\n   .response/client.  and .request/ server. columns.\n      - must: the\
    \ client or server MUST support the header,\n      - may: the client or server\
    \ MAY support the header\n      - not: the client or server SHOULD NOT support\
    \ the header. It is\n        not relevant to an IPP implementation.\n"
- title: 3.1 General Headers
  contents:
  - "3.1 General Headers\n   The following is a table for the general headers.\n \
    \  General-     Request         Response       Values and Conditions\n   Header\n\
    \                Client  Server Server Client\n   Cache-       must    not   \
    \ must   not     .no-cache. only\n   Control\n   Connection   must-if must   must-\
    \  must    .close. only. Both\n                                if            \
    \ client and server\n                                                SHOULD keep\
    \ a\n                                                connection for the\n    \
    \                                            duration of a sequence\n        \
    \                                        of operations. The\n                \
    \                                client and server MUST\n                    \
    \                            include this header\n                           \
    \                     for the last operation\n                               \
    \                 in such a sequence.\n   Date         may     may    must   may\
    \     per RFC 1123 [RFC1123]\n                                               \
    \ from RFC 2068\n                                                [RFC2068]\n \
    \  Pragma       must    not    must   not     .no-cache. only\n   Transfer-  \
    \  must-if must   must-  must    .chunked. only .\n   Encoding               \
    \      if             Header MUST be present\n                               \
    \                 if Content-Length is\n                                     \
    \           absent.\n   Upgrade      not     not    not    not\n   Via       \
    \   not     not    not    not\n"
- title: 3.2 Request  Headers
  contents:
  - "3.2 Request  Headers\n   The following is a table for the request headers.\n\
    \   Request-Header   Client   Server  Request Values and Conditions\n   Accept\
    \           may      must    .application/ipp. only.  This\n                 \
    \                     value is the default if the\n   Request-Header   Client\
    \   Server  Request Values and Conditions\n                                  \
    \    client omits it\n   Accept-Charset   not      not      Charset information\
    \ is within\n                                      the application/ipp entity\n\
    \   Accept-Encoding  may      must    empty and per RFC 2068 [RFC2068]\n     \
    \                                 and IANA registry for content-\n           \
    \                           codings\n   Accept-Language  not      not     language\
    \ information is within\n                                      the application/ipp\
    \ entity\n   Authorization    must-if  must    per RFC 2068. A client MUST send\n\
    \                                      this header when it receives a\n      \
    \                                401 .Unauthorized. response and\n           \
    \                           does not receive a  .Proxy-\n                    \
    \                  Authenticate. header.\n   From             not      not   \
    \  per RFC 2068. Because RFC\n                                      recommends\
    \ sending this header\n                                      only with the user.s\
    \ approval, it\n                                      is not very useful\n   Host\
    \             must     must    per RFC 2068\n   If-Match         not      not\n\
    \   If-Modified-     not      not\n   Since\n   If-None-Match    not      not\n\
    \   If-Range         not      not\n   If-Unmodified-   not      not\n   Since\n\
    \   Max-Forwards     not      not\n   Proxy-           must-if  not     per RFC\
    \ 2068. A client MUST send\n   Authorization                      this header\
    \ when it receives a\n                                      401 .Unauthorized.\
    \ response and a\n                                      .Proxy-Authenticate. header.\n\
    \   Range            not      not\n   Referer          not      not\n   User-Agent\
    \       not      not\n"
- title: 3.3 Response Headers
  contents:
  - "3.3 Response Headers\n   The following is a table for the request headers.\n\
    \   Response-      Server  Client  Response Values and Conditions\n   Header\n\
    \   Accept-Ranges  not     not\n   Age            not     not\n   Location   \
    \    must-if may     per RFC 2068. When URI needs\n                          \
    \         redirection.\n   Proxy-         not     must    per RFC 2068\n   Authenticate\n\
    \   Public         may     may     per RFC 2068\n   Retry-After    may     may\
    \     per RFC 2068\n   Server         not     not\n   Vary           not     not\n\
    \   Warning        may     may     per RFC 2068\n   WWW-           must-if must\
    \    per RFC 2068. When a server needs to\n   Authenticate                   \
    \ authenticate a client.\n"
- title: 3.4 Entity  Headers
  contents:
  - "3.4 Entity  Headers\n   The following is a table for the entity headers.\n  \
    \ Entity-Header  Request         Response        Values and Conditions\n     \
    \             Client  Server Server  Client\n   Allow          not     not   \
    \ not     not\n   Content-Base   not     not    not     not\n   Content-     \
    \  may     must   must    must   per RFC 2068 and IANA\n   Encoding          \
    \                             registry for content\n                         \
    \                         codings.\n   Content-       not     not    not     not\
    \    Application/ipp\n   Language                                       handles\
    \ language\n   Content-       must-if must   must-if must   the length of the\n\
    \   Length                                         message-body per RFC\n    \
    \                                              2068. Header MUST be\n        \
    \                                          present if Transfer-\n   Entity-Header\
    \  Request         Response        Values and Conditions\n                  Client\
    \  Server Server  Client\n                                                  Encoding\
    \ is absent.\n   Content-       not     not    not     not\n   Location\n   Content-MD5\
    \    may     may    may     may    per RFC 2068\n   Content-Range  not     not\
    \    not     not\n   Content-Type   must    must   must    must   .application/ipp.\n\
    \                                                  only\n   ETag           not\
    \     not    not     not\n   Expires        not     not    not     not\n   Last-Modified\
    \  not     not    not     not\n"
- title: 3.5 Optional support for HTTP/1.0
  contents:
  - "3.5 Optional support for HTTP/1.0\n   IPP implementations consist of an HTTP\
    \ layer and an IPP layer.  In\n   the following discussion, the term \"client\"\
    \ refers to the HTTP client\n   layer and the term \"server\" refers to the HTTP\
    \ server layer.  The\n   Encoding and Transport document [RFC2565] requires that\
    \ HTTP 1.1 MUST\n   be supported by all clients and all servers.  However, a client\n\
    \   and/or a server implementation may choose to also support HTTP 1.0.\n   -\
    \ This option means that a server may choose to communicate with a\n     (non-conforming)\
    \ client that only supports HTTP 1.0.  In such cases\n     the server should not\
    \ use any HTTP 1.1 specific parameters or\n     features and should respond using\
    \ HTTP version number 1.0.\n   - This option also means that a client may choose\
    \ to communicate with\n     a (non-conforming) server that only supports HTTP\
    \ 1.0.  In such\n     cases, if the server responds with an HTTP .unsupported\
    \ version\n     number. to an HTTP 1.1 request, the client should retry using\
    \ HTTP\n     version number 1.0.\n"
- title: 3.6 HTTP/1.1 Chunking
  contents:
  - '3.6 HTTP/1.1 Chunking

    '
- title: 3.6.1 Disabling IPP Server Response Chunking
  contents:
  - "3.6.1 Disabling IPP Server Response Chunking\n   Clients MUST anticipate that\
    \ the HTTP/1.1 server may chunk responses\n   and MUST accept them in responses.\
    \  However, a (non-conforming) HTTP\n   client that is unable to accept chunked\
    \ responses may attempt to\n   request an HTTP 1.1 server not to use chunking\
    \ in its response to an\n   operation by using the following HTTP header:\n  \
    \      TE: identity\n   This mechanism should not be used by a server to disable\
    \ a client\n   from chunking a request, since chunking of document data is an\n\
    \   important feature for clients to send long documents.\n"
- title: 3.6.2 Warning About the Support of Chunked Requests
  contents:
  - "3.6.2 Warning About the Support of Chunked Requests\n   This section describes\
    \ some problems with the use of chunked requests\n   and HTTP/1.1 servers.\n \
    \  The HTTP/1.1 standard [HTTP] requires that conforming servers support\n   chunked\
    \ requests for any method.  However, in spite of this\n   requirement, some HTTP/1.1\
    \ implementations support chunked responses\n   in the GET method, but do not\
    \ support chunked POST method requests.\n   Some HTTP/1.1 implementations that\
    \ support CGI scripts [CGI] and/or\n   servlets [Servlet] require that the client\
    \ supply a Content-Length.\n   These implementations might reject a chunked POST\
    \ method and return a\n   411 status code (Length Required), might attempt to\
    \ buffer the\n   request and run out of room returning a 413 status code (Request\n\
    \   Entity Too Large), or might successfully accept the chunked request.\n   Because\
    \ of this lack of conformance of HTTP servers to the HTTP/1.1\n   standard, the\
    \ IPP standard [RFC2565] REQUIRES that a conforming IPP\n   Printer object implementation\
    \ support chunked requests and that\n   conforming clients accept chunked responses.\
    \  Therefore, IPP object\n   implementers are warned to seek HTTP server implementations\
    \ that\n   support chunked POST requests in order to conform to the IPP standard\n\
    \   and/or use implementation techniques that support chunked POST\n   requests.\n"
- title: 4  References
  contents:
  - "4  References\n   [CGI]     Coar, K. and D. Robinson, \"The WWW Common Gateway\
    \ Interface\n             Version 1.1 (CGI/1.1)\", Work in Progress.\n   [HTTP]\
    \    Fielding, R., Gettys,J., Mogul, J., Frystyk,, H., Masinter,\n           \
    \  L., Leach, P. and T. Berners-Lee, \"Hypertext Transfer\n             Protocol\
    \ -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2569] Herriot, R., Hastings, T.,\
    \ Jacobs, N. and J. Martin,\n             \"Mapping between LPD and IPP Protocols\"\
    , RFC 2569, April\n             1999.\n   [RFC2566] deBry, R., Hastings, T., Herriot,\
    \ R., Isaacson, S. and P.\n             Powell, \"Internet Printing Protocol/1.0:\
    \ Model and\n             Semantics\", RFC 2566, April 1999.\n   [RFC2565] Herriot,\
    \ R., Butler, S., Moore, P. and R. Tuner, \"Internet\n             Printing Protocol/1.0:\
    \ Encoding and Transport\", RFC 2565,\n             April 1999.\n   [RFC2568]\
    \ Zilles, S., \"Rationale for the Structure and Model and\n             Protocol\
    \ for the Internet Printing Protocol\", RFC 2568,\n             April 1999.\n\
    \   [RFC2567] Wright, D., \"Design Goals for an Internet Printing\n          \
    \   Protocol\", RFC 2567, April 1999.\n   [RFC1123] Braden, S., \"Requirements\
    \ for Internet Hosts - Application\n             and Support\", STD 3, RFC 1123,\
    \ October 1989.\n   [RFC2026] Bradner, S., \"The Internet Standards Process --\
    \ Revision\n             3\", BCP 9, RFC 2026, October 1996.\n   [RFC2068] Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H. and T.\n             Berners-Lee, \"\
    Hypertext Transfer Protocol -- HTTP/1.1\", RFC\n             2068, January 1997.\n\
    \   [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n         \
    \    Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2396] Berners-Lee,\
    \ T., Fielding, R. and L. Masinter, \"Uniform\n             Resource Identifiers\
    \ (URI): Generic Syntax\", RFC 2396,\n             August 1998.\n   [Servlet]\
    \ Servlet Specification Version 2.1\n             (http://java.sun.com/products/servlet/2.1/index.html).\n\
    \   [SSL]     Netscape, The SSL Protocol, Version 3, (Text version 3.02),\n  \
    \           November 1996.\n"
- title: 4.1 Authors' Addresses
  contents:
  - "4.1 Authors' Addresses\n   Thomas N. Hastings\n   Xerox Corporation\n   701 Aviation\
    \ Blvd.\n   El Segundo, CA 90245\n   EMail: hastings@cp10.es.xerox.com\n   Carl-Uno\
    \ Manros\n   Xerox Corporation\n   701 Aviation Blvd.\n   El Segundo, CA 90245\n\
    \   EMail: manros@cp10.es.xerox.com\n"
- title: 5  Security Considerations
  contents:
  - "5  Security Considerations\n   Security issues are discussed in sections 2.2,\
    \ 2.3.1, and 8.5.\n"
- title: 6  Notices
  contents:
  - "6  Notices\n   The IETF takes no position regarding the validity or scope of\
    \ any\n   intellectual property or other rights that might be claimed to\n   pertain\
    \ to the implementation or use of the technology described in\n   this document\
    \ or the extent to which any license under such rights\n   might or might not\
    \ be available; neither does it represent that it\n   has made any effort to identify\
    \ any such rights.  Information on the\n   IETF's procedures with respect to rights\
    \ in standards-track and\n   standards-related documentation can be found in BCP-11\
    \ [BCP-11].\n   Copies of claims of rights made available for publication and\
    \ any\n   assurances of licenses to be made available, or the result of an\n \
    \  attempt made to obtain a general license or permission for the use of\n   such\
    \ proprietary rights by implementers or users of this\n   specification can be\
    \ obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
