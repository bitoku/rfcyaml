- title: __initial_text__
  contents:
  - ' Application Bridging for Federated Access Beyond Web (ABFAB) Use Cases

    '
- title: Abstract
  contents:
  - "Abstract\n   Federated identity is typically associated with web-based services\
    \ at\n   present, but there is growing interest in its application in non-web-\n\
    \   based contexts.  The goal of this memo is to document a selection of\n   the\
    \ wide variety of these contexts whose user experience could be\n   improved through\
    \ the use of technologies based on the Application\n   Bridging for Federated\
    \ Access Beyond web (ABFAB) architecture and\n   specifications.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7832.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Context of Use Cases ............................................3\n  \
    \ 3. Use Cases .......................................................3\n    \
    \  3.1. Cloud Services .............................................3\n      \
    \     3.1.1. Cloud-Based Application Services ....................4\n        \
    \   3.1.2. Cloud-Based Infrastructure Services .................5\n      3.2.\
    \ High-Performance Computing .................................6\n      3.3. Grid\
    \ Infrastructure ........................................6\n      3.4. Databases\
    \ and Directories ..................................7\n      3.5. Media Streaming\
    \ ............................................8\n      3.6. Printing ...................................................9\n\
    \      3.7. Accessing Applications from Devices on a Telecoms\n           Infrastructure\
    \ .............................................9\n      3.8. Enhanced Security\
    \ Services for S/MIME .....................10\n      3.9. Smart Objects .............................................11\n\
    \   4. Security Considerations ........................................11\n  \
    \ 5. References .....................................................12\n    \
    \  5.1. Normative References ......................................12\n      5.2.\
    \ Informative References ....................................12\n   Acknowledgments\
    \ ...................................................13\n   Contributors ......................................................13\n\
    \   Author's Address ..................................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Federated identity facilitates the controlled sharing of\
    \ information\n   about people (a.k.a. \"principals\"), commonly across organizational\n\
    \   boundaries.  This avoids redundant registration of principals who\n   operate\
    \ in and across multiple domains, both reducing the\n   administrative overhead\
    \ for the organizations involved and improving\n   the usability of systems for\
    \ the principal.  Simultaneously, it can\n   also help address privacy-related\
    \ concerns, along with the regulatory\n   and statutory requirements of some jurisdictions.\n\
    \   The information that is passed between organizations may include\n   authentication\
    \ state and identity information that can be used for\n   many purposes, including\
    \ making access management decisions.  A\n   number of mechanisms support the\
    \ transmission of this information for\n   web-based scenarios in particular (e.g.,\
    \ the Security Assertion\n   Markup Language (SAML) [OASIS.saml-profiles-2.0-os]),\
    \ but there is\n   significant interest in the more general application of federated\n\
    \   identity to include non-web use cases.  This document enumerates some\n  \
    \ of these use cases, describing how technologies based on the ABFAB\n   architecture\
    \ [RFC7831] and specifications could be used.\n"
- title: 2.  Context of Use Cases
  contents:
  - "2.  Context of Use Cases\n   The use cases described in this document are a result\
    \ of work led by\n   Jisc, the operator of the United Kingdom's education and\
    \ research\n   network, responding to requirements from its community.  These\
    \ use\n   cases have also been augmented by various inputs from the IETF\n   community.\n\
    \   The ABFAB architecture and specifications enables authentication and\n   authorization\
    \ to occur across organizational boundaries.  For many\n   applications, principals\
    \ need not have pre-instantiated accounts that\n   their federated identity maps\
    \ to before their first visit to that\n   application; the application can perform\
    \ this process on the fly.  In\n   cases where such accounts are required for\
    \ particular applications,\n   the pre-provisioning process is out of scope; the\
    \ ABFAB technology\n   assumes that any such requirements have already been fulfilled.\n\
    \   Standards-based work of note that would assist with this\n   pre-provisioning\
    \ of accounts includes the standards and\n   specifications produced by the IETF\
    \ SCIM working group.\n"
- title: 3.  Use Cases
  contents:
  - "3.  Use Cases\n   This section describes some of the various potential use cases\
    \ where\n   technologies based on the ABFAB architecture and specifications could\n\
    \   help improve the user experience; each includes a brief description\n   of\
    \ how current technologies attempt to solve the use cases and how\n   this could\
    \ be improved upon by ABFAB implementations.\n"
- title: 3.1.  Cloud Services
  contents:
  - "3.1.  Cloud Services\n   Cloud computing is emerging as a common way of provisioning\n\
    \   infrastructure services in an on-demand manner.  These services are\n   typically\
    \ offered as one of three models:\n   o  General infrastructure services such\
    \ as computing power, networks,\n      storage, and utilities (\"Infrastructure\
    \ as a Service\", or IaaS);\n   o  Software stacks or platforms such as database\
    \ servers, web\n      servers, and application runtime environments (\"Platform\
    \ as a\n      Service\", or PaaS);\n   o  Common application software such as\
    \ email, shared storage,\n      business applications such as Customer Relationship\
    \ Management\n      (CRM), or scientific applications (\"Software as a Service\"\
    ,\n      or SaaS).\n   In many cases, the provisioned cloud infrastructures and\
    \ applications\n   need to be integrated with existing infrastructure of the\n\
    \   organization, and it is of course desirable if this could be achieved\n  \
    \ in a way that allows business or scientific workflows to act across\n   infrastructure\
    \ -- both across the cloud and in the local\n   infrastructure -- in as seamless\
    \ a manner as possible.\n   There are two main areas where federated access fits\
    \ in cloud\n   computing:\n   o  Using federation to help mediate access to cloud-based\
    \ application\n      services (e.g., cloud-provided email or CRM systems);\n \
    \  o  Using federation to help mediate access to the management of\n      cloud-based\
    \ infrastructure services.\n"
- title: 3.1.1.  Cloud-Based Application Services
  contents:
  - "3.1.1.  Cloud-Based Application Services\n   Many organizations are seeking to\
    \ deliver services to their users\n   through the use of providers based in the\
    \ \"cloud\".  This is typically\n   motivated by a desire to avoid management\
    \ and operation of commodity\n   services that, through economies of scale and\
    \ so forth, can often be\n   delivered more efficiently by such providers.\n \
    \  Many providers already provide web-based access using conventional\n   federated\
    \ authentication mechanisms -- for example, outsourced email\n   provision where\
    \ federated access is enabled using \"webmail\"\n   applications where access\
    \ is mediated through the use of SAML\n   [OASIS.saml-profiles-2.0-os].  This\
    \ use of federated authentication\n   enables organizations that consume cloud\
    \ services to more efficiently\n   orchestrate the delivery of these services\
    \ to their users and also\n   enables single sign-on to the services for these\
    \ users.\n   Frequently, however, users will prefer to use desktop applications\n\
    \   that do not use web (i.e., based on HTTP) protocols.  For example, a\n   desktop\
    \ email client may use a variety of non-web protocols,\n   including SMTP [RFC5321],\
    \ IMAP [RFC3501], and the Post Office\n   Protocol (POP) [RFC1939].  Some cloud\
    \ providers support access to\n   their services using non-web protocols; however,\
    \ the authentication\n   mechanisms used by these protocols will typically require\
    \ that the\n   provider has access to the user's credentials -- i.e., non-federated.\n\
    \   Consequently, the provider will require that users' credentials are\n   regularly\
    \ synchronized from the user organization to the provider,\n   with the obvious\
    \ overhead this imparts on the organization along with\n   the obvious implications\
    \ for security and privacy, or else be\n   provisioned directly by the provider\
    \ to the user.\n   The latter approach of directly provisioning accounts may be\n\
    \   acceptable in the case where an organization has relationships with\n   only\
    \ a small number of providers, but this approach may become\n   untenable if an\
    \ organization obtains services from many providers.\n   Consequently, any organization\
    \ with a requirement to use non-web\n   protocols would prefer to make use of\
    \ the credentials that they have\n   already provisioned their users with, and\
    \ to utilize federated\n   authentication with non-web protocols to obtain access\
    \ to cloud-based\n   providers.\n   ABFAB could help in this context, as its specifications\
    \ would enable\n   federated authentication for a variety of non-web protocols,\
    \ thus\n   gaining the benefits of federated authentication without any of the\n\
    \   drawbacks that are currently experienced.\n"
- title: 3.1.2.  Cloud-Based Infrastructure Services
  contents:
  - "3.1.2.  Cloud-Based Infrastructure Services\n   Typical IaaS or PaaS cloud use\
    \ cases deal with provisioning on-demand\n   cloud-based infrastructure services\
    \ that may include infrastructure\n   components such as computing and storage\
    \ resources, network\n   infrastructure, and other utilities.  Cloud-based virtualized\n\
    \   applications should ideally operate in the same way as regular\n   non-virtualized\
    \ applications whilst allowing management of the\n   virtual computing resources\
    \ (scaling, migration, reconfiguration)\n   without changing the management applications.\n\
    \   In many cases, moving applications or platforms to the cloud may\n   require\
    \ their redesigning/refactoring to support dynamic deployment\n   and configuration,\
    \ including their security services, and\n   authentication and authorization\
    \ services.  These will typically\n   today be extensively based on manual setup\
    \ and configuration of such\n   components and features as trusted certificates\
    \ and trust anchors,\n   authorities and trusted services (both their location\
    \ and\n   certificates), attribute namespaces, and policies.\n   ABFAB could help\
    \ in this context as a way of moving from the model of\n   manually configured\
    \ authentication and authorization towards a more\n   easily managed system involving\
    \ federated trust and identity, and\n   ABFAB will be applicable for a wide range\
    \ of existing features (e.g.,\n   connecting to a newly provisioned Virtual Machine\
    \ through\n   ABFAB-enabled Secure Shell (SSH) [RFC4251] instead of having to\n\
    \   manually manage an administrative login to that machine).\n"
- title: 3.2.  High-Performance Computing
  contents:
  - "3.2.  High-Performance Computing\n   High-Performance Computing (HPC) is a discipline\
    \ that uses\n   supercomputers and computer clusters to solve complex computation\n\
    \   problems; it is most commonly associated with scientific research or\n   computational\
    \ science.\n   Access to HPC resources, often mediated through technologies such\
    \ as\n   SSH, is typically managed through the use of user digital\n   certificates\
    \ [RFC5280] or through manually provisioned credentials\n   and accounts.  This\
    \ requires HPC operators to issue certificates or\n   accounts to users using\
    \ a registration process that often duplicates\n   identity management processes\
    \ that already exist within most user\n   organizations.  The HPC community would\
    \ like to utilize federated\n   identity to perform both the user registration\
    \ and authentication\n   functions required to use HPC resources, and so reduce\
    \ costs by\n   avoiding this duplication of effort.\n   The HPC community also\
    \ have the following additional requirements:\n   o  Improve business continuity:\
    \ In the event of operational issues at\n      an HPC system at one organization\
    \ (for example, a power failure),\n      users and jobs could be transparently\
    \ moved to other HPC systems\n      without the overhead of having to manage user\
    \ credentials for\n      multiple organizations;\n   o  Establish \"HPC as a service\"\
    : Many organizations who have invested\n      in HPC systems want to make their\
    \ systems easily available to\n      external customers.  Federated authentication\
    \ facilitates this by\n      enabling these customers to use their existing identity\n\
    \      management, user credentialing, and support processes;\n   o  Improve the\
    \ user experience: Authentication to HPC systems is\n      normally performed\
    \ using user digital certificates, which some\n      users find difficult to use.\
    \  Federated authentication can provide\n      a better user experience by allowing\
    \ the use of other types of\n      credentials, without requiring technical modifications\
    \ to the HPC\n      system to support these.\n   ABFAB could help in this context,\
    \ as it could enable federated\n   authentication for many of the protocols and\
    \ technologies currently\n   in use by HPC providers, such as SSH.\n"
- title: 3.3.  Grid Infrastructure
  contents:
  - "3.3.  Grid Infrastructure\n   Grids are large-scale distributed infrastructures,\
    \ consisting of many\n   loosely coupled, independently managed, and geographically\n\
    \   distributed resources managed by organizationally independent\n   providers.\
    \  Users of grids utilize these resources using grid\n   middleware that allows\
    \ them to submit and control computing jobs,\n   manipulate datasets, communicate\
    \ with other users, etc.  These users\n   are organized into Virtual Organizations\
    \ (VOs); each VO represents a\n   group of people working collaboratively on a\
    \ common project.  VOs\n   facilitate both the management of their users and the\
    \ meditation of\n   agreements between their users and resource providers.\n \
    \  Authentication and authorization within most grids are performed\n   using\
    \ a Public Key Infrastructure, requiring each user to have an\n   X.509 public-key\
    \ certificate [RFC5280].  Authentication is performed\n   through ownership of\
    \ a particular certificate, while authorization\n   decisions are made based on\
    \ the user's identity (derived from their\n   X.509 certificate), membership of\
    \ a particular VO, or additional\n   information assigned to a user by a VO. \
    \ While efficient and\n   scalable, this approach has been found wanting in terms\
    \ of usability\n   -- many users find certificates difficult to manage, for various\n\
    \   reasons.\n   One approach to ameliorating this issue, adopted to some extent\
    \ by\n   some grid communities already, is to abstract away direct access to\n\
    \   certificates from users, instead using alternative authentication\n   mechanisms\
    \ and then converting the credential provided by these into\n   standard grid\
    \ certificates.  Some implementations of this idea use\n   existing federated\
    \ authentication techniques.  However, current\n   implementations of this approach\
    \ suffer from a number of problems,\n   not the least of which is the inability\
    \ to use the federated\n   credentials used to authenticate to a credential-conversion\
    \ portal to\n   also directly authenticate to non-web resources such as SSH daemons.\n\
    \   The ability to use federated authentication directly through ABFAB,\n   without\
    \ the use of a credential-conversion service, would allow users\n   to authenticate\
    \ to a grid and its associated services, allowing them\n   to directly launch\
    \ and control computing jobs, all without having to\n   manage, or even see, an\
    \ X.509 public-key certificate at any point in\n   the process.  Authorization\
    \ within the grid would still be performed\n   using VO membership as asserted\
    \ by the user's Identity Provider (IdP)\n   through the federated transport.\n"
- title: 3.4.  Databases and Directories
  contents:
  - "3.4.  Databases and Directories\n   Databases (e.g., MySQL, PostgreSQL, Oracle)\
    \ and directory\n   technologies (e.g., OpenLDAP (http://www.openldap.org/), Microsoft\n\
    \   Active Directory, Novell eDirectory) are very commonly used within\n   many\
    \ organizations for a variety of purposes.  Such purposes can\n   include core\
    \ administrative functions, such as hosting identity\n   information for its users,\
    \ as well as business functions (e.g.,\n   student records systems at educational\
    \ organizations).\n   Access to such database and directory systems is usually\
    \ provided for\n   internal users only; however, users external to the organizations\n\
    \   sometimes require access to these systems directly -- for example,\n   external\
    \ examiners in educational organizations requiring access to\n   student records\
    \ systems, members of cross-organizational project\n   teams who store information\
    \ in a particular organization's systems,\n   and external auditors.\n   Credentials\
    \ for users either internal or external to the organization\n   that allow access\
    \ to these databases and directories are usually\n   provisioned manually within\
    \ an organization, either using identity\n   management technologies or through\
    \ more manual processes.  For the\n   internal users, this situation is fine --\
    \ this is one of the\n   mainstays of identity management.  However, for external\
    \ users who\n   require access, this represents more of a problem for organizational\n\
    \   processes.  The organization has to either (1) add these external\n   users\
    \ to its internal identity management systems or (2) provision\n   these credentials\
    \ directly within the database/directory systems and\n   continue to manage them,\
    \ including appropriate access controls\n   associated with each credential, for\
    \ the lifetime of that credential.\n   Federated authentication to databases or\
    \ directories, via ABFAB\n   technologies, would improve upon this situation,\
    \ as it would remove\n   the need to provision and de-provision credentials to\
    \ access these\n   systems.  Organizations may still wish to manually manage access\n\
    \   control of federated identities; however, even this could be provided\n  \
    \ through federated means, if the trust relationship between\n   organizations\
    \ was strong enough for the organization providing the\n   service to rely upon\
    \ it for this purpose.\n"
- title: 3.5.  Media Streaming
  contents:
  - "3.5.  Media Streaming\n   Media streaming services (audio or audio/video) are\
    \ often provided\n   publicly to anonymous users, but authentication is important\
    \ for a\n   protected subset of streams where rights management and access\n \
    \  control must be applied.\n   Streams can be delivered via protocols that already\
    \ include\n   authentication, such as the Real Time Streaming Protocol (RTSP)\n\
    \   [RFC2326] or RTP [RFC3550], or can be published in an encrypted form\n   with\
    \ keys only being distributed to trusted users.  Federated\n   authentication\
    \ is applicable to both of these cases.\n   Alternative mechanisms to managing\
    \ access exist -- for example, an\n   approach where a unique stream URI is minted\
    \ for each user.  However,\n   this relies on preserving the secrecy of the stream\
    \ URI and also\n   requires a communication channel between the web page used\
    \ for\n   authentication and the streaming service itself.  Federated\n   authentication\
    \ would be a better fit for this kind of access control.\n   Thus, ABFAB technologies\
    \ that allow federated authentication directly\n   within (inherently non-web)\
    \ media streaming protocols would represent\n   an enhancement to this area.\n"
- title: 3.6.  Printing
  contents:
  - "3.6.  Printing\n   A visitor from one organization to the premises of another\
    \ often\n   requires the use of print services.  Their home organization may of\n\
    \   course offer printing, but the output could be a long way away, so\n   the\
    \ home service is not useful.  The user will typically want to\n   print from\
    \ within a desktop or mobile application.\n   Where this service is currently\
    \ offered, it would usually be achieved\n   through the use of \"open\" printers\
    \ (i.e., printers that allow\n   anonymous print requests), where printer availability\
    \ is advertised\n   through the use of Bonjour or other similar protocols.  If\
    \ the\n   organization requires authenticated print requests (usually for\n  \
    \ accounting purposes), the visitor would usually have to be given\n   credentials\
    \ that allow this, often supplemented with pay-as-you-go\n   style payment systems.\n\
    \   Adding federated authentication to the Internet Printing Protocol\n   (IPP)\
    \ [RFC2911] (and other relevant protocols) would enable this kind\n   of remote\
    \ printing service without the administrative overhead of\n   credentialing these\
    \ visitors (who, of course, may well be one-time\n   visitors to the organization).\
    \  This would be immediately applicable\n   to higher education, where this use\
    \ case is increasingly important\n   thanks to the success of federated network\
    \ authentication systems\n   such as eduroam (https://www.eduroam.org), but could\
    \ also be used in\n   other contexts such as commercial print kiosks, or in large\n\
    \   heterogeneous organizations.\n"
- title: 3.7.  Accessing Applications from Devices on a Telecoms Infrastructure
  contents:
  - "3.7.  Accessing Applications from Devices on a Telecoms Infrastructure\n   Telecom\
    \ operators typically have the following properties:\n   o  A large collection\
    \ of registered users, many of whom may have\n      identities registered to a\
    \ fairly high level of assurance (often\n      for payment purposes).  However,\
    \ not all users will have this\n      property -- for example, non-contract customers\
    \ on mobile telecoms\n      infrastructures in countries with low levels of identity\n\
    \      registration requirements.\n   o  An existing network infrastructure capable\
    \ of authenticating a\n      device (e.g., a cellphone or an Asymmetric Digital\
    \ Subscriber Line\n      (ADSL) router) and, by inference, its owner.\n   o  A\
    \ large collection of applications (both web-based and\n      non-web-based) that\
    \ its users wish to access using their devices.\n      These applications could\
    \ be hosted by the telecom operator\n      directly, or they could be any application\
    \ or system on the\n      internet -- for example, network messaging services,\
    \ VoIP,\n      or email.\n   At present, authentication to these applications\
    \ will be typically\n   configured manually by the user on the device (or on a\
    \ different\n   device connected to that device) by inputting their (usually\n\
    \   pre-provisioned out of band) credentials for that application -- one\n   per\
    \ application.\n   The use of ABFAB technologies in this case, via a mechanism\
    \ dubbed\n   \"federated cross-layer access\" (see [FCLA]) would greatly enhance\
    \ the\n   user experience of using these applications through devices.\n   Federated\
    \ cross-layer access would make use of the initial mutual\n   authentication between\
    \ device and network, to allow subsequent\n   authentication and authorization\
    \ to happen in a seamless manner for\n   the user of that device authenticating\
    \ to applications.\n"
- title: 3.8.  Enhanced Security Services for S/MIME
  contents:
  - "3.8.  Enhanced Security Services for S/MIME\n   There are many situations where\
    \ organizations want to protect\n   information with robust access control, either\
    \ for implementation of\n   intellectual property right protections, for enforcement\
    \ of\n   contractual confidentiality agreements, or because of legal\n   regulations.\
    \  The Enhanced Security Services (ESS) for S/MIME defines\n   an access control\
    \ mechanism that is enforced by the recipient's\n   client after decryption of\
    \ the message (see [MSG-AC-REQ]).  The data\n   model used makes use of Policy\
    \ Decision Points (PDPs), which make the\n   policy decisions; Policy Enforcement\
    \ Points (PEPs), which make\n   decision requests to the PDP; and Policy Information\
    \ Points (PIPs),\n   which issue attributes about subjects.  The decisions themselves\
    \ are\n   based on the policies and on the subject attributes.\n   The use of\
    \ ABFAB technologies in this case would enable both the\n   front-end and back-end\
    \ attribute exchange required to provide subject\n   attributes.  When the PEP\
    \ contacts the PDP, it would initiate an\n   ABFAB authentication in order to\
    \ authenticate to the PDP and allow it\n   to obtain these required subject attributes.\
    \  Once authenticated, the\n   PDP would return a token to the subject PEP that\
    \ could then be used\n   for subsequent authentications to the PDP.\n"
- title: 3.9.  Smart Objects
  contents:
  - "3.9.  Smart Objects\n   Many smart device deployments involve multiple organizations\
    \ that do\n   not directly share security infrastructure.  For example, in smart\n\
    \   power deployments, devices (e.g., appliances) and infrastructure\n   (e.g.,\
    \ electric car chargers) will wish to connect to an energy\n   management system.\
    \  The energy management system is provided by a\n   utility company in some deployments.\
    \  The utility company may wish to\n   grant access only to authorized devices;\
    \ for example, a consortium of\n   utility companies and device manufacturers\
    \ may certify devices to\n   connect to power networks.\n   In another example,\
    \ consumer devices may be used to access cloud\n   services.  For example, a camera\
    \ could be bound to a photo processing\n   site.  Authentication and authorization\
    \ for uploading pictures or\n   ordering prints are required.  Sensors could be\
    \ used to provide data\n   to services run by organizations other than the sensor\
    \ manufacturer.\n   Authorization and authentication can become very tricky when\
    \ sensors\n   have no user interface.  Cellular devices may want to access services\n\
    \   provided by a third party, regardless of whether the cellular network\n  \
    \ or Wi-Fi is used.  This becomes difficult when authorization and\n   billing\
    \ are coordinated by the cellular provider.\n   The use of ABFAB technologies\
    \ in this case would provide\n   authentication between one entity, such as a\
    \ smart device, and its\n   IdP.  Only two parties are involved in this exchange;\
    \ this means that\n   the smart device need not participate in any complicated\
    \ public-key\n   infrastructure even if it is authenticating against many cloud\n\
    \   services.  Instead, the device can delegate the process of\n   authenticating\
    \ the service, and even deciding whether the device\n   should be permitted to\
    \ access the service, to the IdP.  This has\n   several advantages.  A wide variety\
    \ of revenue-sharing models are\n   enabled.  Because device authentication is\
    \ only with a single IdP,\n   phishing of device credentials can be avoided. \
    \ Authorization and\n   decisions about what personal information to release are\
    \ made by the\n   IdP.  The device owner can use a rich interface such as a website\
    \ to\n   configure authorization and privacy policy even if the device has no\n\
    \   user interface.  This model works well with pre-provisioning of\n   device\
    \ credentials.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document contains only use cases and defines\
    \ no protocol\n   operations for ABFAB.  Security considerations for the ABFAB\n\
    \   architecture are documented in [RFC7831], and security considerations\n  \
    \ for ABFAB technologies and protocols that are discussed in these use\n   cases\
    \ are documented in the corresponding protocol specifications.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC7831]  Howlett, J., Hartman, S., Tschofenig,\
    \ H., and J. Schaad,\n              \"Application Bridging for Federated Access\
    \ Beyond Web\n              (ABFAB) Architecture\", RFC 7831, DOI 10.17487/RFC7831,\n\
    \              May 2016, <http://www.rfc-editor.org/info/rfc7831>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [FCLA]     Wei, Y., Ed., \"Federated Cross-Layer\
    \ Access\", Work in\n              Progress, draft-wei-abfab-fcla-02, March 2012.\n\
    \   [MSG-AC-REQ]\n              Freeman, T., Schaad, J., and P. Patterson, \"\
    Requirements\n              for Message Access Control\", Work in Progress,\n\
    \              draft-freeman-plasma-requirements-11, March 2015.\n   [OASIS.saml-profiles-2.0-os]\n\
    \              Hughes, J., Cantor, S., Hodges, J., Hirsch, F., Mishra,\n     \
    \         P., Philpott, R., and E. Maler, \"Profiles for the OASIS\n         \
    \     Security Assertion Markup Language (SAML) V2.0\", OASIS\n              Standard\
    \ OASIS.saml-profiles-2.0-os, March 2005,\n              <http://docs.oasis-open.org/security/saml/v2.0/\n\
    \              saml-profiles-2.0-os.pdf>.\n   [RFC1939]  Myers, J. and M. Rose,\
    \ \"Post Office Protocol - Version 3\",\n              STD 53, RFC 1939, DOI 10.17487/RFC1939,\
    \ May 1996,\n              <http://www.rfc-editor.org/info/rfc1939>.\n   [RFC2326]\
    \  Schulzrinne, H., Rao, A., and R. Lanphier, \"Real Time\n              Streaming\
    \ Protocol (RTSP)\", RFC 2326,\n              DOI 10.17487/RFC2326, April 1998,\n\
    \              <http://www.rfc-editor.org/info/rfc2326>.\n   [RFC2911]  Hastings,\
    \ T., Ed., Herriot, R., deBry, R., Isaacson, S.,\n              and P. Powell,\
    \ \"Internet Printing Protocol/1.1: Model and\n              Semantics\", RFC\
    \ 2911, DOI 10.17487/RFC2911,\n              September 2000, <http://www.rfc-editor.org/info/rfc2911>.\n\
    \   [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL -\n           \
    \   VERSION 4rev1\", RFC 3501, DOI 10.17487/RFC3501,\n              March 2003,\
    \ <http://www.rfc-editor.org/info/rfc3501>.\n   [RFC3550]  Schulzrinne, H., Casner,\
    \ S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport Protocol\
    \ for Real-Time\n              Applications\", STD 64, RFC 3550, DOI 10.17487/RFC3550,\n\
    \              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n   [RFC4251]\
    \  Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH)\n              Protocol\
    \ Architecture\", RFC 4251, DOI 10.17487/RFC4251,\n              January 2006,\
    \ <http://www.rfc-editor.org/info/rfc4251>.\n   [RFC5280]  Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n              Infrastructure Certificate and Certificate Revocation\
    \ List\n              (CRL) Profile\", RFC 5280, DOI 10.17487/RFC5280, May 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5280>.\n   [RFC5321]  Klensin,\
    \ J., \"Simple Mail Transfer Protocol\", RFC 5321,\n              DOI 10.17487/RFC5321,\
    \ October 2008,\n              <http://www.rfc-editor.org/info/rfc5321>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   These use cases have been developed and documented using\
    \ significant\n   input from Jens Jensen (STFC Rutherford Appleton Laboratory),\
    \ Daniel\n   Kouril (CESNET), Michal Prochazka (CESNET), Ian Stewart (University\n\
    \   of Edinburgh), Stephen Booth (Edinburgh Parallel Computing Centre),\n   Eefje\
    \ van der Harst (SURFnet), Joost van Dijk (SURFnet), Robin\n   Breathe (Oxford\
    \ Brookes University), Yinxing Wei (ZTE Corporation),\n   Trevor Freeman (Microsoft\
    \ Corporation), Sam Hartman (Painless\n   Security, LLC), and Yuri Demchenko (University\
    \ of Amsterdam).\n"
- title: Contributors
  contents:
  - "Contributors\n   The following individuals made important contributions to the\
    \ text of\n   this document: Tim Bannister (Manchester University), Simon Cooper\n\
    \   (Jisc), Josh Howlett (Jisc), and Mark Tysom (Jisc).\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Dr. Rhys Smith (editor)\n   Jisc\n   Lumen House, Library\
    \ Avenue, Harwell\n   Oxford  OX11 0SG\n   United Kingdom\n   Phone: +44 1235\
    \ 822145\n   Email: rhys.smith@jisc.ac.uk\n"
