- title: __initial_text__
  contents:
  - '                           JSON Web Key (JWK)

    '
- title: Abstract
  contents:
  - "Abstract\n   A JSON Web Key (JWK) is a JavaScript Object Notation (JSON) data\n\
    \   structure that represents a cryptographic key.  This specification\n   also\
    \ defines a JWK Set JSON data structure that represents a set of\n   JWKs.  Cryptographic\
    \ algorithms and identifiers for use with this\n   specification are described\
    \ in the separate JSON Web Algorithms (JWA)\n   specification and IANA registries\
    \ established by that specification.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7517.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Notational Conventions  . . . . . . . . . . . . .\
    \ . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   3.  Example JWK . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n   4.  JSON Web Key (JWK) Format . . . . . . . . . . . . . . . . .\
    \ .   5\n     4.1.  \"kty\" (Key Type) Parameter  . . . . . . . . . . . . . .\
    \ .   6\n     4.2.  \"use\" (Public Key Use) Parameter  . . . . . . . . . . .\
    \ .   6\n     4.3.  \"key_ops\" (Key Operations) Parameter  . . . . . . . . .\
    \ .   7\n     4.4.  \"alg\" (Algorithm) Parameter . . . . . . . . . . . . . .\
    \ .   8\n     4.5.  \"kid\" (Key ID) Parameter  . . . . . . . . . . . . . . .\
    \ .   8\n     4.6.  \"x5u\" (X.509 URL) Parameter . . . . . . . . . . . . . .\
    \ .   8\n     4.7.  \"x5c\" (X.509 Certificate Chain) Parameter . . . . . . .\
    \ .   9\n     4.8.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Parameter  .\
    \ .   9\n     4.9.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint)\n    \
    \       Parameter . . . . . . . . . . . . . . . . . . . . . . . .  10\n   5. \
    \ JWK Set Format  . . . . . . . . . . . . . . . . . . . . . . .  10\n     5.1.\
    \  \"keys\" Parameter  . . . . . . . . . . . . . . . . . . . .  10\n   6.  String\
    \ Comparison Rules . . . . . . . . . . . . . . . . . . .  11\n   7.  Encrypted\
    \ JWK and Encrypted JWK Set Formats . . . . . . . . .  11\n   8.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .  11\n     8.1.  JSON Web Key Parameters\
    \ Registry  . . . . . . . . . . . .  12\n       8.1.1.  Registration Template\
    \ . . . . . . . . . . . . . . . .  12\n       8.1.2.  Initial Registry Contents\
    \ . . . . . . . . . . . . . .  13\n     8.2.  JSON Web Key Use Registry . . .\
    \ . . . . . . . . . . . . .  15\n       8.2.1.  Registration Template . . . .\
    \ . . . . . . . . . . . .  15\n       8.2.2.  Initial Registry Contents . . .\
    \ . . . . . . . . . . .  15\n     8.3.  JSON Web Key Operations Registry  . .\
    \ . . . . . . . . . .  16\n       8.3.1.  Registration Template . . . . . . .\
    \ . . . . . . . . .  16\n       8.3.2.  Initial Registry Contents . . . . . .\
    \ . . . . . . . .  16\n     8.4.  JSON Web Key Set Parameters Registry  . . .\
    \ . . . . . . .  17\n       8.4.1.  Registration Template . . . . . . . . . .\
    \ . . . . . .  17\n       8.4.2.  Initial Registry Contents . . . . . . . . .\
    \ . . . . .  18\n     8.5.  Media Type Registration . . . . . . . . . . . . .\
    \ . . . .  18\n       8.5.1.  Registry Contents . . . . . . . . . . . . . . .\
    \ . . .  18\n   9.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .  19\n     9.1.  Key Provenance and Trust  . . . . . . . . . . . . . . .\
    \ .  20\n     9.2.  Preventing Disclosure of Non-public Key Information . . .\
    \  20\n     9.3.  RSA Private Key Representations and Blinding  . . . . . .  21\n\
    \     9.4.  Key Entropy and Random Values . . . . . . . . . . . . . .  21\n  \
    \ 10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  21\n    \
    \ 10.1.  Normative References . . . . . . . . . . . . . . . . . .  21\n     10.2.\
    \  Informative References . . . . . . . . . . . . . . . . .  23\n   Appendix A.\
    \  Example JSON Web Key Sets  . . . . . . . . . . . . .  25\n     A.1.  Example\
    \ Public Keys . . . . . . . . . . . . . . . . . . .  25\n     A.2.  Example Private\
    \ Keys  . . . . . . . . . . . . . . . . . .  25\n     A.3.  Example Symmetric\
    \ Keys  . . . . . . . . . . . . . . . . .  27\n   Appendix B.  Example Use of\
    \ \"x5c\" (X.509 Certificate Chain)\n                Parameter  . . . . . . .\
    \ . . . . . . . . . . . . . .  28\n   Appendix C.  Example Encrypted RSA Private\
    \ Key  . . . . . . . . .  28\n     C.1.  Plaintext RSA Private Key . . . . . .\
    \ . . . . . . . . . .  29\n     C.2.  JOSE Header . . . . . . . . . . . . . .\
    \ . . . . . . . . .  32\n     C.3.  Content Encryption Key (CEK)  . . . . . .\
    \ . . . . . . . .  32\n     C.4.  Key Derivation  . . . . . . . . . . . . . .\
    \ . . . . . . .  33\n     C.5.  Key Encryption  . . . . . . . . . . . . . . .\
    \ . . . . . .  33\n     C.6.  Initialization Vector . . . . . . . . . . . . .\
    \ . . . . .  33\n     C.7.  Additional Authenticated Data . . . . . . . . . .\
    \ . . . .  34\n     C.8.  Content Encryption  . . . . . . . . . . . . . . . .\
    \ . . .  34\n     C.9.  Complete Representation . . . . . . . . . . . . . . .\
    \ . .  38\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  40\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .\
    \  40\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A JSON Web Key (JWK) is a JavaScript Object Notation (JSON)\
    \ [RFC7159]\n   data structure that represents a cryptographic key.  This\n  \
    \ specification also defines a JWK Set JSON data structure that\n   represents\
    \ a set of JWKs.  Cryptographic algorithms and identifiers\n   for use with this\
    \ specification are described in the separate JSON\n   Web Algorithms (JWA) [JWA]\
    \ specification and IANA registries\n   established by that specification.\n \
    \  Goals for this specification do not include representing new kinds of\n   certificate\
    \ chains, representing new kinds of certified keys, or\n   replacing X.509 certificates.\n\
    \   JWKs and JWK Sets are used in the JSON Web Signature [JWS] and JSON\n   Web\
    \ Encryption [JWE] specifications.\n   Names defined by this specification are\
    \ short because a core goal is\n   for the resulting representations to be compact.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   \"Key words for use in RFCs to Indicate Requirement Levels\"\
    \ [RFC2119].\n   The interpretation should only be applied when the terms appear\
    \ in\n   all capital letters.\n   BASE64URL(OCTETS) denotes the base64url encoding\
    \ of OCTETS, per\n   Section 2 of [JWS].\n   UTF8(STRING) denotes the octets of\
    \ the UTF-8 [RFC3629] representation\n   of STRING, where STRING is a sequence\
    \ of zero or more Unicode\n   [UNICODE] characters.\n   ASCII(STRING) denotes\
    \ the octets of the ASCII [RFC20] representation\n   of STRING, where STRING is\
    \ a sequence of zero or more ASCII\n   characters.\n   The concatenation of two\
    \ values A and B is denoted as A || B.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The terms \"JSON Web Signature (JWS)\", \"Base64url Encoding\"\
    ,\n   \"Collision-Resistant Name\", \"Header Parameter\", and \"JOSE Header\"\
    \ are\n   defined by the JWS specification [JWS].\n   The terms \"JSON Web Encryption\
    \ (JWE)\", \"Additional Authenticated Data\n   (AAD)\", \"JWE Authentication Tag\"\
    , \"JWE Ciphertext\", \"JWE Compact\n   Serialization\", \"JWE Encrypted Key\"\
    , \"JWE Initialization Vector\", and\n   \"JWE Protected Header\" are defined\
    \ by the JWE specification [JWE].\n   The terms \"Ciphertext\", \"Digital Signature\"\
    , \"Message Authentication\n   Code (MAC)\", and \"Plaintext\" are defined by\
    \ the \"Internet Security\n   Glossary, Version 2\" [RFC4949].\n   These terms\
    \ are defined by this specification:\n   JSON Web Key (JWK)\n      A JSON object\
    \ that represents a cryptographic key.  The members of\n      the object represent\
    \ properties of the key, including its value.\n   JWK Set\n      A JSON object\
    \ that represents a set of JWKs.  The JSON object MUST\n      have a \"keys\"\
    \ member, which is an array of JWKs.\n"
- title: 3.  Example JWK
  contents:
  - "3.  Example JWK\n   This section provides an example of a JWK.  The following\
    \ example JWK\n   declares that the key is an Elliptic Curve [DSS] key, it is\
    \ used with\n   the P-256 Elliptic Curve, and its x and y coordinates are the\n\
    \   base64url-encoded values shown.  A key identifier is also provided\n   for\
    \ the key.\n     {\"kty\":\"EC\",\n      \"crv\":\"P-256\",\n      \"x\":\"f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU\"\
    ,\n      \"y\":\"x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0\",\n      \"kid\"\
    :\"Public key used in JWS spec Appendix A.3 example\"\n     }\n   Additional example\
    \ JWK values can be found in Appendix A.\n"
- title: 4.  JSON Web Key (JWK) Format
  contents:
  - "4.  JSON Web Key (JWK) Format\n   A JWK is a JSON object that represents a cryptographic\
    \ key.  The\n   members of the object represent properties of the key, including\
    \ its\n   value.  This JSON object MAY contain whitespace and/or line breaks\n\
    \   before or after any JSON values or structural characters, in\n   accordance\
    \ with Section 2 of RFC 7159 [RFC7159].  This document\n   defines the key parameters\
    \ that are not algorithm specific and, thus,\n   common to many keys.\n   In addition\
    \ to the common parameters, each JWK will have members that\n   are key type specific.\
    \  These members represent the parameters of the\n   key.  Section 6 of the JSON\
    \ Web Algorithms (JWA) [JWA] specification\n   defines multiple kinds of cryptographic\
    \ keys and their associated\n   members.\n   The member names within a JWK MUST\
    \ be unique; JWK parsers MUST either\n   reject JWKs with duplicate member names\
    \ or use a JSON parser that\n   returns only the lexically last duplicate member\
    \ name, as specified\n   in Section 15.12 (The JSON Object) of ECMAScript 5.1\
    \ [ECMAScript].\n   Additional members can be present in the JWK; if not understood\
    \ by\n   implementations encountering them, they MUST be ignored.  Member\n  \
    \ names used for representing key parameters for different keys types\n   need\
    \ not be distinct.  Any new member name should either be\n   registered in the\
    \ IANA \"JSON Web Key Parameters\" registry established\n   by Section 8.1 or\
    \ be a value that contains a Collision-Resistant\n   Name.\n"
- title: 4.1.  "kty" (Key Type) Parameter
  contents:
  - "4.1.  \"kty\" (Key Type) Parameter\n   The \"kty\" (key type) parameter identifies\
    \ the cryptographic algorithm\n   family used with the key, such as \"RSA\" or\
    \ \"EC\".  \"kty\" values should\n   either be registered in the IANA \"JSON Web\
    \ Key Types\" registry\n   established by [JWA] or be a value that contains a\
    \ Collision-\n   Resistant Name.  The \"kty\" value is a case-sensitive string.\
    \  This\n   member MUST be present in a JWK.\n   A list of defined \"kty\" values\
    \ can be found in the IANA \"JSON Web Key\n   Types\" registry established by\
    \ [JWA]; the initial contents of this\n   registry are the values defined in Section\
    \ 6.1 of [JWA].\n   The key type definitions include specification of the members\
    \ to be\n   used for those key types.  Members used with specific \"kty\" values\n\
    \   can be found in the IANA \"JSON Web Key Parameters\" registry\n   established\
    \ by Section 8.1.\n"
- title: 4.2.  "use" (Public Key Use) Parameter
  contents:
  - "4.2.  \"use\" (Public Key Use) Parameter\n   The \"use\" (public key use) parameter\
    \ identifies the intended use of\n   the public key.  The \"use\" parameter is\
    \ employed to indicate whether\n   a public key is used for encrypting data or\
    \ verifying the signature\n   on data.\n   Values defined by this specification\
    \ are:\n   o  \"sig\" (signature)\n   o  \"enc\" (encryption)\n   Other values\
    \ MAY be used.  The \"use\" value is a case-sensitive\n   string.  Use of the\
    \ \"use\" member is OPTIONAL, unless the application\n   requires its presence.\n\
    \   When a key is used to wrap another key and a public key use\n   designation\
    \ for the first key is desired, the \"enc\" (encryption) key\n   use value is\
    \ used, since key wrapping is a kind of encryption.  The\n   \"enc\" value is\
    \ also to be used for public keys used for key agreement\n   operations.\n   Additional\
    \ \"use\" (public key use) values can be registered in the\n   IANA \"JSON Web\
    \ Key Use\" registry established by Section 8.2.\n   Registering any extension\
    \ values used is highly recommended when this\n   specification is used in open\
    \ environments, in which multiple\n   organizations need to have a common understanding\
    \ of any extensions\n   used.  However, unregistered extension values can be used\
    \ in closed\n   environments, in which the producing and consuming organization\
    \ will\n   always be the same.\n"
- title: 4.3.  "key_ops" (Key Operations) Parameter
  contents:
  - "4.3.  \"key_ops\" (Key Operations) Parameter\n   The \"key_ops\" (key operations)\
    \ parameter identifies the operation(s)\n   for which the key is intended to be\
    \ used.  The \"key_ops\" parameter is\n   intended for use cases in which public,\
    \ private, or symmetric keys\n   may be present.\n   Its value is an array of\
    \ key operation values.  Values defined by\n   this specification are:\n   o \
    \ \"sign\" (compute digital signature or MAC)\n   o  \"verify\" (verify digital\
    \ signature or MAC)\n   o  \"encrypt\" (encrypt content)\n   o  \"decrypt\" (decrypt\
    \ content and validate decryption, if applicable)\n   o  \"wrapKey\" (encrypt\
    \ key)\n   o  \"unwrapKey\" (decrypt key and validate decryption, if applicable)\n\
    \   o  \"deriveKey\" (derive key)\n   o  \"deriveBits\" (derive bits not to be\
    \ used as a key)\n   (Note that the \"key_ops\" values intentionally match the\
    \ \"KeyUsage\"\n   values defined in the Web Cryptography API\n   [W3C.CR-WebCryptoAPI-20141211]\
    \ specification.)\n   Other values MAY be used.  The key operation values are\
    \ case-\n   sensitive strings.  Duplicate key operation values MUST NOT be\n \
    \  present in the array.  Use of the \"key_ops\" member is OPTIONAL,\n   unless\
    \ the application requires its presence.\n   Multiple unrelated key operations\
    \ SHOULD NOT be specified for a key\n   because of the potential vulnerabilities\
    \ associated with using the\n   same key with multiple algorithms.  Thus, the\
    \ combinations \"sign\"\n   with \"verify\", \"encrypt\" with \"decrypt\", and\
    \ \"wrapKey\" with\n   \"unwrapKey\" are permitted, but other combinations SHOULD\
    \ NOT be used.\n   Additional \"key_ops\" (key operations) values can be registered\
    \ in the\n   IANA \"JSON Web Key Operations\" registry established by Section\
    \ 8.3.\n   The same considerations about registering extension values apply to\n\
    \   the \"key_ops\" member as do for the \"use\" member.\n   The \"use\" and \"\
    key_ops\" JWK members SHOULD NOT be used together;\n   however, if both are used,\
    \ the information they convey MUST be\n   consistent.  Applications should specify\
    \ which of these members they\n   use, if either is to be used by the application.\n"
- title: 4.4.  "alg" (Algorithm) Parameter
  contents:
  - "4.4.  \"alg\" (Algorithm) Parameter\n   The \"alg\" (algorithm) parameter identifies\
    \ the algorithm intended for\n   use with the key.  The values used should either\
    \ be registered in the\n   IANA \"JSON Web Signature and Encryption Algorithms\"\
    \ registry\n   established by [JWA] or be a value that contains a Collision-\n\
    \   Resistant Name.  The \"alg\" value is a case-sensitive ASCII string.\n   Use\
    \ of this member is OPTIONAL.\n"
- title: 4.5.  "kid" (Key ID) Parameter
  contents:
  - "4.5.  \"kid\" (Key ID) Parameter\n   The \"kid\" (key ID) parameter is used to\
    \ match a specific key.  This\n   is used, for instance, to choose among a set\
    \ of keys within a JWK Set\n   during key rollover.  The structure of the \"kid\"\
    \ value is\n   unspecified.  When \"kid\" values are used within a JWK Set, different\n\
    \   keys within the JWK Set SHOULD use distinct \"kid\" values.  (One\n   example\
    \ in which different keys might use the same \"kid\" value is if\n   they have\
    \ different \"kty\" (key type) values but are considered to be\n   equivalent\
    \ alternatives by the application using them.)  The \"kid\"\n   value is a case-sensitive\
    \ string.  Use of this member is OPTIONAL.\n   When used with JWS or JWE, the\
    \ \"kid\" value is used to match a JWS or\n   JWE \"kid\" Header Parameter value.\n"
- title: 4.6.  "x5u" (X.509 URL) Parameter
  contents:
  - "4.6.  \"x5u\" (X.509 URL) Parameter\n   The \"x5u\" (X.509 URL) parameter is\
    \ a URI [RFC3986] that refers to a\n   resource for an X.509 public key certificate\
    \ or certificate chain\n   [RFC5280].  The identified resource MUST provide a\
    \ representation of\n   the certificate or certificate chain that conforms to\
    \ RFC 5280\n   [RFC5280] in PEM-encoded form, with each certificate delimited\
    \ as\n   specified in Section 6.1 of RFC 4945 [RFC4945].  The key in the first\n\
    \   certificate MUST match the public key represented by other members of\n  \
    \ the JWK.  The protocol used to acquire the resource MUST provide\n   integrity\
    \ protection; an HTTP GET request to retrieve the certificate\n   MUST use TLS\
    \ [RFC2818] [RFC5246]; the identity of the server MUST be\n   validated, as per\
    \ Section 6 of RFC 6125 [RFC6125].  Use of this\n   member is OPTIONAL.\n   While\
    \ there is no requirement that optional JWK members providing key\n   usage, algorithm,\
    \ or other information be present when the \"x5u\"\n   member is used, doing so\
    \ may improve interoperability for\n   applications that do not handle PKIX certificates\
    \ [RFC5280].  If\n   other members are present, the contents of those members\
    \ MUST be\n   semantically consistent with the related fields in the first\n \
    \  certificate.  For instance, if the \"use\" member is present, then it\n   MUST\
    \ correspond to the usage that is specified in the certificate,\n   when it includes\
    \ this information.  Similarly, if the \"alg\" member is\n   present, it MUST\
    \ correspond to the algorithm specified in the\n   certificate.\n"
- title: 4.7.  "x5c" (X.509 Certificate Chain) Parameter
  contents:
  - "4.7.  \"x5c\" (X.509 Certificate Chain) Parameter\n   The \"x5c\" (X.509 certificate\
    \ chain) parameter contains a chain of one\n   or more PKIX certificates [RFC5280].\
    \  The certificate chain is\n   represented as a JSON array of certificate value\
    \ strings.  Each\n   string in the array is a base64-encoded (Section 4 of [RFC4648]\
    \ --\n   not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\n\
    \   The PKIX certificate containing the key value MUST be the first\n   certificate.\
    \  This MAY be followed by additional certificates, with\n   each subsequent certificate\
    \ being the one used to certify the\n   previous one.  The key in the first certificate\
    \ MUST match the public\n   key represented by other members of the JWK.  Use\
    \ of this member is\n   OPTIONAL.\n   As with the \"x5u\" member, optional JWK\
    \ members providing key usage,\n   algorithm, or other information MAY also be\
    \ present when the \"x5c\"\n   member is used.  If other members are present,\
    \ the contents of those\n   members MUST be semantically consistent with the related\
    \ fields in\n   the first certificate.  See the last paragraph of Section 4.6\
    \ for\n   additional guidance on this.\n"
- title: 4.8.  "x5t" (X.509 Certificate SHA-1 Thumbprint) Parameter
  contents:
  - "4.8.  \"x5t\" (X.509 Certificate SHA-1 Thumbprint) Parameter\n   The \"x5t\"\
    \ (X.509 certificate SHA-1 thumbprint) parameter is a\n   base64url-encoded SHA-1\
    \ thumbprint (a.k.a. digest) of the DER\n   encoding of an X.509 certificate [RFC5280].\
    \  Note that certificate\n   thumbprints are also sometimes known as certificate\
    \ fingerprints.\n   The key in the certificate MUST match the public key represented\
    \ by\n   other members of the JWK.  Use of this member is OPTIONAL.\n   As with\
    \ the \"x5u\" member, optional JWK members providing key usage,\n   algorithm,\
    \ or other information MAY also be present when the \"x5t\"\n   member is used.\
    \  If other members are present, the contents of those\n   members MUST be semantically\
    \ consistent with the related fields in\n   the referenced certificate.  See the\
    \ last paragraph of Section 4.6\n   for additional guidance on this.\n"
- title: 4.9.  "x5t#S256" (X.509 Certificate SHA-256 Thumbprint) Parameter
  contents:
  - "4.9.  \"x5t#S256\" (X.509 Certificate SHA-256 Thumbprint) Parameter\n   The \"\
    x5t#S256\" (X.509 certificate SHA-256 thumbprint) parameter is a\n   base64url-encoded\
    \ SHA-256 thumbprint (a.k.a. digest) of the DER\n   encoding of an X.509 certificate\
    \ [RFC5280].  Note that certificate\n   thumbprints are also sometimes known as\
    \ certificate fingerprints.\n   The key in the certificate MUST match the public\
    \ key represented by\n   other members of the JWK.  Use of this member is OPTIONAL.\n\
    \   As with the \"x5u\" member, optional JWK members providing key usage,\n  \
    \ algorithm, or other information MAY also be present when the\n   \"x5t#S256\"\
    \ member is used.  If other members are present, the\n   contents of those members\
    \ MUST be semantically consistent with the\n   related fields in the referenced\
    \ certificate.  See the last paragraph\n   of Section 4.6 for additional guidance\
    \ on this.\n"
- title: 5.  JWK Set Format
  contents:
  - "5.  JWK Set Format\n   A JWK Set is a JSON object that represents a set of JWKs.\
    \  The JSON\n   object MUST have a \"keys\" member, with its value being an array\
    \ of\n   JWKs.  This JSON object MAY contain whitespace and/or line breaks.\n\
    \   The member names within a JWK Set MUST be unique; JWK Set parsers\n   MUST\
    \ either reject JWK Sets with duplicate member names or use a JSON\n   parser\
    \ that returns only the lexically last duplicate member name, as\n   specified\
    \ in Section 15.12 (\"The JSON Object\") of ECMAScript 5.1\n   [ECMAScript].\n\
    \   Additional members can be present in the JWK Set; if not understood\n   by\
    \ implementations encountering them, they MUST be ignored.\n   Parameters for\
    \ representing additional properties of JWK Sets should\n   either be registered\
    \ in the IANA \"JSON Web Key Set Parameters\"\n   registry established by Section\
    \ 8.4 or be a value that contains a\n   Collision-Resistant Name.\n   Implementations\
    \ SHOULD ignore JWKs within a JWK Set that use \"kty\"\n   (key type) values that\
    \ are not understood by them, that are missing\n   required members, or for which\
    \ values are out of the supported\n   ranges.\n"
- title: 5.1.  "keys" Parameter
  contents:
  - "5.1.  \"keys\" Parameter\n   The value of the \"keys\" parameter is an array\
    \ of JWK values.  By\n   default, the order of the JWK values within the array\
    \ does not imply\n   an order of preference among them, although applications\
    \ of JWK Sets\n   can choose to assign a meaning to the order for their purposes,\
    \ if\n   desired.\n"
- title: 6.  String Comparison Rules
  contents:
  - "6.  String Comparison Rules\n   The string comparison rules for this specification\
    \ are the same as\n   those defined in Section 5.3 of [JWS].\n"
- title: 7.  Encrypted JWK and Encrypted JWK Set Formats
  contents:
  - "7.  Encrypted JWK and Encrypted JWK Set Formats\n   Access to JWKs containing\
    \ non-public key material by parties without\n   legitimate access to the non-public\
    \ information MUST be prevented.\n   This can be accomplished by encrypting the\
    \ JWK when potentially\n   observable by such parties to prevent the disclosure\
    \ of private or\n   symmetric key values.  The use of an Encrypted JWK, which\
    \ is a JWE\n   with the UTF-8 encoding of a JWK as its plaintext value, is\n \
    \  recommended for this purpose.  The processing of Encrypted JWKs is\n   identical\
    \ to the processing of other JWEs.  A \"cty\" (content type)\n   Header Parameter\
    \ value of \"jwk+json\" MUST be used to indicate that\n   the content of the JWE\
    \ is a JWK, unless the application knows that\n   the encrypted content is a JWK\
    \ by another means or convention, in\n   which case the \"cty\" value would typically\
    \ be omitted.\n   JWK Sets containing non-public key material will also need to\
    \ be\n   encrypted under these circumstances.  The use of an Encrypted JWK\n \
    \  Set, which is a JWE with the UTF-8 encoding of a JWK Set as its\n   plaintext\
    \ value, is recommended for this purpose.  The processing of\n   Encrypted JWK\
    \ Sets is identical to the processing of other JWEs.  A\n   \"cty\" (content type)\
    \ Header Parameter value of \"jwk-set+json\" MUST be\n   used to indicate that\
    \ the content of the JWE is a JWK Set, unless the\n   application knows that the\
    \ encrypted content is a JWK Set by another\n   means or convention, in which\
    \ case the \"cty\" value would typically be\n   omitted.\n   See Appendix C for\
    \ an example encrypted JWK.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The following registration procedure is used for\
    \ all the registries\n   established by this specification.\n   The registration\
    \ procedure for values is Specification Required\n   [RFC5226] after a three-week\
    \ review period on the\n   jose-reg-review@ietf.org mailing list, on the advice\
    \ of one or more\n   Designated Experts.  However, to allow for the allocation\
    \ of values\n   prior to publication, the Designated Experts may approve registration\n\
    \   once they are satisfied that such a specification will be published.\n   Registration\
    \ requests sent to the mailing list for review should use\n   an appropriate subject\
    \ (e.g., \"Request to register JWK parameter:\n   example\").\n   Within the review\
    \ period, the Designated Experts will either approve\n   or deny the registration\
    \ request, communicating this decision to the\n   review list and IANA.  Denials\
    \ should include an explanation and, if\n   applicable, suggestions as to how\
    \ to make the request successful.\n   Registration requests that are undetermined\
    \ for a period longer than\n   21 days can be brought to the IESG's attention\
    \ (using the\n   iesg@ietf.org mailing list) for resolution.\n   Criteria that\
    \ should be applied by the Designated Experts include\n   determining whether\
    \ the proposed registration duplicates existing\n   functionality, whether it\
    \ is likely to be of general applicability or\n   useful only for a single application,\
    \ and whether the registration\n   description is clear.\n   IANA must only accept\
    \ registry updates from the Designated Experts\n   and should direct all requests\
    \ for registration to the review mailing\n   list.\n   It is suggested that multiple\
    \ Designated Experts be appointed who are\n   able to represent the perspectives\
    \ of different applications using\n   this specification, in order to enable broadly\
    \ informed review of\n   registration decisions.  In cases where a registration\
    \ decision could\n   be perceived as creating a conflict of interest for a particular\n\
    \   Expert, that Expert should defer to the judgment of the other\n   Experts.\n"
- title: 8.1.  JSON Web Key Parameters Registry
  contents:
  - "8.1.  JSON Web Key Parameters Registry\n   This section establishes the IANA\
    \ \"JSON Web Key Parameters\" registry\n   for JWK parameter names.  The registry\
    \ records the parameter name,\n   the key type(s) that the parameter is used with,\
    \ and a reference to\n   the specification that defines it.  It also records whether\
    \ the\n   parameter conveys public or private information.  This section\n   registers\
    \ the parameter names defined in Section 4.  The same JWK\n   parameter name may\
    \ be registered multiple times, provided that\n   duplicate parameter registrations\
    \ are only for key-type-specific JWK\n   parameters; in this case, the meaning\
    \ of the duplicate parameter name\n   is disambiguated by the \"kty\" value of\
    \ the JWK containing it.\n"
- title: 8.1.1.  Registration Template
  contents:
  - "8.1.1.  Registration Template\n   Parameter Name:\n      The name requested (e.g.,\
    \ \"kid\").  Because a core goal of this\n      specification is for the resulting\
    \ representations to be compact,\n      it is RECOMMENDED that the name be short\
    \ -- not to exceed 8\n      characters without a compelling reason to do so. \
    \ This name is\n      case sensitive.  Names may not match other registered names\
    \ in a\n      case-insensitive manner unless the Designated Experts state that\n\
    \      there is a compelling reason to allow an exception.  However,\n      matching\
    \ names may be registered, provided that the accompanying\n      sets of \"kty\"\
    \ values that the parameter name is used with are\n      disjoint; for the purposes\
    \ of matching \"kty\" values, \"*\" matches\n      all values.\n   Parameter Description:\n\
    \      Brief description of the parameter (e.g., \"Key ID\").\n   Used with \"\
    kty\" Value(s):\n      The key type parameter value(s) that the parameter name\
    \ is to be\n      used with, or the value \"*\" if the parameter value is used\
    \ with\n      all key types.  Values may not match other registered \"kty\" values\n\
    \      in a case-insensitive manner when the registered parameter name is\n  \
    \    the same (including when the parameter name matches in a case-\n      insensitive\
    \ manner) unless the Designated Experts state that there\n      is a compelling\
    \ reason to allow an exception.\n   Parameter Information Class:\n      Registers\
    \ whether the parameter conveys public or private\n      information.  Its value\
    \ must be either Public or Private.\n   Change Controller:\n      For Standards\
    \ Track RFCs, list the \"IESG\".  For others, give the\n      name of the responsible\
    \ party.  Other details (e.g., postal\n      address, email address, home page\
    \ URI) may also be included.\n   Specification Document(s):\n      Reference to\
    \ the document or documents that specify the parameter,\n      preferably including\
    \ URIs that can be used to retrieve copies of\n      the documents.  An indication\
    \ of the relevant sections may also be\n      included but is not required.\n"
- title: 8.1.2.  Initial Registry Contents
  contents:
  - "8.1.2.  Initial Registry Contents\n   o  Parameter Name: \"kty\"\n   o  Parameter\
    \ Description: Key Type\n   o  Used with \"kty\" Value(s): *\n   o  Parameter\
    \ Information Class: Public\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 4.1 of RFC 7517\n   o  Parameter Name: \"use\"\n   o  Parameter\
    \ Description: Public Key Use\n   o  Used with \"kty\" Value(s): *\n   o  Parameter\
    \ Information Class: Public\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 4.2 of RFC 7517\n   o  Parameter Name: \"key_ops\"\n  \
    \ o  Parameter Description: Key Operations\n   o  Used with \"kty\" Value(s):\
    \ *\n   o  Parameter Information Class: Public\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.3 of RFC 7517\n   o  Parameter Name:\
    \ \"alg\"\n   o  Parameter Description: Algorithm\n   o  Used with \"kty\" Value(s):\
    \ *\n   o  Parameter Information Class: Public\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.4 of RFC 7517\n   o  Parameter Name:\
    \ \"kid\"\n   o  Parameter Description: Key ID\n   o  Used with \"kty\" Value(s):\
    \ *\n   o  Parameter Information Class: Public\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.5 of RFC 7517\n   o  Parameter Name:\
    \ \"x5u\"\n   o  Parameter Description: X.509 URL\n   o  Used with \"kty\" Value(s):\
    \ *\n   o  Parameter Information Class: Public\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.6 of RFC 7517\n   o  Parameter Name:\
    \ \"x5c\"\n   o  Parameter Description: X.509 Certificate Chain\n   o  Used with\
    \ \"kty\" Value(s): *\n   o  Parameter Information Class: Public\n   o  Change\
    \ Controller: IESG\n   o  Specification Document(s): Section 4.7 of RFC 7517\n\
    \   o  Parameter Name: \"x5t\"\n   o  Parameter Description: X.509 Certificate\
    \ SHA-1 Thumbprint\n   o  Used with \"kty\" Value(s): *\n   o  Parameter Information\
    \ Class: Public\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 4.8 of RFC 7517\n   o  Parameter Name: \"x5t#S256\"\n   o  Parameter\
    \ Description: X.509 Certificate SHA-256 Thumbprint\n   o  Used with \"kty\" Value(s):\
    \ *\n   o  Parameter Information Class: Public\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.9 of RFC 7517\n"
- title: 8.2.  JSON Web Key Use Registry
  contents:
  - "8.2.  JSON Web Key Use Registry\n   This section establishes the IANA \"JSON\
    \ Web Key Use\" registry for JWK\n   \"use\" (public key use) member values. \
    \ The registry records the\n   public key use value and a reference to the specification\
    \ that\n   defines it.  This section registers the parameter names defined in\n\
    \   Section 4.2.\n"
- title: 8.2.1.  Registration Template
  contents:
  - "8.2.1.  Registration Template\n   Use Member Value:\n      The name requested\
    \ (e.g., \"sig\").  Because a core goal of this\n      specification is for the\
    \ resulting representations to be compact,\n      it is RECOMMENDED that the name\
    \ be short -- not to exceed 8\n      characters without a compelling reason to\
    \ do so.  This name is\n      case sensitive.  Names may not match other registered\
    \ names in a\n      case-insensitive manner unless the Designated Experts state\
    \ that\n      there is a compelling reason to allow an exception.\n   Use Description:\n\
    \      Brief description of the use (e.g., \"Digital Signature or MAC\").\n  \
    \ Change Controller:\n      For Standards Track RFCs, list the \"IESG\".  For\
    \ others, give the\n      name of the responsible party.  Other details (e.g.,\
    \ postal\n      address, email address, home page URI) may also be included.\n\
    \   Specification Document(s):\n      Reference to the document or documents that\
    \ specify the parameter,\n      preferably including URIs that can be used to\
    \ retrieve copies of\n      the documents.  An indication of the relevant sections\
    \ may also be\n      included but is not required.\n"
- title: 8.2.2.  Initial Registry Contents
  contents:
  - "8.2.2.  Initial Registry Contents\n   o  Use Member Value: \"sig\"\n   o  Use\
    \ Description: Digital Signature or MAC\n   o  Change Controller: IESG\n   o \
    \ Specification Document(s): Section 4.2 of RFC 7517\n   o  Use Member Value:\
    \ \"enc\"\n   o  Use Description: Encryption\n   o  Change Controller: IESG\n\
    \   o  Specification Document(s): Section 4.2 of RFC 7517\n"
- title: 8.3.  JSON Web Key Operations Registry
  contents:
  - "8.3.  JSON Web Key Operations Registry\n   This section establishes the IANA\
    \ \"JSON Web Key Operations\" registry\n   for values of JWK \"key_ops\" array\
    \ elements.  The registry records the\n   key operation value and a reference\
    \ to the specification that defines\n   it.  This section registers the parameter\
    \ names defined in\n   Section 4.3.\n"
- title: 8.3.1.  Registration Template
  contents:
  - "8.3.1.  Registration Template\n   Key Operation Value:\n      The name requested\
    \ (e.g., \"sign\").  Because a core goal of this\n      specification is for the\
    \ resulting representations to be compact,\n      it is RECOMMENDED that the name\
    \ be short -- not to exceed 8\n      characters without a compelling reason to\
    \ do so.  This name is\n      case sensitive.  Names may not match other registered\
    \ names in a\n      case-insensitive manner unless the Designated Experts state\
    \ that\n      there is a compelling reason to allow an exception.\n   Key Operation\
    \ Description:\n      Brief description of the key operation (e.g., \"Compute\
    \ digital\n      signature or MAC\").\n   Change Controller:\n      For Standards\
    \ Track RFCs, list the \"IESG\".  For others, give the\n      name of the responsible\
    \ party.  Other details (e.g., postal\n      address, email address, home page\
    \ URI) may also be included.\n   Specification Document(s):\n      Reference to\
    \ the document or documents that specify the parameter,\n      preferably including\
    \ URIs that can be used to retrieve copies of\n      the documents.  An indication\
    \ of the relevant sections may also be\n      included but is not required.\n"
- title: 8.3.2.  Initial Registry Contents
  contents:
  - "8.3.2.  Initial Registry Contents\n   o  Key Operation Value: \"sign\"\n   o\
    \  Key Operation Description: Compute digital signature or MAC\n   o  Change Controller:\
    \ IESG\n   o  Specification Document(s): Section 4.3 of RFC 7517\n   o  Key Operation\
    \ Value: \"verify\"\n   o  Key Operation Description: Verify digital signature\
    \ or MAC\n   o  Change Controller: IESG\n   o  Specification Document(s): Section\
    \ 4.3 of RFC 7517\n   o  Key Operation Value: \"encrypt\"\n   o  Key Operation\
    \ Description: Encrypt content\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 4.3 of RFC 7517\n   o  Key Operation Value: \"decrypt\"\
    \n   o  Key Operation Description: Decrypt content and validate\n      decryption,\
    \ if applicable\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 4.3 of RFC 7517\n   o  Key Operation Value: \"wrapKey\"\n   o  Key Operation\
    \ Description: Encrypt key\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 4.3 of RFC 7517\n   o  Key Operation Value: \"unwrapKey\"\
    \n   o  Key Operation Description: Decrypt key and validate decryption, if\n \
    \     applicable\n   o  Change Controller: IESG\n   o  Specification Document(s):\
    \ Section 4.3 of RFC 7517\n   o  Key Operation Value: \"deriveKey\"\n   o  Key\
    \ Operation Description: Derive key\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 4.3 of RFC 7517\n   o  Key Operation Value: \"deriveBits\"\
    \n   o  Key Operation Description: Derive bits not to be used as a key\n   o \
    \ Change Controller: IESG\n   o  Specification Document(s): Section 4.3 of RFC\
    \ 7517\n"
- title: 8.4.  JSON Web Key Set Parameters Registry
  contents:
  - "8.4.  JSON Web Key Set Parameters Registry\n   This section establishes the IANA\
    \ \"JSON Web Key Set Parameters\"\n   registry for JWK Set parameter names.  The\
    \ registry records the\n   parameter name and a reference to the specification\
    \ that defines it.\n   This section registers the parameter names defined in Section\
    \ 5.\n"
- title: 8.4.1.  Registration Template
  contents:
  - "8.4.1.  Registration Template\n   Parameter Name:\n      The name requested (e.g.,\
    \ \"keys\").  Because a core goal of this\n      specification is for the resulting\
    \ representations to be compact,\n      it is RECOMMENDED that the name be short\
    \ -- not to exceed 8\n      characters without a compelling reason to do so. \
    \ This name is\n      case sensitive.  Names may not match other registered names\
    \ in a\n      case-insensitive manner unless the Designated Experts state that\n\
    \      there is a compelling reason to allow an exception.\n   Parameter Description:\n\
    \      Brief description of the parameter (e.g., \"Array of JWK values\").\n \
    \  Change Controller:\n      For Standards Track RFCs, list the \"IESG\".  For\
    \ others, give the\n      name of the responsible party.  Other details (e.g.,\
    \ postal\n      address, email address, home page URI) may also be included.\n\
    \   Specification Document(s):\n      Reference to the document or documents that\
    \ specify the parameter,\n      preferably including URIs that can be used to\
    \ retrieve copies of\n      the documents.  An indication of the relevant sections\
    \ may also be\n      included but is not required.\n"
- title: 8.4.2.  Initial Registry Contents
  contents:
  - "8.4.2.  Initial Registry Contents\n   o  Parameter Name: \"keys\"\n   o  Parameter\
    \ Description: Array of JWK Values\n   o  Change Controller: IESG\n   o  Specification\
    \ Document(s): Section 5.1 of RFC 7517\n"
- title: 8.5.  Media Type Registration
  contents:
  - '8.5.  Media Type Registration

    '
- title: 8.5.1.  Registry Contents
  contents:
  - "8.5.1.  Registry Contents\n   This section registers the \"application/jwk+json\"\
    \ and \"application/\n   jwk-set+json\" media types [RFC2046] in the \"Media Types\"\
    \ registry\n   [IANA.MediaTypes] in the manner described in RFC 6838 [RFC6838],\n\
    \   which can be used to indicate that the content is a JWK or a JWK Set,\n  \
    \ respectively.\n   o  Type Name: application\n   o  Subtype Name: jwk+json\n\
    \   o  Required Parameters: n/a\n   o  Optional Parameters: n/a\n   o  Encoding\
    \ considerations: 8bit; application/jwk+json values are\n      represented as\
    \ a JSON object; UTF-8 encoding SHOULD be employed\n      for the JSON object.\n\
    \   o  Security Considerations: See the Security Considerations section\n    \
    \  of RFC 7517.\n   o  Interoperability Considerations: n/a\n   o  Published Specification:\
    \ RFC 7517\n   o  Applications that use this media type: OpenID Connect, Salesforce,\n\
    \      Google, Android, Windows Azure, W3C WebCrypto API, numerous others\n  \
    \ o  Fragment identifier considerations: n/a\n   o  Additional Information:\n\
    \         Magic number(s): n/a\n         File extension(s): n/a\n         Macintosh\
    \ file type code(s): n/a\n   o  Person & email address to contact for further\
    \ information:\n      Michael B.  Jones, mbj@microsoft.com\n   o  Intended Usage:\
    \ COMMON\n   o  Restrictions on Usage: none\n   o  Author: Michael B.  Jones,\
    \ mbj@microsoft.com\n   o  Change Controller: IESG\n   o  Provisional registration?\
    \  No\n   o  Type Name: application\n   o  Subtype Name: jwk-set+json\n   o  Required\
    \ Parameters: n/a\n   o  Optional Parameters: n/a\n   o  Encoding considerations:\
    \ 8bit; application/jwk-set+json values are\n      represented as a JSON Object;\
    \ UTF-8 encoding SHOULD be employed\n      for the JSON object.\n   o  Security\
    \ Considerations: See the Security Considerations section\n      of RFC 7517.\n\
    \   o  Interoperability Considerations: n/a\n   o  Published Specification: RFC\
    \ 7517\n   o  Applications that use this media type: OpenID Connect, Salesforce,\n\
    \      Google, Android, Windows Azure, W3C WebCrypto API, numerous others\n  \
    \ o  Fragment identifier considerations: n/a\n   o  Additional Information:\n\
    \         Magic number(s): n/a\n         File extension(s): n/a\n         Macintosh\
    \ file type code(s): n/a\n   o  Person & email address to contact for further\
    \ information:\n      Michael B.  Jones, mbj@microsoft.com\n   o  Intended Usage:\
    \ COMMON\n   o  Restrictions on Usage: none\n   o  Author: Michael B.  Jones,\
    \ mbj@microsoft.com\n   o  Change Controller: IESG\n   o  Provisional registration?\
    \  No\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   All of the security issues that are pertinent\
    \ to any cryptographic\n   application must be addressed by JWS/JWE/JWK agents.\
    \  Among these\n   issues are protecting the user's asymmetric private and symmetric\n\
    \   secret keys and employing countermeasures to various attacks.\n"
- title: 9.1.  Key Provenance and Trust
  contents:
  - "9.1.  Key Provenance and Trust\n   One should place no more trust in the data\
    \ cryptographically secured\n   by a key than in the method by which it was obtained\
    \ and in the\n   trustworthiness of the entity asserting an association with the\
    \ key.\n   Any data associated with a key that is obtained in an untrusted\n \
    \  manner should be treated with skepticism.  See Section 10.3 of [JWS]\n   for\
    \ security considerations on key origin authentication.\n   In almost all cases,\
    \ applications make decisions about whether to\n   trust a key based on attributes\
    \ bound to the key, such as names,\n   roles, and the key origin, rather than\
    \ based on the key itself.  When\n   an application is deciding whether to trust\
    \ a key, there are several\n   ways that it can bind attributes to a JWK.  Two\
    \ example mechanisms\n   are PKIX [RFC5280] and JSON Web Token (JWT) [JWT].\n\
    \   For instance, the creator of a JWK can include a PKIX certificate in\n   the\
    \ JWK's \"x5c\" member.  If the application validates the certificate\n   and\
    \ verifies that the JWK corresponds to the subject public key in\n   the certificate,\
    \ then the JWK can be associated with the attributes\n   in the certificate, such\
    \ as the subject name, subject alternative\n   names, extended key usages, and\
    \ its signature chain.\n   As another example, a JWT can be used to associate\
    \ attributes with a\n   JWK by referencing the JWK as a claim in the JWT.  The\
    \ JWK can be\n   included directly as a claim value or the JWT can include a TLS-\n\
    \   secured URI from which to retrieve the JWK value.  Either way, an\n   application\
    \ that gets a JWK via a JWT claim can associate it with the\n   JWT's cryptographic\
    \ properties and use these and possibly additional\n   claims in deciding whether\
    \ to trust the key.\n   The security considerations in Section 12.3 of XML DSIG\
    \ 2.0\n   [W3C.NOTE-xmldsig-core2-20130411] about the strength of a digital\n\
    \   signature depending upon all the links in the security chain also\n   apply\
    \ to this specification.\n   The TLS Requirements in Section 8 of [JWS] also apply\
    \ to this\n   specification, except that the \"x5u\" JWK member is the only feature\n\
    \   defined by this specification using TLS.\n"
- title: 9.2.  Preventing Disclosure of Non-public Key Information
  contents:
  - "9.2.  Preventing Disclosure of Non-public Key Information\n   Private and symmetric\
    \ keys MUST be protected from disclosure to\n   unintended parties.  One recommended\
    \ means of doing so is to encrypt\n   JWKs or JWK Sets containing them by using\
    \ the JWK or JWK Set value as\n   the plaintext of a JWE.  Of course, this requires\
    \ that there be a\n   secure way to obtain the key used to encrypt the non-public\
    \ key\n   information to the intended party and a secure way for that party to\n\
    \   obtain the corresponding decryption key.\n   The security considerations in\
    \ RFC 3447 [RFC3447] and RFC 6030\n   [RFC6030] about protecting private and symmetric\
    \ keys, key usage, and\n   information leakage also apply to this specification.\n"
- title: 9.3.  RSA Private Key Representations and Blinding
  contents:
  - "9.3.  RSA Private Key Representations and Blinding\n   The RSA Key blinding operation\
    \ [Kocher], which is a defense against\n   some timing attacks, requires all of\
    \ the RSA key values \"n\", \"e\", and\n   \"d\".  However, some RSA private key\
    \ representations do not include\n   the public exponent \"e\", but only include\
    \ the modulus \"n\" and the\n   private exponent \"d\".  This is true, for instance,\
    \ of the Java\n   RSAPrivateKeySpec API, which does not include the public exponent\
    \ \"e\"\n   as a parameter.  So as to enable RSA key blinding, such\n   representations\
    \ should be avoided.  For Java, the\n   RSAPrivateCrtKeySpec API can be used instead.\
    \  Section 8.2.2(i) of\n   the \"Handbook of Applied Cryptography\" [HAC] discusses\
    \ how to compute\n   the remaining RSA private key parameters, if needed, using\
    \ only \"n\",\n   \"e\", and \"d\".\n"
- title: 9.4.  Key Entropy and Random Values
  contents:
  - "9.4.  Key Entropy and Random Values\n   See Section 10.1 of [JWS] for security\
    \ considerations on key entropy\n   and random values.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [ECMAScript]\n              Ecma International,\
    \ \"ECMAScript Language Specification,\n              5.1 Edition\", ECMA Standard\
    \ 262, June 2011,\n              <http://www.ecma-international.org/ecma-262/5.1/\n\
    \              ECMA-262.pdf>.\n   [IANA.MediaTypes]\n              Internet Assigned\
    \ Numbers Authority (IANA), \"Media Types\",\n              <http://www.iana.org/assignments/media-types>.\n\
    \   [ITU.X690.1994]\n              International Telecommunications Union, \"\
    Information\n              Technology - ASN.1 encoding rules: Specification of\
    \ Basic\n              Encoding Rules (BER), Canonical Encoding Rules (CER) and\n\
    \              Distinguished Encoding Rules (DER)\", ITU-T Recommendation\n  \
    \            X.690, 1994.\n   [JWA]      Jones, M., \"JSON Web Algorithms (JWA)\"\
    , RFC 7518,\n              DOI 10.17487/RFC7518, May 2015,\n              <http://www.rfc-editor.org/info/rfc7518>.\n\
    \   [JWE]      Jones, M. and J. Hildebrand, \"JSON Web Encryption (JWE)\",\n \
    \             RFC 7516, DOI 10.17487/RFC7516, May 2015,\n              <http://www.rfc-editor.org/info/rfc7516>.\n\
    \   [JWS]      Jones, M., Bradley, J., and N. Sakimura, \"JSON Web\n         \
    \     Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May\n              2015,\
    \ <http://www.rfc-editor.org/info/rfc7515>.\n   [RFC20]    Cerf, V., \"ASCII format\
    \ for Network Interchange\", STD 80,\n              RFC 20, DOI 10.17487/RFC0020,\
    \ October 1969,\n              <http://www.rfc-editor.org/info/rfc20>.\n   [RFC2046]\
    \  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions\
    \ (MIME) Part Two: Media Types\", RFC 2046,\n              DOI 10.17487/RFC2046,\
    \ November 1996,\n              <http://www.rfc-editor.org/info/rfc2046>.\n  \
    \ [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n          \
    \    Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2818]\
    \  Rescorla, E., \"HTTP Over TLS\", RFC 2818,\n              DOI 10.17487/RFC2818,\
    \ May 2000,\n              <http://www.rfc-editor.org/info/rfc2818>.\n   [RFC3629]\
    \  Yergeau, F., \"UTF-8, a transformation format of ISO\n              10646\"\
    , STD 63, RFC 3629, DOI 10.17487/RFC3629, November\n              2003, <http://www.rfc-editor.org/info/rfc3629>.\n\
    \   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, DOI 10.17487/RFC3986, January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n\
    \   [RFC4648]  Josefsson, S., \"The Base16, Base32, and Base64 Data\n        \
    \      Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006,\n          \
    \    <http://www.rfc-editor.org/info/rfc4648>.\n   [RFC4945]  Korver, B., \"The\
    \ Internet IP Security PKI Profile of\n              IKEv1/ISAKMP, IKEv2, and\
    \ PKIX\", RFC 4945,\n              DOI 10.17487/RFC4945, August 2007,\n      \
    \        <http://www.rfc-editor.org/info/rfc4945>.\n   [RFC4949]  Shirey, R.,\
    \ \"Internet Security Glossary, Version 2\",\n              FYI 36, RFC 4949,\
    \ DOI 10.17487/RFC4949, August 2007,\n              <http://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246,\
    \ August 2008,\n              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]\
    \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,\
    \ R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC6125]  Saint-Andre, P. and J. Hodges, \"Representation and\n         \
    \     Verification of Domain-Based Application Service Identity\n            \
    \  within Internet Public Key Infrastructure Using X.509\n              (PKIX)\
    \ Certificates in the Context of Transport Layer\n              Security (TLS)\"\
    , RFC 6125, DOI 10.17487/RFC6125, March\n              2011, <http://www.rfc-editor.org/info/rfc6125>.\n\
    \   [RFC7159]  Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data\n \
    \             Interchange Format\", RFC 7159, DOI 10.17487/RFC7159, March\n  \
    \            2014, <http://www.rfc-editor.org/info/rfc7159>.\n   [UNICODE]  The\
    \ Unicode Consortium, \"The Unicode Standard\",\n              <http://www.unicode.org/versions/latest/>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [DSS]      National Institute of Standards\
    \ and Technology (NIST),\n              \"Digital Signature Standard (DSS)\",\
    \ FIPS PUB 186-4, July\n              2013, <http://nvlpubs.nist.gov/nistpubs/FIPS/\n\
    \              NIST.FIPS.186-4.pdf>.\n   [HAC]      Menezes, A., van Oorschot,\
    \ P., and S. Vanstone, \"Handbook\n              of Applied Cryptography\", CRC\
    \ Press, October 1996,\n              <http://cacr.uwaterloo.ca/hac/>.\n   [JWT]\
    \      Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token\n           \
    \   (JWT)\", RFC 7519, DOI 10.17487/RFC7519, May 2015,\n              <http://www.rfc-editor.org/info/rfc7519>.\n\
    \   [Kocher]   Kocher, P., \"Timing Attacks on Implementations of\n          \
    \    Diffe-Hellman, RSA, DSS, and Other Systems\", In\n              Proceedings\
    \ of the 16th Annual International Cryptology\n              Conference Advances\
    \ in Cryptology, Springer-Verlag, pp.\n              104-113, 1996.\n   [MagicSignatures]\n\
    \              Panzer, J., Ed., Laurie, B., and D. Balfanz, \"Magic\n        \
    \      Signatures\", January 2011,\n              <http://salmon-protocol.googlecode.com/svn/trunk/\n\
    \              draft-panzer-magicsig-01.html>.\n   [RFC3447]  Jonsson, J. and\
    \ B. Kaliski, \"Public-Key Cryptography\n              Standards (PKCS) #1: RSA\
    \ Cryptography Specifications\n              Version 2.1\", RFC 3447, DOI 10.17487/RFC3447,\
    \ February\n              2003, <http://www.rfc-editor.org/info/rfc3447>.\n  \
    \ [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n     \
    \         IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n         \
    \     DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n\
    \   [RFC6030]  Hoyer, P., Pei, M., and S. Machani, \"Portable Symmetric\n    \
    \          Key Container (PSKC)\", RFC 6030, DOI 10.17487/RFC6030,\n         \
    \     October 2010, <http://www.rfc-editor.org/info/rfc6030>.\n   [RFC6838]  Freed,\
    \ N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications and\
    \ Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6838>.\n   [W3C.CR-WebCryptoAPI-20141211]\n\
    \              Sleevi, R. and M. Watson, \"Web Cryptography API\", World\n   \
    \           Wide Web Consortium Candidate Recommendation\n              CR-WebCryptoAPI-20141211,\
    \ December 2014,\n              <http://www.w3.org/TR/2014/CR-WebCryptoAPI-20141211/>.\n\
    \   [W3C.NOTE-xmldsig-core2-20130411]\n              Eastlake, D., Reagle, J.,\
    \ Solo, D., Hirsch, F., Roessler,\n              T., Yiu, K., Datta, P., and S.\
    \ Cantor, \"XML Signature\n              Syntax and Processing Version 2.0\",\
    \ World Wide Web\n              Consortium Note NOTE-xmldsig-core2-20130411, April\
    \ 2013,\n              <http://www.w3.org/TR/2013/NOTE-xmldsig-core2-20130411/>.\n"
- title: Appendix A.  Example JSON Web Key Sets
  contents:
  - 'Appendix A.  Example JSON Web Key Sets

    '
- title: A.1.  Example Public Keys
  contents:
  - "A.1.  Example Public Keys\n   The following example JWK Set contains two public\
    \ keys represented as\n   JWKs: one using an Elliptic Curve algorithm and a second\
    \ one using an\n   RSA algorithm.  The first specifies that the key is to be used\
    \ for\n   encryption.  The second specifies that the key is to be used with the\n\
    \   \"RS256\" algorithm.  Both provide a key ID for key matching purposes.\n \
    \  In both cases, integers are represented using the base64url encoding\n   of\
    \ their big-endian representations.  (Line breaks within values are\n   for display\
    \ purposes only.)\n     {\"keys\":\n       [\n         {\"kty\":\"EC\",\n    \
    \      \"crv\":\"P-256\",\n          \"x\":\"MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4\"\
    ,\n          \"y\":\"4Etl6SRW2YiLUrN5vfvVHuhp7x8PxltmWWlbbM4IFyM\",\n        \
    \  \"use\":\"enc\",\n          \"kid\":\"1\"},\n         {\"kty\":\"RSA\",\n \
    \         \"n\": \"0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx\n     4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs\n\
    \     tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2\n     QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI\n\
    \     SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb\n     w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw\"\
    ,\n          \"e\":\"AQAB\",\n          \"alg\":\"RS256\",\n          \"kid\"\
    :\"2011-04-29\"}\n       ]\n     }\n"
- title: A.2.  Example Private Keys
  contents:
  - "A.2.  Example Private Keys\n   The following example JWK Set contains two keys\
    \ represented as JWKs\n   containing both public and private key values: one using\
    \ an Elliptic\n   Curve algorithm and a second one using an RSA algorithm.  This\n\
    \   example extends the example in the previous section, adding private\n   key\
    \ values.  (Line breaks within values are for display purposes\n   only.)\n  \
    \   {\"keys\":\n       [\n         {\"kty\":\"EC\",\n          \"crv\":\"P-256\"\
    ,\n          \"x\":\"MKBCTNIcKUSDii11ySs3526iDZ8AiTo7Tu6KPAqv7D4\",\n        \
    \  \"y\":\"4Etl6SRW2YiLUrN5vfvVHuhp7x8PxltmWWlbbM4IFyM\",\n          \"d\":\"\
    870MB6gfuTJ4HtUnUvYMyJpr5eUZNP4Bk43bVdj3eAE\",\n          \"use\":\"enc\",\n \
    \         \"kid\":\"1\"},\n         {\"kty\":\"RSA\",\n          \"n\":\"0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx4\n\
    \     cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMst\n     n64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2Q\n\
    \     vzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbIS\n     D08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqbw\n\
    \     0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw\",\n          \"e\":\"AQAB\",\n     \
    \     \"d\":\"X4cTteJY_gn4FYPsXB8rdXix5vwsg1FLN5E3EaG6RJoVH-HLLKD9\n     M7dx5oo7GURknchnrRweUkC7hT5fJLM0WbFAKNLWY2vv7B6NqXSzUvxT0_YSfqij\n\
    \     wp3RTzlBaCxWp4doFk5N2o8Gy_nHNKroADIkJ46pRUohsXywbReAdYaMwFs9tv8d\n     _cPVY3i07a3t8MN6TNwm0dSawm9v47UiCl3Sk5ZiG7xojPLu4sbg1U2jx4IBTNBz\n\
    \     nbJSzFHK66jT8bgkuqsk0GjskDJk19Z4qwjwbsnn4j2WBii3RL-Us2lGVkY8fkFz\n     me1z0HbIkfz0Y6mqnOYtqc0X4jfcKoAC8Q\"\
    ,\n          \"p\":\"83i-7IvMGXoMXCskv73TKr8637FiO7Z27zv8oj6pbWUQyLPQBQxtPV\n\
    \     nwD20R-60eTDmD2ujnMt5PoqMrm8RfmNhVWDtjjMmCMjOpSXicFHj7XOuVIYQyqV\n     WlWEh6dN36GVZYk93N8Bc9vY41xy8B9RzzOGVQzXvNEvn7O0nVbfs\"\
    ,\n          \"q\":\"3dfOR9cuYq-0S-mkFLzgItgMEfFzB2q3hWehMuG0oCuqnb3vobLyum\n\
    \     qjVZQO1dIrdwgTnCdpYzBcOfW5r370AFXjiWft_NGEiovonizhKpo9VVS78TzFgx\n     kIdrecRezsZ-1kYd_s1qDbxtkDEgfAITAG9LUnADun4vIcb6yelxk\"\
    ,\n          \"dp\":\"G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oim\n\
    \     YwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_Nmtu\n     YZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0\"\
    ,\n          \"dq\":\"s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUU\n\
    \     vMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9\n     GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk\"\
    ,\n          \"qi\":\"GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzg\n\
    \     UIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rx\n     yR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU\"\
    ,\n          \"alg\":\"RS256\",\n          \"kid\":\"2011-04-29\"}\n       ]\n\
    \     }\n"
- title: A.3.  Example Symmetric Keys
  contents:
  - "A.3.  Example Symmetric Keys\n   The following example JWK Set contains two symmetric\
    \ keys represented\n   as JWKs: one designated as being for use with the AES Key\
    \ Wrap\n   algorithm and a second one that is an HMAC key.  (Line breaks within\n\
    \   values are for display purposes only.)\n     {\"keys\":\n       [\n      \
    \   {\"kty\":\"oct\",\n          \"alg\":\"A128KW\",\n          \"k\":\"GawgguFyGrWKav7AX4VKUg\"\
    },\n         {\"kty\":\"oct\",\n          \"k\":\"AyM1SysPpbyDfgZld3umj1qzKObwVMkoqQ-EstJQLr_T-1qS0gZH75\n\
    \     aKtMN3Yj0iPS4hcgUuTwjAzZr1Z9CAow\",\n          \"kid\":\"HMAC key used in\
    \ JWS spec Appendix A.1 example\"}\n       ]\n     }\n"
- title: Appendix B.  Example Use of "x5c" (X.509 Certificate Chain) Parameter
  contents:
  - "Appendix B.  Example Use of \"x5c\" (X.509 Certificate Chain) Parameter\n   The\
    \ following is an example of a JWK with a RSA signing key\n   represented both\
    \ as an RSA public key and as an X.509 certificate\n   using the \"x5c\" parameter\
    \ (with line breaks within values for display\n   purposes only):\n     {\"kty\"\
    :\"RSA\",\n      \"use\":\"sig\",\n      \"kid\":\"1b94c\",\n      \"n\":\"vrjOfz9Ccdgx5nQudyhdoR17V-IubWMeOZCwX_jj0hgAsz2J_pqYW08\n\
    \      PLbK_PdiVGKPrqzmDIsLI7sA25VEnHU1uCLNwBuUiCO11_-7dYbsr4iJmG0Q\n      u2j8DsVyT1azpJC_NG84Ty5KKthuCaPod7iI7w0LK9orSMhBEwwZDCxTWq4a\n\
    \      YWAchc8t-emd9qOvWtVMDC2BXksRngh6X5bUYLy6AyHKvj-nUy1wgzjYQDwH\n      MTplCoLtU-o-8SNnZ1tmRoGE9uJkBLdh5gFENabWnU5m1ZqZPdwS-qo-meMv\n\
    \      VfJb6jJVWRpl2SUtCnYG2C32qvbWbjZ_jBPD5eunqsIo1vQ\",\n      \"e\":\"AQAB\"\
    ,\n      \"x5c\":\n       [\"MIIDQjCCAiqgAwIBAgIGATz/FuLiMA0GCSqGSIb3DQEBBQUAMGIxCzAJB\n\
    \       gNVBAYTAlVTMQswCQYDVQQIEwJDTzEPMA0GA1UEBxMGRGVudmVyMRwwGgYD\n       VQQKExNQaW5nIElkZW50aXR5IENvcnAuMRcwFQYDVQQDEw5CcmlhbiBDYW1\n\
    \       wYmVsbDAeFw0xMzAyMjEyMzI5MTVaFw0xODA4MTQyMjI5MTVaMGIxCzAJBg\n       NVBAYTAlVTMQswCQYDVQQIEwJDTzEPMA0GA1UEBxMGRGVudmVyMRwwGgYDV\n\
    \       QQKExNQaW5nIElkZW50aXR5IENvcnAuMRcwFQYDVQQDEw5CcmlhbiBDYW1w\n       YmVsbDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64zn8/QnH\n\
    \       YMeZ0LncoXaEde1fiLm1jHjmQsF/449IYALM9if6amFtPDy2yvz3YlRij66\n       s5gyLCyO7ANuVRJx1NbgizcAblIgjtdf/u3WG7K+IiZhtELto/A7Fck9Ws6\n\
    \       SQvzRvOE8uSirYbgmj6He4iO8NCyvaK0jIQRMMGQwsU1quGmFgHIXPLfnpn\n       fajr1rVTAwtgV5LEZ4Iel+W1GC8ugMhyr4/p1MtcIM42EA8BzE6ZQqC7VPq\n\
    \       PvEjZ2dbZkaBhPbiZAS3YeYBRDWm1p1OZtWamT3cEvqqPpnjL1XyW+oyVVk\n       aZdklLQp2Btgt9qr21m42f4wTw+Xrp6rCKNb0CAwEAATANBgkqhkiG9w0BA\n\
    \       QUFAAOCAQEAh8zGlfSlcI0o3rYDPBB07aXNswb4ECNIKG0CETTUxmXl9KUL\n       +9gGlqCz5iWLOgWsnrcKcY0vXPG9J1r9AqBNTqNgHq2G03X09266X5CpOe1\n\
    \       zFo+Owb1zxtp3PehFdfQJ610CDLEaS9V9Rqp17hCyybEpOGVwe8fnk+fbEL\n       2Bo3UPGrpsHzUoaGpDftmWssZkhpBJKVMJyf/RuP2SmmaIzmnw9JiSlYhzo\n\
    \       4tpzd5rFXhjRbg4zW9C+2qok+2+qDM1iJ684gPHMIY8aLWrdgQTxkumGmTq\n       gawR+N5MDtdPTEQ0XfIBc2cJEUyMTY5MPvACWpkA6SdS4xSvdXK3IVfOWA==\"\
    ]\n     }\n"
- title: Appendix C.  Example Encrypted RSA Private Key
  contents:
  - "Appendix C.  Example Encrypted RSA Private Key\n   This example encrypts an RSA\
    \ private key to the recipient using\n   \"PBES2-HS256+A128KW\" for key encryption\
    \ and \"A128CBC+HS256\" for\n   content encryption.\n   NOTE: Unless otherwise\
    \ indicated, all line breaks are included solely\n   for readability.\n"
- title: C.1.  Plaintext RSA Private Key
  contents:
  - "C.1.  Plaintext RSA Private Key\n   The following RSA key is the plaintext for\
    \ the authenticated\n   encryption operation, formatted as a JWK (with line breaks\
    \ within\n   values for display purposes only):\n     {\n      \"kty\":\"RSA\"\
    ,\n      \"kid\":\"juliet@capulet.lit\",\n      \"use\":\"enc\",\n      \"n\"\
    :\"t6Q8PWSi1dkJj9hTP8hNYFlvadM7DflW9mWepOJhJ66w7nyoK1gPNqFMSQRy\n           O125Gp-TEkodhWr0iujjHVx7BcV0llS4w5ACGgPrcAd6ZcSR0-Iqom-QFcNP\n\
    \           8Sjg086MwoqQU_LYywlAGZ21WSdS_PERyGFiNnj3QQlO8Yns5jCtLCRwLHL0\n   \
    \        Pb1fEv45AuRIuUfVcPySBWYnDyGxvjYGDSM-AqWS9zIQ2ZilgT-GqUmipg0X\n      \
    \     OC0Cc20rgLe2ymLHjpHciCKVAbY5-L32-lSeZO-Os6U15_aXrk9Gw8cPUaX1\n         \
    \  _I8sLGuSiVdt3C_Fn2PZ3Z8i744FPFGGcG1qs2Wz-Q\",\n      \"e\":\"AQAB\",\n    \
    \  \"d\":\"GRtbIQmhOZtyszfgKdg4u_N-R_mZGU_9k7JQ_jn1DnfTuMdSNprTeaSTyWfS\n    \
    \       NkuaAwnOEbIQVy1IQbWVV25NY3ybc_IhUJtfri7bAXYEReWaCl3hdlPKXy9U\n       \
    \    vqPYGR0kIXTQRqns-dVJ7jahlI7LyckrpTmrM8dWBo4_PMaenNnPiQgO0xnu\n          \
    \ ToxutRZJfJvG4Ox4ka3GORQd9CsCZ2vsUDmsXOfUENOyMqADC6p1M3h33tsu\n           rY15k9qMSpG9OX_IJAXmxzAh_tWiZOwk2K4yxH9tS3Lq1yX8C1EWmeRDkK2a\n\
    \           hecG85-oLKQt5VEpWHKmjOi_gJSdSgqcN96X52esAQ\",\n      \"p\":\"2rnSOV4hKSN8sS4CgcQHFbs08XboFDqKum3sc4h3GRxrTmQdl1ZK9uw-PIHf\n\
    \           QP0FkxXVrx-WE-ZEbrqivH_2iCLUS7wAl6XvARt1KkIaUxPPSYB9yk31s0Q8\n   \
    \        UK96E3_OrADAYtAJs-M3JxCLfNgqh56HDnETTQhH3rCT5T3yJws\",\n      \"q\":\"\
    1u_RiFDP7LBYh3N4GXLT9OpSKYP0uQZyiaZwBtOCBNJgQxaj10RWjsZu0c6I\n           edis4S7B_coSKB0Kj9PaPaBzg-IySRvvcQuPamQu66riMhjVtG6TlV8CLCYK\n\
    \           rYl52ziqK0E_ym2QnkwsUX7eYTB7LbAHRK9GqocDE5B0f808I4s\",\n      \"dp\"\
    :\"KkMTWqBUefVwZ2_Dbj1pPQqyHSHjj90L5x_MOzqYAJMcLMZtbUtwKqvVDq3\n           tbEo3ZIcohbDtt6SbfmWzggabpQxNxuBpoOOf_a_HgMXK_lhqigI4y_kqS1w\n\
    \           Y52IwjUn5rgRrJ-yYo1h41KR-vz2pYhEAeYrhttWtxVqLCRViD6c\",\n      \"\
    dq\":\"AvfS0-gRxvn0bwJoMSnFxYcK1WnuEjQFluMGfwGitQBWtfZ1Er7t1xDkbN9\n         \
    \  GQTB9yqpDoYaN06H7CFtrkxhJIBQaj6nkF5KKS3TQtQ5qCzkOkmxIe3KRbBy\n           mXxkb5qwUpX5ELD5xFc6FeiafWYY63TmmEAu_lRFCOJ3xDea-ots\"\
    ,\n      \"qi\":\"lSQi-w9CpyUReMErP1RsBLk7wNtOvs5EQpPqmuMvqW57NBUczScEoPwmUqq\n\
    \           abu9V0-Py4dQ57_bapoKRu1R90bvuFnU63SHWEFglZQvJDMeAvmj4sm-Fp0o\n   \
    \        Yu_neotgQ0hzbI5gry7ajdYy9-2lNx_76aBZoOUu9HCJ-UsfSOI8\"\n     }\n   The\
    \ octets representing the plaintext used in this example (using\n   JSON array\
    \ notation) are:\n   [123, 34, 107, 116, 121, 34, 58, 34, 82, 83, 65, 34, 44,\
    \ 34, 107,\n   105, 100, 34, 58, 34, 106, 117, 108, 105, 101, 116, 64, 99, 97,\
    \ 112,\n   117, 108, 101, 116, 46, 108, 105, 116, 34, 44, 34, 117, 115, 101, 34,\n\
    \   58, 34, 101, 110, 99, 34, 44, 34, 110, 34, 58, 34, 116, 54, 81, 56,\n   80,\
    \ 87, 83, 105, 49, 100, 107, 74, 106, 57, 104, 84, 80, 56, 104, 78,\n   89, 70,\
    \ 108, 118, 97, 100, 77, 55, 68, 102, 108, 87, 57, 109, 87,\n   101, 112, 79,\
    \ 74, 104, 74, 54, 54, 119, 55, 110, 121, 111, 75, 49,\n   103, 80, 78, 113, 70,\
    \ 77, 83, 81, 82, 121, 79, 49, 50, 53, 71, 112,\n   45, 84, 69, 107, 111, 100,\
    \ 104, 87, 114, 48, 105, 117, 106, 106, 72,\n   86, 120, 55, 66, 99, 86, 48, 108,\
    \ 108, 83, 52, 119, 53, 65, 67, 71,\n   103, 80, 114, 99, 65, 100, 54, 90, 99,\
    \ 83, 82, 48, 45, 73, 113, 111,\n   109, 45, 81, 70, 99, 78, 80, 56, 83, 106,\
    \ 103, 48, 56, 54, 77, 119,\n   111, 113, 81, 85, 95, 76, 89, 121, 119, 108, 65,\
    \ 71, 90, 50, 49, 87,\n   83, 100, 83, 95, 80, 69, 82, 121, 71, 70, 105, 78, 110,\
    \ 106, 51, 81,\n   81, 108, 79, 56, 89, 110, 115, 53, 106, 67, 116, 76, 67, 82,\
    \ 119, 76,\n   72, 76, 48, 80, 98, 49, 102, 69, 118, 52, 53, 65, 117, 82, 73,\
    \ 117,\n   85, 102, 86, 99, 80, 121, 83, 66, 87, 89, 110, 68, 121, 71, 120, 118,\n\
    \   106, 89, 71, 68, 83, 77, 45, 65, 113, 87, 83, 57, 122, 73, 81, 50,\n   90,\
    \ 105, 108, 103, 84, 45, 71, 113, 85, 109, 105, 112, 103, 48, 88,\n   79, 67,\
    \ 48, 67, 99, 50, 48, 114, 103, 76, 101, 50, 121, 109, 76, 72,\n   106, 112, 72,\
    \ 99, 105, 67, 75, 86, 65, 98, 89, 53, 45, 76, 51, 50,\n   45, 108, 83, 101, 90,\
    \ 79, 45, 79, 115, 54, 85, 49, 53, 95, 97, 88,\n   114, 107, 57, 71, 119, 56,\
    \ 99, 80, 85, 97, 88, 49, 95, 73, 56, 115,\n   76, 71, 117, 83, 105, 86, 100,\
    \ 116, 51, 67, 95, 70, 110, 50, 80, 90,\n   51, 90, 56, 105, 55, 52, 52, 70, 80,\
    \ 70, 71, 71, 99, 71, 49, 113,\n   115, 50, 87, 122, 45, 81, 34, 44, 34, 101,\
    \ 34, 58, 34, 65, 81, 65,\n   66, 34, 44, 34, 100, 34, 58, 34, 71, 82, 116, 98,\
    \ 73, 81, 109, 104,\n   79, 90, 116, 121, 115, 122, 102, 103, 75, 100, 103, 52,\
    \ 117, 95, 78,\n   45, 82, 95, 109, 90, 71, 85, 95, 57, 107, 55, 74, 81, 95, 106,\
    \ 110,\n   49, 68, 110, 102, 84, 117, 77, 100, 83, 78, 112, 114, 84, 101, 97,\n\
    \   83, 84, 121, 87, 102, 83, 78, 107, 117, 97, 65, 119, 110, 79, 69, 98,\n  \
    \ 73, 81, 86, 121, 49, 73, 81, 98, 87, 86, 86, 50, 53, 78, 89, 51, 121,\n   98,\
    \ 99, 95, 73, 104, 85, 74, 116, 102, 114, 105, 55, 98, 65, 88, 89,\n   69, 82,\
    \ 101, 87, 97, 67, 108, 51, 104, 100, 108, 80, 75, 88, 121, 57,\n   85, 118, 113,\
    \ 80, 89, 71, 82, 48, 107, 73, 88, 84, 81, 82, 113, 110,\n   115, 45, 100, 86,\
    \ 74, 55, 106, 97, 104, 108, 73, 55, 76, 121, 99,\n   107, 114, 112, 84, 109,\
    \ 114, 77, 56, 100, 87, 66, 111, 52, 95, 80,\n   77, 97, 101, 110, 78, 110, 80,\
    \ 105, 81, 103, 79, 48, 120, 110, 117,\n   84, 111, 120, 117, 116, 82, 90, 74,\
    \ 102, 74, 118, 71, 52, 79, 120,\n   52, 107, 97, 51, 71, 79, 82, 81, 100, 57,\
    \ 67, 115, 67, 90, 50, 118,\n   115, 85, 68, 109, 115, 88, 79, 102, 85, 69, 78,\
    \ 79, 121, 77, 113, 65,\n   68, 67, 54, 112, 49, 77, 51, 104, 51, 51, 116, 115,\
    \ 117, 114, 89, 49,\n   53, 107, 57, 113, 77, 83, 112, 71, 57, 79, 88, 95, 73,\
    \ 74, 65, 88,\n   109, 120, 122, 65, 104, 95, 116, 87, 105, 90, 79, 119, 107,\
    \ 50, 75,\n   52, 121, 120, 72, 57, 116, 83, 51, 76, 113, 49, 121, 88, 56, 67,\
    \ 49,\n   69, 87, 109, 101, 82, 68, 107, 75, 50, 97, 104, 101, 99, 71, 56, 53,\n\
    \   45, 111, 76, 75, 81, 116, 53, 86, 69, 112, 87, 72, 75, 109, 106, 79,\n   105,\
    \ 95, 103, 74, 83, 100, 83, 103, 113, 99, 78, 57, 54, 88, 53, 50,\n   101, 115,\
    \ 65, 81, 34, 44, 34, 112, 34, 58, 34, 50, 114, 110, 83, 79,\n   86, 52, 104,\
    \ 75, 83, 78, 56, 115, 83, 52, 67, 103, 99, 81, 72, 70,\n   98, 115, 48, 56, 88,\
    \ 98, 111, 70, 68, 113, 75, 117, 109, 51, 115, 99,\n   52, 104, 51, 71, 82, 120,\
    \ 114, 84, 109, 81, 100, 108, 49, 90, 75, 57,\n   117, 119, 45, 80, 73, 72, 102,\
    \ 81, 80, 48, 70, 107, 120, 88, 86, 114,\n   120, 45, 87, 69, 45, 90, 69, 98,\
    \ 114, 113, 105, 118, 72, 95, 50, 105,\n   67, 76, 85, 83, 55, 119, 65, 108, 54,\
    \ 88, 118, 65, 82, 116, 49, 75,\n   107, 73, 97, 85, 120, 80, 80, 83, 89, 66,\
    \ 57, 121, 107, 51, 49, 115,\n   48, 81, 56, 85, 75, 57, 54, 69, 51, 95, 79, 114,\
    \ 65, 68, 65, 89, 116,\n   65, 74, 115, 45, 77, 51, 74, 120, 67, 76, 102, 78,\
    \ 103, 113, 104, 53,\n   54, 72, 68, 110, 69, 84, 84, 81, 104, 72, 51, 114, 67,\
    \ 84, 53, 84,\n   51, 121, 74, 119, 115, 34, 44, 34, 113, 34, 58, 34, 49, 117,\
    \ 95, 82,\n   105, 70, 68, 80, 55, 76, 66, 89, 104, 51, 78, 52, 71, 88, 76, 84,\
    \ 57,\n   79, 112, 83, 75, 89, 80, 48, 117, 81, 90, 121, 105, 97, 90, 119, 66,\n\
    \   116, 79, 67, 66, 78, 74, 103, 81, 120, 97, 106, 49, 48, 82, 87, 106,\n   115,\
    \ 90, 117, 48, 99, 54, 73, 101, 100, 105, 115, 52, 83, 55, 66, 95,\n   99, 111,\
    \ 83, 75, 66, 48, 75, 106, 57, 80, 97, 80, 97, 66, 122, 103,\n   45, 73, 121,\
    \ 83, 82, 118, 118, 99, 81, 117, 80, 97, 109, 81, 117, 54,\n   54, 114, 105, 77,\
    \ 104, 106, 86, 116, 71, 54, 84, 108, 86, 56, 67, 76,\n   67, 89, 75, 114, 89,\
    \ 108, 53, 50, 122, 105, 113, 75, 48, 69, 95, 121,\n   109, 50, 81, 110, 107,\
    \ 119, 115, 85, 88, 55, 101, 89, 84, 66, 55, 76,\n   98, 65, 72, 82, 75, 57, 71,\
    \ 113, 111, 99, 68, 69, 53, 66, 48, 102,\n   56, 48, 56, 73, 52, 115, 34, 44,\
    \ 34, 100, 112, 34, 58, 34, 75, 107,\n   77, 84, 87, 113, 66, 85, 101, 102, 86,\
    \ 119, 90, 50, 95, 68, 98, 106,\n   49, 112, 80, 81, 113, 121, 72, 83, 72, 106,\
    \ 106, 57, 48, 76, 53, 120,\n   95, 77, 79, 122, 113, 89, 65, 74, 77, 99, 76,\
    \ 77, 90, 116, 98, 85,\n   116, 119, 75, 113, 118, 86, 68, 113, 51, 116, 98, 69,\
    \ 111, 51, 90,\n   73, 99, 111, 104, 98, 68, 116, 116, 54, 83, 98, 102, 109, 87,\
    \ 122,\n   103, 103, 97, 98, 112, 81, 120, 78, 120, 117, 66, 112, 111, 79, 79,\n\
    \   102, 95, 97, 95, 72, 103, 77, 88, 75, 95, 108, 104, 113, 105, 103,\n   73,\
    \ 52, 121, 95, 107, 113, 83, 49, 119, 89, 53, 50, 73, 119, 106, 85,\n   110, 53,\
    \ 114, 103, 82, 114, 74, 45, 121, 89, 111, 49, 104, 52, 49,\n   75, 82, 45, 118,\
    \ 122, 50, 112, 89, 104, 69, 65, 101, 89, 114, 104,\n   116, 116, 87, 116, 120,\
    \ 86, 113, 76, 67, 82, 86, 105, 68, 54, 99, 34,\n   44, 34, 100, 113, 34, 58,\
    \ 34, 65, 118, 102, 83, 48, 45, 103, 82, 120,\n   118, 110, 48, 98, 119, 74, 111,\
    \ 77, 83, 110, 70, 120, 89, 99, 75, 49,\n   87, 110, 117, 69, 106, 81, 70, 108,\
    \ 117, 77, 71, 102, 119, 71, 105,\n   116, 81, 66, 87, 116, 102, 90, 49, 69, 114,\
    \ 55, 116, 49, 120, 68,\n   107, 98, 78, 57, 71, 81, 84, 66, 57, 121, 113, 112,\
    \ 68, 111, 89, 97,\n   78, 48, 54, 72, 55, 67, 70, 116, 114, 107, 120, 104, 74,\
    \ 73, 66, 81,\n   97, 106, 54, 110, 107, 70, 53, 75, 75, 83, 51, 84, 81, 116,\
    \ 81, 53,\n   113, 67, 122, 107, 79, 107, 109, 120, 73, 101, 51, 75, 82, 98, 66,\n\
    \   121, 109, 88, 120, 107, 98, 53, 113, 119, 85, 112, 88, 53, 69, 76,\n   68,\
    \ 53, 120, 70, 99, 54, 70, 101, 105, 97, 102, 87, 89, 89, 54, 51,\n   84, 109,\
    \ 109, 69, 65, 117, 95, 108, 82, 70, 67, 79, 74, 51, 120, 68,\n   101, 97, 45,\
    \ 111, 116, 115, 34, 44, 34, 113, 105, 34, 58, 34, 108,\n   83, 81, 105, 45, 119,\
    \ 57, 67, 112, 121, 85, 82, 101, 77, 69, 114, 80,\n   49, 82, 115, 66, 76, 107,\
    \ 55, 119, 78, 116, 79, 118, 115, 53, 69, 81,\n   112, 80, 113, 109, 117, 77,\
    \ 118, 113, 87, 53, 55, 78, 66, 85, 99,\n   122, 83, 99, 69, 111, 80, 119, 109,\
    \ 85, 113, 113, 97, 98, 117, 57,\n   86, 48, 45, 80, 121, 52, 100, 81, 53, 55,\
    \ 95, 98, 97, 112, 111, 75,\n   82, 117, 49, 82, 57, 48, 98, 118, 117, 70, 110,\
    \ 85, 54, 51, 83, 72,\n   87, 69, 70, 103, 108, 90, 81, 118, 74, 68, 77, 101,\
    \ 65, 118, 109,\n   106, 52, 115, 109, 45, 70, 112, 48, 111, 89, 117, 95, 110,\
    \ 101, 111,\n   116, 103, 81, 48, 104, 122, 98, 73, 53, 103, 114, 121, 55, 97,\
    \ 106,\n   100, 89, 121, 57, 45, 50, 108, 78, 120, 95, 55, 54, 97, 66, 90, 111,\n\
    \   79, 85, 117, 57, 72, 67, 74, 45, 85, 115, 102, 83, 79, 73, 56, 34,\n   125]\n"
- title: C.2.  JOSE Header
  contents:
  - "C.2.  JOSE Header\n   The following example JWE Protected Header declares that:\n\
    \   o  the Content Encryption Key is encrypted to the recipient using the\n  \
    \    PSE2-HS256+A128KW algorithm to produce the JWE Encrypted Key,\n   o  the\
    \ Salt Input (\"p2s\") value is [217, 96, 147, 112, 150, 117, 70,\n      247,\
    \ 127, 8, 155, 137, 174, 42, 80, 215],\n   o  the Iteration Count (\"p2c\") value\
    \ is 4096,\n   o  authenticated encryption is performed on the plaintext using\
    \ the\n      AES_128_CBC_HMAC_SHA_256 algorithm to produce the ciphertext and\n\
    \      the Authentication Tag, and\n   o  the content type is application/jwk+json.\n\
    \     {\n      \"alg\":\"PBES2-HS256+A128KW\",\n      \"p2s\":\"2WCTcJZ1Rvd_CJuJripQ1w\"\
    ,\n      \"p2c\":4096,\n      \"enc\":\"A128CBC-HS256\",\n      \"cty\":\"jwk+json\"\
    \n     }\n   Encoding this JWE Protected Header as BASE64URL(UTF8(JWE Protected\n\
    \   Header)) gives this value (with line breaks for display purposes\n   only):\n\
    \     eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJwMnMiOiIyV0NUY0paMVJ2ZF9DSn\n   \
    \  VKcmlwUTF3IiwicDJjIjo0MDk2LCJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiY3R5Ijoi\n     andrK2pzb24ifQ\n"
- title: C.3.  Content Encryption Key (CEK)
  contents:
  - "C.3.  Content Encryption Key (CEK)\n   Generate a 256-bit random Content Encryption\
    \ Key (CEK).  In this\n   example, the value (using JSON array notation) is:\n\
    \   [111, 27, 25, 52, 66, 29, 20, 78, 92, 176, 56, 240, 65, 208, 82, 112,\n  \
    \ 161, 131, 36, 55, 202, 236, 185, 172, 129, 23, 153, 194, 195, 48,\n   253, 182]\n"
- title: C.4.  Key Derivation
  contents:
  - "C.4.  Key Derivation\n   Derive a key from a shared passphrase using the PBKDF2\
    \ algorithm with\n   HMAC SHA-256 and the specified Salt and Iteration Count values\
    \ and a\n   128-bit requested output key size to produce the PBKDF2 Derived Key.\n\
    \   This example uses the following passphrase:\n     Thus from my lips, by yours,\
    \ my sin is purged.\n   The octets representing the passphrase are:\n   [84, 104,\
    \ 117, 115, 32, 102, 114, 111, 109, 32, 109, 121, 32, 108,\n   105, 112, 115,\
    \ 44, 32, 98, 121, 32, 121, 111, 117, 114, 115, 44, 32,\n   109, 121, 32, 115,\
    \ 105, 110, 32, 105, 115, 32, 112, 117, 114, 103,\n   101, 100, 46]\n   The Salt\
    \ value (UTF8(Alg) || 0x00 || Salt Input) is:\n   [80, 66, 69, 83, 50, 45, 72,\
    \ 83, 50, 53, 54, 43, 65, 49, 50, 56, 75,\n   87, 0, 217, 96, 147, 112, 150, 117,\
    \ 70, 247, 127, 8, 155, 137, 174,\n   42, 80, 215].\n   The resulting PBKDF2 Derived\
    \ Key value is:\n   [110, 171, 169, 92, 129, 92, 109, 117, 233, 242, 116, 233,\
    \ 170, 14,\n   24, 75]\n"
- title: C.5.  Key Encryption
  contents:
  - "C.5.  Key Encryption\n   Encrypt the CEK with the \"A128KW\" algorithm using\
    \ the PBKDF2 Derived\n   Key.  The resulting JWE Encrypted Key value is:\n   [78,\
    \ 186, 151, 59, 11, 141, 81, 240, 213, 245, 83, 211, 53, 188, 134,\n   188, 66,\
    \ 125, 36, 200, 222, 124, 5, 103, 249, 52, 117, 184, 140, 81,\n   246, 158, 161,\
    \ 177, 20, 33, 245, 57, 59, 4]\n   Encoding this JWE Encrypted Key as BASE64URL(JWE\
    \ Encrypted Key) gives\n   this value:\n     TrqXOwuNUfDV9VPTNbyGvEJ9JMjefAVn-TR1uIxR9p6hsRQh9Tk7BA\n"
- title: C.6.  Initialization Vector
  contents:
  - "C.6.  Initialization Vector\n   Generate a random 128-bit JWE Initialization\
    \ Vector.  In this\n   example, the value is:\n   [97, 239, 99, 214, 171, 54,\
    \ 216, 57, 145, 72, 7, 93, 34, 31, 149,\n   156]\n   Encoding this JWE Initialization\
    \ Vector as BASE64URL(JWE\n   Initialization Vector) gives this value:\n     Ye9j1qs22DmRSAddIh-VnA\n"
- title: C.7.  Additional Authenticated Data
  contents:
  - "C.7.  Additional Authenticated Data\n   Let the Additional Authenticated Data\
    \ encryption parameter be\n   ASCII(BASE64URL(UTF8(JWE Protected Header))).  This\
    \ value is:\n   [123, 34, 97, 108, 103, 34, 58, 34, 80, 66, 69, 83, 50, 45, 72,\
    \ 83,\n   50, 53, 54, 43, 65, 49, 50, 56, 75, 87, 34, 44, 34, 112, 50, 115, 34,\n\
    \   58, 34, 50, 87, 67, 84, 99, 74, 90, 49, 82, 118, 100, 95, 67, 74,\n   117,\
    \ 74, 114, 105, 112, 81, 49, 119, 34, 44, 34, 112, 50, 99, 34, 58,\n   52, 48,\
    \ 57, 54, 44, 34, 101, 110, 99, 34, 58, 34, 65, 49, 50, 56, 67,\n   66, 67, 45,\
    \ 72, 83, 50, 53, 54, 34, 44, 34, 99, 116, 121, 34, 58, 34,\n   106, 119, 107,\
    \ 43, 106, 115, 111, 110, 34, 125]\n"
- title: C.8.  Content Encryption
  contents:
  - "C.8.  Content Encryption\n   Perform authenticated encryption on the plaintext\
    \ with the\n   AES_128_CBC_HMAC_SHA_256 algorithm using the CEK as the encryption\n\
    \   key, the JWE Initialization Vector, and the Additional Authenticated\n   Data\
    \ value above.  The resulting ciphertext is:\n   [3, 8, 65, 242, 92, 107, 148,\
    \ 168, 197, 159, 77, 139, 25, 97, 42,\n   131, 110, 199, 225, 56, 61, 127, 38,\
    \ 64, 108, 91, 247, 167, 150, 98,\n   112, 122, 99, 235, 132, 50, 28, 46, 56,\
    \ 170, 169, 89, 220, 145, 38,\n   157, 148, 224, 66, 140, 8, 169, 146, 117, 222,\
    \ 54, 242, 28, 31, 11,\n   129, 227, 226, 169, 66, 117, 133, 254, 140, 216, 115,\
    \ 203, 131, 60,\n   60, 47, 233, 132, 121, 13, 35, 188, 53, 19, 172, 77, 59, 54,\
    \ 211,\n   158, 172, 25, 60, 111, 0, 80, 201, 158, 160, 210, 68, 55, 12, 67,\n\
    \   136, 130, 87, 216, 197, 95, 62, 20, 155, 205, 5, 140, 27, 168, 221,\n   65,\
    \ 114, 78, 157, 254, 46, 206, 182, 52, 135, 87, 239, 3, 34, 186,\n   126, 220,\
    \ 151, 17, 33, 237, 57, 96, 172, 183, 58, 45, 248, 103, 241,\n   142, 136, 7,\
    \ 53, 16, 173, 181, 7, 93, 92, 252, 1, 53, 212, 242, 8,\n   255, 11, 239, 181,\
    \ 24, 148, 136, 111, 24, 161, 244, 23, 106, 69, 157,\n   215, 243, 189, 240, 166,\
    \ 169, 249, 72, 38, 201, 99, 223, 173, 229, 9,\n   222, 82, 79, 157, 176, 248,\
    \ 85, 239, 121, 163, 1, 31, 48, 98, 206,\n   61, 249, 104, 216, 201, 227, 105,\
    \ 48, 194, 193, 10, 36, 160, 159,\n   241, 166, 84, 54, 188, 211, 243, 242, 40,\
    \ 46, 45, 193, 193, 160, 169,\n   101, 201, 1, 73, 47, 105, 142, 88, 28, 42, 132,\
    \ 26, 61, 58, 63, 142,\n   243, 77, 26, 179, 153, 166, 46, 203, 208, 49, 55, 229,\
    \ 34, 178, 4,\n   109, 180, 204, 204, 115, 1, 103, 193, 5, 91, 215, 214, 195,\
    \ 1, 110,\n   208, 53, 144, 36, 105, 12, 54, 25, 129, 101, 15, 183, 150, 250,\
    \ 147,\n   115, 227, 58, 250, 5, 128, 232, 63, 15, 14, 19, 141, 124, 253, 142,\n\
    \   137, 189, 135, 26, 44, 240, 27, 88, 132, 105, 127, 6, 71, 37, 41,\n   124,\
    \ 187, 165, 140, 34, 200, 123, 80, 228, 24, 231, 176, 132, 171,\n   138, 145,\
    \ 152, 116, 224, 50, 141, 51, 147, 91, 186, 7, 246, 106, 217,\n   148, 244, 227,\
    \ 244, 45, 220, 121, 165, 224, 148, 181, 17, 181, 128,\n   197, 101, 237, 11,\
    \ 169, 229, 149, 199, 78, 56, 15, 14, 190, 91, 216,\n   222, 247, 213, 74, 40,\
    \ 8, 96, 20, 168, 119, 96, 26, 24, 52, 37, 82,\n   127, 57, 176, 147, 118, 59,\
    \ 7, 224, 33, 117, 72, 155, 29, 82, 26,\n   215, 189, 140, 119, 28, 152, 118,\
    \ 93, 222, 194, 192, 148, 115, 83,\n   253, 216, 212, 108, 88, 83, 175, 172, 220,\
    \ 97, 79, 110, 42, 223, 170,\n   161, 34, 164, 144, 193, 76, 122, 92, 160, 41,\
    \ 178, 175, 6, 35, 96,\n   113, 96, 158, 90, 129, 101, 26, 45, 70, 180, 189, 230,\
    \ 15, 5, 247,\n   150, 209, 94, 171, 26, 13, 142, 212, 129, 1, 176, 5, 0, 112,\
    \ 203,\n   174, 185, 119, 76, 233, 189, 54, 172, 189, 245, 223, 253, 205, 12,\n\
    \   88, 9, 126, 157, 225, 90, 40, 229, 191, 63, 30, 160, 224, 69, 3, 140,\n  \
    \ 109, 70, 89, 37, 213, 245, 194, 210, 180, 188, 63, 210, 139, 221, 2,\n   144,\
    \ 200, 20, 177, 216, 29, 227, 242, 106, 12, 135, 142, 139, 144,\n   82, 225, 162,\
    \ 171, 176, 108, 99, 6, 43, 193, 161, 116, 234, 216, 1,\n   242, 21, 124, 162,\
    \ 98, 205, 124, 193, 38, 12, 242, 90, 101, 76, 204,\n   184, 124, 58, 180, 16,\
    \ 240, 26, 76, 195, 250, 212, 191, 185, 191, 97,\n   198, 186, 73, 225, 75, 14,\
    \ 90, 123, 121, 172, 101, 50, 160, 221, 141,\n   253, 205, 126, 77, 9, 87, 198,\
    \ 110, 104, 182, 141, 120, 51, 25, 232,\n   3, 32, 80, 6, 156, 8, 18, 4, 135,\
    \ 221, 142, 25, 135, 2, 129, 132,\n   115, 227, 74, 141, 28, 119, 11, 141, 117,\
    \ 134, 198, 62, 150, 254, 97,\n   75, 197, 251, 99, 89, 204, 224, 226, 67, 83,\
    \ 175, 89, 0, 81, 29, 38,\n   207, 89, 140, 255, 197, 177, 164, 128, 62, 116,\
    \ 224, 180, 109, 169,\n   28, 2, 59, 176, 130, 252, 44, 178, 81, 24, 181, 176,\
    \ 75, 44, 61, 91,\n   12, 37, 21, 255, 83, 130, 197, 16, 231, 60, 217, 56, 131,\
    \ 118, 168,\n   202, 58, 52, 84, 124, 162, 185, 174, 162, 226, 242, 112, 68, 246,\n\
    \   202, 16, 208, 52, 154, 58, 129, 80, 102, 33, 171, 6, 186, 177, 14,\n   195,\
    \ 88, 136, 6, 0, 155, 28, 100, 162, 207, 162, 222, 117, 248, 170,\n   208, 114,\
    \ 87, 31, 57, 176, 33, 57, 83, 253, 12, 168, 110, 194, 59,\n   22, 86, 48, 227,\
    \ 196, 22, 176, 218, 122, 149, 21, 249, 195, 178, 174,\n   250, 20, 34, 120, 60,\
    \ 139, 201, 99, 40, 18, 177, 17, 54, 54, 6, 3,\n   222, 128, 160, 88, 11, 27,\
    \ 0, 81, 192, 36, 41, 169, 146, 8, 47, 64,\n   136, 28, 64, 209, 67, 135, 202,\
    \ 20, 234, 182, 91, 204, 146, 195, 187,\n   0, 72, 77, 11, 111, 152, 204, 252,\
    \ 177, 212, 89, 33, 50, 132, 184,\n   44, 183, 186, 19, 250, 69, 176, 201, 102,\
    \ 140, 14, 143, 212, 212,\n   160, 123, 208, 185, 27, 155, 68, 77, 133, 198, 2,\
    \ 126, 155, 215, 22,\n   91, 30, 217, 176, 172, 244, 156, 174, 143, 75, 90, 21,\
    \ 102, 1, 160,\n   59, 253, 188, 88, 57, 185, 197, 83, 24, 22, 180, 174, 47, 207,\
    \ 52, 1,\n   141, 146, 119, 233, 68, 228, 224, 228, 193, 248, 155, 202, 90, 7,\n\
    \   213, 88, 33, 108, 107, 14, 86, 8, 120, 250, 58, 142, 35, 164, 238,\n   221,\
    \ 219, 35, 123, 88, 199, 192, 143, 104, 83, 17, 166, 243, 247, 11,\n   166, 67,\
    \ 68, 204, 132, 23, 110, 103, 228, 14, 55, 122, 88, 57, 180,\n   178, 237, 52,\
    \ 130, 214, 245, 102, 123, 67, 73, 175, 1, 127, 112, 148,\n   94, 132, 164, 197,\
    \ 153, 217, 87, 25, 89, 93, 63, 22, 66, 166, 90,\n   251, 101, 10, 145, 66, 17,\
    \ 124, 36, 255, 165, 226, 97, 16, 86, 112,\n   154, 88, 105, 253, 56, 209, 229,\
    \ 122, 103, 51, 24, 228, 190, 3, 236,\n   48, 182, 121, 176, 140, 128, 117, 87,\
    \ 251, 224, 37, 23, 248, 21, 218,\n   85, 251, 136, 84, 147, 143, 144, 46, 155,\
    \ 183, 251, 89, 86, 23, 26,\n   237, 100, 167, 32, 130, 173, 237, 89, 55, 110,\
    \ 70, 142, 127, 65, 230,\n   208, 109, 69, 19, 253, 84, 130, 130, 193, 92, 58,\
    \ 108, 150, 42, 136,\n   249, 234, 86, 241, 182, 19, 117, 246, 26, 181, 92, 101,\
    \ 155, 44, 103,\n   235, 173, 30, 140, 90, 29, 183, 190, 77, 53, 206, 127, 5,\
    \ 87, 8, 187,\n   184, 92, 4, 157, 22, 18, 105, 251, 39, 88, 182, 181, 103, 148,\
    \ 233,\n   6, 63, 70, 188, 7, 101, 216, 127, 77, 31, 12, 233, 7, 147, 106, 30,\n\
    \   150, 77, 145, 13, 205, 48, 56, 245, 220, 89, 252, 127, 51, 180, 36,\n   31,\
    \ 55, 18, 214, 230, 254, 217, 197, 65, 247, 27, 215, 117, 247, 108,\n   157, 121,\
    \ 11, 63, 150, 195, 83, 6, 134, 242, 41, 24, 105, 204, 5, 63,\n   192, 14, 159,\
    \ 113, 72, 140, 128, 51, 215, 80, 215, 39, 149, 94, 79,\n   128, 34, 5, 129, 82,\
    \ 83, 121, 187, 37, 146, 27, 32, 177, 167, 71, 9,\n   195, 30, 199, 196, 205,\
    \ 252, 207, 69, 8, 120, 27, 190, 51, 43, 75,\n   249, 234, 167, 116, 206, 203,\
    \ 199, 43, 108, 87, 48, 155, 140, 228,\n   210, 85, 25, 161, 96, 67, 8, 205, 64,\
    \ 39, 75, 88, 44, 238, 227, 16,\n   0, 100, 93, 129, 18, 4, 149, 50, 68, 72, 99,\
    \ 35, 111, 254, 27, 102,\n   175, 108, 233, 87, 181, 44, 169, 18, 139, 79, 208,\
    \ 14, 202, 192, 5,\n   162, 222, 231, 149, 24, 211, 49, 120, 101, 39, 206, 87,\
    \ 147, 204,\n   200, 251, 104, 115, 5, 127, 117, 195, 79, 151, 18, 224, 52, 0,\
    \ 245,\n   4, 85, 255, 103, 217, 0, 116, 198, 80, 91, 167, 192, 154, 199, 197,\n\
    \   149, 237, 51, 2, 131, 30, 226, 95, 105, 48, 68, 135, 208, 144, 120,\n   176,\
    \ 145, 157, 8, 171, 80, 94, 61, 92, 92, 220, 157, 13, 138, 51, 23,\n   185, 124,\
    \ 31, 77, 1, 87, 241, 43, 239, 55, 122, 86, 210, 48, 208,\n   204, 112, 144, 80,\
    \ 147, 106, 219, 47, 253, 31, 134, 176, 16, 135,\n   219, 95, 17, 129, 83, 236,\
    \ 125, 136, 112, 86, 228, 252, 71, 129, 218,\n   174, 156, 236, 12, 27, 159, 11,\
    \ 138, 252, 253, 207, 31, 115, 214,\n   118, 239, 203, 16, 211, 205, 99, 22, 51,\
    \ 163, 107, 162, 246, 199, 67,\n   127, 34, 108, 197, 53, 117, 58, 199, 3, 190,\
    \ 74, 70, 190, 65, 235,\n   175, 97, 157, 215, 252, 189, 245, 100, 229, 248, 46,\
    \ 90, 126, 237, 4,\n   159, 128, 58, 7, 156, 236, 69, 191, 85, 240, 179, 224,\
    \ 249, 152, 49,\n   195, 223, 60, 78, 186, 157, 155, 217, 58, 105, 116, 164, 217,\
    \ 111,\n   215, 150, 218, 252, 84, 86, 248, 140, 240, 226, 61, 106, 208, 95, 60,\n\
    \   163, 6, 0, 235, 253, 162, 96, 62, 234, 251, 249, 35, 21, 7, 211, 233,\n  \
    \ 86, 50, 33, 203, 67, 248, 60, 190, 123, 48, 167, 226, 90, 191, 71,\n   56, 183,\
    \ 165, 17, 85, 76, 238, 140, 211, 168, 53, 223, 194, 4, 97,\n   149, 156, 120,\
    \ 137, 76, 33, 229, 243, 194, 208, 198, 202, 139, 28,\n   114, 46, 224, 92, 254,\
    \ 83, 100, 134, 158, 92, 70, 78, 61, 62, 138,\n   24, 173, 216, 66, 198, 70, 254,\
    \ 47, 59, 193, 53, 6, 139, 19, 153,\n   253, 28, 199, 122, 160, 27, 67, 234, 209,\
    \ 227, 139, 4, 50, 7, 178,\n   183, 89, 252, 32, 128, 137, 55, 52, 29, 89, 12,\
    \ 111, 42, 181, 51,\n   170, 132, 132, 207, 170, 228, 254, 178, 213, 0, 136, 175,\
    \ 8]\n   The resulting Authentication Tag value is:\n   [208, 113, 102, 132, 236,\
    \ 236, 67, 223, 39, 53, 98, 99, 32, 121, 17,\n   236]\n   Encoding this JWE Ciphertext\
    \ as BASE64URL(JWE Ciphertext) gives this\n   value (with line breaks for display\
    \ purposes only):\n     AwhB8lxrlKjFn02LGWEqg27H4Tg9fyZAbFv3p5ZicHpj64QyHC44qqlZ3JEmnZTgQo\n\
    \     wIqZJ13jbyHB8LgePiqUJ1hf6M2HPLgzw8L-mEeQ0jvDUTrE07NtOerBk8bwBQyZ6g\n   \
    \  0kQ3DEOIglfYxV8-FJvNBYwbqN1Bck6d_i7OtjSHV-8DIrp-3JcRIe05YKy3Oi34Z_\n     GOiAc1EK21B11c_AE11PII_wvvtRiUiG8YofQXakWd1_O98Kap-UgmyWPfreUJ3lJP\n\
    \     nbD4Ve95owEfMGLOPflo2MnjaTDCwQokoJ_xplQ2vNPz8iguLcHBoKllyQFJL2mOWB\n   \
    \  wqhBo9Oj-O800as5mmLsvQMTflIrIEbbTMzHMBZ8EFW9fWwwFu0DWQJGkMNhmBZQ-3\n     lvqTc-M6-gWA6D8PDhONfP2Oib2HGizwG1iEaX8GRyUpfLuljCLIe1DkGOewhKuKkZ\n\
    \     h04DKNM5Nbugf2atmU9OP0Ldx5peCUtRG1gMVl7Qup5ZXHTjgPDr5b2N731UooCGAU\n   \
    \  qHdgGhg0JVJ_ObCTdjsH4CF1SJsdUhrXvYx3HJh2Xd7CwJRzU_3Y1GxYU6-s3GFPbi\n     rfqqEipJDBTHpcoCmyrwYjYHFgnlqBZRotRrS95g8F95bRXqsaDY7UgQGwBQBwy665\n\
    \     d0zpvTasvfXf_c0MWAl-neFaKOW_Px6g4EUDjG1GWSXV9cLStLw_0ovdApDIFLHYHe\n   \
    \  PyagyHjouQUuGiq7BsYwYrwaF06tgB8hV8omLNfMEmDPJaZUzMuHw6tBDwGkzD-tS_\n     ub9hxrpJ4UsOWnt5rGUyoN2N_c1-TQlXxm5oto14MxnoAyBQBpwIEgSH3Y4ZhwKBhH\n\
    \     PjSo0cdwuNdYbGPpb-YUvF-2NZzODiQ1OvWQBRHSbPWYz_xbGkgD504LRtqRwCO7CC\n   \
    \  _CyyURi1sEssPVsMJRX_U4LFEOc82TiDdqjKOjRUfKK5rqLi8nBE9soQ0DSaOoFQZi\n     GrBrqxDsNYiAYAmxxkos-i3nX4qtByVx85sCE5U_0MqG7COxZWMOPEFrDaepUV-cOy\n\
    \     rvoUIng8i8ljKBKxETY2BgPegKBYCxsAUcAkKamSCC9AiBxA0UOHyhTqtlvMksO7AE\n   \
    \  hNC2-YzPyx1FkhMoS4LLe6E_pFsMlmjA6P1NSge9C5G5tETYXGAn6b1xZbHtmwrPSc\n     ro9LWhVmAaA7_bxYObnFUxgWtK4vzzQBjZJ36UTk4OTB-JvKWgfVWCFsaw5WCHj6Oo\n\
    \     4jpO7d2yN7WMfAj2hTEabz9wumQ0TMhBduZ-QON3pYObSy7TSC1vVme0NJrwF_cJRe\n   \
    \  hKTFmdlXGVldPxZCplr7ZQqRQhF8JP-l4mEQVnCaWGn9ONHlemczGOS-A-wwtnmwjI\n     B1V_vgJRf4FdpV-4hUk4-QLpu3-1lWFxrtZKcggq3tWTduRo5_QebQbUUT_VSCgsFc\n\
    \     OmyWKoj56lbxthN19hq1XGWbLGfrrR6MWh23vk01zn8FVwi7uFwEnRYSafsnWLa1Z5\n   \
    \  TpBj9GvAdl2H9NHwzpB5NqHpZNkQ3NMDj13Fn8fzO0JB83Etbm_tnFQfcb13X3bJ15\n     Cz-Ww1MGhvIpGGnMBT_ADp9xSIyAM9dQ1yeVXk-AIgWBUlN5uyWSGyCxp0cJwx7HxM\n\
    \     38z0UIeBu-MytL-eqndM7LxytsVzCbjOTSVRmhYEMIzUAnS1gs7uMQAGRdgRIElTJE\n   \
    \  SGMjb_4bZq9s6Ve1LKkSi0_QDsrABaLe55UY0zF4ZSfOV5PMyPtocwV_dcNPlxLgNA\n     D1BFX_Z9kAdMZQW6fAmsfFle0zAoMe4l9pMESH0JB4sJGdCKtQXj1cXNydDYozF7l8\n\
    \     H00BV_Er7zd6VtIw0MxwkFCTatsv_R-GsBCH218RgVPsfYhwVuT8R4HarpzsDBufC4\n   \
    \  r8_c8fc9Z278sQ081jFjOja6L2x0N_ImzFNXU6xwO-Ska-QeuvYZ3X_L31ZOX4Llp-\n     7QSfgDoHnOxFv1Xws-D5mDHD3zxOup2b2TppdKTZb9eW2vxUVviM8OI9atBfPKMGAO\n\
    \     v9omA-6vv5IxUH0-lWMiHLQ_g8vnswp-Jav0c4t6URVUzujNOoNd_CBGGVnHiJTCHl\n   \
    \  88LQxsqLHHIu4Fz-U2SGnlxGTj0-ihit2ELGRv4vO8E1BosTmf0cx3qgG0Pq0eOLBD\n     IHsrdZ_CCAiTc0HVkMbyq1M6qEhM-q5P6y1QCIrwg\n\
    \   Encoding this JWE Authentication Tag as BASE64URL(JWE Authentication\n   Tag)\
    \ gives this value:\n     0HFmhOzsQ98nNWJjIHkR7A\n"
- title: C.9.  Complete Representation
  contents:
  - "C.9.  Complete Representation\n   Assemble the final representation: The JWE\
    \ Compact Serialization of\n   this result, as defined in Section 7.1 of [JWE],\
    \ is the string\n   BASE64URL(UTF8(JWE Protected Header)) || '.' || BASE64URL(JWE\n\
    \   Encrypted Key) || '.' || BASE64URL(JWE Initialization Vector) || '.'\n   ||\
    \ BASE64URL(JWE Ciphertext) || '.' || BASE64URL(JWE Authentication\n   Tag).\n\
    \   The final result in this example (with line breaks for display\n   purposes\
    \ only) is:\n     eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJwMnMiOiIyV0NUY0paMVJ2ZF9DSn\n\
    \     VKcmlwUTF3IiwicDJjIjo0MDk2LCJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiY3R5Ijoi\n   \
    \  andrK2pzb24ifQ.\n     TrqXOwuNUfDV9VPTNbyGvEJ9JMjefAVn-TR1uIxR9p6hsRQh9Tk7BA.\n\
    \     Ye9j1qs22DmRSAddIh-VnA.\n     AwhB8lxrlKjFn02LGWEqg27H4Tg9fyZAbFv3p5ZicHpj64QyHC44qqlZ3JEmnZTgQo\n\
    \     wIqZJ13jbyHB8LgePiqUJ1hf6M2HPLgzw8L-mEeQ0jvDUTrE07NtOerBk8bwBQyZ6g\n   \
    \  0kQ3DEOIglfYxV8-FJvNBYwbqN1Bck6d_i7OtjSHV-8DIrp-3JcRIe05YKy3Oi34Z_\n     GOiAc1EK21B11c_AE11PII_wvvtRiUiG8YofQXakWd1_O98Kap-UgmyWPfreUJ3lJP\n\
    \     nbD4Ve95owEfMGLOPflo2MnjaTDCwQokoJ_xplQ2vNPz8iguLcHBoKllyQFJL2mOWB\n   \
    \  wqhBo9Oj-O800as5mmLsvQMTflIrIEbbTMzHMBZ8EFW9fWwwFu0DWQJGkMNhmBZQ-3\n     lvqTc-M6-gWA6D8PDhONfP2Oib2HGizwG1iEaX8GRyUpfLuljCLIe1DkGOewhKuKkZ\n\
    \     h04DKNM5Nbugf2atmU9OP0Ldx5peCUtRG1gMVl7Qup5ZXHTjgPDr5b2N731UooCGAU\n   \
    \  qHdgGhg0JVJ_ObCTdjsH4CF1SJsdUhrXvYx3HJh2Xd7CwJRzU_3Y1GxYU6-s3GFPbi\n     rfqqEipJDBTHpcoCmyrwYjYHFgnlqBZRotRrS95g8F95bRXqsaDY7UgQGwBQBwy665\n\
    \     d0zpvTasvfXf_c0MWAl-neFaKOW_Px6g4EUDjG1GWSXV9cLStLw_0ovdApDIFLHYHe\n   \
    \  PyagyHjouQUuGiq7BsYwYrwaF06tgB8hV8omLNfMEmDPJaZUzMuHw6tBDwGkzD-tS_\n     ub9hxrpJ4UsOWnt5rGUyoN2N_c1-TQlXxm5oto14MxnoAyBQBpwIEgSH3Y4ZhwKBhH\n\
    \     PjSo0cdwuNdYbGPpb-YUvF-2NZzODiQ1OvWQBRHSbPWYz_xbGkgD504LRtqRwCO7CC\n   \
    \  _CyyURi1sEssPVsMJRX_U4LFEOc82TiDdqjKOjRUfKK5rqLi8nBE9soQ0DSaOoFQZi\n     GrBrqxDsNYiAYAmxxkos-i3nX4qtByVx85sCE5U_0MqG7COxZWMOPEFrDaepUV-cOy\n\
    \     rvoUIng8i8ljKBKxETY2BgPegKBYCxsAUcAkKamSCC9AiBxA0UOHyhTqtlvMksO7AE\n   \
    \  hNC2-YzPyx1FkhMoS4LLe6E_pFsMlmjA6P1NSge9C5G5tETYXGAn6b1xZbHtmwrPSc\n     ro9LWhVmAaA7_bxYObnFUxgWtK4vzzQBjZJ36UTk4OTB-JvKWgfVWCFsaw5WCHj6Oo\n\
    \     4jpO7d2yN7WMfAj2hTEabz9wumQ0TMhBduZ-QON3pYObSy7TSC1vVme0NJrwF_cJRe\n   \
    \  hKTFmdlXGVldPxZCplr7ZQqRQhF8JP-l4mEQVnCaWGn9ONHlemczGOS-A-wwtnmwjI\n     B1V_vgJRf4FdpV-4hUk4-QLpu3-1lWFxrtZKcggq3tWTduRo5_QebQbUUT_VSCgsFc\n\
    \     OmyWKoj56lbxthN19hq1XGWbLGfrrR6MWh23vk01zn8FVwi7uFwEnRYSafsnWLa1Z5\n   \
    \  TpBj9GvAdl2H9NHwzpB5NqHpZNkQ3NMDj13Fn8fzO0JB83Etbm_tnFQfcb13X3bJ15\n     Cz-Ww1MGhvIpGGnMBT_ADp9xSIyAM9dQ1yeVXk-AIgWBUlN5uyWSGyCxp0cJwx7HxM\n\
    \     38z0UIeBu-MytL-eqndM7LxytsVzCbjOTSVRmhYEMIzUAnS1gs7uMQAGRdgRIElTJE\n   \
    \  SGMjb_4bZq9s6Ve1LKkSi0_QDsrABaLe55UY0zF4ZSfOV5PMyPtocwV_dcNPlxLgNA\n     D1BFX_Z9kAdMZQW6fAmsfFle0zAoMe4l9pMESH0JB4sJGdCKtQXj1cXNydDYozF7l8\n\
    \     H00BV_Er7zd6VtIw0MxwkFCTatsv_R-GsBCH218RgVPsfYhwVuT8R4HarpzsDBufC4\n   \
    \  r8_c8fc9Z278sQ081jFjOja6L2x0N_ImzFNXU6xwO-Ska-QeuvYZ3X_L31ZOX4Llp-\n     7QSfgDoHnOxFv1Xws-D5mDHD3zxOup2b2TppdKTZb9eW2vxUVviM8OI9atBfPKMGAO\n\
    \     v9omA-6vv5IxUH0-lWMiHLQ_g8vnswp-Jav0c4t6URVUzujNOoNd_CBGGVnHiJTCHl\n   \
    \  88LQxsqLHHIu4Fz-U2SGnlxGTj0-ihit2ELGRv4vO8E1BosTmf0cx3qgG0Pq0eOLBD\n     IHsrdZ_CCAiTc0HVkMbyq1M6qEhM-q5P6y1QCIrwg.\n\
    \     0HFmhOzsQ98nNWJjIHkR7A\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   A JSON representation for RSA public keys was previously\
    \ introduced\n   by John Panzer, Ben Laurie, and Dirk Balfanz in Magic Signatures\n\
    \   [MagicSignatures].\n   Thanks to Matt Miller for creating the encrypted key\
    \ example and to\n   Edmund Jay and Brian Campbell for validating the example.\n\
    \   This specification is the work of the JOSE working group, which\n   includes\
    \ dozens of active and dedicated participants.  In particular,\n   the following\
    \ individuals contributed ideas, feedback, and wording\n   that influenced this\
    \ specification:\n   Dirk Balfanz, Richard Barnes, John Bradley, Brian Campbell,\
    \ Breno de\n   Medeiros, Stephen Farrell, Joe Hildebrand, Edmund Jay, Stephen\
    \ Kent,\n   Ben Laurie, James Manger, Matt Miller, Kathleen Moriarty, Chuck\n\
    \   Mortimore, Tony Nadalin, Axel Nennker, John Panzer, Eric Rescorla,\n   Pete\
    \ Resnick, Nat Sakimura, Jim Schaad, Ryan Sleevi, Paul Tarjan,\n   Hannes Tschofenig,\
    \ and Sean Turner.\n   Jim Schaad and Karen O'Donoghue chaired the JOSE working\
    \ group and\n   Sean Turner, Stephen Farrell, and Kathleen Moriarty served as\n\
    \   Security Area Directors during the creation of this specification.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Michael B. Jones\n   Microsoft\n   EMail: mbj@microsoft.com\n\
    \   URI:   http://self-issued.info/\n"
