- contents:
  - '        Ethernet in the First Mile Copper (EFMCu) Interfaces MIB

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document defines Management Information Base (MIB) modules
    for\n   use with network management protocols in TCP/IP-based internets.\n   This
    document describes extensions to the Ethernet-like Interfaces\n   MIB and Medium
    Attachment Unit (MAU) MIB modules with a set of\n   objects for managing Ethernet
    in the First Mile Copper (EFMCu)\n   interfaces 10PASS-TS and 2BASE-TL, defined
    in IEEE Std 802.3ah-2004\n   (note: IEEE Std 802.3ah-2004 has been integrated
    into IEEE Std 802.3-\n   2005).  In addition, a set of objects is defined, describing
    cross-\n   connect capability of a managed device with multi-layer (stacked)\n
    \  interfaces, extending the stack management objects in the Interfaces\n   Group
    MIB and the Inverted Stack Table MIB modules.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  The Internet-Standard Management Framework . . . . . .
    . . . .  3\n   3.  Relation to Other MIB Modules  . . . . . . . . . . . . . .
    . .  4\n     3.1.  Relation to Interfaces Group MIB Module  . . . . . . . . .
    \ 4\n       3.1.1.  Layering Model . . . . . . . . . . . . . . . . . . . .  4\n
    \      3.1.2.  PME Aggregation Function (PAF) . . . . . . . . . . . .  7\n       3.1.3.
    \ Discovery Operation  . . . . . . . . . . . . . . . . .  7\n       3.1.4.  EFMCu
    Ports Initialization . . . . . . . . . . . . . .  9\n       3.1.5.  Usage of ifTable
    . . . . . . . . . . . . . . . . . . . 10\n     3.2.  Relation to SHDSL MIB Module
    . . . . . . . . . . . . . . . 11\n     3.3.  Relation to VDSL MIB Module  . .
    . . . . . . . . . . . . . 12\n     3.4.  Relation to Ethernet-Like and MAU MIB
    Modules  . . . . . . 12\n   4.  MIB Structure  . . . . . . . . . . . . . . . .
    . . . . . . . . 13\n     4.1.  EFM Copper MIB Overview  . . . . . . . . . . .
    . . . . . . 13\n     4.2.  Interface Stack Capability MIB Overview  . . . . .
    . . . . 13\n     4.3.  PME Profiles . . . . . . . . . . . . . . . . . . . . .
    . . 14\n     4.4.  Mapping of IEEE 802.3ah Managed Objects  . . . . . . . . .
    14\n   5.  Interface Stack Capability MIB Definitions . . . . . . . . . . 16\n
    \  6.  EFM Copper MIB Definitions . . . . . . . . . . . . . . . . . . 22\n   7.
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 84\n   8.  IANA
    Considerations  . . . . . . . . . . . . . . . . . . . . . 86\n   9.  Acknowledgments
    \ . . . . . . . . . . . . . . . . . . . . . . . 86\n   10. References . . . .
    . . . . . . . . . . . . . . . . . . . . . . 86\n     10.1. Normative References
    . . . . . . . . . . . . . . . . . . . 86\n     10.2. Informative References .
    . . . . . . . . . . . . . . . . . 88\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   New Ethernet-like interfaces have been defined in the Institute
    of\n   Electrical and Electronics Engineers (IEEE) Standard 802.3ah-2004\n   [802.3ah],
    a.k.a.  Ethernet in the First Mile (EFM), which is now a\n   part of the base
    IEEE Standard 802.3-2005 [802.3].  In particular,\n   2BASE-TL and 10PASS-TS physical
    interfaces (PHYs), defined over\n   voice-grade copper pairs, have been specified
    for the long and short\n   reach, respectively.  These interfaces, collectively
    called EFM\n   Copper (EFMCu), are based on Single-pair High-speed Digital\n   Subscriber
    Line (SHDSL) [G.991.2] and Very High speed Digital\n   Subscriber Line (VDSL)
    [G.993.1] technology, supporting optional\n   Physical Medium Entity (PME) aggregation
    (a.k.a. multi-pair bonding)\n   with variable rates.\n   2BASE-TL PHY is capable
    of providing at least 2 Mbps over a 2700 m\n   long single copper pair with a
    mean Bit Error Rate (BER) of 10^-7\n   (using 5 dB target noise margin).\n   10PASS-TS
    PHY is capable of providing at least 10 Mbps over a 750 m\n   long single copper
    pair with a mean BER of 10^-7 (using 6 dB target\n   noise margin).\n   This memo
    defines a Management Information Base (MIB) module for use\n   with network management
    protocols in the Internet community to manage\n   EFMCu interfaces.  In addition,
    a MIB module is defined describing\n   the cross-connect capability of a stacked
    interface.\n   Note that managed objects for Operation, Administration and\n   Maintenance
    (OAM) and Ethernet over Passive Optical Networks (EPON)\n   clauses of IEEE 802.3ah
    are defined in EFM-COMMON-MIB [RFC4878] and\n   EFM-EPON-MIB [RFC4837], respectively.\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies MIB\n
    \  modules that are compliant to the SMIv2, which is described in STD\n   58,
    RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC\n   2580 [RFC2580].\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n
    \  document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Relation to Other MIB Modules\n   This section outlines the relationship
    of the MIB modules defined in\n   this document with other MIB modules described
    in the relevant RFCs.\n   Specifically, the Interfaces Group MIB (IF-MIB), Ethernet-Like\n
    \  (EtherLike-MIB), MAU (MAU-MIB), SHDSL (HDSL2-SHDSL-LINE-MIB), and\n   VDSL
    (VDSL-LINE-EXT-MCM-MIB) modules are discussed.\n"
  - contents:
    - "3.1.  Relation to Interfaces Group MIB Module\n   2BASE-TL and 10PASS-TS PHYs
      specified in the EFM-CU-MIB module are\n   stacked (a.k.a. aggregated or bonded)
      Ethernet interfaces and as such\n   are managed using generic interface management
      objects defined in the\n   IF-MIB [RFC2863].\n   The stack management (i.e.,
      actual connection of the sub-layers to\n   the top-layer interface) is done
      via the ifStackTable, as defined in\n   the IF-MIB [RFC2863], and its inverse
      ifInvStackTable, as defined in\n   the IF-INVERTED-STACK-MIB [RFC2864].\n   The
      new tables ifCapStackTable and its inverse ifInvCapStackTable\n   defined in
      the IF-CAP-STACK-MIB module below, extend the stack\n   management with an ability
      to describe possible connections or cross-\n   connect capability, when a flexible
      cross-connect matrix is present\n   between the interface layers.\n"
    - contents:
      - "3.1.1.  Layering Model\n   An EFMCu interface can aggregate up to 32 Physical
        Medium Entity\n   (PME) sub-layer devices (modems), using the so-called PME
        Aggregation\n   Function (PAF).\n   A generic EFMCu device can have a number
        of Physical Coding Sublayer\n   (PCS) ports, each connected to a Media Access
        Controller (MAC) via a\n   Medium Independent Interface (MII) at the upper
        layer, and cross-\n   connected to a number of underlying PMEs, with a single
        PCS per PME\n   relationship.  See clause 61.1 of [802.3ah] for more details.\n
        \  Each PME in the aggregated EFMCu port is represented in the Interface\n
        \  table (ifTable) as a separate interface with ifType of shdsl(169) for\n
        \  2BASE-TL or vdsl(97) for 10PASS-TS.  The ifType values are defined in\n
        \  [IANAifType-MIB].\n   ifSpeed for each PME SHALL return the actual data
        bitrate of the\n   active PME (e.g., for 2BaseTL PMEs it is a multiple of
        64 Kbps).  A\n   zero value SHALL be returned when the PME is Initializing
        or Down.\n   The ifSpeed of the PCS is the sum of the current operating data
        rates\n   of all PMEs in the aggregation group, without the 64/65-octet\n
        \  encapsulation overhead and PAF overhead, but accounting for the\n   Inter-Frame
        Gaps (IFGs).\n   When using the stated definition of ifSpeed for the PCS,
        there would\n   be no frame loss in the following configuration (the test-sets
        are\n   configured to generate 100% of back-to-back traffic, i.e., minimal\n
        \  IFG, at 10 or 100 Mbps, with min and max frame sizes; the EFM\n   interfaces
        are aggregated, to achieve the shown speed):\n      .-------.           .--.
        \          .---.           .-------.\n      |testset|--10BaseT--|CO|--2BaseTL--|CPE|--10BaseT--|testset|\n
        \     '-------'           '--'           '---'           '-------'\n        ifSpeed=
        10 Mbps        10 Mbps         10 Mbps\n      .-------.            .--.            .---.
        \           .-------.\n      |testset|--100BaseT--|CO|--10PassTS--|CPE|--100BaseT--|testset|\n
        \     '-------'            '--'            '---'            '-------'\n        ifSpeed=
        100 Mbps        100 Mbps         100 Mbps\n            Figure 1: Example configuration
        with no frame loss\n   The following figure shows the IEEE 802.3 layering
        diagram and\n   corresponding use of ifTable and ifMauTable:\n    .-------------------------.
        \ -\n    |        LLC              |  ^\n    +-------------------------+  |
        1 ifEntry\n    |        MAC              |  |     ifType: ethernetCsmacd(6)\n
        \   +-------------------------+  )   ifMauEntry\n    |        Reconsiliation
        \  |  |     ifMauType: dot3MauType2BaseTL or\n    +-------------------------+
        \ |                dot3MauType10PassTS\n    |        PCS              |  v\n
        \   +-------------+---+-------+  -\n    | TC \\        |   |       |  ^\n
        \   +-----\\       |   |       |  |\n    | PMA  )PME 1 |...| PME N |  ) N
        ifEntry  (N=1..32)\n    +-----/       |   |       |  |     ifType: shdsl(169)
        or vdsl(97)\n    | PMD/        |   |       |  v\n    '-------------+---+-------'
        \ -\n     LLC - Logical Link Control       PMA - Physical Medium Attachment\n
        \    MAC - Media Access Control       PMD - Physical Medium Dependent\n     PCS
        - Physical Coding Sub-layer  PME - Physical Medium Entity\n     TC  - Transmission
        Convergence\n          Figure 2: Use of ifTable and ifMauTable for EFMCu ports\n
        \  The ifStackTable is indexed by the ifIndex values of the aggregated\n   EFMCu
        port (PCS) and the PMEs connected to it. ifStackTable allows a\n   Network
        Management application to determine which PMEs are connected\n   to a particular
        PCS and change connections (if supported by the\n   application).  The ifInvStackTable,
        being an inverted version of the\n   ifStackTable, provides an efficient means
        for a Network Management\n   application to read a subset of the ifStackTable
        and thereby\n   determine which PCS runs on top of a particular PME.\n   A
        new table ifCapStackTable, defined in the IF-CAP-STACK-MIB module,\n   specifies
        for each higher-layer interface (e.g., PCS port) a list of\n   lower-layer
        interfaces (e.g., PMEs), which can possibly be cross-\n   connected to that
        higher-layer interface, determined by the cross-\n   connect capability of
        the device.  This table, modeled after\n   ifStackTable, is read-only, reflecting
        current cross-connect\n   capability of stacked interface, which can be dynamic
        in some\n   implementations (e.g., if PMEs are located on a pluggable module
        and\n   the module is pulled out).  Note that PME availability per PCS,\n
        \  described by ifCapStackTable, can be constrained by other parameters,\n
        \  for example, by aggregation capacity of a PCS or by the PME in\n   question
        being already connected to another PCS.  So, in order to\n   ensure that a
        particular PME can be connected to the PCS, all\n   respective parameters
        (e.g., ifCapStackTable, ifStackTable, and\n   efmCuPAFCapacity) SHALL be inspected.\n
        \  The ifInvCapStackTable, also defined in the IF-CAP-STACK-MIB module,\n
        \  describes which higher-layer interfaces (e.g., PCS ports) can\n   possibly
        be connected to a particular lower-layer interface (e.g.,\n   PME), providing
        an inverted mapping of the ifCapStackTable.  While it\n   contains no additional
        information beyond that already contained in\n   the ifCapStackTable, the
        ifInvCapStackTable has the ifIndex values in\n   its INDEX clause in the reverse
        order, i.e., the lower-layer\n   interface first, and the higher-layer interface
        second, providing an\n   efficient means for a Network Management application
        to read a subset\n   of the ifCapStackTable and thereby determine which interfaces
        can be\n   connected to run on top of a particular interface.\n"
      title: 3.1.1.  Layering Model
    - contents:
      - "3.1.2.  PME Aggregation Function (PAF)\n   The PME Aggregation Function (PAF)
        allows a number of PMEs to be\n   aggregated onto a PCS port, by fragmenting
        the Ethernet frames,\n   transmitting the fragments over multiple PMEs, and
        assembling the\n   original frames at the remote port.  PAF is OPTIONAL, meaning
        that a\n   device with a single PME MAY perform fragmentation and re-assembly
        if\n   this function is supported by the device.  Note however that the\n
        \  agent is REQUIRED to report on the PAF capability for all EFMCu ports\n
        \  (2BASE-TL and 10PASS-TS).\n   The EFM-CU-MIB module allows a Network Management
        application to\n   query the PAF capability and enable/disable it if supported.
        \ Note\n   that enabling PAF effectively turns on fragmentation and re-assembly,\n
        \  even on a single-PME port.\n"
      title: 3.1.2.  PME Aggregation Function (PAF)
    - contents:
      - "3.1.3.  Discovery Operation\n   The EFMCu ports may optionally support discovery
        operation, whereby\n   PMEs, during initialization, exchange information about
        their\n   respective aggregation groups (PCS).  This information can then
        be\n   used to detect copper misconnections or for an automatic assignment\n
        \  of the local PMEs into aggregation groups instead of a fixed pre-\n   configuration.\n
        \  The MIB modules defined in this document allow a Network Management\n   application
        to control the EFM Discovery mechanism and query its\n   results.  Note that
        the Discovery mechanism can work only if PAF is\n   supported and enabled.\n
        \  Two tables are used by the EFM Discovery mechanism: ifStackTable and\n
        \  ifCapStackTable.  The following pseudo-code gives an example of the\n   Discovery
        and automatic PME assignment for a generic PAF-enabled\n   multi-PCS EFMCu
        device, located at Central Office (CO), using objects\n   defined in these
        MIB modules and in the IF-MIB (Note that automatic\n   PME assignment is only
        shown here for the purposes of the example.\n   Fixed PME pre-assignment,
        manual assignment, or auto-assignment using\n   an alternative internal algorithm
        may be chosen by a particular\n   implementation):\n // Go over all PCS ports
        in the CO device\n FOREACH pcs[i] IN CO_device\n { // Perform discovery and
        auto-assignment only on PAF enabled ports\n   // with room for more PMEs\n
        \  IF ( pcs[i].PAFSupported AND pcs[i].NumPMEs &lt; pcs[i].PAFCapacity )\n
        \  { // Assign a unique 6-octet local discovery code to the PCS\n     // e.g.,
        MAC address\n     dc = pcs[i].DiscoveryCode = MAC[i];\n     // Go over all
        disconnected PMEs, which can\n     // potentially be connected to the PCS\n
        \    FOREACH pme[j] IN ifCapStackTable[pcs[i]] AND\n                    NOT
        IN ifStackTable[pcs[i]]  // not connected\n     { // Try to grab the remote
        RT_device, by writing the value\n       // of the local 6-octet discovery
        code to the remote\n       // discovery code register (via handshake mechanism).\n
        \      // This operation is atomic Set-if-Clear action, i.e., it\n       //
        would succeed only if the remote discovery register was\n       // zero.  Read
        the remote discovery code register via Get\n       // operation to see if
        the RT_device, attached via the PME\n       // is indeed marked as being the
        CO_device peer.\n       pme[j].RemoteDiscoveryCode = dc;          // Set-if-Clear\n
        \      r = pme[j].RemoteDiscoveryCode;           // Get\n       IF ( r ==
        dc AND pcs[i].NumPMEs &lt; pcs[i].PAFCapacity)\n       { // Remote RT_device
        connected via PME[j] is/was a peer\n         // for PCS[i] and there is room
        for another PME in the\n         // PCS[i] aggregation group (max. PAF capacity
        is not\n         // reached yet).\n         // Connect this PME to the PCS
        (via ifStackTable,\n         // ifInvStackTable being inverse of ifStackTable
        is\n         // updated automatically, i.e., pcs[i] is auto-added\n         //
        to ifInvStackTable[pme[j]])\n         ADD pme[j] TO ifStackTable[pcs[i]];\n
        \        pcs[i].NumPMEs = pcs[i].NumPMEs + 1;\n         // Discover all other
        disconnected PMEs,\n         // attached to the same RT_device and connect
        them to\n         // the PCS provided there is enough room for more PMEs.\n
        \        FOREACH pme[k] IN ifCapStackTable[pcs[i]] AND\n                        NOT
        IN ifStackTable[pcs[i]]\n         { // Get Remote Discovery Code from the
        PME to see if\n           // it belongs to a connected RT_device \"grabbed\"
        by\n           // the CO_device.\n           r = pme[k].RemoteDiscoveryCode;\n
        \          IF ( r == dc AND pcs[i].NumPMEs &lt; pcs[i].PAFCapacity)\n           {
        // Physically connect the PME to the PCS\n             // (pcs[i] is auto-added
        TO ifInvStackTable[pme[k]])\n             ADD pme[k] TO ifStackTable[pcs[i]];\n
        \            pcs[i].NumPMEs = pcs[i].NumPMEs + 1;\n           }\n         }\n
        \      }\n       // At this point we have discovered all local PMEs which\n
        \      // are physically connected to the same remote RT_device\n       //
        and connected them to PCS[i].  Go to the next PCS.\n       BREAK;\n     }\n
        \  }\n }\n   An SNMP Agent for an EFMCu device builds the ifCapStackTable
        and its\n   inverse ifInvCapStackTable according to the information contained
        in\n   the Clause 45 PME_Available_register (see [802.3ah] 61.1.5.3 and\n
        \  45.2.3.20).\n   Adding a PME to the ifStackTable row for a specific PCS
        involves\n   actual connection of the PME to the PCS, which can be done by\n
        \  modifying Clause 45 PME_Aggregate_register (see [802.3ah] 61.1.5.3\n   and
        45.2.3.21).\n   Note that the PCS port does not have to be operationally 'down'
        for\n   the connection to succeed.  In fact, a dynamic PME addition (and\n
        \  removal) MAY be implemented with an available PME being initialized\n   first
        (by setting its ifAdminStatus to 'up') and then added to an\n   operationally
        'up' PCS port, by modifying a respective ifStackTable\n   (and respective
        ifInvStackTable) entry.\n   It is RECOMMENDED that a removal of the last operationally
        'up' PME\n   from an operationally 'up' PCS would be rejected by the\n   implementation,
        as this action would completely drop the link.\n"
      title: 3.1.3.  Discovery Operation
    - contents:
      - "3.1.4.  EFMCu Ports Initialization\n   EFMCu ports being built on top of
        xDSL technology require a lengthy\n   initialization or 'training' process,
        before any data can pass.\n   During this initialization, both ends of a link
        (peers) work\n   cooperatively to achieve the required data rate on a particular\n
        \  copper pair.  Sometimes, when the copper line is too long or the\n   noise
        on the line is too high, that 'training' process may fail to\n   achieve a
        specific target rate with required characteristics.\n   The ifAdminStatus
        object from the IF-MIB controls the desired state\n   of a PCS with all the
        PMEs connected to it or of an individual PME\n   port.  Setting this object
        to 'up' instructs a particular PCS or PME\n   to start the initialization
        process, which may take tens of seconds\n   for EFMCu ports, especially if
        PAF is involved.  The ifOperStatus\n   object shows the operational state
        of an interface (extended by the\n   ifMauMediaAvailable object from MAU-MIB
        for PCS and\n   efmCuPmeOperStatus defined in the EFM-CU-MIB module for PME\n
        \  interfaces).\n   A disconnected PME may be initialized by changing the
        ifAdminState\n   from 'down' to 'up'.  Changing the ifAdminState to 'up' on
        the PCS\n   initializes all PMEs connected to that particular PCS.  Note that
        in\n   case of PAF some interfaces may fail to initialize while others\n   succeed.
        \ The PCS is considered operationally 'up' if at least one\n   PME aggregated
        by its PAF is operationally 'up'.  When all PMEs\n   connected to the PCS
        are 'down', the PCS SHALL be considered\n   operationally 'lowerLayerDown'.
        \ The PCS SHALL be considered\n   operationally 'notPresent' if it is not
        connected to any PME.  The\n   PCS/PME interface SHALL remain operationally
        'down' during\n   initialization.\n   The efmCuPmeOperStatus defined in the
        EFM-CU-MIB module expands PME's\n   ifOperStatus value of 'down' to 'downReady',
        'downNotReady', and\n   'init' values, indicating various EFMCu PME-specific
        states.\n"
      title: 3.1.4.  EFMCu Ports Initialization
    - contents:
      - "3.1.5.  Usage of ifTable\n   Both PME and PCS interfaces of the EFMCu PHY
        are managed using\n   interface-specific management objects defined in the
        EFM-CU-MIB\n   module and generic interface objects from the ifTable of IF-MIB,
        with\n   all management table entries referenced by the interface index\n
        \  ifIndex.\n   The following table summarizes EFMCu-specific interpretations
        for\n   some of the ifTable objects specified in the mandatory\n   ifGeneralInformationGroup:\n
        \  +---------------+---------------------------------------------------+\n
        \  | IF-MIB object | EFMCu interpretation                              |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifIndex       | Interface index.  Note that each PME and each PCS |\n
        \  |               | in the EFMCu PHY MUST have a unique index, as     |\n
        \  |               | there are some PCS- and PME-specific attributes   |\n
        \  |               | accessible only on the PCS or PME level.          |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifType        | ethernetCsmacd(6) for PCS, shdsl(169) for         |\n
        \  |               | 2BASE-TL PME, vdsl(97) for 10PASS-TS PME.         |\n
        \  | ifSpeed       | Operating data rate for the PME.  For the PCS, it |\n
        \  |               | is the sum of the current operating data rates of |\n
        \  |               | all PMEs in the aggregation group, without the    |\n
        \  |               | 64/65-octet encapsulation overhead and PAF        |\n
        \  |               | overhead, but accounting for the Inter-Frame Gaps |\n
        \  |               | (IFGs).                                           |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifAdminStatus | Setting this object to 'up' instructs a           |\n
        \  |               | particular PCS (with all PMEs connected to it) or |\n
        \  |               | PME to start initialization process.              |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifOperStatus  | efmCuPmeOperStatus supplements the 'down' value   |\n
        \  |               | of ifOperStatus for PMEs.                         |\n
        \  +---------------+---------------------------------------------------+\n
        \             Table 1: EFMCu interpretation of IF-MIB objects\n"
      title: 3.1.5.  Usage of ifTable
    title: 3.1.  Relation to Interfaces Group MIB Module
  - contents:
    - "3.2.  Relation to SHDSL MIB Module\n   G.SHDSL.bis modems, similar to PMEs
      comprising a 2BASE-TL port, are\n   described in the HDSL2-SHDSL-LINE-MIB module
      [RFC4319].  Note that\n   not all attributes of G.SHDSL modems reflected in
      the HDSL2-SHDSL-\n   LINE-MIB module have adequate management objects (Clause
      30\n   attributes and Clause 45 registers) in the EFM standard.\n   Because
      of these differences and for the purposes of simplicity,\n   unification of
      attributes common to both 2BASE-TL and 10PASS-TS PMEs,\n   and name consistency
      (e.g., prefixing the 2BASE-TL PME related\n   objects with 'efmCuPme2B' instead
      of 'hdsl2shdsl'), it was decided\n   not to reference HDSL2-SHDSL-LINE-MIB objects,
      but define all the\n   relevant objects in the EFM-CU-MIB module.\n   However,
      if some functionality not available in the EFM-CU-MIB module\n   is required
      and supported by the PME, e.g., performance monitoring,\n   relevant HDSL2-SHDSL-LINE-MIB
      groups MAY be included and applied for\n   PMEs of 2BASE-TL subtype.\n"
    title: 3.2.  Relation to SHDSL MIB Module
  - contents:
    - "3.3.  Relation to VDSL MIB Module\n   VDSL modems, similar to the PME(s) comprising
      a 10PASS-TS port, are\n   described in the VDSL-LINE-EXT-MCM-MIB module [RFC4070].
      \ Note that\n   not all attributes of VDSL modems reflected in the VDSL-LINE-EXT-MCM-\n
      \  MIB module have adequate management objects (Clause 30 attributes and\n   Clause
      45 registers) in the EFM standard.\n   Because of these differences and for
      the purposes of simplicity,\n   unification of attributes common to both 2BASE-TL
      and 10PASS-TS PMEs,\n   and name consistency, it was decided not to reference
      VDSL-LINE-EXT-\n   MCM-MIB objects, but define all the relevant objects in the
      EFM-CU-\n   MIB module.\n   However, if some functionality not available in
      the EFM-CU-MIB module\n   is required and supported by the PME, relevant VDSL-LINE-EXT-MCM-MIB\n
      \  groups MAY be included and applied for PMEs of 10PASS-TS subtype.\n"
    title: 3.3.  Relation to VDSL MIB Module
  - contents:
    - "3.4.  Relation to Ethernet-Like and MAU MIB Modules\n   The implementation
      of the EtherLike-MIB [RFC3635] and MAU-MIB\n   [RFC4836] modules is REQUIRED
      for EFMCu interfaces.\n   Two new values of ifMauType (OBJECT-IDENTITIES of
      dot3MauType) and\n   corresponding bit definitions of ifMauTypeListBits\n   (IANAifMauTypeListBits)
      have been defined in the IANA-MAU-MIB module\n   [RFC4836] for EFMCu MAUs:\n
      \  o  dot3MauType2BaseTL and b2BaseTL - for 2BASE-TL MAU\n   o  dot3MauType10PassTS
      and b10PassTS - for 10PASS-TS MAU\n   Additionally, the IANA-MAU-MIB module
      defines two new values of\n   ifMauMediaAvailable, specifically for EFMCu ports:
      availableReduced\n   and ready (in textual convention IANAifMauMediaAvailable).
      \ Due to\n   the PME aggregation, the EFMCu interpretation of some possible\n
      \  ifMauMediaAvailable values differs from other MAUs as follows:\n   o  unknown
      - the EFMCu interface (PCS with connected PMEs) is\n      Initializing\n   o
      \ ready - the interface is Down, at least one PME in the aggregation\n      group
      (all PMEs connected to the PCS) is ready for handshake\n   o  available - the
      interface is Up, all PMEs in the aggregation group\n      are up\n   o  notAvailable
      - the interface is Down, all PMEs in the aggregation\n      group are Down,
      no handshake tones are detected by any PME\n   o  availableReduced - the interface
      is Up, a link fault is detected\n      at the receive direction by one or more
      PMEs in the aggregation\n      group, but at least one PME is Up\n   o  pmdLinkFault
      - a link fault is detected at the receive direction\n      by all PMEs in the
      aggregation group\n   As an EtherLike interface, every EFMCu port (an ifEntry
      representing\n   a consolidation of LLC, MAC, and PCS (sub)layers) SHALL return
      an\n   ifType of ethernetCsmacd(6).  While most of the MAU characteristics\n
      \  are not applicable to the EFMCu ports (no auto-negotiation, false\n   carriers,
      or jabber), they SHALL return an appropriate ifMauType\n   (dot3MauType2BaseTL
      or dot3mauType10PassTS) in order to direct the\n   management software to look
      in the EFM-CU-MIB module for the desired\n   information.  For example, the
      information on the particular EFMCu\n   flavor that an EFMCu port is running
      is available from\n   efmCuOperSubType, defined in the EFM-CU-MIB module.\n
      \  Since EFMCu PMEs are not EtherLike interfaces, they cannot be\n   instantiated
      as MAU interface objects.\n"
    title: 3.4.  Relation to Ethernet-Like and MAU MIB Modules
  title: 3.  Relation to Other MIB Modules
- contents:
  - '4.  MIB Structure

    '
  - contents:
    - "4.1.  EFM Copper MIB Overview\n   The main management objects defined in the
      EFM-CU-MIB module are\n   split into 2 groups:\n   o  efmCuPort - containing
      objects for configuration, capabilities,\n      status, and notifications, common
      to all EFMCu PHYs.\n   o  efmCuPme - containing objects for configuration, capabilities,\n
      \     status, and notifications of EFMCu PMEs.\n   The efmCuPme group in turn
      contains efmCuPme2B and efmCuPme10P\n   groups, which define PME profiles specific
      to 2BASE-TL and 10PASS-TS\n   PMEs, respectively, as well as PME-specific status
      information.\n"
    title: 4.1.  EFM Copper MIB Overview
  - contents:
    - "4.2.  Interface Stack Capability MIB Overview\n   The IF-CAP-STACK-MIB module
      contains 2 tables:\n   o  ifCapStackTable - containing objects that define possible\n
      \     relationships among the sub-layers of an interface with flexible\n      cross-connect
      (cross-connect capability).\n   o  ifInvCapStackTable - an inverse of the ifCapstackTable.\n"
    title: 4.2.  Interface Stack Capability MIB Overview
  - contents:
    - "4.3.  PME Profiles\n   Since a managed node can have a large number of EFMCu
      PHYs,\n   provisioning every parameter on every EFMCu PHY may become\n   burdensome.
      \ Moreover, most PMEs are provisioned identically with the\n   same set of parameters.
      \ To simplify the provisioning process, the\n   EFM-CU-MIB module makes use
      of configuration profiles, similar to the\n   HDSL2-SHDSL-LINE-MIB and VDSL-LINE-EXT-MCM-MIB
      modules.  A profile is\n   a set of parameters, used either for configuration
      or representation\n   of a PME.  The same profile can be shared by multiple
      PME ports using\n   the same configuration.\n   The PME profiles are defined
      in the efmCuPme2BProfileTable and\n   efmCuPme10PProfileTable for 2BASE-TL and
      10PASS-TS PMEs,\n   respectively.  There are 12 predefined standard profiles
      for 2BASE-TL\n   and 22 standard profiles for 10PASS-TS, defined in 802.3ah
      and\n   dedicated for rapid provisioning of EFMCu PHYs in most scenarios.  In\n
      \  addition, the EFM-CU-MIB defines two additional predefined profiles\n   for
      \"best-effort\" provisioning of 2BASE-TL PMEs.  An ability to\n   define new
      configuration profiles is also provided to allow for EFMCu\n   deployment tailored
      to specific copper environments and spectral\n   regulations.\n   A specific
      configuration or administrative profile is assigned to a\n   specific PME via
      the efmCuPmeAdminProfile object.  If\n   efmCuPmeAdminProfile is zero, then
      the efmCuAdminProfile object of\n   the PCS port connected to the PME determines
      the configuration\n   profile (or a list of possible profiles) for that PME.
      \ This\n   mechanism allows specifying a common profile for all PMEs connected\n
      \  to the PCS port, with an ability to change individual PME profiles by\n   setting
      efmCuPmeAdminProfile object, which overwrites the profile set\n   by efmCuAdminProfile.\n
      \  A current operating PME profile is pointed to by the\n   efmCuPmeOperProfile
      object.  Note that this profile entry can be\n   created automatically to reflect
      achieved parameters in adaptive (not\n   fixed) initialization.\n"
    title: 4.3.  PME Profiles
  - contents:
    - "4.4.  Mapping of IEEE 802.3ah Managed Objects\n   This section contains the
      mapping between relevant managed objects\n   (attributes) defined in [802.3ah]
      Clause 30, and managed objects\n   defined in this document and in associated
      MIB modules, i.e., the IF-\n   MIB [RFC2863].\n   Note that the majority of
      the objects defined in the EFM-CU-MIB\n   module do not have direct counterparts
      in Clause 30 and instead refer\n   to Clause 45 registers.\n   +---------------------------------+---------------------------------+\n
      \  | IEEE 802.3 Managed Object       | Corresponding SNMP Object       |\n   +---------------------------------+---------------------------------+\n
      \  | oMAU - Basic Package            |                                 |\n   |
      (Mandatory)                     |                                 |\n   +---------------------------------+---------------------------------+\n
      \  | aMAUType                        | ifMauType (MAU-MIB)             |\n   +---------------------------------+---------------------------------+\n
      \  | aMAUTypeList                    | ifMauTypeListBits (MAU-MIB)     |\n   +---------------------------------+---------------------------------+\n
      \  | aMediaAvailable                 | ifMediaAvailable (MAU-MIB)      |\n   +---------------------------------+---------------------------------+\n
      \  | oPAF - Basic Package            |                                 |\n   |
      (Mandatory)                     |                                 |\n   +---------------------------------+---------------------------------+\n
      \  | aPAFID                          | ifIndex (IF-MIB)                |\n   +---------------------------------+---------------------------------+\n
      \  | aPhyEnd                         | efmCuPhySide                    |\n   +---------------------------------+---------------------------------+\n
      \  | aPHYCurrentStatus               | efmCuStatus                     |\n   +---------------------------------+---------------------------------+\n
      \  | aPAFSupported                   | efmCuPAFSupported               |\n   +---------------------------------+---------------------------------+\n
      \  | oPAF - PME Aggregation Package  |                                 |\n   |
      (Optional)                      |                                 |\n   +---------------------------------+---------------------------------+\n
      \  | aPAFAdminState                  | efmCuPAFAdminState              |\n   +---------------------------------+---------------------------------+\n
      \  | aLocalPAFCapacity               | efmCuPAFCapacity                |\n   +---------------------------------+---------------------------------+\n
      \  | aLocalPMEAvailable              | ifCapStackTable                 |\n   +---------------------------------+---------------------------------+\n
      \  | aLocalPMEAggregate              | ifStackTable (IF-MIB)           |\n   +---------------------------------+---------------------------------+\n
      \  | aRemotePAFSupported             | efmCuRemotePAFSupported         |\n   +---------------------------------+---------------------------------+\n
      \  | aRemotePAFCapacity              | efmCuRemotePAFCapacity          |\n   +---------------------------------+---------------------------------+\n
      \  | aRemotePMEAggregate             |                                 |\n   +---------------------------------+---------------------------------+\n
      \  | oPME - 10P/2B Package           |                                 |\n   |
      (Mandatory)                     |                                 |\n   +---------------------------------+---------------------------------+\n
      \  | aPMEID                          | ifIndex (IF-MIB)                |\n   +---------------------------------+---------------------------------+\n
      \  | aPMEAdminState                  | ifAdminState (IF-MIB)           |\n   +---------------------------------+---------------------------------+\n
      \  | aPMEStatus                      | efmCuPmeStatus                  |\n   |
      aPMESNRMgn                      | efmCuPmeSnrMgn                  |\n   +---------------------------------+---------------------------------+\n
      \  | aTCCodingViolations             | efmCuPmeTCCodingErrors          |\n   +---------------------------------+---------------------------------+\n
      \  | aTCCRCErrors                    | efmCuPmeTCCrcErrors             |\n   +---------------------------------+---------------------------------+\n
      \  | aProfileSelect                  | efmCuAdminProfile,              |\n   |
      \                                | efmCuPmeAdminProfile            |\n   +---------------------------------+---------------------------------+\n
      \  | aOperatingProfile               | efmCuPmeOperProfile             |\n   +---------------------------------+---------------------------------+\n
      \  | aPMEFECCorrectedBlocks          | efmCuPme10PFECCorrectedBlocks   |\n   +---------------------------------+---------------------------------+\n
      \  | aPMEFECUncorrectableBlocks      | efmCuPme10PFECUncorrectedBlocks |\n   +---------------------------------+---------------------------------+\n
      \             Table 2: Mapping of IEEE 802.3 Managed Objects\n"
    title: 4.4.  Mapping of IEEE 802.3ah Managed Objects
  title: 4.  MIB Structure
- contents:
  - "5.  Interface Stack Capability MIB Definitions\n   IF-CAP-STACK-MIB DEFINITIONS
    ::= BEGIN\n     IMPORTS\n       MODULE-IDENTITY, OBJECT-TYPE, mib-2\n         FROM
    SNMPv2-SMI         -- [RFC2578]\n       TruthValue\n         FROM SNMPv2-TC          --
    [RFC2579]\n       MODULE-COMPLIANCE, OBJECT-GROUP\n         FROM SNMPv2-CONF        --
    [RFC2580]\n       ifStackGroup2, ifStackHigherLayer, ifStackLowerLayer\n         FROM
    IF-MIB             -- [RFC2863]\n       ifInvStackGroup\n         FROM IF-INVERTED-STACK-MIB
    -- [RFC2864]\n       ;\n     ifCapStackMIB MODULE-IDENTITY\n       LAST-UPDATED
    \"200711070000Z\"  -- November 07, 2007\n       ORGANIZATION \"IETF Ethernet Interfaces
    and Hub MIB Working Group\"\n       CONTACT-INFO\n         \"WG charter:\n           http://www.ietf.org/html.charters/OLD/hubmib-charter.html\n
    \        Mailing Lists:\n           General Discussion: hubmib@ietf.org\n           To
    Subscribe: hubmib-request@ietf.org\n           In Body: subscribe your_email_address\n
    \        Chair:  Bert Wijnen\n         Postal: Alcatel-Lucent\n                 Schagen
    33\n                 3461 GL Linschoten\n                 Netherlands\n          Phone:
    +31-348-407-775\n          EMail: bwijnen@alcatel-lucent.com\n         Editor:
    Edward Beili\n         Postal: Actelis Networks Inc.\n                 25 Bazel
    St., P.O.B. 10173\n                 Petach-Tikva 10173\n                 Israel\n
    \         Phone: +972-3-924-3491\n          EMail: edward.beili@actelis.com\"\n
    \      DESCRIPTION\n         \"The objects in this MIB module are used to describe\n
    \        cross-connect capabilities of stacked (layered) interfaces,\n         complementing
    ifStackTable and ifInvStackTable defined in\n         IF-MIB and IF-INVERTED-STACK-MIB,
    respectively.\n         Copyright (C) The IETF Trust (2007).  This version\n         of
    this MIB module is part of RFC 5066;  see the RFC\n         itself for full legal
    notices.\"\n       REVISION    \"200711070000Z\"  -- November 07, 2007\n       DESCRIPTION
    \"Initial version, published as RFC 5066.\"\n       ::= { mib-2 166 }\n      --
    Sections of the module\n      -- Structured as recommended by [RFC4181], see\n
    \     -- Appendix D: Suggested OID Layout\n      ifCapStackObjects     OBJECT
    IDENTIFIER ::= { ifCapStackMIB 1 }\n      ifCapStackConformance OBJECT IDENTIFIER
    ::= { ifCapStackMIB 2 }\n      -- Groups in the module\n      --\n      -- ifCapStackTable
    group\n      --\n      ifCapStackTable  OBJECT-TYPE\n        SYNTAX      SEQUENCE
    OF IfCapStackEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"This table, modeled after ifStackTable from IF-MIB,\n
    \         contains information on the possible 'on-top-of'\n          relationships
    between the multiple sub-layers of network\n          interfaces (as opposed to
    actual relationships described in\n          ifStackTable).  In particular, it
    contains information on\n          which sub-layers MAY possibly run 'on top of'
    which other\n          sub-layers, as determined by cross-connect capability of
    the\n          device, where each sub-layer corresponds to a conceptual row\n
    \         in the ifTable.  For example, when the sub-layer with ifIndex\n          value
    x can be connected to run on top of the sub-layer with\n          ifIndex value
    y, then this table contains:\n            ifCapStackStatus.x.y=true\n          The
    ifCapStackStatus.x.y row does not exist if it is\n          impossible to connect
    between the sub-layers x and y.\n          Note that for most stacked interfaces
    (e.g., 2BASE-TL)\n          there's always at least one higher-level interface
    (e.g., PCS\n          port) for each lower-level interface (e.g., PME) and at\n
    \         least one lower-level interface for each higher-level\n          interface,
    that is, there is at least a single row with a\n          'true' status for any
    such existing value of x or y.\n          This table is read-only as it describes
    device capabilities.\"\n        REFERENCE\n          \"IF-MIB, ifStackTable\"\n
    \       ::= { ifCapStackObjects 1 }\n      ifCapStackEntry  OBJECT-TYPE\n        SYNTAX
    \     IfCapStackEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"Information on a particular relationship between
    two\n          sub-layers, specifying that one sub-layer MAY possibly run\n          on
    'top' of the other sub-layer.  Each sub-layer corresponds\n          to a conceptual
    row in the ifTable (interface index for\n          lower and higher layer, respectively).\"\n
    \       INDEX {\n          ifStackHigherLayer,\n          ifStackLowerLayer\n
    \       }\n        ::= { ifCapStackTable 1 }\n      IfCapStackEntry ::= SEQUENCE
    {\n           ifCapStackStatus       TruthValue\n         }\n      ifCapStackStatus
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The status of the
    'cross-connect capability' relationship\n          between two sub-layers.  The
    following values can be returned:\n            true(1)         - indicates that
    the sub-layer interface,\n                              identified by the ifStackLowerLayer
    MAY\n                              be connected to run 'below' the sub-layer\n
    \                             interface, identified by the\n                              ifStackHigherLayer
    index.\n            false(2)        - the sub-layer interfaces cannot be\n                              connected
    temporarily due to\n                              unavailability of the interface(s),
    e.g.,\n                              one of the interfaces is located on an\n
    \                             absent pluggable module.\n          Note that lower-layer
    interface availability per higher-layer,\n          indicated by the value of
    'true', can be constrained by\n          other parameters, for example, by the
    aggregation capacity of\n          a higher-layer interface or by the lower-layer
    interface in\n          question being already connected to another higher-layer\n
    \         interface.  In order to ensure that a particular sub-layer can\n          be
    connected to another sub-layer, all respective objects\n          (e.g., ifCapStackTable,
    ifStackTable, and efmCuPAFCapacity for\n          EFMCu interfaces) SHALL be inspected.\n
    \         This object is read-only, unlike ifStackStatus, as it\n          describes
    a cross-connect capability.\"\n        ::= { ifCapStackEntry 1 }\n      ifInvCapStackTable
    \ OBJECT-TYPE\n        SYNTAX        SEQUENCE OF IfInvCapStackEntry\n        MAX-ACCESS
    \   not-accessible\n        STATUS        current\n        DESCRIPTION\n          \"A
    table containing information on the possible relationships\n          between
    the multiple sub-layers of network interfaces.  This\n          table, modeled
    after ifInvStackTable from\n          IF-INVERTED-STACK-MIB, is an inverse of
    the ifCapStackTable\n          defined in this MIB module.\n          In particular,
    this table contains information on which\n          sub-layers MAY run 'underneath'
    which other sub-layers, where\n          each sub-layer corresponds to a conceptual
    row in the ifTable.\n          For example, when the sub-layer with ifIndex value
    x MAY be\n          connected to run underneath the sub-layer with ifIndex value\n
    \         y, then this table contains:\n             ifInvCapStackStatus.x.y=true\n
    \         This table contains exactly the same number of rows as the\n          ifCapStackTable,
    but the rows appear in a different order.\n          This table is read-only as
    it describes a cross-connect\n          capability.\"\n        REFERENCE\n           \"IF-INVERTED-STACK-MIB,
    ifInvStackTable\"\n        ::= { ifCapStackObjects 2 }\n      ifInvCapStackEntry
    \ OBJECT-TYPE\n        SYNTAX        IfInvCapStackEntry\n        MAX-ACCESS    not-accessible\n
    \       STATUS        current\n        DESCRIPTION\n           \"Information on
    a particular relationship between two sub-\n           layers, specifying that
    one sub-layer MAY run underneath the\n           other sub-layer.  Each sub-layer
    corresponds to a conceptual\n           row in the ifTable.\"\n        INDEX {
    ifStackLowerLayer, ifStackHigherLayer }\n        ::= { ifInvCapStackTable 1 }\n
    \      IfInvCapStackEntry ::= SEQUENCE {\n         ifInvCapStackStatus       TruthValue\n
    \      }\n      ifInvCapStackStatus  OBJECT-TYPE\n        SYNTAX         TruthValue\n
    \       MAX-ACCESS     read-only\n        STATUS         current\n        DESCRIPTION\n
    \          \"The status of the possible 'cross-connect capability'\n           relationship
    between two sub-layers.\n           An instance of this object exists for each
    instance of the\n           ifCapStackStatus object, and vice versa.  For example,
    if the\n           variable ifCapStackStatus.H.L exists, then the variable\n           ifInvCapStackStatus.L.H
    must also exist, and vice versa.  In\n           addition, the two variables always
    have the same value.\n           The ifInvCapStackStatus object is read-only,
    as it describes\n           a cross-connect capability.\"\n        REFERENCE\n
    \          \"ifCapStackStatus\"\n        ::= { ifInvCapStackEntry 1 }\n     --\n
    \    -- Conformance Statements\n     --\n      ifCapStackGroups      OBJECT IDENTIFIER
    ::=\n           { ifCapStackConformance 1 }\n      ifCapStackCompliances OBJECT
    IDENTIFIER ::=\n           { ifCapStackConformance 2 }\n      -- Units of Conformance\n
    \     ifCapStackGroup OBJECT-GROUP\n        OBJECTS {\n          ifCapStackStatus,\n
    \         ifInvCapStackStatus\n        }\n        STATUS  current\n        DESCRIPTION\n
    \         \"A collection of objects providing information on the\n          cross-connect
    capability of multi-layer (stacked) network\n          interfaces.\"\n        ::=
    { ifCapStackGroups 1 }\n     -- Compliance Statements\n      ifCapStackCompliance
    MODULE-COMPLIANCE\n        STATUS      current\n        DESCRIPTION\n          \"The
    compliance statement for SNMP entities, which provide\n          information on
    the cross-connect capability of multi-layer\n          (stacked) network interfaces,
    with flexible cross-connect\n          between the sub-layers.\"\n        MODULE
    \ -- this module\n          MANDATORY-GROUPS {\n            ifCapStackGroup\n
    \         }\n          OBJECT       ifCapStackStatus\n          SYNTAX       TruthValue
    { true(1) }\n          DESCRIPTION\n            \"Support for the false(2) value
    is OPTIONAL for\n            implementations supporting pluggable interfaces.\"\n
    \         OBJECT       ifInvCapStackStatus\n          SYNTAX       TruthValue
    { true(1) }\n          DESCRIPTION\n            \"Support for the false(2) value
    is OPTIONAL for\n            implementations supporting pluggable interfaces.\"\n
    \       MODULE  IF-MIB\n          MANDATORY-GROUPS {\n            ifStackGroup2\n
    \         }\n        MODULE  IF-INVERTED-STACK-MIB\n          MANDATORY-GROUPS
    {\n            ifInvStackGroup\n          }\n        ::= { ifCapStackCompliances
    1 }\n   END\n"
  title: 5.  Interface Stack Capability MIB Definitions
- contents:
  - "6.  EFM Copper MIB Definitions\n   EFM-CU-MIB DEFINITIONS ::= BEGIN\n     IMPORTS\n
    \      MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, Integer32,\n       Unsigned32,
    Counter32, mib-2\n         FROM SNMPv2-SMI         -- [RFC2578]\n       TEXTUAL-CONVENTION,
    TruthValue, RowStatus, PhysAddress\n         FROM SNMPv2-TC          -- [RFC2579]\n
    \      MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP\n         FROM SNMPv2-CONF
    \       -- [RFC2580]\n       SnmpAdminString\n         FROM SNMP-FRAMEWORK-MIB
    -- [RFC3411]\n       ifIndex, ifSpeed\n         FROM IF-MIB             -- [RFC2863]\n
    \      ;\n     efmCuMIB MODULE-IDENTITY\n       LAST-UPDATED \"200711140000Z\"
    \ -- November 14, 2007\n       ORGANIZATION \"IETF Ethernet Interfaces and Hub
    MIB Working Group\"\n       CONTACT-INFO\n         \"WG charter:\n           http://www.ietf.org/html.charters/OLD/hubmib-charter.html\n
    \        Mailing Lists:\n           General Discussion: hubmib@ietf.org\n           To
    Subscribe: hubmib-request@ietf.org\n           In Body: subscribe your_email_address\n
    \        Chair:  Bert Wijnen\n         Postal: Alcatel-Lucent\n                 Schagen
    33\n                 3461 GL Linschoten\n                 Netherlands\n          Phone:
    +31-348-407-775\n          EMail: bwijnen@alcatel-lucent.com\n         Editor:
    Edward Beili\n         Postal: Actelis Networks Inc.\n                 25 Bazel
    St., P.O.B. 10173\n                 Petach-Tikva 10173\n                 Israel\n
    \         Phone: +972-3-924-3491\n          Email: edward.beili@actelis.com\"\n
    \      DESCRIPTION\n         \"The objects in this MIB module are used to manage\n
    \        the Ethernet in the First Mile (EFM) Copper (EFMCu) Interfaces\n         2BASE-TL
    and 10PASS-TS, defined in IEEE Std. 802.3ah-2004,\n         which is now a part
    of IEEE Std. 802.3-2005.\n         The following references are used throughout
    this MIB module:\n         [802.3ah] refers to:\n           IEEE Std 802.3ah-2004:
    'IEEE Standard for Information\n           technology - Telecommunications and
    information exchange\n           between systems - Local and metropolitan area
    networks -\n           Specific requirements -\n           Part 3: Carrier Sense
    Multiple Access with Collision\n           Detection (CSMA/CD) Access Method and
    Physical Layer\n           Specifications -\n           Amendment: Media Access
    Control Parameters, Physical\n           Layers and Management Parameters for
    Subscriber Access\n           Networks', 07 September 2004.\n         Of particular
    interest are Clause 61, 'Physical Coding\n         Sublayer (PCS) and common specifications,
    type 10PASS-TS and\n         type 2BASE-TL', Clause 30, 'Management', Clause 45,\n
    \        'Management Data Input/Output (MDIO) Interface', Annex 62A,\n         'PMD
    profiles for 10PASS-TS' and Annex 63A, 'PMD profiles for\n         2BASE-TL'.\n
    \        [G.991.2] refers to:\n           ITU-T Recommendation G.991.2: 'Single-pair
    High-speed Digital\n           Subscriber Line (SHDSL) transceivers', December
    2003.\n         [ANFP] refers to:\n           NICC Document ND1602:2005/08: 'Specification
    of the Access\n           Network Frequency Plan (ANFP) applicable to transmission\n
    \          systems used on the BT Access Network,' August 2005.\n         The
    following normative documents are quoted by the DESCRIPTION\n         clauses
    in this MIB module:\n         [G.993.1] refers to:\n           ITU-T Recommendation
    G.993.1: 'Very High speed Digital\n           Subscriber Line transceivers', June
    2004.\n         [T1.424] refers to:\n           ANSI T1.424-2004: 'Interface Between
    Networks and Customer\n           Installation Very-high-bit-rate Digital Subscriber
    Lines\n           (VDSL) Metallic Interface (DMT Based)', June 2004.\n         [TS
    101 270-1] refers to:\n           ETSI TS 101 270-1: 'Transmission and Multiplexing
    (TM);\n           Access transmission systems on metallic access cables;\n           Very
    high speed Digital Subscriber Line (VDSL); Part 1:\n           Functional requirements',
    October 2005.\n         Naming Conventions:\n           Atn   - Attenuation\n
    \          CO    - Central Office\n           CPE   - Customer Premises Equipment\n
    \          EFM   - Ethernet in the First Mile\n           EFMCu - EFM Copper\n
    \          MDIO  - Management Data Input/Output\n           Mgn   - Margin\n           PAF
    \  - PME Aggregation Function\n           PBO   - Power Back-Off\n           PCS
    \  - Physical Coding Sublayer\n           PMD   - Physical Medium Dependent\n
    \          PME   - Physical Medium Entity\n           PSD   - Power Spectral Density\n
    \          SNR   - Signal to Noise Ratio\n           TCPAM - Trellis Coded Pulse
    Amplitude Modulation\n         Copyright (C) The IETF Trust (2007).  This version\n
    \        of this MIB module is part of RFC 5066;  see the RFC\n         itself
    for full legal notices.\"\n       REVISION    \"200711140000Z\"  -- November 14,
    2007\n       DESCRIPTION \"Initial version, published as RFC 5066.\"\n       ::=
    { mib-2 167 }\n      -- Sections of the module\n      efmCuObjects     OBJECT
    IDENTIFIER ::= { efmCuMIB 1 }\n      efmCuConformance OBJECT IDENTIFIER ::= {
    efmCuMIB 2 }\n      -- Groups in the module\n      efmCuPort        OBJECT IDENTIFIER
    ::= { efmCuObjects 1 }\n      efmCuPme         OBJECT IDENTIFIER ::= { efmCuObjects
    2 }\n      -- Textual Conventions\n      EfmProfileIndex ::= TEXTUAL-CONVENTION\n
    \       DISPLAY-HINT \"d\"\n        STATUS       current\n        DESCRIPTION\n
    \         \"A unique value, greater than zero, for each PME configuration\n          profile
    in the managed EFMCu port.  It is RECOMMENDED that\n          values are assigned
    contiguously starting from 1.  The value\n          for each profile MUST remain
    constant at least from one\n          re-initialization of the entity's network
    management system\n          to the next re-initialization.\"\n        SYNTAX
    \      Unsigned32 (1..255)\n      EfmProfileIndexOrZero ::= TEXTUAL-CONVENTION\n
    \       DISPLAY-HINT \"d\"\n        STATUS       current\n        DESCRIPTION\n
    \         \"This textual convention is an extension of the\n          EfmProfileIndex
    convention.  The latter defines a greater than\n          zero value used to identify
    a PME profile in the managed EFMCu\n          port.  This extension permits the
    additional value of zero.\n          The value of zero is object-specific and
    MUST therefore be\n          defined as part of the description of any object
    that uses\n          this syntax.\n          Examples of the usage of zero value
    might include situations\n          where the current operational profile is unknown.\"\n
    \       SYNTAX       Unsigned32 (0..255)\n      EfmProfileIndexList ::= TEXTUAL-CONVENTION\n
    \       DISPLAY-HINT \"1d:\"\n        STATUS       current\n        DESCRIPTION\n
    \         \"This textual convention represents a list of up to 6\n          EfmProfileIndex
    values, any of which can be chosen for\n          configuration of a PME in a
    managed EFMCu port.\n          The EfmProfileIndex textual convention defines
    a greater than\n          zero value used to identify a PME profile.\n          The
    value of this object is a concatenation of zero or\n          more (up to 6) octets,
    where each octet contains an 8-bit\n          EfmProfileIndex value.\n          A
    zero-length octet string is object-specific and MUST\n          therefore be defined
    as part of the description of any object\n          that uses this syntax.  Examples
    of the usage of a zero-length\n          value might include situations where
    an object using this\n          textual convention is irrelevant for a specific
    EFMCu port\n          type.\"\n        SYNTAX       OCTET STRING (SIZE(0..6))\n
    \     EfmTruthValueOrUnknown ::= TEXTUAL-CONVENTION\n        STATUS       current\n
    \       DESCRIPTION\n          \"This textual convention is an extension of the
    TruthValue\n          convention.  The latter defines a boolean value with possible\n
    \         values of true(1) and false(2).  This extension permits the\n          additional
    value of unknown(0), which can be returned as the\n          result of a GET operation
    when an exact true or false value\n          of the object cannot be determined.\"\n
    \       SYNTAX       INTEGER { unknown(0), true(1), false(2) }\n     -- Port Notifications
    Group\n      efmCuPortNotifications OBJECT IDENTIFIER ::= { efmCuPort 0 }\n      efmCuLowRateCrossing
    NOTIFICATION-TYPE\n        OBJECTS {\n          ifSpeed,\n          efmCuThreshLowRate\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"This
    notification indicates that the EFMCu port's data rate\n          has reached/dropped
    below or exceeded the low rate threshold,\n          specified by efmCuThreshLowRate.\n
    \         This notification MAY be sent for the -O subtype ports\n          (2BaseTL-O/10PassTS-O)
    while the port is Up, on the crossing\n          event in both directions: from
    normal (rate is above the\n          threshold) to low (rate equals the threshold
    or below it) and\n          from low to normal.  This notification is not applicable
    to\n          the -R subtypes.\n          It is RECOMMENDED that a small debouncing
    period of 2.5 sec,\n          between the detection of the condition and the notification,\n
    \         is implemented to prevent simultaneous LinkUp/LinkDown and\n          efmCuLowRateCrossing
    notifications to be sent.\n          The adaptive nature of the EFMCu technology
    allows the port to\n          adapt itself to the changes in the copper environment,
    e.g.,\n          an impulse noise, alien crosstalk, or a micro-interruption may\n
    \         temporarily drop one or more PMEs in the aggregation group,\n          causing
    a rate degradation of the aggregated EFMCu link.\n          The dropped PMEs would
    then try to re-initialize, possibly at\n          a lower rate than before, adjusting
    the rate to provide\n          required target SNR margin.\n          Generation
    of this notification is controlled by the\n          efmCuLowRateCrossingEnable
    object.\"\n        ::= { efmCuPortNotifications 1 }\n      -- PCS Port group\n
    \     efmCuPortConfTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF EfmCuPortConfEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"Table for Configuration of EFMCu 2BASE-TL/10PASS-TS (PCS)\n          Ports.
    \ Entries in this table MUST be maintained in a\n          persistent manner.\"\n
    \       ::= { efmCuPort 1 }\n      efmCuPortConfEntry OBJECT-TYPE\n        SYNTAX
    \     EfmCuPortConfEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"An entry in the EFMCu Port Configuration table.\n
    \         Each entry represents an EFMCu port indexed by the ifIndex.\n          Note
    that an EFMCu PCS port runs on top of a single\n          or multiple PME port(s),
    which are also indexed by ifIndex.\"\n        INDEX  { ifIndex }\n        ::=
    { efmCuPortConfTable 1 }\n      EfmCuPortConfEntry ::=\n        SEQUENCE {\n          efmCuPAFAdminState
    \              INTEGER,\n          efmCuPAFDiscoveryCode            PhysAddress,\n
    \         efmCuAdminProfile                EfmProfileIndexList,\n          efmCuTargetDataRate
    \             Unsigned32,\n          efmCuTargetSnrMgn                Unsigned32,\n
    \         efmCuAdaptiveSpectra             TruthValue,\n          efmCuThreshLowRate
    \              Unsigned32,\n          efmCuLowRateCrossingEnable       TruthValue\n
    \       }\n      efmCuPAFAdminState  OBJECT-TYPE\n        SYNTAX      INTEGER
    {\n          enabled(1),\n          disabled(2)\n        }\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"Administrative
    (desired) state of the PAF of the EFMCu port\n          (PCS).\n          When
    'disabled', PME aggregation will not be performed by the\n          PCS.  No more
    than a single PME can be assigned to this PCS in\n          this case.\n          When
    'enabled', PAF will be performed by the PCS when the link\n          is Up, even
    on a single attached PME, if PAF is supported.\n          PCS ports incapable
    of supporting PAF SHALL return a value of\n          'disabled'.  Attempts to
    'enable' such ports SHALL be\n          rejected.\n          A PAF 'enabled' port
    with multiple PMEs assigned cannot be\n          'disabled'.  Attempts to 'disable'
    such port SHALL be\n          rejected, until at most one PME is left assigned.\n
    \         Changing PAFAdminState is a traffic-disruptive operation and\n          as
    such SHALL be done when the link is Down.  Attempts to\n          change this
    object SHALL be rejected if the link is Up or\n          Initializing.\n          This
    object maps to the Clause 30 attribute aPAFAdminState.\n          If a Clause
    45 MDIO Interface to the PCS is present, then this\n          object maps to the
    PAF enable bit in the 10P/2B PCS control\n          register.\n          This
    object MUST be maintained in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2, 45.2.3.18.3\"\n        ::= { efmCuPortConfEntry 1 }\n      efmCuPAFDiscoveryCode
    \ OBJECT-TYPE\n        SYNTAX      PhysAddress (SIZE(0|6))\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"PAF
    Discovery Code of the EFMCu port (PCS).\n          A unique 6-octet code used
    by the Discovery function,\n          when PAF is supported.\n          PCS ports
    incapable of supporting PAF SHALL return a\n          zero-length octet string
    on an attempt to read this object.\n          An attempt to write to this object
    SHALL be rejected for such\n          ports.\n          This object MUST be instantiated
    for the -O subtype PCS before\n          writing operations on the efmCuPAFRemoteDiscoveryCode\n
    \         (Set_if_Clear and Clear_if_Same) are performed by PMEs\n          associated
    with the PCS.\n          The initial value of this object for -R subtype ports
    after\n          reset is all zeroes.  For -R subtype ports, the value of this\n
    \         object cannot be changed directly.  This value may be changed\n          as
    a result of writing operation on the\n          efmCuPAFRemoteDiscoveryCode object
    of remote PME of -O\n          subtype, connected to one of the local PMEs associated
    with\n          the PCS.\n          Discovery MUST be performed when the link
    is Down.\n          Attempts to change this object MUST be rejected (in case of\n
    \         SNMP with the error inconsistentValue), if the link is Up or\n          Initializing.\n
    \         The PAF Discovery Code maps to the local Discovery code\n          variable
    in PAF (note that it does not have a corresponding\n          Clause 45 register).\"\n
    \       REFERENCE\n          \"[802.3ah] 61.2.2.8.3, 61.2.2.8.4, 45.2.6.6.1, 45.2.6.8,\n
    \         61A.2\"\n        ::= { efmCuPortConfEntry 2 }\n      efmCuAdminProfile
    \ OBJECT-TYPE\n        SYNTAX      EfmProfileIndexList\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Desired configuration
    profile(s), common for all PMEs in the\n          EFMCu port.  This object is
    a list of pointers to entries in\n          either efmCuPme2BProfileTable or\n
    \         efmCuPme10PProfileTable, depending on the current\n          operating
    SubType of the EFMCu port as indicated by\n          efmCuPortSide.\n          The
    value of this object is a list of up to 6 indices of\n          profiles.  If
    this list consists of a single profile index,\n          then all PMEs assigned
    to this EFMCu port SHALL be configured\n          according to the profile referenced
    by that index, unless it\n          is overwritten by a corresponding non-zero\n
    \         efmCuPmeAdminProfile instance, which takes precedence over\n          efmCuAdminProfile.\n
    \         A list consisting of more than one index allows each PME\n          in
    the port to be configured according to any profile\n          specified in the
    list.\n          By default, this object has a value of 0x01, referencing the\n
    \         1st entry in efmCuPme2BProfileTable or\n          efmCuPme10PProfileTable.\n
    \         This object is writable and readable for the -O subtype\n          (2BaseTL-O
    or 10PassTS-O) EFMCu ports.  It is irrelevant for\n          the -R  subtype (2BaseTL-R
    or 10PassTS-R) ports -- a\n          zero-length octet string SHALL be returned
    on an attempt to\n          read this object and an attempt to change this object
    MUST be\n          rejected in this case.\n          Note that the current operational
    profile value is available\n          via the efmCuPmeOperProfile object.\n          Any
    modification of this object MUST be performed when the\n          link is Down.
    \ Attempts to change this object MUST be\n          rejected, if the link is Up
    or Initializing.\n          Attempts to set this object to a list with a member
    value that\n          is not the value of the index for an active entry in the\n
    \         corresponding profile table MUST be rejected.\n          This object
    maps to the Clause 30 attribute aProfileSelect.\n          This object MUST be
    maintained in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah]
    30.11.2.1.6\"\n        DEFVAL { '01'H }\n        ::= { efmCuPortConfEntry 3 }\n
    \     efmCuTargetDataRate  OBJECT-TYPE\n        SYNTAX      Unsigned32(1..100000|999999)\n
    \       UNITS       \"Kbps\"\n        MAX-ACCESS  read-write\n        STATUS      current\n
    \       DESCRIPTION\n          \"Desired EFMCu port 'net' (as seen across MII)
    Data Rate in\n          Kbps, to be achieved during initialization, under spectral\n
    \         restrictions placed on each PME via efmCuAdminProfile or\n          efmCuPmeAdminProfile,
    with the desired SNR margin specified by\n          efmCuTargetSnrMgn.\n          In
    case of PAF, this object represents a sum of individual PME\n          data rates,
    modified to compensate for fragmentation and\n          64/65-octet encapsulation
    overhead (e.g., target data rate of\n          10 Mbps SHALL allow lossless transmission
    of a full-duplex\n          10 Mbps Ethernet frame stream with minimal inter-frame
    gap).\n          The value is limited above by 100 Mbps as this is the max\n          burst
    rate across MII for EFMCu ports.\n          The value between 1 and 100000 indicates
    that the total data\n          rate (ifSpeed) of the EFMCu port after initialization
    SHALL be\n          equal to the target data rate or less, if the target data
    rate\n          cannot be achieved under spectral restrictions specified by\n
    \         efmCuAdminProfile/efmCuPmeAdminProfile and with the desired\n          SNR
    margin.  In case the copper environment allows a higher\n          total data
    rate to be achieved than that specified by the\n          target, the excess capability
    SHALL be either converted to\n          additional SNR margin or reclaimed by
    minimizing transmit\n          power as controlled by efmCuAdaptiveSpectra.\n
    \         The value of 999999 means that the target data rate is not\n          fixed
    and SHALL be set to the maximum attainable rate during\n          initialization
    (Best Effort), under specified spectral\n          restrictions and with the desired
    SNR margin.\n          This object is read-write for the -O subtype EFMCu ports\n
    \         (2BaseTL-O/10PassTS-O) and not available for the -R subtypes.\n          Changing
    of the Target Data Rate MUST be performed when the\n          link is Down.  Attempts
    to change this object MUST be rejected\n          (in case of SNMP with the error
    inconsistentValue), if the\n          link is Up or Initializing.\n          Note
    that the current Data Rate of the EFMCu port is\n          represented by the
    ifSpeed object of IF-MIB.\n          This object MUST be maintained in a persistent
    manner.\"\n        ::= { efmCuPortConfEntry 4 }\n      efmCuTargetSnrMgn  OBJECT-TYPE\n
    \       SYNTAX      Unsigned32(0..21)\n        UNITS       \"dB\"\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"Desired
    EFMCu port SNR margin to be achieved on all PMEs\n          assigned to the port,
    during initialization. (The SNR margin\n          is the difference between the
    desired SNR and the actual SNR).\n          Note that 802.3ah recommends using
    a default target SNR margin\n          of 5 dB for 2BASE-TL ports and 6 dB for
    10PASS-TS ports in\n          order to achieve a mean Bit Error Rate (BER) of
    10^-7 at the\n          PMA service interface.\n          This object is read-write
    for the -O subtype EFMCu ports\n          (2BaseTL-O/10PassTS-O) and not available
    for the -R subtypes.\n          Changing of the target SNR margin MUST be performed
    when the\n          link is Down.  Attempts to change this object MUST be rejected\n
    \         (in case of SNMP with the error inconsistentValue), if the\n          link
    is Up or Initializing.\n          Note that the current SNR margin of the PMEs
    comprising the\n          EFMCu port is represented by efmCuPmeSnrMgn.\n          This
    object MUST be maintained in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah]
    61.1.2\"\n        ::= { efmCuPortConfEntry 5 }\n      efmCuAdaptiveSpectra  OBJECT-TYPE\n
    \       SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n          \"Indicates how to utilize excess
    capacity when the copper\n          environment allows a higher total data rate
    to be achieved\n          than that specified by the efmCuTargetDataRate.\n          A
    value of true(1) indicates that the excess capability SHALL\n          be reclaimed
    by minimizing transmit power, e.g., using higher\n          constellations and
    Power Back-Off, in order to reduce\n          interference to other copper pairs
    in the binder and the\n          adverse impact to link/system performance.\n
    \         A value of false(2) indicates that the excess capability SHALL\n          be
    converted to additional SNR margin and spread evenly across\n          all active
    PMEs assigned to the (PCS) port, to increase link\n          robustness.\n          This
    object is read-write for the -O subtype EFMCu ports\n          (2BaseTL-O/10PassTS-O)
    and not available for the -R subtypes.\n          Changing of this object MUST
    be performed when the link is\n          Down.  Attempts to change this object
    MUST be rejected (in\n          case of SNMP with the error inconsistentValue),
    if the link\n          is Up or Initializing.\n          This object MUST be maintained
    in a persistent manner.\"\n        ::= { efmCuPortConfEntry 6 }\n      efmCuThreshLowRate
    \ OBJECT-TYPE\n        SYNTAX      Unsigned32(1..100000)\n        UNITS       \"Kbps\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"This object configures the EFMCu port low-rate crossing alarm\n          threshold.
    \ When the current value of ifSpeed for this port\n          reaches/drops below
    or exceeds this threshold, an\n          efmCuLowRateCrossing notification MAY
    be generated if enabled\n          by efmCuLowRateCrossingEnable.\n          This
    object is read-write for the -O subtype EFMCu ports\n          (2BaseTL-O/10PassTS-O)
    and not available for the -R subtypes.\n          This object MUST be maintained
    in a persistent manner.\"\n        ::= { efmCuPortConfEntry 7 }\n      efmCuLowRateCrossingEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuLowRateCrossing notifications should\n          be generated for this interface.\n
    \         A value of true(1) indicates that efmCuLowRateCrossing\n          notification
    is enabled.  A value of false(2) indicates that\n          the notification is
    disabled.\n          This object is read-write for the -O subtype EFMCu ports\n
    \         (2BaseTL-O/10PassTS-O) and not available for the -R subtypes.\n          This
    object MUST be maintained in a persistent manner.\"\n        ::= { efmCuPortConfEntry
    8 }\n      efmCuPortCapabilityTable OBJECT-TYPE\n        SYNTAX      SEQUENCE
    OF EfmCuPortCapabilityEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"Table for Capabilities of EFMCu
    2BASE-TL/10PASS-TS (PCS)\n          Ports.  Entries in this table MUST be maintained
    in a\n          persistent manner\"\n        ::= { efmCuPort 2 }\n      efmCuPortCapabilityEntry
    OBJECT-TYPE\n        SYNTAX      EfmCuPortCapabilityEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"An
    entry in the EFMCu Port Capability table.\n          Each entry represents an
    EFMCu port indexed by the ifIndex.\n          Note that an EFMCu PCS port runs
    on top of a single\n          or multiple PME port(s), which are also indexed
    by ifIndex.\"\n        INDEX  { ifIndex }\n        ::= { efmCuPortCapabilityTable
    1 }\n      EfmCuPortCapabilityEntry ::=\n        SEQUENCE {\n          efmCuPAFSupported
    \               TruthValue,\n          efmCuPeerPAFSupported            EfmTruthValueOrUnknown,\n
    \         efmCuPAFCapacity                 Unsigned32,\n          efmCuPeerPAFCapacity
    \            Unsigned32\n        }\n      efmCuPAFSupported  OBJECT-TYPE\n        SYNTAX
    \     TruthValue\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"PME Aggregation Function (PAF) capability of
    the EFMCu port\n          (PCS).\n          This object has a value of true(1)
    when the PCS can perform\n          PME aggregation on the available PMEs.\n          Ports
    incapable of PAF SHALL return a value of false(2).\n          This object maps
    to the Clause 30 attribute aPAFSupported.\n          If a Clause 45 MDIO Interface
    to the PCS is present,\n          then this object maps to the PAF available bit
    in the\n          10P/2B capability register.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2, 30.11.1.1.4, 45.2.3.17.1\"\n        ::= { efmCuPortCapabilityEntry 1 }\n
    \     efmCuPeerPAFSupported  OBJECT-TYPE\n        SYNTAX      EfmTruthValueOrUnknown\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"PME Aggregation Function (PAF) capability of the EFMCu port\n          (PCS)
    link partner.\n          This object has a value of true(1) when the remote PCS
    can\n          perform PME aggregation on its available PMEs.\n          Ports
    whose peers are incapable of PAF SHALL return a value\n          of false(2).\n
    \         Ports whose peers cannot be reached because of the link\n          state
    SHALL return a value of unknown(0).\n          This object maps to the Clause
    30 attribute\n          aRemotePAFSupported.\n          If a Clause 45 MDIO Interface
    to the PCS is present, then\n          this object maps to the Remote PAF supported
    bit in the\n          10P/2B capability register.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2, 30.11.1.1.9, 45.2.3.17.2\"\n        ::= { efmCuPortCapabilityEntry 2 }\n
    \     efmCuPAFCapacity  OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..32)\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"Number of PMEs that can be aggregated by the local PAF.\n          The
    number of PMEs currently assigned to a particular\n          EFMCu port (efmCuNumPMEs)
    is never greater than\n          efmCuPAFCapacity.\n          This object maps
    to the Clause 30 attribute\n          aLocalPAFCapacity.\"\n        REFERENCE\n
    \         \"[802.3ah] 61.2.2, 30.11.1.1.6\"\n        ::= { efmCuPortCapabilityEntry
    3 }\n      efmCuPeerPAFCapacity  OBJECT-TYPE\n        SYNTAX      Unsigned32 (0|1..32)\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"Number of PMEs that can be aggregated by the PAF of the peer\n          PHY
    (PCS port).\n          A value of 0 is returned when peer PAF capacity is unknown\n
    \         (peer cannot be reached).\n          This object maps to the Clause
    30 attribute\n          aRemotePAFCapacity.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2, 30.11.1.1.10\"\n        ::= { efmCuPortCapabilityEntry 4 }\n      efmCuPortStatusTable
    OBJECT-TYPE\n        SYNTAX      SEQUENCE OF EfmCuPortStatusEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"This
    table provides overall status information of EFMCu\n          2BASE-TL/10PASS-TS
    ports, complementing the generic status\n          information from the ifTable
    of IF-MIB and ifMauTable of\n          MAU-MIB.  Additional status information
    about connected PMEs\n          is available from the efmCuPmeStatusTable.\n          This
    table contains live data from the equipment.  As such,\n          it is NOT persistent.\"\n
    \       ::= { efmCuPort 3 }\n      efmCuPortStatusEntry OBJECT-TYPE\n        SYNTAX
    \     EfmCuPortStatusEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"An entry in the EFMCu Port Status
    table.\n          Each entry represents an EFMCu port indexed by the ifIndex.\n
    \         Note that an EFMCu PCS port runs on top of a single\n          or multiple
    PME port(s), which are also indexed by ifIndex.\"\n        INDEX  { ifIndex }\n
    \       ::= { efmCuPortStatusTable 1 }\n      EfmCuPortStatusEntry ::=\n        SEQUENCE
    {\n          efmCuFltStatus                   BITS,\n          efmCuPortSide                    INTEGER,\n
    \         efmCuNumPMEs                     Unsigned32,\n          efmCuPAFInErrors
    \                Counter32,\n          efmCuPAFInSmallFragments         Counter32,\n
    \         efmCuPAFInLargeFragments         Counter32,\n          efmCuPAFInBadFragments
    \          Counter32,\n          efmCuPAFInLostFragments          Counter32,\n
    \         efmCuPAFInLostStarts             Counter32,\n          efmCuPAFInLostEnds
    \              Counter32,\n          efmCuPAFInOverflows              Counter32\n
    \       }\n      efmCuFltStatus  OBJECT-TYPE\n        SYNTAX      BITS {\n          noPeer(0),\n
    \         peerPowerLoss(1),\n          pmeSubTypeMismatch(2),\n          lowRate(3)\n
    \       }\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"EFMCu (PCS) port Fault Status.  This is a bitmap of possible\n          conditions.
    \ The various bit positions are:\n            noPeer              - the peer PHY
    cannot be reached (e.g.,\n                                  no PMEs attached,
    all PMEs are Down,\n                                  etc.). More info is available
    in\n                                  efmCuPmeFltStatus.\n            peerPowerLoss
    \      - the peer PHY has indicated impending\n                                  unit
    failure due to loss of local\n                                  power ('Dying
    Gasp').\n            pmeSubTypeMismatch  - local PMEs in the aggregation group\n
    \                                 are not of the same subtype, e.g.,\n                                  some
    PMEs in the local device are -O\n                                  while others
    are -R subtype.\n            lowRate             - ifSpeed of the port reached
    or dropped\n                                  below efmCuThreshLowRate.\n          This
    object is intended to supplement the ifOperStatus object\n          in IF-MIB
    and ifMauMediaAvailable in MAU-MIB.\n          Additional information is available
    via the efmCuPmeFltStatus\n          object for each PME in the aggregation group
    (single PME if\n          PAF is disabled).\"\n        REFERENCE\n          \"IF-MIB,
    ifOperStatus; MAU-MIB, ifMauMediaAvailable;\n           efmCuPmeFltStatus\"\n
    \       ::= { efmCuPortStatusEntry 1 }\n      efmCuPortSide  OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n          subscriber(1),\n          office(2),\n          unknown(3)\n
    \       }\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"EFM port mode of operation (subtype).\n          The value of 'subscriber'
    indicates that the port is\n          designated as '-R' subtype (all PMEs assigned
    to this port are\n          of subtype '-R').\n          The value of the 'office'
    indicates that the port is\n          designated as '-O' subtype (all PMEs assigned
    to this port are\n          of subtype '-O').\n          The value of 'unknown'
    indicates that the port has no assigned\n          PMEs yet or that the assigned
    PMEs are not of the same side\n          (subTypePMEMismatch).\n          This
    object partially maps to the Clause 30 attribute\n          aPhyEnd.\"\n        REFERENCE\n
    \          \"[802.3ah] 61.1, 30.11.1.1.2\"\n        ::= { efmCuPortStatusEntry
    2 }\n      efmCuNumPMEs  OBJECT-TYPE\n        SYNTAX      Unsigned32 (0..32)\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The number of PMEs that is currently aggregated by the local\n          PAF
    (assigned to the EFMCu port using the ifStackTable).\n          This number is
    never greater than efmCuPAFCapacity.\n          This object SHALL be automatically
    incremented or decremented\n          when a PME is added or deleted to/from the
    EFMCu port using\n          the ifStackTable.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2, 30.11.1.1.6\"\n        ::= { efmCuPortStatusEntry 3 }\n      efmCuPAFInErrors
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of fragments that have
    been received across the\n          gamma interface with RxErr asserted and discarded.\n
    \         This read-only counter is inactive (not incremented) when the\n          PAF
    is unsupported or disabled.  Upon disabling the PAF, the\n          counter retains
    its previous value.\n          If a Clause 45 MDIO Interface to the PCS is present,
    then\n          this object maps to the 10P/2B PAF RX error register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.21\"\n        ::= { efmCuPortStatusEntry 4 }\n      efmCuPAFInSmallFragments
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of fragments smaller
    than minFragmentSize\n          (64 bytes) that have been received across the
    gamma interface\n          and discarded.\n          This read-only counter is
    inactive when the PAF is\n          unsupported or disabled.  Upon disabling the
    PAF, the counter\n          retains its previous value.\n          If a Clause
    45 MDIO Interface to the PCS is present, then\n          this object maps to the
    10P/2B PAF small fragments register.\n          Discontinuities in the value of
    this counter can occur at\n          re-initialization of the management system,
    and at other times\n          as indicated by the value of ifCounterDiscontinuityTime,\n
    \         defined in IF-MIB.\"\n        REFERENCE\n          \"[802.3ah] 45.2.3.22\"\n
    \       ::= { efmCuPortStatusEntry 5 }\n      efmCuPAFInLargeFragments OBJECT-TYPE\n
    \       SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"The number of fragments larger than maxFragmentSize\n
    \         (512 bytes) that have been received across the gamma interface\n          and
    discarded.\n          This read-only counter is inactive when the PAF is\n          unsupported
    or disabled.  Upon disabling the PAF, the counter\n          retains its previous
    value.\n          If a Clause 45 MDIO Interface to the PCS is present, then\n
    \         this object maps to the 10P/2B PAF large fragments register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.23\"\n        ::= { efmCuPortStatusEntry 6 }\n      efmCuPAFInBadFragments
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of fragments that do
    not fit into the sequence\n          expected by the frame assembly function and
    that have been\n          received across the gamma interface and discarded (the\n
    \         frame buffer is flushed to the next valid frame start).\n          This
    read-only counter is inactive when the PAF is\n          unsupported or disabled.
    \ Upon disabling the PAF, the counter\n          retains its previous value.\n
    \         If a Clause 45 MDIO Interface to the PCS is present, then\n          this
    object maps to the 10P/2B PAF bad fragments register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.25\"\n        ::= { efmCuPortStatusEntry 7 }\n      efmCuPAFInLostFragments
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of gaps in the sequence
    of fragments that have\n          been received across the gamma interface (the
    frame buffer is\n          flushed to the next valid frame start, when fragment/fragments\n
    \         expected by the frame assembly function is/are not received).\n          This
    read-only counter is inactive when the PAF is\n          unsupported or disabled.
    \ Upon disabling the PAF, the counter\n          retains its previous value.\n
    \         If a Clause 45 MDIO Interface to the PCS is present, then\n          this
    object maps to the 10P/2B PAF lost fragment register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.26\"\n        ::= { efmCuPortStatusEntry 8 }\n      efmCuPAFInLostStarts
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of missing StartOfPacket
    indicators expected by\n          the frame assembly function.\n          This
    read-only counter is inactive when the PAF is\n          unsupported or disabled.
    \ Upon disabling the PAF, the counter\n          retains its previous value.\n
    \         If a Clause 45 MDIO Interface to the PCS is present, then\n          this
    object maps to the 10P/2B PAF lost start of fragment\n          register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.27\"\n        ::= { efmCuPortStatusEntry 9 }\n      efmCuPAFInLostEnds
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of missing EndOfPacket
    indicators expected by the\n          frame assembly function.\n          This
    read-only counter is inactive when the PAF is\n          unsupported or disabled.
    \ Upon disabling the PAF, the counter\n          retains its previous value.\n
    \         If a Clause 45 MDIO Interface to the PCS is present, then\n          this
    object maps to the 10P/2B PAF lost start of fragment\n          register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.3.28\"\n        ::= { efmCuPortStatusEntry 10 }\n      efmCuPAFInOverflows
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of fragments, received
    across the gamma interface\n          and discarded, which would have caused the
    frame assembly\n          buffer to overflow.\n          This read-only counter
    is inactive when the PAF is\n          unsupported or disabled.  Upon disabling
    the PAF, the counter\n          retains its previous value.\n          If a Clause
    45 MDIO Interface to the PCS is present, then\n          this object maps to the
    10P/2B PAF overflow register.\n          Discontinuities in the value of this
    counter can occur at\n          re-initialization of the management system, and
    at other times\n          as indicated by the value of ifCounterDiscontinuityTime,\n
    \         defined in IF-MIB.\"\n        REFERENCE\n          \"[802.3ah] 45.2.3.24\"\n
    \       ::= { efmCuPortStatusEntry 11 }\n     -- PME Notifications Group\n      efmCuPmeNotifications
    OBJECT IDENTIFIER ::= { efmCuPme 0 }\n      efmCuPmeLineAtnCrossing NOTIFICATION-TYPE\n
    \       OBJECTS {\n          efmCuPmeLineAtn,\n          efmCuPmeThreshLineAtn\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"This
    notification indicates that the loop attenuation\n          threshold (as per
    the efmCuPmeThreshLineAtn\n          value) has been reached/exceeded for the
    2BASE-TL/10PASS-TS\n          PME.  This notification MAY be sent on the crossing
    event in\n          both directions: from normal to exceeded and from exceeded\n
    \         to normal.\n          It is RECOMMENDED that a small debouncing period
    of 2.5 sec,\n          between the detection of the condition and the notification,\n
    \         is implemented to prevent intermittent notifications from\n          being
    sent.\n          Generation of this notification is controlled by the\n          efmCuPmeLineAtnCrossingEnable
    object.\"\n        ::= { efmCuPmeNotifications 1 }\n      efmCuPmeSnrMgnCrossing
    NOTIFICATION-TYPE\n        OBJECTS {\n          efmCuPmeSnrMgn,\n          efmCuPmeThreshSnrMgn\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"This
    notification indicates that the SNR margin threshold\n          (as per the efmCuPmeThreshSnrMgn
    value) has been\n          reached/exceeded for the 2BASE-TL/10PASS-TS PME.\n
    \         This notification MAY be sent on the crossing event in\n          both
    directions: from normal to exceeded and from exceeded\n          to normal.\n
    \         It is RECOMMENDED that a small debouncing period of 2.5 sec,\n          between
    the detection of the condition and the notification,\n          is implemented
    to prevent intermittent notifications from\n          being sent.\n          Generation
    of this notification is controlled by the\n          efmCuPmeSnrMgnCrossingEnable
    object.\"\n        ::= { efmCuPmeNotifications 2 }\n      efmCuPmeDeviceFault
    NOTIFICATION-TYPE\n        OBJECTS {\n          efmCuPmeFltStatus\n        }\n
    \       STATUS      current\n        DESCRIPTION\n          \"This notification
    indicates that a fault in the PME has been\n          detected by a vendor-specific
    diagnostic or a self-test.\n          Generation of this notification is controlled
    by the\n          efmCuPmeDeviceFaultEnable object.\"\n        ::= { efmCuPmeNotifications
    3 }\n      efmCuPmeConfigInitFailure NOTIFICATION-TYPE\n        OBJECTS {\n          efmCuPmeFltStatus,\n
    \         efmCuAdminProfile,\n          efmCuPmeAdminProfile\n        }\n        STATUS
    \     current\n        DESCRIPTION\n          \"This notification indicates that
    PME initialization has\n          failed, due to inability of the PME link to
    achieve the\n          requested configuration profile.\n          Generation
    of this notification is controlled by the\n          efmCuPmeConfigInitFailEnable
    object.\"\n        ::= { efmCuPmeNotifications 4 }\n      efmCuPmeProtocolInitFailure
    NOTIFICATION-TYPE\n        OBJECTS {\n          efmCuPmeFltStatus,\n          efmCuPmeOperSubType\n
    \       }\n        STATUS     current\n        DESCRIPTION\n          \"This notification
    indicates that the peer PME was using\n          an incompatible protocol during
    initialization.\n          Generation of this notification is controlled by the\n
    \         efmCuPmeProtocolInitFailEnable object.\"\n        ::= { efmCuPmeNotifications
    5 }\n      -- The PME group\n      efmCuPmeConfTable OBJECT-TYPE\n        SYNTAX
    \     SEQUENCE OF EfmCuPmeConfEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"Table for Configuration of common
    aspects for EFMCu\n          2BASE-TL/10PASS-TS PME ports (modems).  Configuration
    of\n          aspects specific to 2BASE-TL or 10PASS-TS PME types is\n          represented
    in efmCuPme2BConfTable and efmCuPme10PConfTable,\n          respectively.\n          Entries
    in this table MUST be maintained in a persistent\n          manner.\"\n        ::=
    { efmCuPme 1 }\n      efmCuPmeConfEntry OBJECT-TYPE\n        SYNTAX      EfmCuPmeConfEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An entry in the EFMCu PME Configuration table.\n          Each entry
    represents common aspects of an EFMCu PME port\n          indexed by the ifIndex.
    \ Note that an EFMCu PME port can be\n          stacked below a single PCS port,
    also indexed by ifIndex,\n          possibly together with other PME ports if
    PAF is enabled.\"\n        INDEX  { ifIndex }\n        ::= { efmCuPmeConfTable
    1 }\n      EfmCuPmeConfEntry ::=\n        SEQUENCE {\n          efmCuPmeAdminSubType
    \          INTEGER,\n          efmCuPmeAdminProfile           EfmProfileIndexOrZero,\n
    \         efmCuPAFRemoteDiscoveryCode    PhysAddress,\n          efmCuPmeThreshLineAtn
    \         Integer32,\n          efmCuPmeThreshSnrMgn           Integer32,\n          efmCuPmeLineAtnCrossingEnable
    \ TruthValue,\n          efmCuPmeSnrMgnCrossingEnable   TruthValue,\n          efmCuPmeDeviceFaultEnable
    \     TruthValue,\n          efmCuPmeConfigInitFailEnable   TruthValue,\n          efmCuPmeProtocolInitFailEnable
    TruthValue\n        }\n      efmCuPmeAdminSubType  OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n          ieee2BaseTLO(1),\n          ieee2BaseTLR(2),\n          ieee10PassTSO(3),\n
    \         ieee10PassTSR(4),\n          ieee2BaseTLor10PassTSR(5),\n          ieee2BaseTLor10PassTSO(6),\n
    \         ieee10PassTSor2BaseTLO(7)\n        }\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Administrative (desired)
    subtype of the PME.\n          Possible values are:\n            ieee2BaseTLO
    \          - PME SHALL operate as 2BaseTL-O\n            ieee2BaseTLR           -
    PME SHALL operate as 2BaseTL-R\n            ieee10PassTSO          - PME SHALL
    operate as 10PassTS-O\n            ieee10PassTSR          - PME SHALL operate
    as 10PassTS-R\n            ieee2BaseTLor10PassTSR - PME SHALL operate as 2BaseTL-R
    or\n                                     10PassTS-R.  The actual value will\n
    \                                    be set by the -O link partner\n                                     during
    initialization (handshake).\n            ieee2BaseTLor10PassTSO - PME SHALL operate
    as 2BaseTL-O\n                                     (preferred) or 10PassTS-O.
    \ The\n                                     actual value will be set during\n
    \                                    initialization depending on the -R\n                                     link
    partner capability (i.e., if\n                                     -R is incapable
    of the preferred\n                                     2BaseTL mode, 10PassTS
    will be\n                                     used).\n            ieee10PassTSor2BaseTLO
    - PME SHALL operate as 10PassTS-O\n                                     (preferred)
    or 2BaseTL-O.  The\n                                     actual value will be
    set during\n                                     initialization depending on the
    -R\n                                     link partner capability (i.e., if\n                                     -R
    is incapable of the preferred\n                                     10PassTS mode,
    2BaseTL will be\n                                     used).\n          Changing
    efmCuPmeAdminSubType is a traffic-disruptive\n          operation and as such
    SHALL be done when the link is Down.\n          Attempts to change this object
    SHALL be rejected if the link\n          is Up or Initializing.\n          Attempts
    to change this object to an unsupported subtype\n          (see efmCuPmeSubTypesSupported)
    SHALL be rejected.\n          The current operational subtype is indicated by
    the\n          efmCuPmeOperSubType variable.\n          If a Clause 45 MDIO Interface
    to the PMA/PMD is present, then\n          this object combines values of the
    Port subtype select bits\n          and the PMA/PMD type selection bits in the
    10P/2B PMA/PMD\n          control register.\"\n        REFERENCE\n          \"[802.3ah]
    61.1, 45.2.1.11.4, 45.2.1.11.7\"\n        ::= { efmCuPmeConfEntry 1 }\n      efmCuPmeAdminProfile
    \ OBJECT-TYPE\n        SYNTAX      EfmProfileIndexOrZero\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Desired PME configuration
    profile.  This object is a pointer\n          to an entry in either the efmCuPme2BProfileTable
    or the\n          efmCuPme10PProfileTable, depending on the current operating\n
    \         SubType of the PME.  The value of this object is the index of\n          the
    referenced profile.\n          The value of zero (default) indicates that the
    PME is\n          configured via the efmCuAdminProfile object for the PCS port\n
    \         to which this PME is assigned.  That is, the profile\n          referenced
    by efmCuPmeAdminProfile takes precedence\n          over the profile(s) referenced
    by efmCuAdminProfile.\n          This object is writable and readable for the
    CO subtype PMEs\n          (2BaseTL-O or 10PassTS-O). It is irrelevant for the
    CPE\n          subtype (2BaseTL-R or 10PassTS-R) -- a zero value SHALL be\n          returned
    on an attempt to read this object and any attempt\n          to change this object
    MUST be rejected in this case.\n          Note that the current operational profile
    value is available\n          via efmCuPmeOperProfile object.\n          Any modification
    of this object MUST be performed when the\n          link is Down.  Attempts to
    change this object MUST be\n          rejected, if the link is Up or Initializing.\n
    \         Attempts to set this object to a value that is not the value\n          of
    the index for an active entry in the corresponding profile\n          table MUST
    be rejected.\n          This object maps to the Clause 30 attribute aProfileSelect.\n
    \         This object MUST be maintained in a persistent manner.\"\n        REFERENCE\n
    \         \"[802.3ah] 30.11.2.1.6\"\n        DEFVAL { 0 }\n        ::= { efmCuPmeConfEntry
    2 }\n      efmCuPAFRemoteDiscoveryCode  OBJECT-TYPE\n        SYNTAX      PhysAddress
    (SIZE(0|6))\n        MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"PAF Remote Discovery Code of the PME port at the CO.\n          The
    6-octet Discovery Code of the peer PCS connected via\n          the PME.\n          Reading
    this object results in a Discovery Get operation.\n          Setting this object
    to all zeroes results in a Discovery\n          Clear_if_Same operation (the value
    of efmCuPAFDiscoveryCode\n          at the peer PCS SHALL be the same as efmCuPAFDiscoveryCode
    of\n          the local PCS associated with the PME for the operation to\n          succeed).\n
    \         Writing a non-zero value to this object results in a\n          Discovery
    Set_if_Clear operation.\n          A zero-length octet string SHALL be returned
    on an attempt to\n          read this object when PAF aggregation is not enabled.\n
    \         This object is irrelevant in CPE port (-R) subtypes: in this\n          case,
    a zero-length octet string SHALL be returned on an\n          attempt to read
    this object; writing to this object SHALL\n          be rejected.\n          Discovery
    MUST be performed when the link is Down.\n          Attempts to change this object
    MUST be rejected (in case of\n          SNMP with the error inconsistentValue),
    if the link is Up or\n          Initializing.\n          If a Clause 45 MDIO Interface
    to the PMA/PMD is present, then\n          this object is a function of 10P/2B
    aggregation discovery\n          control register, Discovery operation result
    bits in 10P/2B\n          aggregation and discovery status register and\n          10P/2B
    aggregation discovery code register.\"\n        REFERENCE\n          \"[802.3ah]
    61.2.2.8.4, 45.2.6.6-45.2.6.8\"\n        ::= { efmCuPmeConfEntry 3 }\n      efmCuPmeThreshLineAtn
    \ OBJECT-TYPE\n        SYNTAX  Integer32(-127..128)\n        UNITS       \"dB\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"Desired Line Attenuation threshold for the 2B/10P PME.\n          This
    object configures the line attenuation alarm threshold.\n          When the current
    value of Line Attenuation reaches or\n          exceeds this threshold, an efmCuPmeLineAtnCrossing\n
    \         notification MAY be generated, if enabled by\n          efmCuPmeLineAtnCrossingEnable.\n
    \         This object is writable for the CO subtype PMEs (-O).\n          It
    is read-only for the CPE subtype (-R).\n          Changing of the Line Attenuation
    threshold MUST be performed\n          when the link is Down.  Attempts to change
    this object MUST be\n          rejected (in case of SNMP with the error inconsistentValue),\n
    \         if the link is Up or Initializing.\n          If a Clause 45 MDIO Interface
    to the PME is present, then this\n          object maps to the loop attenuation
    threshold bits in\n          the 2B PMD line quality thresholds register.\"\n
    \       REFERENCE\n          \"[802.3ah] 45.2.1.36\"\n        ::= { efmCuPmeConfEntry
    4 }\n      efmCuPmeThreshSnrMgn  OBJECT-TYPE\n        SYNTAX      Integer32(-127..128)\n
    \       UNITS       \"dB\"\n        MAX-ACCESS  read-write\n        STATUS      current\n
    \       DESCRIPTION\n          \"Desired SNR margin threshold for the 2B/10P PME.\n
    \         This object configures the SNR margin alarm threshold.\n          When
    the current value of SNR margin reaches or exceeds this\n          threshold,
    an efmCuPmeSnrMgnCrossing notification MAY be\n          generated, if enabled
    by efmCuPmeSnrMgnCrossingEnable.\n          This object is writable for the CO
    subtype PMEs\n          (2BaseTL-O/10PassTS-O).  It is read-only for the CPE subtype\n
    \         (2BaseTL-R/10PassTS-R).\n          Changing of the SNR margin threshold
    MUST be performed when\n          the link is Down.  Attempts to change this object
    MUST be\n          rejected (in case of SNMP with the error inconsistentValue),\n
    \         if the link is Up or Initializing.\n          If a Clause 45 MDIO Interface
    to the PME is present, then this\n          object maps to the SNR margin threshold
    bits in the 2B PMD\n          line quality thresholds register.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.36\"\n        ::= { efmCuPmeConfEntry 5 }\n      efmCuPmeLineAtnCrossingEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuPmeLineAtnCrossing notifications\n          should be generated for this
    interface.\n          A value of true(1) indicates that efmCuPmeLineAtnCrossing\n
    \         notification is enabled.  A value of false(2) indicates that\n          the
    notification is disabled.\"\n        ::= { efmCuPmeConfEntry 6 }\n      efmCuPmeSnrMgnCrossingEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuPmeSnrMgnCrossing notifications\n          should be generated for this interface.\n
    \         A value of true(1) indicates that efmCuPmeSnrMgnCrossing\n          notification
    is enabled.  A value of false(2) indicates that\n          the notification is
    disabled.\"\n        ::= { efmCuPmeConfEntry 7 }\n      efmCuPmeDeviceFaultEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuPmeDeviceFault notifications\n          should be generated for this interface.\n
    \         A value of true(1) indicates that efmCuPmeDeviceFault\n          notification
    is enabled.  A value of false(2) indicates that\n          the notification is
    disabled.\"\n        ::= { efmCuPmeConfEntry 8 }\n      efmCuPmeConfigInitFailEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuPmeConfigInitFailure notifications\n          should be generated for this
    interface.\n          A value of true(1) indicates that efmCuPmeConfigInitFailure\n
    \         notification is enabled.  A value of false(2) indicates that\n          the
    notification is disabled.\"\n        ::= { efmCuPmeConfEntry 9 }\n      efmCuPmeProtocolInitFailEnable
    \ OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"Indicates whether
    efmCuPmeProtocolInitFailure notifications\n          should be generated for this
    interface.\n          A value of true(1) indicates that efmCuPmeProtocolInitFailure\n
    \         notification is enabled.  A value of false(2) indicates that\n          the
    notification is disabled.\"\n        ::= { efmCuPmeConfEntry 10 }\n      efmCuPmeCapabilityTable
    OBJECT-TYPE\n        SYNTAX      SEQUENCE OF EfmCuPmeCapabilityEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"Table
    for the configuration of common aspects for EFMCu\n          2BASE-TL/10PASS-TS
    PME ports (modems).  The configuration of\n          aspects specific to 2BASE-TL
    or 10PASS-TS PME types is\n          represented in the efmCuPme2BConfTable and
    the\n          efmCuPme10PConfTable, respectively.\n          Entries in this
    table MUST be maintained in a persistent\n          manner.\"\n        ::= { efmCuPme
    2 }\n      efmCuPmeCapabilityEntry OBJECT-TYPE\n        SYNTAX      EfmCuPmeCapabilityEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An entry in the EFMCu PME Capability table.\n          Each entry
    represents common aspects of an EFMCu PME port\n          indexed by the ifIndex.
    \ Note that an EFMCu PME port can be\n          stacked below a single PCS port,
    also indexed by ifIndex,\n          possibly together with other PME ports if
    PAF is enabled.\"\n        INDEX  { ifIndex }\n        ::= { efmCuPmeCapabilityTable
    1 }\n      EfmCuPmeCapabilityEntry ::=\n        SEQUENCE {\n          efmCuPmeSubTypesSupported
    \    BITS\n        }\n      efmCuPmeSubTypesSupported  OBJECT-TYPE\n        SYNTAX
    \     BITS {\n          ieee2BaseTLO(0),\n          ieee2BaseTLR(1),\n          ieee10PassTSO(2),\n
    \         ieee10PassTSR(3)\n        }\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"PME supported subtypes.  This
    is a bitmap of possible\n          subtypes.  The various bit positions are:\n
    \           ieee2BaseTLO    - PME is capable of operating as 2BaseTL-O\n            ieee2BaseTLR
    \   - PME is capable of operating as 2BaseTL-R\n            ieee10PassTSO   -
    PME is capable of operating as 10PassTS-O\n            ieee10PassTSR   - PME is
    capable of operating as 10PassTS-R\n          The desired mode of operation is
    determined by\n          efmCuPmeAdminSubType, while efmCuPmeOperSubType reflects
    the\n          current operating mode.\n          If a Clause 45 MDIO Interface
    to the PCS is present, then this\n          object combines the 10PASS-TS capable
    and 2BASE-TL capable\n          bits in the 10P/2B PMA/PMD speed ability register
    and the\n          CO supported and CPE supported bits in the 10P/2B PMA/PMD\n
    \         status register.\"\n        REFERENCE\n          \"[802.3ah] 61.1, 45.2.1.4.1,
    45.2.1.4.2, 45.2.1.12.2,\n          45.2.1.12.3\"\n        ::= { efmCuPmeCapabilityEntry
    1 }\n      efmCuPmeStatusTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF EfmCuPmeStatusEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"This table provides common status information of EFMCu\n          2BASE-TL/10PASS-TS
    PME ports.  Status information specific\n          to 10PASS-TS PME is represented
    in efmCuPme10PStatusTable.\n          This table contains live data from the equipment.
    \ As such,\n          it is NOT persistent.\"\n        ::= { efmCuPme 3 }\n      efmCuPmeStatusEntry
    OBJECT-TYPE\n        SYNTAX      EfmCuPmeStatusEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"An entry in the
    EFMCu PME Status table.\n          Each entry represents common aspects of an
    EFMCu PME port\n          indexed by the ifIndex.  Note that an EFMCu PME port
    can be\n          stacked below a single PCS port, also indexed by ifIndex,\n
    \         possibly together with other PME ports if PAF is enabled.\"\n        INDEX
    \ { ifIndex }\n        ::= { efmCuPmeStatusTable 1 }\n      EfmCuPmeStatusEntry
    ::=\n        SEQUENCE {\n          efmCuPmeOperStatus            INTEGER,\n          efmCuPmeFltStatus
    \            BITS,\n          efmCuPmeOperSubType           INTEGER,\n          efmCuPmeOperProfile
    \          EfmProfileIndexOrZero,\n          efmCuPmeSnrMgn                Integer32,\n
    \         efmCuPmePeerSnrMgn            Integer32,\n          efmCuPmeLineAtn
    \              Integer32,\n          efmCuPmePeerLineAtn           Integer32,\n
    \         efmCuPmeEquivalentLength      Unsigned32,\n          efmCuPmeTCCodingErrors
    \       Counter32,\n          efmCuPmeTCCrcErrors           Counter32\n        }\n
    \     efmCuPmeOperStatus  OBJECT-TYPE\n        SYNTAX      INTEGER {\n          up(1),\n
    \         downNotReady(2),\n          downReady(3),\n          init(4)\n        }\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"Current PME link Operational Status.  Possible values are:\n            up(1)
    \          - The link is Up and ready to pass\n                              64/65-octet
    encoded frames or fragments.\n            downNotReady(2) - The link is Down and
    the PME does not\n                              detect Handshake tones from its
    peer.\n                              This value may indicate a possible\n                              problem
    with the peer PME.\n            downReady(3)    - The link is Down and the PME
    detects\n                              Handshake tones from its peer.\n            init(4)
    \        - The link is Initializing, as a result of\n                              ifAdminStatus
    being set to 'up' for a\n                              particular PME or a PCS
    to which the PME\n                              is connected.\n          This
    object is intended to supplement the Down(2) state of\n          ifOperStatus.\n
    \         This object partially maps to the Clause 30 attribute\n          aPMEStatus.\n
    \         If a Clause 45 MDIO Interface to the PME is present, then this\n          object
    partially maps to PMA/PMD link status bits in 10P/2B\n          PMA/PMD status
    register.\"\n        REFERENCE\n          \"[802.3ah] 30.11.2.1.3, 45.2.1.12.4\"\n
    \       ::= { efmCuPmeStatusEntry 1 }\n      efmCuPmeFltStatus  OBJECT-TYPE\n
    \       SYNTAX      BITS {\n          lossOfFraming(0),\n          snrMgnDefect(1),\n
    \         lineAtnDefect(2),\n          deviceFault(3),\n          configInitFailure(4),\n
    \         protocolInitFailure(5)\n        }\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"Current/Last PME link Fault Status.
    \ This is a bitmap of\n          possible conditions.  The various bit positions
    are:\n            lossOfFraming       - Loss of Framing for 10P or\n                                  Loss
    of Sync word for 2B PMD or\n                                  Loss of 64/65-octet
    framing.\n            snrMgnDefect        - SNR margin dropped below the\n                                  threshold.\n
    \           lineAtnDefect       - Line Attenuation exceeds the\n                                  threshold.\n
    \           deviceFault         - Indicates a vendor-dependent\n                                  diagnostic
    or self-test fault\n                                  has been detected.\n            configInitFailure
    \  - Configuration initialization failure,\n                                  due
    to inability of the PME link to\n                                  support the
    configuration profile,\n                                  requested during initialization.\n
    \           protocolInitFailure - Protocol initialization failure, due\n                                  to
    an incompatible protocol used by\n                                  the peer PME
    during init (that could\n                                  happen if a peer PMD
    is a regular\n                                  G.SDHSL/VDSL modem instead of
    a\n                                  2BASE-TL/10PASS-TS PME).\n          This
    object is intended to supplement ifOperStatus in IF-MIB.\n          This object
    holds information about the last fault.\n          efmCuPmeFltStatus is cleared
    by the device restart.\n          In addition, lossOfFraming, configInitFailure,
    and\n          protocolInitFailure are cleared by PME init;\n          deviceFault
    is cleared by successful diagnostics/test;\n          snrMgnDefect and lineAtnDefect
    are cleared by SNR margin\n          and Line attenuation, respectively, returning
    to norm and by\n          PME init.\n          This object partially maps to the
    Clause 30 attribute\n          aPMEStatus.\n          If a Clause 45 MDIO Interface
    to the PME is present, then this\n          object consolidates information from
    various PMA/PMD\n          registers, namely: Fault bit in PMA/PMD status 1 register,\n
    \         10P/2B PMA/PMD link loss register,\n          10P outgoing indicator
    bits status register,\n          10P incoming indicator bits status register,\n
    \         2B state defects register.\"\n        REFERENCE\n          \"[802.3ah]
    30.11.2.1.3, 45.2.1.2.1, 45.2.1.38,\n          45.2.1.39, 45.2.1.54\"\n        ::=
    { efmCuPmeStatusEntry 2 }\n      efmCuPmeOperSubType  OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n          ieee2BaseTLO(1),\n          ieee2BaseTLR(2),\n          ieee10PassTSO(3),\n
    \         ieee10PassTSR(4)\n        }\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"Current operational subtype of
    the PME.\n          Possible values are:\n            ieee2BaseTLO           -
    PME operates as 2BaseTL-O\n            ieee2BaseTLR           - PME operates as
    2BaseTL-R\n            ieee10PassTSO          - PME operates as 10PassTS-O\n            ieee10PassTSR
    \         - PME operates as 10PassTS-R\n          The desired operational subtype
    of the PME can be configured\n          via the efmCuPmeAdminSubType variable.\n
    \         If a Clause 45 MDIO Interface to the PMA/PMD is present, then\n          this
    object combines values of the Port subtype select\n          bits, the PMA/PMD
    type selection bits in the 10P/2B\n          PMA/PMD control register, and the
    PMA/PMD link status bits in\n          the 10P/2B PMA/PMD status register.\"\n
    \       REFERENCE\n          \"[802.3ah] 61.1, 45.2.1.11.4, 45.2.1.11.7, 45.2.1.12.4\"\n
    \       ::= { efmCuPmeStatusEntry 3 }\n      efmCuPmeOperProfile  OBJECT-TYPE\n
    \       SYNTAX      EfmProfileIndexOrZero\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"PME current operating profile.
    \ This object is a pointer to\n          an entry in either the efmCuPme2BProfileTable
    or the\n          efmCuPme10PProfileTable, depending on the current operating\n
    \         SubType of the PME as indicated by efmCuPmeOperSubType.\n          Note
    that a profile entry to which efmCuPmeOperProfile is\n          pointing can be
    created automatically to reflect achieved\n          parameters in adaptive (not
    fixed) initialization,\n          i.e., values of efmCuPmeOperProfile and efmCuAdminProfile
    or\n          efmCuPmeAdminProfile may differ.\n          The value of zero indicates
    that the PME is Down or\n          Initializing.\n          This object partially
    maps to the aOperatingProfile attribute\n          in Clause 30.\"\n        REFERENCE\n
    \         \"[802.3ah] 30.11.2.1.7\"\n        ::= { efmCuPmeStatusEntry 4 }\n      efmCuPmeSnrMgn
    OBJECT-TYPE\n        SYNTAX      Integer32(-127..128|65535)\n        UNITS       \"dB\"\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The current Signal to Noise Ratio (SNR) margin with respect\n          to
    the received signal as perceived by the local PME.\n          The value of 65535
    is returned when the PME is Down or\n          Initializing.\n          This object
    maps to the aPMESNRMgn attribute in Clause 30.\n          If a Clause 45 MDIO
    Interface is present, then this\n          object maps to the 10P/2B RX SNR margin
    register.\"\n        REFERENCE\n          \"[802.3ah] 30.11.2.1.4, 45.2.1.16\"\n
    \       ::= { efmCuPmeStatusEntry 5 }\n      efmCuPmePeerSnrMgn OBJECT-TYPE\n
    \       SYNTAX      Integer32(-127..128|65535)\n        UNITS       \"dB\"\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n          \"The
    current SNR margin in dB with respect to the received\n          signal, as perceived
    by the remote (link partner) PME.\n          The value of 65535 is returned when
    the PME is Down or\n          Initializing.\n          This object is irrelevant
    for the -R PME subtypes.  The value\n          of 65535 SHALL be returned in this
    case.\n          If a Clause 45 MDIO Interface is present, then this\n          object
    maps to the 10P/2B link partner RX SNR margin\n          register.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.17\"\n        ::= { efmCuPmeStatusEntry 6}\n      efmCuPmeLineAtn
    OBJECT-TYPE\n        SYNTAX      Integer32(-127..128|65535)\n        UNITS       \"dB\"\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The current Line Attenuation in dB as perceived by the local\n          PME.\n
    \         The value of 65535 is returned when the PME is Down or\n          Initializing.\n
    \         If a Clause 45 MDIO Interface is present, then this\n          object
    maps to the Line Attenuation register.\"\n        REFERENCE\n          \"[802.3ah]
    45.2.1.18\"\n        ::= { efmCuPmeStatusEntry 7 }\n      efmCuPmePeerLineAtn
    OBJECT-TYPE\n        SYNTAX      Integer32(-127..128|65535)\n        UNITS       \"dB\"\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The current Line Attenuation in dB as perceived by the remote\n          (link
    partner) PME.\n          The value of 65535 is returned when the PME is Down or\n
    \         Initializing.\n          This object is irrelevant for the -R PME subtypes.
    \ The value\n          of 65535 SHALL be returned in this case.\n          If
    a Clause 45 MDIO Interface is present, then this\n          object maps to the
    20P/2B link partner Line Attenuation\n          register.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.19\"\n        ::= { efmCuPmeStatusEntry 8 }\n      efmCuPmeEquivalentLength
    \ OBJECT-TYPE\n        SYNTAX      Unsigned32(0..8192|65535)\n        UNITS       \"m\"\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"An estimate of the equivalent loop's physical length in\n          meters,
    as perceived by the PME after the link is established.\n          An equivalent
    loop is a hypothetical 26AWG (0.4mm) loop with a\n          perfect square root
    attenuation characteristic, without any\n          bridged taps.\n          The
    value of 65535 is returned if the link is Down or\n          Initializing or the
    PME is unable to estimate the equivalent\n          length.\n          For a 10BASE-TL
    PME, if a Clause 45 MDIO Interface to the PME\n          is present, then this
    object maps to the 10P Electrical Length\n          register.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.21\"\n        ::= { efmCuPmeStatusEntry 9 }\n      efmCuPmeTCCodingErrors
    OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of 64/65-octet encapsulation
    errors.  This counter\n          is incremented for each 64/65-octet encapsulation
    error\n          detected by the 64/65-octet receive function.\n          This
    object maps to aTCCodingViolations attribute in\n          Clause 30.\n          If
    a Clause 45 MDIO Interface to the PME TC is present, then\n          this object
    maps to the TC coding violations register\n          (see 45.2.6.12).\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 61.3.3.1, 30.11.2.1.5, 45.2.6.12\"\n        ::= { efmCuPmeStatusEntry
    10 }\n      efmCuPmeTCCrcErrors OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n          \"The
    number of TC-CRC errors.  This counter is incremented for\n          each TC-CRC
    error detected by the 64/65-octet receive function\n          (see 61.3.3.3 and
    Figure 61-19).\n          This object maps to aTCCRCErrors attribute in\n          Clause
    30.\n          If a Clause 45 MDIO Interface to the PME TC is present, then\n
    \         this object maps to the TC CRC error register\n          (see 45.2.6.11).\n
    \         Discontinuities in the value of this counter can occur at\n          re-initialization
    of the management system, and at other times\n          as indicated by the value
    of ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 61.3.3.3, 30.11.2.1.10, 45.2.6.11\"\n        ::= { efmCuPmeStatusEntry
    11 }\n     -- 2BASE-TL specific PME group\n      efmCuPme2B      OBJECT IDENTIFIER
    ::= { efmCuPme 5 }\n      efmCuPme2BProfileTable OBJECT-TYPE\n        SYNTAX      SEQUENCE
    OF EfmCuPme2BProfileEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"This table supports definitions
    of administrative and\n          operating profiles for 2BASE-TL PMEs.\n          The
    first 14 entries in this table SHALL always be defined as\n          follows (see
    802.3ah Annex 63A):\n          -------+-------+-------+-----+------+-------------+-----------\n
    \         Profile MinRate MaxRate Power Region Constellation Comment\n           index
    \ (Kbps)  (Kbps)  (dBm)\n          -------+-------+-------+-----+------+-------------+-----------\n
    \            1     5696    5696    13.5    1   32-TCPAM      default\n             2
    \    3072    3072    13.5    1   32-TCPAM\n             3     2048    2048    13.5
    \   1   16-TCPAM\n             4     1024    1024    13.5    1   16-TCPAM\n             5
    \     704     704    13.5    1   16-TCPAM\n             6      512     512    13.5
    \   1   16-TCPAM\n             7     5696    5696    14.5    2   32-TCPAM\n             8
    \    3072    3072    14.5    2   32-TCPAM\n             9     2048    2048    14.5
    \   2   16-TCPAM\n            10     1024    1024    13.5    2   16-TCPAM\n            11
    \     704     704    13.5    2   16-TCPAM\n            12      512     512    13.5
    \   2   16-TCPAM\n            13      192    5696       0    1   0             best
    effort\n            14      192    5696       0    2   0             best effort\n
    \         -------+-------+-------+-----+------+-------------+-----------\n          These
    default entries SHALL be created during agent\n          initialization and MUST
    NOT be deleted.\n          Entries following the first 14 can be dynamically created
    and\n          deleted to provide custom administrative (configuration)\n          profiles
    and automatic operating profiles.\n          This table MUST be maintained in
    a persistent manner.\"\n        REFERENCE\n          \"[802.3ah] Annex 63A, 30.11.2.1.6\"\n
    \       ::= { efmCuPme2B  2 }\n      efmCuPme2BProfileEntry OBJECT-TYPE\n        SYNTAX
    \     EfmCuPme2BProfileEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"Each entry corresponds to a single
    2BASE-TL PME profile.\n          Each profile contains a set of parameters, used
    either for\n          configuration or representation of a 2BASE-TL PME.\n          In
    case a particular profile is referenced via the\n          efmCuPmeAdminProfile
    object (or efmCuAdminProfile if\n          efmCuPmeAdminProfile is zero), it represents
    the desired\n          parameters for the 2BaseTL-O PME initialization.\n          If
    a profile is referenced via an efmCuPmeOperProfile object,\n          it represents
    the current operating parameters of an\n          operational PME.\n          Profiles
    may be created/deleted using the row creation/\n          deletion mechanism via
    efmCuPme2BProfileRowStatus.  If an\n          active entry is referenced, the
    entry MUST remain 'active'\n          until all references are removed.\n          Default
    entries MUST NOT be removed.\"\n        INDEX { efmCuPme2BProfileIndex }\n        ::=
    { efmCuPme2BProfileTable 1 }\n      EfmCuPme2BProfileEntry ::=\n        SEQUENCE
    {\n          efmCuPme2BProfileIndex           EfmProfileIndex,\n          efmCuPme2BProfileDescr
    \          SnmpAdminString,\n          efmCuPme2BRegion                 INTEGER,\n
    \         efmCuPme2BsMode                  EfmProfileIndexOrZero,\n          efmCuPme2BMinDataRate
    \           Unsigned32,\n          efmCuPme2BMaxDataRate            Unsigned32,\n
    \         efmCuPme2BPower                  Unsigned32,\n          efmCuPme2BConstellation
    \         INTEGER,\n          efmCuPme2BProfileRowStatus       RowStatus\n        }\n
    \     efmCuPme2BProfileIndex OBJECT-TYPE\n        SYNTAX      EfmProfileIndex\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"2BASE-TL PME profile index.\n          This object is the unique index
    associated with this profile.\n          Entries in this table are referenced
    via efmCuAdminProfile or\n          efmCuPmeAdminProfile objects.\"\n        ::=
    { efmCuPme2BProfileEntry 1 }\n      efmCuPme2BProfileDescr OBJECT-TYPE\n        SYNTAX
    \     SnmpAdminString\n        MAX-ACCESS  read-create\n        STATUS      current\n
    \       DESCRIPTION\n          \"A textual string containing information about
    a 2BASE-TL PME\n          profile.  The string may include information about the
    data\n          rate and spectral limitations of this particular profile.\"\n
    \       ::= { efmCuPme2BProfileEntry 2 }\n      efmCuPme2BRegion  OBJECT-TYPE\n
    \       SYNTAX      INTEGER {\n          region1(1),\n          region2(2)\n        }\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"Regional settings for a 2BASE-TL PME, as specified in the\n          relevant
    Regional Annex of [G.991.2].\n          Regional settings specify the Power Spectral
    Density (PSD)\n          mask and the Power Back-Off (PBO) values, and place\n
    \         limitations on the max allowed data rate, power, and\n          constellation.\n
    \         Possible values for this object are:\n            region1      - Annexes
    A and F (e.g., North America)\n            region2      - Annexes B and G (e.g.,
    Europe)\n          Annex A/B specify regional settings for data rates 192-2304\n
    \         Kbps using 16-TCPAM encoding.\n          Annex F/G specify regional
    settings for rates 2320-3840 Kbps\n          using 16-TCPAM encoding and 768-5696
    Kbps using 32-TCPAM\n          encoding.\n          If a Clause 45 MDIO Interface
    to the PME is present, then this\n          object partially maps to the Region
    bits in the 2B general\n          parameter register.\"\n        REFERENCE\n          \"[802.3ah]
    45.2.1.42; [G.991.2] Annexes A, B, F and G\"\n        ::= { efmCuPme2BProfileEntry
    3 }\n      efmCuPme2BsMode  OBJECT-TYPE\n        SYNTAX      EfmProfileIndexOrZero\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"Desired custom Spectral Mode for a 2BASE-TL PME.  This object\n          is
    a pointer to an entry in efmCuPme2BsModeTable and a block\n          of entries
    in efmCuPme2BRateReachTable, which together define\n          (country-specific)
    reach-dependent rate limitations in\n          addition to those defined by efmCuPme2BRegion.\n
    \         The value of this object is the index of the referenced\n          spectral
    mode.\n          The value of zero (default) indicates that no specific\n          spectral
    mode is applicable.\n          Attempts to set this object to a value that is
    not the value\n          of the index for an active entry in the corresponding
    spectral\n          mode table MUST be rejected.\"\n        REFERENCE\n          \"efmCuPme2BsModeTable,
    efmCuPme2BRateReachTable\"\n        DEFVAL { 0 }\n        ::= { efmCuPme2BProfileEntry
    4 }\n      efmCuPme2BMinDataRate  OBJECT-TYPE\n        SYNTAX  Unsigned32(192..5696)\n
    \       UNITS       \"Kbps\"\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"Minimum Data Rate for the 2BASE-TL
    PME.\n          This object can take values of (n x 64)Kbps,\n          where
    n=3..60 for 16-TCPAM and n=12..89 for 32-TCPAM encoding.\n          The data rate
    of the 2BASE-TL PME is considered 'fixed' when\n          the value of this object
    equals that of efmCuPme2BMaxDataRate.\n          If efmCuPme2BMinDataRate is less
    than efmCuPme2BMaxDataRate in\n          the administrative profile, the data
    rate is considered\n          'adaptive', and SHALL be set to the maximum attainable
    rate\n          not exceeding efmCuPme2BMaxDataRate, under the spectral\n          limitations
    placed by the efmCuPme2BRegion and\n          efmCuPme2BsMode.\n          Note
    that the current operational data rate of the PME is\n          represented by
    the ifSpeed object of IF-MIB.\n          If a Clause 45 MDIO Interface to the
    PME is present, then this\n          object maps to the Min Data Rate1 bits in
    the 2B PMD\n          parameters register.\n          This object MUST be maintained
    in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah] 45.2.1.43\"\n
    \       ::= { efmCuPme2BProfileEntry 5 }\n      efmCuPme2BMaxDataRate  OBJECT-TYPE\n
    \       SYNTAX  Unsigned32(192..5696)\n        UNITS       \"Kbps\"\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n          \"Maximum
    Data Rate for the 2BASE-TL PME.\n          This object can take values of (n x
    64)Kbps,\n          where n=3..60 for 16-TCPAM and n=12..89 for 32-TCPAM encoding.\n
    \         The data rate of the 2BASE-TL PME is considered 'fixed' when\n          the
    value of this object equals that of efmCuPme2BMinDataRate.\n          If efmCuPme2BMinDataRate
    is less than efmCuPme2BMaxDataRate in\n          the administrative profile, the
    data rate is considered\n          'adaptive', and SHALL be set to the maximum
    attainable rate\n          not exceeding efmCuPme2BMaxDataRate, under the spectral\n
    \         limitations placed by the efmCuPme2BRegion and\n          efmCuPme2BsMode.\n
    \         Note that the current operational data rate of the PME is\n          represented
    by the ifSpeed object of IF-MIB.\n          If a Clause 45 MDIO Interface to the
    PME is present, then this\n          object maps to the Max Data Rate1 bits in
    the 2B PMD\n          parameters register.\n          This object MUST be maintained
    in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah] 45.2.1.43\"\n
    \       ::= { efmCuPme2BProfileEntry 6 }\n      efmCuPme2BPower  OBJECT-TYPE\n
    \       SYNTAX      Unsigned32(0|10..42)\n        UNITS       \"0.5 dBm\"\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n          \"Signal
    Transmit Power.  Multiple of 0.5 dBm.\n          The value of 0 in the administrative
    profile means that the\n          signal transmit power is not fixed and SHALL
    be set to\n          maximize the attainable rate, under the spectral limitations\n
    \         placed by the efmCuPme2BRegion and efmCuPme2BsMode.\n          If a
    Clause 45 MDIO Interface to the PME is present, then this\n          object maps
    to the Power1 bits in the 2B PMD parameters\n          register.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.43\"\n        ::= { efmCuPme2BProfileEntry 7 }\n
    \     efmCuPme2BConstellation  OBJECT-TYPE\n        SYNTAX      INTEGER {\n          adaptive(0),\n
    \         tcpam16(1),\n          tcpam32(2)\n        }\n        MAX-ACCESS  read-create\n
    \       STATUS      current\n        DESCRIPTION\n          \"TCPAM Constellation
    of the 2BASE-TL PME.\n          The possible values are:\n            adaptive(0)
    \   - either 16- or 32-TCPAM\n            tcpam16(1)     - 16-TCPAM\n            tcpam32(2)
    \    - 32-TCPAM\n          The value of adaptive(0) in the administrative profile
    means\n          that the constellation is not fixed and SHALL be set to\n          maximize
    the attainable rate, under the spectral limitations\n          placed by the efmCuPme2BRegion
    and efmCuPme2BsMode.\n          If a Clause 45 MDIO Interface to the PME is present,
    then this\n          object maps to the Constellation1 bits in the 2B general\n
    \         parameter register.\"\n        REFERENCE\n           \"[802.3ah] 45.2.1.43\"\n
    \       ::= { efmCuPme2BProfileEntry 8 }\n      efmCuPme2BProfileRowStatus OBJECT-TYPE\n
    \       SYNTAX      RowStatus\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"This object controls the creation,
    modification, or deletion\n          of the associated entry in the efmCuPme2BProfileTable
    per the\n          semantics of RowStatus.\n          If an 'active' entry is
    referenced via efmCuAdminProfile or\n          efmCuPmeAdminProfile instance(s),
    the entry MUST remain\n          'active'.\n          An 'active' entry SHALL
    NOT be modified.  In order to modify\n          an existing entry, it MUST be
    taken out of service (by setting\n          this object to 'notInService'), modified,
    and set 'active'\n          again.\"\n        ::= { efmCuPme2BProfileEntry 9 }\n
    \     efmCuPme2BsModeTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF EfmCuPme2BsModeEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"This table, together with efmCu2BReachRateTable, supports\n          definition
    of administrative custom spectral modes for\n          2BASE-TL PMEs, describing
    spectral limitations in addition to\n          those specified by efmCuPme2BRegion.\n
    \         In some countries, spectral regulations (e.g., UK ANFP) limit\n          the
    length of the loops for certain data rates.  This table\n          allows these
    country-specific limitations to be specified.\n          Entries in this table
    referenced by the efmCuPme2BsMode\n          MUST NOT be deleted until all the
    active references are\n          removed.\n          This table MUST be maintained
    in a persistent manner.\"\n        REFERENCE\n          \"efmCu2BReachRateTable\"\n
    \       ::= { efmCuPme2B  3 }\n      efmCuPme2BsModeEntry OBJECT-TYPE\n        SYNTAX
    \     EfmCuPme2BsModeEntry\n        MAX-ACCESS  not-accessible\n        STATUS
    \     current\n        DESCRIPTION\n          \"Each entry specifies a spectral
    mode description and its\n          index, which is used to reference corresponding
    entries in the\n          efmCu2BReachRateTable.\n          Entries may be created/deleted
    using the row creation/\n          deletion mechanism via efmCuPme2BsModeRowStatus.\"\n
    \       INDEX { efmCuPme2BsModeIndex }\n        ::= { efmCuPme2BsModeTable 1 }\n
    \     EfmCuPme2BsModeEntry ::=\n        SEQUENCE {\n          efmCuPme2BsModeIndex
    \            EfmProfileIndex,\n          efmCuPme2BsModeDescr             SnmpAdminString,\n
    \         efmCuPme2BsModeRowStatus         RowStatus\n        }\n      efmCuPme2BsModeIndex
    OBJECT-TYPE\n        SYNTAX      EfmProfileIndex\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"2BASE-TL PME Spectral
    Mode index.\n          This object is the unique index associated with this spectral\n
    \         mode.\n          Entries in this table are referenced via the efmCuPme2BsMode\n
    \         object.\"\n        ::= { efmCuPme2BsModeEntry 1 }\n      efmCuPme2BsModeDescr
    OBJECT-TYPE\n        SYNTAX      SnmpAdminString\n        MAX-ACCESS  read-create\n
    \       STATUS      current\n        DESCRIPTION\n          \"A textual string
    containing information about a 2BASE-TL PME\n          spectral mode.  The string
    may include information about\n          corresponding (country-specific) spectral
    regulations\n          and rate/reach limitations of this particular spectral
    mode.\"\n        ::= { efmCuPme2BsModeEntry 2 }\n      efmCuPme2BsModeRowStatus
    OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS  read-create\n
    \       STATUS      current\n        DESCRIPTION\n          \"This object controls
    creation, modification, or deletion of\n          the associated entry in efmCuPme2BsModeTable
    per the semantics\n          of RowStatus.\n          If an 'active' entry is
    referenced via efmCuPme2BsMode\n          instance(s), the entry MUST remain 'active'.\n
    \         An 'active' entry SHALL NOT be modified.  In order to modify\n          an
    existing entry, it MUST be taken out of service (by setting\n          this object
    to 'notInService'), modified, and set 'active'\n          again.\"\n        ::=
    { efmCuPme2BsModeEntry 3 }\n      efmCuPme2BReachRateTable OBJECT-TYPE\n        SYNTAX
    \     SEQUENCE OF EfmCuPme2BReachRateEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"This table supports
    the definition of administrative custom\n          spectral modes for 2BASE-TL
    PMEs, providing spectral\n          limitations in addition to those specified
    by\n          efmCuPme2BRegion.\n          The spectral regulations in some countries
    (e.g., UK ANFP)\n          limit the length of the loops for certain data rates.\n
    \         This table allows these country-specific limitations to be\n          specified.\n
    \         Below is an example of this table for [ANFP]:\n          ----------+-------+-------\n
    \         Equivalent MaxRate MaxRate\n            Length    PAM16   PAM32\n              (m)
    \    (Kbps)  (Kbps)\n          ----------+-------+-------\n              975      2304
    \   5696\n             1125      2304    5504\n             1275      2304    5120\n
    \            1350      2304    4864\n             1425      2304    4544\n             1500
    \     2304    4288\n             1575      2304    3968\n             1650      2304
    \   3776\n             1725      2304    3520\n             1800      2304    3264\n
    \            1875      2304    3072\n             1950      2048    2688\n             2100
    \     1792    2368\n             2250      1536       0\n             2400      1408
    \      0\n             2550      1280       0\n             2775      1152       0\n
    \            2925      1152       0\n             3150      1088       0\n             3375
    \     1024       0\n          ----------+-------+-------\n          Entries in
    this table referenced by an efmCuPme2BsMode\n          instance MUST NOT be deleted.\n
    \         This table MUST be maintained in a persistent manner.\"\n        REFERENCE\n
    \         \"[ANFP]\"\n        ::= { efmCuPme2B  4 }\n      efmCuPme2BReachRateEntry
    OBJECT-TYPE\n        SYNTAX      EfmCuPme2BReachRateEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"Each
    entry specifies maximum 2BASE-TL PME data rates\n          allowed for a certain
    equivalent loop length, when using\n          16-TCPAM or 32-TCPAM encoding.\n
    \         When a 2BASE-TL PME is initialized, its data rate MUST NOT\n          exceed
    one of the following limitations:\n          - the value of efmCuPme2BMaxDataRate\n
    \         - maximum data rate allowed by efmCuPme2BRegion and\n            efmCuPme2BPower\n
    \         - maximum data rate for a given encoding specified in the\n            efmCuPme2BsModeEntry,
    corresponding to the equivalent loop\n            length, estimated by the PME\n
    \         It is RECOMMENDED that the efmCuPme2BEquivalentLength values\n          are
    assigned in increasing order, starting from the minimum\n          value.\n          Entries
    may be created/deleted using the row creation/\n          deletion mechanism via
    efmCuPme2ReachRateRowStatus.\"\n        INDEX { efmCuPme2BsModeIndex, efmCuPme2BReachRateIndex
    }\n        ::= { efmCuPme2BReachRateTable 1 }\n      EfmCuPme2BReachRateEntry
    ::=\n        SEQUENCE {\n          efmCuPme2BReachRateIndex         EfmProfileIndex,\n
    \         efmCuPme2BEquivalentLength       Unsigned32,\n          efmCuPme2BMaxDataRatePam16
    \      Unsigned32,\n          efmCuPme2BMaxDataRatePam32       Unsigned32,\n          efmCuPme2BReachRateRowStatus
    \    RowStatus\n        }\n      efmCuPme2BReachRateIndex OBJECT-TYPE\n        SYNTAX
    \     EfmProfileIndex\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"2BASE-TL custom spectral mode Reach-Rate table
    index.\n          This object is the unique index associated with each entry.\"\n
    \       ::= { efmCuPme2BReachRateEntry 1 }\n      efmCuPme2BEquivalentLength  OBJECT-TYPE\n
    \       SYNTAX      Unsigned32(0..8192)\n        UNITS       \"m\"\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n          \"Maximum
    allowed equivalent loop's physical length in meters\n          for the specified
    data rates.\n          An equivalent loop is a hypothetical 26AWG (0.4mm) loop
    with a\n          perfect square root attenuation characteristic, without any\n
    \         bridged taps.\"\n        ::= { efmCuPme2BReachRateEntry 2 }\n      efmCuPme2BMaxDataRatePam16
    \ OBJECT-TYPE\n        SYNTAX      Unsigned32(0|192..5696)\n        UNITS       \"Kbps\"\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"Maximum data rate for a 2BASE-TL PME at the specified\n          equivalent
    loop's length using TC-PAM16 encoding.\n          The value of zero means that
    TC-PAM16 encoding should not be\n          used at this distance.\"\n        ::=
    { efmCuPme2BReachRateEntry 3 }\n      efmCuPme2BMaxDataRatePam32  OBJECT-TYPE\n
    \       SYNTAX      Unsigned32(0|192..5696)\n        UNITS       \"Kbps\"\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n          \"Maximum
    data rate for a 2BASE-TL PME at the specified\n          equivalent loop's length
    using TC-PAM32 encoding.\n          The value of zero means that TC-PAM32 encoding
    should not be\n          used at this distance.\"\n        ::= { efmCuPme2BReachRateEntry
    4 }\n      efmCuPme2BReachRateRowStatus OBJECT-TYPE\n        SYNTAX      RowStatus\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"This object controls the creation, modification, or deletion\n          of
    the associated entry in the efmCuPme2BReachRateTable per\n          the semantics
    of RowStatus.\n          If an 'active' entry is referenced via efmCuPme2BsMode\n
    \         instance(s), the entry MUST remain 'active'.\n          An 'active'
    entry SHALL NOT be modified.  In order to modify\n          an existing entry,
    it MUST be taken out of service (by setting\n          this object to 'notInService'),
    modified, and set 'active'\n          again.\"\n        ::= { efmCuPme2BReachRateEntry
    5 }\n     -- 10PASS-TS specific PME group\n      efmCuPme10P      OBJECT IDENTIFIER
    ::= { efmCuPme 6 }\n      efmCuPme10PProfileTable OBJECT-TYPE\n        SYNTAX
    \     SEQUENCE OF EfmCuPme10PProfileEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"This table supports
    definitions of configuration profiles for\n          10PASS-TS PMEs.\n          The
    first 22 entries in this table SHALL always be defined as\n          follows (see
    802.3ah Annex 62B.3, table 62B-1):\n          -------+--------+----+---------+-----+-----+---------------\n
    \         Profile Bandplan UPBO BandNotch DRate URate Comment\n           Index
    \ PSDMask#  p#    p#        p#    p#\n          -------+--------+----+---------+-----+-----+---------------\n
    \            1      1      3    2,6,10,11    20    20 default profile\n             2
    \    13      5    0            20    20\n             3      1      1    0            20
    \   20\n             4     16      0    0           100   100\n             5
    \    16      0    0            70    50\n             6      6      0    0            50
    \   10\n             7     17      0    0            30    30\n             8
    \     8      0    0            30     5\n             9      4      0    0            25
    \   25\n            10      4      0    0            15    15\n            11
    \    23      0    0            10    10\n            12     23      0    0             5
    \    5\n            13     16      0    2,5,9,11    100   100\n            14
    \    16      0    2,5,9,11     70    50\n            15      6      0    2,6,10,11
    \   50    10\n            16     17      0    2,5,9,11     30    30\n            17
    \     8      0    2,6,10,11    30     5\n            18      4      0    2,6,10,11
    \   25    25\n            19      4      0    2,6,10,11    15    15\n            20
    \    23      0    2,5,9,11     10    10\n            21     23      0    2,5,9,11
    \     5     5\n            22     30      0    0           200    50\n          -------+--------+----+---------+-----+-----+---------------\n
    \         These default entries SHALL be created during agent\n          initialization
    and MUST NOT be deleted.\n          Entries following the first 22 can be dynamically
    created and\n          deleted to provide custom administrative (configuration)\n
    \         profiles and automatic operating profiles.\n          This table MUST
    be maintained in a persistent manner.\"\n        REFERENCE\n          \"[802.3ah]
    Annex 62B.3, 30.11.2.1.6\"\n        ::= { efmCuPme10P  1 }\n      efmCuPme10PProfileEntry
    OBJECT-TYPE\n        SYNTAX      EfmCuPme10PProfileEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"Each entry corresponds
    to a single 10PASS-TS PME profile.\n          Each profile contains a set of parameters,
    used either for\n          configuration or representation of a 10PASS-TS PME.\n
    \         In case a particular profile is referenced via the\n          efmCuPmeAdminProfile
    object (or efmCuAdminProfile if\n          efmCuPmeAdminProfile is zero), it represents
    the desired\n          parameters for the 10PassTS-O PME initialization.\n          If
    a profile is referenced via an efmCuPmeOperProfile object,\n          it represents
    the current operating parameters of the PME.\n          Profiles may be created/deleted
    using the row creation/\n          deletion mechanism via efmCuPme10PProfileRowStatus.
    \ If an\n          'active' entry is referenced, the entry MUST remain 'active'\n
    \         until all references are removed.\n          Default entries MUST NOT
    be removed.\"\n        INDEX { efmCuPme10PProfileIndex }\n        ::= { efmCuPme10PProfileTable
    1 }\n      EfmCuPme10PProfileEntry ::=\n        SEQUENCE {\n          efmCuPme10PProfileIndex
    \          EfmProfileIndex,\n          efmCuPme10PProfileDescr           SnmpAdminString,\n
    \         efmCuPme10PBandplanPSDMskProfile  INTEGER,\n          efmCuPme10PUPBOReferenceProfile
    \  INTEGER,\n          efmCuPme10PBandNotchProfiles      BITS,\n          efmCuPme10PPayloadDRateProfile
    \   INTEGER,\n          efmCuPme10PPayloadURateProfile    INTEGER,\n          efmCuPme10PProfileRowStatus
    \      RowStatus\n        }\n      efmCuPme10PProfileIndex OBJECT-TYPE\n        SYNTAX
    \     EfmProfileIndex\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"10PASS-TS PME profile index.\n          This
    object is the unique index associated with this profile.\n          Entries in
    this table are referenced via efmCuAdminProfile or\n          efmCuPmeAdminProfile.\"\n
    \       ::= { efmCuPme10PProfileEntry 1 }\n      efmCuPme10PProfileDescr OBJECT-TYPE\n
    \       SYNTAX      SnmpAdminString\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"A textual string containing information
    about a 10PASS-TS PME\n          profile.  The string may include information
    about data rate\n          and spectral limitations of this particular profile.\"\n
    \       ::= { efmCuPme10PProfileEntry 2 }\n      efmCuPme10PBandplanPSDMskProfile
    \ OBJECT-TYPE\n        SYNTAX  INTEGER {\n          profile1(1),\n          profile2(2),\n
    \         profile3(3),\n          profile4(4),\n          profile5(5),\n          profile6(6),\n
    \         profile7(7),\n          profile8(8),\n          profile9(9),\n          profile10(10),\n
    \         profile11(11),\n          profile12(12),\n          profile13(13),\n
    \         profile14(14),\n          profile15(15),\n          profile16(16),\n
    \         profile17(17),\n          profile18(18),\n          profile19(19),\n
    \         profile20(20),\n          profile21(21),\n          profile22(22),\n
    \         profile23(23),\n          profile24(24),\n          profile25(25),\n
    \         profile26(26),\n          profile27(27),\n          profile28(28),\n
    \         profile29(29),\n          profile30(30)\n        }\n        MAX-ACCESS
    \ read-create\n        STATUS      current\n        DESCRIPTION\n          \"The
    10PASS-TS PME Bandplan and PSD Mask Profile, as specified\n          in 802.3ah
    Annex 62A, table 62A-1.  Possible values are:\n          --------------+------------------------+------------+--------\n
    \         Profile Name    PSD Mask                  Bands      G.993.1\n                                                  0/1/2/3/4/5
    \ Bandplan\n          --------------+------------------------+------------+--------\n
    \         profile1(1)    T1.424 FTTCab.M1         x/D/U/D/U    A\n          profile2(2)
    \   T1.424 FTTEx.M1          x/D/U/D/U    A\n          profile3(3)    T1.424 FTTCab.M2
    \        x/D/U/D/U    A\n          profile4(4)    T1.424 FTTEx.M2          x/D/U/D/U
    \   A\n          profile5(5)    T1.424 FTTCab.M1         D/D/U/D/U    A\n          profile6(6)
    \   T1.424 FTTEx.M1          D/D/U/D/U    A\n          profile7(7)    T1.424 FTTCab.M2
    \        D/D/U/D/U    A\n          profile8(8)    T1.424 FTTEx.M2          D/D/U/D/U
    \   A\n          profile9(9)    T1.424 FTTCab.M1         U/D/U/D/x    A\n          profile10(10)
    \ T1.424 FTTEx.M1          U/D/U/D/x    A\n          profile11(11)  T1.424 FTTCab.M2
    \        U/D/U/D/x    A\n          profile12(12)  T1.424 FTTEx.M2          U/D/U/D/x
    \   A\n          profile13(13)  TS 101 270-1 Pcab.M1.A   x/D/U/D/U    B\n          profile14(14)
    \ TS 101 270-1 Pcab.M1.B   x/D/U/D/U    B\n          profile15(15)  TS 101 270-1
    Pex.P1.M1   x/D/U/D/U    B\n          profile16(16)  TS 101 270-1 Pex.P2.M1   x/D/U/D/U
    \   B\n          profile17(17)  TS 101 270-1 Pcab.M2     x/D/U/D/U    B\n          profile18(18)
    \ TS 101 270-1 Pex.P1.M2   x/D/U/D/U    B\n          profile19(19)  TS 101 270-1
    Pex.P2.M2   x/D/U/D/U    B\n          profile20(20)  TS 101 270-1 Pcab.M1.A   U/D/U/D/x
    \   B\n          profile21(21)  TS 101 270-1 Pcab.M1.B   U/D/U/D/x    B\n          profile22(22)
    \ TS 101 270-1 Pex.P1.M1   U/D/U/D/x    B\n          profile23(23)  TS 101 270-1
    Pex.P2.M1   U/D/U/D/x    B\n          profile24(24)  TS 101 270-1 Pcab.M2     U/D/U/D/x
    \   B\n          profile25(25)  TS 101 270-1 Pex.P1.M2   U/D/U/D/x    B\n          profile26(26)
    \ TS 101 270-1 Pex.P2.M2   U/D/U/D/x    B\n          profile27(27)  G.993.1 F.1.2.1
    \         x/D/U/D/U    Annex F\n          profile28(28)  G.993.1 F.1.2.2          x/D/U/D/U
    \   Annex F\n          profile29(29)  G.993.1 F.1.2.3          x/D/U/D/U    Annex
    F\n          profile30(30)  T1.424 FTTCab.M1 (ext.)  x/D/U/D/U/D  Annex A\n          --------------+------------------------+------------+--------\n
    \         \"\n        REFERENCE\n          \"[802.3ah] Annex 62A\"\n        ::=
    { efmCuPme10PProfileEntry 3 }\n      efmCuPme10PUPBOReferenceProfile  OBJECT-TYPE\n
    \       SYNTAX  INTEGER {\n          profile0(0),\n          profile1(1),\n          profile2(2),\n
    \         profile3(3),\n          profile4(4),\n          profile5(5),\n          profile6(6),\n
    \         profile7(7),\n          profile8(8),\n          profile9(9)\n        }\n
    \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"The 10PASS-TS PME Upstream Power Back-Off (UPBO) Reference\n          PSD
    Profile, as specified in 802.3 Annex 62A, table 62A-3.\n          Possible values
    are:\n          ------------+-----------------------------\n          Profile
    Name   Reference PSD\n          ------------+-----------------------------\n          profile0(0)
    \ no profile\n          profile1(1)  T1.424        Noise A    M1\n          profile2(2)
    \ T1.424        Noise A    M2\n          profile3(3)  T1.424        Noise F    M1\n
    \         profile4(4)  T1.424        Noise F    M2\n          profile5(5)  TS
    101 270-1  Noise A&B\n          profile6(6)  TS 101 270-1  Noise C\n          profile7(7)
    \ TS 101 270-1  Noise D\n          profile8(8)  TS 101 270-1  Noise E\n          profile9(9)
    \ TS 101 270-1  Noise F\n          ------------+-----------------------------\n
    \         \"\n        REFERENCE\n          \"[802.3ah] Annex 62A.3.5\"\n        ::=
    { efmCuPme10PProfileEntry 4 }\n      efmCuPme10PBandNotchProfiles  OBJECT-TYPE\n
    \       SYNTAX  BITS {\n          profile0(0),\n          profile1(1),\n          profile2(2),\n
    \         profile3(3),\n          profile4(4),\n          profile5(5),\n          profile6(6),\n
    \         profile7(7),\n          profile8(8),\n          profile9(9),\n          profile10(10),\n
    \         profile11(11)\n        }\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"The 10PASS-TS PME Egress Control
    Band Notch Profile bitmap,\n          as specified in 802.3 Annex 62A, table 62A-4.
    \ Possible values\n          are:\n          --------------+--------+------+------------+------+------\n
    \         Profile Name   G.991.3  T1.424 TS 101 270-1 StartF EndF\n                         table
    \   table  table        (MHz)  (MHz)\n          --------------+--------+------+------------+------+------\n
    \         profile0(0)    no profile\n          profile1(1)    F-5 #01  -      -
    \           1.810  1.825\n          profile2(2)    6-2      15-1   17           1.810
    \ 2.000\n          profile3(3)    F-5 #02  -      -            1.907  1.912\n
    \         profile4(4)    F-5 #03  -      -            3.500  3.575\n          profile5(5)
    \   6-2      -      17           3.500  3.800\n          profile6(6)    -        15-1
    \  -            3.500  4.000\n          profile7(7)    F-5 #04  -      -            3.747
    \ 3.754\n          profile8(8)    F-5 #05  -      -            3.791  3.805\n
    \         profile9(9)    6-2      -      17           7.000  7.100\n          profile10(10)
    \ F-5 #06  15-1   -            7.000  7.300\n          profile11(11)  6-2      15-1
    \  1            10.100 10.150\n          --------------+--------+------+------------+------+------\n
    \         Any combination of profiles can be specified by ORing\n          individual
    profiles, for example, a value of 0x2230 selects\n          profiles 2, 6, 10,
    and 11.\"\n        REFERENCE\n          \"[802.3ah] Annex 62A.3.5\"\n        ::=
    { efmCuPme10PProfileEntry 5 }\n      efmCuPme10PPayloadDRateProfile  OBJECT-TYPE\n
    \       SYNTAX      INTEGER {\n          profile5(5),\n          profile10(10),\n
    \         profile15(15),\n          profile20(20),\n          profile25(25),\n
    \         profile30(30),\n          profile50(50),\n          profile70(70),\n
    \         profile100(100),\n          profile140(140),\n          profile200(200)\n
    \       }\n        MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
    \         \"The 10PASS-TS PME Downstream Payload Rate Profile, as\n          specified
    in 802.3 Annex 62A.  Possible values are:\n            profile5(5)      - 2.5
    Mbps\n            profile10(10)    - 5 Mbps\n            profile15(15)    - 7.5
    Mbps\n            profile20(20)    - 10 Mbps\n            profile25(25)    - 12.5
    Mbps\n            profile30(30)    - 15 Mbps\n            profile50(50)    - 25
    Mbps\n            profile70(70)    - 35 Mbps\n            profile100(100)  - 50
    Mbps\n            profile140(140)  - 70 Mbps\n            profile200(200)  - 100
    Mbps\n          Each value represents a target for the PME's Downstream\n          Payload
    Bitrate as seen at the MII.  If the payload rate of\n          the selected profile
    cannot be achieved based on the loop\n          environment, bandplan, and PSD
    mask, the PME initialization\n          SHALL fail.\"\n        REFERENCE\n          \"[802.3ah]
    Annex 62A.3.6\"\n        ::= { efmCuPme10PProfileEntry 6 }\n      efmCuPme10PPayloadURateProfile
    \ OBJECT-TYPE\n        SYNTAX      INTEGER {\n          profile5(5),\n          profile10(10),\n
    \         profile15(15),\n          profile20(20),\n          profile25(25),\n
    \         profile30(30),\n          profile50(50),\n          profile70(70),\n
    \         profile100(100)\n        }\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"The 10PASS-TS PME Upstream Payload
    Rate Profile, as specified\n           in 802.3 Annex 62A.  Possible values are:\n
    \           profile5(5)       - 2.5 Mbps\n            profile10(10)     - 5 Mbps\n
    \           profile15(15)     - 7.5 Mbps\n            profile20(20)     - 10 Mbps\n
    \           profile25(25)     - 12.5 Mbps\n            profile30(30)     - 15
    Mbps\n            profile50(50)     - 25 Mbps\n            profile70(70)     -
    35 Mbps\n            profile100(100)   - 50 Mbps\n          Each value represents
    a target for the PME's Upstream Payload\n          Bitrate as seen at the MII.
    \ If the payload rate of the\n          selected profile cannot be achieved based
    on the loop\n          environment, bandplan, and PSD mask, the PME initialization\n
    \         SHALL fail.\"\n        REFERENCE\n          \"[802.3ah] Annex 62A.3.6\"\n
    \       ::= { efmCuPme10PProfileEntry 7 }\n      efmCuPme10PProfileRowStatus OBJECT-TYPE\n
    \       SYNTAX      RowStatus\n        MAX-ACCESS  read-create\n        STATUS
    \     current\n        DESCRIPTION\n          \"This object controls creation,
    modification, or deletion of\n          the associated entry in efmCuPme10PProfileTable
    per the\n          semantics of RowStatus.\n          If an active entry is referenced
    via efmCuAdminProfile or\n          efmCuPmeAdminProfile, the entry MUST remain
    'active' until\n          all references are removed.\n          An 'active' entry
    SHALL NOT be modified.  In order to modify\n          an existing entry, it MUST
    be taken out of service (by setting\n          this object to 'notInService'),
    modified, and set 'active'\n          again.\"\n        ::= { efmCuPme10PProfileEntry
    8 }\n      efmCuPme10PStatusTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF
    EfmCuPme10PStatusEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"This table provides status information of EFMCu
    10PASS-TS\n          PMEs (modems).\n          This table contains live data from
    the equipment.  As such,\n          it is NOT persistent.\"\n        ::= { efmCuPme10P
    2 }\n      efmCuPme10PStatusEntry OBJECT-TYPE\n        SYNTAX      EfmCuPme10PStatusEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An entry in the EFMCu 10PASS-TS PME Status table.\"\n        INDEX
    \ { ifIndex }\n        ::= { efmCuPme10PStatusTable 1 }\n      EfmCuPme10PStatusEntry
    ::=\n        SEQUENCE {\n          efmCuPme10PFECCorrectedBlocks     Counter32,\n
    \         efmCuPme10PFECUncorrectedBlocks   Counter32\n        }\n      efmCuPme10PFECCorrectedBlocks
    \ OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The number of received
    and corrected Forward Error Correction\n          (FEC) codewords in this 10PASS-TS
    PME.\n          This object maps to the aPMEFECCorrectedBlocks attribute in\n
    \         Clause 30.\n          If a Clause 45 MDIO Interface to the PMA/PMD is
    present,\n          then this object maps to the 10P FEC correctable errors\n
    \         register.\n          Discontinuities in the value of this counter can
    occur at\n          re-initialization of the management system, and at other times\n
    \         as indicated by the value of ifCounterDiscontinuityTime,\n          defined
    in IF-MIB.\"\n        REFERENCE\n          \"[802.3ah] 45.2.1.22, 30.11.2.1.8\"\n
    \       ::= { efmCuPme10PStatusEntry 1 }\n      efmCuPme10PFECUncorrectedBlocks
    \ OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The number of received
    uncorrectable FEC codewords in this\n          10PASS-TS PME.\n          This
    object maps to the aPMEFECUncorrectableBlocks attribute\n          in Clause 30.\n
    \         If a Clause 45 MDIO Interface to the PMA/PMD is present,\n          then
    this object maps to the 10P FEC uncorrectable errors\n          register.\n          Discontinuities
    in the value of this counter can occur at\n          re-initialization of the
    management system, and at other times\n          as indicated by the value of
    ifCounterDiscontinuityTime,\n          defined in IF-MIB.\"\n        REFERENCE\n
    \         \"[802.3ah] 45.2.1.23, 30.11.2.1.9\"\n        ::= { efmCuPme10PStatusEntry
    2 }\n     --\n     -- Conformance Statements\n     --\n      efmCuGroups      OBJECT
    IDENTIFIER ::= { efmCuConformance 1 }\n      efmCuCompliances OBJECT IDENTIFIER
    ::= { efmCuConformance 2 }\n      -- Object Groups\n      efmCuBasicGroup OBJECT-GROUP\n
    \       OBJECTS {\n          efmCuPAFSupported,\n          efmCuAdminProfile,\n
    \         efmCuTargetDataRate,\n          efmCuTargetSnrMgn,\n          efmCuAdaptiveSpectra,\n
    \         efmCuPortSide,\n          efmCuFltStatus\n        }\n        STATUS
    \     current\n        DESCRIPTION\n          \"A collection of objects representing
    management information\n          common for all types of EFMCu ports.\"\n        ::=
    { efmCuGroups 1 }\n      efmCuPAFGroup OBJECT-GROUP\n        OBJECTS {\n          efmCuPeerPAFSupported,\n
    \         efmCuPAFCapacity,\n          efmCuPeerPAFCapacity,\n          efmCuPAFAdminState,\n
    \         efmCuPAFDiscoveryCode,\n          efmCuPAFRemoteDiscoveryCode,\n          efmCuNumPMEs\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"A collection
    of objects supporting OPTIONAL PME\n          Aggregation Function (PAF) and PAF
    discovery in EFMCu ports.\"\n        ::= { efmCuGroups 2 }\n      efmCuPAFErrorsGroup
    OBJECT-GROUP\n        OBJECTS {\n          efmCuPAFInErrors,\n          efmCuPAFInSmallFragments,\n
    \         efmCuPAFInLargeFragments,\n          efmCuPAFInBadFragments,\n          efmCuPAFInLostFragments,\n
    \         efmCuPAFInLostStarts,\n          efmCuPAFInLostEnds,\n          efmCuPAFInOverflows\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"A collection
    of objects supporting OPTIONAL error counters\n          of PAF on EFMCu ports.\"\n
    \       ::= { efmCuGroups 3 }\n      efmCuPmeGroup OBJECT-GROUP\n        OBJECTS
    {\n          efmCuPmeAdminProfile,\n          efmCuPmeOperStatus,\n          efmCuPmeFltStatus,\n
    \         efmCuPmeSubTypesSupported,\n          efmCuPmeAdminSubType,\n          efmCuPmeOperSubType,\n
    \         efmCuPAFRemoteDiscoveryCode,\n          efmCuPmeOperProfile,\n          efmCuPmeSnrMgn,\n
    \         efmCuPmePeerSnrMgn,\n          efmCuPmeLineAtn,\n          efmCuPmePeerLineAtn,\n
    \         efmCuPmeEquivalentLength,\n          efmCuPmeTCCodingErrors,\n          efmCuPmeTCCrcErrors,\n
    \         efmCuPmeThreshLineAtn,\n          efmCuPmeThreshSnrMgn\n        }\n
    \       STATUS      current\n        DESCRIPTION\n          \"A collection of
    objects providing information about\n          a 2BASE-TL/10PASS-TS PME.\"\n        ::=
    { efmCuGroups 4 }\n      efmCuAlarmConfGroup OBJECT-GROUP\n        OBJECTS {\n
    \         efmCuThreshLowRate,\n          efmCuLowRateCrossingEnable,\n          efmCuPmeThreshLineAtn,\n
    \         efmCuPmeLineAtnCrossingEnable,\n          efmCuPmeThreshSnrMgn,\n          efmCuPmeSnrMgnCrossingEnable,\n
    \         efmCuPmeDeviceFaultEnable,\n          efmCuPmeConfigInitFailEnable,\n
    \         efmCuPmeProtocolInitFailEnable\n        }\n        STATUS      current\n
    \       DESCRIPTION\n          \"A collection of objects supporting configuration
    of alarm\n          thresholds and notifications in EFMCu ports.\"\n        ::=
    { efmCuGroups 5 }\n      efmCuNotificationGroup NOTIFICATION-GROUP\n        NOTIFICATIONS
    {\n          efmCuLowRateCrossing,\n          efmCuPmeLineAtnCrossing,\n          efmCuPmeSnrMgnCrossing,\n
    \         efmCuPmeDeviceFault,\n          efmCuPmeConfigInitFailure,\n          efmCuPmeProtocolInitFailure\n
    \       }\n        STATUS      current\n        DESCRIPTION\n          \"This
    group supports notifications of significant conditions\n          associated with
    EFMCu ports.\"\n        ::= { efmCuGroups 6 }\n      efmCuPme2BProfileGroup OBJECT-GROUP\n
    \       OBJECTS {\n          efmCuPme2BProfileDescr,\n          efmCuPme2BRegion,\n
    \         efmCuPme2BsMode,\n          efmCuPme2BMinDataRate,\n          efmCuPme2BMaxDataRate,\n
    \         efmCuPme2BPower,\n          efmCuPme2BConstellation,\n          efmCuPme2BProfileRowStatus,\n
    \         efmCuPme2BsModeDescr,\n          efmCuPme2BsModeRowStatus,\n          efmCuPme2BEquivalentLength,\n
    \         efmCuPme2BMaxDataRatePam16,\n          efmCuPme2BMaxDataRatePam32,\n
    \         efmCuPme2BReachRateRowStatus\n        }\n        STATUS      current\n
    \       DESCRIPTION\n          \"A collection of objects that constitute a configuration\n
    \         profile for configuration of 2BASE-TL ports.\"\n        ::= { efmCuGroups
    7}\n      efmCuPme10PProfileGroup OBJECT-GROUP\n        OBJECTS {\n          efmCuPme10PProfileDescr,\n
    \         efmCuPme10PBandplanPSDMskProfile,\n          efmCuPme10PUPBOReferenceProfile,\n
    \         efmCuPme10PBandNotchProfiles,\n          efmCuPme10PPayloadDRateProfile,\n
    \         efmCuPme10PPayloadURateProfile,\n          efmCuPme10PProfileRowStatus\n
    \       }\n        STATUS  current\n        DESCRIPTION\n          \"A collection
    of objects that constitute a configuration\n          profile for configuration
    of 10PASS-TS ports.\"\n        ::= { efmCuGroups 8 }\n      efmCuPme10PStatusGroup
    OBJECT-GROUP\n        OBJECTS {\n          efmCuPme10PFECCorrectedBlocks,\n          efmCuPme10PFECUncorrectedBlocks\n
    \       }\n        STATUS  current\n        DESCRIPTION\n          \"A collection
    of objects providing status information\n          specific to 10PASS-TS PMEs.\"\n
    \       ::= { efmCuGroups 9 }\n     -- Compliance Statements\n      efmCuCompliance
    MODULE-COMPLIANCE\n        STATUS      current\n        DESCRIPTION\n          \"The
    compliance statement for 2BASE-TL/10PASS-TS interfaces.\n          Compliance
    with the following external compliance statements\n          is REQUIRED:\n          MIB
    Module             Compliance Statement\n          ----------             --------------------\n
    \         IF-MIB                 ifCompliance3\n          EtherLike-MIB          dot3Compliance2\n
    \         MAU-MIB                mauModIfCompl3\n          Compliance with the
    following external compliance statements\n          is OPTIONAL for implementations
    supporting PME Aggregation\n          Function (PAF) with flexible cross-connect
    between the PCS\n          and PME ports:\n          MIB Module             Compliance
    Statement\n          ----------             --------------------\n          IF-INVERTED-STACK-MIB
    \ ifInvCompliance\n          IF-CAP-STACK-MIB       ifCapStackCompliance\"\n        MODULE
    \ -- this module\n          MANDATORY-GROUPS {\n            efmCuBasicGroup,\n
    \           efmCuPmeGroup,\n            efmCuAlarmConfGroup,\n            efmCuNotificationGroup\n
    \         }\n          GROUP       efmCuPme2BProfileGroup\n          DESCRIPTION\n
    \           \"Support for this group is only required for implementations\n            supporting
    2BASE-TL PHY.\"\n          GROUP       efmCuPme10PProfileGroup\n          DESCRIPTION\n
    \           \"Support for this group is only required for implementations\n            supporting
    10PASS-TS PHY.\"\n          GROUP       efmCuPAFGroup\n          DESCRIPTION\n
    \           \"Support for this group is only required for\n            implementations
    supporting PME Aggregation Function (PAF).\"\n          GROUP       efmCuPAFErrorsGroup\n
    \         DESCRIPTION\n            \"Support for this group is OPTIONAL for implementations\n
    \           supporting PME Aggregation Function (PAF).\"\n          GROUP       efmCuPme10PStatusGroup\n
    \         DESCRIPTION\n            \"Support for this group is OPTIONAL for implementations\n
    \           supporting 10PASS-TS PHY.\"\n          OBJECT      efmCuPmeSubTypesSupported\n
    \         SYNTAX      BITS {\n            ieee2BaseTLO(0),\n            ieee2BaseTLR(1),\n
    \           ieee10PassTSO(2),\n            ieee10PassTSR(3)\n          }\n          DESCRIPTION\n
    \           \"Support for all subtypes is not required.  However, at\n            least
    one value SHALL be supported.\"\n          OBJECT      efmCuPmeAdminSubType\n
    \         MIN-ACCESS  read-only\n          DESCRIPTION\n            \"Write access
    is not required (needed only for PMEs\n            supporting more than a single
    subtype, e.g.,\n            ieee2BaseTLO and ieee2BaseTLR or ieee10PassTSO and\n
    \           ieee10PassTSR).\"\n          OBJECT      efmCuTargetSnrMgn\n          MIN-ACCESS
    \ read-only\n          DESCRIPTION\n            \"Write access is OPTIONAL.  For
    PHYs without write access,\n            the target SNR margin SHALL be fixed at
    5dB for 2BASE-TL\n            and 6dB for 10PASS-TS.\"\n          OBJECT      efmCuAdaptiveSpectra\n
    \         MIN-ACCESS  read-only\n          DESCRIPTION\n            \"Write access
    is OPTIONAL.  For PHYs without write access,\n            the default value SHOULD
    be false.\"\n        ::= { efmCuCompliances 1 }\n   END\n"
  title: 6.  EFM Copper MIB Definitions
- contents:
  - "7.  Security Considerations\n   There is a number of managed objects defined
    in the EFM-CU-MIB module\n   that have a MAX-ACCESS clause of read-write or read-create.
    \ Most\n   objects are writeable only when the link is Down.  Writing to these\n
    \  objects can have potentially disruptive effects on network operation,\n   for
    example:\n   o  Changing of efmCuPmeAdminSubType may lead to a potential locking\n
    \     of the link, as peer PMEs of the same subtype cannot exchange\n      handshake
    messages.\n   o  Changing of efmCuPAFAdminState to enabled may lead to a potential\n
    \     locking of the link, if the peer PHY does not support PAF.\n   o  Changing
    of efmCuPAFDiscoveryCode, before the discovery operation,\n      may lead to a
    wrongful discovery, for example, when two -O ports\n      are connected to the
    same multi-PME -R port and both -O ports have\n      the same Discovery register
    value.\n   o  Changing PCS or PME configuration parameters (e.g., profile of a\n
    \     PCS or PME via efmCuAdminProfile or efmCuPmeAdminProfile) may lead\n      to
    anything from link quality and rate degradation to a complete\n      link initialization
    failure, as ability of an EFMCu port to\n      support a particular configuration
    depends on the copper\n      environment.\n   o  Activation of a PME can cause
    a severe degradation of service for\n      another EFMCu PHY, whose PME(s) may
    be affected by the cross-talk\n      from the newly activated PME.\n   o  Removal
    of a PME from an operationally 'up' EFMCu port,\n      aggregating several PMEs,
    may cause port's rate degradation.\n   The user of the EFM-CU-MIB module must
    therefore be aware that\n   support for SET operations in a non-secure environment
    without proper\n   protection can have a negative effect on network operations.\n
    \  The readable objects in the EFM-CU-MIB module (i.e., those with MAX-\n   ACCESS
    other than not-accessible) may be considered sensitive in some\n   environments
    since, collectively, they provide information about the\n   performance of network
    interfaces and can reveal some aspects of\n   their configuration.  In particular,
    since EFMCu can be carried over\n   Unshielded Twisted Pair (UTP) voice-grade
    copper in a bundle with\n   other pairs belonging to another operator/customer,
    it is\n   theoretically possible to eavesdrop to an EFMCu transmission simply\n
    \  by \"listening\" to a cross-talk from the EFMCu pairs, especially if\n   the
    parameters of the EFMCu link in question are known.\n   In such environments,
    it is important to control also GET and NOTIFY\n   access to these objects and
    possibly even to encrypt their values\n   when sending them over the network via
    SNMP.\n   SNMP versions prior to SNMPv3 did not include adequate security.\n   Even
    if the network itself is secure (for example by using IPsec),\n   even then, there
    is no control as to who on the secure network is\n   allowed to access and GET/SET
    (read/change/create/delete) the objects\n   in these MIB modules.\n   It is RECOMMENDED
    that implementers consider the security features as\n   provided by the SNMPv3
    framework (see [RFC3410], section 8),\n   including full support for the SNMPv3
    cryptographic mechanisms (for\n   authentication and privacy).\n   Further, deployment
    of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED
    to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of these MIB modules is properly configured to give access\n   to the objects
    only to those principals (users) that have legitimate\n   rights to indeed GET
    or SET (change/create/delete) them.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   Object identifiers for the efmCuMIB MODULE-IDENTITY
    and ifCapStackMIB\n   MODULE-IDENTITY have been allocated by IANA in the MIB-2
    sub-tree.\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Acknowledgments\n   This document was produced by the [HUBMIB] working group,
    whose\n   efforts were greatly advanced by the contributions of the following\n
    \  people (in alphabetical order):\n      Udi Ashkenazi (Actelis)\n      Mike
    Heard\n      Alfred Hoenes (TR-Sys)\n      Marina Popilov (Actelis)\n      Mathias
    Riess (Infineon)\n      Dan Romascanu (Avaya)\n      Matt Squire (Hatteras)\n
    \     Bert Wijnen (Alcatel)\n"
  title: 9.  Acknowledgments
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [802.3]           IEEE, \"IEEE Standard for
      Information technology -\n                     Telecommunications and information
      exchange between\n                     systems - Local and metropolitan area
      networks -\n                     Specific requirements - Part 3: Carrier Sense\n
      \                    Multiple Access with Collision Detection (CSMA/CD)\n                     Access
      Method and Physical Layer Specifications\",\n                     IEEE Std 802.3-2005,
      December 2005.\n   [802.3ah]         IEEE, \"IEEE Standard for Information technology
      -\n                     Telecommunications and information exchange between\n
      \                    systems - Local and metropolitan area networks -\n                     Specific
      requirements - Part 3: Carrier Sense\n                     Multiple Access with
      Collision Detection (CSMA/CD)\n                     Access Method and Physical
      Layer Specifications -\n                     Amendment: Media Access Control
      Parameters,\n                     Physical Layers and Management Parameters
      for\n                     Subscriber Access Networks\", IEEE Std 802.3ah-2004,\n
      \                    September 2004.\n   [G.991.2]         ITU-T, \"Single-pair
      High-speed Digital Subscriber\n                     Line (SHDSL) transceivers\",
      ITU-T\n                     Recommendation G.991.2, December 2003,\n                     <http://www.itu.int/rec/T-REC-G.991.2/en>.\n
      \  [G.993.1]         ITU-T, \"Very High speed Digital Subscriber Line\n                     transceivers\",
      ITU-T Recommendation G.993.1,\n                     June 2004,\n                     <http://www.itu.int/rec/T-REC-G.993.1/en>.\n
      \  [RFC2119]         Bradner, S., \"Key words for use in RFCs to Indicate\n
      \                    Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2578]
      \        McCloghrie, K., Ed., Perkins, D., Ed., and J.\n                     Schoenwaelder,
      Ed., \"Structure of Management\n                     Information Version 2 (SMIv2)\",
      STD 58, RFC 2578,\n                     April 1999.\n   [RFC2579]         McCloghrie,
      K., Ed., Perkins, D., Ed., and J.\n                     Schoenwaelder, Ed.,
      \"Textual Conventions for\n                     SMIv2\", STD 58, RFC 2579, April
      1999.\n   [RFC2580]         McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \                    \"Conformance Statements for SMIv2\", STD 58,\n                     RFC
      2580, April 1999.\n   [RFC2863]         McCloghrie, K. and F. Kastenholz, \"The
      Interfaces\n                     Group MIB\", RFC 2863, June 2000.\n   [RFC2864]
      \        McCloghrie, K. and G. Hanson, \"The Inverted Stack\n                     Table
      Extension to the Interfaces Group MIB\",\n                     RFC 2864, June
      2000.\n   [RFC3411]         Harrington, D., Presuhn, R., and B. Wijnen, \"An\n
      \                    Architecture for Describing Simple Network\n                     Management
      Protocol (SNMP) Management Frameworks\",\n                     STD 62, RFC 3411,
      December 2002.\n   [RFC3635]         Flick, J., \"Definitions of Managed Objects
      for the\n                     Ethernet-like Interface Types\", RFC 3635,\n                     September
      2003.\n   [RFC4836]         Beili, E., \"Definitions of Managed Objects for
      IEEE\n                     802.3 Medium Attachment Units (MAUs)\", RFC 4836,\n
      \                    April 2007.\n   [T1.424]          ANSI, \"Interface Between
      Networks and Customer\n                     Installation Very-high-bit-rate
      Digital Subscriber\n                     Lines (VDSL) Metallic Interface (DMT
      Based)\",\n                     American National Standard T1.424-2004, June
      2004.\n   [TS 101 270-1]    ETSI, \"Transmission and Multiplexing (TM); Access\n
      \                    transmission systems on metallic access cables;\n                     Very
      high speed Digital Subscriber Line (VDSL);\n                     Part 1: Functional
      requirements\", Technical\n                     Specification TS 101 270-1,
      October 2005.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [ANFP]            Network Interoperability
      Consultative Committee\n                     (NICC), \"Specification of the
      Access Network\n                     Frequency Plan (ANFP) applicable to transmission\n
      \                    systems used on the BT Access Network\", NICC\n                     Document
      ND1602:2005/08, August 2005.\n   [HUBMIB]          IETF, \"Ethernet Interfaces
      and Hub MIB (hubmib)\n                     Charter\", <http://www.ietf.org/html.charters/OLD/\n
      \                    hubmib-charter.html>.\n   [IANAifType-MIB]  Internet Assigned
      Numbers Authority (IANA),\n                     \"IANAifType Textual Convention
      definition\",\n                     <http://www.iana.org/assignments/ianaiftype-mib>.\n
      \  [RFC3410]         Case, J., Mundy, R., Partain, D., and B. Stewart,\n                     \"Introduction
      and Applicability Statements for\n                     Internet-Standard Management
      Framework\", RFC 3410,\n                     December 2002.\n   [RFC4070]         Dodge,
      M. and B. Ray, \"Definitions of Managed\n                     Object Extensions
      for Very High Speed Digital\n                     Subscriber Lines (VDSL) Using
      Multiple Carrier\n                     Modulation (MCM) Line Coding\", RFC 4070,
      May 2005.\n   [RFC4181]         Heard, C., \"Guidelines for Authors and Reviewers
      of\n                     MIB Documents\", BCP 111, RFC 4181, September 2005.\n
      \  [RFC4319]         Sikes, C., Ray, B., and R. Abbi, \"Definitions of\n                     Managed
      Objects for High Bit-Rate DSL - 2nd\n                     generation (HDSL2)
      and Single-Pair High-Speed\n                     Digital Subscriber Line (SHDSL)
      Lines\", RFC 4319,\n                     December 2005.\n   [RFC4837]         Khermosh,
      L., \"Managed Objects of Ethernet Passive\n                     Optical Networks
      (EPON)\", RFC 4837, July 2007.\n   [RFC4878]         Squire, M., \"Definitions
      and Managed Objects for\n                     Operations, Administration, and
      Maintenance (OAM)\n                     Functions on Ethernet-Like Interfaces\",
      RFC 4878,\n                     June 2007.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Author's Address\n   Edward Beili\n   Actelis Networks\n   Bazel 25\n   Petach-Tikva\n
    \  Israel\n   Phone: +972-3-924-3491\n   EMail: edward.beili@actelis.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
