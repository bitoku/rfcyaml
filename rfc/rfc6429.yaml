- title: __initial_text__
  contents:
  - '             TCP Sender Clarification for Persist Condition

    '
- title: Abstract
  contents:
  - "Abstract\n   This document clarifies the Zero Window Probes (ZWPs) described\
    \ in\n   RFC 1122 (\"Requirements for Internet Hosts -- Communication Layers\"\
    ).\n   In particular, it clarifies the actions that can be taken on\n   connections\
    \ that are experiencing the ZWP condition.  Rather than\n   making a change to\
    \ the standard, this document clarifies what has\n   been until now a misinterpretation\
    \ of the standard as specified in\n   RFC 1122.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6429.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirements Language ......................................3\n  \
    \ 2. Discussion of RFC 1122 Requirement ..............................3\n   3.\
    \ Description of One Simple Attack ................................4\n   4. Clarification\
    \ Regarding RFC 1122 Requirements ...................5\n   5. Security Considerations\
    \ .........................................5\n   6. Acknowledgments .................................................5\n\
    \   7. References ......................................................6\n  \
    \    7.1. Normative References .......................................6\n    \
    \  7.2. Informative References .....................................6\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Section 4.2.2.17 of \"Requirements for Internet Hosts --\
    \ Communication\n   Layers\" [RFC1122] says:\n      \"A TCP MAY keep its offered\
    \ receive window closed indefinitely.\n      As long as the receiving TCP continues\
    \ to send acknowledgments in\n      response to the probe segments, the sending\
    \ TCP MUST allow the\n      connection to stay open.\n      DISCUSSION:\n    \
    \     It is extremely important to remember that ACK (acknowledgment)\n      \
    \   segments that contain no data are not reliably transmitted by\n         TCP\"\
    .\n   Therefore, zero window probing needs to be supported to prevent a\n   connection\
    \ from hanging forever if ACK segments that re-open the\n   window are lost. \
    \ The condition where the sender goes into the Zero\n   Window Probe (ZWP) mode\
    \ is typically known as the 'persist\n   condition'.\n   This guidance is not\
    \ intended to preclude resource management by the\n   operating system or application,\
    \ which may request that connections\n   be aborted regardless of whether or not\
    \ they are in the persist\n   condition.  The TCP implementation needs to, of\
    \ course, comply by\n   aborting such connections.  If such resource management\
    \ is not\n   performed external to the protocol implementation, TCP\n   implementations\
    \ that misinterpret Section 4.2.2.17 of [RFC1122] have\n   the potential to make\
    \ systems vulnerable to denial-of-service (DoS)\n   [RFC4732] scenarios where\
    \ attackers tie up resources by keeping\n   connections in the persist condition.\n\
    \   Rather than making a change to the standard, this document clarifies\n   what\
    \ has been until now a misinterpretation of the standard as\n   specified in RFC\
    \ 1122 [RFC1122].\n   Section 2 of this document describes why implementations\
    \ might not\n   close connections merely because they are in the persist condition,\n\
    \   yet need to still allow such connections to be closed on command.\n   Section\
    \ 3 outlines a simple attack on systems that do not\n   sufficiently manage connections\
    \ in this state.  Section 4 concludes\n   with a requirements-language clarification\
    \ to the RFC 1122\n   requirement.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n"
- title: 2.  Discussion of RFC 1122 Requirement
  contents:
  - "2.  Discussion of RFC 1122 Requirement\n   Per [RFC1122], as long as the ACKs\
    \ are being received for window\n   probes, a connection can continue to stay\
    \ in the persist condition.\n   This is an important feature, because applications\
    \ typically would\n   want the TCP connection to stay open unless an application\
    \ explicitly\n   closes the connection.\n   For example, take the case of a user\
    \ running a network print job\n   during which the printer runs out of paper and\
    \ is waiting for the\n   user to reload the paper tray (user intervention).  The\
    \ printer may\n   not be reading data from the printing application during this\
    \ time.\n   Although this may result in a prolonged ZWP state, it would be\n \
    \  premature for TCP to take action on its own and close the printer\n   connection\
    \ merely due to its lack of progress.  Once the printer's\n   paper tray is reloaded\
    \ (which may be minutes, hours, or days later),\n   the print job needs to be\
    \ able to continue uninterrupted over the\n   same TCP connection.\n   However,\
    \ systems that misinterpret Section 4.2.2.17 of [RFC1122] may\n   fall victim\
    \ to DoS attacks by not supporting sufficient mechanisms to\n   allow release\
    \ of system resources tied up by connections in the\n   persist condition during\
    \ times of resource exhaustion.  For example,\n   take the case of a busy server\
    \ where multiple (attacker) clients can\n   advertise a zero window forever (by\
    \ reliably acknowledging the ZWPs).\n   This could eventually lead to resource\
    \ exhaustion in the server\n   system.  In such cases, the application or operating\
    \ system would\n   need to take appropriate action on the TCP connection to reclaim\n\
    \   their resources and continue to maintain legitimate connections.\n   The problem\
    \ is applicable to TCP and TCP-derived flow-controlled\n   transport protocols\
    \ such as the Stream Control Transmission Protocol\n   (SCTP).\n   Clearly, a\
    \ system needs to be robust to such attacks and allow\n   connections in the persist\
    \ condition to be aborted in the same way as\n   any other connection.  Section\
    \ 4 of this document provides the\n   requisite clarification to permit such resource\
    \ management.\n"
- title: 3.  Description of One Simple Attack
  contents:
  - "3.  Description of One Simple Attack\n   To illustrate a potential DoS scenario,\
    \ consider the case where many\n   client applications open TCP connections with\
    \ an HTTP [RFC2616]\n   server, and each sends a GET request for a large page\
    \ and stops\n   reading the response partway through.  This causes the client's\
    \ TCP\n   implementation to advertise a zero window to the server.  For every\n\
    \   large HTTP response, the server is left holding on to the response\n   data\
    \ in its sending queue.  The amount of response data held will\n   depend on the\
    \ size of the send buffer and the advertised window.  If\n   the clients never\
    \ read the data in their receive queues and therefore\n   do not clear the persist\
    \ condition, the server will continue to hold\n   that data indefinitely.  Since\
    \ there may be a limit to the operating\n   system kernel memory available for\
    \ TCP buffers, this may result in\n   DoS to legitimate connections by locking\
    \ up the necessary resources.\n   If the above scenario persists for an extended\
    \ period of time, it\n   will lead to starvation of TCP buffers and connection\
    \ blocks, causing\n   legitimate existing connections and new connection attempts\
    \ to fail.\n   A clever application needs to detect such attacks with connections\n\
    \   that are not making progress, and could close these connections.\n   However,\
    \ some applications might have transferred all the data to the\n   TCP socket\
    \ and subsequently closed the socket, leaving the\n   connections with no controlling\
    \ process; such connections are\n   referred to as orphaned connections.  These\
    \ orphaned connections\n   might be left holding the data indefinitely in their\
    \ sending queue.\n   The US Computer Emergency Readiness Team (CERT) has released\
    \ an\n   advisory in this regard [VU723308] and is making vendors aware of\n \
    \  this DoS scenario.\n"
- title: 4.  Clarification Regarding RFC 1122 Requirements
  contents:
  - "4.  Clarification Regarding RFC 1122 Requirements\n   As stated in [RFC1122],\
    \ a TCP implementation MUST NOT close a\n   connection merely because it seems\
    \ to be stuck in the ZWP or persist\n   condition.  Though unstated in RFC 1122,\
    \ but implicit for system\n   robustness, a TCP implementation needs to allow\
    \ connections in the\n   ZWP or persist condition to be closed or aborted by their\n\
    \   applications or other resource management routines in the operating\n   system.\n\
    \   An interface that allows an application to inform TCP on what to do\n   when\
    \ the connection stays in the persist condition, or that allows an\n   application\
    \ or other resource manager to query the health of the TCP\n   connection, is\
    \ considered outside the scope of this document.  All\n   such techniques, however,\
    \ are in complete compliance with TCP\n   [RFC0793] and [RFC1122].\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document discusses one system security consideration\
    \ that is\n   listed in \"Guidelines for Writing RFC Text on Security\n   Considerations\"\
    \ [RFC3552].  In particular, it describes an\n   inappropriate use of a system\
    \ that is acting as a server for many\n   users.  That use and a possible DoS\
    \ attack are discussed in\n   Section 3.\n   This document limits itself to clarifying\
    \ RFC 1122.  It does not\n   discuss what can happen with orphaned connections\
    \ and other possible\n   mitigation techniques, as these are considered outside\
    \ the scope of\n   this document.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document was inspired by the recent discussions\
    \ that took place\n   regarding the TCP persist condition issue in the TCP Maintenance\
    \ and\n   Minor Extensions (TCPM) Working Group mailing list [TCPM].  The\n  \
    \ outcome of those discussions was to come up with a document that\n   would clarify\
    \ the intentions of the ZWP as discussed in RFC 1122.  We\n   would like to thank\
    \ Mark Allman, Ted Faber, and David Borman for\n   clarifying the objective behind\
    \ this document.  Thanks also go to\n   Wesley Eddy for his extensive editorial\
    \ comments and to Dan Wing,\n   Mark Allman, and Fernando Gont for providing feedback\
    \ on this\n   document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC0793]   Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n               RFC 793, September 1981.\n   [RFC1122]  \
    \ Braden, R., Ed., \"Requirements for Internet Hosts -\n               Communication\
    \ Layers\", STD 3, RFC 1122, October 1989.\n   [RFC2119]   Bradner, S., \"Key\
    \ words for use in RFCs to Indicate\n               Requirement Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC2616]   Fielding, R., Gettys, J., Mogul,\
    \ J., Frystyk, H.,\n               Masinter, L., Leach, P., and T. Berners-Lee,\
    \ \"Hypertext\n               Transfer Protocol -- HTTP/1.1\", RFC 2616, June\
    \ 1999.\n   [RFC3552]   Rescorla, E. and B. Korver, \"Guidelines for Writing RFC\n\
    \               Text on Security Considerations\", BCP 72, RFC 3552,\n       \
    \        July 2003.\n   [RFC4732]   Handley, M., Ed., Rescorla, E., Ed., and IAB,\
    \ \"Internet\n               Denial-of-Service Considerations\", RFC 4732,\n \
    \              December 2006.\n   [TCPM]      IETF, \"TCP Maintenance and Minor\
    \ Extensions (tcpm) -\n               Charter\", <http://datatracker.ietf.org/wg/tcpm/charter/>.\n\
    \   [VU723308]  Manion, A. and D. Warren, \"TCP may keep its offered\n       \
    \        receive window closed indefinitely (RFC 1122)\",\n               November\
    \ 2009, <http://www.kb.cert.org/vuls/id/723308>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Murali Bashyam\n   Ocarina Networks, Inc.\n   42 Airport\
    \ Parkway\n   San Jose, CA  95110\n   USA\n   Phone: +1 (408) 512-2966\n   EMail:\
    \ mbashyam@ocarinanetworks.com\n   Mahesh Jethanandani\n   Cisco\n   170 Tasman\
    \ Drive\n   San Jose, CA  95134\n   USA\n   Phone: +1 (408) 527-8230\n   EMail:\
    \ mjethanandani@gmail.com\n   Anantha Ramaiah\n   Cisco\n   170 Tasman Drive\n\
    \   San Jose, CA  95134\n   USA\n   Phone: +1 (408) 525-6486\n   EMail: ananth@cisco.com\n"
