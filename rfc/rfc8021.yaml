- title: __initial_text__
  contents:
  - '         Generation of IPv6 Atomic Fragments Considered Harmful

    '
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the security implications of the generation\n\
    \   of IPv6 atomic fragments and a number of interoperability issues\n   associated\
    \ with IPv6 atomic fragments.  It concludes that the\n   aforementioned functionality\
    \ is undesirable and thus documents the\n   motivation for removing this functionality\
    \ from an upcoming revision\n   of the core IPv6 protocol specification (RFC 2460).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8021.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Security Implications of the Generation of IPv6 Atomic\n      Fragments\
    \ .......................................................3\n   3. Additional Considerations\
    \ .......................................5\n   4. Conclusions .....................................................8\n\
    \   5. Security Considerations .........................................8\n  \
    \ 6. References ......................................................9\n    \
    \  6.1. Normative References .......................................9\n      6.2.\
    \ Informative References ....................................10\n   Acknowledgements\
    \ ..................................................12\n   Authors' Addresses\
    \ ................................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC2460] specifies the IPv6 fragmentation mechanism, which\
    \ allows\n   IPv6 packets to be fragmented into smaller pieces such that they\
    \ can\n   fit in the Path MTU to the intended destination(s).\n   A legacy IPv4/IPv6\
    \ translator implementing the Stateless IP/ICMP\n   Translation Algorithm [RFC6145]\
    \ may legitimately generate ICMPv6\n   \"Packet Too Big\" (PTB) error messages\
    \ [RFC4443] advertising an MTU\n   smaller than 1280 (the minimum IPv6 MTU). \
    \ Section 5 of [RFC2460]\n   states that, upon receiving such an ICMPv6 error\
    \ message, hosts are\n   not required to reduce the assumed Path MTU but must\
    \ simply include a\n   Fragment Header in all subsequent packets sent to that\
    \ destination.\n   The resulting packets will thus *not* be actually fragmented\
    \ into\n   several pieces; rather, they will be \"atomic\" fragments [RFC6946]\n\
    \   (i.e., they will just include a Fragment Header with both the\n   \"Fragment\
    \ Offset\" and the \"M\" flag set to 0).  [RFC6946] requires\n   that these atomic\
    \ fragments be essentially processed by the\n   destination host(s) as non-fragmented\
    \ traffic (since there are not\n   really any fragments to be reassembled).  The\
    \ goal of these atomic\n   fragments is simply to convey an appropriate Identification\
    \ value to\n   be employed by IPv6/IPv4 translators for the resulting IPv4\n \
    \  fragments.\n   While atomic fragments might seem rather benign, there are scenarios\n\
    \   in which the generation of IPv6 atomic fragments can be leveraged for\n  \
    \ performing a number of attacks against the corresponding IPv6 flows.\n   Since\
    \ there are concrete security implications arising from the\n   generation of\
    \ IPv6 atomic fragments and there is no real gain in\n   generating IPv6 atomic\
    \ fragments (as opposed to, for example, having\n   IPv6/IPv4 translators generate\
    \ an IPv4 Identification value\n   themselves), we conclude that this functionality\
    \ is undesirable.\n   Section 2 briefly discusses the security implications of\
    \ the\n   generation of IPv6 atomic fragments and describes a specific\n   Denial-of-Service\
    \ (DoS) attack vector that leverages the widespread\n   dropping of IPv6 fragments\
    \ in the public Internet.  Section 3\n   provides additional considerations regarding\
    \ the usefulness of\n   generating IPv6 atomic fragments.\n"
- title: 2.  Security Implications of the Generation of IPv6 Atomic Fragments
  contents:
  - "2.  Security Implications of the Generation of IPv6 Atomic Fragments\n   The\
    \ security implications of IP fragmentation have been discussed at\n   length\
    \ in [RFC6274] and [RFC7739].  An attacker can leverage the\n   generation of\
    \ IPv6 atomic fragments to trigger the use of\n   fragmentation in an arbitrary\
    \ IPv6 flow (in scenarios in which actual\n   fragmentation of packets is not\
    \ needed) and can subsequently perform\n   any type of fragmentation-based attack\
    \ against legacy IPv6 nodes that\n   do not implement [RFC6946].  That is, employing\
    \ fragmentation where\n   not actually needed allows for fragmentation-based attack\
    \ vectors to\n   be employed, unnecessarily.\n   We note that, unfortunately,\
    \ even nodes that already implement\n   [RFC6946] can be subject to DoS attacks\
    \ as a result of the generation\n   of IPv6 atomic fragments.  Let us assume that\
    \ Host A is communicating\n   with Host B and that, as a result of the widespread\
    \ dropping of IPv6\n   packets that contain extension headers (including fragmentation)\n\
    \   [RFC7872], some intermediate node filters fragments between Host B\n   and\
    \ Host A.  If an attacker sends a forged ICMPv6 PTB error message\n   to Host\
    \ B, reporting an MTU smaller than 1280, this will trigger the\n   generation\
    \ of IPv6 atomic fragments from that moment on (as required\n   by [RFC2460]).\
    \  When Host B starts sending IPv6 atomic fragments (in\n   response to the received\
    \ ICMPv6 PTB error message), these packets\n   will be dropped, since we previously\
    \ noted that IPv6 packets with\n   extension headers were being dropped between\
    \ Host B and Host A.\n   Thus, this situation will result in a DoS scenario.\n\
    \   Another possible scenario is that in which two BGP peers are\n   employing\
    \ IPv6 transport and they implement Access Control Lists\n   (ACLs) to drop IPv6\
    \ fragments (to avoid control-plane attacks).  If\n   the aforementioned BGP peers\
    \ drop IPv6 fragments but still honor\n   received ICMPv6 PTB error messages,\
    \ an attacker could easily attack\n   the corresponding peering session by simply\
    \ sending an ICMPv6 PTB\n   message with a reported MTU smaller than 1280 bytes.\
    \  Once the attack\n   packet has been sent, the aforementioned routers will themselves\
    \ be\n   the ones dropping their own traffic.\n   The aforementioned attack vector\
    \ is exacerbated by the following\n   factors:\n   o  The attacker does not need\
    \ to forge the IPv6 Source Address of his\n      attack packets.  Hence, deployment\
    \ of simple filters as per BCP 38\n      [BCP38] does not help as a countermeasure.\n\
    \   o  Only the IPv6 addresses of the IPv6 packet embedded in the ICMPv6\n   \
    \   payload need to be forged.  While one could envision filtering\n      devices\
    \ enforcing filters in the style of BCP 38 on the ICMPv6\n      payload, the use\
    \ of extension headers (by the attacker) could make\n      this difficult, if\
    \ not impossible.\n   o  Many implementations fail to perform validation checks\
    \ on the\n      received ICMPv6 error messages as recommended in Section 5.2 of\n\
    \      [RFC4443] and documented in [RFC5927].  It should be noted that in\n  \
    \    some cases, such as when an ICMPv6 error message has (supposedly)\n     \
    \ been elicited by a connectionless transport protocol (or some\n      other connectionless\
    \ protocol being encapsulated in IPv6), it may\n      be virtually impossible\
    \ to perform validation checks on the\n      received ICMPv6 error message.  And,\
    \ because of IPv6 extension\n      headers, the ICMPv6 payload might not even\
    \ contain any useful\n      information on which to perform validation checks.\n\
    \   o  Upon receipt of one of the aforementioned ICMPv6 PTB error\n      messages,\
    \ the Destination Cache [RFC4861] is usually updated to\n      reflect that any\
    \ subsequent packets to such a destination should\n      include a Fragment Header.\
    \  This means that a single ICMPv6 PTB\n      error message might affect multiple\
    \ communication instances (e.g.,\n      TCP connections) with such a destination.\n\
    \   o  As noted in Section 3, SIIT (the Stateless IP/ICMP Translation\n      Algorithm)\
    \ [RFC6145], including derivative protocols such as\n      Stateful NAT64 (Network\
    \ Address and Protocol Translation from IPv6\n      Clients to IPv4 Servers) [RFC6146],\
    \ was the only technology making\n      use of atomic fragments.  Unfortunately,\
    \ an IPv6 node cannot\n      easily limit its exposure to the aforementioned attack\
    \ vector by\n      only generating IPv6 atomic fragments towards IPv4 destinations\n\
    \      behind a stateless translator.  This is due to the fact that\n      Section\
    \ 3.3 of [RFC6052] encourages operators to use a\n      Network-Specific Prefix\
    \ (NSP) that maps the IPv4 address space\n      into IPv6.  When an NSP is being\
    \ used, IPv6 addresses representing\n      IPv4 nodes (reached through a stateless\
    \ translator) are\n      indistinguishable from native IPv6 addresses.\n"
- title: 3.  Additional Considerations
  contents:
  - "3.  Additional Considerations\n   Besides the security assessment provided in\
    \ Section 2, it is\n   interesting to evaluate the pros and cons of having an\
    \ IPv6-to-IPv4\n   translating router rely on the generation of IPv6 atomic fragments.\n\
    \   Relying on the generation of IPv6 atomic fragments implies a\n   reliance\
    \ on:\n   1.  ICMPv6 packets arriving from the translator to the destination\n\
    \       IPv6 node\n   2.  The ability of the nodes receiving ICMPv6 PTB messages\
    \ reporting\n       an MTU smaller than 1280 bytes to actually produce atomic\n\
    \       fragments\n   3.  Support for IPv6 fragmentation on the IPv6 side of the\
    \ translator\n   4.  The ability of the translator implementation to access the\n\
    \       information conveyed by the Fragment Header\n   5.  The value extracted\
    \ from the low-order 16 bits of the IPv6\n       fragment header Identification\
    \ field resulting in an appropriate\n       IPv4 Identification value\n   Unfortunately,\n\
    \   1.  There exists a fair share of evidence of ICMPv6 PTB error\n       messages\
    \ being dropped on the public Internet (for instance, that\n       is one of the\
    \ reasons for which Packetization Layer Path MTU\n       Discovery (PLPMTUD) [RFC4821]\
    \ was produced).  Therefore, relying\n       on such messages being successfully\
    \ delivered will affect the\n       robustness of the protocol that relies on\
    \ them.\n   2.  A number of IPv6 implementations have been known to fail to\n\
    \       generate IPv6 atomic fragments in response to ICMPv6 PTB messages\n  \
    \     reporting an MTU smaller than 1280 bytes.  Additionally, the\n       results\
    \ included in Section 6 of [RFC6145] note that 57% of the\n       tested web servers\
    \ failed to produce IPv6 atomic fragments in\n       response to ICMPv6 PTB messages\
    \ reporting an MTU smaller than\n       1280 bytes.  Thus, any protocol relying\
    \ on IPv6 atomic fragment\n       generation for proper functioning will have\
    \ interoperability\n       problems with the aforementioned IPv6 stacks.\n   3.\
    \  IPv6 atomic fragment generation represents a case in which\n       fragmented\
    \ traffic is produced where otherwise it would not be\n       needed.  Since there\
    \ is widespread dropping of IPv6 fragments in\n       the public Internet [RFC7872],\
    \ this would mean that the\n       (unnecessary) use of IPv6 fragmentation might\
    \ result,\n       unnecessarily, in a DoS situation even in legitimate cases.\n\
    \   4.  The packet-handling API at the node where the translator is\n       running\
    \ may obscure fragmentation-related information.  In such\n       scenarios, the\
    \ information conveyed by the Fragment Header may be\n       unavailable to the\
    \ translator.  [JOOL] discusses a sample\n       framework (Linux Netfilter) that\
    \ hinders access to the\n       information conveyed in IPv6 fragments.\n   5.\
    \  While [RFC2460] requires that the IPv6 fragment header\n       Identification\
    \ field of a fragmented packet be different than\n       that of any other fragmented\
    \ packet sent recently with the same\n       Source Address and Destination Address,\
    \ there is no requirement\n       on the low-order 16 bits of such a value.  Thus,\
    \ there is no\n       guarantee that IPv4 fragment Identification collisions will\
    \ be\n       avoided or reduced by employing the low-order 16 bits of the IPv6\n\
    \       fragment header Identification field of a packet sent by a source\n  \
    \     host.  Besides, collisions might occur where two distinct IPv6\n       Destination\
    \ Addresses are translated into the same IPv4 address,\n       such that Identification\
    \ values that might have been generated to\n       be unique in the context of\
    \ IPv6 end up colliding when used in\n       the context of translated IPv4.\n\
    \   We note that SIIT essentially employs the Fragment Header of IPv6\n   atomic\
    \ fragments to signal the translator how to set the Don't\n   Fragment (DF) bit\
    \ of IPv4 datagrams (the DF bit is cleared when the\n   IPv6 packet contains a\
    \ Fragment Header and is otherwise set to 1 when\n   the IPv6 packet does not\
    \ contain a Fragment Header).  Additionally,\n   the translator will employ the\
    \ low-order 16 bits of the IPv6 fragment\n   header Identification field for setting\
    \ the IPv4 Identification.  At\n   least in theory, this is expected to reduce\
    \ the IPv4 Identification\n   collision rate in the following specific scenario:\n\
    \   1.  An IPv6 node communicates with an IPv4 node (through SIIT).\n   2.  The\
    \ IPv4 node is located behind an IPv4 link with an MTU smaller\n       than 1260\
    \ bytes.  An IPv4 Path MTU of 1260 corresponds to an IPv6\n       Path MTU of\
    \ 1280, due to an optionless IPv4 header being 20 bytes\n       shorter than the\
    \ IPv6 header.\n   3.  ECMP routing [RFC2992] with more than one translator is\
    \ employed,\n       for example, for redundancy purposes.\n   In such a scenario,\
    \ if each translator were to select the IPv4\n   Identification on its own (rather\
    \ than selecting the IPv4\n   Identification from the low-order 16 bits of the\
    \ fragment\n   Identification of IPv6 atomic fragments), this could possibly lead\
    \ to\n   IPv4 Identification collisions.  However, as noted above, the value\n\
    \   extracted from the low-order 16 bits of the IPv6 fragment header\n   Identification\
    \ field might not result in an appropriate IPv4\n   Identification: for example,\
    \ a number of implementations set the IPv6\n   fragment header Identification\
    \ field according to the output of a\n   Pseudorandom Number Generator (PRNG)\
    \ (see Appendix B of [RFC7739]);\n   hence, if the translator only employs the\
    \ low-order 16 bits of such a\n   value, it is very unlikely that relying on the\
    \ fragment\n   Identification of the IPv6 atomic fragment will result in a reduced\n\
    \   IPv4 Identification collision rate (when compared to the case where\n   the\
    \ translator selects each IPv4 Identification on its own).\n   Besides, because\
    \ of the limited size of the IPv4 Identification\n   field, it is nevertheless\
    \ virtually impossible to guarantee\n   uniqueness of the IPv4 Identification\
    \ values without artificially\n   limiting the data rate of fragmented traffic\
    \ [RFC6864] [RFC4963].\n   [RFC6145] was the only \"consumer\" of IPv6 atomic\
    \ fragments, and it\n   correctly and diligently noted (in its Section 6) the\
    \ possible\n   interoperability problems of relying on IPv6 atomic fragments,\n\
    \   proposing a workaround that led to more robust behavior and\n   simplified\
    \ code.  [RFC6145] has been obsoleted by [RFC7915], such\n   that SIIT does not\
    \ rely on IPv6 atomic fragments.\n"
- title: 4.  Conclusions
  contents:
  - "4.  Conclusions\n   Taking all of the above considerations into account, we recommend\n\
    \   that IPv6 atomic fragments be deprecated.\n   In particular:\n   o  IPv4/IPv6\
    \ translators should be updated to not generate ICMPv6 PTB\n      error messages\
    \ containing an MTU value smaller than the minimum\n      IPv6 MTU of 1280 bytes.\
    \  This will ensure that current IPv6 nodes\n      will never have a legitimate\
    \ need to start generating IPv6 atomic\n      fragments.\n   o  The recommendation\
    \ in the previous bullet ensures that there are\n      no longer any valid reasons\
    \ for ICMPv6 PTB error messages\n      reporting an MTU value smaller than the\
    \ minimum IPv6 MTU\n      (1280 bytes).  IPv6 nodes should therefore be updated\
    \ to ignore\n      ICMPv6 PTB error messages reporting an MTU smaller than 1280\
    \ bytes\n      as invalid.\n   We note that these recommendations have been incorporated\
    \ in\n   [IPv6-PMTUD], [IPv6-Spec], and [RFC7915].\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document briefly discusses the security\
    \ implications of the\n   generation of IPv6 atomic fragments and describes one\
    \ specific DoS\n   attack vector that leverages the widespread dropping of IPv6\n\
    \   fragments in the public Internet.  It concludes that the generation\n   of\
    \ IPv6 atomic fragments is an undesirable feature and documents the\n   motivation\
    \ for removing this functionality from [IPv6-Spec].\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2460]  Deering, S. and R. Hinden, \"Internet\
    \ Protocol, Version 6\n              (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460,\n\
    \              December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n   [BCP38]\
    \    Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n              Defeating\
    \ Denial of Service Attacks which employ IP Source\n              Address Spoofing\"\
    , BCP 38, RFC 2827, May 2000,\n              <http://www.rfc-editor.org/info/rfc2827>.\n\
    \   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n       \
    \       Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", RFC 4443,\n              DOI 10.17487/RFC4443,\
    \ March 2006,\n              <http://www.rfc-editor.org/info/rfc4443>.\n   [RFC4821]\
    \  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\"\
    , RFC 4821, DOI 10.17487/RFC4821, March 2007,\n              <http://www.rfc-editor.org/info/rfc4821>.\n\
    \   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n      \
    \        \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n         \
    \     DOI 10.17487/RFC4861, September 2007,\n              <http://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC6145]  Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation\n        \
    \      Algorithm\", RFC 6145, DOI 10.17487/RFC6145, April 2011,\n            \
    \  <http://www.rfc-editor.org/info/rfc6145>.\n   [RFC7915]  Bao, C., Li, X., Baker,\
    \ F., Anderson, T., and F. Gont,\n              \"IP/ICMP Translation Algorithm\"\
    , RFC 7915,\n              DOI 10.17487/RFC7915, June 2016,\n              <http://www.rfc-editor.org/info/rfc7915>.\n\
    \   [RFC6864]  Touch, J., \"Updated Specification of the IPv4 ID Field\",\n  \
    \            RFC 6864, DOI 10.17487/RFC6864, February 2013,\n              <http://www.rfc-editor.org/info/rfc6864>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2992]  Hopps, C., \"Analysis of an Equal-Cost\
    \ Multi-Path\n              Algorithm\", RFC 2992, DOI 10.17487/RFC2992, November\
    \ 2000,\n              <http://www.rfc-editor.org/info/rfc2992>.\n   [RFC5927]\
    \  Gont, F., \"ICMP Attacks against TCP\", RFC 5927,\n              DOI 10.17487/RFC5927,\
    \ July 2010,\n              <http://www.rfc-editor.org/info/rfc5927>.\n   [RFC4963]\
    \  Heffner, J., Mathis, M., and B. Chandler, \"IPv4 Reassembly\n             \
    \ Errors at High Data Rates\", RFC 4963,\n              DOI 10.17487/RFC4963,\
    \ July 2007,\n              <http://www.rfc-editor.org/info/rfc4963>.\n   [RFC6052]\
    \  Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n              Li,\
    \ \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052,\n              DOI 10.17487/RFC6052,\
    \ October 2010,\n              <http://www.rfc-editor.org/info/rfc6052>.\n   [RFC6146]\
    \  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n              NAT64:\
    \ Network Address and Protocol Translation from IPv6\n              Clients to\
    \ IPv4 Servers\", RFC 6146, DOI 10.17487/RFC6146,\n              April 2011, <http://www.rfc-editor.org/info/rfc6146>.\n\
    \   [RFC6274]  Gont, F., \"Security Assessment of the Internet Protocol\n    \
    \          Version 4\", RFC 6274, DOI 10.17487/RFC6274, July 2011,\n         \
    \     <http://www.rfc-editor.org/info/rfc6274>.\n   [RFC6946]  Gont, F., \"Processing\
    \ of IPv6 \"Atomic\" Fragments\",\n              RFC 6946, DOI 10.17487/RFC6946,\
    \ May 2013,\n              <http://www.rfc-editor.org/info/rfc6946>.\n   [RFC7739]\
    \  Gont, F., \"Security Implications of Predictable Fragment\n              Identification\
    \ Values\", RFC 7739, DOI 10.17487/RFC7739,\n              February 2016, <http://www.rfc-editor.org/info/rfc7739>.\n\
    \   [RFC7872]  Gont, F., Linkova, J., Chown, T., and W. Liu,\n              \"\
    Observations on the Dropping of Packets with IPv6\n              Extension Headers\
    \ in the Real World\", RFC 7872,\n              DOI 10.17487/RFC7872, June 2016,\n\
    \              <http://www.rfc-editor.org/info/rfc7872>.\n   [IPv6-Spec]\n   \
    \           Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n      \
    \        (IPv6) Specification\", Work in Progress,\n              draft-ietf-6man-rfc2460bis-08,\
    \ November 2016.\n   [IPv6-PMTUD]\n              McCann, J., Deering, S., Mogul,\
    \ J., and R. Hinden, Ed.,\n              \"Path MTU Discovery for IP version 6\"\
    , Work in Progress,\n              draft-ietf-6man-rfc1981bis-03, October 2016.\n\
    \   [JOOL]     Leiva Popper, A., \"nf_defrag_ipv4 and nf_defrag_ipv6\",\n    \
    \          April 2015, <https://github.com/NICMx/Jool/wiki/\n              nf_defrag_ipv4-and-nf_defrag_ipv6#implementation-gotchas>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank (in alphabetical order)\
    \ Congxiao Bao,\n   Bob Briscoe, Carlos Jesus Bernardos Cano, Brian Carpenter,\
    \ Bob\n   Hinden, Tatuya Jinmei, Alberto Leiva Popper, Ted Lemon, Xing Li,\n \
    \  Jeroen Massar, Erik Nordmark, Qiong Sun, Joe Touch, Ole Troan, Tina\n   Tsou,\
    \ and Bernie Volz for providing valuable comments on earlier\n   versions of this\
    \ document.\n   Fernando Gont would like to thank Jan Zorz / Go6 Lab\n   <http://go6lab.si/>,\
    \ and Jared Mauch / NTT America, for providing\n   access to systems and networks\
    \ that were employed to produce some of\n   the tests that resulted in the publication\
    \ of this document.\n   Additionally, he would like to thank Ivan Arce, Guillermo\
    \ Gont, and\n   Diego Armando Maradona for their inspiration.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fernando Gont\n   SI6 Networks / UTN-FRH\n   Evaristo\
    \ Carriego 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone:\
    \ +54 11 4650 8472\n   Email: fgont@si6networks.com\n   URI:   http://www.si6networks.com\n\
    \   Will (Shucheng) Liu\n   Huawei Technologies\n   Bantian, Longgang District\n\
    \   Shenzhen  518129\n   China\n   Email: liushucheng@huawei.com\n   Tore Anderson\n\
    \   Redpill Linpro\n   Vitaminveien 1A\n   Oslo  0485\n   Norway\n   Phone: +47\
    \ 959 31 212\n   Email: tore@redpill-linpro.com\n   URI:   http://www.redpill-linpro.com\n"
