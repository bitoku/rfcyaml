- title: __initial_text__
  contents:
  - '              CATNIP: Common Architecture for the Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document was submitted to the IETF IPng area in response to\
    \ RFC\n   1550  Publication of this document does not imply acceptance by the\n\
    \   IPng area of any ideas expressed within.  Comments should be\n   submitted\
    \ to the big-internet@munnari.oz.au mailing list.\n"
- title: Executive Summary
  contents:
  - "Executive Summary\n   This paper describes a common architecture for the network\
    \ layer\n   protocol. The Common Architecture for Next Generation Internet\n \
    \  Protocol (CATNIP) provides a compressed form of the existing network\n   layer\
    \ protocols. Each compression is defined so that the resulting\n   network protocol\
    \ data units are identical in format. The fixed part\n   of the compressed format\
    \ is 16 bytes in length, and may often be the\n   only part transmitted on the\
    \ subnetwork.\n   With some attention paid to details, it is possible for a transport\n\
    \   layer protocol (such as TCP) to operate properly with one end system\n   using\
    \ one network layer (e.g. IP version 4) and the other using some\n   other network\
    \ protocol, such as CLNP. Using the CATNIP definitions,\n   all the existing transport\
    \ layer protocols used on connectionless\n   network services will operate over\
    \ any existing network layer\n   protocol.\n   The CATNIP uses cache handles to\
    \ provide both rapid identification of\n   the next hop in high performance routing\
    \ as well as abbreviation of\n   the network header by permitting the addresses\
    \ to be omitted when a\n   valid cache handle is available. The fixed part of\
    \ the network layer\n   header carries the cache handles.\n   The cache handles\
    \ are either provided by feedback from the downstream\n   router in response to\
    \ offered traffic, or explicitly provided as part\n   of the establishment of\
    \ a circuit or flow through the network. When\n   used for flows, the handle is\
    \ the locally significant flow\n   identifier.\n   When used for circuits, the\
    \ handle is the layer 3 peer-to-peer\n   logical channel identifier, and permits\
    \ a full implementation of\n   network-layer connection-oriented service if the\
    \ routers along the\n   path provide sufficient features. At the same time, the\
    \ packet format\n   of the connectionless service is retained, and hop by hop\
    \ fully\n   addressed datagrams can be used at the same time. Any intermediate\n\
    \   model between the connection oriented and the connectionless service\n   can\
    \ thus be provided over cooperating routers.\n"
- title: CATNIP Objectives
  contents:
  - "CATNIP Objectives\n   The first objective of the CATNIP is a practical recognition\
    \ of the\n   existing state of internetworking, and an understanding that any\n\
    \   approach must encompass the entire problem. While it is common in the\n  \
    \ IP Internet to dismiss the ISO with various amusing phrases, it is\n   hardly\
    \ realistic. As the Internet moves into the realm of providing\n   real commercial\
    \ infrastructure, for telephone, cable television, and\n   the myriad other mundane\
    \ uses, compliance with international\n   standards is an imperative.\n   The\
    \ argument that the IETF need not (or should not) follow existing\n   ISO standards\
    \ will not hold. The ISO is the legal standards\n   organization for the planet.\
    \ Every other industry develops and\n   follows ISO standards. There is (no longer)\
    \ anything special about\n   computer software or data networking.\n   ISO convergence\
    \ is both necessary and sufficient to gain\n   international acceptance and deployment\
    \ of IPng. Non-convergence will\n   effectively preclude deployment.\n   The CATNIP\
    \ integrates CLNP, IP, and IPX. The CATNIP design provides\n   for any of the\
    \ transport layer protocols in use, for example TP4,\n   CLTP, TCP, UDP, IPX and\
    \ SPX to run over any of the network layer\n   protocol formats: CLNP, IP (version\
    \ 4), IPX, and the CATNIP.\n"
- title: Incremental Infrastructure Deployment
  contents:
  - "Incremental Infrastructure Deployment\n   The best use of the CATNIP is to begin\
    \ to build a common Internet\n   infrastructure. The routers and other components\
    \ of the common system\n   are able to use a single consistent addressing method,\
    \ and common\n   terms of reference for other aspects of the system.\n   The CATNIP\
    \ is designed to be incrementally deployable in the strong\n   sense: you can\
    \ plop a CATNIP system down in place of any existing\n   network component and\
    \ continue to operate normally with no\n   reconfiguration.  (Note: not \"just\
    \ a little\". None at all. The number\n   of \"little changes\" suggested by some\
    \ proposals, and the utterly\n   enormous amount of documentation, training, and\
    \ administrative effort\n   then required, astounds the present authors.) The\
    \ vendors do all of\n   the work.\n   There are also no external requirements;\
    \ no \"border routers\", no\n   requirement that administrators apply specific\
    \ restrictions to their\n   network designs, define special tables, or add things\
    \ to the DNS.\n   When the end users and administrators fully understand the combined\n\
    \   system, they will want to operate differently, but in no case will\n   they\
    \ be forced. Not even in small ways. Networks and end user\n   organizations operate\
    \ under sufficient constraints on deployment of\n   systems anyway; they do not\
    \ need a new network architecture adding to\n   the difficulty.\n   Typically\
    \ deployment will occur as part of normal upgrade revisions\n   of software, and\
    \ due to the \"swamping\" of the existing base as the\n   network grows. (When\
    \ the Internet grows by a factor of 5, at least\n   80% will then be \"new\" systems.)\
    \ The users of the network may then\n   take advantage of the new capabilities.\
    \ Some of the performance\n   improvements will be automatic, others may require\
    \ some\n   administrative understanding to get to the best performance level.\n\
    \   The CATNIP definitions provide stateless translation of network\n   datagrams\
    \ to and from CATNIP and, by implication, directly between\n   the other network\
    \ layer protocols. A CATNIP-capable system\n   implementing the full set of definitions\
    \ can interoperate with any\n   existing protocol. Various subsets of the full\
    \ capability may be\n   provided by some vendors.\n"
- title: No Address Translation
  contents:
  - "No Address Translation\n   Note that there is no \"address translation\" in the\
    \ CATNIP\n   specification.  (While it may seem odd to state a negative objective,\n\
    \   this is worth saying as people seem to assume the opposite.) There\n   are\
    \ no \"mapping tables\", no magic ways of digging translations out of\n   the\
    \ DNS or X.500, no routers looking up translations or asking other\n   systems\
    \ for them.\n   Addresses are modified with a simple algorithmic mapping, a mapping\n\
    \   that is no more than using specific prefixes for IP and IPX\n   addresses.\
    \ Not a large set of prefixes; one prefix. The entire\n   existing IP version\
    \ 4 network is mapped with one prefix and the IPX\n   global network with one\
    \ other prefix. (The IP mapping does provide\n   for future assignment of other\
    \ IANA/IPv4 domains that are disjoint\n   from the existing one.)\n   This means\
    \ that there is no immediate effect on addresses embedded in\n   higher level\
    \ protocols.\n   Higher level protocols not using the full form (those native\
    \ to IP\n   and IPX) will eventually be extended to use the full addressing to\n\
    \   extend their usability over all of the network layers.\n"
- title: No Legacy Systems
  contents:
  - "No Legacy Systems\n   The CATNIP leaves no systems behind: with no reconfiguration,\
    \ any\n   system presently capable of IP, CLNP, or IPX retains at least the\n\
    \   connectivity it has now.  With some administrative changes (such as\n   assigning\
    \ IPX domain addresses to some CLNP hosts for example) on\n   other systems, unmodified\
    \ systems may gain significant connectivity.\n   IPX systems with registered network\
    \ numbers may gain the most.\n"
- title: Limited Scope
  contents:
  - "Limited Scope\n   The CATNIP defines a common network layer packet format and\
    \ basic\n   architecture. It intentionally does not specify ES-IS methods,\n \
    \  routing, naming systems, autoconfiguration and other subjects not\n   part\
    \ of the core Internet wide architecture. The related problems and\n   their (many)\
    \ solutions are not within the scope of the specification\n   of the basic common\
    \ network layer.\n"
- title: Existing Addresses and Network Numbers
  contents:
  - "Existing Addresses and Network Numbers\n   The Internet's version 4 numbering\
    \ system has proven to be very\n   flexible, (mostly) expandable, and simple.\
    \  In short: it works.\n   However, there are two problems. Neither was considered\
    \ serious when\n   the CATNIP was first developed in 1988 and 1989, but both are\
    \ now of\n   major concern:\n   o The division into network, and then subnet,\
    \ is insufficient.\n     Almost all sites need a network assignment large enough\
    \ to\n     subnet. At the top of the hierarchy, there is a need to assign\n  \
    \   administrative domains.\n   o As bit-packing is done to accomplish the desired\
    \ network\n     structure, the 32-bit limit causes more and more aggravation.\n\
    \   Another major addressing system used in open internetworking is the\n   OSI\
    \ method of specifying Network Service Access Points (NSAPs). The\n   NSAP consists\
    \ of an authority and format identifier, a number\n   assigned to that authority,\
    \ an address assigned by that authority,\n   and a selector identifying the next\
    \ layer (transport layer) protocol.\n   This is actually a general multi-level\
    \ hierarchy, often obscured by\n   the details of specific profiles. (For example,\
    \ CLNP doesn't specify\n   20 octet NSAPs, it allows any length. But various GOSIPs\
    \ profile the\n   NSAP as 20 octets, and IS-IS makes specific assumptions about\
    \ the\n   last 1-8 octets. And so on.)\n   The NSAP does not directly correspond\
    \ to an IP address, as the\n   selector in IP is separate from the address. The\
    \ concept that does\n   correspond is the NSAP less the selector, called the Network\
    \ Entity\n   Title or NET. (An unfortunate acronym, but one we will use to avoid\n\
    \   repeating the full term.) The usual definition of NET is an NSAP with\n  \
    \ the selector set to 0; the NET used here omits the 0 selector.\n   There is\
    \ also a network numbering system used by IPX, a product of\n   Novell, Inc. (referred\
    \ to from here on as Novell) and other vendors\n   making compatible software.\
    \ While IPX is not yet well connected into\n   a global network, it has a larger\
    \ installed base than either of the\n   other network layers.\n"
- title: Network Layer Address
  contents:
  - "Network Layer Address\n   The network layer address looks like:\n      +----------+----------+---------------+---------------+\n\
    \      |  length  |   AFI    |  IDI ...      | DSP ...       |\n      +----------+----------+---------------+---------------+\n\
    \   The fields are named in the usual OSI terminology although that leads\n  \
    \ to an oversupply of acronyms. Here are more detailed descriptions of\n   each\
    \ field:\n   length: the number of bytes (octets) in the remainder of the\n  \
    \         address.\n   AFI: the Authority and Format Identifier. A single byte\n\
    \        value, from a set of well-known values registered by\n        ISO, that\
    \ determines the semantics of the IDI field\n   IDI: the Initial Domain Identifier,\
    \ a number assigned by the\n        authority named by the AFI, formatted according\
    \ to the\n        semantics implied by the AFI, that determines the\n        authority\
    \ for the remainder of the address.\n   DSP: Domain Specific Part, an address\
    \ assigned by the\n        authority identified by the value of the IDI.\n   Note\
    \ that there are several levels of authority. ISO, for example,\n   identifies\
    \ (with the AFI) a set of numbering authorities (like X.121,\n   the numbering\
    \ plan for the PSPDN, or E.164, the numbering plan for\n   the telephone system).\
    \ Each authority numbers a set of organizations\n   or individuals or other entities.\
    \ (For example, E.164 assigns\n   16172477959 to me as a telephone subscriber.)\n\
    \   The entity then is the authority for the remainder of the address. I\n   can\
    \ do what I please with the addresses starting with (AFI=E.164)\n   (IDI=16172477959).\
    \ Note that this is a delegation of authority, and\n   not an embedding of a data-link\
    \ address (the telephone number) in a\n   network layer address. The actual routing\
    \ of the network layer\n   address has nothing to do with the authority numbering.\n\
    \   The domain-specific part is variable length, and can be allocated in\n   whatever\
    \ way the authority identified by the AFI+IDI desires.\n"
- title: Network Layer Datagram
  contents:
  - "Network Layer Datagram\n   The common architecture format for network layer datagrams\
    \ is\n   described below. The design is a balance between use on high\n   performance\
    \ networks and routers, and a desire to minimize the number\n   of bits in the\
    \ fixed header. Using the current state of processor\n   technology as a reference,\
    \ the fixed header is all loaded into CPU\n   registers on the first memory cycle,\
    \ and it all fits within the\n   operation bandwidth. The header leaves the remaining\
    \ data aligned on\n   the header size (128 bits); with 64 bit addresses present\
    \ and no\n   options it leaves the transport header 256 bit aligned.\n   On very\
    \ slow and low performance networks, the fixed header is still\n   fairly small,\
    \ and could be further compressed by methods similar to\n   those used with IP\
    \ version 4 on links that consider every bit\n   precious. In between, it fits\
    \ nicely into ATM cells and radio\n   packets, leaving sufficient space for the\
    \ transport header and\n   application data.\n      +---------------+---------------+-+-+-+-+-+-+-+-+---------------+\n\
    \      |   NLPID (70)  |  Header Size  |D|S|R|M|E| MBZ | Time to Live  |\n   \
    \   +---------------+---------------+-+-+-+-+-+-+-+-+---------------+\n      |\
    \                 Forward Cache Identifier                      |\n      +---------------------------------------------------------------+\n\
    \      |                      Datagram Length                          |\n   \
    \   +---------------------------------------------------------------+\n      |\
    \     Transport Protocol        |          Checksum             |\n      +---------------------------------------------------------------+\n\
    \      |               Destination Address ...                         |\n   \
    \   +---------------------------------------------------------------+\n      |\
    \               Source Address ...                              |\n      +---------------------------------------------------------------+\n\
    \      |               Options ...                                     |\n   \
    \   +---------------------------------------------------------------+\n  NLPID:\
    \ The first byte (the network layer protocol identifier in OSI)\n         is an\
    \ 8 bit constant 70 (hex). This corresponds to Internet\n         Version 7.\n\
    \  Header Length: The header length is a 8-bit count of the number of\n      \
    \   32-bit words in the header. This allows the header to\n         be up to 1020\
    \ bytes in length.\n  Flags: This byte is a small set of flags determining the\
    \ datagram\n         header format and the processing semantics. The last three\
    \ bits\n         are reserved, and must be set to zero. (Note that the\n     \
    \    corresponding bits in CLNP version 1 are 001, since this byte\n         is\
    \ the version field. This may be useful.)\n  Destination Address Omitted: When\
    \ the destination address omitted\n         (DAO) flag is zero, the destination\
    \ address is present as shown\n         in the datagram format diagram. When a\
    \ datagram is sent with\n         an FCI that identifies the destination and the\
    \ DAO flag is\n         set, the address does not appear in the datagram.\n  Source\
    \ Address Omitted: The source address omitted (SAO) flag is zero\n         when\
    \ the source address is present in the datagram. When\n         datagram is sent\
    \ with an FCI that identifies the source and the\n         SAO flag is set, the\
    \ source address is omitted from the\n         datagram.\n  Report Fragmentation\
    \ Done: When this bit (RFD) is set, an intermediate\n         router that fragments\
    \ the datagram (because it is larger than\n         the next subnetwork MTU) should\
    \ report the event with an ICMP\n         Datagram Too Big message. (Unlike IP\
    \ version 4, which uses DF\n         for MTU discovery, the RFD flag allows the\
    \ fragmented datagram\n         to be delivered.)\n  Mandatory Router Option:\
    \ The mandatory router option (MRO) flag\n         indicates that routers forwarding\
    \ the datagram must look at the\n         network header options.  If not set,\
    \ an intermediate router\n         should not look at the header options.  (But\
    \ it may anyway;\n         this is a necessary consequence of transparent network\
    \ layer\n         translation, which may occur anywhere.)\n         The destination\
    \ host, or an intermediate router doing\n         translation, must look at the\
    \ header options regardless of\n         the setting of the MRO flag.\n      \
    \   A router doing fragmentation will normally only use the F\n         flag in\
    \ options to determine whether options should be copied\n         within the fragmentation\
    \ code path. (It might also recognize\n         and elide null options.) If the\
    \ MRO flag is not set, the router\n         may not act on an option even though\
    \ it copies it properly\n         during fragmentation.\n         If there are\
    \ no options present, MRO should always be zero, so\n         that routers can\
    \ follow the no-option profile path in their\n         implementation.  (Remember\
    \ that the presence of options cannot\n         be divided from the header length,\
    \ since the addresses are\n         variable length.)\n  Error Report Suppression:\
    \ The ERS flag is set to suppress the sending\n         of error reports by any\
    \ system (whether host or router)\n         receiving or forwarding the datagram.\
    \ The system may log the\n         error, increment network management counters,\
    \ and take any\n         similar action, but ICMP error messages or CNLP error\
    \ reports\n         must not be sent.\n         The ERS flag is normally set on\
    \ ICMP messages and other network\n         layer error reports. It does not suppress\
    \ the normal response\n         to ICMP queries or similar network layer queries\
    \ (CNLP echo\n         request).\n         If both the RFD and ERS flags are set,\
    \ the fragmentation report\n         is sent.  (This definition allows a larger\
    \ range of\n         possibilities than simply over-riding the RFD flag would;\
    \ a\n         sender not desiring this behavior can see to it that RFD is\n  \
    \       clear.)\n  Time To Live: The time to live is a 8-bit count, nominally\
    \ in seconds.\n         Each hop is required to decrement TTL by at least one.\
    \ A hop\n         that holds a datagram for an unusual amount of time (more than\n\
    \         2 seconds, a typical example being a wait for a subnetwork\n       \
    \  connection establishment) should subtract the entire waiting\n         time\
    \ in seconds (rounded upward) from the TTL.\n  Forward Cache Identifier: Each\
    \ datagram carries a 32 bit field, called\n         \"forward cache identifier\"\
    , that is updated (if the information\n         is available) at each hop. This\
    \ field's value is derived from\n         ICMP messages sent back by the next\
    \ hop router, a routing\n         protocol (e.g., RAP), or some other method.\
    \ The FCI is used to\n         expedite routing decisions by preserving knowledge\
    \ where\n         possible between consecutive routers. It can also be used to\n\
    \         make datagrams stay within reserved flows, circuits, and mobile\n  \
    \       host tunnels. If an FCI is not available, this field must be\n       \
    \  zero, the SAO and DAO flags must be clear, and both destination\n         and\
    \ source addresses must appear in the datagram.\n  Datagram Length: The 32-bit\
    \ length of the entire datagram in octets.\n         A datagram can therefore\
    \ be up to 4294967295 bytes in overall\n         length.  Particular networks\
    \ normally impose lower limits.\n  Transport Protocol: The transport layer protocol.\
    \ For example, TCP is\n         6.\n  Checksum: The checksum is a 16-bit checksum\
    \ of the entire header,\n         using the familiar algorithm used in IP version\
    \ 4.\n  Destination: The destination address, a count byte followed by the\n \
    \        destination NSAP with the zero selector omitted. This field is\n    \
    \     present only if the DAO flag is zero. If the count field is not\n      \
    \   3 modulo 4 (the destination is not an integral multiple of\n         32-bit\
    \ words) zero bytes are added to pad to the next multiple\n         of 32 bits.\
    \ These pad bytes are not required to be ignored:\n         routers may rely on\
    \ them being zero.\n  Source: The source address, in the same format as the destination.\n\
    \         Present only if the SAO flag is zero. The source is padded in\n    \
    \     the same way as destination to arrive at a 32-bit boundary.\n  Options:\
    \ Options may follow. They are variable length, and always\n         32-bit aligned.\
    \ If the MRO flag in the header is not set,\n         routers will usually not\
    \ look at or take action on any option,\n         regardless of the setting of\
    \ the class field.\n"
- title: Multicasting
  contents:
  - "Multicasting\n   The multicast-enable option permits multicast forwarding of\
    \ the\n   CATNIP datagram on subnetworks that directly support media layer\n \
    \  multicasting. This is a vanishing species, even in 10 Mbps Ethernet,\n   given\
    \ the increasing prevalence of switching hubs. It also (perhaps\n   more usefully)\
    \ permits a router to forward the datagram on multiple\n   paths when a multicast\
    \ routing algorithm has established such paths.\n   There is no option data.\n\
    \   Note that there is no special address space for multicasting in the\n   CATNIP.\
    \ Multicast destination addresses can be allocated anywhere by\n   any administration\
    \ or authority. This supports a number of differing\n   models of addressing.\
    \ It does require that the transport layer\n   protocol know that the destination\
    \ is multicast; this is desirable in\n   any case. (For example, the transport\
    \ will probably want to set the\n   ERS flag.)\n   On an IEEE 802.x (ISO 8802.x)\
    \ type media, the last 23 bits of the\n   address (not including the 0 selector)\
    \ are used in combination with\n   the multicast group address assigned to the\
    \ Internet to form the\n   media address when forwarding a datagram with the multicast\
    \ enable\n   option from a router to an attached network provided that the\n \
    \  datagram was not received on that network with either multicast or\n   broadcast\
    \ media addressing. A host may send a multicast datagram\n   either to the media\
    \ multicast address (the IP catenet model,) or\n   media unicast to a router which\
    \ is expected to repeat it to the\n   multicast address within the entire level\
    \ I area or to repeat copies\n   to the appropriate end systems within the area\
    \ on non-broadcast media\n   (the more general CLNP model.)\n"
- title: Network Layer Translation
  contents:
  - "Network Layer Translation\n   The objective of translation is to be able to upgrade\
    \ systems, both\n   hosts and routers, in whatever order desired by their owners.\n\
    \   Organizations must be able to upgrade any given system without\n   reconfiguration\
    \ or modification of any other, and existing hosts must\n   be able to interoperate\
    \ essentially forever. (Non-CATNIP routers will\n   probably be effectively eliminated\
    \ at some point, except where they\n   exist in their own remote or isolated corners.)\n\
    \   Each CATNIP system, whether host or router, must be able to recognize\n  \
    \ adjacent systems in the topology that are (only) IP version 4, CLNP,\n   or\
    \ IPX and call the appropriate translation routine just before\n   sending the\
    \ datagram.\n"
- title: OSI CNLP
  contents:
  - "OSI CNLP\n   The translation between CLNP and the CATNIP compressed form of the\n\
    \   datagrams is the simplest case for CATNIP, since the addresses are\n   the\
    \ same and need not be extended. The resulting CATNIP datagrams may\n   omit the\
    \ source and destination addresses as explained previously,\n   and may be mixed\
    \ with uncompressed datagrams on the same subnetwork\n   link. Alternatively,\
    \ a subnetwork may operate entirely in the CATNIP,\n   converting all transit\
    \ traffic to CATNIP datagrams, even if FCIs that\n   would make the compression\
    \ effective are not available.\n   Similarly, all network datagram formats with\
    \ CATNIP mappings may be\n   compressed into the common form, providing a uniform\
    \ transit network\n   service, with common routing protocols (such as IS-IS).\n"
- title: Internet Protocol
  contents:
  - "Internet Protocol\n   All existing version 4 numbers are defined as belonging\
    \ to the\n   Internet by using a new AFI, to be assigned to IANA by the ISO. This\n\
    \   document uses 192 at present for clarity in examples; it is to be\n   replaced\
    \ with the assigned AFI. The AFI specifies that the IDI is two\n   bytes long,\
    \ containing an administrative domain number.\n   The AD (Administrative Domain),\
    \ identifies an administration which\n   may be an international authority (such\
    \ as the existing InterNIC), a\n   national administration, or a large multi-organization\
    \ (e.g., a\n   government). The idea is that there should not be more than a few\n\
    \   hundred of these at first, and eventually thousands or tens of\n   thousands\
    \ at most.\n   AD numbers are assigned by IANA. Initially, the only assignment\
    \ is\n   the number 0.0, assigned to the InterNIC, encompassing the entire\n \
    \  existing version 4 Internet.\n   The mapping from/to version 4 IP addresses:\n\
    \      +----------+----------+---------------+---------------------+\n      |\
    \  length  |   AFI    |  IDI ...      | DSP ...             |\n      +----------+----------+---------------+---------------------+\n\
    \      |     7    |   192    |  AD number    | version 4 address   |\n      +----------+----------+---------------+---------------------+\n\
    \   While the address (DSP) is initially always the 4 byte, version 4\n   address,\
    \ it can be extended to arbitrary levels of subnetting within\n   the existing\
    \ Internet numbering plan. Hosts with DSPs longer than 4\n   bytes will not be\
    \ able to interoperate with version 4 hosts.\n"
- title: Novell IPX
  contents:
  - "Novell IPX\n   The Internetwork Packet Exchange protocol, developed by Novell\
    \ based\n   on the XNS protocol (Xerox Network System) has many of the same\n\
    \   capabilities as the Internet and OSI protocols. At first look, it\n   appears\
    \ to confuse the network and transport layers, as IPX includes\n   both the network\
    \ layer service and the user datagram service of the\n   transport layer, while\
    \ SPX (sequenced packet exchange) includes the\n   IPX network layer and provides\
    \ service similar to TCP or TP4. This\n   turns out to be mostly a matter of the\
    \ naming and ordering of fields\n   in the packets, rather than any architectural\
    \ difference.\n   IPX uses a 32-bit LAN network number, implicitly concatenated\
    \ with\n   the 48-bit MAC layer address to form an Internet address. Initially,\n\
    \   the network numbers were not assigned by any central authority, and\n   thus\
    \ were not useful for inter-organizational traffic without\n   substantial prior\
    \ arrangement. There is now an authority established\n   by Novell to assign unique\
    \ 32-bit numbers and blocks of numbers to\n   organizations that desire inter-organization\
    \ networking with the IPX\n   protocol.\n   The Novell/IPX numbering plan uses\
    \ an ICD, to be assigned, to\n   designate an address as an IPX address. This\
    \ means Novell uses the\n   authority (AFI=47)(ICD=Novell) and delegates assignments\
    \ of the\n   following 32 bits.\n   An IPX address in the common form looks like:\n\
    \      +----------+----------+---------------+---------------------+\n      |\
    \  length  |   AFI    |  IDI ...      | DSP ...             |\n      +----------+----------+---------------+---------------------+\n\
    \      |    13    | 47 (hex) |  Novell ICD   | network+MAC address |\n      +----------+----------+---------------+---------------------+\n\
    \   This will always be followed by two bytes of zero padding when it\n   appears\
    \ in a common network layer datagram. Note that the socket\n   numbers included\
    \ in the native form IPX address are part of the\n   transport layer.\n"
- title: SIPP
  contents:
  - "SIPP\n   It may seem a little odd to describe the interaction with SIPP-16\n\
    \   (version 6 of IP) which is another proposed candidate for the next\n   generation\
    \ of network layer protocols. However, if SIPP-16 is\n   deployed, whether or\
    \ not as the protocol of choice for replacement of\n   IP version 4, there will\
    \ then be four network protocols to\n   accommodate.  It is prudent to investigate\
    \ how SIPP-16 could then be\n   integrated into the common addressing plan and\
    \ datagram format.\n   SIPP-16 defines 128 bit addresses, which are included in\
    \ the NSAP\n   addressing plan under the Internet AFI as AD number 0.1. It is\
    \ not\n   clear at this time what administration will hold the authority for\n\
    \   the SIPP-16 numbering plan. This produces a 20 byte NSAPA, with the\n   system\
    \ ID field positioned exactly as expected by (e.g.) IS-IS.\n      +----------+----------+---------------+---------------------+\n\
    \      |  length  |   AFI    |  IDI ...      | DSP ...             |\n      +----------+----------+---------------+---------------------+\n\
    \      |    19    |   192    |  AD (0.1)     |   SIPP-16 address   |\n      +----------+----------+---------------+---------------------+\n\
    \   The SIPP-16 addressing method (the definition of the 128 bits) will\n   not\
    \ be described here.\n   The SIPP proposal also includes an encapsulated-tunnel\
    \ proposal\n   called IPAE, to address some of the issues that are designed into\n\
    \   CATNIP.  The CATNIP direct translation does not use the SIPP-IPAE\n   packet\
    \ formats. IPAE also specifies a \"mapping table\" for prefixes.\n   This table\
    \ is kept up-to-date by periodic FTP transfers from a\n   \"central site.\" The\
    \ CATNIP definitions leave the problem of prefix\n   selection when converting\
    \ into SIPP firmly within the scope of the\n   SIPP-IPAE proposal, and possible\
    \ methods are not described here.\n   In translating from SIPP (IPv6) to CATNIP\
    \ (IPv7), the only unusual\n   aspect is that SIPP defines some things that are\
    \ normally considered\n   options to be \"payloads\" overloaded onto the transport\
    \ protocol\n   numbering space.  Fortunately, the only one that need be considered\n\
    \   is fragmentation; a fragmented SIPP datagram may need to be\n   reassembled\
    \ prior to conversion.  Other \"payloads\" such as routing\n   are ignored (translated\
    \ verbatim) and will normally simply fail to\n   achieve the desired effect.\n\
    \   Translation to SIPP is simple, except for the difficult problem of\n   inventing\
    \ the \"prefix\" if an implementation wants to support\n   translating Internet\
    \ AD 0.0 numbers into the SIPP addressing domain.\n"
- title: Internet DNS
  contents:
  - "Internet DNS\n   CATNIP addresses are represented in the DNS with the NSAP RR.\
    \ The\n   data in the resource record is the NSAP, including the zero selector\n\
    \   at the end. The zone file syntax for the data is a string of\n   hexadecimal\
    \ digits, with a period \".\" inserted between any two octets\n   where desired\
    \ for readability. For example:\n   The inverse (PTR) zone is .NSAP.INT, with\
    \ the CATNIP address\n   (reversed).  That is, like .IN-ADDR.ARPA, but with .NSAP.INT\
    \ instead.\n   The nibbles are represented as hexadecimal digits.\n   This respects\
    \ the difference in actual authority: the IANA is the\n   authority for the entire\
    \ space rooted in .IN-ADDR.ARPA. in the\n   version 4 Internet, while in the new\
    \ Internet it holds the authority\n   only for 0.C.NSAP.INT. (Following the example\
    \ of 192 as the AFI\n   value.) The domain 0.0.0.0.0.C.NSAP.INT is to be delegated\
    \ by IANA to\n   the InterNIC. (Understanding that in present practice the InterNIC\
    \ is\n   the operator of the authoritative root.)\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   The CATNIP design permits the direct use of the present\
    \ proposals for\n   network layer security being developed in the IPSEC WG of\
    \ the IETF.\n   There are a number of detailed requirements; the most relevant\
    \ being\n   that network layer datagram translation must not affect (cannot\n\
    \   affect) the transport layers, since the TPDU is mostly inaccessible\n   to\
    \ the router. For example, the translation into IPX will only work\n   if the\
    \ port numbers are shadowed into the plaintext security header.\n"
- title: References
  contents:
  - "References\n   [Chapin93]      Chapin, L., and D. Piscitello, \"Open Systems\n\
    \                   Networking\", Addison-Wesley, Reading, Massachusetts,\n  \
    \                 1993.\n   [Perlman92]     Perlman, R., \"Interconnections: Bridges\
    \ and Routers\"\n                   Addison-Wesley, Reading, Massachusetts, 1992.\n\
    \   [RFC791]        Postel, J., Editor, \"Internet Protocol - DARPA\n        \
    \           Internet Program Protocol Specification\", STD 5, RFC\n          \
    \         791 USC/Information Sciences Institute,  September\n               \
    \    1981.\n   [RFC792]        Postel, J., Editor, \"Internet Control Message\n\
    \                   Protocol - DARPA Internet Program Protocol\n             \
    \      Specification\", STD 5, RFC 792, USC/Information\n                   Sciences\
    \ Institute, September 1981.\n   [RFC793]        Postel, J., Editor, \"Transmission\
    \ Control Protocol -\n                   DARPA Internet Program Protocol Specification,\n\
    \                   STD 7, RFC 793, USC/Information Sciences Institute,\n    \
    \               September, 1981.\n   [RFC801]        Postel, J., \"NCP/TCP Transition\
    \ Plan\", RFC 801,\n                   USC/Information Sciences Institute, November,\
    \ 1981.\n   [RFC1191]       Mogul, J., and S. Deering, \"Path MTU Discovery\"\
    ,\n                   RFC 1191, DECWRL, Stanford University, November,\n     \
    \              1990.\n   [RFC1234]       Provan, D., \"Tunneling IPX Traffic Through\
    \ IP\n                   Networks\", RFC 1234, Novell, Inc., June 1991.\n   [RFC1247]\
    \       Moy, J., \"OSPF Version 2\", RFC 1247, Proteon, Inc.,\n              \
    \     July 1991.\n   [RFC1287]       Clark, D., Chapin, L., Cerf, V., Braden,\
    \ R., and\n                   R. Hobby, \"Towards the Future Internet Architecture\"\
    ,\n                   RFC 1287, MIT, BBN, CNRI, ISI, UCDavis, December,\n    \
    \               1991.\n   [RFC1335]       Wang, Z., and J. Crowcroft, \"A Two-Tier\
    \ Address\n                   Structure for the Internet: A Solution to the\n\
    \                   Problem of Address Space Exhaustion\", RFC 1335,\n       \
    \            University College London, May 1992.\n   [RFC1338]       Fuller,\
    \ V., Li, T., Yu, J., and K. Varadhan,\n                   \"Supernetting: an\
    \ Address Assignment and Aggregation\n                   Strategy\", RFC 1338,\
    \ BAARNet, cicso, Merit, OARnet,\n                   June 1992.\n   [RFC1347]\
    \       Callon, R., \"TCP and UDP with Bigger Addresses\n                   (TUBA),\
    \ A Simple Proposal for Internet Addressing\n                   and Routing\"\
    , RFC 1347, DEC, June 1992.\n   [RFC1466]       Gerich, E., \"Guidelines for Management\
    \ of IP Address\n                   Space\", RFC 1466, Merit, May 1993.\n   [RFC1475]\
    \       Ullmann, R., \"TP/IX: The Next Internet\", RFC 1475,\n               \
    \    Process Software Corporation, June 1993.\n   [RFC1476]       Ullmann, R.,\
    \ \"RAP: Internet Route Access Protocol\",\n                   RFC 1476, Process\
    \ Software Corporation, June 1993.\n   [RFC1561]       Piscitello, D., \"Use of\
    \ ISO CLNP in TUBA\n                   Environments\", RFC 1561, Core Competence,\
    \ December\n                   1993.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael McGovern\n   Sunspot Graphics\n   EMail: scrivner@world.std.com\n\
    \   Robert Ullmann\n   Lotus Development Corporation\n   1 Rogers Street\n   Cambridge,\
    \ MA 02142\n   Phone: +1 617 693 1315\n   EMail: rullmann@crd.lotus.com\n"
