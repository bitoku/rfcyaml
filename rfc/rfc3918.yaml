- title: __initial_text__
  contents:
  - '               Methodology for IP Multicast Benchmarking

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   The purpose of this document is to describe methodology specific\
    \ to\n   the benchmarking of multicast IP forwarding devices.  It builds upon\n\
    \   the tenets set forth in RFC 2544, RFC 2432 and other IETF\n   Benchmarking\
    \ Methodology Working Group (BMWG) efforts.  This document\n   seeks to extend\
    \ these efforts to the multicast paradigm.\n   The BMWG produces two major classes\
    \ of documents: Benchmarking\n   Terminology documents and Benchmarking Methodology\
    \ documents.  The\n   Terminology documents present the benchmarks and other related\
    \ terms.\n   The Methodology documents define the procedures required to collect\n\
    \   the benchmarks cited in the corresponding Terminology documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Key Words to Reflect Requirements. . . . . . . . . .\
    \ . . . . .  3\n   3.  Test Set Up. . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  3\n       3.1.  Test Considerations. . . . . . . . . . . . . . . .\
    \ . . .  4\n             3.1.1. IGMP Support. . . . . . . . . . . . . . . . .\
    \ . .  5\n             3.1.2. Group Addresses . . . . . . . . . . . . . . . .\
    \ .  5\n             3.1.3. Frame Sizes . . . . . . . . . . . . . . . . . . .\
    \  5\n             3.1.4. TTL . . . . . . . . . . . . . . . . . . . . . . .  6\n\
    \             3.1.5. Trial Duration. . . . . . . . . . . . . . . . . .  6\n  \
    \ 4.  Forwarding and Throughput. . . . . . . . . . . . . . . . . . .  6\n    \
    \   4.1.  Mixed Class Throughput . . . . . . . . . . . . . . . . .  6\n      \
    \ 4.2.  Scaled Group Forwarding Matrix . . . . . . . . . . . . .  8\n       4.3.\
    \  Aggregated Multicast Throughput. . . . . . . . . . . . .  9\n       4.4.  Encapsulation/Decapsulation\
    \ (Tunneling) Throughput . . . 10\n             4.4.1. Encapsulation Throughput.\
    \ . . . . . . . . . . . . 10\n             4.4.2. Decapsulation Throughput. .\
    \ . . . . . . . . . . . 12\n             4.4.3. Re-encapsulation Throughput .\
    \ . . . . . . . . . . 14\n   5.  Forwarding Latency . . . . . . . . . . . . .\
    \ . . . . . . . . . 15\n       5.1.  Multicast Latency. . . . . . . . . . . .\
    \ . . . . . . . . 16\n       5.2.  Min/Max Multicast Latency. . . . . . . . .\
    \ . . . . . . . 18\n   6.  Overhead . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 19\n       6.1.  Group Join Delay . . . . . . . . . . . . . . .\
    \ . . . . . 20\n       6.2.  Group Leave Delay. . . . . . . . . . . . . . . .\
    \ . . . . 22\n   7.  Capacity . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 24\n       7.1.  Multicast Group Capacity . . . . . . . . . . . . . .\
    \ . . 24\n   8.  Interaction. . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 25\n       8.1.  Forwarding Burdened Multicast Latency. . . . . . . . . .\
    \ 25\n       8.2.  Forwarding Burdened Group Join Delay . . . . . . . . . . 27\n\
    \   9.  Security Considerations. . . . . . . . . . . . . . . . . . . . 28\n  \
    \ 10. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 28\n   11.\
    \ Contributions. . . . . . . . . . . . . . . . . . . . . . . . . 28\n   12. References\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 28\n       12.1. Normative\
    \ References . . . . . . . . . . . . . . . . . . 28\n       12.2. Informative\
    \ References . . . . . . . . . . . . . . . . . 29\n   13. Authors' Addresses .\
    \ . . . . . . . . . . . . . . . . . . . . . 30\n   14. Full Copyright Statement\
    \ . . . . . . . . . . . . . . . . . . . 31\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines tests for measuring and reporting\
    \ the\n   throughput, forwarding, latency and Internet Group Management\n   Protocol\
    \ (IGMP) group membership characteristics of devices that\n   support IP multicast\
    \ protocols.  The results of these tests will\n   provide the user with meaningful\
    \ data on multicast performance.\n   A previous document, \"Terminology for IP\
    \ Multicast Benchmarking\"\n   [Du98], defined many of the terms that are used\
    \ in this document.\n   The terminology document should be consulted before attempting\
    \ to\n   make use of this document.\n   This methodology will focus on one source\
    \ to many destinations,\n   although many of the tests described may be extended\
    \ to use multiple\n   source to multiple destination topologies.\n   Subsequent\
    \ documents may address IPv6 multicast and related multicast\n   routing protocol\
    \ performance.  Additional insight on IP and multicast\n   networking can be found\
    \ in [Hu95], [Ka98] and [Mt98].\n"
- title: 2.  Key Words to Reflect Requirements
  contents:
  - "2.  Key Words to Reflect Requirements\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [Br97].  RFC 2119 defines the use of these key words\
    \ to help make the\n   intent of standards track documents as clear as possible.\
    \  While this\n   document uses these keywords, this document is not a standards\
    \ track\n   document.\n"
- title: 3.  Test set up
  contents:
  - "3.  Test set up\n   The set of methodologies presented in this document are for\
    \ single\n   ingress, multiple egress multicast scenarios as exemplified by\n\
    \   Figures 1 and 2.  Methodologies for multiple ingress and multiple\n   egress\
    \ multicast scenarios are beyond the scope of this document.\n   Figure 1 shows\
    \ a typical setup for an IP multicast test, with one\n   source to multiple destinations.\n\
    \                     +------------+         +--------------+\n              \
    \       |            |         |  destination |\n   +--------+        |     Egress(-)------->|\
    \    test      |\n   | source |        |            |         |   port(E1)   |\n\
    \   |  test  |------>(|)Ingress    |         +--------------+\n   |  port  | \
    \       |            |         +--------------+\n   +--------+        |     Egress(-)------->|\
    \  destination |\n                     |            |         |    test      |\n\
    \                     |            |         |   port(E2)   |\n              \
    \       |    DUT     |         +--------------+\n                     |      \
    \      |               . . .\n                     |            |         +--------------+\n\
    \                     |            |         |  destination |\n              \
    \       |     Egress(-)------->|    test      |\n                     |      \
    \      |         |   port(En)   |\n                     +------------+       \
    \  +--------------+\n                          Figure 1\n   If the multicast metrics\
    \ are to be taken across multiple devices\n   forming a System Under Test (SUT),\
    \ then test frames are offered to a\n   single ingress interface on a device of\
    \ the SUT, subsequently\n   forwarded across the SUT topology, and finally forwarded\
    \ to the test\n   apparatus' frame-receiving components by the test egress interface(s)\n\
    \   of devices in the SUT.  Figure 2 offers an example SUT test topology.\n  \
    \ If a SUT is tested, the test topology and all relevant configuration\n   details\
    \ MUST be disclosed with the corresponding test results.\n               *-----------------------------------------*\n\
    \               |                                         |\n   +--------+  |\
    \                     +----------------+  |  +--------+\n   |        |  |   +------------+\
    \    |DUT B Egress E0(-)-|->|        |\n   |        |  |   |DUT A       |--->|\
    \                |  |  |        |\n   | source |  |   |            |    |    \
    \  Egress E1(-)-|->|  dest. |\n   |  test  |--|->(-)Ingress, I |    +----------------+\
    \  |  |  test  |\n   |  port  |  |   |            |    +----------------+  | \
    \ |  port  |\n   |        |  |   |            |--->|DUT C Egress E2(-)-|->|  \
    \      |\n   |        |  |   +------------+    |                |  |  |      \
    \  |\n   |        |  |                     |      Egress En(-)-|->|        |\n\
    \   +--------+  |                     +----------------+  |  +--------+\n    \
    \           |                                         |\n               *------------------SUT--------------------*\n\
    \                                Figure 2\n   Generally, the destination test\
    \ ports first join the desired number\n   of multicast groups by sending IGMP\
    \ Group Report messages to the\n   DUT/SUT.  To verify that all destination test\
    \ ports successfully\n   joined the appropriate groups, the source test port MUST\
    \ transmit IP\n   multicast frames destined for these groups.  After test completion,\n\
    \   the destination test ports MAY send IGMP Leave Group messages to\n   clear\
    \ the IGMP table of the DUT/SUT.\n   In addition, test equipment MUST validate\
    \ the correct and proper\n   forwarding actions of the devices they test in order\
    \ to ensure the\n   receipt of the frames that are involved in the test.\n"
- title: 3.1.  Test Considerations
  contents:
  - "3.1.  Test Considerations\n   The methodology assumes a uniform medium topology.\
    \  Issues regarding\n   mixed transmission media, such as speed mismatch, headers\n\
    \   differences, etc., are not specifically addressed.  Flow control, QoS\n  \
    \ and other non-essential traffic or traffic-affecting mechanisms\n   affecting\
    \ the variable under test MUST be disabled.  Modifications to\n   the collection\
    \ procedures might need to be made to accommodate the\n   transmission media actually\
    \ tested.  These accommodations MUST be\n   presented with the test results.\n\
    \   An actual flow of test traffic MAY be required to prime related\n   mechanisms,\
    \ (e.g., process RPF events, build device caches, etc.) to\n   optimally forward\
    \ subsequent traffic.  Therefore, prior to running\n   any tests that require\
    \ forwarding of multicast or unicast packets,\n   the test apparatus MUST generate\
    \ test traffic utilizing the same\n   addressing characteristics to the DUT/SUT\
    \ that will subsequently be\n   used to measure the DUT/SUT response.  The test\
    \ monitor should ensure\n   the correct forwarding of traffic by the DUT/SUT.\
    \  The priming action\n   need only be repeated to keep the associated information\
    \ current.\n   It is the intent of this memo to provide the methodology for basic\n\
    \   characterizations regarding the forwarding of multicast packets by a\n   device\
    \ or simple system of devices.  These characterizations may be\n   useful in illustrating\
    \ the impact of device architectural features\n   (e.g., message passing versus\
    \ shared memory; handling multicast\n   traffic as an exception by the general\
    \ purpose processor versus the\n   by a primary data path, etc.) in the forwarding\
    \ of multicast traffic.\n   It has been noted that the formation of the multicast\
    \ distribution\n   tree may be a significant component of multicast performance.\
    \ While\n   this component may be present in some of the measurements or\n   scenarios\
    \ presented in this memo, this memo does not seek to\n   explicitly benchmark\
    \ the formation of the multicast distribution\n   tree.  The benchmarking of the\
    \ multicast distribution tree formation\n   is left as future, more targeted work\
    \ specific to a given tree\n   formation vehicle.\n"
- title: 3.1.1.  IGMP Support
  contents:
  - "3.1.1.  IGMP Support\n   All of the ingress and egress interfaces MUST support\
    \ a version of\n   IGMP.  The IGMP version on the ingress interface MUST be the\
    \ same\n   version of IGMP that is being tested on the egress interfaces.\n  \
    \ Each of the ingress and egress interfaces SHOULD be able to respond\n   to IGMP\
    \ queries during the test.\n   Each of the ingress and egress interfaces SHOULD\
    \ also send LEAVE\n   (running IGMP version 2 or later) [Ca02] [Fe97] after each\
    \ test.\n"
- title: 3.1.2.  Group Addresses
  contents:
  - "3.1.2.  Group Addresses\n   There is no restriction to the use of multicast addresses\
    \ [De89] to\n   compose the test traffic other than those assignments imposed\
    \ by\n   IANA.  The IANA assignments for multicast addresses [IANA1] MUST be\n\
    \   regarded for operational consistency.  Address selection does not\n   need\
    \ to be restricted to Administratively Scoped IP Multicast\n   addresses [Me98].\n"
- title: 3.1.3.  Frame Sizes
  contents:
  - "3.1.3.  Frame Sizes\n   Each test SHOULD be run with different multicast frame\
    \ sizes.  For\n   Ethernet, the recommended sizes are 64, 128, 256, 512, 1024,\
    \ 1280,\n   and 1518 byte frames.\n   Other link layer technologies MAY be used.\
    \  The minimum and maximum\n   frame lengths of the link layer technology in use\
    \ SHOULD be tested.\n   When testing with different frame sizes, the DUT/SUT configuration\n\
    \   MUST remain the same.\n"
- title: 3.1.4.  TTL
  contents:
  - "3.1.4.  TTL\n   The data plane test traffic should have a TTL value large enough\
    \ to\n   traverse the DUT/SUT.\n   The TTL in IGMP control plane messages MUST\
    \ be in compliance with the\n   version of IGMP in use.\n"
- title: 3.1.5.  Trial Duration
  contents:
  - "3.1.5.  Trial Duration\n   The duration of the test portion of each trial SHOULD\
    \ be at least 30\n   seconds.  This parameter MUST be included as part of the\
    \ results\n   reporting for each methodology.\n"
- title: 4.  Forwarding and Throughput
  contents:
  - "4.  Forwarding and Throughput\n   This section contains the description of the\
    \ tests that are related\n   to the characterization of the frame forwarding of\
    \ a DUT/SUT in a\n   multicast environment.  Some metrics extend the concept of\
    \ throughput\n   presented in RFC 1242.  Forwarding Rate is cited in RFC 2285\
    \ [Ma98].\n"
- title: 4.1.  Mixed Class Throughput
  contents:
  - "4.1.  Mixed Class Throughput\n   Objective:\n   To determine the throughput of\
    \ a DUT/SUT when both unicast class\n   frames and multicast class frames are\
    \ offered simultaneously to a\n   fixed number of interfaces as defined in RFC\
    \ 2432.\n   Procedure:\n   Multicast and unicast traffic are mixed together in\
    \ the same\n   aggregated traffic stream in order to simulate a heterogeneous\n\
    \   networking environment.\n   The following events MUST occur before offering\
    \ test traffic:\n      o  All destination test ports configured to receive multicast\n\
    \         traffic MUST join all configured multicast groups;\n      o  The DUT/SUT\
    \ MUST learn the appropriate unicast and\n         multicast addresses; and\n\
    \      o  Group membership and unicast address learning MUST be\n         verified\
    \ through some externally observable method.\n   The intended load [Ma98] SHOULD\
    \ be configured as alternating\n   multicast class frames and unicast class frames\
    \ to a single ingress\n   interface.  The unicast class frames MUST be configured\
    \ to transmit\n   in an unweighted round-robin fashion to all of the destination\
    \ ports.\n   For example, with six multicast groups and 3 destination ports with\n\
    \   one unicast addresses per port, the source test port will offer\n   frames\
    \ in the following order:\n      m1  u1  m2  u2  m3  u3  m4  u1  m5  u2  m6  u3\
    \  m1 ...\n      Where:\n      m<Number> = Multicast Frame<Group>\n      u<Number>\
    \ = Unicast Frame<Target Port>\n   Mixed class throughput measurement is defined\
    \ in RFC 2432 [Du98].  A\n   search algorithm MUST be utilized to determine the\
    \ Mixed Class\n   Throughput.  The ratio of unicast to multicast frames MUST remain\
    \ the\n   same when varying the intended load.\n   Reporting Format:\n   The following\
    \ configuration parameters MUST be reflected in the test\n   report:\n      o\
    \  Frame size(s)\n      o  Number of tested egress interfaces on the DUT/SUT\n\
    \      o  Test duration\n      o  IGMP version\n      o  Total number of multicast\
    \ groups\n      o  Traffic distribution for unicast and multicast traffic\n  \
    \       classes\n      o  The ratio of multicast to unicast class traffic\n  \
    \ The following results MUST be reflected in the test report:\n      o  Mixed\
    \ Class Throughput as defined in RFC 2432 [Du98],\n         including: Throughput\
    \ per unicast and multicast traffic\n         classes.\n   The Mixed Class Throughput\
    \ results for each test SHOULD be reported\n   in the form of a table with a row\
    \ for each of the tested frame sizes\n   per the recommendations in section 3.1.3.\
    \  Each row SHOULD specify\n   the intended load, number of multicast frames offered,\
    \ number of\n   unicast frames offered and measured throughput per class.\n"
- title: 4.2.  Scaled Group Forwarding Matrix
  contents:
  - "4.2.  Scaled Group Forwarding Matrix\n   Objective:\n   To determine Forwarding\
    \ Rate as a function of tested multicast groups\n   for a fixed number of tested\
    \ DUT/SUT ports.\n   Procedure:\n   This is an iterative procedure.  The destination\
    \ test port(s) MUST\n   join an initial number of multicast groups on the first\
    \ iteration.\n   All destination test ports configured to receive multicast traffic\n\
    \   MUST join all configured multicast groups.  The recommended number of\n  \
    \ groups to join on the first iteration is 10 groups.  Multicast\n   traffic is\
    \ subsequently transmitted to all groups joined on this\n   iteration and the\
    \ forwarding rate is measured.\n   The number of multicast groups joined by each\
    \ destination test port\n   is then incremented, or scaled, by an additional number\
    \ of multicast\n   groups.  The recommended granularity of additional groups to\
    \ join per\n   iteration is 10, although the tester MAY choose a finer granularity.\n\
    \   Multicast traffic is subsequently transmitted to all groups joined\n   during\
    \ this iteration and the forwarding rate is measured.\n   The total number of\
    \ multicast groups joined MUST not exceed the\n   multicast group capacity of\
    \ the DUT/SUT.  The Group Capacity (Section\n   7.1) results MUST be known prior\
    \ to running this test.\n   Reporting Format:\n   The following configuration\
    \ parameters MUST be reflected in the test\n   report:\n      o  Frame size(s)\n\
    \      o  Number of tested egress interfaces on the DUT/SUT\n      o  Test duration\n\
    \      o  IGMP version\n   The following results MUST be reflected in the test\
    \ report:\n      o  The total number of multicast groups joined for that\n   \
    \      iteration\n      o  Forwarding rate determined for that iteration\n   The\
    \ Scaled Group Forwarding results for each test SHOULD be reported\n   in the\
    \ form of a table with a row representing each iteration of the\n   test.  Each\
    \ row or iteration SHOULD specify the total number of\n   groups joined for that\
    \ iteration, offered load, total number of\n   frames transmitted, total number\
    \ of frames received and the aggregate\n   forwarding rate determined for that\
    \ iteration.\n"
- title: 4.3.  Aggregated Multicast Throughput
  contents:
  - "4.3.  Aggregated Multicast Throughput\n   Objective:\n   To determine the maximum\
    \ rate at which none of the offered frames to\n   be forwarded through N destination\
    \ interfaces of the same multicast\n   groups are dropped.\n   Procedure:\n  \
    \ Offer multicast traffic at an initial maximum offered load to a fixed\n   set\
    \ of interfaces with a fixed number of groups at a fixed frame\n   length for\
    \ a fixed duration of time.  All destination test ports MUST\n   join all specified\
    \ multicast groups.\n   If any frame loss is detected, the offered load is decreased\
    \ and the\n   sender will transmit again.  An iterative search algorithm MUST\
    \ be\n   utilized to determine the maximum offered frame rate with a zero\n  \
    \ frame loss.\n   Each iteration will involve varying the offered load of the\
    \ multicast\n   traffic, while keeping the set of interfaces, number of multicast\n\
    \   groups, frame length and test duration fixed, until the maximum rate\n   at\
    \ which none of the offered frames are dropped is determined.\n   Parameters to\
    \ be measured MUST include the maximum offered load at\n   which no frame loss\
    \ occurred.  Other offered loads MAY be measured\n   for diagnostic purposes.\n\
    \   Reporting Format:\n   The following configuration parameters MUST be reflected\
    \ in the test\n   report:\n      o  Frame size(s)\n      o  Number of tested egress\
    \ interfaces on the DUT/SUT\n      o  Test duration\n      o  IGMP version\n \
    \     o  Total number of multicast groups\n   The following results MUST be reflected\
    \ in the test report:\n      o  Aggregated Multicast Throughput as defined in\
    \ RFC 2432\n         [Du98]\n   The Aggregated Multicast Throughput results SHOULD\
    \ be reported in the\n   format of a table with a row for each of the tested frame\
    \ sizes per\n   the recommendations in section 3.1.3.  Each row or iteration SHOULD\n\
    \   specify offered load, total number of offered frames and the measured\n  \
    \ Aggregated Multicast Throughput.\n"
- title: 4.4.  Encapsulation/Decapsulation (Tunneling) Throughput
  contents:
  - "4.4.  Encapsulation/Decapsulation (Tunneling) Throughput\n   This sub-section\
    \ provides the description of tests related to the\n   determination of throughput\
    \ measurements when a DUT/SUT or a set of\n   DUTs are acting as tunnel endpoints.\n\
    \   For this specific testing scenario, encapsulation or tunneling refers\n  \
    \ to a packet that contains an unsupported protocol feature in a format\n   that\
    \ is supported by the DUT/SUT.\n"
- title: 4.4.1.  Encapsulation Throughput
  contents:
  - "4.4.1.  Encapsulation Throughput\n   Objective:\n   To determine the maximum\
    \ rate at which frames offered to one ingress\n   interface of a DUT/SUT are encapsulated\
    \ and correctly forwarded on\n   one or more egress interfaces of the DUT/SUT\
    \ without loss.\n   Procedure:\n     Source              DUT/SUT             \
    \   Destination\n    Test Port                                   Test Port(s)\n\
    \   +---------+        +-----------+             +---------+\n   |         | \
    \       |           |             |         |\n   |         |        |     Egress|--(Tunnel)-->|\
    \         |\n   |         |        |           |             |         |\n   |\
    \         |------->|Ingress    |             |         |\n   |         |     \
    \   |           |             |         |\n   |         |        |     Egress|--(Tunnel)-->|\
    \         |\n   |         |        |           |             |         |\n   +---------+\
    \        +-----------+             +---------+\n                         Figure\
    \ 3\n   Figure 3 shows the setup for testing the encapsulation throughput of\n\
    \   the DUT/SUT.  One or more tunnels are created between each egress\n   interface\
    \ of the DUT/SUT and a destination test port.  Non-\n   Encapsulated multicast\
    \ traffic will then be offered by the source\n   test port, encapsulated by the\
    \ DUT/SUT and forwarded to the\n   destination test port(s).\n   The DUT/SUT SHOULD\
    \ be configured such that the traffic across each\n   egress interface will consist\
    \ of either:\n      a) A single tunnel encapsulating one or more multicast address\n\
    \         groups OR\n      b) Multiple tunnels, each encapsulating one or more\
    \ multicast\n         address groups.\n   The number of multicast groups per tunnel\
    \ MUST be the same when the\n   DUT/SUT is configured in a multiple tunnel configuration.\
    \  In\n   addition, it is RECOMMENDED to test with the same number of tunnels\n\
    \   on each egress interface.  All destination test ports MUST join all\n   multicast\
    \ group addresses offered by the source test port.  Each\n   egress interface\
    \ MUST be configured with the same MTU.\n   Note: when offering large frames sizes,\
    \ the encapsulation process may\n   require the DUT/SUT to fragment the IP datagrams\
    \ prior to being\n   forwarded on the egress interface.  It is RECOMMENDED to\
    \ limit the\n   offered frame size such that no fragmentation is required by the\n\
    \   DUT/SUT.\n   A search algorithm MUST be utilized to determine the encapsulation\n\
    \   throughput as defined in [Du98].\n   Reporting Format:\n   The following configuration\
    \ parameters MUST be reflected in the test\n   report:\n      o  Number of tested\
    \ egress interfaces on the DUT/SUT\n      o  Test duration\n      o  IGMP version\n\
    \      o  Total number of multicast groups\n      o  MTU size of DUT/SUT interfaces\n\
    \      o  Originating un-encapsulated frame size\n      o  Number of tunnels per\
    \ egress interface\n      o  Number of multicast groups per tunnel\n      o  Encapsulation\
    \ algorithm or format used to tunnel the\n         packets\n   The following results\
    \ MUST be reflected in the test report:\n      o  Measured Encapsulated Throughput\
    \ as defined in RFC 2432\n         [Du98]\n      o  Encapsulated frame size\n\
    \   The Encapsulated Throughput results SHOULD be reported in the form of\n  \
    \ a table and specific to this test there SHOULD be rows for each\n   originating\
    \ un-encapsulated frame size.  Each row or iteration SHOULD\n   specify the offered\
    \ load, encapsulation method, encapsulated frame\n   size, total number of offered\
    \ frames, and the encapsulation\n   throughput.\n"
- title: 4.4.2.  Decapsulation Throughput
  contents:
  - "4.4.2.  Decapsulation Throughput\n   Objective:\n   To determine the maximum\
    \ rate at which frames offered to one ingress\n   interface of a DUT/SUT are decapsulated\
    \ and correctly forwarded by\n   the DUT/SUT on one or more egress interfaces\
    \ without loss.\n   Procedure:\n     Source                  DUT/SUT         \
    \   Destination\n    Test Port                                   Test Port(s)\n\
    \   +---------+             +-----------+        +---------+\n   |         | \
    \            |           |        |         |\n   |         |             |  \
    \   Egress|------->|         |\n   |         |             |           |     \
    \   |         |\n   |         |--(Tunnel)-->|Ingress    |        |         |\n\
    \   |         |             |           |        |         |\n   |         | \
    \            |     Egress|------->|         |\n   |         |             |  \
    \         |        |         |\n   +---------+             +-----------+     \
    \   +---------+\n                             Figure 4\n   Figure 4 shows the\
    \ setup for testing the decapsulation throughput of\n   the DUT/SUT.  One or more\
    \ tunnels are created between the source test\n   port and the DUT/SUT.  Encapsulated\
    \ multicast traffic will then be\n   offered by the source test port, decapsulated\
    \ by the DUT/SUT and\n   forwarded to the destination test port(s).\n   The DUT/SUT\
    \ SHOULD be configured such that the traffic across the\n   ingress interface\
    \ will consist of either:\n      a) A single tunnel encapsulating one or more\
    \ multicast address\n         groups OR\n      b) Multiple tunnels, each encapsulating\
    \ one or more multicast\n         address groups.\n   The number of multicast\
    \ groups per tunnel MUST be the same when the\n   DUT/SUT is configured in a multiple\
    \ tunnel configuration.  All\n   destination test ports MUST join all multicast\
    \ group addresses\n   offered by the source test port.  Each egress interface\
    \ MUST be\n   configured with the same MTU.\n   A search algorithm MUST be utilized\
    \ to determine the decapsulation\n   throughput as defined in [Du98].\n   When\
    \ making performance comparisons between the encapsulation and\n   decapsulation\
    \ process of the DUT/SUT, the offered frame sizes SHOULD\n   reflect the encapsulated\
    \ frame sizes reported in the encapsulation\n   test (See section 4.4.1) in place\
    \ of those noted in section 3.1.3.\n   Reporting Format:\n   The following configuration\
    \ parameters MUST be reflected in the test\n   report:\n      o  Number of tested\
    \ egress interfaces on the DUT/SUT\n      o  Test duration\n      o  IGMP version\n\
    \      o  Total number of multicast groups\n      o  Originating encapsulation\
    \ algorithm or format used to\n         tunnel the packets\n      o  Originating\
    \ encapsulated frame size\n      o  Number of tunnels\n      o  Number of multicast\
    \ groups per tunnel\n   The following results MUST be reflected in the test report:\n\
    \      o  Measured Decapsulated Throughput as defined in RFC 2432\n         [Du98]\n\
    \      o  Decapsulated frame size\n   The Decapsulated Throughput results SHOULD\
    \ be reported in the format\n   of a table and specific to this test there SHOULD\
    \ be rows for each\n   originating encapsulated frame size.  Each row or iteration\
    \ SHOULD\n   specify the offered load, decapsulated frame size, total number of\n\
    \   offered frames and the decapsulation throughput.\n"
- title: 4.4.3.  Re-encapsulation Throughput
  contents:
  - "4.4.3.  Re-encapsulation Throughput\n   Objective:\n   To determine the maximum\
    \ rate at which frames of one encapsulated\n   format offered to one ingress interface\
    \ of a DUT/SUT are converted to\n   another encapsulated format and correctly\
    \ forwarded by the DUT/SUT on\n   one or more egress interfaces without loss.\n\
    \   Procedure:\n     Source                DUT/SUT             Destination\n \
    \   Test Port                                  Test Port(s)\n   +---------+  \
    \         +---------+           +---------+\n   |         |           |      \
    \   |           |         |\n   |         |           |   Egress|-(Tunnel)->|\
    \         |\n   |         |           |         |           |         |\n   |\
    \         |-(Tunnel)->|Ingress  |           |         |\n   |         |      \
    \     |         |           |         |\n   |         |           |   Egress|-(Tunnel)->|\
    \         |\n   |         |           |         |           |         |\n   +---------+\
    \           +---------+           +---------+\n                          Figure\
    \ 5\n   Figure 5 shows the setup for testing the Re-encapsulation throughput\n\
    \   of the DUT/SUT.  The source test port will offer encapsulated traffic\n  \
    \ of one type to the DUT/SUT, which has been configured to re-\n   encapsulate\
    \ the offered frames using a different encapsulation\n   format.  The DUT/SUT\
    \ will then forward the re-encapsulated frames to\n   the destination test port(s).\n\
    \   The DUT/SUT SHOULD be configured such that the traffic across the\n   ingress\
    \ and each egress interface will consist of either:\n      a) A single tunnel\
    \ encapsulating one or more multicast address\n         groups OR\n      b) Multiple\
    \ tunnels, each encapsulating one or more multicast\n         address groups.\n\
    \   The number of multicast groups per tunnel MUST be the same when the\n   DUT/SUT\
    \ is configured in a multiple tunnel configuration.  In\n   addition, the DUT/SUT\
    \ SHOULD be configured such that the number of\n   tunnels on the ingress and\
    \ each egress interface are the same.  All\n   destination test ports MUST join\
    \ all multicast group addresses\n   offered by the source test port.  Each egress\
    \ interface MUST be\n   configured with the same MTU.\n   Note that when offering\
    \ large frames sizes, the encapsulation process\n   may require the DUT/SUT to\
    \ fragment the IP datagrams prior to being\n   forwarded on the egress interface.\
    \  It is RECOMMENDED to limit the\n   offered frame sizes, such that no fragmentation\
    \ is required by the\n   DUT/SUT.\n   A search algorithm MUST be utilized to determine\
    \ the re-encapsulation\n   throughput as defined in [Du98].\n   Reporting Format:\n\
    \   The following configuration parameters MUST be reflected in the test\n   report:\n\
    \      o  Number of tested egress interfaces on the DUT/SUT\n      o  Test duration\n\
    \      o  IGMP version\n      o  Total number of multicast groups\n      o  MTU\
    \ size of DUT/SUT interfaces\n      o  Originating encapsulation algorithm or\
    \ format used to\n         tunnel the packets\n      o  Re-encapsulation algorithm\
    \ or format used to tunnel the\n         packets\n      o  Originating encapsulated\
    \ frame size\n      o  Number of tunnels per interface\n      o  Number of multicast\
    \ groups per tunnel\n   The following results MUST be reflected in the test report:\n\
    \      o  Measured Re-encapsulated Throughput as defined in RFC 2432\n       \
    \  [Du98]\n      o  Re-encapsulated frame size\n   The Re-encapsulated Throughput\
    \ results SHOULD be reported in the\n   format of a table and specific to this\
    \ test there SHOULD be rows for\n   each originating encapsulated frame size.\
    \  Each row or iteration\n   SHOULD specify the offered load, Re-encapsulated\
    \ frame size, total\n   number of offered frames, and the Re-encapsulated Throughput.\n"
- title: 5.  Forwarding Latency
  contents:
  - "5.  Forwarding Latency\n   This section presents methodologies relating to the\
    \ characterization\n   of the forwarding latency of a DUT/SUT in a multicast environment.\n\
    \   It extends the concept of latency characterization presented in RFC\n   2544.\n\
    \   The offered load accompanying the latency-measured packet can affect\n   the\
    \ DUT/SUT packet buffering, which may subsequently impact measured\n   packet\
    \ latency.  This SHOULD be a consideration when selecting the\n   intended load\
    \ for the described methodologies below.\n   RFC 1242 and RFC 2544 draw a distinction\
    \ between device types: \"store\n   and forward\" and \"bit-forwarding.\"  Each\
    \ type impacts how latency is\n   collected and subsequently presented.  See the\
    \ related RFCs for more\n   information.\n"
- title: 5.1.  Multicast Latency
  contents:
  - "5.1.  Multicast Latency\n   Objective:\n   To produce a set of multicast latency\
    \ measurements from a single,\n   multicast ingress interface of a DUT/SUT through\
    \ multiple, egress\n   multicast interfaces of that same DUT/SUT as provided for\
    \ by the\n   metric \"Multicast Latency\" in RFC 2432 [Du98].\n   The procedures\
    \ below draw from the collection methodology for latency\n   in RFC 2544 [Br96].\
    \  The methodology addresses two topological\n   scenarios: one for a single device\
    \ (DUT) characterization; a second\n   scenario is presented or multiple device\
    \ (SUT) characterization.\n   Procedure:\n   If the test trial is to characterize\
    \ latency across a single Device\n   Under Test (DUT), an example test topology\
    \ might take the form of\n   Figure 1 in section 3.  That is, a single DUT with\
    \ one ingress\n   interface receiving the multicast test traffic from frame-\n\
    \   transmitting component of the test apparatus and n egress interfaces\n   on\
    \ the same DUT forwarding the multicast test traffic back to the\n   frame-receiving\
    \ component of the test apparatus.  Note that n\n   reflects the number of TESTED\
    \ egress interfaces on the DUT actually\n   expected to forward the test traffic\
    \ (as opposed to configured but\n   untested, non-forwarding interfaces, for example).\n\
    \   If the multicast latencies are to be taken across multiple devices\n   forming\
    \ a System Under Test (SUT), an example test topology might\n   take the form\
    \ of Figure 2 in section 3.\n   The trial duration SHOULD be 120 seconds to be\
    \ consistent with RFC\n   2544 [Br96].  The nature of the latency measurement,\
    \ \"store and\n   forward\" or \"bit forwarding\", MUST be associated with the\
    \ related\n   test trial(s) and disclosed in the results report.\n   A test traffic\
    \ stream is presented to the DUT.  It is RECOMMENDED to\n   offer traffic at the\
    \ measured aggregated multicast throughput rate\n   (Section 4.3).  At the mid-point\
    \ of the trial's duration, the test\n   apparatus MUST inject a uniquely identifiable\
    \ (\"tagged\") frame into\n   the test traffic frames being presented.  This tagged\
    \ frame will be\n   the basis for the latency measurements.  By \"uniquely identifiable\"\
    ,\n   it is meant that the test apparatus MUST be able to discern the\n   \"tagged\"\
    \ frame from the other frames comprising the test traffic set.\n   A frame generation\
    \ timestamp, Timestamp A, reflecting the completion\n   of the transmission of\
    \ the tagged frame by the test apparatus, MUST\n   be determined.\n   The test\
    \ apparatus will monitor frames from the DUT's tested egress\n   interface(s)\
    \ for the expected tagged frame(s) and MUST record the\n   time of the successful\
    \ detection of a tagged frame from a tested\n   egress interface with a timestamp,\
    \ Timestamp B.  A set of Timestamp B\n   values MUST be collected for all tested\
    \ egress interfaces of the\n   DUT/SUT.  See RFC 1242 [Br91] for additional discussion\
    \ regarding\n   store and forward devices and bit forwarding devices.\n   A trial\
    \ MUST be considered INVALID should any of the following\n   conditions occur\
    \ in the collection of the trial data:\n      o  Unexpected differences between\
    \ Intended Load and Offered\n         Load or unexpected differences between Offered\
    \ Load and the\n         resulting Forwarding Rate(s) on the DUT/SUT egress ports.\n\
    \      o  Forwarded test frames improperly formed or frame header\n         fields\
    \ improperly manipulated.\n      o  Failure to forward required tagged frame(s)\
    \ on all expected\n         egress interfaces.\n      o  Reception of tagged frames\
    \ by the test apparatus more than\n         5 seconds after the cessation of test\
    \ traffic by the source\n         test port.\n   The set of latency measurements,\
    \ M, composed from each latency\n   measurement taken from every ingress/tested\
    \ egress interface pairing\n   MUST be determined from a valid test trial:\n \
    \     M = { (Timestamp B(E0) - Timestamp A),\n            (Timestamp B(E1) - Timestamp\
    \ A), ...\n            (Timestamp B(En) - Timestamp A) }\n   where (E0 ... En)\
    \ represents the range of all tested egress\n   interfaces and Timestamp B represents\
    \ a tagged frame detection event\n   for a given DUT/SUT tested egress interface.\n\
    \   A more continuous profile MAY be built from a series of individual\n   measurements.\n\
    \   Reporting Format:\n   The following configuration parameters MUST be reflected\
    \ in the test\n   report:\n      o  Frame size(s)\n      o  Number of tested egress\
    \ interfaces on the DUT/SUT\n      o  Test duration\n      o  IGMP version\n \
    \     o  Offered load\n      o  Total number of multicast groups\n   The following\
    \ results MUST be reflected in the test report:\n      o  The set of all latencies\
    \ with respective time units related\n         to the tested ingress and each\
    \ tested egress DUT/SUT\n         interface.\n   The time units of the presented\
    \ latency MUST be uniform and with\n   sufficient precision for the medium or\
    \ media being tested.\n   The results MAY be offered in a tabular format and should\
    \ preserve\n   the relationship of latency to ingress/egress interface for each\n\
    \   multicast group to assist in trending across multiple trials.\n"
- title: 5.2.  Min/Max Multicast Latency
  contents:
  - "5.2.  Min/Max Multicast Latency\n   Objective:\n   To determine the difference\
    \ between the maximum latency measurement\n   and the minimum latency measurement\
    \ from a collected set of latencies\n   produced by the Multicast Latency benchmark.\n\
    \   Procedure:\n   Collect a set of multicast latency measurements over a single\
    \ test\n   duration, as prescribed in section 5.1.  This will produce a set of\n\
    \   multicast latencies, M, where M is composed of individual forwarding\n   latencies\
    \ between DUT frame ingress and DUT frame egress port pairs.\n   E.g.:\n     \
    \ M = {L(I,E1),L(I,E2), ..., L(I,En)}\n   where L is the latency between a tested\
    \ ingress interface, I, of the\n   DUT, and Ex a specific, tested multicast egress\
    \ interface of the DUT.\n   E1 through En are unique egress interfaces on the\
    \ DUT.\n   From the collected multicast latency measurements in set M, identify\n\
    \   MAX(M), where MAX is a function that yields the largest latency value\n  \
    \ from set M.\n   Identify MIN(M), when MIN is a function that yields the smallest\n\
    \   latency value from set M.\n   The Max/Min value is determined from the following\
    \ formula:\n      Result = MAX(M) - MIN(M)\n   Reporting Format:\n   The following\
    \ configuration parameters MUST be reflected in the test\n   report:\n      o\
    \  Frame size(s)\n      o  Number of tested egress interfaces on the DUT/SUT\n\
    \      o  Test duration\n      o  IGMP version\n      o  Offered load\n      o\
    \  Total number of multicast groups\n   The following results MUST be reflected\
    \ in the test report:\n      o  The Max/Min value\n   The following results SHOULD\
    \ be reflected in the test report:\n      o  The set of all latencies with respective\
    \ time units related\n         to the tested ingress and each tested egress DUT/SUT\n\
    \         interface.\n   The time units of the presented latency MUST be uniform\
    \ and with\n   sufficient precision for the medium or media being tested.\n  \
    \ The results MAY be offered in a tabular format and should preserve\n   the relationship\
    \ of latency to ingress/egress interface for each\n   multicast group.\n"
- title: 6.  Overhead
  contents:
  - "6.  Overhead\n   This section presents methodology relating to the characterization\
    \ of\n   the overhead delays associated with explicit operations found in\n  \
    \ multicast environments.\n"
- title: 6.1.  Group Join Delay
  contents:
  - "6.1.  Group Join Delay\n   Objective:\n   To determine the time duration it takes\
    \ a DUT/SUT to start forwarding\n   multicast frames from the time a successful\
    \ IGMP group membership\n   report has been issued to the DUT/SUT.\n   Procedure:\n\
    \   The Multicast Group Join Delay measurement may be influenced by the\n   state\
    \ of the Multicast Forwarding Database <MFDB> of the DUT/SUT. The\n   states of\
    \ the MFDB may be described as follows:\n      o  State 0, where the MFDB does\
    \ not contain the specified\n         multicast group address.  In this state,\
    \ the delay measurement\n         includes the time the DUT/SUT requires to add\
    \ the address to\n         the MFDB and begin forwarding.   Delay measured from\
    \ State 0\n         provides information about how the DUT/SUT is able to add\
    \ new\n         addresses into MFDB.\n      o  State 1, where the MFDB does contain\
    \ the specified multicast\n         group address.  In this state, the delay measurement\
    \ includes\n         the time the DUT/SUT requires to update the MFDB with the\n\
    \         newly joined node<s> and begin forwarding to the new node<s>\n     \
    \    plus packet replication time.  Delay measured from State 1\n         provides\
    \ information about how well the DUT/SUT is able to\n         update the MFDB\
    \ for new nodes while transmitting packets to\n         other nodes for the same\
    \ IP multicast address.  Examples\n         include adding a new user to an event\
    \ that is being promoted\n         via multicast packets.\n   The methodology\
    \ for the Multicast Group Join Delay measurement\n   provides two alternate methods,\
    \ based on the state of the MFDB, to\n   measure the delay metric.  The methods\
    \ MAY be used independently or\n   in conjunction to provide meaningful insight\
    \ into the DUT/SUT ability\n   to manage the MFDB.\n   Users MAY elect to use\
    \ either method to determine the Multicast Group\n   Join Delay; however the collection\
    \ method MUST be specified as part\n   of the reporting format.\n   In order to\
    \ minimize the variation in delay calculations as well as\n   minimize burden\
    \ on the DUT/SUT, the test SHOULD be performed with one\n   multicast group. \
    \ In addition, all destination test ports MUST join\n   the specified multicast\
    \ group offered to the ingress interface of the\n   DUT/SUT.\n   Method A:\n \
    \  Method A assumes that the Multicast Forwarding Database <MFDB> of the\n   DUT/SUT\
    \ does not contain or has not learned the specified multicast\n   group address;\
    \ specifically, the MFDB MUST be in State 0. In this\n   scenario, the metric\
    \ represents the time the DUT/SUT takes to add the\n   multicast address to the\
    \ MFDB and begin forwarding the multicast\n   packet.  Only one ingress and one\
    \ egress MUST be used to determine\n   this metric.\n   Prior to sending any IGMP\
    \ Group Membership Reports used to calculate\n   the Multicast Group Join Delay,\
    \ it MUST be verified through\n   externally observable means that the destination\
    \ test port is not\n   currently a member of the specified multicast group.  In\
    \ addition, it\n   MUST be verified through externally observable means that the\
    \ MFDB of\n   the DUT/SUT does not contain the specified multicast address.\n\
    \   Method B:\n   Method B assumes that the MFDB of the DUT/SUT does contain the\n\
    \   specified multicast group address; specifically, the MFDB MUST be in\n   State\
    \ 1.  In this scenario, the metric represents the time the\n   DUT/SUT takes to\
    \ update the MFDB with the additional nodes and their\n   corresponding interfaces\
    \ and to begin forwarding the multicast\n   packet.  One or more egress ports\
    \ MAY be used to determine this\n   metric.\n   Prior to sending any IGMP Group\
    \ Membership Reports used to calculate\n   the Group Join Delay, it MUST be verified\
    \ through externally\n   observable means that the MFDB contains the specified\
    \ multicast group\n   address.  A single un-instrumented test port MUST be used\
    \ to join the\n   specified multicast group address prior to sending any test\
    \ traffic.\n   This port will be used only for insuring that the MFDB has been\n\
    \   populated with the specified multicast group address and can\n   successfully\
    \ forward traffic to the un-instrumented port.\n   Join Delay Calculation\n  \
    \ Once verification is complete, multicast traffic for the specified\n   multicast\
    \ group address MUST be offered to the ingress interface\n   prior to the DUT/SUT\
    \ receiving any IGMP Group Membership Report\n   messages.  It is RECOMMENDED\
    \ to offer traffic at the measured\n   aggregated multicast throughput rate (Section\
    \ 4.3).\n   After the multicast traffic has been started, the destination test\n\
    \   port (See Figure 1) MUST send one IGMP Group Membership Report for\n   the\
    \ specified multicast group.\n   The join delay is the difference in time from\
    \ when the IGMP Group\n   Membership message is sent (timestamp A) and the first\
    \ frame of the\n   multicast group is forwarded to a receiving egress interface\n\
    \   (timestamp B).\n      Group Join delay time = timestamp B - timestamp A\n\
    \   Timestamp A MUST be the time the last bit of the IGMP group\n   membership\
    \ report is sent from the destination test port; timestamp B\n   MUST be the time\
    \ the first bit of the first valid multicast frame is\n   forwarded on the egress\
    \ interface of the DUT/SUT.\n   Reporting Format:\n   The following configuration\
    \ parameters MUST be reflected in the test\n   report:\n      o  Frame size(s)\n\
    \      o  Number of tested egress interfaces on the DUT/SUT\n      o  IGMP version\n\
    \      o  Total number of multicast groups\n      o  Offered load to ingress interface\n\
    \      o  Method used to measure the join delay metric\n   The following results\
    \ MUST be reflected in the test report:\n      o  The group join delay time in\
    \ microseconds per egress\n         interface(s)\n   The Group Join Delay results\
    \ for each test MAY be reported in the\n   form of a table, with a row for each\
    \ of the tested frame sizes per\n   the recommendations in section 3.1.3.  Each\
    \ row or iteration MAY\n   specify the group join delay time per egress interface\
    \ for that\n   iteration.\n"
- title: 6.2.  Group Leave Delay
  contents:
  - "6.2.  Group Leave Delay\n   Objective:\n   To determine the time duration it\
    \ takes a DUT/SUT to cease forwarding\n   multicast frames after a corresponding\
    \ IGMP Leave Group message has\n   been successfully offered to the DUT/SUT.\n\
    \   Procedure:\n   In order to minimize the variation in delay calculations as\
    \ well as\n   minimize burden on the DUT/SUT, the test SHOULD be performed with\
    \ one\n   multicast group.  In addition, all destination test ports MUST join\n\
    \   the specified multicast group offered to the ingress interface of the\n  \
    \ DUT/SUT.\n   Prior to sending any IGMP Leave Group messages used to calculate\
    \ the\n   group leave delay, it MUST be verified through externally observable\n\
    \   means that the destination test ports are currently members of the\n   specified\
    \ multicast group.  If any of the egress interfaces do not\n   forward validation\
    \ multicast frames then the test is invalid.\n   Once verification is complete,\
    \ multicast traffic for the specified\n   multicast group address MUST be offered\
    \ to the ingress interface\n   prior to receipt or processing of any IGMP Leave\
    \ Group messages. It\n   is RECOMMENDED to offer traffic at the measured aggregated\
    \ multicast\n   throughput rate (Section 4.3).\n   After the multicast traffic\
    \ has been started, each destination test\n   port (See Figure 1) MUST send one\
    \ IGMP Leave Group message for the\n   specified multicast group.\n   The leave\
    \ delay is the difference in time from when the IGMP Leave\n   Group message is\
    \ sent (timestamp A) and the last frame of the\n   multicast group is forwarded\
    \ to a receiving egress interface\n   (timestamp B).\n           Group Leave delay\
    \ time = timestamp B - timestamp A\n   Timestamp A MUST be the time the last bit\
    \ of the IGMP Leave Group\n   message is sent from the destination test port;\
    \ timestamp B MUST be\n   the time the last bit of the last valid multicast frame\
    \ is forwarded\n   on the egress interface of the DUT/SUT.\n   Reporting Format:\n\
    \   The following configuration parameters MUST be reflected in the test\n   report:\n\
    \      o  Frame size(s)\n      o  Number of tested egress interfaces on the DUT/SUT\n\
    \      o  IGMP version\n      o  Total number of multicast groups\n      o  Offered\
    \ load to ingress interface\n   The following results MUST be reflected in the\
    \ test report:\n      o  The group leave delay time in microseconds per egress\n\
    \         interface(s)\n   The Group Leave Delay results for each test MAY be\
    \ reported in the\n   form of a table, with a row for each of the tested frame\
    \ sizes per\n   the recommendations in section 3.1.3.  Each row or iteration MAY\n\
    \   specify the group leave delay time per egress interface for that\n   iteration.\n"
- title: 7.  Capacity
  contents:
  - "7.  Capacity\n   This section offers a procedure relating to the identification\
    \ of\n   multicast group limits of a DUT/SUT.\n"
- title: 7.1.  Multicast Group Capacity
  contents:
  - "7.1.  Multicast Group Capacity\n   Objective:\n   To determine the maximum number\
    \ of multicast groups a DUT/SUT can\n   support while maintaining the ability\
    \ to forward multicast frames to\n   all multicast groups registered to that DUT/SUT.\n\
    \   Procedure:\n   One or more destination test ports of DUT/SUT will join an\
    \ initial\n   number of multicast groups.\n   After a minimum delay as measured\
    \ by section 6.1, the source test\n   ports MUST transmit to each group at a specified\
    \ offered load.\n   If at least one frame for each multicast group is forwarded\
    \ properly\n   by the DUT/SUT on each participating egress interface, the iteration\n\
    \   is said to pass at the current capacity.\n   For each successful iteration,\
    \ each destination test port will join\n   an additional user-defined number of\
    \ multicast groups and the test\n   repeats.  The test stops iterating when one\
    \ or more of the egress\n   interfaces fails to forward traffic on one or more\
    \ of the configured\n   multicast groups.\n   Once the iteration fails, the last\
    \ successful iteration is the stated\n   Maximum Group Capacity result.\n   Reporting\
    \ Format:\n   The following configuration parameters MUST be reflected in the\
    \ test\n   report:\n      o  Frame size(s)\n      o  Number of tested egress interfaces\
    \ on the DUT/SUT\n      o  IGMP version\n      o  Offered load\n   The following\
    \ results MUST be reflected in the test report:\n      o  The total number of\
    \ multicast group addresses that were\n         successfully forwarded through\
    \ the DUT/SUT\n   The Multicast Group Capacity results for each test SHOULD be\
    \ reported\n   in the form of a table, with a row for each of the tested frame\
    \ sizes\n   per the recommendations in section 3.1.3.  Each row or iteration\n\
    \   SHOULD specify the number of multicast groups joined per destination\n   interface,\
    \ number of frames transmitted and number of frames received\n   for that iteration.\n"
- title: 8.  Interaction
  contents:
  - "8.  Interaction\n   Network forwarding devices are generally required to provide\
    \ more\n   functionality than just the forwarding of traffic.  Moreover,\n   network-forwarding\
    \ devices may be asked to provide those functions in\n   a variety of environments.\
    \  This section offers procedures to assist\n   in the characterization of DUT/SUT\
    \ behavior in consideration of\n   potentially interacting factors.\n"
- title: 8.1.  Forwarding Burdened Multicast Latency
  contents:
  - "8.1.  Forwarding Burdened Multicast Latency\n   Objective:\n   To produce a set\
    \ of multicast latency measurements from a single\n   multicast ingress interface\
    \ of a DUT/SUT through multiple egress\n   multicast interfaces of that same DUT/SUT\
    \ as provided for by the\n   metric \"Multicast Latency\" in RFC 2432 [Du98] while\
    \ forwarding meshed\n   unicast traffic.\n   Procedure:\n   The Multicast Latency\
    \ metrics can be influenced by forcing the\n   DUT/SUT to perform extra processing\
    \ of packets while multicast class\n   traffic is being forwarded for latency\
    \ measurements.\n   The Burdened Forwarding Multicast Latency test MUST follow\
    \ the\n   described setup for the Multicast Latency test in Section 5.1.  In\n\
    \   addition, another set of test ports MUST be used to burden the\n   DUT/SUT\
    \ (burdening ports).  The burdening ports will be used to\n   transmit unicast\
    \ class traffic to the DUT/SUT in a fully meshed\n   traffic distribution as described\
    \ in RFC 2285 [Ma98].  The DUT/SUT\n   MUST learn the appropriate unicast addresses\
    \ and verified through\n   some externally observable method.\n   Perform a baseline\
    \ measurement of Multicast Latency as described in\n   Section 5.1.  After the\
    \ baseline measurement is obtained, start\n   transmitting the unicast class traffic\
    \ at a user-specified offered\n   load on the set of burdening ports and rerun\
    \ the Multicast Latency\n   test.  The offered load to the ingress port MUST be\
    \ the same as was\n   used in the baseline measurement.\n   Reporting Format:\n\
    \   Similar to Section 5.1, the following configuration parameters MUST\n   be\
    \ reflected in the test report:\n      o  Frame size(s)\n      o  Number of tested\
    \ egress interfaces on the DUT/SUT\n      o  Test duration\n      o  IGMP version\n\
    \      o  Offered load to ingress interface\n      o  Total number of multicast\
    \ groups\n      o  Offered load to burdening ports\n      o  Total number of burdening\
    \ ports\n   The following results MUST be reflected in the test report:\n    \
    \  o  The set of all latencies related to the tested ingress and\n         each\
    \ tested egress DUT/SUT interface for both the baseline\n         and burdened\
    \ response.\n   The time units of the presented latency MUST be uniform and with\n\
    \   sufficient precision for the medium or media being tested.\n   The latency\
    \ results for each test SHOULD be reported in the form of a\n   table, with a\
    \ row for each of the tested frame sizes per the\n   recommended frame sizes in\
    \ section 3.1.3, and SHOULD preserve the\n   relationship of latency to ingress/egress\
    \ interface(s) to assist in\n   trending across multiple trials.\n"
- title: 8.2.  Forwarding Burdened Group Join Delay
  contents:
  - "8.2.  Forwarding Burdened Group Join Delay\n   Objective:\n   To determine the\
    \ time duration it takes a DUT/SUT to start forwarding\n   multicast frames from\
    \ the time a successful IGMP Group Membership\n   Report has been issued to the\
    \ DUT/SUT while forwarding meshed unicast\n   traffic.\n   Procedure:\n   The\
    \ Forwarding Burdened Group Join Delay test MUST follow the\n   described setup\
    \ for the Group Join Delay test in Section 6.1.  In\n   addition, another set\
    \ of test ports MUST be used to burden the\n   DUT/SUT (burdening ports).  The\
    \ burdening ports will be used to\n   transmit unicast class traffic to the DUT/SUT\
    \ in a fully meshed\n   traffic pattern as described in RFC 2285 [Ma98].  The\
    \ DUT/SUT MUST\n   learn the appropriate unicast addresses and verified through\
    \ some\n   externally observable method.\n   Perform a baseline measurement of\
    \ Group Join Delay as described in\n   Section 6.1.  After the baseline measurement\
    \ is obtained, start\n   transmitting the unicast class traffic at a user-specified\
    \ offered\n   load on the set of burdening ports and rerun the Group Join Delay\n\
    \   test.  The offered load to the ingress port MUST be the same as was\n   used\
    \ in the baseline measurement.\n   Reporting Format:\n   Similar to Section 6.1,\
    \ the following configuration parameters MUST\n   be reflected in the test report:\n\
    \      o  Frame size(s)\n      o  Number of tested egress interfaces on the DUT/SUT\n\
    \      o  IGMP version\n      o  Offered load to ingress interface\n      o  Total\
    \ number of multicast groups\n      o  Offered load to burdening ports\n     \
    \ o  Total number of burdening ports\n      o  Method used to measure the join\
    \ delay metric\n   The following results MUST be reflected in the test report:\n\
    \      o  The group join delay time in microseconds per egress\n         interface(s)\
    \ for both the baseline and burdened response.\n   The Group Join Delay results\
    \ for each test MAY be reported in the\n   form of a table, with a row for each\
    \ of the tested frame sizes per\n   the recommendations in section 3.1.3.  Each\
    \ row or iteration MAY\n   specify the group join delay time per egress interface,\
    \ number of\n   frames transmitted and number of frames received for that iteration.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   As this document is solely for the purpose of\
    \ providing metric\n   methodology and describes neither a protocol nor a protocol's\n\
    \   implementation, there are no security considerations associated with\n   this\
    \ document specifically.  Results from these methodologies may\n   identify a\
    \ performance capability or limit of a device or system in a\n   particular test\
    \ context.  However, such results might not be\n   representative of the tested\
    \ entity in an operational network.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The Benchmarking Methodology Working Group of the IETF\
    \ and\n   particularly Kevin Dubray, Juniper Networks, are to be thanked for\n\
    \   the many suggestions they collectively made to help complete this\n   document.\n"
- title: 11.  Contributions
  contents:
  - "11.  Contributions\n   The authors would like to acknowledge the following individuals\
    \ for\n   their help and participation of the compilation of this document:\n\
    \   Hardev Soor, Ixia, and Ralph Daniels, Spirent Communications, both\n   who\
    \ made significant contributions to the earlier versions of this\n   document.\
    \  In addition, the authors would like to acknowledge the\n   members of the task\
    \ team who helped bring this document to fruition:\n   Michele Bustos, Tony De\
    \ La Rosa, David Newman and Jerry Perser.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [Br91]   Bradner, S., \"Benchmarking Terminology\
    \ for Network\n            Interconnection Devices\", RFC 1242, July 1991.\n \
    \  [Br96]   Bradner, S. and J. McQuaid, \"Benchmarking Methodology for\n     \
    \       Network Interconnect Devices\", RFC 2544, March 1999.\n   [Br97]   Bradner,\
    \ S. \"Use of Keywords in RFCs to Reflect Requirement\n            Levels, RFC\
    \ 2119, March 1997.\n   [Du98]   Dubray, K., \"Terminology for IP Multicast Benchmarking\"\
    , RFC\n            2432, October 1998.\n   [IANA1]  IANA multicast address assignments,\n\
    \            http://www.iana.org/assignments/multicast-addresses\n   [Ma98]  \
    \ Mandeville, R., \"Benchmarking Terminology for LAN Switching\n            Devices\"\
    , RFC 2285, February 1998.\n   [Me98]   Meyer, D., \"Administratively Scoped IP\
    \ Multicast\", BCP 23,\n            RFC 2365, July 1998.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [Ca02]   Cain, B., Deering, S., Kouvelas, I.,\
    \ Fenner, B., and A.\n            Thyagarajan, \"Internet Group Management Protocol,\
    \ Version\n            3\", RFC 3376, October 2002.\n   [De89]   Deering, S.,\
    \ \"Host Extensions for IP Multicasting\", STD 5,\n            RFC 1112, August\
    \ 1989.\n   [Fe97]   Fenner, W., \"Internet Group Management Protocol, Version\
    \ 2\",\n            RFC 2236, November 1997.\n   [Hu95]   Huitema, C., \"Routing\
    \ in the Internet\", Prentice-Hall, 1995.\n   [Ka98]   Kosiur, D., \"IP Multicasting:\
    \ the Complete Guide to\n            Interactive Corporate Networks\", John Wiley\
    \ & Sons Inc.,\n            1998.\n   [Mt98]   Maufer, T., \"Deploying IP Multicast\
    \ in the Enterprise\",\n            Prentice-Hall, 1998.\n"
- title: 13.  Authors' Addresses
  contents:
  - "13.  Authors' Addresses\n   Debra Stopp\n   Ixia\n   26601 W. Agoura Rd.\n  \
    \ Calabasas, CA  91302\n   USA\n   Phone: + 1 818 871 1800\n   EMail: debby@ixiacom.com\n\
    \   Brooks Hickman\n   Spirent Communications\n   26750 Agoura Rd.\n   Calabasas,\
    \ CA  91302\n   USA\n   Phone: + 1 818 676 2412\n   EMail: brooks.hickman@spirentcom.com\n"
- title: 14.  Full Copyright Statement
  contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n\
    \   This document is subject to the rights, licenses and restrictions\n   contained\
    \ in BCP 78, and except as set forth therein, the authors\n   retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n  \
    \ REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET\
    \ ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING\
    \ BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL\
    \ NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR\
    \ FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
