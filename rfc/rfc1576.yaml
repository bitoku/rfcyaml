- title: __initial_text__
  contents:
  - '                        TN3270 Current Practices

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the existing implementation of transferring\n\
    \   3270 display terminal data using currently available telnet\n   capabilities.\
    \  The name traditionally associated with this\n   implementation is TN3270.\n\
    \   Information is provided to aid in the implementation of TN3270\n   servers\
    \ as well as client terminal emulators.\n   The following areas pertaining to\
    \ TN3270 implementations are covered\n   in this document:\n      1. the telnet\
    \ options negotiated to transition from a NVT ASCII\n         state to a TN3270\
    \ state ready to process incoming 3270 data\n         stream commands\n      2.\
    \ the method for sending and receiving 3270 data\n      3. the method of handling\
    \ some special keys known as SYSREQ and\n         ATTN using current available\
    \ telnet commands\n      4. the events that will transition a TN3270 session back\
    \ to an NVT\n         session\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      1.  Motivation  . . . . . . . . . . . . . . . . . .\
    \ .   2\n      2.  Background  . . . . . . . . . . . . . . . . . . .   2\n   \
    \   3.  Telnet Options and Commands Used  . . . . . . . .   4\n      4.  Connection\
    \ Negotiation  . . . . . . . . . . . . .   4\n      4.1 3270 Regime Option  .\
    \ . . . . . . . . . . . . . .   6\n      4.2 Suppress Go Ahead Option  . . . .\
    \ . . . . . . . .   6\n      4.3 Echo Option . . . . . . . . . . . . . . . . .\
    \ . .   6\n      4.4 Timing Mark Option  . . . . . . . . . . . . . . .   7\n \
    \     5.  Testing for session presence  . . . . . . . . . .   7\n      6.  Handling\
    \ 3270 data  . . . . . . . . . . . . . . .   7\n      7.  3270 Structured Fields\
    \  . . . . . . . . . . . . .   8\n      8.  The 3270 ATTN (Attention) Key . .\
    \ . . . . . . . .   8\n      9.  The 3270 SYSREQ Key . . . . . . . . . . . . .\
    \ . .   9\n      10. Items not addressed by TN3270 . . . . . . . . . .  10\n \
    \     11. References  . . . . . . . . . . . . . . . . . . .  10\n      12. Security\
    \ Considerations . . . . . . . . . . . . .  11\n      13. Author's Note . . .\
    \ . . . . . . . . . . . . . . .  11\n      14. Author's Address  . . . . . . .\
    \ . . . . . . . . .  12\n"
- title: 1. Motivation
  contents:
  - "1. Motivation\n   3270 display terminal data differs from traditional display\
    \ terminal\n   data in that it is block mode and uses EBCDIC instead of ASCII\n\
    \   character representation. These two differences are the primary\n   reason\
    \ for the differentiation of TN3270 from standard Telnet in this\n   document.\n"
- title: 2. Background
  contents:
  - "2. Background\n   Existing complex IBM 3270 display terminal networks are not\
    \ easily\n   integrated with the increasing number of multi-platform networking\n\
    \   environments, specifically TCP/IP. These complex networks include\n   terminals\
    \ attached to a 3270 host using SNA (Systems Network\n   Architecture) and non-SNA\
    \ connections. To address the issue of easily\n   connecting display terminals\
    \ to 3270 hosts using IP networks, several\n   vendors have introduced telnet\
    \ servers that provide TCP/IP users a\n   connection to existing IBM mainframes\
    \ by supporting display terminal\n   emulation using a subset of the existing\
    \ telnet protocol.  Telnet\n   servers may exist on the host itself, or be connected\
    \ to the host\n   using SNA or non-SNA methods.\n   IBM terminals are generically\
    \ referred to as 3270's which includes a\n   broad range of terminals and devices,\
    \ not all of which actually begin\n   with the numbers 327x.\n   3270 terminals\
    \ in the IBM SNA network environment have two sessions\n   with the host computer\
    \ application. One is used for communicating\n   with the host application, the\
    \ other is used for communicating with\n   the SSCP (System Services Control Point)\
    \ that links the terminal with\n   the appropriate host computer.  For the purposes\
    \ of TN3270, this\n   distinction is not apparent or relevant since there is actually\
    \ only\n   a single telnet session with the host computer or server.  On an IBM\n\
    \   SNA network, the 3270 terminal has a special key that toggles between\n  \
    \ the two sessions (SYSREQ).  A brief discussion on how some telnet\n   servers\
    \ deal with this is included.\n   In an SNA environment, a client session is identified\
    \ by a Logical\n   Unit (LU) name.  In a non-SNA environment, there is not a LU\
    \ name\n   associated with a client session.  The closest thing to a LU name in\n\
    \   the TN3270 environment is the client's IP address.  Although some\n   telnet\
    \ servers are connected to the host using SNA, TN3270 clients\n   using these\
    \ servers have no defined way to determine the LU name\n   associated with the\
    \ session.\n   Telnet servers that exist in non-SNA environments do not have to\
    \ be\n   concerned about providing TN3270 clients with support for the SNA\n \
    \  functions described in this document.\n   TN3270 does not support typical SNA\
    \ responses and is classified as a\n   non-SNA protocol.  A TN3270 emulator is\
    \ not aware or concerned about\n   how the telnet server is connected to a 3270\
    \ host application.\n   NOTE: Except where otherwise stated, this document does\
    \ not\n   distinguish between telnet servers that represent SNA devices and\n\
    \   those that represent non-SNA 3270 devices.\n   Some typical \"SNA\" functions\
    \ such as the SYSREQ and ATTN keys have\n   been mapped to existing telnet commands\
    \ and are supported by some\n   telnet server implementations.\n   Currently,\
    \ support for 3270 terminal emulation over Telnet is\n   accomplished by the de\
    \ facto standard of negotiating three separate\n   Telnet Options - Terminal-Type\
    \ [2], Binary Transmission [3], and End\n   of Record [4].  This negotiation and\
    \ the resulting data flow will be\n   described below.\n   RFC 1041 [1] attempted\
    \ to standardize the method of negotiating 3270\n   terminal support by defining\
    \ the 3270 Regime Telnet Option.\n   Historically, very few developers and vendors\
    \ ever implemented RFC\n   1041.\n   All references in this document to the 3270\
    \ datastream, SNA versus\n   non-SNA operation, 3270 datastream commands, orders,\
    \ structured\n   fields and the like rely on [6].\n   References to SNA Request\
    \ and Response Units rely on [7].  References\n   to SNA and SSCP rely on [12].\n"
- title: 3. Telnet Options and Commands Used
  contents:
  - "3. Telnet Options and Commands Used\n   TN3270 makes use of existing Telnet options\
    \ and does not define any\n   additional options or commands.\n       Telnet option\
    \    Value (decimal)\n       -------------    ---------------\n       BINARY \
    \           0\n       TERMINAL-TYPE    24\n       EOR              25\n   Additional\
    \ options may be used during a TN3270 session and are\n   interpreted as per their\
    \ respective RFCs. These are [1] 3270-REGIME,\n   [8] SUPPRESS-GO-AHEAD, [9] ECHO\
    \ and [10] TIMING-MARK. Other options\n   should be rejected unless they are specifically\
    \ handled by the client\n   for NVT mode.\n   Commands that may be encountered\
    \ during a TN3270 session and are\n   described in RFC 854 [11] include NOP, BREAK\
    \ and Interrupt Process.\n"
- title: 4. Connection Negotiation
  contents:
  - "4. Connection Negotiation\n   The following example shows a TN3270-capable server\
    \ and a TN3270\n   client establishing a connection:\n   The TCP/IP port used\
    \ to connect with is 23 (Telnet).\n   At any place before and during the TN3270\
    \ connection negotiation\n   process, other telnet commands and data may be transferred\
    \ and will\n   be interpreted under the existing telnet state. Some existing TN3270\n\
    \   servers start a client connection using an NVT telnet dialog to\n   establish\
    \ parameters needed to complete the TN3270 connection to the\n   desired host.\n\
    \   The order of negotiating terminal type, EOR and BINARY is not\n   significant,\
    \ this example shows a typical TN3270 connection.\n      Server:  IAC DO TERMINAL-TYPE\n\
    \      Client:  IAC WILL TERMINAL-TYPE\n      Server:  IAC SB TERMINAL-TYPE SEND\
    \ IAC SE\n      Client:  IAC SB TERMINAL-TYPE IS <terminal type>IAC SE\n     \
    \ where <terminal type> is a string consisting of terminal model,\n      type\
    \ and support of enhanced attribute bytes; an example is IBM-\n      3278-2. \
    \ The acceptable values are listed in RFC 1340, Assigned\n      Numbers [5]. \
    \ Other values are in use that do not exist in [5].\n      The -2 following 3278\
    \ designates the alternate screen size.  3270\n      terminals have the ability\
    \ to switch between the standard (24x80)\n      screen size and an alternate screen\
    \ size.  Model -2 is 24x80 which\n      is the same as the standard size.  Model\
    \ -3 is 32x80, model -4 is\n      43x80 and model -5 is 27x132.\n      Appending\
    \ the two character string \"-E\" to the end of the terminal\n      type signifies\
    \ that the terminal is capable of handling 3270\n      extended data stream. This\
    \ is interpreted to mean that the\n      terminal is able to handle structured\
    \ fields, which are described\n      below.  Some telnet server implementations\
    \ also interpret this to\n      mean that the terminal is capable of handling\
    \ extended attributes\n      (highlighting, field validation, character set, outlining,\
    \ etc.)\n      [6].\n      The 3279 series of terminals is capable of extended\
    \ attributes\n      while the 3278 series is not.\n      Server:  IAC DO EOR IAC\
    \ WILL EOR\n      Client:  IAC WILL EOR IAC DO EOR\n      Server:  IAC DO BINARY\
    \ IAC WILL BINARY\n      Client:  IAC WILL BINARY IAC DO BINARY\n      Server:\
    \  <3270 data stream> IAC EOR\n      Client:  <3270 data stream> IAC EOR\n   \
    \        .            .\n           .            .\n   To terminate the connection\
    \ the socket is closed by one of the\n   session partners. Typically, when the\
    \ user logs off of the host, the\n   telnet server closes the connection.\n  \
    \ If the telnet server wishes to go back to NVT mode, it may issue the\n   following\
    \ telnet options:\n       Server:  IAC WONT BINARY\n       Client:  IAC DONT BINARY\n\
    \           or\n       Server:  IAC WONT EOR\n       Client:  IAC DONT EOR\n \
    \  Either one of the above two cases causes the connection to not\n   satisfy\
    \ the requirements for a valid TN3270 session. The telnet\n   client would then\
    \ process data from the server as though it were NVT\n   ASCII data.\n   The following\
    \ examples show how a TN3270 client handles the 3270-\n   REGIME, SUPPRESS-GO-AHEAD,\
    \ ECHO and TM options.\n"
- title: 4.1 3270 Regime Option
  contents:
  - "4.1 3270 Regime Option\n   Very few servers support the 3270 Regime Telnet Option.\
    \  If the\n   client does not support this option and responds negatively as shown\n\
    \   in the following example, the server will proceed on to the more\n   typical\
    \ example shown above.\n      Server:  IAC DO 3270-REGIME\n      Client:  IAC\
    \ WONT 3270-REGIME\n       Normal negotiation:\n      Server:  IAC DO TERMINAL-TYPE\n\
    \         ...  (see above)\n"
- title: 4.2 Suppress Go Ahead Option
  contents:
  - "4.2 Suppress Go Ahead Option\n   The Suppress Go Ahead option [8] is requested\
    \ by some servers. The\n   Suppress Go Ahead option RFC lists the default as being\
    \ go aheads are\n   transmitted to signal the receiver to begin transmitting.\
    \  Since\n   TN3270 negotiates binary and end-of-record and is a block mode\n\
    \   protocol, the telnet go ahead character is not sent.  Most servers do\n  \
    \ not negotiate this option even though they do not use the telnet go\n   ahead\
    \ character.\n      Server:  IAC DO SUPPRESS-GO-AHEAD\n      Client:  IAC WILL\
    \ SUPPESS-GO-AHEAD\n"
- title: 4.3 Echo Option
  contents:
  - "4.3 Echo Option\n   The Echo option [9] is negotiated by those servers that make\
    \ use of\n   the telnet NVT mode to allow the user to enter information prior\
    \ to\n   negotiating the options necessary for TN3270.  This information\n   includes\
    \ but is not limited to user identification, password and\n   destination 3270\
    \ host.  Some servers accept the default for this\n   option which is for the\
    \ client to not do a local echo of characters\n   the user enters at the keyboard.\
    \ This allows the server to decide if\n   it should echo characters back to the\
    \ client (or not in the case of\n   password). Echoing characters back to the\
    \ client causes slow response\n   time since every character is typically echoed\
    \ individually. Because\n   of this, some servers negotiate for the client to\
    \ do it's own local\n   echoing (except for passwords). The following example\
    \ illustrates\n   this case.\n      Server:  IAC DO ECHO\n      Client:  IAC WILL\
    \ ECHO\n        (Client does local display of all characters)\n      Server: \
    \ IAC WONT ECHO\n      Client:  IAC DONT ECHO\n        (Client enters password\
    \ - not locally displayed or remotely\n      echoed)\n      Server:  IAC DO ECHO\n\
    \      Client:  IAC WILL ECHO\n     (Client resumes local display of all characters)\n"
- title: 4.4 Timing Mark Option
  contents:
  - "4.4 Timing Mark Option\n   The Timing Mark option [10] is used by some servers\
    \ to test for the\n   continued presence of a TN3270 client. The following example\
    \ will\n   assure the server the client is still alive.\n      Server:  IAC DO\
    \ TIMING-MARK\n      Client:  IAC WONT TIMING-MARK\n"
- title: 5. Testing for session presence
  contents:
  - "5. Testing for session presence\n   The NOP command (hexadecimal F1) [11] is\
    \ used by some servers to test\n   for the continued presence of a TN3270 client.\
    \ If a client has\n   terminated abnormally, TCP/IP send errors will occur. The\
    \ Timing Mark\n   option, described above, is also used to test for presence.\n\
    \      Server:  IAC NOP\n      Client:  <ignore / no response>\n"
- title: 6. Handling 3270 data
  contents:
  - "6. Handling 3270 data\n   The 3270 data stream consists of a command and its\
    \ associated data.\n   Commands include but are not limited to erase screen, erase\
    \ and write\n   to screen and read current screen; see [6] for a complete description\n\
    \   of 3270 commands and parameters.\n   The reason for negotiating the EOR telnet\
    \ option [4] is to provide a\n   method for separating these commands since no\
    \ length information is\n   specified. 3270 commands are interpreted by the telnet\
    \ client in\n   their entirety.  Each 3270 command and possible data is terminated\n\
    \   with the IAC EOR sequence.\n   The Binary option [3] is also required since\
    \ 3270 data may contain\n   the FF (hexadecimal) or IAC character. When this character\
    \ is\n   encountered during a TN3270 connection it is handled as per the\n   Binary\
    \ RFC [3].\n"
- title: 7. 3270 Structured Fields
  contents:
  - "7. 3270 Structured Fields\n   3270 structured fields provide a much wider range\
    \ of features than\n   \"old-style\" 3270 data, such as support for graphics,\
    \ partitions and\n   IPDS printer datastreams. A structured field is a 3270 data\
    \ type that\n   allows non 3270 data to be embedded within 3270 data. Briefly,\
    \ a\n   structured field consists of the structured field command followed by\n\
    \   one or more data blocks. Each data block has a length and a\n   structured\
    \ field identifier, followed optionally by additional data.\n   Not every TN3270\
    \ client can be expected to support all structured\n   field functions.   There\
    \ must be a  mechanism by which those clients\n   that are capable of supporting\
    \ some or all structured field functions\n   can indicate their wishes. This is\
    \ typically done by adding \"-E\" to\n   the end of the terminal type string.\
    \ That is, when the terminal\n   identifies itself as being able to handle extended\
    \ attributes, it\n   also is capable of being able to send and receive structured\
    \ fields.\n   The design of 3270 structured fields provides a convenient means\
    \ to\n   convey the level of support (including no support) for the various\n\
    \   structured field functions.  This mechanism is the Read Partition\n   Query\
    \ command, which is sent from the host application to the client.\n   The client\
    \ responds with a Query Reply, listing which, if any,\n   structured field functions\
    \ it supports.\n   A TN3270 client that supports structured fields will respond\
    \ to a\n   Read Partition Query command with the appropriate reply.  The\n   sequence\
    \ of events when a client receives a Read Partition Query and\n   does not support\
    \ structured fields is left up to the client\n   implementation.  Typically clients\
    \ can identify at least this\n   structured field and reply with a null set.\n"
- title: 8. The 3270 ATTN (Attention) Key
  contents:
  - "8. The 3270 ATTN (Attention) Key\n   The 3270 ATTN key is interpreted by many\
    \ host applications in an SNA\n   environment as an indication that the user wishes\
    \ to interrupt the\n   execution of the current process.  A majority of the telnet\
    \ servers\n   currently accept the telnet IAC BREAK (code 243) [11] sequence to\n\
    \   signal this event.\n   Use of this key requires two things:\n    - The TN3270\
    \ clients provide as part of their keyboard\n      mapping a single key or a combination\
    \ of keys that map to\n      the 3270 ATTN key.  When the user presses this key(s),\
    \ the\n      client transmits a Telnet BREAK command to the server.\n    - The\
    \ TN3270 servers translate the BREAK command received from\n      a TN3270 client\
    \ into the appropriate form and pass it along\n      to the host application as\
    \ an ATTN key.  In other words, the\n      server representing an SLU in an SNA\
    \ session would send\n      a SIGNAL RU to the host application.\n   The ATTN\
    \ key is not supported in a non-SNA environment; therefore, a\n   TN3270 server\
    \ representing non-SNA 3270 devices ignores any Telnet\n   BREAK commands it receives\
    \ from a client.\n"
- title: 9. The 3270 SYSREQ Key
  contents:
  - "9. The 3270 SYSREQ Key\n   The 3270 SYSREQ key is useful in an environment where\
    \ the telnet\n   server is attached to the host using SNA. The SYSREQ key is useful\
    \ in\n   this environment when the host application becomes locked or the user\n\
    \   wishes to terminate the session without closing the Telnet\n   connection.\n\
    \   The Telnet Interrupt Process (IP) command [11] is interpreted by some\n  \
    \ telnet servers as a SYSREQ key. Other servers recognize the 3270 Test\n   Request\
    \ key as a SYSREQ key.  In an SNA environment, pressing this\n   key toggles the\
    \ terminal between the host application session and the\n   SSCP session.  Usually\
    \ the user will enter LOGOFF once this key has\n   been pressed to terminate the\
    \ application session and then select a\n   new host to connect to.  Sometimes,\
    \ if SYSREQ is pressed again, the\n   host application will become unlocked and\
    \ normal activities may then\n   proceed.\n   It is entirely up to the telnet\
    \ server to interpret this command and\n   send the appropriate commands to the\
    \ host as well as format the\n   resulting host data for display on the telnet\
    \ client. The data format\n   during the SSCP session is in a slightly different\
    \ format than normal\n   3270 data. Since the telnet server has no way to pass\
    \ this data\n   directly to the telnet client, it must either handle it entirely\
    \ and\n   ignore SYSREQ events or convert it to 3270  data to present to the\n\
    \   client.\n   To implement SYSREQ key support, TN3270 clients provide a key\
    \ (or\n   combination of keys) that is identified as mapping to the 3270 SYSREQ\n\
    \   key.  When the user presses this key(s), the client would either\n   transmit\
    \ a Telnet IP command or Test Request key to the server,\n   depending on the\
    \ server implementation.\n   TN3270 servers representing non-SNA 3270 terminals\
    \ may ignore any\n   Telnet IP commands or Test Request keys they receive from\
    \ a client.\n"
- title: 10. Items not addressed by TN3270
  contents:
  - "10. Items not addressed by TN3270\n   There are several items that are not supported\
    \ by current TN3270\n   implementations; among them are the following:\n    -\
    \ TN3270 provides no capability for clients to emulate the 328x\n      class of\
    \ printers.\n    - There is no mechanism by which a Telnet client can request\
    \ that\n      a connection be associated with a given 3270 device-name.  This\n\
    \      can be of importance when a terminal session is being\n      established,\
    \ since many host applications behave differently\n      depending on the network\
    \ name of the terminal.\n    - The 3270 ATTN and SYSREQ keys are not universally\
    \ supported.\n    - There is no support for the SNA positive/negative response\n\
    \      process. All data that is sent is assumed to either be handled\n      or\
    \ ignored.  The lack of SNA response processing in TN3270 is\n      part of what\
    \ makes TN3270 efficient.\n      A negative response indicates some sort of error\
    \ at the client\n      while processing the previously received data; this could\
    \ be\n      caused by the host application building a 3270 datastream that\n \
    \     contains an invalid command, or by a mechanical error at the\n      client\
    \ side, among other things.\n      Positive responses indicate processing of the\
    \ previously received\n      data has completed.\n    - There is no mechanism\
    \ by which the client can access the SNA\n      BIND information.  The BIND image\
    \ in a SNA environment\n      contains a detailed description of the session between\
    \ the\n      telnet server and the host application.\n    - The connection negotiation\
    \ does not make it clear whether\n      clients should support 3270 structured\
    \ fields.\n"
- title: 11. References
  contents:
  - "11. References\n   [1] Rekhter, Y., \"Telnet 3270 Regime Option\", RFC 1041,\
    \ IBM\n       Corporation, January 1988.\n   [2] VanBokkelen, J., \"Telnet Terminal-Type\
    \ Option\", RFC 1091, FTP\n       Software, Inc., February 1989.\n   [3] Postel,\
    \ J., and J. Reynolds, \"Telnet Binary Transmission\", STD\n       27, RFC 856,\
    \ USC/Information Sciences Institute, May 1983.\n   [4] Postel, J., \"Telnet End\
    \ of Record Option\", RFC 885,\n       USC/Information Sciences Institute, December\
    \ 1983.\n   [5] Reynolds, J., and J. Postel, \"Assigned Numbers\", STD 2, RFC\
    \ 1340,\n       USC/Information Sciences Institute, July 1992.\n   [6] \"3270\
    \ Information Display System - Data Stream Programmer's\n       Reference\", publication\
    \ number GA23-0059, IBM Corporation.\n   [7] \"Systems Network Architecture -\
    \ Formats\", publication number\n       GA27-3136, IBM Corporation.\n   [8] Postel,\
    \ J., and J. Reynolds, \"Telnet Suppress Go Ahead Option\",\n       STD 29, RFC\
    \ 858, USC/Information Sciences Institute, May 1983.\n   [9] Postel, J., and J.\
    \ Reynolds, \"Telnet Echo Option\", STD 28, RFC\n       857, USC/Information Sciences\
    \ Institute, May 1983.\n  [10] Postel, J., and J. Reynolds, \"Telnet Timing Mark\
    \ Option\", STD 31,\n       RFC 860, USC/Information Sciences Institute, May 1983.\n\
    \  [11] Postel, J., and J. Reynolds, \"Telnet Protocol Specification\", STD\n\
    \       8, RFC 854, USC/Information Sciences Institute, May 1983.\n  [12] \"Systems\
    \ Network Architecture - Concepts and Products\",\n       publication number GC30-3072,\
    \ IBM Corporation.\n"
- title: 12. Security Considerations
  contents:
  - "12. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 13. Author's Note
  contents:
  - "13. Author's Note\n   Portions of this document were drawn from the following\
    \ sources:\n    - A White Paper written by Owen Reddecliffe, WRQ Corporation,\n\
    \      October 1991.\n    - Experimental work on the part of Cleve Graves and\
    \ Michelle\n      Angel, OpenConnect Systems, 1992 - 1993.\n    - Discussions\
    \ at the March 1993 IETF meeting and TN3270 BOF at\n      Interop August 1993.\n\
    \    - Discussions on the \"TN3270E\" list, 1993.\n"
- title: 14. Author's Address
  contents:
  - "14. Author's Address\n   Jon Penner\n   DCA, Inc.\n   2800 Oakmont Drive\n  \
    \ Austin, TX 78664\n   Phone: (512) 388-7090 FAX\n   EMail: jjp@bscs.com\n   \
    \       or dca/g=Jon/s=Penner/ou=DCAAUS@mhs.attmail.com\n"
