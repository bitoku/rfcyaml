- title: __initial_text__
  contents:
  - '               The Multicast Group Security Architecture

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides an overview and rationale of the multicast\n\
    \   security architecture used to secure data packets of large multicast\n   groups.\
    \  The document begins by introducing a Multicast Security\n   Reference Framework,\
    \ and proceeds to identify the security services\n   that may be part of a secure\
    \ multicast solution.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Scope. . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n       1.2.  Summary of Contents of Document. . . . . . . . .\
    \ . . . .  3\n       1.3.  Audience . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n       1.4.  Terminology. . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   2.  Architectural Design: The Multicast Security Reference\n    \
    \   Framework. . . . . . . . . . . . . . . . . . . . . . . . . . .  4\n      \
    \ 2.1.  The Reference Framework. . . . . . . . . . . . . . . . .  4\n       2.2.\
    \  Elements of the Centralized Reference Framework. . . . .  5\n             2.2.1.\
    \  Group Controller and Key Server. . . . . . . . .  6\n             2.2.2.  Sender\
    \ and Receiver. . . . . . . . . . . . . . .  7\n             2.2.3.  Policy Server.\
    \ . . . . . . . . . . . . . . . . .  7\n       2.3.  Elements of the Distributed\
    \ Reference Framework. . . . .  8\n   3.  Functional Areas . . . . . . . . . .\
    \ . . . . . . . . . . . . .  9\n       3.1.  Multicast Data Handling. . . . .\
    \ . . . . . . . . . . . .  9\n       3.2.  Group Key Management . . . . . . .\
    \ . . . . . . . . . . . 10\n       3.3.  Multicast Security Policies. . . . .\
    \ . . . . . . . . . . 11\n   4.  Group Security Associations (GSA). . . . . .\
    \ . . . . . . . . . 12\n       4.1.  The Security Association . . . . . . . .\
    \ . . . . . . . . 12\n       4.2.  Structure of a GSA: Introduction . . . . .\
    \ . . . . . . . 13\n       4.3.  Structure of a GSA: Reasoning. . . . . . . .\
    \ . . . . . . 14\n       4.4.  Definition of GSA. . . . . . . . . . . . . . .\
    \ . . . . . 15\n       4.5.  Typical Compositions of a GSA. . . . . . . . . .\
    \ . . . . 17\n   5.  Security Services. . . . . . . . . . . . . . . . . . . .\
    \ . . . 17\n       5.1.  Multicast Data Confidentiality . . . . . . . . . . .\
    \ . . 18\n       5.2.  Multicast Source Authentication and Data Integrity . .\
    \ . 18\n       5.3.  Multicast Group Authentication . . . . . . . . . . . . .\
    \ 19\n       5.4.  Multicast Group Membership Management. . . . . . . . . . 19\n\
    \       5.5.  Multicast Key Management . . . . . . . . . . . . . . . . 20\n  \
    \     5.6.  Multicast Policy Management. . . . . . . . . . . . . . . 21\n   6.\
    \  Security Considerations. . . . . . . . . . . . . . . . . . . . 22\n       6.1.\
    \  Multicast Data Handling. . . . . . . . . . . . . . . . . 22\n       6.2.  Group\
    \ Key Management . . . . . . . . . . . . . . . . . . 22\n       6.3.  Multicast\
    \ Security Policies. . . . . . . . . . . . . . . 22\n   7.  Acknowledgements .\
    \ . . . . . . . . . . . . . . . . . . . . . . 23\n   8.  References . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . 23\n       8.1.  Normative References\
    \ . . . . . . . . . . . . . . . . . . 23\n       8.2.  Informative References\
    \ . . . . . . . . . . . . . . . . . 23\n   9.  Authors' Addresses . . . . . .\
    \ . . . . . . . . . . . . . . . . 25\n   10. Full Copyright Statement . . . .\
    \ . . . . . . . . . . . . . . . 26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Securing IP multicast group communication is a complex task\
    \ that\n   involves many aspects.  Consequently, a secure IP multicast protocol\n\
    \   suite must have a number of functional areas that address different\n   aspects\
    \ of the solution.  This document describes those functional\n   areas and how\
    \ they are related.\n"
- title: 1.1.  Scope
  contents:
  - "1.1.  Scope\n   This architecture is concerned with the securing of large multicast\n\
    \   groups.  Whereas it can also be used for smaller groups, it is not\n   necessarily\
    \ the most efficient means.  Other architectures (e.g., the\n   Cliques architecture\
    \ [STW]) can be more efficient for small ad-hoc\n   group communication.\n   This\
    \ architecture is \"end to end\", and does not require multicast\n   routing protocols\
    \ (e.g., PIM [RFC2362]) to participate in this\n   architecture.  Inappropriate\
    \ routing may cause denial of service to\n   application layer groups conforming\
    \ to this architecture.  However\n   the routing cannot affect the authenticity\
    \ or secrecy of group data\n   or management packets.  The multicast routing protocols\
    \ could\n   themselves use this architecture to protect their own multicast and\n\
    \   group packets.  However, this would be independent of any secure\n   application\
    \ layer group.\n   This architecture does not require IP multicast admission control\n\
    \   protocols (e.g., IGMP [RFC3376], MLD [RFC3019]) to be a part of\n   secure\
    \ multicast groups.  As such, a \"join\" or \"leave\" operation for\n   a secure\
    \ group is independent of a \"join\" or \"leave\" of an IP\n   multicast group.\
    \  For example, the process of joining a secure group\n   requires being authenticated\
    \ and authorized by a security device,\n   while the process of joining an IP\
    \ multicast group entails contacting\n   a multicast-aware router.  Admission\
    \ control protocols could\n   themselves use this architecture to protect their\
    \ own multicast\n   packets.  However, this would be independent of any secure\n\
    \   application layer group.\n   This architecture does not explicitly describe\
    \ how secure multicast\n   groups deal with Network Address Translation (NAT)\
    \ [RFC2663].\n   Multicast routing protocols generally require the source and\n\
    \   destination addresses and ports of an IP multicast packet to remain\n   unchanged.\
    \  This allows consistent multicast distribution trees to be\n   created throughout\
    \ the network.  If NAT is used in a network, then\n   the connectivity of senders\
    \ and receivers may be adversely affected.\n   This situation is neither improved\
    \ or degraded as a result of\n   deploying this architecture.\n   This architecture\
    \ does not require the use of reliable mechanisms,\n   for either data or management\
    \ protocols.  The use of reliable\n   multicast routing techniques (e.g., FEC\
    \ [RFC3453]) enhance the\n   availability of secure multicast groups.  However\
    \ the authenticity or\n   secrecy of group data or management packets is not affected\
    \ by the\n   omission of that capability from a deployment.\n"
- title: 1.2.  Summary of Contents of Document
  contents:
  - "1.2.  Summary of Contents of Document\n   This document provides an architectural\
    \ overview that outlines the\n   security services required to secure large multicast\
    \ groups.  It\n   provides a Reference Framework for organizing the various elements\n\
    \   within the architecture, and explains the elements of the Reference\n   Framework.\n\
    \   The Reference Framework organizes the elements of the architecture\n   along\
    \ three Functional Areas pertaining to security.  These elements\n   cover the\
    \ treatment of data when it is to be sent to a group, the\n   management of keying\
    \ material used to protect the data, and the\n   policies governing a group.\n\
    \   Another important item in this document is the definition and\n   explanation\
    \ of Group Security Associations (GSA), which is the\n   multicast counterpart\
    \ of the unicast Security Association (SA).  The\n   GSA is specific to multicast\
    \ security, and is the foundation of the\n   work on group key management.\n"
- title: 1.3.  Audience
  contents:
  - "1.3.  Audience\n   This document is addressed to the technical community, implementers\n\
    \   of IP multicast security technology, and others interested in gaining\n  \
    \ a general background understanding of multicast security.  This\n   document\
    \ assumes that the reader is familiar with the Internet\n   Protocol, the IPsec\
    \ suite of protocols (e.g., [RFC2401]), related\n   networking technology, and\
    \ general security terms and concepts.\n"
- title: 1.4.  Terminology
  contents:
  - "1.4.  Terminology\n   The following key terms are used throughout this document.\n\
    \   1-to-N\n      A group which has one sender and many receivers.\n   Group Security\
    \ Association (GSA)\n      A bundling of Security Associations (SAs) that together\
    \ define how\n      a group communicates securely.  The GSA may include a registration\n\
    \      protocol SA, a rekey protocol SA, and one or more data security\n     \
    \ protocol SAs.\n   M-to-N\n      A group which has many senders and many receivers,\
    \ where M and N\n      are not necessarily the same value.\n   Security Association\
    \ (SA)\n      A set of policy and cryptographic keys that provide security\n \
    \     services to network traffic that matches that policy.\n"
- title: '2.  Architectural Design: The Multicast Security Reference Framework'
  contents:
  - "2.  Architectural Design: The Multicast Security Reference Framework\n   This\
    \ section considers the complex issues of multicast security in\n   the context\
    \ of a Reference Framework.  This Reference Framework is\n   used to classify\
    \ functional areas, functional elements, and\n   interfaces.  Two designs of the\
    \ Reference Framework are shown: a\n   centralized design, and a distributed design\
    \ that extends the\n   centralized design for very large groups.\n"
- title: 2.1.  The Reference Framework
  contents:
  - "2.1.  The Reference Framework\n   The Reference Framework is based on three broad\
    \ functional areas (as\n   shown in Figure 1).  The Reference Framework incorporates\
    \ the main\n   entities and functions relating to multicast security, and depicts\n\
    \   the inter-relations among them.  It also expresses multicast security\n  \
    \ from the perspective of multicast group types (1-to-N and M-to-N),\n   and classes\
    \ of protocols (the exchanged messages) needed to secure\n   multicast packets.\n\
    \   The aim of the Reference Framework is to provide some general context\n  \
    \ around the functional areas, and the relationships between the\n   functional\
    \ areas.  Note that some issues span more than one\n   functional area.  In fact,\
    \ the framework encourages the precise\n   identification and formulation of issues\
    \ that involve more than one\n   functional area or those which are difficult\
    \ to express in terms of a\n   single functional area.  An example of such a case\
    \ is the expression\n   of policies concerning group keys, which involves both\
    \ the functional\n   areas of group key management and multicast policies.\n \
    \  When considering the Reference Framework diagrams, it is important to\n   realize\
    \ that the singular \"boxes\" in the framework do not necessarily\n   imply a\
    \ corresponding singular entity implementing a given function.\n   Rather, a box\
    \ in the framework should be interpreted loosely as\n   pertaining to a given\
    \ function related to a functional area.  Whether\n   that function is in reality\
    \ implemented as one or more physical\n   entities is dependent on the particular\
    \ solution.  As an example, the\n   box labeled \"Key Server\" must be interpreted\
    \ in broad terms as\n   referring to the functions of key management.\n   Similarly,\
    \ the Reference Framework acknowledges that some\n   implementations may in fact\
    \ merge a number of the \"boxes\" into a\n   single physical entity.  This could\
    \ be true even across functional\n   areas.  For example, an entity in a group\
    \ could act as both a Group\n   Controller and a Sender to a group.\n   The protocols\
    \ to be standardized are depicted in the Reference\n   Framework diagrams by the\
    \ arrows that connect the various boxes.  See\n   more details in Section 4, below.\n"
- title: 2.2.  Elements of the Centralized Reference Framework
  contents:
  - "2.2.  Elements of the Centralized Reference Framework\n   The Reference Framework\
    \ diagram of Figure 1 contains boxes and\n   arrows.  The boxes are the functional\
    \ entities and the arrows are the\n   interfaces between them.  Standard protocols\
    \ are needed for the\n   interfaces, which support the multicast services between\
    \ the\n   functional entities.\n   In some cases, a system implementing the multicast\
    \ security\n   architecture may not need to implement protocols to account for\
    \ every\n   interface.  Rather, those interfaces may be satisfied through the\
    \ use\n   of manual configuration, or even omitted if they are not necessary\n\
    \   for the application.\n   There are three sets of functional entities.  Each\
    \ is discussed\n   below.\n                 +--------------------------------------+\n\
    \                 |                                      |\n                 |\
    \                                      |\n                 |  FUNCTIONAL     \
    \                     |\n                 |    AREAS                         \
    \    |\n                 |                                      |\n          \
    \       |             +------+                 |\n                 |  Multicast\
    \  |Policy|                 |\n                 |  Security   |Server|       \
    \          |\n                 |  Policies   +------+                 |\n    \
    \             |                 ^                    |\n                 |   \
    \              |                    |\n                 |                 |  \
    \                  |\n                 |                 v                   \
    \ |\n                 |             +------+                 |\n             \
    \    |  Group      |Group |                 |\n                 |  Key       \
    \ |Ctrl/ |<---------+      |\n                 |  Management |Key   |        \
    \  |      |\n                 |             |Server|          V      |\n     \
    \            |             +------+     +--------+  |\n                 |    \
    \             ^        |        |  |\n                 |                 |   \
    \     |Receiver|  |\n                 |                 |        |        |  |\n\
    \                 |                 v        +--------+  |\n                 |\
    \             +------+          ^      |\n                 |             |   \
    \   |          |      |\n                 |  Multicast  |Sender|----------+  \
    \    |\n                 |  Data       |      |                 |\n          \
    \       |  Handling   |      |                 |\n                 |         \
    \    +------+                 |\n                 |                          \
    \            |\n                 +--------------------------------------+\n  \
    \     Figure 1: Centralized Multicast Security Reference Framework\n"
- title: 2.2.1.  Group Controller and Key Server
  contents:
  - "2.2.1.  Group Controller and Key Server\n   The Group Controller and Key Server\
    \ (GCKS) represent both the entity\n   and functions relating to the issuance\
    \ and management of\n   cryptographic keys used by a multicast group.  The GCKS\
    \ also conducts\n   user-authentication and authorization checks on the candidate\
    \ members\n   of the multicast group.\n   The Key Server (KS) and the Group Controller\
    \ (GC) have somewhat\n   different functionality and may in principle be regarded\
    \ as separate\n   entities.  Currently the framework regards the two entities\
    \ as one\n   \"box\" in order to simplify the design, and in order not to mandate\n\
    \   standardization of the protocol between the KS and the GC.  It is\n   stressed\
    \ that the KS and GC need not be co-located.  Furthermore,\n   future designs\
    \ may choose to standardize the protocol between the GC\n   and the KS, without\
    \ altering other components.\n"
- title: 2.2.2.  Sender and Receiver
  contents:
  - "2.2.2.  Sender and Receiver\n   The Sender is an entity that sends data to the\
    \ multicast group.  In a\n   1-to-N multicast group only a single sender is authorized\
    \ to transmit\n   data to the group.  In an M-to-N multicast group, two or more\
    \ group\n   members are authorized to be senders.  In some groups all members\
    \ are\n   authorized as senders.\n   Both Sender and Receiver must interact with\
    \ the GCKS entity for the\n   purpose of key management.  This includes user and/or\
    \ device\n   authentication, user and/or device authorization, the obtaining of\n\
    \   keying material in accordance with some key management policies for\n   the\
    \ group, obtaining new keys during key-updates, and obtaining other\n   messages\
    \ relating to the management of keying material and security\n   parameters.\n\
    \   Senders and Receivers may receive much of their policy from the GCKS\n   entities.\
    \  The event of joining a multicast group is typically\n   coupled with the Sender/Receiver\
    \ obtaining keying material from a\n   GCKS entity.  This does not preclude the\
    \ direct interaction between\n   the Sender/Receiver and the Policy Server.\n"
- title: 2.2.3.  Policy Server
  contents:
  - "2.2.3.  Policy Server\n   The Policy Server represents both the entity and functions\
    \ used to\n   create and manage security policies specific to a multicast group.\n\
    \   The Policy Server interacts with the GCKS entity in order to install\n   and\
    \ manage the security policies related to the membership of a given\n   multicast\
    \ group and those related to keying material for a multicast\n   group.\n   The\
    \ interactions between the Policy Server and other entities in the\n   Reference\
    \ Framework is dependent to a large extent on the security\n   circumstances being\
    \ addressed by a given policy.\n"
- title: 2.3.  Elements of the Distributed Reference Framework
  contents:
  - "2.3.  Elements of the Distributed Reference Framework\n   The need for solutions\
    \ to be scalable to large groups across wide\n   geographic regions of the Internet\
    \ requires the elements of the\n   framework to also function as a distributed\
    \ system.  Figure 2 shows\n   how distributed designs supporting large group scalability\
    \ fit into\n   the Reference Framework.\n    +-----------------------------------------------------------------+\n\
    \    |                                                                 |\n   \
    \ |                                                                 |\n    | FUNCTIONAL\
    \                                                      |\n    |   AREAS      \
    \                                                   |\n    |            +------+\
    \                                  +------+   |\n    | Multicast  |Policy|<-------------------------------->|Policy|\
    \   |\n    | Security   |Server|                                  |Server|   |\n\
    \    | Policies   +------+                                  +------+   |\n   \
    \ |                ^                                         ^      |\n    | \
    \               |                                         |      |\n    |    \
    \            |                                         |      |\n    |       \
    \         v                                         v      |\n    |          \
    \  +------+                                  +------+   |\n    | Group      |Group\
    \ |<-------------------------------> |Group |   |\n    | Key        |Ctrl/ |<---------+\
    \                       |Ctlr/ |   |\n    | Management |Key   |          |   \
    \                    |Key   |   |\n    |            |Server|          V      \
    \                 |Server|   |\n    |            +------+     +--------+     \
    \              +------+   |\n    |                ^        |        |        \
    \               ^      |\n    |                |        |Receiver|           \
    \            |      |\n    |                |        |        |              \
    \         |      |\n    |                v        +--------+                 \
    \      |      |\n    |            +------+          ^                        \
    \   V      |\n    |            |      |          |                      +--------+\
    \  |\n    | Multicast  |Sender|----------+                      |        |  |\n\
    \    | Data       |      |-------------------------------->|Receiver|  |\n   \
    \ | Handling   |      |                                 |        |  |\n    | \
    \           +------+                                 +--------+  |\n    +-----------------------------------------------------------------+\n\
    \       Figure 2: Distributed Multicast Security Reference Framework\n   In a\
    \ distributed design the GCKS entity interacts with other GCKS\n   entities to\
    \ achieve scalability in the key management related\n   services.  GCKS entities\
    \ will require a means of authenticating their\n   peer GCKS entities, a means\
    \ of authorization, and a means of\n   interacting securely to pass keys and policy.\n\
    \   Similarly, Policy Servers must interact with each other securely to\n   allow\
    \ the communication and enforcement of policies across the\n   Internet.\n   Two\
    \ Receiver boxes are displayed corresponding to the situation where\n   both the\
    \ Sender and Receiver employ the same GCKS entity (centralized\n   architecture)\
    \ and where the Sender and Receiver employ different GCKS\n   entities (distributed\
    \ architecture).  In the distributed design, all\n   Receivers must obtain identical\
    \ keys and policy.  Each member of a\n   multicast group may interact with a primary\
    \ GCKS entity (e.g., the\n   \"nearest\" GCKS entity, measured in terms of a well-defined\
    \ and\n   consistent metric).  Similarly, a GCKS entity may interact with one\n\
    \   or more Policy Servers, also arranged in a distributed architecture.\n"
- title: 3.  Functional Areas
  contents:
  - "3.  Functional Areas\n   The Reference Framework identifies three functional\
    \ areas.  They are:\n      -  Multicast data handling.  This area covers the security-related\n\
    \         treatments of multicast data by the sender and the receiver.\n     \
    \    This functional area is further discussed in Section 3.1.\n      -  Group\
    \ Key Management.  This area is concerned with the secure\n         distribution\
    \ and refreshment of keying material.  This\n         functional area is further\
    \ discussed in Section 3.2.\n      -  Multicast Security Policies.  This area\
    \ covers aspects of\n         policy in the context of multicast security, taking\
    \ into\n         consideration the fact that policies may be expressed in\n  \
    \       different ways: that they may exist at different levels in a\n       \
    \  given multicast security architecture, and that they may be\n         interpreted\
    \ differently according to the context in which they\n         are specified and\
    \ implemented.  This functional area is further\n         discussed in Section\
    \ 3.3.\n"
- title: 3.1.  Multicast Data Handling
  contents:
  - "3.1.  Multicast Data Handling\n   In a secure multicast group, the data typically\
    \ needs to be:\n      1. Encrypted using the group key, mainly for access control\
    \ and\n         possibly also for confidentiality.\n      2. Authenticated, for\
    \ verifying the source and integrity of the\n         data.  Authentication takes\
    \ two flavors:\n         a. Source authentication and data integrity.  This\n\
    \            functionality guarantees that the data originated with the\n    \
    \        claimed source and was not modified en route (either by a\n         \
    \   group member or an external attacker).\n         b. Group authentication.\
    \  This type of authentication only\n            guarantees that the data was\
    \ generated (or last modified) by\n            some group member.  It does not\
    \ guarantee data integrity\n            unless all group members are trusted.\n\
    \   While multicast encryption and group authentication are fairly\n   standard\
    \ and similar to encrypting and authenticating a point-to-\n   point communication,\
    \ source authentication for multicast is\n   considerably more involved.  Consequently,\
    \ off-the-shelf solutions\n   (e.g., taken from IPsec [RFC2406]) may be sufficient\
    \ for encryption\n   and group authentication.  For source authentication, however,\n\
    \   special-purpose transformations are necessary.  See [CCPRRS] for\n   further\
    \ elaboration on the concerns regarding the data transforms.\n   Multicast data\
    \ encrypted and/or authenticated by a sender should be\n   handled the same way\
    \ by both centralized and distributed receivers,\n   (as shown in Figure 2).\n\
    \   The \"Multicast Encapsulating Security Payload\" [BCCR] provides the\n   definition\
    \ for Multicast ESP for data traffic.  The \"Multicast Source\n   Authentication\
    \ Transform Specification\" [PCW] defines the use of the\n   TESLA algorithm for\
    \ source authentication in multicast.\n"
- title: 3.2.  Group Key Management
  contents:
  - "3.2.  Group Key Management\n   The term \"keying material\" refers to the cryptographic\
    \ keys belonging\n   to a group, the state associated with the keys, and the other\n\
    \   security parameters related to the keys.  Hence, the management of\n   the\
    \ cryptographic keys belonging to a group necessarily requires the\n   management\
    \ of their associated state and parameters.  A number of\n   solutions for specific\
    \ issues must be addressed.  These may include\n   the following:\n   -  Methods\
    \ for member identification and authentication.\n   -  Methods to verify the membership\
    \ to groups.\n   -  Methods to establish a secure channel between a GCKS entity\
    \ and\n      the member, for the purpose of delivery of shorter-term keying\n\
    \      material pertaining to a group.\n   -  Methods to establish a long-term\
    \ secure channel between one GCKS\n      entity and another, for the purpose of\
    \ distributing shorter-term\n      keying material pertaining to a group.\n  \
    \ -  Methods to effect the changing of keys and keying material.\n   -  Methods\
    \ to detect and signal failures and perceived compromises to\n      keys and keying\
    \ material.\n   The requirements related to the management of keying material\
    \ must be\n   seen in the context of the policies that prevail within the given\n\
    \   circumstance.\n   Core to the area of key management is Security Association\
    \ (SA)\n   Management, which will be discussed further below.\n   A \"Group Key\
    \ Management Architecture\" document [BCDL] further defines\n   the key management\
    \ architecture for multicast security.  It builds on\n   the Group Security Association\
    \ (GSA) concept, and further defines the\n   roles of the Key Server and Group\
    \ Controller.\n   \"The Group Domain of Interpretation\" [RFC3547], \"GSAKMP\"\
    \ [GSAKMP],\n   and \"MIKEY\" [ACLNM] are three instances of protocols implementing\
    \ the\n   group key management function.\n"
- title: 3.3.  Multicast Security Policies
  contents:
  - "3.3.  Multicast Security Policies\n   Multicast Security Policies must provide\
    \ the rules for operation for\n   the other elements of the Reference Framework.\
    \  Security Policies may\n   be distributed in an ad-hoc fashion in some instances.\
    \  However,\n   better coordination and higher levels of assurance are achieved\
    \ if a\n   Policy Controller distributes Security Policies policy to the group.\n\
    \   Multicast security policies must represent, or contain, more\n   information\
    \ than a traditional peer-to-peer policy.  In addition to\n   representing the\
    \ security mechanisms for the group communication, the\n   policy must also represent\
    \ the rules for the governance of the secure\n   group.  For example, policy would\
    \ specify the authorization level\n   necessary in order for an entity to join\
    \ a group.  More advanced\n   operations would include the conditions when a group\
    \ member must be\n   forcibly removed from the group, and what to do if the group\
    \ members\n   need to resynchronize because of lost key management messages.\n\
    \   The application of policy at the Group Controller element and the\n   member\
    \ (sender and receiver) elements must be described.  While there\n   is already\
    \ a basis for security policy management in the IETF,\n   multicast security policy\
    \ management extends the concepts developed\n   for unicast communication in the\
    \ areas of:\n   -  Policy creation,\n   -  High-level policy translation, and\n\
    \   -  Policy representation.\n   Examples of work in multicast security policies\
    \ include the Dynamic\n   Cryptographic Context Management project [Din], Group\
    \ Key Management\n   Protocol [Har1, Har2], and Antigone [McD].\n   Policy creation\
    \ for secure multicast has several more dimensions than\n   the single administrator\
    \ specified policy assumed in the existing\n   unicast policy frameworks.  Secure\
    \ multicast groups are usually large\n   and by their very nature extend over\
    \ several administrative domains,\n   if not spanning a different domain for each\
    \ user.  There are several\n   methods that need to be considered in the creation\
    \ of a single,\n   coherent group security policy.  They include a top-down\n\
    \   specification of the group policy from the group initiator and\n   negotiation\
    \ of the policy between the group members (or prospective\n   members).  Negotiation\
    \ can be as simple as a strict intersection of\n   the policies of the members\
    \ or extremely complicated using weighted\n   voting systems.\n   The translation\
    \ of policy rules from one data model to another is\n   much more difficult in\
    \ a multicast group environment.  This is\n   especially true when group membership\
    \ spans multiple administrative\n   domains.  Policies specified at a high level\
    \ with a Policy Management\n   tool must be translated into more precise rules\
    \ that the available\n   security policy mechanisms can both understand and implement.\
    \  When\n   dealing with multicast communication and its multiple participants,\n\
    \   it is essential that the individual translation performed for each\n   participant\
    \ result in the use of a mechanism that is interoperable\n   with the results\
    \ of all of the other translations.  Typically, the\n   translation from high-level\
    \ policy to specific policy objects must\n   result in the same objects in order\
    \ to achieve communication between\n   all of the group members.  The requirement\
    \ that policy translation\n   results in the same objects places constraints on\
    \ the use and\n   representations in the high-level policies.\n   It is also important\
    \ that policy negotiation and translation be\n   performed as an integral part\
    \ of joining a group.  Adding a member to\n   a group is meaningless if they will\
    \ not be able to participate in the\n   group communications.\n"
- title: 4.  Group Security Associations (GSA)
  contents:
  - '4.  Group Security Associations (GSA)

    '
- title: 4.1.  The Security Association
  contents:
  - "4.1.  The Security Association\n   A security association is a commonly used\
    \ term in cryptographic\n   systems (e.g., [RFC2401, RFC2406bis, RFC2409]).  This\
    \ document uses\n   the term to mean any set of policy and cryptographic keys\
    \ that\n   provide security services for the network traffic matching that\n \
    \  policy.  A Security Association usually contains the following\n   attributes:\n\
    \      -  selectors, such as source and destination transport addresses.\n   \
    \   -  properties, such as an security parameter index (SPI) or cookie\n     \
    \    pair, and identities.\n      -  cryptographic policy, such as the algorithms,\
    \ modes, key\n         lifetimes, and key lengths used for authentication or\n\
    \         confidentiality.\n      -  keys, such as authentication, encryption\
    \ and signing keys.\n   Group key management uses a different set of abstractions\
    \ than\n   point-to-point key management systems (such as IKE [RFC2409]).\n  \
    \ Notwithstanding, the abstractions used in the Group Key Management\n   functional\
    \ area may be built from the point-to-point key management\n   abstractions.\n"
- title: '4.2.  Structure of a GSA: Introduction'
  contents:
  - "4.2.  Structure of a GSA: Introduction\n   Security associations (SAs) for group\
    \ key management are more\n   complex, and are usually more numerous, than for\
    \ point-to-point key\n   management algorithms.  The latter establishes a key\
    \ management SA to\n   protect application SAs (usually one or two, depending\
    \ on the\n   protocol).  However, group key management may require up to three\
    \ or\n   more SAs.  These SAs are described in later sections.\n   A GSA contains\
    \ all of the SA attributes identified in the previous\n   section, as well some\
    \ additional attributes pertaining to the group.\n   As shown in Figure 3, the\
    \ GSA builds on the SA in two distinct ways.\n   -  First, the GSA is a superset\
    \ of an SA (Figure 3(a)).  A GSA has\n      group policy attributes.  For example,\
    \ the kind of signed\n      credentials needed for group membership, whether group\
    \ members\n      will be given new keys when a member is added (called \"backward\n\
    \      re-key\" below), or whether group members will be given new keys\n    \
    \  when a member is removed from the group (\"forward re-key\").  A GSA\n    \
    \  also includes an SA as an attribute of itself.\n   -  Second, the GSA is an\
    \ aggregation of SAs (Figure 3(b)).  A GSA is\n      comprised of multiple SAs,\
    \ and these SAs may be used for several\n      independent purposes.\n       \
    \     +---------------+              +-------------------+\n            |    \
    \ GSA       |              |        GSA        |\n            |              \
    \ |              | +-----+   +-----+ |\n            |               |        \
    \      | | SA1 |   | SA2 | |\n            |    +----+     |              | +-----+\
    \   +-----+ |\n            |    | SA |     |              |      +-----+     \
    \ |\n            |    +----+     |              |      | SA3 |      |\n      \
    \      |               |              |      +-----+      |\n            +---------------+\
    \              +-------------------+\n               (a) superset            \
    \      (b) aggregation\n                   Figure 3: Relationship of GSA to SA\n"
- title: '4.3.  Structure of a GSA: Reasoning'
  contents:
  - "4.3.  Structure of a GSA: Reasoning\n   Figure 4 shows three categories of SAs\
    \ that can be aggregated into a\n   GSA.\n      +------------------------------------------------------------+\n\
    \      |                                                            |\n      |\
    \                    +------------------+                    |\n      |      \
    \              |       GCKS       |                    |\n      |            \
    \        |                  |                    |\n      |                  \
    \  |   REG      REG   |                    |\n      |                    |   \
    \ /  REKEY \\    |                    |\n      |                    +---/-----|----\\\
    ---+                    |\n      |                       /      |     \\     \
    \                  |\n      |                      /       |      \\         \
    \             |\n      |                     /        |       \\             \
    \        |\n      |                    /         |        \\                 \
    \   |\n      |                   /          |         \\                   |\n\
    \      |       +----------/------+    |   +------\\----------+       |\n     \
    \ |       |        REG      |    |   |      REG        |       |\n      |    \
    \   |            REKEY-----+----REKEY            |       |\n      |       |  \
    \   Sender      |        |      Receiver   |       |\n      |       |        \
    \     DATA----------DATA             |       |\n      |       +-----------------+\
    \        +-----------------+       |\n      |                                \
    \                            |\n      |                                      \
    \                      |\n      +------------------------------------------------------------+\n\
    \             Figure 4: GSA Structure and 3 categories of SAs\n   The three categories\
    \ of SAs are:\n   -  Registration SA (REG): A separate unicast SA between the\
    \ GCKS and\n      each group member, regardless of whether the group member is\
    \ a\n      sender or a receiver or acting in both roles.\n   -  Re-key SA (REKEY):\
    \ A single multicast SA between the GCKS and all\n      of the group members.\n\
    \   -  Data Security SA (DATA): A multicast SA between each multicast\n      source\
    \ speaker and the group's receivers.  There may be as many\n      data SAs as\
    \ there are multicast sources allowed by the group's\n      policy.\n   Each of\
    \ these SAs are defined in more detail in the next section.\n"
- title: 4.4.  Definition of GSA
  contents:
  - "4.4.  Definition of GSA\n   The three categories of SAs correspond to three different\
    \ kinds of\n   communications commonly required for group communications.  This\n\
    \   section describes the SAs depicted in Figure 4 in detail.\n   -  Registration\
    \ SA (REG):\n      An SA is required for (bi-directional) unicast communications\n\
    \      between the GCKS and a group member (be it a Sender or Receiver).\n   \
    \   This SA is established only between the GCKS and a Member.  The\n      GCKS\
    \ entity is charged with access control to the group keys, with\n      policy\
    \ distribution to members (or prospective members), and with\n      group key\
    \ dissemination to Sender and Receiver members.  This use\n      of a (unicast)\
    \ SA as a starting point for key management is common\n      in a number of group\
    \ key management environments [RFC3547, GSAKMP,\n      CCPRRS, RFC2627, BMS].\n\
    \      The Registration SA is initiated by the member to pull GSA\n      information\
    \ from the GCKS.  This is how the member requests to\n      join the secure group,\
    \ or has its GSA keys re-initialized after\n      being disconnected from the\
    \ group (e.g., when its host computer\n      has been turned off during re-key\
    \ operations).  The GSA\n      information pulled down from the GCKS is related\
    \ to the other two\n      SAs defined as part of the GSA.\n      Note that this\
    \ (unicast) SA is used to protect the other elements\n      of the GSA.  As such,\
    \ the Registration SA is crucial and is\n      inseparable from the other two\
    \ SAs in the definition of a GSA.\n      However, the requirement of a registration\
    \ SA does not imply the\n      need of a registration protocol to create that\
    \ Registration SA.\n      The registration SA could instead be setup through some\
    \ manual\n      means, such as distributed on a smart card.  Thus, what is\n \
    \     important is that a Registration SA exists, and is used to protect\n   \
    \   the other SAs.\n      From the perspective of one given GCKS, there are as\
    \ many unique\n      registration SAs as there are members (Senders and/or Receivers)\n\
    \      in the group.  This may constitute a scalability concern for some\n   \
    \   applications.  A registration SA may be established on-demand with\n     \
    \ a short lifetime, whereas re-key and data security SAs are\n      established\
    \ at least for the life of the sessions that they\n      support.\n      Conversely\
    \ the registration SA could be left in place for the\n      duration of the group\
    \ lifetime, if scalability is not an issue.\n      Such a long term registration\
    \ SA would be useful for re-\n      synchronization or deregistration purposes.\n\
    \   -  Re-key SA (REKEY):\n      In some cases, a GCKS needs the ability to \"\
    push\" new SAs as part\n      of the GSA.  These new SAs must be sent to all group\
    \ members.  In\n      other cases, the GCKS needs the ability to quickly revoke\
    \ access\n      to one or more group members.  Both of these needs are satisfied\n\
    \      with the Re-key SA.\n      This Re-key SA is a unidirectional multicast\
    \ transmission of key\n      management messages from the GCKS to all group members.\
    \  As such,\n      this SA is known by the GCKS and by all members of the group.\n\
    \      This SA is not negotiated, since all the group members must share\n   \
    \   it.  Thus, the GCKS must be the authentic source and act as the\n      sole\
    \ point of contact for the group members to obtain this SA.\n      A rekey SA\
    \ is not absolutely required to be part of a GSA.  For\n      example, the lifetime\
    \ of some groups may be short enough such that\n      a rekey is not necessary.\
    \  Conversely, the policy for the group\n      could specify multiple rekey SAs\
    \ of different types.  For example,\n      if the GC and KS are separate entities,\
    \ the GC may deliver rekey\n      messages that adjust the group membership, and\
    \ the KS may deliver\n      rekey messages with new DATA SAs.\n   -  Data Security\
    \ SA (DATA):\n      The Data Security SA protects data between member senders\
    \ and\n      member receivers.\n      One or more SAs are required for the multicast\
    \ transmission of\n      data-messages from the Sender to other group members.\
    \  This SA is\n      known by the GCKS and by all members of the group.\n    \
    \  Regardless of the number of instances of this third category of\n      SA,\
    \ this SA is not negotiated.  Rather, all group members obtain\n      it from\
    \ the GCKS.  The GCKS itself does not use this category of\n      SA.\n      From\
    \ the perspective of the Receivers, there is at least one data\n      security\
    \ SA for the member sender (one or more) in the group.  If\n      the group has\
    \ more than one data security SA, the data security\n      protocol must have\
    \ a means of differentiating the SAs (e.g., with\n      a SPI).\n      There are\
    \ a number of possibilities with respect to the number of\n      data security\
    \ SAs:\n      1. Each sender in the group could be assigned a unique data\n  \
    \       security SA, thereby resulting in each receiver having to\n         maintain\
    \ as many data security SAs as there are senders in the\n         group.  In this\
    \ case, each sender may be verified using source\n         origin authentication\
    \ techniques.\n      2. The entire group deploys a single data security SA for\
    \ all\n         senders.  Receivers would then be able to maintain only one\n\
    \         data security SA.\n      3. A combination of 1. and 2.\n"
- title: 4.5.  Typical Compositions of a GSA
  contents:
  - "4.5.  Typical Compositions of a GSA\n   Depending on the multicast group policy,\
    \ many compositions of a GSA\n   are possible.  For illustrative purposes, this\
    \ section describes a\n   few possible compositions.\n   -  A group of memory-constrained\
    \ members may require only a REG SA,\n      and a single DATA SA.\n   -  A \"\
    pay-per-session\" application, where all of the SA information\n      needed for\
    \ the session may be distributed over a REG SA.  Re-key\n      and re-initialization\
    \ of DATA SAs may not be necessary, so there\n      is no REKEY SA.\n   -  A subscription\
    \ group, where keying material is changed as\n      membership changes.  A REG\
    \ SA is needed to distribute other SAs; a\n      REKEY SA is needed to re-initialize\
    \ a DATA SA at the time\n      membership changes.\n"
- title: 5.  Security Services
  contents:
  - "5.  Security Services\n   This section identifies security services for designated\
    \ interfaces\n   of Figure 2.  Distinct security services are assigned to specific\n\
    \   interfaces.  For example, multicast source authentication, data\n   authentication,\
    \ and confidentiality occur on the multicast data\n   interface between Senders\
    \ and Receivers in Figure 2.  Authentication\n   and confidentiality services\
    \ may also be needed between the Key\n   Server and group members (i.e., the Senders\
    \ and Receivers of Figure\n   2), but the services that are needed for multicast\
    \ key management may\n   be unicast as well as multicast.  A security service\
    \ in the Multicast\n   Security Reference Framework therefore identifies a specific\
    \ function\n   along one or more Figure 2 interfaces.\n   This paper does not\
    \ attempt to analyze the trust relationships,\n   detailed functional requirements,\
    \ performance requirements, suitable\n   algorithms, and protocol specifications\
    \ for IP multicast and\n   application-layer multicast security.  Instead, that\
    \ work will occur\n   as the security services are further defined and realized\
    \ in\n   algorithms and protocols.\n"
- title: 5.1.  Multicast Data Confidentiality
  contents:
  - "5.1.  Multicast Data Confidentiality\n   This security service handles the encryption\
    \ of multicast data at the\n   Sender's end and the decryption at the Receiver's\
    \ end.  This security\n   service may also apply the keying material that is provided\
    \ by\n   Multicast Key Management in accordance with Multicast Policy\n   Management,\
    \ but it is independent of both.\n   An important part of the Multicast Data Confidentiality\
    \ security\n   service is in the identification of and motivation for specific\n\
    \   ciphers that should be used for multicast data.  Obviously, not all\n   ciphers\
    \ will be suitable for IP multicast and application-layer\n   multicast traffic.\
    \  Since this traffic will usually be connectionless\n   UDP flows, stream ciphers\
    \ may be unsuitable, though hybrid\n   stream/block ciphers may have advantages\
    \ over some block ciphers.\n   Regarding application-layer multicast, some consideration\
    \ is needed\n   to consider the effects of sending encrypted data in a multicast\n\
    \   environment lacking admission-control, where practically any\n   application\
    \ program can join a multicast event independently of its\n   participation in\
    \ a multicast security protocol.  Thus, this security\n   service is also concerned\
    \ with the effects of multicast\n   confidentiality services (intended and otherwise)\
    \ on application\n   programs.  Effects to both Senders and Receivers are considered.\n\
    \   In Figure 2, the Multicast Data Confidentiality security service is\n   placed\
    \ in Multicast Data Handling Area along the interface between\n   Senders and\
    \ Receivers.  The algorithms and protocols that are\n   realized from work on\
    \ this security service may be applied to other\n   interfaces and areas of Figure\
    \ 2 when multicast data confidentiality\n   is needed.\n"
- title: 5.2.  Multicast Source Authentication and Data Integrity
  contents:
  - "5.2.  Multicast Source Authentication and Data Integrity\n   This security service\
    \ handles source authentication and integrity\n   verification of multicast data.\
    \  It includes the transforms to be\n   made both at the Sender's end and at the\
    \ Receiver's end.  It assumes\n   that the appropriate signature and verification\
    \ keys are provided via\n   Multicast Key Management in accordance with Multicast\
    \ Policy\n   Management as described below.  This is one of the harder areas of\n\
    \   multicast security due to the connectionless and real-time\n   requirements\
    \ of many IP multicast applications.  There are classes of\n   application-layer\
    \ multicast security, however, where offline source\n   and data authentication\
    \ will suffice.  As discussed previously, not\n   all multicast applications require\
    \ real-time authentication and\n   data-packet integrity.  A robust solution to\
    \ multicast source and\n   data authentication, however, is necessary for a complete\
    \ solution to\n   multicast security.\n   In Figure 2, the Multicast Source and\
    \ Data Authentication security\n   service is placed in Multicast Data Handling\
    \ Area along the interface\n   between Senders and Receivers.  The algorithms\
    \ and protocols that are\n   produced for this functional area may have applicability\
    \ to security\n   services in other functional area that use multicast services\
    \ such as\n   Group Key Management.\n"
- title: 5.3.  Multicast Group Authentication
  contents:
  - "5.3.  Multicast Group Authentication\n   This security service provides a limited\
    \ amount of authenticity of\n   the transmitted data: It only guarantees that\
    \ the data originated\n   with (or was last modified by) one of the group members.\
    \  It does not\n   guarantee authenticity of the data in case that other group\
    \ members\n   are not trusted.\n   The advantage of group authentication is that\
    \ it is guaranteed via\n   relatively simple and efficient cryptographic transforms.\
    \  Therefore,\n   when source authentication is not paramount, group authentication\n\
    \   becomes useful.  In addition, performing group authentication is\n   useful\
    \ even when source authentication is later performed: it\n   provides a simple-to-verify\
    \ weak integrity check that is useful as a\n   measure against denial-of-service\
    \ attacks.\n   The Multicast Group Authentication security service is placed in\
    \ the\n   Multicast Data Handling Area along the interface between Senders and\n\
    \   Receivers.\n"
- title: 5.4.  Multicast Group Membership Management
  contents:
  - "5.4.  Multicast Group Membership Management\n   This security service describes\
    \ the functionality of registration of\n   members with the Group Controller,\
    \ and de-registration of members\n   from the Group Controller.  These are security\
    \ functions, which are\n   independent from IP multicast group \"join\" and \"\
    leave\" operations\n   that the member may need to perform as a part of group\
    \ admission\n   control protocols (i.e., IGMP [RFC3376], MLD [RFC3019]).\n   Registration\
    \ includes member authentication, notification and\n   negotiation of security\
    \ parameters, and logging of information\n   according to the policies of the\
    \ group controller and the would-be\n   member. (Typically, an out-of-band advertisement\
    \ of group information\n   would occur before the registration takes place.  The\
    \ registration\n   process will typically be invoked by the would-be member.)\n\
    \   De-registration may occur either at the initiative of the member or\n   at\
    \ the initiative of the group controller.  It would result in\n   logging of the\
    \ de-registration event by the group controller and an\n   invocation of the appropriate\
    \ mechanism for terminating the\n   membership of the de-registering member (see\
    \ Section 5.5).\n   This security service also describes the functionality of\
    \ the\n   communication related to group membership among different GCKS\n   servers\
    \ in a distributed group design.\n   In Figure 2, the Multicast Group Membership\
    \ security service is\n   placed in the Group Key Management Area and has interfaces\
    \ to Senders\n   and Receivers.\n"
- title: 5.5.  Multicast Key Management
  contents:
  - "5.5.  Multicast Key Management\n   This security service describes the functionality\
    \ of distributing and\n   updating the cryptographic keying material throughout\
    \ the life of the\n   group.  Components of this security service may include:\n\
    \      -  GCKS to group member (Sender or Receiver) notification\n         regarding\
    \ current keying material (e.g., group encryption and\n         authentication\
    \ keys, auxiliary keys used for group management,\n         keys for source authentication,\
    \ etc.).\n      -  Updating of current keying material, depending on circumstances\n\
    \         and policies.\n      -  Termination of groups in a secure manner, including\
    \ the secure\n         group itself and the associated keying material.\n   Among\
    \ the responsibilities of this security service is the secure\n   management of\
    \ keys between Key Servers and group members, the\n   addressing issues for the\
    \ multicast distribution of keying material,\n   and the scalability or other\
    \ performance requirements for multicast\n   key management [RFC2627, BMS].  Key\
    \ Servers and group members may\n   take advantage of a common Public Key Infrastructure\
    \ (PKI) for\n   increased scalability of authentication and authorization.\n \
    \  To allow for an interoperable and secure IP multicast security\n   protocol,\
    \ this security service may need to specify host abstractions\n   such as a group\
    \ security association database (GSAD) and a group\n   security policy database\
    \ (GSPD) for IP multicast security.  The\n   degree of overlap between IP multicast\
    \ and application-layer\n   multicast key management needs to be considered. \
    \ Thus, this security\n   service takes into account the key management requirements\
    \ for IP\n   multicast, the key management requirements for application-layer\n\
    \   multicast, and to what degree specific realizations of a Multicast\n   Key\
    \ Management security service can satisfy both.  ISAKMP, moreover,\n   has been\
    \ designed to be extensible to multicast key management for\n   both IP multicast\
    \ and application-layer multicast security [RFC2408].\n   Thus, multicast key\
    \ management protocols may use the existing ISAKMP\n   standard's Phase 1 and\
    \ Phase 2 protocols, possibly with needed\n   extensions (such as GDOI [RFC3547]\
    \ or application-layer multicast\n   security).\n   This security service also\
    \ describes the functionality of the\n   communication related to key management\
    \ among different GCKS servers\n   in a distributed group design.\n   Multicast\
    \ Key Management appears in both the centralized and\n   distributed designs as\
    \ shown in Figure 2 and is placed in the Group\n   Key Management Area.\n"
- title: 5.6.  Multicast Policy Management
  contents:
  - "5.6.  Multicast Policy Management\n   This security service handles all matters\
    \ related to multicast group\n   policy including membership policy and multicast\
    \ key management\n   policy.  Indeed, one of the first tasks in further defining\
    \ this\n   security service is identifying the different areas of multicast\n\
    \   policy.  Multicast Policy Management includes the design of the\n   policy\
    \ server for multicast security, the particular policy\n   definitions that will\
    \ be used for IP multicast and application-layer\n   multicast security, and the\
    \ communication protocols between the\n   Policy Server and the Key Server.  This\
    \ security service may be\n   realized using a standard policy infrastructure\
    \ such as a Policy\n   Decision Point (PDP) and Policy Enforcement Point (PEP)\
    \ architecture\n   [RFC2748].  Thus, it may not be necessary to re-invent a separate\n\
    \   architecture for multicast security policy.  At minimum, however,\n   this\
    \ security service will be realized in a set of policy\n   definitions, such as\
    \ multicast security conditions and actions.\n   The Multicast Policy Management\
    \ security service describes the\n   functionality of the communication between\
    \ an instance of a GCKS to\n   an instance of the Policy Server.  The information\
    \ transmitted may\n   include policies concerning groups, memberships, keying\
    \ material\n   definition and their permissible uses, and other information. \
    \ This\n   security service also describes communication between and among\n \
    \  Policy Servers.  Group members are not expected to directly\n   participate\
    \ in this security service.  However, this option is not\n   ruled out.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document describes an architectural framework\
    \ for protecting\n   multicast and group traffic with cryptographic protocols.\
    \  Three\n   functional areas are identified within the framework.  Each\n   functional\
    \ area has unique security considerations, and these are\n   discussed below.\n\
    \   This architectural framework is end-to-end, and does not rely upon\n   the\
    \ network that connects group controllers and group members.  It\n   also does\
    \ not attempt to resolve security issues in the unicast or\n   multicast routing\
    \ infrastructures, or in multicast admission control\n   protocols.  As such,\
    \ denial of service, message deletion, and other\n   active attacks against the\
    \ unicast or multicast routing\n   infrastructures are not addressed by this framework.\
    \  Section 1.1\n   describes the relationship of the network infrastructure to\
    \ the\n   multicast group security architecture.\n"
- title: 6.1.  Multicast Data Handling
  contents:
  - "6.1.  Multicast Data Handling\n   Cryptographic protocols protecting multicast\
    \ data are responsible for\n   providing confidentiality and group authentication.\
    \  They should also\n   be able to provide source authentication to uniquely identify\
    \ senders\n   to the group.  Replay protection of multicast data is also desirable,\n\
    \   but may not always be possible.  This is due to the complexity of\n   maintaining\
    \ replay protection state for multiple senders.  Section\n   3.1 elaborates on\
    \ the security requirements for this area.\n"
- title: 6.2.  Group Key Management
  contents:
  - "6.2.  Group Key Management\n   Group key management protocols provide cryptographic\
    \ keys and policy\n   to group members.  They are responsible for authenticating\
    \ and\n   authorizing group members before revealing those keys, and for\n   providing\
    \ confidentiality and authentication of those keys during\n   transit.  They are\
    \ also responsible for providing a means for\n   rekeying the group, in the case\
    \ that the policy specifies a lifetime\n   for the keys.  They also are responsible\
    \ for revocation of group\n   membership, once one or more group members have\
    \ had their\n   authorization to be a group member revoked.  Section 3.2 describes\n\
    \   the security requirements of this area in more detail.\n"
- title: 6.3.  Multicast Security Policies
  contents:
  - "6.3.  Multicast Security Policies\n   Cryptographic protocols providing multicast\
    \ security policies are\n   responsible for distributing that policy such that\
    \ the integrity of\n   the policy is maintained.  If the policy itself is confidential,\
    \ they\n   also are responsible for authenticating group controllers and group\n\
    \   members, and providing confidentiality of the policy during transit.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Much of the text in this document was derived from two\
    \ research\n   papers.  The framework for this document came from a paper co-\n\
    \   authored by Thomas Hardjono, Ran Canetti, Mark Baugher, and Pete\n   Dinsmore.\
    \  Description of the GSA came from a document co-authored by\n   Hugh Harney,\
    \ Mark Baugher, and Thomas Hardjono.  George Gross\n   suggested a number of improvements\
    \ that were included in later\n   versions of this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2401]    Kent, S. and R. Atkinson, \"Security\
    \ Architecture for the\n                Internet Protocol\", RFC 2401, November\
    \ 1998.\n   [RFC2408]    Maughan, D., Shertler, M., Schneider, M. and J. Turner,\n\
    \                \"Internet Security Association and Key Management\n        \
    \        Protocol\", RFC 2408, November 1998.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ACLNM]      J. Arkko, et. al., \"MIKEY: Multimedia\
    \ Internet KEYing\",\n                Work in Progress, December 2003.\n   [BCCR]\
    \       M. Baugher, R. Canetti, P. Cheng, P. Rohatgi, \"MESP: A\n            \
    \    Multicast Framework for the IPsec ESP\", Work in\n                Progress,\
    \ October 2002.\n   [BCDL]       M. Baugher, R. Canetti, L. Dondeti, F.  Lindholm,\
    \ \"Group\n                Key Management Architecture\", Work in Progress,\n\
    \                September 2003.\n   [BMS]        D. Balenson, D. McGrew, A. Sherman,\
    \ Key Management for\n                Large Dynamic Groups: One-Way Function Trees\
    \ and\n                Amortized Initialization,\n                http://www.securemulticast.org/draft-balenson-\n\
    \                groupkeymgmt-oft-00.txt, Work in Progress, February\n       \
    \         1999.\n   [CCPRRS]     Canetti, R., Cheng P. C., Pendarakis D., Rao,\
    \ J.,\n                Rohatgi P., Saha D., \"An IPSec-based Host Architecture\n\
    \                for Secure Internet Multicast\",\n                http://www.isoc.org/isoc/conferences/ndss/2000/\n\
    \                proceedings/028.pdf, NDSS 2000.\n   [Din]        Dinsmore, P.,\
    \ Balenson, D., Heyman, M., Kruus, P.,\n                Scace, C., and Sherman,\
    \ A., \"Policy-Based Security\n                Management for Large Dynamic Groups:\
    \  An Overview of the\n                DCCM Project,\" DARPA Information Survivability\n\
    \                Conference and Exposition,\n                http://download.nai.com/products/media/nai/doc/discex-\n\
    \                110199.doc.\n   [GSAKMP]     H. Harney, et. al., \"GSAKMP\",\
    \ Work in Progress, October\n                2003.\n   [Har1]       Harney, H.\
    \ and C. Muckenhirn, \"Group Key Management\n                Protocol (GKMP) Specification\"\
    , RFC 2093, July 1997.\n   [Har2]       Harney, H. and C. Muckenhirn, \"Group\
    \ Key Management\n                Protocol (GKMP) Architecture\", RFC 2094, July\
    \ 1997.\n   [McD]        McDaniel, P., Honeyman, P., and Prakash, A., \"Antigone:\n\
    \                A Flexible Framework for Secure Group Communication,\"\n    \
    \            Proceedings of the Eight USENIX Security Symposium, pp\n        \
    \        99-113, August, 1999.\n   [PCW]        Perrig, A., Canetti, R. and B.\
    \ Whillock, TESLA:\n                Multicast Source Authentication Transform\n\
    \                Specification\", Work in Progress, October 2002.\n   [RFC2362]\
    \    Estrin, D., Farinacci, D., Helmy, A., Thaler, D.,\n                Deering,\
    \ S., Handley, M., Jacobson, V., Liu, C., Sharma,\n                P. and L. Wei,\
    \ \"Protocol Independent Multicast-Sparse\n                Mode (PIM-SM): Protocol\
    \ Specification\",  RFC 2362, June\n                1998.\n   [RFC2406]    Kent,\
    \ S. and R. Atkinson, \"IP Encapsulating Security\n                Payload (ESP)\"\
    , RFC 2406, November 1998.\n   [RFC2406bis] Kent, S., \"IP Encapsulating Security\
    \ Payload (ESP)\",\n                Work in Progress, March 2003.\n   [RFC2409]\
    \    Harkins, D. and D. Carrel, \"The Internet Key Exchange\n                (IKE)\"\
    , RFC 2409, November 1998.\n   [RFC2627]    Wallner, D., Harder, E. and R. Agee,\
    \ \"Key Management for\n                Multicast: Issues and Architectures\"\
    , RFC 2627,\n                September 1998.\n   [RFC2663]    Srisuresh, P. and\
    \ M. Holdrege, \"IP Network Address\n                Translator (NAT) Terminology\
    \ and Considerations\", RFC\n                2663, August 1999.\n   [RFC2748]\
    \    Durham, D., Ed., Boyle, J., Cohen, R., Herzong, S.,\n                Rajan,\
    \ R. and A. Sastry, \"COPS (Common Open Policy\n                Service) Protocol\"\
    , RFC 2748, January 2000.\n   [RFC3019]    Haberman,  B. and R. Worzella, \"IP\
    \ Version 6 Management\n                Information Base for The Multicast Listener\
    \ Discovery\n                Protocol\", RFC 3019, January 2001.\n   [RFC3376]\
    \    Cain, B., Deering, S., Kouvelas, I., Fenner, B. and A.\n                Thyagarajan,\
    \ \"Internet Group Management Protocol,\n                Version 3\", RFC 3376,\
    \ October 2002.\n   [RFC3453]    Luby, M., Vicisano, L., Gemmell, J., Rizzo, M.,\
    \ Handley,\n                M. and J. Crowcroft, \"The Use of Forward Error\n\
    \                Correction (FEC) in Reliable Multicast\", RFC 3453,\n       \
    \         December 2002.\n   [RFC3547]    Baugher, M., Weis, B., Hardjono, T.\
    \ and H. Harney, \"The\n                Group Domain of Interpretation\", RFC\
    \ 3547, December\n                2002.\n   [STW]        M., Steiner, Tsudik,\
    \ G., Waidner, M., CLIQUES: A New\n                Approach to Group key Agreement,\
    \ IEEE ICDCS'98 , May\n                1998.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Thomas Hardjono\n   VeriSign\n   487 E. Middlefield\
    \ Rd.\n   Mountain View, CA 94043, USA\n   Phone:(650) 426-3204\n   EMail: thardjono@verisign.com\n\
    \   Brian Weis\n   Cisco Systems\n   170 W. Tasman Drive,\n   San Jose, CA 95134-1706,\
    \ USA\n   Phone: (408) 526-4796\n   EMail: bew@cisco.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
