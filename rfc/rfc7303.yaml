- title: __initial_text__
  contents:
  - '                            XML Media Types

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification standardizes three media types -- application/xml,\n\
    \   application/xml-external-parsed-entity, and application/xml-dtd --\n   for\
    \ use in exchanging network entities that are related to the\n   Extensible Markup\
    \ Language (XML) while defining text/xml and text/\n   xml-external-parsed-entity\
    \ as aliases for the respective application/\n   types.  This specification also\
    \ standardizes the '+xml' suffix for\n   naming media types outside of these five\
    \ types when those media types\n   represent XML MIME entities.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7303.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Notational Conventions  . . . . . . . . . . . . . . .\
    \ . . . .   4\n     2.1.  Requirements Language . . . . . . . . . . . . . . .\
    \ . . .   4\n     2.2.  Characters, Encodings, Charsets . . . . . . . . . . .\
    \ . .   4\n     2.3.  MIME Entities, XML Entities . . . . . . . . . . . . . .\
    \ .   5\n   3.  Encoding Considerations . . . . . . . . . . . . . . . . . . .\
    \   6\n     3.1.  XML MIME Producers  . . . . . . . . . . . . . . . . . . .  \
    \ 6\n     3.2.  XML MIME Consumers  . . . . . . . . . . . . . . . . . . .   7\n\
    \     3.3.  The BOM and Encoding Conversions  . . . . . . . . . . . .   8\n  \
    \ 4.  XML Media Types . . . . . . . . . . . . . . . . . . . . . . .   9\n    \
    \ 4.1.  XML MIME Entities . . . . . . . . . . . . . . . . . . . .   9\n     4.2.\
    \  Using '+xml' when Registering XML-Based Media Types . . .  11\n     4.3.  Registration\
    \ Guidelines for XML-Based Media Types Not\n           Using   '+xml'  . . . .\
    \ . . . . . . . . . . . . . . . . .  12\n   5.  Fragment Identifiers  . . . .\
    \ . . . . . . . . . . . . . . . .  13\n   6.  The Base URI  . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  14\n   7.  XML Versions  . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  14\n   8.  Examples  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  14\n     8.1.  UTF-8 Charset . . . . . . . . . .\
    \ . . . . . . . . . . . .  15\n     8.2.  UTF-16 Charset  . . . . . . . . . .\
    \ . . . . . . . . . . .  16\n     8.3.  Omitted Charset and 8-Bit MIME Entity\
    \ . . . . . . . . . .  16\n     8.4.  Omitted Charset and 16-Bit MIME Entity \
    \ . . . . . . . . .  16\n     8.5.  Omitted Charset, No Internal Encoding Declaration\
    \ . . . .  17\n     8.6.  UTF-16BE Charset  . . . . . . . . . . . . . . . . .\
    \ . . .  17\n     8.7.  Non-UTF Charset . . . . . . . . . . . . . . . . . . .\
    \ . .  18\n     8.8.  INCONSISTENT EXAMPLE: Conflicting Charset and Internal\n\
    \           Encoding Declaration  . . . . . . . . . . . . . . . . . .  18\n  \
    \   8.9.  INCONSISTENT EXAMPLE: Conflicting Charset and BOM . . . .  18\n   9.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  19\n     9.1.\
    \  application/xml Registration  . . . . . . . . . . . . . .  19\n     9.2.  text/xml\
    \ Registration . . . . . . . . . . . . . . . . . .  21\n     9.3.  application/xml-external-parsed-entity\
    \ Registration . . .  21\n     9.4.  text/xml-external-parsed-entity Registration\
    \  . . . . . .  22\n     9.5.  application/xml-dtd Registration  . . . . . . .\
    \ . . . . .  22\n     9.6.  The '+xml' Naming Convention for XML-Based Media Types\
    \  .  23\n       9.6.1.  The '+xml' Structured Syntax Suffix Registration  . .\
    \  23\n   10. Security Considerations . . . . . . . . . . . . . . . . . . .  25\n\
    \   11. References  . . . . . . . . . . . . . . . . . . . . . . . . .  27\n  \
    \   11.1.  Normative References . . . . . . . . . . . . . . . . . .  27\n    \
    \ 11.2.  Informative References . . . . . . . . . . . . . . . . .  29\n   Appendix\
    \ A.  Why Use the '+xml' Suffix for XML-Based MIME Types?   32\n   Appendix B.\
    \  Core XML Specifications  . . . . . . . . . . . . . .  32\n   Appendix C.  Operational\
    \ Considerations . . . . . . . . . . . . .  32\n     C.1.  General Considerations\
    \  . . . . . . . . . . . . . . . . .  33\n     C.2.  Considerations for Producers\
    \  . . . . . . . . . . . . . .  33\n     C.3.  Considerations for Consumers  .\
    \ . . . . . . . . . . . . .  34\n   Appendix D.  Changes from RFC 3023  . . .\
    \ . . . . . . . . . . . .  34\n   Appendix E.  Acknowledgements . . . . . . .\
    \ . . . . . . . . . . .  35\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The World Wide Web Consortium has issued the Extensible\
    \ Markup\n   Language (XML) 1.0 [XML] and Extensible Markup Language (XML) 1.1\n\
    \   [XML1.1] specifications.  To enable the exchange of XML network\n   entities,\
    \ this specification standardizes three media types\n   (application/xml, application/xml-external-parsed-entity,\
    \ and\n   application/xml-dtd), two aliases (text/xml and text/xml-external-\n\
    \   parsed-entity), and a naming convention for identifying XML-based\n   MIME\
    \ media types (using '+xml').\n   XML has been used as a foundation for other\
    \ media types, including\n   types in every branch of the IETF media types tree.\
    \  To facilitate\n   the processing of such types, and in line with the recognition\
    \ in\n   [RFC6838] of structured syntax name suffixes, a suffix of '+xml' is\n\
    \   registered in Section 9.6.  This will allow generic XML-based tools\n   --\
    \ browsers, editors, search engines, and other processors -- to work\n   with\
    \ all XML-based media types.\n   This specification replaces [RFC3023].  Major\
    \ differences are in the\n   areas of alignment of text/xml and text/xml-external-parsed-entity\n\
    \   with application/xml and application/xml-external-parsed-entity\n   respectively,\
    \ the addition of XPointer and XML Base as fragment\n   identifiers and base URIs,\
    \ respectively, integration of the XPointer\n   Registry and updating of many\
    \ references.\n"
- title: 2.  Notational Conventions
  contents:
  - '2.  Notational Conventions

    '
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this specification are to\
    \ be interpreted as described\n   in [RFC2119].\n"
- title: 2.2.  Characters, Encodings, Charsets
  contents:
  - "2.2.  Characters, Encodings, Charsets\n   Both XML (in an XML or Text declaration\
    \ using the encoding pseudo-\n   attribute) and MIME (in a Content-Type header\
    \ field using the charset\n   parameter) use a common set of labels [IANA-CHARSETS]\
    \ to identify the\n   MIME charset (mapping from byte stream to character sequence\n\
    \   [RFC2978]).\n   In this specification, we will use the phrases \"charset parameter\"\
    \n   and \"encoding declaration\" to refer to whatever MIME charset is\n   specified\
    \ by a MIME charset parameter or XML encoding declaration,\n   respectively. \
    \ We reserve the phrase \"character encoding\" (or, when\n   the context makes\
    \ the intention clear, simply \"encoding\") for the\n   MIME charset actually\
    \ used in a particular XML MIME entity.\n   [UNICODE] defines three \"encoding\
    \ forms\", namely UTF-8, UTF-16, and\n   UTF-32.  As UTF-8 can only be serialized\
    \ in one way, the only\n   possible label for UTF-8-encoded documents when serialised\
    \ into MIME\n   entities is \"utf-8\".  UTF-16 XML documents, however, can be\n\
    \   serialised into MIME entities in one of two ways: either big-endian,\n   labelled\
    \ (optionally) \"utf-16\" or \"utf-16be\", or little-endian,\n   labelled (optionally)\
    \ \"utf-16\" or \"utf-16le\".  See Section 3.3 below\n   for how a Byte Order\
    \ Mark (BOM) is required when the \"utf-16\"\n   serialization is used.\n   UTF-32\
    \ has four potential serializations, of which only two (UTF-32BE\n   and UTF-32LE)\
    \ are given names in [UNICODE].  Support for the various\n   serializations varies\
    \ widely, and security concerns about their use\n   have been raised (for example,\
    \ see [Sivonen]).  The use of UTF-32 is\n   NOT RECOMMENDED for XML MIME entities.\n"
- title: 2.3.  MIME Entities, XML Entities
  contents:
  - "2.3.  MIME Entities, XML Entities\n   As sometimes happens between two communities,\
    \ both MIME and XML have\n   defined the term entity, with different meanings.\
    \  Section 2.4 of\n   [RFC2045] says:\n      The term \"entity\", refers specifically\
    \ to the MIME-defined header\n      fields and contents of either a message or\
    \ one of the parts in the\n      body of a multipart entity.\n   Section 4 of\
    \ [XML] says:\n      An XML document may consist of one or many storage units.\
    \  These\n      are called entities; they all have content and are all (except\
    \ for\n      the document entity and the external DTD subset) identified by\n\
    \      entity name.\n   In this specification, \"XML MIME entity\" is defined\
    \ as the latter (an\n   XML entity) encapsulated in the former (a MIME entity).\n\
    \   Furthermore, XML provides for the naming and referencing of entities\n   for\
    \ purposes of inclusion and/or substitution.  In this\n   specification, \"XML-entity\
    \ declaration/reference/...\" is used to\n   avoid confusion when referring to\
    \ such cases.\n"
- title: 3.  Encoding Considerations
  contents:
  - "3.  Encoding Considerations\n   The registrations below all address issues around\
    \ character encoding\n   in the same way, by referencing this section.\n   As\
    \ many as three distinct sources of information about character\n   encoding may\
    \ be present for an XML MIME entity: a charset parameter,\n   a BOM (see Section\
    \ 3.3 below), and an XML encoding declaration (see\n   Section 4.3.3 of [XML]).\
    \  Ensuring consistency among these sources\n   requires coordination between\
    \ entity authors and MIME agents (that\n   is, processes that package, transfer,\
    \ deliver, and/or receive MIME\n   entities).\n   The use of UTF-8, without a\
    \ BOM, is RECOMMENDED for all XML MIME\n   entities.\n   Some MIME agents will\
    \ be what we will call \"XML-aware\", that is,\n   capable of processing XML MIME\
    \ entities as XML and detecting the XML\n   encoding declaration (or its absence).\
    \  All three sources of\n   information about encoding are available to them,\
    \ and they can be\n   expected to be aware of this specification.\n   Other MIME\
    \ agents will not be XML-aware; thus, they cannot know\n   anything about the\
    \ XML encoding declaration.  Not only do they lack\n   one of the three sources\
    \ of information about encoding, they are also\n   less likely to be aware of\
    \ or responsive to this specification.\n   Some MIME agents, such as proxies and\
    \ transcoders, both consume and\n   produce MIME entities.\n   This mixture of\
    \ two kinds of agents handling XML MIME entities\n   increases the complexity\
    \ of the coordination task.  The\n   recommendations given below are intended\
    \ to maximise interoperability\n   in the face of this: on the one hand, by mandating\
    \ consistent\n   production and encouraging maximally robust forms of production\
    \ and,\n   on the other, by specifying recovery strategies to maximize the\n \
    \  interoperability of consumers when the production rules are broken.\n"
- title: 3.1.  XML MIME Producers
  contents:
  - "3.1.  XML MIME Producers\n   XML-aware MIME producers SHOULD supply a charset\
    \ parameter and/or an\n   appropriate BOM with non-UTF-8-encoded XML MIME entities\
    \ that lack an\n   encoding declaration.  Such producers SHOULD remove or correct\
    \ an\n   encoding declaration that is known to be incorrect (for example, as a\n\
    \   result of transcoding).\n   XML-aware MIME producers MUST supply an XML text\
    \ declaration at the\n   beginning of non-UNICODE XML external parsed entities\
    \ that would\n   otherwise begin with the hexadecimal octet sequences 0xFE 0xFF,\
    \ 0xFF\n   0xFE or 0xEF 0xBB 0xBF, in order to avoid the mistaken detection of\
    \ a\n   BOM.\n   XML-unaware MIME producers MUST NOT supply a charset parameter\
    \ with\n   an XML MIME entity unless the entity's character encoding is reliably\n\
    \   known.  Note that this is particularly relevant for central\n   configuration\
    \ of web servers, where configuring a default for the\n   charset parameter will\
    \ almost certainly violate this requirement.\n   XML MIME producers are RECOMMENDED\
    \ to provide means for users to\n   control what value, if any, is given to charset\
    \ parameters for XML\n   MIME entities, for example, by giving users control of\
    \ the\n   configuration of Web server filename-to-Content-Type-header mappings\n\
    \   on a file-by-file or suffix basis.\n"
- title: 3.2.  XML MIME Consumers
  contents:
  - "3.2.  XML MIME Consumers\n   For XML MIME consumers, the question of priority\
    \ arises in cases when\n   the available character encoding information is not\
    \ consistent.\n   Again, we must distinguish between XML-aware and XML-unaware\
    \ agents.\n   When a charset parameter is specified for an XML MIME entity, the\n\
    \   normative component of the [XML] specification leaves the question\n   open\
    \ as to how to determine the encoding with which to attempt to\n   process the\
    \ entity.  This is true independently of whether or not the\n   entity contains\
    \ in-band encoding information, that is, either a BOM\n   (Section 3.3) or an\
    \ XML encoding declaration, both, or neither.  In\n   particular, in the case\
    \ where there is in-band information and it\n   conflicts with the charset parameter,\
    \ the [XML] specification does\n   not specify which is authoritative.  In its\
    \ (non-normative)\n   Appendix F, it defers to this specification:\n      [T]he\
    \ preferred method of handling conflict should be specified as\n      part of\
    \ the higher-level protocol used to deliver XML.  In\n      particular, please\
    \ refer to [IETF RFC 3023] or its successor...\n   Accordingly, to conform with\
    \ deployed processors and content and to\n   avoid conflicting with this or other\
    \ normative specifications, this\n   specification sets the priority as follows:\n\
    \      A BOM (Section 3.3) is authoritative if it is present in an XML\n     \
    \ MIME entity;\n      In the absence of a BOM (Section 3.3), the charset parameter\
    \ is\n      authoritative if it is present.\n   Whenever the above determines\
    \ a source of encoding information as\n   authoritative, consumers SHOULD process\
    \ XML MIME entities based on\n   that information.\n   When MIME producers conform\
    \ to the requirements stated above\n   (Section 3.1, Section 3) inconsistencies\
    \ will not arise -- the above\n   statement of priorities only has practical impact\
    \ in the case of non-\n   conforming XML MIME entities.  In the face of inconsistencies,\
    \ no\n   uniform strategy can deliver the 'right' answer every time: the\n   purpose\
    \ of specifying one here is to encourage convergence over time,\n   first on the\
    \ part of consumers, then on the part of producers.\n   For XML-aware consumers,\
    \ note that Section 4.3.3 of [XML] does _not_\n   make it an error for the charset\
    \ parameter and the XML encoding\n   declaration (or the UTF-8 default in the\
    \ absence of encoding\n   declaration and BOM) to be inconsistent, although such\
    \ consumers\n   might choose to issue a warning in this case.\n   If an XML MIME\
    \ entity is received where the charset parameter is\n   omitted, no information\
    \ is being provided about the character\n   encoding by the MIME Content-Type\
    \ header.  XML-aware consumers MUST\n   follow the requirements in section 4.3.3\
    \ of [XML] that directly\n   address this case.  XML-unaware MIME consumers SHOULD\
    \ NOT assume a\n   default encoding in this case.\n"
- title: 3.3.  The BOM and Encoding Conversions
  contents:
  - "3.3.  The BOM and Encoding Conversions\n   Section 4.3.3 of [XML] specifies that\
    \ UTF-16 XML MIME entities not\n   labelled as \"utf-16le\" or \"utf-16be\" MUST\
    \ begin with a BOM, U+FEFF,\n   which appears as the hexadecimal octet sequence\
    \ 0xFE 0xFF (big-\n   endian) or 0xFF 0xFE (little-endian).  [XML] further states\
    \ that the\n   BOM is an encoding signature and is not part of either the markup\
    \ or\n   the character data of the XML document.\n   Due to the presence of the\
    \ BOM, applications that convert XML from\n   UTF-16 to an encoding other than\
    \ UTF-8 MUST strip the BOM before\n   conversion.  Similarly, when converting\
    \ from another encoding into\n   UTF-16, either without a charset parameter or\
    \ labelled \"utf-16\", the\n   BOM MUST be added unless the original encoding\
    \ was UTF-8 and a BOM\n   was already present, in which case it MUST be transcoded\
    \ into the\n   appropriate UTF-16 BOM.\n   Section 4.3.3 of [XML] also allows\
    \ for UTF-8 XML MIME entities to\n   begin with a BOM, which appears as the hexadecimal\
    \ octet sequence\n   0xEF 0xBB 0xBF.  This is likewise defined to be an encoding\n\
    \   signature, and not part of either the markup or the character data of\n  \
    \ the XML document.\n   Applications that convert XML from UTF-8 to an encoding\
    \ other than\n   UTF-16 MUST strip the BOM, if present, before conversion.\n \
    \  Applications that convert XML into UTF-8 MAY add a BOM.\n   In addition to\
    \ the MIME charset \"utf-16\", [RFC2781] introduces\n   \"utf-16le\" (little-endian)\
    \ and \"utf-16be\" (big-endian).  When an XML\n   MIME entity is encoded in \"\
    utf-16le\" or \"utf-16be\", it MUST NOT begin\n   with the BOM but SHOULD contain\
    \ an in-band XML encoding declaration.\n   Conversion from UTF-8 or UTF-16 (unlabelled,\
    \ or labelled with\n   \"utf-16\") to \"utf-16be\" or \"utf-16le\" MUST strip\
    \ a BOM if present.\n   Conversion from UTF-16 labelled \"utf-16le\" or \"utf-16be\"\
    \ to UTF-16\n   without a label or labelled \"utf-16\" MUST add the appropriate\
    \ BOM.\n   Conversion from UTF-16 labelled \"utf-16le\" or \"utf-16be\" to UTF-8\
    \ MAY\n   add a UTF-8 BOM, but this is NOT RECOMMENDED.\n   Appendix F of [XML]\
    \ also implies that a UTF-32 BOM may be used in\n   conjunction with UTF-32-encoded\
    \ documents.  As noted above, this\n   specification recommends against the use\
    \ of UTF-32.  If it is used,\n   the same considerations as UTF-16 apply with\
    \ respect to its being a\n   signature (not part of the document), transcoding\
    \ into or out of it,\n   and transcoding into or out of the MIME charsets \"utf-32le\"\
    \ and \"utf-\n   32be\".  Consumers that do not support UTF-32 SHOULD nonetheless\n\
    \   recognise UTF-32 signatures in order to give helpful error messages\n   (instead\
    \ of treating them as invalid UTF-16).\n"
- title: 4.  XML Media Types
  contents:
  - '4.  XML Media Types

    '
- title: 4.1.  XML MIME Entities
  contents:
  - "4.1.  XML MIME Entities\n   Within the XML specification, XML MIME entities can\
    \ be classified\n   into four types.  In the XML terminology, they are called\
    \ \"document\n   entities\", \"external DTD subsets\", \"external parsed entities\"\
    , and\n   \"external parameter entities\".  Appropriate usage for the types\n\
    \   registered below is as follows:\n   document entities:  The media types application/xml\
    \ or text/xml, or a\n      more specific media type (see Section 9.6), SHOULD\
    \ be used.\n   external DTD subsets:  The media type application/xml-dtd SHOULD\
    \ be\n      used.  The media types application/xml and text/xml MUST NOT be\n\
    \      used.\n   external parsed entities:  The media types application/xml-external-\n\
    \      parsed-entity or text/xml-external-parsed-entity SHOULD be used.\n    \
    \  The media types application/xml and text/xml MUST NOT be used\n      unless\
    \ the parsed entities are also well-formed \"document\n      entities\".\n   external\
    \ parameter entities:  The media type application/xml-dtd\n      SHOULD be used.\
    \  The media types application/xml and text/xml MUST\n      NOT be used.\n   Note\
    \ that [RFC3023] (which this specification obsoletes) recommended\n   the use\
    \ of text/xml and text/xml-external-parsed-entity for document\n   entities and\
    \ external parsed entities, respectively, but described\n   handling of character\
    \ encoding that differed from common\n   implementation practice.  These media\
    \ types are still commonly used,\n   and this specification aligns the handling\
    \ of character encoding with\n   industry practice.\n   Note that [RFC2376] (which\
    \ is obsolete) allowed application/xml and\n   text/xml to be used for any of\
    \ the four types, although in practice\n   it is likely to have been rare.\n \
    \  Neither external DTD subsets nor external parameter entities parse as\n   XML\
    \ documents, and while some XML document entities may be used as\n   external\
    \ parsed entities and vice versa, there are many cases where\n   the two are not\
    \ interchangeable.  XML also has unparsed entities,\n   internal parsed entities,\
    \ and internal parameter entities, but they\n   are not XML MIME entities.\n \
    \  Compared to [RFC2376] or [RFC3023], this specification alters the\n   handling\
    \ of character encoding of text/xml and text/xml-external-\n   parsed-entity,\
    \ treating them no differently from the respective\n   application/ types.  However,\
    \ application/xml and application/xml-\n   external-parsed-entity are still RECOMMENDED,\
    \ to avoid possible\n   confusion based on the earlier distinction.  The former\
    \ confusion\n   around the question of default character sets for the two text/\
    \ types\n   no longer arises because\n      [RFC7231] changes [RFC2616] by removing\
    \ the ISO-8859-1 default and\n      not defining any default at all;\n      [RFC6657]\
    \ updates [RFC2046] to remove the US-ASCII [ASCII]\n      default.\n   See Section\
    \ 3 for the now-unified approach to the charset parameter\n   that results.\n\
    \   XML provides a general framework for defining sequences of structured\n  \
    \ data.  It is often appropriate to define new media types that use XML\n   but\
    \ define a specific application of XML, due to domain-specific\n   display, editing,\
    \ security considerations, or runtime information.\n   Furthermore, such media\
    \ types may allow only UTF-8 and/or UTF-16 and\n   prohibit other character sets.\
    \  This specification does not prohibit\n   such media types; in fact, they are\
    \ expected to proliferate.\n   However, developers of such media types are RECOMMENDED\
    \ to use this\n   specification as a basis for their registration.  See Section\
    \ 4.2 for\n   more detailed recommendations on using the '+xml' suffix for\n \
    \  registration of such media types.\n   An XML document labeled as application/xml\
    \ or text/xml, or with a\n   '+xml' media type, might contain namespace declarations,\
    \ stylesheet-\n   linking processing instructions (PIs), schema information, or\
    \ other\n   declarations that might be used to suggest how the document is to\
    \ be\n   processed.  For example, a document might have the XHTML namespace\n\
    \   and a reference to a Cascading Style Sheets (CSS) stylesheet.  Such a\n  \
    \ document might be handled by applications that would use this\n   information\
    \ to dispatch the document for appropriate processing.\n   Appendix B lists the\
    \ core XML specifications that, taken together\n   with [XML] itself, show how\
    \ to determine an XML document's language-\n   level semantics and suggest how\
    \ information about its application-\n   level semantics may be locatable.\n"
- title: 4.2.  Using '+xml' when Registering XML-Based Media Types
  contents:
  - "4.2.  Using '+xml' when Registering XML-Based Media Types\n   In Section 9.6,\
    \ this specification updates the registration in\n   [RFC6839] for XML-based MIME\
    \ types (the '+xml' types).\n   When a new media type is introduced for an XML-based\
    \ format, the name\n   of the media type SHOULD end with '+xml' unless generic\
    \ XML\n   processing is in some way inappropriate for documents of the new\n \
    \  type.  This convention will allow applications that can process XML\n   generically\
    \ to detect that the MIME entity is supposed to be an XML\n   document, verify\
    \ this assumption by invoking some XML processor, and\n   then process the XML\
    \ document accordingly.  Applications may check\n   for types that represent XML\
    \ MIME entities by comparing the last four\n   characters of the subtype to the\
    \ string '+xml'.  (However, note that\n   four of the five media types defined\
    \ in this specification -- text/\n   xml, application/xml, text/xml-external-parsed-entity,\
    \ and\n   application/xml-external-parsed-entity -- also represent XML MIME\n\
    \   entities while not ending with '+xml'.)\n      NOTE: Section 5.3.2 of [RFC7231]\
    \ does not support any form of\n      Accept header that will match only '+xml'\
    \ types.  In particular,\n      Accept headers of the form \"Accept: */*+xml\"\
    \ are not allowed, and\n      will not work for this purpose.\n   Media types\
    \ following the naming convention '+xml' SHOULD define the\n   charset parameter\
    \ for consistency, since XML-generic processing by\n   definition treats all XML\
    \ MIME entities uniformly as regards\n   character encoding information.  However,\
    \ there are some cases that\n   the charset parameter need not be defined.  For\
    \ example:\n      When an XML-based media type is restricted to UTF-8, it is not\n\
    \      necessary to define the charset parameter.  UTF-8 is the default\n    \
    \  for XML.\n      When an XML-based media type is restricted to UTF-8 and UTF-16,\
    \ it\n      might not be unreasonable to omit the charset parameter.  Neither\n\
    \      UTF-8 nor UTF-16 require XML encoding declarations.\n   XML generic processing\
    \ is not always appropriate for XML-based media\n   types.  For example, authors\
    \ of some such media types may wish that\n   the types remain entirely opaque\
    \ except to applications that are\n   specifically designed to deal with that\
    \ media type.  By NOT following\n   the naming convention '+xml', such media types\
    \ can avoid XML-generic\n   processing.  Since generic processing will be useful\
    \ in many cases,\n   however -- including in some situations that are difficult\
    \ to predict\n   ahead of time -- the '+xml' convention is to be preferred unless\n\
    \   there is some particularly compelling reason not to use it.\n   The registration\
    \ process for specific '+xml' media types is described\n   in [RFC6838].  New\
    \ XML-based media type registrations in the IETF\n   must follow these guidelines.\
    \  When other organisations register XML-\n   based media types via the \"Specification\
    \ Required\" IANA registration\n   policy [RFC5226], the relevant Media Reviewer\
    \ should ensure that they\n   use the '+xml' convention, in order to ensure maximum\n\
    \   interoperability of their XML-based documents.  Only media subtypes\n   that\
    \ represent XML MIME entities are allowed to register with a\n   '+xml' suffix.\n\
    \   In addition to the changes described above, the change controller has\n  \
    \ been changed to be the World Wide Web Consortium (W3C).\n"
- title: 4.3.  Registration Guidelines for XML-Based Media Types Not Using '+xml'
  contents:
  - "4.3.  Registration Guidelines for XML-Based Media Types Not Using '+xml'\n  \
    \ Registrations for new XML-based media types that do _not_ use the\n   '+xml'\
    \ suffix SHOULD, in specifying the charset parameter and\n   encoding considerations,\
    \ define them as: \"Same as [charset parameter\n   / encoding considerations]\
    \ of application/xml as specified in RFC\n   7303\".\n   Defining the charset\
    \ parameter is RECOMMENDED, since this information\n   can be used by XML processors\
    \ to determine authoritatively the\n   character encoding of the XML MIME entity\
    \ in the absence of a BOM.\n   If there are some reasons not to follow this advice,\
    \ they SHOULD be\n   included as part of the registration.  As shown above, two\
    \ such\n   reasons are \"UTF-8 only\" or \"UTF-8 or UTF-16 only\".\n   These registrations\
    \ SHOULD specify that the XML-based media type\n   being registered has all of\
    \ the security considerations described in\n   this specification plus any additional\
    \ considerations specific to\n   that media type.\n   These registrations SHOULD\
    \ also make reference to this specification\n   in specifying magic numbers, base\
    \ URIs, and use of the BOM.\n   These registrations MAY reference the application/xml\
    \ registration in\n   this document in specifying interoperability and fragment\
    \ identifier\n   considerations, if these considerations are not overridden by\
    \ issues\n   specific to that media type.\n"
- title: 5.  Fragment Identifiers
  contents:
  - "5.  Fragment Identifiers\n   Uniform Resource Identifiers (URIs) can contain\
    \ fragment identifiers\n   (see Section 3.5 of [RFC3986]).  Specifying the syntax\
    \ and semantics\n   of fragment identifiers is devolved by [RFC3986] to the appropriate\n\
    \   media type registration.\n   The syntax and semantics of fragment identifiers\
    \ for the XML media\n   types defined in this specification are based on the\n\
    \   [XPointerFramework] W3C Recommendation.  It allows simple names and\n   more\
    \ complex constructions based on named schemes.  When the syntax\n   of a fragment\
    \ identifier part of any URI or Internationalized\n   Resource Identifier (IRI)\
    \ ([RFC3987]) with a retrieved media type\n   governed by this specification conforms\
    \ to the syntax specified in\n   [XPointerFramework], conforming applications\
    \ MUST interpret such\n   fragment identifiers as designating whatever is specified\
    \ by the\n   [XPointerFramework] together with any other specifications governing\n\
    \   the XPointer schemes used in those identifiers that the applications\n   support.\
    \  Conforming applications MUST support the 'element' scheme\n   as defined in\
    \ [XPointerElement], but need not support other schemes.\n   If an XPointer error\
    \ is reported in the attempt to process the part,\n   this specification does\
    \ not define an interpretation for the part.\n   A registry of XPointer schemes\
    \ [XPtrReg] is maintained at the W3C.\n   Generic processors of XML MIME entities\
    \ SHOULD NOT implement\n   unregistered XPointer schemes ([XPtrRegPolicy] describes\
    \ requirements\n   and procedures for registering schemes).\n   See Section 4.2\
    \ for additional requirements that apply when an XML-\n   based media type follows\
    \ the naming convention '+xml'.\n   If [XPointerFramework] and [XPointerElement]\
    \ are inappropriate for\n   some XML-based media type, it SHOULD NOT follow the\
    \ naming convention\n   '+xml'.\n   When a URI has a fragment identifier, it is\
    \ encoded by a limited\n   subset of the repertoire of US-ASCII characters, see\n\
    \   [XPointerFramework] for details.\n"
- title: 6.  The Base URI
  contents:
  - "6.  The Base URI\n   An XML MIME entity of type application/xml, text/xml, application/\n\
    \   xml-external-parsed-entity, or text/xml-external-parsed-entity MAY\n   use\
    \ the xml:base attribute, as described in [XMLBase], to embed a\n   base URI in\
    \ that entity for use in resolving relative URI references\n   (see Section 5.1\
    \ of [RFC3986]).\n   Note that the base URI itself might be embedded in a different\
    \ MIME\n   entity, since the default value for the xml:base attribute can be\n\
    \   specified in an external DTD subset or external parameter entity.\n   Since\
    \ conforming XML processors need not always read and process\n   external entities,\
    \ the effect of such an external default is\n   uncertain; therefore, its use\
    \ is NOT RECOMMENDED.\n"
- title: 7.  XML Versions
  contents:
  - "7.  XML Versions\n   application/xml, application/xml-external-parsed-entity,\
    \ application/\n   xml-dtd, text/xml, and text/xml-external-parsed-entity are\
    \ to be used\n   with [XML].  In all examples herein where version=\"1.0\" is\
    \ shown, it\n   is understood that version=\"1.1\" might also appear, providing\
    \ the\n   content does indeed conform to [XML1.1].\n   The normative requirement\
    \ of this specification upon XML documents\n   and processors is to follow the\
    \ requirements of [XML], Section 4.3.3.\n   Except for minor clarifications, that\
    \ section is substantially\n   identical from the first edition to the current\
    \ (5th) edition of XML\n   1.0, and for XML 1.1 first or second edition [XML1.1].\
    \  Therefore,\n   references herein to [XML] may be interpreted as referencing\
    \ any\n   existing version or edition of XML, or any subsequent edition or\n \
    \  version that makes no incompatible changes to that section.\n   Specifications\
    \ and recommendations based on or referring to this RFC\n   SHOULD indicate any\
    \ limitations on the particular versions or\n   editions of XML to be used.\n"
- title: 8.  Examples
  contents:
  - "8.  Examples\n   This section is non-normative.  In particular, note that all\n\
    \   [RFC2119] language herein reproduces or summarizes the consequences\n   of\
    \ normative statements already made above, and has no independent\n   normative\
    \ force, and accordingly does not appear in uppercase.\n   The examples below\
    \ give the MIME Content-Type header, including the\n   charset parameter, if present\
    \ and the XML declaration or Text\n   declaration (which includes the encoding\
    \ declaration) inside the XML\n   MIME entity.  For UTF-16 examples, the Byte\
    \ Order Mark character\n   appropriately UTF-16 encoded is denoted as \"{BOM}\"\
    , and the XML or\n   Text declaration is assumed to come at the beginning of the\
    \ XML MIME\n   entity, immediately following the encoded BOM.  Note that other\
    \ MIME\n   headers may be present, and the XML MIME entity will normally contain\n\
    \   other data in addition to the XML declaration; the examples focus on\n   the\
    \ Content-Type header and the encoding declaration for clarity.\n   Although they\
    \ show a content type of 'application/xml', all the\n   examples below apply to\
    \ all five media types declared below in\n   Section 9, as well as to any media\
    \ types declared using the '+xml'\n   convention (with the exception of the examples\
    \ involving the charset\n   parameter for any such media types that do not enable\
    \ its use).  See\n   the XML MIME entities table (Section 4.1, Paragraph 1) for\
    \ discussion\n   of which types are appropriate for which varieties of XML MIME\n\
    \   entity.\n"
- title: 8.1.  UTF-8 Charset
  contents:
  - "8.1.  UTF-8 Charset\n   Content-Type: application/xml; charset=utf-8\n   <?xml\
    \ version=\"1.0\" encoding=\"utf-8\"?>\n   or\n   <?xml version=\"1.0\"?>\n  \
    \ UTF-8 is the recommended encoding for use with all the media types\n   defined\
    \ in this specification.  Since the charset parameter is\n   provided and there\
    \ is no overriding BOM, conformant MIME and XML\n   processors must treat the\
    \ enclosed entity as UTF-8 encoded.\n   If sent using a 7-bit transport (e.g.,\
    \ SMTP [RFC5321]), in general, a\n   UTF-8 XML MIME entity must use a content-transfer-encoding\
    \ of either\n   quoted-printable or base64.  For an 8-bit clean transport (e.g.,\n\
    \   8BITMIME ESMTP or NNTP), or a binary clean transport (e.g., BINARY\n   ESMTP\
    \ or HTTP), no content-transfer-encoding is necessary (or even\n   possible, in\
    \ the case of HTTP).\n"
- title: 8.2.  UTF-16 Charset
  contents:
  - "8.2.  UTF-16 Charset\n   Content-Type: application/xml; charset=utf-16\n   {BOM}<?xml\
    \ version=\"1.0\" encoding=\"utf-16\"?>\n   or\n   {BOM}<?xml version=\"1.0\"\
    ?>\n   For the three application/media types defined above, if sent using a\n\
    \   7-bit transport (e.g., SMTP) or an 8-bit clean transport (e.g.,\n   8BITMIME\
    \ ESMTP or NNTP), the XML MIME entity must be encoded in\n   quoted-printable\
    \ or base64; for a binary clean transport (e.g.,\n   BINARY ESMTP or HTTP), no\
    \ content-transfer-encoding is necessary (or\n   even possible, in the case of\
    \ HTTP).\n   As described in [RFC2781], the UTF-16 family must not be used with\n\
    \   media types under the top-level type \"text\" except over HTTP or HTTPS\n\
    \   (see Section A.2 of HTTP [RFC7231] for details).  Hence, one of the\n   two\
    \ text/media types defined above can be used with this example only\n   when the\
    \ XML MIME entity is transmitted via HTTP or HTTPS, which use\n   a MIME-like\
    \ mechanism and are binary-clean protocols and hence do not\n   perform CR and\
    \ LF transformations and allow NUL octets.  Since HTTP\n   is binary clean, no\
    \ content-transfer-encoding is necessary (or even\n   possible).\n"
- title: 8.3.  Omitted Charset and 8-Bit MIME Entity
  contents:
  - "8.3.  Omitted Charset and 8-Bit MIME Entity\n   Content-Type: application/xml\n\
    \   <?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n   Since the charset parameter\
    \ is not provided in the Content-Type\n   header and there is no overriding BOM,\
    \ conformant XML processors must\n   treat the \"iso-8859-1\" encoding as authoritative.\
    \  Conformant XML-\n   unaware MIME processors should make no assumptions about\
    \ the\n   character encoding of the XML MIME entity.\n"
- title: 8.4.  Omitted Charset and 16-Bit MIME Entity
  contents:
  - "8.4.  Omitted Charset and 16-Bit MIME Entity\n   Content-Type: application/xml\n\
    \   {BOM}<?xml version=\"1.0\" encoding=\"utf-16\"?>\n   or\n   {BOM}<?xml version=\"\
    1.0\"?>\n   This example shows a 16-bit MIME entity with no charset parameter.\n\
    \   However, since there is a BOM, conformant processors must treat the\n   entity\
    \ as UTF-16 encoded.\n   Omitting the charset parameter is not recommended in\
    \ conjunction with\n   media types under the top-level type \"application\" when\
    \ used with\n   transports other than HTTP or HTTPS.  Media types under the top-level\n\
    \   type \"text\" should not be used for 16-bit MIME with transports other\n \
    \  than HTTP or HTTPS (see discussion above in\n   Section 8.2, Paragraph 7).\n"
- title: 8.5.  Omitted Charset, No Internal Encoding Declaration
  contents:
  - "8.5.  Omitted Charset, No Internal Encoding Declaration\n   Content-Type: application/xml\n\
    \   <?xml version='1.0'?>\n   In this example, the charset parameter has been\
    \ omitted, there is no\n   internal encoding declaration, and there is no BOM.\
    \  Since there is\n   no BOM or charset parameter, the XML processor follows the\n\
    \   requirements in Section 4.3.3, and optionally applies the mechanism\n   described\
    \ in Appendix F (which is non-normative) of [XML] to\n   determine an encoding\
    \ of UTF-8.  Although the XML MIME entity does\n   not contain an encoding declaration,\
    \ provided the encoding actually\n   _is_ UTF-8, this is a conforming XML MIME\
    \ entity.\n   A conformant XML-unaware MIME processor should make no assumptions\n\
    \   about the character encoding of the XML MIME entity.\n   See Section 8.1 for\
    \ transport-related issues for UTF-8 XML MIME\n   entities.\n"
- title: 8.6.  UTF-16BE Charset
  contents:
  - "8.6.  UTF-16BE Charset\n   Content-Type: application/xml; charset=utf-16be\n\
    \   <?xml version='1.0' encoding='utf-16be'?>\n   Observe that, as required for\
    \ this encoding, there is no BOM.  Since\n   the charset parameter is provided\
    \ and there is no overriding BOM,\n   conformant MIME and XML processors must\
    \ treat the enclosed entity as\n   UTF-16BE encoded.\n   See also the additional\
    \ considerations in the UTF-16 example in\n   Section 8.2.\n"
- title: 8.7.  Non-UTF Charset
  contents:
  - "8.7.  Non-UTF Charset\n   Content-Type: application/xml; charset=iso-2022-kr\n\
    \   <?xml version=\"1.0\" encoding=\"iso-2022-kr\"?>\n   This example shows the\
    \ use of a non-UTF character encoding (in this\n   case Hangul, but this example\
    \ is intended to cover all non-UTF-family\n   character encodings).  Since the\
    \ charset parameter is provided and\n   there is no overriding BOM, conformant\
    \ processors must treat the\n   enclosed entity as encoded per RFC 1557.\n   Since\
    \ ISO-2022-KR [RFC1557] has been defined to use only 7 bits of\n   data, no content-transfer-encoding\
    \ is necessary with any transport:\n   for character sets needing 8 or more bits,\
    \ considerations such as\n   those discussed above (Sections 8.1 and 8.2) would\
    \ apply.\n"
- title: '8.8.  INCONSISTENT EXAMPLE: Conflicting Charset and Internal Encoding'
  contents:
  - "8.8.  INCONSISTENT EXAMPLE: Conflicting Charset and Internal Encoding\n     \
    \ Declaration\n   Content-Type: application/xml; charset=iso-8859-1\n   <?xml\
    \ version=\"1.0\" encoding=\"utf-8\"?>\n   Although the charset parameter is provided\
    \ in the Content-Type header\n   and there is no BOM and the charset parameter\
    \ differs from the XML\n   encoding declaration, conformant MIME and XML processors\
    \ will\n   interoperate.  Since the charset parameter is authoritative in the\n\
    \   absence of a BOM, conformant processors will treat the enclosed\n   entity\
    \ as iso-8859-1 encoded.  That is, the \"UTF-8\" encoding\n   declaration will\
    \ be ignored.\n   Conformant processors generating XML MIME entities must not\
    \ label\n   conflicting character encoding information between the MIME Content-\n\
    \   Type and the XML declaration unless they have definitive information\n   about\
    \ the actual encoding, for example, as a result of systematic\n   transcoding.\
    \  In particular, the addition by servers of an explicit,\n   site-wide charset\
    \ parameter default has frequently lead to\n   interoperability problems for XML\
    \ documents.\n"
- title: '8.9.  INCONSISTENT EXAMPLE: Conflicting Charset and BOM'
  contents:
  - "8.9.  INCONSISTENT EXAMPLE: Conflicting Charset and BOM\n   Content-Type: application/xml;\
    \ charset=iso-8859-1\n   {BOM}<?xml version=\"1.0\"?>\n   Although the charset\
    \ parameter is provided in the Content-Type\n   header, there is a BOM, so MIME\
    \ and XML processors may not\n   interoperate.  Since the BOM parameter is authoritative\
    \ for\n   conformant XML processors, they will treat the enclosed entity as\n\
    \   UTF-16 encoded.  That is, the \"iso-8859-1\" charset parameter will be\n \
    \  ignored.  XML-unaware MIME processors on the other hand may be\n   unaware\
    \ of the BOM and so treat the entity as encoded in iso-8859-1.\n   Conformant\
    \ processors generating XML MIME entities must not label\n   conflicting character\
    \ encoding information between the MIME Content-\n   Type and an entity-initial\
    \ BOM.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  application/xml Registration
  contents:
  - "9.1.  application/xml Registration\n   Type name:  application\n   Subtype name:\
    \  xml\n   Required parameters:  none\n   Optional parameters:  charset\n    \
    \  See Section 3.\n   Encoding considerations:  Depending on the character encoding\
    \ used,\n      XML MIME entities can consist of 7bit, 8bit, or binary data\n \
    \     [RFC6838].  For 7-bit transports, 7bit data, for example, US-\n      ASCII-encoded\
    \ data, does not require content-transfer-encoding,\n      but 8bit or binary\
    \ data, for example, UTF-8 or UTF-16 data, MUST\n      be content-transfer-encoded\
    \ in quoted-printable or base64.  For\n      8-bit clean transport (e.g., 8BITMIME\
    \ ESMTP [RFC6152] or NNTP\n      [RFC3977]), 7bit or 8bit data, for example, US-ASCII\
    \ or UTF-8\n      data, does not require content-transfer-encoding, but binary\
    \ data,\n      for example, data with a UTF-16 encoding, MUST be content-\n  \
    \    transfer-encoded in base64.  For binary clean transports (e.g.,\n      BINARY\
    \ ESMTP [RFC3030] or HTTP [RFC7230]), no content-transfer-\n      encoding is\
    \ necessary (or even possible, in the case of HTTP) for\n      7bit, 8bit, or\
    \ binary data.\n   Security considerations:  See Section 10.\n   Interoperability\
    \ considerations:  XML has proven to be interoperable\n      across both generic\
    \ and task-specific applications and for import\n      and export from multiple\
    \ XML authoring and editing tools.\n      Validating processors provide maximum\
    \ interoperability, because\n      they have to handle all aspects of XML.  Although\
    \ a non-validating\n      processor may be more efficient, it might not handle\
    \ all aspects.\n      For further information, see Section 2.9 \"Standalone Document\n\
    \      Declaration\" and Section 5 \"Conformance\" of [XML] .\n      In practice,\
    \ character set issues have proved to be the biggest\n      source of interoperability\
    \ problems.  The use of UTF-8, and\n      careful attention to the guidelines\
    \ set out in Section 3, are the\n      best ways to avoid such problems.\n   Published\
    \ specification:  Extensible Markup Language (XML) 1.0 (Fifth\n      Edition)\
    \ [XML] or subsequent editions or versions thereof.\n   Applications that use\
    \ this media type:  XML is device, platform, and\n      vendor neutral and is\
    \ supported by generic and task-specific\n      applications and a wide range\
    \ of generic XML tools (editors,\n      parsers, Web agents, ...).\n   Additional\
    \ information:\n      Magic number(s):  None.\n         Although no byte sequences\
    \ can be counted on to always be\n         present, XML MIME entities in ASCII-compatible\
    \ character sets\n         (including UTF-8) often begin with hexadecimal 3C 3F\
    \ 78 6D 6C\n         (\"<?xml\"), and those in UTF-16 often begin with hexadecimal\
    \ FE\n         FF 00 3C 00 3F 00 78 00 6D 00 6C or FF FE 3C 00 3F 00 78 00 6D\n\
    \         00 6C 00 (the BOM followed by \"<?xml\").  For more information,\n \
    \        see Appendix F of [XML].\n      File extension(s):  .xml\n      Macintosh\
    \ File Type Code(s):  \"TEXT\"\n      Base URI:  See Section 6\n   Person and\
    \ email address for further information:  See Authors'\n      Addresses section\n\
    \   Intended usage:  COMMON\n   Author:  See Authors' Addresses section\n   Change\
    \ controller:  The XML specification is a work product of the\n      World Wide\
    \ Web Consortium's XML Core Working Group.  The W3C has\n      change control\
    \ over RFC 7303.\n"
- title: 9.2.  text/xml Registration
  contents:
  - "9.2.  text/xml Registration\n   The registration information for text/xml is\
    \ in all respects the same\n   as that given for application/xml above (Section\
    \ 9.1), except that\n   the \"Type name\" is \"text\".\n"
- title: 9.3.  application/xml-external-parsed-entity Registration
  contents:
  - "9.3.  application/xml-external-parsed-entity Registration\n   Type name:  application\n\
    \   Subtype name:  xml-external-parsed-entity\n   Required parameters:  none\n\
    \   Optional parameters:  charset\n      See Section 3.\n   Encoding considerations:\
    \  Same as for application/xml (Section 9.1).\n   Security considerations:  See\
    \ Section 10.\n   Interoperability considerations:  XML external parsed entities\
    \ are as\n      interoperable as XML documents, though they have a less tightly\n\
    \      constrained structure and therefore need to be referenced by XML\n    \
    \  documents for proper handling by XML processors.  Similarly, XML\n      documents\
    \ cannot be reliably used as external parsed entities\n      because external\
    \ parsed entities are prohibited from having\n      standalone document declarations\
    \ or DTDs.  Identifying XML\n      external parsed entities with their own content\
    \ type enhances\n      interoperability of both XML documents and XML external\
    \ parsed\n      entities.\n   Published specification:  Same as for application/xml\
    \ (Section 9.1).\n   Applications which use this media type:  Same as for application/xml\n\
    \      (Section 9.1).\n   Additional information:\n      Magic number(s):  Same\
    \ as for application/xml (Section 9.1).\n      File extension(s):  .xml or .ent\n\
    \      Macintosh File Type Code(s):  \"TEXT\"\n      Base URI:  See Section 6\n\
    \   Person and email address for further information:  See Authors'\n      Addresses\
    \ section.\n   Intended usage:  COMMON\n   Author:  See Authors' Addresses section.\n\
    \   Change controller:  The XML specification is a work product of the\n     \
    \ World Wide Web Consortium's XML Core Working Group.  The W3C has\n      change\
    \ control over RFC 7303.\n"
- title: 9.4.  text/xml-external-parsed-entity Registration
  contents:
  - "9.4.  text/xml-external-parsed-entity Registration\n   The registration information\
    \ for text/xml-external-parsed-entity is\n   in all respects the same as that\
    \ given for application/xml-external-\n   parsed-entity above (Section 9.3), except\
    \ that the \"Type name\" is\n   \"text\".\n"
- title: 9.5.  application/xml-dtd Registration
  contents:
  - "9.5.  application/xml-dtd Registration\n   Type name:  application\n   Subtype\
    \ name:  xml-dtd\n   Required parameters:  none\n   Optional parameters:  charset\n\
    \      See Section 3.\n   Encoding considerations:  Same as for application/xml\
    \ (Section 9.1).\n   Security considerations:  See Section 10.\n   Interoperability\
    \ considerations:  XML DTDs have proven to be\n      interoperable by DTD authoring\
    \ tools and XML validators, among\n      others.\n   Published specification:\
    \  Same as for application/xml (Section 9.1).\n   Applications which use this\
    \ media type:  DTD authoring tools handle\n      external DTD subsets as well\
    \ as external parameter entities.  XML\n      validators may also access external\
    \ DTD subsets and external\n      parameter entities.\n   Additional information:\n\
    \      Magic number(s):  Same as for application/xml (Section 9.1).\n      File\
    \ extension(s):  .dtd or .mod\n      Macintosh File Type Code(s):  \"TEXT\"\n\
    \   Person and email address for further information:  See Authors'\n      Addresses\
    \ section.\n   Intended usage:  COMMON\n   Author:  See Authors' Addresses section.\n\
    \   Change controller:  The XML specification is a work product of the\n     \
    \ World Wide Web Consortium's XML Core Working Group.  The W3C has\n      change\
    \ control over RFC 7303.\n"
- title: 9.6.  The '+xml' Naming Convention for XML-Based Media Types
  contents:
  - "9.6.  The '+xml' Naming Convention for XML-Based Media Types\n   This section\
    \ supersedes the earlier registration of the '+xml' suffix\n   [RFC6839].\n  \
    \ This specification recommends the use of the '+xml' naming convention\n   for\
    \ identifying XML-based media types, in line with the recognition\n   in [RFC6838]\
    \ of structured syntax name suffixes.  This allows the use\n   of generic XML\
    \ processors and technologies on a wide variety of\n   different XML document\
    \ types at a minimum cost, using existing\n   frameworks for media type registration.\n\
    \   See Section 4.2 for guidance on when and how to register a media\n   subtype\
    \ that is '+xml' based, and Section 4.3 on registering a media\n   subtype for\
    \ XML but _not_ using '+xml'.\n"
- title: 9.6.1.  The '+xml' Structured Syntax Suffix Registration
  contents:
  - "9.6.1.  The '+xml' Structured Syntax Suffix Registration\n   Name:  Extensible\
    \ Markup Language (XML)\n   +suffix:  +xml\n   Reference:  RFC 7303\n   Encoding\
    \ considerations:  Same as Section 9.1.\n   Fragment identifier considerations:\
    \  Registrations that use this\n      '+xml' convention MUST also make reference\
    \ to this document,\n      specifically Section 5, in specifying fragment identifier\
    \ syntax\n      and semantics, and they MAY restrict the syntax to a specified\n\
    \      subset of schemes, except that they MUST NOT disallow barenames or\n  \
    \    'element' scheme pointers.  They MAY further require support for\n      other\
    \ registered schemes.  They also MAY add additional syntax\n      (which MUST\
    \ NOT overlap with [XPointerFramework] syntax) together\n      with associated\
    \ semantics, and they MAY add additional semantics\n      for barename XPointers\
    \ that, as provided for in Section 5, will\n      only apply when this document\
    \ does not define an interpretation.\n         In practice, these constraints\
    \ imply that for a fragment\n         identifier addressed to an instance of a\
    \ specific \"xxx/yyy+xml\"\n         type, there are three cases:\n          \
    \  For fragment identifiers matching the syntax defined in\n            [XPointerFramework],\
    \ where the fragment identifier resolves\n            per the rules specified\
    \ there, then process as specified\n            there;\n            For fragment\
    \ identifiers matching the syntax defined in\n            [XPointerFramework],\
    \ where the fragment identifier does\n            _not_ resolve per the rules\
    \ specified there, then process as\n            specified in \"xxx/yyy+xml\";\n\
    \            For fragment identifiers _not_ matching the syntax defined\n    \
    \        in [XPointerFramework], then process as specified in \"xxx/\n       \
    \     yyy+xml\".  A fragment identifier of the form\n            \"xywh=160,120,320,240\"\
    , as defined in [MediaFrags], which\n            might be used in a URI for an\
    \ XML-encoded image, would fall\n            in this category.\n   Interoperability\
    \ considerations:  Same as Section 9.1.  See above,\n      and also Section 3,\
    \ for guidelines on the use of the 'charset'\n      parameter.\n   Security considerations:\
    \  See Section 10.\n   Contact:  See Authors' Addresses section.\n   Author: \
    \ See Authors' Addresses section.\n   Change controller:  The XML specification\
    \ is a work product of the\n      World Wide Web Consortium's XML Core Working\
    \ Group.  The W3C has\n      change control over RFC 7303.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   XML MIME entities contain information that may\
    \ be parsed and further\n   processed by the recipient.  These entities may contain,\
    \ and\n   recipients may permit, explicit system level commands to be executed\n\
    \   while processing the data.  To the extent that a recipient\n   application\
    \ executes arbitrary command strings from within XML MIME\n   entities, they may\
    \ be at risk.\n   In general, any information stored outside of the direct control\
    \ of\n   the user -- including CSS style sheets, XSL transformations, XML-\n \
    \  entity declarations, and DTDs -- can be a source of insecurity, by\n   either\
    \ obvious or subtle means.  For example, a tiny \"whiteout\n   attack\" modification\
    \ made to a \"master\" style sheet could make words\n   in critical locations\
    \ disappear in user documents, without directly\n   modifying the user document\
    \ or the stylesheet it references.  Thus,\n   the security of any XML document\
    \ is vitally dependent on all of the\n   documents recursively referenced by that\
    \ document.\n   The XML-entity lists and DTDs for XHTML 1.0 [XHTML], for instance,\n\
    \   are likely to be a widely exploited set of resources.  They will be\n   used\
    \ and trusted by many developers, few of whom will know much about\n   the level\
    \ of security on the W3C's servers, or on any similarly\n   trusted repository.\n\
    \   The simplest attack involves adding declarations that break\n   validation.\
    \  Adding extraneous declarations to a list of character\n   XML-entities can\
    \ effectively \"break the contract\" used by documents.\n   A tiny change that\
    \ produces a fatal error in a DTD could halt XML\n   processing on a large scale.\
    \  Extraneous declarations are fairly\n   obvious, but more sophisticated tricks,\
    \ like changing attributes from\n   being optional to required, can be difficult\
    \ to track down.  Perhaps\n   the most dangerous option available to attackers,\
    \ when external DTD\n   subsets or external parameter entities or other externally\
    \ specified\n   defaulting is involved, is redefining default values for attributes:\n\
    \   for example, if developers have relied on defaulted attributes for\n   security,\
    \ a relatively small change might expose enormous quantities\n   of information.\n\
    \   Apart from the structural possibilities, another option, \"XML-entity\n  \
    \ spoofing,\" can be used to insert text into documents, vandalizing and\n   perhaps\
    \ conveying an unintended message.  Because XML permits\n   multiple XML-entity\
    \ declarations, and the first declaration takes\n   precedence, it is possible\
    \ to insert malicious content where an XML-\n   entity reference is used, such\
    \ as by inserting the full text of\n   Winnie the Pooh in place of every occurrence\
    \ of &mdash;.\n   Security considerations will vary by domain of use.  For example,\
    \ XML\n   medical records will have much more stringent privacy and security\n\
    \   considerations than XML library metadata.  Similarly, use of XML as a\n  \
    \ parameter marshalling syntax necessitates a case by case security\n   review.\n\
    \   XML may also have some of the same security concerns as plain text.\n   Like\
    \ plain text, XML can contain escape sequences that, when\n   displayed, have\
    \ the potential to change the display processor\n   environment in ways that adversely\
    \ affect subsequent operations.\n   Possible effects include, but are not limited\
    \ to, locking the\n   keyboard, changing display parameters so subsequent displayed\
    \ text is\n   unreadable, or even changing display parameters to deliberately\n\
    \   obscure or distort subsequent displayed material so that its meaning\n   is\
    \ lost or altered.  Display processors SHOULD either filter such\n   material\
    \ from displayed text or else make sure to reset all important\n   settings after\
    \ a given display operation is complete.\n   With some terminal devices, sending\
    \ particular character sequences to\n   the display processor can change the output\
    \ of subsequent key\n   presses.  If this is possible the display of a text object\
    \ containing\n   such character sequences could reprogram keys to perform some\
    \ illicit\n   or dangerous action when the key is subsequently pressed by the\
    \ user.\n   In some cases not only can keys be programmed, they can be triggered\n\
    \   remotely, making it possible for a text display operation to directly\n  \
    \ perform some unwanted action.  As such, the ability to program keys\n   SHOULD\
    \ be blocked either by filtering or by disabling the ability to\n   program keys\
    \ entirely.\n   Note that it is also possible to construct XML documents that\
    \ make\n   use of what XML terms \"[XML-]entity references\" to construct repeated\n\
    \   expansions of text.  Recursive expansions are prohibited by [XML] and\n  \
    \ XML processors are required to detect them.  However, even non-\n   recursive\
    \ expansions may cause problems with the finite computing\n   resources of computers,\
    \ if they are performed many times.  For\n   example, consider the case where\
    \ XML-entity A consists of 100 copies\n   of XML-entity B, which in turn consists\
    \ of 100 copies of XML-entity\n   C, and so on.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [IANA-CHARSETS]\n              IANA, \"Character\
    \ Sets Registry\", 2013,\n              <http://www.iana.org/assignments/character-sets/>.\n\
    \   [RFC2045]  Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n   \
    \           Extensions (MIME) Part One: Format of Internet Message\n         \
    \     Bodies\", RFC 2045, November 1996.\n   [RFC2046]  Freed, N. and N. Borenstein,\
    \ \"Multipurpose Internet Mail\n              Extensions (MIME) Part Two: Media\
    \ Types\", RFC 2046,\n              November 1996.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2781]  Hoffman, P. and F. Yergeau, \"\
    UTF-16, an encoding of ISO\n              10646\", RFC 2781, February 2000.\n\
    \   [RFC2978]  Freed, N. and J. Postel, \"IANA Charset Registration\n        \
    \      Procedures\", BCP 19, RFC 2978, October 2000.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66, RFC\n              3986, January 2005.\n  \
    \ [RFC3987]  Duerst, M. and M. Suignard, \"Internationalized Resource\n      \
    \        Identifiers (IRIs)\", RFC 3987, January 2005.\n   [RFC6657]  Melnikov,\
    \ A. and J. Reschke, \"Update to MIME regarding\n              \"charset\" Parameter\
    \ Handling in Textual Media Types\", RFC\n              6657, July 2012.\n   [RFC6838]\
    \  Freed, N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications\
    \ and Registration Procedures\", BCP 13, RFC\n              6838, January 2013.\n\
    \   [RFC6839]  Hansen, T. and A. Melnikov, \"Additional Media Type\n         \
    \     Structured Syntax Suffixes\", RFC 6839, January 2013.\n   [RFC7230]  Fielding,\
    \ R. and J. Reschke, \"Hypertext Transfer Protocol\n              (HTTP/1.1):\
    \ Message Syntax and Routing\", RFC 7230, June\n              2014.\n   [RFC7231]\
    \  Fielding, R. and J. Reschke, \"Hypertext Transfer Protocol\n              (HTTP/1.1):\
    \ Semantics and Content\", RFC 7231, June 2014.\n   [UNICODE]  The Unicode Consortium,\
    \ \"The Unicode Standard, Version\n              7.0.0\", (Mountain View, CA:\
    \ The Unicode Consortium, 2014\n              ISBN 978-1-936213-09-2),\n     \
    \         <http://www.unicode.org/versions/Unicode7.0.0/>.\n   [XML]      Bray,\
    \ T., Paoli, J., Sperberg-McQueen, C., Maler, E., and\n              F. Yergeau,\
    \ \"Extensible Markup Language (XML) 1.0 (Fifth\n              Edition)\", W3C\
    \ Recommendation REC-xml, November 2008,\n              <http://www.w3.org/TR/2008/REC-xml-20081126/>.\n\
    \              Latest version available at <http://www.w3.org/TR/xml>.\n   [XML1.1]\
    \   Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E.,\n              Yergeau,\
    \ F., and J. Cowan, \"Extensible Markup Language\n              (XML) 1.1 (Second\
    \ Edition)\", W3C Recommendation REC-xml,\n              September 2006,\n   \
    \           <http://www.w3.org/TR/2006/REC-xml11-20060816/>.\n              Latest\
    \ version available at <http://www.w3.org/TR/xml11>.\n   [XMLBase]  Marsh, J.\
    \ and R. Tobin, \"XML Base (Second Edition)\", W3C\n              Recommendation\
    \ REC-xmlbase-20090128, January 2009,\n              <http://www.w3.org/TR/2009/REC-xmlbase-20090128/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xmlbase>.\n\
    \   [XPointerElement]\n              Grosso, P., Maler, E., Marsh, J., and N.\
    \ Walsh, \"XPointer\n              element() Scheme\", W3C Recommendation REC-XPointer-\n\
    \              Element, March 2003,\n              <http://www.w3.org/TR/2003/REC-xptr-element-20030325/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xptr-element>.\n\
    \   [XPointerFramework]\n              Grosso, P., Maler, E., Marsh, J., and N.\
    \ Walsh, \"XPointer\n              Framework\", W3C Recommendation REC-XPointer-Framework,\n\
    \              March 2003,\n              <http://www.w3.org/TR/2003/REC-xptr-framework-20030325/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xptr-framework>.\n\
    \   [XPtrReg]  Hazael-Massieux, D., \"XPointer Registry\", 2005,\n           \
    \   <http://www.w3.org/2005/04/xpointer-schemes/>.\n   [XPtrRegPolicy]\n     \
    \         Hazael-Massieux, D., \"XPointer Scheme Name Registry\n             \
    \ Policy\", 2005,\n              <http://www.w3.org/2005/04/xpointer-policy.html>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [ASCII]    American National Standards Institute,\
    \ \"Coded Character\n              Set -- 7-bit American Standard Code for Information\n\
    \              Interchange\", ANSI X3.4, 1986.\n   [AWWW]     Jacobs, I. and N.\
    \ Walsh, \"Architecture of the World Wide\n              Web, Volume One\", W3C\
    \ Recommendation REC-webarch-20041215,\n              December 2004,\n       \
    \       <http://www.w3.org/TR/2004/REC-webarch-20041215/>.\n              Latest\
    \ version available at\n              <http://www.w3.org/TR/webarch>.\n   [FYN]\
    \      Mendelsohn, N., \"The Self-Describing Web\", W3C TAG Finding\n        \
    \      selfDescribingDocuments-2009-02-07, February 2009,\n              <http://www.w3.org/2001/tag/doc/\n\
    \              selfDescribingDocuments-2009-02-07.html>.\n              Latest\
    \ version available at\n              <http://www.w3.org/2001/tag/doc/\n     \
    \         selfDescribingDocuments.html>\n   [Infoset]  Cowan, J. and R. Tobin,\
    \ \"XML Information Set (Second\n              Edition)\", W3C Recommendation\
    \ REC-xml-infoset-20040204,\n              Febuary 2004,\n              <http://www.w3.org/TR/2004/REC-xml-infoset-20040204/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xml-infoset/>.\n\
    \   [MediaFrags]\n              Troncy, R., Mannens, E., Pfeiffer, S., and D.\
    \ Van Deursen,\n              \"Media Fragments URI 1.0 (basic)\", W3C Recommendation\n\
    \              media-frags, September 2012,\n              <http://www.w3.org/TR/2012/REC-media-frags-20120925/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/media-frags>.\n\
    \   [RFC1557]  Choi, U., Chon, K., and H. Park, \"Korean Character\n         \
    \     Encoding for Internet Messages\", RFC 1557, December 1993.\n   [RFC2376]\
    \  Whitehead, E. and M. Murata, \"XML Media Types\", RFC 2376,\n             \
    \ July 1998.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n\
    \              Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n    \
    \          Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC3023]\
    \  Murata, M., St. Laurent, S., and D. Kohn, \"XML Media\n              Types\"\
    , RFC 3023, January 2001.\n   [RFC3030]  Vaudreuil, G., \"SMTP Service Extensions\
    \ for Transmission\n              of Large and Binary MIME Messages\", RFC 3030,\
    \ December\n              2000.\n   [RFC3977]  Feather, C., \"Network News Transfer\
    \ Protocol (NNTP)\", RFC\n              3977, October 2006.\n   [RFC5226]  Narten,\
    \ T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations\
    \ Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5321]\
    \  Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n              October\
    \ 2008.\n   [RFC6152]  Klensin, J., Freed, N., Rose, M., and D. Crocker, \"SMTP\n\
    \              Service Extension for 8-bit MIME Transport\", STD 71, RFC\n   \
    \           6152, March 2011.\n   [Sivonen]  Sivonen, H. and others, \"Mozilla\
    \ bug: Remove support for\n              UTF-32 per HTML5 spec\", October 2011,\n\
    \              <https://bugzilla.mozilla.org/show_bug.cgi?id=604317#c6>.\n   [TAGMIME]\
    \  Bray, T., Ed., \"Internet Media Type registration,\n              consistency\
    \ of use\", April 2004,\n              <http://www.w3.org/2001/tag/2004/0430-mime>.\n\
    \   [XHTML]    Pemberton, S. and et al, \"XHTML 1.0: The Extensible\n        \
    \      HyperText Markup Language\", W3C Recommendation xhtml1,\n             \
    \ December 1999,\n              <http://www.w3.org/TR/2000/REC-xhtml1-20000126/>.\n\
    \              Latest version available at <http://www.w3.org/TR/xhtml1>.\n  \
    \ [XMLModel] Grosso, P. and J. Kosek, \"Associating Schemas with XML\n       \
    \       documents 1.0 (Third Edition)\", W3C Working Group Note\n            \
    \  NOTE-xml-model-20121009, October 2012,\n              <http://www.w3.org/TR/2012/NOTE-xml-model-20121009/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xml-model>.\n\
    \   [XMLNS10]  Bray, T., Hollander, D., Layman, A., Tobin, R., and H.\n      \
    \        Thompson, \"Namespaces in XML 1.0 (Third Edition)\", W3C\n          \
    \    Recommendation REC-xml-names-20091208, December 2009,\n              <http://www.w3.org/TR/2009/REC-xml-names-20091208/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xml-names>.\n\
    \   [XMLNS11]  Bray, T., Hollander, D., Layman, A., and R. Tobin,\n          \
    \    \"Namespaces in XML 1.1 (Second Edition)\", W3C\n              Recommendation\
    \ REC-xml-names11-20060816, August 2006,\n              <http://www.w3.org/TR/2006/REC-xml-names11-20060816/>.\n\
    \              Latest version available at\n              <http://www.w3.org/TR/xml-names11>.\n\
    \   [XMLSS]    Clark, J., Pieters, S., and H. Thompson, \"Associating\n      \
    \        Style Sheets with XML documents 1.0 (Second Edition)\", W3C\n       \
    \       Recommendation REC-xml-stylesheet-20101028, October 2010,\n          \
    \    <http://www.w3.org/TR/2010/REC-xml-stylesheet-20101028/>.\n             \
    \ Latest version available at\n              <http://www.w3.org/TR/xml-stylesheet>.\n\
    \   [XMLid]    Marsh, J., Veillard, D., and N. Walsh, \"xml:id Version\n     \
    \         1.0\", W3C Recommendation REC-xml-id-20050909, September\n         \
    \     2005, <http://www.w3.org/TR/2005/REC-xml-id-20050909/>.\n              Latest\
    \ version available at\n              <http://www.w3.org/TR/xml-id>.\n"
- title: Appendix A.  Why Use the '+xml' Suffix for XML-Based MIME Types?
  contents:
  - "Appendix A.  Why Use the '+xml' Suffix for XML-Based MIME Types?\n   [RFC3023]\
    \ contains a detailed discussion of the (at the time) novel\n   use of a suffix,\
    \ a practice that has since become widespread.  Those\n   interested in a historical\
    \ perspective on this topic are referred to\n   [RFC3023], Appendix A.\n   The\
    \ registration process for new '+xml' media types is described in\n   [RFC6838].\n"
- title: Appendix B.  Core XML Specifications
  contents:
  - "Appendix B.  Core XML Specifications\n   The following specifications each articulate\
    \ key aspects of XML\n   document semantics:\n      Namespaces in XML 1.0 [XMLNS10]/Namespaces\
    \ in XML 1.1 [XMLNS11]\n      XML Information Set [Infoset]\n      xml:id [XMLid]\n\
    \      XML Base [XMLBase]\n      Associating Style Sheets with XML documents [XMLSS]\n\
    \      Associating Schemas with XML documents [XMLModel]\n   The W3C Technical\
    \ Architecture group has produced two documents that\n   are also relevant:\n\
    \      The Self-Describing Web [FYN] discusses the overall principles of\n   \
    \   how document semantics are determined on the Web.\n      Architecture of the\
    \ World Wide Web, Volume One [AWWW],\n      Section 4.5.4, discusses the specific\
    \ role of XML Namespace\n      documents in this process.\n"
- title: Appendix C.  Operational Considerations
  contents:
  - "Appendix C.  Operational Considerations\n   This section provides an informal\
    \ summary of the major operational\n   considerations that arise when exchanging\
    \ XML MIME entities over a\n   network.\n"
- title: C.1.  General Considerations
  contents:
  - "C.1.  General Considerations\n   The existence of both XML-aware and XML-unaware\
    \ agents handling XML\n   MIME entities can compromise introperability.  Generic\
    \ transcoding\n   proxies pose a particular risk in this regard.  Detailed advice\
    \ about\n   the handling of BOMs when transcoding can be found in Section 3.3.\n\
    \   This specification requires XML consumers to treat BOMs as\n   authoritative:\
    \ this is in principle a backwards-incompatibility.  In\n   practice, serious\
    \ interoperability issues already exist when BOMs are\n   used.  Making BOMs authoritative,\
    \ in conjunction with the deprecation\n   of the UTF-32 encoding form and the\
    \ requirement to include an XML\n   encoding declaration in certain cases (Section\
    \ 3.1), is intended to\n   improve in-practice interoperability as much as possible\
    \ over time.\n   This specification establishes Section 5 as the basis for\n \
    \  interpreting URIs for XML MIME entities that include fragment\n   identifiers,\
    \ mandates support only for shorthand (\"simple name\") and\n   'element'-scheme\
    \ fragments and deprecates support for unregistered\n   XPointer schemes by XML\
    \ MIME entity processors.  Accordingly, URIs\n   will interoperate best if they\
    \ use only simple names and 'element'-\n   scheme fragment identifiers, with registered\
    \ schemes varying widely\n   in the degree of support to be found in generic tools.\
    \  XPointer\n   scheme authors can only expect generic tool support if they register\n\
    \   their schemes.\n"
- title: C.2.  Considerations for Producers
  contents:
  - "C.2.  Considerations for Producers\n   Interoperability for all XML MIME entities\
    \ is maximized by the use of\n   UTF-8, without a BOM.  When UTF-8 is _not_ used,\
    \ a charset parameter\n   and/or a BOM improve interoperability, particularly\
    \ when XML-unaware\n   consumers may be involved.\n   In the very rare case where\
    \ the substantive content of a non-UNICODE\n   XML external parsed entity begins\
    \ with the hexadecimal octet\n   sequences 0xFE 0xFF, 0xFF 0xFE or 0xEF 0xBB 0xBF,\
    \ including an XML\n   text declaration will forestall the mistaken detection\
    \ of a BOM.\n   The use of UTF-32 for XML MIME entities puts interoperability\
    \ at very\n   high risk.\n   Web-server configurations that supply default charset\
    \ parameters risk\n   misrepresenting XML MIME entities.  Allowing users to control\
    \ the\n   value of charset parameters improves interoperability.\n   Supplying\
    \ a mistaken charset parameter is worse than supplying none\n   at all.  In particular,\
    \ generic processors such as transcoders, when\n   processing based on a mistaken\
    \ charset parameter, if they do not fail\n   altogether are likely to produce\
    \ arbitrarily bogus results from which\n   the original is not recoverable.\n"
- title: C.3.  Considerations for Consumers
  contents:
  - "C.3.  Considerations for Consumers\n   Consumers of XML MIME entities can maximize\
    \ interoperability by\n   1.  Taking a BOM as authoritative if it is present in\
    \ an XML MIME\n       entity;\n   2.  In the absence of a BOM, taking a charset\
    \ parameter as\n       authoritative if it is present.\n   Assuming a default\
    \ character encoding in the absence of a charset\n   parameter harms interoperability.\n\
    \   Although support for UTF-32 is not required by [XML] itself, and this\n  \
    \ specification deprecates its use, consumers that check for UTF-32\n   BOMs can\
    \ thereby avoid mistakenly processing UTF-32 entities as\n   (invalid) UTF-16\
    \ entities.\n"
- title: Appendix D.  Changes from RFC 3023
  contents:
  - "Appendix D.  Changes from RFC 3023\n   There are numerous and significant differences\
    \ between this\n   specification and [RFC3023], which it obsoletes.  This appendix\n\
    \   summarizes the major differences only.\n      XPointer ([XPointerFramework]\
    \ and [XPointerElement]) has been\n      added as fragment identifier syntax for\
    \ all the XML media types,\n      and the XPointer Registry ([XPtrReg]) mentioned\n\
    \      [XMLBase] has been added as a mechanism for specifying base URIs\n    \
    \  The language regarding character sets was updated to correspond to\n      the\
    \ W3C TAG finding Internet Media Type registration, consistency\n      of use\
    \ [TAGMIME]\n      Priority is now given to a BOM if present\n      Many references\
    \ are updated, and the existence of XML 1.1 and\n      relevance of this specification\
    \ to it acknowledged\n      A number of justifications and contextualizations\
    \ that were\n      appropriate when XML was new have been removed, including the\n\
    \      whole of the original Appendix A\n"
- title: Appendix E.  Acknowledgements
  contents:
  - "Appendix E.  Acknowledgements\n   MURATA Makoto (FAMILY Given) and Alexey Melnikov\
    \ made early and\n   important contributions to the effort to revise [RFC3023].\n\
    \   This specification reflects the input of numerous participants to the\n  \
    \ ietf-xml-mime@imc.org, xml-mime@ietf.org, and apps-discuss@ietf.org\n   mailing\
    \ lists, though any errors are the responsibility of the\n   authors.  Special\
    \ thanks to:\n   Mark Baker, James Clark, Dan Connolly, Martin Duerst, Ned Freed,\n\
    \   Yaron Goland, Bjoern Hoehrmann, Rick Jelliffe, Murray S.  Kucherawy,\n   Larry\
    \ Masinter, David Megginson, S.  Moonesamy, Keith Moore, Chris\n   Newman, Gavin\
    \ Nicol, Julian Reschke, Marshall Rose, Jim Whitehead,\n   Erik Wilde, and participants\
    \ of the XML activity and the TAG at the\n   W3C.\n   Jim Whitehead and Simon\
    \ St. Laurent were editors of [RFC2376] and\n   [RFC3023], respectively.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Henry S. Thompson\n   University of Edinburgh\n   EMail:\
    \ ht@inf.ed.ac.uk\n   URI:   http://www.ltg.ed.ac.uk/~ht/\n   Chris Lilley\n \
    \  World Wide Web Consortium\n   2004, Route des Lucioles - B.P. 93 06902\n  \
    \ Sophia Antipolis Cedex\n   France\n   EMail: chris@w3.org\n   URI:   http://www.w3.org/People/chris/\n"
