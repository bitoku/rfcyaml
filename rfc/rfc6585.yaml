- title: __initial_text__
  contents:
  - '                      Additional HTTP Status Codes

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies additional HyperText Transfer Protocol (HTTP)\n\
    \   status codes for a variety of common situations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6585.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Requirements ....................................................2\n  \
    \ 3. 428 Precondition Required .......................................2\n   4.\
    \ 429 Too Many Requests ...........................................3\n   5. 431\
    \ Request Header Fields Too Large .............................4\n   6. 511 Network\
    \ Authentication Required .............................4\n   7. Security Considerations\
    \ .........................................6\n   8. IANA Considerations .............................................7\n\
    \   9. References ......................................................7\n  \
    \ Appendix A. Acknowledgements .......................................9\n   Appendix\
    \ B. Issues Raised by Captive Portals .......................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies additional HTTP [RFC2616] status\
    \ codes for a\n   variety of common situations, to improve interoperability and\
    \ avoid\n   confusion when other, less precise status codes are used.\n   Note\
    \ that these status codes are optional; servers cannot be required\n   to support\
    \ them.  However, because clients will treat unknown status\n   codes as a generic\
    \ error of the same class (e.g., 499 is treated as\n   400 if it is not recognized),\
    \ they can be safely deployed by existing\n   servers (see [RFC2616] Section 6.1.1\
    \ for more information).\n"
- title: 2.  Requirements
  contents:
  - "2.  Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  428 Precondition Required
  contents:
  - "3.  428 Precondition Required\n   The 428 status code indicates that the origin\
    \ server requires the\n   request to be conditional.\n   Its typical use is to\
    \ avoid the \"lost update\" problem, where a client\n   GETs a resource's state,\
    \ modifies it, and PUTs it back to the server,\n   when meanwhile a third party\
    \ has modified the state on the server,\n   leading to a conflict.  By requiring\
    \ requests to be conditional, the\n   server can assure that clients are working\
    \ with the correct copies.\n   Responses using this status code SHOULD explain\
    \ how to resubmit the\n   request successfully.  For example:\n   HTTP/1.1 428\
    \ Precondition Required\n   Content-Type: text/html\n   <html>\n      <head>\n\
    \         <title>Precondition Required</title>\n      </head>\n      <body>\n\
    \         <h1>Precondition Required</h1>\n         <p>This request is required\
    \ to be conditional;\n         try using \"If-Match\".</p>\n      </body>\n  \
    \ </html>\n   Responses with the 428 status code MUST NOT be stored by a cache.\n"
- title: 4.  429 Too Many Requests
  contents:
  - "4.  429 Too Many Requests\n   The 429 status code indicates that the user has\
    \ sent too many\n   requests in a given amount of time (\"rate limiting\").\n\
    \   The response representations SHOULD include details explaining the\n   condition,\
    \ and MAY include a Retry-After header indicating how long\n   to wait before\
    \ making a new request.\n   For example:\n   HTTP/1.1 429 Too Many Requests\n\
    \   Content-Type: text/html\n   Retry-After: 3600\n   <html>\n      <head>\n \
    \        <title>Too Many Requests</title>\n      </head>\n      <body>\n     \
    \    <h1>Too Many Requests</h1>\n         <p>I only allow 50 requests per hour\
    \ to this Web site per\n            logged in user.  Try again soon.</p>\n   \
    \   </body>\n   </html>\n   Note that this specification does not define how the\
    \ origin server\n   identifies the user, nor how it counts requests.  For example,\
    \ an\n   origin server that is limiting request rates can do so based upon\n \
    \  counts of requests on a per-resource basis, across the entire server,\n   or\
    \ even among a set of servers.  Likewise, it might identify the user\n   by its\
    \ authentication credentials, or a stateful cookie.\n   Responses with the 429\
    \ status code MUST NOT be stored by a cache.\n"
- title: 5.  431 Request Header Fields Too Large
  contents:
  - "5.  431 Request Header Fields Too Large\n   The 431 status code indicates that\
    \ the server is unwilling to process\n   the request because its header fields\
    \ are too large.  The request MAY\n   be resubmitted after reducing the size of\
    \ the request header fields.\n   It can be used both when the set of request header\
    \ fields in total is\n   too large, and when a single header field is at fault.\
    \  In the latter\n   case, the response representation SHOULD specify which header\
    \ field\n   was too large.\n   For example:\n   HTTP/1.1 431 Request Header Fields\
    \ Too Large\n   Content-Type: text/html\n   <html>\n      <head>\n         <title>Request\
    \ Header Fields Too Large</title>\n      </head>\n      <body>\n         <h1>Request\
    \ Header Fields Too Large</h1>\n         <p>The \"Example\" header was too large.</p>\n\
    \      </body>\n   </html>\n   Responses with the 431 status code MUST NOT be\
    \ stored by a cache.\n"
- title: 6.  511 Network Authentication Required
  contents:
  - "6.  511 Network Authentication Required\n   The 511 status code indicates that\
    \ the client needs to authenticate\n   to gain network access.\n   The response\
    \ representation SHOULD contain a link to a resource that\n   allows the user\
    \ to submit credentials (e.g., with an HTML form).\n   Note that the 511 response\
    \ SHOULD NOT contain a challenge or the\n   login interface itself, because browsers\
    \ would show the login\n   interface as being associated with the originally requested\
    \ URL,\n   which may cause confusion.\n   The 511 status SHOULD NOT be generated\
    \ by origin servers; it is\n   intended for use by intercepting proxies that are\
    \ interposed as a\n   means of controlling access to the network.\n   Responses\
    \ with the 511 status code MUST NOT be stored by a cache.\n"
- title: 6.1.  The 511 Status Code and Captive Portals
  contents:
  - "6.1.  The 511 Status Code and Captive Portals\n   The 511 status code is designed\
    \ to mitigate problems caused by\n   \"captive portals\" to software (especially\
    \ non-browser agents) that is\n   expecting a response from the server that a\
    \ request was made to, not\n   the intervening network infrastructure.  It is\
    \ not intended to\n   encourage deployment of captive portals -- only to limit\
    \ the damage\n   caused by them.\n   A network operator wishing to require some\
    \ authentication, acceptance\n   of terms, or other user interaction before granting\
    \ access usually\n   does so by identifying clients who have not done so (\"unknown\n\
    \   clients\") using their Media Access Control (MAC) addresses.\n   Unknown clients\
    \ then have all traffic blocked, except for that on TCP\n   port 80, which is\
    \ sent to an HTTP server (the \"login server\")\n   dedicated to \"logging in\"\
    \ unknown clients, and of course traffic to\n   the login server itself.\n   For\
    \ example, a user agent might connect to a network and make the\n   following\
    \ HTTP request on TCP port 80:\n   GET /index.htm HTTP/1.1\n   Host: www.example.com\n\
    \   Upon receiving such a request, the login server would generate a 511\n   response:\n\
    \   HTTP/1.1 511 Network Authentication Required\n   Content-Type: text/html\n\
    \   <html>\n      <head>\n         <title>Network Authentication Required</title>\n\
    \         <meta http-equiv=\"refresh\"\n               content=\"0; url=https://login.example.net/\"\
    >\n      </head>\n      <body>\n         <p>You need to <a href=\"https://login.example.net/\"\
    >\n         authenticate with the local network</a> in order to gain\n       \
    \  access.</p>\n      </body>\n   </html>\n   Here, the 511 status code assures\
    \ that non-browser clients will not\n   interpret the response as being from the\
    \ origin server, and the META\n   HTML element redirects the user agent to the\
    \ login server.\n"
- title: 7.  Security Considerations
  contents:
  - '7.  Security Considerations

    '
- title: 7.1.  428 Precondition Required
  contents:
  - "7.1.  428 Precondition Required\n   The 428 status code is optional; clients\
    \ cannot rely upon its use to\n   prevent \"lost update\" conflicts.\n"
- title: 7.2.  429 Too Many Requests
  contents:
  - "7.2.  429 Too Many Requests\n   When a server is under attack or just receiving\
    \ a very large number\n   of requests from a single party, responding to each\
    \ with a 429 status\n   code will consume resources.\n   Therefore, servers are\
    \ not required to use the 429 status code; when\n   limiting resource usage, it\
    \ may be more appropriate to just drop\n   connections, or take other steps.\n"
- title: 7.3.  431 Request Header Fields Too Large
  contents:
  - "7.3.  431 Request Header Fields Too Large\n   Servers are not required to use\
    \ the 431 status code; when under\n   attack, it may be more appropriate to just\
    \ drop connections, or take\n   other steps.\n"
- title: 7.4.  511 Network Authentication Required
  contents:
  - "7.4.  511 Network Authentication Required\n   In common use, a response carrying\
    \ the 511 status code will not come\n   from the origin server indicated in the\
    \ request's URL.  This presents\n   many security issues; e.g., an attacking intermediary\
    \ may be\n   inserting cookies into the original domain's name space, may be\n\
    \   observing cookies or HTTP authentication credentials sent from the\n   user\
    \ agent, and so on.\n   However, these risks are not unique to the 511 status\
    \ code; in other\n   words, a captive portal that is not using this status code\
    \ introduces\n   the same issues.\n   Also, note that captive portals using this\
    \ status code on a Secure\n   Socket Layer (SSL) or Transport Layer Security (TLS)\
    \ connection\n   (commonly, port 443) will generate a certificate error on the\
    \ client.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The HTTP Status Codes registry has been updated with\
    \ the following\n   entries:\n      Value: 428\n      Description: Precondition\
    \ Required\n      Reference: [RFC6585]\n      Value: 429\n      Description: Too\
    \ Many Requests\n      Reference: [RFC6585]\n      Value: 431\n      Description:\
    \ Request Header Fields Too Large\n      Reference: [RFC6585]\n      Value: 511\n\
    \      Description: Network Authentication Required\n      Reference: [RFC6585]\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2616]   Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n  \
    \             Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext\n     \
    \          Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [CORS]      van Kesteren, A., Ed., \"Cross-Origin\
    \ Resource Sharing\",\n               W3C Working Draft WD-cors-20100727, July\
    \ 2010,\n               <http://www.w3.org/TR/cors/>.\n   [Favicon]   Wikipedia,\
    \ \"Favicon\", March 2012,\n               <http://en.wikipedia.org/w/\n     \
    \          index.php?title=Favicon&oldid=484627550>.\n   [OAuth2.0]  Hammer-Lahav,\
    \ E., Ed., Recordon, D., and D. Hardt, \"The\n               OAuth 2.0 Authorization\
    \ Protocol\", Work in Progress,\n               March 2012.\n   [P3P]       Marchiori,\
    \ M., Ed., \"The Platform for Privacy Preferences\n               1.0 (P3P1.0)\
    \ Specification\", W3C Recommendation\n               REC-P3P-20020416, April\
    \ 2002,\n               <http://www.w3.org/TR/P3P/>.\n   [RFC4791]   Daboo, C.,\
    \ Desruisseaux, B., and L. Dusseault,\n               \"Calendaring Extensions\
    \ to WebDAV (CalDAV)\", RFC 4791,\n               March 2007.\n   [RFC4918]  \
    \ Dusseault, L., Ed., \"HTTP Extensions for Web Distributed\n               Authoring\
    \ and Versioning (WebDAV)\", RFC 4918, June 2007.\n   [WIDGETS]   Caceres, M.,\
    \ Ed., \"Widget Packaging and XML\n               Configuration\", W3C Recommendation\
    \ REC-widgets-20110927,\n               September 2011, <http://www.w3.org/TR/widgets/>.\n\
    \   [WebFinger] WebFinger Project, \"WebFingerProtocol (Draft)\",\n          \
    \     January 2010, <http://code.google.com/p/webfinger/wiki/\n              \
    \ WebFingerProtocol>.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   Thanks to Jan Algermissen and Julian Reschke\
    \ for their suggestions\n   and feedback.\n"
- title: Appendix B.  Issues Raised by Captive Portals
  contents:
  - "Appendix B.  Issues Raised by Captive Portals\n   Since clients cannot differentiate\
    \ between a portal's response and\n   that of the HTTP server that they intended\
    \ to communicate with, a\n   number of issues arise.  The 511 status code is intended\
    \ to help\n   mitigate some of them.\n   One example is the \"favicon.ico\" [Favicon]\
    \ commonly used by browsers\n   to identify the site being accessed.  If the favicon\
    \ for a given site\n   is fetched from a captive portal instead of the intended\
    \ site (e.g.,\n   because the user is unauthenticated), it will often \"stick\"\
    \ in the\n   browser's cache (most implementations cache favicons aggressively)\n\
    \   beyond the portal session, so that it seems as if the portal's\n   favicon\
    \ has \"taken over\" the legitimate site.\n   Another browser-based issue comes\
    \ about when the Platform for Privacy\n   Preferences [P3P] is supported.  Depending\
    \ on how it is implemented,\n   it's possible a browser might interpret a portal's\
    \ response for the\n   p3p.xml file as the server's, resulting in the privacy\
    \ policy (or\n   lack thereof) advertised by the portal being interpreted as applying\n\
    \   to the intended site.  Other Web-based protocols such as WebFinger\n   [WebFinger],\
    \ Cross-Origin Resource Sharing [CORS], and Open\n   Authorization [OAuth2.0]\
    \ may also be vulnerable to such issues.\n   Although HTTP is most widely used\
    \ with Web browsers, a growing number\n   of non-browsing applications use it\
    \ as a substrate protocol.  For\n   example, Web Distributed Authoring and Versioning\
    \ (WebDAV) [RFC4918]\n   and Calendaring Extensions to WebDAV (CalDAV) [RFC4791]\
    \ both use HTTP\n   as the basis (for remote authoring and calendaring, respectively).\n\
    \   Using these applications from behind a captive portal can result in\n   spurious\
    \ errors being presented to the user, and might result in\n   content corruption,\
    \ in extreme cases.\n   Similarly, other non-browser applications using HTTP can\
    \ be affected\n   as well, e.g., widgets [WIDGETS], software updates, and other\n\
    \   specialized software such as Twitter clients and the iTunes Music\n   Store.\n\
    \   It should be noted that it's sometimes believed that using HTTP\n   redirection\
    \ to direct traffic to the portal addresses these issues.\n   However, since many\
    \ of these uses \"follow\" redirects, this is not a\n   good solution.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Nottingham\n   Rackspace\n   EMail: mnot@mnot.net\n\
    \   URI:   http://www.mnot.net/\n   Roy T. Fielding\n   Adobe Systems Incorporated\n\
    \   345 Park Ave.\n   San Jose, CA  95110\n   USA\n   EMail: fielding@gbiv.com\n\
    \   URI:   http://roy.gbiv.com/\n"
