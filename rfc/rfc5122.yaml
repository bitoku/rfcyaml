- title: __initial_text__
  contents:
  - "           Internationalized Resource Identifiers (IRIs) and\n              \
    \  Uniform Resource Identifiers (URIs) for\n         the Extensible Messaging\
    \ and Presence Protocol (XMPP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the use of Internationalized Resource\n  \
    \ Identifiers (IRIs) and Uniform Resource Identifiers (URIs) in\n   identifying\
    \ or interacting with entities that can communicate via the\n   Extensible Messaging\
    \ and Presence Protocol (XMPP).\n   This document obsoletes RFC 4622.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   2.  Use of XMPP IRIs and URIs  . . . . . . . . . . . . . .\
    \ . . . .  4\n     2.1.  Rationale  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     2.2.  Form . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n     2.3.  Authority Component  . . . . . . . . . . . . . . . . . .\
    \ .  6\n     2.4.  Path Component . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n     2.5.  Query Component  . . . . . . . . . . . . . . . . . . . . .  8\n\
    \     2.6.  Fragment Identifier Component  . . . . . . . . . . . . . .  9\n  \
    \   2.7.  Generation of XMPP IRIs/URIs . . . . . . . . . . . . . . . 10\n    \
    \ 2.8.  Processing of XMPP IRIs/URIs . . . . . . . . . . . . . . . 13\n     2.9.\
    \  Internationalization . . . . . . . . . . . . . . . . . . . 16\n   3.  IANA\
    \ Registration of xmpp URI Scheme . . . . . . . . . . . . . 16\n     3.1.  URI\
    \ Scheme Name  . . . . . . . . . . . . . . . . . . . . . 16\n     3.2.  Status\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n     3.3.  URI Scheme\
    \ Syntax  . . . . . . . . . . . . . . . . . . . . 17\n     3.4.  URI Scheme Semantics\
    \ . . . . . . . . . . . . . . . . . . . 17\n     3.5.  Encoding Considerations\
    \  . . . . . . . . . . . . . . . . . 17\n     3.6.  Applications/Protocols That\
    \ Use This URI Scheme Name . . . 18\n     3.7.  Interoperability Considerations\
    \  . . . . . . . . . . . . . 18\n     3.8.  Security Considerations  . . . . .\
    \ . . . . . . . . . . . . 18\n     3.9.  Contact  . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 18\n     3.10. Author/Change Controller . . . . . . .\
    \ . . . . . . . . . . 18\n     3.11. References . . . . . . . . . . . . . . .\
    \ . . . . . . . . . 18\n   4.  IANA Considerations  . . . . . . . . . . . . .\
    \ . . . . . . . . 18\n   5.  Security Considerations  . . . . . . . . . . . .\
    \ . . . . . . . 19\n     5.1.  Reliability and Consistency  . . . . . . . . .\
    \ . . . . . . 19\n     5.2.  Malicious Construction . . . . . . . . . . . . .\
    \ . . . . . 20\n     5.3.  Back-End Transcoding . . . . . . . . . . . . . . .\
    \ . . . . 20\n     5.4.  Sensitive Information  . . . . . . . . . . . . . . .\
    \ . . . 20\n     5.5.  Semantic Attacks . . . . . . . . . . . . . . . . . . .\
    \ . . 21\n     5.6.  Spoofing . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 21\n   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .\
    \ 21\n   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 21\n\
    \     7.1.  Normative References . . . . . . . . . . . . . . . . . . . 21\n  \
    \   7.2.  Informative References . . . . . . . . . . . . . . . . . . 22\n   Appendix\
    \ A.  Differences from RFC 4622 . . . . . . . . . . . . . . 25\n   Appendix B.\
    \  Copying Conditions  . . . . . . . . . . . . . . . . . 25\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Extensible Messaging and Presence Protocol (XMPP) is\
    \ a streaming\n   XML technology that enables any two entities on a network to\
    \ exchange\n   well-defined but extensible XML elements (called \"XML stanzas\"\
    ) at a\n   rate close to real time.\n   As specified in [XMPP-CORE], entity addresses\
    \ as used in\n   communications over an XMPP network must not be prepended with\
    \ a\n   Uniform Resource Identifier (URI) scheme (as specified in [URI]).\n  \
    \ However, applications external to an XMPP network may need to\n   identify XMPP\
    \ entities either as URIs or, in a more modern fashion,\n   as Internationalized\
    \ Resource Identifiers (IRIs; see [IRI]).\n   Examples of such external applications\
    \ include databases that need to\n   store XMPP addresses and non-native user\
    \ agents such as web browsers\n   and calendaring applications that provide interfaces\
    \ to XMPP\n   services.\n   The format for an XMPP address is defined in [XMPP-CORE].\
    \  Such an\n   address may contain nearly any Unicode character [UNICODE] and\
    \ must\n   adhere to various profiles of stringprep [STRINGPREP].  The result\
    \ is\n   that an XMPP address is fully internationalizable and is very close\n\
    \   to being an IRI without a scheme.  However, given that there is no\n   freestanding\
    \ registry of IRI schemes, it is necessary to define XMPP\n   identifiers primarily\
    \ as URIs rather than as IRIs, and to register an\n   XMPP URI scheme instead\
    \ of an IRI scheme.  Therefore, this document\n   does the following:\n   o  Specifies\
    \ how to identify XMPP entities as IRIs or URIs.\n   o  Specifies how to interact\
    \ with XMPP entities as IRIs or URIs.\n   o  Formally defines the syntax for XMPP\
    \ IRIs and URIs.\n   o  Specifies how to transform XMPP IRIs into URIs and vice\
    \ versa.\n   o  Registers the xmpp URI scheme.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   This document inherits terminology from [IRI], [URI], and\n\
    \   [XMPP-CORE].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [TERMS].\n"
- title: 2.  Use of XMPP IRIs and URIs
  contents:
  - '2.  Use of XMPP IRIs and URIs

    '
- title: 2.1.  Rationale
  contents:
  - "2.1.  Rationale\n   As described in [XMPP-IM], instant messaging and presence\n\
    \   applications of XMPP must handle im: and pres: URIs (as specified by\n   [CPIM]\
    \ and [CPP]).  However, there are many other applications of\n   XMPP (including\
    \ network management, workflow systems, generic\n   publish-subscribe, remote\
    \ procedure calls, content syndication,\n   gaming, and middleware), and these\
    \ applications do not implement\n   instant messaging and presence semantics.\
    \  Furthermore, a generic\n   XMPP entity does not implement the semantics of\
    \ any existing URI\n   scheme, such as the http:, ftp:, or mailto: scheme.  Therefore,\
    \ it is\n   appropriate to define a new URI scheme that makes it possible to\n\
    \   identify or interact with any XMPP entity (not just instant messaging\n  \
    \ and presence entities) as an IRI or URI.\n   XMPP IRIs and URIs are defined\
    \ for use by non-native interfaces and\n   applications.  In order to ensure interoperability\
    \ on XMPP networks,\n   when data is routed to an XMPP entity (e.g., when an XMPP\
    \ address is\n   contained in the 'to' or 'from' attribute of an XML stanza) or\
    \ an\n   XMPP entity is otherwise identified in standard XMPP protocol\n   elements,\
    \ the entity MUST be addressed as <[node@]domain[/resource]>\n   (i.e., without\
    \ a prepended scheme), where the \"node identifier\",\n   \"domain identifier\"\
    , and \"resource identifier\" portions of an XMPP\n   address conform to the definitions\
    \ provided in Section 3 of\n   [XMPP-CORE].\n   Note: For historical reasons,\
    \ the term \"resource identifier\" is used\n   in XMPP to refer to the optional\
    \ portion of an XMPP address that\n   follows the domain identifier and the \"\
    /\" separator character (for\n   details, refer to Section 3.4 of [XMPP-CORE]);\
    \ this use of the term\n   \"resource identifier\" is not to be confused with\
    \ the meanings of\n   \"resource\" and \"identifier\" provided in Section 1.1\
    \ of [URI].\n   XMPP IRIs and URIs are defined primarily for the purpose of\n\
    \   identification rather than of interaction (regarding this\n   distinction,\
    \ see Section 1.2.2 of [URI]).  The \"Internet resource\"\n   identified by an\
    \ XMPP IRI or URI is an entity that can communicate\n   via XMPP over a network.\
    \  An XMPP IRI or URI can contain additional\n   information above and beyond\
    \ the identified resource; in particular,\n   as described under Section 2.5 a\
    \ query component can be included to\n   specify suggested semantics for an interaction\
    \ with the identified\n   resource.  It is envisioned that when an XMPP application\
    \ resolves an\n   XMPP IRI or URI containing suggested interaction semantics,\
    \ the\n   application will generate an XMPP stanza and send it to the\n   identified\
    \ resource, where the generated stanza may include user or\n   application inputs\
    \ that are consistent with the suggested interaction\n   semantics (for details,\
    \ see Section 2.8.1).\n"
- title: 2.2.  Form
  contents:
  - "2.2.  Form\n   As described in [XMPP-CORE], an XMPP address used natively on\
    \ an XMPP\n   network is a string of Unicode characters that (1) conforms to a\n\
    \   certain set of stringprep [STRINGPREP] profiles and IDNA restrictions\n  \
    \ [IDNA], (2) follows a certain set of syntax rules, and (3) is encoded\n   as\
    \ UTF-8 [UTF-8].  The form of such an address can be represented\n   using Augmented\
    \ Backus-Naur Form [ABNF] as:\n      [ node \"@\" ] domain [ \"/\" resource ]\n\
    \   In this context, the \"node\" and \"resource\" rules rely on distinct\n  \
    \ profiles of stringprep [STRINGPREP], and the \"domain\" rule relies on\n   the\
    \ concept of an internationalized domain name as described in\n   [IDNA].  (Note:\
    \ There is no need to refer to punycode in the IRI\n   syntax itself, since any\
    \ punycode representation would occur only\n   inside an XMPP application in order\
    \ to represent internationalized\n   domain names.  However, it is the responsibility\
    \ of the processing\n   application to convert IRI syntax [IRI] into IDNA syntax\
    \ [IDNA]\n   before addressing XML stanzas to the specified entity on an XMPP\n\
    \   network.)\n   Certain characters are allowed in XMPP node identifiers and\
    \ XMPP\n   resource identifiers but not in the relevant portion of an IRI or\n\
    \   URI.  The characters are as follows:\n   In node identifiers:  [ \\ ] ^ `\
    \ { | }\n   In resource identifiers:  \" < > [ \\ ] ^ ` { | }\n   The node identifier\
    \ characters are not allowed in userinfo by the\n   sub-delims rule and the resource\
    \ identifier characters are not\n   allowed in segment by the pchar rule.  These\
    \ characters MUST be\n   percent-encoded when transforming an XMPP address into\
    \ an XMPP IRI or\n   URI.\n   Naturally, in order to be converted into an IRI\
    \ or URI, an XMPP\n   address must be prepended with a scheme (specifically, the\
    \ xmpp\n   scheme) and may also need to undergo transformations that adhere to\n\
    \   the rules defined in [IRI] and [URI].  Furthermore, in order to\n   enable\
    \ more advanced interaction with an XMPP entity rather than\n   simple identification,\
    \ it is desirable to take advantage of\n   additional aspects of URI syntax and\
    \ semantics, such as authority\n   components, query components, and fragment\
    \ identifier components.\n   Therefore, the ABNF syntax for an XMPP IRI is defined\
    \ as shown below\n   using Augmented Backus-Naur Form specified by [ABNF], where\
    \ the\n   \"ifragment\", \"ihost\", and \"iunreserved\" rules are defined in [IRI]\n\
    \   and the \"pct-encoded\" rule is defined in [URI]:\n     xmppiri    = \"xmpp\"\
    \ \":\" ihierxmpp\n                  [ \"?\" iquerycomp ]\n                  [\
    \ \"#\" ifragment ]\n     ihierxmpp  = iauthpath / ipathxmpp\n     iauthpath \
    \ = \"//\" iauthxmpp [ \"/\" ipathxmpp ]\n     iauthxmpp  = inodeid \"@\" ihost\n\
    \     ipathxmpp  = [ inodeid \"@\" ] ihost [ \"/\" iresid ]\n     inodeid    =\
    \ *( iunreserved / pct-encoded / nodeallow )\n     nodeallow  = \"!\" / \"$\"\
    \ / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n     iresid     = *(\
    \ iunreserved / pct-encoded / resallow )\n     resallow   = \"!\" / \"$\" / \"\
    &\" / \"'\" / \"(\" / \")\" /\n                  \"*\" / \"+\" / \",\" / \":\"\
    \ / \";\" / \"=\"\n     iquerycomp = iquerytype [ *ipair ]\n     iquerytype =\
    \ *iunreserved\n     ipair      = \";\" ikey \"=\" ivalue\n     ikey       = *iunreserved\n\
    \     ivalue     = *( iunreserved / pct-encoded )\n   However, the foregoing syntax\
    \ is not appropriate for inclusion in the\n   registration of the xmpp URI scheme,\
    \ since the IANA recognizes only\n   URI schemes and not IRI schemes.  Therefore,\
    \ the ABNF syntax for an\n   XMPP URI rather than for IRI is defined as shown\
    \ in Section 3.3 of\n   this document.  If it is necessary to convert the IRI\
    \ syntax into URI\n   syntax, an application MUST adhere to the mapping procedure\
    \ specified\n   in Section 3.1 of [IRI].\n   The following is an example of a\
    \ basic XMPP IRI/URI used for purposes\n   of identifying a node associated with\
    \ an XMPP server:\n      xmpp:node@example.com\n   Descriptions of the various\
    \ components of an XMPP IRI/URI are\n   provided in the following sections.\n"
- title: 2.3.  Authority Component
  contents:
  - "2.3.  Authority Component\n   As explained in Section 2.8 of this document, in\
    \ the absence of an\n   authority component, the processing application would\
    \ authenticate as\n   a configured user at a configured XMPP server.  That is,\
    \ the\n   authority component section is unnecessary and should be ignored if\n\
    \   the processing application has been configured with a set of default\n   credentials.\n\
    \   In accordance with Section 3.2 of RFC 3986 [URI], the authority\n   component\
    \ is preceded by a double slash (\"//\") and is terminated by\n   the next slash\
    \ (\"/\"), question mark (\"?\"), or number sign (\"#\")\n   character, or by\
    \ the end of the IRI/URI.  As explained more fully in\n   Section 2.8.1 of this\
    \ document, the presence of an authority\n   component signals the processing\
    \ application to authenticate as the\n   node@domain specified in the authority\
    \ component rather than as a\n   configured node@domain (see the Security Considerations\
    \ section of\n   this document regarding authentication).  (While it is unlikely\
    \ that\n   the authority component will be included in most XMPP IRIs or URIs,\n\
    \   the scheme allows for its inclusion, if appropriate.)  Thus, the\n   following\
    \ XMPP IRI/URI indicates to authenticate as\n   \"guest@example.com\":\n     \
    \ xmpp://guest@example.com\n   Note well that this is quite different from the\
    \ following XMPP IRI/\n   URI, which identifies a node \"guest@example.com\" but\
    \ does not signal\n   the processing application to authenticate as that node:\n\
    \      xmpp:guest@example.com\n   Similarly, using a possible query component\
    \ of \"?message\" to trigger\n   an interface for sending a message, the following\
    \ XMPP IRI/URI\n   signals the processing application to authenticate as\n   \"\
    guest@example.com\" and to send a message to \"support@example.com\":\n      xmpp://guest@example.com/support@example.com?message\n\
    \   By contrast, the following XMPP IRI/URI signals the processing\n   application\
    \ to authenticate as its configured default account and to\n   send a message\
    \ to \"support@example.com\":\n      xmpp:support@example.com?message\n"
- title: 2.4.  Path Component
  contents:
  - "2.4.  Path Component\n   The path component of an XMPP IRI/URI identifies an\
    \ XMPP address or\n   specifies the XMPP address to which an XML stanza shall\
    \ be directed\n   at the end of IRI/URI processing.\n   For example, the following\
    \ XMPP IRI/URI identifies a node associated\n   with an XMPP server:\n      xmpp:example-node@example.com\n\
    \   The following XMPP IRI/URI identifies a node associated with an XMPP\n   server\
    \ along with a particular XMPP resource identifier associated\n   with that node:\n\
    \      xmpp:example-node@example.com/some-resource\n   Inclusion of a node is\
    \ optional in XMPP addresses, so the following\n   XMPP IRI/URI simply identifies\
    \ an XMPP server:\n      xmpp:example.com\n"
- title: 2.5.  Query Component
  contents:
  - "2.5.  Query Component\n   There are many potential use cases for encapsulating\
    \ information in\n   the query component of an XMPP IRI/URI for the purpose of\
    \ specifying\n   suggested interaction semantics (see Section 2.1); examples include,\n\
    \   but are not limited to:\n   o  sending an XMPP message stanza (see [XMPP-IM]),\n\
    \   o  adding a roster item (see [XMPP-IM]),\n   o  sending a presence subscription\
    \ (see [XMPP-IM]),\n   o  probing for current presence information (see [XMPP-IM]),\n\
    \   o  triggering a remote procedure call (see [XEP-0009]),\n   o  discovering\
    \ the identity or capabilities of another entity (see\n      [XEP-0030]),\n  \
    \ o  joining an XMPP-based text chat room (see [XEP-0045]),\n   o  interacting\
    \ with publish-subscribe channels (see [XEP-0060]),\n   o  providing a SOAP interface\
    \ (see [XEP-0072]), and\n   o  registering with another entity (see [XEP-0077]).\n\
    \   Many of these potential use cases are application specific, and the\n   full\
    \ range of such applications cannot be foreseen in advance given\n   the continued\
    \ expansion in XMPP development.  However, there is\n   agreement within the Jabber/XMPP\
    \ developer community that all the\n   uses envisioned to date can be encapsulated\
    \ via a \"query type\",\n   optionally supplemented by one or more \"key-value\"\
    \ pairs (this is\n   similar to the \"application/x-www-form-urlencoded\" MIME\
    \ type\n   described in [HTML]).\n   As an example, an XMPP IRI/URI intended to\
    \ launch an interface for\n   sending a message to the XMPP entity \"example-node@example.com\"\
    \ might\n   be represented as follows:\n      xmpp:example-node@example.com?message\n\
    \   Similarly, an XMPP IRI/URI intended to launch an interface for\n   sending\
    \ a message to the XMPP entity \"example-node@example.com\" with\n   a particular\
    \ subject might be represented as follows:\n      xmpp:example-node@example.com?message;subject=Hello%20World\n\
    \   If the processing application does not understand query components or\n  \
    \ the specified query type, it MUST ignore the query component and\n   treat the\
    \ IRI/URI as consisting of, for example,\n   <xmpp:example-node@example.com> rather\
    \ than\n   <xmpp:example-node@example.com?query>.  If the processing application\n\
    \   does not understand a particular key within the query component, it\n   MUST\
    \ ignore that key and its associated value.\n   As noted, there exist many kinds\
    \ of XMPP applications (both actual\n   and potential), and such applications\
    \ may define query types and keys\n   for use in the query component portion of\
    \ XMPP URIs.  The XMPP\n   Registrar function (see [XEP-0053]) of the XMPP Standards\
    \ Foundation\n   maintains a registry of such query types and keys at\n   <http://www.xmpp.org/registrar/querytypes.html>.\
    \  To help ensure\n   interoperability, any application using the formats defined\
    \ in this\n   document SHOULD submit any associated query types and keys to that\n\
    \   registry in accordance with the procedures specified in [XEP-0147].\n   Note:\
    \ The delimiter between key-value pairs is the \";\" character\n   instead of\
    \ the \"&\" character used in many other URI schemes.  This\n   delimiter was\
    \ chosen in order to avoid problems with escaping of the\n   & character in HTML\
    \ and XML applications.\n"
- title: 2.6.  Fragment Identifier Component
  contents:
  - "2.6.  Fragment Identifier Component\n   As stated in Section 3.5 of [URI], \"\
    The fragment identifier component\n   of a URI allows indirect identification\
    \ of a secondary resource by\n   reference to a primary resource and additional\
    \ identifying\n   information.\"  Because the resource identified by an XMPP IRI/URI\n\
    \   does not make available any media type (see [MIME]) and therefore (in\n  \
    \ the terminology of [URI]) no representation exists at an XMPP\n   resource,\
    \ the semantics of the fragment identifier component in XMPP\n   IRIs/URIs are\
    \ to be \"considered unknown and, effectively,\n   unconstrained\" (ibid.).  Particular\
    \ XMPP applications MAY make use of\n   the fragment identifier component for\
    \ their own purposes.  However,\n   if a processing application does not understand\
    \ fragment identifier\n   components or the syntax of a particular fragment identifier\n\
    \   component included in an XMPP IRI/URI, it MUST ignore the fragment\n   identifier\
    \ component.\n"
- title: 2.7.  Generation of XMPP IRIs/URIs
  contents:
  - '2.7.  Generation of XMPP IRIs/URIs

    '
- title: 2.7.1.  Generation Method
  contents:
  - "2.7.1.  Generation Method\n   In order to form an XMPP IRI from an XMPP node\
    \ identifier, domain\n   identifier, and resource identifier, the generating application\
    \ MUST\n   first ensure that the XMPP address conforms to the rules specified\
    \ in\n   [XMPP-CORE], including encoding as a UTF-8 [UTF-8] string and\n   application\
    \ of the relevant stringprep profiles [STRINGPREP].\n   Because IRI syntax [IRI]\
    \ specifies that the characters in an IRI are\n   the original Unicode characters\
    \ themselves [UNICODE], when generating\n   an XMPP IRI the generating application\
    \ MUST then decode the UTF-8\n   [UTF-8] characters of a native XMPP address to\
    \ their original Unicode\n   form.  The generating application then MUST concatenate\
    \ the\n   following:\n   1.  The \"xmpp\" scheme and the \":\" character.\n  \
    \ 2.  Optionally (if an authority component is to be included before\n       the\
    \ node identifier), the characters \"//\", an authority component\n       of the\
    \ form node@domain, and the character \"/\".\n   3.  Optionally (if the XMPP address\
    \ contained an XMPP \"node\n       identifier\"), a string of Unicode characters\
    \ that conforms to the\n       \"inodeid\" rule, followed by the \"@\" character.\n\
    \   4.  A string of Unicode characters that conforms to the \"ihost\" rule.\n\
    \   5.  Optionally (if the XMPP address contained an XMPP \"resource\n       identifier\"\
    ), the character \"/\" and a string of Unicode\n       characters that conforms\
    \ to the \"iresid\" rule.\n   6.  Optionally (if a query component is to be included),\
    \ the \"?\"\n       character and query component.\n   7.  Optionally (if a fragment\
    \ identifier component is to be\n       included), the \"#\" character and fragment\
    \ identifier component.\n   In order to form an XMPP URI from the resulting IRI,\
    \ an application\n   MUST adhere to the mapping procedure specified in Section\
    \ 3.1 of\n   [IRI].\n"
- title: 2.7.2.  Generation Notes
  contents:
  - "2.7.2.  Generation Notes\n   Certain characters are allowed in the node identifier,\
    \ domain\n   identifier, and resource identifier portions of a native XMPP address\n\
    \   but prohibited by the \"inodeid\", \"ihost\", and \"iresid\" rules of an\n\
    \   XMPP IRI.  Specifically, the \"#\" and \"?\" characters are allowed in\n \
    \  node identifiers, and the \"/\", \"?\", \"#\", and \"@\" characters are\n \
    \  allowed in resource identifiers, but these characters are used as\n   delimiters\
    \ in XMPP IRIs.  In addition, the \" \" ([US-ASCII] space)\n   character is allowed\
    \ in resource identifiers but prohibited in IRIs.\n   Therefore, all the foregoing\
    \ characters MUST be percent-encoded when\n   transforming an XMPP address into\
    \ an XMPP IRI.\n   Consider the following nasty node in an XMPP address:\n   \
    \   nasty!#$%()*+,-.;=?[\\]^_`{|}~node@example.com\n   That address would be transformed\
    \ into the following XMPP IRI (split\n   into two lines for layout purposes):\n\
    \      xmpp:nasty!%23$%25()*+,-.;=%3F%5B%5C%5D%5E_%60%7B%7C%7D~node\n      @example.com\n\
    \   Consider the following repulsive resource in an XMPP address (split\n   into\
    \ two lines for layout purposes):\n      node@example.com\n      /repulsive !#\"\
    $%&'()*+,-./:;<=>?@[\\]^_`{|}~resource\n   That address would be transformed into\
    \ the following XMPP IRI (split\n   into three lines for layout purposes):\n \
    \     xmpp:node@example.com\n      /repulsive%20!%23%22$%25&'()*+,-.%2F:;%3C=\n\
    \      %3E%3F%40%5B%5C%5D%5E_%60%7B%7C%7D~resource\n   Furthermore, virtually\
    \ any character outside the US-ASCII range\n   [US-ASCII] is allowed in an XMPP\
    \ address and therefore also in an\n   XMPP IRI, but URI syntax forbids such characters\
    \ directly and\n   specifies that such characters MUST be percent-encoded.  In\
    \ order to\n   determine the URI associated with an XMPP IRI, an application MUST\n\
    \   adhere to the mapping procedure specified in Section 3.1 of [IRI].\n   The\
    \ following table may assist implementors in understanding the\n   respective\
    \ encodings and \"carrier units\" of the identifiers discussed\n   in this document,\
    \ namely: (1) native XMPP addresses, (2) IRIs, and\n   (3) URIs.  For details,\
    \ refer to Section 3.5 of this document as well\n   as Section 3 of [XMPP-CORE],\
    \ Section 6.4 of [IRI], and Section 2 of\n   [URI].\n   +--------------+-----------+-----------+\n\
    \   | Identifier   | Encoding  | Units     |\n   +--------------+-----------+-----------+\n\
    \   | XMPP address | UTF-8     | Octets    |\n   +--------------+-----------+-----------+\n\
    \   | IRI          | Unicode   | 16/32-bit |\n   |              |           |\
    \ values    |\n   +--------------+-----------+-----------+\n   | URI         \
    \ | Percent-  | US-ASCII  |\n   |              | encoded   |           |\n   |\
    \              | UTF-8     |           |\n   +--------------+-----------+-----------+\n"
- title: 2.7.3.  Generation Example
  contents:
  - "2.7.3.  Generation Example\n   Consider the following XMPP address:\n       \
    \  <ji&#x159;i@&#x10D;echy.example/v Praze>\n   Note: The string \"&#x159;\" stands\
    \ for the Unicode character LATIN\n   SMALL LETTER R WITH CARON, and the string\
    \ \"&#x10D;\" stands for the\n   Unicode character LATIN SMALL LETTER C WITH CARON.\
    \  The \"&#x...\" form\n   is used in this document as a notational device to\
    \ represent Unicode\n   characters, following the \"XML Notation\" used in [IRI]\
    \ to represent\n   characters that cannot be rendered in ASCII-only documents.\
    \  An XMPP\n   IRI MUST contain the Unicode characters themselves, not the\n \
    \  representation in XML Notation (in particular, note that the \"#\"\n   character\
    \ is forbidden in IRI syntax).  An XMPP URI MUST properly\n   escape such characters,\
    \ as described below.  The '<' and '>'\n   characters are not part of the address\
    \ itself but are provided to set\n   off the address for legibility.  (For those\
    \ who do not understand the\n   Czech language, this example could be Anglicized\
    \ as\n   \"george@czech-lands.example/In Prague\".)\n   In accordance with the\
    \ process specified above, the generating\n   application would do the following\
    \ to generate a valid XMPP IRI from\n   this address:\n   1.  Ensure that the\
    \ XMPP address conforms to the rules specified in\n       [XMPP-CORE], including\
    \ application of the relevant stringprep\n       profiles [STRINGPREP] and encoding\
    \ as a UTF-8 string [UTF-8].\n   2.  Concatenate the following:\n       1.  The\
    \ \"xmpp\" scheme and the \":\" character.\n       2.  An \"authority component\"\
    \ if included (not shown in this\n           example).\n       3.  A string of\
    \ Unicode characters that represents the XMPP\n           address, transformed\
    \ in accordance with the \"inodeid\",\n           \"ihost\", and \"iresid\" rules.\n\
    \       4.  The \"?\" character followed by a \"query component\" if\n       \
    \    appropriate to the application (not shown in this example).\n       5.  The\
    \ \"#\" character followed by a \"fragment identifier\n           component\"\
    \ if appropriate to the application (not shown in\n           this example).\n\
    \   The result is the following XMPP IRI (note again that, in accordance\n   with\
    \ the \"XML Notation\" used in [IRI], the string \"&#x159;\" stands\n   for the\
    \ Unicode character LATIN SMALL LETTER R WITH CARON and the\n   string \"&#x10D;\"\
    \ stands for the Unicode character LATIN SMALL LETTER\n   C WITH CARON; an XMPP\
    \ IRI would contain the Unicode characters\n   themselves).\n       <xmpp:ji&#x159;i@&#x10D;echy.example/v%20Praze>\n\
    \   In order to generate a valid XMPP URI from the foregoing IRI, the\n   application\
    \ MUST adhere to the procedure specified in Section 3.1 of\n   [IRI], resulting\
    \ in the following URI:\n       <xmpp:ji%C5%99i@%C4%8Dechy.example/v%20Praze>\n"
- title: 2.8.  Processing of XMPP IRIs/URIs
  contents:
  - '2.8.  Processing of XMPP IRIs/URIs

    '
- title: 2.8.1.  Processing Method
  contents:
  - "2.8.1.  Processing Method\n   If a processing application is presented with an\
    \ XMPP URI and not\n   with an XMPP IRI, it MUST first convert the URI into an\
    \ IRI by\n   following the procedure specified in Section 3.2 of [IRI].\n   In\
    \ order to decompose an XMPP IRI for interaction with the entity it\n   identifies,\
    \ a processing application MUST separate:\n   1.  The \"xmpp\" scheme and the\
    \ \":\" character.\n   2.  The authority component, if included (the string of\
    \ Unicode\n       characters between the \"//\" characters and the next \"/\"\n\
    \       character, the \"?\" character, the \"#\" character, or the end of\n \
    \      the IRI).\n   3.  A string of Unicode characters that represents an XMPP\
    \ address as\n       transformed in accordance with the \"inodeid\", \"ihost\"\
    , and\n       \"iresid\" rules.\n   4.  Optionally the query component, if included,\
    \ using the \"?\"\n       character as a separator.\n   5.  Optionally the fragment\
    \ identifier component, if included, using\n       the \"#\" character as a separator.\n\
    \   At this point, the processing application MUST ensure that the\n   resulting\
    \ XMPP address conforms to the rules specified in\n   [XMPP-CORE], including application\
    \ of the relevant stringprep\n   profiles [STRINGPREP].  The processing application\
    \ then would either\n   (1) complete further XMPP handling itself or (2) invoke\
    \ a helper\n   application to complete XMPP handling; such XMPP handling would\
    \ most\n   likely consist of the following steps:\n   1.  If not already connected\
    \ to an XMPP server, connect either as the\n       user specified in the authority\
    \ component or as the configured\n       user at the configured XMPP server, normally\
    \ by adhering to the\n       XMPP connection procedures defined in [XMPP-CORE].\
    \  (Note: The\n       processing application SHOULD ignore the authority component\
    \ if\n       it has been configured with a set of default credentials.)\n   2.\
    \  Optionally, determine the nature of the intended recipient (e.g.,\n       via\
    \ [XEP-0030]).\n   3.  Optionally, present an appropriate interface to a user\
    \ based on\n       the nature of the intended recipient and/or the contents of\
    \ the\n       query component.\n   4.  Generate an XMPP stanza that translates\
    \ any user or application\n       inputs into their corresponding XMPP equivalents.\n\
    \   5.  Send the XMPP stanza via the authenticated server connection for\n   \
    \    delivery to the intended recipient.\n"
- title: 2.8.2.  Processing Notes
  contents:
  - "2.8.2.  Processing Notes\n   It may help implementors to note that the first\
    \ two steps of \"further\n   XMPP handling\", as described at the end of Section\
    \ 2.8.1, are similar\n   to HTTP authentication [HTTP-AUTH], while the next three\
    \ steps are\n   similar to the handling of mailto: URIs [MAILTO].\n   As noted\
    \ in Section 2.7.2 of this document, certain characters are\n   allowed in the\
    \ node identifier, domain identifier, and resource\n   identifier portions of\
    \ a native XMPP address but prohibited by the\n   \"inodeid\", \"ihost\", and\
    \ \"iresid\" rules of an XMPP IRI.  The percent-\n   encoded octets corresponding\
    \ to these characters in XMPP IRIs MUST be\n   transformed into the characters\
    \ allowed in XMPP addresses when\n   processing an XMPP IRI for interaction with\
    \ the represented XMPP\n   entity.\n   Consider the following nasty node in an\
    \ XMPP IRI (split into two\n   lines for layout purposes):\n      xmpp:nasty!%23$%25()*+,-.;=%3F%5B%5C%5D%5E_%60%7B%7C%7D~node\n\
    \      @example.com\n   That IRI would be transformed into the following XMPP\
    \ address:\n      nasty!#$%()*+,-.;=?[\\]^_`{|}~node@example.com\n   Consider\
    \ the following repulsive resource in an XMPP IRI (split into\n   three lines\
    \ for layout purposes):\n      xmpp:node@example.com\n      /repulsive%20!%23%22$%25&'()*+,-.%2F:;%3C\n\
    \      =%3E%3F%40%5B%5C%5D%5E_%60%7B%7C%7D~resource\n   That IRI would be transformed\
    \ into the following XMPP address (split\n   into two lines for layout purposes):\n\
    \      node@example.com\n      /repulsive !#\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~resource\n"
- title: 2.8.3.  Processing Example
  contents:
  - "2.8.3.  Processing Example\n   Consider the XMPP URI that resulted from the previous\
    \ example (see\n   Section 2.7.3):\n       <xmpp:ji%C5%99i@%C4%8Dechy.example/v%20Praze>\n\
    \   In order to generate a valid XMPP IRI from that URI, the application\n   MUST\
    \ adhere to the procedure specified in Section 3.2 of [IRI],\n   resulting in\
    \ the following IRI:\n       <xmpp:ji&#x159;i@&#x10D;echy.example/v%20Praze>\n\
    \   In accordance with the process specified above, the processing\n   application\
    \ would remove the \"xmpp\" scheme and \":\" character to\n   extract the XMPP\
    \ address from this XMPP IRI, converting any percent-\n   encoded octets from\
    \ the \"inodeid\", \"ihost\", and \"iresid\" rules into\n   their character equivalents\
    \ (e.g., \"%20\" into the space character).\n   The result is this XMPP address:\n\
    \       <ji&#x159;i@&#x10D;echy.example/v Praze>\n"
- title: 2.9.  Internationalization
  contents:
  - "2.9.  Internationalization\n   Because XMPP addresses are UTF-8 strings [UTF-8]\
    \ and because octets\n   outside the US-ASCII range [US-ASCII] within XMPP addresses\
    \ can be\n   easily converted to percent-encoded octets, XMPP addresses are\n\
    \   designed to work well with Internationalized Resource Identifiers\n   [IRI].\
    \  In particular, with the exceptions of stringprep\n   verification, the conversion\
    \ of syntax-relevant US-ASCII characters\n   (e.g., \"?\"), and the conversion\
    \ of percent-encoded octets from the\n   \"inodeid\", \"ihost\", and \"iresid\"\
    \ rules into their character\n   equivalents (e.g., \"%20\" into the US-ASCII\
    \ space character), an XMPP\n   IRI can be constructed directly by prepending\
    \ the \"xmpp\" scheme and\n   \":\" character to an XMPP address.  Furthermore,\
    \ an XMPP IRI can be\n   converted into URI syntax by adhering to the procedure\
    \ specified in\n   Section 3.1 of [IRI], and an XMPP URI can be converted into\
    \ IRI\n   syntax by adhering to the procedure specified in Section 3.2 of\n  \
    \ [IRI], thus ensuring interoperability with applications that are able\n   to\
    \ process URIs but unable to process IRIs.\n"
- title: 3.  IANA Registration of xmpp URI Scheme
  contents:
  - "3.  IANA Registration of xmpp URI Scheme\n   In accordance with [URI-SCHEMES],\
    \ this section provides the\n   information required to register the xmpp URI\
    \ scheme.\n"
- title: 3.1.  URI Scheme Name
  contents:
  - "3.1.  URI Scheme Name\n   xmpp\n"
- title: 3.2.  Status
  contents:
  - "3.2.  Status\n   permanent\n"
- title: 3.3.  URI Scheme Syntax
  contents:
  - "3.3.  URI Scheme Syntax\n   The syntax for an xmpp URI is defined below using\
    \ Augmented Backus-\n   Naur Form as specified by [ABNF], where the \"fragment\"\
    , \"host\", \"pct-\n   encoded\", and \"unreserved\" rules are defined in [URI]:\n\
    \     xmppuri   = \"xmpp\" \":\" hierxmpp [ \"?\" querycomp ] [ \"#\" fragment\
    \ ]\n     hierxmpp  = authpath / pathxmpp\n     authpath  = \"//\" authxmpp [\
    \ \"/\" pathxmpp ]\n     authxmpp  = nodeid \"@\" host\n     pathxmpp  = [ nodeid\
    \ \"@\" ] host [ \"/\" resid ]\n     nodeid    = *( unreserved / pct-encoded /\
    \ nodeallow )\n     nodeallow = \"!\" / \"$\" / \"(\" / \")\" / \"*\" / \"+\"\
    \ / \",\" / \";\" / \"=\"\n     resid     = *( unreserved / pct-encoded / resallow\
    \ )\n     resallow  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" /\n      \
    \            \"*\" / \"+\" / \",\" / \":\" / \";\" / \"=\"\n     querycomp = querytype\
    \ [ *pair ]\n     querytype = *( unreserved / pct-encoded )\n     pair      =\
    \ \";\" key \"=\" value\n     key       = *( unreserved / pct-encoded )\n    \
    \ value     = *( unreserved / pct-encoded )\n"
- title: 3.4.  URI Scheme Semantics
  contents:
  - "3.4.  URI Scheme Semantics\n   The xmpp URI scheme identifies entities that natively\
    \ communicate\n   using the Extensible Messaging and Presence Protocol (XMPP),\
    \ and is\n   mainly used for identification rather than for resource location.\n\
    \   However, if an application that processes an xmpp URI enables\n   interaction\
    \ with the XMPP address identified by the URI, it MUST\n   follow the methodology\
    \ defined in Section 2 of this document, Use of\n   XMPP IRIs and URIs, to reconstruct\
    \ the encapsulated XMPP address,\n   connect to an appropriate XMPP server, and\
    \ send an appropriate XMPP\n   \"stanza\" (XML fragment) to the XMPP address.\
    \  (Note: There is no MIME\n   type associated with the xmpp URI scheme.)\n"
- title: 3.5.  Encoding Considerations
  contents:
  - "3.5.  Encoding Considerations\n   In addition to XMPP URIs, there will also be\
    \ XMPP Internationalized\n   Resource Identifiers (IRIs).  Prior to converting\
    \ an Extensible\n   Messaging and Presence Protocol (XMPP) address into an IRI\
    \ (and in\n   accordance with [XMPP-CORE]), the XMPP address must be represented\
    \ as\n   a string of UTF-8 characters [UTF-8] by the generating application\n\
    \   (e.g., by transforming an application's internal representation of\n   the\
    \ address as a UTF-16 string into a UTF-8 string).  Because IRI\n   syntax [IRI]\
    \ specifies that the characters in an IRI are the original\n   Unicode characters\
    \ themselves [UNICODE], when generating an XMPP IRI\n   the generating application\
    \ MUST decode the UTF-8 characters of a\n   native XMPP address to their original\
    \ Unicode form.  Because URI\n   syntax [URI] specifices that the characters in\
    \ a URI are US-ASCII\n   characters [US-ASCII] only, when generating an XMPP URI\
    \ the\n   generating application MUST escape the Unicode characters of an XMPP\n\
    \   IRI to US-ASCII characters by adhering to the procedure specified in\n   RFC\
    \ 3987.\n"
- title: 3.6.  Applications/Protocols That Use This URI Scheme Name
  contents:
  - "3.6.  Applications/Protocols That Use This URI Scheme Name\n   The xmpp URI scheme\
    \ is intended to be used by interfaces to an XMPP\n   network from non-native\
    \ user agents, such as web browsers, as well as\n   by non-native applications\
    \ that need to identify XMPP entities as\n   full URIs or IRIs.\n"
- title: 3.7.  Interoperability Considerations
  contents:
  - "3.7.  Interoperability Considerations\n   There are no known interoperability\
    \ concerns related to use of the\n   xmpp URI scheme.  In order to help ensure\
    \ interoperability, the XMPP\n   Registrar function of the XMPP Standards Foundation\
    \ maintains a\n   registry of query types and keys that can be used in the query\n\
    \   components of XMPP URIs and IRIs, located at\n   <http://www.xmpp.org/registrar/querytypes.html>.\n"
- title: 3.8.  Security Considerations
  contents:
  - "3.8.  Security Considerations\n   See Section 5 of this document, Security Considerations.\n"
- title: 3.9.  Contact
  contents:
  - "3.9.  Contact\n   Peter Saint-Andre [mailto:stpeter@jabber.org,\n   xmpp:stpeter@jabber.org]\n"
- title: 3.10.  Author/Change Controller
  contents:
  - "3.10.  Author/Change Controller\n   This scheme is registered under the IETF\
    \ tree.  As such, the IETF\n   maintains change control.\n"
- title: 3.11.  References
  contents:
  - "3.11.  References\n   [XMPP-CORE]\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This document obsoletes the URI scheme registration\
    \ created by RFC\n   4622.  The registration template can be found in Section\
    \ 3 of this\n   document.  In order to help ensure interoperability, the XMPP\n\
    \   Registrar function of the XMPP Standards Foundation maintains a\n   registry\
    \ of query types and keys that can be used in the query\n   components of XMPP\
    \ URIs and IRIs, located at\n   <http://www.xmpp.org/registrar/querytypes.html>.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Providing an interface to XMPP services from\
    \ non-native applications\n   introduces new security concerns.  The security\
    \ considerations\n   discussed in [IRI], [URI], and [XMPP-CORE] apply to XMPP\
    \ IRIs, and\n   the security considerations discussed in [URI] and [XMPP-CORE]\
    \ apply\n   to XMPP URIs.  In accordance with Section 2.7 of [URI-SCHEMES] and\n\
    \   Section 7 of [URI], particular security considerations are specified\n   in\
    \ the following sections.\n"
- title: 5.1.  Reliability and Consistency
  contents:
  - "5.1.  Reliability and Consistency\n   Given that XMPP addresses of the form node@domain.tld\
    \ are typically\n   created via registration at an XMPP server or provisioned\
    \ by an\n   administrator of such a server, it is possible that such addresses\n\
    \   may also be unregistered or deprovisioned.  Therefore, the XMPP IRI/\n   URI\
    \ that identifies such an XMPP address may not reliably and\n   consistently be\
    \ associated with the same principal, account owner,\n   application, or device.\n\
    \   XMPP addresses of the form node@domain.tld/resource are typically\n   even\
    \ more ephemeral (since a given XMPP resource identifier is\n   typically associated\
    \ with a particular, temporary session of an XMPP\n   client at an XMPP server).\
    \  Therefore, the XMPP IRI/URI that\n   identifies such an XMPP address probably\
    \ will not reliably and\n   consistently be associated with the same session.\
    \  However, the\n   procedures specified in Section 10 of [XMPP-CORE] effectively\n\
    \   eliminate any potential confusion that might be introduced by the\n   lack\
    \ of reliability and consistency for the XMPP IRI/URI that\n   identifies such\
    \ an XMPP address.\n   XMPP addresses of the form domain.tld are typically long-lived\
    \ XMPP\n   servers or associated services.  Although naturally it is possible\n\
    \   for server or service administrators to decommission the server or\n   service\
    \ at any time, typically the IRIs/URIs that identify such\n   servers or services\
    \ are the most reliable and consistent of XMPP\n   IRIs/URIs.\n   XMPP addresses\
    \ of the form domain.tld/resource are not yet common on\n   XMPP networks; however,\
    \ the reliability and consistency of XMPP IRIs/\n   URIs that identify such XMPP\
    \ addresses would likely fall somewhere\n   between those that identify XMPP addresses\
    \ of the form domain.tld and\n   those that identify XMPP addresses of the form\
    \ node@domain.tld.\n"
- title: 5.2.  Malicious Construction
  contents:
  - "5.2.  Malicious Construction\n   Malicious construction of XMPP IRIs/URIs is\
    \ made less likely by the\n   prohibition on port numbers in XMPP IRIs/URIs (since\
    \ port numbers are\n   to be discovered using DNS SRV records [DNS-SRV], as specified\
    \ in\n   [XMPP-CORE]).\n"
- title: 5.3.  Back-End Transcoding
  contents:
  - "5.3.  Back-End Transcoding\n   Because the base XMPP protocol is designed to\
    \ implement the exchange\n   of messages and presence information and not the\
    \ retrieval of files\n   or invocation of similar system functions, it is deemed\
    \ unlikely that\n   the use of XMPP IRIs/URIs would result in harmful dereferencing.\n\
    \   However, if an XMPP protocol extension defines methods for\n   information\
    \ retrieval, it MUST define appropriate controls over\n   access to that information.\
    \  In addition, XMPP servers SHOULD NOT\n   natively parse XMPP IRIs/URIs but\
    \ instead SHOULD accept only the XML\n   wire protocol specified in [XMPP-CORE]\
    \ and any desired extensions\n   thereto.\n"
- title: 5.4.  Sensitive Information
  contents:
  - "5.4.  Sensitive Information\n   The ability to interact with XMPP entities via\
    \ a web browser or other\n   non-native application may expose sensitive information\
    \ (such as\n   support for particular XMPP application protocol extensions) and\n\
    \   thereby make it possible to launch attacks that are not possible or\n   that\
    \ are unlikely on a native XMPP network.  Due care must be taken\n   in deciding\
    \ what information is appropriate for representation in\n   XMPP IRIs or URIs.\n\
    \   In particular, advertising XMPP IRIs/URIs in publicly accessible\n   locations\
    \ (e.g., on websites) may make it easier for malicious users\n   to harvest XMPP\
    \ addresses from the authority and path components of\n   XMPP IRIs/URIs and therefore\
    \ to send unsolicited bulk communications\n   to the users or applications represented\
    \ by those addresses.  Due\n   care should be taken in balancing the benefits\
    \ of open information\n   exchange against the potential costs of unwanted communications.\n\
    \   To help prevent leaking of sensitive information, passwords and other\n  \
    \ user credentials are forbidden in the authority component of XMPP\n   IRIs/URIs;\
    \ in fact they are not needed, since the fact that\n   authentication in XMPP\
    \ occurs via the Simple Authentication and\n   Security Layer [SASL] makes it\
    \ possible to use the SASL ANONYMOUS\n   mechanism, if desired.\n"
- title: 5.5.  Semantic Attacks
  contents:
  - "5.5.  Semantic Attacks\n   Despite the existence of non-hierarchical URI schemes\
    \ such as\n   [MAILTO], by association human users may expect all URIs to include\n\
    \   the \"//\" characters after the scheme name and \":\" character.\n   However,\
    \ in XMPP IRIs/URIs, the \"//\" characters precede the authority\n   component\
    \ rather than the path component.  Thus,\n   xmpp://guest@example.com indicates\
    \ to authenticate as\n   \"guest@example.com\", whereas xmpp:guest@example.com\
    \ identifies the\n   node \"guest@example.com\".  Processing applications MUST\
    \ clearly\n   differentiate between these forms, and user agents SHOULD discourage\n\
    \   human users from including the \"//\" characters in XMPP IRIs/URIs\n   since\
    \ use of the authority component is envisioned to be helpful only\n   in specialized\
    \ scenarios, not more generally.\n"
- title: 5.6.  Spoofing
  contents:
  - "5.6.  Spoofing\n   The ability to include effectively the full range of Unicode\n\
    \   characters in an XMPP IRI may make it easier to execute certain forms\n  \
    \ of address mimicking (also called \"spoofing\").  However, XMPP IRIs\n   are\
    \ no different from other IRIs in this regard, and applications\n   that will\
    \ present XMPP IRIs to human users must adhere to best\n   practices regarding\
    \ address mimicking in order to help prevent\n   attacks that result from spoofed\
    \ addresses (e.g., the phenomenon\n   known as \"phishing\").  For details, refer\
    \ to the Security\n   Considerations of [IRI].\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks to Martin Duerst, Lisa Dusseault, Frank Ellerman,\
    \ Roy\n   Fielding, Joe Hildebrand, and Ralph Meijer for their comments.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [ABNF]         Crocker, D. and P. Overell, \"\
    Augmented BNF for Syntax\n                  Specifications: ABNF\", STD 68, RFC\
    \ 5234, January 2007.\n   [IRI]          Duerst, M. and M. Suignard, \"Internationalized\n\
    \                  Resource Identifiers (IRIs)\", RFC 3987, January 2005.\n  \
    \ [TERMS]        Bradner, S., \"Key words for use in RFCs to Indicate\n      \
    \            Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [URI]   \
    \       Berners-Lee, T., Fielding, R., and L. Masinter,\n                  \"\
    Uniform Resource Identifier (URI): Generic Syntax\",\n                  STD 66,\
    \ RFC 3986, January 2005.\n   [XMPP-CORE]    Saint-Andre, P., \"Extensible Messaging\
    \ and Presence\n                  Protocol (XMPP): Core\", RFC 3920, October 2004.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CPIM]         Peterson, J., \"Common Profile\
    \ for Instant Messaging\n                  (CPIM)\", RFC 3860, August 2004.\n\
    \   [CPP]          Peterson, J., \"Common Profile for Presence (CPP)\",\n    \
    \              RFC 3859, August 2004.\n   [DNS-SRV]      Gulbrandsen, A., Vixie,\
    \ P., and L. Esibov, \"A DNS RR\n                  for specifying the location\
    \ of services (DNS SRV)\",\n                  RFC 2782, February 2000.\n   [HTML]\
    \         Raggett, D., \"HTML 4.0 Specification\", W3C REC REC-\n            \
    \      html40-19980424, April 1998.\n   [HTTP-AUTH]    Franks, J., Hallam-Baker,\
    \ P., Hostetler, J., Lawrence,\n                  S., Leach, P., Luotonen, A.,\
    \ and L. Stewart, \"HTTP\n                  Authentication: Basic and Digest Access\n\
    \                  Authentication\", RFC 2617, June 1999.\n   [IDNA]         Faltstrom,\
    \ P., Hoffman, P., and A. Costello,\n                  \"Internationalizing Domain\
    \ Names in Applications\n                  (IDNA)\", RFC 3490, March 2003.\n \
    \  [MAILTO]       Hoffman, P., Masinter, L., and J. Zawinski, \"The\n        \
    \          mailto URL scheme\", RFC 2368, July 1998.\n   [MIME]         Freed,\
    \ N. and N. Borenstein, \"Multipurpose Internet\n                  Mail Extensions\
    \ (MIME) Part Two: Media Types\",\n                  RFC 2046, November 1996.\n\
    \   [SASL]         Melnikov, A. and K. Zeilenga, \"Simple Authentication\n   \
    \               and Security Layer (SASL)\", RFC 4422, June 2006.\n   [STRINGPREP]\
    \   Hoffman, P. and M. Blanchet, \"Preparation of\n                  Internationalized\
    \ Strings (\"STRINGPREP\")\", RFC 3454,\n                  December 2002.\n  \
    \ [UNICODE]      The Unicode Consortium, \"The Unicode Standard, Version\n   \
    \               3.2.0\", 2000.\n                  The Unicode Standard, Version\
    \ 3.2.0 is defined by The\n                  Unicode Standard, Version 3.0 (Reading,\
    \ MA, Addison-\n                  Wesley, 2000.  ISBN 0-201-61633-5), as amended\
    \ by the\n                  Unicode Standard Annex #27: Unicode 3.1\n        \
    \          (http://www.unicode.org/reports/tr27/) and by the\n               \
    \   Unicode Standard Annex #28: Unicode 3.2\n                  (http://www.unicode.org/reports/tr28/).\n\
    \   [URI-SCHEMES]  Hansen, T., Hardie, T., and L. Masinter, \"Guidelines\n   \
    \               and Registration Procedures for New URI Schemes\",\n         \
    \         RFC 4395, February 2006.\n   [US-ASCII]     American National Standards\
    \ Institute, \"Coded\n                  Character Set - 7-bit American Standard\
    \ Code for\n                  Information Interchange\", ANSI X3.4, 1986.\n  \
    \ [UTF-8]        Yergeau, F., \"UTF-8, a transformation format of ISO\n      \
    \            10646\", STD 63, RFC 3629, November 2003.\n   [XEP-0009]     Adams,\
    \ D., \"Jabber-RPC\", XSF XEP 0009, February 2006.\n   [XEP-0030]     Hildebrand,\
    \ J., Millard, P., Eatmon, R., and P. Saint-\n                  Andre, \"Service\
    \ Discovery\", XSF XEP 0030,\n                  February 2007.\n   [XEP-0045]\
    \     Saint-Andre, P., \"Multi-User Chat\", XSF XEP 0045,\n                  April\
    \ 2007.\n   [XEP-0053]     Saint-Andre, P., \"XMPP Registrar Function\", XSF\n\
    \                  XEP 0053, December 2006.\n   [XEP-0060]     Millard, P., Saint-Andre,\
    \ P., and R. Meijer, \"Publish-\n                  Subscribe\", XSF XEP 0060,\
    \ September 2006.\n   [XEP-0072]     Forno, F. and P. Saint-Andre, \"SOAP Over\
    \ XMPP\", XSF\n                  XEP 0072, December 2005.\n   [XEP-0077]     Saint-Andre,\
    \ P., \"In-Band Registration\", XSF XEP 0077,\n                  January 2006.\n\
    \   [XEP-0147]     Saint-Andre, P., \"XMPP URI Scheme Query Components\",\n  \
    \                XSF XEP 0147, September 2006.\n   [XMPP-IM]      Saint-Andre,\
    \ P., \"Extensible Messaging and Presence\n                  Protocol (XMPP):\
    \ Instant Messaging and Presence\",\n                  RFC 3921, October 2004.\n"
- title: Appendix A.  Differences from RFC 4622
  contents:
  - "Appendix A.  Differences from RFC 4622\n   Several errors were found in RFC 4622.\
    \  This document corrects those\n   errors.  The resulting differences from RFC\
    \ 4622 are as follows:\n   o  Specified that the characters \"[\", \"\\\", \"\
    ]\", \"^\", \"`\", \"{\", \"|\",\n      and \"}\" are allowed in XMPP node identifiers\
    \ but not allowed in\n      IRIs or URIs according to the sub-delims rule.\n \
    \  o  Specified that the characters '\"', \"<\", \">\", \"[\", \"\\\", \"]\",\
    \ \"^\",\n      \"`\", \"{\", \"|\", and \"}\" are allowed in XMPP resource identifiers\n\
    \      but not allowed in IRIs or URIs according to the pchar rule.\n   o  Specified\
    \ that the foregoing characters must be percent-encoded\n      when constructing\
    \ an XMPP URI.\n   o  Corrected the ABNF accordingly.\n   o  Updated the examples\
    \ accordingly.\n"
- title: Appendix B.  Copying Conditions
  contents:
  - "Appendix B.  Copying Conditions\n   Regarding this entire document or any portion\
    \ of it, the author makes\n   no guarantees and is not responsible for any damage\
    \ resulting from\n   its use.  The author grants irrevocable permission to anyone\
    \ to use,\n   modify, and distribute it in any way that does not diminish the\n\
    \   rights of anyone else to use, modify, and distribute it, provided\n   that\
    \ redistributed derivative works do not contain misleading author\n   or version\
    \ information.  Derivative works need not be licensed under\n   similar terms.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Peter Saint-Andre\n   XMPP Standards Foundation\n   EMail:\
    \ stpeter@jabber.org\n   URI:   xmpp:stpeter@jabber.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
