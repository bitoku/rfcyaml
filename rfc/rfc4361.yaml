- title: __initial_text__
  contents:
  - "                  Node-specific Client Identifiers for\n       Dynamic Host Configuration\
    \ Protocol Version Four (DHCPv4)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the format that is to be used for encoding\n\
    \   Dynamic Host Configuration Protocol Version Four (DHCPv4) client\n   identifiers,\
    \ so that those identifiers will be interchangeable with\n   identifiers used\
    \ in the DHCPv6 protocol.  This document also\n   addresses and corrects some\
    \ problems in RFC 2131 and RFC 2132 with\n   respect to the handling of DHCP client\
    \ identifiers.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................2\n  \
    \ 3. Applicability ...................................................2\n   4.\
    \ Problem Statement ...............................................3\n      4.1.\
    \ Client identities are ephemeral. ...........................3\n      4.2. Clients\
    \ can accidentally present multiple identities. ......3\n      4.3. RFC 2131/2132\
    \ and RFC 3315 identifiers are incompatible. ...4\n      4.4. RFC 2131 does not\
    \ require the use of a client identifier. ..4\n   5. Requirements ....................................................4\n\
    \   6. Implementation ..................................................6\n  \
    \    6.1. DHCPv4 Client Behavior .....................................6\n    \
    \  6.2. DHCPv6 Client Behavior .....................................7\n      6.3.\
    \ DHCPv4 Server Behavior .....................................7\n      6.4. Changes\
    \ from RFC 2131 ......................................8\n      6.5. Changes from\
    \ RFC 2132 ......................................9\n   7. Notes on DHCP Clients\
    \ in Multi-stage Network Booting ............9\n   8. Security Considerations\
    \ ........................................10\n   9. References .....................................................10\n\
    \      9.1. Normative References ......................................10\n  \
    \    9.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies the way in which Dynamic Host Configuration\n\
    \   Protocol Version 4 [RFC2131] clients should identify themselves.\n   DHCPv4\
    \ client implementations that conform to this specification use\n   a DHCP Unique\
    \ Identifier (DUID) as specified in Dynamic Host\n   Configuration Protocol for\
    \ IPv6 (DHCPv6) [RFC3315].  The DUID is\n   encapsulated in a DHCPv4 client identifier\
    \ option, as described in\n   \"DHCP Options and BOOTP Vendor Extensions\" [RFC2132].\
    \  The behaviour\n   described here supersedes the behavior specified in RFC2131\
    \ and\n   RFC2132.\n   The reason for making this change is that as we make the\
    \ transition\n   from IPv4 to IPv6, there will be network devices that must use\
    \ both\n   DHCPv4 and DHCPv6.  Users of these devices will have a smoother\n \
    \  network experience if the devices identify themselves consistently,\n   regardless\
    \ of the version of DHCP they are using at any given moment.\n   Most obviously,\
    \ DNS updates made by the DHCP server on behalf of the\n   client will be handled\
    \ more correctly.  This change also addresses\n   certain limitations in the functioning\
    \ of RFC 2131/2132-style DHCP\n   client identifiers.\n   This document first\
    \ describes the problem to be solved.  It then\n   states the new technique that\
    \ is to be used to solve the problem.\n   Finally, it describes the specific changes\
    \ that one would have to\n   make to RFC 2131 and RFC 2132 in order for those\
    \ documents not to\n   contradict what is described in this document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [RFC2119].\n"
- title: 3.  Applicability
  contents:
  - "3.  Applicability\n   This document updates RFC 2131 and RFC 2132.  This document\
    \ also\n   specifies behavior that is required of DHCPv4 and DHCPv6 clients that\n\
    \   are intended to operate in a dual-stack configuration.  Finally, this\n  \
    \ document recommends behavior for host configurations where more than\n   one\
    \ DHCP client must operate in sequence in order to fully configure\n   the client\
    \ (e.g., a network boot loader and the operating system it\n   loads).\n   DHCPv4\
    \ clients and servers that are implemented according to this\n   document should\
    \ be implemented as if the changes specified in\n   sections 6.3 and 6.4 have\
    \ been made to RFC 2131 and RFC 2132.  DHCPv4\n   clients should, in addition,\
    \ follow the behavior specified in section\n   6.1.  DHCPv6 clients should follow\
    \ the behavior specified in section\n   6.2.  DHCPv4 servers should additionally\
    \ follow the behavior\n   specified in section 6.3.\n"
- title: 4.  Problem Statement
  contents:
  - '4.  Problem Statement

    '
- title: 4.1.  Client identities are ephemeral.
  contents:
  - "4.1.  Client identities are ephemeral.\n   RFC 2132 recommends that client identifiers\
    \ be generated by using the\n   permanent link-layer address of the network interface\
    \ that the client\n   is trying to configure.  One result of this recommendation\
    \ is that\n   when the network interface hardware on a client computer is replaced,\n\
    \   the identity of the client changes.  The client loses its IP address\n   and\
    \ any other resources associated with its old identifier (for\n   example, its\
    \ domain name as published through the DHCPv4 server).\n"
- title: 4.2.  Clients can accidentally present multiple identities.
  contents:
  - "4.2.  Clients can accidentally present multiple identities.\n   Consider a DHCPv4\
    \ client that has two network interfaces, one of\n   which is wired and one of\
    \ which is wireless.  The DHCPv4 client will\n   succeed in configuring either\
    \ zero, one, or two network interfaces.\n   Under the current specification, each\
    \ network interface will receive\n   a different IP address.  The DHCPv4 server\
    \ will treat each network\n   interface as a completely independent DHCPv4 client,\
    \ on a completely\n   independent host.\n   Thus, when the client presents some\
    \ information to be updated in a\n   network directory service, such as the DNS,\
    \ the name that is\n   presented will be the same on both interfaces, but the\
    \ identity that\n   is presented will be different.  What will happen is that\
    \ one of the\n   two interfaces will get the name, and will retain that name as\
    \ long\n   as it has a valid lease, even if it loses its connection to the\n \
    \  network, while the other network interface will never get the name.\n   In\
    \ some cases, this will achieve the desired result; when only one\n   network\
    \ interface is connected, sometimes its IP address will be\n   published.  In\
    \ some cases, the one connected interface's IP address\n   will not be the one\
    \ that is published.  When there are two\n   interfaces, sometimes the correct\
    \ one will be published, and\n   sometimes not.\n   This is likely to be a particular\
    \ problem with modern laptops, which\n   usually have built-in wireless ethernet\
    \ and wired ethernet.  When the\n   user is near a wired outlet, he or she may\
    \ want the additional speed\n   and privacy provided by a wired connection, but\
    \ that same user may\n   unplug from the wired network and wander around, still\
    \ connected to\n   the wireless network.  When a transition like this happens,\
    \ under the\n   current scheme, if the address of the wired interface is the one\
    \ that\n   gets published, this client will be seen by hosts attempting to\n \
    \  connect to it as if it has intermittent connectivity, even though it\n   actually\
    \ has continuous network connectivity through the wireless\n   port.\n   Another\
    \ common case of a duplicate identity being presented occurs\n   when a boot monitor\
    \ such as a Pre-Boot Execution Environment (PXE)\n   loader specifies one DHCP\
    \ client identifier, and then the operating\n   system loaded by the boot loader\
    \ specifies a different identity.\n"
- title: 4.3.  RFC 2131/2132 and RFC 3315 identifiers are incompatible.
  contents:
  - "4.3.  RFC 2131/2132 and RFC 3315 identifiers are incompatible.\n   The 'client\
    \ identifier' option is used by DHCPv4 clients and servers\n   to identify clients.\
    \  In some cases, the value of the 'client\n   identifier' option is used to mediate\
    \ access to resources (for\n   example, the client's domain name, as published\
    \ through the DHCPv4\n   server).  RFC 2132 and RFC 3315 specify different methods\
    \ for\n   deriving client identifiers.  These methods guarantee that the DHCPv4\n\
    \   and DHCPv6 identifiers will be different.  This means that mediation\n   of\
    \ access to resources using these identifiers will not work\n   correctly in cases\
    \ where a node may be configured using DHCPv4 in\n   some cases and DHCPv6 in\
    \ other cases.\n"
- title: 4.4.  RFC 2131 does not require the use of a client identifier.
  contents:
  - "4.4.  RFC 2131 does not require the use of a client identifier.\n   RFC 2131\
    \ allows the DHCPv4 server to identify clients either by using\n   the client\
    \ identifier option sent by the client or, if the client did\n   not send one,\
    \ the client's link-layer address.  Like the client\n   identifier format recommended\
    \ by RFC 2131, this suffers from the\n   problems previously described in sections\
    \ 4.2 and 4.3.\n"
- title: 5.  Requirements
  contents:
  - "5.  Requirements\n   In order to address the problems stated in section 4, DHCPv4\
    \ client\n   identifiers must have the following characteristics:\n   - They must\
    \ be persistent, in the sense that a particular host's\n     client identifier\
    \ must not change simply because a piece of network\n     hardware is added or\
    \ removed.\n   - It must be possible for the client to represent itself as having\n\
    \     more than one network identity, for example, so that a client with\n   \
    \  two network interfaces can express to the DHCPv4 server that these\n     two\
    \ network interfaces are to receive different IP addresses, even\n     if they\
    \ happen to be connected to the same link.\n   - In cases where the DHCPv4 client\
    \ is expressing more than one\n     network identity at the same time, it must\
    \ nevertheless be possible\n     for the DHCPv4 server to determine that the two\
    \ network identities\n     belong to the same host.\n   - In some cases it may\
    \ be desirable for a DHCP client to present the\n     same identity on two interfaces,\
    \ so that if they both happen to be\n     connected to the same network, they\
    \ will both receive the same IP\n     address.  In such cases, it must be possible\
    \ for the client to use\n     exactly the same identifier for each interface.\n\
    \   - DHCPv4 servers that do not conform to this specification, but that\n   \
    \  are compliant with the older client identifier specification, must\n     correctly\
    \ handle client identifiers sent by clients that conform to\n     this specification.\n\
    \   - DHCPv4 servers that do conform to this specification must\n     interoperate\
    \ correctly with DHCPv4 clients that do not conform to\n     this specification,\
    \ except that when configuring such clients,\n     behaviors such as those described\
    \ in section 2 may occur.\n   - The use by DHCPv4 clients of the chaddr field\
    \ of the DHCPv4 packet\n     as an identifier must be deprecated.\n   - DHCPv4\
    \ client identifiers used by dual-stack hosts that also use\n     DHCPv6 must\
    \ use the same host identification string for both DHCPv4\n     and DHCPv6.  For\
    \ example, a DHCPv4 server that uses the client's\n     identity to update the\
    \ DNS on behalf of a DHCPv4 client must\n     register the same client identity\
    \ in the DNS that would be\n     registered by the DHCPv6 server on behalf of\
    \ the DHCPv6 client\n     running on that host, and vice versa.\n   In order to\
    \ satisfy all but the last of these requirements, we need\n   to construct a DHCPv4\
    \ client identifier out of two parts.  One part\n   must be unique to the host\
    \ on which the client is running.  The other\n   must be unique to the network\
    \ identity being presented.  The DHCP\n   Unique Identifier (DUID) and Identity\
    \ Association Identifier (IAID)\n   specified in RFC 3315 satisfy these requirements.\n\
    \   In order to satisfy the last requirement, we must use the DUID to\n   identify\
    \ the DHCPv4 client.  So, taking all the requirements\n   together, the DUID and\
    \ IAID described in RFC 3315 are the only\n   possible solution.\n   By following\
    \ these rules, a compliant DHCPv4 client will interoperate\n   correctly with\
    \ both compliant and non-compliant DHCPv4 servers.  A\n   non-compliant DHCPv4\
    \ client will also interoperate correctly with a\n   compliant DHCPv4 server.\
    \  If either server or client is not\n   compliant, the goals stated in the document\
    \ are not met, but there is\n   no loss of functionality.\n"
- title: 6.  Implementation
  contents:
  - "6.  Implementation\n   Here we specify changes to the behavior of DHCPv4 clients\
    \ and\n   servers.  We also specify changes to the wording in RFC 2131 and RFC\n\
    \   2132.  DHCPv4 clients, servers, and relay agents that conform to this\n  \
    \ specification must implement RFC 2131 and RFC 2132 with the wording\n   changes\
    \ specified in sections 6.3 and 6.4.\n"
- title: 6.1.  DHCPv4 Client Behavior
  contents:
  - "6.1.  DHCPv4 Client Behavior\n   DHCPv4 clients conforming to this specification\
    \ MUST use stable\n   DHCPv4 node identifiers in the dhcp-client-identifier option.\
    \  DHCPv4\n   clients MUST NOT use client identifiers based solely on layer two\n\
    \   addresses that are hard-wired to the layer two device (e.g., the\n   ethernet\
    \ MAC address) as suggested in RFC 2131, except as allowed in\n   section 9.2\
    \ of RFC 3315.  DHCPv4 clients MUST send a 'client\n   identifier' option containing\
    \ an Identity Association Unique\n   Identifier, as defined in section 10 of RFC\
    \ 3315, and a DHCP Unique\n   Identifier, as defined in section 9 of RFC 3315.\
    \  These together\n   constitute an RFC 3315-style binding identifier.\n   The\
    \ general format of the DHCPv4 'client identifier' option is\n   defined in section\
    \ 9.14 of RFC 2132.\n   To send an RFC 3315-style binding identifier in a DHCPv4\
    \ 'client\n   identifier' option, the type of the 'client identifier' option is\
    \ set\n   to 255.  The type field is immediately followed by the IAID, which is\n\
    \   an opaque 32-bit quantity.  The IAID is immediately followed by the\n   DUID,\
    \ which consumes the remaining contents of the 'client\n   identifier' option.\
    \  The format of the 'client identifier' option is\n   as follows:\n       Code\
    \  Len  Type  IAID                DUID\n       +----+----+-----+----+----+----+----+----+----+---\n\
    \       | 61 | n  | 255 | i1 | i2 | i3 | i4 | d1 | d2 |...\n       +----+----+-----+----+----+----+----+----+----+---\n\
    \   Any DHCPv4 client that conforms to this specification SHOULD provide\n   a\
    \ means by which an operator can learn what DUID the client has\n   chosen.  Such\
    \ clients SHOULD also provide a means by which the\n   operator can configure\
    \ the DUID.  A device that is normally\n   configured by both a DHCPv4 and DHCPv6\
    \ client SHOULD automatically\n   use the same DUID for DHCPv4 and DHCPv6 without\
    \ any operator\n   intervention.\n   DHCPv4 clients that support more than one\
    \ network interface SHOULD\n   use the same DUID on every interface.  DHCPv4 clients\
    \ that support\n   more than one network interface SHOULD use a different IAID\
    \ on each\n   interface.\n   A DHCPv4 client that generates a DUID and that has\
    \ stable storage\n   MUST retain this DUID for use in subsequent DHCPv4 messages,\
    \ even\n   after an operating system reboot.\n"
- title: 6.2.  DHCPv6 Client Behavior
  contents:
  - "6.2.  DHCPv6 Client Behavior\n   Any DHCPv6 client that conforms to this specification\
    \ SHOULD provide\n   a means by which an operator can learn what DUID the client\
    \ has\n   chosen.  Such clients SHOULD also provide a means by which the\n   operator\
    \ can configure the DUID.  A device that is normally\n   configured by both a\
    \ DHCPv4 and DHCPv6 client SHOULD automatically\n   use the same DUID for DHCPv4\
    \ and DHCPv6 without any operator\n   intervention.\n"
- title: 6.3.  DHCPv4 Server Behavior
  contents:
  - "6.3.  DHCPv4 Server Behavior\n   This document does not require any change to\
    \ DHCPv4 or DHCPv6 servers\n   that follow RFC 2131 and RFC 2132.  However, some\
    \ DHCPv4 servers can\n   be configured not to conform to RFC 2131 and RFC 2132,\
    \ in the sense\n   that they ignore the 'client identifier' option and use the\
    \ client's\n   hardware address instead.\n   DHCPv4 servers that conform to this\
    \ specification MUST use the\n   'client identifier' option to identify the client\
    \ if the client sends\n   it.\n   DHCPv4 servers MAY use administrator-supplied\
    \ values for chaddr and\n   htype to identify the client in the case where the\
    \ administrator is\n   assigning a fixed IP address to the client, even if the\
    \ client sends\n   a client identifier option.  This is ONLY permitted in the\
    \ case where\n   the DHCPv4 server administrator has provided the values for chaddr\n\
    \   and htype, because in this case if it causes a problem, the\n   administrator\
    \ can correct the problem by removing the offending\n   configuration information.\n"
- title: 6.4.  Changes from RFC 2131
  contents:
  - "6.4.  Changes from RFC 2131\n   In section 2 of RFC 2131, on page 9, the text\
    \ that reads \"; for\n   example, the 'client identifier' may contain a hardware\
    \ address,\n   identical to the contents of the 'chaddr' field, or it may contain\n\
    \   another type of identifier, such as a DNS name\" is deleted.\n   In section\
    \ 4.2 of RFC 2131, the text \"The client MAY choose to\n   explicitly provide\
    \ the identifier through the 'client identifier'\n   option.  If the client supplies\
    \ a 'client identifier', the client\n   MUST use the same 'client identifier'\
    \ in all subsequent messages, and\n   the server MUST use that identifier to identify\
    \ the client.  If the\n   client does not provide a 'client identifier' option,\
    \ the server MUST\n   use the contents of the 'chaddr' field to identify the client.\"\
    \ is\n   replaced by the text \"The client MUST explicitly provide a client\n\
    \   identifier through the 'client identifier' option.  The client MUST\n   use\
    \ the same 'client identifier' option for all messages.\"\n   In the same section,\
    \ the text \"Use of 'chaddr' as the client's unique\n   identifier may cause unexpected\
    \ results, as that identifier may be\n   associated with a hardware interface\
    \ that could be moved to a new\n   client.  Some sites may choose to use a manufacturer's\
    \ serial number\n   as the 'client identifier', to avoid unexpected changes in\
    \ a client's\n   network address due to transfer of hardware interfaces among\n\
    \   computers.  Sites may also choose to use a DNS name as the 'client\n   identifier',\
    \ causing address leases to be associated with the DNS\n   name rather than a\
    \ specific hardware box.\" is replaced by the text\n   \"The DHCP client MUST\
    \ NOT rely on the 'chaddr' field to identify it.\"\n   In section 4.4.1 of RFC\
    \ 2131, the text \"The client MAY include a\n   different unique identifier\"\
    \ is replaced with \"The client MUST\n   include a unique identifier\".\n   In\
    \ section 3.1, items 4 and 6; section 3.2 item 3 and 4; and section\n   4.3.1,\
    \ where RFC 2131 says that 'chaddr' may be used instead of the\n   'client identifier'\
    \ option, the text \"or 'chaddr'\" and \"'chaddr' or\"\n   is deleted.\n   Note\
    \ that these changes do not relieve the DHCPv4 server of the\n   obligation to\
    \ use 'chaddr' as an identifier if the client does not\n   send a 'client identifier'\
    \ option.  Rather, they oblige clients that\n   conform with this document to\
    \ send a 'client identifier' option, and\n   not rely on 'chaddr' for identification.\
    \  DHCPv4 servers MUST use\n   'chaddr' as an identifier in cases where 'client\
    \ identifier' is not\n   sent, in order to support old clients that do not conform\
    \ with this\n   document.\n"
- title: 6.5.  Changes from RFC 2132
  contents:
  - "6.5.  Changes from RFC 2132\n   The text in section 9.14, beginning with \"The\
    \ client identifier MAY\n   consist of\" through \"that meet this requirement\
    \ for uniqueness.\" is\n   replaced with \"the client identifier consists of a\
    \ type field whose\n   value is normally 255, followed by a four-byte IA_ID field,\
    \ followed\n   by the DUID for the client as defined in RFC 3315, section 9.\"\
    \  The\n   text \"its minimum length is 2\" in the following paragraph is deleted.\n"
- title: 7.  Notes on DHCP Clients in Multi-stage Network Booting
  contents:
  - "7.  Notes on DHCP Clients in Multi-stage Network Booting\n   In some cases a\
    \ single device may actually run more than one DHCP\n   client in sequence, in\
    \ the process of loading an operating system\n   over the network.  In such cases,\
    \ it may be that the first-stage boot\n   uses a different client identifier,\
    \ or no client identifier, than the\n   subsequent stage or stages.\n   The effect\
    \ of this, under the DHCPv4 protocol, is that the two (in\n   some cases more\
    \ than two!) boot stages will present different\n   identities.  A DHCPv4 server\
    \ will therefore allocate two different IP\n   addresses to the two different\
    \ boot stages.\n   Some DHCP servers work around this problem for the common case\
    \ where\n   the boot Programmable Read Only Memory (PROM) presents no client\n\
    \   identifier, and the operating system DHCP client presents a client\n   identifier\
    \ constructed from the Message Authentication Code (MAC)\n   address of the network\
    \ interface -- both are treated as the same\n   identifier.  This prevents the\
    \ consumption of an extra IP address.\n   A compliant DHCPv4 client does not use\
    \ a client identifier\n   constructed from the MAC address of the network interface,\
    \ because\n   network interfaces are not stable.  So a compliant DHCPv4 client\n\
    \   cannot be supported by a simple hack like the one described\n   previously;\
    \ this may have some significant impact at some sites.\n   We cannot state the\
    \ solution to this problem as a set of\n   requirements, because the circumstances\
    \ in which this occurs vary too\n   widely.  However, we can make some suggestions.\n\
    \   First, we suggest that DHCP clients in network boot loaders request\n   short\
    \ lease times, so that their IP addresses are not retained.  Such\n   clients\
    \ should send a DHCPRELEASE message to the DHCP server before\n   moving on to\
    \ the next stage of the boot process.  Such clients should\n   provide a way for\
    \ the operating system DHCP client to configure a\n   DUID to use in subsequent\
    \ boots.  DHCP clients in the final stage\n   should, where possible, configure\
    \ the DUID used by the boot PROM to\n   be the same as the DUID used by the operating\
    \ system.\n   Second, implementors of DHCPv4 clients that are expected to only\
    \ be\n   used in a multi-stage network boot configuration, that are not\n   expected\
    \ ever to network boot using DHCPv6, and that have a MAC\n   address that cannot\
    \ be easily changed may not need to implement the\n   changes described in this\
    \ specification.  There is some danger in\n   making this assumption--the first\
    \ solution suggested is definitely\n   better.  A compromise might be to have\
    \ the final-stage DHCP client\n   detect whether it is running on legacy hardware;\
    \ if it is, it uses\n   the old identifier; if it is not, it follows the scheme\
    \ described in\n   the previous paragraph.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document raises no new security issues.\
    \  Potential exposure to\n   attack in the DHCPv4 protocol is discussed in section\
    \ 7 of the DHCP\n   protocol specification [RFC2131] and in Authentication for\
    \ DHCP\n   messages [RFC3118].  Potential exposure to attack in the DHCPv6\n \
    \  protocol is discussed in section 23 of RFC 3315.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2131] Droms, R., \"Dynamic Host Configuration Protocol\", RFC\
    \ 2131,\n             March 1997.\n   [RFC2132] Alexander, S. and R. Droms, \"\
    DHCP Options and BOOTP Vendor\n             Extensions\", RFC 2132, March 1997.\n\
    \   [RFC3315] Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C., and\n  \
    \           M. Carney, \"Dynamic Host Configuration Protocol for IPv6\n      \
    \       (DHCPv6)\", RFC 3315, July 2003.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC3118] Droms, R. and W. Arbaugh, \"Authentication\
    \ for DHCP\n             Messages\", RFC 3118, June 2001.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ted Lemon\n   Nominum\n   2385 Bay Road\n   Redwood City,\
    \ CA 94063 USA\n   Phone: +1 650 381 6000\n   EMail: mellon@nominum.com\n   Bill\
    \ Sommerfeld\n   Sun Microsystems\n   1 Network Drive\n   Burlington, MA 01824\n\
    \   Phone: +1 781 442 3458\n   EMail: sommerfeld@sun.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
