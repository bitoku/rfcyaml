- title: __initial_text__
  contents:
  - ' IPv6 Subnet Model: The Relationship between Links and Subnet Prefixes

    '
- title: Abstract
  contents:
  - "Abstract\n   IPv6 specifies a model of a subnet that is different than the IPv4\n\
    \   subnet model.  The subtlety of the differences has resulted in\n   incorrect\
    \ implementations that do not interoperate.  This document\n   spells out the\
    \ most important difference: that an IPv6 address isn't\n   automatically associated\
    \ with an IPv6 on-link prefix.  This document\n   also updates (partially due\
    \ to security concerns caused by incorrect\n   implementations) a part of the\
    \ definition of \"on-link\" from RFC 4861.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5942.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Requirements Language ...........................................4\n  \
    \ 3. Host Behavior ...................................................4\n   4.\
    \ Host Rules ......................................................7\n   5. Observed\
    \ Incorrect Implementation Behavior ......................8\n   6. Updates to\
    \ RFC 4861 .............................................9\n   7. Conclusion ......................................................9\n\
    \   8. Security Considerations .........................................9\n  \
    \ 9. Contributors ....................................................9\n   10.\
    \ Acknowledgements ...............................................9\n   11. References\
    \ ....................................................10\n      11.1. Normative\
    \ References .....................................10\n      11.2. Informative\
    \ References ...................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IPv4 implementations typically associate a netmask with\
    \ an address\n   when an IPv4 address is assigned to an interface.  That netmask\n\
    \   together with the IPv4 address designates an on-link prefix.  Nodes\n   consider\
    \ addresses covered by an on-link prefix to be directly\n   attached to the same\
    \ link as the sending node, i.e., they send\n   traffic for such addresses directly\
    \ rather than to a router.  See\n   Section 3.3.1 of [RFC1122].  Prior to the\
    \ development of subnetting\n   [RFC0950] and Classless Inter-Domain Routing (CIDR)\
    \ [RFC4632], an\n   address's netmask could be derived directly from the address\
    \ simply\n   by determining whether it was a Class A, B, or C address.  Today,\n\
    \   assigning an address to an interface also requires specifying a\n   netmask\
    \ to use.  In the absence of specifying a specific netmask when\n   assigning\
    \ an address, some implementations would fall back to\n   deriving the netmask\
    \ from the class of the address.\n   The behavior of IPv6 as specified in Neighbor\
    \ Discovery (ND)\n   [RFC4861] is quite different.  The on-link determination\
    \ is separate\n   from the address assignment.  A host can have IPv6 addresses\
    \ without\n   any related on-link prefixes or can have on-link prefixes that are\n\
    \   not related to any IPv6 addresses that are assigned to the host.  Any\n  \
    \ assigned address on an interface should initially be considered as\n   having\
    \ no internal structure as shown in [RFC4291].\n   In IPv6, by default, a host\
    \ treats only the link-local prefix as\n   on-link.\n   The reception of a Prefix\
    \ Information Option (PIO) with the L-bit set\n   [RFC4861] and a non-zero valid\
    \ lifetime creates (or updates) an entry\n   in the Prefix List.  All prefixes\
    \ on a host's Prefix List (i.e.,\n   those prefixes that have not yet timed out)\
    \ are considered to be\n   on-link by that host.\n   The on-link definition in\
    \ the Terminology section of [RFC4861], as\n   modified by this document, defines\
    \ the complete list of cases in\n   which a host considers an address to be on-link.\
    \  Individual address\n   entries can be expired by the Neighbor Unreachability\
    \ Detection\n   mechanism.\n   IPv6 packets sent using the Conceptual Sending\
    \ Algorithm as described\n   in [RFC4861] only trigger address resolution for\
    \ IPv6 addresses that\n   the sender considers to be on-link.  Packets to any\
    \ other address are\n   sent to a default router.  If there is no default router,\
    \ then the\n   node should send an ICMPv6 Destination Unreachable indication as\n\
    \   specified in [RFC4861] -- more details are provided in the \"Host\n   Behavior\"\
    \ and \"Host Rules\" sections of this document.  (Note that\n   [RFC4861] changed\
    \ the behavior when the Default Router List is empty.\n   In the old version of\
    \ Neighbor Discovery [RFC2461], if the Default\n   Router List is empty, rather\
    \ than sending the ICMPv6 Destination\n   Unreachable indication, the [RFC2461]\
    \ node assumed that the\n   destination was on-link.)  Note that ND is scoped\
    \ to a single link.\n   All Neighbor Solicitation (NS) responses are assumed to\
    \ be sent out\n   the same interface on which the corresponding query was received\n\
    \   without using the Conceptual Sending Algorithm.\n   Failure of host implementations\
    \ to correctly implement the IPv6\n   subnet model can result in lack of IPv6\
    \ connectivity.  See the\n   \"Observed Incorrect Implementation Behavior\" section\
    \ for details.\n   This document deprecates the last two bullets from the definition\
    \ of\n   \"on-link\" in [RFC4861] to address security concerns arising from\n\
    \   particular ND implementations.\n   Host behavior is clarified in the \"Host\
    \ Behavior\" and \"Host Rules\"\n   sections.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Host Behavior
  contents:
  - "3.  Host Behavior\n   1.  The original Neighbor Discovery (ND) specification\
    \ [RFC4861] was\n       unclear in its usage of the term \"on-link\" in a few\
    \ places.  In\n       IPv6, an address is on-link (with respect to a specific\
    \ link), if\n       the address has been assigned to an interface attached to\
    \ that\n       link.  Any node attached to the link can send a datagram directly\n\
    \       to an on-link address without forwarding the datagram through a\n    \
    \   router.  However, in order for a node to know that a destination\n       is\
    \ on-link, it must obtain configuration information to that\n       effect.  In\
    \ IPv6, there are two main ways of maintaining\n       information about on-link\
    \ destinations.  First, a host maintains\n       a Prefix List that identifies\
    \ ranges of addresses that are to be\n       considered on-link.  Second, Redirects\
    \ can identify individual\n       destinations that are on-link; such Redirects\
    \ update the\n       Destination Cache.\n       The Prefix List is populated via\
    \ the following means:\n       *  Receipt of a valid Router Advertisement (RA)\
    \ that specifies a\n          prefix with the L-bit set.  Such a prefix is considered\n\
    \          on-link for a period specified in the Valid Lifetime and is\n     \
    \     added to the Prefix List.  (The link-local prefix is\n          effectively\
    \ considered a permanent entry on the Prefix List.)\n       *  Indication of an\
    \ on-link prefix (which may be a /128) via\n          manual configuration, or\
    \ some other yet-to-be-specified\n          configuration mechanism.\n       A\
    \ Redirect can also signal whether an address is on-link.  If a\n       host originates\
    \ a packet, but the first-hop router routes the\n       received packet back out\
    \ onto the same link, the router also\n       sends the host a Redirect.  If the\
    \ Target and Destination Address\n       of the Redirect are the same, the Target\
    \ Address is to be treated\n       as on-link as specified in Section 8 of [RFC4861].\
    \  That is, the\n       host updates its Destination Cache (but not its Prefix\
    \ List --\n       though the impact is similar).\n   2.  It should be noted that\
    \ ND does not have a way to indicate a\n       destination is \"off-link\".  Rather,\
    \ a destination is assumed to\n       be off-link, unless there is explicit information\
    \ indicating that\n       it is on-link.  Such information may later expire or\
    \ be changed,\n       in which case a destination may revert back to being considered\n\
    \       off-link, but that is different than there being an explicit\n       mechanism\
    \ for signaling that a destination is off-link.  Redirect\n       messages do\
    \ not contain sufficient information to signal that an\n       address is off-link.\
    \  Instead, Redirect messages indicate a\n       preferred next hop that is a\
    \ more appropriate choice to use than\n       the originator of the Redirect.\n\
    \   3.  IPv6 also defines the term \"neighbor\" to refer to nodes attached\n \
    \      to the same link and that can send packets directly to each\n       other.\
    \  Received ND packets that pass the required validation\n       tests can only\
    \ come from a neighbor attached to the link on which\n       the ND packet was\
    \ received.  Unfortunately, [RFC4861] is\n       imprecise in its definition of\
    \ \"on-link\" and states that a node\n       considers an address to be on-link\
    \ if:\n       *  a Neighbor Advertisement (NA) message is received for the\n \
    \         (target) address, or\n       *  any Neighbor Discovery message is received\
    \ from the address.\n       Neither of these tests are acceptable definitions\
    \ for an address\n       to be considered as on-link as defined above, and this\
    \ document\n       deprecates and removes both of them from the formal definition\
    \ of\n       \"on-link\".  Neither of these tests should be used as\n       justification\
    \ for modifying the Prefix List or Destination Cache\n       for an address.\n\
    \       The conceptual sending algorithm of [RFC4861] defines a Prefix\n     \
    \  List, Destination Cache, and Default Router List.  The\n       combination\
    \ of Prefix List, Destination Cache, and Default Router\n       List form what\
    \ many implementations consider to be the IP data\n       forwarding table for\
    \ a host.  Note that the Neighbor Cache is a\n       separate data structure referenced\
    \ by the Destination Cache, but\n       entries in the Neighbor Cache are not\
    \ necessarily in the\n       Destination Cache.  It is quite possible (and intentional)\
    \ that\n       entries be added to the Neighbor Cache for addresses that would\n\
    \       not be considered on-link as defined above.  For example, upon\n     \
    \  receipt of a valid NS, Section 7.2.3 of [RFC4861] states:\n          If an\
    \ entry does not already exist, the node SHOULD create a\n          new one and\
    \ set its reachability state to STALE as specified\n          in Section 7.3.3.\
    \  If an entry already exists, and the cached\n          link-layer address differs\
    \ from the one in the received Source\n          Link-Layer option, the cached\
    \ address should be replaced by\n          the received address, and the entry's\
    \ reachability state MUST\n          be set to STALE.\n       The intention of\
    \ the above feature is to add an address to the\n       Neighbor Cache, even though\
    \ it might not be considered on-link\n       per the Prefix List.  The benefit\
    \ of such a step is to have the\n       receiver populate the Neighbor Cache with\
    \ an address it will\n       almost certainly be sending packets to shortly, thus\
    \ avoiding the\n       need for an additional round of ND to perform address resolution.\n\
    \       But because there is no validation of the address being added to\n   \
    \    the Neighbor Cache, an intruder could spoof the address and cause\n     \
    \  a receiver to add an address for a remote site to its Neighbor\n       Cache.\
    \  This vulnerability is a specific instance of the broad\n       set of attacks\
    \ that are possible by an on-link neighbor\n       [RFC3756].  This causes no\
    \ problems in practice, so long as the\n       entry only exists in the Neighbor\
    \ Cache and the address is not\n       considered to be on-link by the IP forwarding\
    \ code (i.e., the\n       address is not added to the Prefix List and is not marked\
    \ as\n       on-link in the Destination Cache).\n   4.  After the update to the\
    \ on-link definition in [RFC4861], certain\n       text from Section 7.2.3 of\
    \ [RFC4861] may appear, upon a cursory\n       examination, to be inconsistent\
    \ with the updated definition of\n       \"on-link\" because the text does not\
    \ ensure that the source\n       address is already deemed on-link through other\
    \ methods:\n          If the Source Address is not the unspecified address and,\
    \ on\n          link layers that have addresses, the solicitation includes a\n\
    \          Source Link-Layer Address option, then the recipient SHOULD\n     \
    \     create or update the Neighbor Cache entry for the IP Source\n          Address\
    \ of the solicitation.\n       Similarly, the following text from Section 6.2.6\
    \ of [RFC4861] may\n       also seem inconsistent:\n          If there is no existing\
    \ Neighbor Cache entry for the\n          solicitation's sender, the router creates\
    \ one, installs the\n          link-layer address and sets its reachability state\
    \ to STALE as\n          specified in Section 7.3.3.\n       However, the text\
    \ in the aforementioned sections of [RFC4861],\n       upon closer inspection,\
    \ is actually consistent with the\n       deprecation of the last two bullets\
    \ of the on-link definition\n       because there are two different ways in which\
    \ on-link\n       determination can affect the state of ND: through updating the\n\
    \       Prefix List or updating the Destination Cache.  Through\n       deprecating\
    \ the last two bullets of the on-link definition, the\n       Prefix List is explicitly\
    \ not to be changed when a node receives\n       an NS, NA, or Router Solicitation\
    \ (RS).  The Neighbor Cache can\n       still be updated through receipt of an\
    \ NS, NA, or RS.\n   5.  [RFC4861] is written from the perspective of a host with\
    \ a single\n       interface on which Neighbor Discovery is run.  All ND traffic\n\
    \       (whether sent or received) traverses the single interface.  On\n     \
    \  hosts with multiple interfaces, care must be taken to ensure that\n       the\
    \ scope of ND processing from one link stays local to that\n       link.  That\
    \ is, when responding to an NS, the NA would be sent\n       out on the same link\
    \ on which it was received.  Likewise, a host\n       would not respond to a received\
    \ NS for an address only assigned\n       to an interface on a different link.\
    \  Although implementations\n       may choose to implement Neighbor Discovery\
    \ using a single data\n       structure that merges the Neighbor Caches of all\
    \ interfaces, an\n       implementation's behavior must be consistent with the\
    \ above\n       model.\n"
- title: 4.  Host Rules
  contents:
  - "4.  Host Rules\n   A correctly implemented IPv6 host MUST adhere to the following\
    \ rules:\n   1.  The assignment of an IPv6 address -- whether through IPv6\n \
    \      stateless address autoconfiguration [RFC4862], DHCPv6 [RFC3315],\n    \
    \   or manual configuration -- MUST NOT implicitly cause a prefix\n       derived\
    \ from that address to be treated as on-link and added to\n       the Prefix List.\
    \  A host considers a prefix to be on-link only\n       through explicit means,\
    \ such as those specified in the on-link\n       definition in the Terminology\
    \ section of [RFC4861] (as modified\n       by this document) or via manual configuration.\
    \  Note that the\n       requirement for manually configured addresses is not\
    \ explicitly\n       mentioned in [RFC4861].\n   2.  In the absence of other sources\
    \ of on-link information, including\n       Redirects, if the RA advertises a\
    \ prefix with the on-link (L) bit\n       set and later the Valid Lifetime expires,\
    \ the host MUST then\n       consider addresses of the prefix to be off-link,\
    \ as specified by\n       the PIO paragraph of Section 6.3.4 of [RFC4861].\n \
    \  3.  In the absence of other sources of on-link information, including\n   \
    \    Redirects, if the RA advertises a prefix with the on-link (L) bit\n     \
    \  set and later the Valid Lifetime expires, the host MUST then\n       update\
    \ its Prefix List with respect to the entry.  In most cases,\n       this will\
    \ result in the addresses covered by the prefix\n       defaulting back to being\
    \ considered off-link, as specified by the\n       PIO paragraph of Section 6.3.4\
    \ of [RFC4861].  However, there are\n       cases where an address could be covered\
    \ by multiple entries in\n       the Prefix List, where expiration of one prefix\
    \ would result in\n       destinations then being covered by a different entry.\n\
    \   4.  Implementations compliant with [RFC4861] MUST adhere to the\n       following\
    \ rules.  If the Default Router List is empty and there\n       is no other source\
    \ of on-link information about any address or\n       prefix:\n       a.  The\
    \ host MUST NOT assume that all destinations are on-link.\n       b.  The host\
    \ MUST NOT perform address resolution for non-link-\n           local addresses.\n\
    \       c.  Since the host cannot assume the destination is on-link, and\n   \
    \        off-link traffic cannot be sent to a default router (since\n        \
    \   the Default Router List is empty), address resolution cannot\n           be\
    \ performed.  This case is specified in the last paragraph\n           of Section\
    \ 4 of [RFC4943]: when there is no route to the\n           destination, the host\
    \ should send an ICMPv6 Destination\n           Unreachable indication (for example,\
    \ a locally delivered\n           error message) as specified in the Terminology\
    \ section of\n           [RFC4861].\n       On-link information concerning particular\
    \ addresses and prefixes\n       can make those specific addresses and prefixes\
    \ on-link, but does\n       not change the default behavior mentioned above for\
    \ addresses and\n       prefixes not specified.  [RFC4943] provides justification\
    \ for\n       these rules.\n"
- title: 5.  Observed Incorrect Implementation Behavior
  contents:
  - "5.  Observed Incorrect Implementation Behavior\n   One incorrect implementation\
    \ behavior illustrates the severe\n   consequences when the IPv6 subnet model\
    \ is not understood by the\n   implementers of several popular host operating\
    \ systems.  In an access\n   concentrator network ([RFC4388]), a host receives\
    \ a Router\n   Advertisement message with no on-link prefix advertised.  An address\n\
    \   could be acquired through the DHCPv6 identity association for non-\n   temporary\
    \ addresses (IA_NA) option from [RFC3315] (which does not\n   include a prefix\
    \ length), or through manual configuration (if no\n   prefix length is specified).\
    \  The host incorrectly assumes an\n   invented prefix is on-link.  This invented\
    \ prefix typically is a /64\n   that was written by the developer of the operating\
    \ system network\n   module API to any IPv6 application as a \"default\" prefix\
    \ length when\n   a length isn't specified.  This may cause the API to seem to\
    \ work in\n   the case of a network interface initiating stateless address\n \
    \  autoconfiguration (SLAAC); however, it can cause connectivity\n   problems\
    \ in Non-Broadcast Multi-Access (NBMA) networks.  Having\n   incorrectly assumed\
    \ an invented prefix, the host performs address\n   resolution when the host should\
    \ send all non-link-local traffic to a\n   default router.  Neither the router\
    \ nor any other host will respond\n   to the address resolution, preventing this\
    \ host from sending IPv6\n   traffic.\n"
- title: 6.  Updates to RFC 4861
  contents:
  - "6.  Updates to RFC 4861\n   This document deprecates the following two bullets\
    \ from the on-link\n   definition in Section 2.1 of [RFC4861]:\n   o  a Neighbor\
    \ Advertisement message is received for the (target)\n      address, or\n   o\
    \  any Neighbor Discovery message is received from the address.\n"
- title: 7.  Conclusion
  contents:
  - "7.  Conclusion\n   This document clarifies and summarizes the relationship between\
    \ links\n   and subnet prefixes described in [RFC4861].  Configuration of an IPv6\n\
    \   address does not imply the existence of corresponding on-link\n   prefixes.\
    \  One should also look at API considerations for prefix\n   length as described\
    \ in the last paragraph of Section 4.2 of\n   [RFC4903].  This document also updates\
    \ the definition of \"on-link\"\n   from [RFC4861] by deprecating the last two\
    \ bullets.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document addresses a security concern present\
    \ in [RFC4861].  As\n   a result, the last two bullets of the on-link definition\
    \ in [RFC4861]\n   have been deprecated.  US-CERT Vulnerability Note VU#472363\
    \ lists the\n   implementations affected.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   Thomas Narten contributed significant text and provided\
    \ substantial\n   guidance to the production of this document.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Thanks (in alphabetical order) to Adeel Ahmed, Jari\
    \ Arkko, Ralph\n   Droms, Alun Evans, Dave Forster, Prashanth Krishnamurthy, Suresh\n\
    \   Krishnan, Josh Littlefield, Bert Manfredi, David Miles, Madhu Sudan,\n   Jinmei\
    \ Tatuya, Dave Thaler, Bernie Volz, and Vlad Yasevich for their\n   consistent\
    \ input, ideas, and review during the production of this\n   document.  The security\
    \ problem related to an NS message that\n   provides one reason for invalidating\
    \ a part of the on-link definition\n   was found by David Miles.  Jinmei Tatuya\
    \ found the security problem\n   to also exist with an RS message.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC4861]   Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n\
    \               \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n  \
    \             September 2007.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC0950]   Mogul, J. and J. Postel, \"Internet\
    \ Standard Subnetting\n               Procedure\", STD 5, RFC 950, August 1985.\n\
    \   [RFC1122]   Braden, R., \"Requirements for Internet Hosts -\n            \
    \   Communication Layers\", STD 3, RFC 1122, October 1989.\n   [RFC2461]   Narten,\
    \ T., Nordmark, E., and W. Simpson, \"Neighbor\n               Discovery for IP\
    \ Version 6 (IPv6)\", RFC 2461,\n               December 1998.\n   [RFC3315] \
    \  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n               and\
    \ M. Carney, \"Dynamic Host Configuration Protocol for\n               IPv6 (DHCPv6)\"\
    , RFC 3315, July 2003.\n   [RFC3756]   Nikander, P., Kempf, J., and E. Nordmark,\
    \ \"IPv6 Neighbor\n               Discovery (ND) Trust Models and Threats\", RFC\
    \ 3756,\n               May 2004.\n   [RFC4291]   Hinden, R. and S. Deering, \"\
    IP Version 6 Addressing\n               Architecture\", RFC 4291, February 2006.\n\
    \   [RFC4388]   Woundy, R. and K. Kinnear, \"Dynamic Host Configuration\n    \
    \           Protocol (DHCP) Leasequery\", RFC 4388, February 2006.\n   [RFC4632]\
    \   Fuller, V. and T. Li, \"Classless Inter-domain Routing\n               (CIDR):\
    \ The Internet Address Assignment and Aggregation\n               Plan\", BCP\
    \ 122, RFC 4632, August 2006.\n   [RFC4862]   Thomson, S., Narten, T., and T.\
    \ Jinmei, \"IPv6 Stateless\n               Address Autoconfiguration\", RFC 4862,\
    \ September 2007.\n   [RFC4903]   Thaler, D., \"Multi-Link Subnet Issues\", RFC\
    \ 4903,\n               June 2007.\n   [RFC4943]   Roy, S., Durand, A., and J.\
    \ Paugh, \"IPv6 Neighbor\n               Discovery On-Link Assumption Considered\
    \ Harmful\",\n               RFC 4943, September 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hemant Singh\n   Cisco Systems, Inc.\n   1414 Massachusetts\
    \ Ave.\n   Boxborough, MA  01719\n   USA\n   Phone: +1 978 936 1622\n   EMail:\
    \ shemant@cisco.com\n   URI:   http://www.cisco.com/\n   Wes Beebee\n   Cisco\
    \ Systems, Inc.\n   1414 Massachusetts Ave.\n   Boxborough, MA  01719\n   USA\n\
    \   Phone: +1 978 936 2030\n   EMail: wbeebee@cisco.com\n   URI:   http://www.cisco.com/\n\
    \   Erik Nordmark\n   Oracle, Inc.\n   17 Network Circle\n   Menlo Park, CA 94025\n\
    \   USA\n   Phone: +1 650 786 2921\n   EMail: erik.nordmark@oracle.com\n"
