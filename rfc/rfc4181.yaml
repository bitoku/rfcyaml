- title: __initial_text__
  contents:
  - '         Guidelines for Authors and Reviewers of MIB Documents

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo provides guidelines for authors and reviewers of IETF\n\
    \   standards-track specifications containing MIB modules.  Applicable\n   portions\
    \ may be used as a basis for reviews of other MIB documents.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n           3.5.2. Documents that Require Assignments in\n\
    \           4.6.1. Usage of Data Types ................................14\n  \
    \                4.6.1.1. INTEGER, Integer32, Gauge32, and\n                 \
    \          Unsigned32 ................................14\n                  4.6.1.2.\
    \ Counter32 and Counter64 ...................16\n                  4.6.1.3. CounterBasedGauge64\
    \ .......................17\n                  4.6.1.4. OCTET STRING ..............................17\n\
    \                  4.6.1.5. OBJECT IDENTIFIER .........................18\n  \
    \                4.6.1.6. The BITS Construct ........................19\n    \
    \              4.6.1.7. IpAddress .................................19\n      \
    \            4.6.1.8. TimeTicks .................................19\n        \
    \          4.6.1.9. TruthValue ................................19\n          \
    \        4.6.1.10. Other Data Types .........................19\n           4.6.2.\
    \ DESCRIPTION and REFERENCE Clauses ..................20\n           4.6.3. DISPLAY-HINT\
    \ Clause ................................21\n           4.6.4. Conceptual Table\
    \ Definitions .......................21\n           4.6.5. OID Values Assigned\
    \ to Objects .....................23\n           4.6.6. OID Length Limitations\
    \ and Table Indexing ..........24\n      4.7. Notification Definitions ..................................24\n\
    \      4.8. Compliance Statements .....................................25\n  \
    \         4.8.1. Note Regarding These Examples and RFC 2578 .........27\n    \
    \  4.9. Revisions to MIB Modules ..................................28\n   5. Acknowledgments\
    \ ................................................31\n   6. Security Considerations\
    \ ........................................32\n   7. IANA Considerations ............................................32\n\
    \   Appendix A:  MIB Review Checklist .................................33\n  \
    \ Appendix B:  Commonly Used Textual Conventions ....................34\n   Appendix\
    \ C:  Suggested Naming Conventions .........................36\n   Appendix D:\
    \  Suggested OID Layout .................................37\n   Normative References\
    \ ..............................................38\n   Informative References\
    \ ............................................40\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Some time ago, the IESG instituted a policy of requiring\
    \ expert\n   review of IETF standards-track specifications containing MIB modules.\n\
    \   These reviews were established to ensure that such specifications\n   follow\
    \ established IETF documentation practices and that the MIB\n   modules they contain\
    \ meet certain generally accepted standards of\n   quality, including (but not\
    \ limited to) compliance with all syntactic\n   and semantic requirements of SMIv2\
    \ (STD 58) [RFC2578] [RFC2579]\n   [RFC2580] that are applicable to \"standard\"\
    \ MIB modules.  The purpose\n   of this memo is to document the guidelines that\
    \ are followed in such\n   reviews.\n   Please note that the guidelines in this\
    \ memo are not intended to\n   alter requirements or prohibitions (in the sense\
    \ of \"MUST\", \"MUST\n   NOT\", \"SHALL\", or \"SHALL NOT\" as defined in RFC\
    \ 2119 [RFC2119]) of\n   existing BCPs or Internet Standards except where those\
    \ requirements\n   or prohibitions are ambiguous or contradictory.  In the exceptional\n\
    \   cases where ambiguities or contradictions exist, this memo documents\n   the\
    \ current generally accepted interpretation.  In certain instances,\n   the guidelines\
    \ in this memo do alter recommendations (in the sense of\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", or \"NOT RECOMMENDED\" as\n   defined in RFC 2119) of\
    \ existing BCPs or Internet Standards.  This\n   has been done where practical\
    \ experience has shown that the published\n   recommendations are suboptimal.\
    \  In addition, this memo provides\n   guidelines for the selection of certain\
    \ SMIv2 options (in the sense\n   of \"MAY\" or \"OPTIONAL\" as defined in RFC\
    \ 2119) in cases where there\n   is a consensus on a preferred approach.\n   Although\
    \ some of the guidelines in this memo are not applicable to\n   non-standards\
    \ track or non-IETF MIB documents, authors and reviewers\n   of those documents\
    \ should consider using the ones that do apply.\n   Reviewers and authors need\
    \ to be aware that some of the guidelines in\n   this memo do not apply to MIB\
    \ modules that have been translated to\n   SMIv2 from SMIv1 (STD 16) [RFC1155]\
    \ [RFC1212] [RFC1215].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\", when used in the guidelines in this memo, are\
    \ to be\n   interpreted as described in RFC 2119 [RFC2119].\n   The terms \"MIB\
    \ module\" and \"information module\" are used\n   interchangeably in this memo.\
    \  As used here, both terms refer to any\n   of the three types of information\
    \ modules defined in Section 3 of RFC\n   2578 [RFC2578].\n   The term \"standard\"\
    , when it appears in quotes, is used in the same\n   sense as in the SMIv2 documents\
    \ [RFC2578] [RFC2579] [RFC2580].  In\n   particular, it is used to refer to the\
    \ requirements that those\n   documents levy on \"standard\" modules or \"standard\"\
    \ objects.\n"
- title: 3.  General Documentation Guidelines
  contents:
  - "3.  General Documentation Guidelines\n   In general, IETF standards-track specifications\
    \ containing MIB\n   modules are subject to the same requirements as IETF standards-track\n\
    \   RFCs (see [RFC2223bis]), although there are some differences.  In\n   particular,\
    \ since the version under review will be an Internet-Draft,\n   the notices on\
    \ the front page MUST comply with the requirements of\n   http://www.ietf.org/ietf/1id-guidelines.txt\
    \ and not with those of\n   [RFC2223bis].  In addition, since the specification\
    \ under review is\n   expected to be submitted to the IESG, it MUST comply with\
    \ certain\n   requirements that do not necessarily apply to RFCs; see\n   http://www.ietf.org/ID-Checklist.html\
    \ for details.\n   Section 4 of [RFC2223bis] lists the sections that may exist\
    \ in an\n   RFC.  Sections from the abstract onward may also be present in an\n\
    \   Internet-Draft; see http://www.ietf.org/ID-Checklist.html.  The \"body\n \
    \  of memo\" is always required, and in a MIB document MUST contain at\n   least\
    \ the following:\n    o MIB boilerplate section\n    o Narrative sections\n  \
    \  o Definitions section\n    o Security Considerations section\n    o IANA Considerations\
    \ section\n    o References section\n   Section-by-section guidelines follow.\n"
- title: 3.1.  MIB Boilerplate Section
  contents:
  - "3.1.  MIB Boilerplate Section\n   This section MUST contain a verbatim copy of\
    \ the latest approved\n   Internet-Standard Management Framework boilerplate,\
    \ which is\n   available on-line at http://www.ops.ietf.org/mib-boilerplate.html.\n"
- title: 3.2.  Narrative Sections
  contents:
  - "3.2.  Narrative Sections\n   The narrative part MUST include an overview section\
    \ that describes\n   the scope and field of application of the MIB modules defined\
    \ by the\n   specification and that specifies the relationship (if any) of these\n\
    \   MIB modules to other standards, particularly to standards containing\n   other\
    \ MIB modules.  The narrative part SHOULD include one or more\n   sections to\
    \ briefly describe the structure of the MIB modules defined\n   in the specification.\n\
    \   If the MIB modules defined by the specification import definitions\n   from\
    \ other MIB modules (except for those defined in the SMIv2\n   documents [RFC2578]\
    \ [RFC2579] [RFC2580]) or are always implemented in\n   conjunction with other\
    \ MIB modules, then those facts MUST be noted in\n   the overview section, as\
    \ MUST any special interpretations of objects\n   in other MIB modules.  For instance,\
    \ so-called media-specific MIB\n   modules are always implemented in conjunction\
    \ with the IF-MIB\n   [RFC2863] and are REQUIRED to document how certain objects\
    \ in the\n   IF-MIB are used.  In addition, media-specific MIB modules that rely\n\
    \   on the ifStackTable [RFC2863] and the ifInvStackTable [RFC2864] to\n   maintain\
    \ information regarding configuration and multiplexing of\n   interface sublayers\
    \ MUST contain a description of the layering model.\n"
- title: 3.3.  Definitions Section
  contents:
  - "3.3.  Definitions Section\n   This section contains the MIB module(s) defined\
    \ by the specification.\n   These MIB modules MUST be written in SMIv2 [RFC2578]\
    \ [RFC2579]\n   [RFC2580]; SMIv1 [RFC1155] [RFC1212] [RFC1215] has \"Not Recommended\"\
    \n   status [RFC3410] and is no longer acceptable in IETF MIB modules.\n   See\
    \ Section 4 for guidelines on SMIv2 usage.\n"
- title: 3.4.  Security Considerations Section
  contents:
  - "3.4.  Security Considerations Section\n   Each specification that defines one\
    \ or more MIB modules MUST contain\n   a section that discusses security considerations\
    \ relevant to those\n   modules.  This section MUST be patterned after the latest\
    \ approved\n   template (available at http://www.ops.ietf.org/mib-security.html).\n\
    \   In particular, writable MIB objects that could be especially\n   disruptive\
    \ if abused MUST be explicitly listed by name and the\n   associated security\
    \ risks MUST be spelled out; similarly, readable\n   MIB objects that contain\
    \ especially sensitive information or that\n   raise significant privacy concerns\
    \ MUST be explicitly listed by name\n   and the reasons for the sensitivity/privacy\
    \ concerns MUST be\n   explained.  If there are no risks/vulnerabilities for a\
    \ specific\n   category of MIB objects, then that fact MUST be explicitly stated.\n\
    \   Failure to mention a particular category of MIB objects will not be\n   equated\
    \ to a claim of no risks/vulnerabilities in that category;\n   rather, it will\
    \ be treated as an act of omission and will result in\n   the document being returned\
    \ to the author for correction.  Remember\n   that the objective is not to blindly\
    \ copy text from the template, but\n   rather to think and evaluate the risks/vulnerabilities\
    \ and then\n   state/document the result of this evaluation.\n"
- title: 3.5.  IANA Considerations Section
  contents:
  - "3.5.  IANA Considerations Section\n   In order to comply with IESG policy as\
    \ set forth in\n   http://www.ietf.org/ID-Checklist.html, every Internet-Draft\
    \ that is\n   submitted to the IESG for publication MUST contain an IANA\n   Considerations\
    \ section.  The requirements for this section vary\n   depending what actions\
    \ are required of the IANA.\n"
- title: 3.5.1.  Documents that Create a New Name Space
  contents:
  - "3.5.1.  Documents that Create a New Name Space\n   If an Internet-Draft defines\
    \ a new name space that is to be\n   administered by the IANA, then the document\
    \ MUST include an IANA\n   Considerations section conforming to the guidelines\
    \ set forth in RFC\n   2434 [RFC2434] that specifies how the name space is to\
    \ be\n   administered.\n   Name spaces defined by MIB documents generally consist\
    \ of the range\n   of values for some type (usually an enumerated INTEGER) defined\
    \ by a\n   TEXTUAL-CONVENTION (TC) or of a set of administratively-defined\n \
    \  OBJECT IDENTIFIER (OID) values.  In each case, the definitions are\n   housed\
    \ in stand-alone MIB modules that are maintained by the IANA.\n   These IANA-maintained\
    \ MIB modules are separate from the MIB modules\n   defined in standards-track\
    \ specifications so that new assignments can\n   be made without having to republish\
    \ a standards-track RFC.  Examples\n   of IANA-maintained MIB modules include\
    \ the IANAifType-MIB\n   (http://www.iana.org/assignments/ianaiftype-mib), which\
    \ defines a\n   name space used by the IF-MIB [RFC2863], and the IANA-RTPROTO-MIB\n\
    \   (http://www.iana.org/assignments/ianaiprouteprotocol-mib), which\n   defines\
    \ a name space used by the IPMROUTE-STD-MIB [RFC2932].\n   The current practice\
    \ for such cases is to include a detailed IANA\n   Considerations section complying\
    \ with RFC 2434 in the DESCRIPTION\n   clause of the MODULE-IDENTITY invocation\
    \ in each IANA-maintained MIB\n   module and for the IANA Considerations section\
    \ of the MIB document\n   that defines the name spaces to refer to the URLs for\
    \ the relevant\n   modules.  See RFC 2932 [RFC2932] for an example.  This creates\
    \ a\n   chicken-and-egg problem for MIB documents that have not yet been\n   published\
    \ as RFCs because the relevant IANA-maintained MIB modules\n   will not yet exist.\
    \  The accepted way out of this dilemma is to\n   include the initial content\
    \ of each IANA-maintained MIB module in a\n   non-normative section of the initial\
    \ issue of the document that\n   defines the name space; for an example, see [RFC1573],\
    \ which\n   documents the initial version of the IANAifType-MIB.  That material\n\
    \   is usually omitted from subsequent updates to the document since the\n   IANA-maintained\
    \ modules are then available on-line (cf. [RFC2863]).\n   Reviewers of draft MIB\
    \ documents to which these considerations apply\n   MUST check that the IANA Considerations\
    \ section proposed for\n   publication in the RFC is present and contains pointers\
    \ to the\n   appropriate IANA-maintained MIB modules.  Reviewers of Internet\n\
    \   Drafts that contain the proposed initial content of IANA-maintained\n   MIB\
    \ modules MUST also verify that the DESCRIPTION clauses of the\n   MODULE-IDENTITY\
    \ invocations contain an IANA Considerations section\n   compliant with the guidelines\
    \ in RFC 2434.\n"
- title: 3.5.2.  Documents that Require Assignments in Existing Namespace(s)
  contents:
  - "3.5.2.  Documents that Require Assignments in Existing Namespace(s)\n   If an\
    \ Internet-Draft requires the IANA to update an existing registry\n   prior to\
    \ publication as an RFC, then the IANA Considerations section\n   in the draft\
    \ MUST document that fact.  MIB documents that contain the\n   initial version\
    \ of a MIB module will generally require that the IANA\n   assign an OBJECT IDENTIFIER\
    \ value for the MIB module's MODULE-\n   IDENTITY value and possibly to make other\
    \ assignments as well.\n   Internet-Drafts containing such MIB modules MUST contain\
    \ an IANA\n   Considerations section that specifies the registries that are to\
    \ be\n   updated, the descriptors to which OBJECT IDENTIFIER values are being\n\
    \   assigned, and the subtrees under which the values are to be\n   allocated.\
    \  The text SHOULD be crafted so that after publication it\n   will serve to document\
    \ the OBJECT IDENTIFIER assignments.  For\n   example, something along the following\
    \ lines would be appropriate for\n   an Internet-Draft containing a single MIB\
    \ module with MODULE-IDENTITY\n   descriptor powerEthernetMIB that is to be assigned\
    \ a value under the\n   'mib-2' subtree:\n      The MIB module in this document\
    \ uses the following IANA-assigned\n      OBJECT IDENTIFIER values recorded in\
    \ the SMI Numbers registry:\n      Descriptor        OBJECT IDENTIFIER value\n\
    \      ----------        -----------------------\n      powerEthernetMIB  { mib-2\
    \ XXX }\n      Editor's Note (to be removed prior to publication):  the IANA is\n\
    \      requested to assign a value for \"XXX\" under the 'mib-2' subtree\n   \
    \   and to record the assignment in the SMI Numbers registry.  When\n      the\
    \ assignment has been made, the RFC Editor is asked to replace\n      \"XXX\"\
    \ (here and in the MIB module) with the assigned value and to\n      remove this\
    \ note.\n   Note well:  prior to official assignment by the IANA, a draft\n  \
    \ document MUST use placeholders (such as \"XXX\" above) rather than\n   actual\
    \ numbers.  See Section 4.5 for an example of how this is done\n   in a draft\
    \ MIB module.\n"
- title: 3.5.3.  Documents with No IANA Requests
  contents:
  - "3.5.3.  Documents with No IANA Requests\n   If an Internet-Draft makes no requests\
    \ of the IANA, then that fact\n   MUST be documented in the IANA Considerations\
    \ section.  When an\n   Internet-Draft contains an update of a previously published\
    \ MIB\n   module, it typically will not require any action on the part of the\n\
    \   IANA, but it may inherit an IANA Considerations section documenting\n   existing\
    \ assignments from the RFC that contains the previous version\n   of the MIB module.\
    \  In such cases, the draft MUST contain a note (to\n   be removed prior to publication)\
    \ explicitly indicating that nothing\n   is required from the IANA.  For example,\
    \ a draft that contains an\n   updated version of the POWER-ETHERNET-MIB [RFC3621]\
    \ might include an\n   IANA Considerations section such as the following:\n  \
    \    The MIB module in this document uses the following IANA-assigned\n      OBJECT\
    \ IDENTIFIER values recorded in the SMI Numbers registry:\n      Descriptor  \
    \      OBJECT IDENTIFIER value\n      ----------        -----------------------\n\
    \      powerEthernetMIB  { mib-2 105 }\n      Editor's Note (to be removed prior\
    \ to publication):  this draft\n      makes no additional requests of the IANA.\n\
    \   If an Internet-Draft makes no requests of the IANA and there are no\n   existing\
    \ assignments to be documented, then suitable text for the\n   draft would be\
    \ something along the following lines:\n      No IANA actions are required by\
    \ this document.\n"
- title: 3.6.  References Sections
  contents:
  - "3.6.  References Sections\n   Section 4.7f of [RFC2223bis] specifies the requirements\
    \ for the\n   references sections in an RFC; http://www.ietf.org/ID-Checklist.html\n\
    \   imposes the same requirements on Internet-Drafts.  In particular,\n   there\
    \ MUST be separate lists of normative and informative references,\n   each in\
    \ a separate section.  The style SHOULD follow that of recently\n   published\
    \ RFCs.\n   The standard MIB boilerplate available at\n   http://www.ops.ietf.org/mib-boilerplate.html\
    \ includes lists of\n   normative and informative references that MUST appear\
    \ in all IETF\n   specifications that contain MIB modules.  If items from other\
    \ MIB\n   modules appear in an IMPORTS statement in the Definitions section,\n\
    \   then the specifications containing those MIB modules MUST be included\n  \
    \ in the list of normative references.  When items are imported from an\n   IANA-maintained\
    \ MIB module, the corresponding normative reference\n   SHALL point to the on-line\
    \ version of that MIB module.  It is the\n   policy of the RFC Editor that all\
    \ references must be cited in the\n   text; such citations MUST appear in the\
    \ overview section where\n   documents containing imported definitions (other\
    \ than those already\n   mentioned in the MIB boilerplate) are required to be\
    \ mentioned (cf.\n   Section 3.2).\n   In general, each normative reference SHOULD\
    \ point to the most recent\n   version of the specification in question.\n"
- title: 3.7.  Copyright Notices
  contents:
  - "3.7.  Copyright Notices\n   IETF MIB documents MUST contain the copyright notices\
    \ and disclaimer\n   specified in Sections 5.4 and 5.5 of RFC 3978 [RFC3978].\
    \  Authors and\n   reviewers MUST check to make sure that the correct year is\
    \ inserted\n   into these notices.  In addition, the DESCRIPTION clause of the\n\
    \   MODULE-IDENTITY invocation of each MIB module that will appear in the\n  \
    \ published RFC MUST contain a pointer to the copyright notices in the\n   RFC.\
    \  A template suitable for inclusion in an Internet-Draft,\n   appropriate for\
    \ MIB modules other than those that are to be\n   maintained by the IANA, is as\
    \ follows:\n          DESCRIPTION\n            \" [ ... ]\n            Copyright\
    \ (C) The Internet Society (date).  This version\n            of this MIB module\
    \ is part of RFC yyyy; see the RFC\n            itself for full legal notices.\"\
    \n   -- RFC Ed.: replace yyyy with actual RFC number & remove this note\n   A\
    \ template suitable for MIB modules that are to be maintained by the\n   IANA\
    \ is as follows:\n          DESCRIPTION\n            \" [ ... ]\n            Copyright\
    \ (C) The Internet Society (date).  The initial\n            version of this MIB\
    \ module was published in RFC yyyy;\n            for full legal notices see the\
    \ RFC itself.  Supplementary\n            information may be available at:\n \
    \           http://www.ietf.org/copyrights/ianamib.html.\"\n   -- RFC Ed.: replace\
    \ yyyy with actual RFC number & remove this note\n   In each case, the current\
    \ year is to be inserted in place of the word\n   \"date\".\n"
- title: 3.8.  Intellectual Property Section
  contents:
  - "3.8.  Intellectual Property Section\n   Section 5 of RFC 3979 [RFC3979] contains\
    \ a notice regarding\n   intellectual property rights or other rights that must\
    \ appear in all\n   IETF RFCs.  A verbatim copy of that notice SHOULD appear in\
    \ every\n   IETF MIB document.\n"
- title: 4.  SMIv2 Usage Guidelines
  contents:
  - "4.  SMIv2 Usage Guidelines\n   In general, MIB modules in IETF standards-track\
    \ specifications MUST\n   comply with all syntactic and semantic requirements\
    \ of SMIv2\n   [RFC2578] [RFC2579] [RFC2580] that apply to \"standard\" MIB modules\n\
    \   and except as noted below SHOULD comply with SMIv2 recommendations.\n   The\
    \ guidelines in this section are intended to supplement the SMIv2\n   documents\
    \ in the following ways:\n    o to document the current generally accepted interpretation\
    \ when\n      those documents contain ambiguities or contradictions;\n    o to\
    \ update recommendations in those documents that have been shown\n      by practical\
    \ experience to be out-of-date or otherwise suboptimal;\n    o to provide guidance\
    \ in selection of SMIv2 options in cases where\n      there is a consensus on\
    \ a preferred approach.\n"
- title: 4.1.  Module Names
  contents:
  - "4.1.  Module Names\n   RFC 2578 Section 3 specifies the rules for module names.\
    \  Note in\n   particular that names of \"standard\" modules MUST be unique, MUST\n\
    \   follow the syntax rules in RFC 2578 Section 3, and MUST NOT be\n   changed\
    \ when a MIB module is revised (see also RFC 2578 Section 10).\n   It is RECOMMENDED\
    \ that module names be mnemonic.  See Appendix C for\n   suggested naming conventions.\n"
- title: 4.2.  Descriptors, TC Names, and Labels
  contents:
  - "4.2.  Descriptors, TC Names, and Labels\n   RFC 2578 Sections 3.1, 7.1.1, and\
    \ 7.1.4 and RFC 2579 Section 3\n   recommend that descriptors and names associated\
    \ with macro\n   invocations and labels associated with enumerated INTEGER and\
    \ BITS\n   values be no longer than 32 characters, but require that they be no\n\
    \   longer than 64 characters.\n   Restricting descriptors, TC names, and labels\
    \ to 32 characters often\n   conflicts with the recommendation that they be mnemonic\
    \ and (for\n   descriptors and TC names) with the requirement that they be unique\n\
    \   (see RFC 2578 Section 3.1 and RFC 2579 Section 3).  The consensus of\n   the\
    \ current pool of MIB reviewers is that the SMIv2 recommendation to\n   limit\
    \ descriptors, TC names, and labels to 32 characters SHOULD be\n   set aside in\
    \ favor of promoting clarity and uniqueness and that\n   automated tools such\
    \ as MIB compilers SHOULD NOT by default generate\n   warnings for violating that\
    \ recommendation.\n   Note that violations of the 64-character limit MUST NOT\
    \ be ignored;\n   they MUST be treated as errors.\n   See Appendix C for suggested\
    \ descriptor and TC naming conventions.\n"
- title: 4.3.  Naming Hierarchy
  contents:
  - "4.3.  Naming Hierarchy\n   RFC 2578 Section 4 describes the object identifier\
    \ subtrees that are\n   maintained by IANA and specifies the usages for those\
    \ subtrees.  In\n   particular, the mgmt subtree { iso 3 6 1 2 } is used to identify\
    \ IETF\n   \"standard\" objects, while the experimental subtree { iso 3 6 1 3\
    \ } is\n   used to identify objects that are under development in the IETF.  It\n\
    \   is REQUIRED that objects be moved from the experimental subtree to\n   the\
    \ mgmt subtree when a MIB module enters the IETF standards track.\n   Experience\
    \ has shown that it is impractical to move objects from one\n   subtree to another\
    \ once those objects have seen large-scale use in an\n   operational environment.\
    \  Hence any object that is targeted for\n   deployment in an operational environment\
    \ MUST NOT be registered under\n   the experimental subtree, irrespective of the\
    \ standardization status\n   of that object.  The experimental subtree should\
    \ be used only for\n   objects that are intended for limited experimental deployment.\
    \  Such\n   objects typically are defined in Experimental RFCs.\n   Note:  the\
    \ term \"object\", as used here and in RFC 2578 Section 4, is\n   to be broadly\
    \ interpreted as any construct that results in an OBJECT\n   IDENTIFIER registration.\
    \  The list of such constructs is specified in\n   RFC 2578 Section 3.6.\n"
- title: 4.4.  IMPORTS Statement
  contents:
  - "4.4.  IMPORTS Statement\n   RFC 2578 Section 3.2 specifies which symbols must\
    \ be imported and\n   also lists certain predefined symbols that must not be imported.\n\
    \   The general requirement is that if an external symbol other than a\n   predefined\
    \ ASN.1 type or the BITS construct is used, then it MUST be\n   mentioned in the\
    \ module's IMPORTS statement.  The words \"external\n   object\" in the first\
    \ paragraph of that section may give the\n   impression that such symbols are\
    \ limited to those that refer to\n   object definitions, but that is not the case,\
    \ as subsequent\n   paragraphs should make clear.\n   Note that exemptions to\
    \ this general requirement are granted by RFC\n   2580 Sections 5.4.3 and 6.5.2\
    \ for descriptors of objects appearing in\n   the OBJECT clause of a MODULE-COMPLIANCE\
    \ statement or in the\n   VARIATION clause of an AGENT-CAPABILITIES statement.\
    \  Some MIB\n   compilers also grant exemptions to descriptors of notifications\n\
    \   appearing in a VARIATION clause and to descriptors of object groups\n   and\
    \ notification groups referenced by a MANDATORY-GROUPS clause, a\n   GROUP clause,\
    \ or an INCLUDES clause, although RFC 2580 (through\n   apparent oversight) does\
    \ not mention those cases.  The exemptions are\n   sometimes seen as unhelpful\
    \ because they make IMPORTS rules more\n   complicated and inter-module dependencies\
    \ less obvious than they\n   otherwise would be.  External symbols referenced\
    \ by compliance\n   statements and capabilities statements MAY therefore be listed\
    \ in the\n   IMPORTS statement; if this is done, it SHOULD be done consistently.\n\
    \   Finally, even though it is not forbidden by the SMI, it is considered\n  \
    \ poor style to import symbols that are not used, and standards-track\n   MIB\
    \ modules SHOULD NOT do so.\n"
- title: 4.5.  MODULE-IDENTITY Invocation
  contents:
  - "4.5.  MODULE-IDENTITY Invocation\n   RFC 2578 Section 3 requires that all SMIv2\
    \ MIB modules start with\n   exactly one invocation of the MODULE-IDENTITY macro.\
    \  This invocation\n   MUST appear immediately after the IMPORTS statement.\n\
    \   RFC 2578 Section 5 describes how the various clauses are used.  The\n   following\
    \ additional guidelines apply to all MIB modules over which\n   the IETF has change\
    \ control:\n   - If the module was developed by an IETF working group, then the\n\
    \     ORGANIZATION clause MUST provide the full name of the working\n     group,\
    \ and the CONTACT-INFO clause MUST include working group\n     mailing list information.\
    \  The CONTACT-INFO clause SHOULD also\n     provide a pointer to the working\
    \ group's web page.\n   - A REVISION clause MUST be present for each revision\
    \ of the MIB\n     module, and the UTC time of the most recent REVISION clause\
    \ MUST\n     match that of the LAST-UPDATED clause.  The DESCRIPTION clause\n\
    \     associated with each revision MUST state in which RFC that revision\n  \
    \   appeared and SHOULD provide a list of all significant changes.\n     When\
    \ a MIB module is revised, UTC times in all REVISION clauses\n     SHOULD be updated\
    \ to use four-digit year notation.\n   - The value assigned to the MODULE-IDENTITY\
    \ descriptor MUST be unique\n     and (for IETF standards-track MIB modules) SHOULD\
    \ reside under the\n     mgmt subtree [RFC2578].  Most often it will be an IANA-assigned\n\
    \     value directly under mib-2 [RFC2578], although for media-specific\n    \
    \ MIB modules that extend the IF-MIB [RFC2863] it is customary to use\n     an\
    \ IANA-assigned value under transmission [RFC2578].  In the past,\n     some IETF\
    \ working groups have made their own assignments from\n     subtrees delegated\
    \ to them by IANA, but that practice has proven\n     problematic and is NOT RECOMMENDED.\n\
    \   While a MIB module is under development, the RFC number in which it\n   will\
    \ eventually be published is usually unknown and must be filled in\n   by the\
    \ RFC Editor prior to publication.  An appropriate form for the\n   REVISION clause\
    \ applying to a version under development would be\n   something along the following\
    \ lines:\n          REVISION    \"200212132358Z\"  -- December 13, 2002\n    \
    \      DESCRIPTION \"Initial version, published as RFC yyyy.\"\n   -- RFC Ed.:\
    \ replace yyyy with actual RFC number & remove this note\n   Note that after RFC\
    \ publication, a REVISION clause is present only\n   for published versions of\
    \ a MIB module and not for interim versions\n   that existed only as Internet-Drafts.\
    \  Thus, a draft version of a MIB\n   module MUST contain just one new REVISION\
    \ clause that covers all\n   changes since the last published version (if any).\n\
    \   When the initial version of a MIB module is under development, the\n   value\
    \ assigned to the MODULE-IDENTITY descriptor will be unknown if\n   an IANA-assigned\
    \ value is used, because the assignment is made just\n   prior to publication\
    \ as an RFC.  The accepted form for the MODULE-\n   IDENTITY statement in draft\
    \ versions of such a module is something\n   along the following lines:\n    \
    \  <descriptor> MODULE-IDENTITY\n          [ ... ]\n          ::= { <subtree>\
    \ XXX }\n   -- RFC Ed.: replace XXX with IANA-assigned number & remove this note\n\
    \   where <descriptor> is whatever descriptor has been selected for the\n   module\
    \ and <subtree> is the subtree under which the module is to be\n   registered\
    \ (e.g., mib-2 or transmission).  Note that XXX must be\n   temporarily replaced\
    \ by a number in order for the module to compile.\n   Note well:  prior to official\
    \ assignment by the IANA, a draft\n   document MUST use a placeholder (such as\
    \ \"XXX\" above) rather than an\n   actual number.  If trial implementations are\
    \ desired during the\n   development process, then an assignment under the 'experimental'\n\
    \   subtree may be obtained from the IANA (cf. Section 4.3).\n"
- title: 4.6.  Textual Conventions and Object Definitions
  contents:
  - '4.6.  Textual Conventions and Object Definitions

    '
- title: 4.6.1.  Usage of Data Types
  contents:
  - '4.6.1.  Usage of Data Types

    '
- title: 4.6.1.1.  INTEGER, Integer32, Gauge32, and Unsigned32
  contents:
  - "4.6.1.1.  INTEGER, Integer32, Gauge32, and Unsigned32\n   The 32-bit integer\
    \ data types INTEGER, Integer32, Gauge32, and\n   Unsigned32 are described in\
    \ RFC 2578 Section 2 and further elaborated\n   in RFC 2578 Sections 7.1.1, 7.1.7,\
    \ and 7.1.11.  The following\n   guidelines apply when selecting one of these\
    \ data types for an object\n   definition or a textual convention:\n   - For integer-valued\
    \ enumerations:\n     - INTEGER is REQUIRED; - Integer32, Unsigned32, and Gauge32\
    \ MUST\n     NOT be used.\n   Note that RFC 2578 recommends (but does not require)\
    \ that integer-\n   valued enumerations start at 1 and be numbered contiguously.\
    \  This\n   recommendation SHOULD be followed unless there is a valid reason to\n\
    \   do otherwise, e.g., to match values of external data or to indicate\n   special\
    \ cases, and any such special-case usage SHOULD be clearly\n   documented.  For\
    \ an example, see the InetAddressType TC [RFC4001].\n   Although the SMI allows\
    \ DEFVAL clauses for integer-valued\n   enumerations to specify the default value\
    \ either by label or by\n   numeric value, the label form is preferred since all\
    \ the examples in\n   RFC 2578 are of that form and some tools do not accept the\
    \ numeric\n   form.\n   - If the value range is between -2147483648..2147483647\
    \ (inclusive)\n     and negative values are possible, then:\n     - Integer32\
    \ is RECOMMENDED;\n     - INTEGER is acceptable;\n     - Unsigned32 and Gauge32\
    \ MUST NOT be used.\n   - If the value range is between 0..4294967295 (inclusive)\
    \ and the\n     value of the information being modelled may increase above the\n\
    \     maximum value or decrease below the minimum value, then:\n     - Gauge32\
    \ is RECOMMENDED;\n     - Unsigned32 is acceptable;\n     - INTEGER and Integer32\
    \ MUST NOT be used if\n       values greater than 2147483647 are possible.\n \
    \  - If the value range is between 0..4294967295 (inclusive), and values\n   \
    \  greater than 2147483647 are possible, and the value of the\n     information\
    \ being modelled does not increase above the maximum\n     value nor decrease\
    \ below the minimum value, then:\n     - Unsigned32 is RECOMMENDED;\n     - Gauge32\
    \ is acceptable;\n     - INTEGER and Integer32 MUST NOT be used.\n   - If the\
    \ value range is between 0..2147483647 (inclusive), and the\n     value of the\
    \ information being modelled does not increase above the\n     maximum value nor\
    \ decrease below the minimum value, then:\n     - Unsigned32 is RECOMMENDED;\n\
    \     - INTEGER, Integer32, and Gauge32 are acceptable.\n   - For integer-valued\
    \ objects that appear in an INDEX clause or for\n     integer-valued TCs that\
    \ are to be used in an index column:\n     - Unsigned32 with a range that excludes\
    \ zero is RECOMMENDED for\n       most index objects.  It is acceptable to include\
    \ zero in the\n       range when it is semantically significant or when it is\
    \ used as\n       the index value for a unique row with special properties.  Such\n\
    \       usage SHOULD be clearly documented in the DESCRIPTION clause.\n     -\
    \ Integer32 or INTEGER with a non-negative range is acceptable.\n       Again,\
    \ zero SHOULD be excluded from the range except when it is\n       semantically\
    \ significant or when it is used as the index value\n       for a unique row with\
    \ special properties, and in such cases the\n       usage SHOULD be clearly documented\
    \ in the DESCRIPTION clause.\n     - Use of Gauge32 is acceptable for index objects\
    \ that have gauge\n       semantics.\n   The guidelines above combine both the\
    \ usage rules for integer data\n   types and the INDEX rules in RFC 2578 Section\
    \ 7.7 up to and including\n   bullet (1) plus the next-to-last paragraph on page\
    \ 28.\n   Sometimes it will be necessary for external variables to represent\n\
    \   values of an index object -- e.g., ifIndex [RFC2863].  In such cases,\n  \
    \ authors of the module containing that object SHOULD consider defining\n   TCs\
    \ such as InterfaceIndex and/or InterfaceIndexOrZero [RFC2863].\n   Note that\
    \ INTEGER is a predefined ASN.1 type and MUST NOT be present\n   in a module's\
    \ IMPORTS statement, whereas Integer32, Gauge32, and\n   Unsigned32 are defined\
    \ by SNMPv2-SMI and MUST be imported from that\n   module if used.\n"
- title: 4.6.1.2.  Counter32 and Counter64
  contents:
  - "4.6.1.2.  Counter32 and Counter64\n   Counter32 and Counter64 have special semantics\
    \ as described in RFC\n   2578 Sections 7.1.6 and 7.1.10, respectively.  Object\
    \ definitions\n   MUST (and textual conventions SHOULD) respect these semantics.\
    \  That\n   means:\n   - It is OK to use Counter32/64 for counters that may/will\
    \ be reset\n     when the management subsystem is re-initialized or when other\n\
    \     unusual/irregular events occur (e.g., counters maintained on a line\n  \
    \   card may be reset when the line card is reset).  However, if it is\n     possible\
    \ for such other unusual/irregular events to occur, the\n     DESCRIPTION clause\
    \ MUST state that this is so and MUST describe\n     those other unusual/irregular\
    \ events in sufficient detail that it\n     is possible for a management application\
    \ to determine whether a\n     reset has occurred since the last time the counter\
    \ was polled.  The\n     RECOMMENDED way to do this is to provide a discontinuity\
    \ indicator\n     as described in RFC 2578 Sections 7.1.6 and 7.1.10.  For an\
    \ example\n     of such a discontinuity indicator, see the\n     ifCounterDiscontinuityTime\
    \ object in the IF-MIB [RFC2863].\n   - It is NOT OK to put in the DESCRIPTION\
    \ clause of a Counter32/64\n     that there is a requirement that on a discontinuity\
    \ the counter\n     MUST reset to zero or to any other specific value.\n   - It\
    \ is NOT OK to put in the DESCRIPTION clause of a Counter32/64\n     that there\
    \ is a requirement that it MUST reset at any specific\n     time/event (e.g.,\
    \ midnight).\n   - It is NOT OK for one manager to request the agent to reset\
    \ the\n     value(s) of counter(s) to zero, and Counter32/64 is the wrong\n  \
    \   syntax for \"counters\" that regularly reset themselves to zero.  For\n  \
    \   the latter, it is better to define or use textual conventions such\n     as\
    \ those in RFC 3593 [RFC3593] or RFC 3705 [RFC3705].\n   RFC 2578 Section 7.1.10\
    \ places a requirement on \"standard\" MIB\n   modules that the Counter64 type\
    \ may be used only if the information\n   being modelled would wrap in less than\
    \ one hour if the Counter32 type\n   was used instead.  Now that SNMPv3 is an\
    \ Internet Standard and SNMPv1\n   is Historic (see http://www.rfc-editor.org/rfcxx00.html\
    \ for status\n   and [RFC3410] for rationale), there is no reason to continue\n\
    \   enforcing this restriction.  Henceforth \"standard\" MIB modules MAY\n   use\
    \ the Counter64 type when it makes sense to do so, and MUST use\n   Counter64\
    \ if the information being modelled would wrap in less than\n   one hour if the\
    \ Counter32 type was used instead.  Note also that\n   there is no longer a requirement\
    \ to define Counter32 counterparts for\n   each Counter64 object, although one\
    \ is still allowed to do so.\n   There also exist closely-related textual conventions\n\
    \   ZeroBasedCounter32 and ZeroBasedCounter64 defined in RMON2-MIB\n   [RFC2021]\
    \ and HCNUM-TC [RFC2856], respectively.\n   The only difference between ZeroBasedCounter32/64\
    \ TCs and\n   Counter32/64 is their starting value; at time=X, where X is their\n\
    \   minimum-wrap-time after they were created, the behavior of\n   ZeroBasedCounter32/64\
    \ becomes exactly the same as Counter32/64.\n   Thus, the preceding paragraphs/rules\
    \ apply not only to Counter32/64,\n   but also to ZeroBasedCounter32/64 TCs.\n"
- title: 4.6.1.3.  CounterBasedGauge64
  contents:
  - "4.6.1.3.  CounterBasedGauge64\n   SMIv2 unfortunately does not provide 64-bit\
    \ integer base types.  In\n   order to make up for this omission, the CounterBasedGauge64\
    \ textual\n   convention is defined in HCNUM-TC [RFC2856].  This TC uses Counter64\n\
    \   as a base type, but discards the special counter semantics, which is\n   allowed\
    \ under the generally accepted interpretation of RFC 2579\n   Section 3.3.  It\
    \ does inherit all the syntactic restrictions of that\n   type, which means that\
    \ it MUST NOT be subtyped and that objects\n   defined with it MUST NOT appear\
    \ in an INDEX clause, MUST NOT have a\n   DEFVAL clause, and MUST have a MAX-ACCESS\
    \ of read-only or\n   accessible-for-notify.\n   This TC SHOULD be used for object\
    \ definitions that require a 64-bit\n   unsigned data type with gauge semantics.\
    \  If a 64-bit unsigned data\n   type with different semantics is needed, then\
    \ a different TC based on\n   Counter64 MUST be used, since one TC cannot refine\
    \ another (cf. RFC\n   2579 Section 3.5).\n"
- title: 4.6.1.4.  OCTET STRING
  contents:
  - "4.6.1.4.  OCTET STRING\n   The OCTET STRING type is described in RFC 2578 Section\
    \ 7.1.2.  It\n   represents arbitrary binary or textual data whose length is between\
    \ 0\n   and 65535 octets inclusive.  Objects and TCs whose SYNTAX is of this\n\
    \   type SHOULD have a size constraint when the actual bounds are more\n   restrictive\
    \ than the SMI-imposed limits.  This is particularly true\n   for index objects.\
    \  Note, however, that size constraints SHOULD NOT\n   be imposed arbitrarily,\
    \ as the SMI does not permit them to be changed\n   afterward.\n   There exist\
    \ a number of standard TCs that cater to some of the more\n   common requirements\
    \ for specialized OCTET STRING types.  In\n   particular, SNMPv2-TC [RFC2579]\
    \ contains the DisplayString,\n   PhysAddress, MacAddress, and DateAndTime TCs;\
    \ the SNMP-FRAMEWORK-MIB\n   [RFC3411] contains the SnmpAdminString TC; and the\
    \ SYSAPPL-MIB\n   [RFC2287] contains the Utf8String and LongUtf8String TCs.  When\
    \ a\n   standard TC provides the desired semantics, it SHOULD be used in an\n\
    \   object's SYNTAX clause instead of OCTET STRING or an equivalent\n   locally-defined\
    \ TC.\n   Note that OCTET STRING is a predefined ASN.1 type and MUST NOT be\n\
    \   present in a module's IMPORTS statement.\n"
- title: 4.6.1.5.  OBJECT IDENTIFIER
  contents:
  - "4.6.1.5.  OBJECT IDENTIFIER\n   The OBJECT IDENTIFIER type is described in RFC\
    \ 2578 Section 7.1.3.\n   Its instances represent administratively assigned names.\
    \  Note that\n   both the SMI and the SNMP protocol limit instances of this type\
    \ to\n   128 sub-identifiers and require that each sub-identifier be within\n\
    \   the range 0 to 4294967295 inclusive.  Subtyping is not allowed.\n   The purpose\
    \ of OBJECT IDENTIFIER values is to provide authoritative\n   identification either\
    \ for some type of item or for a specific\n   instance of some type of item. \
    \ Among the items that can be\n   identified in this way are definitions in MIB\
    \ modules created via the\n   MODULE-IDENTITY, OBJECT-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE,\n\
    \   OBJECT-GROUP, NOTIFICATION-GROUP, MODULE-COMPLIANCE, and AGENT-\n   CAPABILITIES\
    \ constructs; and via instances of objects defined in MIB\n   modules, protocols,\
    \ languages, specifications, interface types,\n   hardware, and software.  For\
    \ some of these uses other possibilities\n   exist, e.g., OCTET STRING or enumerated\
    \ INTEGER values.  The OBJECT\n   IDENTIFIER type SHOULD be used instead of the\
    \ alternatives when the\n   set of identification values needs to be independently\
    \ extensible\n   without the need for a registry to provide centralized coordination.\n\
    \   There exist a number of standard TCs that cater to some of the more\n   common\
    \ requirements for specialized OBJECT IDENTIFIER types.  In\n   particular, SNMPv2-TC\
    \ [RFC2579] contains the AutonomousType,\n   VariablePointer, and RowPointer TCs.\
    \  When a standard TC provides the\n   desired semantics, it SHOULD be used in\
    \ an object's SYNTAX clause\n   instead of OBJECT IDENTIFIER or an equivalent\
    \ locally-defined TC.\n   Note that OBJECT IDENTIFIER is a predefined ASN.1 type\
    \ and MUST NOT\n   be present in a module's IMPORTS statement.\n"
- title: 4.6.1.6.  The BITS Construct
  contents:
  - "4.6.1.6.  The BITS Construct\n   The BITS construct is described in RFC 2578\
    \ Section 7.1.4.  It\n   represents an enumeration of named bits.  The bit positions\
    \ in a TC\n   or object definition whose SYNTAX is of this type MUST start at\
    \ 0 and\n   SHOULD be contiguous.\n   Note that the BITS construct is defined\
    \ by the macros that use it and\n   therefore MUST NOT be present in a module's\
    \ IMPORTS statement.\n"
- title: 4.6.1.7.  IpAddress
  contents:
  - "4.6.1.7.  IpAddress\n   The IpAddress type described in RFC 2578 Section 7.1.5\
    \ SHOULD NOT be\n   used in new MIB modules.  The InetAddress/InetAddressType\
    \ textual\n   conventions [RFC4001] SHOULD be used instead.\n"
- title: 4.6.1.8.  TimeTicks
  contents:
  - "4.6.1.8.  TimeTicks\n   The TimeTicks type is described in RFC 2578 Section 7.1.8.\
    \  It\n   represents the time in hundredths of a second between two epochs,\n\
    \   reduced modulo 2^32.  It MUST NOT be subtyped, and the DESCRIPTION\n   clause\
    \ of any object or TC whose SYNTAX is of this type MUST identify\n   the reference\
    \ epochs.\n   The TimeTicks type SHOULD NOT be used directly in definitions of\n\
    \   objects that are snapshots of sysUpTime [RFC3418].  The TimeStamp TC\n   [RFC2579]\
    \ already conveys the desired semantics and SHOULD be used\n   instead.\n"
- title: 4.6.1.9.  TruthValue
  contents:
  - "4.6.1.9.  TruthValue\n   The TruthValue TC is defined in SNMPv2-TC [RFC2579].\
    \  It is an\n   enumerated INTEGER type that assumes the values true(1) and false(2).\n\
    \   This TC SHOULD be used in the SYNTAX clause of object definitions\n   that\
    \ require a Boolean type.  MIB modules SHOULD NOT use enumerated\n   INTEGER types\
    \ or define TCs that duplicate its semantics.\n"
- title: 4.6.1.10.  Other Data Types
  contents:
  - "4.6.1.10.  Other Data Types\n   There exist a number of standard TCs that cater\
    \ to some of the more\n   common requirements for specialized data types.  Some\
    \ have been\n   mentioned above, and Appendix B contains a partial list that includes\n\
    \   those plus some others that are a bit more specialized.  An on-line\n   version\
    \ of that list, which is updated as new TCs are developed, can\n   be found at\
    \ http://www.ops.ietf.org/mib-common-tcs.html.\n   Whenever a standard TC already\
    \ conveys the desired semantics, it\n   SHOULD be used in an object definition\
    \ instead of the corresponding\n   base type or a locally-defined TC.  This is\
    \ especially true of the\n   TCs defined in SNMPv2-TC [RFC2579] and SNMP-FRAMEWORK-MIB\
    \ [RFC3411]\n   because they are Internet Standards, and so modules that refer\
    \ to\n   them will not suffer delay in advancement on the standards track on\n\
    \   account of such references.\n   MIB module authors need to be aware that enumerated\
    \ INTEGER or BITS\n   TCs may in some cases be extended with additional enumerated\
    \ values\n   or additional bit positions.  When an imported TC that may be\n \
    \  extended in this way is used to define an object that may be written\n   or\
    \ that serves as an index in a read-create table, then the set of\n   values or\
    \ bit positions that needs to be supported SHOULD be\n   specified either in the\
    \ object's DESCRIPTION clause or in an OBJECT\n   clause in the MIB module's compliance\
    \ statement(s).  This may be done\n   by explicitly listing the required values\
    \ or bit positions, or it may\n   be done by stating that an implementation may\
    \ support a subset of\n   values or bit positions of its choosing.\n"
- title: 4.6.2.  DESCRIPTION and REFERENCE Clauses
  contents:
  - "4.6.2.  DESCRIPTION and REFERENCE Clauses\n   It is hard to overemphasize the\
    \ importance of an accurate and\n   unambiguous DESCRIPTION clause for all objects\
    \ and TCs.  The\n   DESCRIPTION clause contains the instructions that implementors\
    \ will\n   use to implement an object, and if they are inadequate or ambiguous,\n\
    \   then implementation quality will suffer.  Probably the single most\n   important\
    \ job of a MIB reviewer is to ensure that DESCRIPTION clauses\n   are sufficiently\
    \ clear and unambiguous to allow interoperable\n   implementations to be created.\n\
    \   A very common problem is to see an object definition for, say,\n   'stdMIBPoofpoofCounter'\
    \ with a DESCRIPTION clause that just says\n   \"Number of poofpoofs\" with no\
    \ indication what a 'poofpoof' is.  In\n   such cases, it is strongly RECOMMENDED\
    \ that there either be at least\n   a minimal explanation or else a REFERENCE\
    \ clause to point to the\n   definition of a 'poofpoof'.\n   For read-write objects\
    \ (other than columns in read-create tables that\n   have well-defined persistence\
    \ properties), it is RECOMMENDED that the\n   DESCRIPTION clause specify what\
    \ happens to the value after an agent\n   reboot.  Among the possibilities are\
    \ that the value remains\n   unchanged, that it reverts to a well-defined default\
    \ value, or that\n   the result is implementation-dependent.\n"
- title: 4.6.3.  DISPLAY-HINT Clause
  contents:
  - "4.6.3.  DISPLAY-HINT Clause\n   The DISPLAY-HINT clause is used in a TC to provide\
    \ a nonbinding hint\n   to a management application as to how the value of an\
    \ instance of an\n   object defined with the syntax in the TC might be displayed.\
    \  Its\n   presence is optional.\n   Although management applications typically\
    \ default to decimal format\n   (\"d\") for integer TCs that are not enumerations\
    \ and to a hexadecimal\n   format (\"1x:\" or \"1x \" or \"1x_\") for octet string\
    \ TCs when the\n   DISPLAY-HINT clause is absent, it should be noted that SMIv2\
    \ does not\n   actually specify any defaults.  MIB authors should be aware that\
    \ a\n   clear hint is provided to applications only when the DISPLAY-HINT\n  \
    \ clause is present.\n"
- title: 4.6.4.  Conceptual Table Definitions
  contents:
  - "4.6.4.  Conceptual Table Definitions\n   RFC 2578 Sections 7.1.12 and 7.1.12.1\
    \ specify the rules for defining\n   conceptual tables, and RFC 2578 Sections\
    \ 7.7, 7.8, and 7.8.1 specify\n   conceptual table indexing rules.  The following\
    \ guidelines apply to\n   such definitions:\n   - For conceptual rows:\n     -\
    \ If the row is an extension of a row in some other table, then an\n       AUGMENTS\
    \ clause MUST be used if the relationship is one-to-one,\n       and an INDEX\
    \ clause MUST be used if the relationship is sparse.\n       In the latter case,\
    \ the INDEX clause SHOULD be identical to that\n       of the original table.\n\
    \     - If the row is an element of an expansion table -- that is, if\n      \
    \ multiple row instances correspond to a single row instance in\n       some other\
    \ table -- then an INDEX clause MUST be used, and the\n       first-mentioned\
    \ elements SHOULD be the indices of that other\n       table, listed in the same\
    \ order.\n     - If objects external to the row are present in the INDEX clause,\n\
    \       then the conceptual row's DESCRIPTION clause MUST specify how\n      \
    \ those objects are used in identifying instances of its columnar\n       objects,\
    \ and in particular MUST specify for which values of those\n       index objects\
    \ the conceptual row may exist.\n     - Use of the IMPLIED keyword is NOT RECOMMENDED\
    \ for any index\n       object that may appear in the INDEX clause of an expansion\
    \ table.\n       Since this keyword may be associated only with the last object\
    \ in\n       an INDEX clause, it cannot be associated with the same index\n  \
    \     object in a primary table and an expansion table.  This will\n       cause\
    \ the sort order to be different in the primary table and any\n       expansion\
    \ tables.  As a consequence, an implementation will be\n       unable to reuse\
    \ indexing code from the primary table in expansion\n       tables, and data structures\
    \ meant to be extended might actually\n       have to be replicated.  Designers\
    \ who are tempted to use IMPLIED\n       should consider that the resulting sort\
    \ order rarely meets user\n       expectations, particularly for strings that\
    \ include both\n       uppercase and lowercase letters, and it does not take the\
    \ user\n       language or locale into account.\n   - If dynamic row creation\
    \ and/or deletion by management applications\n     is supported, then:\n     -\
    \ There SHOULD be one columnar object with a SYNTAX value of\n       RowStatus\
    \ [RFC2579] and a MAX-ACCESS value of read-create.  This\n       object is called\
    \ the status column for the conceptual row.  All\n       other columnar objects\
    \ MUST have a MAX-ACCESS value of read-\n       create, read-only, accessible-for-notify,\
    \ or not-accessible; a\n       MAX-ACCESS value of read-write is not allowed.\n\
    \     - There either MUST be one columnar object with a SYNTAX value of\n    \
    \   StorageType [RFC2579] and a MAX-ACCESS value of read-create, or\n       else\
    \ the row object (table entry) DESCRIPTION clause MUST specify\n       what happens\
    \ to dynamically-created rows after an agent restart.\n     - If the agent itself\
    \ may also create and/or delete rows, then the\n       conditions under which\
    \ this can occur MUST be clearly documented\n       in the row object DESCRIPTION\
    \ clause.\n   - For conceptual rows that include a status column:\n     - The\
    \ DESCRIPTION clause of the status column MUST specify which\n       columnar\
    \ objects (if any) have to be set to valid values before\n       the row can be\
    \ activated.  If any objects in cascading tables\n       have to be populated\
    \ with related data before the row can be\n       activated, then this MUST also\
    \ be specified.\n     - The DESCRIPTION clause of the status column MUST specify\
    \ whether\n       or not it is possible to modify other columns in the same\n\
    \       conceptual row when the status value is active(1).  Note that in\n   \
    \    many cases it will be possible to modify some writable columns\n       when\
    \ the row is active but not others.  In such cases, the\n       DESCRIPTION clause\
    \ for each writable column SHOULD state whether\n       or not that column can\
    \ be modified when the row is active, and\n       the DESCRIPTION clause for the\
    \ status column SHOULD state that\n       modifiability of other columns when\
    \ the status value is active(1)\n       is specified in the DESCRIPTION clauses\
    \ for those columns (rather\n       than listing the modifiable columns individually).\n\
    \   - For conceptual rows that include a StorageType column:\n     - The DESCRIPTION\
    \ clause of the StorageType column MUST specify\n       which read-write or read-create\
    \ columnar objects in permanent(4)\n       rows an agent must, at a minimum, allow\
    \ to be writable.\n   Note that RFC 2578 Section 7.8 requires that the lifetime\
    \ of an\n   instance of a conceptual row that AUGMENTS a base row must be the\n\
    \   same as the corresponding instance of the base row.  It follows that\n   there\
    \ is no need for a RowStatus or StorageType column in an\n   augmenting row if\
    \ one is already present in the base row.\n   Complete requirements for the RowStatus\
    \ and StorageType TCs can be\n   found in RFC 2579, in the DESCRIPTION clauses\
    \ for those TCs.\n"
- title: 4.6.5.  OID Values Assigned to Objects
  contents:
  - "4.6.5.  OID Values Assigned to Objects\n   RFC 2578 Section 7.10 specifies the\
    \ rules for assigning OBJECT\n   IDENTIFIER (OID) values to OBJECT-TYPE definitions.\
    \  In particular:\n   - A conceptual table MUST have exactly one subordinate object,\
    \ which\n     is a conceptual row.  The OID assigned to the conceptual row MUST\n\
    \     be derived by appending a sub-identifier of \"1\" to the OID assigned\n\
    \     to the conceptual table.\n   - A conceptual row has as many subordinate\
    \ objects as there are\n     columns in the row; there MUST be at least one. \
    \ The OID assigned\n     to each columnar object MUST be derived by appending\
    \ a non-zero\n     sub-identifier, unique within the row, to the OID assigned\
    \ to the\n     conceptual row.\n   - A columnar or scalar object MUST NOT have\
    \ any subordinate objects.\n   - The last sub-identifier of an OID assigned to\
    \ any object (be it\n     table, row, column, or scalar) MUST NOT be equal to\
    \ zero.  Note\n     that sub-identifiers of intermediate nodes MAY be equal to\
    \ zero.\n   - The OID assigned to an object definition MUST NOT also be assigned\n\
    \     to another definition that results in OID registration.  RFC 2578\n    \
    \ Section 3.6 lists the constructs that create OID registrations.\n   Although\
    \ it is not specifically required by the SMI, it is customary\n   (and strongly\
    \ RECOMMENDED) that object definitions not be registered\n   beneath group definitions,\
    \ compliance statements, capabilities\n   statements, or notification definitions.\
    \  It is also customary (and\n   strongly RECOMMENDED) that group definitions,\
    \ compliance statements,\n   capabilities statements, and notification definitions\
    \ not be\n   registered beneath object definitions.  See Appendix D for a\n  \
    \ RECOMMENDED OID assignment scheme.\n"
- title: 4.6.6.  OID Length Limitations and Table Indexing
  contents:
  - "4.6.6.  OID Length Limitations and Table Indexing\n   As specified in RFC 2578\
    \ Section 3.5, all OIDs are limited to 128\n   sub-identifiers.  While this is\
    \ not likely to cause problems with\n   administrative assignments, it does place\
    \ some limitations on table\n   indexing.  That is true because the length limitation\
    \ also applies to\n   OIDs for object instances, and these consist of the concatenation\
    \ of\n   the \"base\" OID assigned in the object definition plus the index\n \
    \  components.  When a table has multiple indices of types such as OCTET\n   STRING\
    \ or OBJECT IDENTIFIER that resolve to multiple sub-identifiers,\n   then the\
    \ 128-sub-identifier limit can be quickly reached.\n   Despite its inconvenience,\
    \ the 128-sub-identifier limit is not\n   something that can be ignored.  In addition\
    \ to being imposed by the\n   SMI, it is also imposed by the SNMP (see the last\
    \ paragraph in\n   Section 4.1 of RFC 3416 [RFC3416]).  It follows that any table\
    \ with\n   enough indexing components to violate this limit cannot be read or\n\
    \   written using the SNMP and so is unusable.  Hence table design MUST\n   take\
    \ the 128-sub-identifier limit into account.  It is RECOMMENDED\n   that all MIB\
    \ documents make explicit any limitations on index\n   component lengths that\
    \ management software must observe.  This may be\n   done either by including\
    \ SIZE constraints on the index components or\n   by specifying applicable constraints\
    \ in the conceptual row\n   DESCRIPTION clause or in the surrounding documentation.\n"
- title: 4.7.  Notification Definitions
  contents:
  - "4.7.  Notification Definitions\n   RFC 2578 Section 8 specifies the rules for\
    \ notification definitions.\n   In particular:\n   - Inaccessible objects MUST\
    \ NOT appear in the OBJECTS clause.\n   - For each object type mentioned in the\
    \ OBJECTS clause, the\n     DESCRIPTION clause MUST specify which object instance\
    \ is to be\n     present in the transmitted notification and MUST specify the\n\
    \     information/meaning conveyed.\n   - The OBJECT IDENTIFIER (OID) value assigned\
    \ to each notification\n     type MUST have a next-to-last sub-identifier of zero,\
    \ so that it is\n     possible to convert an SMIv2 notification definition into\
    \ an SMIv1\n     trap definition and back again without information loss (see\n\
    \     [RFC3584] Section 2.1.2) and possible for a multilingual proxy\n     chain\
    \ to translate an SNMPv2 trap into an SNMPv1 trap and back\n     again without\
    \ information loss (see [RFC3584] Section 3).  In\n     addition, the OID assigned\
    \ to a notification definition MUST NOT\n     also be assigned to another definition\
    \ that results in OID\n     registration.  RFC 2578 Section 3.6 lists the constructs\
    \ that\n     create OID registrations.\n   Although it is not specifically required\
    \ by the SMI, it is customary\n   (and strongly RECOMMENDED) that notification\
    \ definitions not be\n   registered beneath group definitions, compliance statements,\n\
    \   capabilities statements, or object definitions (this last is\n   especially\
    \ unwise, as it may result in an object instance and a\n   notification definition\
    \ sharing the same OID).  It is also customary\n   (and strongly RECOMMENDED)\
    \ that the OIDs assigned to notification\n   types be leaf OIDs (i.e., that there\
    \ be no OID registrations\n   subordinate to a notification definition).  See\
    \ Appendix D for a\n   RECOMMENDED OID assignment scheme.\n   In many cases, notifications\
    \ will be triggered by external events,\n   and sometimes it will be possible\
    \ for those external events to occur\n   at a sufficiently rapid rate that sending\
    \ a notification for each\n   occurrence would overwhelm the network.  In such\
    \ cases, a mechanism\n   MUST be provided for limiting the rate at which the notification\
    \ can\n   be generated.  A common technique is to require that the notification\n\
    \   generator use throttling -- that is, to require that it generate no\n   more\
    \ than one notification for each event source in any given time\n   interval of\
    \ duration T.  The throttling period T MAY be configurable,\n   in which case\
    \ it is specified in a MIB object, or it MAY be fixed, in\n   which case it is\
    \ specified in the notification definition.  Examples\n   of the fixed time interval\
    \ technique can be found in the SNMP-\n   REPEATER-MIB [RFC2108] and in the ENTITY-MIB\
    \ [RFC4133].\n"
- title: 4.8.  Compliance Statements
  contents:
  - "4.8.  Compliance Statements\n   RFC 2580 Sections 3, 4, and 5 specify the rules\
    \ for conformance\n   groups and compliance statements.  In particular:\n   -\
    \ Every object with a MAX-ACCESS value other than \"not-accessible\"\n     MUST\
    \ be contained in at least one object group.\n   - Every notification MUST be\
    \ contained in at least one notification\n     group.\n   - There MUST be at least\
    \ one compliance statement defined for each\n     \"standard\" MIB module.  It\
    \ may reside either within that MIB module\n     or within a companion MIB module.\n\
    \   In writing compliance statements, there are several points that are\n   easily\
    \ overlooked:\n   - An object group or notification group that is not mentioned\
    \ either\n     in the MANDATORY-GROUPS clause or in any GROUP clause of a MODULE-\n\
    \     COMPLIANCE statement is unconditionally optional with respect to\n     that\
    \ compliance statement.  An alternate way to indicate that an\n     object group\
    \ or notification group is optional is to mention it in\n     a GROUP clause whose\
    \ DESCRIPTION clause states that the group is\n     optional.  The latter method\
    \ is RECOMMENDED (for optional groups\n     that are relevant to the compliance\
    \ statement) in order to make it\n     clear that the optional status is intended\
    \ rather than being the\n     result of an act of omission.\n   - If there are\
    \ any objects with a MAX-ACCESS value of read-write or\n     read-create for which\
    \ there is no OBJECT clause that specifies a\n     MIN-ACCESS of read-only, then\
    \ implementations must support write\n     access to those objects in order to\
    \ be compliant with that MODULE-\n     COMPLIANCE statement.  This fact sometimes\
    \ catches MIB module\n     authors by surprise.  When confronted with such cases,\
    \ reviewers\n     SHOULD verify that this is indeed what the authors intended,\
    \ since\n     it often is not.\n   - On the other side of the coin, MIB module\
    \ authors need to be aware\n     that while a read-only compliance statement is\
    \ sufficient to\n     support interoperable monitoring applications, it is not\
    \ sufficient\n     to support interoperable configuration applications.  A technique\n\
    \     commonly used in MIB modules that are intended to support both\n     monitoring\
    \ and configuration is to provide both a read-only\n     compliance statement\
    \ and a full compliance statement.  A good\n     example is provided by the DIFFSERV-MIB\
    \ [RFC3289].  Authors SHOULD\n     consider using this technique when it is applicable.\n\
    \   Sometimes MIB module authors will want to specify that a compliant\n   implementation\
    \ needs to support only a subset of the values allowed\n   by an object's SYNTAX\
    \ clause.  For accessible objects, this may be\n   done either by specifying the\
    \ required values in an object's\n   DESCRIPTION clause or by providing an OBJECT\
    \ clause with a refined\n   SYNTAX in a compliance statement.  The latter method\
    \ is RECOMMENDED\n   for most cases, and is REQUIRED if there are multiple compliance\n\
    \   statements with different value subsets required.  The DIFFSERV-MIB\n   [RFC3289]\
    \ illustrates this point.  The diffServMIBFullCompliance\n   statement contains\
    \ the following OBJECT clause.  (See Section 4.8.1,\n   \"Note Regarding These\
    \ Examples and RFC 2578\".)\n    OBJECT       diffServDataPathStatus\n    SYNTAX\
    \       RowStatus { active(1) }\n    WRITE-SYNTAX RowStatus { createAndGo(4),\
    \ destroy(6) }\n    DESCRIPTION\n       \"Support for createAndWait and notInService\
    \ is not required.\"\n   whereas the diffServMIBReadOnlyCompliance statement contains\
    \ this:\n    OBJECT       diffServDataPathStatus\n    SYNTAX       RowStatus {\
    \ active(1) }\n    MIN-ACCESS   read-only\n    DESCRIPTION\n       \"Write access\
    \ is not required, and active is the only status that\n       needs to be supported.\"\
    \n   One cannot do this for inaccessible index objects because they cannot\n \
    \  be present in object groups and cannot be mentioned in OBJECT\n   clauses.\
    \  There are situations, however, in which one might wish to\n   indicate that\
    \ an implementation is required to support only a subset\n   of the possible values\
    \ of some index in a read-create table.  In such\n   cases, the requirements MUST\
    \ be specified either in the index\n   object's DESCRIPTION clause (RECOMMENDED\
    \ if there is only one value\n   subset) or in the DESCRIPTION clause of a MODULE-COMPLIANCE\
    \ statement\n   (REQUIRED if the value subset is unique to the compliance statement).\n\
    \   In many cases, a MIB module is always implemented in conjunction with\n  \
    \ one or more other MIB modules.  That fact is REQUIRED to be noted in\n   the\
    \ surrounding documentation (see Section 3.2 above), and it SHOULD\n   also be\
    \ noted in the relevant compliance statements.  In cases where\n   a particular\
    \ compliance statement in (say) MIB module A requires the\n   complete implementation\
    \ of some other MIB module B, then the\n   RECOMMENDED approach is to include\
    \ a statement to that effect in the\n   DESCRIPTION clause of the compliance statement(s)\
    \ in MIB module A.\n   It is also possible, however, that MIB module A might have\n\
    \   requirements that are different from those that are expressed by any\n   compliance\
    \ statement of module B -- for example, module A might not\n   require any of\
    \ the unconditionally mandatory object groups from\n   module B but might require\
    \ mandatory implementation of an object\n   group from module B that is only conditionally\
    \ mandatory with respect\n   to the compliance statement(s) in module B.  In such\
    \ cases, the\n   RECOMMENDED approach is for the compliance statement(s) in module\
    \ A\n   to formally specify requirements with respect to module B via\n   appropriate\
    \ MODULE, MANDATORY-GROUPS, GROUP, and OBJECT clauses.  An\n   example is provided\
    \ by the compliance statements in the DIFFSERV-MIB\n   [RFC3289], which list the\
    \ ifCounterDiscontinuityGroup from IF-MIB\n   [RFC2863] as a mandatory group.\
    \  That group is not sufficient to\n   satisfy any IF-MIB compliance statement,\
    \ and it is conditionally\n   mandatory in the IF-MIB's current compliance statement\
    \ ifCompliance3.\n"
- title: 4.8.1.  Note Regarding These Examples and RFC 2578
  contents:
  - "4.8.1.  Note Regarding These Examples and RFC 2578\n   There has been some dispute\
    \ as to whether syntax refinements that\n   restrict enumerations (RFC 2578 Section\
    \ 9) are permitted with TCs, as\n   shown in the examples above, or are allowed\
    \ only with the base types\n   INTEGER and BITS, as suggested by a strict reading\
    \ of RFC 2578.  The\n   rough consensus of the editors of the SMIv2 documents\
    \ and the current\n   pool of MIB reviewers is that they should be allowed with\
    \ TCs.  MIB\n   module authors should be aware that some MIB compilers follow\
    \ the\n   strict reading of RFC 2578 and require that the TC be replaced by its\n\
    \   base type (INTEGER or BITS) when enumerations are refined.  That\n   usage\
    \ is legal, and it can be found in some older MIB modules such as\n   the IF-MIB\
    \ [RFC2863].\n"
- title: 4.9.  Revisions to MIB Modules
  contents:
  - "4.9.  Revisions to MIB Modules\n   RFC 2578 Section 10 specifies general rules\
    \ that apply any time a MIB\n   module is revised.  Specifically:\n   - The MODULE-IDENTITY\
    \ invocation MUST be updated to include\n     information about the revision.\
    \  In particular, the LAST-UPDATED\n     clause value MUST be set to the revision\
    \ time, a REVISION clause\n     with the same UTC time and an associated DESCRIPTION\
    \ clause\n     describing the changes MUST be added, and any obsolete information\n\
    \     in the existing DESCRIPTION, ORGANIZATION, and CONTACT-INFO clauses\n  \
    \   MUST be replaced with up-to-date information.  See Section 4.5\n     above\
    \ for additional requirements that apply to MIB modules that\n     are under IETF\
    \ change control.\n   - On the other hand, the module name MUST NOT be changed\
    \ (except to\n     correct typographical errors), existing definitions (even obsolete\n\
    \     ones) MUST NOT be removed from the MIB module, and descriptors and\n   \
    \  OBJECT IDENTIFIER values associated with existing definitions MUST\n     NOT\
    \ be changed or re-assigned.\n   It is important to note that the purpose in forbidding\
    \ certain kinds\n   of changes is to ensure that a revised MIB module is compatible\
    \ with\n   fielded implementations based on previous versions of the module.\n\
    \   There are two distinct aspects of this backward-compatibility\n   requirement.\
    \  One is \"over the wire\" compatibility of agent and\n   manager implementations\
    \ that are based on different revisions of the\n   MIB module.  The other is \"\
    compilation\" compatibility with MIB\n   modules that import definitions from\
    \ the revised MIB module.  The\n   rules forbidding changing or re-assigning OBJECT\
    \ IDENTIFIER values\n   are necessary to ensure \"over the wire\" compatibility;\
    \ the rules\n   against changing module names or descriptors or removing obsolete\n\
    \   definitions are necessary to ensure compilation compatibility.\n   RFC 2578\
    \ Section 10.2 specifies rules that apply to revisions of\n   object definitions.\
    \  The following guidelines correct some errors in\n   these rules and provide\
    \ some clarifications:\n   - Bullet (1) allows the labels of named numbers and\
    \ named bits in\n     SYNTAX clauses of type enumerated INTEGER or BITS to be\
    \ changed.\n     This can break compilation compatibility, since those labels\
    \ may be\n     used by DEFVAL clauses in modules that import the definitions of\n\
    \     the affected objects.  Therefore, labels of named numbers and named\n  \
    \   bits MUST NOT be changed when revising IETF MIB modules (except to\n     correct\
    \ typographical errors), and they SHOULD NOT be changed when\n     revising enterprise\
    \ MIB modules.\n   - Although not specifically permitted in bullets (1) through\
    \ (8), it\n     is generally considered acceptable to add range constraints to\
    \ the\n     SYNTAX clause of an integer-valued object, provided that the\n   \
    \  constraints simply make explicit some value restrictions that were\n     implicit\
    \ in the definition of the object.  The most common example\n     is an auxiliary\
    \ object with a SYNTAX of INTEGER or Integer32 with\n     no range constraint.\
    \  Since an auxiliary object is not permitted to\n     assume negative values,\
    \ adding the range constraint (0..2147483647)\n     cannot possibly result in\
    \ any \"over the wire\" change, nor will it\n     cause any compilation compatibility\
    \ problems with a correctly\n     written MIB module.  Such a change SHOULD be\
    \ treated by a reviewer\n     as an editorial change, not as a semantic change.\
    \  Similarly,\n     removal of a range or size constraint from an object definition\n\
    \     when that range or size constraint is enforced by the underlying\n     data\
    \ type SHOULD be treated by a reviewer as an editorial change.\n   RFC 2578 Section\
    \ 10.3 specifies rules that apply to revisions of\n   notification definitions.\
    \  No clarifications or corrections are\n   required.\n   RFC 2579 Section 5 specifies\
    \ rules that apply to revisions of textual\n   convention definitions.  The following\
    \ guideline corrects an error in\n   these rules:\n   - Bullet (1) allows the\
    \ labels of named numbers and named bits in\n     SYNTAX clauses of type enumerated\
    \ INTEGER or BITS to be changed.\n     This can break compilation compatibility,\
    \ since those labels may be\n     used by DEFVAL clauses in modules that import\
    \ the definitions of\n     the affected TCs.  Therefore, labels of named numbers\
    \ and named\n     bits MUST NOT be changed when revising IETF MIB modules (except\
    \ to\n     correct typographical errors), and they SHOULD NOT be changed when\n\
    \     revising enterprise MIB modules.\n   RFC 2580 Section 7.1 specifies rules\
    \ that apply to revisions of\n   conformance groups.  Two point are worth reiterating:\n\
    \   - Objects and notifications MUST NOT be added to or removed from an\n    \
    \ existing object group or notification group.  Doing so could cause\n     a compilation\
    \ failure or (worse) a silent change in the meaning of\n     a compliance statement\
    \ or capabilities statement that refers to\n     that group.\n   - The status\
    \ of a conformance group is independent of the status of\n     its members.  Thus,\
    \ a current group MAY refer to deprecated objects\n     or notifications.  This\
    \ may be desirable in certain cases, e.g., a\n     set of widely-deployed objects\
    \ or notifications may be deprecated\n     when they are replaced by a more up-to-date\
    \ set of definitions, but\n     the conformance groups that contain them may remain\
    \ current in\n     order to encourage continued implementation of the deprecated\n\
    \     objects and notifications.\n   RFC 2580 Section 7.2 specifies rules that\
    \ apply to revisions of\n   compliance statements.  The following guidelines correct\
    \ an omission\n   from these rules and emphasize one important point:\n   - RFC\
    \ 2580 should (but does not) recommend that an OBJECT clause\n     specifying\
    \ support for the original set of values be added to a\n     compliance statement\
    \ when an enumerated INTEGER object or a BITS\n     object referenced by the compliance\
    \ statement has enumerations or\n     named bits added, assuming that no such\
    \ clause is already present\n     and that the effective MIN-ACCESS value is read-write\
    \ or read-\n     create.  This is necessary in order to avoid a silent change\
    \ to the\n     meaning of the compliance statement.  MIB module authors and\n\
    \     reviewers SHOULD watch for this to ensure that such OBJECT clauses\n   \
    \  are added when needed.  Note that this may not always be possible\n     to\
    \ do, since affected compliance statements may reside in modules\n     other than\
    \ the one that contains the revised definition(s).\n   - The status of a compliance\
    \ statement is independent of the status\n     of its members.  Thus, a current\
    \ compliance statement MAY refer to\n     deprecated object groups or notification\
    \ groups.  This may be\n     desirable in certain cases, e.g., a set of widely-deployed\
    \ object\n     or notification groups may be deprecated when they are replaced\
    \ by\n     a more up-to-date set of definitions, but compliance statements\n \
    \    that refer to them may remain current in order to encourage\n     continued\
    \ implementation of the deprecated groups.\n   RFC 2580 Section 7.3 specifies\
    \ rules that apply to revisions of\n   capabilities statements.  The following\
    \ guideline corrects an\n   omission from these rules:\n   - RFC 2580 should (but\
    \ does not) recommend that VARIATION clauses\n     specifying support for the\
    \ original set of values be added to a\n     capabilities statement when enumerated\
    \ INTEGER objects or BITS\n     objects referenced by the capabilities statement\
    \ have enumerations\n     added, assuming that no such clauses are already present.\
    \  This is\n     necessary in order to avoid a silent change to the meaning of\
    \ the\n     capabilities statement.\n   In certain exceptional situations, the\
    \ cost of strictly following the\n   SMIv2 rules governing MIB module revisions\
    \ may exceed the benefit.\n   In such cases, the rules can be waived, but when\
    \ that is done both\n   the change and the justification for it MUST be thoroughly\n\
    \   documented.  One example is provided by Section 3.1.5 of RFC 2863,\n   which\
    \ documents the semantic change that was made to ifIndex in the\n   transition\
    \ from MIB-II [RFC1213] to the IF-MIB [RFC2863] and provides\n   a detailed justification\
    \ for that change.  Another example is\n   provided by the REVISION clause of\
    \ the SONET-MIB [RFC2558] that\n   documents raising the MAX-ACCESS of several\
    \ objects to read-write\n   while adding MIN-ACCESS of read-only for compatibility\
    \ with the\n   previous version [RFC1595].\n   Authors and reviewers may find\
    \ it helpful to use tools that can list\n   the differences between two revisions\
    \ of a MIB module.  Please see\n   http://www.ops.ietf.org/mib-review-tools.html\
    \ for more information.\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   Most of the material on usage of data types was based\
    \ on input\n   provided by Bert Wijnen with assistance from Keith McCloghrie,\
    \ David\n   T. Perkins, and Juergen Schoenwaelder.  Much of the other material\
    \ on\n   SMIv2 usage was taken from an unpublished guide for MIB authors and\n\
    \   reviewers by Juergen Schoenwaelder.  Some of the recommendations in\n   these\
    \ guidelines are based on material drawn from the on-line SMIv2\n   errata list\
    \ at http://www.ibr.cs.tu-bs.de/ietf/smi-errata/.  Thanks\n   to Frank Strauss\
    \ and Juergen Schoenwaelder for maintaining that list\n   and to the contributors\
    \ who supplied the material for that list.\n   Finally, thanks are due to the\
    \ following individuals whose comments\n   on earlier versions of this memo contained\
    \ many valuable suggestions\n   for additions, clarifications, and corrections:\
    \  Andy Bierman, Bob\n   Braden, Michelle Cotton, David Harrington, Harrie Hazewinkel,\n\
    \   Dinakaran Joseph, Michael Kirkham, Keith McCloghrie, David T.\n   Perkins,\
    \ Randy Presuhn, Dan Romascanu, Juergen Schoenwaelder, Frank\n   Strauss, Dave\
    \ Thaler, and Bert Wijnen.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Implementation and deployment of a MIB module\
    \ in a system may result\n   in security risks that would not otherwise exist.\
    \  It is important\n   for authors and reviewers of documents that define MIB\
    \ modules to\n   ensure that those documents fully comply with the guidelines\
    \ in\n   http://www.ops.ietf.org/mib-security.html so that all such risks are\n\
    \   adequately disclosed.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document affects the IANA to the extent that\
    \ it describes what\n   is required to be present in the IANA Considerations section\
    \ of a MIB\n   document, but it does not require that the IANA update any existing\n\
    \   registry or create any new registry.\n"
- title: 'Appendix A:  MIB Review Checklist'
  contents:
  - "Appendix A:  MIB Review Checklist\n   The purpose of a MIB review is to review\
    \ the MIB module both for\n   technical correctness and for adherence to IETF\
    \ documentation\n   requirements.  The following checklist may be helpful when\
    \ reviewing\n   a draft document:\n   1.) I-D Boilerplate -- verify that the draft\
    \ contains the required\n   Internet-Draft boilerplate (see http://www.ietf.org/ietf/1id-\n\
    \   guidelines.txt), including the appropriate statement to permit\n   publication\
    \ as an RFC, and that I-D boilerplate does not contain\n   references or section\
    \ numbers.\n   2.) Abstract -- verify that the abstract does not contain references,\n\
    \   that it does not have a section number, and that its content follows\n   the\
    \ guidelines in http://www.ietf.org/ietf/1id-guidelines.txt.\n   3.) MIB Boilerplate\
    \ -- verify that the draft contains the latest\n   approved SNMP Network Management\
    \ Framework boilerplate from the OPS\n   area web site (http://www.ops.ietf.org/mib-boilerplate.html).\n\
    \   4.) Security Considerations Section -- verify that the draft uses the\n  \
    \ latest approved template from the OPS area web site\n   (http://www.ops.ietf.org/mib-security.html)\
    \ and that the guidelines\n   therein have been followed.\n   5.) IANA Considerations\
    \ Section -- this section must always be\n   present.  If the draft requires no\
    \ action from the IANA, ensure that\n   this is explicitly noted.  If the draft\
    \ requires OID values to be\n   assigned, ensure that the IANA Considerations\
    \ section contains the\n   information specified in Section 3.5 of these guidelines.\
    \  If the\n   draft contains the initial version of an IANA-maintained module,\n\
    \   verify that the MODULE-IDENTITY invocation contains maintenance\n   instructions\
    \ that comply with the requirements in RFC 2434.  In the\n   latter case, the\
    \ IANA Considerations section that will appear in the\n   RFC MUST contain a pointer\
    \ to the actual IANA-maintained module.\n   6.) References -- verify that the\
    \ references are properly divided\n   between normative and informative references,\
    \ that RFC 2119 is\n   included as a normative reference if the terminology defined\
    \ therein\n   is used in the document, that all references required by the\n \
    \  boilerplate are present, that all MIB modules containing imported\n   items\
    \ are cited as normative references, and that all citations point\n   to the most\
    \ current RFCs unless there is a valid reason to do\n   otherwise (for example,\
    \ it is OK to include an informative reference\n   to a previous version of a\
    \ specification to help explain a feature\n   included for backward compatibility).\n\
    \   7.) Copyright Notices -- verify that the draft contains an\n   abbreviated\
    \ copyright notice in the DESCRIPTION clause of each\n   MODULE-IDENTITY invocation\
    \ and that it contains the full copyright\n   notice and disclaimer specified\
    \ in Sections 5.4 and 5.5 of RFC 3978\n   at the end of the document.  Make sure\
    \ that the correct year is used\n   in all copyright dates.\n   8.) IPR Notice\
    \ -- if the draft does not contains a verbatim copy of\n   the IPR notice specified\
    \ in Section 5 of RFC 3979, recommend that the\n   IPR notice be included.\n \
    \  9.) Other Issues -- check for any issues mentioned in\n   http://www.ietf.org/ID-Checklist.html\
    \ that are not covered elsewhere.\n   10.) Technical Content -- review the actual\
    \ technical content for\n   compliance with the guidelines in this document. \
    \ The use of a MIB\n   compiler is recommended when checking for syntax errors;\
    \ see\n   http://www.ops.ietf.org/mib-review-tools.html for more information.\n\
    \   Checking for correct syntax, however, is only part of the job.  It is\n  \
    \ just as important to actually read the MIB document from the point of\n   view\
    \ of a potential implementor.  It is particularly important to\n   check that\
    \ DESCRIPTION clauses are sufficiently clear and unambiguous\n   to allow interoperable\
    \ implementations to be created.\n"
- title: 'Appendix B:  Commonly Used Textual Conventions'
  contents:
  - "Appendix B:  Commonly Used Textual Conventions\n   The following TCs are defined\
    \ in SNMPv2-TC [RFC2579]:\n   DisplayString               OCTET STRING (SIZE (0..255))\n\
    \   PhysAddress                 OCTET STRING\n   MacAddress                  OCTET\
    \ STRING (SIZE (6))\n   TruthValue                  enumerated INTEGER\n   TestAndIncr\
    \                 INTEGER (0..2147483647)\n   AutonomousType              OBJECT\
    \ IDENTIFIER\n   VariablePointer             OBJECT IDENTIFIER\n   RowPointer\
    \                  OBJECT IDENTIFIER\n   RowStatus                   enumerated\
    \ INTEGER\n   TimeStamp                   TimeTicks\n   TimeInterval         \
    \       INTEGER (0..2147483647)\n   DateAndTime                 OCTET STRING (SIZE\
    \ (8 | 11))\n   StorageType                 enumerated INTEGER\n   TDomain   \
    \                  OBJECT IDENTIFIER\n   TAddress                    OCTET STRING\
    \ (SIZE (1..255))\n   Note 1.  InstancePointer is obsolete and MUST NOT be used.\n\
    \   Note 2.  DisplayString does not support internationalized text.  It\n    \
    \        MUST NOT be used for objects that are required to hold\n            internationalized\
    \ text (which is always the case if the\n            object is intended for use\
    \ by humans [RFC2277]).  Designers\n            SHOULD consider using SnmpAdminString,\
    \ Utf8String, or\n            LongUtf8String for such objects.\n   Note 3.  TDomain\
    \ and TAddress SHOULD NOT be used in new MIB modules.\n            The TransportDomain,\
    \ TransportAddressType, and\n            TransportAddress TCs (defined in TRANSPORT-ADDRESS-MIB\n\
    \            [RFC3419]) SHOULD be used instead.\n   The following TC is defined\
    \ in SNMP-FRAMEWORK-MIB [RFC3411]:\n   SnmpAdminString             OCTET STRING\
    \ (SIZE (0..255))\n   The following TCs are defined in SYSAPPL-MIB [RFC2287]:\n\
    \   Utf8String                  OCTET STRING (SIZE (0..255))\n   LongUtf8String\
    \              OCTET STRING (SIZE (0..1024))\n   The following TCs are defined\
    \ in INET-ADDRESS-MIB [RFC4001]:\n   InetAddressType             enumerated INTEGER\n\
    \   InetAddress                 OCTET STRING (SIZE (0..255))\n   InetAddressPrefixLength\
    \     Unsigned32 (0..2040)\n   InetPortNumber              Unsigned32 (0..65535))\n\
    \   InetAutonomousSystemNumber  Unsigned32\n   InetScopeType               enumerated\
    \ INTEGER\n   InetZoneIndex               Unsigned32\n   InetVersion         \
    \        enumerated INTEGER\n   The following TCs are defined in TRANSPORT-ADDRESS-MIB\
    \ [RFC3419]:\n   TransportDomain             OBJECT IDENTIFIER\n   TransportAddressType\
    \        enumerated INTEGER\n   TransportAddress            OCTET STRING (SIZE\
    \ (0..255))\n   The following TC is defined in RMON2-MIB [RFC2021]:\n   ZeroBasedCounter32\
    \          Gauge32\n   The following TCs are defined in HCNUM-TC [RFC2856]:\n\
    \   ZeroBasedCounter64          Counter64\n   CounterBasedGauge64         Counter64\n\
    \   The following TCs are defined in IF-MIB [RFC2863]:\n   InterfaceIndex    \
    \          Integer32 (1..2147483647)\n   InterfaceIndexOrZero        Integer32\
    \ (0..2147483647)\n   The following TCs are defined in ENTITY-MIB [RFC4133]:\n\
    \   PhysicalIndex               Integer32 (1..2147483647)\n   PhysicalIndexOrZero\
    \         Integer32 (0..2147483647)\n   The following TCs are defined in PerfHist-TC-MIB\
    \ [RFC3593]:\n   PerfCurrentCount            Gauge32\n   PerfIntervalCount   \
    \        Gauge32\n   PerfTotalCount              Gauge32\n   The following TCs\
    \ are defined in HC-PerfHist-TC-MIB [RFC3705]:\n   HCPerfValidIntervals      \
    \  Integer32 (0..96)\n   HCPerfInvalidIntervals      Integer32 (0..96)\n   HCPerfTimeElapsed\
    \           Integer32 (0..86399)\n   HCPerfIntervalThreshold     Unsigned32 (0..900)\n\
    \   HCPerfCurrentCount          Counter64\n   HCPerfIntervalCount         Counter64\n\
    \   HCPerfTotalCount            Counter64\n"
- title: 'Appendix C:  Suggested Naming Conventions'
  contents:
  - "Appendix C:  Suggested Naming Conventions\n   Authors and reviewers of IETF MIB\
    \ modules have often found the\n   following naming conventions to be helpful\
    \ in the past, and authors\n   of new IETF MIB modules are urged to consider following\
    \ them.\n   - The module name should be of the form XXX-MIB (or XXX-TC-MIB for\
    \ a\n     module with TCs only), where XXX is a unique prefix (usually all\n \
    \    caps with hyphens for separators) that is not used by any existing\n    \
    \ module.  For example, the module for managing optical interfaces\n     [RFC3591]\
    \ uses the prefix OPT-IF and has module name OPT-IF-MIB.\n   - The descriptor\
    \ associated with the MODULE-IDENTITY invocation\n     should be of the form xxxMIB,\
    \ xxxMib, or xxxMibModule, where xxx is\n     a mixed-case version of XXX starting\
    \ with a lowercase letter and\n     without any hyphens.  For example, the OPT-IF-MIB\
    \ uses the prefix\n     optIf, and the descriptor associated with its MODULE-IDENTITY\n\
    \     invocation is optIfMibModule.\n   - Other descriptors within the MIB module\
    \ should start with the same\n     prefix xxx.  OPT-IF-MIB uses the prefix optIf\
    \ for all descriptors.\n   - Names of TCs that are specific to the MIB module\
    \ and names of\n     SEQUENCE types that are used in conceptual table definitions\
    \ should\n     start with a prefix Xxx that is the same as xxx but with the\n\
    \     initial letter changed to uppercase.  OPT-IF-MIB uses the prefix\n     OptIf\
    \ on the names of TCs and SEQUENCE types.\n   - The descriptor associated with\
    \ a conceptual table should be of the\n     form xxxZzzTable; the descriptor associated\
    \ with the corresponding\n     conceptual row should be of the form xxxZzzEntry;\
    \ the name of the\n     associated SEQUENCE type should be of the form XxxZzzEntry;\
    \ and the\n     descriptors associated with the subordinate columnar objects should\n\
    \     be of the form xxxZzzSomeotherName.  An example from the OPT-IF-MIB\n  \
    \   is the OTMn table.  The descriptor of the table object is\n     optIfOTMnTable,\
    \ the descriptor of the row object is optIfOTMnEntry,\n     the name of the associated\
    \ SEQUENCE type is OptIfOTMnEntry, and the\n     descriptors of the columnar objects\
    \ are optIfOTMnOrder,\n     optIfOTMnReduced, optIfOTMnBitRates, optIfOTMnInterfaceType,\n\
    \     optIfOTMnTcmMax, and optIfOTMnOpticalReach.\n   - When abbreviations are\
    \ used, then they should be used consistently.\n     Inconsistent usage such as\n\
    \       xxxYyyDestAddr\n       xxxZzzDstAddr\n     should be avoided.\n"
- title: 'Appendix D:  Suggested OID Layout'
  contents:
  - "Appendix D:  Suggested OID Layout\n   As noted in RFC 2578 Section 5.6, it is\
    \ common practice to use the\n   value of the MODULE-IDENTITY invocation as a\
    \ subtree under which\n   other OBJECT IDENTIFIER values assigned within the module\
    \ are\n   defined.  That, of course, leaves open the question of how OIDs are\n\
    \   assigned within that subtree.  One assignment scheme that has gained\n   favor\
    \ -- and that is RECOMMENDED unless there is a specific reason\n   not use it\
    \ -- is to have three separate branches immediately below\n   the MODULE-IDENTITY\
    \ value dedicated (respectively) to notification\n   definitions, object definitions,\
    \ and conformance definitions, and to\n   further subdivide the conformance branch\
    \ into separate sub-branches\n   for compliance statements and object/notification\
    \ groups.  This\n   structure is illustrated below, with naming conventions following\n\
    \   those outlined in Appendix C.  The numbers in parentheses are the\n   sub-identifiers\
    \ assigned to the branches.\n         xxxMIB\n         |\n         +-- xxxNotifications(0)\n\
    \         +-- xxxObjects(1)\n         +-- xxxConformance(2)\n             |\n\
    \             +-- xxxCompliances(1)\n             +-- xxxGroups(2)\n   When using\
    \ this scheme, notification definition values are assigned\n   immediately below\
    \ the xxxNotifications node.  This ensures that each\n   OID assigned to a notification\
    \ definition has a next-to-last sub-\n   identifier of zero, which is REQUIRED\
    \ by Section 4.7 above.  The\n   other sub-branches may have additional sub-structure,\
    \ but none beyond\n   that specified in Section 4.6.5 above is actually required.\n\
    \   One example of a MIB module whose OID assignments follow this scheme\n   is\
    \ the POWER-ETHERNET-MIB [RFC3621].\n"
- title: Normative References
  contents:
  - "Normative References\n   [RFC2578]    McCloghrie, K., Perkins, D., Schoenwaelder,\
    \ J., Case,\n                J., Rose, M., and S. Waldbusser, \"Structure of\n\
    \                Management Information Version 2 (SMIv2)\", STD 58, RFC\n   \
    \             2578, April 1999.\n   [RFC2579]    McCloghrie, K., Perkins, D.,\
    \ Schoenwaelder, J., Case,\n                J., Rose, M., and S. Waldbusser, \"\
    Textual Conventions\n                for SMIv2\", STD 58, RFC 2579, April 1999.\n\
    \   [RFC2580]    McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,\n     \
    \           J., Rose, M., and S. Waldbusser, \"Conformance Statements\n      \
    \          for SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC2119]    Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n                Requirements Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2863]    McCloghrie, K. and F. Kastenholz,\
    \ \"The Interfaces Group\n                MIB\", RFC 2863, June 2000.\n   [RFC2864]\
    \    McCloghrie, K. and G. Hanson, \"The Inverted Stack Table\n              \
    \  Extension to the Interfaces Group MIB\", RFC 2864, June\n                2000.\n\
    \   [RFC2434]    Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n \
    \               IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n   \
    \             October 1998.\n   [RFC3978]    Bradner, S., \"IETF Rights in Contributions\"\
    , BCP 78, RFC\n                3978, March 2005.\n   [RFC3979]    Bradner, S.,\
    \ \"Intellectual Property Rights in IETF\n                Technology\", BCP 79,\
    \ RFC 3979, March 2005.\n   [RFC4001]    Daniele, M., Haberman, B., Routhier,\
    \ S., and J.\n                Schoenwaelder, \"Textual Conventions for Internet\
    \ Network\n                Addresses\", RFC 4001, February 2005.\n   [RFC3593]\
    \    Tesink, K., \"Textual Conventions for MIB Modules Using\n               \
    \ Performance History Based on 15 Minute Intervals\", RFC\n                3593,\
    \ September 2003.\n   [RFC3705]    Ray, B. and R. Abbi, \"High Capacity Textual\
    \ Conventions\n                for MIB Modules Using Performance History Based\
    \ on 15\n                Minute Intervals\", RFC 3705, February 2004.\n   [RFC2021]\
    \    Waldbusser, S., \"Remote Network Monitoring Management\n                Information\
    \ Base Version 2 using SMIv2\", RFC 2021,\n                January 1997.\n   [RFC2856]\
    \    Bierman, A., McCloghrie, K., and R. Presuhn, \"Textual\n                Conventions\
    \ for Additional High Capacity Data Types\",\n                RFC 2856, June 2000.\n\
    \   [RFC3411]    Harrington, D., Presuhn, R., and B. Wijnen, \"An\n          \
    \      Architecture for Describing Simple Network Management\n               \
    \ Protocol (SNMP) Management Frameworks\", STD 62, RFC\n                3411,\
    \ December 2002.\n   [RFC2287]    Krupczak, C. and J. Saperia, \"Definitions of\n\
    \                System-Level Managed Objects for Applications\", RFC\n      \
    \          2287, February 1998.\n   [RFC3418]    Presuhn, R., Case, J., McCloghrie,\
    \ K., Rose, M., and S.\n                Waldbusser, \"Management Information Base\
    \ (MIB) for the\n                Simple Network Management Protocol (SNMP)\",\
    \ STD 62, RFC\n                3418, December 2002.\n   [RFC3416]    Presuhn,\
    \ R., Case, J., McCloghrie, K., Rose, M., and S.\n                Waldbusser,\
    \ \"Protocol Operations for the Simple Network\n                Management Protocol\
    \ (SNMP)\", STD 62, RFC 3416, December\n                2002.\n   [RFC4133]  \
    \  Bierman, A. and K. McCloghrie, \"Entity MIB (Version 3)\",\n              \
    \  RFC 4133, August 2005.\n   [RFC2277]    Alvestrand, H., \"IETF Policy on Character\
    \ Sets and\n                Languages\", BCP 18, RFC 2277, January 1998.\n   [RFC3419]\
    \    Daniele, M. and J. Schoenwaelder, \"Textual Conventions\n               \
    \ for Transport Addresses\", RFC 3419, December 2002.\n"
- title: Informative References
  contents:
  - "Informative References\n   [RFC1155]    Rose, M. and K. McCloghrie, \"Structure\
    \ and\n                Identification of Management Information for\n        \
    \        TCP/IP-based Internets\", STD 16, RFC 1155, May 1990.\n   [RFC1212] \
    \   Rose, M. and K. McCloghrie, \"Concise MIB Definitions\",\n               \
    \ STD 16, RFC 1212, March 1991.\n   [RFC1215]    Rose, M., \"A Convention for\
    \ Defining Traps for use with\n                the SNMP\", RFC 1215, March 1991.\n\
    \   [RFC2223bis] Reynolds, J. and R. Braden, \"Instructions to Request for\n \
    \               Comments (RFC) Authors\", Work in Progress, August 2004.\n   [RFC3410]\
    \    Case, J., Mundy, R., Partain, D., and B. Stewart,\n                \"Introduction\
    \ and Applicability Statements for\n                Internet-Standard Management\
    \ Framework\", RFC 3410,\n                December 2002.\n   [RFC2932]    McCloghrie,\
    \ K., Farinacci, D., and D. Thaler, \"IPv4\n                Multicast Routing\
    \ MIB\", RFC 2932, October 2000.\n   [RFC1573]    McCloghrie, K. and F.  Kastenholz,\
    \ \"Evolution of the\n                Interfaces Group of MIB-II\", RFC 1573,\
    \ January 1994.\n   [RFC3621]    Berger, A. and D. Romascanu, \"Power Ethernet\
    \ MIB\", RFC\n                3621, December 2003.\n   [RFC3584]    Frye, R.,\
    \ Levi, D., Routhier, S., and B. Wijnen,\n                \"Coexistence between\
    \ Version 1, Version 2, and Version 3\n                of the Internet-standard\
    \ Network Management Framework\",\n                BCP 74, RFC 3584, August 2003.\n\
    \   [RFC2108]    de Graaf, K., Romascanu, D., McMaster, D., and K.\n         \
    \       McCloghrie, \"Definitions of Managed Objects for IEEE\n              \
    \  802.3 Repeater Devices using SMIv2\", RFC 2108, February\n                1997.\n\
    \   [RFC3289]    Baker, F., Chan, K., and A. Smith, \"Management\n           \
    \     Information Base for the Differentiated Services\n                Architecture\"\
    , RFC 3289, May 2002.\n   [RFC1213]    McCloghrie, K. and M. Rose, \"Management\
    \ Information Base\n                for Network Management of TCP/IP-based internets\
    \ - MIB-\n                II\", STD 17, RFC 1213, March 1991.\n   [RFC1595]  \
    \  Brown, T. and K. Tesink, \"Definitions of Managed Objects\n               \
    \ for the SONET/SDH Interface Type\", RFC 1595, March 1994.\n   [RFC2558]    Tesink,\
    \ K., \"Definitions of Managed Objects for the\n                SONET/SDH Interface\
    \ Type\", RFC 2558, March 1999.\n   [RFC3591]    Lam, H-K., Stewart, M., and A.\
    \ Huynh, \"Definitions of\n                Managed Objects for the Optical Interface\
    \ Type\", RFC\n                3591, September 2003.\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   C. M. Heard\n   158 South Madison Ave. #207\n   Pasadena,\
    \ CA 91101-2569\n   USA\n   Phone: +1 626 795 5311\n   EMail: heard@pobox.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
