- title: __initial_text__
  contents:
  - '                   Sieve Extension: Relational Tests

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the RELATIONAL extension to the Sieve mail\n\
    \   filtering language defined in RFC 3028.  This extension extends\n   existing\
    \ conditional tests in Sieve to allow relational operators.\n   In addition to\
    \ testing their content, it also allows for testing of\n   the number of entities\
    \ in header and envelope fields.\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   Sieve [SIEVE] is a language for filtering e-mail messages\
    \ at the time\n   of final delivery.  It is designed to be implementable on either\
    \ a\n   mail client or mail server.  It is meant to be extensible, simple,\n \
    \  and independent of access protocol, mail architecture, and operating\n   system.\
    \  It is suitable for running on a mail server where users may\n   not be allowed\
    \ to execute arbitrary programs, such as on black box\n   Internet Messages Access\
    \ Protocol (IMAP) servers, as it has no\n   variables, loops, nor the ability\
    \ to shell out to external programs.\n   The RELATIONAL extension provides relational\
    \ operators on the\n   address, envelope, and header tests.  This extension also\
    \ provides a\n   way of counting the entities in a message header or address field.\n\
    \   With this extension, the sieve script may now determine if a field is\n  \
    \ greater than or less than a value instead of just equivalent.  One\n   use is\
    \ for the x-priority field: move messages with a priority\n   greater than 3 to\
    \ the \"work on later\" folder.  Mail could also be\n   sorted by the from address.\
    \  Those userids that start with 'a'-'m' go\n   to one folder, and the rest go\
    \ to another folder.\n   The sieve script can also determine the number of fields\
    \ in the\n   header, or the number of addresses in a recipient field.  For\n \
    \  example:  are there more than 5 addresses in the to and cc fields.\n"
- title: 2 Conventions used in this document
  contents:
  - "2 Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    ,  \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119.\n   Conventions for notations are as in [SIEVE] section\
    \ 1.1, including\n   the use of [KEYWORDS] and \"Syntax:\" label for the definition\
    \ of\n   action and tagged arguments syntax, and the use of [ABNF].\n   The capability\
    \ string associated with extension defined in this\n   document is \"relational\"\
    .\n"
- title: 3 Comparators
  contents:
  - "3 Comparators\n   This document does not define any comparators or exempt any\n\
    \   comparators from the require clause.  Any comparator used, other than\n  \
    \ \"i;octet\" and \"i;ascii-casemap\", MUST be declared a require clause as\n\
    \   defined in [SIEVE].\n   The \"i;ascii-numeric\" comparator, as defined in\
    \ [ACAP], MUST be\n   supported for any implementation of this extension.  The\
    \ comparator\n   \"i;ascii-numeric\" MUST support at least 32 bit unsigned integers.\n\
    \   Larger integers MAY be supported.  Note: the \"i;ascii-numeric\"\n   comparator\
    \ does not support negative numbers.\n"
- title: 4 Match Type
  contents:
  - "4 Match Type\n   This document defines two new match types.  They are the VALUE\
    \ match\n   type and the COUNT match type.\n     The syntax is:\n        MATCH-TYPE\
    \ =/ COUNT / VALUE\n        COUNT = \":count\" relational-match\n        VALUE\
    \ = \":value\" relational-match\n        relational-match = DQUOTE ( \"gt\" /\
    \ \"ge\" / \"lt\"\n                                    / \"le\" / \"eq\" / \"\
    ne\" ) DQUOTE\n"
- title: 4.1  Match Type Value
  contents:
  - "4.1  Match Type Value\n   The VALUE match type does a relational comparison between\
    \ strings.\n   The VALUE match type may be used with any comparator which returns\n\
    \   sort information.\n   Leading and trailing white space MUST be removed from\
    \ the value of\n   the message for the comparison.  White space is defined as\n\
    \                             SP / HTAB / CRLF\n   A value from the message is\
    \ considered the left side of the relation.\n   A value from the test expression,\
    \ the key-list for address, envelope,\n   and header tests, is the right side\
    \ of the relation.\n   If there are multiple values on either side or both sides,\
    \ the test\n   is considered true, if any pair is true.\n"
- title: 4.2  Match Type Count
  contents:
  - "4.2  Match Type Count\n   The COUNT match type first determines the number of\
    \ the specified\n   entities in the message and does a relational comparison of\
    \ the\n   number of entities to the values specified in the test expression.\n\
    \   The COUNT match type SHOULD only be used with numeric comparators.\n   The\
    \ Address Test counts the number of recipients in the specified\n   fields.  Group\
    \ names are ignored.\n   The Envelope Test counts the number of recipients in\
    \ the specified\n   envelope parts.  The envelope \"to\" will always have only\
    \ one entry,\n   which is the address of the user for whom the sieve script is\n\
    \   running.  There is no way a sieve script can determine if the message\n  \
    \ was actually sent to someone else using this test.  The envelope\n   \"from\"\
    \ will be 0 if the MAIL FROM is blank, or 1 if MAIL FROM is not\n   blank.\n \
    \  The Header Test counts the total number of instances of the specified\n   fields.\
    \  This does not count individual addresses in the \"to\", \"cc\",\n   and other\
    \ recipient fields.\n   In all cases, if more than one field name is specified,\
    \ the counts\n   for all specified fields are added together to obtain the number\
    \ for\n   comparison.  Thus, specifying [\"to\", \"cc\"] in an address COUNT test,\n\
    \   comparing the total number of \"to\" and \"cc\" addresses; if separate\n \
    \  counts are desired, they must be done in two comparisons, perhaps\n   joined\
    \ by \"allof\" or \"anyof\".\n"
- title: 5 Security Considerations
  contents:
  - "5 Security Considerations\n   Security considerations are discussed in [SIEVE].\n\
    \   An implementation MUST ensure that the test for envelope \"to\" only\n   reflects\
    \ the delivery to the current user.  It MUST not be possible\n   for a user to\
    \ determine if this message was delivered to someone else\n   using this test.\n"
- title: 6 Example
  contents:
  - "6 Example\n   Using the message:\n      received: ...\n      received: ...\n\
    \      subject: example\n      to: foo@example.com.invalid, baz@example.com.invalid\n\
    \      cc: qux@example.com.invalid\n   The test:\n        address :count \"ge\"\
    \ :comparator \"i;ascii-numeric\" [\"to\", \"cc\"]\n      [\"3\"]\n      would\
    \ be true and the test\n         anyof ( address :count \"ge\" :comparator \"\
    i;ascii-numeric\"\n                         [\"to\"] [\"3\"],\n              \
    \   address :count \"ge\" :comparator \"i;ascii-numeric\"\n                  \
    \       [\"cc\"] [\"3\"] )\n      would be false.\n      To check the number of\
    \ received fields in the header, the\n      following test may be used:\n    \
    \     header :count \"ge\" :comparator \"i;ascii-numeric\"\n                 \
    \       [\"received\"] [\"3\"]\n      This would return false.  But\n        \
    \ header :count \"ge\" :comparator \"i;ascii-numeric\"\n                     \
    \     [\"received\", \"subject\"] [\"3\"]\n      would return true.\n   The test:\n\
    \         header :count \"ge\" :comparator \"i;ascii-numeric\"\n             \
    \          [\"to\", \"cc\"] [\"3\"]\n   will always return false on an RFC 2822\
    \ compliant message [RFC2822],\n   since a message can have at most one \"to\"\
    \ field and at most one \"cc\"\n   field.  This test counts the number of fields,\
    \ not the number of\n   addresses.\n"
- title: 7 Extended Example
  contents:
  - "7 Extended Example\n   require [\"relational\", \"comparator-i;ascii-numeric\"\
    ];\n   if header :value \"lt\" :comparator \"i;ascii-numeric\"\n             [\"\
    x-priority\"] [\"3\"]\n   {\n      fileinto \"Priority\";\n   }\n   elseif address\
    \ :count \"gt\" :comparator \"i;ascii-numeric\"\n              [\"to\"] [\"5\"\
    ]\n   {\n      # everything with more than 5 recipients in the \"to\" field\n\
    \      # is considered SPAM\n      fileinto \"SPAM\";\n   }\n   elseif address\
    \ :value \"gt\" :all :comparator \"i;ascii-casemap\"\n              [\"from\"\
    ] [\"M\"]\n   {\n      fileinto \"From N-Z\";\n   } else {\n      fileinto \"\
    From A-M\";\n   }\n   if allof ( address :count \"eq\" :comparator \"i;ascii-numeric\"\
    \n                      [\"to\", \"cc\"] [\"1\"] ,\n              address :all\
    \ :comparator \"i;ascii-casemap\"\n                      [\"to\", \"cc\"] [\"\
    me@foo.example.com.invalid\"]\n   {\n      fileinto \"Only me\";\n   }\n"
- title: 8 IANA Considerations
  contents:
  - "8 IANA Considerations\n   The following template specifies the IANA registration\
    \ of the Sieve\n   extension specified in this document:\n   To: iana@iana.org\n\
    \   Subject: Registration of new Sieve extension\n   Capability name: RELATIONAL\n\
    \   Capability keyword: relational\n   Capability arguments: N/A\n   Standards\
    \ Track/IESG-approved experimental RFC number: this RFC\n   Person and email address\
    \ to contact for further information:\n    Wolfgang Segmuller\n    IBM T.J. Watson\
    \ Research Center\n    30 Saw Mill River Rd\n    Hawthorne, NY 10532\n    Email:\
    \ whs@watson.ibm.com\n   This information should be added to the list of sieve\
    \ extensions\n   given on http://www.iana.org/assignments/sieve-extensions.\n"
- title: 9 References
  contents:
  - '9 References

    '
- title: 9.1 Normative References
  contents:
  - "9.1 Normative References\n   [SIEVE]     Showalter, T., \"Sieve: A Mail Filtering\
    \ Language\", RFC\n               3028, January 2001.\n   [Keywords]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n               Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [ABNF]      Crocker, D., \"Augmented BNF for\
    \ Syntax Specifications:\n               ABNF\", RFC 2234, November 1997.\n  \
    \ [RFC2822]   Resnick, P., \"Internet Message Format\", RFC 2822, April\n    \
    \           2001.\n"
- title: 9.2 Non-Normative References
  contents:
  - "9.2 Non-Normative References\n   [ACAP]      Newman, C. and J. G. Myers, \"ACAP\
    \ -- Application\n               Configuration Access Protocol\", RFC 2244, November\
    \ 1997.\n"
- title: 10 Author's Address
  contents:
  - "10 Author's Address\n   Wolfgang Segmuller\n   IBM T.J. Watson Research Center\n\
    \   30 Saw Mill River Rd\n   Hawthorne, NY  10532\n   EMail: whs@watson.ibm.com\n"
- title: 11 Full Copyright Statement
  contents:
  - "11 Full Copyright Statement\n   Copyright (C) The Internet Society (2002).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
