- title: __initial_text__
  contents:
  - '        Jitter Considerations in Mobile Ad Hoc Networks (MANETs)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides recommendations for jittering (randomly\n\
    \   modifying timing) of control traffic transmissions in Mobile Ad hoc\n   NETwork\
    \ (MANET) routing protocols to reduce the probability of\n   transmission collisions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Applicability Statement .........................................4\n   4.\
    \ Protocol Overview and Functioning ...............................4\n   5. Jitter\
    \ ..........................................................5\n      5.1. Periodic\
    \ Message Generation ................................5\n      5.2. Externally\
    \ Triggered Message Generation ....................6\n      5.3. Message Forwarding\
    \ .........................................7\n      5.4. Maximum Jitter Determination\
    \ ...............................8\n   6. Security Considerations .........................................9\n\
    \   7. References .....................................................10\n  \
    \    7.1. Normative References ......................................10\n    \
    \  7.2. Informative References ....................................10\n   Appendix\
    \ A. Acknowledgements ......................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In a wireless network, simultaneous packet transmission\
    \ by nearby\n   nodes is often undesirable.  This is because any resulting collision\n\
    \   between these packets may cause a receiving node to fail to receive\n   some\
    \ or all of these packets.  This is a physical problem, which\n   occurs before\
    \ packets can be inserted into the receiver queue.\n   Depending on the characteristics\
    \ of the medium access control and\n   other lower layer mechanisms, in particular\
    \ whether retransmission of\n   unacknowledged packets is supported, this may\
    \ cause at best increased\n   delay, and at worst complete packet loss.  In some\
    \ instances, these\n   problems can be solved in these lower layers, but in other\
    \ instances,\n   some help at the network and higher layers is necessary.\n  \
    \ This document considers the case when that help is required, and\n   provides\
    \ recommendations for using jitter (randomly varying timing)\n   to provide it.\
    \  It is possible that the techniques described here\n   could be implemented\
    \ either by IP protocols designed for wireless\n   networks or in conjunction\
    \ with lower-layer mechanisms.\n   The problems of simultaneous packet transmissions\
    \ are amplified if\n   any of the following features are present in a protocol:\n\
    \   Regularly scheduled messages - If two nodes generate packets\n      containing\
    \ regularly scheduled messages of the same type at the\n      same time, and if,\
    \ as is typical, they are using the same message\n      interval, all further\
    \ transmissions of these messages will thus\n      also be at the same time. \
    \ Note that the following mechanisms may\n      make this a likely occurrence.\n\
    \   Event-triggered messages - If nodes respond to changes in their\n      circumstances,\
    \ in particular changes in their neighborhood, with\n      an immediate message\
    \ generation and transmission, then two nearby\n      nodes that respond to the\
    \ same change will transmit messages\n      simultaneously.\n   Schedule reset\
    \ - When a node sends an event-triggered message of a\n      type that is usually\
    \ regularly scheduled, then there is no\n      apparent reason why it should not\
    \ restart its corresponding\n      message schedule.  This may result in nodes\
    \ responding to the same\n      change also sending future messages simultaneously.\n\
    \   Forwarding - If nodes forward messages they receive from other nodes,\n  \
    \    then nearby nodes will commonly receive and forward the same\n      message.\
    \  If forwarding is performed immediately, then the\n      resulting packet transmissions\
    \ may interfere with each other.\n   A possible solution to these problems is\
    \ to employ jitter, a\n   deliberate random variation in timing.  Such jitter\
    \ is employed in\n   e.g., [2], [3], and [4], in which transmission intervals\
    \ for\n   regularly scheduled messages are reduced by a small, bounded and\n \
    \  random amount in order to desynchronize transmitters and thereby\n   avoid\
    \ overloading the transmission medium as well as receivers.  This\n   document\
    \ discusses and provides recommendations for applying jitter\n   to control packet\
    \ transmissions in Mobile Ad hoc NETworks (MANETs),\n   with the purpose of avoiding\
    \ collisions, with particular reference to\n   the features listed above.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC2119\
    \ [1].\n   Additionally, this document uses the following terminology:\n   Node\
    \ - A MANET router that implements a message sending protocol.\n   MANET interface\
    \ - A network device participating in a MANET.  A node\n      may have one or\
    \ more MANET interfaces.\n   Message - An entity carrying protocol information\
    \ intended for\n      exchange between nodes.  Messages are transmitted over MANET\n\
    \      interfaces embedded in packets.\n   Packet - An entity embedding zero or\
    \ more messages for transmission\n      over a MANET interface of the node.\n\
    \   Transmission - A packet being sent over a MANET interface of the\n      node.\
    \  A transmission can be due to either a message being\n      generated or a message\
    \ being forwarded.\n   Generation - Creation of a new message (rather than a received\
    \ and\n      forwarded message) for transmission over one or more MANET\n    \
    \  interfaces of the node.  Typically, a node will generate messages\n      based\
    \ on a message schedule (periodic or otherwise) or as a\n      response to changes\
    \ in circumstances.\n   Forwarding - Retransmission of a received message (whether\
    \ modified\n      or unchanged) over one or more MANET interfaces of the node.\n\
    \   Collision - A specific instance of interference, where two or more\n     \
    \ nodes transmit a packet at the same time and within the same\n      signal space\
    \ (at the same frequency and/or encoding) such that\n      another, closely located,\
    \ node that should receive and decode\n      these packets instead fails to do\
    \ so, and loses one or more of the\n      packets.\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   The mechanisms described in this document are\
    \ applicable to the\n   control messages of any MANET protocol in which simultaneous\n\
    \   transmissions by different nodes are undesirable, and that contains\n   mechanisms,\
    \ such as periodic control message transmission, triggered\n   control message\
    \ transmission, or control message forwarding, which\n   either make a simultaneous\
    \ transmission more likely, or cause one to\n   be repeated when it occurs.  This\
    \ particularly applies to protocols\n   using broadcast transmissions in wireless\
    \ networks, where proactive\n   MANET routing protocols such as [5] employ scheduled\
    \ messages, where\n   reactive MANET routing protocols such as [6] employ event-triggered\n\
    \   messages, and where both employ message forwarding.\n   These mechanisms are\
    \ intended for application where the underlying\n   medium access control and\
    \ lower layers do not provide effective\n   mechanisms to avoid such collisions.\
    \  Where these layers do provide\n   effective mechanisms, the recommendations\
    \ of this document are not\n   needed.\n   The approach described in this document\
    \ uses random variations in\n   timing to achieve a reduction in collisions. \
    \ Alternatives using, for\n   example, pseudo-random variation based on node identity,\
    \ may be\n   considered, but are not discussed by this document.\n   Any protocol\
    \ based on [7] and using the message forwarding mechanism\n   facilitated by that\
    \ structure is a particular candidate for\n   application of at least some of\
    \ these mechanisms.\n   The document has been generalized from the jitter mechanism\
    \ used in\n   the proactive MANET routing protocol OLSR (the Optimized Link State\n\
    \   Routing Protocol) [5].\n"
- title: 4.  Protocol Overview and Functioning
  contents:
  - "4.  Protocol Overview and Functioning\n   This document provides recommendations\
    \ for message transmission (and\n   retransmission) that may be used by MANET\
    \ routing protocols.  It may\n   also be used by other protocols that employ a\
    \ periodic or triggered\n   message schedule running over wireless interfaces.\
    \  Using such\n   simultaneous message transmissions from two (or more) adjacent\
    \ nodes\n   may cause delays, packet losses, and other problems.  Any protocol\n\
    \   using jitter as outlined here must specify its precise usage insofar\n   as\
    \ is necessary for interoperability.\n"
- title: 5.  Jitter
  contents:
  - "5.  Jitter\n   In order to prevent nodes in a MANET from simultaneous transmission,\n\
    \   whilst retaining the MANET characteristic of maximum node autonomy, a\n  \
    \ randomization of the transmission time of packets by nodes, known as\n   jitter,\
    \ SHOULD be employed.  Three jitter mechanisms, which target\n   different aspects\
    \ of this problem, SHOULD be employed, with the aim\n   of reducing the likelihood\
    \ of simultaneous transmission, and, if it\n   occurs, preventing it from continuing.\n\
    \   Three cases exist:\n   o  Periodic message generation;\n   o  Externally triggered\
    \ message generation;\n   o  Message forwarding.\n   For the first of these cases,\
    \ jitter is used to reduce the interval\n   between successive message transmission\
    \ by a random amount; for the\n   latter two cases, jitter is used to delay a\
    \ message being generated\n   or forwarded by a random amount.\n   Each of these\
    \ cases uses a parameter, denoted MAXJITTER, for the\n   maximum timing variation\
    \ that it introduces.  If more than one of\n   these cases is used by a protocol,\
    \ it MAY use the same or a different\n   value of MAXJITTER for each case.  It\
    \ also MAY use the same or\n   different values of MAXJITTER according to message\
    \ type, and under\n   different circumstances -- in particular if other parameters\
    \ (such as\n   message interval) vary.\n   Issues relating to the value of MAXJITTER\
    \ are considered in Section\n   5.4.\n"
- title: 5.1.  Periodic Message Generation
  contents:
  - "5.1.  Periodic Message Generation\n   When a node generates a message periodically,\
    \ two successive messages\n   will be separated by a well-defined interval, denoted\n\
    \   MESSAGE_INTERVAL.  A node MAY maintain more than one such interval,\n   e.g.,\
    \ for different message types or in different circumstances (such\n   as backing\
    \ off transmissions to avoid congestion).  Jitter SHOULD be\n   applied by reducing\
    \ this delay by a random amount, so that the delay\n   between consecutive transmissions\
    \ of messages of the same type is\n   equal to (MESSAGE_INTERVAL - jitter), where\
    \ jitter is the random\n   value.\n   Subtraction of the random value from the\
    \ message interval ensures\n   that the message interval never exceeds MESSAGE_INTERVAL,\
    \ and does\n   not adversely affect timeouts or other mechanisms that may be based\n\
    \   on message late arrival or failure to arrive.  By basing the message\n   transmission\
    \ time on the previous transmission time, rather than by\n   jittering a fixed\
    \ clock, nodes can become completely desynchronized,\n   which minimizes their\
    \ probability of repeated collisions.  This is\n   particularly useful when combined\
    \ with externally triggered message\n   generation and rescheduling.\n   The jitter\
    \ value SHOULD be generated uniformly in an interval between\n   zero and MAXJITTER.\n\
    \   Note that a node will know its own MESSAGE_INTERVAL value and can\n   readily\
    \ ensure that any MAXJITTER value used satisfies the conditions\n   in Section\
    \ 5.4.\n"
- title: 5.2.  Externally Triggered Message Generation
  contents:
  - "5.2.  Externally Triggered Message Generation\n   An internal or external condition\
    \ or event may trigger message\n   generation by a node.  Depending upon the protocol,\
    \ this condition\n   may trigger generation of a single message (including, but\
    \ not\n   limited to, an acknowledgement message), initiation of a new periodic\n\
    \   message schedule, or rescheduling of existing periodic messaging.\n   Collision\
    \ between externally triggered messages is made more likely\n   if more than one\
    \ node is likely to respond to the same event.  To\n   reduce this likelihood,\
    \ an externally triggered message SHOULD be\n   jittered by delaying it by a random\
    \ duration; an internally triggered\n   message MAY also be so jittered if appropriate.\
    \  This delay SHOULD be\n   generated uniformly in an interval between zero and\
    \ MAXJITTER.  If\n   periodically transmitted messages are rescheduled, then this\
    \ SHOULD\n   be based on this delayed time, with subsequent messages treated as\n\
    \   described in Section 5.1.\n   When messages are triggered, whether or not\
    \ they are also\n   periodically transmitted, a protocol MAY impose a minimum\
    \ interval\n   between messages of the same type, denoted MESSAGE_MIN_INTERVAL.\
    \  In\n   the case that such an interval is not required, MESSAGE_MIN_INTERVAL\n\
    \   is considered to be zero.  When MESSAGE_MIN_INTERVAL is non-zero, it\n   is\
    \ however appropriate to also allow this interval to be reduced by\n   jitter.\
    \  Thus, when a message is transmitted, the next message is\n   allowed after\
    \ a time (MESSAGE_MIN_INTERVAL - jitter).  This jitter\n   SHOULD be generated\
    \ uniformly in an interval between zero and\n   MAXJITTER (using a value of MAXJITTER\
    \ appropriate to periodic message\n   transmission).\n   It might appear counterintuitive\
    \ to have a defined\n   MESSAGE_MIN_INTERVAL, yet allow this to be reduced by\
    \ jittering.  For\n   periodic messages, setting MESSAGE_INTERVAL, MAXJITTER and\n\
    \   MESSAGE_MIN_INTERVAL such that (MESSAGE_INTERVAL-MAXJITTER) >\n   MESSAGE_MIN_INTERVAL\
    \ would ensure at least MESSAGE_MIN_INTERVAL would\n   elapse between two subsequent\
    \ message transmissions.  In a highly\n   dynamic network with triggered messages,\
    \ however, external\n   circumstances might be such that external triggers are\
    \ more frequent\n   than MESSAGE_MIN_INTERVAL, effectively making MESSAGE_MIN_INTERVAL\n\
    \   take the role of MESSAGE_INTERVAL as the \"default\" interval at which\n \
    \  messages are transmitted.  Thus, in order to avoid synchronization in\n   this\
    \ highly dynamic case, jittering SHOULD be applied to\n   MESSAGE_MIN_INTERVAL.\
    \  This also permits MESSAGE_MIN_INTERVAL to\n   equal MESSAGE_INTERVAL, even\
    \ when jitter is used.\n   When a triggered message is delayed by jitter, the\
    \ node MAY also\n   postpone generation of the triggered message.  If a node is\
    \ then\n   triggered to generate a message of the same type while waiting, it\n\
    \   can generate a single message.  If however the node generates a\n   message\
    \ when it is triggered, and then receives a another trigger\n   while waiting\
    \ to send that message, then the appropriate action to\n   take is protocol specific\
    \ (typically to discard the earlier message\n   or to transmit both, possibly\
    \ modifying timing to maintain message\n   order).\n"
- title: 5.3.  Message Forwarding
  contents:
  - "5.3.  Message Forwarding\n   When a node forwards a message, it SHOULD be jittered\
    \ by delaying it\n   by a random duration.  This delay SHOULD be generated uniformly\
    \ in an\n   interval between zero and MAXJITTER.\n   Unlike the cases of periodically\
    \ generated and externally triggered\n   messages, a node is not automatically\
    \ aware of the message\n   originator's value of MESSAGE_INTERVAL, which is required\
    \ to select a\n   value of MAXJITTER that is known to be valid.  This may require\
    \ prior\n   agreement as to the value (or minimum value) of MESSAGE_INTERVAL,\
    \ may\n   be by inclusion in the message of MESSAGE_INTERVAL (the time until\n\
    \   the next relevant message, rather than the time since the last\n   message)\
    \ or be by any other protocol specific mechanism, which may\n   include estimation\
    \ of the value of MESSAGE_INTERVAL based on received\n   message times.\n   For\
    \ several possible reasons (differing parameters, message\n   rescheduling, extreme\
    \ random values), a node may receive a message\n   while still waiting to forward\
    \ an earlier message of the same type\n   originating from the same node.  This\
    \ is possible without jitter, but\n   may occur more often with it.  The appropriate\
    \ action to take is\n   protocol-specific (typically, to discard the earlier message\
    \ or to\n   forward both, possibly modifying timing to maintain message order).\n\
    \   In many cases, including [5] and protocols using the full\n   functionality\
    \ of [7], messages are transmitted hop-by-hop in\n   potentially multi-message\
    \ packets, and some or all of those messages\n   may need to be forwarded.  For\
    \ efficiency, this SHOULD be in a single\n   packet, and hence the forwarding\
    \ jitter of all messages received in a\n   single packet SHOULD be the same. \
    \ (This also requires that a single\n   value of MAXJITTER is used in this case.)\
    \  For this to have the\n   intended uniform distribution, it is necessary to\
    \ choose a single\n   random jitter for all messages.  It is not appropriate to\
    \ give each\n   message a random jitter and then to use the smallest of these\
    \ jitter\n   values, as that produces a jitter with a non-uniform distribution\
    \ and\n   a reduced mean value.\n   In addition, the protocol MAY permit control\
    \ messages received in\n   different packets to be combined, possibly also with\
    \ locally\n   generated control messages (periodically generated or triggered),\
    \ as\n   supported by [7].  However, in this case, the purpose of the jitter\n\
    \   will be accomplished by choosing any of the independently scheduled\n   times\
    \ for these events as the single forwarding time; this may have\n   to be the\
    \ earliest time to achieve all constraints.  This is because\n   without combining\
    \ messages, a transmission would be due at this time\n   anyway.\n"
- title: 5.4.  Maximum Jitter Determination
  contents:
  - "5.4.  Maximum Jitter Determination\n   In considering how the maximum jitter\
    \ (one or more instances of\n   parameter MAXJITTER) may be determined, the following\
    \ points may be\n   noted:\n   o  While jitter may resolve the problem of simultaneous\n\
    \      transmissions, the timing changes (in particular the delays) it\n     \
    \ introduces will otherwise typically have a negative impact on a\n      well-designed\
    \ protocol.  Thus, MAXJITTER SHOULD always be\n      minimized, subject to acceptably\
    \ achieving its intent.\n   o  When messages are periodically generated, all of\
    \ the following\n      that are relevant apply to each instance of MAXJITTER:\n\
    \         *  it MUST NOT be negative;\n         *  it MUST NOT be greater than\
    \ MESSAGE_INTERVAL/2;\n         *  it SHOULD NOT be greater than MESSAGE_INTERVAL/4.\n\
    \   o  If MESSAGE_MIN_INTERVAL > 0, then:\n         *  MAXJITTER MUST NOT be greater\
    \ than MESSAGE_MIN_INTERVAL;\n         *  MAXJITTER SHOULD NOT be greater than\
    \ MESSAGE_MIN_INTERVAL/2.\n   o  As well as the decision as to whether to use\
    \ jitter being\n      dependent on the medium access control and lower layers,\
    \ the\n      selection of the MAXJITTER parameter SHOULD be appropriate to\n \
    \     those mechanisms.  For example, MAXJITTER should be significantly\n    \
    \  greater than (e.g., an order of magnitude greater than) any medium\n      access\
    \ control frame period.\n   o  As jitter is intended to reduce collisions, greater\
    \ jitter, i.e.,\n      an increased value of MAXJITTER, is appropriate when the\
    \ chance of\n      collisions is greater.  This is particularly the case with\n\
    \      increased node density, which is significant relative to (the\n      square\
    \ of) the interference range rather than useful signal range.\n   o  The choice\
    \ of MAXJITTER used when forwarding messages MAY also\n      take into account\
    \ the expected number of times that the message\n      may be sequentially forwarded,\
    \ up to the network diameter in hops,\n      so that the maximum accumulated delay\
    \ is bounded.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document provides recommendations for mechanisms\
    \ to be used in\n   protocols; full security considerations are to be provided\
    \ by those\n   protocols, rather than in this document.\n   It may however be\
    \ noted that introduction of random timing by these\n   recommendations may provide\
    \ some security advantage to such a\n   protocol in that it makes the prediction\
    \ of transmission times, and\n   thereby intentional interference with a protocol\
    \ functioning through\n   selectively scheduling jamming transmissions to coincide\
    \ with\n   protocol message transmissions, more difficult.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [2]  Moy, J., \"OSPF Database Overflow\", RFC\
    \ 1765, March 1995.\n   [3]  Marlow, D., \"Host Group Extensions for CLNP Multicasting\"\
    , RFC\n        1768, March 1995.\n   [4]  Rekhter, Y., Ed., Li, T., Ed., and S.\
    \ Hares, Ed., \"A Border\n        Gateway Protocol 4 (BGP-4)\", RFC 4271, January\
    \ 2006.\n   [5]  Clausen, T., Ed., and P. Jacquet, Ed., \"Optimized Link State\n\
    \        Routing Protocol (OLSR)\", RFC 3626, October 2003.\n   [6]  Perkins,\
    \ C., Belding-Royer, E., and S. Das, \"Ad hoc On-Demand\n        Distance Vector\
    \ (AODV) Routing\", RFC 3561, July 2003.\n   [7]  Clausen, T., Dearlove, C., Dean,\
    \ J., and C. Adjih, \"Generalized\n        MANET Packet/Message Format\", Work\
    \ in Progress.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   The authors would like to acknowledge the MANET\
    \ working group and the\n   OLSRv2 Design team, in particular Joe Macker and Justin\
    \ Dean (both\n   NRL), for their contributions and discussions in developing and\n\
    \   testing the concepts retained in this document, and Alan Cullen (BAE\n   Systems)\
    \ for his careful review of this specification.  OLSRv1, as\n   specified in [5],\
    \ introduced the concept of jitter on control\n   traffic, which was tested thoroughly\
    \ by Gitte Hansen and Lars\n   Christensen (then, both Aalborg University).\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Heide Clausen\n   LIX, Ecole Polytechnique, France\n\
    \   Phone: +33 6 6058 9349\n   EMail: T.Clausen@computer.org\n   URI:   http://www.ThomasClausen.org/\n\
    \   Christopher Dearlove\n   BAE Systems Advanced Technology Centre\n   Phone:\
    \ +44 1245 242194\n   EMail: chris.dearlove@baesystems.com\n   URI:   http://www.baesystems.com/\n\
    \   Brian Adamson\n   U.S. Naval Research Laboratory\n   Phone: +1 202 404 1194\n\
    \   EMail: adamson@itd.nrl.navy.mil\n   URI:   http://www.nrl.navy.mil/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
