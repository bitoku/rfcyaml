- title: __initial_text__
  contents:
  - "                 A Plan for Internet Directory Services\n                   \
    \        Table of Contents\n   1. Introduction                               \
    \                   1\n        1.1. The Issues                               \
    \              1\n        1.2. Project Summary                               \
    \         3\n   2. Goals and Requirements for a White Pages Service          \
    \    6\n   3. Pre-existing Services                                         9\n\
    \   4. Proposed Approach                                            11\n     \
    \   4.1. Stage 1: The Field Test                               12\n        4.2.\
    \ Stage 2: Implementation                               17\n        4.3. Stage\
    \ 3: Deployment                                   17\n   5. Conclusion       \
    \                                            18\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo proposes a program to develop a directory service\
    \ for the\n   Internet.  It reports the results of a meeting held in February\
    \ 1989,\n   which was convened to review requirements and options for such a\n\
    \   service.  This proposal is offered for comment, and does not\n   represent\
    \ a committed research activity of the Internet community.\n   Activity in this\
    \ area is anticipated, and comments should be provided\n   promptly.  Distribution\
    \ of this memo is unlimited.\n"
- title: 1. Introduction
  contents:
  - '1. Introduction

    '
- title: 1.1. The Issues
  contents:
  - "1.1. The Issues\n   As part of the planned growth of the Internet (in particular,\
    \ in\n   support of the full science research community in the U.S.), an\n   increasing\
    \ need is anticipated for various sorts of directory\n   services.  The increase\
    \ in the size of the community served by the\n   Internet and the burgeoning demands\
    \ for electronic mail lead to the\n   need for a service to find people's computer\
    \ mailboxes and other\n   relevant facts, a so-called \"White Pages\" service.\
    \  At the user level\n   to date, there have been no such national or international\
    \ white\n   pages services in general use.  As part of building the National\n\
    \   Research Network (NRN), it is important that such a service exist,\n   not\
    \ only within the NRN community, but also crossing the boundaries\n   from the\
    \ NRN to the more global network community.  This will enhance\n   communication\
    \ not only among computer scientists, but also among\n   scientists and engineers\
    \ in other fields as well.  Also important and\n   related is a so-called \"Yellow\
    \ Pages\" service, which permits the\n   location of Internet resources based\
    \ on their attributes.\n   A \"White Pages\" service is one in which one can look\
    \ up people in\n   order to learn information about them for finding them.  In\
    \ its\n   simplest form, a white pages service provides what the white pages\n\
    \   telephone book provides.  Based on a name, one can find an address\n   and\
    \ a telephone number.  In a network environment, there may be many\n   other kinds\
    \ of location information, such as electronic mailbox,\n   electronic calendar,\
    \ or file server, where one might leave a file for\n   the recipient.  In addition,\
    \ the electronic white pages may support a\n   much more sophisticated set of\
    \ mechanisms for lookup.  One might\n   match on a more complex set of attributes\
    \ than first and last name.\n   In addition, the searching might span more than\
    \ one local white pages\n   service.  There are a number of naming and directory\
    \ service\n   specifications and implementations in the field.  They have differing\n\
    \   functionality and mechanisms to address that functionality.\n   Within the\
    \ the world of networking today, there are a number of\n   partial solutions to\
    \ the directory service problem.  Examples of\n   these are the Internet Domain\
    \ Naming Service (DNS), Clearinghouse,\n   DECnet Network Architecture Naming\
    \ Service (DNANS), Profile, and\n   X.500.  The Domain Naming Service provides\
    \ a directory service most\n   commonly used for host naming and mail delivery.\
    \  Clearinghouse and\n   DNANS are respectively the Xerox and DEC corporate naming\
    \ services,\n   originally for mail delivery, although having other uses as well,\
    \ in\n   both cases.  Profile is part of the work of Larry Peterson to explore\n\
    \   descriptive naming in a non-hierarchical structure.\n   There is a CCITT recommendation\
    \ X.500 (ISO DIS 9594), which defines a\n   general directory service.  One of\
    \ its primary goals is the naming\n   service needed for message handling (X.400).\
    \  While X.500 is still\n   developing, and would need further evolution to cover\
    \ all the\n   requirements of a service for the Internet, it will have an important\n\
    \   impact on the Internet community.  It will form the basis of\n   commercial\
    \ products, and it will almost certainly be the directory\n   service of many\
    \ parts of the network world, which implies a need to\n   interoperate at a minimum.\
    \  There is some concern that despite the\n   fact that X.500 is a recognized\
    \ standard, there are a number of gaps\n   and limitations of the approach, that\
    \ in turn will cause it to be\n   inadequate for the needs of the NRN.\n   In\
    \ this context, a meeting was held to review current requirements\n   and solutions\
    \ for directory services.  This RFC reports the results\n   of that meeting, including\
    \ the possibilities for a program of work in\n   this area.\n   For two days,\
    \ a group representing academic, commercial, and\n   government interests in directory\
    \ services discussed both alternative\n   candidates for a white pages service\
    \ and the issues in building any\n   such service.  The meeting was kept small\
    \ by inviting only a small\n   number of representatives of each perspective.\
    \  By the conclusion of\n   the second day, a consensus was reached on how one\
    \ could achieve a\n   white pages service in three years.  This is summarized\
    \ in the next\n   section.\n"
- title: 1.2. Project Summary
  contents:
  - "1.2. Project Summary\n   The consensus of the meeting can be summarized in the\
    \ following five\n   points:\n      1. The standards and implementations are close\
    \ enough to being\n         complete that it is reasonable to undertake provision\
    \ of an NRN\n         \"White Pages\" service.\n      2. Although we are close,\
    \ an effort is needed to experiment with\n         different levels of service,\
    \ to flesh out the standards, and to\n         develop code.\n      3. An initial\
    \ evaluation experiment is needed before making final\n         detailed plans\
    \ for a production version of the service.\n      4. With strong funding and encouragement,\
    \ a production service is\n         possible in three years.\n      5. It is important\
    \ to act now to provide a coherent solution.\n         This means both having\
    \ an impact on the evolving standards\n         and providing a unified, wide-spread\
    \ solution before a plethora\n         of differing solutions appear.\n   Although\
    \ it has clearcut drawbacks, X.500 was identified as the most\n   likely candidate\
    \ directory service.  The reasons for this are that it\n   has rich semantics\
    \ and is becoming the accepted international\n   standard.  However, there are\
    \ problems with its incompleteness and\n   with its strict hierarchy.  Therefore,\
    \ in order to explore these and\n   become convinced of its viability, the consensus\
    \ at the meeting was\n   to propose field trials, as the project's first stage.\
    \  The field\n   trials would be limited in the user community, perhaps restricted\
    \ to\n   computer science departments because of their familiarity with the\n\
    \   problems, and would be based on experimental or new software.  They\n   would\
    \ include experiments with at least an X.500 implementation,\n   Profile, and\
    \ DNANS.  Each of these services has strong points that\n   must be considered\
    \ as part of the evaluation.  They are:\n      X.500:  International standard,\
    \ hierarchy, search rules and\n              filters for searching attributed\
    \ based names.\n      Profile:  Descriptive naming with a richer semantics for\n\
    \                describing search criteria, an arbitrary network\n          \
    \      of servers.\n      DNANS:  Access control, replication, caching, hierarchy.\n\
    \   In summary, the plan would fall into three stages as follows:\n      - Stage\
    \ 1:  Field Trials.\n         There are two aspects to the field trials.  The\
    \ first is to\n         explore several different architectures for a white pages\n\
    \         service.  To this end, implementations of X.500, Profile, and\n    \
    \     DNANS should be included.  The second aspect of the field\n         trials\
    \ is to distinguish issues inherent in the X.500\n         specification from\
    \ artifacts of a particular implementation of\n         it.  Therefore, if possible,\
    \ two implementations of X.500\n         should be included.  Only one such implementation,\
    \ Quipu, was\n         identified as developed enough to be included in a field\
    \ trial\n         at present, but others are under way, and will follow.  This\n\
    \         stage must also include a careful and objective review of the\n    \
    \     field trials.\n      - Stage 2:  Implementation.\n         This stage will\
    \ include work on both the service and user\n         interfaces.  The field trials\
    \ could result in one of a variety\n         of conclusions about the service.\
    \  These may range from\n         concluding that one or another of the services\
    \ suits the needs\n         of the NRN to proposing a compromise position based\
    \ on a\n         combination of shortcomings of any one service and the features\n\
    \         of others to address those shortcomings.  Because X.500 will\n     \
    \    become the standard in other domains, an interface to X.500\n         will\
    \ be necessary.  Since all of these implementations are\n         still under\
    \ development, in order to provide production quality\n         code, more implementation\
    \ work will be needed.\n         Although some work will have been done on the\
    \ user interfaces,\n         much more will be needed in this stage to provide\
    \ a variety of\n         interfaces.  Much emphasis should be placed on this in\
    \ Stage 2.\n      - Stage 3:  Deployment.\n         Deployment of the full white\
    \ pages service requires information\n         gathering in order to fill the\
    \ directory service, placement of\n         servers, distribution of and training\
    \ for use of client code,\n         placement and management of services, and\
    \ delegation of\n         authority within the service for authority over the\
    \ contents.\n         Data collection and some delegation of authority as well\
    \ as\n         training for users of the client code would begin during the\n\
    \         field trial.  This stage would begin concurrently with the\n       \
    \  other two.  During the second year, detailed planning for\n         deployment\
    \ must take place.  This stage would conclude in three\n         years, at which\
    \ time widespread deployment would have occurred.\n   In order to undertake this\
    \ three stage program effectively, the group\n   identified the following major\
    \ projects:\n      - Further implementation of code for the field trials.\n  \
    \       In each case (e.g., Quipu, Profile, and DNANS), programs exist,\n    \
    \     although modifications are likely to be necessary.  For\n         example,\
    \ each will need to be modified to utilize the common\n         file format into\
    \ which the input data about users will be\n         gathered.\n      - Design,\
    \ development and evaluation of user interfaces.\n      - Design and development\
    \ of data gathering and management tools.\n      - Oversight and evaluation of\
    \ the field trials.\n         Careful thought and planning must go into the field\
    \ trials, to\n         guarantee that we learn what is needed to make an evaluation\n\
    \         and to plan for the white pages service.  The evaluation must\n    \
    \     also produce a document that is both a general specification\n         (assuming\
    \ no one alternative is chosen wholesale) and profiling\n         information,\
    \ in order for later interoperability and\n         conformance testing.\n   \
    \   - Detailed planning and later management of deployment.\n         This includes\
    \ delegation of authority over parts of the\n         namespace and arbitrating\
    \ the shape of the namespace\n         (addressing the questions about who gets\
    \ what sorts of names).\n         This is in addition to the continued and extended\
    \ data\n         collection and management, distributing the data, placing the\n\
    \         code, documentation and user education.\n      - Standards participation\
    \ is an important part of the program.\n         It is critical as X.500 changes\
    \ during the next 4 year study\n         period that the United States take a\
    \ strong stand on any\n         changes we envision.  It is encumbant on us to\
    \ utilize\n         effectively the results of the largest field trials of this\n\
    \         work in the international arena.  The group agreed that this\n     \
    \    could take up to one half of one person's time in a year.\n      - A task\
    \ force or working group is necessary to provide a forum\n        for communication\
    \ and discussion.\n   It is important to pursue this path now, both to architect\
    \ a unified\n   solution before a collection of ad hoc solutions is deployed,\
    \ and to\n   provide effective input into the X.500 standards work based on the\n\
    \   field trials.\n"
- title: 2. Goals and Requirements for a White Pages Service
  contents:
  - "2. Goals and Requirements for a White Pages Service\n   The requirements of a\
    \ white pages service are the following:\n      - Functionality:\n         The\
    \ simple form of a white pages service is straightforward;\n         one should\
    \ be able to query the service with the name of a\n         person, and have returned\
    \ attributes of the person such as\n         network mail address and phone number.\n\
    \      - Correctness of information:\n         The information in a white pages\
    \ service is useless and\n         untrusted if it is not updated regularly. \
    \ A white pages\n         service will not be used, if the information it provides\
    \ is out\n         of date or incorrect.  This will require a set of management\n\
    \         tools.  Data integrity is an especially difficult challenge in\n   \
    \      this area, in contrast with information that is syntactically\n       \
    \  correct.\n      - Size:\n         The science and research community has been\
    \ estimated at ten\n         million users.  The number of organizations in the\
    \ United\n         States is on the order of ten to one hundred thousand.\n  \
    \    - Usage and query rate:\n         In comparison with the typical telephone\
    \ book pattern of about\n         one lookup a week per person, users of electronic\
    \ mail in the\n         science and research community will send more electronic\
    \ mail\n         messages than they currently make phone calls, leading to an\n\
    \         estimate of ten searches a week per user for electronic as well\n  \
    \       as paper mail and telephone information.  This leads to a query\n    \
    \     rate of 10**8 queries per week or 170 per second on average,\n         with\
    \ much higher peak rates.  The average could probably be\n         handled by\
    \ a single server, but not the peak rates and this\n         would leave little\
    \ room for growth.  Therefore, a distributed,\n         multiple server solution\
    \ is the only one that make sense.\n      - Response time:\n         The issue\
    \ of overall query behavior must be considered\n         carefully.  The issue\
    \ arises when queries, in particular\n         searches, are not limited to tightly\
    \ constrained sets of\n         entries.  Since the number of queries generated\
    \ will be\n         proportional to the number of users (and the size of the\n\
    \         system), the white pages design must avoid costs per query that\n  \
    \       are related to the size of the system.  The consequence,\n         otherwise,\
    \ will be quadratic behavior in response time.\n         The response time of\
    \ the service must also reflect the expected\n         usage.  A phone book style\
    \ query must respond in the waiting\n         time tolerable to a user, perhaps\
    \ ten seconds maximum, or one\n         second desirable.  If the service is incorporated\
    \ as a\n         component of a larger service, then the needs of that service\n\
    \         determine the response time.\n      - Partitioned Authority:\n     \
    \    The white pages service under discussion would be used by a\n         wide\
    \ variety of organizations, ranging from small and large\n         companies,\
    \ to network service providers, to government\n         agencies.  Many of these\
    \ would find it unacceptable to delegate\n         the authority over their namespaces\
    \ to some other organization.\n         Therefore, partitioned authority including\
    \ some access control,\n         name assignment, and information management must\
    \ be possible.\n      - Access Control:\n         The access control required\
    \ by the white pages falls into two\n         categories, read access control,\
    \ and write or modify access\n         control.  There are at least two reasons\
    \ that read access\n         control must be available.  One is that organizations\
    \ may\n         require limiting the access to the actual entries or parts of\n\
    \         them.  This would be comparable to organizations not being\n       \
    \  willing to distribute their corporate phone books or personnel\n         records.\
    \  The other reason is that some organizations do not\n         want to publicize\
    \ or make public their organizational\n         structure.  Write and modify access\
    \ control is necessary\n         because both individuals and organizations may\
    \ want to prevent\n         inadvertent or malicious creation or modification\
    \ of\n         information.  Access control is an issue for both organizations\n\
    \         wanting to retain local control of personnel information and\n     \
    \    individuals wanting to control access to private information\n         about\
    \ themselves.\n      - Multiple Transport Protocol Support:\n         Within the\
    \ next three years, one cannot expect all the\n         organizations in the USA\
    \ to convert to the OSI protocols.  On\n         the other hand, some will.  It\
    \ is therefore important that any\n         white pages service provide interfaces\
    \ on top of both OSI\n         protocols and TCP/IP.  There currently exists a\
    \ partial OSI\n         suite know as ISODE on top of TCP.  This is being distributed\n\
    \         widely enough that perhaps this should also be supported.\n   In addition\
    \ to these requirements, there are a number of features\n   that would make a\
    \ white pages service more useful.  These are:\n      - Additional Functionality:\n\
    \         Descriptive naming with sophisticated searching based on\n         attributes\
    \ would support a more flexible human interface than\n         simple name translation.\
    \  Descriptive naming also would support\n         a general yellow pages style\
    \ service.\n         The form of a yellow pages service is less certain.  One\n\
    \         definition of a yellow pages service is a directory that stores\n  \
    \       a number of pre-computed inversions of the directory database,\n     \
    \    so that entries can be retrieved very efficiently using these\n         predetermined\
    \ attributes of the data.  Another definition of a\n         yellow pages service\
    \ is one that provides a very powerful set\n         of search primitives, somewhat\
    \ in common with a relational\n         query language, to support retrieval of\
    \ entries that match\n         complex attribute conditions.  In other words,\
    \ one view of a\n         yellow pages service is that it is constructed to avoid\n\
    \         expensive searches, the other is that it is to facilitate\n        \
    \ general searches.\n      - Accountability:\n         Accountability is important\
    \ both for allocation and recovery of\n         costs.  Vendors may provide commercial\
    \ directory services,\n         therefore depending on accounting as part of their\
    \ successful\n         commercial ventures.\n      - Multiple Interfaces:\n  \
    \       There should be both human and programming interfaces to the\n       \
    \  white pages.  For example, in addition to human lookups, mail\n         services\
    \ could effectively use a naming service allow users to\n         include human\
    \ oriented names than the current electronic mail\n         addresses that are\
    \ required, such as full domain names.\n      - Multiple Clients:\n         Several\
    \ different clients should exist both to provide for a\n         variety of styles\
    \ of human usage, and to support selection of\n         the most commonly used\
    \ computer environments (e.g., UNIX, VMS,\n         MSDOS, OS2, MAC/OS).\n"
- title: 3. Pre-existing Services
  contents:
  - "3. Pre-existing Services\n   This section identifies other naming services that\
    \ have been proposed\n   or implemented for naming people.  Implementations of\
    \ all of these\n   exist, although some are still only experimental.\n      Internet\
    \ Domain Naming Service\n         The Internet Domain Name Service [6,1] is used\
    \ today to name\n         host machines.  It is implemented to address the query\
    \ rates\n         and database sizes consistent with looking up hosts as part\
    \ of\n         mail delivery.  It provides a hierarchy with delegation of\n  \
    \       authority within the hierarchy.  Aliases are also available.\n       \
    \  There is no access control, and the service is widely\n         distributed\
    \ throughout the Internet.  It supports management of\n         distribution,\
    \ replication and caching.  It is operational, and\n         provides a rich base\
    \ of practical experience.  It was\n         originally intended to be extensible\
    \ to cover naming of people.\n         It runs on a variety of different operating\
    \ systems and\n         utilizes the TCP/IP protocol suite.\n      The DECnet\
    \ Network Architecture Naming Service (DNANS)\n         There is a rather well\
    \ developed specification [5,3] for a\n         naming service that is part of\
    \ the DECnet architecture, which\n         in turn arose from work at the DEC\
    \ SRC in Palo Alto.  This\n         architecture addresses some problems not yet\
    \ covered by X.500,\n         such as access control, replication, and caching.\
    \  It was\n         explicitly defined to have great scalability and management\n\
    \         features.  It provides a global hierarchy of names, which are\n    \
    \     mapped into properties.  Therefore, operations of searching\n         based\
    \ on properties or attributes may be expensive and\n         difficult.  At present\
    \ it is only implemented on VMS using the\n         DNA protocols, but will be\
    \ moved to UNIX and TCP in the next\n         year.\n      Clearinghouse\n   \
    \      This service [7,2] is part of the Xerox network environment.\n        \
    \ It operates today as a global service for Xerox.  They have\n         considerable\
    \ experience with its operation, including problems\n         of scale.  Clearinghouse\
    \ provides a three-level hierarchy of\n         names that are mapped to sets\
    \ of properties.  Loose consistency\n         is provided through slow propagation\
    \ of updates.  Both this\n         service and the DEC service mentioned above\
    \ are to some extent\n         based on an earlier Xerox service called Grapevine.\n\
    \      Profile\n         A project at the University of Arizona run by Larry Peterson\n\
    \         [8] has produced a white pages name service called Profile.  It\n  \
    \       supports descriptive naming and sophisticated lookup tools.\n        \
    \ Profile assumes the existence of some other service such as the\n         DNS\
    \ to navigate among Profile servers.  This navigation service\n         need not\
    \ restrict the relationship among Profile servers to a\n         hierarchical\
    \ organization; Profile supports a non-hierarchical\n         global structure.\
    \  Names in Profile consist of sets of\n         attributes.  Experimental implementations\
    \ are in operation\n         today, and the largest site currently contains about\
    \ 10,000\n         entries.  The Profile code has been available for long enough\n\
    \         that it has become stable.  The implementation is UNIX-based\n     \
    \    only and uses TCP.\n      X.500\n         X.500 is the CCITT recommendation\
    \ (also ISO/IEC/DIS 9594) [4]\n         for a directory service.  Because it is\
    \ a CCITT recommendation,\n         it evolves in four year study periods, one\
    \ of which has\n         recently come to a close.  Thus, X.500 has a stable definition\n\
    \         for the next four years.\n         In X.500, the set of all objects\
    \ forms a single hierarchy, with\n         each object being named relative to\
    \ its parent and a single\n         root as the topmost parent.  An object consists\
    \ of a set of\n         attributes.  Searching can be done by use of a logical\n\
    \         combination of attribute values, known as a filter.  A subset\n    \
    \     of these attributes comprise an object's distinguished name\n         relative\
    \ to its parent.  The hierarchy as described in the\n         CCITT recommendation\
    \ is geographic at its top level and\n         organizational within that.  Alternatives\
    \ can also be defined,\n         although they are not part of the CCITT or ISO\
    \ documents.  In\n         addition, there is no proposed mechanisms for distributing\n\
    \         information about other attribute types or object classes.  As\n   \
    \      with the other services, X.500 is a distributed service.  It\n        \
    \ specifies cooperating servers or Directory Server Agents (DSAs)\n         under\
    \ local control and management each of which knows about\n         one or more\
    \ parts of the hierarchy.  The clients are known as\n         Directory User Agents\
    \ (DUAs).  It is defined to run on top of\n         the OSI protocol stack.  The\
    \ demonstrations of X.500 in the\n         context of Internet run on top of the\
    \ ISODE package, which\n         provides OSI transport on top of TCP.\n     \
    \    X.500 is incomplete in that there are a number of identifiable\n        \
    \ areas in which the standard says nothing, but that need to be\n         specified\
    \ for a successful implementation.  Some examples of\n         these are: access\
    \ control (although authentication is\n         supported), replication, caching,\
    \ the database itself (the\n         shape of the hierarchy), tools to limit the\
    \ scope and cost of\n         searching, and database management tools.\n    \
    \     There are currently a small number of implementations of X.500\n       \
    \  in progress at such locations as University College London (the\n         Quipu\
    \ project, on UNIX using ISODE), the University of British\n         Columbia\
    \ (UNIX based using their own full OSI suite), MIT\n         (experimental, Symbolics\
    \ Lisp Machine based, Lisp using TCP),\n         The Wollongong Group (offshoot\
    \ of Quipu), The Retix\n         Corporation, NIST, and at least several underway\
    \ in Italy and\n         Japan.  There are probably others and a number of other\n\
    \         American corporations have discussed building their own.  Each\n   \
    \      of these must make its own decision in the areas in which X.500\n     \
    \    is silent.  Quipu is probably the most complete implementation\n        \
    \ of X.500 to date.  The pilot version has about 20 DUAs in seven\n         countries\
    \ with an estimated 20,000 entries total.\n"
- title: 4. Proposed Approach
  contents:
  - "4. Proposed Approach\n   The conclusion of this report is that some form of X.500\
    \ is the most\n   likely candidate.  The reasons for this decision are that it\
    \ has a\n   rich semantics and will become the international de facto standard.\n\
    \   There are, however, serious problems with its incompleteness and with\n  \
    \ its strict hierarchy.  Therefore, in order to explore these and\n   become convinced\
    \ of its viability, the attendees at the meeting\n   agreed on field trials, as\
    \ a first stage.  Initially, this would\n   include experiments with at least\
    \ one X.500 implementation (Quipu),\n   Profile to explore a non-hierarchical\
    \ structure and richer\n   descriptive naming, and DNANS in order to explore some\
    \ of the\n   incomplete aspects of X.500 for which DNANS has architected\n   solutions.\n\
    \   A three-stage plan, with all three stages beginning coincidentally\n   and\
    \ as soon as possible, would provide such a service within the NRN.\n   The first\
    \ stage should be complete in a year, the second in two, and\n   the third in\
    \ three.  Stage 1 would be field trials of three\n   approaches to naming with\
    \ an emphasis on distinguishing between the\n   specification and a particular\
    \ implementation of X.500, as well.\n   Stage 2 would be a more complete implementation\
    \ of a white pages\n   service base on the conclusions from Stage 1.  Stage 3\
    \ would be\n   widespread deployment of the implementation developed in Stage\
    \ 2.\n   The planning for Stage 3 is not outlined here in detail, because that\n\
    \   plan would be part of the proposed work to be done.  If the field\n   trials\
    \ were to lead to the conclusion that none of the services is\n   adequate, the\
    \ plan for the remainder of the work would need to be\n   rescheduled.\n   If\
    \ the Internet community is to adopt X.500 (or any other standard),\n   it is\
    \ necessary to make a number of design and management decisions,\n   above and\
    \ beyond the implementation decisions for the DSA.  Since\n   there are a number\
    \ of such decisions to be resolved, and some of\n   these are significant, the\
    \ group recommended that this planning and\n   management function should be recognized\
    \ as a distinct activity.\n"
- title: '4.1. Stage 1: The Field Test'
  contents:
  - "4.1. Stage 1: The Field Test\n   It was agreed that field trials would be a valuable\
    \ form in which to\n   explore the issues of building a white pages service for\
    \ two reasons.\n   First, the software is still in early stages of development\
    \ or\n   deployment.  Some of it is production code, but still first release;\n\
    \   the rest is part of research projects.  Second, it is important to\n   learn\
    \ from experience with a limited and sympathetic community.  The\n   suggested\
    \ community was the computer science community, in\n   particular, computer science\
    \ departments.  That will not be the case\n   completely, since the computer science\
    \ community in general does not\n   use DECnet.  Therefore, for experiments with\
    \ the DNANS, the NASA/DOE\n   community was recommended.  They will be using DNANS\
    \ in any case, as\n   they move to DECnet Phase V.\n   The twofold purpose of\
    \ the field trials is to explore differing\n   directory service architectures\
    \ and to refine the study of X.500\n   specifically, to distinguish architectural\
    \ aspects of it from\n   features of a particular implementation of X.500.  Initially,\
    \ the\n   trials would include the Quipu implementation of X.500, Profile, and\n\
    \   the DNANS.  A second implementation of X.500 should be identified and\n  \
    \ included as soon as possible.  Part of the emphasis of the field\n   trials\
    \ would be on gathering and maintenance of naming information.\n   To ease this,\
    \ a single common file format for storage of and access\n   to the naming information\
    \ and use of a single set of data management\n   tools was recommended, although\
    \ no particular set was identified.\n   The various directory services would need\
    \ to be retrofitted to this\n   file format.  Such consistency in file format\
    \ would mean that the\n   services could all be co-resident, sharing files, thus\
    \ permitting\n   single locations to participate in several parts of the field\
    \ trials.\n   This, in turn, would allow for direct comparisons.\n   There are\
    \ a number of issues, which are not addressed in X.500, that\n   would need to\
    \ be resolved for a large scale deployment such as a\n   white pages for the NRN.\
    \  In particular, these are: clients of the\n   service; data collection and maintenance;\
    \ distribution, replication\n   and caching of information; access control, accountability,\
    \ and\n   information integrity; and support by non-OSI protocols.  Each of the\n\
    \   name services included in the field trials would include decisions in\n  \
    \ these areas, albeit different ones.  The field trials will allow for\n   evaluation\
    \ of these different mechanisms.\n   There are two other major issues that must\
    \ also be addressed:\n   functionality and size.  Functionality encompasses both\
    \ the first\n   point of the nature of the interfaces to the service as well as\
    \ the\n   structure of the namespace (e.g., hierarchy).  A discussion of size\n\
    \   must include not only the number of entries handled by the service as\n  \
    \ a whole, but how those entries are distributed and the query and\n   update\
    \ patterns.\n   In general, all of these issues are tightly coupled, but are\n\
    \   separated here for the purposes of understanding the field trials and\n  \
    \ its potential effectiveness.  They would also be the issues that\n   would be\
    \ the basis for the work done in Stage 2 of the project.\n      - Functionality:\n\
    \         X.500 and DNANS make strong statements about the organization\n    \
    \     of the namespace.  In both cases, it is a single, absolute\n         hierarchy\
    \ with soft links or aliases and attribute-based naming\n         useful both\
    \ in searches of subtrees of the hierarchy and for\n         storing information\
    \ about the objects in the hierarchy.  The\n         searches are based on logical\
    \ combinations of attribute values.\n         Quipu implements the naming structure\
    \ and search functionality\n         as specified in X.500.  In contrast, Profile,\
    \ provides a more\n         general facility that supports any form of relative\
    \ names, not\n         just hierarchical, and a small programming language to\
    \ express\n         the functions for searching.  By including Profile in the\
    \ field\n         trials, these more general facilities can be tested.\n     \
    \    X.500 specifies that the service is separated into two parts\n         for\
    \ implementation of the service, known as the Directory\n         Service Agent\
    \ (DSA), and the client, known as the Directory\n         User Agent (DUA).  DUAs\
    \ can be implemented independently of the\n         implementation of the white\
    \ pages service.  Quipu, Profile, and\n         DNANS have taken different approaches\
    \ to the presentation model\n         for DUAs, so the three implementations will\
    \ allow for\n         additional experience.\n      - Size:\n         As discussed\
    \ earlier, a white pages service must be prepared to\n         handle a minimum\
    \ of 10**7 entries, although they may be\n         distributed, and a query rate\
    \ of hundreds per second.  It must\n         also be prepared to handle much higher\
    \ peak rates.  If the\n         address lookup that is presently provided by the\
    \ DNS is also\n         supported by the white pages service, the query rate will\
    \ be\n         much higher.  The designers of the field trials must determine\n\
    \         whether or not such usage will be part of the final service and\n  \
    \       therefore must be examined in the field trials.  If so, caching\n    \
    \     may be part of the solution.  In addition, the response time\n         for\
    \ DUAs must be reasonable for a human sitting at a console.\n         Furthermore,\
    \ modifications to the data should occur in\n         reasonably short periods\
    \ of time, although this could be\n         measured in hours.\n         The field\
    \ trials must allow for experimentation under such\n         stressful conditions.\
    \  The environment for testing must have\n         both large and small nodes,\
    \ as well as both heavy and light\n         load querying and situations in which\
    \ reorganization can be\n         tested.  Such reorganization may be a simple\
    \ as moving one\n         piece of the hierarchy to another point and handling\
    \ naming\n         conflicts in the new environment.  X.500 does not address this\n\
    \         issue, but it will be needed by the NRN.\n      - Distribution, replication,\
    \ and caching:\n         These are areas in which X.500 has very little to say,\
    \ but a\n         great deal of work has been done in other distributed, network\n\
    \         naming services, in particular both the DNS and DNANS.  There\n    \
    \     seems to be general agreement that distribution of naming\n         services\
    \ should be done on the basis of nodes in the naming\n         structure, which\
    \ also provide the basis for administrative\n         partitioning.  All the naming\
    \ services described here support\n         distribution, partitioning of the\
    \ information for placement on\n         cooperating servers.  Neither X.500 (and\
    \ therefore Quipu) nor\n         Profile is prepared to redistribute portions\
    \ of the namespace,\n         for reallocation of administrative responsibilities\
    \ or load\n         balancing, although this should be possible and DNANS is\n\
    \         prepared to do so.  Replication is necessary for accessibility\n   \
    \      in a large-scale or global namespace, although again X.500 does\n     \
    \    not address this issue.  Quipu has taken a stand on this, by\n         defining\
    \ master and slave copies of the data; it is similar to,\n         but not the\
    \ same as, the approach taken in the DNS.  Caching is\n         barely touched\
    \ on in X.500 and not at all in Profile, but our\n         experience with the\
    \ DNS indicates that caching is critical to\n         effective operation of a\
    \ distributed name service.  The DNANS\n         has an architected solution based\
    \ on objects in the namespace\n         as the unit of distribution and replication.\
    \  Again, the DNANS\n         solution should be explored in the field test environment.\n\
    \      - Access control, accountability, and integrity:\n         Access control\
    \ and accountability require some degree of\n         authentication.  X.500 supports\
    \ authentication based on using\n         an RSA public key algorithm, but does\
    \ not address issues of\n         universal registration, nor issues of access\
    \ control or\n         accountability themselves.  These are left as a local issue,\n\
    \         although depending on the design of the system, they may have\n    \
    \     global implications.  The problem of integrity of the\n         information\
    \ in the name service is nowhere addressed.  Profile\n         also does not address\
    \ these issues, although it uses\n         authentication based on UNIX authentication,\
    \ involving user ids\n         and passwords.  DNANS takes a strong stand on access\
    \ control,\n         architecting it in at the level of individual entries.  Field\n\
    \         trials will force these issues out into the open.\n      - Structure\
    \ of the naming tree:\n         In the deployment of the DNS, about one year was\
    \ lost to\n         arguments about the actual structure of the naming hierarchy.\n\
    \         People form strong opinions about their name, and fight for or\n   \
    \      against certain hierarchical structures.  The same issue will\n       \
    \  arise here, and advanced planning to deal with the problem is\n         required.\n\
    \         In this case, the problem is made harder by the fact that the\n    \
    \     hierarchy will be global; X.500 is an international standard,\n        \
    \ based on the assumption that there is only one example of the\n         tree,\
    \ partitioned by country.  Probably the American White\n         Pages Service,\
    \ at least at its root, will be run by the NIST or\n         its contractor. \
    \ We must deal with the problem that in the\n         short term, various implementations\
    \ may not interwork, and we\n         must work with NIST to support the needed\
    \ services.\n         Specific issues that come up related to the naming tree\
    \ are:\n            * How is delegation of control of the tree managed?\n    \
    \          For example, who decides what DSA holds what parts\n              of\
    \ the tree?\n            * How is the creation of new parts of the tree\n    \
    \          (e.g., an organizational entry) controlled?\n      - Support for Tree\
    \ Search:\n         Regardless of the defintion of the white pages service in\
    \ the\n         NRN, it will need to interface to the X.500 world.  The X.500\n\
    \         naming hierarchy can be expected to become very large, and\n       \
    \  guidance is needed for users to help them navigate the tree.\n         Users\
    \ need help to find their way to unknown parts of the\n         namespace.  As\
    \ in other naming services, a feature of X.500 is\n         that additional entries,\
    \ aliases (similar to links in file\n         systems) can be installed to provide\
    \ an easy path for a user in\n         one part of the tree to find other interesting\
    \ parts of the\n         tree.  By establishing a consistent policy for the use\
    \ of alias\n         entries, learning how to navigate the tree can be made much\n\
    \         easier for a user.  As part of setting up the tree, therefore,\n   \
    \      these sorts of policies need to be defined.\n      - Definition of database\
    \ structures:\n         There are a number of data structures that need to be\
    \ defined\n         as part of setting up each of the services.  These include,\
    \ for\n         example, the types of information stored for the entry about a\n\
    \         person.  This information must be stored in the servers, and\n     \
    \    passed to the clients.  These structures must thus be\n         specified.\
    \  In other words, the schema defining attributes and\n         object classes\
    \ must be specified for the NRN.\n      - Load balancing:\n         The dynamic\
    \ performance of the Internet system must be\n         estimated, so that the\
    \ servers can be sized properly.\n         Especially at the root of the tree,\
    \ the query rate must be\n         estimated carefully.  Caching will have a strong\
    \ influence on\n         this.  Therefore, traffic patterns are very dependent\
    \ on the\n         details of implementation.\n      - Supporting multiple protocol\
    \ suites:\n         At least three protocol suites are and will continue to be\
    \ used\n         in the NRN environment.  They are DECnet, TCP/IP, and the OSI\n\
    \         suite of protocols.  Since the white pages service is at the\n     \
    \    applications layer, it must run on top of at least these three\n        \
    \ protocol suites.  It is important to understand the\n         requirements of\
    \ the white pages service for its transport\n         protocols.\n   By addressing\
    \ these issues within the field trials, we will be\n   preparing for the further\
    \ development of Stage 2.  A result of Stage\n   1 will be a detailed specification\
    \ of the white pages service,\n   possibly an extension to or modification of\
    \ X.500.  This should\n   dovetail with the activities specifying the details\
    \ required for\n   implementation (known as \"profiling\") by the NIST Workshop\
    \ for\n   Implementors of OSI.  In addition, in order to run the field trial,\n\
    \   the information capture problem must be addressed, providing the some\n  \
    \ of the preliminary work of Stage 3.\n"
- title: '4.2. Stage 2: Implementation'
  contents:
  - "4.2. Stage 2: Implementation\n   If the evaluation of Stage 1 concludes that\
    \ some form of X.500 is\n   acceptable, at least one of the two X.500 implementations\
    \ included in\n   the field trials should provide the basis for a production quality\n\
    \   implementation of X.500 for general deployment.  Further work will\n   likely\
    \ be needed on the basis of the evaluations of the field trials.\n   A production\
    \ version of an implementation requires both reliable\n   servers as well as a\
    \ variety of clients to provide differing\n   interfaces on a mixture of hardware\
    \ and operating systems.\n   In addition, especially because of the inclusion\
    \ of Profile and\n   DNANS, a variety of different DUAs will be explored by definition.\n\
    \   Further investigation into the DUAs should begin in parallel with or\n   in\
    \ conjunction with the field trials.  There should be distinct DUAs\n   for both\
    \ programs and humans.  In addition, there probably should be\n   human-user DUAs\
    \ geared both to the naive user with simple usage\n   patterns and the more sophisticated\
    \ user who wants to perform complex\n   queries.  It is also important to design\
    \ DUAs that do not require a\n   great deal of computing power for the small machines\
    \ still in use in\n   great quantity.  Much of the user community may not be able\
    \ to afford\n   expensive equipment upgrades.\n   Assuming that X.500 is deemed\
    \ to be the specification of the service,\n   the field trials will address many\
    \ issues not included in X.500 as of\n   1989.  Since it is important for the\
    \ NRN to support interconnectivity\n   beyond its own bounds, it behooves us to\
    \ feed what has been learned\n   back into the standards activities.  This was\
    \ identified as a\n   separate activity because of the intellectual as well as\
    \ time\n   commitment that must be made to do this effectively.\n"
- title: '4.3. Stage 3: Deployment'
  contents:
  - "4.3. Stage 3: Deployment\n   A plan is required to develop the schedule of service\
    \ introduction,\n   and to co-ordinate the deployment as it is undertaken.  This\
    \ includes\n   mediating service problems, a significant task in its own right.\n\
    \   The details of deployment were not discussed at the meeting, although\n  \
    \ several of the seeds of deployment lie in Stages 1 and 2.  The first\n   of\
    \ these is the capture and management of information.  The second is\n   DUA development.\
    \  Both of these must be included Stage 1 in order to\n   support a usable environment\
    \ for the trials.  In addition, the\n   information that will have been captured\
    \ in Stage 1 could be printed\n   producing a hard copy of the white pages information.\
    \  That could be\n   distributed to all scientists and engineers involved; such\
    \ a project\n   would provide an early white pages service.  During the initial\n\
    \   periods of both Stages 1 and 2, planning for deployment would also\n   have\
    \ to proceed, in order to provide a smooth transition to this\n   third stage\
    \ in the project.\n"
- title: 5. Conclusion
  contents:
  - "5. Conclusion\n   The consensus of the meeting was that following a path that\
    \ included\n   X.500 was both the correct direction and feasible, although X.500\n\
    \   needs further elaboration.  There were several important items for\n   further\
    \ study.  The first is that there are many issues left\n   unresolved in X.500\
    \ that have been addressed in other naming\n   services, and the NRN should take\
    \ advantage of the solutions in those\n   other services.  The second is that\
    \ there was some reservation about\n   certain features of X.500, especially in\
    \ the area of the imposition\n   of a hierarchy for naming, and only limited flexibility\
    \ in\n   descriptive naming.  The participants believe that is important\n   understand\
    \ whether X.500 provides enough mechanisms to work around\n   such problems by\
    \ finding a higher common ground that includes the\n   best features of all the\
    \ naming services included in the field\n   trials.  The final issue with respect\
    \ to X.500 was that there was\n   agreement that X.500 will be an accepted and\
    \ utilized standard in at\n   least part of the networked community and therefore\
    \ interfacing to it\n   will be necessary.  Given that, and the other reasons\
    \ for choosing\n   X.500, the consensus was that the plan described above would\
    \ bring\n   the NRN and its community of users a useful and usable white pages\n\
    \   service.\n"
- title: References
  contents:
  - "References\n   1.  Austein, R., \"The Internet Domain Name System\", Proceedings\
    \ of\n       USA Decus, Massachusetts Institute Technology/LCS, 1987.\n   2. \
    \ Demers, A., D. Greene, C. Hauser, W. Irish, J. Larson, S.\n       Shenker, H.\
    \ Sturgis, D. Swinehart, and D. Terry, \"Epidemic\n       algorithms for replicated\
    \ database maintenance\", Proceedings of\n       the 6th Symposium on Principles\
    \ of Distributed Computing, ACM,\n       Vancouver, B.C., Canada, pp. 12-21, August\
    \ 1987.\n   3.  Digital Equipment Corporation, \"DNA Naming Service Functional\n\
    \       Specification Version 1.0.1\", Order number: EK-DNANS-FS-001,\n      \
    \ Digital Equipment Corporation, 1988.\n   4.  International Organization for\
    \ Standardization, \"Information\n       Processing Systems - Open Systems Interconnection\
    \ - The\n       Directory\", Draft Standard (In 8 parts), Also CCITT\n       Recommendation\
    \ X.500, 1988.\n   5.  Lampson, B., \"Desiging a Global Name Service,\" Proceedings\
    \ of the\n       5th Symposium on Principles of Distribute Computing, ACM,\n \
    \      Calgary, Alberta, Canada, pp. 1-10, August 1986.\n   6.  Mockapetris, P.,\
    \ \"Domain Names - Concept and Facilities\", RFC\n       1034, USC/Information\
    \ Sciences Institute, November 1987.\n   7.  Oppen, D., and Y. Dalal, \"The Clearinghouse:\
    \  A Decentralized\n       Agent for Locating Named Objects in a Distributed Environment\"\
    ,\n       Tech. Rept. OPD-T8103, Xerox Corporation, Palo Alto, CA, October\n \
    \      1981.\n   8.  Peterson, L., \"Profile: A System for Naming Internet Resources\"\
    ,\n       Tech. Rept. 20, Department of Computer Science, University of\n    \
    \   Arizona, June 1987.\n"
- title: Author's Address
  contents:
  - "Author's Address\n       Karen R. Sollins\n       Massachusetts Institute of\
    \ Technology\n       Laboratory for Computer Science\n       545 Technology Square\n\
    \       Cambridge, MA 02139-1986\n       Phone: (617) 253-6006\n       EMail:\
    \ SOLLINS@XX.LCS.MIT.EDU\n"
