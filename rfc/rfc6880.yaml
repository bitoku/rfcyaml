- title: __initial_text__
  contents:
  - '              An Information Model for Kerberos Version 5

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes an information model for Kerberos version\
    \ 5\n   from the point of view of an administrative service.  There is no\n  \
    \ standard for administrating a Kerberos 5 Key Distribution Center\n   (KDC).\
    \  This document describes the services exposed by an\n   administrative interface\
    \ to a KDC.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6880.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Notation ...........................................4\n  \
    \ 3. Information Model Demarcation ...................................5\n   4.\
    \ Information Model Specification .................................6\n      4.1.\
    \ Principal ..................................................6\n           4.1.1.\
    \ Principal: Attributes ...............................6\n           4.1.2. Principal:\
    \ Associations .............................7\n      4.2. KeySet .....................................................8\n\
    \           4.2.1. KeySet: Attributes ..................................8\n  \
    \         4.2.2. KeySet: Associations ................................8\n    \
    \  4.3. Key ........................................................9\n      \
    \     4.3.1. Key: Attributes .....................................9\n        \
    \   4.3.2. Key: Associations ..................................10\n          \
    \ 4.3.3. Key: Remarks .......................................10\n      4.4. Policy\
    \ ....................................................10\n           4.4.1. Policy:\
    \ Attributes .................................10\n           4.4.2. Mandatory-to-Implement\
    \ Policy ......................11\n   5. Implementation Scenarios .......................................11\n\
    \      5.1. LDAP Backend to KDC .......................................12\n  \
    \    5.2. LDAP Frontend to KDC ......................................12\n    \
    \  5.3. SOAP ......................................................12\n      5.4.\
    \ NETCONF ...................................................12\n   6. Security\
    \ Considerations ........................................12\n   7. Acknowledgments\
    \ ................................................13\n   8. References .....................................................13\n\
    \      8.1. Normative References ......................................13\n  \
    \    8.2. Informative References ....................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Kerberos version 5 authentication service described\
    \ in [RFC4120]\n   describes how a Key Distribution Center (KDC) provides authentication\n\
    \   to clients.  RFC 4120 does not stipulate how a KDC is managed, and\n   several\
    \ \"kadmin\" servers have evolved since RFC 4120 was written.\n   This document\
    \ describes the services required to administer a KDC and\n   the underlying information\
    \ model assumed by a kadmin-type service.\n   The information model is written\
    \ in terms of \"attributes\" and either\n   \"services\" or \"interfaces\", but\
    \ the use of these particular words\n   must not be taken to imply any particular\
    \ modeling paradigm.  Neither\n   an object-oriented model nor a Lightweight Directory\
    \ Access Protocol\n   (LDAP) [RFC4510] schema is intended.  The author has attempted\
    \ to\n   describe, in prose, the intended semantics and syntax of the\n   components\
    \ of the model.  For instance, an LDAP schema based on this\n   model will be\
    \ more precise in the expression of the syntax while\n   preserving the semantics\
    \ of this model.\n   Implementations of this document MAY decide to change the\
    \ names used\n   (e.g., principalName).  If so, an implementation MUST provide\
    \ a name-\n   to-name mapping to this document.  In particular, schema languages\n\
    \   may have different typographical conventions, e.g., the use of an\n   uppercase\
    \ letter (as seen in camelCase) versus the use of '_' and '-'\n   to separate\
    \ 'words' in a name.  Implementations MUST call out such\n   conventions explicitly.\n\
    \   Implementations of this document MUST be able to support default\n   values\
    \ for attributes and have the ability to specify syntax for\n   attribute values.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   This document uses the standard key words (\"MUST\"\
    , \"MUST NOT\",\n   \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD\
    \ NOT\",\n   \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\") that are defined in [RFC2119],\n\
    \   but with modifications to those definitions as described below.  The\n   reason\
    \ for this (which was discussed extensively in the Kerberos\n   working group)\
    \ is as follows:\n   This document describes an information model for Kerberos\
    \ 5, but it\n   does not directly describe any mapping onto a particular schema\
    \ or\n   modeling language.  Hence, an implementation of this model consists\n\
    \   of a mapping to such a language, e.g., an LDAP or SQL schema.\n   Therefore,\
    \ the standard normative key words require precise\n   definition.\n   The terms\
    \ \"MUST\" and \"REQUIRED\" mean that a schema implementing this\n   model must\
    \ have a way to represent a feature (i.e., that it is\n   mandatory to implement\
    \ it in the schema), but that, unless otherwise\n   specified, the feature may\
    \ represent an optional element in the\n   chosen schema definition language.\n\
    \   However, \"MUST\" also means that a KDC or administrative interface\n   implementing\
    \ this information model has to provide the feature and\n   associated behavior\
    \ consistent with the schema.\n   For instance, principalName (see Section 4.1.1.1)\
    \ represents the name\n   of a principal.  In an LDAP schema (for instance), this\
    \ may be\n   represented as an optional attribute even though all KDCs\n   implementing\
    \ this specification must support this attribute.\n   The terms \"MAY\" and \"\
    OPTIONAL\" mean that it is optional for a KDC or\n   administrative interface\
    \ implementing this information model to\n   implement this feature.  These terms\
    \ also mean that implementing the\n   feature in the schema is optional.\n   Implementers\
    \ of the schema should be aware that, unless the schema\n   definition can represent\
    \ critical but optional elements, language\n   confusion may arise when optional\
    \ elements are used but not\n   understood by all implementations in a particular\
    \ deployment.\n   The expression \"MUST NOT be OPTIONAL\" means that it is mandatory\
    \ that\n   a feature be implemented (\"MUST\" per the definition in [RFC2119])\
    \ and\n   additionally that it must not be marked as optional in the schema\n\
    \   language.  In particular, this expression means that the feature is\n   both\
    \ mandatory to implement and must be present in all\n   representations of the\
    \ object to which it applies.\n   The terms \"SHOULD\" and \"RECOMMENDED\" mean\
    \ that the consequences of\n   not implementing the feature as if it were described\
    \ with the \"MUST\"\n   keyword must be carefully weighed before choosing a different\
    \ course.\n   In particular, these terms imply that interoperability concerns\
    \ may\n   arise from not following the recommended practice in schema that\n \
    \  implement this model.\n   Context will determine whether the \"SHOULD\" key\
    \ word applies to the\n   schema, to the underlying behavior of the KDC, or both.\
    \  For\n   instance, when this document states that principalIsDisabled (see\n\
    \   Section 4.1.1.4) SHOULD default to FALSE, this statement implies both\n  \
    \ a recommendation for the behavior of KDCs as well as a recommendation\n   for\
    \ the representation of that behavior in schema.\n"
- title: 3.  Information Model Demarcation
  contents:
  - "3.  Information Model Demarcation\n   The information model specified in Section\
    \ 4 describes objects, their\n   properties, and the relationships between the\
    \ objects.  These\n   elements comprise an abstract view of the data represented\
    \ in a KDC.\n   It is important to understand that the information model is not\
    \ a\n   schema.  In particular, the way objects are compared for equality\n  \
    \ beyond that which is implied by the specification of a syntax is not\n   part\
    \ of this specification, nor is the ordering specified between the\n   elements\
    \ of a particular syntax.\n   Further work on Kerberos will undoubtedly prompt\
    \ updates to this\n   information model to reflect changes in the functions performed\
    \ by\n   the KDC.  Such extensions to the information model should always use\n\
    \   a normative reference to the relevant RFCs in detailing the change in\n  \
    \ KDC function.\n   This model describes a number of elements related to password\
    \ policy\n   management.  Not all of the elements in this model are unique to\n\
    \   Kerberos.  For example, an LDAP implementation of this model should\n   incorporate\
    \ existing LDAP schema where functional overlap exists,\n   rather than defining\
    \ additional Kerberos-specific elements.\n"
- title: 4.  Information Model Specification
  contents:
  - '4.  Information Model Specification

    '
- title: 4.1.  Principal
  contents:
  - "4.1.  Principal\n   The fundamental entity stored in a KDC is the principal.\
    \  The\n   principal is associated with keys and generalizes the \"user\" concept.\n\
    \   The principal MUST be implemented in full and MUST NOT be OPTIONAL in\n  \
    \ an implementation\n"
- title: '4.1.1.  Principal: Attributes'
  contents:
  - '4.1.1.  Principal: Attributes

    '
- title: 4.1.1.1.  principalName
  contents:
  - "4.1.1.1.  principalName\n   The principalName MUST uniquely identify the principal\
    \ within the\n   administrative context of the KDC.  The principalName MUST be\n\
    \   equivalent to the string representation of the principal name (see\n   Section\
    \ 2.1.1 of [RFC1964]), including, if applicable for the name\n   type, the realm.\n\
    \   The attribute MAY be multivalued if the implementation supports\n   aliases,\
    \ enterprise names, or both.  In this case, exactly one of the\n   principalName\
    \ values MAY be designated as the canonical\n   principalName.  If the implementation\
    \ supports encryption types\n   (enctypes) that require salt, exactly one of the\
    \ values of\n   principalName MAY be designated as the canonical salting\n   principalName.\n\
    \   Implementations (i.e., schema) that support enterprise names,\n   aliases,\
    \ or both, SHOULD provide for efficient lookup of principal\n   objects based\
    \ on the alias or enterprise name.\n"
- title: 4.1.1.2.  principalNotUsedBefore
  contents:
  - "4.1.1.2.  principalNotUsedBefore\n   The principal MUST NOT be used before this\
    \ date.  The syntax of the\n   attribute MUST be Internet date/time format from\
    \ [RFC3339].  The\n   attribute MUST be single-valued.\n"
- title: 4.1.1.3.  principalNotUsedAfter
  contents:
  - "4.1.1.3.  principalNotUsedAfter\n   The principal MUST NOT be used after this\
    \ date.  The syntax of the\n   attribute MUST be Internet date/time format from\
    \ [RFC3339].  The\n   attribute MUST be single-valued.\n"
- title: 4.1.1.4.  principalIsDisabled
  contents:
  - "4.1.1.4.  principalIsDisabled\n   A boolean attribute used to disable a principal.\
    \  The attribute\n   SHOULD default to boolean FALSE.\n"
- title: 4.1.1.5.  principalLastCredentialChangeTime
  contents:
  - "4.1.1.5.  principalLastCredentialChangeTime\n   This single-valued attribute\
    \ contains the time of the last successful\n   change of credentials (e.g., password\
    \ or private key) associated with\n   this principal.  The syntax of the attribute\
    \ MUST be Internet\n   date/time format from [RFC3339].\n"
- title: 4.1.1.6.  principalCreateTime
  contents:
  - "4.1.1.6.  principalCreateTime\n   This single-valued attribute contains the time\
    \ and date when this\n   principal was created.  The syntax of the attribute MUST\
    \ be Internet\n   date/time format from [RFC3339].\n"
- title: 4.1.1.7.  principalModifyTime
  contents:
  - "4.1.1.7.  principalModifyTime\n   This single-valued attribute contains the time\
    \ and date when this\n   principal was last modified, excluding changes to credentials.\
    \  The\n   syntax of the attribute MUST be Internet date/time format from\n  \
    \ [RFC3339].\n"
- title: 4.1.1.8.  principalMaximumTicketLifetime
  contents:
  - "4.1.1.8.  principalMaximumTicketLifetime\n   This single-valued attribute contains\
    \ the time, in seconds,\n   representing the maximum lifetime of a ticket issued\
    \ for this\n   principal.\n"
- title: 4.1.1.9.  principalMaximumRenewableTicketLifetime
  contents:
  - "4.1.1.9.  principalMaximumRenewableTicketLifetime\n   This single-valued attribute\
    \ contains the delta time, in seconds,\n   representing the maximum amount of\
    \ time a ticket may be renewed for\n   this principal.\n"
- title: 4.1.1.10.  principalAllowedEnctype
  contents:
  - "4.1.1.10.  principalAllowedEnctype\n   This OPTIONAL multivalued attribute lists\
    \ the enctypes allowed for\n   this principal.  If empty or absent, any enctype\
    \ supported by the\n   implementation is allowed for this principal.\n   This\
    \ attribute is intended as a policy attribute and restricts all\n   uses of enctypes,\
    \ including server, client, and session keys.  Data\n   models MAY choose to use\
    \ policy objects in order to represent more\n   complex decision mechanisms.\n"
- title: '4.1.2.  Principal: Associations'
  contents:
  - "4.1.2.  Principal: Associations\n   Each principal MAY be associated with 0 or\
    \ more KeySets and MAY be\n   associated with 0 or more Policies.  The KeySet\
    \ is represented as an\n   object in this model, because it has attributes associated\
    \ with it\n   (the key version number).  In typical situations, the principal\
    \ is\n   associated with exactly one KeySet, but implementations MUST NOT\n  \
    \ assume this case.  That is, an implementation of this standard MUST\n   be able\
    \ to handle the general case of multiple KeySets associated\n   with each principal.\
    \  Multiple KeySets may, for instance, be useful\n   when performing a key rollover\
    \ for a principal.\n"
- title: 4.2.  KeySet
  contents:
  - "4.2.  KeySet\n   In Kerberos, principals are associated with zero or more symmetric\n\
    \   secret keys, and each key has a key version number (kvno) and an\n   enctype.\
    \  In this model, we group keys by kvno into KeySet objects.\n   A principal can\
    \ have zero or more KeySet objects associated with it,\n   each of which MUST\
    \ have one or more keys.  Each KeySet is associated\n   with exactly one principal.\
    \  A schema derived from this model MAY\n   lack a direct analogue of KeySet,\
    \ as described in this document.\n   It is expected that most Kerberos implementations\
    \ will use a special-\n   purpose interface for setting and changing principal\
    \ passwords and\n   keys.\n   If a server supports an enctype for a principal,\
    \ that enctype must be\n   present in at least one key for the principal in question.\
    \  For any\n   given enctype, a KeySet MUST NOT contain more than one key with\
    \ that\n   enctype.\n   The security of Kerberos 5 depends absolutely on the confidentiality\n\
    \   and integrity of the key objects stored in the KDC.  Implementations\n   of\
    \ this standard MUST facilitate, to the extent possible, an\n   administrator's\
    \ ability to place more restrictive access controls on\n   KeySets than on other\
    \ principal data, and to arrange for more secure\n   backup for KeySets.\n"
- title: '4.2.1.  KeySet: Attributes'
  contents:
  - '4.2.1.  KeySet: Attributes

    '
- title: 4.2.1.1.  kvno
  contents:
  - "4.2.1.1.  kvno\n   The key version number.  This is a single-valued attribute\
    \ containing\n   a non-negative integer.  This number is incremented by one each\
    \ time\n   a key in the KeySet is changed.\n"
- title: '4.2.2.  KeySet: Associations'
  contents:
  - "4.2.2.  KeySet: Associations\n   Each KeySet MUST be associated with a set of\
    \ one or more Keys.\n"
- title: 4.3.  Key
  contents:
  - "4.3.  Key\n   Implementations of this model MUST NOT force keys to be represented.\n\
    \   That is, a schema that REQUIRED a key to be present would not meet\n   this\
    \ constraint.\n"
- title: '4.3.1.  Key: Attributes'
  contents:
  - '4.3.1.  Key: Attributes

    '
- title: 4.3.1.1.  keyEncryptionType
  contents:
  - "4.3.1.1.  keyEncryptionType\n   The enctype SHOULD be represented as an enumeration\
    \ of the enctypes\n   supported by the KDC using the string name (\"encryption\
    \ type\") of the\n   enctype from the IANA registry of Kerberos Encryption Type\
    \ Numbers.\n   One example is \"aes128-cts-hmac-sha1-96\".\n"
- title: 4.3.1.2.  keyValue
  contents:
  - "4.3.1.2.  keyValue\n   The binary representation of the key data.  This MUST\
    \ be a single-\n   valued octet string.\n"
- title: 4.3.1.3.  keySaltValue
  contents:
  - "4.3.1.3.  keySaltValue\n   The binary representation of the key salt.  This MUST\
    \ be a single-\n   valued octet string.\n"
- title: 4.3.1.4.  keyStringToKeyParameter
  contents:
  - "4.3.1.4.  keyStringToKeyParameter\n   This MUST be a single-valued octet string\
    \ representing an opaque\n   parameter associated with the enctype.  This parameter\
    \ is specified\n   using the string-to-key method defined in Section 3 of [RFC3961].\n"
- title: 4.3.1.5.  keyNotUsedBefore
  contents:
  - "4.3.1.5.  keyNotUsedBefore\n   The key MUST NOT be used before this date.  The\
    \ syntax of the\n   attribute MUST be semantically equivalent to the standard\
    \ ISO date\n   format ([RFC3339]).  This attribute MUST be single-valued.\n"
- title: 4.3.1.6.  keyNotUsedAfter
  contents:
  - "4.3.1.6.  keyNotUsedAfter\n   The key MUST NOT be used after this date.  The\
    \ syntax of the\n   attribute MUST be semantically equivalent to the standard\
    \ ISO date\n   format ([RFC3339]).  This attribute MUST be single-valued.\n"
- title: 4.3.1.7.  keyIsDisabled
  contents:
  - "4.3.1.7.  keyIsDisabled\n   This is a boolean attribute that SHOULD be set to\
    \ FALSE by default.\n   If this attribute is TRUE, the key MUST NOT be used. \
    \ The\n   keyIsDisabled attributed is used to temporarily disable a key.\n"
- title: '4.3.2.  Key: Associations'
  contents:
  - "4.3.2.  Key: Associations\n   None\n"
- title: '4.3.3.  Key: Remarks'
  contents:
  - "4.3.3.  Key: Remarks\n   The security of the keys is an absolute requirement\
    \ for the operation\n   of Kerberos 5.  If keys are implemented, adequate protection\
    \ from\n   unauthorized modification and disclosure MUST be available and is\n\
    \   REQUIRED of the implementation.\n"
- title: 4.4.  Policy
  contents:
  - "4.4.  Policy\n   Implementations SHOULD implement policies, but MAY allow them\
    \ to be\n   OPTIONAL.  The policy should be thought of as a \"typed hole\", i.e.,\n\
    \   as an opaque binary value paired with an identifier of the type of\n   data\
    \ contained in the binary value.  Both attributes (type and value)\n   must be\
    \ present.\n"
- title: '4.4.1.  Policy: Attributes'
  contents:
  - '4.4.1.  Policy: Attributes

    '
- title: 4.4.1.1.  policyIdentifier
  contents:
  - "4.4.1.1.  policyIdentifier\n   The policyIdentifier MUST be globally unique.\
    \  Possible types of\n   identifiers include:\n   o  An Object Identifier (OID)\
    \ [RFC4517]\n   o  A URI [RFC3986]\n   o  A UUID [RFC4122]\n   Implementations\
    \ of this specification are expected to assign globally\n   unique identifiers\
    \ to the list of the standard policy below in\n   accordance with best practices\
    \ for identifier management for the\n   schema language used.\n"
- title: 4.4.1.2.  policyIsCritical
  contents:
  - "4.4.1.2.  policyIsCritical\n   This boolean attribute indicates that the KDC\
    \ MUST be able to\n   correctly interpret and apply the policy for the principal\
    \ to be\n   used.\n"
- title: 4.4.1.3.  policyContent
  contents:
  - "4.4.1.3.  policyContent\n   This optional single opaque binary value is used\
    \ to store a\n   representation of the policy.  In general, a policy cannot be\
    \ fully\n   expressed using attribute-value pairs.  The policyContent is OPTIONAL\n\
    \   in the sense that an implementation MAY use it to store an opaque\n   value\
    \ for the policy types that are not directly representable in\n   that implementation.\n"
- title: 4.4.1.4.  policyUse
  contents:
  - "4.4.1.4.  policyUse\n   This optional single enumerated string value is used\
    \ to describe the\n   use of the policy.  Implementations SHOULD provide this\
    \ attribute and\n   MUST (if the attribute is implemented) describe the enumerated\
    \ set of\n   possible values.  The intent is that this attribute provide an\n\
    \   initial context-based filtering.\n"
- title: 4.4.2.  Mandatory-to-Implement Policy
  contents:
  - "4.4.2.  Mandatory-to-Implement Policy\n   All implementations that represent\
    \ policy objects MUST be able to\n   represent the policies listed in this section.\
    \  Implementations are\n   not required to use the same underlying data representation\
    \ for the\n   policyContent binary value, but SHOULD use the same OIDs as the\n\
    \   policyIdentifier.  In general, the expression of policy may require a\n  \
    \ Turing-complete language.  This specification does not attempt to\n   model\
    \ policy-expression language.\n"
- title: 4.4.2.1.  Password Quality Policy
  contents:
  - "4.4.2.1.  Password Quality Policy\n   Password quality policy controls the requirements\
    \ placed by the KDC\n   on new passwords.\n"
- title: 4.4.2.2.  Password Management Policy
  contents:
  - "4.4.2.2.  Password Management Policy\n   Password management policy controls\
    \ how passwords are changed.\n"
- title: 4.4.2.3.  Keying Policy
  contents:
  - "4.4.2.3.  Keying Policy\n   A keying policy specifies the association of enctypes\
    \ with new\n   principals.  For example, when a principal is created, one of the\n\
    \   applicable keying policies is used to determine the set of keys to\n   associate\
    \ with the principal.\n"
- title: 4.4.2.4.  Ticket Flag Policy
  contents:
  - "4.4.2.4.  Ticket Flag Policy\n   A ticket flag policy specifies the ticket flags\
    \ allowed for tickets\n   issued for a principal.\n"
- title: 5.  Implementation Scenarios
  contents:
  - "5.  Implementation Scenarios\n   There are several ways to implement an administrative\
    \ service for\n   Kerberos 5 based on this information model.  In this section,\
    \ we list\n   a few of them.\n"
- title: 5.1.  LDAP Backend to KDC
  contents:
  - "5.1.  LDAP Backend to KDC\n   Given an LDAP schema implementation of this information\
    \ model, it\n   would be possible to build an administrative service by backending\n\
    \   the KDC to a directory server where principals and keys are stored.\n   Using\
    \ the security mechanisms available on the directory, server keys\n   are protected\
    \ from access by anyone apart from the KDC.\n   Administration of the principals,\
    \ policy, and other non-key data is\n   done through the directory server, while\
    \ the keys are modified using\n   the set/change password protocol [PASSWORD].\n"
- title: 5.2.  LDAP Frontend to KDC
  contents:
  - "5.2.  LDAP Frontend to KDC\n   An alternative way to provide a directory interface\
    \ to the KDC is to\n   implement an LDAP frontend to the KDC that exposes all\
    \ non-key\n   objects as entries and attributes.  As in the example above, all\
    \ keys\n   are modified using the set/change password protocol [PASSWORD].  In\n\
    \   this scenario, the implementation would typically not use a\n   traditional\
    \ LDAP implementation, but would treat LDAP as a protocol\n   to access data in\
    \ the native KDC database.\n"
- title: 5.3.  SOAP
  contents:
  - "5.3.  SOAP\n   Given an XML schema implementation of this information model,\
    \ it\n   would be possible to build a SOAP interface to the KDC.  This\n   situation\
    \ demonstrates the value of creating an abstract information\n   model that is\
    \ mappable to multiple schema representations.\n"
- title: 5.4.  NETCONF
  contents:
  - "5.4.  NETCONF\n   Given a YAML (YAML Ain't Markup Language) implementation of\
    \ this\n   information model, it would be possible to create a NETCONF-based\n\
    \   interface to the KDC, enabling management of the KDC from standard\n   network\
    \ management applications.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document describes an abstract information\
    \ model for Kerberos 5.\n   The Kerberos 5 protocol depends on the security of\
    \ the keys stored in\n   the KDC.  The model described here assumes that keys\
    \ MUST NOT be\n   transported in the clear over the network and furthermore that\
    \ keys\n   be treated as write-only attributes that SHALL be modified (using the\n\
    \   administrative interface) only by the change-password protocol\n   [PASSWORD].\n\
    \   Exposing the object model of a KDC typically implies that objects can\n  \
    \ be modified, deleted, or both.  In a KDC, not all principals are\n   created\
    \ equal.  For instance, deleting krbtgt/EXAMPLE.COM@EXAMPLE.COM\n   effectively\
    \ disables the EXAMPLE.COM realm.  Hence, access control is\n   paramount to the\
    \ security of any implementation.  This document does\n   not mandate access control.\
    \  This situation implies only that access\n   control is beyond the scope of\
    \ the standard information model, i.e.,\n   that access control may not be accessible\
    \ via any protocol based on\n   this model.  If access control objects are exposed\
    \ via an extension\n   to this model, the presence of access control may in itself\
    \ provide\n   points of attack by giving away information about principals that\n\
    \   have elevated rights.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The author wishes to extend his thanks to Love Hoernquist-Aestrand\n\
    \   and Sam Hartman for their important contributions to this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1964]  Linn, J., \"The Kerberos Version 5\
    \ GSS-API Mechanism\", RFC\n              1964, June 1996.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC3339]  Klyne, G., Ed. and C. Newman, \"\
    Date and Time on the\n              Internet: Timestamps\", RFC 3339, July 2002.\n\
    \   [RFC3961]  Raeburn, K., \"Encryption and Checksum Specifications for\n   \
    \           Kerberos 5\", RFC 3961, February 2005.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66, RFC\n              3986, January 2005.\n  \
    \ [RFC4120]  Neuman, C., Yu, T., Hartman, S., and K. Raeburn, \"The\n        \
    \      Kerberos Network Authentication Service (V5)\", RFC 4120,\n           \
    \   July 2005.\n   [RFC4122]  Leach, P., Mealling, M., and R. Salz, \"A Universally\n\
    \              Unique IDentifier (UUID) URN Namespace\", RFC 4122, July\n    \
    \          2005.\n   [RFC4517]  Legg, S., \"Lightweight Directory Access Protocol\
    \ (LDAP):\n              Syntaxes and Matching Rules\", RFC 4517, June 2006.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [PASSWORD] Williams, N., \"Kerberos Set/Change\
    \ Key/Password Protocol\n              Version 2\", Work in Progress, November\
    \ 2008.\n   [RFC4510]  Zeilenga, K., \"Lightweight Directory Access Protocol\n\
    \              (LDAP): Technical Specification Road Map\", RFC 4510, June\n  \
    \            2006.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Leif Johansson\n   Swedish University Network\n   Thulegatan\
    \ 11\n   Stockholm\n   Sweden\n   EMail: leifj@sunet.se\n   URI:   http://www.sunet.se\n"
