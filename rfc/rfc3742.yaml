- title: __initial_text__
  contents:
  - '        Limited Slow-Start for TCP with Large Congestion Windows

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an optional modification for TCP's slow-start\n\
    \   for use with TCP connections with large congestion windows.  For TCP\n   connections\
    \ that are able to use congestion windows of thousands (or\n   tens of thousands)\
    \ of MSS-sized segments (for MSS the sender's\n   MAXIMUM SEGMENT SIZE), the current\
    \ slow-start procedure can result in\n   increasing the congestion window by thousands\
    \ of segments in a single\n   round-trip time.  Such an increase can easily result\
    \ in thousands of\n   packets being dropped in one round-trip time.  This is often\n\
    \   counter-productive for the TCP flow itself, and is also hard on the\n   rest\
    \ of the traffic sharing the congested link.  This note describes\n   Limited\
    \ Slow-Start as an optional mechanism for limiting the number\n   of segments\
    \ by which the congestion window is increased for one\n   window of data during\
    \ slow-start, in order to improve performance for\n   TCP connections with large\
    \ congestion windows.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This note describes an optional modification for TCP's slow-start\
    \ for\n   use with TCP connections with large congestion windows.  For TCP\n \
    \  connections that are able to use congestion windows of thousands (or\n   tens\
    \ of thousands) of MSS-sized segments (for MSS the sender's\n   MAXIMUM SEGMENT\
    \ SIZE), the current slow-start procedure can result in\n   increasing the congestion\
    \ window by thousands of segments in a single\n   round-trip time.  Such an increase\
    \ can easily result in thousands of\n   packets being dropped in one round-trip\
    \ time.  This is often\n   counter-productive for the TCP flow itself, and is\
    \ also hard on the\n   rest of the traffic sharing the congested link.  This note\
    \ describes\n   Limited Slow-Start, limiting the number of segments by which the\n\
    \   congestion window is increased for one window of data during slow-\n   start,\
    \ in order to improve performance for TCP connections with large\n   congestion\
    \ windows.\n   When slow-start results in a large increase in the congestion window\n\
    \   in one round-trip time, a large number of packets might be dropped in\n  \
    \ the network (even with carefully-tuned active queue management\n   mechanisms\
    \ in the routers).  This drop of a large number of packets\n   in the network\
    \ can result in unnecessary retransmit timeouts for the\n   TCP connection.  The\
    \ TCP connection could end up in the congestion\n   avoidance phase with a very\
    \ small congestion window, and could take a\n   large number of round-trip times\
    \ to recover its old congestion\n   window.  This poor performance is illustrated\
    \ in [F02].\n"
- title: 2.  The Proposal for Limited Slow-Start
  contents:
  - "2.  The Proposal for Limited Slow-Start\n   Limited Slow-Start introduces a parameter,\
    \ \"max_ssthresh\", and\n   modifies the slow-start mechanism for values of the\
    \ congestion window\n   where \"cwnd\" is greater than \"max_ssthresh\".  That\
    \ is, during Slow-\n   Start, when\n      cwnd <= max_ssthresh,\n   cwnd is increased\
    \ by one MSS (MAXIMUM SEGMENT SIZE) for every\n   arriving ACK (acknowledgement)\
    \ during slow-start, as is always the\n   case.  During Limited Slow-Start, when\n\
    \      max_ssthresh < cwnd <= ssthresh,\n   the invariant is maintained so that\
    \ the congestion window is\n   increased during slow-start by at most max_ssthresh/2\
    \ MSS per round-\n   trip time.  This is done as follows:\n      For each arriving\
    \ ACK in slow-start:\n        If (cwnd <= max_ssthresh)\n           cwnd += MSS;\n\
    \        else\n           K = int(cwnd/(0.5 max_ssthresh));\n           cwnd +=\
    \ int(MSS/K);\n   Thus, during Limited Slow-Start the window is increased by 1/K\
    \ MSS\n   for each arriving ACK, for K = int(cwnd/(0.5 max_ssthresh)), instead\n\
    \   of by 1 MSS as in standard slow-start [RFC2581].\n   When\n     ssthresh <\
    \ cwnd,\n   slow-start is exited, and the sender is in the Congestion Avoidance\n\
    \   phase.\n   Our recommendation would be for max_ssthresh to be set to 100 MSS.\n\
    \   (This is illustrated in the NS [NS] simulator, for snapshots after\n   May\
    \ 1, 2002, in the tests \"./test-all-tcpHighspeed tcp1A\" and\n   \"./test-all-tcpHighspeed\
    \ tcpHighspeed1\" in the subdirectory\n   \"tcl/lib\".  Setting max_ssthresh to\
    \ Infinity causes the TCP\n   connection in NS not to use Limited Slow-Start.)\n\
    \   With Limited Slow-Start, when the congestion window is greater than\n   max_ssthresh,\
    \ the window is increased by at most 1/2 MSS for each\n   arriving ACK; when the\
    \ congestion window is greater than 1.5\n   max_ssthresh, the window is increased\
    \ by at most 1/3 MSS for each\n   arriving ACK, and so on.\n   With Limited Slow-Start\
    \ it takes:\n      log(max_ssthresh)\n   round-trip times to reach a congestion\
    \ window of max_ssthresh, and it\n   takes:\n      log(max_ssthresh) + (cwnd -\
    \ max_ssthresh)/(max_ssthresh/2)\n   round-trip times to reach a congestion window\
    \ of cwnd, for a\n   congestion window greater than max_ssthresh.\n   Thus, with\
    \ Limited Slow-Start with max_ssthresh set to 100 MSS, it\n   would take 836 round-trip\
    \ times to reach a congestion window of\n   83,000 packets, compared to 16 round-trip\
    \ times without Limited\n   Slow-Start (assuming no packet drops).  With Limited\
    \ Slow-Start, the\n   largest transient queue during slow-start would be 100 packets;\n\
    \   without Limited Slow-Start, the transient queue during Slow-Start\n   would\
    \ reach more than 32,000 packets.\n   By limiting the maximum increase in the\
    \ congestion window in a\n   round-trip time, Limited Slow-Start can reduce the\
    \ number of drops\n   during slow-start, and improve the performance of TCP connections\n\
    \   with large congestion windows.\n"
- title: 3.  Experimental Results
  contents:
  - "3.  Experimental Results\n   Tom Dunigan has added Limited Slow-Start to the\
    \ Linux 2.4.16 Web100\n   kernel, and performed experiments comparing TCP with\
    \ and without\n   Limited Slow-Start [D02].  Results so far show improved performance\n\
    \   for TCPs using Limited Slow-Start.  There are also several\n   experiments\
    \ comparing different values for max_ssthresh.\n"
- title: 4.  Related Proposals
  contents:
  - "4.  Related Proposals\n   There has been considerable research on mechanisms\
    \ for the TCP sender\n   to learn about the limitations of the available bandwidth,\
    \ and to\n   exit slow-start before receiving a congestion indication from the\n\
    \   network [VEGAS,H96].  Other proposals set TCP's slow-start parameter\n   ssthresh\
    \ based on information from previous TCP connections to the\n   same destination\
    \ [WS95,G00].  This document proposes a simple\n   limitation on slow-start that\
    \ can be effective in some cases even in\n   the absence of such mechanisms. \
    \ The max_ssthresh parameter does not\n   replace ssthresh, but is an additional\
    \ parameter.  Thus, Limited\n   Slow-Start could be used in addition to mechanisms\
    \ for setting\n   ssthresh.\n   Rate-based pacing has also been proposed to improve\
    \ the performance\n   of TCP during slow-start [VH97,AD98,KCRP99,ASA00].  We believe\
    \ that\n   rate-based pacing could be of significant benefit, and could be used\n\
    \   in addition to the Limited Slow-Start in this proposal.\n   Appropriate Byte\
    \ Counting [RFC3465] proposes that TCP increase its\n   congestion window as a\
    \ function of the number of bytes acknowledged,\n   rather than as a function\
    \ of the number of ACKs received.\n   Appropriate Byte Counting is largely orthogonal\
    \ to this proposal for\n   Limited Slow-Start.\n   Limited Slow-Start is also\
    \ orthogonal to other proposals to change\n   mechanisms for exiting slow-start.\
    \  For example, FACK TCP includes an\n   overdamping mechanism to decrease the\
    \ congestion window somewhat more\n   aggressively when a loss occurs during slow-start\
    \ [MM96].  It is also\n   true that larger values for the MSS would reduce the\
    \ size of the\n   congestion window in units of MSS needed to fill a given pipe,\
    \ and\n   therefore would reduce the size of the transient queue in units of\n\
    \   MSS.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   This proposal is part of a larger proposal for HighSpeed\
    \ TCP for TCP\n   connections with large congestion windows, and resulted from\n\
    \   simulations done by Evandro de Souza, in joint work with Deb Agarwal.\n  \
    \ This proposal for Limited Slow-Start draws in part from discussions\n   with\
    \ Tom Kelly, who has used a similar modified slow-start in his own\n   research\
    \ with congestion control for high-bandwidth connections.  We\n   also thank Tom\
    \ Dunigan for his experiments with Limited Slow-Start.\n   We thank Andrei Gurtov,\
    \ Reiner Ludwig, members of the End-to-End\n   Research Group, and members of\
    \ the Transport Area Working Group, for\n   feedback on this document.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This proposal makes no changes to the underlying\
    \ security of TCP.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2581] Allman, M., Paxson, V. and W. Stevens,\
    \ \"TCP Congestion\n             Control\", RFC 2581, April 1999.\n   [RFC3465]\
    \ Allman, M., \"TCP Congestion Control with Appropriate Byte\n             Counting\
    \ (ABC)\", RFC 3465, February 2003.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [AD98]    Mohit Aron and Peter Druschel, \"\
    TCP: Improving Start-up\n             Dynamics by Adaptive Timers and Congestion\
    \ Control\"\",\n             TR98-318, Rice University, 1998.  URL \"http://cs-\n\
    \             tr.cs.rice.edu/Dienst/UI/2.0/Describe/ncstrl.rice_cs/TR98-\n   \
    \          318/\".\n   [ASA00]   A. Aggarwal, S. Savage, and T. Anderson, \"Understanding\
    \ the\n             Performance of TCP Pacing\", Proceedings of the 2000 IEEE\n\
    \             Infocom Conference, Tel-Aviv, Israel, March, 2000.  URL\n      \
    \       \"http://www.cs.ucsd.edu/~savage/\".\n   [D02]     T. Dunigan, \"Floyd's\
    \ TCP slow-start and AIMD mods\", 2002.\n             URL \"http://www.csm.ornl.gov/~dunigan/net100/floyd.html\"\
    .\n   [F02]     S. Floyd, \"Performance Problems with TCP's Slow-Start\",\n  \
    \           2002.  URL \"http://www.icir.org/floyd/hstcp/slowstart/\".\n   [G00]\
    \     A. Gurtov, \"TCP Performance in the Presence of Congestion\n           \
    \  and Corruption Losses\", Master's Thesis, University of\n             Helsinki,\
    \ Department of Computer Science, Helsinki,\n             December 2000.  URL\n\
    \             \"http://www.cs.helsinki.fi/u/gurtov/papers/ms_thesis.html\".\n\
    \   [H96]     J. C. Hoe, \"Improving the Start-up Behavior of a Congestion\n \
    \            Control Scheme for TCP\", SIGCOMM 96, 1996.  URL\n             \"\
    http://www.acm.org/sigcomm/sigcomm96/program.html\".\n   [KCRP99]  J. Kulik, R.\
    \ Coulter, D. Rockwell, and C. Partridge, \"A\n             Simulation Study of\
    \ Paced TCP\", BBN Technical Memorandum\n             No. 1218, 1999.  URL\n \
    \            \"http://www.ir.bbn.com/documents/techmemos/index.html\".\n   [MM96]\
    \    M. Mathis and J. Mahdavi, \"Forward Acknowledgment: Refining\n          \
    \   TCP Congestion Control\", SIGCOMM, August 1996.\n   [NS]      The Network\
    \ Simulator (NS). URL\n             \"http://www.isi.edu/nsnam/ns/\".\n   [VEGAS]\
    \   Vegas Web Page, University of Arizona.  URL\n             \"http://www.cs.arizona.edu/protocols/\"\
    .\n   [VH97]    Vikram Visweswaraiah and John Heidemann, \"Rate Based Pacing\n\
    \             for TCP\", 1997.  URL\n             \"http://www.isi.edu/lsam/publications/rate_based_pacing/\"\
    .\n   [WS95]    G. Wright and W. Stevens, \"TCP/IP Illustrated\", Volume 2,\n\
    \             Addison-Wesley Publishing Company, 1995.\n"
- title: Authors' Address
  contents:
  - "Authors' Address\n   Sally Floyd\n   ICIR (ICSI Center for Internet Research)\n\
    \   Phone: +1 (510) 666-2989\n   EMail: floyd@icir.org\n   URL: http://www.icir.org/floyd/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).  This\
    \ document is subject\n   to the rights, licenses and restrictions contained in\
    \ BCP 78 and\n   except as set forth therein, the authors retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS\
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed\n   to pertain to the implementation or use of the technology\n   described\
    \ in this document or the extent to which any license\n   under such rights might\
    \ or might not be available; nor does it\n   represent that it has made any independent\
    \ effort to identify any\n   such rights.  Information on the procedures with\
    \ respect to\n   rights in RFC documents can be found in BCP 78 and BCP 79.\n\
    \   Copies of IPR disclosures made to the IETF Secretariat and any\n   assurances\
    \ of licenses to be made available, or the result of an\n   attempt made to obtain\
    \ a general license or permission for the use\n   of such proprietary rights by\
    \ implementers or users of this\n   specification can be obtained from the IETF\
    \ on-line IPR repository\n   at http://www.ietf.org/ipr.\n   The IETF invites\
    \ any interested party to bring to its attention\n   any copyrights, patents or\
    \ patent applications, or other\n   proprietary rights that may cover technology\
    \ that may be required\n   to implement this standard.  Please address the information\
    \ to the\n   IETF at ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
