- title: __initial_text__
  contents:
  - "              URNs for the Alert-Info Header Field of the\n                 \
    \  Session Initiation Protocol (SIP)\n"
- title: Abstract
  contents:
  - "Abstract\n   The Session Initiation Protocol (SIP) supports the capability to\n\
    \   provide a reference to a specific rendering to be used by the User\n   Agent\
    \ (UA) as an alerting signal (e.g., a ring tone or ringback tone)\n   when the\
    \ user is alerted.  This is done using the Alert-Info header\n   field.  However,\
    \ the reference (typically a URL) addresses only a\n   specific network resource\
    \ with specific rendering properties.  There\n   is currently no support for standard\
    \ identifiers for describing the\n   semantics of the alerting situation or the\
    \ characteristics of the\n   alerting signal, without being tied to a particular\
    \ rendering.  To\n   overcome these limitations and support new applications,\
    \ a new family\n   of URNs for use in Alert-Info header fields (and situations\
    \ with\n   similar requirements) is defined in this specification.\n   This document\
    \ normatively updates RFC 3261, which defines the Session\n   Initiation Protocol\
    \ (SIP).  It changes the usage of the Alert-Info\n   header field defined in RFC\
    \ 3261 by additionally allowing its use in\n   any non-100 provisional response\
    \ to INVITE.  This document also\n   permits proxies to add or remove an Alert-Info\
    \ header field and to\n   add or remove Alert-Info header field values.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7462.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n\
    \   2. Requirements Language ...........................................7\n  \
    \ 3. Terminology .....................................................7\n   4.\
    \ Updates to RFC 3261 .............................................7\n      4.1.\
    \ Allow Alert-Info in Provisional Responses ..................7\n      4.2. Proxies\
    \ May Alter Alert-Info Header Fields .................8\n   5. Requirements ....................................................8\n\
    \   6. Use Cases ......................................................10\n  \
    \    6.1. PBX Ring Tones ............................................10\n    \
    \       6.1.1. Normal .............................................10\n      \
    \     6.1.2. External ...........................................10\n        \
    \   6.1.3. Internal ...........................................11\n          \
    \ 6.1.4. Priority ...........................................11\n           6.1.5.\
    \ Short ..............................................11\n           6.1.6. Delayed\
    \ ............................................11\n      6.2. Service Tones .............................................11\n\
    \           6.2.1. Call Waiting .......................................11\n  \
    \         6.2.2. Forward ............................................12\n    \
    \       6.2.3. Transfer Recall ....................................12\n      \
    \     6.2.4. Auto Callback ......................................12\n        \
    \   6.2.5. Hold Recall ........................................12\n      6.3.\
    \ Country-Specific Ringback Tone Indications for the\n           Public Switched\
    \ ...........................................12\n   7. URN Specification for the\
    \ \"alert\" Namespace Identifier .........12\n   8. \"alert\" URN Values .............................................18\n\
    \      8.1. <alert-category> Values ...................................18\n  \
    \    8.2. <alert-indication> Values .................................18\n    \
    \       8.2.1. <alert-indication> Values for the\n                  <alert-category>\
    \ \"service\" .........................19\n           8.2.2. <alert-indication>\
    \ Values for the\n                  <alert-category> \"source\" ..........................19\n\
    \           8.2.3. <alert-indication> Values for the\n                  <alert-category>\
    \ \"priority\" ........................19\n           8.2.4. <alert-Indication>\
    \ Values for the\n                  <alert-category> \"duration\" ........................20\n\
    \           8.2.5. <alert-indication> Values for the\n                  <alert-category>\
    \ \"delay\" ...........................20\n           8.2.6. <alert-indication>\
    \ Values for the\n                  <alert-category> \"locale\" ..........................20\n\
    \   9. IANA Considerations ............................................20\n  \
    \    9.1. URN Namespace Identifier \"alert\" ..........................20\n  \
    \    9.2. 'Alert URN Identifiers' Registry ..........................20\n    \
    \       9.2.1. Initial IANA Registration ..........................21\n      \
    \            9.2.1.1. The \"service\" <alert-category> and\n                 \
    \          <alert-identifier>s .......................22\n                  9.2.1.2.\
    \ The \"source\" <alert-category> and\n                           <alert-identifier>s\
    \ .......................23\n                  9.2.1.3. The \"priority\" <alert-category>\n\
    \                           and <alert-identifier>s ...................24\n  \
    \                9.2.1.4. The \"duration\" <alert-category>\n                \
    \           and <alert-identifier>s ...................24\n                  9.2.1.5.\
    \ The \"delay\" <alert-category> and\n                           <alert-identifier>s\
    \ .......................25\n                  9.2.1.6. The \"locale\" <alert-category>\
    \ and\n                           <alert-identifier>s .......................25\n\
    \      9.3. 'Alert URN Providers' Registry ............................26\n  \
    \ 10. Extension Rules ...............................................26\n    \
    \  10.1. General Extension Rules ..................................26\n      10.2.\
    \ Private Extension Rules ..................................27\n      10.3. Examples\
    \ .................................................28\n           10.3.1. Subsetting\
    \ an Existing URN ........................28\n           10.3.2. A New Value within\
    \ an <alert-category> ............29\n           10.3.3. A New <alert-category>\
    \ ............................29\n           10.3.4. Subsetting a Private Extension\
    \ URN ................29\n   11. Combinations of \"alert\" URNs ..................................30\n\
    \      11.1. Priority Rules ...........................................30\n  \
    \    11.2. Multi-mode Signals .......................................31\n   12.\
    \ Non-normative Algorithm for Handling Combinations of URNs .....32\n      12.1.\
    \ Algorithm Description ....................................32\n      12.2. Examples\
    \ of How the Algorithm Works ......................34\n           12.2.1. Example\
    \ 1 .........................................34\n           12.2.2. Example 2\
    \ .........................................35\n           12.2.3. Example 3 .........................................37\n\
    \           12.2.4. Example 4 .........................................38\n  \
    \         12.2.5. Example 5 .........................................39\n   13.\
    \ User Agent Behaviour ..........................................40\n   14. Proxy\
    \ Behaviour ...............................................41\n   15. Internationalization\
    \ Considerations ...........................42\n   16. Security Considerations\
    \ .......................................42\n   17. References ....................................................43\n\
    \      17.1. Normative References .....................................43\n  \
    \    17.2. Informative References ...................................44\n   Acknowledgements\
    \ ..................................................45\n   Authors' Addresses\
    \ ................................................46\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) [RFC3261] includes\
    \ a means to\n   suggest to a User Agent (UA) a particular ringback tone or ring\
    \ tone\n   to be used during session establishment.  In [RFC3261], this is done\n\
    \   by including a URI, in the Alert-Info header field, that specifies a\n   reference\
    \ to the tone.  The URI is most commonly the HTTP URL to an\n   audio file.  On\
    \ the receipt of the Alert-Info header field, the UA\n   may fetch the referenced\
    \ ringback tone or ring tone and play it to\n   the user.\n   This mechanism hinders\
    \ interoperability when there is no common\n   understanding of the meaning of\
    \ the referenced tone, which might be\n   country- or vendor-specific.  It can\
    \ lead to problems for the user\n   trying to interpret the tone and for the UA\
    \ wanting to substitute its\n   own tone (e.g., in accordance with user preferences)\
    \ or provide an\n   alternative alerting mode (e.g., for deaf and hard-of-hearing\
    \ users).\n   If the caller and the callee are from different countries, their\n\
    \   understanding of the tones may differ significantly.  Deaf or hard-\n   of-hearing\
    \ users may not sense the specific tone if it is provided as\n   an audio file.\
    \  The tone, per se, is also not useful for automata.\n   Another limitation of\
    \ using URLs of audio files is that the\n   referenced tones are tied to particular\
    \ renderings.  There is no\n   method to signal the semantic intention of the\
    \ alert while enabling\n   the recipient UA to choose the specific alert indication\
    \ (such as a\n   particular tone, vibration, or visual display) to use to signal\
    \ the\n   intention.  Similarly, there is no method to signal particular\n   rendering\
    \ features (such as short duration, delay, or country-\n   specific conventions).\n\
    \   The issues with URLs that reference audio files can be avoided by\n   using\
    \ fixed URLs with specific meanings.  However, this approach has\n   its own interoperability\
    \ issues.  For example, consider the Private\n   Branch Exchange (PBX) special\
    \ ring tone for an external (to the PBX)\n   caller.  Different vendors use different\
    \ approaches such as:\n      Alert-Info: <file://ring.pcm>;alert=external\n  \
    \ where ring.pcm is a dummy file name, or:\n      Alert-Info: <file://external.ring.pcm>\n\
    \      Alert-Info: <sip:external-ringtone@example.com>\n   As a result, the Alert-Info\
    \ header field currently only works when\n   the same vendor provides a PBX and\
    \ UA, and only then if the same\n   artificial proprietary URI convention is used.\n\
    \   To solve the described issues, this specification defines the new URN\n  \
    \ namespace \"alert\" for the SIP Alert-Info header field that allows for\n  \
    \ programmatic user interface adaptation and for conversion of\n   equivalent\
    \ alerting tones in the Public Switched Telephone Network\n   (PSTN) when the\
    \ client is a gateway.  The work to standardize an\n   \"alert\" URN will increase\
    \ SIP interoperability for this header field\n   by replacing proprietary conventions\
    \ used today.\n   The \"alert\" namespace provides a syntax for several different\n\
    \   application spaces, for example:\n   o  Names for service indications, such\
    \ as call waiting or automatic\n      callback, not tied to any particular rendering.\n\
    \   o  Names for common ring tones generated by PBX phones for cases such\n  \
    \    as an internal enterprise caller, external caller, ringback tone\n      after\
    \ a transfer failure or expiration of a hold timer, etc.\n   o  Names for country-specific\
    \ ringback tones.\n   o  Names for things with specific renderings that aren't\
    \ purely\n      audio.  They might be static icons, video sequences, text, etc.\n\
    \   Some advantages of a URN rather than a URL of a downloadable\n   resource:\n\
    \   o  There is no need to download it or deal with security issues\n      associated\
    \ with dereferencing.\n   o  There are no formatting or compatibility issues.\n\
    \   o  There is no security risk of rendering something unexpected and\n     \
    \ undesirable.\n   o  The tone can be stored locally in whatever format and at\
    \ whatever\n      quality level is appropriate, because it is specified \"by name\"\
    \n      rather than \"by value\".\n   o  It is easier to make policy decisions\
    \ about whether or not to use\n      it.\n   o  It facilitates translation for\
    \ the deaf and hard of hearing.\n   The downside is that if the recipient does\
    \ not understand the URN,\n   then it will only be able to render a default ringback\
    \ tone or ring\n   tone.\n   This document creates a new URN namespace and registry\
    \ for alert\n   indications and registers some initial values.\n   In practice,\
    \ this specification extends the usage of the Alert-Info\n   header field in that\
    \ it will cause the use of a new class of URIs and\n   the use of multiple URIs.\
    \  Backward compatibility issues are not\n   expected, as devices that do not\
    \ understand an \"alert\" URN should\n   ignore it, and devices should not malfunction\
    \ upon receiving multiple\n   Alert-Info header field values (<alert-param>s in\
    \ [RFC3261]) (which\n   was syntactically permitted before, but rarely used).\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   This specification uses a number of terms to refer to the\
    \ roles\n   involved in the use of alerting indications in SIP.  A \"specifier\"\
    \n   sends an \"alerting indication\" (one or more URNs in an Alert-Info\n   header\
    \ field) to a \"renderer\", which then \"renders\" a \"signal\" or\n   \"rendering\"\
    \ based on the indication to a human user.  A \"category\" is\n   a characteristic\
    \ whose \"values\" can be used to classify indications.\n   This specification\
    \ uses the terms \"ring tone\" and \"ringback tone\".  A\n   \"ring tone\" or\
    \ \"calling signal\" (terminology used in [E182]) is a\n   signal generated by\
    \ the callee's end device, advising the callee\n   about an incoming call.  A\
    \ \"ringback tone\" or \"ringing tone\"\n   (terminology used in [E182]) is a\
    \ signal advising the caller that a\n   connection has been made and that a ring\
    \ tone is being rendered to\n   the callee.\n"
- title: 4.  Updates to RFC 3261
  contents:
  - '4.  Updates to RFC 3261

    '
- title: 4.1.  Allow Alert-Info in Provisional Responses
  contents:
  - "4.1.  Allow Alert-Info in Provisional Responses\n   This specification changes\
    \ the usage of the Alert-Info header field\n   defined in [RFC3261] by additionally\
    \ allowing its use in any non-100\n   provisional response to INVITE.\n   Previously,\
    \ the Alert-Info header field was only permitted in 180\n   (Ringing) responses.\
    \  But in telephony, other situations indicated by\n   SIP provisional responses,\
    \ such as 181 (Call Is Being Forwarded) and\n   182 (Call Is Being Queued), are\
    \ often indicated by tones.  Extending\n   the applicability of the Alert-Info\
    \ header field allows the telephony\n   practice to be implemented in SIP.\n \
    \  To support this change, the following paragraph replaces the the\n   first\
    \ paragraph of Section 20.4 of [RFC3261]:\n      When present in an INVITE request,\
    \ the Alert-Info header field\n      specifies an alternative ring tone to the\
    \ User Agent Server (UAS).\n      When present in a non-100 provisional response,\
    \ the Alert-Info\n      header field specifies an alternative ringback tone to\
    \ the UAC.  A\n      typical usage is for a proxy to insert this header field\
    \ to\n      provide a distinctive ring feature.\n"
- title: 4.2.  Proxies May Alter Alert-Info Header Fields
  contents:
  - "4.2.  Proxies May Alter Alert-Info Header Fields\n   A SIP proxy MAY add or remove\
    \ an Alert-Info header field, and it MAY\n   add or remove Alert-Info header field\
    \ values, in a SIP request or a\n   non-100 provisional response.\n"
- title: 5.  Requirements
  contents:
  - "5.  Requirements\n   This section discusses the requirements for an alerting\
    \ indication to\n   transport the semantics of the alerting situation or the\n\
    \   characteristics of the rendering.\n   REQ-1:  The mechanism will allow UAs\
    \ and proxies to provide in the\n           Alert-Info header field an alerting\
    \ indication that describes\n           the semantics of the signaling situation\
    \ or the\n           characteristics of the rendering and allows the recipient\
    \ to\n           decide how to render the received information to the user.\n\
    \   REQ-2:  The mechanism will allow the alerting indication to be\n         \
    \  specified \"by name\" rather than \"by value\", to enable local\n         \
    \  policy decisions whether or not to use it.\n   REQ-3:  The mechanism will enable\
    \ alerting indications to represent a\n           wide variety of signals, which\
    \ have many largely orthogonal\n           characteristics.\n   REQ-4:  The mechanism\
    \ will enable the set of alerting indications to\n           support extensibility\
    \ by a wide variety of organizations that\n           are not coordinated with\
    \ each other.  Extensions will be able\n           to:\n               add further\
    \ values to any existing category\n               add further categories that\
    \ are orthogonal to existing\n               categories\n               semantically\
    \ subdivide the meaning provided by any\n               existing indication\n\
    \   REQ-5:   The mechanism will be flexible, so new alerting indications\n   \
    \         can be defined in the future, when SIP-applications evolve.\n      \
    \      For example, \"alert\" URNs could identify specific media by\n        \
    \    name, such as \"Beethoven's Fifth\", and the end device could\n         \
    \   render some small part of it as a ring tone.\n   REQ-6:   The mechanism will\
    \ provide only an indication capability,\n            not a negotiation capability.\n\
    \   REQ-7:   The mechanism will not require an alerting indication to\n      \
    \      depend on context provided by a previous alerting indication\n        \
    \    in either direction.\n   REQ-8:   The mechanism will allow transmission in\
    \ the Alert-Info\n            header field of SIP INVITE requests and provisional\
    \ 1xx\n            responses excepting the 100 responses.\n   REQ-9:   The mechanism\
    \ will be able to accommodate both renderers\n            that are customized\
    \ with a limited or uncommon set of\n            signals that they can render\
    \ and renderers that are provided\n            with a set of signals that have\
    \ uncommon semantics.  (The\n            canonical example is a UA for the deaf\
    \ and hard of hearing,\n            customized with an alternative set of signals,\
    \ video or text\n            instead of audio.  By REQ-6, the renderer has no\
    \ way of\n            transmitting this fact to the specifier.)\n   REQ-10:  The\
    \ mechanism will allow an alerting indication to reliably\n            carry all\
    \ extensions if the specifier and the renderer have\n            designs that\
    \ are properly coordinated.\n   REQ-11:  The mechanism will allow a renderer to\
    \ select a tone that\n            approximates to that intended by the specifier\
    \ if the\n            renderer is unable to provide the precise tone indicated.\n\
    \   REQ-12:  The mechanism will support alerting indications relating to\n   \
    \         services such as call waiting, call forwarding, transfer\n         \
    \   recall, auto callback, and hold recall.\n   REQ-13:  The mechanism will allow\
    \ rendering common PBX ring tone\n            types.\n   REQ-14:  The mechanism\
    \ will allow rendering specific country ringback\n            tones.\n   REQ-15:\
    \  The mechanism will allow rendering tones for emergency\n            alerts.\
    \  (Use cases and definitions of URN values for\n            emergency calls are\
    \ not a subject of this specification.)\n   REQ-16:  The mechanism will allow\
    \ rendering using other means than\n            tones, e.g., text or images.\n\
    \   REQ-17:  The mechanism will allow PSTN gateways to map ring/ringback\n   \
    \         tones from legacy protocols to SIP at the edge of a network,\n     \
    \       e.g., national ring tones as defined in TIA/EIA-41-D and\n           \
    \ 3GPP2 A.S0014.  (Use cases and values definition for this\n            situation\
    \ are not a subject of this specification.)\n   REQ-18:  The mechanism will ensure\
    \ that if an UA receives \"alert\"\n            URNs or portions of an \"alert\"\
    \ URN it does not understand,\n            it can ignore them.\n   REQ-19:  The\
    \ mechanism will allow storage of the actual encoding of\n            the rendering\
    \ locally rather than fetching it.\n   REQ-20:  The mechanism must provide a simple\
    \ way to combine two or\n            more alerting indications to produce an alerting\
    \ indication\n            that requests a combination of the intentions of the\
    \ two\n            alerting indications, where any contradictions or conflicts\n\
    \            between the two alerting indications are resolved in favor\n    \
    \        of the intention of the first alerting indication.\n"
- title: 6.  Use Cases
  contents:
  - "6.  Use Cases\n   This section describes some use cases for which the \"alert\"\
    \ URN\n   mechanism is needed today.\n"
- title: 6.1.  PBX Ring Tones
  contents:
  - "6.1.  PBX Ring Tones\n   This section defines some commonly encountered ring\
    \ tones on PBX or\n   business phones.  They are as listed in the following subsections.\n"
- title: 6.1.1.  Normal
  contents:
  - "6.1.1.  Normal\n   This tone indicates that the default or normal ring tone should\
    \ be\n   rendered.  This is essentially a no-operation \"alert\" URN and should\n\
    \   be treated by the UA as if no \"alert\" URN is present.  This is most\n  \
    \ useful when Alert-Info header field parameters are being used.  For\n   example,\
    \ in [RFC7463], an Alert-Info header field needs to be present\n   containing\
    \ the \"appearance\" parameter, but no special ring tone needs\n   to be specified.\n"
- title: 6.1.2.  External
  contents:
  - "6.1.2.  External\n   This tone is used to indicate that the caller is external\
    \ to the\n   enterprise or PBX system.  This could be a call from the PSTN or\
    \ from\n   a SIP trunk.\n"
- title: 6.1.3.  Internal
  contents:
  - "6.1.3.  Internal\n   This tone is used to indicate that the caller is internal\
    \ to the\n   enterprise or PBX system.  The call could have been originated from\n\
    \   another user on this PBX or on another PBX within the enterprise.\n"
- title: 6.1.4.  Priority
  contents:
  - "6.1.4.  Priority\n   A PBX tone needs to indicate that a priority level alert\
    \ should be\n   applied for the type of alerting specified (e.g., internal alerting).\n"
- title: 6.1.5.  Short
  contents:
  - "6.1.5.  Short\n   In this case, the alerting type specified (e.g., internal alerting)\n\
    \   should be rendered shorter than normal.  In contact centers, this is\n   sometimes\
    \ referred to as \"abbreviated ringing\" or a \"zip tone\".\n"
- title: 6.1.6.  Delayed
  contents:
  - "6.1.6.  Delayed\n   In this case, the alerting type specified should be rendered\
    \ after a\n   short delay.  In some bridged-line/shared-line-appearance\n   implementations,\
    \ this is used so that the bridged line does not ring\n   at exactly the same\
    \ time as the main line but is delayed a few\n   seconds.\n"
- title: 6.2.  Service Tones
  contents:
  - "6.2.  Service Tones\n   These tones are used to indicate specific PBX and public\
    \ network\n   telephony services.\n"
- title: 6.2.1.  Call Waiting
  contents:
  - "6.2.1.  Call Waiting\n   The call-waiting service [TS24.615] permits a callee\
    \ to be notified\n   of an incoming call while the callee is engaged in an active\
    \ or held\n   call.  Subsequently, the callee can either accept, reject, or ignore\n\
    \   the incoming call.  There is an interest on the caller side to be\n   informed\
    \ about the call-waiting situation on the callee side.  Having\n   this information\
    \ the caller can decide whether to continue waiting\n   for callee to pickup or\
    \ better to call some time later when it is\n   estimated that the callee could\
    \ have finished the ongoing\n   conversation.  To provide this information, a\
    \ callee's UA (or proxy)\n   that is aware of the call-waiting condition can add\
    \ the call-waiting\n   indication to the Alert-Info header field in the 180 (Ringing)\n\
    \   response.\n"
- title: 6.2.2.  Forward
  contents:
  - "6.2.2.  Forward\n   This feature is used in a 180 (Ringing) response when a call\n\
    \   forwarding feature has been initiated on an INVITE.  Many PBX system\n   implement\
    \ a forwarding \"beep\" followed by normal ringing to indicate\n   this.  Note\
    \ that a 181 response can be used in place of this URN.\n"
- title: 6.2.3.  Transfer Recall
  contents:
  - "6.2.3.  Transfer Recall\n   This feature is used when a blind transfer [RFC5589]\
    \ has been\n   performed by a server on behalf of the transferor and fails.  Instead\n\
    \   of failing the call, the server calls back the transferor, giving\n   them\
    \ another chance to transfer or otherwise deal with the call.\n   This service\
    \ tone is used to distinguish this INVITE from a normal\n   incoming call.\n"
- title: 6.2.4.  Auto Callback
  contents:
  - "6.2.4.  Auto Callback\n   This feature is used when a user has utilized a server\
    \ to implement\n   an automatic callback service [RFC6910].  When the user is\
    \ available,\n   the server calls back the user and utilizes this service tone\
    \ to\n   distinguish this INVITE from a normal incoming call.\n"
- title: 6.2.5.  Hold Recall
  contents:
  - "6.2.5.  Hold Recall\n   This feature is used when a server implements a call\
    \ hold timer on\n   behalf of an endpoint.  After a certain period of time of\
    \ being on\n   hold, the user who placed the call on hold is alerted to either\n\
    \   retrieve the call or otherwise dispose of the call.  This service\n   tone\
    \ is used to distinguish this case from a normal incoming call.\n"
- title: 6.3.  Country-Specific Ringback Tone Indications for the Public Switched
  contents:
  - "6.3.  Country-Specific Ringback Tone Indications for the Public Switched\n  \
    \    Telephone Network\n   In the PSTN, different tones are used in different\
    \ countries.  End\n   users are accustomed to hear the callee's country ringback\
    \ tone and\n   would like to have this feature for SIP.\n"
- title: 7.  URN Specification for the "alert" Namespace Identifier
  contents:
  - "7.  URN Specification for the \"alert\" Namespace Identifier\n   This section\
    \ provides the registration template for the \"alert\" URN\n   namespace identifier\
    \ (NID) according to [RFC2141] and [RFC3406].\n   Namespace ID:  alert\n   Registration\
    \ Information:\n      Registration version:  1\n      Registration date:  2014-12-10\n\
    \   Declared registrant of the namespace:\n      Registering organization:  Real-time\
    \ Applications and\n         Infrastructure Area, IETF\n      Designated contact:\
    \  RAI Area Director\n      Designated contact email:  rai-ads@ietf.org\n   Declaration\
    \ of syntactic structure:\n      The Namespace Specific String (NSS) for the \"\
    alert\" URNs is called\n      an <alert-identifier> and has a hierarchical structure.\
    \  The first\n      colon-separated part after \"alert\" is called the <alert-category>;\n\
    \      the parts to the right of that are <alert-ind-part>s, and together\n  \
    \    form the <alert-indication>.  The general form is\n      urn:alert:<alert-category>:<alert-indication>.\n\
    \      The following <alert-category> identifiers are defined in this\n      document:\
    \ \"service\" , \"priority\" , \"source\" , \"duration\", \"delay\",\n      and\
    \ \"locale\".  The <alert-category> set can be extended in the\n      future,\
    \ either by standardization or by private action.  The\n      <alert-category>s\
    \ describe distinct features of alerting signals.\n      Any \"alert\" URN defined\
    \ in this specification is syntactically\n      valid for ring and ringback tones\
    \ and can be used in SIP INVITE\n      requests or in provisional 1xx responses\
    \ excepting the 100\n      response.\n      The ABNF [RFC5234] for the \"alert\"\
    \ URNs is shown below:\n         alert-URN         = \"urn:alert:\" alert-identifier\n\
    \         alert-identifier  = alert-category \":\" alert-indication\n        \
    \ alert-category    = alert-name\n         alert-indication  = alert-ind-part\
    \ *(\":\" alert-ind-part)\n         alert-ind-part    = alert-name\n         alert-name\
    \        = alert-label / private-name\n         private-name      = alert-label\
    \ \"@\" provider\n         provider          = alert-label\n         alert-label\
    \       = let-dig [ *let-dig-hyp let-dig ]\n         let-dig-hyp       = let-dig\
    \ / \"-\"\n         let-dig           = ALPHA / DIGIT\n         ALPHA        \
    \     = %x41-5A / %x61-7A   ; A-Z / a-z\n         DIGIT             = %x30-39\
    \ ; 0-9\n      <alert-label>s MUST comply with the syntax for Non-Reserved LDH\n\
    \      labels [RFC5890].  Registered URNs and components thereof MUST be\n   \
    \   transmitted as registered (including case).\n   Relevant ancillary documentation:\
    \  RFC 7462\n   Namespace considerations:  This specification defines a URN namespace\n\
    \      \"alert\" for URNs representing signals or renderings that are\n      presented\
    \ to users to inform them of events and actions.  The\n      initial usage is\
    \ to specify ring tones and ringback tones when\n      dialogs are established\
    \ in SIP, but they can also be used for\n      other communication-initiation\
    \ protocols (e.g., H.323), and more\n      generally, in any situation (e.g.,\
    \ web pages or endpoint device\n      software configurations) to describe how\
    \ a user should be\n      signaled.\n      An \"alert\" URN does not describe\
    \ a complete signal, but rather it\n      describes a particular characteristic\
    \ of the event it is signaling\n      or a feature of the signal to be presented.\
    \  The complete\n      specification of the signal is a sequence of \"alert\"\
    \ URNs\n      specifying the desired characteristics/significance of the signal\n\
    \      in priority order, with the most important aspects specified by\n     \
    \ the earlier URNs.  This allows the sender of a sequence of URNs to\n      compose\
    \ very detailed specifications from a restricted set of\n      URNs, and to clearly\
    \ specify which aspects of the specification it\n      considers most important.\n\
    \      The initial scope of usage is in the Alert-Info header field, in\n    \
    \  initial INVITE requests (to indicate how the called user should be\n      alerted\
    \ regarding the call) and non-100 provisional (1xx)\n      responses to those\
    \ INVITE requests (to indicate the ringback, how\n      the calling user should\
    \ be alerted regarding the progress of the\n      call).\n      In order to ensure\
    \ widespread adoption of these URNs for\n      indicating ring tones and ringback\
    \ tones, the scheme must allow\n      replication of the current diversity of\
    \ these tones.  Currently,\n      these tones vary between the PSTNs of different\
    \ nations and\n      between equipment supplied by different vendors.  Thus, the\
    \ scheme\n      must accommodate national variations and proprietary extensions\
    \ in\n      a way that minimizes the information that is lost during\n      interoperation\
    \ between systems that follow different national\n      variations or that are\
    \ supplied by different vendors.\n      The scheme allows definition of private\
    \ extension URNs that refine\n      and extend the information provided by standard\
    \ URNs.  Private\n      extension URNs can also refine and extend the information\
    \ provided\n      by other private extension URNs.  Private extensions can also\n\
    \      define entirely new categories of information about calls.  We\n      expect\
    \ these extensions to be used extensively when existing PBX\n      products are\
    \ converted to support SIP operation.\n      The device that receives an Alert-Info\
    \ header field containing a\n      sequence of \"alert\" URNs provides to the\
    \ user a rendering that\n      represents the semantic content of the URNs.  The\
    \ device is given\n      great leeway in choosing the rendering, but it is constrained\
    \ by\n      rules that maximize interoperability between systems that support\n\
    \      different sets of private extensions.  In particular, earlier URNs\n  \
    \    in the sequence have priority of expression over later URNs in the\n    \
    \  sequence, and URNs that are not usable in their entirety (because\n      they\
    \ contain unknown extensions or are incompatible with previous\n      URNs) are\
    \ successively truncated in attempt to construct a URN\n      that retains some\
    \ information and is renderable in the context.\n      Due to the practical importance\
    \ of private extensions for the\n      adoption of URNs for alerting calls and\
    \ the very specific rules\n      for private extensions and the corresponding\
    \ processing rules that\n      allow quality interoperation in the face of private\
    \ extensions,\n      the requirements of the \"alert\" URN scheme cannot be met\
    \ by a\n      fixed enumeration of URNs and corresponding meanings.  In\n    \
    \  particular, the existing namespace \"urn:ietf:params\" does not\n      suffice\
    \ (unless the private extension apparatus is applied to that\n      namespace).\n\
    \      There do not appear to be other URN namespaces that uniquely\n      identify\
    \ the semantic of a signal or rendering feature.  Unlike\n      most other currently\
    \ registered URN namespaces, the \"alert\" URN\n      does not identify documents\
    \ and protocol objects (e.g., [RFC3044],\n      [RFC3120], [RFC3187], [RFC3188],\
    \ [RFC4179], [RFC4195], [RFC4198]),\n      types of telecommunications equipment\
    \ [RFC4152], people, or\n      organizations [RFC3043].\n      The <alert-URN>s\
    \ are hierarchical identifiers.  An <alert-URN>\n      asserts some fact or feature\
    \ of the offered SIP dialog, or some\n      fact or feature of how it should be\
    \ presented to a user, or of how\n      it is being presented to a user.  Removing\
    \ an <alert-ind-part>\n      from the end of an <alert-URN> (which has more than\
    \ one <alert-\n      ind-part>) creates a shorter <alert-URN> with a less specific\n\
    \      meaning; the set of dialogs to which the longer <alert-URN>\n      applies\
    \ is necessarily a subset of the set of dialogs to which the\n      shorter <alert-URN>\
    \ applies.  (If the starting <alert-URN>\n      contains only one <alert-ind-part>,\
    \ and thus the <alert-ind-part>\n      cannot be removed to make a shorter <alert-URN>,\
    \ we can consider\n      the set of dialogs to which the <alert-URN> applies to\
    \ be a subset\n      of the set of all dialogs.)\n      The specific criteria\
    \ defining the subset to which the longer\n      <alert-URN> applies, within the\
    \ larger set of dialogs, is\n      considered to be the meaning of the final <alert-ind-part>.\
    \  This\n      meaning is relative to and depends upon the preceding <alert-\n\
    \      category> and <alert-ind-part>s (if any).  The meanings of two\n      <alert-ind-part>s\
    \ that are textually the same but are preceded by\n      different <alert-category>s\
    \ or <alert-ind-part>s have no necessary\n      connection.  (An <alert-category>\
    \ considered alone has no meaning\n      in this sense.)\n      The organization\
    \ owning the <provider> within a <private-name>\n      specifies the meaning of\
    \ that <private-name> when it is used as an\n      <alert-ind-part>.  (The organization\
    \ owning a <provider> is\n      specified by the registry described in Section\
    \ 9.3.)\n      The organization owning the <provider> within a <private-name>\
    \ (in\n      either an <alert-category> or an <alert-ind-part>) specifies the\n\
    \      meaning of each <alert-ind-part>, which is an <alert-label> that\n    \
    \  follows that <private-name> and that precedes the next <alert-ind-\n      part>\
    \ which is a <private-name> (if any).\n      The meaning of all other <alert-ind-part>s\
    \ (i.e., those that are\n      not <private-name>s and do not follow a <private-name>)\
    \ is defined\n      by standardization.\n   Community considerations:  The \"\
    alert\" URNs are relevant to a large\n      cross-section of Internet users, namely\
    \ those that initiate and\n      receive communication connections via the Session\
    \ Initiation\n      Protocol.  These users include both technical and non-technical\n\
    \      users, on a variety of devices and with a variety of perception\n     \
    \ capabilities.  The \"alert\" URNs will allow Internet users to\n      receive\
    \ more information about offered calls and enable them to\n      better make decisions\
    \ about accepting an offered call, and to get\n      better feedback on the progress\
    \ of a call they have made.\n      User interfaces that utilize alternative sensory\
    \ modes can better\n      render the ring and ringback tones based on the \"alert\"\
    \ URNs\n      because the URNs provide more detailed information regarding the\n\
    \      intention of communications than is provided by current SIP\n      mechanisms.\n\
    \   Process of identifier assignment:\n      Assignment of standardized \"alert\"\
    \ URNs is by insertion into the\n      IANA registry described in Section 9.2.\
    \  This process defines the\n      meanings of <alert-ind-part>s that have standardized\
    \ meanings, as\n      described in \"Namespace Considerations\".\n      A new\
    \ URN MUST NOT be registered if it is equal by the comparison\n      rules to\
    \ an already registered URN.\n      Private extensions are \"alert\" URNs that\
    \ include <alert-ind-part>s\n      that are <private-name>s and <alert-label>s\
    \ that appear after a\n      <private-name> (either as an <alert-category> or\
    \ an <alert-\n      indication>).  If such an <alert-ind-part> is a <private-name>,\n\
    \      its meaning is defined by the organization that owns the\n      <provider>\
    \ that appears in the <private-name>.  If the <alert-ind-\n      part> is an <alert-label>,\
    \ its meaning is defined by the\n      organization that owns the <provider> that\
    \ appears in the closest\n      <private-name> preceding the <alert-label>.  The\
    \ organization\n      owning a <provider> is specified by the registry described\
    \ in\n      Section 9.3.\n   Identifier uniqueness and persistence considerations:\
    \  An \"alert\" URN\n      identifies a semantic feature of a call or a sensory\
    \ feature of\n      how the call alerting should be a rendered at the caller's\
    \ or\n      callee's end device.\n      For standardized <alert-ind-part>s in\
    \ URNs, uniqueness and\n      persistence of their meanings is guaranteed by the\
    \ fact that they\n      are registered with IANA in accordance with the procedures\
    \ of\n      Section 9.2; the feature identified by a particular \"alert\" URN\
    \ is\n      distinct from the feature identified by any other standardized\n \
    \     \"alert\" URN.\n      Assuring uniqueness and persistence of the meanings\
    \ of private\n      extensions is delegated to the organizations that define private\n\
    \      extension <alert-ind-part>s.  The organization responsible for a\n    \
    \  particular <alert-ind-part> in a particular \"alert\" URN is the\n      owner\
    \ of a syntactically determined <provider> part within the\n      URN.\n     \
    \ An organization SHOULD use only one <provider> value for all of\n      the <private-name>s\
    \ it defines.\n   Process for identifier resolution:  The process of identifier\n\
    \      resolution is the process by which a rendering device chooses a\n     \
    \ rendering to represent a sequence of \"alert\" URNs.  The device is\n      allowed\
    \ great leeway in making this choice, but the process MUST\n      obey the rules\
    \ of Section 11.1.  The device is expected to provide\n      renderings that users\
    \ associate with the meanings assigned to the\n      URNs within their cultural\
    \ context.  A non-normative example\n      resolution algorithm is given in Section\
    \ 12.1.\n   Rules for lexical equivalence:  \"alert\" URNs are compared according\n\
    \      to case-insensitive string equality.\n   Conformance with URN syntax: \
    \ All \"alert\" URNs must conform to the\n      ABNF in the \"Declaration of Syntactic\
    \ Structure\" in Section 7.\n      That ABNF is a subset of the generic URN syntax\
    \ [RFC2141].\n      <alert-label>s are constrained to be Non-Reserved LDH labels\n\
    \      [RFC5890], that is, \"ordinary ASCII labels\".  Future\n      standardization\
    \ may allow <alert-label>s that are A-labels\n      [RFC5890], and so interpreters\
    \ of \"alert\" URNs MUST operate\n      correctly (per Section 11.1) when given\
    \ such URNs as input.\n   Validation mechanism:  An \"alert\" URN containing no\
    \ private\n      extensions can be validated based on the IANA registry of\n \
    \     standardized \"alert\" URNs.  Validating an \"alert\" URN containing\n \
    \     private extensions requires obtaining information regarding the\n      private\
    \ extensions defined by the organization that owns the\n      <provider> in the\
    \ relevant <private-name>.  The identity of the\n      organization can be determined\
    \ from the IANA registry described in\n      Section 9.2.  However, if an \"alert\"\
    \ URN contains at least one\n      <alert-identifier> that precedes the first\
    \ <private-name>, the\n      portion of the \"alert\" URN that precedes the first\
    \ <private-name>\n      must itself be a valid standardized \"alert\" URN, which\
    \ may be\n      validated as above.\n   Scope:  The scope for this URN is public\
    \ and global.\n"
- title: 8.  "alert" URN Values
  contents:
  - '8.  "alert" URN Values

    '
- title: 8.1.  <alert-category> Values
  contents:
  - "8.1.  <alert-category> Values\n   The following <alert-category> values are defined\
    \ in this document:\n   - service\n   - source\n   - priority\n   - duration\n\
    \   - delay\n   - locale\n"
- title: 8.2.  <alert-indication> Values
  contents:
  - "8.2.  <alert-indication> Values\n   This section describes the \"alert\" URN\
    \ indication values for the\n   <alert-category>s defined in this document.\n\
    \   For each <alert-category>, a default <alert-indication> is defined,\n   which\
    \ is essentially a no-operation \"alert\" URN and should be treated\n   by the\
    \ UA as if no \"alert\" URN for the respective category is\n   present.  \"alert\"\
    \ URN default indications are most useful when Alert-\n   Info header field parameters\
    \ are being used.  For example, in\n   [RFC7463], an Alert-Info header field needs\
    \ to be present containing\n   the \"appearance\" parameter, but no special ringtone\
    \ need be\n   specified.\n   The <private-name> syntax is used for extensions\
    \ defined by\n   independent organizations, as described in Section 10.2.\n"
- title: 8.2.1.  <alert-indication> Values for the <alert-category> "service"
  contents:
  - "8.2.1.  <alert-indication> Values for the <alert-category> \"service\"\n   -\
    \ normal (default)\n   - call-waiting\n   - forward\n   - recall:callback\n  \
    \ - recall:hold\n   - recall:transfer\n   - <private-name>\n   Examples: <urn:alert:service:call-waiting>\
    \ or\n   <urn:alert:service:recall:transfer>.\n"
- title: 8.2.2.  <alert-indication> Values for the <alert-category> "source"
  contents:
  - "8.2.2.  <alert-indication> Values for the <alert-category> \"source\"\n   - unclassified\
    \ (default)\n   - internal\n   - external\n   - friend\n   - family\n   - <private-name>\n\
    \   (These <alert-indication>s will rarely be provided by the sending UA;\n  \
    \ rather they will usually be inserted by a proxy acting on behalf of\n   the\
    \ recipient UA to inform the recipient UA about the origins of a\n   call.)\n\
    \   Examples: <urn:alert:source:external>.\n"
- title: 8.2.3.  <alert-indication> Values for the <alert-category> "priority"
  contents:
  - "8.2.3.  <alert-indication> Values for the <alert-category> \"priority\"\n   -\
    \ normal (default)\n   - low\n   - high\n   - <private-name>\n   Examples: <urn:alert:priority:high>.\n"
- title: 8.2.4.  <alert-Indication> Values for the <alert-category> "duration"
  contents:
  - "8.2.4.  <alert-Indication> Values for the <alert-category> \"duration\"\n   -\
    \ normal (default)\n   - short\n   - long\n   - <private-name>\n   Examples: <urn:alert:duration:short>.\n"
- title: 8.2.5.  <alert-indication> Values for the <alert-category> "delay"
  contents:
  - "8.2.5.  <alert-indication> Values for the <alert-category> \"delay\"\n   - none\
    \ (default)\n   - yes\n   - <private-name>\n   Examples: <urn:alert:delay:yes>.\n"
- title: 8.2.6.  <alert-indication> Values for the <alert-category> "locale"
  contents:
  - "8.2.6.  <alert-indication> Values for the <alert-category> \"locale\"\n   - default\
    \ (default)\n   - country:<ISO 3166-1 country code>\n   - <private-name>\n   The\
    \ ISO 3166-1 country code [ISO3166-1] is used to inform the\n   renderer on the\
    \ other side of the call that a country-specific\n   rendering should be used.\
    \  For example, to indicate ringback tones\n   from South Africa, the following\
    \ URN would be used:\n   <urn:alert:locale:country:za>.\n"
- title: 9.  IANA Considerations
  contents:
  - '9.  IANA Considerations

    '
- title: 9.1.  URN Namespace Identifier "alert"
  contents:
  - "9.1.  URN Namespace Identifier \"alert\"\n   This section registers a new URN\
    \ namespace identifier (NID), \"alert\",\n   in accordance with [RFC3406] with\
    \ the registration template provided\n   in Section 7.\n"
- title: 9.2.  'Alert URN Identifiers' Registry
  contents:
  - "9.2.  'Alert URN Identifiers' Registry\n   Standard \"alert\" URNs are recorded\
    \ as <alert-identifier>s in a new\n   registry called \"Alert URN Identifiers\"\
    .  Thus, creating a new\n   standard \"alert\" URN requires IANA action.  IANA\
    \ manages the \"Alert\n   URN Identifiers\" registry under the policy 'Specification\
    \ Required'\n   [RFC5226] following the guidelines in Section 10.1.\n   The registry\
    \ contains entries in the following formats:\n      <alert-category>/      Reference\
    \    Description\n      <alert-identifier>\n      ---------------------------------------------------------------\n\
    \      foo                    [RFCxyz]     Description of the 'foo'\n        \
    \                                  <alert-category>;\n      foo:bar          \
    \      [RFCabc]     Description of the 'foo:bar'\n                           \
    \               <alert-identifier>\n      foo:<range>            [RFCdef]    \
    \ Description of the\n      'foo:<category>'                    <alert-identifer>s\
    \ (which will\n                                          reference the <range>\
    \ value)\n   The first value in each row is the value that is registered, which\
    \ is\n   either: (1) an <alert-category> value, (2) an <alert-identifier>\n  \
    \ value, composed of an <alert-category> followed by an <alert-\n   indication>,\
    \ in turn composed of one or more <alert-label>s, or (3) a\n   pattern for <alert-identifier>\
    \ values (e.g., for the \"locale\" <alert-\n   category> in Section 9.2.1.6).\n\
    \   The second value in each row is the reference to the required\n   specification\
    \ for the value.\n   The third value in each row is a short description of the\
    \ semantics\n   of the value.\n   A new URN MUST NOT be registered if it is equal\
    \ by the comparison\n   rules (that is, case-insensitive string comparison) to\
    \ an already\n   registered URN.\n   <alert-category> and <alert-identifier> values\
    \ that contain <private-\n   name>s are not managed by IANA.  The process of assigning\
    \ these\n   values is described in Section 10.2.\n"
- title: 9.2.1.  Initial IANA Registration
  contents:
  - "9.2.1.  Initial IANA Registration\n   This document defines the <alert-category>s\
    \ 'service', 'source',\n   'priority', 'duration', 'delay' and 'locale'.  The\
    \ entries to be\n   added to the 'Alert URN Identifiers' registry table for each\
    \ <alert-\n   category> are given in the respective sections below.\n"
- title: 9.2.1.1.  The "service" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.1.  The \"service\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"service\" <alert-category>\
    \ and <alert-identifier>s.  The value of\n   this indicator is set to a value\
    \ different from \"normal\" if the\n   caller or callee is informed that a specific\
    \ telephony service has\n   been initiated.\n   <alert-category>/            \
    \  Reference  Description\n   <alert-identifier>\n   -----------------------------------------------------------\n\
    \   service                        RFC 7462   Specific telephony\n           \
    \                                  service used in this\n                    \
    \                         call\n   service:normal                 RFC 7462   Normal\
    \ ring/ringback\n                                             rendering (default\
    \ value)\n   service:call-waiting           RFC 7462   Call waiting was\n    \
    \                                         initiated at the other side\n      \
    \                                       of the call\n   service:forward      \
    \          RFC 7462   Call has been forwarded\n   service:recall:callback    \
    \    RFC 7462   Recall due to callback\n   service:recall:hold            RFC\
    \ 7462   Recall due to call hold\n   service:recall:transfer        RFC 7462 \
    \  Recall due to transfer\n"
- title: 9.2.1.2.  The "source" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.2.  The \"source\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"source\" <alert-category>\
    \ and <alert-identifier>.  The value of this\n   indicator provides information\
    \ about the user at the other side of\n   the call.\n   <alert-category>/    \
    \         Reference  Description\n   <alert-identifier>\n   -----------------------------------------------------------\n\
    \   source                        RFC 7462   Classification\n                \
    \                            of the other party\n                            \
    \                to the call\n   source:unclassified           RFC 7462   Unclassified\
    \ ring/ringback\n                                            rendering (default\
    \ value)\n   source:internal               RFC 7462   User at the other side of\n\
    \                                            the call is internal to the\n   \
    \                                         enterprise or PBX system\n   source:external\
    \               RFC 7462   User at the other side of\n                       \
    \                     the call is external to the\n                          \
    \                  enterprise or PBX system\n   source:friend                \
    \ RFC 7462   User at the other side of\n                                     \
    \       the call is a friend\n   source:family                 RFC 7462   User\
    \ at the other side of\n                                            the call is\
    \ a family member\n"
- title: 9.2.1.3.  The "priority" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.3.  The \"priority\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"priority\" <alert-category>\
    \ and <alert-identifier>s.  The value of\n   this indicator provides information\
    \ about the priority the alerted\n   user should give to the call.\n   <alert-category>/\
    \               Reference  Description\n   <alert-identifier>\n   -----------------------------------------------------------\n\
    \   priority                        RFC 7462   Priority of the\n             \
    \                                 call\n   priority:normal                 RFC\
    \ 7462   Normal ring/ringback\n                                              rendering\
    \ (default value)\n   priority:low                    RFC 7462   Low priority\
    \ call\n   priority:high                   RFC 7462   High priority call\n"
- title: 9.2.1.4.  The "duration" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.4.  The \"duration\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"duration\" <alert-category>\
    \ and <alert-identifier>s.  The value of\n   this indicator provides information\
    \ about the duration of the\n   alerting signals compared to the default alerting\
    \ signals.\n  <alert-category>/               Reference  Description\n  <alert-identifier>\n\
    \  -----------------------------------------------------------\n  duration   \
    \                     RFC 7462   Duration of alerting signal\n  duration:normal\
    \                 RFC 7462   Normal ring/ringback\n                          \
    \                   rendering (default value)\n  duration:short              \
    \    RFC 7462   Shorter than normal\n  duration:long                   RFC 7462\
    \   Longer than normal\n"
- title: 9.2.1.5.  The "delay" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.5.  The \"delay\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"delay\" <alert-category>\
    \ and <alert-identifier>s.  The value of this\n   indicator provides information\
    \ about whether the presentation of the\n   alerting signal should be delayed\
    \ compared to the default\n   presentation process.  For more details see Section\
    \ 6.1.6.\n   <alert-category>/            Reference  Description\n   <alert-identifier>\n\
    \   -----------------------------------------------------------\n   delay    \
    \                    RFC 7462   Delay of rendering\n                         \
    \                  of alerting signal\n   delay:none                   RFC 7462\
    \   Immediate alerting\n                                           (default value)\n\
    \   delay:yes                    RFC 7462   Delayed alerting\n"
- title: 9.2.1.6.  The "locale" <alert-category> and <alert-identifier>s
  contents:
  - "9.2.1.6.  The \"locale\" <alert-category> and <alert-identifier>s\n   The following\
    \ table contains the initial IANA registration for the\n   \"locale\" <alert-category>\
    \ and <alert-identifier>s.  The value of this\n   indicator provides information\
    \ about whether the alerting signals\n   characteristic of the specified location\
    \ should be used.\n   <alert-category>/             Reference  Description\n \
    \  <alert-identifier>\n   -----------------------------------------------------------\n\
    \   locale                        RFC 7462   Location-specific\n             \
    \                               alerting signals\n   locale:default          \
    \      RFC 7462   Alerting not location\n                                    \
    \        specific\n                                            (default value)\n\
    \   locale:country:<ISO 3166-1 country code>\n                               \
    \  RFC 7462   Alerting according to the\n                                    \
    \        conventions of the specified\n                                      \
    \      country\n"
- title: 9.3.  'Alert URN Providers' Registry
  contents:
  - "9.3.  'Alert URN Providers' Registry\n   Values of <provider>, which are used\
    \ to create <private-name>s, are\n   recorded in a new registry called \"Alert\
    \ URN Providers\".  (Private\n   extension \"alert\" URNs that are defined are\
    \ not recorded by IANA.)\n   The registry is managed by IANA under the policy\
    \ 'First Come First\n   Served' [RFC5226].\n   The registry contains entries in\
    \ the following format:\n   <provider>             Registrant       Contact URI\n\
    \   ---------------------------------------------------------------------\n  \
    \ example                IETF             rai-ads@ietf.org\n   The first value\
    \ in each row is the <provider> value that is\n   registered.  This value is case-insensitive\
    \ and MUST comply with the\n   syntax for Non-Reserved LDH labels [RFC5890].\n\
    \   The second value in each row is the name of the registrant of the\n   value.\n\
    \   The third value is a contact URI for the registrant.\n   The registry initially\
    \ contains the one entry shown above, which can\n   be used for constructing examples\
    \ of private extension URNs.\n"
- title: 10.  Extension Rules
  contents:
  - '10.  Extension Rules

    '
- title: 10.1.  General Extension Rules
  contents:
  - "10.1.  General Extension Rules\n   The set of \"alert\" URNs is extensible. \
    \ An extension \"at the top\n   level\" creates a new <alert-category> (which\
    \ represents a new\n   alerting characteristic), an extension \"at the second\
    \ level\" creates\n   a new <alert-indication> value for an existing <alert-category>,\
    \ an\n   extension \"at the third level\" creates a subdivision of an existing\n\
    \   <alert-indication> (that has one <alert-ind-part>), etc.  URNs allow\n   (in\
    \ principle) indefinite subdivision of existing <alert-indication>\n   values,\
    \ although most of the standard \"alert\" URNs have only one\n   level of subdivision\
    \ and a few have two levels of subdivision.\n   Extensions, either standard or\
    \ private, MUST conform to the following\n   principles:\n   A new <alert-category>\
    \ is independent of all previously existing\n   <alert-category>s: For any combination\
    \ of one <alert-identifier> in\n   the new <alert-category> with any one <alert-identifier>\
    \ in any of\n   the previously existing <alert-category>s, there are potential\
    \ calls\n   to which the combination can be meaningfully applied.\n   A new <alert-identifier>\
    \ that has more than one <alert-ind-part> is a\n   semantic refinement of a parent\
    \ <alert-identifier>, the parent being\n   obtained by deleting the final <alert-ind-part>.\
    \  The new <alert-\n   identifier> has as parent the most specific previously\
    \ existing\n   <alert-identifier> whose meaning includes all potential calls to\n\
    \   which the new <alert-identifier> could be meaningfully applied.\n   A new\
    \ <alert-identifier> has no semantic overlap with any sibling\n   <alert-identifier>\
    \ (<alert-identifier>s that differ only in the final\n   <alert-ind-part>).  That\
    \ is, there could be no call to which both\n   <alert-identifier>s could be meaningfully\
    \ applied.\n   The process for defining new standard \"alert\" URNs is described\
    \ in\n   Section 9.2; all such definitions require registering a publicly\n  \
    \ available specification.  The process for defining new \"alert\" URNs\n   via\
    \ the private extension mechanism is described in Section 10.2.\n"
- title: 10.2.  Private Extension Rules
  contents:
  - "10.2.  Private Extension Rules\n   The <private-name> syntax is used to create\
    \ private extensions,\n   extensions that are not registered with IANA.  The <private-name>\
    \ has\n   the form of an <alert-label> followed by \"@\" and then a <provider>\n\
    \   that designates the organization defining the extension.  Both\n   <alert-label>\
    \ and <provider> have the same syntax as an ordinary\n   ASCII DNS label.  A private\
    \ extension URN is created by using a\n   <private-name> as either an <alert-category>\
    \ or an <alert-ind-part>.\n   If the <private-name> is used as an <alert-category>,\
    \ the\n   characteristic of the alerting signal that the <alert-category>\n  \
    \ describes is defined by the organization.  If the <private-name> is\n   used\
    \ as the first <alert-ind-part>, the organization defines an\n   alternative value\
    \ for the standardized <alert-category> of the URN.\n   If the <private-name>\
    \ is used as the second or later <alert-ind-\n   part>, the organization defines\
    \ the meaning of the URN as a subset of\n   the meaning of the shorter URN resulting\
    \ when the <private-name> (and\n   any subsequent <alert-ind-part>s) are removed.\n\
    \   Within a URN, all <alert-label> components that follow a <private-\n   name>\
    \ but are before any following <private-name>s are additional\n   private extensions\
    \ whose meaning is defined by the organization\n   defining the nearest preceding\
    \ <private-name>.\n   A URN that contains a private extension can be further subdivided\
    \ by\n   the private extension of a different organization: the second\n   organization\
    \ appends an <alert-ind-part> that is a <private-name>\n   containing a the <provider>\
    \ value for the second organization.\n   The meaning of a <private-name> or an\
    \ <alert-label> that is defined\n   privately (because of a preceding <private-name>)\
    \ is only fixed\n   within the context provided by the sequence of preceding\n\
    \   <alert-name>s; these components have no meaning in isolation and\n   there\
    \ is no necessary relationship between the meaning of textually\n   identical\
    \ <alert-name>s that are preceded by different sequences of\n   <alert-name>s.\n\
    \   Creating private extension \"alert\" URNs is not a Standards Action and\n\
    \   they are not registered with IANA.\n   The organization defining a private\
    \ extension is responsible for\n   ensuring persistence of the meaning of the\
    \ private extension.\n   Private extensions MUST conform to the principles of\
    \ Section 10.1,\n   both in regard to previously existing standard <alert-URN>s\
    \ and in\n   regard to any previously existing private extensions using the same\n\
    \   <provider> value, and any other private extensions that the\n   organization\
    \ is aware of.  In particular, a private extension MUST\n   NOT duplicate any\
    \ standard URN or any private extension that the\n   organization is aware of.\
    \  (In either of those cases, the\n   organization MUST use the existing URN for\
    \ its purposes.)\n   An organization obtains a <provider> value for constructing\
    \ <private-\n   name>s by registering the value with IANA as provided in Section\
    \ 9.3.\n"
- title: 10.3.  Examples
  contents:
  - '10.3.  Examples

    '
- title: 10.3.1.  Subsetting an Existing URN
  contents:
  - "10.3.1.  Subsetting an Existing URN\n   The organization registering the <provider>\
    \ \"example\" can define\n   distinctive versions of <urn:alert:service:call-waiting>:\n\
    \      urn:alert:service:call-waiting:abc@example\n      urn:alert:service:call-waiting:def@example\n\
    \   It can create a more specialized URN that applies to a subset of the\n   situations\
    \ to which the first URN above applies:\n      urn:alert:service:call-waiting:abc@example:xyz\n\
    \   Because \"xyz\" follows \"abc@example\" (and there is no intervening\n   <private-name>),\
    \ its meaning is defined by the owner of the\n   <provider> \"example\".\n"
- title: 10.3.2.  A New Value within an <alert-category>
  contents:
  - "10.3.2.  A New Value within an <alert-category>\n   The organization registering\
    \ the <provider> \"example\" can define URNs\n   in the \"service\" category to\
    \ express a new service that is not\n   covered by any of the standardized URNs:\n\
    \      urn:alert:service:ghi@example\n   However, before defining such a URN,\
    \ the organization should verify\n   that the set of calls to which the URN applies\
    \ is not a subset of the\n   set of calls for some existing URN.  If it is a subset,\
    \ the extension\n   URN should be a subdivision of the existing URN.\n"
- title: 10.3.3.  A New <alert-category>
  contents:
  - "10.3.3.  A New <alert-category>\n   The organization registering the <provider>\
    \ \"example\" can define an\n   extension <alert-category> named \"jkl@example\"\
    \ with two <alert-\n   indication>s \"a1\" and \"a2\":\n      urn:alert:jkl@example:a1\n\
    \      urn:alert:jkl@example:a2\n"
- title: 10.3.4.  Subsetting a Private Extension URN
  contents:
  - "10.3.4.  Subsetting a Private Extension URN\n   The organization registering\
    \ the <provider> \"foo\" wants to define a\n   set of URNs that specify the different\
    \ ring patterns used by a\n   \"distinctive ring\" service to alert for incoming\
    \ calls that are\n   directed to different directory numbers.  These ring patterns\
    \ are\n   composed of groups of ring sounds that have particular patterns of\n\
    \   lengths.\n   The company can create a private <alert-category> \"distinctive@foo\"\
    ,\n   and within it assign three 'alert' URNs that indicate the three\n   different\
    \ ring patterns used by the company's service:\n      urn:alert:distinctive@foo:long-long\n\
    \      urn:alert:distinctive@foo:short-long-short\n      urn:alert:distinctive@foo:short-short-long\n\
    \   Later, the company registering the <provider> \"bar\" wants to define\n  \
    \ an additional 'alert' URN for the ring pattern \"short short\", which\n   it\
    \ uses to support a fourth directory number for a phone instrument.\n   The company\
    \ can create a <private-name> to be used with the\n   \"distinctive@foo\" <alert-category>:\n\
    \      urn:alert:distinctive@foo:short-short@bar\n"
- title: 11.  Combinations of "alert" URNs
  contents:
  - '11.  Combinations of "alert" URNs

    '
- title: 11.1.  Priority Rules
  contents:
  - "11.1.  Priority Rules\n   This section describes combination rules for the case\
    \ when all the\n   Alert-Info header fields only contain \"alert\" URNs.  Other\n\
    \   combinations of URIs in the Alert-Info header fields of the same SIP\n   message\
    \ are not defined in this specification.\n   In many cases, more than one URN\
    \ will be needed to fully define a\n   particular tone.  This is done by including\
    \ multiple \"alert\" URNs, in\n   one or more Alert-Info header fields in a request\
    \ or a response.  For\n   example, an internal, priority call could be indicated\
    \ by Alert-Info:\n   <urn:alert:source:internal>, <urn:alert:priority:high>. \
    \ A priority\n   call-waiting tone could be indicated by Alert-Info:\n   <urn:alert:service:call-waiting>,\
    \ <urn:alert:priority:high>.\n   The sender of the Alert-Info header field may\
    \ include an arbitrary\n   list of \"alert\" URNs, even if they are redundant\
    \ or contradictory.\n   An earlier URN has priority over any later contradictory\
    \ URN.  This\n   allows any element to modify a list of URNs to require a feature\n\
    \   value (by adding a URN at the beginning of the list) or to suggest a\n   feature\
    \ value (by adding a URN at the end of the list).\n   The receiving UA matches\
    \ the received \"alert\" URN combination with\n   the signal(s) it is able to\
    \ render.\n   The implementation is free to ignore an \"alert\" URN if it does\
    \ not\n   recognize the URN, or if it is incapable of rendering its effect in\n\
    \   the context.  Similarly, it can remove a final series of one or more\n   <alert-ind-part>s\
    \ of an \"alert\" URN to create a \"more generic\" URN\n   that it recognizes\
    \ and whose meaning it can render in the context.\n   The exact way in which a\
    \ UA renders a received combination of \"alert\"\n   URNs is left as an implementation\
    \ issue.  However, the implementation\n   MUST comply to following rules:\n  \
    \ (a)  Each \"alert\" URN has precedence over all URNs that follow it,\n     \
    \   and its interpretation is subordinate to all URNs that precede\n        it.\n\
    \   (b)  If the UA cannot implement the effect of a URN (because it does\n   \
    \     not recognize the URN or the URN's effect is precluded by\n        preceding\
    \ URNs), the UA repeatedly removes the final <alert-ind-\n        part> of the\
    \ URN until either:\n        (1)  the resulting URN is recognized and can be given\
    \ effect by\n             some signal (without reducing the degree of expression\
    \ of\n             any preceding URN), or\n        (2)  the resulting URN is reduced\
    \ to having no <alert-ind-part>\n             in which case, that URN in the series\
    \ cannot be given\n             effect, and so is ignored.\n   (c)  In case that\
    \ after processing all the received URNs, the UA can\n        generate more than\
    \ one signal that are equally effective at\n        expressing the URNs (under\
    \ the preceding rules), one of those\n        signals is selected.  When selecting\
    \ from the set of equally\n        effective signals, the least specific signal\
    \ in the set should\n        be chosen: a signal should not be chosen if a less-specific\n\
    \        signal is also in the set.  (Specificity is to be judged based\n    \
    \    on the defined meanings of the signals to the user.)  (For\n        example,\
    \ if each signal is considered to express certain <alert-\n        indication>s\
    \ of certain <alert-category>s, one signal is less-\n        specific than a second\
    \ signal if the first signal's <alert-\n        indication>s are a subset or are\
    \ prefixes of the second signal's\n        <alert-indication>s.)  However, a more-specific\
    \ signal may be\n        chosen if the choice is based on information derived\
    \ from the\n        containing SIP message.  For example, a signal implying\n\
    \        <urn:alert:priority:high> may be chosen if the SIP message\n        contains\
    \ the header field \"Priority: urgent\".\n   In all situations, the set of signals\
    \ that can be rendered and their\n   significances may change based on user preferences\
    \ and local policy.\n   In addition, the chosen signal may change based on the\
    \ status of the\n   UA.  For example, if a call is active on the UA, all audible\
    \ signals\n   may become unavailable, or audible signals may be available only\
    \ if\n   <urn:alert:priority:high> is specified.\n"
- title: 11.2.  Multi-mode Signals
  contents:
  - "11.2.  Multi-mode Signals\n   There are cases when the device can render two\
    \ signal modes (e.g.,\n   audio and visual, or video and text) at the same time.\n\
    \   Formally, the device must be considered to be making its choice from\n   the\
    \ set of all combined signals that it can render (pairs of one\n   signal from\
    \ the first mode and one signal from the second mode), and\n   that choice must\
    \ conform to the above rules.  However, it can be\n   proven that if the device\
    \ makes its rendering choice for each of the\n   two modes independently, with\
    \ each choice separately conforming to\n   the above rules, its combined choice\
    \ also conforms to the above\n   rules, when it is regarded as a choice from among\
    \ all possible\n   combinations.\n   In such a situation, it may simplify implementation\
    \ to make each\n   choice separately.  It is an implementation decision whether\
    \ to chose\n   from among combined signals or to combine choices made from each\n\
    \   signal mode.\n"
- title: 12.  Non-normative Algorithm for Handling Combinations of URNs
  contents:
  - "12.  Non-normative Algorithm for Handling Combinations of URNs\n   The following\
    \ text is a non-normative example of an algorithm for\n   handling combinations\
    \ of URNs that complies with the rules in\n   Sections 10 and 11.  Thus, it demonstrates\
    \ that the rules are\n   consistent and implementable.  (Of course, a device may\
    \ use any other\n   algorithm that complies with Sections 10 and 11.)\n"
- title: 12.1.  Algorithm Description
  contents:
  - "12.1.  Algorithm Description\n   For each <alert-category> (feature) known by\
    \ the implementation,\n   there is a \"feature tree\" of the known <alert-indication>s\
    \ for that\n   <alert-category>, with the sequence of <alert-ind-part>s in an\n\
    \   <alert-indication> specifying the path in the tree from the root to\n   the\
    \ node representing the <alert-indication>.  For this description,\n   we will\
    \ name each tree and its root node by the <alert-category>\n   name, and name\
    \ each non-root node by the <alert-identifier>.  Each\n   URN thus corresponds\
    \ to one non-root node in one feature tree.  For\n   example, there is a tree\
    \ named \"source\", whose root node is also\n   named \"source\", and which has\
    \ the children source:internal,\n   source:external, source:friend, and source:family.\
    \  The URN\n   <urn:alert:source:external> is placed at the node \"source:external\"\
    \n   in the \"source\" tree.  If the implementation understands\n   <urn:alert:source:foo@example>,\
    \ there is a node source:foo@example\n   that is a child of node \"source\". \
    \ If the implementation understands\n   <urn:alert:source:external:bar@example>,\
    \ there is a node\n   source:external:bar@example that is a child of node source:external.\n\
    \   (Of course, there are an infinite number of potential additional\n   nodes\
    \ in the tree for private values, but we don't have to represent\n   those nodes\
    \ explicitly unless the device has a signal representing\n   the private value.)\n\
    \   We assign similar locations to signals, but each signal has a\n   position\
    \ in *every* tree, describing the specific combination of\n   meanings that it\
    \ carries.  If a signal has a simple meaning, such as\n   \"external source\"\
    , its place in the \"source\" tree is source:external,\n   showing that it carries\
    \ the \"external source\" meaning, but its place\n   in every other feature tree\
    \ is at the root node, meaning that it has\n   no particular meaning for those\
    \ features.\n   A signal that has a complex meaning may have non-root positions\
    \ in\n   more than one feature tree.  For example, an \"external, high\n   priority\"\
    \ signal would be placed at source:external and priority:high\n   in those trees,\
    \ but be at the root in all other feature trees.\n   In order to assure that the\
    \ algorithm always selects at least one\n   signal, we require that there is a\
    \ \"default\" signal, whose position\n   in every feature tree is at the root.\
    \  This default signal will never\n   be excluded from the set of acceptable signals\
    \ for any set of URNs,\n   but will be the lowest priority signal for any set\
    \ of URNs.\n   The algorithm proceeds by considering each URN in the received\
    \ Alert-\n   Info header fields from left to right, while revising a set of\n\
    \   signals.  The set of signals starts as the entire set of signals\n   available\
    \ to the device.  Each URN excludes some signals from the\n   set, and \"sorts\"\
    \ the signals that remain in the set according to how\n   well they represent\
    \ the URN.  (The details of these operations are\n   described below.)  The first\
    \ URN is the \"major sort\", and has the\n   most influence on the position of\
    \ a signal in the set.  The second\n   URN is a \"minor sort\", in that it arranges\
    \ the orders of the signals\n   that are tied within the first sort, the third\
    \ URN arranges the\n   orders of the signals that are tied within the first two\
    \ sorts, etc.\n   At the end of the algorithm, a final, \"most minor\" sort is\
    \ done,\n   which orders the signals that remain tied under all the sorts driven\n\
    \   by the URNs.  This final sort places the least specific signals\n   (within\
    \ their tied groups) \"first\".  (If one signal's position in\n   each feature\
    \ tree is ancestral or the same as a second signal's\n   position in that tree,\
    \ the first signal is \"less specific\" than the\n   second signal.  Other cases\
    \ are left to the implementation to\n   decide.)\n   Once all the URNs are processed\
    \ and the sorting of the signals that\n   have not been excluded is done, the\
    \ device selects the first signal\n   in the set.\n   Here is how a single sort\
    \ step proceeds, examining a single URN to\n   modify the set of signals (by excluding\
    \ some signals and further\n   sorting the signals that remain):\n   o  The URN\
    \ specifies a specific node in a specific feature tree.\n   o  All signals in\
    \ the set that are, within that feature tree,\n      positioned at the URN's node,\
    \ or at an ancestor node of the URN's\n      node, are kept.  All other signals\
    \ are removed from the set\n      (because they have meanings that are incompatible\
    \ with the URN's\n      meaning).\n   o  Each group of signals that are tied under\
    \ the previous sorts are\n      further sorted into groups based on how much of\
    \ the URN's meaning\n      they represent: those which are positioned at the node\
    \ of the URN\n      are tied for first position, those which are positioned at\
    \ the\n      parent node of the URN are tied for second position, etc., and\n\
    \      those which are positioned at the root node of the feature tree\n     \
    \ are tied for last position.\n"
- title: 12.2.  Examples of How the Algorithm Works
  contents:
  - "12.2.  Examples of How the Algorithm Works\n   The following examples show how\
    \ the algorithm described in the\n   previous section works:\n"
- title: 12.2.1.  Example 1
  contents:
  - "12.2.1.  Example 1\n   The device has a set of four alerting signals.  We list\
    \ their primary\n   meanings, and the locations that they are placed in the feature\n\
    \   trees:\n   Signal 1\n      Meaning: external\n      Locations:\n      - source:external\n\
    \      - priority (that is, the root node of the priority tree)\n   Signal 2\n\
    \      Meaning: internal\n      Locations:\n      - source:internal\n      - priority\n\
    \   Signal 3\n      Meaning: low\n      Locations:\n      - source\n      - priority:low\n\
    \   Signal 4\n      Meaning: high\n      Locations:\n      - source\n      - priority:high\n\
    \   To which we add:\n   Signal 5\n      Meaning: default\n      Locations:\n\
    \      - source\n      - priority\n   If the device receives <urn:alert:source:internal>,\
    \ then the sort is:\n   Signals at source:internal: (this is, first place)\n \
    \     Signal 2: internal\n   Signals at source: (tied for second place)\n    \
    \  Signal 3: low\n      Signal 4: high\n      Signal 5: default\n   And these\
    \ signals are excluded from the set:\n      Signal 1: external\n   So, in this\
    \ example, the sorting algorithm properly gives first place\n   to Signal 2 \"\
    internal\".\n"
- title: 12.2.2.  Example 2
  contents:
  - "12.2.2.  Example 2\n   Let us add to the set of signals in Example 1 ones that\
    \ express\n   combinations like \"internal, high priority\", but let us specifically\n\
    \   exclude the combination \"internal, low priority\" so as to set up some\n\
    \   tricky examples.  This enlarges our set of signals:\n   Signal 1\n      Meaning:\
    \ default\n      Locations:\n      - source\n      - priority\n   Signal 2\n \
    \     Meaning: external\n      Locations:\n      - source:external\n      - priority\n\
    \   Signal 3\n      Meaning: internal\n      Locations:\n      - source:internal\n\
    \      - priority\n   Signal 4\n      Meaning: low\n      Locations:\n      -\
    \ source\n      - priority:low\n   Signal 5\n      Meaning: high\n      Locations:\n\
    \      - source\n      - priority:high\n   Signal 6\n      Meaning: external high\n\
    \      Locations:\n      - source:external\n      - priority:high\n   Signal 7\n\
    \      Meaning: external low\n      Locations:\n      - source:external\n    \
    \  - priority:low\n   Signal 8\n      Meaning: internal high\n      Locations:\n\
    \      - source:internal\n      - priority:high\n   If the device receives <urn:alert:source:internal>,\
    \ then the sort is:\n   Signals at source:internal: (that is, tied for first place)\n\
    \      - Signal 3: internal\n      - Signal 8: internal high\n   Signals at source:\
    \ (tied for second place)\n      - Signal 4: low\n      - Signal 5: high\n   \
    \   - Signal 1: default\n   Signals excluded from the set:\n      - Signal 2:\
    \ external\n      - Signal 7: external low\n      - Signal 6: external high\n\
    \   Two signals are tied for the first place, but the final sort orders\n   them:\n\
    \      - Signal 3: internal\n      - Signal 8: internal high\n   because it puts\
    \ the least-specific signal first.  So, the Signal 3\n   \"internal\" is chosen.\n"
- title: 12.2.3.  Example 3
  contents:
  - "12.2.3.  Example 3\n   The same device receives <urn:alert:source:external>,\n\
    \   <urn:alert:priority:low>.  The first sort (due to\n   <urn:alert:source:external>)\
    \ is:\n   Signals at source:external:\n      - Signal 2: external\n      - Signal\
    \ 7: external low\n      - Signal 6: external high\n   Signals at source:\n  \
    \    - Signal 4: low\n      - Signal 5: high\n      - Signal 1: default\n   Signals\
    \ excluded:\n      - Signal 3: internal\n      - Signal 8: internal high\n   The\
    \ second sort (due to <urn:alert:priority:low>) puts signals at\n   priority:low\
    \ before signals at priority, and excludes signal at\n   priority:high:\n    \
    \  - Signal 7: external low\n      - Signal 2: external\n      - Signal 4: low\n\
    \      - Signal 1: default\n   Excluded:\n      - Signal 6: external high\n  \
    \    - Signal 5: high\n      - Signal 3: internal\n      - Signal 8: internal\
    \ high\n   So, we choose Signal 7 \"external low\".\n"
- title: 12.2.4.  Example 4
  contents:
  - "12.2.4.  Example 4\n   Suppose the same device receives <urn:alert:source:internal>,\n\
    \   <urn:alert:priority:low>.  Note that there is no signal that\n   corresponds\
    \ to this combination.\n   The first sort is based on source:internal, and results\
    \ in this\n   order:\n      - Signal 3: internal\n      - Signal 8: internal high\n\
    \      - Signal 4: low\n      - Signal 5: high\n      - Signal 1: default\n  \
    \ Excluded:\n      - Signal 2: external\n      - Signal 7: external low\n    \
    \  - Signal 6: external high\n   The second sort is based on priority:low, and\
    \ results in this order:\n      - Signal 3: internal\n      - Signal 4: low\n\
    \      - Signal 1: default\n   Excluded:\n      - Signal 8: internal high\n  \
    \    - Signal 5: high\n      - Signal 7: external low\n      - Signal 2: external\n\
    \      - Signal 6: external high\n   So, we choose the Signal 3 \"internal\".\n\
    \   Note that <urn:alert:priority:low> could not be given effect because\n   it\
    \ followed <urn:alert:source:internal>.  If the two URNs had\n   appeared in the\
    \ reverse order, the Signal 2 \"external\" would have\n   been chosen, because\
    \ <urn:alert:priority:low> would have been given\n   precedence.\n"
- title: 12.2.5.  Example 5
  contents:
  - "12.2.5.  Example 5\n   Let us set up a simple set of signals, with three signals\
    \ giving\n   priority:\n   Signal 1\n      Meaning: default\n      Locations:\n\
    \      - priority\n   Signal 2\n      Meaning: low\n      Locations:\n      -\
    \ priority:low\n   Signal 3\n      Meaning: high\n      Locations:\n      - priority:high\n\
    \   Notice that we've used the \"default\" signal to cover \"normal\n   priority\"\
    .  That is so the signal will cover situations where no\n   priority URN is present,\
    \ as well as the ones with\n   <urn:alert:priority:normal>.  So, we're deliberately\
    \ failing to\n   distinguish \"priority:normal\" from the default priority.\n\
    \   If the device receives <urn:alert:priority:low>, the sort is:\n      - Signal\
    \ 2: low\n      - Signal 1: default\n   Excluded:\n      - Signal 3: high\n  \
    \ and Signal 2 \"low\" is chosen.\n   Similarly, if the device receives <urn:alert:priority:high>,\
    \ Signal 3\n   is chosen.\n   If the device receives <urn:alert:priority:normal>,\
    \ the sort is:\n      -Signal 1 :default\n   Excluded:\n      - Signal 2: low\n\
    \      - Signal 3: high\n   and Signal 1 \"default\" is chosen.\n   If no \"priority\"\
    \ URN is received, Signal 1 \"default\" will be put\n   before Signal 2 \"low\"\
    \ and Signal 3 \"high\" by the final sort, and so\n   it will be chosen.\n"
- title: 13.  User Agent Behaviour
  contents:
  - "13.  User Agent Behaviour\n   A SIP UA MAY add a URN or multiple URNs to the\
    \ Alert-Info header\n   field in a SIP request or a provisional 1xx response (excepting\
    \ a 100\n   response) when it needs to provide additional information about the\n\
    \   call or about the provided service.\n   Upon receiving a SIP INVITE request\
    \ or a SIP provisional response\n   with an Alert-Info header field that contains\
    \ a combination of Alert-\n   Info URNs, the UA attempts to match the received\
    \ Alert- Info URNs\n   combination with a signal it can render.  The process the\
    \ UA uses\n   MUST conform to the rules described in Section 11.  (A non-normative\n\
    \   algorithm example for the process is described in Section 12.)\n   The UA\
    \ must produce a reasonable rendering regardless of the\n   combination of URIs\
    \ (of any schemes) in the Alert-Info header field:\n   it MUST produce a rendering\
    \ based on the URIs that it can understand\n   and act on (if any), interpreted\
    \ as prescribed by local policy, and\n   ignore the other URIs.  In particular,\
    \ unless the containing message\n   is a request and is immediately rejected,\
    \ the UA SHOULD provide some\n   alert unless it is instructed not to (for example,\
    \ by Alert-Info URIs\n   that it understands, the presence of a Replaces or Joins\
    \ header\n   field, local policy, or direction of the user).\n   Subsequent provisional\
    \ responses, even within the same dialog, may\n   contain different Alert-Info\
    \ header field values.  The Alert-Info\n   header field values received within\
    \ different provisional responses\n   are treated independently.  If subsequent\
    \ provisional responses\n   containing different Alert-Info header field values\
    \ were received\n   within the same dialog, the UA SHOULD render, at any time,\
    \ the last\n   received Alert-Info header field value.  The handling of provisional\n\
    \   responses containing different Alert-Info header field values that\n   were\
    \ not received within the same dialog is left as an implementation\n   issue.\n"
- title: 14.  Proxy Behaviour
  contents:
  - "14.  Proxy Behaviour\n   A SIP proxy MAY add or remove an Alert-Info header field,\
    \ and MAY add\n   or remove Alert-Info header field values, in a SIP request or\
    \ a\n   non-100 provisional response when it needs to modify the information\n\
    \   about the call or about the provided services.\n   There are many reasons\
    \ a proxy may choose do this, for example, (1)\n   to add indications based on\
    \ information that the proxy can determine\n   about the call, such as that it\
    \ is coming from an external source, or\n   that the INVITE contains a \"Priority:\
    \ urgent\" header field; (2) to\n   add indication that a particular service is\
    \ being invoked at this end\n   of the call; (3) to remove undesirable indications,\
    \ such as possibly\n   deceptive indications from untrusted sources; and (4) to\
    \ remove\n   indications that contain information that should be suppressed for\n\
    \   privacy reasons.\n   The following example shows a typical example of a 180\
    \ (Ringing)\n   provisional response that has been modified by a proxy.  The response\n\
    \   sent by the UAS to the proxy was very similar, but had no Alert-Info\n   header\
    \ field.  The proxy has added Alert-Info header field values\n   specifying both\
    \ a network audio resource referenced by the HTTP URI\n   and the URN indication\
    \ for the call-waiting service.  This allows the\n   UAC to render the network\
    \ audio resource, to choose a rendering based\n   on the URN, or to perform some\
    \ combination of these actions.  Due to\n   Section 10, the UAC must produce some\
    \ reasonable rendering in this\n   situation.\n   SIP/2.0 180 Ringing\n   Alert-Info:\
    \ <http://www.example.com/sound/moo.wav>,\n                <urn:alert:service:call-waiting>\n\
    \   To: Bob <sip:bob@biloxi.example.com>;tag=a6c85cf\n   From: Alice <sip:alice@atlanta.example.com>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710\n   Contact: <sip:bob@192.0.2.4>\n   CSeq: 314159\
    \ INVITE\n   Via: SIP/2.0/UDP server10.biloxi.example.com;\n               branch=z9hG4bK4b43c2ff8.1\n\
    \   Content-Length: 0\n"
- title: 15.  Internationalization Considerations
  contents:
  - "15.  Internationalization Considerations\n   The <alert-identifier> labels are\
    \ protocol elements [RFC6365] and are\n   not normally seen by users.  Thus, the\
    \ character set for these\n   elements is restricted, as described in Section\
    \ 7.\n   Allowance has been made for the possibility of internationalizing\n \
    \  <alert-identifier>s by allowing them to be A-labels: a processor that\n   does\
    \ not understand such <alert-identifier>s is required to ignore\n   them as specified\
    \ in Sections 7 and 11.1.\n   The URNs <urn:alert:locale:country:<ISO 3166-1 country\
    \ code>> select\n   renderings that are conventional in the specified country.\n"
- title: 16.  Security Considerations
  contents:
  - "16.  Security Considerations\n   As an identifier, the \"alert\" URN does not\
    \ appear to raise any\n   particular security issues.  The indications described\
    \ by the \"alert\"\n   URN are meant to be well-known.\n   However, the provision\
    \ of specific indications may raise privacy\n   issues by revealing information\
    \ about the source UA, e.g., its\n   nature, its dialog state, or services initiated\
    \ at its end of the\n   call.  For example, call-waiting (Section 6.2.1) and call-forwarding\n\
    \   (Section 6.2.2) services can reveal the dialog state of the UA.  Such\n  \
    \ a provision SHALL always require authorization on behalf of the user\n   of\
    \ the source UA (usually through accessing configured policy).\n   Authorization\
    \ SHALL NOT assume that there is any limitation of the\n   potential recipients\
    \ of the indications without obtaining specific\n   information about the SIP\
    \ transaction.\n   Based on local policy, a UA MAY choose to ignore undesirable\n\
    \   indications (e.g., possibly deceptive indications from untrusted\n   sources),\
    \ and it MAY choose not to send indications that are\n   otherwise valid in the\
    \ context (e.g., for privacy reasons).  A proxy\n   acting on behalf of a UA MAY\
    \ add or delete indications going to or\n   from the UA for the same reasons.\n\
    \   Since the alert indications can be sensitive, end-to-end SIP\n   encryption\
    \ mechanisms using S/MIME MAY be used to protect it.  UAs\n   that implement alert\
    \ indications SHOULD also implement SIP over TLS\n   [RFC5246] and the sips: scheme\
    \ [RFC5630].\n"
- title: 17.  References
  contents:
  - '17.  References

    '
- title: 17.1.  Normative References
  contents:
  - "17.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2141]\
    \  Moats, R., \"URN Syntax\", RFC 2141, May 1997,\n              <http://www.rfc-editor.org/info/rfc2141>.\n\
    \   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n    \
    \          A., Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler,\
    \ \"SIP: Session Initiation Protocol\", RFC 3261,\n              June 2002, <http://www.rfc-editor.org/info/rfc3261>.\n\
    \   [RFC3406]  Daigle, L., van Gulik, D., Iannella, R., and P. Faltstrom,\n  \
    \            \"Uniform Resource Names (URN) Namespace Definition\n           \
    \   Mechanisms\", BCP 66, RFC 3406, October 2002,\n              <http://www.rfc-editor.org/info/rfc3406>.\n\
    \   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       May 2008, <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC5234]  Crocker,\
    \ D. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:\
    \ ABNF\", STD 68, RFC 5234, January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n\
    \   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.2\", RFC 5246, August 2008,\n          \
    \    <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5630]  Audet, F., \"The\
    \ Use of the SIPS URI Scheme in the Session\n              Initiation Protocol\
    \ (SIP)\", RFC 5630, October 2009,\n              <http://www.rfc-editor.org/info/rfc5630>.\n"
- title: 17.2.  Informative References
  contents:
  - "17.2.  Informative References\n   [E182]     ITU-T, \"Application of tones and\
    \ recorded announcements in\n              telephone services\", ITU-T Recommendation\
    \ E.182, 1998,\n              <http://www.itu.int/rec/T-REC-E.182-199803-I/en>.\n\
    \   [ISO3166-1]\n              ISO, \"English country names and code elements\"\
    , ISO\n              3166-1, <http://www.iso.org/iso/\n              english_country_names_and_code_elements>.\n\
    \   [RFC3043]  Mealling, M., \"The Network Solutions Personal Internet\n     \
    \         Name (PIN): A URN Namespace for People and Organizations\",\n      \
    \        RFC 3043, January 2001,\n              <http://www.rfc-editor.org/info/rfc3043>.\n\
    \   [RFC3044]  Rozenfeld, S., \"Using The ISSN (International Serial\n       \
    \       Standard Number) as URN (Uniform Resource Names) within an\n         \
    \     ISSN-URN Namespace\", RFC 3044, January 2001,\n              <http://www.rfc-editor.org/info/rfc3044>.\n\
    \   [RFC3120]  Best, K. and N. Walsh, \"A URN Namespace for XML.org\", RFC\n \
    \             3120, June 2001, <http://www.rfc-editor.org/info/rfc3120>.\n   [RFC3187]\
    \  Hakala, J. and H. Walravens, \"Using International Standard\n             \
    \ Book Numbers as Uniform Resource Names\", RFC 3187, October\n              2001,\
    \ <http://www.rfc-editor.org/info/rfc3187>.\n   [RFC3188]  Hakala, J., \"Using\
    \ National Bibliography Numbers as\n              Uniform Resource Names\", RFC\
    \ 3188, October 2001,\n              <http://www.rfc-editor.org/info/rfc3188>.\n\
    \   [RFC4152]  Tesink, K. and R. Fox, \"A Uniform Resource Name (URN)\n      \
    \        Namespace for the Common Language Equipment Identifier\n            \
    \  (CLEI) Code\", RFC 4152, August 2005,\n              <http://www.rfc-editor.org/info/rfc4152>.\n\
    \   [RFC4179]  Kang, S., \"Using Universal Content Identifier (UCI) as\n     \
    \         Uniform Resource Names (URN)\", RFC 4179, October 2005,\n          \
    \    <http://www.rfc-editor.org/info/rfc4179>.\n   [RFC4195]  Kameyama, W., \"\
    A Uniform Resource Name (URN) Namespace for\n              the TV-Anytime Forum\"\
    , RFC 4195, October 2005,\n              <http://www.rfc-editor.org/info/rfc4195>.\n\
    \   [RFC4198]  Tessman, D., \"A Uniform Resource Name (URN) Namespace for\n  \
    \            Federated Content\", RFC 4198, November 2005,\n              <http://www.rfc-editor.org/info/rfc4198>.\n\
    \   [RFC5589]  Sparks, R., Johnston, A., and D. Petrie, \"Session\n          \
    \    Initiation Protocol (SIP) Call Control - Transfer\", BCP\n              149,\
    \ RFC 5589, June 2009,\n              <http://www.rfc-editor.org/info/rfc5589>.\n\
    \   [RFC5890]  Klensin, J., \"Internationalized Domain Names for\n           \
    \   Applications (IDNA): Definitions and Document Framework\",\n             \
    \ RFC 5890, August 2010,\n              <http://www.rfc-editor.org/info/rfc5890>.\n\
    \   [RFC6365]  Hoffman, P. and J. Klensin, \"Terminology Used in\n           \
    \   Internationalization in the IETF\", BCP 166, RFC 6365,\n              September\
    \ 2011, <http://www.rfc-editor.org/info/rfc6365>.\n   [RFC6910]  Worley, D., Huelsemann,\
    \ M., Jesske, R., and D. Alexeitsev,\n              \"Completion of Calls for\
    \ the Session Initiation Protocol\n              (SIP)\", RFC 6910, April 2013,\n\
    \              <http://www.rfc-editor.org/info/rfc6910>.\n   [RFC7463]  Johnston,\
    \ A., Ed., Soroushnejad, M., Ed., and V.\n              Venkataramanan, \"Shared\
    \ Appearances of a Session\n              Initiation Protocol (SIP) Address of\
    \ Record (AOR)\", RFC\n              7463, March 2015,\n              <http://www.rfc-editor.org/info/rfc7463>.\n\
    \   [TS24.615]\n              3GPP, \"Communication Waiting (CW) using IP Multimedia\
    \ (IM)\n              Core Network (CN) subsystem; Protocol Specification\", 3GPP\n\
    \              TS 24.615, September 2015.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors wish to thank Denis Alexeitsev, the editor of\
    \ the initial\n   version in BLISS, Anwar Siddiqui for his contributions to the\n\
    \   document, Christer Holmberg for his careful review of the document,\n   Adam\
    \ Roach, Dean Willis, Martin Huelsemann, Shida Schubert, John\n   Elwell, and\
    \ Tom Taylor for their comments and suggestions and Alfred\n   Hoenes for his\
    \ extensive comments and proposals related to new\n   namespace identifiers for\
    \ URNs.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Laura Liess (editor)\n   Deutsche Telekom AG\n   Heinrich-Hertz\
    \ Str 3-7\n   Darmstadt, Hessen  64295\n   Germany\n   Phone: +49 6151 5812761\n\
    \   EMail: laura.liess.dt@gmail.com\n   Roland  Jesske\n   Deutsche Telekom AG\n\
    \   Heinrich-Hertz Str. 3-7\n   Darmstadt, Hessen  64295\n   Germany\n   Phone:\
    \ +49 6151 5812766\n   EMail: r.jesske@telekom.de\n   Alan Johnston\n   Avaya,\
    \ Inc.\n   St. Louis, MO\n   United States\n   EMail: alan.b.johnston@gmail.com\n\
    \   Dale R. Worley\n   Ariadne Internet Services, Inc.\n   738 Main St.\n   Waltham,\
    \ MA    02451\n   United States\n   Phone: +1 781 647 9199\n   EMail: worley@ariadne.com\n\
    \   Paul Kyzivat\n   Huawei\n   United States\n   EMail: pkyzivat@alum.mit.edu\n"
