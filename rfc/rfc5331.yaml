- contents:
  - '    MPLS Upstream Label Assignment and Context-Specific Label Space

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   RFC 3031 limits the MPLS architecture to downstream-assigned MPLS\n
    \  labels.  This document introduces the notion of upstream-assigned\n   MPLS
    labels.  It describes the procedures for upstream MPLS label\n   assignment and
    introduces the concept of a \"Context-Specific Label\n   Space\".\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Specification of Requirements ...................................2\n   3.
    Context-Specific Label Space ....................................2\n   4. Upstream
    Label Assignment .......................................3\n      4.1. Upstream-Assigned
    and Downstream-Assigned Labels ...........4\n   5. Assigning Upstream-Assigned
    Labels ..............................5\n   6. Distributing Upstream-Assigned Labels
    ...........................5\n   7. Upstream Neighbor Label Space ...................................6\n
    \  8. Context Label on LANs ...........................................9\n   9.
    Usage of Upstream-Assigned Labels ..............................10\n   10. Security
    Considerations .......................................10\n   11. Acknowledgements
    ..............................................11\n   12. References ....................................................11\n
    \     12.1. Normative References .....................................11\n      12.2.
    Informative References ...................................11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   RFC 3031 [RFC3031] limits the MPLS architecture to downstream-\n
    \  assigned MPLS labels.  To quote from RFC 3031:\n   \"In the MPLS architecture,
    the decision to bind a particular label L\n   to a particular Forwarding Equivalence
    Class (FEC) F is made by the\n   Label Switching Router (LSR) which is DOWNSTREAM
    with respect to that\n   binding.  The downstream LSR then informs the upstream
    LSR of the\n   binding.  Thus labels are \"downstream-assigned\", and label bindings\n
    \  are distributed in the \"downstream to upstream\" direction.\"\n   This document
    introduces the notion of upstream-assigned MPLS labels\n   to the MPLS architecture.
    \ The procedures for upstream assignment of\n   MPLS labels are described.\n   RFC
    3031 describes per-platform and per-interface label space.  This\n   document
    generalizes the latter to a \"Context-Specific Label Space\"\n   and describes
    a \"Neighbor Label Space\" as an example of this.\n   Upstream-assigned labels
    are always looked up in a context-specific\n   label space.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Specification of Requirements
- contents:
  - "3.  Context-Specific Label Space\n   RFC 3031 describes per-platform and per-interface
    label spaces.  This\n   document introduces the more general concept of a \"Context-Specific\n
    \  Label Space\".  An LSR may maintain one or more context-specific label\n   spaces.
    \ In general, labels MUST be looked up in the per-platform\n   label space unless
    something about the context determines that a\n   label be looked up in a particular
    context-specific label space.\n   One example of a context-specific label space
    is the per-interface\n   label space discussed in RFC 3031.  When an MPLS packet
    is received\n   over a particular interface, the top label of the packet may need
    to\n   be looked up in the receiving interface's per-interface label space.\n
    \  In this case, the receiving interface is the context of the packet.\n   Whether
    MPLS packets received over a particular interface need to\n   have their top labels
    looked up in a per-interface label space\n   depends on some characteristic or
    configuration of the interface.\n   Per-interface label space [RFC3031] is an
    example of a context-\n   specific label space used for downstream-assigned labels.
    \ Context-\n   specific label spaces can also be used for upstream-assigned labels,\n
    \  as described below.\n   When MPLS labels are upstream-assigned, the context
    of an MPLS label\n   L is provided by the LSR that assigns the label and binds
    the label\n   to a FEC F for a Label Switched Path (LSP) LSP1.  The LSR that\n
    \  assigns the label distributes the binding and context to an LSR Lr\n   that
    then receives MPLS packets on LSP1 with label L.  When Lr\n   receives an MPLS
    packet on LSP1, it MUST be able to determine the\n   context of this packet.\n
    \  An example of such a context is a tunnel over which MPLS packets on\n   LSP1
    may be received.  In this case, the top label of the MPLS\n   packet, after tunnel
    decapsulation, is looked up in a label space\n   that is specific to the root
    of the tunnel.  This does imply that Lr\n   be able to determine the tunnel over
    which the packet was received.\n   Therefore, if the tunnel is an MPLS tunnel,
    penultimate-hop-popping\n   (PHP) MUST be disabled for the tunnel.\n   Another
    example of such a context is the neighbor from which MPLS\n   packets on LSP1
    may be received.  In this case, the top label of the\n   MPLS packet, transmitted
    by the neighbor on LSP1, is looked up in a\n   \"Neighbor-Specific Label Space\".\n
    \  The above two examples are further described in Section 7.\n   There may be
    other sorts of contexts as well.  For instance, we\n   define the notion of an
    MPLS label being used to establish a context,\n   i.e., identify a label space.
    \ A \"context label\" is one that\n   identifies a label table in which the label
    immediately below the\n   context label should be looked up.  A context label
    carried as an\n   outermost label over a particular multi-access subnet/tunnel
    MUST be\n   unique within the scope of that subnet/tunnel.\n"
  title: 3.  Context-Specific Label Space
- contents:
  - "4.  Upstream Label Assignment\n   When two MPLS LSRs are adjacent in an MPLS
    Label Switched Path (LSP),\n   one of them can be termed an \"upstream LSR\" and
    the other a\n   \"downstream LSR\" [RFC3031].  Consider two LSRs, Ru and Rd, that
    have\n   agreed to bind Label L to a FEC F for packets sent from Ru to Rd.\n   Then,
    with respect to this binding, Ru is the \"upstream LSR\", and Rd\n   is the \"downstream
    LSR\".\"\n   If the binding between L and F was made by Rd and advertised to Ru,\n
    \  then the label binding is known as \"downstream-assigned\".  RFC 3031\n   only
    discusses downstream-assigned label bindings.\n   If the binding between L and
    F was made by Ru and advertised to Rd,\n   then the label binding is known as
    \"upstream-assigned\".\n   If the binding between L and F was made by a third
    party, say R3, and\n   then advertised to both Ru and Rd, we also refer to the
    label binding\n   as \"upstream-assigned\".\n   An important observation about
    upstream-assigned labels is the\n   following.  When an upstream-assigned label
    L is at the top of the\n   label stack, it must be looked up by an LSR that is
    not the LSR that\n   assigned and distributed the label binding for L.  Therefore,
    an\n   upstream-assigned label MUST always be looked up in a context-\n   specific
    label space, as described in Section 7.\n   We do not require any coordination
    between the upstream label\n   assignments and the downstream label assignments;
    a particular label\n   value may be upstream-assigned to one FEC and downstream-assigned
    to\n   a different FEC.\n   The ability to use upstream-assigned labels is an
    OPTIONAL feature.\n   Upstream-assigned labels MUST NOT be used unless it is known
    that the\n   downstream LSR supports them.\n   One use case of upstream-assigned
    labels is MPLS multicast, and an\n   example of this is provided in Section 9.\n"
  - contents:
    - "4.1.  Upstream-Assigned and Downstream-Assigned Labels\n   It is possible that
      some LSRs on an LSP for FEC F distribute\n   downstream-assigned label bindings
      for FEC F, while other LSRs\n   distribute upstream-assigned label bindings.
      \ It is possible for an\n   LSR to distribute a downstream-assigned label binding
      for FEC F to\n   its upstream adjacent LSR AND distribute an upstream-assigned
      label\n   binding for FEC F to its downstream adjacent LSR.  When two LSRs,
      Ru\n   and Rd, are adjacent on an LSP for FEC F (with Ru being the upstream\n
      \  neighbor and Rd the downstream neighbor), either Ru distributes an\n   upstream-assigned
      label binding for F to Rd, or else Rd distributes a\n   downstream-assigned
      label binding to Ru, but NOT both.  Whether\n   upstream-assigned or downstream-assigned
      labels are to be used for a\n   particular FEC depends on the application using
      the LSP.\n   Any application that requires the use of upstream-assigned labels\n
      \  MUST specify that explicitly, or else it is to be assumed that\n   downstream-assigned
      labels are used.  An application on an LSR uses a\n   label distribution protocol
      to indicate to its peer LSRs whether a\n   particular label binding distributed
      by the LSR uses upstream-\n   assigned or downstream-assigned label.  Details
      of such procedures\n   are outside the scope of this document.  In some cases,
      the decision\n   as to which is used for a particular application may be made
      by a\n   configuration option.\n"
    title: 4.1.  Upstream-Assigned and Downstream-Assigned Labels
  title: 4.  Upstream Label Assignment
- contents:
  - "5.  Assigning Upstream-Assigned Labels\n   The only requirement on an upstream
    LSR assigning upstream-assigned\n   labels is that an upstream-assigned label
    must be unambiguous in the\n   context-specific label space in which the downstream
    LSR will look it\n   up.  An upstream LSR that is the headend of multiple tunnels
    SHOULD,\n   by default, assign the upstream-assigned labels, for all the LSPs\n
    \  carried over these tunnels, from a single label space, which is\n   common
    to all those tunnels.  Further, an upstream LSR that is the\n   head of multiple
    tunnels SHOULD use the same IP address as the head\n   identifier of these tunnels,
    provided that the head identifier of\n   these tunnels includes an IP address.
    \ The LSR could assign the same\n   label value to both a downstream-assigned
    and an upstream-assigned\n   label.  The downstream LSR always looks up upstream-assigned
    MPLS\n   labels in a context-specific label space as described in Section 7.\n
    \  An entry for the upstream-assigned labels is not created in the\n   Incoming
    Label Map (ILM) [RFC3031] at the upstream LSR as these\n   labels are not incoming
    labels.  Instead, an upstream label is an\n   outgoing label, with respect to
    the upstream LSR, for MPLS packets\n   transmitted on the MPLS LSP in which the
    upstream LSR is adjacent to\n   the downstream LSR.  Hence, an upstream label
    is part of a Next Hop\n   Label Forwarding Entry (NHLFE) at the upstream LSR.\n
    \  When Ru advertises a binding of label L for FEC F to Rd, it creates a\n   NHLFE
    entry corresponding to L.  This NHLFE entry results in imposing\n   the label
    L on the MPLS label stack of the packet forwarded using the\n   NHLFE entry.  If
    Ru is a transit router on the LSP for FEC F, it\n   binds the ILM for the LSP
    to this NHLFE.  If Ru is an ingress router\n   on the LSP for FEC F, it binds
    the FEC to the NHLFE entry.\n"
  title: 5.  Assigning Upstream-Assigned Labels
- contents:
  - "6.  Distributing Upstream-Assigned Labels\n   Upstream-assigned label bindings
    MUST NOT be used unless it is known\n   that the downstream LSR supports them.
    \ How this is known is outside\n   the scope of this document.\n   MPLS upstream
    label assignment requires a label distribution protocol\n   to distribute the
    binding from the upstream LSR to the downstream\n   LSR.  Considerations that
    pertain to a label distribution protocol\n   that are described in [RFC3031] apply.\n
    \  The distribution of the upstream-assigned labels is similar to either\n   the
    ordered LSP control or independent LSP control of the downstream-\n   assigned
    labels.  In the former case, an LSR distributes an upstream-\n   assigned label
    binding for a FEC F if it is either (a) the ingress\n   LSR for FEC F, or (b)
    if it has already received an upstream label\n   binding for that FEC from its
    adjacent upstream LSR for FEC F, or (c)\n   if it has received a request for a
    downstream label binding from its\n   upstream adjacent LSR.  In the latter case,
    each LSR, upon noting\n   that it recognizes a particular FEC, makes an independent
    decision to\n   bind an upstream-assigned label to that FEC and to distribute
    that\n   binding to its label distribution peers.\n"
  title: 6.  Distributing Upstream-Assigned Labels
- contents:
  - "7.  Upstream Neighbor Label Space\n   If the top label of an MPLS packet being
    processed by LSR Rd is\n   upstream-assigned, the label is looked up in a context-specific
    label\n   space, not in a per-platform label space.\n   Rd uses a context-specific
    label space that it maintains for Ru to\n   \"reserve\" MPLS labels assigned by
    Ru.  Hence, if Ru distributes an\n   upstream-assigned label binding L for FEC
    F to Rd, then Rd reserves L\n   in the separate ILM for Ru's context-specific
    label space.  This is\n   the ILM that Rd uses to look up an MPLS label that is
    upstream-\n   assigned by Ru.  This label may be the top label on the label stack\n
    \  of a packet received from Ru or it may be exposed as the top label on\n   the
    label stack, as a result of Rd popping one or more labels off the\n   label stack,
    from such a packet.\n   This implies that Rd MUST be able to determine whether
    the top label\n   of an MPLS packet being processed is upstream-assigned and,
    if yes,\n   the \"context\" of this packet.  How this determination is made depends\n
    \  on the mechanism that is used by Ru to transmit the MPLS packet with\n   an
    upstream-assigned top label L to Rd.\n   If Ru transmits this packet by encapsulating
    it in an IP or MPLS\n   tunnel, then the fact that L is upstream-assigned is determined
    by Rd\n   by the tunnel on which the packet is received.  Whether a given\n   tunnel
    can be used for transmitting MPLS packets with either\n   downstream-assigned
    or upstream-assigned MPLS labels, or both,\n   depends on the tunnel type and
    is described in [RFC5332].  When Rd\n   receives MPLS packets with a top label
    L on such a tunnel, it\n   determines the \"context\" of this packet based on
    the tunnel on which\n   the packet is received.  There must be a mechanism for
    Ru to inform\n   Rd that a particular tunnel from Ru to Rd will be used by Ru
    for\n   transmitting MPLS packets with upstream-assigned MPLS labels.  Such a\n
    \  mechanism will be provided by the label distribution protocol between\n   Ru
    and Rd and will likely require extensions to existing label\n   distribution protocols.
    \ The description of such a mechanism is\n   outside the scope of this document.\n
    \  Rd maintains an \"Upstream Neighbor Label Space\" for upstream-assigned\n   labels,
    assigned by Ru.  When Ru transmits MPLS packets the top label\n   of which is
    upstream-assigned over IP or MPLS tunnels, then Rd MUST\n   be able to determine
    the root of these IP/MPLS tunnels.  Rd MUST then\n   use a separate label space
    for each unique root.\n   The root is identified by the head-end IP address of
    the tunnel.  If\n   the same upstream router, Ru, uses different head-end IP addresses\n
    \  for different tunnels, then the downstream router, Rd, MUST maintain\n   a
    different Upstream Neighbor Label Space for each such head-end IP\n   address.\n
    \  Consider the following conditions:\n      1) Ru is the \"root\" of two tunnels,
    call them A and B.\n      2) IP address X is an IP address of Ru.\n      3) The
    signaling protocol used to set up tunnel A identified A's\n         root node
    as IP address X.\n      4) The signaling protocol used to set up tunnel B identified
    B's\n         root node as IP address X.\n      5) Packets sent through tunnels
    A and B may be carrying upstream-\n         assigned labels.\n      6) Ru is the
    LSR that assigned the upstream-assigned labels\n         mentioned in condition
    5.\n   If and only if these conditions hold, then Ru MUST use the same label\n
    \  space when upstream-assigning labels for packets that travel through\n   tunnel
    A that it uses when upstream-assigning labels for packets that\n   travel through
    tunnel B.\n   Suppose that Rd is a node that belongs to tunnels A and B, but is
    not\n   the root node of either tunnel.  Then Rd may assume that the same\n   upstream-assigned
    label space is used on both tunnels IF AND ONLY IF\n   the signaling protocol
    used to set up tunnel A identified the root\n   node as IP address X and the signaling
    protocol used to set up tunnel\n   B identified the root node as the same IP address
    X.\n   In addition, the protocol that is used for distributing the upstream-\n
    \  assigned label to be used over a particular tunnel MUST identify the\n   \"assigner\"
    using the same IP address that is used by the protocol\n   that sets up the tunnel
    to identify the root node of the tunnel.\n   Implementors must take note of this,
    even if the tunnel setup\n   protocol is different from the protocol that is used
    for distributing\n   the upstream-assigned label to be used over the tunnel.\n
    \  The precise set of procedures for identifying the IP address of the\n   root
    of the tunnel depend, of course, on the protocol used to set up\n   the tunnel.
    \ For Point-to-Point (P2P) tunnels, the intention is that\n   the headend of the
    tunnel is the \"root\".  For Point-to-Multipoint\n   (P2MP) or Multipoint-to-Multipoint
    (MP2MP) tunnels, one can always\n   identify one node as being the \"root\" of
    the tunnel.\n   Some tunnels may be set up by configuration, rather than by\n
    \  signaling.  In these cases, the IP address of the root of the tunnel\n   must
    be configured.\n   Some tunnels may not even require configuration, e.g., a Generic\n
    \  Routing Encapsulation (GRE) tunnel can be \"created\" just by\n   encapsulating
    packets and transmitting them.  In such a case, the IP\n   address of the root
    is considered to be the IP source address of the\n   encapsulated packets.\n   If
    the tunnel on which Rd receives MPLS packets with a top label L is\n   an MPLS
    tunnel, then Rd determines a) that L is upstream-assigned and\n   b) the context
    for L, from the labels above L in the label stack.\n   Note that one or more of
    these labels may also be upstream-assigned\n   labels.\n   If the tunnel on which
    Rd receives MPLS packets with a top label L is\n   an IP/GRE tunnel, then Rd determines
    a) that L is upstream-assigned\n   [RFC5332] and b) the context for L, from the
    source address in the IP\n   header.\n   When Ru and Rd are adjacent to each other
    on a multi-access data link\n   media, if Ru would transmit the packet, with top
    label L, by\n   encapsulating it in a data link frame, then whether L is upstream-\n
    \  assigned or downstream assigned can be determined by Rd, as described\n   in
    [RFC5332].  This is possible because if L is upstream-assigned,\n   then [RFC5332]
    uses a different ether type in the data link frame.\n   However, this is not sufficient
    for Rd to determine the context of\n   this packet.  In order for Rd to determine
    the context of this\n   packet, Ru encapsulates the packet in a one-hop MPLS tunnel.
    \ This\n   tunnel uses an MPLS context label that is assigned by Ru.  Section
    8\n   describes how the context label is assigned.  Rd maintains a separate\n
    \  \"Upstream Neighbor Label Space\" for Ru.  The \"context\" of this\n   packet,
    i.e., Ru's upstream neighbor label space, in which L was\n   reserved, is determined
    by Rd from the top context label and the\n   interface on which the packet is
    received.  The ether type in the\n   data link frame is set to indicate that the
    top label is upstream-\n   assigned.  The second label in the stack is L.\n"
  title: 7.  Upstream Neighbor Label Space
- contents:
  - "8.  Context Label on LANs\n   For a labeled packet with an ether type of \"upstream
    label\n   assignment\", the top label is used as the context.  The context label\n
    \  value is assigned by the upstream LSR and advertised to the\n   downstream
    LSRs.  Mechanisms for advertising the context label will\n   be provided by the
    label distribution protocol between the upstream\n   and downstream LSRs.  The
    description of such a mechanism is outside\n   the scope of this document.\n   The
    context label assigned by an LSR for use on a particular LAN\n   interface MUST
    be unique across all the context labels assigned by\n   other LSRs for use on
    the same LAN.  When a labeled packet is\n   received from the LAN, the context
    label MUST be looked up in the\n   context of the LAN interface on which the packet
    is received.\n   This document provides two methods that an LSR can use to choose
    a\n   context label to advertise on a particular LAN.\n   The first method requires
    that each LSR be provisioned with a 20-bit\n   context label for each LAN interface
    on which a context label is\n   required.  It is then left to the provisioning
    system to make sure\n   that an assigned context label is unique across the corresponding\n
    \  LAN.\n   The second method allows the context labels to be auto-generated,
    but\n   is only applicable if each LSR on the LAN has an IPv4 address as its\n
    \  primary IP address for the corresponding LAN interface.  (If the LAN\n   contains
    LSRs that have only IPv6 addresses for the LAN interface,\n   then the first method
    is used.)\n   Suppose that each LAN interface is configured with a primary IPv4\n
    \  address that is unique on that LAN.  The host part of the IPv4\n   address,
    identified by the network mask, is unique.  If the IPv4\n   network mask is greater
    than 12 bits, it is possible to map the\n   remaining 20 bits into a unique context
    label value.  This enables\n   the LSRs on the LAN to automatically generate a
    unique context label.\n   To ensure that auto-generated context label values do
    not fall into\n   the reserved label space range [RFC3032], the value of the host
    part\n   of the IPv4 address is offset with 0x10, if this value is not greater\n
    \  than 0xFFFEF.  Values of the host part of the IPv4 address greater\n   than
    0xFFFEF are not allowed to be used as context labels.\n   Consider LSR Rm (downstream)
    connected to Ru1 (upstream) on a LAN\n   interface and to Ru2 (upstream) on a
    different LAN interface.  Rm\n   could receive a context label value derived from
    the LAN interface\n   from Ru1 and from Ru2.  It is possible that the context
    label values\n   used by Ru1 and Ru2 are the same.  This would occur if the LAN\n
    \  interfaces of both Ru1 and Ru2 are configured with a primary IPv4\n   address
    where the lowest 20 bits are equal.  However, this does not\n   create any ambiguity,
    as it has already been stated that the context\n   label MUST be looked up in
    the context of the LAN interface on which\n   the packet is received.\n"
  title: 8.  Context Label on LANs
- contents:
  - "9.  Usage of Upstream-Assigned Labels\n   A typical use case of upstream-assigned
    labels is for MPLS multicast\n   and is described here for illustration.  This
    use case arises when an\n   upstream LSR Ru is adjacent to several downstream
    LSRs <Rd1...Rdn> in\n   an LSP, LSP1 AND Ru is connected to <Rd1...Rdn> via a
    multi-access\n   media or tunnel, AND Ru wants to transmit a single copy of an
    MPLS\n   packet on the LSP to <Rd1...Rdn>.  In the case of a tunnel, Ru can\n
    \  distribute an upstream-assigned label L that is bound to the FEC for\n   LSP1,
    to <Rd1..Rdn> and transmit an MPLS packet, the top label of\n   which is L, on
    the tunnel.  In the case of a multi-access media, Ru\n   can distribute an upstream-assigned
    label L that is bound to the FEC\n   for LSP1, to <Rd1..Rdn> and transmit an MPLS
    packet, the top label of\n   which is the context label that identifies Ru, and
    the label\n   immediately below is L, on the multi-access media.  Each of\n   <Rd1..Rdn>
    will then interpret this MPLS packet in the context of Ru\n   and forward it appropriately.
    \ This implies that <Rd1..Rdn> MUST all\n   be able to support an Upstream Neighbor
    Label Space for Ru and Ru\n   MUST be able to determine this.  The mechanisms
    for determining this\n   are specific to the application that is using upstream-assigned\n
    \  labels and is outside the scope of this document.\n"
  title: 9.  Usage of Upstream-Assigned Labels
- contents:
  - "10.  Security Considerations\n   The security considerations that apply to upstream-assigned
    labels\n   and context labels are no different in kind than those that apply to\n
    \  downstream-assigned labels.\n   Note that procedures for distributing upstream-assigned
    labels and/or\n   context labels are not within the scope of this document.  Therefore,\n
    \  the security considerations that may apply to such procedures are not\n   considered
    here.\n   Section 8 of this document describes a procedure that enables an LSR\n
    \  to automatically generate a unique context label for a LAN.  This\n   procedure
    assumes that the IP addresses of all the LSR interfaces on\n   the LAN will be
    unique in their low-order 20 bits.  If two LSRs whose\n   IP addresses have the
    same low-order 20 bits are placed on the LAN,\n   other LSRs are likely to misroute
    packets transmitted to the LAN by\n   either of the two LSRs in question.\n   More
    detailed discussion of security issues that are relevant in the\n   context of
    MPLS and GMPLS, including security threats, related\n   defensive techniques,
    and the mechanisms for detection and reporting,\n   are discussed in \"Security
    Framework for MPLS and GMPLS Networks\n   [MPLS-SEC].\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Acknowledgements\n   Thanks to IJsbrand Wijnands's contribution, specifically
    for the text\n   on which Section 8 is based.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [RFC3031]  Rosen, E., Viswanathan, A., and
      R. Callon, \"Multiprotocol\n              Label Switching Architecture\", RFC
      3031, January 2001.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
      to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [RFC5332]  Eckert, T., Rosen, E., Aggarwal, R., and Y. Rekhter, \"MPLS\n
      \             Multicast Encpsulations\", RFC 5332, August 2008.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [RFC3032]  Rosen, E., Tappan, D., Fedorkow,
      G., Rekhter, Y.,\n              Farinacci, D., Li, T., and A. Conta, \"MPLS
      Label Stack\n              Encoding\", RFC 3032, January 2001.\n   [MPLS-SEC]
      Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\",
      Work in Progress, July 2008.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Authors' Addresses\n   Rahul Aggarwal\n   Juniper Networks\n   1194 North Mathilda
    Ave.\n   Sunnyvale, CA 94089\n   EMail: rahul@juniper.net\n   Yakov Rekhter\n
    \  Juniper Networks\n   1194 North Mathilda Ave.\n   Sunnyvale, CA 94089\n   EMail:
    yakov@juniper.net\n   Eric C. Rosen\n   Cisco Systems, Inc.\n   1414 Massachusetts
    Avenue\n   Boxborough, MA 01719\n   EMail: erosen@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
