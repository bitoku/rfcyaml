- title: __initial_text__
  contents:
  - '                    Identity Representation for RSVP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes the representation of identity information\
    \ in\n   POLICY_DATA object for supporting policy based admission control in\n\
    \   the Resource ReSerVation Protocol (RSVP).  The goal of identity\n   representation\
    \ is to allow a process on a system to securely identify\n   the owner and the\
    \ application of the communicating process (e.g.,\n   user id) and convey this\
    \ information in RSVP messages (PATH or RESV)\n   in a secure manner.  We describe\
    \ the encoding of identities as RSVP\n   policy element.  We describe the processing\
    \ rules to generate\n   identity policy elements for multicast merged flows. \
    \ Subsequently,\n   we describe representations of user identities for Kerberos\
    \ and\n   Public Key based user authentication mechanisms.  In summary, we\n \
    \  describe the use of this identity information in an operational\n   setting.\n\
    \   This memo corrects an RSVP POLICY_DATA P-Type codepoint assignment\n   error\
    \ and a field size definition error in ErrorValue in RFC 2752.\n"
- title: 1. Conventions used in this document
  contents:
  - "1. Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC 2119].\n"
- title: 2. Introduction
  contents:
  - "2. Introduction\n   RSVP [RFC 2205] is a resource reservation setup protocol\
    \ designed for\n   an integrated services Internet [RFC 1633].  RSVP is used by\
    \ a host\n   to request specific quality of service (QoS) from the network for\n\
    \   particular application data streams or flows.  RSVP is also used by\n   routers\
    \ to deliver QoS requests to all nodes along the path(s) of the\n   flows and\
    \ to establish and maintain state to provide the requested\n   service.  RSVP\
    \ requests will generally result in resources being\n   reserved in each node\
    \ along the data path.  RSVP allows particular\n   users to obtain preferential\
    \ access to network resources, under the\n   control of an admission control mechanism.\
    \  Permission to make a\n   reservation is based both upon the availability of\
    \ the requested\n   resources along the path of the data and upon satisfaction\
    \ of policy\n   rules.  Providing policy based admission control mechanism based\
    \ on\n   user identity or application is one of the prime requirements.\n   In\
    \ order to solve these problems and implement identity based policy\n   control\
    \ it is required to identify the user and/or application making\n   a RSVP request.\n\
    \   This document proposes a mechanism for sending identification\n   information\
    \ in the RSVP messages and enables authorization decisions\n   based on policy\
    \ and identity.\n   We describe the authentication policy element (AUTH_DATA)\
    \ contained\n   in the POLICY_DATA object.  User process can generate an AUTH_DATA\n\
    \   policy element and gives it to RSVP process (service) on the\n   originating\
    \ host.  RSVP service inserts AUTH_DATA into the RSVP\n   message to identify\
    \ the owner (user and/or application) making the\n   request for network resources.\
    \  Network elements, such as routers,\n   authenticate request using the credentials\
    \ presented in the AUTH_DATA\n   and admit the RSVP message based on admission\
    \ policy.  After a\n   request has been authenticated, first hop router installs\
    \ the RSVP\n   state and forwards the new policy element returned by the Policy\n\
    \   Decision Point (PDP) [POL-FRAME].\n"
- title: 3. Policy Element for Authentication Data
  contents:
  - '3. Policy Element for Authentication Data

    '
- title: 3.1 Policy Data Object Format
  contents:
  - "3.1 Policy Data Object Format\n   POLICY_DATA objects contain policy information\
    \ and are carried by\n   RSVP messages.  A detail description of the format of\
    \ POLICY_DATA\n   object can be found in \"RSVP Extensions for Policy Control\"\
    \ [POL-\n   EXT].\n"
- title: 3.2 Authentication Data Policy Element
  contents:
  - "3.2 Authentication Data Policy Element\n   In this section, we describe a policy\
    \ element (PE) called\n   authentication data (AUTH_DATA).  AUTH_DATA policy element\
    \ contains a\n   list of authentication attributes.\n      +-------------+-------------+-------------+-------------+\n\
    \      | Length                    | P-Type = Identity Type    |\n      +-------------+-------------+-------------+-------------+\n\
    \      // Authentication Attribute List                       //\n      +-------------------------------------------------------+\n\
    \   Length\n      The length of the policy element (including the Length and P-Type)\n\
    \      is in number of octets (MUST be a multiple of 4) and indicates the\n  \
    \    end of the authentication attribute list.\n   P-Type (Identity Type)\n  \
    \    Type of identity information contained in this Policy Element\n      supplied\
    \ as the Policy element type (P-type).  The Internet\n      Assigned Numbers Authority\
    \ (IANA) acts as a registry for policy\n      element types for identity as described\
    \ in the [POL-EXT].\n      Initially, the registry contains the following P-Types\
    \ for\n      identity:\n      2   AUTH_USER       Authentication scheme to identify\
    \ users\n      3   AUTH_APP        Authentication scheme to identify\n       \
    \                   applications\n   Authentication Attribute List\n      Authentication\
    \ attributes contain information specific to\n      authentication method and\
    \ type of AUTH_DATA.  The policy element\n      provides the mechanism for grouping\
    \ a collection of authentication\n      attributes.\n"
- title: 3.3 Authentication Attributes
  contents:
  - "3.3 Authentication Attributes\n   Authentication attributes MUST be encoded as\
    \ a multiple of 4 octets,\n   attributes that are not a multiple of 4 octets long\
    \ MUST be padded to\n   a 4-octet boundary.\n   +--------+--------+--------+--------+\n\
    \   | Length          | A-Type |SubType |\n   +--------+--------+--------+--------+\n\
    \   | Value ...\n   +--------+--------+--------+--------+\n   Length\n      The\
    \ length field is two octets and indicates the actual length of\n      the attribute\
    \ (including the Length and A-Type fields) in number\n      of octets.  The length\
    \ does not include any bytes padding to the\n      value field to make the attribute\
    \ multiple of 4 octets long.\n   A-Type\n      Authentication attribute type (A-Type)\
    \ field is one octet.  IANA\n      acts as a registry for A-Types as described\
    \ in the section 8,\n      IANA Considerations.  Initially, the registry contains\
    \ the\n      following A-Types:\n      1  POLICY_LOCATOR      Unique string for\
    \ locating the\n                             admission policy (such as X.500 DN\n\
    \                             described in [RFC 1779]).\n      2  CREDENTIAL \
    \         User credential such as Kerberos\n                             ticket,\
    \ or digital certificate.\n                             Application credential\
    \ such as\n                             application ID.\n      3  DIGITAL_SIGNATURE\
    \   Digital signature of the\n                             authentication data\
    \ policy element.\n      4  POLICY_ERROR_OBJECT Detailed information on policy\n\
    \                             failures.\n   SubType\n      Authentication attribute\
    \ sub-type field is one octet.  Value of\n      SubType depends on A-type.\n \
    \  Value:\n      The value field contains the attribute specific information.\n"
- title: 3.3.1 Policy Locator
  contents:
  - "3.3.1 Policy Locator\n   POLICY_LOCATOR is used to locate the admission policy\
    \ for the user or\n   application.  Distinguished Name (DN) is unique for each\
    \ User or\n   application hence a DN is used as policy locator.\n   +-------+-------+-------+-------+\n\
    \   | Length        |A-Type |SubType|\n   +-------+-------+-------+-------+\n\
    \   | OctetString ...\n   +-------+-------+-------+--------\n   Length\n     \
    \ Length of the attribute, which MUST be >= 4.\n   A-Type\n      POLICY_LOCATOR\n\
    \   SubType\n      Following sub types for POLICY_LOCATOR are defined.  IANA acts\
    \ as\n      a registry for POLICY_LOCATOR sub types as described in the\n    \
    \  section 8, IANA Considerations.  Initially, the registry contains\n      the\
    \ following sub types for POLICY_LOCATOR:\n      1  ASCII_DN            OctetString\
    \ contains the X.500 DN as\n                             described in the RFC\
    \ 1779 as an ASCII\n                             string.\n      2  UNICODE_DN\
    \          OctetString contains the X.500 DN described\n                     \
    \        in the RFC 1779 as an UNICODE string.\n      3  ASCII_DN_ENCRYPT    OctetString\
    \ contains the encrypted X.500\n                             DN.  The Kerberos\
    \ session key or digital\n                             certificate private key\
    \ is used for\n                             encryption.  For Kerberos encryption\
    \ the\n                             format is the same as returned from\n    \
    \                         gss_seal [RFC 1509].\n      4  UNICODE_DN_ENCRYPT  OctetString\
    \ contains the encrypted UNICODE\n                             X.500 DN.  The\
    \ Kerberos session key or\n                             digital certificate private\
    \ key is used for\n                             encryption.  For Kerberos encryption\
    \ the\n                             format is the same as returned from\n    \
    \                         gss_seal [RFC 1509].\n   OctetString\n      The OctetString\
    \ field contains the DN.\n"
- title: 3.3.2 Credential
  contents:
  - "3.3.2 Credential\n   CREDENTIAL indicates the credential of the user or application\
    \ to be\n   authenticated.  For Kerberos authentication method the CREDENTIAL\n\
    \   object contains the Kerberos session ticket.  For public key based\n   authentication\
    \ this field contains a digital certificate.\n   A summary of the CREDENTIAL attribute\
    \ format is shown below.  The\n   fields are transmitted from left to right.\n\
    \   +-------+-------+-------+-------+\n   | Length        |A-Type |SubType|\n\
    \   +-------+-------+-------+-------+\n   | OctetString ...\n   +-------+-------+-------+--------\n\
    \   Length\n      Length of the attribute, which MUST be >= 4.\n   A-Type\n  \
    \    CREDENTIAL\n   SubType\n      IANA acts as a registry for CREDENTIAL sub\
    \ types as described in\n      the section 8, IANA Considerations.  Initially,\
    \ the registry\n      contains the following sub types for CREDENTIAL:\n     \
    \ 1  ASCII_ID       OctetString contains user or application\n               \
    \         identification in plain ASCII text string.\n      2  UNICODE_ID    \
    \ OctetString contains user or application\n                        identification\
    \ in plain UNICODE text string.\n      3  KERBEROS_TKT   OctetString contains\
    \ Kerberos ticket.\n      4  X509_V3_CERT   OctetString contains X.509 V3 digital\n\
    \                        certificate [X.509].\n      5  PGP_CERT       OctetString\
    \ contains PGP digital certificate.\n   OctetString\n      The OctetString contains\
    \ the user or application credential.\n"
- title: 3.3.3 Digital Signature
  contents:
  - "3.3.3 Digital Signature\n   The DIGITAL_SIGNATURE attribute MUST be the last\
    \ attribute in the\n   attribute list and contains the digital signature of the\
    \ AUTH_DATA\n   policy element.  The digital signature signs all data in the\n\
    \   AUTH_DATA policy element up to the DIGITAL_SIGNATURE.  The algorithm\n   used\
    \ to compute the digital signature depends on the authentication\n   method specified\
    \ by the CREDENTIAL SubType field.\n   A summary of DIGITAL_SIGNATURE attribute\
    \ format is described below.\n   +-------+-------+-------+-------+\n   | Length\
    \        |A-Type |SubType|\n   +-------+-------+-------+-------+\n   | OctetString\
    \ ...\n   +-------+-------+-------+--------\n   Length\n      Length of the attribute,\
    \ which MUST be >= 4.\n   A-Type\n      DIGITAL_SIGNATURE\n   SubType\n      No\
    \ sub types for DIGITAL_SIGNATURE are currently defined.  This\n      field MUST\
    \ be set to 0.\n   OctetString\n      OctetString contains the digital signature\
    \ of the AUTH_DATA.\n"
- title: 3.3.4 Policy Error Object
  contents:
  - "3.3.4 Policy Error Object\n   This attribute is used to carry any specific policy\
    \ control errors\n   generated by a node when processing/validating an Authentication\
    \ Data\n   Policy Element.  When a RSVP policy node (local policy decision point\n\
    \   or remote PDP) encounters a request that fails policy control due to\n   its\
    \ Authentication Policy Element, it SHOULD add a POLICY_ERROR_CODE\n   containing\
    \ additional information about the reason the failure\n   occurred into the policy\
    \ element.  This will then cause an\n   appropriate PATH_ERROR or RESV_ERROR message\
    \ to be generated with the\n   policy element and appropriate RSVP error code\
    \ in the message, which\n   is returned to the request's source.\n   The AUTH_DATA\
    \ policy element in the PATH or RSVP message SHOULD not\n   contain the POLICY_ERROR_OBJECT\
    \ attribute.  These are only inserted\n   into PATH_ERROR and RESV_ERROR messages\
    \ when generated by policy\n   aware intermediate nodes.\n   +----------+----------+----------+----------+\n\
    \   | Length              | A-Type   | SubType  |\n   +----------+----------+----------+----------+\n\
    \   | 0 (Reserved)        | ErrorValue          |\n   +----------+----------+----------+----------+\n\
    \   | OctetString ...\n   +----------+----------+----------+----------+\n   Length\n\
    \      Length of the attribute, which MUST be >= 8.\n   A-Type\n      POLICY_ERROR_CODE\n\
    \   SubType\n      No sub types for POLICY_ERROR_CODE are currently defined. \
    \ This\n      field MUST be set to 0.\n   ErrorValue\n      A 16-bit bit code\
    \ containing the reason that the policy decision\n      point failed to process\
    \ the policy element.  IANA acts as a\n      registry for ErrorValues as described\
    \ in section 8, IANA\n      Considerations.  Following values have been defined.\n\
    \      1  ERROR_NO_MORE_INFO           No information is available.\n      2 \
    \ UNSUPPORTED_CREDENTIAL_TYPE  This type of credentials is\n                 \
    \                     not supported.\n      3  INSUFFICIENT_PRIVILEGES      The\
    \ credentials do not have\n                                      sufficient privilege.\n\
    \      4  EXPIRED_CREDENTIAL           The credential has expired.\n      5  IDENTITY_CHANGED\
    \             Identity has changed.\n   OctetString\n      The OctetString field\
    \ contains information from the policy\n      decision point that MAY contain\
    \ additional information about the\n      policy failure.  For example, it may\
    \ include a human-readable\n      message in the ASCII text.\n"
- title: 4. Authentication Data Formats
  contents:
  - "4. Authentication Data Formats\n   Authentication attributes are grouped in a\
    \ policy element to\n   represent the identity credentials.\n"
- title: 4.1 Simple User Authentication
  contents:
  - "4.1 Simple User Authentication\n   In simple user authentication method the user\
    \ login ID (in plain\n   ASCII or UNICODE text) is encoded as CREDENTIAL attribute.\
    \  A summary\n   of the simple user AUTH_DATA policy element is shown below.\n\
    \   +--------------+--------------+--------------+--------------+\n   | Length\
    \                      | P-type = AUTH_USER          |\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      |POLICY_LOCATOR| SubType      |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (User's Distinguished Name) ...\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      |CREDENTIAL    | ASCII_ID     |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (User's login ID) ...\n   +--------------+--------------+--------------+--------------+\n"
- title: 4.2 Kerberos User Authentication
  contents:
  - "4.2 Kerberos User Authentication\n   Kerberos [RFC 1510] authentication uses\
    \ a trusted third party (the\n   Kerberos Distribution Center - KDC) to provide\
    \ for authentication of\n   the user to a network server.  It is assumed that\
    \ a KDC is present\n   and both host and verifier of authentication information\
    \ (router or\n   PDP) implement Kerberos authentication.\n   A summary of the\
    \ Kerberos AUTH_DATA policy element is shown below.\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      | P-type = AUTH_USER          |\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      |POLICY_LOCATOR|   SubType    |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (User's Distinguished Name) ...\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      | CREDENTIAL   | KERBEROS_TKT |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (Kerberos Session Ticket) ...\n   +--------------+--------------+--------------+--------------+\n"
- title: 4.2.1. Operational Setting using Kerberos Identities
  contents:
  - "4.2.1. Operational Setting using Kerberos Identities\n   An RSVP enabled host\
    \ is configured to construct and insert AUTH_DATA\n   policy element into RSVP\
    \ messages that designate use of the Kerberos\n   authentication method (KERBEROS_TKT).\
    \  Upon RSVP session\n   initialization, the user application contacts the KDC\
    \ to obtain a\n   Kerberos ticket for the next network node or its PDP.  A router\
    \ when\n   generating a RSVP message contacts the KDC to obtain a Kerberos\n \
    \  ticket for the next hop network node or its PDP.  The identity of the\n   PDP\
    \ or next network hop can be statically configured, learned via\n   DHCP or maintained\
    \ in a directory service.  The Kerberos ticket is\n   sent to the next network\
    \ node (which may be a router or host) in a\n   RSVP message.  The KDC is used\
    \ to validate the ticket and\n   authentication the user sending RSVP message.\n"
- title: 4.3 Public Key based User Authentication
  contents:
  - "4.3 Public Key based User Authentication\n   In public key based user authentication\
    \ method digital certificate is\n   encoded as user credentials.  The digital\
    \ signature is used for\n   authenticating the user.  A summary of the public\
    \ key user AUTH_DATA\n   policy element is shown below.\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      | P-type = AUTH_USER          |\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      |POLICY_LOCATOR|   SubType    |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (User's Distinguished Name) ...\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      | CREDENTIAL   |   SubType    |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (User's Digital Certificate) ...\n   +--------------+--------------+--------------+--------------+\n\
    \   | Length                      |DIGITAL_SIGN. | 0            |\n   +--------------+--------------+--------------+--------------+\n\
    \   | OctetString (Digital signature) ...\n   +--------------+--------------+--------------+--------------+\n"
- title: 4.3.1. Operational Setting for public key based authentication
  contents:
  - "4.3.1. Operational Setting for public key based authentication\n   Public key\
    \ based authentication assumes following:\n      -  RSVP service requestors have\
    \ a pair of keys (private key and\n         public key).\n      -  Private key\
    \ is secured with the user.\n      -  Public keys are stored in digital certificates\
    \ and a trusted\n         party, certificate authority (CA) issues these digital\n\
    \         certificates.\n      -  The verifier (PDP or router) has the ability\
    \ to verify the\n         digital certificate.\n   RSVP requestor uses its private\
    \ key to generate DIGITAL_SIGNATURE.\n   User Authenticators (router, PDP) use\
    \ the user's public key (stored\n   in the digital certificate) to verify the\
    \ signature and authenticate\n   the user.\n"
- title: 4.4 Simple Application Authentication
  contents:
  - "4.4 Simple Application Authentication\n   The application authentication method\
    \ encodes the application\n   identification such as an executable filename as\
    \ plain ASCII or\n   UNICODE text.\n   +----------------+--------------+--------------+--------------+\n\
    \   | Length                        | P-type = AUTH_APP           |\n   +----------------+--------------+--------------+--------------+\n\
    \   | Length                        |POLICY_LOCATOR| SubType      |\n   +----------------+--------------+--------------+--------------+\n\
    \   | OctetString (Application Identity attributes in\n   |              the form\
    \ of  a Distinguished Name) ...\n   +----------------+--------------+--------------+--------------+\n\
    \   | Length                        | CREDENTIAL   | ASCII_ID     |\n   +----------------+--------------+--------------+--------------+\n\
    \   | OctetString (Application Id, e.g., vic.exe)\n   +----------------+--------------+--------------+--------------+\n"
- title: 5. Operation
  contents:
  - "5. Operation\n   +-----+                                                  +-----+\n\
    \   | PDP |-------+                                          | PDP |\n   +-----+\
    \       |             ...................          +-----+\n                 |\
    \             :                 :          |\n               +--------+      :\
    \     Transit     :        +-------+\n          +----| Router |------:     Network\
    \     : -------| Router|--+\n          |    +--------+      :                \
    \ :        +-------+  |\n          |        |           :.................:  \
    \           |     |\n          |        |                                    \
    \       |     |\n     Host A        B                                        \
    \   C     D\n     Figure 1: User and Application Authentication using AUTH_DATA\
    \ PE\n   Network nodes (hosts/routers) generate AUTH_DATA policy elements,\n \
    \  contents of which are depend on the identity type used and the\n   authentication\
    \ method used.  These generally contain authentication\n   credentials (Kerberos\
    \ ticket or digital certificate) and policy\n   locators (which can be the X.500\
    \ Distinguished Name of the user or\n   network node or application names).  Network\
    \ nodes generate AUTH_DATA\n   policy element containing the authentication identity\
    \ when making the\n   RSVP request or forwarding a RSVP message.\n   Network nodes\
    \ generate user AUTH_DATA policy element using the\n   following rules:\n   1.\
    \ For unicast sessions the user policy locator is copied from the\n      previous\
    \ hop.  The authentication credentials are for the current\n      network node\
    \ identity.\n   2. For multicast messages the user policy locator is for the current\n\
    \      network node identity.  The authentication credentials are for the\n  \
    \    current network node.\n   Network nodes generate application AUTH_DATA policy\
    \ element using the\n   following rules:\n   1. For unicast sessions the application\
    \ AUTH_DATA is copied from the\n      previous hop.\n   2. For multicast messages\
    \ the application AUTH_DATA is either the\n      first application AUTH_DATA in\
    \ the message or chosen by the PDP.\n"
- title: 6. Message Processing Rules
  contents:
  - '6. Message Processing Rules

    '
- title: 6.1 Message Generation (RSVP Host)
  contents:
  - "6.1 Message Generation (RSVP Host)\n   An RSVP message is created as specified\
    \ in [RFC 2205] with following\n   modifications.\n   1. RSVP message MAY contain\
    \ multiple AUTH_DATA policy elements.\n   2. Authentication policy element (AUTH_DATA)\
    \ is created and the\n      IdentityType field is set to indicate the identity\
    \ type in the\n      policy element.\n      -  DN is inserted as POLICY_LOCATOR\
    \ attribute.\n      -  Credentials such as Kerberos ticket or digital certificate\
    \ are\n         inserted as the CREDENTIAL attribute.\n   3. POLICY_DATA object\
    \ (containing the AUTH_DATA policy element) is\n      inserted in the RSVP message\
    \ in appropriate place.  If INTEGRITY\n      object is not computed for the RSVP\
    \ message then an INTEGRITY\n      object SHOULD be computed for this POLICY_DATA\
    \ object, as\n      described in the [POL_EXT], and SHOULD be inserted as a Policy\n\
    \      Data option.\n"
- title: 6.2 Message Reception (Router)
  contents:
  - "6.2 Message Reception (Router)\n   RSVP message is processed as specified in\
    \ [RFC 2205] with following\n   modifications.\n   1. If router is not policy\
    \ aware then it SHOULD send the RSVP message\n      to the PDP and wait for response.\
    \  If the router is policy unaware\n      then it ignores the policy data objects\
    \ and continues processing\n      the RSVP message.\n   2. Reject the message\
    \ if the response from the PDP is negative.\n   3. Continue processing the RSVP\
    \ message.\n"
- title: 6.3 Authentication (Router/PDP)
  contents:
  - "6.3 Authentication (Router/PDP)\n   1. Retrieve the AUTH_DATA policy element.\
    \  Check the PE type field\n      and return an error if the identity type is\
    \ not supported.\n   2. Verify user credential\n      -  Simple authentication:\
    \ e.g., Get user ID and validate it, or\n         get executable name and validate\
    \ it.\n      -  Kerberos: Send the Kerberos ticket to the KDC to obtain the\n\
    \         session key.  Using the session key authenticate the user.\n      -\
    \  Public Key: Validate the certificate that it was issued by a\n         trusted\
    \ Certificate Authority (CA) and authenticate the user or\n         application\
    \ by verifying the digital signature.\n"
- title: 7. Error Signaling
  contents:
  - "7. Error Signaling\n   If PDP fails to verify the AUTH_DATA policy element then\
    \ it MUST\n   return policy control failure (Error Code = 02) to the PEP.  The\n\
    \   error values are described in [RFC 2205] and [POL-EXT].  Also PDP\n   SHOULD\
    \ supply a policy data object containing an AUTH_DATA Policy\n   Element with\
    \ A-Type=POLICY_ERROR_CODE containing more details on the\n   Policy Control failure\
    \ (see section 3.3.4).  The PEP will include\n   this Policy Data object in the\
    \ outgoing RSVP Error message.\n"
- title: 8. IANA Considerations
  contents:
  - "8. IANA Considerations\n   Following the policies outlined in [IANA-CONSIDERATIONS],\
    \ Standard\n   RSVP Policy Elements (P-type values) are assigned by IETF Consensus\n\
    \   action as described in [POL-EXT].\n   P-Type AUTH_USER is assigned the value\
    \ 2.  P-Type AUTH_APP is\n   assigned the value 3.\n   Following the policies\
    \ outlined in [IANA-CONSIDERATIONS],\n   authentication attribute types (A-Type)\
    \ in the range 0-127 are\n   allocated through an IETF Consensus action, A-Type\
    \ values between\n   128-255 are reserved for Private Use and are not assigned\
    \ by IANA.\n   A-Type POLICY_LOCATOR is assigned the value 1.  A-Type CREDENTIAL\
    \ is\n   assigned the value 2.  A-Type DIGITAL_SIGNATURE is assigned the value\n\
    \   3.  A-Type POLICY_ERROR_OBJECT is assigned the value 4.\n   Following the\
    \ policies outlined in [IANA-CONSIDERATIONS],\n   POLICY_LOCATOR SubType values\
    \ in the range 0-127 are allocated\n   through an IETF Consensus action, POLICY_LOCATOR\
    \ SubType values\n   between 128-255 are reserved for Private Use and are not\
    \ assigned by\n   IANA.\n   POLICY_LOCATOR SubType ASCII_DN is assigned the value\
    \ 1, SubType\n   UNICODE_DN is assigned the value 2, SubType ASCII_DN_ENCRYPT\
    \ is\n   assigned the value 3 and SubType UNICODE_DN_ENCRYPT is assigned the\n\
    \   value 4.\n   Following the policies outlined in [IANA-CONSIDERATIONS], CREDENTIAL\n\
    \   SubType values in the range 0-127 are allocated through an IETF\n   Consensus\
    \ action, CREDENTIAL SubType values between 128-255 are\n   reserved for Private\
    \ Use and are not assigned by IANA.\n   CREDENTIAL SubType ASCII_ID is assigned\
    \ the value 1, SubType\n   UNICODE_ID is assigned the value 2, SubType KERBEROS_TKT\
    \ is assigned\n   the value 3, SubType X509_V3_CERT is assigned the value 4, SubType\n\
    \   PGP_CERT is assigned the value 5.\n   Following the policies outlined in [IANA-CONSIDERATIONS],\
    \ ErrorValues\n   in the range 0-32767 are allocated through an IETF Consensus\
    \ action,\n   ErrorValues between 32768-65535 are reserved for Private Use and\
    \ are\n   not assigned by IANA.\n   ErrorValue ERROR_NO_MORE_INFO is assigned\
    \ the value 1,\n   UNSUPPORTED_CREDENTIAL_TYPE is assigned the value 2,\n   INSUFFICIENT_PRIVILEGES\
    \ is assigned the value 3, EXPIRED_CREDENTIAL\n   is assigned the value 4, and\
    \ IDENTITY_CHANGED is assigned the value\n   5.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   The purpose of this memo is to describe a mechanism\
    \ to authenticate\n   RSVP requests based on user identity in a secure manner.\
    \  RSVP\n   INTEGRITY object is used to protect the policy object containing user\n\
    \   identity information from security (replay) attacks.  Combining the\n   AUTH_DATA\
    \ policy element and the INTEGRITY object results in a secure\n   access control\
    \ that enforces authentication based on both the\n   identity of the user and\
    \ the identity of the originating node.\n   Simple authentication does not contain\
    \ credential that can be\n   securely authenticated and is inherently less secured.\n\
    \   The Kerberos authentication mechanism is reasonably well secured.\n   User\
    \ authentication using a public key certificate is known to\n   provide the strongest\
    \ security.\n"
- title: 10. Acknowledgments
  contents:
  - "10. Acknowledgments\n   We would like to thank Andrew Smith, Bob Lindell and\
    \ many others for\n   their valuable comments on this memo.\n"
- title: 11. References
  contents:
  - "11. References\n   [ASCII]               Coded Character Set -- 7-Bit American\
    \ Standard\n                         Code for Information Interchange, ANSI X3.4-\n\
    \                         1986.\n   [IANA-CONSIDERATIONS] Alvestrand, H. and T.\
    \ Narten, \"Guidelines for\n                         Writing an IANA Considerations\
    \ Section in\n                         RFCs\", BCP 26, RFC 2434, October 1998.\n\
    \   [POL-EXT]             Herzog, S., \"RSVP Extensions for Policy\n         \
    \                Control\", RFC 2750, January 2000.\n   [POL-FRAME]          \
    \ Yavatkar, R., Pendarakis, D. and R. Guerin, \"A\n                         Framework\
    \ for Policy-based Admission Control\n                         RSVP\", RFC 2753,\
    \ January 2000.\n   [RFC 1510]            Kohl, J. and C. Neuman, \"The Kerberos\
    \ Network\n                         Authentication Service (V5)\", RFC 1510,\n\
    \                         September 1993.\n   [RFC 1704]            Haller, N.\
    \ and R. Atkinson, \"On Internet\n                         Authentication\", RFC\
    \ 1704, October 1994.\n   [RFC 1779]            Killie, S., \"A String Representation\
    \ of\n                         Distinguished Names\", RFC 1779, March 1995.\n\
    \   [RFC 2205]            Braden, R., Zhang, L., Berson, S., Herzog, S.\n    \
    \                     and S. Jamin, \"Resource ReSerVation Protocol\n        \
    \                 (RSVP) - Version 1 Functional Specification\",\n           \
    \              RFC 2205, September 1997.\n   [RFC 2209]            Braden, R.\
    \ and L. Zhang, \"Resource ReSerVation\n                         Protocol (RSVP)\
    \ - Version 1 Message Processing\n                         Rules\", RFC 2209,\
    \ September 1997.\n   [RFC 2119]            Bradner, S., \"Key words for use in\
    \ RFCs to\n                         Indicate Requirement Levels\", BCP 14, RFC\
    \ 2119,\n                         March 1997.\n   [RFC 2751]            Herzog,\
    \ S., \"Signaled Preemption Priority\n                         Policy Element\"\
    , RFC 2751, January 2000.\n   [UNICODE]             The Unicode Consortium, \"\
    The Unicode Standard,\n                         Version 2.0\", Addison-Wesley,\
    \ Reading, MA,\n                         1996.\n   [X.509]               Housley,\
    \ R., Ford, W., Polk, W. and D. Solo,\n                         \"Internet X.509\
    \ Public Key Infrastructure\n                         Certificate and CRL Profile\"\
    , RFC 2459, January\n                         1999.\n   [X.509-ITU]          \
    \ ITU-T (formerly CCITT) Information technology -\n                         Open\
    \ Systems Interconnection - The Directory:\n                         Authentication\
    \ Framework Recommendation X.509\n                         ISO/IEC 9594-8\n"
- title: 12. Authors' Addresses
  contents:
  - "12. Authors' Addresses\n   Satyendra Yadav\n   Intel, JF3-206\n   2111 NE 25th\
    \ Avenue\n   Hillsboro, OR 97124\n   EMail: Satyendra.Yadav@intel.com\n   Raj\
    \ Yavatkar\n   Intel, JF3-206\n   2111 NE 25th Avenue\n   Hillsboro, OR 97124\n\
    \   EMail: Raj.Yavatkar@intel.com\n   Ramesh Pabbati\n   Microsoft\n   1 Microsoft\
    \ Way\n   Redmond, WA 98054\n   EMail: rameshpa@microsoft.com\n   Peter Ford\n\
    \   Microsoft\n   1 Microsoft Way\n   Redmond, WA 98054\n   EMail: peterf@microsoft.com\n\
    \   Tim Moore\n   Microsoft\n   1 Microsoft Way\n   Redmond, WA 98054\n   EMail:\
    \ timmoore@microsoft.com\n   Shai Herzog\n   PolicyConsulting.Com\n   200 Clove\
    \ Rd.\n   New Rochelle, NY 10801\n   EMail: herzog@policyconsulting.com\n   Rodney\
    \ Hess\n   Intel, BD1\n   28 Crosby Drive\n   Bedford, MA 01730\n   EMail: rodney.hess@intel.com\n"
- title: 13. Full Copyright Statement
  contents:
  - "13. Full Copyright Statement\n   Copyright (C) The Internet Society (2001). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
