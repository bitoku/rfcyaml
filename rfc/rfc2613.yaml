- title: __initial_text__
  contents:
  - "     Remote Network Monitoring MIB Extensions for Switched Networks\n       \
    \                       Version 1.0\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in TCP/IP-based internets.\n   In\
    \ particular, it defines objects for managing remote network\n   monitoring devices\
    \ in switched networks environments.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 The Network Management Framework                    \
    \         2\n   2 Overview                                                   \
    \  3\n     2.1 Remote Network Management Goals                          3\n  \
    \   2.2 Switched Networks Monitoring                             5\n     2.3 Mechanisms\
    \ for Monitoring Switched Networks              5\n         2.3.1 DataSource Objects\
    \                                 6\n         2.3.2 Copy Port                \
    \                          7\n         2.3.3 VLAN Monitoring                 \
    \                   7\n     2.4  Relationship to Other MIBs                  \
    \            8\n          2.4.1 The RMON and RMON 2 MIBs                     \
    \     8\n          2.4.2 The Interfaces Group MIB                          8\n\
    \          2.4.3 The Entity MIB                                    8\n       \
    \   2.4.4 The Bridge MIB                                    9\n     2.5 Relationship\
    \ with IEEE 802.1 Standards                   9\n   3 SMON/RMON Groups       \
    \                                      9\n     3.1 SMON ProbeCapabilities    \
    \                               9\n     3.2 smonVlanStats                    \
    \                       10\n     3.3 smonPrioStats                           \
    \                10\n     3.4 dataSourceCaps                                 \
    \         10\n     3.5 portCopyConfig                                        \
    \  11\n   4 Control of Remote Network Monitoring Devices                12\n \
    \  5 Definitions                                                 13\n   6 References\
    \                                                  39\n   7 Intellectual Property\
    \                                       41\n   8 Security Considerations     \
    \                                41\n   9 Authors' Addresses                 \
    \                         44\n   A Full Copyright Statement                  \
    \                  44\n"
- title: 1. The Network Management Framework
  contents:
  - "1. The Network Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n   - An overall architecture, described\
    \ in RFC 2571 [1].\n   - Mechanisms for describing and naming objects and events\
    \ for the\n     purpose of management. The first version of this Structure of\n\
    \     Management Information (SMI) is called SMIv1 and described in STD\n    \
    \ 16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The second\n     version,\
    \ called SMIv2, is described in STD 58, RFC 2578 [5], RFC\n     2579 [6] and RFC\
    \ 2580 [7].\n   - Message protocols for transferring management information. The\n\
    \     first version of the SNMP message protocol is called SNMPv1 and\n     described\
    \ in STD 15, RFC 1157 [8]. A second version of the SNMP\n     message protocol,\
    \ which is not an Internet standards track\n     protocol, is called SNMPv2c and\
    \ described in RFC 1901 [9] and RFC\n     1906 [10].  The third version of the\
    \ message protocol is called\n     SNMPv3 and described in RFC 1906 [10], RFC\
    \ 2572 [11] and RFC 2574\n     [12].\n   - Protocol operations for accessing management\
    \ information. The first\n     set of protocol operations and associated PDU formats\
    \ is described\n     in STD 15, RFC 1157 [8]. A second set of protocol operations\
    \ and\n     associated PDU formats is described in RFC 1905 [13].\n   - A set\
    \ of fundamental applications described in RFC 2573 [14] and\n     the view-based\
    \ access control mechanism described in RFC 2575 [15].\n   Managed objects are\
    \ accessed via a virtual information store, termed\n   the Management Information\
    \ Base or MIB.  Objects in the MIB are\n   defined using the mechanisms defined\
    \ in the SMI.\n   This memo specifies a MIB module that is compliant to the SMIv2.\
    \ A\n   MIB conforming to the SMIv1 can be produced through the appropriate\n\
    \   translations. The resulting translated MIB must be semantically\n   equivalent,\
    \ except where objects or events are omitted because no\n   information in SMIv2\
    \ will be converted into textual descriptions in\n   SMIv1 during the translation\
    \ process. However, this loss of machine\n   readable information is not considered\
    \ to change the semantics of the\n   MIB.\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    ,\"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [24].\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   This document continues the architecture created in the RMON\
    \ MIB [17]\n   by providing RMON analysis for switched networks (SMON).\n   Remote\
    \ network monitoring devices, often called monitors or probes,\n   are instruments\
    \ that exist for the purpose of managing a network.\n   Often these remote probes\
    \ are stand-alone devices and devote\n   significant internal resources for the\
    \ sole purpose of managing a\n   network.  An organization may employ many of\
    \ these devices, one per\n   network segment, to manage its internet. In addition,\
    \ these devices\n   may be used for a network management service provider to access\
    \ a\n   client network, often geographically remote.\n   The objects defined in\
    \ this document are intended as an interface\n   between an RMON agent and an\
    \ RMON management application and are not\n   intended for direct manipulation\
    \ by humans.  While some users may\n   tolerate the direct display of some of\
    \ these objects, few will\n   tolerate the complexity of manually manipulating\
    \ objects to\n   accomplish row creation.  These functions should be handled by\
    \ the\n   management application.\n"
- title: 2.1 Remote Network Management Goals
  contents:
  - "2.1 Remote Network Management Goals\n   o Offline Operation\n     There are sometimes\
    \ conditions when a management station will not\n     be in constant contact with\
    \ its remote monitoring devices.  This is\n     sometimes by design in an attempt\
    \ to lower communications costs\n     (especially when communicating over a WAN\
    \ or dialup link), or by\n     accident as network failures affect the communications\
    \ between the\n     management station and the probe.\n     For this reason, this\
    \ MIB allows a probe to be configured to\n     perform diagnostics and to collect\
    \ statistics continuously, even\n     when communication with the management station\
    \ may not be possible\n     or efficient.  The probe may then attempt to notify\
    \ the management\n     station when an exceptional condition occurs.  Thus, even\
    \ in\n     circumstances where communication between management station and\n\
    \     probe is not continuous, fault, performance, and configuration\n     information\
    \ may be continuously accumulated and communicated to the\n     management station\
    \ conveniently and efficiently.\n   o Proactive Monitoring\n     Given the resources\
    \ available on the monitor, it is potentially\n     helpful for it continuously\
    \ to run diagnostics and to log network\n     performance.  The monitor is always\
    \ available at the onset of any\n     failure.  It can notify the management station\
    \ of the failure and\n     can store historical statistical information about\
    \ the failure.\n     This historical information can be played back by the management\n\
    \     station in an attempt to perform further diagnosis into the cause\n    \
    \ of the problem.\n   o Problem Detection and Reporting\n     The monitor can\
    \ be configured to recognize conditions, most notably\n     error conditions,\
    \ and continuously to check for them.  When one of\n     these conditions occurs,\
    \ the event may be logged, and management\n     stations may be notified in a\
    \ number of ways.\n   o Value Added Data\n     Because a remote monitoring device\
    \ represents a network resource\n     dedicated exclusively to network management\
    \ functions, and because\n     it is located directly on the monitored portion\
    \ of the network, the\n     remote network monitoring device has the opportunity\
    \ to add\n     significant value to the data it collects.  For instance, by\n\
    \     highlighting those hosts on the network that generate the most\n     traffic\
    \ or errors, the probe can give the management station\n     precisely the information\
    \ it needs to solve a class of problems.\n   o Multiple Managers\n     An organization\
    \ may have multiple management stations for different\n     units of the organization,\
    \ for different functions (e.g.\n     engineering and operations), and in an attempt\
    \ to provide disaster\n     recovery.  Because environments with multiple management\
    \ stations\n     are common, the remote network monitoring device has to deal\
    \ with\n     more than one management station, potentially using its resources\n\
    \     concurrently.\n"
- title: 2.2 Switched Networks Monitoring
  contents:
  - "2.2 Switched Networks Monitoring\n   This document addresses issues related to\
    \ applying \"Remote\n   Technology\" to Switch Networks. Switches today differ\
    \ from standard\n   shared media protocols:\n   1)   Data is not, in general,\
    \ broadcast.  This MAY be caused by the\n        switch architecture  or by the\
    \ connection-oriented nature of the\n        data. This means, therefore, that\
    \ monitoring non-broadcast\n        traffic needs to be considered.\n   2)   Monitoring\
    \ the multiple entry and exit points from a switching\n        device requires\
    \ a vast amount of resources - memory and CPU, and\n        aggregation of the\
    \ data in logical packets of information,\n        determined by the application\
    \ needs.\n   3)   Switching incorporates logical segmentation such as Virtual\
    \ LANs\n        (VLANs).\n   4)   Switching incorporates packet prioritization.\n\
    \   5)   Data across the switch fabric can be in the form of cells. Like\n   \
    \     RMON, SMON is only concerned with the monitoring of packets.\n   Differences\
    \ such as these make monitoring difficult.  The current\n   RMON and RMON 2 standards\
    \ do not provide for things that are unique\n   to switches or switched environments.\n\
    \   In order to overcome the limitations of the existing standards, new\n   monitoring\
    \ mechanisms have been implemented by vendors of switching\n   equipment. All\
    \ these monitoring strategies are currently proprietary\n   in nature.\n   This\
    \ document provides the framework to include different switching\n   strategies\
    \ and allow for monitoring operations consistent with the\n   RMON framework.\
    \ This MIB is limited to monitoring and control\n   operations aimed at providing\
    \ monitoring data for RMON probes.\n"
- title: 2.3 Mechanisms for Monitoring Switched Networks
  contents:
  - "2.3 Mechanisms for Monitoring Switched Networks\n   The following mechanisms\
    \ are used by SMON devices, for the purpose of\n   monitoring switched networks.\n"
- title: 2.3.1 DataSource Objects
  contents:
  - "2.3.1 DataSource Objects\n   The RMON MIB standard [17] defines data source objects\
    \ which point to\n   MIB-II interfaces, identified by instances of ifIndex objects.\n\
    \   The SMON MIB extends this concept and allows for other types of\n   objects\
    \ to be defined as data sources for RMON and/or SMON data.\n   Three forms of\
    \ dataSources are described:\n      ifIndex.<I>\n         Traditional RMON dataSources.\
    \ Called 'port-based' for\n         ifType.<I> not equal to 'propVirtual(53)'.\
    \ <I> is the ifIndex\n         value (see [22]).\n      smonVlanDataSource.<V>\n\
    \         A dataSource of this form refers to a 'Packet-based VLAN' and\n    \
    \     is called a 'VLAN-based' dataSource. <V> is the VLAN ID as\n         defined\
    \ by the IEEE 802.1Q standard [19]. The value is between\n         1 and 4094\
    \ inclusive, and it represents an 802.1Q VLAN-ID with\n         global scope within\
    \ a given bridged domain, as defined by [19].\n      entPhysicalEntry.<N>\n  \
    \       A dataSource of this form refers to a physical entity within\n       \
    \  the agent and is called an 'entity-based' dataSource. <N> is\n         the\
    \ value of the entPhysicalIndex in the entPhysicalTable (see\n         [18]).\n\
    \   In addition to these new dataSource types, SMON introduces a new\n   group\
    \ called dataSourceCapsTable to aid an NMS in discovering\n   dataSource identity\
    \ and attributes.\n   The extended data source mechanism supported by the SMON\
    \ MIB allows\n   for the use of external collection points, similar to the one\
    \ defined\n   and supported by the RMON and RMON 2 MIBs, as well as internal\n\
    \   collection points (e.g. propVirtual ifTable entry, entPhysicalEntry).\n  \
    \ The latter reflects either data sources which MAY be the result of\n   aggregation\
    \ (e.g. switch-wide) or internal channels of physical\n   entities, which have\
    \ the capability of being monitored by an SMON\n   probe.\n"
- title: 2.3.2 Copy Port
  contents:
  - "2.3.2 Copy Port\n   In order to make the switching devices support RMON statistics,\
    \ many\n   vendors have implemented a port copy feature, allowing traffic to be\n\
    \   replicated from switch port to switch port. Several levels of\n   configuration\
    \ are possible:\n      1) 1 source port to 1 destination port\n      2) N source\
    \ ports to 1 destination port\n      3) N source ports to M destination ports\n\
    \   The SMON standard presents a standard MIB interface which allows for\n   the\
    \ control of this function.\n   Note that this function can apply to devices that\
    \ have no other SMON\n   or RMON functionality than  copy port. The agent of such\
    \ a device\n   would support only the portCopyCaps and the portCopyConfig MIB\n\
    \   groups, out of the whole SMON MIB.  Switch vendors are encouraged to\n   implement\
    \ this subset of the SMON MIB, as it would allow for standard\n   port copy configuration\
    \ from the same NMS application that does RMON\n   or SMON.\n   Port copy may\
    \ cause congestion problems on the SMON device. This\n   situation is more likely\
    \ occur when copying from a port of higher\n   speed to a port of lower speed\
    \ or copy from multiple port to a single\n   port.\n   Particular implementations\
    \ MAY chose to build protection mechanisms\n   that would prevent creation of\
    \ new port copy links when the capacity\n   of the destination port is exceeded.\
    \ The MIB allows for\n   implementations to (if supported) instrument a destination\
    \ drop count\n   on port copy to provide NMS applications a sense of the quality\
    \ of\n   data presented at the destination port.\n"
- title: 2.3.3 VLAN Monitoring
  contents:
  - "2.3.3 VLAN Monitoring\n   VLAN monitoring can be accomplished by using a VLAN-based\
    \ dataSource\n   and/or by configuring smonVlanIdStats and/or smonPrioStats\n\
    \   collections.  These functions allow VLAN-ID or user priority\n   distributions\
    \ per dataSource. VLAN monitoring provides a high-level\n   view of total VLAN\
    \ usages and relative non-unicast traffic usage as\n   well as a profile of VLAN\
    \ priority as defined in the 3-bit\n   user_priority field.\n   NOTE: priority\
    \ statistics reflect what was parsed from the packet,\n   not what priority, if\
    \ any, was necessarily granted by the switch.\n"
- title: 2.4  Relationship to Other MIBs
  contents:
  - '2.4  Relationship to Other MIBs

    '
- title: 2.4.1 The RMON and RMON 2 MIBs
  contents:
  - "2.4.1 The RMON and RMON 2 MIBs\n   The Remote Monitoring MIB (RMON) [17] provides\
    \ several management\n   functions that MAY be directly or indirectly applicable\
    \ to switched\n   networks.\n   The port copy mechanisms defined by the SMON MIB\
    \ allow for the\n   destination ports to become a data source for any RMON statistics.\n\
    \   However, an NMS application SHOULD check whether it is in the device\n   capability\
    \ (portCopyCap) to filter errors from a source to a\n   destination port and whether\
    \ this capability is enabled, in order to\n   provide a correct interpretation\
    \ of the copied port traffic.\n   RMON host and matrix group statistics entries\
    \ MAY be aggregated by\n   use of the extended dataSource capability defined in\
    \ SMON. RMON 2\n   groups are similarly extended through the use of SMON's dataSource\n\
    \   definition.\n   RMON also defines a simple thresholding monitoring mechanism,\
    \ event-\n   logging and event-notification for any MIB instance; SMON utilizes\n\
    \   the alarms and events groups from RMON without modification.  These\n   groups\
    \ SHOULD be implemented on SMON devices if a simple thresholding\n   mechanism\
    \ is desired.\n   The RMON 2 usrHistory group (user-defined history collection)\
    \ SHOULD\n   be implemented by an SMON device if a history collection mechanism\
    \ is\n   desired for smonStats entries.\n"
- title: 2.4.2 The Interfaces Group MIB
  contents:
  - "2.4.2 The Interfaces Group MIB\n   The SMON MIB utilizes the propVirtual(53)\
    \ ifType defined in the\n   Interfaces Group MIB [22] to provide SMON and RMON\
    \ with new\n   dataSources such as VLANs and internal monitoring points. NMS\n\
    \   applications SHOULD consult the SMON dataSource capabilities group\n   (dataSourceCap)\
    \ for a description of these virtual interfaces.\n"
- title: 2.4.3 The Entity MIB
  contents:
  - "2.4.3 The Entity MIB\n   The SMON MIB does not mandate Entity MIB [18] support,\
    \ but allows for\n   physical entities, as defined by this MIB to be defined as\
    \ SMON data\n   sources. For such cases, the support for the entPhysicalTable\
    \ is\n   required.\n"
- title: 2.4.4 The Bridge MIB
  contents:
  - "2.4.4 The Bridge MIB\n   One of the important indicators for measuring the effectiveness\
    \ of a\n   switching device is the ratio between the number of forwarded frames\n\
    \   and the number of dropped frames at the switch port.\n   It is out of the\
    \ scope of this MIB to provide instrumentation\n   information relative to switching\
    \ devices. However, such indication\n   may be part of other MIB modules.\n  \
    \ For instance the Bridge MIB [23] provides such MIB objects, for the\n   802.1\
    \ bridges (dot1dTpPortInFrames, dot1dTpPortInDiscards) and\n   switches managed\
    \ according to the 802.1 bridge model MAY provide this\n   information.\n"
- title: 2.5 Relationship with IEEE 802.1 Standards
  contents:
  - "2.5 Relationship with IEEE 802.1 Standards\n   The SMON MIB provides simple statistics\
    \ per VLAN and priority levels.\n   Those two categories of statistics are important\
    \ to managers of\n   switched networks.  Interoperability for those features is\
    \ ensured by\n   the use of the IEEE 802.1 p/Q standards ([19], [20]) defined\
    \ by the\n   IEEE 802.1 WG. Interoperability from the SMON MIB point of view is\n\
    \   ensured by referencing the IEEE definition of VLANs and priority\n   levels\
    \ for the SMON statistics.\n"
- title: 3. SMON Groups
  contents:
  - '3. SMON Groups

    '
- title: 3.1 SMON ProbeCapabilities
  contents:
  - "3.1 SMON ProbeCapabilities\n   The SMON probeCapabilities BITS object covers\
    \ the following four\n   capabilities.\n      - smonVlanStats(0)\n        The\
    \ probe supports the smonVlanStats object group.\n      - smonPrioStats(1)\n \
    \       The probe supports the smonPrioStats object group.\n      - dataSource(2)\n\
    \        The probe supports the dataSourceCaps object group.\n      - portCopy(4)\n\
    \        The probe supports the portCopyConfig object group.\n"
- title: 3.2 smonVlanStats
  contents:
  - "3.2 smonVlanStats\n   The smonVlanStats MIB group includes the control and statistics\n\
    \   objects related to 802.1Q VLANs. Specific statistics per 802.1Q\n   virtual\
    \ LAN are supported. The group provides a high level view of\n   total VLAN usage,\
    \ and relative non-unicast traffic usage.\n   It is an implementation-specific\
    \ matter as to how the agent\n   determines the proper default-VLAN for untagged\
    \ or priority-tagged\n   frames.\n"
- title: 3.3 smonPrioStats
  contents:
  - "3.3 smonPrioStats\n   The smonPrioStatsTable provides a distribution based on\
    \ the\n   user_priority field in the VLAN header.\n   Note that this table merely\
    \ reports priority as encoded in VLAN\n   headers, not the priority (if any) given\
    \ the frame for actual\n   switching purposes.\n"
- title: 3.4 dataSourceCaps
  contents:
  - "3.4 dataSourceCaps\n   The dataSourceCaps MIB group identifies all supported\
    \ data sources on\n   an SMON device. An NMS MAY use this table to discover the\
    \ RMON and\n   Copy Port attributes of each data source.\n   Upon restart of the\
    \ agent, the dataSourceTable, ifTable and\n   entPhysicalTable are initialized\
    \ for the available data sources. The\n   agent MAY modify these tables as data\
    \ sources become known or are\n   removed (e.g. hot swap of interfaces, chassis\
    \ cards or the discovery\n   of VLAN usage). It is understood that dataSources\
    \ representing VLANs\n   may not always be instantiated immediately upon restart,\
    \ but rather\n   as VLAN usage is detected by the agent.  The agent SHOULD attempt\
    \ to\n   create dataSource and interface entries for all dataSources as soon\n\
    \   as possible.\n   For each dataSourceCapsEntry representing a VLAN or entPhysicalEntry,\n\
    \   the agent MUST create an associated ifEntry with a ifType value of\n   associated\
    \ dataSourceCapsIfIndex object.\n   The rationale of the above derives from the\
    \ fact that according to\n   [16] and [17] an RMON dataSource MUST be associated\
    \ with an ifEntry.\n   Specifically, the dataSourceCapsTable allows for an agent\
    \ to map\n   Entity MIB physical entities (e.g., switch backplanes) and entire\n\
    \   VLANs to ifEntries with ifType \"propVirtual(53)\". This ifEntry values\n\
    \   will be used as the actual values in RMON control table dataSource\n   objects.\
    \  This allows for physical entities and VLANs to be treated\n   as RMON data\
    \ sources, and RMON functions to be applied to this type\n   of data sources.\n"
- title: 3.5 portCopyConfig
  contents:
  - "3.5 portCopyConfig\n   The portCopyConfig MIB group includes the objects defined\
    \ for the\n   control of the port copy functionality in a device.\n   The standard\
    \ does not place a limit on the mode in which this copy\n   function may be used:\n\
    \   Mode 1 --  1:1 Copy\n      Single dataSource copied to a single destination\
    \ dataSource.\n      Agent MAY limit configuration based on ifTypes, ifSpeeds,\
    \ half-\n      duplex/full-duplex, or agent resources.  In this mode the single\n\
    \      instance of the portCopyDestDropEvents object refers to dropped\n     \
    \ frames on the portCopyDest interface.\n   Mode 2 --  N:1 Copy\n      Multiple\
    \ dataSources copied to a single destination dataSource.\n      Agent MAY limit\
    \ configuration based on ifTypes, ifSpeeds, half-\n      duplex/full-duplex, portCopyDest\
    \ over-subscription, or agent\n      resources.  In this mode all N instances\
    \ of the\n      portCopyDestDropEvents object SHOULD contain the same value, and\n\
    \      refer to dropped frames on the portCopyDest interface.\n   Mode 3 --  N:M\
    \ Copy\n      Multiple dataSources copied to multiple destination dataSources.\n\
    \      Agent MAY limit configuration based on ifTypes, ifSpeeds, half-\n     \
    \ duplex/full-duplex, portCopyDest over-subscription, or agent\n      resources.\
    \  Since portCopyDestDropEvents is kept per destination\n      port, all instances\
    \ of the portCopyDestDropEvents object\n      associated with (indexed by) a given\
    \ portCopyDest SHOULD have the\n      same value (i.e. replicated or aliased for\
    \ each instance\n      associated with a given portCopyDest).\n   The rows do\
    \ not have an OwnerString, since multiple rows MAY be part\n   of the same portCopy\
    \ operation. The agent is expected to activate or\n   deactivate entries one at\
    \ a time, based on the rowStatus for the\n   given row.  This can lead to unpredictable\
    \ results in Modes 2 and 3\n   in applications utilizing the portCopy target traffic,\
    \ if multiple\n   PDUs are used to fully configure the operation.  It is RECOMMENDED\n\
    \   that an entire portCopy operation be configured in one SetRequest PDU\n  \
    \ if possible.\n   The portCopyDest object MAY NOT reference an interface associated\n\
    \   with a packet-based VLAN (smonVlanDataSource.<V>), but this\n   dataSource\
    \ type MAY be used as a portCopySource.\n"
- title: 4.  Control of Remote Network Monitoring Devices
  contents:
  - "4.  Control of Remote Network Monitoring Devices\n   Due to the complex nature\
    \ of the available functions in these\n   devices, the functions often need user\
    \ configuration.  In many cases,\n   the function requires parameters to be set\
    \ up for a data collection\n   operation.  The operation can proceed only after\
    \ these parameters are\n   fully set up.\n   Many functional groups in this MIB\
    \ have one or more tables in which\n   to set up control parameters, and one or\
    \ more data tables in which to\n   place the results of the operation.  The control\
    \ tables are typically\n   read/write in nature, while the data tables are typically\
    \ read-only.\n   Because the parameters in the control table often describe resulting\n\
    \   data in the data table, many of the parameters can be modified only\n   when\
    \ the control entry is not active.  Thus, the method for modifying\n   these parameters\
    \ is to de-activate the entry, perform the SNMP Set\n   operations to modify the\
    \ entry, and then re-activate the entry.\n   Deleting the control entry causes\
    \ the deletion of any associated data\n   entries, which also gives a convenient\
    \ method for reclaiming the\n   resources used by the associated data.\n   Some\
    \ objects in this MIB provide a mechanism to execute an action on\n   the remote\
    \ monitoring device.  These objects MAY execute an action as\n   a result of a\
    \ change in the state of the object.  For those objects\n   in this MIB, a request\
    \ to set an object to the same value as it\n   currently holds would thus cause\
    \ no action to occur.\n   To facilitate control by multiple managers, resources\
    \ have to be\n   shared among the managers.  These resources are typically the\
    \ memory\n   and computation resources that a function requires.\n   The control\
    \ mechanisms defined and used in this MIB are the same as\n   those defined in\
    \ the RMON MIB [17], for control functionality and\n   interaction with multiple\
    \ managers.\n"
- title: 5. Definitions
  contents:
  - "5. Definitions\n   SMON-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n        MODULE-IDENTITY,\
    \ OBJECT-TYPE, Counter32,\n        Integer32, Counter64\n                FROM\
    \ SNMPv2-SMI\n        RowStatus, TEXTUAL-CONVENTION\n                FROM SNMPv2-TC\n\
    \        rmon, OwnerString\n                FROM RMON-MIB\n        LastCreateTime,\
    \ DataSource, rmonConformance, probeConfig\n                FROM RMON2-MIB\n \
    \       InterfaceIndex\n                FROM IF-MIB\n        MODULE-COMPLIANCE,\
    \ OBJECT-GROUP\n                FROM SNMPv2-CONF;\n   switchRMON MODULE-IDENTITY\n\
    \        LAST-UPDATED \"9812160000Z\"\n        ORGANIZATION \"IETF RMON MIB Working\
    \ Group\"\n        CONTACT-INFO\n        \"IETF RMONMIB WG Mailing list: rmonmib@cisco.com\n\
    \                Rich Waterman\n                Allot Networks Inc.\n        \
    \        Tel:  +1-408-559-0253\n                Email: rich@allot.com\n      \
    \          Bill Lahaye\n                Xylan Corp.\n                Tel: +1-800-995-2612\n\
    \                Email:  lahaye@ctron.com\n                Dan Romascanu\n   \
    \             Lucent Technologies\n                Tel:  +972-3-645-8414\n   \
    \             Email: dromasca@lucent.com\n                Steven Waldbusser\n\
    \                International Network Services (INS)\n                Tel: +1-650-318-1251\n\
    \                Email: waldbusser@ins.com\"\n        DESCRIPTION\n          \
    \      \"The MIB module for managing remote monitoring device\n              \
    \   implementations for Switched Networks\"\n         -- revision history\n  \
    \      REVISION    \"9812160000Z\"     -- 16 Dec 1998 midemight\n        DESCRIPTION\
    \ \"Initial Version, published as RFC 2613.\"\n        ::= { rmon 22 }\n   smonMIBObjects\
    \ OBJECT IDENTIFIER ::= { switchRMON 1 }\n   dataSourceCaps          OBJECT IDENTIFIER\
    \ ::= {smonMIBObjects 1}\n   smonStats               OBJECT IDENTIFIER ::= {smonMIBObjects\
    \ 2}\n   portCopyConfig          OBJECT IDENTIFIER ::= {smonMIBObjects 3}\n  \
    \ smonRegistrationPoints  OBJECT IDENTIFIER ::= {smonMIBObjects 4}\n   -- Textual\
    \ Conventions\n   --\n   SmonDataSource ::= TEXTUAL-CONVENTION\n    STATUS   \
    \     current\n    DESCRIPTION\n        \"Identifies the source of the data that\
    \ the associated function\n         is configured to analyze. This Textual Convention\n\
    \         extends the DataSource Textual Convention defined by RMON 2\n      \
    \   to the following data source types:\n         - ifIndex.<I>\n         DataSources\
    \ of this traditional form are called 'port-based',\n         but only if ifType.<I>\
    \ is not equal to 'propVirtual(53)'.\n         - smonVlanDataSource.<V>\n    \
    \     A dataSource of this form refers to a 'Packet-based VLAN'\n         and\
    \ is called a 'VLAN-based' dataSource. <V> is the VLAN\n         ID as defined\
    \ by the IEEE 802.1Q standard [19]. The\n         value is between 1 and 4094\
    \ inclusive, and it represents\n         an 802.1Q VLAN-ID with global scope within\
    \ a given\n         bridged domain, as defined by [19].\n        - entPhysicalEntry.<N>\n\
    \         A dataSource of this form refers to a physical entity within\n     \
    \    the agent (e.g. entPhysicalClass = backplane(4)) and is called\n        \
    \ an 'entity-based' dataSource.\"\n    SYNTAX      OBJECT IDENTIFIER\n   -- The\
    \ smonCapabilities object describes SMON agent capabilities.\n   smonCapabilities\
    \ OBJECT-TYPE\n    SYNTAX BITS {\n      smonVlanStats(0),\n      smonPrioStats(1),\n\
    \      dataSource(2),\n      smonUnusedBit(3),\n      portCopy(4)\n      }\n \
    \   MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n        \"An indication\
    \ of the SMON MIB groups supported\n         by this agent.\"\n    ::= { probeConfig\
    \  15 }\n   -- dataSourceCaps MIB group - defines SMON data source and port\n\
    \   -- copy capabilities for devices supporting SMON.\n   -- A NMS application\
    \ will check this MIB group and retrieve\n   -- information about the SMON capabilities\
    \ of the device before\n   -- applying SMON control operations to the device.\n\
    \   -- dataSourceCapsTable: defines capabilities of RMON data sources\n   dataSourceCapsTable\
    \ OBJECT-TYPE\n    SYNTAX      SEQUENCE OF DataSourceCapsEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"This table\
    \ describes RMON data sources and port copy\n        capabilities. An NMS MAY\
    \ use this table to discover the\n        identity and attributes of the data\
    \ sources on a given agent\n        implementation. Similar to the probeCapabilities\
    \ object,\n        actual row-creation operations will succeed or fail based on\n\
    \        the resources available and parameter values used in each\n        row-creation\
    \ operation.\n        Upon restart of the RMON agent, the dataSourceTable, ifTable,\n\
    \        and perhaps entPhysicalTable are initialized for the available\n    \
    \    dataSources.\n        For each dataSourceCapsEntry representing a VLAN or\n\
    \        entPhysicalEntry the agent MUST create an associated ifEntry\n      \
    \  with a ifType value of 'propVirtual(53)'. This ifEntry will be\n        used\
    \ as the actual value in RMON control table dataSource\n        objects. The assigned\
    \ ifIndex value is copied into the\n        associated dataSourceCapsIfIndex object.\n\
    \        It is understood that dataSources representing VLANs may not\n      \
    \  always be instantiated immediately upon restart, but rather as\n        VLAN\
    \ usage is detected by the agent. The agent SHOULD attempt\n        to create\
    \ dataSource and interface entries for all dataSources\n        as soon as possible.\"\
    \n   ::= { dataSourceCaps 1 }\n   dataSourceCapsEntry  OBJECT-TYPE\n    SYNTAX\
    \      DataSourceCapsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n\
    \    DESCRIPTION\n        \"Entries per data source containing descriptions of\
    \ data\n         source and port copy capabilities. This table is populated by\n\
    \         the SMON agent with one entry for each supported data\n         source.\"\
    \n   INDEX { IMPLIED dataSourceCapsObject }\n   ::= { dataSourceCapsTable 1 }\n\
    \   DataSourceCapsEntry ::= SEQUENCE {\n        dataSourceCapsObject\n       \
    \         SmonDataSource,\n        dataSourceRmonCaps\n                BITS,\n\
    \        dataSourceCopyCaps\n                BITS,\n        dataSourceCapsIfIndex\n\
    \                InterfaceIndex\n        }\n   dataSourceCapsObject OBJECT-TYPE\n\
    \    SYNTAX      SmonDataSource\n    MAX-ACCESS  not-accessible\n    STATUS  \
    \    current\n    DESCRIPTION\n        \"Defines an object that can be a SMON\
    \ data source or a\n          source or a destination for a port copy operation.\"\
    \n    ::= { dataSourceCapsEntry 1  }\n   dataSourceRmonCaps OBJECT-TYPE\n    SYNTAX\
    \ BITS {\n           countErrFrames(0),\n           countAllGoodFrames(1),\n \
    \          countAnyRmonTables(2),\n           babyGiantsCountAsGood(3)\n     \
    \      }\n    MAX-ACCESS read-only\n    STATUS current\n    DESCRIPTION\n    \
    \    \" General attributes of the specified dataSource. Note that\n        these\
    \ are static attributes, which SHOULD NOT be adjusted\n        because of current\
    \ resources or configuration.\n      - countErrFrames(0)\n          The agent\
    \ sets this bit for the dataSource if errored frames\n          received on this\
    \ dataSource can actually be monitored by the\n          agent The agent clears\
    \ this bit if any errored frames are\n          not visible to the RMON data collector.\n\
    \      - countAllGoodFrames(1)\n          The agent sets this bit for the dataSource\
    \ if all good\n          frames received on this dataSource can actually be monitored\n\
    \          by the agent. The agent clears this bit if any good frames\n      \
    \    are not visible for RMON collection, e.g., the dataSource is\n          a\
    \ non-promiscuous interface or an internal switch interface\n          which may\
    \ not receive frames which were switched in hardware\n          or dropped by\
    \ the bridge forwarding function.\n      - countAnyRmonTables(2)\n          The\
    \ agent sets this bit if this dataSource can actually be\n          used in any\
    \ of the implemented RMON tables, resources\n          notwithstanding. The agent\
    \ clears this bit if this\n          dataSourceCapsEntry is present simply to\
    \ identify a\n          dataSource that may only be used as portCopySource and/or\
    \ a\n          portCopyDest, but not the source of an actual RMON data\n     \
    \     collection.\n      - babyGiantsCountAsGood(3)\n          The agent sets\
    \ this bit if it can distinguish, for counting\n          purposes, between true\
    \ giant frames and frames that exceed\n          Ethernet maximum frame size 1518\
    \ due to VLAN tagging ('baby\n          giants'). Specifically, this BIT means\
    \ that frames up to\n          1522 octets are counted as good.\n          Agents\
    \ not capable of detecting 'baby giants' will clear\n          this bit and will\
    \ view all frames less than or equal to 1518\n          octets as 'good frames'\
    \ and all frames larger than 1518\n          octets as 'bad frames' for the purpose\
    \ of counting in the\n          smonVlanIdStats and smonPrioStats tables.\n  \
    \        Agents capable of detecting 'baby giants' SHALL consider\n          them\
    \ as 'good frames' for the purpose of counting in the\n          smonVlanIdStats\
    \ and smonPrioStats tables.\"\n    ::= { dataSourceCapsEntry 2  }\n   dataSourceCopyCaps\
    \ OBJECT-TYPE\n    SYNTAX BITS {\n        copySourcePort(0),\n        copyDestPort(1),\n\
    \        copySrcTxTraffic(2),\n        copySrcRxTraffic(3),\n        countDestDropEvents(4),\n\
    \        copyErrFrames(5),\n        copyUnalteredFrames(6),\n        copyAllGoodFrames(7)\n\
    \        }\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n\
    \        \"PortCopy function capabilities of the specified dataSource.\n    Note\
    \ that these are static capabilities, which SHOULD NOT be\n    adjusted because\
    \ of current resources or configuration.\n      - copySourcePort(0)\n        \
    \  The agent sets this bit if this dataSource is capable of\n          acting\
    \ as a source of a portCopy operation. The agent clears\n          this bit otherwise.\n\
    \      - copyDestPort(1)\n          The agent sets this bit if this dataSource\
    \ is capable of\n          acting as a destination of a portCopy operation. The\
    \ agent\n          clears this bit otherwise.\n     - copySrcTxTraffic(2)\n  \
    \        If the copySourcePort bit is set:\n                The agent sets this\
    \ bit if this dataSource is capable of\n              copying frames transmitted\
    \ out this portCopy source. The\n              agent clears this bit otherwise.\
    \ This function is needed\n              to support full-duplex ports.\n     \
    \      Else:\n               this bit SHOULD be cleared.\n      - copySrcRxTraffic(3)\n\
    \          If the copySourcePort bit is set:\n            The agent sets this\
    \ bit if this dataSource is capable of\n            copying frames received on\
    \ this portCopy source. The agent\n            clears this bit otherwise. This\
    \ function is needed to\n            support full-duplex ports.\n          Else:\n\
    \            this bit SHOULD be cleared.\n      - countDestDropEvents(4)\n   \
    \       If the copyDestPort bit is set:\n              The agent sets this bit\
    \ if it is capable of incrementing\n              portCopyDestDropEvents, when\
    \ this dataSource is the\n              target of a portCopy operation and a frame\
    \ destined to\n              this dataSource is dropped (for RMON counting purposes).\n\
    \          Else:\n              this BIT SHOULD be cleared.\n      - copyErrFrames(5)\n\
    \          If the copySourcePort bit is set:\n              The agent sets this\
    \ bit if it is capable of copying all\n              errored frames from this\
    \ portCopy source-port, for\n              errored frames received on this dataSource.\n\
    \          Else:\n              this BIT SHOULD be cleared.\n      - copyUnalteredFrames(6)\n\
    \          If the copySourcePort bit is set:\n              The agent sets the\
    \ copyUnalteredFrames bit If it is\n              capable of copying all frames\
    \ from this portCopy\n              source-port without alteration in any way;\n\
    \          Else:\n              this bit SHOULD be cleared.\n      - copyAllGoodFrames(7)\n\
    \          If the copySourcePort bit is set:\n              The agent sets this\
    \ bit for the dataSource if all good\n              frames received on this dataSource\
    \ are normally capable\n              of being copied by the agent. The agent\
    \ clears this bit\n              if any good frames are not visible for the RMON\
    \ portCopy\n              operation, e.g., the dataSource is a non-promiscuous\n\
    \              interface or an internal switch interface which may not\n     \
    \         receive frames which were switched in hardware or\n              dropped\
    \ by the bridge forwarding function.\n           Else:\n              this bit\
    \ SHOULD be cleared.\"\n    ::= { dataSourceCapsEntry 3  }\n   dataSourceCapsIfIndex\
    \ OBJECT-TYPE\n   SYNTAX       InterfaceIndex\n   MAX-ACCESS   read-only\n   STATUS\
    \       current\n   DESCRIPTION\n        \"This object contains the ifIndex value\
    \ of the ifEntry\n         associated with this smonDataSource. The agent MUST\
    \ create\n         'propVirtual' ifEntries for each dataSourceCapsEntry of type\n\
    \         VLAN or entPhysicalEntry.\"\n    ::= { dataSourceCapsEntry 4  }\n  \
    \ -- The SMON Statistics MIB Group\n   -- aggregated statistics for IEEE 802.1Q\
    \ VLAN environments.\n   -- VLAN statistics can be gathered by configuring smonVlanIdStats\n\
    \   -- and/or smonPrioStats collections. These functions allow a\n   -- VLAN-ID\
    \ or user priority distributions per dataSource,\n   -- auto-populated by the\
    \ agent in a manner similar to the RMON\n   -- hostTable.\n   -- Only good frames\
    \ are counted in the tables described in this\n   -- section.\n   -- VLAN ID Stats\n\
    \   -- smonVlanStatsControlTable allows configuration of VLAN-ID\n   -- collections.\n\
    \   smonVlanStatsControlTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF SmonVlanStatsControlEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"Controls the setup of VLAN statistics tables.\n         The statistics\
    \ collected represent a distribution based on\n         the IEEE 802.1Q VLAN-ID\
    \ (VID), for each good frame attributed\n         to the data source for the collection.\"\
    \n    ::= { smonStats 1 }\n   smonVlanStatsControlEntry OBJECT-TYPE\n    SYNTAX\
    \      SmonVlanStatsControlEntry\n    MAX-ACCESS  not-accessible\n    STATUS \
    \     current\n    DESCRIPTION\n        \"A conceptual row in the smonVlanStatsControlTable.\"\
    \n    INDEX { smonVlanStatsControlIndex }\n    ::= { smonVlanStatsControlTable\
    \ 1 }\n   SmonVlanStatsControlEntry ::= SEQUENCE {\n    smonVlanStatsControlIndex\
    \                 Integer32,\n    smonVlanStatsControlDataSource           DataSource,\n\
    \    smonVlanStatsControlCreateTime       LastCreateTime,\n    smonVlanStatsControlOwner\
    \               OwnerString,\n    smonVlanStatsControlStatus                RowStatus\n\
    \   }\n   smonVlanStatsControlIndex OBJECT-TYPE\n    SYNTAX      Integer32 (1..65535)\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A unique arbitrary index for this smonVlanStatsControlEntry.\"\n    ::=\
    \ { smonVlanStatsControlEntry 1 }\n   smonVlanStatsControlDataSource OBJECT-TYPE\n\
    \    SYNTAX      DataSource\n    MAX-ACCESS  read-create\n    STATUS      current\n\
    \    DESCRIPTION\n        \"The source of data for this set of VLAN statistics.\n\
    \        This object MAY NOT be modified if the associated\n        smonVlanStatsControlStatus\
    \ object is equal to active(1).\"\n    ::= { smonVlanStatsControlEntry 2 }\n \
    \  smonVlanStatsControlCreateTime OBJECT-TYPE\n    SYNTAX     LastCreateTime\n\
    \    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"\
    The value of sysUpTime when this control entry was last\n        activated. This\
    \ object allows to a management station to\n        detect deletion and recreation\
    \ cycles between polls.\"\n    ::= { smonVlanStatsControlEntry 3 }\n   smonVlanStatsControlOwner\
    \ OBJECT-TYPE\n    SYNTAX      OwnerString\n    MAX-ACCESS  read-create\n    STATUS\
    \      current\n    DESCRIPTION\n        \"Administratively assigned named of\
    \ the owner of this entry.\n        It usually defines the entity that created\
    \ this entry and is\n        therefore using the resources assigned to it, though\
    \ there is\n        no enforcement mechanism, nor assurance that rows created\
    \ are\n        ever used.\"\n    ::= { smonVlanStatsControlEntry 4 }\n   smonVlanStatsControlStatus\
    \ OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS\
    \      current\n    DESCRIPTION\n        \"The status of this row.\n        An\
    \ entry MAY NOT exist in the active state unless all\n        objects in the entry\
    \ have an appropriate value.\n        If this object is not equal to active(1),\
    \ all associated\n        entries in the smonVlanIdStatsTable SHALL be deleted.\"\
    \n    ::= { smonVlanStatsControlEntry 5 }\n   -- The VLAN Statistics Table\n \
    \  smonVlanIdStatsTable  OBJECT-TYPE\n    SYNTAX     SEQUENCE OF SmonVlanIdStatsEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \    \"Contains the VLAN statistics data.\n         The statistics collected represent\
    \ a distribution based\n         on the IEEE 802.1Q VLAN-ID (VID), for each good\
    \ frame\n         attributed to the data source for the collection.\n        \
    \ This function applies the same rules for attributing frames\n         to VLAN-based\
    \ collections. RMON VLAN statistics are collected\n         after the Ingress\
    \ Rules defined in section 3.13 of the VLAN\n         Specification [20] are applied.\n\
    \         It is possible that entries in this table will be\n         garbage-collected,\
    \ based on agent resources, and VLAN\n         configuration. Agents are encouraged\
    \ to support all 4094\n         index values and not garbage collect this table.\"\
    \n   ::= { smonStats 2 }\n   smonVlanIdStatsEntry  OBJECT-TYPE\n    SYNTAX   \
    \  SmonVlanIdStatsEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n\
    \    DESCRIPTION\n        \"A conceptual row in smonVlanIdStatsTable.\"\n    INDEX\
    \ { smonVlanStatsControlIndex, smonVlanIdStatsId }\n    ::= { smonVlanIdStatsTable\
    \ 1 }\n   SmonVlanIdStatsEntry ::= SEQUENCE {\n    smonVlanIdStatsId         \
    \                    Integer32,\n    smonVlanIdStatsTotalPkts                \
    \      Counter32,\n    smonVlanIdStatsTotalOverflowPkts              Counter32,\n\
    \    smonVlanIdStatsTotalHCPkts                    Counter64,\n    smonVlanIdStatsTotalOctets\
    \                    Counter32,\n    smonVlanIdStatsTotalOverflowOctets      \
    \      Counter32,\n    smonVlanIdStatsTotalHCOctets                  Counter64,\n\
    \    smonVlanIdStatsNUcastPkts                     Counter32,\n    smonVlanIdStatsNUcastOverflowPkts\
    \             Counter32,\n    smonVlanIdStatsNUcastHCPkts                   Counter64,\n\
    \    smonVlanIdStatsNUcastOctets                   Counter32,\n    smonVlanIdStatsNUcastOverflowOctets\
    \           Counter32,\n    smonVlanIdStatsNUcastHCOctets                 Counter64,\n\
    \    smonVlanIdStatsCreateTime                     LastCreateTime\n   }\n   smonVlanIdStatsId\
    \ OBJECT-TYPE\n    SYNTAX     Integer32 (1..4094)\n    MAX-ACCESS not-accessible\n\
    \    STATUS     current\n    DESCRIPTION\n        \"The unique identifier of the\
    \ VLAN monitored for\n         this specific statistics collection.\n        Tagged\
    \ packets match the VID for the range between 1 and 4094.\n        An external\
    \ RMON probe MAY detect VID=0 on an Inter Switch\n        Link, in which case\
    \ the packet belongs to a VLAN determined by\n        the PVID of the ingress\
    \ port. The VLAN to which such a packet\n        belongs can be determined only\
    \ by a RMON probe internal to the\n        switch.\"\n    REFERENCE\n        \"\
    Draft Standard for Virtual Bridged Local Area Networks,\n          P802.1Q/D10,\
    \ chapter 3.13\"\n    ::= { smonVlanIdStatsEntry 1 }\n   smonVlanIdStatsTotalPkts\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"packets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number\
    \ of packets counted on this VLAN.\"\n    ::= { smonVlanIdStatsEntry 2 }\n   smonVlanIdStatsTotalOverflowPkts\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"packets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of\
    \ times the associated smonVlanIdStatsTotalPkts\n         counter has overflowed.\"\
    \n    ::= { smonVlanIdStatsEntry 3 }\n   smonVlanIdStatsTotalHCPkts OBJECT-TYPE\n\
    \    SYNTAX     Counter64\n    UNITS \"packets\"\n    MAX-ACCESS read-only\n \
    \   STATUS     current\n    DESCRIPTION\n        \"The total number of packets\
    \ counted on this VLAN.\"\n    ::= { smonVlanIdStatsEntry 4 }\n   smonVlanIdStatsTotalOctets\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"octets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number\
    \ of octets counted on this VLAN.\"\n    ::= { smonVlanIdStatsEntry 5 }\n   smonVlanIdStatsTotalOverflowOctets\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"octets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of\
    \ times the associated smonVlanIdStatsTotalOctets\n         counter has overflowed.\"\
    \n    ::= { smonVlanIdStatsEntry 6 }\n   smonVlanIdStatsTotalHCOctets OBJECT-TYPE\n\
    \    SYNTAX     Counter64\n    UNITS \"octets\"\n    MAX-ACCESS read-only\n  \
    \  STATUS     current\n    DESCRIPTION\n        \"The total number of octets counted\
    \ on this VLAN.\"\n   ::= { smonVlanIdStatsEntry 7 }\n   smonVlanIdStatsNUcastPkts\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"packets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number\
    \ of non-unicast packets counted on this\n         VLAN.\"\n    ::= { smonVlanIdStatsEntry\
    \ 8 }\n   smonVlanIdStatsNUcastOverflowPkts OBJECT-TYPE\n    SYNTAX     Counter32\n\
    \    UNITS \"packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n   \
    \ DESCRIPTION\n        \"The number of times the associated smonVlanIdStatsNUcastPkts\n\
    \         counter has overflowed.\"\n    ::= { smonVlanIdStatsEntry 9 }\n   smonVlanIdStatsNUcastHCPkts\
    \ OBJECT-TYPE\n    SYNTAX     Counter64\n    UNITS \"packets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number\
    \ of non-unicast packets counted on\n         this VLAN.\"\n    ::= { smonVlanIdStatsEntry\
    \ 10 }\n   smonVlanIdStatsNUcastOctets OBJECT-TYPE\n    SYNTAX     Counter32\n\
    \    UNITS \"octets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n\
    \        \"The total number of non-unicast octets counted on\n         this VLAN.\"\
    \n    ::= { smonVlanIdStatsEntry 11 }\n   smonVlanIdStatsNUcastOverflowOctets\
    \ OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS \"octets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The number of\
    \ times the associated\n         smonVlanIdStatsNUcastOctets counter has overflowed.\"\
    \n    ::= { smonVlanIdStatsEntry 12 }\n   smonVlanIdStatsNUcastHCOctets OBJECT-TYPE\n\
    \    SYNTAX     Counter64\n    UNITS \"octets\"\n    MAX-ACCESS read-only\n  \
    \  STATUS     current\n    DESCRIPTION\n        \"The total number of Non-unicast\
    \ octets counted on\n         this VLAN.\"\n    ::= { smonVlanIdStatsEntry 13\
    \ }\n   smonVlanIdStatsCreateTime OBJECT-TYPE\n    SYNTAX     LastCreateTime\n\
    \    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n        \"\
    The value of sysUpTime when this entry was last\n        activated. This object\
    \ allows to a management station to\n        detect deletion and recreation cycles\
    \ between polls.\"\n    ::= { smonVlanIdStatsEntry 14 }\n   -- smonPrioStatsControlTable\n\
    \   smonPrioStatsControlTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF SmonPrioStatsControlEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"Controls the setup of priority statistics tables.\n         The smonPrioStatsControlTable\
    \ allows configuration of\n         collections based on the value of the 3-bit\
    \ user priority\n         field encoded in the Tag Control Information (TCI) field\n\
    \         according to [19],[20].\n         Note that this table merely reports\
    \ priority as encoded in\n         the VLAN headers, not the priority (if any)\
    \ given to the\n         frame for the actual switching purposes.\"\n    ::= {\
    \ smonStats 3 }\n   smonPrioStatsControlEntry OBJECT-TYPE\n    SYNTAX      SmonPrioStatsControlEntry\n\
    \    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n  \
    \      \"A conceptual row in the smonPrioStatsControlTable.\"\n    INDEX { smonPrioStatsControlIndex\
    \ }\n    ::= { smonPrioStatsControlTable 1 }\n   SmonPrioStatsControlEntry ::=\
    \ SEQUENCE {\n    smonPrioStatsControlIndex                 Integer32,\n    smonPrioStatsControlDataSource\
    \           DataSource,\n    smonPrioStatsControlCreateTime       LastCreateTime,\n\
    \    smonPrioStatsControlOwner               OwnerString,\n    smonPrioStatsControlStatus\
    \                RowStatus\n   }\n   smonPrioStatsControlIndex OBJECT-TYPE\n \
    \   SYNTAX      Integer32 (1..65535)\n    MAX-ACCESS  not-accessible\n    STATUS\
    \      current\n    DESCRIPTION\n        \"A unique arbitrary index for this smonPrioStatsControlEntry.\"\
    \n    ::= { smonPrioStatsControlEntry 1 }\n   smonPrioStatsControlDataSource OBJECT-TYPE\n\
    \    SYNTAX      DataSource\n    MAX-ACCESS  read-create\n    STATUS      current\n\
    \    DESCRIPTION\n        \"The source of data for this set of VLAN statistics.\n\
    \        This object MAY NOT be modified if the associated\n        smonPrioStatsControlStatus\
    \ object is equal to active(1).\"\n    ::= { smonPrioStatsControlEntry 2 }\n \
    \  smonPrioStatsControlCreateTime OBJECT-TYPE\n    SYNTAX     LastCreateTime\n\
    \    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n         \"\
    The value of sysUpTime when this entry was created.\n        This object allows\
    \ to a management station to\n        detect deletion and recreation cycles between\
    \ polls.\"\n    ::= { smonPrioStatsControlEntry 3 }\n   smonPrioStatsControlOwner\
    \ OBJECT-TYPE\n    SYNTAX      OwnerString\n    MAX-ACCESS  read-create\n    STATUS\
    \      current\n    DESCRIPTION\n         \"Administratively assigned named of\
    \ the owner of this entry.\n        It usually defines the entity that created\
    \ this entry and is\n        therefore using the resources assigned to it, though\
    \ there is\n        no enforcement mechanism, nor assurance that rows created\
    \ are\n        ever used.\"\n    ::= { smonPrioStatsControlEntry 4 }\n   smonPrioStatsControlStatus\
    \ OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS\
    \      current\n    DESCRIPTION\n        \"The status of this row.\n        An\
    \ entry MAY NOT exist in the active state unless all\n        objects in the entry\
    \ have an appropriate value.\n        If this object is not equal to active(1),\
    \ all associated\n        entries in the smonPrioStatsTable SHALL be deleted.\"\
    \n    ::= { smonPrioStatsControlEntry 5 }\n   -- The Priority Statistics Table\n\
    \   smonPrioStatsTable  OBJECT-TYPE\n    SYNTAX     SEQUENCE OF SmonPrioStatsEntry\n\
    \    MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n    \
    \    \"Contains the priority statistics. The collections are based\n         on\
    \ the value of the 3-bit user priority field encoded in the\n         Tag Control\
    \ Information (TCI) field according to [19], [20].\n         Note that this table\
    \ merely reports priority as encoded in\n         the VLAN headers, not the priority\
    \ (if any) given to the\n         frame for the actual switching purposes.\n \
    \        No garbage collection is designed for this table, as there\n        \
    \ always are at most eight rows per statistical set, and the\n         low memory\
    \ requirements do not justify the implementation of\n         such a mechanism.\"\
    \n    ::= { smonStats 4 }\n   smonPrioStatsEntry  OBJECT-TYPE\n    SYNTAX    \
    \ SmonPrioStatsEntry\n    MAX-ACCESS not-accessible\n    STATUS     current\n\
    \    DESCRIPTION\n        \"A conceptual row in smonPrioStatsTable.\"\n    INDEX\
    \ { smonPrioStatsControlIndex, smonPrioStatsId }\n    ::= { smonPrioStatsTable\
    \ 1 }\n   SmonPrioStatsEntry ::= SEQUENCE {\n    smonPrioStatsId             \
    \          Integer32,\n    smonPrioStatsPkts                     Counter32,\n\
    \    smonPrioStatsOverflowPkts             Counter32,\n    smonPrioStatsHCPkts\
    \                   Counter64,\n    smonPrioStatsOctets                   Counter32,\n\
    \    smonPrioStatsOverflowOctets           Counter32,\n    smonPrioStatsHCOctets\
    \                 Counter64\n   }\n   smonPrioStatsId OBJECT-TYPE\n    SYNTAX\
    \     Integer32 (0..7)\n    MAX-ACCESS not-accessible\n    STATUS     current\n\
    \    DESCRIPTION\n        \"The unique identifier of the priority level monitored\
    \ for\n         this specific statistics collection.\"\n    REFERENCE\n      \
    \  \" Draft Standard for Virtual Bridged Local Area Networks,\n          P802.1Q/D10,\
    \ chapter 4.3.2.1\"\n    ::= { smonPrioStatsEntry 1 }\n   smonPrioStatsPkts OBJECT-TYPE\n\
    \    SYNTAX     Counter32\n    UNITS \"packets\"\n    MAX-ACCESS read-only\n \
    \   STATUS     current\n    DESCRIPTION\n        \"The total number of packets\
    \ counted on\n         this priority level.\"\n    ::= { smonPrioStatsEntry 2\
    \ }\n   smonPrioStatsOverflowPkts OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS\
    \ \"packets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n\
    \        \"The number of times the associated smonPrioStatsPkts\n         counter\
    \ has overflowed.\"\n    ::= { smonPrioStatsEntry 3 }\n   smonPrioStatsHCPkts\
    \ OBJECT-TYPE\n    SYNTAX     Counter64\n    UNITS \"packets\"\n    MAX-ACCESS\
    \ read-only\n    STATUS     current\n    DESCRIPTION\n        \"The total number\
    \ of packets counted on\n         this priority level.\"\n    ::= { smonPrioStatsEntry\
    \ 4 }\n   smonPrioStatsOctets OBJECT-TYPE\n    SYNTAX     Counter32\n    UNITS\
    \ \"octets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n\
    \        \"The total number of octets counted on\n         this priority level.\"\
    \n    ::= { smonPrioStatsEntry 5 }\n   smonPrioStatsOverflowOctets OBJECT-TYPE\n\
    \    SYNTAX     Counter32\n    UNITS \"octets\"\n    MAX-ACCESS read-only\n  \
    \  STATUS     current\n    DESCRIPTION\n        \"The number of times the associated\
    \ smonPrioStatsOctets\n         counter has overflowed.\"\n    ::= { smonPrioStatsEntry\
    \ 6 }\n   smonPrioStatsHCOctets OBJECT-TYPE\n    SYNTAX     Counter64\n    UNITS\
    \ \"octets\"\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n\
    \        \"The total number of octets counted on\n         this priority level.\"\
    \n    ::= { smonPrioStatsEntry 7 }\n   portCopyTable  OBJECT-TYPE\n    SYNTAX\
    \      SEQUENCE OF PortCopyEntry\n    MAX-ACCESS  not-accessible\n    STATUS \
    \     current\n    DESCRIPTION\n        \" Port Copy provides the ability to copy\
    \ all frames from a\n         specified source to specified destination within\
    \ a switch.\n         Source and destinations MUST be ifEntries, as defined by\
    \ [22].\n         One to one, one to many, many to one and many to many source\
    \ to\n         destination relationships may be configured.\n         Applicable\
    \ counters on the destination will increment for all\n         packets transiting\
    \ the port, be it by normal bridging/switching\n         or due to packet copy.\n\
    \         Note that this table manages no RMON data collection by itself,\n  \
    \       and an agent may possibly implement no RMON objects except\n         objects\
    \ related to the port copy operation defined by the\n         portCopyCompliance\
    \ conformance macro. That allows for a switch\n         with no other embedded\
    \ RMON capability to perform port copy\n         operations to a destination port\
    \ at which a different external\n         RMON probe is connected.\n         One\
    \ to one, many to one and one to many source to destination\n         relationships\
    \ may be configured.\n         Each row that exists in this table defines such\
    \ a\n         relationship. By disabling a row in this table the port copy\n \
    \        relationship no longer exists.\n         The number of entries and the\
    \ types of port copies (1-1,\n         many-1, 1-many) are implementation specific\
    \ and could\n         possibly be dynamic due to changing resource availability.\n\
    \         In order to configure a source to destination portCopy\n         relationship,\
    \ both source and destination interfaces MUST be\n         present as an ifEntry\
    \ in the ifTable and their respective\n         ifAdminStatus and ifOperStatus\
    \ values MUST be equal to\n         'up(1)'. If the value of any of those two\
    \ objects changes\n         after the portCopyEntry is activated, portCopyStatus\
    \ will\n         transition to 'notReady(3)'.\n         The capability of an interface\
    \ to be source or destination of\n         a port copy operation is described\
    \ by the 'copySourcePort(0)'\n         and 'copyDestPort(1)' bits in dataSourceCopyCaps.\
    \ Those bits\n         SHOULD be appropriately set by the agent, in order to allow\n\
    \         for a portCopyEntry to be created.\n         Applicable counters on\
    \ the destination will increment for all\n         packets transmitted, be it\
    \ by normal bridging/switching or\n         due to packet copy.\"\n   ::= { portCopyConfig\
    \ 1 }\n   portCopyEntry  OBJECT-TYPE\n    SYNTAX      PortCopyEntry\n    MAX-ACCESS\
    \  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Describes\
    \ a particular port copy entry.\"\n   INDEX { portCopySource, portCopyDest }\n\
    \   ::= { portCopyTable 1 }\n   PortCopyEntry ::= SEQUENCE {\n        portCopySource\n\
    \                InterfaceIndex,\n        portCopyDest\n                InterfaceIndex,\n\
    \        portCopyDestDropEvents\n                Counter32,\n        portCopyDirection\n\
    \                INTEGER,\n        portCopyStatus\n                RowStatus\n\
    \        }\n   portCopySource OBJECT-TYPE\n    SYNTAX       InterfaceIndex\n \
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n \
    \       \"The ifIndex of the source which will have all packets\n         redirected\
    \ to the destination as defined by portCopyDest.\"\n    ::= { portCopyEntry 1\
    \ }\n   portCopyDest OBJECT-TYPE\n    SYNTAX       InterfaceIndex\n    MAX-ACCESS\
    \   not-accessible\n    STATUS       current\n    DESCRIPTION\n        \"Defines\
    \ the ifIndex destination for the copy operation.\"\n    ::= { portCopyEntry 2\
    \ }\n   portCopyDestDropEvents OBJECT-TYPE\n    SYNTAX       Counter32\n    UNITS\
    \ \"events\"\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n\
    \         \"The total number of events in which port copy packets were\n     \
    \    dropped by the switch at the destination port due to lack of\n         resources.\n\
    \         Note that this number is not necessarily the number of\n         packets\
    \ dropped; it is just the number of times this\n         condition has been detected.\n\
    \         A single dropped event counter is maintained for each\n         portCopyDest.\
    \ Thus all instances associated with a given\n         portCopyDest will have\
    \ the same portCopyDestDropEvents\n         value.\"\n     ::= { portCopyEntry\
    \ 3 }\n   portCopyDirection OBJECT-TYPE\n    SYNTAX       INTEGER {\n        copyRxOnly(1),\n\
    \        copyTxOnly(2),\n        copyBoth(3)\n    }\n    MAX-ACCESS   read-create\n\
    \    STATUS       current\n    DESCRIPTION\n        \"This object affects the\
    \ way traffic is copied from a switch\n          source port, for the indicated\
    \ port copy operation.\n         If this object has the value 'copyRxOnly(1)',\
    \ then only\n         traffic received on the indicated source port will be copied\n\
    \         to the indicated destination port.\n         If this object has the\
    \ value 'copyTxOnly(2)', then only\n         traffic transmitted out the indicated\
    \ source port will be\n         copied to the indicated destination port.\n  \
    \       If this object has the value 'copyBoth(3)', then all traffic\n       \
    \  received or transmitted on the indicated source port will be\n         copied\
    \ to the indicated destination port.\n         The creation and deletion of instances\
    \ of this object is\n         controlled by the portCopyRowStatus object. Note\
    \ that there\n         is no guarantee that changes in the value of this object\n\
    \         performed while the associated portCopyRowStatus object is\n       \
    \  equal to active will not cause traffic discontinuities in the\n         packet\
    \ stream.\"\n   DEFVAL { copyBoth }\n   ::= { portCopyEntry 4 }\n   portCopyStatus\
    \ OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS   read-create\n    STATUS\
    \       current\n    DESCRIPTION\n        \"Defines the status of the port copy\
    \ entry.\n         In order to configure a source to destination portCopy\n  \
    \       relationship, both source and destination interfaces MUST be\n       \
    \  present as an ifEntry in the ifTable and their respective\n         ifAdminStatus\
    \ and ifOperStatus values MUST be equal to\n         'up(1)'. If the value of\
    \ any of those two objects changes\n         after the portCopyEntry is activated,\
    \ portCopyStatus will\n         transition to 'notReady(3)'.\n         The capability\
    \ of an interface to be source or destination of\n         a port copy operation\
    \ is described by the 'copySourcePort(0)'\n         and 'copyDestPort(1)' bits\
    \ in dataSourceCopyCaps. Those bits\n         SHOULD be appropriately set by the\
    \ agent, in order to allow\n         for a portCopyEntry to be created.\"\n  \
    \  ::= { portCopyEntry 5 }\n   -- smonRegistrationPoints\n   -- defines a set\
    \ of OIDs for registration purposes of entities\n   -- supported by the SMON MIB.\n\
    \   smonVlanDataSource\n         OBJECT IDENTIFIER ::= { smonRegistrationPoints\
    \ 1}\n   -- Defined for use as an SmonDataSource. A single integer parameter\n\
    \   -- is appended to the end of this OID when actually encountered in\n   --\
    \ the dataSourceCapsTable, which represents a positive, non-zero\n   -- VLAN identifier\
    \ value.\n   -- Conformance Macros\n   smonMIBCompliances      OBJECT IDENTIFIER\
    \ ::= { rmonConformance 3}\n   smonMIBGroups           OBJECT IDENTIFIER ::= {\
    \ rmonConformance 4}\n   smonMIBCompliance       MODULE-COMPLIANCE\n        STATUS\
    \      current\n        DESCRIPTION\n        \"Describes the requirements for\
    \ full conformance with the SMON\n        MIB\"\n        MODULE -- this module\n\
    \        MANDATORY-GROUPS                 {dataSourceCapsGroup,\n            \
    \                              smonVlanStatsGroup,\n                         \
    \                 smonPrioStatsGroup,\n                                      \
    \    portCopyConfigGroup,\n                                          smonInformationGroup}\n\
    \        GROUP         smonHcTo100mbGroup\n        DESCRIPTION\n        \"This\
    \ group of VLAN statistics counter are mandatory only for\n         those network\
    \ interfaces for which the corresponding ifSpeed\n         can be greater than\
    \ 10MB/sec and less than or equal to\n         100MB/sec.\"\n        GROUP   \
    \      smonHc100mbPlusGroup\n        DESCRIPTION\n        \"This group of VLAN\
    \ statistics counters are mandatory only for\n         those network interfaces\
    \ for which the corresponding ifSpeed\n         can be more than 100MB/sec. This\
    \ group of VLAN statistics is\n         also mandatory for smonDataSources of\
    \ type VLAN or\n         entPhysicalEntry.\"\n   ::= { smonMIBCompliances 1 }\n\
    \   smonMIBVlanStatsCompliance        MODULE-COMPLIANCE\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Describes the requirements for conformance with\
    \ the SMON MIB\n         with support for VLAN Statistics. Mandatory for a SMON\
    \ probe\n         in environment where IEEE 802.1Q bridging is implemented.\"\n\
    \        MODULE -- this module\n        MANDATORY-GROUPS                 {dataSourceCapsGroup,\n\
    \                                          smonVlanStatsGroup,\n             \
    \                             smonInformationGroup}\n        GROUP         hcVlanTo100mbGroup\n\
    \        DESCRIPTION\n        \"This group of VLAN statistics counter are mandatory\
    \ only\n         for those network interfaces for which the corresponding\n  \
    \       ifSpeed can be up to and including 100MB/sec.\"\n        GROUP       \
    \  hcVlan100mbPlusGroup\n        DESCRIPTION\n        \"This group of VLAN statistics\
    \ counters are mandatory only for\n         those network interfaces for which\
    \ the corresponding ifSpeed\n         is greater than 100MB/sec. This group of\
    \ VLAN statistics is\n         also mandatory for smonDataSources of type VLAN\
    \ or\n         entPhysicalEntry.\"\n   ::= { smonMIBCompliances 2 }\n   smonMIBPrioStatsCompliance\
    \         MODULE-COMPLIANCE\n        STATUS      current\n        DESCRIPTION\n\
    \        \"Describes the requirements for conformance with the SMON MIB\n    \
    \     with support for priority level Statistics. Mandatory for a\n         SMON\
    \ probe in a environment where IEEE 802.1p\n         priority-switching is implemented.\"\
    \n        MODULE -- this module\n        MANDATORY-GROUPS                 {dataSourceCapsGroup,\n\
    \                                          smonPrioStatsGroup,\n             \
    \                             smonInformationGroup}\n        GROUP         hcPrioTo100mbGroup\n\
    \        DESCRIPTION\n        \"This group of VLAN priority statistics counters\
    \ are mandatory\n         only for those network interfaces for which the corresponding\n\
    \         ifSpeed can be up to and including 100MB/sec.\"\n        GROUP     \
    \    hcPrio100mbPlusGroup\n        DESCRIPTION\n        \"This group is mandatory\
    \ only for those network\n         interfaces for which the corresponding ifSpeed\
    \ is greater\n         than 100MB/sec. This group of VLAN priority\n         statistics\
    \ is also mandatory for smonDataSources of type\n         VLAN or entPhysicalEntry\"\
    \n   ::= { smonMIBCompliances 3 }\n   portCopyCompliance                 MODULE-COMPLIANCE\n\
    \        STATUS      current\n        DESCRIPTION\n        \"Describes the requirements\
    \ for conformance with the port copy\n         functionality defined by the SMON\
    \ MIB\"\n        MODULE  -- this module\n        MANDATORY-GROUPS            \
    \     {dataSourceCapsGroup,\n                                          portCopyConfigGroup,\n\
    \                                          smonInformationGroup}\n         ::=\
    \ { smonMIBCompliances 4}\n   dataSourceCapsGroup     OBJECT-GROUP\n        OBJECTS\
    \          { dataSourceRmonCaps,\n                          dataSourceCopyCaps,\n\
    \                          dataSourceCapsIfIndex}\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Defines the objects that describe the capabilities\
    \ of RMON\n         data sources.\"\n   ::= {smonMIBGroups 1 }\n   smonVlanStatsGroup\
    \      OBJECT-GROUP\n        OBJECTS         { smonVlanStatsControlDataSource,\n\
    \                         smonVlanStatsControlCreateTime,\n                  \
    \       smonVlanStatsControlOwner,\n                         smonVlanStatsControlStatus,\n\
    \                         smonVlanIdStatsTotalPkts,\n                        \
    \ smonVlanIdStatsTotalOctets,\n                         smonVlanIdStatsNUcastPkts,\n\
    \                         smonVlanIdStatsCreateTime}\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Defines the switch monitoring specific statistics\
    \ - per VLAN\n         Id on interfaces of 10MB or less.\"\n   ::= { smonMIBGroups\
    \ 2 }\n   smonPrioStatsGroup      OBJECT-GROUP\n        OBJECTS         { smonPrioStatsControlDataSource,\n\
    \                         smonPrioStatsControlCreateTime,\n                  \
    \       smonPrioStatsControlOwner,\n                         smonPrioStatsControlStatus,\n\
    \                         smonPrioStatsPkts,\n                         smonPrioStatsOctets}\n\
    \        STATUS      current\n        DESCRIPTION\n        \"Defines the switch\
    \ monitoring specific statistics - per VLAN\n         Id on interface.\"\n   ::=\
    \ { smonMIBGroups 3 }\n   smonHcTo100mbGroup        OBJECT-GROUP\n        OBJECTS\
    \         { smonVlanIdStatsTotalOverflowOctets,\n                         smonVlanIdStatsTotalHCOctets,\n\
    \                         smonPrioStatsOverflowOctets,\n                     \
    \    smonPrioStatsHCOctets}\n        STATUS      current\n        DESCRIPTION\n\
    \        \"Defines the additional high capacity statistics needed to be\n    \
    \     kept on interfaces with ifSpeed greater than 10MB/sec and\n         less\
    \ than or equal to 100MB/sec.\"\n   ::= { smonMIBGroups 4 }\n   smonHc100mbPlusGroup\
    \      OBJECT-GROUP\n        OBJECTS         { smonVlanIdStatsTotalOverflowPkts,\n\
    \                         smonVlanIdStatsTotalHCPkts,\n                      \
    \   smonVlanIdStatsTotalOverflowOctets,\n                         smonVlanIdStatsTotalHCOctets,\n\
    \                         smonVlanIdStatsNUcastOverflowPkts,\n               \
    \          smonVlanIdStatsNUcastHCPkts,\n                         smonPrioStatsOverflowPkts,\n\
    \                         smonPrioStatsHCPkts,\n                         smonPrioStatsOverflowOctets,\n\
    \                         smonPrioStatsHCOctets}\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Defines the additional high capacity statistics\
    \ needed to be\n         kept on interfaces with ifSpeed of more than 100MB/sec.\
    \ These\n         statistics MUST also be kept on smonDataSources of type VLAN\n\
    \         or entPhysicalEntry.\"\n   ::= { smonMIBGroups 5 }\n   hcVlanTo100mbGroup\
    \        OBJECT-GROUP\n        OBJECTS         { smonVlanIdStatsTotalOverflowOctets,\n\
    \                         smonVlanIdStatsTotalHCOctets}\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Defines the additional high capacity VLAN statistics\n\
    \         needed to be kept on interfaces with ifSpeed greater than\n        \
    \ 10MB/sec and less than or equal to 100MB/sec.\"\n   ::= { smonMIBGroups 6 }\n\
    \   hcVlan100mbPlusGroup      OBJECT-GROUP\n        OBJECTS         { smonVlanIdStatsTotalOverflowPkts,\n\
    \                         smonVlanIdStatsTotalHCPkts,\n                      \
    \   smonVlanIdStatsTotalOverflowOctets,\n                         smonVlanIdStatsTotalHCOctets,\n\
    \                         smonVlanIdStatsNUcastOverflowPkts,\n               \
    \          smonVlanIdStatsNUcastHCPkts}\n        STATUS      current\n       \
    \ DESCRIPTION\n        \"Defines the additional high capacity VLAN statistics\n\
    \         needed to be kept on interfaces with ifSpeed of more than\n        \
    \ 100MB/sec.  These statistics MUST also be kept on\n         smonDataSources\
    \ of type VLAN or entPhysicalEntry.\"\n   ::= { smonMIBGroups 7 }\n   hcPrioTo100mbGroup\
    \        OBJECT-GROUP\n        OBJECTS         { smonPrioStatsOverflowOctets,\n\
    \                         smonPrioStatsHCOctets }\n        STATUS      current\n\
    \        DESCRIPTION\n        \"Defines the additional high capacity VLAN priority\n\
    \         statistics needed to be kept on interfaces with\n         ifSpeed of\
    \ greater than 10MB/sec and less than or equal\n         to 100MB/sec.\"\n   ::=\
    \ { smonMIBGroups 8 }\n   hcPrio100mbPlusGroup      OBJECT-GROUP\n        OBJECTS\
    \         { smonPrioStatsOverflowPkts,\n                         smonPrioStatsHCPkts,\n\
    \                         smonPrioStatsOverflowOctets,\n                     \
    \    smonPrioStatsHCOctets}\n        STATUS      current\n        DESCRIPTION\n\
    \        \"Defines the additional high capacity VLAN priority\n         statistics\
    \ needed to be kept on interfaces with\n         ifSpeed of greater than 100MB/sec.\
    \ These statistics MUST\n         also be kept on smonDataSources of type VLAN\
    \ or\n         entPhysicalEntry.\"\n   ::= { smonMIBGroups 9 }\n   smonVlanStatsExtGroup\
    \   OBJECT-GROUP\n        OBJECTS         {smonVlanIdStatsNUcastOctets,\n    \
    \                     smonVlanIdStatsNUcastOverflowOctets,\n                 \
    \        smonVlanIdStatsNUcastHCOctets}\n        STATUS      current\n       \
    \ DESCRIPTION\n        \"Defines the switch monitoring specific statistics for\
    \ systems\n         capable of counting non-unicast octets for a given dataSource\n\
    \         (as described in the dataSourceRmonCaps object).\"\n   ::= { smonMIBGroups\
    \ 10 }\n   smonInformationGroup    OBJECT-GROUP\n        OBJECTS         { smonCapabilities\
    \ }\n        STATUS      current\n        DESCRIPTION\n        \"An indication\
    \ of the SMON capabilities supported by this\n        agent.\"\n   ::= { smonMIBGroups\
    \ 11 }\n   portCopyConfigGroup     OBJECT-GROUP\n        OBJECTS         { portCopyDestDropEvents,\n\
    \                          portCopyDirection,\n                          portCopyStatus\n\
    \                        }\n        STATUS      current\n        DESCRIPTION\n\
    \        \"Defines the control objects for copy port operations.\"\n   ::= { smonMIBGroups\
    \ 12 }\n   END\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1]  Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2571, April 1999.\n\
    \   [2]  Rose, M. and K. McCloghrie, \"Structure and Identification of\n     \
    \   Management Information for TCP/IP-based Internets\", STD 16, RFC\n       \
    \ 1155, May 1990.\n   [3]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n   [4]  Rose, M., \"A Convention for\
    \ Defining Traps for use with the\n        SNMP\", RFC 1215, March 1991.\n   [5]\
    \  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M.\
    \ and S. Waldbusser, \"Structure of Management Information\n        Version 2\
    \ (SMIv2)\", STD 58, RFC 2578, April 1999.\n   [6]  McCloghrie, K., Perkins, D.,\
    \ Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser, \"Textual\
    \ Conventions for SMIv2\", STD 58,\n        RFC 2579, April 1999.\n   [7]  McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser,\
    \ \"Conformance Statements for SMIv2\", STD\n        58, RFC 2580, April 1999.\n\
    \   [8]  Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple\n       \
    \ Network Management Protocol\", STD 15, RFC 1157, May 1990.\n   [9]  SNMPv2 Working\
    \ Group, Case, J., McCloghrie, K., Rose, M. and S.\n        Waldbusser, \"Introduction\
    \ to Community-based SNMPv2\", RFC 1901,\n        January 1996.\n   [10] SNMPv2\
    \ Working Group, Case, J., McCloghrie, K., Rose, M. and S.\n        Waldbusser,\
    \ \"Transport Mappings for Version 2 of the Simple\n        Network Management\
    \ Protocol (SNMPv2)\", RFC 1906, January 1996.\n   [11] Case, J., Harrington D.,\
    \ Presuhn R., and B. Wijnen, \"Message\n        Processing and Dispatching for\
    \ the Simple Network Management\n        Protocol (SNMP)\", RFC 2572, April 1999.\n\
    \   [12] Blumenthal, U., and B. Wijnen, \"User-based Security Model for\n    \
    \    Version 3 of the Simple Network Management Protocol (SNMPv3)\",\n       \
    \ RFC 2574, April 1999.\n   [13] SNMPv2 Working Group, Case, J., McCloghrie, K.,\
    \ Rose, M. and S.\n        Waldbusser, \"Protocol Operations for Version 2 of\
    \ the Simple\n        Network Management Protocol (SNMPv2)\", RFC 1905, January\
    \ 1996.\n   [14] Levi, D., Meyer, P., and B. Stewart, \"SNMP Applications\", RFC\n\
    \        2573, April 1999.\n   [15] Wijnen, B., Presuhn, R., and K. McCloghrie,\
    \ \"View-based Access\n        Control Model for the Simple Network Management\
    \ Protocol\n        (SNMP)\", RFC 2575, April 1999.\n   [16] Waldbusser, S., \"\
    Remote Network Monitoring Management\n        Information Base Version 2 using\
    \ SMIv2\", RFC 2021, January 1997.\n   [17] Waldbusser, S., \"Remote Network Monitoring\
    \ Management\n        Information Base\", RFC 1757, February 1995.\n   [18] McCloghrie,\
    \ K. and A. Bierman, \"Entity MIB\", RFC 2037, October\n        1996.\n   [19]\
    \ ISO/IEC Final CD 15802-3, ANSI/IEEE Std 802.1D-1998 \"Information\n        technology\
    \ - Telecommunications and information exchange between\n        systems - Local\
    \ and metropolitan area networks - Common\n        specifications - Part 3: Media\
    \ Access Control (MAC) Bridges:\n        Revision (Incorporating IEEE P802.1p:\
    \ Traffic Class Expediting\n        and Dynamic Multicast Filtering)\", March\
    \ 1998.\n   [20] ANSI/IEEE Draft Standard P802.1Q/D10, \"IEEE Standards for Local\n\
    \        and Metropolitan Area Networks: Virtual Bridged Local Area\n        Networks\"\
    , March 1998.\n   [21] De Graaf, K., Romascanu, D., McMaster, D. and K. McCloghrie,\n\
    \        \"Definition of Managed Objects for IEEE 802.3 Repeater Devices\n   \
    \     using SMIv2\", RFC 2108, February 1997.\n   [22] McCloghrie, K. and F. Kastenholz,\"\
    \ The Interfaces Group MIB\n        using SMIv2\", RFC 2233, November 1997.\n\
    \   [23] Decker, E. Langille, P., Rijsinghani, A. and K. McCloghrie..  -\n   \
    \     \"Definitions of Managed Objects for Bridges\", RFC 1493, July\n       \
    \ 1993\n   [24] Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \        Levels\", BCP 14, RFC 2119, March 1997.\n   [25] McCloghrie, K. and M.\
    \ Rose, Editors, \"Management Information\n        Base for Network Management\
    \ of TCP/IP-based internets: MIB-II\",\n        STD 17, RFC 1213, March 1991.\n"
- title: 7. Intellectual Property
  contents:
  - "7. Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB that\n   have a MAX-ACCESS clause of read-write and/or read-create.\
    \  Such\n   objects may be considered sensitive or vulnerable in some network\n\
    \   environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\n\
    \   There are a number of managed objects in this MIB that may contain\n   sensitive\
    \ information. These are:\n       smonCapabilities\n       dataSourceCapsTable\n\
    \       portCopyTable\n   It is thus important to control even GET access to these\
    \ objects and\n   possibly to even encrypt the values of these object when sending\
    \ them\n   over the network via SNMP.  Not all versions of SNMP provide features\n\
    \   for such a secure environment.\n   SNMPv1 by itself is not a secure environment.\
    \  Even if the network\n   itself is secure (for example by using IPSec), even\
    \ then, there is no\n   control as to who on the secure network is allowed to\
    \ access and\n   GET/SET (read/change/create/delete) the objects in this MIB.\n\
    \   It is RECOMMENDED that the implementors consider the security\n   features\
    \ as provided by the SNMPv3 framework.  Specifically, the use\n   of the User-based\
    \ Security Model RFC 2574 [12] and the View-based\n   Access Control Model RFC\
    \ 2575 [15] is RECOMMENDED.\n   It is then a customer/user responsibility to ensure\
    \ that the SNMP\n   entity giving access to an instance of this MIB, is properly\n\
    \   configured to give access to the objects only to those principals\n   (users)\
    \ that have legitimate rights to indeed GET or SET\n   (change/create/delete)\
    \ them.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Richard Waterman\n   Allot Communications\n   292\
    \ E. Main St.\n   Los Gatos, CA.  95030\n   USA\n   Phone: +1-408-399-3154\n \
    \  EMail: rich@allot.com\n   Bill Lahaye\n   Xylan Corporation\n   26707 W. Agoura\
    \ Rd.\n   Calabasas, CA 91302\n   USA\n   Phone:  +1-800-995-2612\n   EMail bill.lahaye@xylan.com\n\
    \   Dan Romascanu\n   Lucent Technologies\n   Atidim Technology Park, Bldg. #3\n\
    \   Tel Aviv, 61131\n   Israel\n   Phone: +972-3-645-8414\n   EMail: dromasca@lucent.com\n\
    \   Steven Waldbusser\n   International Network Services (INS)\n   1213 Innsbruck\
    \ Dr.\n   Sunnyvale, CA 94089\n   Phone: +1-650-318-1251\n   EMail: waldbusser@ins.com\n"
- title: A.  Full Copyright Statement
  contents:
  - "A.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
