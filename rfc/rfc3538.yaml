- title: __initial_text__
  contents:
  - "         Secure Electronic Transaction (SET) Supplement for the\n           \
    \    v1.0 Internet Open Trading Protocol (IOTP)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes detailed Input/Output parameters for the\n\
    \   Internet Open Trading Protocol (IOTP) Payment Application Programming\n  \
    \ Interface (API).  It also describes procedures in the Payment Bridge\n   for\
    \ the use of SET (SET Secure Electronic Transaction) as the payment\n   protocol\
    \ within Version 1.0 of the IOTP.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   6. General Flow of SET/IOTP........................................8\n\
    \      6.1 Baseline Purchase...........................................9\n   \
    \       6.1.1 Brand Independent Baseline Purchase...................9\n      \
    \    6.1.2 Brand Dependent Baseline Purchase....................13\n      6.2\
    \ Cash Advances..............................................14\n      6.3 Status\
    \ Inquiry.............................................15\n   7. IOTP Payment APIs..............................................16\n\
    \      7.1 Brand Compilation Related API Calls........................16\n   \
    \       7.1.1 Find Accepted Payment Brand..........................16\n      \
    \    7.1.2 Find Accepted Payment Protocol.......................17\n         \
    \ 7.1.3 Get Payment Initialization Data......................18\n          7.1.4\
    \ Inquire Authentication Challenge.....................19\n          7.1.5 Authenticate.........................................19\n\
    \          7.1.6 Check Authentication Response........................19\n   \
    \   7.2 Brand Selection Related API Calls..........................20\n      \
    \    7.2.1 Find Payment Instrument..............................20\n         \
    \ 7.2.2 Check Payment Possibility............................21\n      7.3 Payment\
    \ Transaction Related API Calls......................22\n          7.3.1 Start\
    \ Payment Consumer...............................22\n          7.3.2 Start Payment\
    \ Payment Handler........................23\n          7.3.3 Resume Payment Consumer..............................24\n\
    \          7.3.4 Continue Process.....................................25\n   \
    \       7.3.5. Change Process State................................26\n      7.4\
    \ General Inquiry API Calls..................................26\n          7.4.1\
    \ Payment Instrument Inquiry...........................26\n          7.4.2 Inquire\
    \ Pending Payment..............................26\n          7.4.3 Remove Payment\
    \ Log...................................27\n      7.5 Payment Related Inquiry\
    \ API Calls..........................27\n          7.5.1 Check Payment Receipt................................27\n\
    \          7.5.2 Expand Payment Receipt...............................27\n   \
    \       7.5.3 Inquire Process State................................28\n      \
    \    7.5.4 Start Payment Inquiry................................29\n         \
    \ 7.5.5 Inquire Payment Status...............................30\n   8. SET dependent\
    \ Process..........................................30\n      8.1 Relationships\
    \ between them for IOTP Purchase/Cash Advances.30\n      8.2 Definition of Identifiers..................................31\n\
    \          8.2.1 Definition of BrandId................................31\n   \
    \       8.2.2 Definition of ProtocolBrandId........................31\n      \
    \    8.2.3 Definition of ProtocolId.............................33\n         \
    \ 8.2.4 Relationship between Ids.............................33\n      8.3 Process\
    \ prior to Payment...................................34\n          8.3.1 FindAcceptedPaymentProtocol\
    \ Function.................34\n          8.3.2 FindPaymentInstrument Function.......................35\n\
    \          8.3.3 GetPaymentInitializationData Function................36\n   \
    \   8.4 Process of Payment.........................................37\n      \
    \    8.4.1 StartPaymentConsumer Function........................37\n         \
    \ 8.4.2 StartPaymentPaymentHandler Function..................41\n          8.4.3\
    \ ContinueProcess Function (Consumer Side).............42\n          8.4.4 ContinueProcess\
    \ Function (Payment Handler Side)......43\n          8.4.5 InquireProcessState\
    \ Function.........................45\n      8.5 Payment Receipt............................................45\n\
    \          8.5.1 CheckPayReceipt Function.............................45\n   \
    \       8.5.2 ExpandPayReceipt Function............................45\n      8.6\
    \ Status Inquiry.............................................46\n      8.7 Resume\
    \ Process.............................................47\n      8.8 SET Scheme\
    \ Specific Authentication on IOTP.................47\n      8.9 SET Bridge ProcessState....................................48\n\
    \          8.9.1 SET Bridge ProcessState of Consumer..................48\n   \
    \       8.9.2 SET Bridge ProcessState of Payment Handler...........49\n      8.10\
    \ Relationship between Pay Step and Deliv Step on SET/IOTP..49\n      8.11 Completion\
    \ Code...........................................50\n      8.12 PercentComplete...........................................50\n\
    \      8.13 Severity..................................................51\n   9.\
    \ Error Handling.................................................51\n      9.1\
    \ Types of Errors............................................51\n      9.2 IOTP\
    \ Level Error (OAC Error)...............................52\n      9.3 IOTP Level\
    \ Error (SET Bridge Error)........................52\n      9.4 SET Level Error\
    \ (SET Technical Error)......................52\n          9.4.1 SET Initiation\
    \ Error.................................52\n          9.4.2 SET Transaction Error................................53\n\
    \      9.5 SET Level Error (SET Business Error).......................53\n   10.\
    \ Security Considerations.......................................54\n   11. References....................................................54\n\
    \   12. IANA Considerations...........................................55\n   13.\
    \ Acknowledgement...............................................55\n   14. Author's\
    \ Address..............................................55\n   15. Full Copyright\
    \ Statement......................................56\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This chapter describes the outline of this document.\n"
- title: 1.1 Objectives of this Document
  contents:
  - "1.1 Objectives of this Document\n   This document describes how SET (SET Secure\
    \ Electronic Transaction)\n   works within the IOTP (Internet Open Trading Protocol).\n"
- title: 1.2 Scope of this specification
  contents:
  - '1.2 Scope of this specification

    '
- title: 1.2.1 The version of IOTP specification
  contents:
  - "1.2.1 The version of IOTP specification\n   This document is written based on\
    \ IOTP Version 1.0 [RFC 2801].\n"
- title: 1.2.2 The version of SET specification
  contents:
  - "1.2.2 The version of SET specification\n   This document is written based on\
    \ SET Version 1.0 [SET].\n"
- title: 1.2.3 The version of IOTP Architecture document
  contents:
  - "1.2.3 The version of IOTP Architecture document\n   This document is written\
    \ based on IOTP Payment API document Version\n   1.0 [IOTP Payment API].\n"
- title: 1.3 Audience
  contents:
  - "1.3 Audience\n   This document is indented for readers who are familiar with\
    \ the\n   following documents:\n   1) IOTP Specification Version 1.0 [RFC 2801]\n\
    \   2) SET Specification, in particular Book 2:Programmer's Guide and\n      Book3:Formal\
    \ Protocol Definition,\n   3) External Interface Guide to SET Secure Electronic\
    \ Transaction\n   4) Internet Open Trading Supplement: Architecture and Payment\
    \ API\n      [IOTP API]\n"
- title: 1.4 Notation
  contents:
  - "1.4 Notation\n   SET Messages and Elements are described with the prefix \"SET\"\
    .\n   Examples:\n   SET PRes\n   SET OD\n   SET SaleDetail\n"
- title: 1.5 Terminology
  contents:
  - "1.5 Terminology\n   This document uses the following terms:\n   SET/IOTP    \
    \         The specification described in this document.\n   SET related message\
    \  Both SET Messages and SET Initiation Messages\n"
- title: 2. Requirements & Development Policy
  contents:
  - "2. Requirements & Development Policy\n   This chapter describes the requirements\
    \ and development policies of\n   SET/IOTP.\n   The requirements of SET/IOTP are\
    \ as follows:\n   o  To be based on SET specifications.  Interoperability at the\n\
    \      payment level must be maintained.\n   o  To not enforce modifications which\
    \ are specific to SET/IOTP.\n      General features of IOTP should not be tampered\
    \ with to cater to a\n      particular payment method.\n   o  To keep integrity\
    \ between IOTP and SET.  Inconstancy must not be\n      raised between IOTP and\
    \ SET elements when they have the same\n      meaning.\n   The development policy\
    \ of SET/IOTP is as follows:\n   o  To minimize the number of message round trips\n\
    \   o  To minimize the length of messages\n"
- title: 3. Business Models
  contents:
  - "3. Business Models\n   This chapter describes the difference in entity models\
    \ between SET\n   and IOTP, the definitions of Trading Roles in SET/IOTP, and\
    \ the scope\n   of SET/IOTP.\n"
- title: 3.1 Entity models between SET and IOTP
  contents:
  - "3.1 Entity models between SET and IOTP\n   The following table describes how\
    \ SET and IOTP entities correspond to\n   each other.\n   |    IOTP Entity   \
    \             SET Entity         |\n   | ------------------------------------------------\
    \ |\n   | Consumer        <--->      Card Holder           |\n   | Merchant  \
    \      <--->      Merchant (Initiation) |\n   | Payment Handler <--->      Merchant\
    \ (Payment)    |\n   | Delivery Handler<--->      None                  |\n  \
    \ | None            <--->      Acquirer              |\n      Figure 1 Entity\
    \ Models between SET and IOTP\n"
- title: 3.2 Role of Participants
  contents:
  - "3.2 Role of Participants\n   The following table describes the trading roles\
    \ in SET/IOTP.\n   Trading Roles        Role\n   -------------------------------------------------------------\n\
    \   Consumer             An Individual who purchases goods and/or\n          \
    \              services, and pays for the value received\n                   \
    \     by choosing a SET Transaction.  This\n                        individual\
    \ corresponds with the\n                        CardHolder in SET.\n   Merchant\
    \             An organization that provides goods and/or\n                   \
    \     services for purchase, accepts payment\n                        methods,\
    \ delivers invoices and triggers\n                        payment processes.\n\
    \   Payment Handler      An organization that processes negotiations on\n    \
    \                    payments including SET payment transactions.\n   Delivery\
    \ Handler     An Organization that ships digital or physical\n               \
    \         goods to the Consumer.\n   Customer Care        The same as in [RFC\
    \ 2801].\n   Provider\n   Merchant Care        The same as in [RFC 2801].\n  \
    \ Provider\n"
- title: 3.3 Scope of Transaction Types
  contents:
  - "3.3 Scope of Transaction Types\n   The types of IOTP transactions that are supported\
    \ in this document\n   are as follows:\n   o  Brand Independent Baseline Purchase\
    \ when SET is used for payment\n   o  Brand Dependent Baseline Purchase when SET\
    \ is used for payment\n   o  Cash Advances (Brand Independent and Brand Dependent\
    \ case)\n   o  Status Inquiry on SET payments\n"
- title: 3.4 Types of transaction not in scope
  contents:
  - "3.4 Types of transaction not in scope\n   The types of transactions that are\
    \ NOT covered in this document are\n   as follows:\n   o  Credit Reversal Process\n\
    \   o  Customer Care Service with Consumer Related SET Certificate\n      Registration\n\
    \   o  Customer Care Service with Consumer Related SET Certificate\n      Registration\
    \ Inquiry\n"
- title: 4. Architecture of SET/IOTP
  contents:
  - "4. Architecture of SET/IOTP\n   SET/IOTP Architecture is as follows:\n   IOTP\
    \ client (Consumer)  <--------------->  IOTP server (Merchant)\n         ^   \
    \                  Internet             ^\n         | IOTP Payment           \
    \                  | IOTP Payment\n         |    API                         \
    \          |    API\n         v                                          v\n \
    \  IOTP/Payment Bridge                        IOTP/Payment Bridge\n        ^ \
    \                                          ^\n        | Existing Payment APIs,\
    \ e.g.,              |\n        | SET, Mondex, etc.                         |\n\
    \        v                                           v\n   Existing Payment Software\
    \               Existing Payment Software\n      Figure 2 SET/IOTP Architecture\n\
    \   IOTP Application Core (OAC): Software that processes IOTP messages.\n   IOTP\
    \ Payment Bridge (OPB): Interface between OAC and Existing Payment\n   Software.\
    \  SET Bridge is also an interface between OAC and SET Core.\n   Existing Payment\
    \ Software (EPS): Existing Software that processes\n   Payments.  The SET Core\
    \ is software that supports mechanisms in SET\n   specification from Book1 to\
    \ Book3.  EPS does NOT necessarily have to\n   implement the SET Initiation Processor,\
    \ which is specified in SET\n   EIG.  SET Related Module Both SET related OPB\
    \ and EPS.\n"
- title: 5. Trading Types of SET/IOTP
  contents:
  - "5. Trading Types of SET/IOTP\n   This chapter describes the outline of SET/IOTP\
    \ trading types.\n"
- title: 5.1 Baseline Purchase
  contents:
  - "5.1 Baseline Purchase\n   Three steps will take place in a Baseline Purchase\
    \ in the following\n   order:\n   (1) Offer Step\n   Consumer selects goods/services\
    \ over the Internet, for instance on\n   the web, and then chooses the payment\
    \ method (SET is selected), the\n   SET brand, the payment currency, and then\
    \ confirms the invoice.\n   There are two Offer Process types, Brand Independent\
    \ and Brand\n   Dependent.\n   (1-a) Brand Independent Purchase\n   In a Brand\
    \ Independent Purchase, the Merchant sends the TPO Block and\n   Offer Response\
    \ Block simultaneously after the consumer's purchase\n   decision.  The Brand\
    \ Independent Purchase has the merit of\n   eliminating one round of messages\
    \ compared with the Brand Dependent\n   Purchase because the contents of the Offer\
    \ Response Block (for\n   example, the description on the invoice) do not change\
    \ based on the\n   selected brand.\n   (1-b) Brand Dependent Purchase\n   Brand\
    \ Dependent Purchase is used when the contents of the Offer\n   Response Block\
    \ are dependent on the selected Payment Brand.  With\n   this method, the currency\
    \ selection and discounts based on payment\n   method can be implemented.\n  \
    \ (2) Payment Step\n   The Consumer confirms the order and then pays for the order\
    \ with a\n   SET Transaction.  The SET Transaction messages will be encapsulated\n\
    \   in IOTP Messages.\n   (3) Delivery Step\n   After completing the Payment,\
    \ the Consumer receives the\n   goods/services via either on-line or physical\
    \ delivery.\n"
- title: 5.2 Cash Advances
  contents:
  - "5.2 Cash Advances\n   Cash Advances can be made via a Value Exchange Transaction\
    \ in IOTP. A\n   first Payment by SET and a second Payment by some other payment\n\
    \   mechanism is supported in Baseline IOTP.  The Cash Advance has two\n   types\
    \ - Brand Independent and Brand Dependent Cases.\n"
- title: 5.3 Status Inquiry
  contents:
  - "5.3 Status Inquiry\n   A Consumer can send a SET Payment Inquiry in IOTP.  The\
    \ SET Message\n   is encapsulated in an IOTP Message.\n"
- title: 6. General Flow of SET/IOTP
  contents:
  - "6. General Flow of SET/IOTP\n   This chapter illustrates the general SET/IOTP\
    \ message flows.\n"
- title: 6.1 Baseline Purchase
  contents:
  - "6.1 Baseline Purchase\n   Baseline purchases consist of two types, Brand Independent\
    \ Purchase\n   and Brand Dependent Purchase.  Each type is illustrated in the\
    \ charts\n   below.\n"
- title: 6.1.1 Brand Independent Baseline Purchase
  contents:
  - "6.1.1 Brand Independent Baseline Purchase\n   The general flow of a Brand Independent\
    \ Purchase is as follows:\n   (1) Consumer Side (Before PayRequest Message)\n\
    \   SET Core     SET Bridge       OAC\n      |             |             |  TPO\
    \ & OfferResp message\n      |             |             |<-------------------\
    \ From\n      |             |<------------|                       Merchant\n \
    \     |             | FindPayment |\n      |             |   Instrument|\n   \
    \   |             |------------>|\n      |             |  Response   |\n     \
    \ |             |<------------|\n      |             | CheckPayment|\n      |\
    \             |  Possibility|\n      |             |------------>|\n      |  \
    \           |  Response   |\n      |             |<------------|\n      |<------------|\
    \ StartPayment|\n      |------------>|     Consumer|\n      |             |------------>|\
    \ PayRequest Message\n      |             |  Response   |------------------->\
    \ To Payment\n                                    (SET Init Resp/        Handler\n\
    \                                         SET PInitReq)\n      Figure 3 Consumer\
    \ Side for Brand Independent (1)\n   (2) Consumer Side (After PayRequest Message)\n\
    \   SET Core     SET Bridge       OAC\n      |             |             |  Pay\
    \ Exch Message\n      |             |             |<------------------- From\n\
    \      | SET PInitRes|<------------|  (SET PInitRes)      P.H.\n      |<------------|\
    \ Continue    |\n      |------------>|     Process |\n      |  SET PReq   |------------>|\
    \  Pay Exch Message\n      |             |  Response   |-------------------> To\
    \ P.H.\n      |             |             |    (SET PReq)\n      |           \
    \  |             |  Pay Exch Message\n      |             |             |<------------------\
    \  From P.H.\n      |  SET PRes   |<------------|    (SET PRes)\n      |<------------|\
    \ Continue    |\n      |------------>|    Process  |\n      |             |------------>|\n\
    \      |             |Response[END]|\n      |             |<------------|\n  \
    \    |             | CheckPayment|\n      |             |     Receipt |\n    \
    \  |             |------------>|\n      |             |  Response   |\n      |\
    \             |<------------|\n      |             |ExpandPayment|\n      |  \
    \           |     Receipt |\n      |             |------------>|\n      |    \
    \         |  Response   |\n      |             |<------------|\n      |      \
    \       |ChangeProcess|\n      |             |       State |\n      |        \
    \     |------------>|\n      |             |  Response   |\n      Figure 4 Consumer\
    \ Side flow for Brand Independent (2)\n   (3) Merchant Side\n                \
    \                 OAC        SET Bridge\n                                  |--------------->|\n\
    \                                  |FindAccepted    |\n                      \
    \            | PaymentBrand   |\n                                  |<---------------|\n\
    \                                  |  Response      |\n                      \
    \            |--------------->|\n                                  |FindAccepted\
    \    |\n                                  | PaymentProtocol|\n               \
    \                   |<---------------|\n                                  |  Response\
    \      |\n                                  |--------------->|\n             \
    \                     |GetPaymentInit- |\n                                  |\
    \ lizationData   |\n          TPO & Offer Resp Msg.   |<---------------|\n   \
    \      <------------------------|  Response      |\n   To  Consumer\n      Figure\
    \ 5 Merchant Side flow for Brand Independent\n   (4) Payment Handler Side.\n \
    \                                OAC        SET Bridge        SET Core\n     \
    \         PayRequest Message  |                |             |\n   From    ---------------------->|\
    \                |             |\n    Consumer  (SET Init Res/      |--------------->|\
    \             |\n                    SET PInitReq) |StartPayment    |------------>|\n\
    \                                  | PaymentHandler |<------------|\n        \
    \     PayExch Message      |<---------------|             |\n   To      <----------------------|\
    \  Response      |             |\n    Consumer (SET Init Req/       .        \
    \        .             .\n                   SET PInitRes)  .                .\
    \             .\n             PayExch Mssage       |                |        \
    \     |\n           ---------------------->|                |             |\n\
    \   From Consumer (SET PReq)       |--------------->| SET PReq    |\n        \
    \                          | Continue       |------------>|\n                \
    \                  |       Process  |<------------|\n                        \
    \          |<---------------| SET PRes    |\n                                \
    \  |  Response      |             |\n                                  |--------------->|\
    \             |\n                                  | Inquire        |        \
    \     |\n                                  |   ProcessState |             |\n\
    \                                  |<---------------|             |\n        \
    \                          |  Response      |             |\n                \
    \                  |--------------->|             |\n                        \
    \          | ChangeProcess  |             |\n                                \
    \  |      State     |             |\n           PayResponse Message    |<---------------|\
    \             |\n         <------------------------|  Response      |        \
    \     |\n   To  Consumer (SET PRes)\n      Figure 6 Payment Handler side flow\
    \ for Brand Independent\n"
- title: 6.1.2 Brand Dependent Baseline Purchase
  contents:
  - "6.1.2 Brand Dependent Baseline Purchase\n   The general flow of a Brand Dependent\
    \ Purchase is as follows:\n   (1) Consumer Side (Before PayRequest Message)\n\
    \   SET Core     SET Bridge       OAC\n      |             |             |  TPO\
    \ message\n      |             |             |<------------------- From\n    \
    \  |             |<------------|                       Merchant\n      |     \
    \        | FindPayment |\n      |             |   Instrument|\n      |       \
    \      |------------>|\n      |             |  Response   |\n      |         \
    \    |<------------|\n      |             | CheckPayment|\n      |           \
    \  |  Possibility|\n      |             |------------>|  TPO Selection Msg.\n\
    \      |             |  Response   |-------------------> To Merchant\n      |\
    \             |             |<------------------  From Merchant\n      |     \
    \        |<------------| Offer Response Msg.\n      |<------------| StartPayment|\n\
    \      |------------>|     Consumer|\n      |             |------------>| PayRequest\
    \ Message\n      |             |  Response   |-------------------> To Payment\n\
    \                                    (SET Init Resp/        Handler\n        \
    \                                 SET PInitReq)\n      Figure 7 Consumer Side\
    \ flow for Brand Dependent (1)\n   (2) Consumer Side (After PayRequest Message)\n\
    \   This flow is the same as Brand Independent.\n   (3) Merchant Side\n      \
    \                           OAC        SET Bridge\n                          \
    \        |--------------->|\n                                  |FindAccepted \
    \   |\n                                  | PaymentBrand   |\n                \
    \                  |<---------------|\n                                  |  Response\
    \      |\n                                  |--------------->|\n             \
    \                     |FindAccepted    |\n                                  |\
    \ PaymentProtocol|\n          TPO  Message            |<---------------|\n   \
    \      <------------------------|  Response      |\n   To Consumer           \
    \         |                |\n          TPO Selection Message   |            \
    \    |\n         ------------------------>|                |\n   From Consumer\
    \                  |--------------->|\n                                  |GetPaymentInit-\
    \ |\n                                  | lizationData   |\n          Offer Response\
    \ Message  |<---------------|\n         <------------------------|  Response \
    \     |\n   To  Consumer\n      Figure 8 Merchant Side flow for Brand Dependent\
    \ (1)\n   (4) Payment Handler Side\n   This flow is the same as Brand Independent.\n"
- title: 6.2 Cash Advances
  contents:
  - "6.2 Cash Advances\n   IOTP Cash Advances processes can be made with a credit\
    \ card using an\n   IOTP Value Exchange Transaction.  In Cash Advances a first\
    \ Payment by\n   a SET Transaction, and a second Payment by some other payment\n\
    \   mechanism, is supported in Baseline IOTP.  The general flow is\n   omitted.\n"
- title: 6.3 Status Inquiry
  contents:
  - "6.3 Status Inquiry\n   The general flow of a Status Inquiry is as follows:\n\
    \   (1) Consumer Side\n   SET Core     SET Bridge       OAC\n      |         \
    \    |             |\n      |             |             |\n      |           \
    \  |<------------|\n      |<------------| StartPayment|\n      |------------>|\
    \      Inquiry|\n      | SET InqReq  |------------>| Inquiry Request\n      |\
    \             |  Response   |-------------------> To P.H.\n      |           \
    \  |             |   (SET InqReq)\n      |             |             |\n     \
    \ |             |             | Inquiry Response\n      |             |      \
    \       |<------------------- From P.H.\n      |             |             | \
    \  (SET InqRes)\n      | SET Inq Res |<------------|\n      |<------------| Continue\
    \    |\n      |------------>|      Process|\n      | SET InqReq  |------------>|\n\
    \      |             |    [End]    |\n      |             |ChangeProcess|\n  \
    \    |             |        State|\n      |             |<------------|\n    \
    \  |<------------|\n      Figure 9 Consumer Side flow for Status Inquiry\n   (2)\
    \ Payment Handler Side\n                                   OAC        SET Bridge\
    \     SET Core\n              InquiryReq message    |              |         \
    \    |\n   From    ------------------------>|              |             |\n \
    \   Consumer     (SET InqReq)       |------------->|             |\n         \
    \                           |InquirePayment|------------>|\n                 \
    \                   |        Status| SET InqReq  |\n                         \
    \           |              |<------------|\n                                 \
    \   |              | SET InqRes  |\n              InquiryResp message   |<-------------|\
    \             |\n   To      <------------------------|  Response    |        \
    \     |\n    Consumer     (SET InqRes)       |\n      Figure 10 Payment Handler\
    \ Side flow for Status Inquiry\n"
- title: 7. IOTP Payment APIs
  contents:
  - "7. IOTP Payment APIs\n   This section provides a summary of SET/IOTP interactions\
    \ with API\n   calls as in [IOTP Payment API].\n   The description of parameters\
    \ hereafter are written as follows:\n      Parameter name : Mandatory (M) or Optional\
    \ (O) : Description\n   For more details on the IOTP Payment APIs, see [IOTP Payment\
    \ API].\n   \"-\" in the Description is the same as description in the [IOTP\n\
    \   Payment API].\n   Notice: Status is the status of SET/IOTP.  Though some Fields\
    \ are\n   specified \"#IMPLIED\" in [IOTP Payment API], if the fields must be\n\
    \   used in SET/IOTP, this document specifies the status as Mandatory,\n   (M).\n"
- title: 7.1 Brand Compilation Related API Calls
  contents:
  - '7.1 Brand Compilation Related API Calls

    '
- title: 7.1.1 Find Accepted Payment Brand
  contents:
  - "7.1.1 Find Accepted Payment Brand\n   Receive the payment scheme specific packaged\
    \ data to generate Brand\n   Component.  In this version of SET/IOTP, This API\
    \ must be called\n   before Find Accepted Payment Protocol function.\n   Input\
    \ Parameters\n   ----------------\n   PayDirection       : M : This must be set\
    \ \"Debit\".\n   CurrCodeType       : M : This should be set \"ISO4217-A\".\n\
    \   CurrCode           : M : -\n   Amount             : M : -\n   MerchantPayId\
    \      : M : -\n   MerchantOrgId      : M : -\n   WalletId           : O : -\n\
    \   MerchantData       : O : The details are not specified in\n              \
    \              this document.\n   Output Parameters\n   -----------------\n  \
    \ BrandItem          : M : See NOTE below.\n   NOTE: Parameters of BrandItem\n\
    \   -----------------------------\n   BrandId            : M : This is defined\
    \ in the section 8.2.1.\n   xml:lang           : M : -\n   BrandName         \
    \ : M : Brand Name, such as \"MasterCard\".\n   BrandLogoNetLocn   : M : -\n \
    \  BrandNarrative     : O : This is not specified in this document.\n   BrandPackaged\
    \      : O : This is not used in the SET/IOTP.\n    Content\n"
- title: 7.1.2 Find Accepted Payment Protocol
  contents:
  - "7.1.2 Find Accepted Payment Protocol\n   Receive the payment scheme specific\
    \ packaged data to generate the\n   PayProtocol Component.\n   Input Parameters\n\
    \   ----------------\n   BrandId            : M : This is defined in the section\
    \ 8.2.1.\n   PayDirection       : M : This must be set \"Debit\".\n   CurrCodeType\
    \       : M : This should be set \"ISO4217-A\".\n   CurrCode           : M : -\n\
    \   Amount             : M : -\n   MerhcantPayId      : M : -\n   MercahntOrgId\
    \      : M : -\n   WalletId           : O : -\n   BrandPackaged      : O : This\
    \ is not used in the SET/IOTP.\n    Content\n   MerchantData       : O : This\
    \ is not specified in the SET/IOTP.\n   Output Parameters\n   -----------------\n\
    \   ProtocolItem       : M : See NOTE below.\n   BrandItem          : M : -\n\
    \   NOTE Parameters of ProtocolItem\n   -------------------------------\n   ProtocolId\
    \         : M : This is set \"SETv1.0\".\n   ProtocolBrandId    : M : This is\
    \ set the Payment Protocol Specific\n                            ID corresponding\
    \ to the BrandId as Input\n                            Parameter and ProtocolId\
    \ as the\n                            Output Parameter.  For the detail,\n   \
    \                          see 8.2.2.\n   xml:lang           : M : -\n   ProtocolName\
    \       : M : This is not specified in this document\n                       \
    \     but must be included the protocol name\n                            and\
    \ its version at least.\n   PayReqNetLocn      : O : The Net Location indicating\
    \ where a\n                            unsecured Payment Request Message should\n\
    \                            be sent if this protocol choice is used.\n   SecPayReqNetLocn\
    \   : O : The Net Location indicating where\n                            a secured\
    \ Payment Request Message\n                            should be sent if this\
    \ protocol choice\n                            is used.\n   ProtocolAmount   \
    \  : O : This is not used in the SET/IOTP.\n    PackagedContent\n   PayProtocol\
    \        : M : The XML Packaged Data, which includes\n    PackagedContent    \
    \     the information for the 1st SET\n                            Initiation\
    \ Process.  See for the details\n                            to section 8.3.1.\n\
    \   Brand              : M : In this document, BrandId, which is the\n       \
    \                     same as Input Parameter,must be set ONLY.\n            \
    \                See NOTE below.\n   CurrencyAmount     : M : See NOTE below.\n\
    \   ProtocolBrand      : M : Multiple Components are not arrowed in\n        \
    \                    the current version of SET/IOTP.\n   Note Parameters of CurrencyAmount\n\
    \   ---------------------------------\n   CurrCodeType       : M : This should\
    \ be set \"ISO4217-A\".\n   CurrCode           : M : -\n   Amount            \
    \ : M : -\n   Note Parameters of Brand\n   ------------------------\n   BrandId\
    \            : M : -\n"
- title: 7.1.3 Get Payment Initialization Data
  contents:
  - "7.1.3 Get Payment Initialization Data\n   This API is used to get the packaged\
    \ content in Payment Component.\n   Input Parameters\n   ----------------\n  \
    \ BrandId            : M : See the details of section 8.2.1.\n   MerchantPayId\
    \      : M : -\n   PayDirection       : M : This is set \"Debit\".\n   CurrCodeType\
    \       : M : This is set \"ISO5217-A\".\n   CurrCode           : M : -\n   Amount\
    \             : M : -\n   OkFrom             : M : -\n   OkTo               :\
    \ M : -\n   ReceiverOrgId      : M : Organization ID which is used to get\n  \
    \                          TradingRolePackagedContents, which\n              \
    \              depend on the organizations for each.\n   MerchantOrgId      :\
    \ M : -\n   ProtocolId         : M : This field must be set \"SETv1.0\".\n   WalletId\
    \           : O : -\n   PassPhrase         : O : -\n   ProtocolBrand      : M\
    \ : -\n   BrandPackaged      : O : This is not used in the current version\n \
    \   Content                 of SET/IOTP.\n   ProtocolAmount     : O : This is\
    \ not used in the current version\n    PackagedContent         of SET/IOTP.\n\
    \   PayProtocolPackaged: M : This field is copied from the\n    Content      \
    \           PayProtocol Component.\n   OrderPackaged      : M : Packaged Data\
    \ regarding the Order data,\n    Content                 which the Merchant's\
    \ OAC sets.\n   BrandSelBrandInfo  : O : This is not used in the current\n   \
    \ PackagedContent         version of SET/IOTP.\n   BrandSelProtocol   : O : This\
    \ is not used in the\n    AmountInfoPackaged      current version of SET/IOTP.\n\
    \    Content\n   BrandSelCurrency   : O : This is not used in the\n    AmountInfo\
    \              current version of SET/IOTP.\n    PackagedContent\n   Output Parameters\n\
    \   -----------------\n   OkFrom             : M : -\n   OkTo               :\
    \ M : -\n   OrderPackaged      : M :Changed OrderPackagedContent if\n    Content\
    \                it rewrites the order information.\n                        \
    \   Otherwise, passed the same input\n                           data to OAC.\n\
    \   TradingRole       : O : The receiver depended\n    PackagedContent       \
    \ TradingRolePackagedContent.  The Name\n                           Attribute\
    \ of the packaged contents\n                           must include \"Payment:\"\
    \ as the prefix,\n                           for example \"Payment:SET-OD\". \
    \ Multiple\n                           TradingRoleData may be returned.\n"
- title: 7.1.4 Inquire Authentication Challenge
  contents:
  - "7.1.4 Inquire Authentication Challenge\n   This is not used in the current version\
    \ of SET/IOTP.\n"
- title: 7.1.5 Authenticate
  contents:
  - "7.1.5 Authenticate\n   This is not used in the current version of SET/IOTP.\n"
- title: 7.1.6 Check Authentication Response
  contents:
  - "7.1.6 Check Authentication Response\n   This is not used in the current version\
    \ of SET/IOTP.\n"
- title: 7.2 Brand Selection Related API Calls
  contents:
  - '7.2 Brand Selection Related API Calls

    '
- title: 7.2.1 Find Payment Instrument
  contents:
  - "7.2.1 Find Payment Instrument\n   This API is used to get the Payment Instruments\
    \ that can be accepted\n   by the Payment Handler on behalf of the Merchant.\n\
    \   Input Parameters\n   ----------------\n   BrandId            : M : See the\
    \ details of section 8.2.2.\n   ProtocolId         : M : This must be set \"SETv1.0\"\
    .\n   PayDirection       : M : This must be set \"Debit\".\n   CurrCodeType  \
    \     : M : This should be set \"ISO5217-A\".\n   CurrCode           : M : -\n\
    \   Amount             : M : -\n   ConsumerPayId      : M : -\n   WalletId   \
    \        : O : -\n   ProtocolBrand      : M : -\n   BrandPackaged      : O : This\
    \ is not used in the current\n    Content                 version of SET/IOTP.\n\
    \   ProtocolAmount     : O : This is not used in the current\n    PackagedContent\
    \         version of SET/IOTP.\n   PayProtocolPackaged: M : See details for section\
    \ 8.3.1.\n    Content\n   Output Parameters\n   -----------------\n   PayInstrument\
    \      : M : Multiple PayInstrument Ids may\n                            be returned.\
    \ See NOTE below.\n   NOTE Parameters of PayInstrument\n   --------------------------------\n\
    \   Id                 : M : This must be unique each SET\n                  \
    \          Certificates which the\n                            Consumer can use.\n\
    \   xml:lang           : M : -\n   PayInstName        : M : -\n"
- title: 7.2.2 Check Payment Possibility
  contents:
  - "7.2.2 Check Payment Possibility\n   If the SET Bridge receives this API Message,\
    \ the SET Bridge returns\n   three packaged content fields.\n   Input Parameters\n\
    \   ----------------\n   BrandId            : M : This is set the consumer selected\n\
    \                            BrandId.\n   PaymentInstrumentId: M : This is set\
    \ the consumer selected\n                            PaymentInstrumentID.\n  \
    \ PayDirection       : M : This is set \"Debit\".\n   CurrCodeType       : M :\
    \ This is set \"ISO4217-A\".\n   CurrCode           : M : -\n   Amount       \
    \      : M : -\n   ProtocolId         : M : This must be set \"SETv1.0\".\n  \
    \ WalletId           : O : -\n   Passphrase         : O : -\n   ConsumerPayId\
    \      : M : -\n   ProtocolBrand      : M : This is set the consumer selected\n\
    \                            ProtocolBrand Component.\n   BrandPackaged      :\
    \ O : This is not used in the current\n    Content                 version of\
    \ SET/IOTP.\n   ProtocolAmount     : O : This is not used in the current\n   \
    \ PackagedContent         version of SET/IOTP.\n   PayProtocol        : M : This\
    \ field is copied from the PayProtocol\n   PackagedContent          Component\n\
    \   Output Parameter\n   ---------------\n   BrandSelBrandInfo  : O : This is\
    \ not used in the current\n   PackagedContent          version of SET/IOTP.\n\
    \   BrandSelProtocol   : O : This is not used in the\n    AmountInfoPackaged \
    \     current version of SET/IOTP.\n    Content\n   BrandSelCurrency   : O : This\
    \ is not used in the\n    AmountInfoPackaged         current version of SET/IOTP.\n\
    \    Content\n"
- title: 7.3 Payment Transaction Related API Calls
  contents:
  - '7.3 Payment Transaction Related API Calls

    '
- title: 7.3.1 Start Payment Consumer
  contents:
  - "7.3.1 Start Payment Consumer\n   In SET/IOTP, this API is used for the Consumer's\
    \ SET Bridge to\n   process the 1st SET Initiation and any subsequent SET messages.\n\
    \   Input Parameters\n   ----------------\n   BrandId            : M : ID for\
    \ the consumer selected\n                            Brand.  See the details of\n\
    \                            section 8.2.1.\n   PaymentInstrumentId: M : ID for\
    \ the consumer selected\n                            Instrument.\n   CurrCodeType\
    \       : M : The consumer selected CurrCodeType.\n   CurrCode           : M :\
    \ The consumer selected CurrCode.\n   Amount             : M : The consumer selected\
    \ Amount.\n   PayDirection       : M : Indicates the payment direction\n     \
    \                       from the Consumer's prospective.\n   ProtocolId      \
    \   : M : The consumer selected ProtocolId.\n   OkFrom             : M : -\n \
    \  OkTo               : M : -\n   ConsumerPayId      : M : -\n   WalletID    \
    \       : O : -\n   Passphrase         : O : -\n   CallBackFunction   : O : This\
    \ is not used in the SET/IOTP.\n   CallBackLanguage   : O : This is not used in\
    \ the SET/IOTP.\n    List\n   ProtocolBrand      : M : ID for the consumer selected\n\
    \                            Protocol dependent Brand information.\n   BrandPackaged\
    \      : O : This is not used in the current\n    Content                 version\
    \ of SET/IOTP.\n   ProtocolAmount     : O : This is not used in the current\n\
    \    PackagedContent         version of SET/IOTP.\n   PayProtocolPackaged   :\
    \ M : See section 8.2.2.\n    Content\n   Output Parameters\n   -----------------\n\
    \   ContStatus         : M : \"Continue\" must be set if there is\n          \
    \                  in no problem\n   PaySchemePackaged  : M : See section 6.5.1.\n\
    \    Content\n"
- title: 7.3.2 Start Payment Payment Handler
  contents:
  - "7.3.2 Start Payment Payment Handler\n   This API is used to initiate a payment\
    \ on the Payment Handler's side.\n   The SET Related Module does a payment initialization.\
    \  The SET\n   Related Module processes SET Message received and returns the\n\
    \   appropriate SET Message (e.g., 2nd SET Initiation or SET PinitRes\n   message).\n\
    \   Input Parameters\n   ----------------\n   BrandId            : M : ID for\
    \ the consumer selected Brand.\n                            See the details of\
    \ section 8.2.1.\n   ConsumerPayId      : O : ID for the consumer generated payment\n\
    \                             transaction.\n   CurrCodeType       : M : The consumer\
    \ selected CurrCodeType.\n                            This should be set \"ISO4217-A\"\
    .\n   CurrCode           : M : The consumer selected CurrCode.\n   Amount    \
    \         : M : The consumer selected Amount.\n   PayDirection       : M : This\
    \ is set \"Debit\".\n   ProtocolId         : M : The consumer selected ProtocolId.\n\
    \                            This must be set \"SETv1.0\".\n   OkFrom:       \
    \     : M : -\n   OkTo               : M : -\n   PaymentHandlerPayId: M : -\n\
    \   MerchantOrgId      : M : -\n   WalletID           : O : -\n   Passphrase \
    \        : O : -\n   CallBackFunction   : O : This is not used in the SET/IOTP.\n\
    \   CallBackLanguage   : O : This is not used in the SET/IOTP.\n    List\n   BrandPackaged\
    \      : O : This is not used in the current\n   Content                  version\
    \ of SET/IOTP.\n   ProtocolAmountP    : O : This is not used in the current\n\
    \    PackagedContent         version of SET/IOTP.\n   PayProtocolPackaged: M :\
    \ -\n    Content\n   ProtocolBrand      : M : Information for the consumer selected\n\
    \                            Protocol dependent Brand.\n   BrandSelBrandInfo \
    \ : O : This is not used in the current\n    PackagedContent         version of\
    \ SET/IOTP.\n   BrandSelProtocol   : O : This is not used in the\n    AmountInfo\
    \              current version of SET/IOTP.\n    PackagedContent\n   BrandSelCurrency\
    \   : O : This is not used in the\n    AmountInfo              current version\
    \ of SET/IOTP.\n    PackagedContent\n   TradingRolePackaged: O : Copied from the\
    \ TradingRoleData\n    Content                 Component.  The Name Attribute\
    \ of\n                            the packaged contents must include\n       \
    \                     \"Payment:\" as the prefix,\n                          \
    \  for example \"Payment:SET-OD\".\n   PaySchemePackaged  : M : See section 6.5.2.\n\
    \    Content\n   Output Parameters\n   -----------------\n   PaySchemePackaged\
    \  : M : See section 6.5.2.\n    Content\n   ContStatus         : M : \"Continue\"\
    \ must be set if there\n                             is no problem.\n"
- title: 7.3.3 Resume Payment Consumer
  contents:
  - "7.3.3 Resume Payment Consumer\n   This API is used to restart a payment transaction\
    \ when the\n   transaction is suspended for some reason such as a time out.  The\n\
    \   last SET Message relevant to this suspended transaction is returned\n   as\
    \ the Response.\n   Input Parameters\n   ----------------\n   ConsumerPayId  \
    \   : M : -\n   WalletId          : O : -\n   PassPhrase        : O : -\n   CallBackFunction\
    \  : O : This is not used in the current version\n                           of\
    \ SET/IOTP.\n   CallBack          : O : This is not used in the current version\n\
    \    LanguageList           of SET/IOTP.\n   Output Parameters\n   -----------------\n\
    \   ContStatus        : M : -\n   PaySchamePackaged : M : See section 8.7.\n \
    \   Content\n"
- title: 7.3.4 Continue Process
  contents:
  - "7.3.4 Continue Process\n   This API is used to pass a SET related message, received\
    \ from the\n   counter party, to the SET Bridge, and accept the next SET message\
    \ as\n   a response.\n   (1) Consumer Side Payment Bridge\n   Input Parameters\n\
    \   ----------------\n   PayId              : M : Set ConsumerPayId\n   WalletId\
    \           : O : -\n   PassPhrase         : O : -\n   PaySchemePackaged  : M\
    \ : See section 8.4.3.\n    Content\n   Output Parameters\n   -----------------\n\
    \   ContStatus         : M : Set \"End\" if SET PRes message is\n            \
    \                received in the PaySchemePackagedContent\n                  \
    \          as the input parameter, otherwise set\n                           \
    \ \"Continue\".\n   PaySchemePackaged  : O : If ContStatus is set \"End\", this\
    \ is not\n    Content                 used.  See 8.4.3.\n   (2) Payment Handler\
    \ Side Payment Bridge\n   Input Parameters\n   ----------------\n   PayId    \
    \          : M : Set PaymentHandlerPayId\n   WalletId           : O : -\n   PassPhrase\
    \         : O : -\n   PaySchemePackaged  : M : See section 8.4.4.\n    Content\n\
    \   Output Parameters\n   -----------------\n   ContStatus         : M : Set \"\
    End\" if SET PRes message is\n                            received in the\n  \
    \                          PaySchemePackagedContent as the\n                 \
    \           output parameter, otherwise set\n                            \"Continue\"\
    .\n   PaySchemePackaged  : M : See section 8.4.4.\n    Content\n"
- title: 7.3.5. Change Process State
  contents:
  - "7.3.5. Change Process State\n   This API is used by the OAC to change the Process\
    \ State of the OPB.\n   For instance, it is used to change the Payment Status\
    \ after a SET\n   Payment Transaction was completed.  When an error or suspend\
    \ happens,\n   this API is also used.\n   (1) Consumer Side Payment Bridge\n \
    \  Input Parameters\n   ----------------\n   PayId              : M : Set ConsumerPayId\n\
    \   ProcessState       : M : -\n   CompletionCode     : M : -\n   ProcessType\
    \        : M : -\n   WalletID           : O : -\n   PassPhrase         : O : -\n\
    \   Output Parameters\n   -----------------\n   ProcessState      : M : -\n  \
    \ CompletionCode    : M : -\n   PercentComplete   : O : See section 8.13.\n  \
    \ xml:lang          : O : -\n   StatusDesc        : O : This field is not specified\
    \ in SET/IOTP.\n"
- title: 7.4 General Inquiry API Calls
  contents:
  - '7.4 General Inquiry API Calls

    '
- title: 7.4.1 Payment Instrument Inquiry
  contents:
  - "7.4.1 Payment Instrument Inquiry\n   This API is not used in the current version\
    \ of SET/IOTP.\n"
- title: 7.4.2 Inquire Pending Payment
  contents:
  - "7.4.2 Inquire Pending Payment\n   This API is used to check whether the payment\
    \ Bridge or its wallet is\n   currently in use, or not.\n   Input Parameters\n\
    \   ----------------\n   WalletID           : O : -\n   Output Parameters\n  \
    \ -----------------\n   PayId              : M : -\n"
- title: 7.4.3 Remove Payment Log
  contents:
  - "7.4.3 Remove Payment Log\n   This API is used both Consumer and Payment Handler.\n\
    \   Input Parameters\n   ----------------\n   PayId              : M : -\n   WallerId\
    \           : O : -\n   Passphrase         : O : -\n   There is no output parameters.\n"
- title: 7.5 Payment Related Inquiry API Calls
  contents:
  - '7.5 Payment Related Inquiry API Calls

    '
- title: 7.5.1 Check Payment Receipt
  contents:
  - "7.5.1 Check Payment Receipt\n   This API is used to check a Payment Receipt.\
    \  However since the\n   current SET specification does not support Receipts,\
    \ SET/IOTP sends\n   its own visual information of a Receipt to the SET Bridge.\n\
    \   Input Parameters\n   ----------------\n   PayId              : M : -\n   WalletId\
    \           : O : -\n   PassPhrase         : O : -\n   PaySchemePackaged  : M\
    \ : See section 8.5.1.\n    Content\n   Output Parameters\n   -----------------\n\
    \   There is no output Parameter.\n"
- title: 7.5.2 Expand Payment Receipt
  contents:
  - "7.5.2 Expand Payment Receipt\n   This expands an IOTP Payment Receipt Component\
    \ packaged data into a\n   form which may be used for display or printing purposes.\n\
    \   Input Parameters\n   ----------------\n   PayId              : M : -\n   WalletId\
    \           : O : -\n   PassPhrase         : O : -\n   PackagedContent    : M\
    \ : See section 8.5.2.\n   Output Parameters\n   -----------------\n   BrandId\
    \            : M : -\n   ProtocolBrandId    : M : -\n   PayInstrumentId    : M\
    \ : -\n   PaySchemePayId     : M : LID_M in the SET PRes message is\n        \
    \                    set.  (The format of this value must\n                  \
    \          be same as SET Initiation.)\n   Amount             : M : Amount * AuthRatio\
    \ (or CapRatio if\n                            available).  CapRatio should be\
    \ the\n                            high priority than AuthRatio.\n   CurrCodeType\
    \       : M : -\n   CurrCode           : M : -\n   PayDirection       : M : -\n\
    \   ProtocolId         : M : -\n   ProtocolTransId    : O : -\n   TimeStamp  \
    \        : M : This value should be used the\n                            Date\
    \ field of MessageWrapper in the\n                            SET PRes message\n\
    \   xml:lang           : O : This is not used in the SET/IOTP.\n   ConsumerDesc\
    \       : O : This is not used in the SET/IOTP.\n   PaymentHandlerDesc : O : This\
    \ is not used in the SET/IOTP.\n   StyleNetLocn       : O : This is not used in\
    \ the SET/IOTP.\n   PaymentProperty    : O : This is not used in the SET/IOTP.\n"
- title: 7.5.3 Inquire Process State
  contents:
  - "7.5.3 Inquire Process State\n   This API is used to check the payment status.\
    \  For example, when the\n   OAC receives a Continue Payment Response API, it\
    \ uses this API if the\n   ContStatus is set to \"End\".  This API can be used\
    \ at anytime.\n   (1) Consumer Payment Bridge\n   Input Parameters\n   ----------------\n\
    \   PayId              : M : Set ConsumerPayId\n   WalletId           : O : -\n\
    \   PassPhrase         : O : -\n   Output Parameters\n   -----------------\n \
    \  ProcessState       : M : -\n   PercentComplete    : O : See 8.13 for the guideline\
    \ of\n                            setting value.\n   CompletionCode      : O :\
    \ See section 8.12.\n   xml:lang           : O : -\n   StatusDesc         : O\
    \ : -\n   PayReceiptNameRefs : O : This is not used in the SET/IOTP.\n   PayReceiptPackConts:\
    \ O : This is not used in the SET/IOTP.\n   (2) Payment Handler Payment Bridge\n\
    \   Input Parameters\n   ----------------\n   PayId              : M : Set PaymentHandlerPayId\n\
    \   WalletId           : O : -\n   PassPhrase         : O : -\n   Output Parameters\n\
    \   -----------------\n   ProcessState       : M : -\n   PercentComplete    :\
    \ O : See section 8.13 for the guideline\n                            of setting\
    \ value.\n   CompletionCode      : O : See section 8.12.\n   xml:lang        \
    \   : O : -\n   StatusDesc         : O : -\n   PayReceiptNameRefs : O : This is\
    \ set \"PRes\".\n   PayReceiptPackConts: O : This is not used in the SET/IOTP.\n"
- title: 7.5.4 Start Payment Inquiry
  contents:
  - "7.5.4 Start Payment Inquiry\n   This API call returns the SET InqReq Message\
    \ in order to process a\n   SET Inquiry.\n   Input Parameters\n   ----------------\n\
    \   ConsumerPayId      : M : -\n   WalletId           : O : -\n   Passphrase \
    \        : O : -\n   Output Parameters\n   -----------------\n   PaySchemePackaged\
    \  : M:  Packaged Data to include SET\n    Content                 InqReq message.\
    \  See section 8.6.\n"
- title: 7.5.5 Inquire Payment Status
  contents:
  - "7.5.5 Inquire Payment Status\n   The Payment Handler uses this API request for\
    \ Consumer initiated\n   inquiry processing.  In SET/IOTP, the Payment Handler's\
    \ SET Bridge\n   receives a SET InqReq message in an InquirePaymentDetail API.\
    \  The\n   SET Core processes it, and creates a SET InqRes message.  The\n   response\
    \ encapsulates the SET InqRes message.\n   Input Parameters\n   ----------------\n\
    \   PaymentHandlerPayId: M : -\n   WalletID           : O : -\n   PassPhrase \
    \        : O : -\n   PaySchemePackaged  : M : See section 8.6.\n    Content\n\
    \   Output Parameters\n   -----------------\n   PaymentHandlerPayId: M : -\n \
    \  ProcessState       : M : -\n   CompletionCode     : O : -\n   xml:lang    \
    \       : O : -\n   StatusDesc         : O : -\n   PaySchamePackaged  : M : See\
    \ section 8.6.\n    Content\n"
- title: 8. SET dependent Process
  contents:
  - "8. SET dependent Process\n   This chapter describes the core concepts for the\
    \ development of\n   SET/IOTP.\n"
- title: 8.1 Relationships between them for IOTP Purchase/Cash Advances
  contents:
  - "8.1 Relationships between them for IOTP Purchase/Cash Advances\n   This document\
    \ describes SET Initiation Messages based on the [SET\n   EIG].  Merchant sends\
    \ the 1st SET Initiation Message to the Consumer\n   in order to activate a SET\
    \ payment transaction.  After this message,\n   the other SET Initiation Messages\
    \ (JPO, etc.) and the SET payment\n   Transaction (SET PinitReq message, etc.)\
    \ are exchanged between the\n   Consumer and the Payment Handler.\n   +------------+\
    \                 +----------+\n   |            |                 |          |\n\
    \   |            |<----------------| Merchant |\n   |            | 1st SET InitMsg\
    \ |          |\n   |            |                 +----------+\n   |  Consumer\
    \  |                 +----------+\n   |            |                 |       \
    \   |\n   |            |<--------------->|   P.H.   |\n   |            | Other\
    \ SET Init/ |          |\n   +------------+ SET Message     +----------+\n   \
    \   Figure 11 Relationship between IOTP Messages and SET Messages\n   When the\
    \ Merchant sends any data (e.g., SET SaleDetail) except a SET\n   Related messages\
    \ (e.g., SET PinitRes message), it can send it by two\n   different methods:\n\
    \   (a) The Merchant sends the data via the Consumer.\n   (b) The Merchant sends\
    \ the data out-of-band.\n   In case (a), the Merchant sends the data by encapsulating\
    \ it into\n   TradingRoleData.PackagedContent inside the Offer Response Block\
    \ sent\n   to Consumer.  The data is copied to the Payment Request Block and\n\
    \   sent to the Payment Handler.  This case assumes that the format of\n   the\
    \ data is already agreed upon between the Merchant and the Payment\n   Handler.\n\
    \   This document does not specify case (b).\n"
- title: 8.2 Definition of Identifiers
  contents:
  - '8.2 Definition of Identifiers

    '
- title: 8.2.1 Definition of BrandId
  contents:
  - "8.2.1 Definition of BrandId\n   BrandId should be used registered identification\
    \ for IANA.  Now, the\n   following BrandIds have registered:\n   Amex, Dankort,\
    \ JCB, Maestro, MasterCard, MICOS, VISA, atCredits,\n   EZpay, GeldKarte, Mondex,\
    \ paybox\n"
- title: 8.2.2 Definition of ProtocolBrandId
  contents:
  - "8.2.2 Definition of ProtocolBrandId\n   ProtocolBrandID is defined as follows:\n\
    \   <Premise> SET BrandID is defined as brand[:Product]. ([] is indicated\n  \
    \ as optional.)  In SET, The brandID is a brand name, which corresponds\n   to\
    \ the brand of the payment card.  Additionally the Product is a\n   product name,\
    \ which is defined as the type of product within the\n   specific brand such as\
    \ Gold Card.\n   Set IOTP ProtocolBrandId as follows:\n      brand:Product:PCN\n\
    \   In here,\n   o  The brand above is the same as the sub data of SET BrandID,\
    \ as\n      Brand Name (brand), defined in SET.\n   o  Product above is the same\
    \ as the sub data of SET BrandID, as\n      Product Name (Product), defined in\
    \ SET.\n   o  PCN above is the Promotional Card Name, and is written in the SET\n\
    \      Certificates.\n      Example:\n      Visa:Gold:WalMart\n   Since SET Brand\
    \ ID has a colon between brand and Product, the two\n   colons should be able\
    \ to delimit Brand, Product, and PCN.\n   Product and PCN can omit if necessary.\
    \  For the detail of these\n   definitions are follows:\n   (1) The case of omitting\
    \ Product\n      Definition:   brand::PCN\n      Example:      VISA::UC_VISA\n\
    \   (2) The case of omitting PCN\n      Definition:  brand:Product\n      Example:\
    \     VISA:Gold\n   (3) The case of omitting Product, PCN\n      Definition: \
    \ brand\n      Example:     VISA\n   Invalid Examples:\n      VISA:Gold:\n   \
    \   VISA::\n      VISA:\n      ProtocolBrandId which there is no brand.\n"
- title: 8.2.3 Definition of ProtocolId
  contents:
  - "8.2.3 Definition of ProtocolId\n   Protocolld defines as follows:\n      ProtocolId\
    \ := SETName + Version\n      SETName := \"SET\"\n      Version := \"v\" + version\
    \ + \".\" + revision\n   Where the version is number matching a major SET version,\
    \ and the\n   revision is the number matching a minor SET revision.\n      Example:\n\
    \      \"SETv1.0\",\"SETv2.0\"\n   NOTE: In the current version of SET/IOTP, \"\
    SETv1.0\" is fixed as\n   ProtocolId.\n"
- title: 8.2.4 Relationship between Ids
  contents:
  - "8.2.4 Relationship between Ids\n   ProtocolBrandId must be unique and depends\
    \ on BrandId and ProtocolId.\n   The followings are map among BrandId and ProtocolId,\
    \ which have\n   registered in IANA, and ProtocolBrandId.\n      BrandId     \
    \ ProtocolId   ProtocolBrandId\n      -----------------------------------------\n\
    \      Amex         SETv1.0      Amex\n      Dankort      SETv1.0      Dankort\n\
    \      JCB          SETv1.0      JCB\n      MasterCard   SETv1.0      MasterCard\n\
    \      Nicos        SETv1.0      Amex\n      VISA         SETv1.0      VISA\n\
    \   Regarding to the BrandIds except above, the BrandId registrant (e.g.,\n  \
    \ credit card company) MUST register it in order to be able to map one\n   to\
    \ one between ProtocolBrandId and the pair of BrandId and\n   ProtocolId.\n"
- title: 8.3 Process prior to Payment
  contents:
  - '8.3 Process prior to Payment

    '
- title: 8.3.1 FindAcceptedPaymentProtocol Function
  contents:
  - "8.3.1 FindAcceptedPaymentProtocol Function\n   (1) Parameter of PayProtocolPackagedContent\n\
    \      Name        : O : This is not used in SET/IOTP.\n      Content     : M\
    \ : This should be set \"PCDATA\".\n      Transform   : M : This is set \"BASE64\"\
    .\n      ContentData : M : SET specific protocol data.  Includes data\n      \
    \                  that is used to create the 1st SET Initiation\n           \
    \             Message that is not contained in other\n                       \
    \ IOTP elements.\n   (2) Parameter in the ContentData\n   Parameters of ContentData\
    \ are described below.  The Field Values\n   follow the [SET EIG].\n      Field\
    \                      Required\n      ------------------------------------\n\
    \      MIME-Version               Optional\n      Content-Transfer-Encoding  Mandatory\n\
    \      SET-Initiation-Type        Mandatory\n      SET-LID-M                 \
    \ Optional\n      SET-InstallTotalTrance     Optional\n      SET-Recurring   \
    \           Optional\n      SET-Ext-OID                Optional\n      SET-Ext-Data\
    \               Optional\n      SET-Ext-Mandatory          Optional\n      SET-Echo-In-Response\
    \       Optional\n      SET-Echo-In-Request        Optional\n   For Example:\n\
    \      MIME-Version: 1.0\n      Content-Transfer-Encoding: Binary\n      SET-Initiation-Type:\
    \ Payment-Initiation\n      SET-Recurring: 31 19960223\n      SET-Service-URL:\
    \ http://www.custcare.com/index.html\n      SET-LID-M: 515A533033363632594B\n\
    \   Note: The contents in ProtoclPackagedContent must be US-ASCII and\n   encoded\
    \ by BASE64.\n"
- title: 8.3.2 FindPaymentInstrument Function
  contents:
  - "8.3.2 FindPaymentInstrument Function\n   (1) Information of PayInstrument\n \
    \  Returns a list of Payment Instrument IDs related to the BrandId and\n   ProtocolBrandId.\
    \  In this document, BrandId and ProtocolId are\n   defined in section 8.2.\n\
    \   In this document, Brand has two recognized meanings in SET/IOTP, as\n   follows:\n\
    \   Brand as Primary Brand:\n      The Primary Brand is the Brand which is defined\
    \ as brand in SET,\n      such as VISA, MasterCard, Nicos.\n   Brand as Dual Brand\
    \ or Promotional Brand:\n      The Dual Brand is the payment instrument which\
    \ has two Brand, such\n      as UC-VISA (UC Card and VISA Card) This style is\
    \ popular in Japan.\n      A Promotional Brand means that, if the Consumer pays\
    \ with that\n      Brand, then the Consumer will receive some additional benefit\
    \ such\n      as discount or frequent flyer point.\n   1. ProtocolBrandId as a\
    \ Primary Brand\n      Example:\n      \"MasterCard\", \"MasterCard::UC\", \"\
    MasterCard:Gold:\" and\n      \"MasterCard::WalMart\" are all MasterCard Brands.\n\
    \   2. ProtocolBrandId as a Dual Brand or a Promotional Brand\n      Example:\n\
    \      \"MasterCard::UC\" is Dual Brand of \"MasterCard\" and \"UC\".\n      \"\
    SET:MasterCard::WalMart\" is Promotional Brand of MasterCard-\n      WallMart.\n\
    \   The SET Bridge receives the ProtocolBrandId from the OAC in the\n   FindPaymentInstrument\
    \ Function,\n   (1) If the accepted ProtocolBrandId is XXX:YYY\n      The SET\
    \ Related Module searches for ProtocolBrandIds with the\n      string \"XXX:YYY:*\"\
    \ (* is wild card), the corresponding\n      PaymentInstrumentIds of all ProtocolBrandIds\
    \ with the matching\n      Primary Brand (regardless of also being a Dual Brand\
    \ or\n      Promotional Brand) will be returned to the OAC, for the Consumer\n\
    \      to select from.\n   (2) If the accepted ProtocolBrandId is XXX:YYY:ZZZ\n\
    \      The SET Related Module searches for ProtocolBrandIDs with the\n      string\
    \ \"XXX:YYY:ZZZ\", only the corresponding PaymentInstrumentIds\n      of the ProtocolBrandIds\
    \ that match the Dual Brand or Promotional\n      Brand will be returned to OAC,\
    \ for the Consumer to select from.\n   Example:\n      Assume ProtocolBrandIds\
    \ are correspond to PaymentInstrumentIds in\n      the SET Bridge as follows,\n\
    \      ProtocolBrandId        PaymentInstrumentId\n      ------------------------------------------\n\
    \      MasterCard             1\n      MasterCard::UC         2\n      MasterCard::WallMart\
    \   3\n      VISA::UC               4\n      If the SET Bridge receives a ProtocolBrandId\
    \ as \"MasterCard\" in\n      the FindPaymentInstrument Function, the SET Bridge\
    \ will return\n      \"1\",\"2\", and \"3\".  However, if the SET Bridge receives\
    \ a\n      ProtocolBrandId as \"MasterCard::UC\" to OAC, SET Bridge will\n   \
    \   returns only \"2\".\n"
- title: 8.3.3 GetPaymentInitializationData Function
  contents:
  - "8.3.3 GetPaymentInitializationData Function\n   (1) Create TradingRolePackagedContent\n\
    \   If necessary, The SET Related Module generates\n   TradingRolePackagedContent\
    \ corresponded to the received\n   ReceiverOrgID. The ContentData of TradingRolePackagedContent\
    \ is the\n   information which the Payment Handler needs to process the SET\n\
    \   Transaction (for example, the SET SaleDetail. and the SET OD).  The\n   ContentData,\
    \ Content, and the Transform must be agreed upon between\n   the Merchant and\
    \ the Payment Handler beforehand.\n   The Name Attribute of the packaged contents\
    \ must include \"Payment:\"\n   as the prefix, for example \"Payment:SET-OD\"\
    .  If there is no\n   PackagedContent corresponding to ReceiverOrgID, such that\
    \ the SET\n   Related Module does not need to create the PackagedContent, the\n\
    \   TradingRolePackagedContent is not created.\n   Parameters in TradingRolePackagedContent\n\
    \   ----------------------------------------\n   Name        : O : This is not\
    \ specified in the current SET/IOTP.\n   Content     : M : Should be identical\
    \ between the Payment\n                     Handler and the Merchant.\n   Transform\
    \   : M : Should be identical between the Payment\n                     Handler\
    \ and the Merchant.\n   ContentData : M : Element Data for the Payment Handler\
    \ to\n                     process the SET Transaction.  Should be\n         \
    \            identical between the Payment Handler and\n                     the\
    \ Merchant.\n"
- title: 8.4 Process of Payment
  contents:
  - '8.4 Process of Payment

    '
- title: 8.4.1 StartPaymentConsumer Function
  contents:
  - "8.4.1 StartPaymentConsumer Function\n   (1) Process of the 1st SET Initiation\
    \ Message\n   Since there are similar items between the SET Initiation Message\n\
    \   Fields and IOTP Elements, IOTP elements can be used for the\n   corresponding\
    \ SET Initiation Fields.  Other SET Initiation Fields,\n   except URL information\
    \ (for detail, see below), is encapsulated in\n   the PayProtocolPackagedContent.\n\
    \   This document does not specify how the SET Related Module implements\n   the\
    \ 1st SET Initiation Process.\n   The following table shows the list of SET Initiation\
    \ Fields that\n   corresponds to IOTP Elements.\n   SET Initiation Field     \
    \   IOTP Element (in TPO.Brandlist)\n   ---------------------------------------------------------------\n\
    \   SET-Version                 Consumer selected ProtocolId\n   SET-Brand   \
    \                Consumer selected ProtocolBrandId\n   SET-Amount            \
    \      Consumer selected Amount Data in\n                               CurrencyAmount.\n\
    \   --------------------------------------------------------------\n   SET Initiation\
    \ Field        IOTP Element (in OfferResp)\n   --------------------------------------------------------------\n\
    \   Order Description          The hash data of ContentData of\n             \
    \                       PackagedContent of Order Component.\n   (b) SET-Version:\n\
    \   SET-Version can be corresponded to ProtocolId.  The version number\n   appears\
    \ after the \"v\" for the SET-Version.\n   ProtocolId -> _______\n           \
    \      SETv1.0\n                     ~~~<- SET-Version\n      Figure 12 ProtocolId\
    \ vs SET-Version\n   (c) SET-Brand:\n   SET-Brand can be corresponded to ProtocolBrandId.\n\
    \   (d) SET-PurchAmt:\n   It is necessary to adjust the format of the Amount between\
    \ IOTP and\n   SET, since IOTP and SET use different syntax.\n   Assumption:\n\
    \   o  In SET/IOTP, The \"ISO4217-A\" (the currency code which is\n      represented\
    \ by three alphabet, such as \"USD\") is mandatory.\n   o  Consumer Side SET Related\
    \ Module should have a mapping table\n      between \"ISO4217-A\" and \"ISO4217-N\"\
    \ (the currency code which is\n      represented by three digit, such as \"840\"\
    ).\n   (d) -1 Content of the SET-PurchAmt\n   The content of the SET-PurchAmt\
    \ is as follows:\n      SET PurchAmt: currency amount amtExp10\n   For a description\
    \ see [SET] Book 2, page 299.  For example, $129.50\n   is represented by \"840\
    \ 12950 -2\".  In this case, the corresponding\n   values for the \"currency\"\
    , \"amount\" and \"amtExp10\" are \"840\", \"12950\"\n   and \"-2\" respectively.\n\
    \   (d) -2 Content of IOTP Amount Elements\n   The content of the three IOTP amount\
    \ elements consist of the\n   following: Amount, CurrCodeType and CurrCode.  For\
    \ a description of\n   each, see [RFC 2801].  For example, $129.50 is represented\
    \ by the\n   following:\n      CurrCodeType=\"ISO4217-A\"\n      CurrCode=\"USD\"\
    \n      Amount=\"129.50\"\n      (d) -3 Example of how-to-translate\n      The\
    \ one-to-one mapping between the IOTP format and the SET format\n      is very\
    \ simple.  This example of sequence below uses the example\n      of IOTP amount\
    \ Element above.\n   1) Translate from IOTP CurrCode (ISO4217-A) to SET currency\
    \ (ISO-\n      4217-N).  For example, if CurrCode=\"USD\", then the value of\n\
    \      currency is \"840\".\n   2) Calculate how many decimal places are represented\
    \ in the Amount.\n      For example, if Amount=\"129.50\", there are \"2\" decimal\
    \ places.\n   3) [The number of decimal places] *( -1) corresponds to the SET\n\
    \      amtExp10.  In the above case, SET amtExp10 = 2 * (-1) = -2.\n   4) 10^[The\
    \ number of the Amount's decimal places] * Amount\n      corresponds to the SET\
    \ amount.  In the above example, SET amount =\n      10^2 * 129.50 = 12950.\n\
    \   5) Concatenate three integers and use white spaces as a delimiter.\n   Finally,\
    \ in the above case, the SET PurchAmt is represented as \"840\n   12950 -2\".\n\
    \   (e) SET OD (Order Description) vs. IOTP Order Information\n   In the IOTP,\
    \ the OAC handles the Order Information, such as display\n   use, as SET uses\
    \ the Order Information.  Payment Handler does not\n   know the actual Order Information\
    \ because the Merchant and Payment\n   Handler may exist in the separate domains.\
    \  However, Payment Handler\n   needs to get the SET OD from Merchant via the\
    \ Consumer or directly\n   because Payment Handler needs the SET OD to create\
    \ 2nd SET Initiation\n   message and after.  In this situation, the Merchant should\
    \ not pass\n   the actual order information to the Payment Handler because the\
    \ order\n   information may be considered private data.  Therefore, SET/IOTP\n\
    \   defines SET OD as the hash of IOTP Order Information.  The hash\n   algorithm\
    \ must be SHA1.\n   But the Order Component may be included two or more Packaged\
    \ Content\n   (see [RFC 2801]).  Therefore SET/IOTP specifies to create hash as\n\
    \   follows:\n   (e) -1. If the Name attribute does not have the Name attribute,\
    \ such\n   that the Order Component have only one Packaged Content, hash the\n\
    \   Contents Data using SHA1 simply and be encoded by BASE64.\n   (e) -2. Otherwise,\
    \ such that there exists the Name attribute, sort\n   the Packaged Contents in\
    \ the UTF-16 character code order of Name\n   attribute and hash the Content Data\
    \ using SHA1 and concatenate them\n   in proper sequence, then hash it using SHA1\
    \ again and be encoded by\n   BASE64.\n   NOTE:\n   To avoid different character\
    \ encodings between applications, in this\n   document, SET OD MUST be constructed\
    \ from the ContentData in\n   OrderPackagedContent as follows:\n   (1) Convert\
    \ it to network byte ordered Unicode encoding data.\n   (2) Hash (1) using SHA1\n\
    \   (3) Convert (2) to BASE64 US-ASCII data\n   Therefore, \"Content-Type\",\"\
    charset\" MUST be \"text/plain\",\"us-ascii\"\n   respectively when SET Initiation\
    \ message is constructed.\n   (f) SET-***-URL vs. IOTP Net Location\n   In IOTP,\
    \ the OAC handles location data therefore the OAC does not\n   need to pass net\
    \ location data on to the OPB.  However, some vender\n   implemented consumer\
    \ SET/IOTP wallets may need the URL information to\n   process the SET Initiation.\
    \  Thus, if necessary, the Consumer's SET\n   Related Module must set appropriate\
    \ URL data to SET-***-URL.\n   (2) Create the next SET related message\n   Generate\
    \ SET related message (SET PInitReq or SET Initiation\n   Response) at the SET\
    \ Related Module, to be sent to the Payment\n   Handler.\n   (3) Error check of\
    \ the next SET related message.\n   If SET related message which is created in\
    \ (2) is SET Initiation\n   Response and includes any error in it, SET Related\
    \ Module creates an\n   ErrorResponse message with ErrorCode to \"EncapProtErr\"\
    \ and the\n   Severity to \"HardError\" and sent it to the OAC.\n   (4) Create\
    \ PaySchemePackagedContent\n   The followings are the parameter of PaySchemePackagedContent\
    \ in\n   StartPaymentConsumerResponse.\n   ContentData : M : SET Related Message\
    \ which is encoded by\n                     BASE64. (e.g., SET PinitRes message\
    \ or\n                     SET Initiation Response Message)\n   Name        :\
    \ O : This is not used in the current SET/IOTP.\n   Content     : M : This field\
    \ should be set to \"PCDATA\".\n   Transform   : M : This must be set \"BASE64\"\
    .\n   (5) Store of the Payment Information\n   SET Bridge should store the following\
    \ in the DataBase:\n   o  ConsumerPayId\n   o  PaySchemePackagedContent\n   o\
    \  ContStatus\n   o  ContentSoftwareId (corresponding to the PaySchemePackagedContent)\n\
    \   o  ProcessState\n"
- title: 8.4.2 StartPaymentPaymentHandler Function
  contents:
  - "8.4.2 StartPaymentPaymentHandler Function\n   (1) Process for TradingRoleData\n\
    \   SET Bridge must processes appropriately, for example pass it to the\n   SET\
    \ Core, if there exists the TradingRolePackagedContent as the input\n   Parameter.\n\
    \   (2) SET Specific Process\n   The SET Related Module processes the SET Initiation\
    \ Response or the\n   SET Transaction (SET PInitReq).  In addition, the SET Related\
    \ Module\n   generates a message (the next SET Initiation Message or SET PInitRes)\n\
    \   corresponding to the results of the processed message.  This message\n   will\
    \ be sent to the Consumer.\n   (3) Error check of the next SET related message.\n\
    \   If SET related message which is created in (2) includes any error,\n   SET\
    \ Related Module create an ErrorResponse message with ErrorCode to\n   \"EncapProtErr\"\
    \ and the Severity to \"HardError\" and sent it to the\n   OAC.\n   (4) Generate\
    \ PaySchemePackagedContent\n   PaySchemePackagedContent which Encapsulate the\
    \ SET Initiation Message\n   or SET PInitRes into ContentData and generate the\n\
    \   PaySchemePackagedContent.  The Parameters of PaySchemePackagedContent\n  \
    \ as Output is as follows:\n   ContentData : M : SET Related Message which is\
    \ encoded by\n                     BASE64 (e.g., SET PinitRes message or\n   \
    \                  SET Initiation Response Message).\n   Name        : O : This\
    \ is not used in the current SET/IOTP.\n   Content     : M : This field should\
    \ be set to \"PCDATA\".\n   Transform   : M : This must be set \"BASE64\"\n"
- title: 8.4.3 ContinueProcess Function (Consumer Side)
  contents:
  - "8.4.3 ContinueProcess Function (Consumer Side)\n   (1) SET Specific Process\n\
    \   The Parameters of PaySchemePackagedContent as Input is as follows:\n   ContentData\
    \ : M : SET Related Message which is encoded by\n                     BASE64 (e.g.,\
    \ SET PinitRes message,\n                     SET PRes message or SET Initiation\n\
    \                     Response Message).\n   Name        : O : This is not used\
    \ in the current SET/IOTP.\n   Content     : M : This field should be set to \"\
    PCDATA\".\n   Transform   : M : This must be set \"BASE64\"\n   SET Related Module\
    \ processes the SET Related Message in the\n   PaySchemePackagedContent, then\
    \ SET Related Message corresponding to\n   the processed message is created if\
    \ necessary.\n   (2) SET Related Message Error Check\n   If SET related message\
    \ which is created in (2) includes any error,\n   SET Related Module create an\
    \ ErrorResponse message with ErrorCode to\n   \"EncapProtErr\" and the Severity\
    \ to \"HardError\" and sent it to the\n   OAC.\n   (3) Create PaySchemePackagedContent\n\
    \   The followings are the parameter of PaySchemePackagedContent in\n   ContinueProcessResponse.\n\
    \   ContentData : M : SET Related Message which is encoded by\n              \
    \       BASE64 (e.g., SET PinitReq message,\n                     SET PReq message\
    \ or SET Initiation\n                     Response Message).\n   Name        :\
    \ O : This is not used in the current SET/IOTP.\n   Content     : M : This field\
    \ should be set to \"PCDATA\".\n   Transform   : M : This must be set \"BASE64\"\
    .\n   If the ContentData which has received from Payment Handler is SET\n   PRes\
    \ message, this data is not created.\n"
- title: 8.4.4 ContinueProcess Function (Payment Handler Side)
  contents:
  - "8.4.4 ContinueProcess Function (Payment Handler Side)\n   (1) Brand Integrity\
    \ Check between IOTP Elements and SET Elements\n   Since the Consumer sets the\
    \ Amount and Brand in the SET Message,\n   based on the IOTP message, it might\
    \ be altered when the IOTP message\n   is copied to the SET message.  Thus, the\
    \ Payment Handler needs to\n   check the Elements in IOTP components (Payment,\
    \ etc.) and the\n   Elements in the SET message to make sure they are consistent.\
    \  The\n   IOTP Brand specified by the Merchant should correspond to the Brand\n\
    \   used in the SET payment.\n   The Brand Integrity check sequence is as follows:\n\
    \   (a) After receiving the SET PReq message, check the Consumer selected\n  \
    \ Brand information (e.g., ProtocolBrandId) in the IOTP Payment Request\n   against\
    \ information in the SET certificate in the SET PReq message.\n   (b) If they\
    \ do not match, return a SET Bridge Level Error\n   (Severity=\"HardError\", ErrorCode=\"\
    AttNotValid\" and Names=\"BrandId\").\n   Additionally, the SET PReq message signature\
    \ must be verified with\n   the SET CardHolder's certificate.  (This is done during\
    \ a normal SET\n   Transaction.)\n   NOTE: This integrity check is necessary evenif\
    \ There is no\n   Promotional Card Name in the ProtocolBrandId because SET may\
    \ have\n   selected the MasterCard even though IOTP has selected the VISA.\n \
    \  (2) SET Related Process\n   Encapsulate the SET related Message (SET Initiation\
    \ Message or SET\n   Transaction Message) in to Content Data of PaySchemePackagedContent\n\
    \   and send it to the Sender.\n   The followings are the parameters of PaySchemePackagedContent\
    \ as\n   output.\n   ContentData : M : SET Related Message which is encoded by\n\
    \                     BASE64 (e.g., SET PinitReq message,\n                  \
    \   SET PReq message or SET Initiation\n                     Response Message).\n\
    \   Name        : O : This is not used in the current SET/IOTP.\n   Content  \
    \   : M : This field should be set to \"PCDATA\".\n   Transform   : M : This must\
    \ be set \"BASE64\".\n   (3) SET Related Message Error Check\n   If SET related\
    \ message which is created in (2) includes any error,\n   SET Related Module create\
    \ an ErrorResponse message with ErrorCode to\n   \"EncapProtErr\" and the Severity\
    \ to \"HardError\" and sent it to the\n   OAC.\n   If SET related message which\
    \ is created in (2) is SET PRes message,\n   and its message includes except:\n\
    \   (a) CompletionCode in SET PRes message is \"authorizationPerformed\"\n   and\
    \ AuthCode is \"Approved\" or (b) CompletionCode in SET PRes message\n   is \"\
    capurePerformed\" and CapCode \"Success\",\n   SET Related Module create ErrorResponse\
    \ message with ErrorCode to\n   \"BusinessError\"and the Severity to \"HardError\"\
    \ and sent it to the\n   OAC.\n   (4) Create PaySchemePackagedContent\n   The\
    \ followings are the parameter of PaySchemePackagedContent in\n   ContinueProcessResponse.\n\
    \   ContentData : M : SET Related Message which is encoded by\n              \
    \       BASE64 (e.g., SET PinitRes message,\n                     SET PRes message\
    \ or next SET Initiation\n                     Message).\n   Name        : O :\
    \ \"PRes\" only if ContentData includes\n                     SET PRes message,\
    \ otherwise this is\n                     not used in the current SET/IOTP.\n\
    \   Content     : M : This field should be set to \"PCDATA\".\n   Transform  \
    \ : M : This must be set \"BASE64\".\n   If ContentData includes the SET PRes\
    \ message, ContStatus MUST be\n   \"End\".\n"
- title: 8.4.5 InquireProcessState Function
  contents:
  - "8.4.5 InquireProcessState Function\n   (1) Setting ProcessState\n   Values for\
    \ the ProcessState are described in section 8.9.2.\n   (2) Setting CompletionCode\n\
    \   Set to \"Unspecified\" when a SET Business Failure has occurred, and\n   set\
    \ StatusDesc to the value corresponding to AuthCode or CapCode.\n   (3) Setting\
    \ StatusDesc\n   The values for PayStatusDesc are not specified in the SET/IOTP.\n\
    \   (4) Create PayReceiptNameRefs\n   Set to \"PRes\" in the PayReceiptNameRefs\n"
- title: 8.5 Payment Receipt
  contents:
  - '8.5 Payment Receipt

    '
- title: 8.5.1 CheckPayReceipt Function
  contents:
  - "8.5.1 CheckPayReceipt Function\n   SET Related Module does not check the Payment\
    \ Receipt Information\n   especially, sends the general response message as long\
    \ as valid\n   request message.\n   The Parameters of PayReceiptPackagedContent\
    \ are followings:\n   Name        : O : This MUST be set \"PRes\"\n   Content\
    \     : M : This field should be set to \"PCDATA\".\n   Transform   : M : This\
    \ must be set \"BASE64\".\n   ContentData : M : SET PRes message which is encoded\
    \ by BASE64.\n"
- title: 8.5.2 ExpandPayReceipt Function
  contents:
  - "8.5.2 ExpandPayReceipt Function\n   (1) PayReceiptPackagedContents\n   The Parameters\
    \ of PayReceiptPackagedContent are as follows:\n   Name        : O : This MUST\
    \ be set \"PRes\"\n   Content     : M : This field should be set to \"PCDATA\"\
    .\n   Transform   : M : This must be set \"BASE64\".\n   ContentData : M : SET\
    \ PRes message which is encoded by BASE64.\n   (2) Get the current status information\n\
    \   SET Related Module gets out the following element from Data Base\n   using\
    \ ConsumerPayId, PaymentHandlerPayId as keys.\n   o  BrandId\n   o  ProtocolBrandId\n\
    \   o  PayInstrumentId\n   o  Amount\n   o  CurrCodeType\n   o  CurrCode\n   o\
    \  PayDirection\n   (3) Get the SET Data\n   SET Related Module gets the following\
    \ data from SET PRes message\n   which take as the Request Message.\n   (a) Date\
    \ Field in the MessageWrapper Date field between SET and IOTP\n   is slightly\
    \ different.  The different things are as follows:\n   o  There is no TimeZone\
    \ in the Date field of SET.\n   o  Second and Milli-second can be omitted in the\
    \ Date field of SET\n   Therefore, SET Related Module needs to compensate the\
    \ Date\n   information when TimeStamp field is set.\n   (b) AuthRatio in SET PRes\
    \ message.  (CapRatio is high priority than\n   AuthRatio if available.)\n   (c)\
    \ LID_M in SET PRes message.  (The style of this value is the same\n   as it of\
    \ SET Initiation message.)\n"
- title: 8.6 Status Inquiry
  contents:
  - "8.6 Status Inquiry\n   In SET/IOTP, SET Inquiry Initiation is not supported (i.e.,\
    \ omitted).\n   SET Inquiry Messages are embedded in the PaySchemeData element\
    \ in\n   IOTP Inquiry Messages.\n   The Parameters of PaySchemePackagedContent\
    \ in\n   StartPaymentInquiryResponse are follows:\n   Name        : O : This is\
    \ not used in the SET/IOTP.\n   Content     : M : This field should be set to\
    \ \"PCDATA\".\n   Transform   : M : This must be set \"BASE64\".\n   ContentData\
    \ : M : SET InqReq message which is encoded by BASE64.\n   The Parameters of PaySchemePackagedContent\
    \ in InqurePaymentStatus are\n   follows:\n   Name        : O : This is not used\
    \ in the SET/IOTP.\n   Content     : M : This field should be set to \"PCDATA\"\
    .\n   Transform   : M : This must be set \"BASE64\".\n   ContentData : M : SET\
    \ InqReq message which is encoded by BASE64.\n   The Parameters of PaySchemePackagedContent\
    \ in\n   InquirePaymentStatusResponse are follows:\n   Name        : O : This\
    \ is not used in the SET/IOTP.\n   Content     : M : This field should be set\
    \ to \"PCDATA\".\n   Transform   : M : This must be set \"BASE64\".\n   ContentData\
    \ : M : SET InqRes message which is encoded by BASE64.\n   The Parameter of PaySchemePackagedContent\
    \ in ContinueProcess are\n   follows:\n   Name        : O : This is not used in\
    \ the SET/IOTP.\n   Content     : M : This field should be set to \"PCDATA\".\n\
    \   Transform   : M : This must be set \"BASE64\".\n   ContentData : M : SET InqRes\
    \ message which is encoded by BASE64.\n"
- title: 8.7 Resume Process
  contents:
  - "8.7 Resume Process\n   The Parameter of PaySchemePackagedContent in\n   RequmePaymentConsumerResponse\
    \ are as follows:\n   Name        : O : This is not used in the SET/IOTP.\n  \
    \ Content     : M : This field should be set to \"PCDATA\".\n   Transform   :\
    \ M : This must be set \"BASE64\".\n   ContentData : M : SET Related Message which\
    \ is encoded by\n                     BASE64 (e.g., SET PinitRes message\n   \
    \                  or SET Initiation Response Message).\n"
- title: 8.8 SET Scheme Specific Authentication on IOTP
  contents:
  - "8.8 SET Scheme Specific Authentication on IOTP\n   IOTP authentication, which\
    \ uses the SET Scheme, is not used in\n   SET/IOTP.\n"
- title: 8.9 SET Bridge ProcessState
  contents:
  - '8.9 SET Bridge ProcessState

    '
- title: 8.9.1 SET Bridge ProcessState of Consumer
  contents:
  - "8.9.1 SET Bridge ProcessState of Consumer\n   No Status ----> InProgress    :\
    \ When StartPaymentConsumer Function\n                                   is called\n\
    \   InProgress ---> InProgress    : When ContinueProcess Function\n          \
    \                         is called\n                                 : When ChangeProcessState\
    \ Function\n                                   (ProcessState=\"Failed\") is called\n\
    \   InProgress ---> ProcessError  : When ChangeProcessState Function\n       \
    \                            (ProcessState=\"ProcessError\") is\n            \
    \                       called\n                                 : The Technical\
    \ Error (Hard Error)\n                                   is occurred in SET Bridge\n\
    \   InProgress ---> CompletedOK   : When ChangeProcessState Function\n       \
    \                            (ProcessState=\"CompletedOK\") is\n             \
    \                      called\n   InProgress ---> Failed        : When ChangeProcessState\
    \ Function\n                                   (ProcessState=\"failed\") is called\n\
    \                                 : The Business Error is occurred\n         \
    \                          in SET Bridge\n   InProgress ---> Suspended     : When\
    \ ChangeProcessState Function\n                                   (ProcessState=\"\
    Suspended\") is\n                                   called\n                 \
    \                : ErrorCode=\"ResumeRequired\" is\n                         \
    \          is occurred.\n   Suspend ---> InProgress       : ResumePaymentConsumer\
    \ Function\n                                   is called\n   Suspend ---> ProcessError\
    \     : When ChangeProcessState Function\n                                   (ProcessState=\"\
    ProcessError\") is\n                                   called (the Technical Error\
    \ is\n                                   occurred prior to ResumePayment-\n  \
    \                                 Consumer Function call)\n                  \
    \               : The Technical Error (Hard Error)\n                         \
    \          is occurred in SET Bridge (the\n                                  \
    \ Technical Error is occurred while\n                                   ResumePaymentConsumer\
    \ is calling)\n"
- title: 8.9.2 SET Bridge ProcessState of Payment Handler
  contents:
  - "8.9.2 SET Bridge ProcessState of Payment Handler\n   No Status ----> InProgress\
    \    : When StartPaymentPaymentHandler\n                                   is\
    \ called\n   InProgress ---> InProgress    : When ContinueProcess Function\n \
    \                                  is called\n                               \
    \  : When ChangeProcessState Function\n                                   (ProcessState=\"\
    Failed\") is called\n   InProgress ---> ProcessError  : When ChangeProcessState\
    \ Function\n                                   (ProcessState=\"ProcessError\"\
    ) is\n                                   called\n                            \
    \     : The Technical Error (Hard Error)\n                                   is\
    \ occurred in SET Bridge\n                                 : SET Error Message\
    \ is occurred\n   InProgress ---> CompletedOK   : When SET Transaction is completed.\n\
    \   InProgress ---> Failed        : When ChangeProcessState Function\n       \
    \                            (ProcessState=\"failed\") is called\n           \
    \                      : The Business Error is occurred\n                    \
    \               in SET Bridge\n   CompletedOK ---> Failed      :  When ChangeProcessState\
    \ Function\n                                   or CancelPayment Function\n   \
    \                                (ProcessState=\"Failed\") is called\n       \
    \                            and the payment is cancelled.\n"
- title: 8.10 Relationship between Pay Step and Deliv Step on SET/IOTP
  contents:
  - "8.10 Relationship between Pay Step and Deliv Step on SET/IOTP\n   SET/IOTP recommends\
    \ the following regarding Delivery:\n   Physical Goods\n   --------------\n  \
    \ For physical goods, the IOTP Delivery Exchanges should be omitted.\n   That\
    \ is, set DelivExch=False and DelivAndPayResp=False in the\n   Delivery Component.\
    \  This is to avoid the situation where the IOTP\n   Delivery Handler must check\
    \ with the IOTP Payment Handler on the\n   status of a credit authorization. \
    \ When a Delivery Inquiry\n   transaction might occur, the DelivReqNetLocn attribute\
    \ in the\n   DeliveryData Element must have been specified at the time of the\n\
    \   original Offer Response Message.  If you want to use the Delivery\n   Exchange,\
    \ you need to process the inquiry of the credit authorization\n   out of IOTP\
    \ between IOTP Payment Handler and Delivery Handler.\n   Digital Goods\n   -------------\n\
    \   For digital goods sold through SET/IOTP, authorization should be\n   processed\
    \ on a real-time basis.\n"
- title: 8.11 Completion Code
  contents:
  - "8.11 Completion Code\n   In SET/IOTP, the CompletionCode, which is a Business\
    \ Error Code, is\n   set as follows:\n   Value                    Description\n\
    \   ------------------------------------------------------\n   BrandNotSupp  \
    \           This value is not used.\n   CurrNotSupp              This value is\
    \ not used.\n   AuthError                The IOTP Authentication has\n       \
    \                     failed for any reason.\n   InsuffFunds              This\
    \ value is not used.\n   InstBrandInvalid         This value is not used.\n  \
    \ PaymentDecl              A SET business failure has occurred.\n   InstNotValid\
    \             This value is not used.\n   BadInstrument            This value\
    \ is not used.\n   Unspecified              Unspecified error.  There is some\
    \ known\n                            problem or error, which does not fall\n \
    \                           into one of the other CompletionCodes.\n"
- title: 8.12 PercentComplete
  contents:
  - "8.12 PercentComplete\n   This document recommends to set the PercentComplete\
    \ as follows:\n   SET Related    Setting for     Setting for        Value of\n\
    \       Message       Consumer     Paymnet Handler    PercentComplete\n   ------------+---------------+------------------+-----------------\n\
    \   SET Initia- |After 1st SET  |After 1st SET     |20\n   tion        |Initiation\
    \     |Initiation        |\n               |Response has   |Response has     \
    \ |\n               |Cteated        |Processed         |\n               |(See\
    \ Note)     |(See Note)        |\n   ------------+---------------+------------------+----------------\n\
    \   SET PinitReq|After Created  |After Processed   |40\n   ------------+---------------+------------------+----------------\n\
    \   SET PinitRes|After Processed|After Created     |60\n   ------------+---------------+------------------+----------------\n\
    \   SET PReq    |After Created  |After Processed   |80\n   ------------+---------------+------------------+----------------\n\
    \   SET PRes    |After Processed|After Created     |100\n   ------------+---------------+------------------+----------------\n\
    \   Note: According to the SET Initiation, PercentComplete should be set\n   \"\
    20\" at the timing of 1st SET Initiation Response is\n   created/processed because\
    \ number of its message is variable.\n"
- title: 8.13 Severity
  contents:
  - "8.13 Severity\n   In the current version of SET/IOTP, if a technical error occurs\
    \ in\n   the SET Bridge, the Severity has to be always set to \"HardError\".\n"
- title: 9. Error Handling
  contents:
  - "9. Error Handling\n   This chapter describes types of handling Errors.\n"
- title: 9.1 Types of Errors
  contents:
  - "9.1 Types of Errors\n   SET/IOTP defines the following error types:\n   (1) IOTP\
    \ Level Error\n   This is defined as an error which is NOT specified in [SET EIG]\
    \ nor\n   [SET].  IOTP Level Errors are divided into two types according to the\n\
    \   following:\n   OAC Level Error:   Error in the OAC.  This error is defined\
    \ in the\n   [IOTP].\n   SET Related Module Level Error:   Error generated in\
    \ by process on\n   the SET Related Module, not specified in [SET EIG] nor [SET].\
    \  For\n   example, when checking the consistency between SET and IOTP elements\n\
    \   on SET Related Module, an error might be returned to OAC.\n   (2) SET Level\
    \ Error\n   This is defined as an error which is specified in [SET EIG] or [SET].\n\
    \   SET Level Errors have been divided into two types of error according\n   to\
    \ following:\n   SET Technical Level Error: Error in the SET Related Module. \
    \ This\n   error is defined in [SET] or [SET EIG].  SET Technical Level Errors\n\
    \   are further subdivided into two types of errors:\n   (a) SET Initiation Error\
    \ Error while the SET Initiation Process is in\n   progress.\n   (b) SET Transaction\
    \ Error Error when the SET Transaction (SET\n   PInitReq message, SET PReq message,\
    \ etc.) is in progress.\n   SET Business Level Error: Error when a business error\
    \ (e.g., an\n   authorization failure) occurs while the SET Transaction is being\n\
    \   processed.  In SET, Business Level Errors will be returned in the SET\n  \
    \ PRes message.  SET does not use a SET Error Message for this type of\n   error.\
    \  However, it is necessary to present the OAC with what kind of\n   SET Business\
    \ Error has occurred.\n   In this below, the details of each errors above are\
    \ described.\n"
- title: 9.2 IOTP Level Error (OAC Error)
  contents:
  - "9.2 IOTP Level Error (OAC Error)\n   When OAC Level Errors have occurred, if\
    \ necessary, the sender and\n   receiver must issue ChangeProcessState API and\
    \ change the status.\n   For the detail of these errors, see [IOTP].\n"
- title: 9.3 IOTP Level Error (SET Bridge Error)
  contents:
  - "9.3 IOTP Level Error (SET Bridge Error)\n   This is the error generated in a\
    \ process on the SET Related Module,\n   not specified in [SET EIG] nor [SET].\
    \  For example, when checking the\n   inconsistency between SET and IOTP elements\
    \ on SET Related Module, it\n   might cause an error.  This error should be notified\
    \ to OAC.\n   In this case, as a response message, Payment Scheme Data is not\n\
    \   returned.  An appropriate information must be set to Status Response.\n"
- title: 9.4 SET Level Error (SET Technical Error)
  contents:
  - '9.4 SET Level Error (SET Technical Error)

    '
- title: 9.4.1 SET Initiation Error
  contents:
  - "9.4.1 SET Initiation Error\n   There are two SET Initiation errors as follows:\n\
    \   o  Error generated in SET Initiation Message\n   o  Error generated in SET\
    \ Initiation Response Message.\n   (1) SET Initiation Message Error\n   [SET EIG]\
    \ describes the error handling when a problem rises in SET\n   Initiation Message.\
    \  So the Consumer will do the same error handling\n   in 9.4.2.\n   When SET\
    \ Initiation Error rises in 1st Initiation Message, an error\n   message will\
    \ be returned to the Merchant.  If an error occurs after\n   2nd Initiation Message,\
    \ an error message will be returned to the\n   Payment Handler.  SET Initiation\
    \ Response will be generated having\n   SET-Error-Field in Response Message Header\
    \ and will be returned\n   ErrorCode as \"PayEncapError\" and Severity as \"HardError\"\
    .\n   (a) SET Initiation Response Error\n   In SET EIG, there is no description\
    \ about the handling on the\n   problems in SET Initiation Response.  However,\
    \ it is necessary to\n   define some handling for the problems in SET/IOTP\n \
    \  (b) Process of Payment Handler\n   When a problem rises in SET Initiation Response,\
    \ SET Related Module\n   generates ErrorResponse, which is included the \"EnCapProtoErr\"\
    \ as\n   ErrorCode and the \"HardError\" as Severity.  But\n   PaySchemePackagedContent\
    \ is not included in this API.\n   (2) Process of Consumer\n   ChangeProcessState\
    \ API must be issued, and ProcessState must be\n   modified.\n"
- title: 9.4.2 SET Transaction Error
  contents:
  - "9.4.2 SET Transaction Error\n   (1) Process of Sender\n   When a SET Transaction\
    \ Error rises, SET Core creates SET Error\n   Message.  Then the SET Related Module\
    \ creates ErrorResponse Message\n   which includes \"HardError\" as Severity,\
    \ \"EnCapProtoErr\" as ErrorCode\n   and PaySchemePackagedContent.  The SET Bridge\
    \ passes the\n   ErrorResponse Message to OAC.  OAC will generate an Error Block\
    \ which\n   includes PaySchemePackagedContent and sends it to the Receiver side.\n\
    \   (2) Process of Receiver\n   With ContinueProcess API, receiver's OAC sends\
    \ the message including\n   the PaySchemeData to SET Bridge.  SET Bridge passes\
    \ the SET Error\n   Message to SET Core for this process.  After that, SET Bridge\
    \ sends\n   \"End\" status with ContinueProcessResponse API.\n"
- title: 9.5 SET Level Error (SET Business Error)
  contents:
  - "9.5 SET Level Error (SET Business Error)\n   (1) Process of Payment Handler\n\
    \   SET Related Module checks the SET Business Error in StatusCode in SET\n  \
    \ PRes message.  When SET Transaction Error occurs, SET Related Module\n   creates\
    \ ErrorResponse Message which is included SET PRes as\n   PaySchemePackagedContent\
    \ and ErrorCode as \"BusinessError\" and returns\n   it to OAC.  OAC creates Payment\
    \ Response Block after gets the SET\n   scheme specific receipt in InquireProcessState/Response,\
    \ and sends it\n   to the Consumer.\n   (2) Process of Consumer\n   SET Related\
    \ Module conducts the same process as in the process that\n   Consumer receives\
    \ Payment Response Block.\n"
- title: 10. Security Considerations
  contents:
  - "10. Security Considerations\n   In the IOTP, Merchant and Payment Handler may\
    \ exist in different\n   domains.  So, if the Merchant passes the payment related\
    \ information\n   to the Payment Handler via the Consumer, the payment security\
    \ level\n   may depend on the IOTP.  If you want to avoid this, you will need\
    \ to\n   check integrity of these data by using out-of-band communication\n  \
    \ between the Merchant and the Payment Handler.  In this case, the\n   security\
    \ level depends on the communication path between them.\n"
- title: 11. References
  contents:
  - "11. References\n   The following books provide essential background material.\
    \  Readers\n   are strongly encouraged to consult these references for more\n\
    \   information.\n   [BASE64]           Base64 Content-Transfer-Encoding. A method\
    \ of\n                      transporting binary data defined by MIME. See: RFC\n\
    \                      2045: Multipurpose Internet Mail Extensions (MIME)\n  \
    \                    Part One: Format of Internet Message Bodies.  N.\n      \
    \                Freed & N.Borenstein. November 1996.\n   [RFC 2801]         Burdett,\
    \ D., \"Internet Open Trading Protocol -\n                      IOTP, Version\
    \ 1.0\", RFC 2081, April 2000.\n   [SET]              SET Secure Electronic Transaction\
    \ (TM) , Version\n                      1.0, May 31, 1997\n                  \
    \    Book 1: Business Description\n                      Book 2: Programmer's\
    \ Guide\n                      Book 3: Formal Protocol Definition\n   [SET EIG]\
    \          External Interface Guide to SET Secure Electronic\n               \
    \       Transaction, Sep 24, 1997.\n   [SJR]              \"SET Secure Electronic\
    \ Transaction Specification\"\n                      Support for Japanese Requirements,\
    \ Mar 16, 1998.\n   [IOTP Payment API] Hans, W., et al., \"Payment API for v1.0\
    \ Internet\n                      Open Trading Protocol (IOTP)\", Work in Progress.\n\
    \   [ISO4217]          ISO 4217: Codes for the Representation of\n           \
    \           Currencies. Available from ANSI or ISO.\n   [XML]              Extensible\
    \ Mark Up Language. A W3C recommendation.\n                      See http://www.w3.org/TR/1998/REC-xml-19980210\
    \ for\n                      the 10 February 1998 version.\n"
- title: 12. IANA Considerations
  contents:
  - "12. IANA Considerations\n   This document does not ask for any action from IANA.\
    \  It references\n   an existing registry, iotp-codes, where at the time of publication\
    \ of\n   this RFC the following BrandID's are registered:\n      Amex, Dankort,\
    \ JCB, Maestro, MasterCard, MICOS, VISA, atCredits,\n      EZpay, GeldKarte, Mondex,\
    \ paybox\n"
- title: 13. Acknowledgement
  contents:
  - "13. Acknowledgement\n   The author of this document appreciates the following\
    \ contributors to\n   this protocol (in alphabetic order of company) without which\
    \ it could\n   not have been developed.\n   Andrew Drapp              Hitachi\
    \ Europe, Ltd.\n   David Burdett             Commerce One (ex. Mondex International)\n\
    \   Donald Eastlake 3rd       Motorola (ex. IBM)\n   Hans-Bernhard  Beykirch \
    \  SIZ\n   John Wankmuller           MasterCard International\n   Mark Linehan\
    \              IBM\n   Richad D. Brown           Kedemon (ex. Globe SET)\n   Werner\
    \ Hans               SIZ\n"
- title: 14. Author's Address
  contents:
  - "14. Author's Address\n   Yoshiaki Kawatsura\n   Hitachi, Ltd.\n   890 Kashimada\
    \ Saiwai-ku Kawasaki-shi\n   Kanagawa, 212-8567 Japan\n   EMail: kawatura@bisd.hitachi.co.jp\n"
- title: 15.  Full Copyright Statement
  contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
