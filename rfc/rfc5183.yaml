- contents:
  - '              Sieve Email Filtering: Environment Extension

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document describes the \"environment\" extension to the Sieve\n
    \  email filtering language.  The \"environment\" extension gives a Sieve\n   script
    access to information about the Sieve interpreter itself,\n   where it is running,
    and about any transport connection currently\n   involved in transferring the
    message.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   Sieve [RFC5228] is a language for filtering email messages
    at or\n   around the time of final delivery.  It is designed to be\n   implementable
    on either a mail client or mail server.  It is suitable\n   for running on a mail
    server where users may not be allowed to\n   execute arbitrary programs, such
    as on black box Internet Message\n   Access Protocol [RFC3501] servers, as it
    has no user-controlled loops\n   or the ability to run external programs.\n   Although
    Sieve is intended to be independent of access protocol, mail\n   architecture,
    and operating system, in some cases it is useful to\n   allow scripts to access
    information about their execution context.\n   The \"environment\" extension provides
    a new environment test that can\n   be used to implement scripts that behave differently
    when moved from\n   one system to another, when messages arrive from different
    remote\n   sources or when otherwise operated in different contexts.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   The terms used to describe the various components of the Sieve\n
    \  language are taken from Section 1.1 of [RFC5228].\n   This document refers
    to the ABNF productions IPv4-address-literal,\n   IPv6-address-literal, and General-address-literal
    defined in Section\n   4.1.3 of [RFC2821].\n   The location item makes use of
    standard terms for email service\n   components.  Additional information and background
    on these terms can\n   be found in [EMAIL-ARCH].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Capability Identifiers\n   The capability string associated with the extension
    defined in this\n   document is \"environment\".\n"
  title: 3.  Capability Identifiers
- contents:
  - "4.  Environment Test\n   Usage:   environment [COMPARATOR] [MATCH-TYPE]\n                        <name:
    string>\n                        <key-list: string-list>\n   The environment test
    retrieves the item of environment information\n   specified by the name string
    and matches it to the values specified\n   in the key-list argument.  The test
    succeeds if a match occurs.  The\n   type of match defaults to \":is\" and the
    default comparator is\n   \"i;ascii-casemap\".\n   The current message is not
    a direct source of information for the\n   environment test; the item of information
    specified by the name\n   string is extracted from the script's operating environment
    and the\n   key-list argument comes from the script.\n   The environment test
    MUST fail unconditionally if the specified\n   information item does not exist.
    \ A script MUST NOT fail with an\n   error if the item does not exist.  This allows
    scripts to be written\n   that handle nonexistent items gracefully.  In particular,
    the test:\n     if environment :contains \"item\" \"\" { ... }\n   only succeeds
    if \"item\" is known to the implementation, and always\n   succeeds if it is.\n
    \  The \"relational\" extension [RFC5231] adds a match type called\n   \":count\".
    \ The count of an environment test is 0 if the environment\n   information returned
    is the empty string, or 1 otherwise.\n   Environment items can be standardized
    or vendor-defined.  An IANA\n   registry is defined for both types of items.  Extensions
    designed for\n   interoperable use SHOULD be defined in standards track or\n   experimental
    RFCs.\n"
  - contents:
    - "4.1.  Initial Standard Environment Items\n   The initial set of standardized
      environment items is as follows:\n    \"domain\"  => The primary DNS domain
      associated with the Sieve\n                 execution context, usually but not
      always a proper\n                 suffix of the host name.\n    \"host\"    =>
      The fully-qualified domain name of the host where\n                 the Sieve
      script is executing.\n    \"location\"\n              => Sieve evaluation can
      be performed at various\n                 different points as messages are processed.
      \ This item\n                 provides additional information about the type
      of\n                 service that is evaluating the script.  Possible values\n
      \                are \"MTA\", meaning the Sieve is being evaluated by a\n                 Message
      Transfer Agent, \"MDA\", meaning evaluation is\n                 being performed
      by a Mail Delivery Agent, \"MUA\",\n                 meaning evaluation is being
      performed by a Mail User\n                 Agent, and \"MS\", meaning evaluation
      is being performed\n                 by a Message Store.  Additional information
      and\n                 background on these terms can be found in\n                 [EMAIL-ARCH].\n
      \   \"name\"    => The product name associated with the Sieve interpreter.\n
      \   \"phase\"   => The point relative to final delivery where the\n                 Sieve
      script is being evaluated.  Possible values are\n                 \"pre\", \"during\",
      and \"post\", referring respectively to\n                 processing before,
      during, and after final delivery\n                 has taken place.\n    \"remote-host\"\n
      \             => Host name of remote SMTP/LMTP/Submission client\n                 expressed
      as a Fully Qualified Domain Name (FQDN),\n                 if applicable and
      available.  The empty string will be\n                 returned if for some
      reason this information cannot be\n                 obtained for the current
      client.\n    \"remote-ip\"\n              => IP address of remote SMTP/LMTP/Submission
      client, if\n                 applicable and available.  IPv4, IPv6, and other
      types\n                 of addresses are respectively represented in the\n                 formats
      defined by the IPv4-address-literal,\n                 IPv6-address-literal,
      and General-address-literal\n                 productions defined in Section
      4.1.3 of [RFC2821].\n    \"version\" => The product version associated with
      the Sieve\n                 interpreter.  The meaning of the product version
      string\n                 is product-specific and should always be considered\n
      \                in the context of the product name given by the\n                 \"name\"
      item.\n   Implementations SHOULD support as many of the items on this initial\n
      \  list as possible.  Additional standardized items can only be defined\n   in
      standards-track or experimental RFCs.\n"
    title: 4.1.  Initial Standard Environment Items
  - contents:
    - "4.2.  Vendor-defined Environment Items\n   Environment item names beginning
      with \"vnd.\" represent vendor-defined\n   extensions.  Such extensions are
      not defined by Internet standards or\n   RFCs, but are still registered with
      IANA in order to prevent\n   conflicts.\n"
    title: 4.2.  Vendor-defined Environment Items
  - contents:
    - "4.3.  IANA Registration of Environment Items\n   A registry of environment
      items is provided by IANA.  Item names may\n   be registered on a first-come,
      first-served basis.\n   Groups of items defined in a standards track or experimental
      RFC MAY\n   choose to use a common name prefix of the form \"name.\", where
      \"name\"\n   is a string that identifies the group of related items.\n   Items
      not defined in a standards track or experimental RFC MUST have\n   a name that
      begins with the \"vnd.\" prefix, and this prefix is\n   followed by the name
      of the vendor or product, such as\n   \"vnd.acme.rocket-sled-status\".\n"
    - contents:
      - "4.3.1.  Template for Environment Registrations\n   The following template
        is to be used for registering new Sieve\n   environment item names with IANA.\n
        \     To: iana@iana.org\n      Subject: Registration of new Sieve environment
        item\n      Item name: [the string for use in the 'environment' test]\n      Description:
        \    [a brief description of the semantics of the\n                        value
        the item returns]\n      RFC number:      [for extensions published as RFCs]\n
        \     Contact address: [email and/or physical address to contact for\n                        additional
        information]\n   Multiple items and descriptions MAY be specified in a single\n
        \  registration request.  Both standardized and vendor-defined items use\n
        \  this form.\n"
      title: 4.3.1.  Template for Environment Registrations
    title: 4.3.  IANA Registration of Environment Items
  title: 4.  Environment Test
- contents:
  - "5.  Security Considerations\n   The environment extension may be used to obtain
    information about the\n   system the Sieve implementation is running on.  This
    information in\n   turn may reveal details about service provider or enterprise\n
    \  infrastructure.\n   An implementation can use any technique to determine the
    remote-host\n   environment item defined in this specification, and the\n   trustworthiness
    of the result will vary.  One common method will be\n   to perform a PTR DNS lookup
    on the client IP address.  This\n   information may come from an untrusted source.
    \ For example, the\n   test:\n     if environment :matches \"remote-host\" \"*.example.com\"
    { ... }\n   is not a good way to test whether the message came from \"outside\"\n
    \  because anyone who can create a PTR record can create one that refers\n   to
    whatever domain they choose.\n   All of the security considerations given in the
    base Sieve\n   specification also apply to this extension.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   The following template specifies the IANA registration
    of the Sieve\n   extension specified in this document:\n      To: iana@iana.org\n
    \     Subject: Registration of new Sieve extension\n      Capability name: environment\n
    \     Description:     The \"environment\" extension provides a new\n                       environment
    test that can be used to implement\n                       scripts that behave
    differently when moved\n                       from one system to another or otherwise\n
    \                      operated in different contexts.\n      RFC number:      RFC
    5183\n      Contact address: Sieve discussion list <ietf-mta-filters@imc.org>\n
    \  This specification also defines a new IANA registry for Sieve\n   environment
    item names.  The specifics of this registry are given in\n   Section 4.3.  The
    initial contents of the registry are given in the\n   following section.\n"
  - contents:
    - "6.1.  Initial Environment Item Registrations\n   The following template specifies
      the initial IANA registrations for\n   the environment items defined in this
      document:\n      To: iana@iana.org\n      Subject: Registration of new Sieve
      environment items\n      Capability name: domain\n      Description:     The
      primary DNS domain associated with the Sieve\n                       execution
      context, usually but not always a\n                       proper suffix of the
      host name.\n      Capability name: host\n      Description:     The fully-qualified
      domain name of the host\n                       where the Sieve script is executing.\n
      \     Capability name: location\n      Description:     Type of service executing
      the Sieve script.\n      Capability name: name\n      Description:     The product
      name associated with the Sieve\n                       interpreter.\n      Capability
      name: phase\n      Description:     Point relative to final delivery at which
      the\n                       Sieve script is being evaluated.\n      Capability
      name: remote-host\n      Description:     Host name of remote SMTP client, if
      applicable\n                       and available.\n      Capability name: remote-ip\n
      \     Description:     IP address of remote SMTP client, if applicable\n                       and
      available.\n      Capability name: version\n      Description:     The product
      version associated with the Sieve\n                       interpreter.\n      RFC
      number:      RFC 5183\n      Contact address: Sieve discussion list <ietf-mta-filters@imc.org>\n"
    title: 6.1.  Initial Environment Item Registrations
  title: 6.  IANA Considerations
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative references\n   [RFC2119]     Bradner, S., \"Key words for use
      in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC2821]     Klensin, J., \"Simple Mail Transfer Protocol\",
      RFC 2821,\n                 April 2001.\n   [RFC5228]     Guenther, P. and T.
      Showalter, \"Sieve: An Email\n                 Filtering Language\", RFC 5228,
      January 2008.\n   [RFC5231]     Segmuller, W. and B. Leiba, \"Sieve Email Filtering:\n
      \                Relational Extension\", RFC 5231, January 2008.\n"
    title: 7.1.  Normative references
  - contents:
    - "7.2.  Informative references\n   [EMAIL-ARCH]  Crocker, D., \"Internet Mail
      Architecture\", Work\n                 in Progress, February 2008.\n   [RFC3501]
      \    Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL -\n                 VERSION
      4rev1\", RFC 3501, March 2003.\n"
    title: 7.2.  Informative references
  title: 7.  References
- contents:
  - "Appendix A.  Acknowledgements\n   Brian Carpenter, Dave Crocker, Cyrus Daboo,
    Philip Guenther, Kjetil\n   Torgrim Homme, John Klensin, Mark Mallett, Alexey
    Melnikov, and\n   Dilyan Palauzo provided helpful suggestions and corrections.\n"
  title: Appendix A.  Acknowledgements
- contents:
  - "Author's Address\n   Ned Freed\n   Sun Microsystems\n   3401 Centrelake Drive,
    Suite 410\n   Ontario, CA  92761-1205\n   USA\n   Phone: +1 909 457 4293\n   EMail:
    ned.freed@mrochek.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
