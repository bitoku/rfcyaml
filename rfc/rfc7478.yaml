- title: __initial_text__
  contents:
  - '         Web Real-Time Communication Use Cases and Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes web-based real-time communication use cases.\n\
    \   Requirements on the browser functionality are derived from the use\n   cases.\n\
    \   This document was developed in an initial phase of the work with\n   rather\
    \ minor updates at later stages.  It has not really served as a\n   tool in deciding\
    \ features or scope for the WG's efforts so far.  It\n   is being published to\
    \ record the early conclusions of the WG.  It\n   will not be used as a set of\
    \ rigid guidelines that specifications and\n   implementations will be held to\
    \ in the future.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7478.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Use Cases .......................................................4\n  \
    \    2.1. Introduction ...............................................4\n    \
    \  2.2. Common Requirements ........................................5\n      2.3.\
    \ Browser-to-Browser Use Cases ...............................5\n           2.3.1.\
    \ Simple Video Communication Service ..................5\n           2.3.2. Simple\
    \ Video Communication Service:\n                  NAT/Firewall That Blocks UDP\
    \ ........................8\n           2.3.3. Simple Video Communication Service:\
    \ Firewall\n                  That Only Allows Traffic via an HTTP Proxy ..........8\n\
    \           2.3.4. Simple Video Communication Service: Global\n              \
    \    Service Provider ....................................8\n           2.3.5.\
    \ Simple Video Communication Service:\n                  Enterprise Aspects ..................................9\n\
    \           2.3.6. Simple Video Communication Service: Access Change ..10\n  \
    \         2.3.7. Simple Video Communication Service: QoS ............11\n    \
    \       2.3.8. Simple Video Communication Service with\n                  Screen\
    \ Sharing .....................................11\n           2.3.9. Simple Video\
    \ Communication Service with\n                  File Exchange ......................................12\n\
    \           2.3.10. Hockey Game Viewer ................................12\n  \
    \         2.3.11. Multiparty Video Communication ....................14\n    \
    \       2.3.12. Multiparty Online Game with Voice Communication ...15\n      2.4.\
    \ Browser - GW/Server Use Cases .............................17\n           2.4.1.\
    \ Telephony Terminal .................................17\n           2.4.2. FedEx\
    \ Call .........................................17\n           2.4.3. Video Conferencing\
    \ System with Central Server ......18\n   3. Requirements Summary ...........................................19\n\
    \      3.1. General ...................................................19\n  \
    \    3.2. Browser Requirements ......................................19\n   4.\
    \ Security Considerations ........................................23\n      4.1.\
    \ Introduction ..............................................23\n      4.2. Browser\
    \ Considerations ....................................24\n      4.3. Web Application\
    \ Considerations ............................24\n   5. Normative References ...........................................25\n\
    \   Appendix A. API Requirements ......................................26\n  \
    \ Acknowledgements ..................................................29\n   Authors'\
    \ Addresses ................................................29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document presents a few use cases of web applications\
    \ that are\n   executed in a browser and use real-time communication capabilities.\n\
    \   In most of the use cases, all end-user clients are web applications,\n   but\
    \ there are some use cases where at least one of the end-user\n   clients is of\
    \ another type (e.g., a mobile phone or a SIP User Agent\n   (UA)).\n   Based\
    \ on the use cases, the document derives requirements related to\n   browser functionality.\
    \  These requirements are named \"Fn\", where n is\n   an integer, and are listed\
    \ in conjunction with the use cases.  A\n   summary is provided in Section 3.2.\n\
    \   This document was developed in an initial phase of the work with\n   rather\
    \ minor updates at later stages.  It has not really served as a\n   tool in deciding\
    \ features or scope for the WG's efforts so far.  It\n   is proposed to be used\
    \ in a later phase to evaluate the protocols and\n   solutions developed by the\
    \ WG.\n   This document also lists requirements related to the API to be used\n\
    \   by web applications as an appendix.  The reason is that the W3C\n   WebRTC\
    \ WG has decided to not develop its own use-case or requirement\n   document,\
    \ but instead will use this document.  These requirements are\n   named \"An\"\
    , where n is an integer, and are described in Appendix A.\n   This document was\
    \ developed in an initial phase of the work with\n   rather minor updates at later\
    \ stages.  It has not really served as a\n   tool in deciding features or scope\
    \ for the WG's efforts so far.  It\n   is being published to record the early\
    \ conclusions of the WG.  It\n   will not be used as a set of rigid guidelines\
    \ that specifications and\n   implementations will be held to in the future.\n"
- title: 2.  Use Cases
  contents:
  - '2.  Use Cases

    '
- title: 2.1.  Introduction
  contents:
  - "2.1.  Introduction\n   This section describes web-based real-time communication\
    \ use cases,\n   from which requirements are derived.\n   The following considerations\
    \ are applicable to all use cases:\n   o  Clients can be on IPv4-only\n   o  Clients\
    \ can be on IPv6-only\n   o  Clients can be on dual-stack\n   o  Clients can be\
    \ connected to networks with different throughput\n      capabilities\n   o  Clients\
    \ can be on variable-media-quality networks (wireless)\n   o  Clients can be on\
    \ congested networks\n   o  Clients can be on firewalled networks with no UDP\
    \ allowed\n   o  Clients can be on networks with a NAT or IPv4-IPv6 translation\n\
    \      devices using any type of Mapping and Filtering behaviors (as\n      described\
    \ in RFC 4787).\n"
- title: 2.2.  Common Requirements
  contents:
  - "2.2.  Common Requirements\n   The requirements retrieved from the\n   Simple\
    \ Video Communication Service use case (Section 2.3.1) by\n   default apply to\
    \ all other use cases and are considered common.  For\n   each use case, only\
    \ the additional requirements are listed.\n"
- title: 2.3.  Browser-to-Browser Use Cases
  contents:
  - '2.3.  Browser-to-Browser Use Cases

    '
- title: 2.3.1.  Simple Video Communication Service
  contents:
  - '2.3.1.  Simple Video Communication Service

    '
- title: 2.3.1.1.  Description
  contents:
  - "2.3.1.1.  Description\n   Two or more users have loaded a video communication\
    \ web application\n   into their browsers, provided by the same service provider,\
    \ and\n   logged into the service it provides.  The web service publishes\n  \
    \ information about user login status by pushing updates to the web\n   application\
    \ in the browsers.  When one online user selects a peer\n   online user, a 1:1\
    \ audiovisual communication session between the\n   browsers of the two peers\
    \ is initiated.  The invited user might\n   accept or reject the session.\n  \
    \ During session establishment, a self view is displayed, and once the\n   session\
    \ has been established the video sent from the remote peer is\n   displayed in\
    \ addition to the self view.  During the session, each\n   user can:\n   o  select\
    \ to remove and reinsert the self-view as often as desired,\n   o  change the\
    \ sizes of his/her two video displays during the session,\n      and\n   o  pause\
    \ the sending of media (audio, video, or both) and mute\n      incoming media.\n\
    \   It is essential that media and data be encrypted, authenticated, and\n   integrity\
    \ protected on a per-IP-packet basis and that media and data\n   packets failing\
    \ the integrity check not be delivered to the\n   application.\n   The application\
    \ gives the users the opportunity to stop it from\n   exposing the host IP address\
    \ to the application of the other user.\n   Any session participant can end the\
    \ session at any time.\n   The two users may be using communication devices with\
    \ different\n   operating systems and browsers from different vendors.\n   The\
    \ web service monitors the quality of the service (focus on quality\n   of audio\
    \ and video) that the end users experience.\n"
- title: 2.3.1.2.  Common Requirements
  contents:
  - "2.3.1.2.  Common Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F1              The browser must be able to use microphones and\n        \
    \           cameras as input devices to generate streams.\n   ----------------------------------------------------------------\n\
    \   F2              The browser must be able to send streams and\n           \
    \        data to a peer in the presence of NATs.\n   ----------------------------------------------------------------\n\
    \   F3              Transmitted streams and data must be rate\n              \
    \     controlled (meaning that the browser must, regardless\n                \
    \   of application behavior, reduce send rate when\n                   there is\
    \ congestion).\n   ----------------------------------------------------------------\n\
    \   F4              The browser must be able to receive, process, and\n      \
    \             render streams and data (\"render\" does not\n                 \
    \  apply for data) from peers.\n   ----------------------------------------------------------------\n\
    \   F5              The browser should be able to render good quality\n      \
    \             audio and video even in the presence of\n                   reasonable\
    \ levels of jitter and packet losses.\n   ----------------------------------------------------------------\n\
    \   F6              The browser must detect when a stream from a\n           \
    \        peer is not received anymore.\n   ----------------------------------------------------------------\n\
    \   F7              When there are both incoming and outgoing audio\n        \
    \           streams, echo cancellation must be made\n                   available\
    \ to avoid disturbing echo during\n                   conversation.\n   ----------------------------------------------------------------\n\
    \   F8              The browser must support synchronization of\n            \
    \       audio and video.\n   ----------------------------------------------------------------\n\
    \   F9              The browser should use encoding of streams\n             \
    \      suitable for the current rendering (e.g.,\n                   video display\
    \ size) and should change parameters\n                   if the rendering changes\
    \ during the session.\n   ----------------------------------------------------------------\n\
    \   F10             The browser must support a baseline audio and\n          \
    \         video codec.\n   ----------------------------------------------------------------\n\
    \   F11             It must be possible to protect streams and data\n        \
    \           from wiretapping [RFC2804] [RFC7258].\n   ----------------------------------------------------------------\n\
    \   F12             The browser must enable verification, given\n            \
    \       the right circumstances and by use of other\n                   trusted\
    \ communication, that streams and\n                   data received have not been\
    \ manipulated by\n                   any party.\n   ----------------------------------------------------------------\n\
    \   F13             The browser must encrypt, authenticate, and\n            \
    \       integrity protect media and data on a\n                   per-IP-packet\
    \ basis, and it must drop incoming media\n                   and data packets\
    \ that fail the per-IP-packet\n                   integrity check.  In addition,\
    \ the browser\n                   must support a mechanism for cryptographically\n\
    \                   binding media and data security keys to the\n            \
    \       user identity (see R-ID-BINDING in [RFC5479]).\n   ----------------------------------------------------------------\n\
    \   F14             The browser must make it possible to set up a\n          \
    \         call between two parties without one party\n                   learning\
    \ the other party's host IP address.\n   ----------------------------------------------------------------\n\
    \   F15             The browser must be able to collect statistics,\n        \
    \           related to the transport of audio and video\n                   between\
    \ peers, needed to estimate quality of\n                   experience.\n   ----------------------------------------------------------------\n\
    \   A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A25, A26\n"
- title: '2.3.2.  Simple Video Communication Service: NAT/Firewall That Blocks UDP'
  contents:
  - '2.3.2.  Simple Video Communication Service: NAT/Firewall That Blocks UDP

    '
- title: 2.3.2.1.  Description
  contents:
  - "2.3.2.1.  Description\n   This use case is almost identical to the\n   Simple\
    \ Video Communication Service use case (Section 2.3.1).  The\n   difference is\
    \ that one of the users is behind a NAT/firewall that\n   blocks UDP traffic.\n"
- title: 2.3.2.2.  Additional Requirements
  contents:
  - "2.3.2.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F18             The browser must be able to send streams and\n           \
    \        data to a peer in the presence of NATs and\n                   firewalls\
    \ that block UDP traffic.\n   ----------------------------------------------------------------\n"
- title: '2.3.3.  Simple Video Communication Service: Firewall That Only Allows'
  contents:
  - "2.3.3.  Simple Video Communication Service: Firewall That Only Allows\n     \
    \   Traffic via an HTTP Proxy\n"
- title: 2.3.3.1.  Description
  contents:
  - "2.3.3.1.  Description\n   This use case is almost identical to the\n   Simple\
    \ Video Communication Service use case (Section 2.3.1).  The\n   difference is\
    \ that one of the users is behind a firewall that only\n   allows traffic via\
    \ an HTTP Proxy.\n"
- title: 2.3.3.2.  Additional Requirements
  contents:
  - "2.3.3.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F21             The browser must be able to send streams and\n           \
    \        data to a peer in the presence of firewalls that only\n             \
    \      allow traffic via an HTTP Proxy, when firewall policy\n               \
    \    allows WebRTC traffic.\n   ----------------------------------------------------------------\n"
- title: '2.3.4.  Simple Video Communication Service: Global Service Provider'
  contents:
  - '2.3.4.  Simple Video Communication Service: Global Service Provider

    '
- title: 2.3.4.1.  Description
  contents:
  - "2.3.4.1.  Description\n   This use case is almost identical to the\n   Simple\
    \ Video Communication Service use case (Section 2.3.1).  What is\n   added is\
    \ that the service provider is operating over large\n   geographical areas (or\
    \ even globally).\n   Assuming that the Interactive Connectivity Establishment\
    \ (ICE)\n   mechanism [RFC5245] will be used, this means that the service\n  \
    \ provider would like to be able to provide several Session Traversal\n   Utilities\
    \ for NAT (STUN) and Traversal Using Relay NAT (TURN) servers\n   (via the app)\
    \ to the browser; selection of which one(s) to use is\n   part of the ICE processing.\
    \  Other reasons for wanting to provide\n   several STUN and TURN servers include\
    \ support for IPv4 and IPv6, load\n   balancing, and redundancy.\n   Note that\
    \ ICE support being mandatory does not preclude a WebRTC\n   endpoint from supporting\
    \ more traversal mechanisms than ICE using\n   STUN and TURN.\n"
- title: 2.3.4.2.  Additional Requirements
  contents:
  - "2.3.4.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F19             The browser must be able to use several STUN\n           \
    \        and TURN servers.\n   ----------------------------------------------------------------\n\
    \   A22\n"
- title: '2.3.5.  Simple Video Communication Service: Enterprise Aspects'
  contents:
  - '2.3.5.  Simple Video Communication Service: Enterprise Aspects

    '
- title: 2.3.5.1.  Description
  contents:
  - "2.3.5.1.  Description\n   This use case is similar to the Simple Video Communication\
    \ Service\n   use case (Section 2.3.1).\n   What is added is aspects when using\
    \ the service in enterprises.  ICE\n   is assumed in the further description of\
    \ this use case.\n   An enterprise that uses a WebRTC-based web application for\n\
    \   communication desires to audit all WebRTC-based application sessions\n   used\
    \ from inside the company towards any external peer.  To be able\n   to do this,\
    \ they deploy a TURN server that straddles the boundary\n   between the internal\
    \ and the external network.\n   The firewall will block all attempts to use STUN\
    \ with an external\n   destination unless they go to the enterprise auditing TURN\
    \ server.\n   In cases where employees are using WebRTC applications provided\
    \ by an\n   external service provider, they still want the traffic to stay inside\n\
    \   their internal network and in addition not load the straddling TURN\n   server;\
    \ thus, they deploy a STUN server allowing the WebRTC client to\n   determine\
    \ its server reflexive address on the internal side.  Thus,\n   enabling cases\
    \ where peers are both on the internal side to connect\n   without the traffic\
    \ leaving the internal network.  It must be\n   possible to configure the browsers\
    \ used in the enterprise with\n   network specific STUN and TURN servers.  This\
    \ should be possible to\n   achieve by autoconfiguration methods.  The WebRTC\
    \ functionality will\n   need to utilize both network specific STUN and TURN resources\
    \ and\n   STUN and TURN servers provisioned by the web application.\n"
- title: 2.3.5.2.  Additional Requirements
  contents:
  - "2.3.5.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F20             The browser must support the use of STUN and TURN\n      \
    \             servers that are supplied by entities other than\n             \
    \      the web application (i.e., the network provider).\n   ----------------------------------------------------------------\n"
- title: '2.3.6.  Simple Video Communication Service: Access Change'
  contents:
  - '2.3.6.  Simple Video Communication Service: Access Change

    '
- title: 2.3.6.1.  Description
  contents:
  - "2.3.6.1.  Description\n   This use case is almost identical to the\n   Simple\
    \ Video Communication Service use case (Section 2.3.1).  The\n   difference is\
    \ that the user changes network access during the\n   session.\n   The communication\
    \ device used by one of the users has several network\n   adapters (Ethernet,\
    \ Wi-Fi, Cellular).  The communication device is\n   accessing the Internet using\
    \ Ethernet, but the user has to start a\n   trip during the session.  The communication\
    \ device automatically\n   changes to use Wi-Fi when the Ethernet cable is removed\
    \ and then\n   moves to cellular access to the Internet when moving out of Wi-Fi\n\
    \   coverage.  The session continues even though the access method\n   changes.\n"
- title: 2.3.6.2.  Additional Requirements
  contents:
  - "2.3.6.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F17             The communication session must survive across a\n        \
    \           change of the network interface used by the\n                   session.\n\
    \   ----------------------------------------------------------------\n"
- title: '2.3.7.  Simple Video Communication Service: QoS'
  contents:
  - '2.3.7.  Simple Video Communication Service: QoS

    '
- title: 2.3.7.1.  Description
  contents:
  - "2.3.7.1.  Description\n   This use case is almost identical to the\n   Simple\
    \ Video Communication Service: Access Change use case\n   (Section 2.3.6).  The\
    \ use of Quality of Service (QoS) capabilities is\n   added:\n   The user in the\
    \ previous use case that starts a trip is behind a\n   common residential router\
    \ that supports differentiation of traffic.\n   In addition, the user's provider\
    \ of cellular access has QoS support\n   enabled.  The user is able to take advantage\
    \ of the QoS support both\n   when accessing via the residential router and when\
    \ using cellular.\n"
- title: 2.3.7.2.  Additional Requirements
  contents:
  - "2.3.7.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F17             The communication session must survive across a\n        \
    \           change of the network interface used by the\n                   session.\n\
    \   ----------------------------------------------------------------\n   F22 \
    \            The browser should be able to take advantage\n                  \
    \ of available capabilities (supplied by network\n                   nodes) to\
    \ differentiate voice, video, and data\n                   appropriately.\n  \
    \ ----------------------------------------------------------------\n"
- title: 2.3.8.  Simple Video Communication Service with Screen Sharing
  contents:
  - '2.3.8.  Simple Video Communication Service with Screen Sharing

    '
- title: 2.3.8.1.  Description
  contents:
  - "2.3.8.1.  Description\n   This use case has the audio and video communication\
    \ of the\n   Simple Video Communication Service use case (Section 2.3.1).\n  \
    \ However, in addition to this, one of the users can share what is\n   being displayed\
    \ on her/his screen with a peer.  The user can choose\n   to share the entire\
    \ screen, part of the screen (part selected by the\n   user), or what a selected\
    \ application displays with the peer.\n"
- title: 2.3.8.2.  Additional Requirements
  contents:
  - "2.3.8.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F36             The browser must be able to generate streams\n           \
    \        using the entire user display, a specific area\n                   of\
    \ the user display, or the information being\n                   displayed by\
    \ a specific application.\n   ----------------------------------------------------------------\n\
    \   A21\n"
- title: 2.3.9.  Simple Video Communication Service with File Exchange
  contents:
  - '2.3.9.  Simple Video Communication Service with File Exchange

    '
- title: 2.3.9.1.  Description
  contents:
  - "2.3.9.1.  Description\n   This use case has the audio and video communication\
    \ of the\n   Simple Video Communication Service use case (Section 3.3.1).\n  \
    \ However, in addition to this, the users can send and receive files\n   stored\
    \ in the file system of the device used.\n"
- title: 2.3.9.2.  Additional Requirements
  contents:
  - "2.3.9.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F35             The browser must be able to send reliable\n              \
    \     data traffic to a peer browser.\n   ----------------------------------------------------------------\n\
    \   A21, A24\n"
- title: 2.3.10.  Hockey Game Viewer
  contents:
  - '2.3.10.  Hockey Game Viewer

    '
- title: 2.3.10.1.  Description
  contents:
  - "2.3.10.1.  Description\n   An ice-hockey club uses an application that enables\
    \ talent scouts to,\n   in real-time, show and discuss games and players with\
    \ the club\n   manager.  The talent scouts use a mobile phone with two cameras:\
    \ one\n   front facing and one rear facing.\n   The club manager uses a desktop,\
    \ equipped with one camera, for\n   viewing the game and discussing with the talent\
    \ scout.\n   Before the game starts, and during game breaks, the talent scout\
    \ and\n   the manager have a 1:1 audiovisual communication session.  On the\n\
    \   mobile phone, only the camera facing the talent scout is used.  On\n   the\
    \ user display of the mobile phone, the video of the club manager\n   is shown\
    \ with a picture-in-picture thumbnail of the rear-facing\n   camera (self view).\
    \  On the display of the desktop, the video of the\n   talent scout is shown with\
    \ a picture-in-picture thumbnail of the\n   desktop camera (self view).\n   When\
    \ the game is ongoing, the talent scout activates the use of the\n   front-facing\
    \ camera, and that stream is sent to the desktop (the\n   stream from the rear-facing\
    \ camera continues to be sent all the\n   time).  The video stream captured by\
    \ the front-facing camera (that is\n   capturing the game) of the mobile phone\
    \ is shown in a big window on\n   the desktop screen, with picture-in-picture\
    \ thumbnails of the rear-\n   facing camera and the desktop camera (self view).\
    \  On the display of\n   the mobile phone the game is shown (front-facing camera)\
    \ with\n   picture-in-picture thumbnails of the rear-facing camera (self view)\n\
    \   and the desktop camera.  Because the most important stream in this\n   phase\
    \ is the video showing the game, the application used in the\n   talent scout's\
    \ mobile phone sets higher priority for that stream.\n"
- title: 2.3.10.2.  Additional Requirements
  contents:
  - "2.3.10.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F22             The browser should be able to take advantage\n           \
    \        of available capabilities (supplied by network\n                   nodes)\
    \ to differentiate voice, video, and data\n                   appropriately.\n\
    \   ----------------------------------------------------------------\n   F25 \
    \            The browser must be able to render several\n                   concurrent\
    \ audio and video streams.\n   ----------------------------------------------------------------\n\
    \   A17, A23\n"
- title: 2.3.11.  Multiparty Video Communication
  contents:
  - '2.3.11.  Multiparty Video Communication

    '
- title: 2.3.11.1.  Description
  contents:
  - "2.3.11.1.  Description\n   In this use case, the Simple Video Communication Service\
    \ use case\n   (Section 2.3.1) is extended by allowing multiparty sessions.  No\n\
    \   central server is involved -- the browser of each participant sends\n   and\
    \ receives streams to and from all other session participants.  The\n   web application\
    \ in the browser of each user is responsible for\n   setting up streams to all\
    \ receivers.\n   In order to enhance the user experience, the web application\
    \ renders\n   the audio coming from different participants so that it is\n   experienced\
    \ to come from different spatial locations.  This is done\n   automatically, but\
    \ users can change how the different participants\n   are placed in the (virtual)\
    \ room.  In addition, the levels in the\n   audio signals are adjusted before\
    \ mixing.\n   Another feature intended to enhance the user experience is the\n\
    \   highlighting of the video window that displays the video of the\n   currently\
    \ speaking peer.\n   Each video stream received is, by default, displayed in a\
    \ thumbnail\n   frame within the browser, but users can change the display size.\n\
    \   Note: What this use case adds in terms of requirements are\n   capabilities\
    \ to send streams to and receive streams from several\n   peers concurrently as\
    \ well as the capabilities to render the video\n   from all received streams and\
    \ be able to spatialize, level adjust,\n   and mix the audio from all received\
    \ streams locally in the browser.\n   It also adds the capability to measure the\
    \ audio level/activity.\n"
- title: 2.3.11.2.  Additional Requirements
  contents:
  - "2.3.11.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F23             The browser must be able to transmit streams and\n       \
    \            data to several peers concurrently.\n   ----------------------------------------------------------------\n\
    \   F24             The browser must be able to receive streams and\n        \
    \           data from multiple peers concurrently.\n   ----------------------------------------------------------------\n\
    \   F25             The browser must be able to render several\n             \
    \      concurrent audio and video streams.\n   ----------------------------------------------------------------\n\
    \   F26             The browser must be able to mix several\n                \
    \   audio streams.\n   ----------------------------------------------------------------\n\
    \   F27             The browser must be able to apply spatialization\n       \
    \            effects to audio streams.\n   ----------------------------------------------------------------\n\
    \   F28             The browser must be able to measure the\n                \
    \   voice activity level in audio streams.\n   ----------------------------------------------------------------\n\
    \   F29             The browser must be able to change the\n                 \
    \  voice activity level in audio streams.\n   ----------------------------------------------------------------\n\
    \   A13, A14, A15, A16\n"
- title: 2.3.12.  Multiparty Online Game with Voice Communication
  contents:
  - '2.3.12.  Multiparty Online Game with Voice Communication

    '
- title: 2.3.12.1.  Description
  contents:
  - "2.3.12.1.  Description\n   This use case is based on the previous one.  In this\
    \ use case, the\n   voice part of the multiparty video communication use case\
    \ is used in\n   the context of an online game.  The received voice audio media\
    \ is\n   rendered together with game sound objects.  For example, the sound of\n\
    \   a tank moving from left to right over the screen must be rendered and\n  \
    \ played to the user together with the voice media.\n   Quick updates of the game\
    \ state are required, and they have higher\n   priority than the voice.\n   Note:\
    \ the difference regarding local audio processing compared to the\n   \"Multiparty\
    \ Video Communication\" use case is that other sound objects\n   than the streams\
    \ must be possible to be included in the\n   spatialization and mixing.  \"Other\
    \ sound objects\" could for example\n   be a file with the sound of the tank;\
    \ that file could be stored\n   locally or remotely.\n"
- title: 2.3.12.2.  Additional Requirements
  contents:
  - "2.3.12.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F22             The browser should be able to take advantage\n           \
    \        of available capabilities (supplied by network\n                   nodes)\
    \ to differentiate voice, video, and data\n                   appropriately.\n\
    \   ----------------------------------------------------------------\n   F23 \
    \            The browser must be able to transmit streams and\n              \
    \     data to several peers concurrently.\n   ----------------------------------------------------------------\n\
    \   F24             The browser must be able to receive streams and\n        \
    \           data from multiple peers concurrently.\n   ----------------------------------------------------------------\n\
    \   F25             The browser must be able to render several\n             \
    \      concurrent audio and video streams.\n   ----------------------------------------------------------------\n\
    \   F26             The browser must be able to mix several\n                \
    \   audio streams.\n   ----------------------------------------------------------------\n\
    \   F27             The browser must be able to apply spatialization\n       \
    \            effects when playing audio streams.\n   ----------------------------------------------------------------\n\
    \   F28             The browser must be able to measure the\n                \
    \   voice activity level in audio streams.\n   ----------------------------------------------------------------\n\
    \   F29             The browser must be able to change the\n                 \
    \  voice activity level in audio streams.\n   ----------------------------------------------------------------\n\
    \   F30             The browser must be able to process and mix\n            \
    \       sound objects (media that is retrieved from\n                   another\
    \ source than the established media\n                   stream(s) with the peer(s)\
    \ with audio streams).\n   ----------------------------------------------------------------\n\
    \   F34             The browser must be able to send short\n                 \
    \  latency unreliable datagram traffic to a\n                   peer browser [RFC5405].\n\
    \   ----------------------------------------------------------------\n   A13,\
    \ A14, A15, A16, A17, A18, A23\n"
- title: 2.4.  Browser - GW/Server Use Cases
  contents:
  - '2.4.  Browser - GW/Server Use Cases

    '
- title: 2.4.1.  Telephony Terminal
  contents:
  - '2.4.1.  Telephony Terminal

    '
- title: 2.4.1.1.  Description
  contents:
  - "2.4.1.1.  Description\n   A mobile telephony operator allows its customers to\
    \ use a web browser\n   to access their services.  After a simple log in, the\
    \ user can place\n   and receive calls in the same way as when using a normal\
    \ mobile\n   phone.  When a call is received or placed, the identity is shown\
    \ in\n   the same manner as when a mobile phone is used.\n   Note: \"place and\
    \ receive calls in the same way as when using a normal\n   mobile phone\" means\
    \ that you can dial a number and your mobile\n   telephony operator has made available\
    \ your phone contacts online so\n   that they are available and can be clicked\
    \ to call and they can be\n   used to present the identity of an incoming call.\
    \  If the callee is\n   not in your phone contacts, the number is displayed. \
    \ Furthermore,\n   your call logs are available, and updated with the calls made/\n\
    \   received from the browser.  For people receiving calls made from the\n   web\
    \ browser, the usual identity (i.e., the phone number of the mobile\n   phone)\
    \ will be presented.\n"
- title: 2.4.1.2.  Additional Requirements
  contents:
  - "2.4.1.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F31             The browser must support an audio media format\n         \
    \          (codec) that is commonly supported by existing\n                  \
    \ telephony services.\n   ----------------------------------------------------------------\n\
    \   F33             The browser must be able to initiate and\n               \
    \    accept a media session where the data needed\n                   for establishment\
    \ can be carried in SIP.\n   ----------------------------------------------------------------\n"
- title: 2.4.2.  FedEx Call
  contents:
  - '2.4.2.  FedEx Call

    '
- title: 2.4.2.1.  Description
  contents:
  - "2.4.2.1.  Description\n   Alice uses her web browser with a service that allows\
    \ her to call\n   Public Switched Telephone Network (PSTN) numbers.  Alice calls\n\
    \   1-800-123-4567.  Alice should be able to hear the initial prompts\n   from\
    \ the FedEx Interactive Voice Responder (IVR), and when the IVR\n   says press\
    \ 1, there should be a way for Alice to navigate the IVR.\n"
- title: 2.4.2.2.  Additional Requirements
  contents:
  - "2.4.2.2.  Additional Requirements\n   ----------------------------------------------------------------\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   F31             The browser must support an audio media format\n         \
    \          (codec) that is commonly supported by existing\n                  \
    \ telephony services.\n   ----------------------------------------------------------------\n\
    \   F32             There should be a way to navigate\n                   a dual-tone\
    \ multi-frequency signaling (DTMF)\n                   based Interactive Voice\
    \ Response (IVR) system.\n   ----------------------------------------------------------------\n"
- title: 2.4.3.  Video Conferencing System with Central Server
  contents:
  - '2.4.3.  Video Conferencing System with Central Server

    '
- title: 2.4.3.1.  Description
  contents:
  - "2.4.3.1.  Description\n   An organization uses a video communication system that\
    \ supports the\n   establishment of multiparty video sessions using a central\
    \ conference\n   server.\n   The browser of each participant sends an audio stream\
    \ (type in terms\n   of mono, stereo, 5.1 -- depending on the equipment of the\n\
    \   participant) to the central server.  The central server mixes the\n   audio\
    \ streams (and can in the mixing process naturally add effects\n   such as spatialization)\
    \ and sends towards each participant a mixed\n   audio stream that is played to\
    \ the user.\n   The browser of each participant sends video towards the server.\
    \  For\n   each participant, one high-resolution video is displayed in a large\n\
    \   window, while a number of low-resolution videos are displayed in\n   smaller\
    \ windows.  The server selects what video streams to be\n   forwarded as main\
    \ and thumbnail videos, respectively, based on speech\n   activity.  As the video\
    \ streams to display can change quite\n   frequently (as the conversation flows),\
    \ it is important that the\n   delay from when a video stream is selected for\
    \ display until the\n   video can be displayed is short.\n   All participants\
    \ are authenticated by the central server and\n   authorized to connect to the\
    \ central server.  The participants are\n   identified to each other by the central\
    \ server, and the participants\n   do not have access to each others' credentials\
    \ such as email\n   addresses or login IDs.\n   Note: This use case adds requirements\
    \ on support for fast stream\n   switches (F16).  There exist several solutions\
    \ that enable the server\n   to forward one high-resolution and several low-resolution\
    \ video\n   streams: a) each browser could send a high-resolution, but scalable\n\
    \   stream, and the server could send just the base layer for the low-\n   resolution\
    \ streams, b) each browser could in a simulcast fashion send\n   one high-resolution\
    \ and one low-resolution stream, and the server\n   just selects, or c) each browser\
    \ sends just a high-resolution stream,\n   the server transcodes into low-resolution\
    \ streams as required.\n"
- title: 2.4.3.2.  Additional Requirements
  contents:
  - "2.4.3.2.  Additional Requirements\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F16             The browser must support insertion of reference frames\n  \
    \                in outgoing media streams when requested by a peer.\n  ----------------------------------------------------------------\n\
    \  F25             The browser must be able to render several\n              \
    \    concurrent audio and video streams.\n  ----------------------------------------------------------------\n"
- title: 3.  Requirements Summary
  contents:
  - '3.  Requirements Summary

    '
- title: 3.1.  General
  contents:
  - "3.1.  General\n   This section contains the requirements on the browser derived\
    \ from\n   the use cases in Section 2.\n   Note: It is assumed that the user applications\
    \ are executed on a\n   browser.  Whether the capabilities to implement specific\
    \ browser\n   requirements are implemented by the browser application, or are\n\
    \   provided to the browser application by the underlying operating\n   system,\
    \ is outside the scope of this document.\n"
- title: 3.2.  Browser Requirements
  contents:
  - "3.2.  Browser Requirements\n  ----------------------------------------------------------------\n\
    \  Common, basic requirements\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F1              The browser must be able to use microphones and\n         \
    \         cameras as input devices to generate streams.\n  ----------------------------------------------------------------\n\
    \  F2              The browser must be able to send streams and\n            \
    \      data to a peer in the presence of NATs.\n  ----------------------------------------------------------------\n\
    \  F3              Transmitted streams and data must be rate\n               \
    \   controlled (meaning that the browser must, regardless\n                  of\
    \ application behavior, reduce send rate when\n                  there is congestion).\n\
    \  ----------------------------------------------------------------\n  F4    \
    \          The browser must be able to receive, process, and\n               \
    \   render streams and data (\"render\" does not\n                  apply for\
    \ data) from peers.\n  ----------------------------------------------------------------\n\
    \  F5              The browser should be able to render good quality\n       \
    \           audio and video even in the presence of\n                  reasonable\
    \ levels of jitter and packet losses.\n  ----------------------------------------------------------------\n\
    \  F6              The browser must detect when a stream from a\n            \
    \      peer is not received anymore.\n  ----------------------------------------------------------------\n\
    \  F7              When there are both incoming and outgoing audio\n         \
    \         streams, echo cancellation must be made\n                  available\
    \ to avoid disturbing echo during\n                  conversation.\n  ----------------------------------------------------------------\n\
    \  F8              The browser must support synchronization of\n             \
    \     audio and video.\n  ----------------------------------------------------------------\n\
    \  F9              The browser should use encoding of streams\n              \
    \    suitable for the current rendering (e.g.,\n                  video display\
    \ size) and should change parameters\n                  if the rendering changes\
    \ during the session\n  ----------------------------------------------------------------\n\
    \  F10             The browser must support a baseline audio and\n           \
    \       video codec.\n  ----------------------------------------------------------------\n\
    \  F11             It must be possible to protect streams and data\n         \
    \         from wiretapping [RFC2804] [RFC7258].\n  ----------------------------------------------------------------\n\
    \  F12             The browser must enable verification, given\n             \
    \     the right circumstances and by use of other\n                  trusted communication,\
    \ that streams and\n                  data received have not been manipulated\
    \ by\n                  any party.\n  ----------------------------------------------------------------\n\
    \  F13             The browser must encrypt, authenticate, and\n             \
    \     integrity protect media and data on a\n                  per-IP-packet basis,\
    \ and it must drop incoming media\n                  and data packets that fail\
    \ the per-IP-packet\n                  integrity check.  In addition, the browser\n\
    \                  must support a mechanism for cryptographically\n          \
    \        binding media and data security keys to the\n                  user identity\
    \ (see R-ID-BINDING in [RFC5479]).\n  ----------------------------------------------------------------\n\
    \  F14             The browser must make it possible to set up a\n           \
    \       call between two parties without one party\n                  learning\
    \ the other party's host IP address.\n  ----------------------------------------------------------------\n\
    \  F15             The browser must be able to collect statistics,\n         \
    \         related to the transport of audio and video\n                  between\
    \ peers, needed to estimate quality of\n                  experience.\n  ----------------------------------------------------------------\n\
    \  Requirements related to network and topology\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F16             The browser must support insertion of reference frames\n  \
    \                in outgoing media streams when requested by a peer.\n  ----------------------------------------------------------------\n\
    \  F17             The communication session must survive across a\n         \
    \         change of the network interface used by the\n                  session.\n\
    \  ----------------------------------------------------------------\n  F18   \
    \          The browser must be able to send streams and\n                  data\
    \ to a peer in the presence of NATs and\n                  firewalls that block\
    \ UDP traffic.\n  ----------------------------------------------------------------\n\
    \  F19             The browser must be able to use several STUN\n            \
    \      and TURN servers.\n  ----------------------------------------------------------------\n\
    \  F20             The browser must support the use of STUN and TURN\n       \
    \           servers that are supplied by entities other than\n               \
    \   the web application (i.e., the network provider).\n  ----------------------------------------------------------------\n\
    \  F21             The browser must be able to send streams and\n            \
    \      data to a peer in the presence of firewalls that only\n               \
    \   allow traffic via an HTTP Proxy, when firewall policy\n                  allows\
    \ WebRTC traffic.\n  ----------------------------------------------------------------\n\
    \  F22             The browser should be able to take advantage\n            \
    \      of available capabilities (supplied by network\n                  nodes)\
    \ to differentiate voice, video, and data\n                  appropriately.\n\
    \  ----------------------------------------------------------------\n  Requirements\
    \ related to multiple peers and streams\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F23             The browser must be able to transmit streams and\n        \
    \          data to several peers concurrently.\n  ----------------------------------------------------------------\n\
    \  F24             The browser must be able to receive streams and\n         \
    \         data from multiple peers concurrently.\n  ----------------------------------------------------------------\n\
    \  F25             The browser must be able to render several\n              \
    \    concurrent audio and video streams.\n  ----------------------------------------------------------------\n\
    \  F26             The browser must be able to mix several\n                 \
    \ audio streams.\n  ----------------------------------------------------------------\n\
    \  Requirements related to audio processing\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F27             The browser must be able to apply spatialization\n        \
    \          effects when playing audio streams.\n  ----------------------------------------------------------------\n\
    \  F28             The browser must be able to measure the\n                 \
    \ voice activity level in audio streams.\n  ----------------------------------------------------------------\n\
    \  F29             The browser must be able to change the\n                  voice\
    \ activity level in audio streams.\n  ----------------------------------------------------------------\n\
    \  F30             The browser must be able to process and mix\n             \
    \     sound objects (media that is retrieved from\n                  another source\
    \ than the established media\n                  stream(s) with the peer(s) with\
    \ audio streams).\n  ----------------------------------------------------------------\n\
    \  Requirements related to legacy interop\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F31             The browser must support an audio media format\n          \
    \        (codec) that is commonly supported by existing\n                  telephony\
    \ services.\n  ----------------------------------------------------------------\n\
    \  F32             There should be a way to navigate\n                  a dual-tone\
    \ multi-frequency signaling (DTMF)\n                  based Interactive Voice\
    \ Response (IVR) system.\n  ----------------------------------------------------------------\n\
    \  F33             The browser must be able to initiate and\n                \
    \  accept a media session where the data needed\n                  for establishment\
    \ can be carried in SIP.\n  ----------------------------------------------------------------\n\
    \  Other requirements\n  ----------------------------------------------------------------\n\
    \  REQ-ID          DESCRIPTION\n  ----------------------------------------------------------------\n\
    \  F34             The browser must be able to send short\n                  latency\
    \ unreliable datagram traffic to a\n                  peer browser [RFC5405].\n\
    \  ----------------------------------------------------------------\n  F35   \
    \          The browser must be able to send reliable\n                  data traffic\
    \ to a peer browser.\n  ----------------------------------------------------------------\n\
    \  F36             The browser must be able to generate streams\n            \
    \      using the entire user display, a specific area\n                  of the\
    \ user display or the information being\n                  displayed by a specific\
    \ application.\n  ----------------------------------------------------------------\n"
- title: 4.  Security Considerations
  contents:
  - '4.  Security Considerations

    '
- title: 4.1.  Introduction
  contents:
  - "4.1.  Introduction\n   A malicious web application might use the browser to perform\
    \ Denial-\n   of-Service (DoS) attacks on NAT infrastructure, or on peer devices.\n\
    \   For example, a malicious web application might leak TURN credentials\n   to\
    \ unauthorized parties, allowing them to consume the TURN server's\n   bandwidth.\
    \  To address this risk, web applications should be prepared\n   to revoke TURN\
    \ credentials and issue new ones.  Also, a malicious web\n   application might\
    \ silently establish outgoing, and accept incoming,\n   streams on an already\
    \ established connection.\n   Based on the identified security risks, this section\
    \ will describe\n   security considerations for the browser and web application.\n"
- title: 4.2.  Browser Considerations
  contents:
  - "4.2.  Browser Considerations\n   The browser is expected to provide mechanisms\
    \ for getting user\n   consent to use device resources such as camera and microphone.\n\
    \   The browser is expected to provide mechanisms for informing the user\n   that\
    \ device resources such as camera and microphone are in use\n   (\"hot\").\n \
    \  The browser must provide mechanisms for users to revise and even\n   completely\
    \ revoke consent to use device resources such as camera and\n   microphone.\n\
    \   The browser is expected to provide mechanisms for getting user\n   consent\
    \ to use the screen (or a certain part of it) or what a certain\n   application\
    \ displays on the screen as source for streams.\n   The browser is expected to\
    \ provide mechanisms for informing the user\n   that the screen, part thereof,\
    \ or an application is serving as a\n   stream source (\"hot\").\n   The browser\
    \ must provide mechanisms for users to revise and even\n   completely revoke consent\
    \ to use the screen, part thereof, or an\n   application as a stream source.\n\
    \   The browser is expected to provide mechanisms in order to assure that\n  \
    \ streams are the ones the recipient intended to receive.\n   The browser is expected\
    \ to provide mechanisms that allow the users to\n   verify that the streams received\
    \ have not be manipulated (F12).\n   The browser needs to ensure that media is\
    \ not sent, and that received\n   media is not rendered, until the associated\
    \ stream establishment and\n   handshake procedures with the remote peer have\
    \ been successfully\n   finished.\n   The browser needs to ensure that the stream\
    \ negotiation procedures\n   are not seen as DoS by other entities.\n"
- title: 4.3.  Web Application Considerations
  contents:
  - "4.3.  Web Application Considerations\n   The web application is expected to ensure\
    \ user consent in sending and\n   receiving media streams.\n"
- title: 5.  Normative References
  contents:
  - "5.  Normative References\n   [RFC2804]  IAB and , \"IETF Policy on Wiretapping\"\
    , RFC 2804, May\n              2000, <http://www.rfc-editor.org/info/rfc2804>.\n\
    \   [RFC5245]  Rosenberg, J., \"Interactive Connectivity Establishment\n     \
    \         (ICE): A Protocol for Network Address Translator (NAT)\n           \
    \   Traversal for Offer/Answer Protocols\", RFC 5245, April\n              2010,\
    \ <http://www.rfc-editor.org/info/rfc5245>.\n   [RFC5405]  Eggert, L. and G. Fairhurst,\
    \ \"Unicast UDP Usage Guidelines\n              for Application Designers\", BCP\
    \ 145, RFC 5405, November\n              2008, <http://www.rfc-editor.org/info/rfc5405>.\n\
    \   [RFC5479]  Wing, D., Ed., Fries, S., Tschofenig, H., and F. Audet,\n     \
    \         \"Requirements and Analysis of Media Security Management\n         \
    \     Protocols\", RFC 5479, April 2009,\n              <http://www.rfc-editor.org/info/rfc5479>.\n\
    \   [RFC7258]  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n \
    \             Attack\", BCP 188, RFC 7258, May 2014,\n              <http://www.rfc-editor.org/info/rfc7258>.\n"
- title: Appendix A.  API Requirements
  contents:
  - "Appendix A.  API Requirements\n   This section contains the requirements on the\
    \ API derived from the\n   use cases in Section 2.\n   Note: As the W3C is responsible\
    \ for the API, the API requirements in\n   this specification are not normative.\n\
    \   REQ-ID          DESCRIPTION\n   ----------------------------------------------------------------\n\
    \   A1              The web API must provide means for the\n                 \
    \  application to ask the browser for permission\n                   to use cameras\
    \ and microphones as input devices\n                   and to have access to the\
    \ local file system.\n   ----------------------------------------------------------------\n\
    \   A2              The web API must provide means for the web\n             \
    \      application to control how streams generated\n                   by input\
    \ devices are used.\n   ----------------------------------------------------------------\n\
    \   A3              The web API must provide means for the web\n             \
    \      application to control the local rendering of\n                   streams\
    \ (locally generated streams and streams\n                   received from a peer).\n\
    \   ----------------------------------------------------------------\n   A4  \
    \            The web API must provide means for the web\n                   application\
    \ to initiate the sending of a\n                   stream / stream components\
    \ to a peer.\n   ----------------------------------------------------------------\n\
    \   A5              The web API must provide means for the web\n             \
    \      application to control the media format (codec)\n                   to\
    \ be used for the streams sent to a peer.\n                   Note: The level\
    \ of control depends on whether\n                   the codec negotiation is handled\
    \ by the browser\n                   or the web application.\n   ----------------------------------------------------------------\n\
    \   A6              The web API must provide means for the web\n             \
    \      application to modify the media format for\n                   streams\
    \ sent to a peer after a media stream\n                   has been established.\n\
    \   ----------------------------------------------------------------\n   A7  \
    \            The web API must provide means for\n                   informing\
    \ the web application of whether or not\n                   the establishment\
    \ of a stream with a peer was\n                   successful.\n   ----------------------------------------------------------------\n\
    \   A8              The web API must provide means for the web\n             \
    \      application to mute/unmute a stream or stream\n                   component(s).\
    \ When a stream is sent to a peer,\n                   mute status must be preserved\
    \ in the stream\n                   received by the peer.\n   ----------------------------------------------------------------\n\
    \   A9              The web API must provide means for the web\n             \
    \      application to cease the sending of a stream\n                   to a peer.\n\
    \   ----------------------------------------------------------------\n   A10 \
    \            The web API must provide means for the web\n                   application\
    \ to cease the processing and rendering\n                   of a stream received\
    \ from a peer.\n   ----------------------------------------------------------------\n\
    \   A11             The web API must provide means for\n                   informing\
    \ the web application when a\n                   stream from a peer is no longer\
    \ received.\n   ----------------------------------------------------------------\n\
    \   A12             The web API must provide means for\n                   informing\
    \ the web application when high\n                   loss rates occur.\n   ----------------------------------------------------------------\n\
    \   A13             The web API must provide means for the web\n             \
    \      application to apply spatialization effects to\n                   audio\
    \ streams.\n   ----------------------------------------------------------------\n\
    \   A14             The web API must provide means for the web\n             \
    \      application to detect the level in audio\n                   streams.\n\
    \   ----------------------------------------------------------------\n   A15 \
    \            The web API must provide means for the web\n                   application\
    \ to adjust the level in audio\n                   streams.\n   ----------------------------------------------------------------\n\
    \   A16             The web API must provide means for the web\n             \
    \      application to mix audio streams.\n   ----------------------------------------------------------------\n\
    \   A17             The web API must provide a way to identify\n             \
    \      streams such that an application is able to\n                   match streams\
    \ on a sending peer with the same\n                   stream on all receiving\
    \ peers.\n   ----------------------------------------------------------------\n\
    \   A18             The web API must provide a mechanism for sending\n       \
    \            and receiving isolated discrete chunks of data.\n   ----------------------------------------------------------------\n\
    \   A19             The web API must provide means for the web\n             \
    \      application to indicate the type of audio signal\n                   (speech,\
    \ audio) for audio stream(s) / stream\n                   component(s).\n   ----------------------------------------------------------------\n\
    \   A20             It must be possible for an initiator or a\n              \
    \     responder web application to indicate the types\n                   of media\
    \ it is willing to accept incoming\n                   streams for when setting\
    \ up a connection (audio,\n                   video, other). The types of media\
    \ to be accepted\n                   can be a subset of the types of media the\
    \ browser\n                   is able to accept.\n   ----------------------------------------------------------------\n\
    \   A21             The web API must provide means for the\n                 \
    \  application to ask the browser for permission\n                   to use the\
    \ screen, a certain area on the screen,\n                   or what a certain\
    \ application displays on the\n                   screen as input to streams.\n\
    \   ----------------------------------------------------------------\n   A22 \
    \            The web API must provide means for the\n                   application\
    \ to specify several STUN and/or\n                   TURN servers to use.\n  \
    \ ----------------------------------------------------------------\n   A23   \
    \          The web API must provide means for the\n                   application\
    \ to specify the priority to\n                   apply for outgoing streams and\
    \ data.\n   ----------------------------------------------------------------\n\
    \   A24             The web API must provide a mechanism for sending\n       \
    \            and receiving files.\n   ----------------------------------------------------------------\n\
    \   A25             It must be possible for the application to\n             \
    \      instruct the browser to refrain from exposing\n                   the host\
    \ IP address to the application.\n   ----------------------------------------------------------------\n\
    \   A26             The web API must provide means for the\n                 \
    \  application to obtain the statistics (related\n                   to transport,\
    \ and collected by the browser)\n                   needed to estimate the quality\
    \ of service.\n   ----------------------------------------------------------------\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors wish to thank Bernard Aboba, Gunnar Hellstrom,\
    \ Martin\n   Thomson, Lars Eggert, Matthew Kaufman, Emil Ivov, Eric Rescorla,\
    \ Eric\n   Burger, John Leslie, Dan Wing, Richard Barnes, Barry Dingle, Dale\n\
    \   Worley, Ted Hardie, Mary Barnes, Dan Burnett, Stephan Wenger, Harald\n   Alvestrand,\
    \ Cullen Jennings, Andrew Hutton and everyone else in the\n   RTCWEB community\
    \ that have provided comments, feedback, text and\n   improvement proposals on\
    \ the document.  A big thank you to everyone\n   that provided comments as part\
    \ of the IESG evaluation and to everyone\n   else that provided comments and input\
    \ in order to improve the\n   document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Christer Holmberg\n   Ericsson\n   Hirsalantie 11\n  \
    \ Jorvas  02420\n   Finland\n   EMail: christer.holmberg@ericsson.com\n   Stefan\
    \ Hakansson\n   Ericsson\n   Laboratoriegrand 11\n   Lulea  97128\n   Sweden\n\
    \   EMail: stefan.lk.hakansson@ericsson.com\n   Goran AP Eriksson\n   Ericsson\n\
    \   Farogatan 6\n   Stockholm  16480\n   Sweden\n   EMail: goran.ap.eriksson@ericsson.com\n"
