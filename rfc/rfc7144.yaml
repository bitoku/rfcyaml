- contents:
  - "            Internet Small Computer System Interface (iSCSI)\n                          SCSI
    Features Update\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Internet Small Computer System Interface (iSCSI) is a SCSI\n   transport
    protocol that maps the SCSI family of protocols onto\n   TCP/IP.  The iSCSI protocol
    as specified in RFC 7143 (and as\n   previously specified by the combination of
    RFC 3720 and RFC\n   5048) is based on the SAM-2 (SCSI Architecture Model - 2)\n
    \  version of the SCSI family of protocols.  This document\n   defines enhancements
    to the iSCSI protocol to support certain\n   additional features of the SCSI protocol
    that were defined in\n   SAM-3, SAM-4, and SAM-5.\n   This document is a companion
    document to RFC 7143.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by\n   the Internet Engineering Steering Group (IESG).
    \ Further\n   information on Internet Standards is available in Section 2 of\n
    \  RFC 5741.\n   Information about the current status of this document, any\n
    \  errata, and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7144.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Definitions, Acronyms, and Document Summary .....................4\n      2.1.
    Definitions ................................................4\n      2.2. Acronyms
    ...................................................4\n      2.3. New Semantics
    ..............................................4\n   3. Terminology Mapping .............................................5\n
    \  4. New Feature Use .................................................7\n      4.1.
    Negotiation of New Feature Use .............................7\n      4.2. Impact
    on Standard INQUIRY Data - iSCSI Version\n           Descriptors ................................................8\n
    \  5. SCSI Commands ...................................................9\n      5.1.
    SCSI Command Additions .....................................9\n           5.1.1.
    Command Priority (Byte 2) ..........................10\n      5.2. SCSI Response
    Additions ...................................11\n           5.2.1. Status Qualifier
    ...................................12\n           5.2.2. Data Segment - Sense
    and Response Data Segment .....12\n   6. Task Management Functions ......................................13\n
    \     6.1. Task Management Function Request PDU ......................13\n      6.2.
    Existing Task Management Functions ........................14\n      6.3. Task
    Management Function Additions ........................14\n           6.3.1. LUN
    Field ..........................................15\n           6.3.2. Referenced
    Task Tag ................................16\n           6.3.3. RefCmdSN ...........................................16\n
    \     6.4. Task Management Function Responses ........................17\n           6.4.1.
    Task Management Function Response PDU ..............17\n           6.4.2. Task
    Management Function Response Additions ........18\n      6.5. Task Management
    Requests Affecting Multiple Tasks .........19\n   7. Login/Text Operational Text
    Keys ...............................19\n      7.1. New Operational Text Keys .................................19\n
    \          7.1.1. iSCSIProtocolLevel .................................19\n   8.
    Security Considerations ........................................20\n   9. IANA
    Considerations ............................................21\n   10. References
    ....................................................24\n      10.1. Normative
    References .....................................24\n      10.2. Informative References
    ...................................24\n   11. Acknowledgements ..............................................24\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The original iSCSI protocol [RFC3720] was built based on
    the [SAM2]\n   model for SCSI.  Several new features and capabilities have been\n
    \  added to the SCSI Architecture Model in the intervening years (at the\n   time
    of publication of this document, SAM-5 was the current version\n   of the SCSI
    Architecture Model).  This document is not a complete\n   revision of [RFC3720].
    \ Instead, this document is intended as a\n   companion document to RFC 7143;
    this document may also be used as a\n   companion document to the combination
    of [RFC3720] and [RFC5048],\n   although both of those RFCs have been obsoleted
    by [RFC7143].\n   For more information on the SCSI Architecture Model and SCSI
    Primary\n   Commands - 4, contact the INCITS T10 Technical Committee for SCSI\n
    \  Storage Interfaces at <http://www.t10.org>.\n"
  title: 1.  Introduction
- contents:
  - '2.  Definitions, Acronyms, and Document Summary

    '
  - contents:
    - "2.1.  Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
    title: 2.1.  Definitions
  - contents:
    - "2.2.  Acronyms\n   ACA      Auto Contingent Allegiance\n   AHS      Additional
      Header Segment\n   ISID     Initiator Session Identifier\n   LU       Logical
      Unit\n   PDU      Protocol Data Unit\n   SAM-5    SCSI Architecture Model -
      5 (see [SAM5])\n   TSIH     Target Session Identifying Handle\n"
    title: 2.2.  Acronyms
  - contents:
    - "2.3.  New Semantics\n   This document specifies new iSCSI semantics.  This
      section summarizes\n   the contents of the document.\n      Section 3:  The
      mapping of iSCSI objects to SAM-5 objects\n                  The iSCSI node
      may contain both initiator and target\n                  capabilities.\n      Section
      4:  New feature use\n                  New features need negotiation for use.
      \ The\n                  negotiation may have an impact on standard INQUIRY\n
      \                 data.\n      Section 5:  New command operations\n                  The
      PRI field for SCSI command priority has been added\n                  to the
      SCSI Command PDU (see Section 5.1.1).  The\n                  Status Qualifier
      field has been added to the SCSI\n                  Response PDU (see Section
      5.2.1).  Sense data may be\n                  returned (via Autosense) for any
      SCSI status, not just\n                  CHECK CONDITION (see Section 5.2.2).\n
      \     Section 6:  New task management functions\n                  Four new
      task management functions (QUERY TASK, QUERY\n                  TASK SET, I_T
      NEXUS RESET, and QUERY ASYNCHRONOUS\n                  EVENT) have been added
      (see Section 6.3).  A new\n                  \"Function succeeded\" response
      has been added (see\n                  Section 6.4.2).\n      Section 7:  New
      negotiation key\n                  A new negotiation key has been added to enable
      the use\n                  of the new features in Sections 5 and 6.\n"
    title: 2.3.  New Semantics
  title: 2.  Definitions, Acronyms, and Document Summary
- contents:
  - "3.  Terminology Mapping\n   The iSCSI model (defined in [RFC7143]) uses different
    terminology\n   than the SCSI Architecture Model.  In some cases, iSCSI uses multiple\n
    \  terms to describe what in the SCSI Architecture Model is described\n   with
    a single term.  The iSCSI terms and SAM-5 terms are not\n   necessarily equivalent,
    but rather, the iSCSI terms represent\n   examples of the objects or classes described
    in SAM-5 as follows:\n       Terminology in RFC 7143     | Terminology in SAM-5\n
    \    +-----------------------------+---------------------------+\n     | Network
    Entity              | none                      |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Node                  | SCSI Device               |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Name                  | SCSI Device Name          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Node Name             | SCSI Device Name          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Initiator Node        | SCSI Initiator Device     |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Initiator Name        | SCSI Device Name          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Initiator Port        | SCSI Initiator Port       |\n     | Identifier;
    (i.e., iSCSI    | Identifier                |\n     | Node Name + ,,,i, + ISID)**
    |                           |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Initiator Port Name;  | SCSI Initiator Port Name  |\n     | (i.e.,
    iSCSI Node Name +    |                           |\n     | ,,,i, + ISID)**             |
    \                          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Target Node           | SCSI Target Device        |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Target Name           | SCSI Device Name          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Target Port           | SCSI Target Port          |\n     | Identifier;
    (i.e., iSCSI    | Identifier                |\n     | Node Name + ,,,t, +         |
    \                          |\n     | Target Portal Group Tag)**  |                           |\n
    \    +-----------------------------+---------------------------+\n     | iSCSI
    Target Port Name;     | SCSI Target Port Name     |\n     | (i.e., iSCSI Node
    Name +    |                           |\n     | ,,,t, + Target Portal       |
    \                          |\n     | Group Tag)**                |                           |\n
    \    +-----------------------------+---------------------------+\n     | iSCSI
    Target Portal Group   | SCSI Target Port          |\n     +-----------------------------+---------------------------+\n
    \    | iSCSI Initiator Name +      | I_T Nexus Identifier      |\n     | ',i,'
    + ISID + iSCSI        |                           |\n     | Target Name + ',t,'
    +       |                           |\n     | Target Portal Group Tag     |                           |\n
    \    +-----------------------------+---------------------------+\n     | Target
    Portal Group Tag     | Relative Port ID          |\n     +-----------------------------+---------------------------+\n
    \  ** The text encoding of the ISID value and the Target Portal Group\n      Tag
    value includes an initial ,,0X or ,,0x (see [RFC7143]).\n   The following diagram
    shows an example of a combination target device\n   and initiator device.  Such
    a configuration may exist in a target\n   device that implements a SCSI Copy Manager.
    \ This example shows how a\n   session that shares Network Portals within a Portal
    Group may be\n   established (see Target Portal Group 1).  In addition, this example\n
    \  shows the initiator using a different portal group than the target\n   portal
    group, but the initiator portal group sharing Network Portal A\n   with the target
    portal group.\n     ----------------------------IP Network---------------------\n
    \            |               |                    |\n        +----|---------------|-------+
    \      +----|------------+\n        | +----------+ +----------+  |       | +----------+
    \   |\n        | | Network  | | Network  |  |       | | Network  |    |\n        |
    | Portal A | | Portal B |  |       | | Portal A |    |\n        | +----------+
    +----------+  |       | +----------+    |\n        |    |    Target     |       |
    \      |    | Initiator  |\n        |    |    Portal     |       |       |    |
    Portal     |\n        |    |    Group 1    |       |       |    | Group 2    |\n
    \       +----|---------------|-------+       +----|------------+\n             |
    \              |                    |\n  +----------|---------------|--------------------|--------------------+\n
    \ | +--------|---------------|----+ +-------------|------------------+ |\n  |
    |+-------|---------------|---+| |+------------|-----------------+| |\n  | ||iSCSI
    Session (Target side)|| ||iSCSI Session (Initiator side)|| |\n  | ||                           ||
    ||                              || |\n  | ||       (TSIH = 56)         || ||        (SSID
    = 48)           || |\n  | |+---------------------------+| |+------------------------------+|
    |\n  | |                             | |                                | |\n
    \ | |     iSCSI Target Node       | |      iSCSI Initiator Node      | |\n  |
    +-----------------------------+ +--------------------------------+ |\n  |                          iSCSI
    Node                                |\n  |              (within Network Entity,
    not shown)                    |\n  +--------------------------------------------------------------------+\n"
  title: 3.  Terminology Mapping
- contents:
  - '4.  New Feature Use

    '
  - contents:
    - "4.1.  Negotiation of New Feature Use\n   The iSCSIProtocolLevel operational
      text key (see Section 7.1.1)\n   containing a value of \"2\" MUST be negotiated
      to enable the use of\n   features described in this RFC.\n   This is an iSCSI
      negotiation mechanism that enabled iSCSI support for\n   corresponding SCSI
      capabilities (see [SAM5] and [SPC4]).  For this\n   reason, negotiation of this
      key to a value of \"2\" is necessary but\n   not sufficient for use of the SCSI
      capabilities enabled by the iSCSI\n   features in this RFC.\n   For example,
      an iSCSI implementation may negotiate this new key to\n   \"2\" but respond
      to the new task management functions (see Section\n   6.3) with \"Task management
      function not supported\" (which indicates a\n   SCSI error that prevents the
      function from being performed).  In\n   contrast, if the key is negotiated to
      \"2\", an iSCSI implementation\n   MUST NOT reject a Task Management Function
      Request PDU that requests\n   one of the new task management functions (as such
      a reject would\n   report an iSCSI protocol error).\n"
    title: 4.1.  Negotiation of New Feature Use
  - contents:
    - "4.2.  Impact on Standard INQUIRY Data - iSCSI Version Descriptors\n   The negotiated
      value of the iSCSIProtocolLevel key is an increment\n   from the base iSCSI
      version descriptor value (0960h); see [SPC4].  If\n   the SCSI device server
      returns an iSCSI version descriptor in the\n   standard INQUIRY data, then the
      value returned in that iSCSI version\n   descriptor MUST be set to the sum of
      the base value (0960h) plus the\n   negotiated value of the iSCSIProtocolLevel
      key.  (For example, if the\n   negotiated iSCSIProtocolLevel=2, then if an iSCSI
      version descriptor\n   is returned in the standard INQUIRY data, it is set to
      0962h.)\n   In support of this functionality, INCITS Technical Committee T10,\n
      \  which is responsible for SCSI standards, has assigned SCSI version\n   descriptor
      codes 0961h-097Fh to RFC 7144 for IANA to manage via the\n   values 1-31 of
      the iSCSIProtocolLevel key; see Section 9.  The \"No\n   version claimed\" description
      for the value 0 of the\n   iSCSIProtocolLevel key corresponds to the existing
      T10 assignment of\n   the 0960h SCSI version descriptor code to \"iSCSI (no
      version\n   claimed)\" -- for this reason, the assignment of the value 0 in
      the\n   IANA registry for the iSCSIProtocolLevel key must not be changed.\n"
    title: 4.2.  Impact on Standard INQUIRY Data - iSCSI Version Descriptors
  title: 4.  New Feature Use
- contents:
  - '5.  SCSI Commands

    '
  - contents:
    - "5.1.  SCSI Command Additions\n   The format of the SCSI Command PDU is:\n   Byte/
      \    0       |       1       |       2       |       3       |\n      /              |
      \              |               |               |\n     |0 1 2 3 4 5 6 7|0 1
      2 3 4 5 6 7|0 1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|\n     +---------------+---------------+---------------+---------------+\n
      \   0|.|I| 0x01      |F|R|W|. .|ATTR | PRI   |  Reserved             |\n     +---------------+---------------+---------------+---------------+\n
      \   4|TotalAHSLength | DataSegmentLength                             |\n     +---------------+---------------+---------------+---------------+\n
      \   8| Logical Unit Number (LUN)                                     |\n     +
      \                                                              +\n   12|                                                               |\n
      \    +---------------+---------------+---------------+---------------+\n   16|
      Initiator Task Tag                                            |\n     +---------------+---------------+---------------+---------------+\n
      \  20| Expected Data Transfer Length                                 |\n     +---------------+---------------+---------------+---------------+\n
      \  24| CmdSN                                                         |\n     +---------------+---------------+---------------+---------------+\n
      \  28| ExpStatSN                                                     |\n     +---------------+---------------+---------------+---------------+\n
      \  32/ SCSI Command Descriptor Block (CDB)                           /\n    +/
      \                                                              /\n     +---------------+---------------+---------------+---------------+\n
      \  48/ AHS (Optional)                                                /\n     +---------------+---------------+---------------+---------------+\n
      \   x/ Header Digest (Optional)                                      /\n     +---------------+---------------+---------------+---------------+\n
      \   y/ (DataSegment, Command Data) (Optional)                        /\n    +/
      \                                                              /\n     +---------------+---------------+---------------+---------------+\n
      \   z/ Data Digest (Optional)                                        /\n     +---------------+---------------+---------------+---------------+\n
      \  The SCSI Command PDU above is duplicated from [RFC7143] for reference\n   to
      show the PRI field.  For any field other than the PRI field, the\n   text in
      [RFC7143] supersedes the text in Section 5.1 of this document\n   in the event
      the two documents conflict.\n"
    - contents:
      - "5.1.1.  Command Priority (Byte 2)\n   The Command Priority (PRI) is a four-bit
        field that specifies the\n   relative scheduling importance of this command
        in relation to other\n   commands already in the task set with SIMPLE task
        attributes (see\n   [SAM5]).\n   Section 11 (\"iSCSI PDU Formats\") of [RFC7143]
        requires that senders\n   set this field to zero.  A sender MUST NOT set this
        field to a value\n   other than zero unless the iSCSIProtocolLevel text key
        defined in\n   Section 7.1.1 has been negotiated on the session with a value
        of \"2\".\n   This field MUST be ignored by iSCSI targets unless the\n   iSCSIProtocolLevel
        text key with a value of \"2\" as defined in Section\n   7.1.1 was negotiated
        on the session.\n   See [SAM5] for additional considerations on the use of
        the Command\n   Priority field.\n"
      title: 5.1.1.  Command Priority (Byte 2)
    title: 5.1.  SCSI Command Additions
  - contents:
    - "5.2.  SCSI Response Additions\n   The format of the SCSI Response PDU is:\n
      \   Byte/     0       |       1       |       2       |       3       |\n       /
      \             |               |               |               |\n      |0 1
      2 3 4 5 6 7|0 1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|\n      +---------------+---------------+---------------+---------------+\n
      \    0|.|.| 0x21      |1|. .|o|u|O|U|.| Response      | Status        |\n      +---------------+---------------+---------------+---------------+\n
      \    4|TotalAHSLength | DataSegmentLength                             |\n      +---------------+---------------+---------------+---------------+\n
      \    8| Status Qualifier              | Reserved                      |\n      +---------------+---------------+---------------+---------------+\n
      \   12| Reserved                                                      |\n      +---------------+---------------+---------------+---------------+\n
      \   16| Initiator Task Tag                                            |\n      +---------------+---------------+---------------+---------------+\n
      \   20| SNACK Tag or Reserved                                         |\n      +---------------+---------------+---------------+---------------+\n
      \   24| StatSN                                                        |\n      +---------------+---------------+---------------+---------------+\n
      \   28| ExpCmdSN                                                      |\n      +---------------+---------------+---------------+---------------+\n
      \   32| MaxCmdSN                                                      |\n      +---------------+---------------+---------------+---------------+\n
      \   36| ExpDataSN or Reserved                                         |\n      +---------------+---------------+---------------+---------------+\n
      \   40| Bidirectional Read Residual Count or Reserved                 |\n      +---------------+---------------+---------------+---------------+\n
      \   44| Residual Count or Reserved                                    |\n      +---------------+---------------+---------------+---------------+\n
      \   48| Header-Digest (Optional)                                      |\n      +---------------+---------------+---------------+---------------+\n
      \     / Data Segment (Optional)                                       /\n     +/
      \                                                              /\n      +---------------+---------------+---------------+---------------+\n
      \     | Data-Digest (Optional)                                        |\n      +---------------+---------------+---------------+---------------+\n
      \  The SCSI Response PDU above is duplicated from [RFC7143] for\n   reference
      to show the Status Qualifier field.  For any field other\n   than the Status
      field, the Status Qualifier field, and the Data\n   Segment - Sense and Response
      Data Segment field, the text in\n   [RFC7143] supersedes the text in Section
      5.2 of this document in the\n   event the two documents conflict.\n"
    - contents:
      - "5.2.1.  Status Qualifier\n   The Status Qualifier provides additional status
        information (see\n   [SAM5]).\n   As defined in Section 11 (\"iSCSI PDU Formats\")
        of [RFC7143],\n   compliant senders already set this field to zero.  Compliant
        senders\n   MUST NOT set this field to a value other than zero unless the\n
        \  iSCSIProtocolLevel text key with a value of \"2\" as defined in Section\n
        \  7.1.1 was negotiated on the session.\n   This field MUST be ignored by
        receivers unless the iSCSIProtocolLevel\n   text key with a value of \"2\"
        as defined in Section 7.1.1 was\n   negotiated on the session.\n"
      title: 5.2.1.  Status Qualifier
    - contents:
      - "5.2.2.  Data Segment - Sense and Response Data Segment\n   Section 11.4.7
        of [RFC7143] specifies that iSCSI targets MUST support\n   and enable Autosense.
        \ If Status is CHECK CONDITION (0x02), then the\n   Data Segment MUST contain
        sense data for the failed command.  While\n   [RFC7143] does not make any
        statements about the state of the Data\n   Segment when the Status is not
        CHECK CONDITION (0x02) (i.e., the Data\n   Segment is not prohibited from
        containing sense data when the Status\n   is not CHECK CONDITION), negotiation
        of the iSCSIProtocolLevel text\n   key with a value of \"2\" as defined in
        Section 7.1.1 explicitly\n   indicates that the Data Segment MAY contain sense
        data at any time,\n   no matter what value is set in the Status field.\n"
      title: 5.2.2.  Data Segment - Sense and Response Data Segment
    title: 5.2.  SCSI Response Additions
  title: 5.  SCSI Commands
- contents:
  - '6.  Task Management Functions

    '
  - contents:
    - "6.1.  Task Management Function Request PDU\n    Byte/     0       |       1
      \      |       2       |       3       |\n       /              |               |
      \              |               |\n      |0 1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|0 1
      2 3 4 5 6 7|0 1 2 3 4 5 6 7|\n      +---------------+---------------+---------------+---------------+\n
      \    0|.|I| 0x02      |1| Function    | Reserved                      |\n      +---------------+---------------+---------------+---------------+\n
      \    4|TotalAHSLength | DataSegmentLength                             |\n      +---------------+---------------+---------------+---------------+\n
      \    8| Logical Unit Number (LUN)                                     |\n      +
      \                                                              +\n    12|                                                               |\n
      \     +---------------+---------------+---------------+---------------+\n    16|
      Initiator Task Tag                                            |\n      +---------------+---------------+---------------+---------------+\n
      \   20| Referenced Task Tag or 0xffffffff                             |\n      +---------------+---------------+---------------+---------------+\n
      \   24| CmdSN                                                         |\n      +---------------+---------------+---------------+---------------+\n
      \   28| ExpStatSN                                                     |\n      +---------------+---------------+---------------+---------------+\n
      \   32| RefCmdSN or Reserved                                          |\n      +---------------+---------------+---------------+---------------+\n
      \   36| ExpDataSN or Reserved                                         |\n      +---------------+---------------+---------------+---------------+\n
      \   40| Reserved                                                      /\n     +/
      \                                                              /\n      +---------------+---------------+---------------+---------------+\n
      \   48| Header-Digest (Optional)                                      |\n      +---------------+---------------+---------------+---------------+\n
      \  The Task Management Function Request PDU above is duplicated from\n   [RFC7143]
      for reference only.  [RFC7143] supersedes the text in\n   Sections 6.1 and 6.2
      of this document in the event the two documents\n   conflict.\n"
    title: 6.1.  Task Management Function Request PDU
  - contents:
    - "6.2.  Existing Task Management Functions\n   Section 11.5 of [RFC7143] defines
      the semantics used to request that\n   SCSI task management functions be performed.
      \ The following task\n   management functions are defined:\n      1   -   ABORT
      TASK\n      2   -   ABORT TASK SET\n      3   -   CLEAR ACA\n      4   -   CLEAR
      TASK SET\n      5   -   LOGICAL UNIT RESET\n      6   -   TARGET WARM RESET\n
      \     7   -   TARGET COLD RESET\n      8   -   TASK REASSIGN\n"
    title: 6.2.  Existing Task Management Functions
  - contents:
    - "6.3.  Task Management Function Additions\n   Additional task management function
      codes are listed below.  For a\n   more detailed description of SCSI task management,
      see [SAM5].\n      9  - QUERY TASK - determine if the command identified by
      the\n         Referenced Task Tag field is present in the task set.\n      10
      - QUERY TASK SET - determine if any command is present in the\n         task
      set for the I_T_L Nexus on which the task management\n         function was
      received.\n      11 - I_T NEXUS RESET - perform an I_T nexus loss function (see\n
      \        [SAM5]) for the I_T nexus on which the task management function\n         was
      received.\n      12 - QUERY ASYNCHRONOUS EVENT - determine if there is a unit\n
      \        attention condition or a deferred error pending for the I_T_L\n         nexus
      on which the task management function was received.\n   These task management
      function requests MUST NOT be sent unless the\n   iSCSIProtocolLevel text key
      with a value of \"2\" as defined in Section\n   7.1.1 was negotiated on the
      session.\n   Any compliant initiator that sends any of the new task management\n
      \  functions defined in this section MUST also support all new task\n   management
      function responses (as specified in Section 6.4.2).\n   For all of the task
      management functions detailed in this section,\n   the Task Management Function
      Response MUST be returned as detailed in\n   Section 6.4.\n   The iSCSI target
      MUST ensure that no responses for the commands\n   covered by a task management
      function are sent to the iSCSI initiator\n   port after the Task Management
      response except for commands covered\n   by a TASK REASSIGN, QUERY TASK, or
      QUERY TASK SET.\n   If a QUERY TASK is issued for a task created by an immediate
      command,\n   then RefCmdSN MUST be that of the Task Management request itself\n
      \  (i.e., CmdSN and RefCmdSN are equal); otherwise, RefCmdSN MUST be set\n   to
      the CmdSN of the task to be queried (lower than CmdSN).\n   If the connection
      is still active (it is not undergoing an implicit\n   or explicit logout), QUERY
      TASK MUST be issued on the same connection\n   to which the task to be queried
      is allegiant at the time the Task\n   Management request is issued.  If the
      connection is implicitly or\n   explicitly logged out (i.e., no other request
      will be issued on the\n   failing connection and no other response will be received
      on the\n   failing connection), then a QUERY TASK function request may be issued\n
      \  on another connection.  This Task Management request will then\n   establish
      a new allegiance for the command being queried.\n   At the target, a QUERY TASK
      function MUST NOT be executed on a Task\n   Management request; such a request
      MUST result in Task Management\n   response of \"Function rejected\".\n   For
      the I_T NEXUS RESET function, the target device MUST respond to\n   the function
      as defined in [SAM5].  Each logical unit accessible via\n   the receiving I_T
      NEXUS MUST behave as dictated by the I_T nexus loss\n   function in [SAM5] for
      the I_T nexus on which the task management\n   function was received.  The target
      device MUST drop all connections\n   in the session over which this function
      is received.  Independent of\n   the DefaultTime2Wait and DefaultTime2Retain
      values applicable to the\n   session over which this function is received, the
      target device MUST\n   consider each participating connection in the session
      to have\n   immediately timed out, leading to FREE state.  The resulting timeouts\n
      \  cause the session timeout event defined in [RFC7143], which in turn\n   triggers
      the I_T nexus loss notification to the SCSI layer as\n   described in [RFC7143].\n"
    - contents:
      - "6.3.1.  LUN Field\n   This field is required for functions that address a
        specific LU\n   (i.e., ABORT TASK, CLEAR TASK SET, ABORT TASK SET, CLEAR ACA,
        LOGICAL\n   UNIT RESET, QUERY TASK, QUERY TASK SET, and QUERY ASYNCHRONOUS
        EVENT)\n   and is reserved in all others.\n"
      title: 6.3.1.  LUN Field
    - contents:
      - "6.3.2.  Referenced Task Tag\n   The Reference Task Tag is the Initiator Task
        Tag of the task to be\n   aborted for the ABORT TASK function, reassigned
        for the TASK REASSIGN\n   function, or queried for the QUERY TASK function.
        \ For all other\n   functions, this field MUST be set to the reserved value
        0xffffffff.\n"
      title: 6.3.2.  Referenced Task Tag
    - contents:
      - "6.3.3.  RefCmdSN\n   If a QUERY TASK is issued for a task created by an immediate
        command\n   then RefCmdSN MUST be that of the Task Management request itself\n
        \  (i.e., CmdSN and RefCmdSN are equal).\n   For a QUERY TASK of a task created
        by non-immediate command RefCmdSN\n   MUST be set to the CmdSN of the task
        identified by the Referenced\n   Task Tag field.  Targets must use this field
        as described in section\n   11.6.1 of [RFC7143] when the task identified by
        the Referenced Task\n   Tag field is not in the task set.\n"
      title: 6.3.3.  RefCmdSN
    title: 6.3.  Task Management Function Additions
  - contents:
    - '6.4.  Task Management Function Responses

      '
    - contents:
      - "6.4.1.  Task Management Function Response PDU\n    Byte/     0       |       1
        \      |       2       |       3       |\n       /              |               |
        \              |               |\n      |0 1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|0
        1 2 3 4 5 6 7|0 1 2 3 4 5 6 7|\n      +---------------+---------------+---------------+---------------+\n
        \    0|.|.| 0x22      |1| Reserved    | Response      | Reserved      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \    4|TotalAHSLength | DataSegmentLength                             |\n
        \     +-----------------------------------------------+---------------+\n
        \    8| Additional Response Information               | Reserved      |\n
        \     +-----------------------------------------------+---------------+\n
        \   12| Reserved                                                      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   16| Initiator Task Tag                                            |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   20| Reserved                                                      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   24| StatSN                                                        |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   28| ExpCmdSN                                                      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   32| MaxCmdSN                                                      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \   36/ Reserved                                                      /\n
        \    +/                                                               /\n
        \     +---------------+---------------+---------------+---------------+\n
        \   48| Header-Digest (Optional)                                      |\n
        \     +---------------+---------------+---------------+---------------+\n
        \  Section 11.6 of [RFC7143] defines the semantics used for responses to\n
        \  SCSI task management functions.  The following responses are defined\n
        \  in [RFC7143]:\n      0   - Function Complete\n      1   - Task does not
        exist\n      2   - LUN does not exist\n      3   - Task still allegiant\n
        \     4   - Task allegiance reassignment not supported\n      5   - Task management
        function not supported\n      6   - Function authorization failed\n      255
        - Function rejected\n   The Task Management Function Response PDU above and
        the list of task\n   management function responses above are duplicated from
        [RFC7143] for\n   reference only.  [RFC7143] supersedes the text in section
        6.4.1 of\n   this document in the event the two documents conflict.\n   Responses
        to new task management functions (see Section 6.4.2) are\n   listed below.
        \ In addition, a new task Management response is listed\n   below.  For a
        more detailed description of SCSI task management\n   responses, see [SAM5].\n
        \  For the functions QUERY TASK, QUERY TASK SET, I_T NEXUS RESET, and\n   QUERY
        ASYNCHRONOUS EVENT, the target performs the requested Task\n   Management
        function and sends a Task Management response back to the\n   initiator.\n"
      title: 6.4.1.  Task Management Function Response PDU
    - contents:
      - "6.4.2.  Task Management Function Response Additions\n   The new response
        is listed below:\n         7 - Function succeeded\n   In symbolic terms Response
        value 7 maps to the SCSI service response\n   of FUNCTION SUCCEEDED in [SAM5].\n
        \  The Task Management Function Response of \"Function succeeded\" MUST be\n
        \  supported by an initiator that sends any of the new task management\n   functions
        (see Section 6.3).\n   For the QUERY TASK function, if the specified task
        is in the task\n   set, then the logical unit returns a Response value of
        \"Function\n   succeeded\", and additional response information is returned
        as\n   specified in [SAM5].  If the specified task is not in the task set,\n
        \  then the logical unit returns a Response value of \"Function\n   complete\".\n
        \  For the QUERY TASK SET function, if there is any command present in\n   the
        task set from the specified I_T_L nexus, then the logical unit\n   returns
        a Response value of \"Function succeeded\".  If there are no\n   commands
        present in the task set from the specified I_T_L nexus, then\n   the logical
        unit returns a Response value of \"Function complete\".\n   For the I_T NEXUS
        RESET function, after completion of the events\n   described in Section 6.3
        for this function, the logical unit returns\n   a Response value of \"Function
        complete\".  However, because the target\n   drops all connections, the Service
        Response (defined by [SAM5]) for\n   this SCSI task management function may
        not be reliably delivered to\n   the issuing initiator port.\n   For the QUERY
        ASYNCHRONOUS EVENT, if there is a unit attention\n   condition or deferred
        error pending for the specified I_T_L nexus,\n   then the logical unit returns
        a Response value of \"Function\n   succeeded\", and additional response information
        is returned as\n   specified in [SAM5].  If there is no unit attention or
        deferred error\n   pending for the specified I_T_L nexus, then the logical
        unit returns\n   a Response value of \"Function complete\".\n"
      title: 6.4.2.  Task Management Function Response Additions
    title: 6.4.  Task Management Function Responses
  - contents:
    - "6.5.  Task Management Requests Affecting Multiple Tasks\n   Section 4.1 of
      [RFC5048] defines the notion of \"affected tasks\" in\n   multi-task abort scenarios.
      \ This section adds to the list included\n   in that section by defining the
      tasks affected by the I_T NEXUS RESET\n   function.\n      I_T NEXUS RESET:
      All outstanding tasks received on the I_T nexus\n         on which the function
      request was received for all logical\n         units accessible to the I_T nexus.\n
      \  Sections 4.1.2 and 4.1.3 of [RFC5048] identify semantics for task\n   management
      functions that involve multi-task abort operations.  If an\n   iSCSI implementation
      supports the I_T NEXUS RESET function, it MUST\n   also support the protocol
      behavior as defined in those sections and\n   follow the sequence of actions
      as described in those sections when\n   processing the I_T NEXUS RESET function.\n"
    title: 6.5.  Task Management Requests Affecting Multiple Tasks
  title: 6.  Task Management Functions
- contents:
  - '7.  Login/Text Operational Text Keys

    '
  - contents:
    - '7.1.  New Operational Text Keys

      '
    - contents:
      - "7.1.1.  iSCSIProtocolLevel\n   Use: LO, IO\n   Irrelevant when: SessionType
        = Discovery\n   Senders: Initiator and Target\n   Scope: SW\n   iSCSIProtocolLevel=<numerical-value-from-0-to-31>\n
        \  Default is 1.\n   Result function is Minimum.\n   This key is used to negotiate
        the use of iSCSI features that require\n   different levels of protocol support
        (e.g., PDU formats, end-node\n   semantics) for proper operation.\n   Negotiation
        of the iSCSIProtocolLevel key to a value corresponding to\n   an RFC indicates
        that both negotiating parties are compliant to the\n   RFC in question and
        agree to support the corresponding PDU formats\n   and semantics on that iSCSI
        session.  Features using this key are\n   expected to be cumulative.\n   An
        iSCSIProtocolLevel key negotiated to \"0\" indicates that the\n   implementation
        does not claim a specific iSCSI protocol level.\n   An iSCSIProtocolLevel
        key negotiated to \"1\" indicates that the\n   implementation claims compliance
        with [RFC7143].\n   An iSCSIProtocolLevel key negotiated to \"2\" is required
        to enable use\n   of features defined in this RFC.\n   If the negotiation
        answer is ignored by the acceptor, or the answer\n   from the remote iSCSI
        end point is key=NotUnderstood, then the\n   features defined in this RFC,
        and the features defined in any RFC\n   requiring a key value greater than
        \"2\", MUST NOT be used.\n"
      title: 7.1.1.  iSCSIProtocolLevel
    title: 7.1.  New Operational Text Keys
  title: 7.  Login/Text Operational Text Keys
- contents:
  - "8.  Security Considerations\n   Command priorities are relative values, not absolute
    values (see\n   [SAM5], and affect collections of commands, not necessarily\n
    \  individual commands (see [SAM5]).  If command priority is supported,\n   it
    should be implemented in a fashion that avoids unwanted reduction\n   or denial
    of service.\n   All the iSCSI-related security text in [RFC3723] is directly\n
    \  applicable to this document.  The security text in [RFC7143] is\n   directly
    applicable as well.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   This document modifies or creates a number of iSCSI-related\n
    \  registries.\n   The following iSCSI-related registries are modified.\n   1.
    iSCSI Task Management Functions Codes\n      Name of the existing registry: \"iSCSI
    Task Management Function\n      Codes\"\n      The following entries have been
    added:\n         9  - QUERY TASK, RFC 7144\n         10 - QUERY TASK SET, RFC
    7144\n         11 - I_T NEXUS RESET, RFC 7144\n         12 - QUERY ASYNCHRONOUS
    EVENT, RFC 7144\n         13-127 - Unassigned\n   2. iSCSI Login/Text Keys\n      Name
    of the existing registry: \"iSCSI Login/Text Keys\"\n      Fields to record in
    the registry: Assigned value and its\n      associated RFC reference.\n      The
    following entry has been added:\n         iSCSIProtocolLevel,  RFC 7144\n   IANA
    has created the following iSCSI-related registries.\n   3.  iSCSI Protocol Level\n
    \     Name of new registry: \"iSCSI Protocol Level\"\n      Namespace details:
    Numerical values from 0 to 31\n      Information that must be provided to assign
    a new value: An IESG-\n      approved Standards Track specification defining the
    semantics and\n      interoperability requirements of the proposed new value and
    the\n      fields to be recorded in the registry.\n      Assignment policy:\n
    \     The assignments of these values must be coordinated with the\n      INCITS
    T10 committee; therefore, review by an expert that\n      maintains an association
    with that committee is required prior to\n      IESG approval of the associated
    specification.  After creation of\n      the registry, values are to be assigned
    sequentially (for example,\n      any value greater than 4 will not be assigned
    until after the\n      value 4 has been assigned).\n      Special care must be
    taken in the assignment of new values in this\n      registry.  Compatibility
    and interoperability will be adversely\n      impacted if proper care is not exercised.
    \ Features using this key\n      are expected to be cumulative.  For example,
    since this document\n      explicitly lists only value 2 for the features listed
    in this\n      document, it is expected that a new RFC assigning value 3 will\n
    \     also have the features listed in this RFC, and therefore such an\n      RFC
    is expected to either revise or replace this RFC.  Assignments\n      that do
    not follow this policy should be reviewed and approved by\n      the INCITS T10
    committee.\n      3-31: range available to IANA for assignment in this registry.\n
    \     Fields to record in the registry: Assigned value, description, and\n      its
    associated RFC reference.\n      The following entries have been added:\n         Value
    \ Description         Reference\n          0     No version claimed  RFC 7144\n
    \         1     RFC 7143            [RFC7143]\n          2     RFC 7144            RFC
    7144\n          3-31  Unassigned\n      Allocation Policy: Expert Review and Standards
    Action [RFC5226]\n   4.  iSCSI Task Management Function Response Codes\n      Name
    of new registry: \"iSCSI Task Management Function Response\n      Codes\"\n      Namespace
    details: Numerical values that can fit in 8 bits.\n      Information that must
    be provided to assign a new value: An IESG-\n      approved specification defining
    the semantics and interoperability\n      requirements of the proposed new value
    and the fields to be\n      recorded in the registry.\n      Assignment policy:\n
    \     If the requested value is not already assigned, it may be assigned\n      to
    the requester.\n      8-254: Range available to IANA for assignment in this registry.\n
    \     Fields to record in the registry: Assigned value, Operation Name,\n      and
    its associated RFC reference.\n      The following entries have been added:\n
    \        0 - Function complete, [RFC7143]\n         1 - Task does not exist, [RFC7143]\n
    \        2 - LUN does not exist, [RFC7143]\n         3 - Task still allegiant,
    [RFC7143]\n         4 - Task allegiance reassignment not supported, [RFC7143]\n
    \        5 - Task management function not supported, [RFC7143]\n         6 - Function
    authorization failed, [RFC7143]\n         7 - Function succeeded, RFC 7144\n         8-254
    - Unassigned\n         255 - Function rejected, [RFC7143]\n      Allocation Policy:
    Standards Action [RFC5226]\n"
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3723]  Aboba, B., Tseng, J., Walker, J., Rangan, V., and F.\n
      \             Travostino, \"Securing Block Storage Protocols over IP\",\n              RFC
      3723, April 2004.\n   [RFC5048]  Chadalapaka, M., Ed., \"Internet Small Computer
      System\n              Interface (iSCSI) Corrections and Clarifications\", RFC\n
      \             5048, October 2007.\n   [RFC5226]  Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
      BCP 26, RFC 5226,\n              May 2008.\n   [RFC7143]  Chadalapaka, M., Satran,
      J., Meth, K., and D. Black,\n              \"Internet Small Computer System
      Interface (iSCSI) Protocol\n              (Consolidated)\", RFC 7143, April
      2014.\n   [SAM2]     INCITS Technical Committee T10, \"SCSI Architecture Model
      -\n              2 (SAM-2)\", ANSI INCITS 366-2003, ISO/IEC 14776-412, 2003.\n
      \  [SAM5]     INCITS Technical Committee T10, \"SCSI Architecture Model -\n
      \             5 (SAM-5)\", T10/BSR INCITS 515 rev 04, Committee Draft.\n   [SPC4]
      \    INCITS Technical Committee T10, \"SCSI Primary Commands -\n              4\",
      ANSI INCITS 513-201x.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3720]  Satran, J., Meth, K., Sapuntzakis,
      C., Chadalapaka, M.,\n              and E. Zeidner, \"Internet Small Computer
      Systems Interface\n              (iSCSI)\", RFC 3720, April 2004.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "11.  Acknowledgements\n   The Storage Maintenance (STORM) Working Group in the
    Transport Area\n   of the IETF has been responsible for defining these additions
    to the\n   iSCSI protocol (apart from other relevant IP Storage protocols).  The\n
    \  authors acknowledge the contributions of the entire working group and\n   other
    IETF reviewers.\n   The following individuals directly contributed to identifying
    issues\n   and/or suggesting resolutions to the issues clarified in this\n   document:
    David Black, Rob Elliott.  This document benefited from all\n   of these contributions.\n"
  title: 11.  Acknowledgements
- contents:
  - "Authors' Addresses\n   Frederick Knight\n   7301 Kit Creek Road\n   P.O. Box
    13917\n   Research Triangle Park, NC 27709\n   USA\n   Phone: +1-919-476-5362\n
    \  EMail: knight@netapp.com\n   Mallikarjun Chadalapaka\n   Microsoft\n   One
    Microsoft Way\n   Redmond, WA 98052\n   USA\n   EMail: cbm@chadalapaka.com\n"
  title: Authors' Addresses
