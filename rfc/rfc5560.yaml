- title: __initial_text__
  contents:
  - '                  A One-Way Packet Duplication Metric

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   When a packet is sent from one host to the other, one normally\n\
    \   expects that exactly one copy of the packet that was sent arrives at\n   the\
    \ destination.  It is, however, possible that a packet is either\n   lost or that\
    \ multiple copies arrive.\n   In earlier work, a metric for packet loss was defined.\
    \  This metric\n   quantifies the case where a packet that is sent does not arrive\
    \ at\n   its destination within a reasonable time.  In this memo, a metric for\n\
    \   another case is defined: a packet is sent, but multiple copies\n   arrive.\
    \  The document also discusses streams and methods to summarize\n   the results\
    \ of streams.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Notation ......................................3\n  \
    \    1.2. Motivation .................................................4\n   2.\
    \ A Singleton Definition for One-Way Packet Arrival Count .........4\n      2.1.\
    \ Metric Name ................................................4\n      2.2. Metrics\
    \ Parameters .........................................4\n      2.3. Metric Units\
    \ ...............................................4\n      2.4. Definition .................................................4\n\
    \      2.5. Discussion .................................................5\n  \
    \    2.6. Methodology ................................................6\n    \
    \  2.7. Errors and Uncertainties ...................................6\n      2.8.\
    \ Reporting the Metric .......................................6\n   3. A Singleton\
    \ Definition for One-Way Packet Duplication ...........6\n      3.1. Metric Name\
    \ ................................................6\n      3.2. Metrics Parameters\
    \ .........................................7\n      3.3. Metric Units ...............................................7\n\
    \      3.4. Definition .................................................7\n  \
    \    3.5. Discussion .................................................7\n   4.\
    \ Definition for Samples for One-Way Packet Duplication ...........7\n      4.1.\
    \ Poisson Streams ............................................7\n           4.1.1.\
    \ Metric Name .........................................7\n           4.1.2. Metric\
    \ Parameters ...................................8\n           4.1.3. Metric Units\
    \ ........................................8\n           4.1.4. Definition ..........................................8\n\
    \           4.1.5. Methodology .........................................8\n  \
    \         4.1.6. Errors and Uncertainties ............................8\n    \
    \       4.1.7. Reporting the Metric ................................8\n      4.2.\
    \ Periodic Streams ...........................................9\n           4.2.1.\
    \ Metric Name .........................................9\n           4.2.2. Metric\
    \ Parameters ...................................9\n           4.2.3. Metric Units\
    \ ........................................9\n           4.2.4. Definition ..........................................9\n\
    \           4.2.5. Methodology .........................................9\n  \
    \         4.2.6. Errors and uncertainties ............................9\n    \
    \       4.2.7. Reporting the metric ...............................10\n   5. Some\
    \ Statistics Definitions for One-Way Duplication ............10\n      5.1. Type-P-one-way-packet-duplication-fraction\
    \ ................10\n      5.2. Type-P-one-way-replicated-packet-rate .....................10\n\
    \      5.3. Examples ..................................................11\n  \
    \ 6. Security Considerations ........................................12\n   7.\
    \ IANA Considerations ............................................12\n   8. Acknowledgements\
    \ ...............................................13\n   9. References .....................................................13\n\
    \      9.1. Normative References ......................................13\n  \
    \    9.2. Informative References ....................................13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a metric for one-way packet duplication\
    \ across\n   Internet paths.  It builds on the IP Performance Metrics (IPPM)\n\
    \   Framework document [RFC2330]; the reader is assumed to be familiar\n   with\
    \ that document.\n   This document follows the same structure as the document\
    \ for one-way\n   packet loss [RFC2680]; the reader is assumed to be familiar\
    \ with that\n   document as well.\n   The structure of this memo is as follows:\n\
    \   o  First, a singleton metric, called Type-P-one-way-packet-arrival-\n    \
    \  count, is introduced to measure the number of arriving packets for\n      each\
    \ packet sent.\n   o  Then, a singleton metric, called Type-P-one-way-packet-\n\
    \      duplication, is defined to describe a single instance of packet\n     \
    \ duplication.\n   o  Next, this singleton metric is used to define samples, Type-P-one-\n\
    \      way-Packet-Duplication-Poisson-Stream and Type-P-one-way-Packet-\n    \
    \  Duplication-Periodic-Stream.  These are introduced to measure\n      duplication\
    \ in a series of packets sent with either Poisson-\n      distributed [RFC2680]\
    \ or periodic [RFC3432] intervals between the\n      packets.\n   o  Finally,\
    \ statistics that summarize the properties of these samples\n      are introduced.\n"
- title: 1.1.  Requirements Notation
  contents:
  - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   Although RFC 2119 was written with protocols in mind, the\
    \ key words\n   are used in this document for similar reasons.  They are used\
    \ to\n   ensure the results of measurements from two different implementations\n\
    \   are comparable and to note instances when an implementation could\n   perturb\
    \ the network.\n"
- title: 1.2.  Motivation
  contents:
  - "1.2.  Motivation\n   When a packet is sent from one host to the other, one normally\n\
    \   expects that exactly one copy of the packet that was sent arrives at\n   the\
    \ destination.  It is, however, possible that a packet is either\n   lost or that\
    \ multiple copies arrive.\n   In earlier work, a metric for packet loss was defined\
    \ [RFC2680].\n   This metric distinguishes between cases where the packet arrives\
    \ and\n   where the packet does not arrive within a reasonable time.  In this\n\
    \   memo, a metric for a third outcome is defined: a single packet is\n   sent,\
    \ but multiple copies arrive.\n   As this document describes a case similar to\
    \ the one discussed in\n   [RFC2680], all considerations from that document on\
    \ timing and\n   accuracy apply.\n"
- title: 2.  A Singleton Definition for One-Way Packet Arrival Count
  contents:
  - '2.  A Singleton Definition for One-Way Packet Arrival Count

    '
- title: 2.1.  Metric Name
  contents:
  - "2.1.  Metric Name\n   Type-P-one-way-packet-arrival-count\n"
- title: 2.2.  Metrics Parameters
  contents:
  - "2.2.  Metrics Parameters\n   o  src, the IP address of a host\n   o  dst, the\
    \ IP address of a host\n   o  T, the wire time of a packet at the source\n   o\
    \  T0, the maximum waiting time for a packet to arrive at the\n      destination.\n"
- title: 2.3.  Metric Units
  contents:
  - "2.3.  Metric Units\n   An integer number.\n"
- title: 2.4.  Definition
  contents:
  - "2.4.  Definition\n   Two packets are considered identical if and only if:\n \
    \  o  Both contain identical information fields (see Section 2.5).  The\n    \
    \  recipient thus could take either packet and use the data in an\n      application.\
    \  The other packet does not contain any additional\n      information.\n   o\
    \  Both packets appear to have been sent by one and the same host, to\n      one\
    \ and the same destination.  Hosts are identified by their IP\n      addresses.\n\
    \   The value of a Type-P-one-way-packet-arrival-count is a positive\n   integer\
    \ number indicating the number of (uncorrupted and identical)\n   copies received\
    \ by dst in the interval [T, T+T0] for a packet sent by\n   src at time T.\n \
    \  If a packet is sent, but it is lost or does not arrive in the\n   interval\
    \ [T, T+T0], then the metric is undefined.  Applications MAY\n   report an \"\
    impossible\" value (for example, -1) to indicate this\n   condition instead of\
    \ undefined.\n   If a packet is fragmented during transport and if, for whatever\n\
    \   reason, reassembly does not occur, then the packet will be deemed\n   lost.\
    \  It is thus not included in the Type-P-one-way-packet-arrival-\n   count.\n"
- title: 2.5.  Discussion
  contents:
  - "2.5.  Discussion\n   This metric counts the number of packets arriving for each\
    \ packet\n   sent.  The time-out value T0 SHOULD be set to a value when the\n\
    \   application could potentially still use the packet and would not\n   discard\
    \ it automatically.\n   If this metric is used in parallel with the Packet Loss\
    \ Metric\n   [RFC2680], the value of T0 MUST be the same for both cases in order\n\
    \   to keep the results comparable.\n   The metric only counts packets that are\
    \ not corrupted during\n   transmission and may have been resent automatically\
    \ by lower layers\n   or intermediate devices.  Packets that were corrupted during\n\
    \   transmission but, nevertheless, still arrived at dst are not counted.\n  \
    \ Clocks do have to be synchronized between src and dst such that it is\n   possible\
    \ to uniquely and accurately determine the interval [T, T+T0]\n   at both sides.\n\
    \   If this metric is used in an active measurement system, the system\n   MUST\
    \ NOT send multiple packets with identical information fields in\n   order to\
    \ avoid that all packets will be declared duplicates.  This\n   metric can be\
    \ used inside a passive measurement system as well, using\n   packets generated\
    \ by another source.  However, if the source can send\n   two identical packets\
    \ within the interval [T, T+T0], this will be\n   incorrectly labeled as a duplicate,\
    \ resulting in a false positive.\n   It is up to the implementor to estimate if\
    \ this scenario is likely to\n   happen and the rate of false positives that is\
    \ acceptable.\n   The definition of identical information fields is such that\
    \ two\n   packets are considered to be identical if they are sent from the same\n\
    \   source and contain the same information.  This does not necessarily\n   mean\
    \ that all bits in the packet are the same.  For example, when a\n   packet is\
    \ replicated and the copies are transferred along different\n   paths, the Time\
    \ to Live (TTL) may be different.  The implementation\n   MUST specify which fields\
    \ are compared when deciding whether or not\n   two packets are identical.\n \
    \  In the case of IPv4, these will usually be: version, ihl,\n   identification,\
    \ src, dst, protocol, some or all upper-layer protocol\n   data.\n   In IPv6,\
    \ these will usually be: version, next header, source,\n   destination, some or\
    \ all upper-layer protocol data\n   Note that the use of the identification field\
    \ is not present in non-\n   fragmented IPv6 packets and may not be sufficient\
    \ to distinguish\n   packets from each even in IPv4, particularly at higher transmission\n\
    \   speeds\n"
- title: 2.6.  Methodology
  contents:
  - "2.6.  Methodology\n   The basic technique to measure this metric follows the\
    \ methodology\n   described in Section 2.6 of [RFC2680] with one exception.\n\
    \   [RFC2680] does not specify that the receiving host should be able to\n   receive\
    \ multiple copies of a single packet, as it only needs one copy\n   to determine\
    \ the metrics.  Implementations for this metric should\n   obviously be capable\
    \ of receiving multiple copies.\n"
- title: 2.7.  Errors and Uncertainties
  contents:
  - "2.7.  Errors and Uncertainties\n   Refer to Section 2.7 of [RFC2680].\n"
- title: 2.8.  Reporting the Metric
  contents:
  - "2.8.  Reporting the Metric\n   Refer to Section 2.8 of [RFC2680].\n"
- title: 3.  A Singleton Definition for One-Way Packet Duplication
  contents:
  - '3.  A Singleton Definition for One-Way Packet Duplication

    '
- title: 3.1.  Metric Name
  contents:
  - "3.1.  Metric Name\n   Type-P-one-way-packet-duplication\n"
- title: 3.2.  Metrics Parameters
  contents:
  - "3.2.  Metrics Parameters\n   o  src, the IP address of a host\n   o  dst, the\
    \ IP address of a host\n   o  T, the wire time of a packet at the source\n   o\
    \  T0, the maximum waiting time for a packet to arrive at the\n      destination.\n"
- title: 3.3.  Metric Units
  contents:
  - "3.3.  Metric Units\n   An integer number.\n"
- title: 3.4.  Definition
  contents:
  - "3.4.  Definition\n   The value of a Type-P-one-way-packet-duplication is a positive\n\
    \   integer number indicating the number of (uncorrupted and identical)\n   additional\
    \ copies of an individual packet received by dst in the\n   interval [T, T+T0]\
    \ as sent by src at time T.\n   If a packet is sent and only one copy arrives\
    \ in the interval [T,\n   T+T0], then the metric is 0.  If no copy arrives in\
    \ this interval,\n   then the metric is undefined.  Applications MAY report an\n\
    \   \"impossible\" value (for example, -1) to indicate this condition.\n"
- title: 3.5.  Discussion
  contents:
  - "3.5.  Discussion\n   This metric is equal to:\n        Type-P-one-way-packet-arrival-count\
    \ - 1\n   This metric is expected to be used for applications that need to know\n\
    \   duplication for an individual packet.  All considerations regarding\n   methodology,\
    \ errors, and reporting from the previous section apply.\n"
- title: 4.  Definition for Samples for One-Way Packet Duplication
  contents:
  - '4.  Definition for Samples for One-Way Packet Duplication

    '
- title: 4.1.  Poisson Streams
  contents:
  - '4.1.  Poisson Streams

    '
- title: 4.1.1.  Metric Name
  contents:
  - "4.1.1.  Metric Name\n   Type-P-one-way-Packet-Duplication-Poisson-Stream\n"
- title: 4.1.2.  Metric Parameters
  contents:
  - "4.1.2.  Metric Parameters\n   o  src, the IP address of a host.\n   o  dst, the\
    \ IP address of a host.\n   o  Ts, a time.\n   o  Tf, a time.  Ts and Tf specify\
    \ the time interval when packets can\n      be sent for this stream.\n   o  T0,\
    \ the maximum waiting time for a packet to arrive at the\n      destination.\n\
    \   o  lambda, a rate in reciprocal seconds.\n"
- title: 4.1.3.  Metric Units
  contents:
  - "4.1.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n\
    \   o  T, a time\n   o  Type-P-one-way-packet-arrival-count for the packet sent\
    \ at T.\n"
- title: 4.1.4.  Definition
  contents:
  - "4.1.4.  Definition\n   Given Ts, Tf, and lambda, we compute a pseudo-random Poisson\
    \ process\n   beginning at or before Ts, with average-rate lambda, and ending\
    \ at or\n   after Tf.  Those time values greater than or equal to Ts, and less\n\
    \   than or equal to Tf are then selected.  At each of the times in this\n   process,\
    \ we obtain the value of Type-P-one-way-packet-arrival-count.\n   The value of\
    \ the sample is the sequence made up of the resulting\n   {time, duplication}\
    \ pairs.  If there are no such pairs, the sequence\n   is of length zero, and\
    \ the sample is said to be empty.\n"
- title: 4.1.5.  Methodology
  contents:
  - "4.1.5.  Methodology\n   Refer to Section 3.6 of [RFC2680].\n"
- title: 4.1.6.  Errors and Uncertainties
  contents:
  - "4.1.6.  Errors and Uncertainties\n   Refer to Section 3.7 of [RFC2680].\n"
- title: 4.1.7.  Reporting the Metric
  contents:
  - "4.1.7.  Reporting the Metric\n   Refer to Section 3.8 of [RFC2680].\n"
- title: 4.2.  Periodic Streams
  contents:
  - '4.2.  Periodic Streams

    '
- title: 4.2.1.  Metric Name
  contents:
  - "4.2.1.  Metric Name\n   Type-P-one-way-Packet-Duplication-Periodic-Stream\n"
- title: 4.2.2.  Metric Parameters
  contents:
  - "4.2.2.  Metric Parameters\n   o  src, the IP address of a host.\n   o  dst, the\
    \ IP address of a host.\n   o  Ts, a time.\n   o  Tf, a time.  Ts and Tf specify\
    \ the time interval when packets can\n      be sent for this stream.\n   o  T0,\
    \ the maximum waiting time for a packet to arrive at the\n      destination.\n\
    \   o  lambda, a rate in reciprocal seconds.\n"
- title: 4.2.3.  Metric Units
  contents:
  - "4.2.3.  Metric Units\n   A sequence of pairs; the elements of each pair are:\n\
    \   o  T, a time\n   o  Type-P-one-way-packet-arrival-count for the packet sent\
    \ at T.\n"
- title: 4.2.4.  Definition
  contents:
  - "4.2.4.  Definition\n   At time Ts, we start sending packets with a constant-rate\
    \ lambda,\n   until time Tf.  For each packet sent, we obtain the value of Type-P-\n\
    \   one-way-packet-arrival-count.  The value of the sample is the\n   sequence\
    \ made up of the resulting {time, duplication} pairs.  If\n   there are no such\
    \ pairs, the sequence is of length zero and the\n   sample is said to be empty.\n"
- title: 4.2.5.  Methodology
  contents:
  - "4.2.5.  Methodology\n   Refer to Section 4.5 of [RFC3432].\n"
- title: 4.2.6.  Errors and uncertainties
  contents:
  - "4.2.6.  Errors and uncertainties\n   Refer to Section 4.6 of [RFC3432].\n"
- title: 4.2.7.  Reporting the metric
  contents:
  - "4.2.7.  Reporting the metric\n   Refer to Section 4.7 of [RFC3432].\n"
- title: 5.  Some Statistics Definitions for One-Way Duplication
  contents:
  - "5.  Some Statistics Definitions for One-Way Duplication\n   Note: the statistics\
    \ described in this section can be used for both\n   Type-P-one-way-Packet-Duplication-Poisson-Stream\
    \ and Type-P-one-way-\n   Packet-Duplication-Periodic-Stream.  The application\
    \ SHOULD report\n   which sample was used as input.\n"
- title: 5.1.  Type-P-one-way-packet-duplication-fraction
  contents:
  - "5.1.  Type-P-one-way-packet-duplication-fraction\n   This statistic gives the\
    \ fraction of additional packets that arrived\n   in a stream.\n   Given a Type-P-one-way-Packet-Duplication-Poisson-Stream,\
    \ one first\n   removes all values of Type-P-one-way-Packet-Duplication that are\n\
    \   undefined.  For the remaining pairs in the stream, one calculates:\n   (Sum\
    \ Type-P-one-way-packet-arrival-count/Number of pairs left) - 1\n   (In other\
    \ words, (number of packets received)/(number of packets sent\n   and not lost).)\n\
    \   The number can be expressed as a percentage.\n   Note: this statistic is the\
    \ equivalent to the Y.1540 IPDR [Y1540].\n"
- title: 5.2.  Type-P-one-way-replicated-packet-rate
  contents:
  - "5.2.  Type-P-one-way-replicated-packet-rate\n   This statistic gives the fraction\
    \ of packets that was duplicated (one\n   or more times) in a stream.\n   Given\
    \ a Type-P-one-way-Packet-Duplication-Poisson-Stream, one first\n   removes all\
    \ values of Type-P-one-way-packet-arrival-count that are\n   undefined.  For the\
    \ remaining pairs in the stream, one counts the\n   number of pairs with Type-P-one-way-packet-arrival-count\
    \ greater than\n   1.  Then, one calculates the fraction of packets that meet\
    \ this\n   criterion as a fraction of the total.  (In other words: (number of\n\
    \   duplicated packets)/(number of packets sent and not lost).)\n   The number\
    \ can be expressed as a percentage.\n   Note: this statistic is the equivalent\
    \ of the Y.1540 RIPR [Y1540].\n"
- title: 5.3.  Examples
  contents:
  - "5.3.  Examples\n   Consider a stream of 4 packets, sent as:\n        (1, 2, 3,\
    \ 4)\n   and arriving as:\n   o  Case 1: (1, 2, 3, 4)\n   o  Case 2: (1, 1, 2,\
    \ 2, 3, 3, 4, 4)\n   o  Case 3: (1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4)\n   o  Case\
    \ 4: (1, 1, 1, 2, 3, 3, 3, 4)\n   Case 1: No packets are duplicated in a stream,\
    \ and both the Type-P-\n   one-way-packet-duplication-fraction and the Type-P-one-way-packet-\n\
    \   replicated-packet-rate are 0.\n   Case 2: Every packet is duplicated once,\
    \ and the Type-P-one-way-\n   packet-duplication-fraction is 100%.  The Type-P-one-way-replicated-\n\
    \   packet-rate is 100%, too.\n   Case 3: Every packet is duplicated twice, so\
    \ the Type-P-one-way-\n   packet-duplication-fraction is 200%.  The Type-P-one-way-replicated-\n\
    \   packet-rate is still 100%.\n   Case 4: Half the packets are duplicated twice\
    \ and the other half are\n   not duplicated.  The Type-P-one-way-packet-duplication-fraction\
    \ is\n   again 100%, and this number does not show the difference with case 2.\n\
    \   However, the Type-P-one-way-packet-replicated-packet-rate is 50% in\n   this\
    \ case and 100% in case 2.\n   However, the Type-P-one-way-packet-duplication-rate\
    \ will not show the\n   difference between cases 2 and 3.  For this, one has to\
    \ look at the\n   Type-P-one-way-packet-duplication-fraction.\n   Finally, note\
    \ that the order in which the packets arrived does not\n   affect the results.\
    \  For example, these variations of case 2:\n   o  Case 2a: (1, 1, 2, 2, 3, 3,\
    \ 4, 4)\n   o  Case 2b: (1, 2, 3, 4, 1, 2, 3, 4)\n   o  Case 2c: (1, 2, 3, 4,\
    \ 4, 3, 2, 1)\n   (as well as any other permutation) all yield the same results\
    \ for\n   Type-P-one-way-packet-duplication-fraction and the Type-P-one-way-\n\
    \   replicated-packet-rate.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Conducting Internet measurements raises both\
    \ security and privacy\n   concerns.  This memo does not specify an implementation\
    \ of the\n   metrics, so it does not directly affect the security of the Internet\n\
    \   nor of applications that run on the Internet.  However,\n   implementations\
    \ of these metrics must be mindful of security and\n   privacy concerns.\n   There\
    \ are two types of security concerns: potential harm caused by\n   the measurements\
    \ and potential harm to the measurements.  The\n   measurements could cause harm\
    \ because they are active, and they\n   inject packets into the network.  The\
    \ measurement parameters MUST be\n   carefully selected so that the measurements\
    \ inject trivial amounts of\n   additional traffic into the networks they measure.\
    \  If they inject\n   \"too much\" traffic, they can skew the results of the measurement,\
    \ and\n   in extreme cases, cause congestion and denial of service.\n   The measurements\
    \ themselves could be harmed by routers giving\n   measurement traffic a different\
    \ priority than \"normal\" traffic or by\n   an attacker injecting artificial\
    \ measurement traffic.  If routers can\n   recognize measurement traffic and treat\
    \ it separately, the\n   measurements will not reflect actual user traffic.  If\
    \ an attacker\n   injects artificial traffic that is accepted as legitimate, the\
    \ loss\n   rate will be artificially lowered.  Therefore, the measurement\n  \
    \ methodologies SHOULD include appropriate techniques to reduce the\n   probability\
    \ that measurement traffic can be distinguished from\n   \"normal\" traffic. \
    \ Authentication techniques, such as digital\n   signatures, may be used where\
    \ appropriate to guard against injected\n   traffic attacks.\n   The privacy concerns\
    \ of network measurement are limited by the active\n   measurements described\
    \ in this memo.  Unlike passive measurements,\n   there can be no release of existing\
    \ user data.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   IANA has registered the metrics defined in this document\
    \ in the IP\n   Performance Metrics (IPPM) Metrics Registry, see [RFC4148].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The idea to write this document came up in a meeting\
    \ with Al Morton,\n   Stanislav Shalunov, Emile Stephan, and the author on the\
    \ IPPM\n   reporting document.\n   This document relies heavily on [RFC2680],\
    \ and the author would like\n   to thank the authors of that document for writing\
    \ it.\n   Finally, thanks are due to Lars Eggert, Al Morton, Martin Swany, and\n\
    \   Matt Zekauskas for their comments.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2680]  Almes, G., Kalidindi, S., and M. Zekauskas, \"A One-way\n\
    \              Packet Loss Metric for IPPM\", RFC 2680, September 1999.\n   [RFC3432]\
    \  Raisanen, V., Grotefeld, G., and A. Morton, \"Network\n              performance\
    \ measurement with periodic streams\", RFC 3432,\n              November 2002.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC2330]  Paxson, V., Almes, G., Mahdavi, J.,\
    \ and M. Mathis,\n              \"Framework for IP Performance Metrics\", RFC\
    \ 2330,\n              May 1998.\n   [RFC4148]  Stephan, E., \"IP Performance\
    \ Metrics (IPPM) Metrics\n              Registry\", BCP 108, RFC 4148, August\
    \ 2005.\n   [Y1540]    \"Y.1540 ITU-T Recommendation Y.1540 (2007), Internet\n\
    \              protocol data communication service IP packet transfer and\n  \
    \            availability performance parameters.\", 2007.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Henk Uijterwaal\n   RIPE NCC\n   Singel 258\n   1016 AB\
    \ Amsterdam\n   The Netherlands\n   Phone: +31 20 535 4444\n   EMail: henk@ripe.net\n"
