- contents:
  - '                DHCPv4-over-DHCPv6 (DHCP 4o6) Transport

    '
  title: __initial_text__
- contents:
  - "Abstract\n   IPv4 connectivity is still needed as networks migrate towards IPv6.\n
    \  Users require IPv4 configuration even if the uplink to their service\n   provider
    supports IPv6 only.  This document describes a mechanism for\n   obtaining IPv4
    configuration information dynamically in IPv6 networks\n   by carrying DHCPv4
    messages over DHCPv6 transport.  Two new DHCPv6\n   messages and two new DHCPv6
    options are defined for this purpose.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7341.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Requirements Language ...........................................3\n   3.
    Terminology .....................................................3\n   4. Applicability
    ...................................................4\n   5. Architecture Overview
    ...........................................4\n   6. New DHCPv6 Messages .............................................6\n
    \     6.1. Message Types ..............................................6\n      6.2.
    Message Formats ............................................6\n      6.3. DHCPv4-query
    Message Flags .................................7\n      6.4. DHCPv4-response Message
    Flags ..............................7\n   7. New DHCPv6 Options ..............................................7\n
    \     7.1. DHCPv4 Message Option Format ...............................7\n      7.2.
    DHCP 4o6 Server Address Option Format ......................8\n   8. Use of the
    DHCPv4-query Unicast Flag ............................9\n   9. DHCP 4o6 Client
    Behavior .......................................10\n   10. Relay Agent Behavior
    ..........................................12\n   11. DHCP 4o6 Server Behavior
    ......................................12\n   12. Security Considerations .......................................13\n
    \  13. IANA Considerations ...........................................14\n   14.
    Contributors List .............................................14\n   15. References
    ....................................................14\n      15.1. Normative
    References .....................................14\n      15.2. Informative References
    ...................................15\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   As the migration towards IPv6 continues, IPv6-only networks
    will\n   become more prevalent.  In such networks, IPv4 connectivity will\n   continue
    to be provided as a service over IPv6-only networks.  In\n   addition to provisioning
    IPv4 addresses for clients of this service,\n   other IPv4 configuration parameters
    may also be needed (e.g.,\n   addresses of IPv4-only services).\n   This document
    describes a transport mechanism to carry DHCPv4\n   messages using the DHCPv6
    protocol for the dynamic provisioning of\n   IPv4 addresses and other DHCPv4 specific
    configuration parameters\n   across IPv6-only networks.  It leverages the existing
    DHCPv4\n   infrastructure, e.g., failover, DNS updates, DHCP Leasequery, etc.\n
    \  When IPv6 multicast is used to transport DHCP 4o6 messages, another\n   benefit
    is that the operator can gain information about the\n   underlying IPv6 network
    to which the DHCP 4o6 client is connected\n   from the DHCPv6 relay agents through
    which the request has passed.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Terminology\n   This document makes use of the following terms:\n   CPE:\n
    \     Customer Premises Equipment (also known as Customer Provided\n      Equipment),
    which provides access for devices connected to a Local\n      Area Network (LAN),
    typically at the customer's site/home, to the\n      Internet Service Provider's
    (ISP's) network.\n   DHCP 4o6 client (or client):\n      A DHCP client supporting
    both the DHCPv6 protocol [RFC3315] as\n      well as the DHCPv4 over DHCPv6 protocol
    described in this\n      document.  Such a client is capable of requesting IPv6\n
    \     configuration using DHCPv6 and IPv4 configuration using DHCPv4\n      over
    DHCPv6.\n   DHCP 4o6 server (or server):\n      A DHCP server that is capable
    of processing DHCPv4 packets\n      encapsulated in the DHCPv4 Message option
    (defined below).\n   DHCPv4 over DHCPv6:\n      A protocol (described in this
    document) used to carry DHCPv4\n      messages in the payload of DHCPv6 messages.\n"
  title: 3.  Terminology
- contents:
  - "4.  Applicability\n   The mechanism described in this document is not universally\n
    \  applicable.  This is intended as a special-purpose mechanism that\n   will
    be implemented on nodes that must obtain IPv4 configuration\n   information using
    DHCPv4 in specific environments where native DHCPv4\n   is not available.  Such
    nodes are expected to follow the advice in\n   Section 9; nodes that do not require
    this functionality are expected\n   not to implement it, or not to enable it by
    default.  This mechanism\n   may be enabled using an administrative control, or
    it may be enabled\n   automatically in accordance with the needs of some dual-stack\n
    \  transition mechanism such as [LW4OVER6].  Such mechanisms are beyond\n   the
    scope of this document.\n"
  title: 4.  Applicability
- contents:
  - "5.  Architecture Overview\n   The architecture described here addresses a typical
    use case, where a\n   DHCP client's uplink supports IPv6 only and the Service
    Provider's\n   network supports IPv6 and limited IPv4 services.  In this scenario,\n
    \  the client can only use the IPv6 network to access IPv4 services, so\n   IPv4
    services must be configured using IPv6 as the underlying network\n   protocol.\n
    \  Although the purpose of this document is to address the problem of\n   communication
    between the DHCPv4 client and the DHCPv4 server, the\n   mechanism that it describes
    does not restrict the transported\n   messages types to DHCPv4 only.  As the DHCPv4
    message is a special\n   type of BOOTP message, BOOTP messages [RFC951] MAY also
    be\n   transported using the same mechanism.\n   DHCP clients may be running on
    CPE devices, end hosts, or any other\n   device that supports the DHCP-client
    function.  This document uses\n   the CPE as an example for describing the mechanism.
    \ This does not\n   preclude any end host, or other device requiring IPv4 configuration,\n
    \  from implementing DHCPv4 over DHCPv6 in the future.\n   This mechanism works
    by carrying DHCPv4 messages encapsulated within\n   the newly defined DHCPv6 messages.
    \ The DHCPv6-relay encapsulation is\n   used solely to deliver DHCPv4 packets
    to a DHCPv4-capable server, and\n   does not allocate any IPv6 addresses nor does
    it provide\n   IPv6-configuration information to the client.  Figure 1, below,\n
    \  illustrates one possible deployment architecture of this mechanism.\n   The
    DHCP 4o6 client implements a new DHCPv6 message called\n   DHCPv4-query, which
    carries a DHCPv4 message encapsulated in the new\n   DHCPv4 Message option.  The
    DHCPv6 message can be transmitted either\n   via DHCPv6 Relay Agents or directly
    to the DHCP 4o6 server.\n   The server replies with a new DHCPv6 message called
    DHCPv4-response,\n   which carries the DHCPv4 message from the server, encapsulated
    in the\n   DHCPv4 Message option.\n                 _____________             _____________\n
    \               /             \\           /             \\\n                |
    \            |           |             |\n       +--------+-+  IPv6   +-+-----------+-+
    \ IPv6   +-+--------+\n       | DHCP 4o6 | Network |    DHCPv6     | Network |
    DHCP 4o6 |\n       |  Client  +---------+  Relay Agent  +---------+  Server  |\n
    \      | (on CPE) |         |               |         |          |\n       +--------+-+
    \        +-+-----------+-+         +-+--------+\n                |             |
    \          |             |\n                \\_____________/           \\_____________/\n
    \                     Figure 1: Architecture Overview\n   Before the client can
    use DHCPv4 over DHCPv6, it MUST obtain the\n   necessary IPv6 configuration.  The
    client requests the DHCP 4o6\n   Server Address option from the server by sending
    the option code in\n   an Option Request option as described in [RFC3315].  If
    the server\n   responds with the DHCP 4o6 Server Address option, it is an indication\n
    \  to the client to attempt using DHCPv4 over DHCPv6 to obtain IPv4\n   configuration.
    \ Otherwise, the client MUST NOT use DHCPv4 over DHCPv6\n   to request IPv4 configuration.\n
    \  The client obtains the address(es) of the DHCP 4o6 server(s) from the\n   DHCP
    4o6 Server Address option and uses it (them) to communicate with\n   the DHCP
    4o6 servers as described in Section 9.  If the DHCP 4o6\n   Server Address option
    contains no addresses (is empty), the client\n   uses the well-known All_DHCP_Relay_Agents_and_Servers
    multicast\n   address to communicate with the DHCP 4o6 server(s).\n   Before applying
    for an IPv4 address via a DHCPv4-query message, the\n   client must identify a
    suitable network interface for the address.\n   Once the request is acknowledged
    by the server, the client can\n   configure the address and other relevant parameters
    on this\n   interface.  The mechanism for determining a suitable interface is
    out\n   of the scope of the document.\n"
  title: 5.  Architecture Overview
- contents:
  - "6.  New DHCPv6 Messages\n   Two new DHCPv6 messages carry DHCPv4 messages between
    the client and\n   the server using the DHCPv6 protocol: DHCPv4-query and\n   DHCPv4-response.
    \ This section describes the structures of these\n   messages.\n"
  - contents:
    - "6.1.  Message Types\n   DHCPV4-QUERY (20):  The DHCP 4o6 client sends a DHCPv4-query
      message\n      to a DHCP 4o6 server.  The DHCPv4 Message option carried by this\n
      \     message contains a DHCPv4 message that the DHCP 4o6 client uses to\n      request
      IPv4 configuration parameters from the server.\n   DHCPV4-RESPONSE (21):  A
      DHCP 4o6 server sends a DHCPv4-response\n      message to a DHCP 4o6 client.
      \ It contains a DHCPv4 Message option\n      carrying a DHCPv4 message in response
      to a DHCPv4 message received\n      by the server in the DHCPv4 Message option
      of the DHCPv4-query\n      message.\n"
    title: 6.1.  Message Types
  - contents:
    - "6.2.  Message Formats\n   Both DHCPv6 messages defined in this document share
      the following\n   format:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    msg-type   |                     flags                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                                                               |\n     .
      \                           options                            .\n     .                           (variable)
      \                         .\n     |                                                               |\n
      \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     Figure
      2: The Format of DHCPv4-query and DHCPv4-response Messages\n   msg-type:  Identifies
      the message type.  It can be either\n      DHCPV4-QUERY (20) or DHCPV4-RESPONSE
      (21) corresponding to the\n      contained DHCPv4-query or DHCPv4-response,
      respectively.\n   flags:  Specifies flags providing additional information required
      by\n      the server to process the DHCPv4 message encapsulated in the\n      DHCPv4-query
      message, or required by the client to process a\n      DHCPv4 message encapsulated
      in the DHCPv4-response message.\n   options:  Options carried by the message.
      \ The DHCPv4 Message Option\n      (described in Section 7.1) MUST be carried
      by the message.  Only\n      DHCPv6 options for IPv4 configuration may be included
      in this\n      field.  It MUST NOT contain DHCPv6 options related solely to
      IPv6,\n      or IPv6-only service configuration.\n"
    title: 6.2.  Message Formats
  - contents:
    - "6.3.  DHCPv4-query Message Flags\n   The \"flags\" field of the DHCPv4-query
      is used to carry additional\n   information that may be used by the server to
      process the\n   encapsulated DHCPv4 message.  Currently, only one bit of this
      field\n   is used.  Remaining bits are reserved for the future use.  The\n   \"flags\"
      field has the following format:\n          0                   1                   2\n
      \         0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \        |U|                    MBZ                      |\n         +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                   Figure 3: DHCPv4-query Flags Format\n   U:   Unicast flag.
      \ If set to 1, it indicates that the DHCPv4 message\n        encapsulated within
      the DHCPv4-query message would be sent to a\n        unicast address if it were
      sent using IPv4.  If this flag is set\n        to 0, it indicates that the DHCPv4
      message would be sent to the\n        broadcast address if it were sent using
      IPv4.  The usage of the\n        flag is described in detail in Section 8.\n
      \  MBZ: Bits MUST be set to zero when sending and MUST be ignored when\n        receiving.\n"
    title: 6.3.  DHCPv4-query Message Flags
  - contents:
    - "6.4.  DHCPv4-response Message Flags\n   This document introduces no flags to
      be carried in the \"flags\" field\n   of the DHCPv4-response message.  They
      are all reserved for future\n   use.  The DHCP 4o6 server MUST set all bits
      of this field to 0 and\n   the DHCP 4o6 client MUST ignore the content in this
      field.\n"
    title: 6.4.  DHCPv4-response Message Flags
  title: 6.  New DHCPv6 Messages
- contents:
  - '7.  New DHCPv6 Options

    '
  - contents:
    - "7.1.  DHCPv4 Message Option Format\n   The DHCPv4 Message option carries a
      DHCPv4 message that is sent by\n   the client or the server.  Such messages
      exclude any IP or UDP\n   headers.\n   The format of the DHCPv4 Message option
      is:\n      0                   1                   2                   3\n      0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |          option-code          |           option-len          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                                                               |\n     .
      \                       DHCPv4-message                         .\n     .                                                               .\n
      \    .                                                               .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                 Figure 4: DHCPv4 Message Option Format\n   option-code:  OPTION_DHCPV4_MSG
      (87).\n   option-len:  Length of the DHCPv4 message.\n   DHCPv4-message:  The
      DHCPv4 message sent by the client or the server.\n      In a DHCPv4-query message,
      it contains a DHCPv4 message sent by a\n      client.  In a DHCPv4-response
      message, it contains a DHCPv4\n      message sent by a server in response to
      a client.\n"
    title: 7.1.  DHCPv4 Message Option Format
  - contents:
    - "7.2.  DHCP 4o6 Server Address Option Format\n   The DHCP 4o6 Server Address
      option is sent by a server to a client\n   requesting IPv6 configuration using
      DHCPv6 [RFC3315].  It carries a\n   list of DHCP 4o6 servers' IPv6 addresses
      that the client should\n   contact to obtain IPv4 configuration.  This list
      may include\n   multicast and unicast addresses.  The client sends its requests
      to\n   all unique addresses carried in this option.\n   This option may also
      carry no IPv6 addresses, which instructs the\n   client to use the All_DHCP_Relay_Agents_and_Servers
      multicast address\n   as the destination address.\n   The presence of this option
      in the server's response indicates to the\n   client that it should use DHCPv4
      over DHCPv6 to obtain IPv4\n   configuration.  If the option is absent, the
      client MUST NOT enable\n   DHCPv4-over-DHCPv6 functionality.\n   The format
      of the DHCP 4o6 Server Address option is:\n      0                   1                   2
      \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |           option-code         |           option-len          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                                                               |\n     .
      \                       IPv6 Address(es)                       .\n     .                                                               .\n
      \    .                                                               .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \            Figure 5: DHCP 4o6 Servers Address Option Format\n   option-code:
      \ OPTION_DHCP4_O_DHCP6_SERVER (88).\n   option-len:  Length of the IPv6 address(es)
      carried by the option,\n      i.e., multiple of 16 octets.  Minimal length of
      this option is 0.\n   IPv6 Address:  Zero or more IPv6 addresses of the DHCP
      4o6 server(s).\n"
    title: 7.2.  DHCP 4o6 Server Address Option Format
  title: 7.  New DHCPv6 Options
- contents:
  - "8.  Use of the DHCPv4-query Unicast Flag\n   A DHCPv4 client conforming to [RFC2131]
    may send its DHCPREQUEST\n   message to either a broadcast or unicast address
    depending on its\n   state.  For example, a client in the RENEWING state uses
    a unicast\n   address to contact the DHCPv4 server to renew its lease.  A client
    in\n   the REBINDING state uses a broadcast address.\n   In DHCPv4 over DHCPv6,
    IPv6 is used to deliver DHCPv4 messages to the\n   DHCP 4o6 server.  There is
    no relation between the outer IPv6 address\n   and the inner DHCPv4 message.  As
    a result, the server is unable to\n   determine whether the received DHCPv4 messages
    should have been sent\n   using broadcast or unicast in IPv4 by checking the IPv6
    address.\n   In order to allow the server to determine the client's state, the\n
    \  Unicast flag is carried in the DHCPv4-query message.  The client MUST\n   set
    this flag to 1 when the DHCPv4 message would have been sent to\n   the unicast
    address if using DHCPv4 over IPv4.  This flag MUST be set\n   to 0 if the DHCPv4
    client would have sent the message to the\n   broadcast address in IPv4.  The
    choice whether a given message should\n   be sent to a broadcast or unicast address
    is made based on the\n   [RFC2131] and its extensions.\n   Note: The Unicast flag
    reflects how the DHCPv4 packet would have been\n   sent; not how the DHCPv6 packet
    itself is sent.\n"
  title: 8.  Use of the DHCPv4-query Unicast Flag
- contents:
  - "9.  DHCP 4o6 Client Behavior\n   The client MUST obtain necessary IPv6 configuration
    from a DHCPv6\n   server before using DHCPv4 over DHCPv6.  The client requests
    the DHCP\n   4o6 Server Address option using the Option Request option (ORO) in\n
    \  every Solicit, Request, Renew, Rebind, and Information-request\n   message.
    \ If the DHCPv6 server includes the DHCP 4o6 Server Address\n   option in its
    response, it is an indication that the client can use\n   DHCPv4 over DHCPv6 to
    obtain the IPv4 configuration (by sending\n   DHCPv4 messages encapsulated in
    DHCPv4-query messages).\n   The client MUST NOT use DHCPv4 over DHCPv6 to request
    IPv4\n   configuration if the DHCPv6 server does not include the DHCP 4o6\n   Server
    Address option.  If the IPv6 configuration that contained the\n   DHCP 4o6 Server
    Address option subsequently expires, or if the\n   renewed IPv6 configuration
    does not contain the DHCP 4o6 Server\n   Address option, the client MUST stop
    using DHCPv4 over DHCPv6 to\n   request or renew IPv4 configuration.  However,
    the client continues\n   to request DHCP 4o6 Server Address option in the messages
    sent to the\n   DHCPv6 server as long as it desires to use DHCPv4 over DHCPv6.\n
    \  It is possible in a multihomed configuration for there to be more\n   than
    one DHCPv6 configuration containing a DHCP 4o6 Server Address\n   Option active
    at the same time.  In this case, the configurations are\n   treated as being independent,
    so that when any such configuration is\n   active, a DHCPv4-over-DHCPv6 function
    may be enabled for that\n   configuration.\n   An implementation may also treat
    such configurations as being\n   exclusive, such that only one is kept active
    at a time.  In this\n   case, the client keeps the same configuration active continuously
    as\n   long as it is valid.  If that configuration becomes invalid but one\n   or
    more other configurations remain valid, the client activates one\n   of the remaining
    valid configurations.\n   Which strategy to follow is dependent on the implementation:
    keeping\n   multiple configurations active at the same time may provide useful\n
    \  redundancy in some applications but may be needlessly complex in\n   other
    cases.\n   If the client receives the DHCP 4o6 Server Address option and DHCPv4\n
    \  [RFC2131] is used on the interface over which the DHCPv6 option was\n   received,
    the client MUST stop using the IPv4 configuration received\n   using DHCPv4 on
    this interface.  The client MAY send a DHCPRELEASE to\n   the DHCPv4 server to
    relinquish an existing lease as described in\n   Section 4.4.6 of [RFC2131].  The
    client MUST NOT use DHCPv4 on this\n   interface as long as it receives DHCP 4o6
    Server Address option in\n   the messages received from the DHCPv6 server.\n   If
    the client receives a DHCP 4o6 Server Address option that contains\n   no IP addresses,
    i.e., the option is empty, the client MUST send its\n   requests to the All_DHCP_Relay_Agents_and_Servers
    multicast address.\n   If there is a list of IP addresses in the option, the client
    SHOULD\n   send requests to each unique address carried by the option.\n   If
    the client obtained stateless IPv6 configuration by sending an\n   Information-request
    message to the server, the client MUST follow the\n   rules in [RFC4242] to periodically
    refresh the DHCPv4-over-DHCPv6\n   configuration (i.e., list of DHCP 4o6 servers)
    as well as other\n   configuration data.  The client that obtained stateful IPv6\n
    \  configuration will refresh the status of DHCPv4-over-DHCPv6 function\n   when
    extending a lifetime of acquired IPv6 address (Renew and Rebind\n   messages).\n
    \  The client MUST employ an IPv6 address of an appropriate scope from\n   which
    to source the DHCPv4-query message.  When the client sends a\n   DHCPv4-query
    message to the multicast address, it MUST use a link-\n   local address as the
    source address as described in [RFC3315].  When\n   the client sends a DHCPv4-query
    message using unicast, the source\n   address MUST be an address of appropriate
    scope, acquired in advance.\n   The client generates a DHCPv4 message and stores
    it verbatim in the\n   DHCPv4 Message option carried by the DHCPv4-query message.
    \ The\n   client MUST put exactly one DHCPv4 Message option into a single\n   DHCPv4-query
    message.  The client MUST NOT request the DHCP 4o6\n   Server Address option in
    the DHCPv4-query message.\n   The client MUST follow the rules defined in Section
    8 when setting\n   the Unicast flag based on the DHCPv4 destination.\n   On receiving
    a DHCPv4-response message, the client MUST look for the\n   DHCPv4 Message option
    within this message.  If this option is not\n   found, the DHCPv4-response message
    is discarded.  If the DHCPv4\n   Message option is present, the client extracts
    the DHCPv4 message it\n   contains and processes it as described in Section 4.4
    of [RFC2131].\n   When dealing with IPv4 configuration, the client MUST follow
    the\n   normal DHCPv4 retransmission requirements and strategy as specified\n
    \  in Section 4.1 of [RFC2131].  There are no explicit transmission\n   parameters
    associated with a DHCPv4-query message, as this is\n   governed by the DHCPv4
    \"state machine\" [RFC2131].\n   The client MUST implement [RFC4361] to ensure
    that the device\n   correctly identifies itself.  It MUST send a 'client identifier'\n
    \  option when using DHCPv4 over DHCPv6.\n"
  title: 9.  DHCP 4o6 Client Behavior
- contents:
  - "10.  Relay Agent Behavior\n   When a DHCPv6 relay agent receives a DHCPv4-query
    message, it may not\n   recognize this message.  The unknown message MUST be forwarded
    as\n   described in [RFC7283].\n   A DHCPv6 relay agent that can recognize DHCP
    4o6 messages MAY allow\n   the configuration of a separate set of destination
    addresses for such\n   messages in addition to the destination addresses used
    for relaying\n   the other DHCPv6 messages.  To implement this function, the relay\n
    \  checks the received DHCPv6 message type and forwards according to the\n   following
    logic:\n   1.  If the message type is DHCPV4-QUERY, the packet is relayed to the\n
    \      configured DHCP 4o6 Server's address(es) in the form of a normal\n       DHCPv6
    packet (i.e., DHCPv6/UDP/IPv6).\n   2.  For any other DHCPv6 message type, forward
    according to section\n       20 of [RFC3315].\n   The above logic only allows
    for separate relay destinations\n   configured on the relay agent closest to the
    client (single relay\n   hop).  Multiple relaying hops are not considered in the
    case of\n   separate relay destinations.\n"
  title: 10.  Relay Agent Behavior
- contents:
  - "11.  DHCP 4o6 Server Behavior\n   When the server receives a DHCPv4-query message
    from a client, it\n   searches for the DHCPv4 Message option.  The server discards
    a packet\n   without this option.  In addition, the server MAY notify an\n   administrator
    about the receipt of this malformed packet.  The\n   mechanism for this notification
    is out of scope for this document.\n   If the server finds a valid DHCPv4 Message
    option, it extracts the\n   original DHCPv4 message.  Since the DHCPv4 message
    is encapsulated in\n   the DHCPv6 message, it lacks the information that is typically
    used\n   by the DHCPv4 server, implementing [RFC2131], to make address-\n   allocation
    decisions, e.g., giaddr for relayed messages and IPv4\n   address of the interface
    that the server is using to communicate with\n   a directly connected client.
    \ Therefore, the DHCP 4o6 server\n   allocates addresses according to the policies
    on local address\n   assignment determined by the server administrator.  For example,
    if\n   the DHCPv4-query message has been sent via a relay, the server MAY\n   use
    the link-address field of the Relay-forward message as a lookup\n   for the IPv4
    subnet from which to assign a DHCPv4 address.  If the\n   DHCPv4-query message
    has been sent from a directly connected client,\n   the server MAY use the IPv6
    source address of the message to\n   determine the appropriate IPv4 subnet to
    use for DHCPv4 address\n   assignment.\n   Alternatively, the server may act as
    a DHCPv4 relay agent and forward\n   the DHCPv4 packet to a \"normal\" DHCPv4
    server.  The details of such a\n   solution have not been considered by the working
    group; describing\n   that solution is out of scope of this document and is left
    as future\n   work should the need for it arise.\n   The server SHOULD use the
    \"flags\" field of the DHCPv4-query message\n   to create a response (server to
    client DHCPv4 message).  The use of\n   this field is described in detail in Section
    8.\n   When an appropriate DHCPv4 response is created, the server places it\n
    \  in the payload of a DHCPv4 Message option, which it puts into the\n   DHCPv4-response
    message.\n   If the DHCPv4-query message was received directly by the server,
    the\n   DHCPv4-response message MUST be unicast from the interface on which\n
    \  the original message was received.\n   If the DHCPv4-query message was received
    in a Relay-forward message,\n   the server creates a Relay-reply message with
    the DHCPv4-response\n   message in the payload of a Relay Message option, and
    responds as\n   described in Section 20.3 of [RFC3315].\n"
  title: 11.  DHCP 4o6 Server Behavior
- contents:
  - "12.  Security Considerations\n   In this specification, DHCPv4 messages are encapsulated
    in the newly\n   defined option and messages.  This is similar to the handling
    of the\n   current relay agent messages.  In order to bypass firewalls or\n   network
    authentication gateways, a malicious attacker may leverage\n   this feature to
    convey other messages using DHCPv6, i.e., use DHCPv6\n   as a form of encapsulation.
    \ However, the potential risk from this is\n   no more severe than that with the
    current DHCPv4 and DHCPv6 practice.\n   It is possible for a rogue server to reply
    with a DHCP 4o6 Server\n   Address option containing duplicated IPv6 addresses,
    which could\n   cause an amplification attack.  To avoid this, the client MUST
    check\n   if there are duplicate IPv6 addresses in a DHCP 4o6 Server Address\n
    \  option when receiving one.  The client MUST ignore any but the first\n   instance
    of each address.\n   When considering whether to enable DHCPv4-over-DHCPv6, one
    important\n   consideration is that when it is enabled, this gives the DHCPv6\n
    \  server the ability to shut off DHCPv4 traffic, and, consequently,\n   IPv4
    traffic, on the interface that is configured to do DHCPv4-over-\n   DHCPv6.  For
    this reason, DHCPv4-over-DHCPv6 should only be enabled\n   in situations where
    there is a clear trust relationship that\n   eliminates this concern.  For instance,
    a CPE device can safely\n   enable this on its WAN interface, because it is reasonable
    to assume\n   that an ISP will not accidentally configure DHCPv4 over DHCPv6\n
    \  service on that link, and that it will be impractical for an attacker\n   to
    set up a rogue DHCPv6 server in the ISP's network.\n"
  title: 12.  Security Considerations
- contents:
  - "13.  IANA Considerations\n   IANA has allocated two DHCPv6 option codes for use
    by\n   OPTION_DHCPV4_MSG (87) and OPTION_DHCP4_O_DHCP6_SERVER (88) from the\n
    \  \"Option Codes\" table.  Also, IANA has allocated two DHCPv6 message\n   type
    codes for the DHCPV4-QUERY (20) and DHCPV4-RESPONSE (21) from\n   the \"Message
    Types\" table of the \"Dynamic Host Configuration Protocol\n   for IPv6 (DHCPv6)\"
    registry.  Both tables can be found at\n   <http://www.iana.org/assignments/dhcpv6-parameters/>.\n"
  title: 13.  IANA Considerations
- contents:
  - "14.  Contributors List\n   Many thanks to Ted Lemon, Bernie Volz, Tomek Mrugalski,
    Cong Liu, and\n   Yuchi Chen for their great contributions to the specification.\n"
  title: 14.  Contributors List
- contents:
  - '15.  References

    '
  - contents:
    - "15.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2131]  Droms, R., \"Dynamic Host Configuration Protocol\", RFC\n
      \             2131, March 1997.\n   [RFC3315]  Droms, R., Bound, J., Volz, B.,
      Lemon, T., Perkins, C.,\n              and M. Carney, \"Dynamic Host Configuration
      Protocol for\n              IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC4242]
      \ Venaas, S., Chown, T., and B. Volz, \"Information Refresh\n              Time
      Option for Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)\",
      RFC 4242, November 2005.\n   [RFC4361]  Lemon, T. and B. Sommerfeld, \"Node-specific
      Client\n              Identifiers for Dynamic Host Configuration Protocol\n
      \             Version Four (DHCPv4)\", RFC 4361, February 2006.\n   [RFC7283]
      \ Cui, Y., Sun, Q., and T. Lemon, \"Handling Unknown DHCPv6\n              Messages\",
      RFC 7283, July 2014.\n"
    title: 15.1.  Normative References
  - contents:
    - "15.2.  Informative References\n   [LW4OVER6]\n              Cui, Y., Sun, Q.,
      Boucadair, M., Tsou, T., Lee, Y., and I.\n              Farrer, \"Lightweight
      4over6: An Extension to the DS-Lite\n              Architecture\", Work in Progress,
      June 2014.\n   [RFC951]   Croft, B. and J. Gilmore, \"Bootstrap Protocol\",
      RFC 951,\n              September 1985.\n"
    title: 15.2.  Informative References
  title: 15.  References
- contents:
  - "Authors' Addresses\n   Qi Sun\n   Tsinghua University\n   Beijing  100084\n   P.R.
    China\n   Phone: +86-10-6278-5822\n   EMail: sunqi@csnet1.cs.tsinghua.edu.cn\n
    \  Yong Cui\n   Tsinghua University\n   Beijing  100084\n   P.R. China\n   Phone:
    +86-10-6260-3059\n   EMail: yong@csnet1.cs.tsinghua.edu.cn\n   Marcin Siodelski\n
    \  Internet Systems Consortium\n   950 Charter Street\n   Redwood City, CA  94063\n
    \  USA\n   EMail: msiodelski@gmail.com\n   Suresh Krishnan\n   Ericsson\n   8400
    Blvd. Decarie\n   Town of Mount Royal, Quebec\n   Canada\n   EMail: suresh.krishnan@ericsson.com\n
    \  Ian Farrer\n   Deutsche Telekom AG\n   CTO-ATI, Landgrabenweg 151\n   Bonn,
    NRW  53227\n   Germany\n   EMail: ian.farrer@telekom.de\n"
  title: Authors' Addresses
