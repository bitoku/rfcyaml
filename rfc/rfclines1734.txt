This document describes the optional AUTH command, for indicating an authentication mechanism to the server, performing an authentication protocol exchange, and optionally negotiating a protection mechanism for subsequent protocol interactions.
The authentication and protection mechanisms used by the POP3 AUTH command are those used by IMAP4.
The AUTH command AUTH mechanism Arguments: a string identifying an IMAP4 authentication mechanism, such as defined by [IMAP4 AUTH].
Any use of the string "imap" used in a server authentication identity in the definition of an authentication mechanism is replaced with the string "pop".
Restrictions: may only be given in the AUTHORIZATION state Discussion: The AUTH command indicates an authentication mechanism to the server.
If the server supports the requested authentication mechanism, it performs an authentication protocol exchange to authenticate and identify the user.
Optionally, it also negotiates a protection mechanism for subsequent protocol interactions.
If the requested authentication mechanism is not supported, the server should reject the AUTH command by sending a negative response.
The authentication protocol exchange consists of a series of server challenges and client answers that are specific to the authentication mechanism.
The client answer consists of a line containing a BASE64 encoded string.
If the server receives such an answer, it must reject the AUTH command by sending a negative response.
A protection mechanism provides integrity and privacy protection to the protocol session.
If a protection mechanism is negotiated, it is applied to all subsequent data sent over the connection.
The protection mechanism takes effect immediately following the CRLF that concludes the authentication exchange for the client, and the CRLF of the positive response for the server.
Once the protection mechanism is in effect, the stream of command and response octets is processed into buffers of ciphertext.
Each buffer is transferred over the connection as a stream of octets prepended with a four octet field in network byte order that represents the length of the following data.
The maximum ciphertext buffer length is defined by the protection mechanism.
The server is not required to support any particular authentication mechanism, nor are authentication mechanisms required to support any protection mechanisms.
If an AUTH command fails with a negative response, the session remains in the AUTHORIZATION state and client may try another authentication mechanism by issuing another AUTH command, or may attempt to authenticate by using the USER/PASS or APOP commands.
In other words, the client may request authentication types in decreasing order of preference, with the USER/PASS or APOP command as a last resort.
Should the client successfully complete the authentication exchange, the POP3 server issues a positive response and the POP3 session enters the TRANSACTION state.
Possible Responses:  OK maildrop locked and ready  ERR authentication exchange failed Examples:
S:  OK POP3 server ready C:
S:  OK Kerberos V4 authentication successful ...
ERR Unrecognized authentication type Note:
the line breaks in the first client answer  are for editorial clarity and are not in real authentica  tors.
The following syntax specification uses the augmented Backus Naur Form (BNF) notation as specified in RFC 822.
Except as noted otherwise, all alphabetic characters are case  insensitive.
The use of upper or lower case characters to define token strings is for editorial clarity only.
Implementations MUST accept these strings in a case insensitive fashion.
::  1 ATOM CHAR base64
any 7 bit US ASCII character except NUL, 0x01
Security Considerations Security issues are discussed throughout this memo.
