- contents:
  - '                               Event MIB

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects that can be used to\n   manage and monitor
    MIB objects and take action through events.\n   The Event MIB provides the ability
    to monitor MIB objects on the\n   local system or on a remote system and take
    simple action when a\n   trigger condition is met.\n   The key words \"MUST\",
    \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD
    NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to
    be interpreted as described in RFC 2119.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1 The SNMP Management Framework ...............................
    \   2\n   2 Overview ....................................................    3\n
    \  3 Relationship to Other MIBs ..................................    3\n   4
    MIB Sections ................................................    4\n   5 Operation
    ...................................................    5\n   6 Security ....................................................
    \   7\n   7 Definitions .................................................    7\n
    \  8 Intellectual Property .......................................   47\n   9
    Acknowledgements ............................................   47\n   10 References
    .................................................   47\n   11 Security Considerations
    ....................................   49\n   12 Author's Address ...........................................
    \  49\n   13 Editor's Address ...........................................   49\n
    \  14 Full Copyright Statement ...................................   50\n"
  title: Table of Contents
- contents:
  - "1.  The SNMP Management Framework\n   The SNMP Management Framework presently
    consists of five major\n   components:\n    o   An overall architecture, described
    in RFC 2571 [RFC2571].\n    o   Mechanisms for describing and naming objects and
    events for the\n        purpose of management.  The first version of this Structure
    of\n        Management Information (SMI) is called SMIv1 and described in\n        STD
    16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC\n        1215 [RFC1215].
    \ The second version, called SMIv2, is described\n        in STD 58, RFC 2578
    [RFC2578], STD 58, RFC 2579 [RFC2579] and\n        STD 58, RFC 2580 [RFC2580].\n
    \   o   Message protocols for transferring management information.  The\n        first
    version of the SNMP message protocol is called SNMPv1 and\n        described in
    STD 15, RFC 1157 [RFC1157].  A second version of\n        the SNMP message protocol,
    which is not an Internet standards\n        track protocol, is called SNMPv2c
    and described in RFC 1901\n        [RFC1901] and RFC 1906 [RFC1906].  The third
    version of the\n        message protocol is called SNMPv3 and described in RFC
    1906\n        [RFC1906], RFC 2572 [RFC2572] and RFC 2574 [RFC2574].\n    o   Protocol
    operations for accessing management information.  The\n        first set of protocol
    operations and associated PDU formats is\n        described in STD 15, RFC 1157
    [RFC1157].  A second set of\n        protocol operations and associated PDU formats
    is described in\n        RFC 1905 [RFC1905].\n    o   A set of fundamental applications
    described in RFC 2573\n        [RFC2573] and the view-based access control mechanism
    described\n        in RFC 2575 [RFC2575].\n   A more detailed introduction to
    the current SNMP Management Framework\n   can be found in RFC 2570 [RFC2570].\n
    \  Managed objects are accessed via a virtual information store, termed\n   the
    Management Information Base or MIB.  Objects in the MIB are\n   defined using
    the mechanisms defined in the SMI.\n   This memo specifies a MIB module that is
    compliant to the SMIv2.  A\n   MIB conforming to the SMIv1 can be produced through
    the appropriate\n   translations.  The resulting translated MIB must be semantically\n
    \  equivalent, except where objects or events are omitted because no\n   translation
    is possible (use of Counter64).  Some machine readable\n   information in SMIv2
    will be converted into textual descriptions in\n   SMIv1 during the translation
    process.  However, this loss of machine\n   readable information is not considered
    to change the semantics of the\n   MIB.  It may not be possible to meaningfully
    monitor Counter64\n   objects using an SMIv1 version of the MIB.\n"
  title: 1.  The SNMP Management Framework
- contents:
  - "2.  Overview\n   With network sizes well beyond the ability of people to manage
    them\n   directly, automated, distributed management is vital.  An important\n
    \  aspect of such management is the ability of a system to monitor\n   itself
    or for some other system to monitor it.\n   The Event MIB provides the ability
    to monitor MIB objects on the\n   local system or on a remote system and take
    simple action when a\n   trigger condition is met.\n   The MIB is intended to
    suit either a relatively powerful manager or\n   mid- level manager, as well as
    a somewhat more limited self-managing\n   system.\n"
  title: 2.  Overview
- contents:
  - "3.  Relationship to Other MIBs\n   The Event MIB is based on extensive experience
    with the RMON MIB\n   [RFC1757] and provides a superset of the capabilities of
    the RMON\n   alarm and event groups.  Conceptually, the key extension is the\n
    \  ability to allow alarms to be generated for MIB objects that are on\n   another
    network element.  The Event MIB calls \"triggers\" what the\n   RMON MIB called
    \"alarms,\" but the concepts are the same.  Event MIB\n   triggers maintain the
    RMON handling of thresholds and add the concept\n   of booleans.  Event MIB events
    maintain the RMON concept of sending\n   an SNMP notification in response to a
    trigger and add the concept of\n   setting a MIB object.\n   The Event MIB is
    the successor and update to SNMPv2's Manager-to-\n   Manager MIB [RFC1451] which
    was declared Historic pending this work.\n   The Event MIB depends on the services
    of the SNMPv3 Management Target\n   and Notification MIBs [RFC2573].\n   The Event
    MIB is nicely complemented by the Distributed Management\n   Expression MIB [RFC2982],
    which is the expected source of boolean\n   objects to monitor.  Note that there
    is considerable overlap between\n   the wildcard and delta sample capabilities
    of the Event and\n   Expression MIBs.  A carefully-planned implementation might
    well use\n   common code to provide the overlapping functions.\n"
  title: 3.  Relationship to Other MIBs
- contents:
  - "4.  MIB Sections\n   The MIB has four sections: triggers, objects, events, and\n
    \  notifications.  Triggers define the conditions that lead to events.\n   Events
    may cause notifications.\n   The trigger table lists what objects are to be monitored
    and how and\n   relates each trigger to an event.  It has supplementary, companion\n
    \  tables for additional objects that depend on the type of test done\n   for
    the trigger.\n   The objects table lists objects that can be added to notifications\n
    \  based on the trigger, the trigger test type, or the event that\n   resulted
    in the notification.\n   The event table defines what happens when an event is
    triggered:\n   sending a notification, setting a MIB object or both.  It has\n
    \  supplementary, companion tables for additional objects that depend on\n   the
    action taken.\n   The notification section defines a set of generic notifications
    to go\n   with the events and for Event MIB error handling, and it defines a\n
    \  set of objects to put in those notifications.\n   The following diagram describes
    the relationships between the tables\n   in the Event MIB.\n   +-----------------------------+\n
    \  | mteTriggerEntry             |      subclassed by:\n   |  { mteOwner,                |---+\n
    \  |    IMPLIED mteTriggerName } |   +-- mteTriggerDeltaEntry\n   |                             |
    \  |\n   |                             |   +-- mteTriggerExistenceEntry\n   |
    \                            |   |\n   |                             |   +-- mteTriggerBooleanEntry\n
    \  |                             |   |\n   |                             |   +--
    mteTriggerThresholdEntry\n   |                             |\n   |       mteTrigger*Event
    -------------------------------->+\n   |                             |                           |\n
    \  |       mteTriggerObjects ------------------>+            |\n   +-----------------------------+
    \             |            |\n                                                |
    \           |\n   +-----------------------------+              V            |\n
    \  | mteObjectsEntry             |              |            |\n   |  { mteOwner,
    \               |<-------------+            |\n   |    mteObjectsName,          |
    \                          |\n   |    mteObjectsIndex }        |                           |\n
    \  +-----------------------------+                           |\n                                                             V\n
    \  +---------------------------+                             |\n   | mteEventEntry
    \            |<----------------------------+\n   |  { mteOwner,              |\n
    \  |    IMPLIED mteEventName } |\n   |                           |\n   |            mteEventAction--->
    + (condition)\n   +---------------------------+   |\n                                   V\n
    \  +---------------------------+   |   +---------------------------+\n   | mteEventNotificationEntry
    |   |   | mteEventSetEntry          |\n   |  { mteOwner,              |<--+-->|
    \ { mteOwner,              |\n   |    IMPLIED mteEventName } |       |    IMPLIED
    mteEventName } |\n   +---------------------------+       +---------------------------+\n"
  title: 4.  MIB Sections
- contents:
  - "5.  Operation\n   The Event MIB is instrumentation for a distributed management\n
    \  application that monitors MIB objects.  In its simplest form this\n   application
    monitors individual, local MIB objects, just as an RMON\n   probe fulfills the
    functions implied by RMON's alarm and event\n   operation.  Additionally the application
    can monitor remote objects\n   and wildcarded groups of objects.\n   Remote monitoring
    uses the tag service of the Management Target MIB\n   [RFC2573] to select and
    access remote systems as an ordinary SNMP-\n   based management application.  Local
    monitoring may be via a more\n   intimate, local interface which may, for example,
    bypass SNMP\n   encoding but otherwise is functionally identical to remote SNMP\n
    \  operation, including the application of access control.  A self-\n   management
    only system MAY not implement remote monitoring.\n   Wildcards indicate that the
    application SHOULD use a GetNext-type\n   operation to find the zero or more instances
    implied by a truncated\n   object identifier, just like an ordinary SNMP-based
    management\n   application.  Each instance of a wildcard is treated as if it were
    a\n   separate entry, that is the instances of a wildcarded object are\n   independent
    of one another.  For example, a wild-carded object may\n   trigger an event, and
    result in the setting of another wildcarded\n   object.  The instance that satisfied
    the trigger function is used to\n   perform the set function.  All of this takes
    place independently of\n   any additional instances that may fill the wildcard.\n
    \  Error handling is by notification.  These error notifications SHOULD\n   be
    enabled only for the diagnosis of problems indicated by error\n   counters.  If
    minimizing the probability of notification loss is a\n   concern they SHOULD be
    transmitted as Inform PDUs as described in the\n   [SNMP-TARGET-MIB] or directed
    to a log as described in the\n   Notification Log MIB [rfcNotificationLogMIB].
    \ Note that this does\n   not mean the Notification Log MIB is REQUIRED, since
    in fact\n   notifications usually are not lost, but that the Notification Log
    MIB\n   can be helpful with this as well as other MIBs that include\n   notifications.\n
    \  Although like most MIBs this one has no explicit controls for the\n   persistence
    of the values set in configuring events, a robust, polite\n   implementation would
    certainly not force its managing applications to\n   reconfigure it whenever it
    resets.\n   Again, as with most MIBs, it is implementation-specific how a system\n
    \  provides and manages such persistence.  To speculate, one could\n   imagine,
    for example, that persistence depended on the context in\n   which the expression
    was configured, or perhaps system-specific\n   characteristics of the expression's
    owner.  Or perhaps everything in\n   a MIB such as this one, which is clearly
    aimed at persistent\n   configuration, is automatically part of a system's other
    persistent\n   configuration.\n"
  title: 5.  Operation
- contents:
  - "6.  Security\n   Security of Event MIB entries depends on SNMPv3 access control
    for\n   the entire MIB or for subsets based on entry owner names.\n   Security
    of monitored objects for remote access depends on the\n   Management Target MIB
    [RFC2573].  Security for local access can\n   depend on the Management Target
    MIB or on recording appropriate\n   security credentials of the creator of an
    entry and using those to\n   access the local objects.  These security credentials
    are the\n   parameters necessary as inputs to isAccessAllowed from the\n   Architecture
    for Describing SNMP Management Frameworks.  When\n   accessing local objects without
    using a local target tag, the system\n   MUST (conceptually) use isAccessAllowed
    to ensure that it does not\n   violate security.\n   To facilitate the provisioning
    of access control by a security\n   administrator for this MIB itself using the
    View-Based Access Control\n   Model (VACM) defined in RFC 2275 [RFC2575] for tables
    in which\n   multiple users may need to independently create or modify entries,\n
    \  the initial index is used as an \"owner index\".  Such an initial index\n   has
    a syntax of SnmpAdminString, and can thus be trivially mapped to\n   a securityName
    or groupName as defined in VACM, in accordance with a\n   security policy.\n   If
    a security administrator were to employ such an approach, all\n   entries in related
    tables belonging to a particular user will have\n   the same value for this initial
    index.  For a given user's entries in\n   a particular table, the object identifiers
    for the information in\n   these entries will have the same sub-identifiers (except
    for the\n   \"column\" sub-identifier) up to the end of the encoded owner index.\n
    \  To configure VACM to permit access to this portion of the table, one\n   would
    create vacmViewTreeFamilyTable entries with the value of\n   vacmViewTreeFamilySubtree
    including the owner index portion, and\n   vacmViewTreeFamilyMask \"wildcarding\"
    the column sub-identifier.  More\n   elaborate configurations are possible.\n"
  title: 6.  Security
- contents:
  - '7.  Definitions

    '
  - 'DISMAN-EVENT-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE,\n    Integer32, Unsigned32,\n    NOTIFICATION-TYPE,
    Counter32,\n    Gauge32, mib-2, zeroDotZero         FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION,
    RowStatus,\n    TruthValue                FROM SNMPv2-TC\n    MODULE-COMPLIANCE,
    OBJECT-GROUP,\n    NOTIFICATION-GROUP             FROM SNMPv2-CONF\n    sysUpTime
    \                FROM SNMPv2-MIB\n    SnmpTagValue              FROM SNMP-TARGET-MIB\n
    \   SnmpAdminString           FROM SNMP-FRAMEWORK-MIB;\n"
  - "dismanEventMIB MODULE-IDENTITY\n    LAST-UPDATED \"200010160000Z\"            --
    16 October 2000\n    ORGANIZATION \"IETF Distributed Management Working Group\"\n
    \   CONTACT-INFO \"Ramanathan Kavasseri\n                  Cisco Systems, Inc.\n
    \                 170 West Tasman Drive,\n                  San Jose CA 95134-1706.\n
    \                 Phone: +1 408 526 4527\n                  Email: ramk@cisco.com\"\n
    \   DESCRIPTION\n     \"The MIB module for defining event triggers and actions\n
    \    for network management purposes.\"\n"
  - "-- Revision History\n       REVISION     \"200010160000Z\"            -- 16 October
    2000\n       DESCRIPTION  \"This is the initial version of this MIB.\n                    Published
    as RFC 2981\"\n    ::= { mib-2 88 }\n"
  - 'dismanEventMIBObjects OBJECT IDENTIFIER ::= { dismanEventMIB 1 }

    '
  - '-- Management Triggered Event (MTE) objects

    '
  - 'mteResource           OBJECT IDENTIFIER ::= { dismanEventMIBObjects 1 }

    '
  - 'mteTrigger            OBJECT IDENTIFIER ::= { dismanEventMIBObjects 2 }

    '
  - 'mteObjects            OBJECT IDENTIFIER ::= { dismanEventMIBObjects 3 }

    '
  - 'mteEvent              OBJECT IDENTIFIER ::= { dismanEventMIBObjects 4 }

    '
  - '--

    '
  - '-- Textual Conventions

    '
  - '--

    '
  - "FailureReason ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n
    \       \"Reasons for failures in an attempt to perform a management\n        request.\n
    \       The first group of errors, numbered less than 0, are related\n        to
    problems in sending the request.  The existence of a\n        particular error
    code here does not imply that all\n        implementations are capable of sensing
    that error and\n        returning that code.\n        The second group, numbered
    greater than 0, are copied\n        directly from SNMP protocol operations and
    are intended to\n        carry exactly the meanings defined for the protocol as
    returned\n        in an SNMP response.\n        localResourceLack       some local
    resource such as memory\n                                lacking or\n                                mteResourceSampleInstanceMaximum\n
    \                               exceeded\n        badDestination          unrecognized
    domain name or otherwise\n                                invalid destination
    address\n        destinationUnreachable  can't get to destination address\n        noResponse
    \             no response to SNMP request\n        badType                 the
    data syntax of a retrieved object\n                                as not as expected\n
    \       sampleOverrun           another sample attempt occurred before\n                                the
    previous one completed\"\n    SYNTAX      INTEGER { localResourceLack(-1),\n                          badDestination(-2),\n
    \                         destinationUnreachable(-3),\n                          noResponse(-4),\n
    \                         badType(-5),\n                          sampleOverrun(-6),\n
    \                         noError(0),\n                          tooBig(1),\n
    \                         noSuchName(2),\n                          badValue(3),\n
    \                         readOnly(4),\n                          genErr(5),\n
    \                         noAccess(6),\n                          wrongType(7),\n
    \                         wrongLength(8),\n                          wrongEncoding(9),\n
    \                         wrongValue(10),\n                          noCreation(11),\n
    \                         inconsistentValue(12),\n                          resourceUnavailable(13),\n
    \                         commitFailed(14),\n                          undoFailed(15),\n
    \                         authorizationError(16),\n                          notWritable(17),\n
    \                         inconsistentName(18) }\n"
  - '--

    '
  - '-- Resource Control Section

    '
  - '--

    '
  - "mteResourceSampleMinimum OBJECT-TYPE\n    SYNTAX      Integer32 (1..2147483647)\n
    \   UNITS       \"seconds\"\n    MAX-ACCESS  read-write\n    STATUS      current\n
    \   DESCRIPTION\n        \"The minimum mteTriggerFrequency this system will\n
    \       accept.  A system may use the larger values of this minimum to\n        lessen
    the impact of constant sampling.  For larger\n        sampling intervals the system
    samples less often and\n        suffers less overhead.  This object provides a
    way to enforce\n        such lower overhead for all triggers created after it
    is\n        set.\n        Unless explicitly resource limited, a system's value
    for\n        this object SHOULD be 1, allowing as small as a 1 second\n        interval
    for ongoing trigger sampling.\n        Changing this value will not invalidate
    an existing setting\n        of mteTriggerFrequency.\"\n    ::= { mteResource
    1 }\n"
  - "mteResourceSampleInstanceMaximum OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS
    \      \"instances\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The maximum number of instance entries this system will\n        support
    for sampling.\n        These are the entries that maintain state, one for each\n
    \       instance of each sampled object as selected by\n        mteTriggerValueID.
    \ Note that wildcarded objects result\n        in multiple instances of this state.\n
    \       A value of 0 indicates no preset limit, that is, the limit\n        is
    dynamic based on system operation and resources.\n        Unless explicitly resource
    limited, a system's value for\n        this object SHOULD be 0.\n        Changing
    this value will not eliminate or inhibit existing\n        sample state but could
    prevent allocation of additional state\n        information.\"\n    ::= { mteResource
    2 }\n"
  - "mteResourceSampleInstances OBJECT-TYPE\n    SYNTAX      Gauge32\n    UNITS       \"instances\"\n
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The
    number of currently active instance entries as\n        defined for mteResourceSampleInstanceMaximum.\"\n
    \   ::= { mteResource 3 }\n"
  - "mteResourceSampleInstancesHigh OBJECT-TYPE\n    SYNTAX      Gauge32\n    UNITS
    \      \"instances\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n
    \       \"The highest value of mteResourceSampleInstances that has\n        occurred
    since initialization of the management system.\"\n    ::= { mteResource 4 }\n"
  - "mteResourceSampleInstanceLacks OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS
    \      \"instances\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n
    \       \"The number of times this system could not take a new sample\n        because
    that allocation would have exceeded the limit set by\n        mteResourceSampleInstanceMaximum.\"\n
    \   ::= { mteResource 5 }\n"
  - '--

    '
  - '-- Trigger Section

    '
  - '--

    '
  - '-- Counters

    '
  - "mteTriggerFailures OBJECT-TYPE\n    SYNTAX      Counter32\n    UNITS       \"failures\"\n
    \   MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The
    number of times an attempt to check for a trigger\n        condition has failed.
    \ This counts individually for each\n        attempt in a group of targets or
    each attempt for a\n        wildcarded object.\"\n    ::= { mteTrigger 1 }\n"
  - '--

    '
  - '-- Trigger Table

    '
  - '--

    '
  - "mteTriggerTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteTriggerEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table
    of management event trigger information.\"\n    ::= { mteTrigger 2 }\n"
  - "mteTriggerEntry OBJECT-TYPE\n    SYNTAX      MteTriggerEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single trigger.  Applications create and\n        delete entries using
    mteTriggerEntryStatus.\"\n    INDEX       { mteOwner, IMPLIED mteTriggerName }\n
    \   ::= { mteTriggerTable 1 }\n"
  - "MteTriggerEntry ::= SEQUENCE {\n    mteOwner                            SnmpAdminString,\n
    \   mteTriggerName                      SnmpAdminString,\n    mteTriggerComment
    \                  SnmpAdminString,\n    mteTriggerTest                      BITS,\n
    \   mteTriggerSampleType                INTEGER,\n    mteTriggerValueID                   OBJECT
    IDENTIFIER,\n    mteTriggerValueIDWildcard           TruthValue,\n    mteTriggerTargetTag
    \                SnmpTagValue,\n    mteTriggerContextName               SnmpAdminString,\n
    \   mteTriggerContextNameWildcard       TruthValue,\n    mteTriggerFrequency                 Unsigned32,\n
    \   mteTriggerObjectsOwner              SnmpAdminString,\n    mteTriggerObjects
    \                  SnmpAdminString,\n    mteTriggerEnabled                   TruthValue,\n
    \   mteTriggerEntryStatus               RowStatus\n"
  - '}

    '
  - "mteOwner OBJECT-TYPE\n   SYNTAX      SnmpAdminString (SIZE(0..32))\n   MAX-ACCESS
    \ not-accessible\n   STATUS      current\n   DESCRIPTION\n        \"The owner
    of this entry. The exact semantics of this\n        string are subject to the
    security policy defined by the\n        security administrator.\"\n    ::= { mteTriggerEntry
    1 }\n"
  - "mteTriggerName OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (1..32))\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    locally-unique, administratively assigned name for the\n        trigger within
    the scope of mteOwner.\"\n    ::= { mteTriggerEntry 2 }\n"
  - "mteTriggerComment OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"A description
    of the trigger's function and use.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerEntry
    3 }\n"
  - "mteTriggerTest OBJECT-TYPE\n    SYNTAX      BITS { existence(0), boolean(1),
    threshold(2) }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \"The type of trigger test to perform.  For 'boolean' and\n        'threshold'
    \ tests, the object at mteTriggerValueID MUST\n        evaluate to an integer,
    that is, anything that ends up encoded\n        for transmission (that is, in
    BER, not ASN.1) as an integer.\n        For 'existence', the specific test is
    as selected by\n        mteTriggerExistenceTest.  When an object appears, vanishes\n
    \       or changes value, the trigger fires. If the object's\n        appearance
    caused the trigger firing, the object MUST\n        vanish before the trigger
    can be fired again for it, and\n        vice versa. If the trigger fired due to
    a change in the\n        object's value, it will be fired again on every successive\n
    \       value change for that object.\n        For 'boolean', the specific test
    is as selected by\n        mteTriggerBooleanTest.  If the test result is true
    the trigger\n        fires.  The trigger will not fire again until the value has\n
    \       become false and come back to true.\n        For 'threshold' the test
    works as described below for\n        mteTriggerThresholdStartup, mteTriggerThresholdRising,
    and\n        mteTriggerThresholdFalling.\n        Note that combining 'boolean'
    and 'threshold' tests on the\n        same object may be somewhat redundant.\"\n
    \   DEFVAL { { boolean } }\n    ::= { mteTriggerEntry 4 }\n"
  - "mteTriggerSampleType OBJECT-TYPE\n    SYNTAX      INTEGER { absoluteValue(1),
    deltaValue(2) }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n
    \       \"The type of sampling to perform.\n        An 'absoluteValue' sample
    requires only a single sample to be\n        meaningful, and is exactly the value
    of the object at\n        mteTriggerValueID at the sample time.\n        A 'deltaValue'
    requires two samples to be meaningful and is\n        thus not available for testing
    until the second and subsequent\n        samples after the object at mteTriggerValueID
    is first found\n        to exist.  It is the difference between the two samples.
    \ For\n        unsigned values it is always positive, based on unsigned\n        arithmetic.
    \ For signed values it can be positive or negative.\n        For SNMP counters
    to be meaningful they should be sampled as a\n        'deltaValue'.\n        For
    'deltaValue' mteTriggerDeltaTable contains further\n        parameters.\n        If
    only 'existence' is set in mteTriggerTest this object has\n        no meaning.\"\n
    \   DEFVAL { absoluteValue }\n    ::= { mteTriggerEntry 5 }\n"
  - "mteTriggerValueID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"The object
    identifier of the MIB object to sample to see\n        if the trigger should fire.\n
    \       This may be wildcarded by truncating all or part of the\n        instance
    portion, in which case the value is obtained\n        as if with a GetNext function,
    checking multiple values\n        if they exist.  If such wildcarding is applied,\n
    \       mteTriggerValueIDWildcard must be 'true' and if not it must\n        be
    'false'.\n        Bad object identifiers or a mismatch between truncating the\n
    \       identifier and the value of mteTriggerValueIDWildcard result\n        in
    operation as one would expect when providing the wrong\n        identifier to
    a Get or GetNext operation.  The Get will fail\n        or get the wrong object.
    \ The GetNext will indeed get whatever\n        is next, proceeding until it runs
    past the initial part of the\n        identifier and perhaps many unintended objects
    for confusing\n        results.  If the value syntax of those objects is not usable,\n
    \       that results in a 'badType' error that terminates the scan.\n        Each
    instance that fills the wildcard is independent of any\n        additional instances,
    that is, wildcarded objects operate\n        as if there were a separate table
    entry for each instance\n        that fills the wildcard without having to actually
    predict\n        all possible instances ahead of time.\"\n    DEFVAL { zeroDotZero
    }\n    ::= { mteTriggerEntry 6 }\n"
  - "mteTriggerValueIDWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"Control for
    whether mteTriggerValueID is to be treated as\n        fully-specified or wildcarded,
    with 'true' indicating wildcard.\"\n    DEFVAL { false }\n    ::= { mteTriggerEntry
    7 }\n"
  - "mteTriggerTargetTag OBJECT-TYPE\n    SYNTAX      SnmpTagValue\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"The tag for
    the target(s) from which to obtain the condition\n        for a trigger check.\n
    \       A length of 0 indicates the local system.  In this case,\n        access
    to the objects indicated by mteTriggerValueID is under\n        the security credentials
    of the requester that set\n        mteTriggerEntryStatus to 'active'.  Those credentials
    are the\n        input parameters for isAccessAllowed from the Architecture for\n
    \       Describing SNMP Management Frameworks.\n        Otherwise access rights
    are checked according to the security\n        parameters resulting from the tag.\"\n
    \   DEFVAL { ''H }\n    ::= { mteTriggerEntry 8 }\n"
  - "mteTriggerContextName OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"The management
    context from which to obtain mteTriggerValueID.\n        This may be wildcarded
    by leaving characters off the end.  For\n        example use 'Repeater' to wildcard
    to 'Repeater1',\n        'Repeater2', 'Repeater-999.87b', and so on.  To indicate
    such\n        wildcarding is intended, mteTriggerContextNameWildcard must\n        be
    'true'.\n        Each instance that fills the wildcard is independent of any\n
    \       additional instances, that is, wildcarded objects operate\n        as
    if there were a separate table entry for each instance\n        that fills the
    wildcard without having to actually predict\n        all possible instances ahead
    of time.\n        Operation of this feature assumes that the local system has
    a\n        list of available contexts against which to apply the\n        wildcard.
    \ If the objects are being read from the local\n        system, this is clearly
    the system's own list of contexts.\n        For a remote system a local version
    of such a list is not\n        defined by any current standard and may not be
    available, so\n        this function MAY not be supported.\"\n    DEFVAL { ''H
    }\n    ::= { mteTriggerEntry 9 }\n"
  - "mteTriggerContextNameWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"Control for
    whether mteTriggerContextName is to be treated as\n        fully-specified or
    wildcarded, with 'true' indicating wildcard.\"\n    DEFVAL { false }\n    ::=
    { mteTriggerEntry 10 }\n"
  - "mteTriggerFrequency OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"seconds\"\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The
    number of seconds to wait between trigger samples.  To\n        encourage consistency
    in sampling, the interval is measured\n        from the beginning of one check
    to the beginning of the next\n        and the timer is restarted immediately when
    it expires, not\n        when the check completes.\n        If the next sample
    begins before the previous one completed the\n        system may either attempt
    to make the check or treat this as an\n        error condition with the error
    'sampleOverrun'.\n        A frequency of 0 indicates instantaneous recognition
    of the\n        condition.  This is not possible in many cases, but may\n        be
    supported in cases where it makes sense and the system is\n        able to do
    so.  This feature allows the MIB to be used in\n        implementations where
    such interrupt-driven behavior is\n        possible and is not likely to be supported
    for all MIB objects\n        even then since such sampling generally has to be
    tightly\n        integrated into low-level code.\n        Systems that can support
    this SHOULD document those cases\n        where it can be used.  In cases where
    it can not, setting this\n        object to 0 should be disallowed.\"\n    DEFVAL
    { 600 }\n    ::= { mteTriggerEntry 11 }\n"
  - "mteTriggerObjectsOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"To
    go with mteTriggerObjects, the mteOwner of a group of\n        objects from mteObjectsTable.\"\n
    \   DEFVAL { ''H }\n    ::= { mteTriggerEntry 12 }\n"
  - "mteTriggerObjects OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The
    mteObjectsName of a group of objects from\n        mteObjectsTable.  These objects
    are to be added to any\n        Notification resulting from the firing of this
    trigger.\n        A list of objects may also be added based on the event or on\n
    \       the value of mteTriggerTest.\n        A length of 0 indicates no additional
    objects.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerEntry 13 }\n"
  - "mteTriggerEnabled OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n
    \   STATUS      current\n    DESCRIPTION\n        \"A control to allow a trigger
    to be configured but not used.\n        When the value is 'false' the trigger
    is not sampled.\"\n    DEFVAL { false }\n    ::= { mteTriggerEntry 14 }\n"
  - "mteTriggerEntryStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"The control
    that allows creation and deletion of entries.\n        Once made active an entry
    may not be modified except to\n        delete it.\"\n    ::= { mteTriggerEntry
    15 }\n"
  - '--

    '
  - '-- Trigger Delta Table

    '
  - '--

    '
  - "mteTriggerDeltaTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteTriggerDeltaEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of management event trigger information for delta\n        sampling.\"\n
    \   ::= { mteTrigger 3 }\n"
  - "mteTriggerDeltaEntry OBJECT-TYPE\n    SYNTAX      MteTriggerDeltaEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single trigger's delta sampling.  Entries\n        automatically exist
    in this this table for each mteTriggerEntry\n        that has mteTriggerSampleType
    set to 'deltaValue'.\"\n    INDEX       { mteOwner, IMPLIED mteTriggerName }\n
    \   ::= { mteTriggerDeltaTable 1 }\n"
  - "MteTriggerDeltaEntry ::= SEQUENCE {\n    mteTriggerDeltaDiscontinuityID                OBJECT
    IDENTIFIER,\n    mteTriggerDeltaDiscontinuityIDWildcard        TruthValue,\n    mteTriggerDeltaDiscontinuityIDType
    \           INTEGER\n"
  - '}

    '
  - 'sysUpTimeInstance OBJECT IDENTIFIER ::= { sysUpTime 0 }

    '
  - "mteTriggerDeltaDiscontinuityID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The
    OBJECT IDENTIFIER (OID) of a TimeTicks, TimeStamp, or\n        DateAndTime object
    that indicates a discontinuity in the value\n        at mteTriggerValueID.\n        The
    OID may be for a leaf object (e.g. sysUpTime.0) or may\n        be wildcarded
    to match mteTriggerValueID.\n        This object supports normal checking for
    a discontinuity in a\n        counter.  Note that if this object does not point
    to sysUpTime\n        discontinuity checking MUST still check sysUpTime for an
    overall\n        discontinuity.\n        If the object identified is not accessible
    the sample attempt\n        is in error, with the error code as from an SNMP request.\n
    \       Bad object identifiers or a mismatch between truncating the\n        identifier
    and the value of mteDeltaDiscontinuityIDWildcard\n        result in operation
    as one would expect when providing the\n        wrong identifier to a Get operation.
    \ The Get will fail or get\n        the wrong object.  If the value syntax of
    those objects is not\n        usable, that results in an error that terminates
    the sample\n        with a 'badType' error code.\"\n    DEFVAL { sysUpTimeInstance
    }\n    ::= { mteTriggerDeltaEntry 1 }\n"
  - "mteTriggerDeltaDiscontinuityIDWildcard OBJECT-TYPE\n     SYNTAX      TruthValue\n
    \    MAX-ACCESS  read-write\n     STATUS      current\n     DESCRIPTION\n        \"Control
    for whether mteTriggerDeltaDiscontinuityID is to be\n        treated as fully-specified
    or wildcarded, with 'true'\n        indicating wildcard. Note that the value of
    this object will\n        be the same as that of the corresponding instance of\n
    \       mteTriggerValueIDWildcard when the corresponding\n        mteTriggerSampleType
    is 'deltaValue'.\"\n    DEFVAL { false }\n    ::= { mteTriggerDeltaEntry 2 }\n"
  - "mteTriggerDeltaDiscontinuityIDType OBJECT-TYPE\n    SYNTAX      INTEGER { timeTicks(1),
    timeStamp(2), dateAndTime(3) }\n    MAX-ACCESS  read-write\n    STATUS      current\n
    \   DESCRIPTION\n        \"The value 'timeTicks' indicates the\n        mteTriggerDeltaDiscontinuityID
    of this row is of syntax\n        TimeTicks.  The value 'timeStamp' indicates
    syntax TimeStamp.\n        The value 'dateAndTime' indicates syntax DateAndTime.\"\n
    \   DEFVAL { timeTicks }\n    ::= { mteTriggerDeltaEntry 3 }\n"
  - '--

    '
  - '-- Trigger Existence Table

    '
  - '--

    '
  - "mteTriggerExistenceTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteTriggerExistenceEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of management event trigger information for existence\n        triggers.\"\n
    \   ::= { mteTrigger 4 }\n"
  - "mteTriggerExistenceEntry OBJECT-TYPE\n    SYNTAX      MteTriggerExistenceEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single existence trigger.  Entries\n        automatically exist in this
    this table for each mteTriggerEntry\n        that has 'existence' set in mteTriggerTest.\"\n
    \   INDEX       { mteOwner, IMPLIED mteTriggerName }\n    ::= { mteTriggerExistenceTable
    1 }\n"
  - "MteTriggerExistenceEntry ::= SEQUENCE {\n    mteTriggerExistenceTest              BITS,\n
    \   mteTriggerExistenceStartup           BITS,\n    mteTriggerExistenceObjectsOwner
    \     SnmpAdminString,\n    mteTriggerExistenceObjects           SnmpAdminString,\n
    \   mteTriggerExistenceEventOwner        SnmpAdminString,\n    mteTriggerExistenceEvent
    \            SnmpAdminString\n"
  - '}

    '
  - "mteTriggerExistenceTest OBJECT-TYPE\n    SYNTAX      BITS { present(0), absent(1),
    changed(2) }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The type of existence test to perform.  The trigger fires\n        when
    the object at mteTriggerValueID is seen to go from\n        present to absent,
    from absent to present, or to have it's\n        value changed, depending on which
    tests are selected:\n        present(0) - when this test is selected, the trigger
    fires\n        when the mteTriggerValueID object goes from absent to present.\n
    \       absent(1)  - when this test is selected, the trigger fires\n        when
    the mteTriggerValueID object goes from present to absent.\n        changed(2)
    - when this test is selected, the trigger fires\n        the mteTriggerValueID
    object value changes.\n        Once the trigger has fired for either presence
    or absence it\n        will not fire again for that state until the object has
    been\n        to the other state. \"\n    DEFVAL { { present, absent } }\n    ::=
    { mteTriggerExistenceEntry 1 }\n"
  - "mteTriggerExistenceStartup OBJECT-TYPE\n    SYNTAX      BITS { present(0), absent(1)
    }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control
    for whether an event may be triggered when this entry\n        is first set to
    'active' and the test specified by\n        mteTriggerExistenceTest is true.  Setting
    an option causes\n        that trigger to fire when its test is true.\"\n    DEFVAL
    { { present, absent } }\n    ::= { mteTriggerExistenceEntry 2 }\n"
  - "mteTriggerExistenceObjectsOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerExistenceObjects, the mteOwner of a\n        group
    of objects from mteObjectsTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerExistenceEntry
    3 }\n"
  - "mteTriggerExistenceObjects OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteObjectsName of a group of objects from\n        mteObjectsTable.
    \ These objects are to be added to any\n        Notification resulting from the
    firing of this trigger for\n        this test.\n        A list of objects may
    also be added based on the overall\n        trigger, the event or other settings
    in mteTriggerTest.\n        A length of 0 indicates no additional objects.\"\n
    \   DEFVAL { ''H }\n    ::= { mteTriggerExistenceEntry 4 }\n"
  - "mteTriggerExistenceEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerExistenceEvent, the mteOwner of an event\n        entry
    from the mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerExistenceEntry
    5 }\n"
  - "mteTriggerExistenceEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The
    mteEventName of the event to invoke when mteTriggerType is\n        'existence'
    and this trigger fires.  A length of 0 indicates no\n        event.\"\n    DEFVAL
    { ''H }\n    ::= { mteTriggerExistenceEntry 6 }\n"
  - '--

    '
  - '-- Trigger Boolean Table

    '
  - '--

    '
  - "mteTriggerBooleanTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteTriggerBooleanEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of management event trigger information for boolean\n        triggers.\"\n
    \   ::= { mteTrigger 5 }\n"
  - "mteTriggerBooleanEntry OBJECT-TYPE\n    SYNTAX      MteTriggerBooleanEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single boolean trigger.  Entries\n        automatically exist in this
    this table for each mteTriggerEntry\n        that has 'boolean' set in mteTriggerTest.\"\n
    \   INDEX       { mteOwner, IMPLIED mteTriggerName }\n    ::= { mteTriggerBooleanTable
    1 }\n"
  - "MteTriggerBooleanEntry ::= SEQUENCE {\n    mteTriggerBooleanComparison          INTEGER,\n
    \   mteTriggerBooleanValue               Integer32,\n    mteTriggerBooleanStartup
    \            TruthValue,\n    mteTriggerBooleanObjectsOwner        SnmpAdminString,\n
    \   mteTriggerBooleanObjects             SnmpAdminString,\n    mteTriggerBooleanEventOwner
    \         SnmpAdminString,\n    mteTriggerBooleanEvent               SnmpAdminString\n"
  - '}

    '
  - "mteTriggerBooleanComparison OBJECT-TYPE\n    SYNTAX      INTEGER { unequal(1),
    equal(2),\n                 less(3), lessOrEqual(4),\n                 greater(5),
    greaterOrEqual(6) }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The type of boolean comparison to perform.\n        The value at mteTriggerValueID
    is compared to\n        mteTriggerBooleanValue, so for example if\n        mteTriggerBooleanComparison
    is 'less' the result would be true\n        if the value at mteTriggerValueID
    is less than the value of\n        mteTriggerBooleanValue.\"\n    DEFVAL { unequal
    }\n    ::= { mteTriggerBooleanEntry 1 }\n"
  - "mteTriggerBooleanValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"The value to
    use for the test specified by\n        mteTriggerBooleanTest.\"\n    DEFVAL {
    0 }\n    ::= { mteTriggerBooleanEntry 2 }\n"
  - "mteTriggerBooleanStartup OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control for
    whether an event may be triggered when this entry\n        is first set to 'active'
    or a new instance of the object at\n        mteTriggerValueID is found and the
    test specified by\n        mteTriggerBooleanComparison is true.  In that case
    an event is\n        triggered if mteTriggerBooleanStartup is 'true'.\"\n    DEFVAL
    { true }\n    ::= { mteTriggerBooleanEntry 3 }\n"
  - "mteTriggerBooleanObjectsOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerBooleanObjects, the mteOwner of a group\n        of
    objects from mteObjectsTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerBooleanEntry
    4 }\n"
  - "mteTriggerBooleanObjects OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The
    mteObjectsName of a group of objects from\n        mteObjectsTable.  These objects
    are to be added to any\n        Notification resulting from the firing of this
    trigger for\n        this test.\n        A list of objects may also be added based
    on the overall\n        trigger, the event or other settings in mteTriggerTest.\n
    \       A length of 0 indicates no additional objects.\"\n    DEFVAL { ''H }\n
    \   ::= { mteTriggerBooleanEntry 5 }\n"
  - "mteTriggerBooleanEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerBooleanEvent, the mteOwner of an event\n        entry
    from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerBooleanEntry 6
    }\n"
  - "mteTriggerBooleanEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (0..32))\n
    \   MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"The
    mteEventName of the event to invoke when mteTriggerType is\n        'boolean'
    and this trigger fires.  A length of 0 indicates no\n        event.\"\n    DEFVAL
    { ''H }\n    ::= { mteTriggerBooleanEntry 7 }\n"
  - '--

    '
  - '-- Trigger Threshold Table

    '
  - '--

    '
  - "mteTriggerThresholdTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteTriggerThresholdEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of management event trigger information for threshold\n        triggers.\"\n
    \   ::= { mteTrigger 6 }\n"
  - "mteTriggerThresholdEntry OBJECT-TYPE\n    SYNTAX      MteTriggerThresholdEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single threshold trigger.  Entries\n        automatically exist in this
    table for each mteTriggerEntry\n        that has 'threshold' set in mteTriggerTest.\"\n
    \   INDEX       { mteOwner, IMPLIED mteTriggerName }\n    ::= { mteTriggerThresholdTable
    1 }\n"
  - "MteTriggerThresholdEntry ::= SEQUENCE {\n    mteTriggerThresholdStartup                  INTEGER,\n
    \   mteTriggerThresholdRising                   Integer32,\n    mteTriggerThresholdFalling
    \                 Integer32,\n    mteTriggerThresholdDeltaRising              Integer32,\n
    \   mteTriggerThresholdDeltaFalling             Integer32,\n    mteTriggerThresholdObjectsOwner
    \            SnmpAdminString,\n    mteTriggerThresholdObjects                  SnmpAdminString,\n
    \   mteTriggerThresholdRisingEventOwner         SnmpAdminString,\n    mteTriggerThresholdRisingEvent
    \             SnmpAdminString,\n    mteTriggerThresholdFallingEventOwner        SnmpAdminString,\n
    \   mteTriggerThresholdFallingEvent             SnmpAdminString,\n    mteTriggerThresholdDeltaRisingEventOwner
    \   SnmpAdminString,\n    mteTriggerThresholdDeltaRisingEvent         SnmpAdminString,\n
    \   mteTriggerThresholdDeltaFallingEventOwner   SnmpAdminString,\n    mteTriggerThresholdDeltaFallingEvent
    \       SnmpAdminString\n"
  - '}

    '
  - "mteTriggerThresholdStartup OBJECT-TYPE\n    SYNTAX      INTEGER { rising(1),
    falling(2), risingOrFalling(3) }\n    MAX-ACCESS  read-write\n    STATUS      current\n
    \   DESCRIPTION\n        \"The event that may be triggered when this entry is
    first\n        set to 'active' and a new instance of the object at\n        mteTriggerValueID
    is found.  If the first sample after this\n        instance becomes active is
    greater than or equal to\n        mteTriggerThresholdRising and mteTriggerThresholdStartup
    is\n        equal to 'rising' or 'risingOrFalling', then one\n        mteTriggerThresholdRisingEvent
    is triggered for that instance.\n        If the first sample after this entry
    becomes active is less\n        than or equal to mteTriggerThresholdFalling and\n
    \       mteTriggerThresholdStartup is equal to 'falling' or\n        'risingOrFalling',
    then one mteTriggerThresholdRisingEvent is\n        triggered for that instance.\"\n
    \   DEFVAL { risingOrFalling }\n    ::= { mteTriggerThresholdEntry 1 }\n"
  - "mteTriggerThresholdRising OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"A threshold
    value to check against if mteTriggerType is\n        'threshold'.\n        When
    the current sampled value is greater than or equal to\n        this threshold,
    and the value at the last sampling interval\n        was less than this threshold,
    one\n        mteTriggerThresholdRisingEvent is triggered.  That event is\n        also
    triggered if the first sample after this entry becomes\n        active is greater
    than or equal to this threshold and\n        mteTriggerThresholdStartup is equal
    to 'rising' or\n        'risingOrFalling'.\n        After a rising event is generated,
    another such event is not\n        triggered until the sampled value falls below
    this threshold\n        and reaches mteTriggerThresholdFalling.\"\n    DEFVAL
    { 0 }\n    ::= { mteTriggerThresholdEntry 2 }\n"
  - "mteTriggerThresholdFalling OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"A threshold
    value to check against if mteTriggerType is\n        'threshold'.\n        When
    the current sampled value is less than or equal to this\n        threshold, and
    the value at the last sampling interval was\n        greater than this threshold,
    one\n        mteTriggerThresholdFallingEvent is triggered.  That event is\n        also
    triggered if the first sample after this entry becomes\n        active is less
    than or equal to this threshold and\n        mteTriggerThresholdStartup is equal
    to 'falling' or\n        'risingOrFalling'.\n        After a falling event is
    generated, another such event is not\n        triggered until the sampled value
    rises above this threshold\n        and reaches mteTriggerThresholdRising.\"\n
    \   DEFVAL { 0 }\n    ::= { mteTriggerThresholdEntry 3 }\n"
  - "mteTriggerThresholdDeltaRising OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"A threshold
    value to check against if mteTriggerType is\n        'threshold'.\n        When
    the delta value (difference) between the current sampled\n        value (value(n))
    and the previous sampled value (value(n-1))\n        is greater than or equal
    to this threshold,\n        and the delta value calculated at the last sampling
    interval\n        (i.e. value(n-1) - value(n-2)) was less than this threshold,\n
    \       one mteTriggerThresholdDeltaRisingEvent is triggered. That event\n        is
    also triggered if the first delta value calculated after this\n        entry becomes
    active, i.e. value(2) - value(1), where value(1)\n        is the first sample
    taken of that instance, is greater than or\n        equal to this threshold.\n
    \       After a rising event is generated, another such event is not\n        triggered
    until the delta value falls below this threshold and\n        reaches mteTriggerThresholdDeltaFalling.\"\n
    \   DEFVAL { 0 }\n    ::= { mteTriggerThresholdEntry 4 }\n"
  - "mteTriggerThresholdDeltaFalling OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"A threshold
    value to check against if mteTriggerType is\n        'threshold'.\n        When
    the delta value (difference) between the current sampled\n        value (value(n))
    and the previous sampled value (value(n-1))\n        is less than or equal to
    this threshold,\n        and the delta value calculated at the last sampling interval\n
    \       (i.e. value(n-1) - value(n-2)) was greater than this threshold,\n        one
    mteTriggerThresholdDeltaFallingEvent is triggered. That event\n        is also
    triggered if the first delta value calculated after this\n        entry becomes
    active, i.e. value(2) - value(1), where value(1)\n        is the first sample
    taken of that instance, is less than or\n        equal to this threshold.\n        After
    a falling event is generated, another such event is not\n        triggered until
    the delta value falls below this threshold and\n        reaches mteTriggerThresholdDeltaRising.\"\n
    \   DEFVAL { 0 }\n    ::= { mteTriggerThresholdEntry 5 }\n"
  - "mteTriggerThresholdObjectsOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerThresholdObjects, the mteOwner of a group\n        of
    objects from mteObjectsTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    6 }\n"
  - "mteTriggerThresholdObjects OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteObjectsName of a group of objects from\n        mteObjectsTable.
    \ These objects are to be added to any\n        Notification resulting from the
    firing of this trigger for\n        this test.\n        A list of objects may
    also be added based on the overall\n        trigger, the event or other settings
    in mteTriggerTest.\n        A length of 0 indicates no additional objects.\"\n
    \   DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry 7 }\n"
  - "mteTriggerThresholdRisingEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerThresholdRisingEvent, the mteOwner of an\n        event
    entry from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    8 }\n"
  - "mteTriggerThresholdRisingEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold'
    and this trigger fires based on\n        mteTriggerThresholdRising.  A length
    of 0 indicates no event.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    9 }\n"
  - "mteTriggerThresholdFallingEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerThresholdFallingEvent, the mteOwner of an\n        event
    entry from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    10 }\n"
  - "mteTriggerThresholdFallingEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold'
    and this trigger fires based on\n        mteTriggerThresholdFalling.  A length
    of 0 indicates no event.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    11 }\n"
  - "mteTriggerThresholdDeltaRisingEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerThresholdDeltaRisingEvent, the mteOwner\n        of
    an event entry from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    12 }\n"
  - "mteTriggerThresholdDeltaRisingEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold'
    and this trigger fires based on\n        mteTriggerThresholdDeltaRising. A length
    of 0 indicates\n        no event.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    13 }\n"
  - "mteTriggerThresholdDeltaFallingEventOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteTriggerThresholdDeltaFallingEvent, the mteOwner\n        of
    an event entry from mteEventTable.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    14 }\n"
  - "mteTriggerThresholdDeltaFallingEvent OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteEventName of the event to invoke when mteTriggerType is\n        'threshold'
    and this trigger fires based on\n        mteTriggerThresholdDeltaFalling.  A length
    of 0 indicates\n        no event.\"\n    DEFVAL { ''H }\n    ::= { mteTriggerThresholdEntry
    15 }\n"
  - '--

    '
  - '-- Objects Table

    '
  - '--

    '
  - "mteObjectsTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteObjectsEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table
    of objects that can be added to notifications based\n        on the trigger, trigger
    test, or event, as pointed to by\n        entries in those tables.\"\n    ::=
    { mteObjects 1 }\n"
  - "mteObjectsEntry OBJECT-TYPE\n    SYNTAX      MteObjectsEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A group
    of objects.  Applications create and delete entries\n        using mteObjectsEntryStatus.\n
    \       When adding objects to a notification they are added in the\n        lexical
    order of their index in this table.  Those associated\n        with a trigger
    come first, then trigger test, then event.\"\n    INDEX       { mteOwner, mteObjectsName,
    mteObjectsIndex }\n    ::= { mteObjectsTable 1 }\n"
  - "MteObjectsEntry ::= SEQUENCE {\n    mteObjectsName                      SnmpAdminString,\n
    \   mteObjectsIndex                     Unsigned32,\n    mteObjectsID                        OBJECT
    IDENTIFIER,\n    mteObjectsIDWildcard                TruthValue,\n    mteObjectsEntryStatus
    \              RowStatus\n    }\n"
  - "mteObjectsName OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (1..32))\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    locally-unique, administratively assigned name for a group\n        of objects.\"\n
    \   ::= { mteObjectsEntry 1 }\n"
  - "mteObjectsIndex OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..4294967295)\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"An arbitrary
    integer for the purpose of identifying\n        individual objects within a mteObjectsName
    group.\n        Objects within a group are placed in the notification in the\n
    \       numerical order of this index.\n        Groups are placed in the notification
    in the order of the\n        selections for overall trigger, trigger test, and
    event.\n        Within trigger test they are in the same order as the\n        numerical
    values of the bits defined for mteTriggerTest.\n        Bad object identifiers
    or a mismatch between truncating the\n        identifier and the value of mteDeltaDiscontinuityIDWildcard\n
    \       result in operation as one would expect when providing the\n        wrong
    identifier to a Get operation.  The Get will fail or get\n        the wrong object.
    \ If the object is not available it is omitted\n        from the notification.\"\n
    \   ::= { mteObjectsEntry 2 }\n"
  - "mteObjectsID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS  read-create\n
    \   STATUS      current\n    DESCRIPTION\n        \"The object identifier of a
    MIB object to add to a\n        Notification that results from the firing of a
    trigger.\n        This may be wildcarded by truncating all or part of the\n        instance
    portion, in which case the instance portion of the\n        OID for obtaining
    this object will be the same as that used\n        in obtaining the mteTriggerValueID
    that fired.  If such\n        wildcarding is applied, mteObjectsIDWildcard must
    be\n        'true' and if not it must be 'false'.\n        Each instance that
    fills the wildcard is independent of any\n        additional instances, that is,
    wildcarded objects operate\n        as if there were a separate table entry for
    each instance\n        that fills the wildcard without having to actually predict\n
    \       all possible instances ahead of time.\"\n    DEFVAL { zeroDotZero }\n
    \   ::= { mteObjectsEntry 3 }\n"
  - "mteObjectsIDWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"Control for
    whether mteObjectsID is to be treated as\n        fully-specified or wildcarded,
    with 'true' indicating wildcard.\"\n    DEFVAL { false }\n    ::= { mteObjectsEntry
    4 }\n"
  - "mteObjectsEntryStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"The control
    that allows creation and deletion of entries.\n        Once made active an entry
    MAY not be modified except to\n        delete it.\"\n    ::= { mteObjectsEntry
    5 }\n"
  - '--

    '
  - '-- Event Section

    '
  - '--

    '
  - '-- Counters

    '
  - "mteEventFailures OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n
    \   STATUS      current\n    DESCRIPTION\n        \"The number of times an attempt
    to invoke an event\n        has failed.  This counts individually for each\n        attempt
    in a group of targets or each attempt for a\n        wildcarded trigger object.\"\n
    \   ::= { mteEvent 1 }\n"
  - '--

    '
  - '-- Event Table

    '
  - '--

    '
  - "mteEventTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteEventEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table
    of management event action information.\"\n    ::= { mteEvent 2 }\n"
  - "mteEventEntry OBJECT-TYPE\n    SYNTAX      MteEventEntry\n    MAX-ACCESS  not-accessible\n
    \   STATUS      current\n    DESCRIPTION\n        \"Information about a single
    event.  Applications create and\n        delete entries using mteEventEntryStatus.\"\n
    \   INDEX       { mteOwner, IMPLIED mteEventName }\n    ::= { mteEventTable 1
    }\n"
  - "MteEventEntry ::= SEQUENCE {\n    mteEventName                        SnmpAdminString,\n
    \   mteEventComment                     SnmpAdminString,\n    mteEventActions
    \                    BITS,\n    mteEventEnabled                     TruthValue,\n
    \   mteEventEntryStatus                 RowStatus\n    }\n"
  - "mteEventName OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE (1..32))\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A locally-unique,
    administratively assigned name for the\n        event.\"\n    ::= { mteEventEntry
    1 }\n"
  - "mteEventComment OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ read-create\n    STATUS      current\n    DESCRIPTION\n        \"A description
    of the event's function and use.\"\n    DEFVAL { ''H }\n    ::= { mteEventEntry
    2 }\n"
  - "mteEventActions OBJECT-TYPE\n    SYNTAX      BITS { notification(0), set(1) }\n
    \   MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"The
    actions to perform when this event occurs.\n        For 'notification', Traps
    and/or Informs are sent according\n        to the configuration in the SNMP Notification
    MIB.\n        For 'set', an SNMP Set operation is performed according to\n        control
    values in this entry.\"\n    DEFVAL { {} }  -- No bits set.\n    ::= { mteEventEntry
    3 }\n"
  - "mteEventEnabled OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n
    \   STATUS      current\n    DESCRIPTION\n        \"A control to allow an event
    to be configured but not used.\n        When the value is 'false' the event does
    not execute even if\n        triggered.\"\n    DEFVAL { false }\n    ::= { mteEventEntry
    4 }\n"
  - "mteEventEntryStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n
    \   STATUS      current\n    DESCRIPTION\n        \"The control that allows creation
    and deletion of entries.\n        Once made active an entry MAY not be modified
    except to\n        delete it.\"\n    ::= { mteEventEntry 5 }\n"
  - '--

    '
  - '-- Event Notification Table

    '
  - '--

    '
  - "mteEventNotificationTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteEventNotificationEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of information about notifications to be sent as a\n        consequence
    of management events.\"\n    ::= { mteEvent 3 }\n"
  - "mteEventNotificationEntry OBJECT-TYPE\n    SYNTAX      MteEventNotificationEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single event's notification.  Entries\n        automatically exist in
    this this table for each mteEventEntry\n        that has 'notification' set in
    mteEventActions.\"\n    INDEX       { mteOwner, IMPLIED mteEventName }\n    ::=
    { mteEventNotificationTable 1 }\n"
  - "MteEventNotificationEntry ::= SEQUENCE {\n    mteEventNotification                OBJECT
    IDENTIFIER,\n    mteEventNotificationObjectsOwner    SnmpAdminString,\n    mteEventNotificationObjects
    \        SnmpAdminString\n    }\n"
  - "mteEventNotification OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"The object identifier
    from the NOTIFICATION-TYPE for the\n        notification to use if metEventActions
    has 'notification' set.\"\n    DEFVAL { zeroDotZero }\n    ::= { mteEventNotificationEntry
    1 }\n"
  - "mteEventNotificationObjectsOwner OBJECT-TYPE\n    SYNTAX      SnmpAdminString
    (SIZE (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"To go with mteEventNotificationObjects, the mteOwner of a\n        group
    of objects from mteObjectsTable.\"\n    DEFVAL { ''H }\n    ::= { mteEventNotificationEntry
    2 }\n"
  - "mteEventNotificationObjects OBJECT-TYPE\n    SYNTAX      SnmpAdminString (SIZE
    (0..32))\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n
    \       \"The mteObjectsName of a group of objects from\n        mteObjectsTable
    if mteEventActions has 'notification' set.\n        These objects are to be added
    to any Notification generated by\n        this event.\n        Objects may also
    be added based on the trigger that stimulated\n        the event.\n        A length
    of 0 indicates no additional objects.\"\n    DEFVAL { ''H }\n    ::= { mteEventNotificationEntry
    3 }\n"
  - '--

    '
  - '-- Event Set Table

    '
  - '--

    '
  - "mteEventSetTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF MteEventSetEntry\n
    \   MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A
    table of management event action information.\"\n    ::= { mteEvent 4 }\n"
  - "mteEventSetEntry OBJECT-TYPE\n    SYNTAX      MteEventSetEntry\n    MAX-ACCESS
    \ not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Information
    about a single event's set option.  Entries\n        automatically exist in this
    this table for each mteEventEntry\n        that has 'set' set in mteEventActions.\"\n
    \   INDEX       { mteOwner, IMPLIED mteEventName }\n    ::= { mteEventSetTable
    1 }\n"
  - "MteEventSetEntry ::= SEQUENCE {\n    mteEventSetObject                   OBJECT
    IDENTIFIER,\n    mteEventSetObjectWildcard           TruthValue,\n    mteEventSetValue
    \                   Integer32,\n    mteEventSetTargetTag                SnmpTagValue,\n
    \   mteEventSetContextName              SnmpAdminString,\n    mteEventSetContextNameWildcard
    \     TruthValue\n    }\n"
  - "mteEventSetObject OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"The object identifier
    from the MIB object to set if\n        mteEventActions has 'set' set.\n        This
    object identifier may be wildcarded by leaving\n        sub-identifiers off the
    end, in which case\n        nteEventSetObjectWildCard must be 'true'.\n        If
    mteEventSetObject is wildcarded the instance used to set the\n        object to
    which it points is the same as the instance from the\n        value of mteTriggerValueID
    that triggered the event.\n        Each instance that fills the wildcard is independent
    of any\n        additional instances, that is, wildcarded objects operate\n        as
    if there were a separate table entry for each instance\n        that fills the
    wildcard without having to actually predict\n        all possible instances ahead
    of time.\n        Bad object identifiers or a mismatch between truncating the\n
    \       identifier and the value of mteSetObjectWildcard\n        result in operation
    as one would expect when providing the\n        wrong identifier to a Set operation.
    \ The Set will fail or set\n        the wrong object.  If the value syntax of
    the destination\n        object is not correct, the Set fails with the normal
    SNMP\n        error code.\"\n    DEFVAL { zeroDotZero }\n    ::= { mteEventSetEntry
    1 }\n"
  - "mteEventSetObjectWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control over
    whether mteEventSetObject is to be treated as\n        fully-specified or wildcarded,
    with 'true' indicating wildcard\n        if mteEventActions has 'set' set.\"\n
    \   DEFVAL { false }\n    ::= { mteEventSetEntry 2 }\n"
  - "mteEventSetValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  read-write\n
    \   STATUS      current\n    DESCRIPTION\n        \"The value to which to set
    the object at mteEventSetObject\n        if mteEventActions has 'set' set.\"\n
    \   DEFVAL { 0 }\n    ::= { mteEventSetEntry 3 }\n"
  - "mteEventSetTargetTag OBJECT-TYPE\n    SYNTAX      SnmpTagValue\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"The tag for
    the target(s) at which to set the object at\n        mteEventSetObject to mteEventSetValue
    if mteEventActions\n        has 'set' set.\n        Systems limited to self management
    MAY reject a non-zero\n        length for the value of this object.\n        A
    length of 0 indicates the local system.  In this case,\n        access to the
    objects indicated by mteEventSetObject is under\n        the security credentials
    of the requester that set\n        mteTriggerEntryStatus to 'active'.  Those credentials
    are the\n        input parameters for isAccessAllowed from the Architecture for\n
    \       Describing SNMP Management Frameworks.\n        Otherwise access rights
    are checked according to the security\n        parameters resulting from the tag.\"\n
    \   DEFVAL { ''H }\n    ::= { mteEventSetEntry 4 }\n"
  - "mteEventSetContextName OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"The management
    context in which to set mteEventObjectID.\n        if mteEventActions has 'set'
    set.\n        This may be wildcarded by leaving characters off the end.  To\n
    \       indicate such wildcarding mteEventSetContextNameWildcard must\n        be
    'true'.\n        If this context name is wildcarded the value used to complete\n
    \       the wildcarding of mteTriggerContextName will be appended.\"\n    DEFVAL
    { ''H }\n    ::= { mteEventSetEntry 5 }\n"
  - "mteEventSetContextNameWildcard OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS
    \ read-write\n    STATUS      current\n    DESCRIPTION\n        \"Control for
    whether mteEventSetContextName is to be treated as\n        fully-specified or
    wildcarded, with 'true' indicating wildcard\n        if mteEventActions has 'set'
    set.\"\n    DEFVAL { false }\n    ::= { mteEventSetEntry 6 }\n"
  - '--

    '
  - '-- Notifications

    '
  - '--

    '
  - "dismanEventMIBNotificationPrefix OBJECT IDENTIFIER ::=\n    { dismanEventMIB
    2 }\n"
  - "dismanEventMIBNotifications OBJECT IDENTIFIER ::=\n    { dismanEventMIBNotificationPrefix
    0 }\n"
  - "dismanEventMIBNotificationObjects OBJECT IDENTIFIER\n   ::= { dismanEventMIBNotificationPrefix
    1 }\n"
  - '--

    '
  - '-- Notification Objects

    '
  - '--

    '
  - "mteHotTrigger OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  accessible-for-notify\n
    \   STATUS      current\n    DESCRIPTION\n        \"The name of the trigger causing
    the notification.\"\n    ::= { dismanEventMIBNotificationObjects 1 }\n"
  - "mteHotTargetName OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"The
    SNMP Target MIB's snmpTargetAddrName related to the\n        notification.\"\n
    \   ::= { dismanEventMIBNotificationObjects 2 }\n"
  - "mteHotContextName OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS
    \ accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"The
    context name related to the notification.  This MUST be as\n        fully-qualified
    as possible, including filling in wildcard\n        information determined in
    processing.\"\n    ::= { dismanEventMIBNotificationObjects 3 }\n"
  - "mteHotOID OBJECT-TYPE\n    SYNTAX      OBJECT IDENTIFIER\n    MAX-ACCESS  accessible-for-notify\n
    \   STATUS      current\n    DESCRIPTION\n        \"The object identifier of the
    destination object related to the\n        notification.  This MUST be as fully-qualified
    as possible,\n        including filling in wildcard information determined in\n
    \       processing.\n        For a trigger-related notification this is from\n
    \       mteTriggerValueID.\n        For a set failure this is from mteEventSetObject.\"\n
    \   ::= { dismanEventMIBNotificationObjects 4 }\n"
  - "mteHotValue OBJECT-TYPE\n    SYNTAX      Integer32\n    MAX-ACCESS  accessible-for-notify\n
    \   STATUS      current\n    DESCRIPTION\n        \"The value of the object at
    mteTriggerValueID when a\n        trigger fired.\"\n    ::= { dismanEventMIBNotificationObjects
    5 }\n"
  - "mteFailedReason OBJECT-TYPE\n    SYNTAX      FailureReason\n    MAX-ACCESS  accessible-for-notify\n
    \   STATUS      current\n    DESCRIPTION\n        \"The reason for the failure
    of an attempt to check for a\n        trigger condition or set an object in response
    to an event.\"\n    ::= { dismanEventMIBNotificationObjects 6 }\n"
  - '--

    '
  - '-- Notifications

    '
  - '--

    '
  - "mteTriggerFired NOTIFICATION-TYPE\n    OBJECTS { mteHotTrigger,\n              mteHotTargetName,\n
    \             mteHotContextName,\n              mteHotOID,\n              mteHotValue
    }\n    STATUS  current\n    DESCRIPTION\n        \"Notification that the trigger
    indicated by the object\n        instances has fired, for triggers with mteTriggerType\n
    \       'boolean' or 'existence'.\"\n    ::= { dismanEventMIBNotifications 1 }\n"
  - "mteTriggerRising NOTIFICATION-TYPE\n    OBJECTS { mteHotTrigger,\n              mteHotTargetName,\n
    \             mteHotContextName,\n              mteHotOID,\n              mteHotValue
    }\n    STATUS  current\n    DESCRIPTION\n        \"Notification that the rising
    threshold was met for triggers\n        with mteTriggerType 'threshold'.\"\n    ::=
    { dismanEventMIBNotifications 2 }\n"
  - "mteTriggerFalling NOTIFICATION-TYPE\n    OBJECTS { mteHotTrigger,\n              mteHotTargetName,\n
    \             mteHotContextName,\n              mteHotOID,\n              mteHotValue
    }\n    STATUS  current\n    DESCRIPTION\n        \"Notification that the falling
    threshold was met for triggers\n        with mteTriggerType 'threshold'.\"\n    ::=
    { dismanEventMIBNotifications 3 }\n"
  - "mteTriggerFailure NOTIFICATION-TYPE\n    OBJECTS { mteHotTrigger,\n              mteHotTargetName,\n
    \             mteHotContextName,\n              mteHotOID,\n              mteFailedReason
    }\n    STATUS  current\n    DESCRIPTION\n        \"Notification that an attempt
    to check a trigger has failed.\n        The network manager must enable this notification
    only with\n        a certain fear and trembling, as it can easily crowd out more\n
    \       important information.  It should be used only to help diagnose\n        a
    problem that has appeared in the error counters and can not\n        be found
    otherwise.\"\n    ::= { dismanEventMIBNotifications 4 }\n"
  - "mteEventSetFailure NOTIFICATION-TYPE\n    OBJECTS { mteHotTrigger,\n              mteHotTargetName,\n
    \             mteHotContextName,\n              mteHotOID,\n              mteFailedReason
    }\n    STATUS  current\n    DESCRIPTION\n        \"Notification that an attempt
    to do a set in response to an\n        event has failed.\n        The network
    manager must enable this notification only with\n        a certain fear and trembling,
    as it can easily crowd out more\n        important information.  It should be
    used only to help diagnose\n        a problem that has appeared in the error counters
    and can not\n        be found otherwise.\"\n    ::= { dismanEventMIBNotifications
    5 }\n"
  - '--

    '
  - '-- Conformance

    '
  - '--

    '
  - 'dismanEventMIBConformance OBJECT IDENTIFIER ::= { dismanEventMIB 3 }

    '
  - "dismanEventMIBCompliances OBJECT IDENTIFIER ::=\n    { dismanEventMIBConformance
    1 }\n"
  - "dismanEventMIBGroups      OBJECT IDENTIFIER ::=\n    { dismanEventMIBConformance
    2 }\n"
  - '-- Compliance

    '
  - "dismanEventMIBCompliance MODULE-COMPLIANCE\n        STATUS current\n        DESCRIPTION\n
    \               \"The compliance statement for entities which implement\n                the
    Event MIB.\"\n        MODULE  -- this module\n                MANDATORY-GROUPS
    {\n                        dismanEventResourceGroup,\n                        dismanEventTriggerGroup,\n
    \                       dismanEventObjectsGroup,\n                        dismanEventEventGroup,\n
    \                       dismanEventNotificationObjectGroup,\n                        dismanEventNotificationGroup\n
    \               }\n                OBJECT mteTriggerTargetTag\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                        \"Write access
    is not required, thus limiting\n                        monitoring to the local
    system or pre-configured\n                        remote systems.\"\n                OBJECT
    mteEventSetTargetTag\n                MIN-ACCESS  read-only\n                DESCRIPTION\n
    \                       \"Write access is not required, thus limiting\n                        setting
    to the local system or pre-configured\n                        remote systems.\"\n
    \               OBJECT mteTriggerValueIDWildcard\n                MIN-ACCESS  read-only\n
    \               DESCRIPTION\n                        \"Write access is not required,
    thus allowing\n                        the system not to implement wildcarding.\"\n
    \               OBJECT mteTriggerContextNameWildcard\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                        \"Write access
    is not required, thus allowing\n                        the system not to implement
    wildcarding.\"\n                OBJECT mteObjectsIDWildcard\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                        \"Write access
    is not required, thus allowing\n                        the system not to implement
    wildcarding.\"\n                OBJECT mteEventSetContextNameWildcard\n                MIN-ACCESS
    \ read-only\n                DESCRIPTION\n                        \"Write access
    is not required, thus allowing\n                        the system not to implement
    wildcarding.\"\n        ::= { dismanEventMIBCompliances 1 }\n"
  - '-- Units of Conformance

    '
  - "dismanEventResourceGroup OBJECT-GROUP\n        OBJECTS {\n                mteResourceSampleMinimum,\n
    \               mteResourceSampleInstanceMaximum,\n                mteResourceSampleInstances,\n
    \               mteResourceSampleInstancesHigh,\n                mteResourceSampleInstanceLacks\n
    \       }\n        STATUS current\n        DESCRIPTION\n                \"Event
    resource status and control objects.\"\n        ::= { dismanEventMIBGroups 1 }\n"
  - "dismanEventTriggerGroup OBJECT-GROUP\n        OBJECTS {\n                mteTriggerFailures,\n
    \               mteTriggerComment,\n                mteTriggerTest,\n                mteTriggerSampleType,\n
    \               mteTriggerValueID,\n                mteTriggerValueIDWildcard,\n
    \               mteTriggerTargetTag,\n                mteTriggerContextName,\n
    \               mteTriggerContextNameWildcard,\n                mteTriggerFrequency,\n
    \               mteTriggerObjectsOwner,\n                mteTriggerObjects,\n
    \               mteTriggerEnabled,\n                mteTriggerEntryStatus,\n                mteTriggerDeltaDiscontinuityID,\n
    \               mteTriggerDeltaDiscontinuityIDWildcard,\n                mteTriggerDeltaDiscontinuityIDType,\n
    \               mteTriggerExistenceTest,\n                mteTriggerExistenceStartup,\n
    \               mteTriggerExistenceObjectsOwner,\n                mteTriggerExistenceObjects,\n
    \               mteTriggerExistenceEventOwner,\n                mteTriggerExistenceEvent,\n
    \               mteTriggerBooleanComparison,\n                mteTriggerBooleanValue,\n
    \               mteTriggerBooleanStartup,\n                mteTriggerBooleanObjectsOwner,\n
    \               mteTriggerBooleanObjects,\n                mteTriggerBooleanEventOwner,\n
    \               mteTriggerBooleanEvent,\n                mteTriggerThresholdStartup,\n
    \               mteTriggerThresholdObjectsOwner,\n                mteTriggerThresholdObjects,\n
    \               mteTriggerThresholdRising,\n                mteTriggerThresholdFalling,\n
    \               mteTriggerThresholdDeltaRising,\n                mteTriggerThresholdDeltaFalling,\n
    \               mteTriggerThresholdRisingEventOwner,\n                mteTriggerThresholdRisingEvent,\n
    \               mteTriggerThresholdFallingEventOwner,\n                mteTriggerThresholdFallingEvent,\n
    \               mteTriggerThresholdDeltaRisingEventOwner,\n                mteTriggerThresholdDeltaRisingEvent,\n
    \               mteTriggerThresholdDeltaFallingEventOwner,\n                mteTriggerThresholdDeltaFallingEvent\n
    \       }\n        STATUS current\n        DESCRIPTION\n                \"Event
    triggers.\"\n        ::= { dismanEventMIBGroups 2 }\n"
  - "dismanEventObjectsGroup OBJECT-GROUP\n        OBJECTS {\n                mteObjectsID,\n
    \               mteObjectsIDWildcard,\n                mteObjectsEntryStatus\n
    \       }\n        STATUS current\n        DESCRIPTION\n                \"Supplemental
    objects.\"\n        ::= { dismanEventMIBGroups 3 }\n"
  - "dismanEventEventGroup OBJECT-GROUP\n        OBJECTS {\n                mteEventFailures,\n
    \               mteEventComment,\n                mteEventActions,\n                mteEventEnabled,\n
    \               mteEventEntryStatus,\n                mteEventNotification,\n
    \               mteEventNotificationObjectsOwner,\n                mteEventNotificationObjects,\n
    \               mteEventSetObject,\n                mteEventSetObjectWildcard,\n
    \               mteEventSetValue,\n                mteEventSetTargetTag,\n                mteEventSetContextName,\n
    \               mteEventSetContextNameWildcard\n        }\n        STATUS current\n
    \       DESCRIPTION\n                \"Events.\"\n        ::= { dismanEventMIBGroups
    4 }\n"
  - "dismanEventNotificationObjectGroup OBJECT-GROUP\n        OBJECTS {\n                mteHotTrigger,\n
    \               mteHotTargetName,\n                mteHotContextName,\n                mteHotOID,\n
    \               mteHotValue,\n                mteFailedReason\n        }\n        STATUS
    current\n        DESCRIPTION\n                \"Notification objects.\"\n        ::=
    { dismanEventMIBGroups 5 }\n"
  - "dismanEventNotificationGroup NOTIFICATION-GROUP\n        NOTIFICATIONS {\n                mteTriggerFired,\n
    \               mteTriggerRising,\n                mteTriggerFalling,\n                mteTriggerFailure,\n
    \               mteEventSetFailure\n        }\n        STATUS current\n        DESCRIPTION\n
    \               \"Notifications.\"\n        ::= { dismanEventMIBGroups 6 }\n"
  - 'END

    '
  title: 7.  Definitions
- contents:
  - "8.  Intellectual Property\n   The IETF takes no position regarding the validity
    or scope of any\n   intellectual property or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; neither does it represent that it\n   has made any effort to
    identify any such rights.  Information on the\n   IETF's procedures with respect
    to rights in standards-track and\n   standards- related documentation can be found
    in BCP-11.  Copies of\n   claims of rights made available for publication and
    any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 8.  Intellectual Property
- contents:
  - "9.  Acknowledgements\n   This MIB contains considerable contributions from the
    RMON MIB, the\n   Distributed Management Design Team (Andy Bierman, Maria Greene,
    Bob\n   Stewart, and Steve Waldbusser), the Distributed Management Working\n   Group,
    and colleagues at Cisco.\n"
  title: 9.  Acknowledgements
- contents:
  - "10.  References\n   [RFC2571]   Harrington, D., Presuhn, R. and B. Wijnen, \"An\n
    \              Architecture for Describing SNMP Management Frameworks\",\n               RFC
    2571, April 1999.\n   [RFC1155]   Rose, M. and K. McCloghrie, \"Structure and
    Identification\n               of Management Information for TCP/IP-based Internets\",\n
    \              STD 16, RFC 1155, May 1990.\n   [RFC1212]   Rose, M. and K. McCloghrie,
    \"Concise MIB Definitions\",\n               STD 16, RFC 1212, March 1991.\n   [RFC1215]
    \  Rose, M., \"A Convention for Defining Traps for use with\n               the
    SNMP\", RFC 1215, March 1991.\n   [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder,
    J., Case, J.,\n               Rose, M. and S. Waldbusser, \"Structure of Management\n
    \              Information Version 2 (SMIv2)\", STD 58, RFC 2578, April\n               1999.\n
    \  [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,\n               Rose,
    M. and S. Waldbusser, \"Textual Conventions for\n               SMIv2\", STD 58,
    RFC 2579, April 1999.\n   [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder,
    J., Case, J.,\n               Rose, M. and S. Waldbusser, \"Conformance Statements
    for\n               SMIv2\", STD 58, RFC 2580, April 1999.\n   [RFC1157]   Case,
    J., Fedor, M., Schoffstall, M. and J. Davin,\n               \"Simple Network
    Management Protocol\", STD 15, RFC 1157,\n               May 1990.\n   [RFC1901]
    \  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n               \"Introduction
    to Community-based SNMPv2\", RFC 1901,\n               January 1996.\n   [RFC1906]
    \  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n               \"Transport
    Mappings for Version 2 of the Simple Network\n               Management Protocol
    (SNMPv2)\", RFC 1906, January 1996.\n   [RFC2572]   Case, J., Harrington D., Presuhn
    R. and B. Wijnen,\n               \"Message Processing and Dispatching for the
    Simple\n               Network Management Protocol (SNMP)\", RFC 2572, April\n
    \              1999.\n   [RFC2574]   Blumenthal, U. and B. Wijnen, \"User-based
    Security Model\n               (USM) for version 3 of the Simple Network Management\n
    \              Protocol (SNMPv3)\", RFC 2574, April 1999.\n   [RFC1905]   Case,
    J., McCloghrie, K., Rose, M. and S. Waldbusser,\n               \"Protocol Operations
    for Version 2 of the Simple Network\n               Management Protocol (SNMPv2)\",
    RFC 1905, January 1996.\n   [RFC2573]   Levi, D., Meyer, P. and B. Stewart, \"SNMPv3\n
    \              Applications\", RFC 2573, April 1999.\n   [RFC2575]   Wijnen, B.,
    Presuhn, R. and K. McCloghrie, \"View-based\n               Access Control Model
    (VACM) for the Simple Network\n               Management Protocol (SNMP)\", RFC
    2575, April 1999.\n   [RFC2570]   Case, J., Mundy, R., Partain, D. and B. Stewart,\n
    \              \"Introduction to Version 3 of the Internet-standard\n               Network
    Management Framework\", RFC 2570, April 1999.\n   [RFC1903]   Case, J., McCloghrie,
    K., Rose, M. and S. Waldbusser,\n               \"Coexistence between Version
    1 and version 2 of the\n               Internet-standard Network Management Framework\",
    RFC\n               1903, January 1996.\n   [RFC2981]   Stewart, B., \"Event MIB\",
    RFC 2981, October 2000.\n   [RFC1757]   Waldbusser, S., \"Remote Network Monitoring
    Management\n               Information Base\", RFC 1757, February 1995.\n   [RFC1451]
    \  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n               \"Manager-to-
    Manager Management Information Base\", RFC\n               1451, April 1993.\n
    \  [RFC2982]   Stewart, B., \"Distributed Management Expression MIB\", RFC\n               2982,
    October 2000.\n   [LOG-MIB]   Stewart, B., \"Notification Log MIB\", Work in Progress.\n"
  title: 10.  References
- contents:
  - "11.  Security Considerations\n   Security issues are discussed in the Security
    section and in the\n   DESCRIPTION clauses of relevant objects.\n"
  title: 11.  Security Considerations
- contents:
  - "12.  Author's Address\n   Bob Stewart\n   Cisco Systems, Inc.\n   170 West Tasman
    Drive\n   San Jose, CA 95134-1706\n   U.S.A.\n"
  title: 12.  Author's Address
- contents:
  - "13.  Editor's Address\n   Ramanathan Kavasseri\n   Cisco Systems, Inc.\n   170
    West Tasman Drive\n   San Jose, CA 95134-1706\n   U.S.A.\n   Phone: +1 408 527
    2446\n   EMail: ramk@cisco.com\n"
  title: 13.  Editor's Address
- contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 14.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
