- title: __initial_text__
  contents:
  - '                Internet Cache Protocol (ICP), version 2

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes version 2 of the Internet Cache Protocol\n\
    \   (ICPv2) as currently implemented in two World-Wide Web proxy cache\n   packages[3,5].\
    \  ICP is a lightweight message format used for\n   communicating among Web caches.\
    \  ICP is used to exchange hints about\n   the existence of URLs in neighbor caches.\
    \  Caches exchange ICP\n   queries and replies to gather information to use in\
    \ selecting the\n   most appropriate location from which to retrieve an object.\n\
    \   This document describes only the format and fields of ICP messages.\n   A\
    \ companion document (RFC2187) describes the application of ICP to\n   Web caches.\
    \  Several independent caching implementations now use ICP,\n   and we consider\
    \ it important to codify the existing practical uses of\n   ICP for those trying\
    \ to implement, deploy, and extend its use for\n   their own purposes.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   ICP is a message format used for communicating between Web\
    \ caches.\n   Although Web caches use HTTP[1] for the transfer of object data,\n\
    \   caches benefit from a simpler, lighter communication protocol.  ICP\n   is\
    \ primarily used in a cache mesh to locate specific Web objects in\n   neighboring\
    \ caches.  One cache sends an ICP query to its neighbors.\n   The neighbors send\
    \ back ICP replies indicating a \"HIT\" or a \"MISS.\"\n   In current practice,\
    \ ICP is implemented on top of UDP, but there is\n   no requirement that it be\
    \ limited to UDP.  We feel that ICP over UDP\n   offers features important to\
    \ Web caching applications.  An ICP\n   query/reply exchange needs to occur quickly,\
    \ typically within a\n   second or two.  A cache cannot wait longer than that\
    \ before beginning\n   to retrieve an object.  Failure to receive a reply message\
    \ most\n   likely means the network path is either congested or broken.  In\n\
    \   either case we would not want to select that neighbor.  As an\n   indication\
    \ of immediate network conditions between neighbor caches,\n   ICP over a lightweight\
    \ protocol such as UDP is better than one with\n   the overhead of TCP.\n   In\
    \ addition to its use as an object location protocol, ICP messages\n   can be\
    \ used for cache selection.  Failure to receive a reply from a\n   cache may indicate\
    \ a network or system failure.  The ICP reply may\n   include information that\
    \ could assist selection of the most\n   appropriate source from which to retrieve\
    \ an object.\n   ICP was initially developed by Peter Danzig, et. al.  at the\n\
    \   University of Southern California as a central part of hierarchical\n   caching\
    \ in the Harvest research project[3].\n"
- title: ICP Message Format
  contents:
  - "ICP Message Format\n   The ICP message format consists of a 20-octet fixed header\
    \ plus a\n   variable sized payload (see Figure 1).\n   NOTE: All fields must\
    \ be represented in network byte order.\n   Opcode\n      One of the opcodes defined\
    \ below.\n   Version\n      The ICP protocol version number.  At the time of this\
    \ writing,\n      both versions two and three are in use.  This document describes\n\
    \      only version two.  The version number field allows for future\n      development\
    \ of this protocol.\n   Message Length\n     0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Opcode    |    Version    |         Message Length        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                         Request Number                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                            Options                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          Option Data                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Sender Host Address                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   |  \
    \                          Payload                            |\n   /        \
    \                                                       /\n   /              \
    \                                                 /\n   |                    \
    \                                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     FIGURE 1: ICP message format.\n      The total length (octets)\
    \ of the ICP message.  ICP messages MUST\n      not exceed 16,384 octets in length.\n\
    \   Request Number\n      An opaque identifier.  When responding to a query, this\
    \ value must\n      be copied into the reply message.\n   Options\n      A 32-bit\
    \ field of option flags that allows extension of this\n      version of the protocol\
    \ in certain, limited ways.  See \"ICP Option\n      Flags\" below.\n   Option\
    \ Data\n      A four-octet field to support optional features.  The following\n\
    \      ICP features make use of this field:\n      The ICP_FLAG_SRC_RTT option\
    \ uses the low 16-bits of Option Data to\n      return RTT measurements.  The\
    \ ICP_FLAG_SRC_RTT option is further\n      described below.\n   Sender Host Address\n\
    \      The IPv4 address of the host sending the ICP message.  This field\n   \
    \   should probably not be trusted over what is  provided by getpeer-\n      name(),\
    \ accept(), and recvfrom().  There is some ambiguity over\n      the original\
    \ purpose of this field.  In practice it is not used.\n   Payload\n      The contents\
    \ of the Payload field vary depending on the Opcode,\n      but most often it\
    \ contains a null-terminated URL string.\n"
- title: 2.  ICP Opcodes
  contents:
  - "2.  ICP Opcodes\n   The following table shows currently defined ICP opcodes:\n\
    \   Value    Name\n   -----    -----------------\n       0    ICP_OP_INVALID\n\
    \       1    ICP_OP_QUERY\n       2    ICP_OP_HIT\n       3    ICP_OP_MISS\n \
    \      4    ICP_OP_ERR\n     5-9    UNUSED\n      10    ICP_OP_SECHO\n      11\
    \    ICP_OP_DECHO\n   12-20    UNUSED\n      21    ICP_OP_MISS_NOFETCH\n     \
    \ 22    ICP_OP_DENIED\n      23    ICP_OP_HIT_OBJ\n   ICP_OP_INVALID\n      A\
    \ place holder to detect zero-filled or malformed messages.  A\n      cache must\
    \ never intentionally send an ICP_OP_INVALID message.\n      ICP_OP_ERR should\
    \ be used instead.\n   ICP_OP_QUERY\n      A query message.  NOTE this opcode\
    \ has a different payload format\n      than most of the others.  First is the\
    \ requester's IPv4 address,\n      followed by a URL.  The Requester Host Address\
    \ is not that of the\n      cache generating the ICP message, but rather the address\
    \ of the\n      caches's client that originated the request.  The Requester Host\n\
    \      Address is often zero filled.  An ICP message with an all-zero\n      Requester\
    \ Host Address address should be taken as one where the\n      requester address\
    \ is not specified; it does not indicate a valid\n      IPv4 address.\n      ICP_OP_QUERY\
    \ payload format:\n        0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                     Requester Host Address                    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      /   \
    \                    Null-Terminated URL                     /\n      /      \
    \                                                         /\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      In response to an ICP_OP_QUERY, the recipient must return one of:\n   \
    \   ICP_OP_HIT, ICP_OP_MISS, ICP_OP_ERR, ICP_OP_MISS_NOFETCH,\n      ICP_OP_DENIED,\
    \ or ICP_OP_HIT_OBJ.\n   ICP_OP_SECHO\n      Similar to ICP_OP_QUERY, but for\
    \ use in simulating a query to an\n      origin server.  When ICP is used to select\
    \ the closest neighbor,\n      the origin server can be included in the algorithm\
    \ by bouncing an\n      ICP_OP_SECHO message off it's echo port.  The payload\
    \ is simply\n      the null-terminated URL.\n      NOTE: the echo server will\
    \ not interpret the data (i.e. we could\n      send it anything).  This opcode\
    \ is used to tell the difference\n      between a legitimate query or response,\
    \ random garbage, and an\n      echo response.\n   ICP_OP_DECHO\n      Similar\
    \ to ICP_OP_QUERY, but for use in simulating a query to a\n      cache which does\
    \ not use ICP.  When ICP is used to choose the\n      closest neighbor, a non-ICP\
    \ cache can be included in the algorithm\n      by bouncing an ICP_OP_DECHO message\
    \ off it's echo port.  The\n      payload is simply the null-terminated URL.\n\
    \      NOTE: one problem with this approach is that while a system's echo\n  \
    \    port may be functioning perfectly, the cache software may not be\n      running\
    \ at all.\n   One of the following six ICP opcodes are sent in response to an\n\
    \   ICP_OP_QUERY message.  Unless otherwise noted, the payload must be\n   the\
    \ null-terminated URL string.  Both the URL string and the Request\n   Number\
    \ field must be exactly the same as from the ICP_OP_QUERY\n   message.\n   ICP_OP_HIT\n\
    \      An ICP_OP_HIT response indicates that the requested URL exists in\n   \
    \   this cache and that the requester is allowed to retrieve it.\n   ICP_OP_MISS\n\
    \      An ICP_OP_MISS response indicates that the requested URL does not\n   \
    \   exist in this cache.  The querying cache may still choose to fetch\n     \
    \ the URL from the replying cache.\n   ICP_OP_ERR\n      An ICP_OP_ERR response\
    \ indicates some kind of error in parsing or\n      handling the query message\
    \ (e.g. invalid URL).\n   ICP_OP_MISS_NOFETCH\n      An ICP_OP_MISS_NOFETCH response\
    \ indicates that this cache is up,\n      but is in a state where it does not\
    \ want to handle cache misses.\n      An example of such a state is during a startup\
    \ phase where a cache\n      might be rebuilding its object store.  A cache in\
    \ such a mode may\n      wish to return ICP_OP_HIT for cache hits, but not ICP_OP_MISS\
    \ for\n      misses.  ICP_OP_MISS_NOFETCH essentially means \"I am up and\n  \
    \    running, but please don't fetch this URL from me now.\"\n      Note, ICP_OP_MISS_NOFETCH\
    \ has a different meaning than\n      ICP_OP_MISS.  The ICP_OP_MISS reply is an\
    \ invitation to fetch the\n      URL from the replying cache (if their relationship\
    \ allows it), but\n      ICP_OP_MISS_NOFETCH is a request to NOT fetch the URL\
    \ from the\n      replying cache.\n   ICP_OP_DENIED\n      An ICP_OP_DENIED response\
    \ indicates that the querying site is not\n      allowed to retrieve the named\
    \ object from this cache.  Caches and\n      proxies may implement complex access\
    \ controls.  This reply must be\n      be interpreted to mean \"you are not allowed\
    \ to request this\n      particular URL from me at this particular time.\"\n \
    \     Caches receiving a high percentage of ICP_OP_DENIED replies are\n      probably\
    \ misconfigured.  Caches should track percentage of all\n      replies which are\
    \ ICP_OP_DENIED and disable a neighbor which\n      exceeds a certain threshold\
    \ (e.g. 95% of 100 or more queries).\n      Similarly, a cache should track the\
    \ percent of ICP_OP_DENIED\n      messages that are sent to a given address. \
    \ If the percent of\n      denied messages exceeds a certain threshold (e.g. 95%\
    \ of 100 or\n      more), the cache may choose to ignore all subsequent ICP_OP_QUERY\n\
    \      messages from that address until some sort of administrative\n      intervention\
    \ occurs.\n   ICP_OP_HIT_OBJ\n      Just like an ICP_OP_HIT response, but the\
    \ actual object data has\n      been included in this reply message.   Many requested\
    \ objects are\n      small enough that it is possible to include them in the query\n\
    \      response and avoid the need to make a subsequent HTTP request for\n   \
    \   the object.\n      CAVEAT: ICP_OP_HIT_OBJ has some negative side effects which\
    \ make\n      its use undesirable.  It transfers object data without HTTP and\n\
    \      therefore bypasses the standard HTTP processing, including\n      authorization\
    \ and age validation.  Another negative side effect is\n      that ICP_OP_HIT_OBJ\
    \ messages will often be much larger than the\n      path MTU, thereby causing\
    \ fragmentation to occur on the UDP\n      packet.  For these reasons, use of\
    \ ICP_OP_HIT_OBJ is NOT\n      recommended.\n      A cache must not send an ICP_OP_HIT_OBJ\
    \ unless the\n      ICP_FLAG_HIT_OBJ flag is set in the query message Options\
    \ field.\n      ICP_OP_HIT_OBJ payload format:\n        0                   1\
    \                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   /                       Null-Terminated URL                     /\n      /\
    \                                                               /\n      |   \
    \                                                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |         Object Size           |                               |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               |\n      |\
    \                                                               |\n      /   \
    \                        Object Data                         /\n      /      \
    \                                                         /\n      |         \
    \                                                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      The receiving application must check to make sure it actually\n      receives\
    \ Object Size octets of data.  If it does not, then it\n      should treat the\
    \ ICP_OP_HIT_OBJ reply as though it were a normal\n      ICP_OP_HIT.\n      NOTE:\
    \ the Object Size field does not necessarily begin on a 32-bit\n      boundary\
    \ as shown in the diagram above.  It begins immediately\n      following the NULL\
    \ byte of the URL string.\n   UNRECOGNIZED OPCODES\n      ICP messages with unrecognized\
    \ or unused opcodes should be\n      ignored, i.e. no reply generated.  The application\
    \ may choose to\n      note the anomalous behaviour in a log file.\n"
- title: 3.  ICP Option Flags
  contents:
  - "3.  ICP Option Flags\n   0x80000000  ICP_FLAG_HIT_OBJ\n      This flag is set\
    \ in an ICP_OP_QUERY message indicating that it is\n      okay to respond with\
    \ an ICP_OP_HIT_OBJ message if the object data\n      will fit in the reply.\n\
    \   0x40000000  ICP_FLAG_SRC_RTT\n      This flag is set in an ICP_OP_QUERY message\
    \ indicating that the\n      requester would like the ICP reply to include the\
    \ responder's\n      measured RTT to the origin server.\n      Upon receipt of\
    \ an ICP_OP_QUERY with ICP_FLAG_SRC_RTT bit set, a\n      cache should check an\
    \ internal database of RTT measurements.  If\n      available, the RTT value MUST\
    \ be expressed as a 16-bit integer, in\n      units of milliseconds.  If unavailable,\
    \ the responder may either\n      set the RTT value to zero, or clear the ICP_FLAG_SRC_RTT\
    \ bit in\n      the ICP reply.  The ICP reply MUST not be delayed while waiting\n\
    \      for the RTT measurement to occur.\n      This flag is set in an ICP reply\
    \ message (ICP_OP_HIT, ICP_OP_MISS,\n      ICP_OP_MISS_NOFETCH, or ICP_OP_HIT_OBJ)\
    \ to indicate that the low\n      16-bits of the Option Data field contain the\
    \ measured RTT to the\n      host given in the requested URL.  If ICP_FLAG_SRC_RTT\
    \ is clear in\n      the query then it MUST also be clear in the reply.  If\n\
    \      ICP_FLAG_SRC_RTT is set in the query, then it may or may not be\n     \
    \ set in the reply.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security issues relating to ICP are discussed\
    \ in the companion\n   document, RFC2187.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1] Fielding, R., et. al, \"Hypertext Transfer Protocol --\
    \ HTTP/1.1\",\n   RFC 2068, UC Irvine, January 1997.\n   [2] Berners-Lee, T.,\
    \ Masinter, L., and M. McCahill, \"Uniform Resource\n   Locators (URL)\", RFC\
    \ 1738, CERN, Xerox PARC, University of Minnesota,\n   December 1994.\n   [3]\
    \ Bowman M., Danzig P., Hardy D., Manber U., Schwartz M., and\n   Wessels D.,\
    \ \"The Harvest Information Discovery and Access System\",\n   Internet Research\
    \ Task Force - Resource Discovery,\n   http://harvest.transarc.com/.\n   [4] Wessels\
    \ D., Claffy K., \"ICP and the Squid Web Cache\", National\n   Laboratory for\
    \ Applied Network Research,\n   http://www.nlanr.net/~wessels/Papers/icp-squid.ps.gz\n\
    \   [5] Wessels D., \"The Squid Internet Object Cache\", National\n   Laboratory\
    \ for Applied Network Research,\n   http://squid.nlanr.net/Squid/\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors wish to thank Paul A Vixie <paul@vix.com>\
    \ for providing\n   excellent feedback on this document.\n"
- title: 7.  Authors'  Addresses
  contents:
  - "7.  Authors'  Addresses\n   Duane Wessels\n   National Laboratory for Applied\
    \ Network Research\n   10100 Hopkins Drive\n   La Jolla, CA 92093\n   EMail: wessels@nlanr.net\n\
    \   K. Claffy\n   National Laboratory for Applied Network Research\n   10100 Hopkins\
    \ Drive\n   La Jolla, CA 92093\n   EMail: kc@nlanr.net\n"
