- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n               for the DS0\
    \ and DS0 Bundle Interface Type\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   In\
    \ particular, it describes objects used for managing DS0 and DS0\n   Bundle interfaces.\
    \  This document is a companion document with\n   Definitions of Managed Objects\
    \ for the DS1/E1/DS2/E2 (RFC 2495 [17]),\n   DS3/E3 (RFC 2496 [18]), and the work\
    \ in progress, SONET/SDH Interface\n   Types.\n   This memo specifies a MIB module\
    \ in a manner that is both compliant\n   to the SNMPv2 SMI, and semantically identical\
    \ to the peer SNMPv1\n   definitions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   4.1.1 The DS0 Configuration Table ..............................\
    \    9\n   4.1.2 The DS0 Channel Mapping Table ............................  \
    \ 12\n   5 Object Definitions for DS0 Bundle ............................   15\n\
    \   5.1 The DS0 Bundle Config Group ................................   15\n  \
    \ 5.1.1 The DS0 Bundle Table .....................................   15\n   5.2\
    \ The DS0 Bonding Group ......................................   18\n   5.2.1\
    \ The DS0 Bonding Table ....................................   18\n   6 Intellectual\
    \ Property ........................................   21\n   7 Acknowledgments\
    \ ..............................................   22\n   8 References ...................................................\
    \   22\n   9 Security Considerations ......................................  \
    \ 23\n   10 Author's Address ............................................   24\n\
    \   11 Full Copyright Statement ....................................   25\n"
- title: 1.  The SNMP Management Framework
  contents:
  - "1.  The SNMP Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n    o   An overall architecture, described\
    \ in RFC 2271 [1].\n    o   Mechanisms for describing and naming objects and events\
    \ for the\n        purpose of management. The first version of this Structure\
    \ of\n        Management Information (SMI) is called SMIv1 and described in\n\
    \        STD 16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The\n  \
    \      second version, called SMIv2, is described in RFC 1902 [5], RFC\n     \
    \   1903 [6] and RFC 1904 [7].\n    o   Message protocols for transferring management\
    \ information. The\n        first version of the SNMP message protocol is called\
    \ SNMPv1 and\n        described in STD 15, RFC 1157 [8]. A second version of the\
    \ SNMP\n        message protocol, which is not an Internet standards track\n \
    \       protocol, is called SNMPv2c and described in RFC 1901 [9] and\n      \
    \  RFC 1906 [10].  The third version of the message protocol is\n        called\
    \ SNMPv3 and described in RFC 1906 [10], RFC 2272 [11] and\n        RFC 2274 [12].\n\
    \    o   Protocol operations for accessing management information. The\n     \
    \   first set of protocol operations and associated PDU formats is\n        described\
    \ in STD 15, RFC 1157 [8]. A second set of protocol\n        operations and associated\
    \ PDU formats is described in RFC 1905\n        [13].\n    o   A set of fundamental\
    \ applications described in RFC 2273 [14] and\n        the view-based access control\
    \ mechanism described in RFC 2275\n        [15].  Managed objects are accessed\
    \ via a virtual information\n        store, termed the Management Information\
    \ Base or MIB.  Objects\n        in the MIB are defined using the mechanisms defined\
    \ in the SMI.\n        This memo specifies a MIB module that is compliant to the\
    \ SMIv2.\n        A MIB conforming to the SMIv1 can be produced through the\n\
    \        appropriate translations. The resulting translated MIB must be\n    \
    \    semantically equivalent, except where objects or events are\n        omitted\
    \ because no translation is possible (use of Counter64).\n        Some machine\
    \ readable information in SMIv2 will be converted\n        into textual descriptions\
    \ in SMIv1 during the translation\n        process. However, this loss of machine\
    \ readable information is\n        not considered to change the semantics of the\
    \ MIB.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   These objects are used when the particular media being used\
    \ to\n   realize an interface is a DS0 interface.  At present, this applies to\n\
    \   these values of the ifType variable in the Internet-standard MIB:\n      \
    \  ds0 (81)\n        ds0Bundle (82)\n"
- title: 2.1.  BONDing Terminology
  contents:
  - "2.1.  BONDing Terminology\n   Please reference The BONDing Spec [20] for definitions\
    \ of terms used\n   to describe bonding modes.\n"
- title: 2.2.  Use of ifTable for DS0 Layer
  contents:
  - "2.2.  Use of ifTable for DS0 Layer\n   The following items are defined in RFC\
    \ 2233 [16].\n   Only the ifGeneralInformationGroup and ifCounterDiscontinuityGroup\n\
    \   need to be supported.\n              ifTable Object           Use for DS0\
    \ Layer\n   ======================================================================\n\
    \              ifIndex                  Interface index.\n              ifDescr\
    \                  See interfaces MIB [16].\n              ifType            \
    \       ds0(81) or ds0Bundle(82).\n              ifSpeed                  64000\
    \ for ds0 (regardless of the\n                                       setting of\
    \ robbed bit signalling)\n                                       or N*64000 for\
    \ ds0Bundle.\n              ifPhysAddress            The value of the Circuit\n\
    \                                       Identifier.  If no Circuit\n         \
    \                              Identifier has been assigned\n                \
    \                       this object should have an octet\n                   \
    \                    string with zero length.\n              ifAdminStatus   \
    \         See interfaces MIB [16].\n              ifOperStatus             See\
    \ interfaces MIB [16].\n              ifLastChange             See interfaces\
    \ MIB [16].\n              ifName                   See interfaces MIB [16].\n\
    \              ifLinkUpDownTrapEnable   Set to disabled(2).\n                \
    \                       Supports read-only access.\n              ifHighSpeed\
    \              Set to rounded ifSpeed/1000000.\n              ifConnectorPresent\
    \       Set to false(2).\n"
- title: 2.3.  Using ifStackTable
  contents:
  - "2.3.  Using ifStackTable\n   This section describes by example how to use ifStackTable\
    \ to\n   represent the relationship of ds0 and ds0Bundles with ds1 interfaces.\n\
    \   Implementors of the stack table for ds0 and ds0Bundle interfaces\n   should\
    \ look at the appropriate RFC for the service being stacked on\n   ds0s and ds0Bundles.\
    \  Examples given below are for illustration\n   purposes only.\n   Example: A\
    \ Frame Relay Service is being carried on 4 ds0s of a ds1.\n           +---------------------+\n\
    \           | Frame Relay Service |\n           +---------------------+\n    \
    \                  |\n           +---------------------+\n           | ds0Bundle\
    \           |\n           +---------------------+\n             |     |     |\
    \     |\n           +---+ +---+ +---+ +---+\n           |ds0| |ds0| |ds0| |ds0|\n\
    \           +---+ +---+ +---+ +---+\n             |     |     |     |\n      \
    \     +---------------------+\n           | ds1                 |\n          \
    \ +---------------------+\n   The assignment of the index values could for example\
    \ be:\n           ifIndex  Description\n           1        FrameRelayService\
    \ (type 44)\n           2        ds0Bundle         (type 82)\n           3   \
    \     ds0 #1            (type 81)\n           4        ds0 #2            (type\
    \ 81)\n           5        ds0 #3            (type 81)\n           6        ds0\
    \ #4            (type 81)\n           7        ds1               (type 18)\n \
    \  The ifStackTable is then used to show the relationships between the\n   various\
    \ interfaces.\n           ifStackTable Entries\n           HigherLayer   LowerLayer\n\
    \           0             1\n           1             2\n           2        \
    \     3\n           2             4\n           2             5\n           2\
    \             6\n           3             7\n           4             7\n    \
    \       5             7\n           6             7\n           7            \
    \ 0\n   In the case where the frameRelayService is using a single ds0, then\n\
    \   the ds0Bundle is not required.\n           +---------------------+\n     \
    \      | Frame Relay Service |\n           +---------------------+\n         \
    \    |\n           +---+\n           |ds0|\n           +---+\n             |\n\
    \           +---------------------+\n           | ds1                 |\n    \
    \       +---------------------+\n   The assignment of the index values could for\
    \ example be:\n           ifIndex  Description\n           1        FrameRelayService\
    \ (type 44)\n           2        ds0               (type 81)\n           3   \
    \     ds1               (type 18)\n   The ifStackTable is then used to show the\
    \ relationships between the\n   various interfaces.\n           ifStackTable Entries\n\
    \           HigherLayer   LowerLayer\n           0             1\n           1\
    \             2\n           2             3\n           3             0\n"
- title: 2.3.1.  Usage of Channelization for DS3, DS1, DS0
  contents:
  - "2.3.1.  Usage of Channelization for DS3, DS1, DS0\n   An example is given here\
    \ to explain the channelization objects in the\n   DS3, DS1, and DS0 MIBs to help\
    \ the implementor use the objects\n   correctly.  Treatment of E3 and E1 would\
    \ be similar, with the number\n   of DS0s being different depending on the framing\
    \ of the E1.  Timeslot\n   16 is not created for framing types that do not pass\
    \ data over it.\n   Assume that a DS3 (with ifIndex 1) is channelized into DS1s\
    \ (without\n   DS2s).  The object dsx3Channelization is set to enabledDs1.  There\n\
    \   will be 28 DS1s in the ifTable.  Assume the entries in the ifTable\n   for\
    \ the DS1s are created in channel order and the ifIndex values are\n   2 through\
    \ 29.  In the DS1 MIB, there will be an entry in the\n   dsx1ChanMappingTable\
    \ for each ds1.  The entries will be as follows:\n           dsx1ChanMappingTable\
    \ Entries\n           ifIndex  dsx1Ds1ChannelNumber   dsx1ChanMappedIfIndex\n\
    \           1        1                      2\n           1        2         \
    \             3\n           ......\n           1        28                   \
    \  29\n   In addition, the DS1s are channelized into DS0s.  The object\n   dsx1Channelization\
    \ is set to enabledDs0 for each DS1.  When this\n   object is set to this value,\
    \ 24 DS0s are created by the agent. There\n   will be 24 DS0s in the ifTable for\
    \ each DS1.  If the\n   dsx1Channelization is set to disabled, the 24 DS0s are\
    \ destroyed.\n   Assume the entries in the ifTable are created in channel order\
    \ and\n   the ifIndex values for the DS0s in the first DS1 are 30 through 53.\n\
    \   In the DS0 MIB, there will be an entry in the dsx0ChanMappingTable\n   for\
    \ each DS0.  The entries will be as follows:\n           dsx0ChanMappingTable\
    \ Entries\n           ifIndex   dsx0Ds0ChannelNumber  dsx0ChanMappedIfIndex\n\
    \           2         1                     30\n           2         2       \
    \              31\n           ......\n           2         24                \
    \    53\n"
- title: 2.3.2.  Usage of ifIndex Mapping for DS0Bundle
  contents:
  - "2.3.2.  Usage of ifIndex Mapping for DS0Bundle\n   An example is given here to\
    \ explain the ifIndex mapping objects in\n   the DS0Bundle MIB to help the implementor\
    \ use the objects correctly.\n   Assume that a DS1 (with ifIndex 1) is channelized\
    \ into DS0s.  There\n   will be 24 DS0s in the ifTable.  Assume the entries in\
    \ the ifTable\n   for the DS0s are created in channel order and the ifIndex values\
    \ are\n   2 through 25.  Now, assume that there are two bundles on the DS1.\n\
    \   The first one uses channels 1 and 2.  The second uses channels 3 and\n   4.\
    \  There will be two ifTable entries for these bundles, with values\n   of 26\
    \ and 27 for ifIndex.  There will be an entry in the\n   dsx0BundleTable for each\
    \ bundle.  The entries will be as follows:\n           dsx0BundleTable Entries\n\
    \           dsx0BundleIndex    dsx0BundleIfIndex\n           1               \
    \   26\n           2                  27\n   There will be an entry in the dsx0ConfigTable\
    \ for each DS0.  The\n   entries will be as follows:\n           dsx0ConfigTable\
    \ Entries\n           ifIndex  dsx0Ds0ChannelNumber   dsx0Ds0BundleMappedIfIndex\n\
    \           2        1                      26\n           3        2        \
    \              26\n           4        3                      27\n           5\
    \        4                      27\n           6        5                    \
    \  0\n           7        6                      0\n           ......\n      \
    \     25       24                     0\n"
- title: 3.  Overview of the MIB
  contents:
  - "3.  Overview of the MIB\n   This document contains 2 MIB modules, the DS0 MIB\
    \ and the DS0Bundle\n   MIB.\n"
- title: 3.1.  DS0 MIB
  contents:
  - "3.1.  DS0 MIB\n   The DS0 MIB is used to represent individual DS0s in a DS1 or\
    \ E1.\n   Variables in this MIB would be created for each DS0 in the ifTable.\n\
    \   This MIB contains the following group:\n   The DS0 Config Group - This group\
    \ contains configuration information\n   about a particular DS0.\n"
- title: 3.2.  DS0Bundle MIB
  contents:
  - "3.2.  DS0Bundle MIB\n   The DS0Bundle MIB is used to represent collections of\
    \ DS0s that are\n   used together to carry data within a DS1/E1 at speeds greater\
    \ than\n   that of a single DS0.  DS0Bundles are created on top of DS0s and are\n\
    \   represented that way in the ifStackTable.  This MIB contains the\n   following\
    \ groups:\n   The DS0 Bundle Group - This group contains objects used for creating\n\
    \   new ds0Bundles.  This group is mandatory.\n   The DS0 Bonding Group - This\
    \ group contains information about bonding\n   for a ds0Bundle, if bonding is\
    \ enabled.  This group is optional.\n"
- title: 4.  Object Definitions for DS0
  contents:
  - "4.  Object Definitions for DS0\n   DS0-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n\
    \        MODULE-IDENTITY, OBJECT-TYPE,\n        transmission                 \
    \    FROM SNMPv2-SMI\n        MODULE-COMPLIANCE, OBJECT-GROUP  FROM SNMPv2-CONF\n\
    \        DisplayString, TruthValue        FROM SNMPv2-TC\n        ifIndex, InterfaceIndex,\n\
    \        InterfaceIndexOrZero             FROM IF-MIB;\n   --  This is the MIB\
    \ module for the DS0 Interface objects.\n   ds0 MODULE-IDENTITY\n       LAST-UPDATED\
    \ \"9807161630Z\"\n       ORGANIZATION \"IETF Trunk MIB Working Group\"\n    \
    \   CONTACT-INFO\n         \"        David Fowler\n          Postal: Newbridge\
    \ Networks Corporation\n                  600 March Road\n                  Kanata,\
    \ Ontario, Canada K2K 2E6\n                  Tel: +1 613 591 3600\n          \
    \        Fax: +1 613 599 3619\n          E-mail: davef@newbridge.com\"\n     \
    \  DESCRIPTION\n            \"The MIB module to describe\n             DS0 interfaces\
    \ objects.\"\n       REVISION \"9805242010Z\"\n       DESCRIPTION\n          \
    \  \"Initial version of the DS0-MIB.\"\n       ::= { transmission 81 }\n   --\
    \ The DS0 Config Group\n   -- Implementation of this group is mandatory for all\n\
    \   -- systems that use a DS0 Interface.\n   -- The DS0 Config Group consists\
    \ of two tables:\n   --    DS0 Configuration Table\n   --    DS0 Channel Mapping\
    \ Table\n   -- The DS0 Configuration Table\n   dsx0ConfigTable OBJECT-TYPE\n \
    \      SYNTAX  SEQUENCE OF Dsx0ConfigEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS  current\n       DESCRIPTION\n               \"The DS0 Configuration\
    \ table.\"\n       ::= { ds0 1 }\n   dsx0ConfigEntry OBJECT-TYPE\n       SYNTAX\
    \  Dsx0ConfigEntry\n       MAX-ACCESS  not-accessible\n       STATUS  current\n\
    \       DESCRIPTION\n               \"An entry in the DS0 Configuration table.\
    \  There\n               is an entry in this table for each DS0 interface.\"\n\
    \       INDEX   { ifIndex }\n       ::= { dsx0ConfigTable 1 }\n   Dsx0ConfigEntry\
    \ ::=\n       SEQUENCE {\n           dsx0Ds0ChannelNumber        INTEGER,\n  \
    \         dsx0RobbedBitSignalling     TruthValue,\n           dsx0CircuitIdentifier\
    \       DisplayString,\n           dsx0IdleCode                INTEGER,\n    \
    \       dsx0SeizedCode              INTEGER,\n           dsx0ReceivedCode    \
    \        INTEGER,\n           dsx0TransmitCodesEnable     TruthValue,\n      \
    \     dsx0Ds0BundleMappedIfIndex  InterfaceIndexOrZero\n   }\n   dsx0Ds0ChannelNumber\
    \ OBJECT-TYPE\n       SYNTAX  INTEGER(0..31)\n       MAX-ACCESS  read-only\n \
    \      STATUS  current\n       DESCRIPTION\n               \"This object indicates\
    \ the channel number of the\n               ds0 on its DS1/E1.\"\n       ::= {\
    \ dsx0ConfigEntry 1 }\n   dsx0RobbedBitSignalling OBJECT-TYPE\n       SYNTAX \
    \ TruthValue\n       MAX-ACCESS  read-write\n       STATUS  current\n       DESCRIPTION\n\
    \               \"This object indicates if Robbed Bit Signalling is\n        \
    \       turned on or off for a given ds0.  This only\n               applies to\
    \ DS0s on a DS1 link.  For E1 links the\n               value is always off (false).\"\
    \n       ::= { dsx0ConfigEntry 2 }\n   dsx0CircuitIdentifier OBJECT-TYPE\n   \
    \     SYNTAX  DisplayString (SIZE (0..255))\n        MAX-ACCESS  read-write\n\
    \        STATUS  current\n        DESCRIPTION\n               \"This object contains\
    \ the transmission vendor's\n               circuit identifier, for the purpose\
    \ of\n               facilitating troubleshooting.\"\n       ::= { dsx0ConfigEntry\
    \ 3 }\n   dsx0IdleCode OBJECT-TYPE\n        SYNTAX  INTEGER(0..15)\n        MAX-ACCESS\
    \  read-write\n        STATUS  current\n        DESCRIPTION\n               \"\
    This object contains the code transmitted in the\n               ABCD bits when\
    \ the ds0 is not connected and\n               dsx0TransmitCodesEnable is enabled.\
    \  The object is\n               a bitmap and the various bit positions are:\n\
    \                     1     D bit\n                     2     C bit\n        \
    \             4     B bit\n                     8     A bit\"\n       ::= { dsx0ConfigEntry\
    \ 4 }\n   dsx0SeizedCode OBJECT-TYPE\n        SYNTAX  INTEGER(0..15)\n       \
    \ MAX-ACCESS  read-write\n        STATUS  current\n        DESCRIPTION\n     \
    \          \"This object contains the code transmitted in the\n              \
    \ ABCD bits when the ds0 is connected and\n               dsx0TransmitCodesEnable\
    \ is enabled.  The object is\n               a bitmap and the various bit positions\
    \ are:\n                     1     D bit\n                     2     C bit\n \
    \                    4     B bit\n                     8     A bit\"\n       ::=\
    \ { dsx0ConfigEntry 5 }\n   dsx0ReceivedCode OBJECT-TYPE\n        SYNTAX  INTEGER(0..15)\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \               \"This object contains the code being received in\n          \
    \     the ABCD bits.  The object is a bitmap and the\n               various bit\
    \ positions are:\n                     1     D bit\n                     2   \
    \  C bit\n                     4     B bit\n                     8     A bit\"\
    \n       ::= { dsx0ConfigEntry 6 }\n   dsx0TransmitCodesEnable OBJECT-TYPE\n \
    \       SYNTAX TruthValue\n        MAX-ACCESS  read-write\n        STATUS  current\n\
    \        DESCRIPTION\n               \"This object determines if the idle and\
    \ seized\n               codes are transmitted. If the value of this object\n\
    \               is true then the codes are transmitted.\"\n       ::= { dsx0ConfigEntry\
    \ 7 }\n   dsx0Ds0BundleMappedIfIndex OBJECT-TYPE\n        SYNTAX InterfaceIndexOrZero\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \               \"This object indicates the ifIndex value assigned\n         \
    \      by the agent for the ds0Bundle(82) ifEntry to\n               which the\
    \ given ds0(81) ifEntry may belong.\n               If the given ds0(81) ifEntry\
    \ does not belong to\n               any ds0Bundle(82) ifEntry, then this object\
    \ has a\n               value of zero.\n               While this object provides\
    \ information that can\n               also be found in the ifStackTable, it provides\n\
    \               this same information with a single table lookup,\n          \
    \     rather than by walking the ifStackTable to find\n               the possibly\
    \ non-existent ds0Bundle(82) ifEntry\n               that may be stacked above\
    \ the given ds0(81)\n               ifTable entry.\"\n       ::= { dsx0ConfigEntry\
    \ 8 }\n   -- The DS0 Channel Mapping Table\n   dsx0ChanMappingTable OBJECT-TYPE\n\
    \        SYNTAX  SEQUENCE OF Dsx0ChanMappingEntry\n        MAX-ACCESS  not-accessible\n\
    \        STATUS  current\n        DESCRIPTION\n               \"The DS0 Channel\
    \ Mapping table.  This table maps a\n               DS0 channel number on a particular\
    \ DS1/E1 into an\n               ifIndex.\"\n        ::= { ds0 3 }\n   dsx0ChanMappingEntry\
    \ OBJECT-TYPE\n        SYNTAX  Dsx0ChanMappingEntry\n        MAX-ACCESS  not-accessible\n\
    \        STATUS  current\n        DESCRIPTION\n               \"An entry in the\
    \ DS0 Channel Mapping table.  There\n               is an entry in this table\
    \ corresponding to each\n               ds0 ifEntry within any interface that\
    \ is\n               channelized to the individual ds0 ifEntry level.\n      \
    \         This table is intended to facilitate mapping from\n               channelized\
    \ interface / channel number to DS0\n               ifEntry.  (e.g. mapping (DS1\
    \ ifIndex, DS0 Channel\n               Number) -> ifIndex)\n               While\
    \ this table provides information that can\n               also be found in the\
    \ ifStackTable and\n               dsx0ConfigTable, it provides this same information\n\
    \               with a single table lookup, rather than by walking\n         \
    \      the ifStackTable to find the various constituent\n               ds0 ifTable\
    \ entries, and testing various\n               dsx0ConfigTable entries to check\
    \ for the entry\n               with the applicable DS0 channel number.\"\n  \
    \      INDEX   { ifIndex, dsx0Ds0ChannelNumber }\n        ::= { dsx0ChanMappingTable\
    \ 1 }\n   Dsx0ChanMappingEntry ::=\n        SEQUENCE {\n            dsx0ChanMappedIfIndex\
    \  InterfaceIndex\n   }\n   dsx0ChanMappedIfIndex OBJECT-TYPE\n        SYNTAX\
    \  InterfaceIndex\n        MAX-ACCESS  read-only\n        STATUS  current\n  \
    \      DESCRIPTION\n               \"This object indicates the ifIndex value assigned\n\
    \               by the agent for the individual ds0 ifEntry that\n           \
    \    corresponds to the given DS0 channel number\n               (specified by\
    \ the INDEX element\n               dsx0Ds0ChannelNumber) of the given channelized\n\
    \               interface (specified by INDEX element ifIndex).\"\n        ::=\
    \ { dsx0ChanMappingEntry 1 }\n   -- conformance information\n   ds0Conformance\
    \ OBJECT IDENTIFIER ::= { ds0 2 }\n   ds0Groups      OBJECT IDENTIFIER ::= { ds0Conformance\
    \ 1 }\n   ds0Compliances OBJECT IDENTIFIER ::= { ds0Conformance 2 }\n   -- compliance\
    \ statements\n   ds0Compliance MODULE-COMPLIANCE\n       STATUS  current\n   \
    \    DESCRIPTION\n               \"The compliance statement for DS0 interfaces.\"\
    \n       MODULE  -- this module\n           MANDATORY-GROUPS { ds0ConfigGroup\
    \ }\n           OBJECT dsx0RobbedBitSignalling\n           MIN-ACCESS read-only\n\
    \           DESCRIPTION\n               \"The ability to set RBS is not required.\"\
    \n           OBJECT dsx0CircuitIdentifier\n           MIN-ACCESS read-only\n \
    \          DESCRIPTION\n               \"The ability to set the circuit identifier\
    \ is not\n               required.\"\n           OBJECT dsx0IdleCode\n       \
    \    MIN-ACCESS read-only\n           DESCRIPTION\n               \"The ability\
    \ to set the idle code is not\n               required.\"\n           OBJECT dsx0SeizedCode\n\
    \           MIN-ACCESS read-only\n           DESCRIPTION\n               \"The\
    \ ability to set the seized code is not\n               required.\"\n        \
    \   OBJECT dsx0TransmitCodesEnable\n           MIN-ACCESS read-only\n        \
    \   DESCRIPTION\n               \"The ability to enable and disable the\n    \
    \           transmitting of idle and seized codes is not\n               required.\"\
    \n       ::= { ds0Compliances 1 }\n   -- units of conformance\n   ds0ConfigGroup\
    \  OBJECT-GROUP\n       OBJECTS { dsx0Ds0ChannelNumber,\n                 dsx0RobbedBitSignalling,\n\
    \                 dsx0CircuitIdentifier,\n                 dsx0IdleCode,\n   \
    \              dsx0SeizedCode,\n                 dsx0ReceivedCode,\n         \
    \        dsx0TransmitCodesEnable,\n                 dsx0Ds0BundleMappedIfIndex,\n\
    \                 dsx0ChanMappedIfIndex }\n       STATUS  current\n       DESCRIPTION\n\
    \               \"A collection of objects providing configuration\n          \
    \     information applicable to all DS0 interfaces.\"\n       ::= { ds0Groups\
    \ 1 }\n   END\n"
- title: 5.  Object Definitions for DS0 Bundle
  contents:
  - "5.  Object Definitions for DS0 Bundle\n   DS0BUNDLE-MIB DEFINITIONS ::= BEGIN\n\
    \   IMPORTS\n        MODULE-IDENTITY, OBJECT-TYPE,\n        transmission     \
    \                 FROM SNMPv2-SMI\n        MODULE-COMPLIANCE, OBJECT-GROUP   FROM\
    \ SNMPv2-CONF\n        DisplayString, RowStatus,\n        TestAndIncr        \
    \               FROM SNMPv2-TC\n        ifIndex, InterfaceIndex           FROM\
    \ IF-MIB;\n   --  This is the MIB module for the DS0Bundle Interface\n   --  objects.\n\
    \   ds0Bundle MODULE-IDENTITY\n       LAST-UPDATED \"9807161630Z\"\n       ORGANIZATION\
    \ \"IETF Trunk MIB Working Group\"\n       CONTACT-INFO\n         \"        David\
    \ Fowler\n          Postal: Newbridge Networks Corporation\n                 \
    \ 600 March Road\n                  Kanata, Ontario, Canada K2K 2E6\n        \
    \          Tel: +1 613 591 3600\n                  Fax: +1 613 599 3619\n    \
    \      E-mail: davef@newbridge.com\"\n       DESCRIPTION\n            \"The MIB\
    \ module to describe\n             DS0 Bundle interfaces objects.\"\n       REVISION\
    \ \"9805242010Z\"\n       DESCRIPTION\n            \"Initial version of the DS0BUNDLE-MIB.\"\
    \n       ::= { transmission 82 }\n   --\n   -- The DS0 Bundle Config Group\n \
    \  --\n   -- Implementation of this group is mandatory for all\n   -- systems\
    \ that use a DS0Bundle Interface.\n   --\n   -- The DS0 Bundle Config Group consists\
    \ of one table:\n   --    DS0 Bundle Table\n   --  The DS0 Bundle Table\n   dsx0BundleNextIndex\
    \ OBJECT-TYPE\n       SYNTAX  TestAndIncr\n       MAX-ACCESS  read-write\n   \
    \    STATUS  current\n       DESCRIPTION\n               \"This object is used\
    \ to assist the manager in\n               selecting a value for dsx0BundleIndex.\
    \  Because\n               this object is of syntax TestAndIncr (see the\n   \
    \            SNMPv2-TC document, RFC 1903) it can also be used\n             \
    \  to avoid race conditions with multiple managers\n               trying to create\
    \ rows in the table.\n               If the result of the SET for dsx0BundleNextIndex\n\
    \               is not success, this means the value has been\n              \
    \ changed from index (i.e. another manager used the\n               value), so\
    \ a new value is required.\n               The algorithm is:\n               done\
    \ = false\n               while done == false\n                   index = GET\
    \ (dsx0BundleNextIndex.0)\n                   SET (dsx0BundleNextIndex.0=index)\n\
    \                   if (set failed)\n                     done = false\n     \
    \              else\n                     SET(dsx0BundleRowStatus.index=createAndGo)\n\
    \                     if (set failed)\n                       done = false\n \
    \                    else\n                       done = true\n              \
    \         other error handling\"\n       ::= { ds0Bundle 2 }\n   dsx0BundleTable\
    \ OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dsx0BundleEntry\n       MAX-ACCESS \
    \ not-accessible\n       STATUS  current\n       DESCRIPTION\n               \"\
    There is an row in this table for each ds0Bundle\n               in the system.\
    \  This table can be used to\n               (indirectly) create rows in the ifTable\
    \ with\n               ifType = 'ds0Bundle(82)'.\"\n       ::= { ds0Bundle 3 }\n\
    \   dsx0BundleEntry OBJECT-TYPE\n       SYNTAX  Dsx0BundleEntry\n       MAX-ACCESS\
    \  not-accessible\n       STATUS  current\n       DESCRIPTION\n              \
    \ \"There is a row in entry in this table for each\n               ds0Bundle interface.\"\
    \n       INDEX   { dsx0BundleIndex }\n       ::= { dsx0BundleTable 1 }\n   Dsx0BundleEntry\
    \ ::=\n       SEQUENCE {\n           dsx0BundleIndex              INTEGER,\n \
    \          dsx0BundleIfIndex            InterfaceIndex,\n           dsx0BundleCircuitIdentifier\
    \  DisplayString,\n           dsx0BundleRowStatus          RowStatus\n   }\n \
    \  dsx0BundleIndex OBJECT-TYPE\n       SYNTAX  INTEGER (0..2147483647)\n     \
    \  MAX-ACCESS  not-accessible\n       STATUS  current\n       DESCRIPTION\n  \
    \             \"A unique identifier for a ds0Bundle.  This is not\n          \
    \     the same value as ifIndex.  This table is not\n               indexed by\
    \ ifIndex because the manager has to\n               choose the index in a createable\
    \ row and the agent\n               must be allowed to select ifIndex values.\"\
    \n       ::= { dsx0BundleEntry 1 }\n   dsx0BundleIfIndex OBJECT-TYPE\n       SYNTAX\
    \  InterfaceIndex\n       MAX-ACCESS  read-only\n       STATUS  current\n    \
    \   DESCRIPTION\n               \"The ifIndex value the agent selected for the\n\
    \               (new) ds0Bundle interface.\"\n       ::= { dsx0BundleEntry 2 }\n\
    \   dsx0BundleCircuitIdentifier OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE\
    \ (0..255))\n        MAX-ACCESS  read-create\n        STATUS  current\n      \
    \  DESCRIPTION\n               \"This variable contains the transmission vendor's\n\
    \               circuit identifier, for the purpose of\n               facilitating\
    \ troubleshooting.\"\n        ::= { dsx0BundleEntry 3 }\n   dsx0BundleRowStatus\
    \ OBJECT-TYPE\n       SYNTAX  RowStatus\n       MAX-ACCESS  read-create\n    \
    \   STATUS  current\n       DESCRIPTION\n               \"This object is used\
    \ to create and delete rows in\n               this table.\"\n       ::= { dsx0BundleEntry\
    \ 4 }\n   -- The DS0 Bonding Group\n   -- Implementation of this group is optional\
    \ for all\n   -- systems that use a DS0Bundle Interface.\n   -- The DS0 Bonding\
    \ Group consists of one table:\n   --    DS0 Bonding Table\n   -- The DS0 Bonding\
    \ Table\n   dsx0BondingTable OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dsx0BondingEntry\n\
    \       MAX-ACCESS  not-accessible\n       STATUS  current\n       DESCRIPTION\n\
    \               \"The DS0 Bonding table.\"\n       ::= { ds0Bundle 1 }\n   dsx0BondingEntry\
    \ OBJECT-TYPE\n       SYNTAX  Dsx0BondingEntry\n       MAX-ACCESS  not-accessible\n\
    \       STATUS  current\n       DESCRIPTION\n               \"An entry in the\
    \ DS0 Bonding table.  There is a\n               row in this table for each DS0Bundle\
    \ interface.\"\n       INDEX   { ifIndex }\n       ::= { dsx0BondingTable 1 }\n\
    \   Dsx0BondingEntry ::=\n       SEQUENCE {\n           dsx0BondMode         \
    \   INTEGER,\n           dsx0BondStatus          INTEGER,\n           dsx0BondRowStatus\
    \       RowStatus\n   }\n   dsx0BondMode OBJECT-TYPE\n       SYNTAX  INTEGER {\n\
    \                   none(1),\n                   other(2),\n                 \
    \  mode0(3),\n                   mode1(4),\n                   mode2(5),\n   \
    \                mode3(6)\n       }\n       MAX-ACCESS  read-create\n       STATUS\
    \  current\n       DESCRIPTION\n               \"This object indicates which BONDing\
    \ mode is used,\n               if any, for a ds0Bundle.  Mode0 provides parameter\n\
    \               and number exchange with no synchronization.  Mode\n         \
    \      1 provides parameter and number exchange.  Mode 1\n               also\
    \ provides synchronization during\n               initialization but does not\
    \ include inband\n               monitoring.  Mode 2 provides all of the above\
    \ plus\n               inband monitoring.  Mode 2 also steals 1/64th of\n    \
    \           the bandwidth of each channel (thus not supporting\n             \
    \  n x 56/64 kbit/s data channels for most values of\n               n). Mode\
    \ 3 provides all of the above, but also\n               provides n x 56/64 kbit/s\
    \ data channels.  Most\n               common implementations of Mode 3 add an\
    \ extra\n               channel to support the inband monitoring overhead.\n \
    \              ModeNone should be used when the interface is not\n           \
    \    performing bandwidth-on-demand.\"\n       ::= { dsx0BondingEntry 1 }\n  \
    \ dsx0BondStatus OBJECT-TYPE\n       SYNTAX  INTEGER {\n                   idle(1),\n\
    \                   callSetup(2),\n                   dataTransfer(3)\n      \
    \ }\n       MAX-ACCESS  read-only\n       STATUS  current\n       DESCRIPTION\n\
    \               \"This object indicates the current status of the\n          \
    \     bonding call using this ds0Bundle. idle(1) should\n               be used\
    \ when the bonding mode is set to none(1).\"\n       ::= { dsx0BondingEntry 2\
    \ }\n   dsx0BondRowStatus OBJECT-TYPE\n       SYNTAX  RowStatus\n       MAX-ACCESS\
    \  read-create\n       STATUS  current\n       DESCRIPTION\n               \"\
    This object is used to create new rows in this\n               table, modify existing\
    \ rows, and to delete\n               existing rows.\"\n       ::= { dsx0BondingEntry\
    \ 3 }\n   -- conformance information\n   ds0BundleConformance OBJECT IDENTIFIER\
    \ ::= { ds0Bundle 4 }\n   ds0BundleGroups      OBJECT IDENTIFIER\n       ::= {\
    \ ds0BundleConformance 1 }\n   ds0BundleCompliances OBJECT IDENTIFIER\n      \
    \ ::= { ds0BundleConformance 2 }\n   -- compliance statements\n   ds0BundleCompliance\
    \ MODULE-COMPLIANCE\n       STATUS  current\n       DESCRIPTION\n            \
    \   \"The compliance statement for DS0Bundle\n               interfaces.\"\n \
    \      MODULE  -- this module\n           MANDATORY-GROUPS {ds0BundleConfigGroup\
    \ }\n           GROUP       ds0BondingGroup\n           DESCRIPTION\n        \
    \       \"Implementation of this group is optional for all\n               systems\
    \ that attach to a DS0Bundle Interface.\"\n           OBJECT      dsx0BundleRowStatus\n\
    \           SYNTAX      INTEGER {\n                           active(1),\n   \
    \                        createAndGo(4),\n                           destroy(6)\n\
    \                       }\n           MIN-ACCESS  read-only\n           DESCRIPTION\n\
    \               \"The agent is not required to support a SET\n               operation\
    \ to this object, and only three of the\n               six enumerated values\
    \ for the RowStatus textual\n               convention need be supported.  Only\
    \ supporting\n               createAndGo for a creation process prevents the\n\
    \               manager from creating an inactive row in the\n               ds0BundleTable.\
    \  Inactive rows in the\n               ds0BundleTable do not make sense.\"\n\
    \           OBJECT      dsx0BundleCircuitIdentifier\n           MIN-ACCESS  read-only\n\
    \           DESCRIPTION\n               \"The agent is not required to support\
    \ a SET\n               operation to this object.\"\n                   ::= {\
    \ ds0BundleCompliances 1 }\n               -- units of conformance\n         \
    \      ds0BondingGroup  OBJECT-GROUP\n                   OBJECTS { dsx0BondMode,\n\
    \                             dsx0BondStatus,\n                             dsx0BondRowStatus\
    \ }\n                   STATUS  current\n                   DESCRIPTION\n    \
    \                       \"A collection of objects providing\n                \
    \           configuration information applicable\n                           to\
    \ all DS0 interfaces.\"\n       ::= { ds0BundleGroups 1 }\n   ds0BundleConfigGroup\
    \  OBJECT-GROUP\n       OBJECTS { dsx0BundleNextIndex,\n                 dsx0BundleIfIndex,\n\
    \                 dsx0BundleCircuitIdentifier,\n                 dsx0BundleRowStatus\
    \ }\n       STATUS  current\n       DESCRIPTION\n               \"A collection\
    \ of objects providing the ability to\n               create a new ds0Bundle in\
    \ the ifTable as well as\n               configuration information about the ds0Bundle.\"\
    \n       ::= { ds0BundleGroups 2 }\n   END\n"
- title: 6.  Intellectual Property
  contents:
  - "6.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document was produced by the Trunk MIB Working Group.\n"
- title: 8.  References
  contents:
  - "8.  References\n   [1]  Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2271, January 1998.\n\
    \   [2]  Rose, M., and K. McCloghrie, \"Structure and Identification of\n    \
    \    Management Information for TCP/IP-based Internets\", STD 16, RFC\n      \
    \  1155, May 1990.\n   [3]  Rose, M., and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n   [4]  Rose, M., \"A Convention for\
    \ Defining Traps for use with the\n        SNMP\", RFC 1215, March 1991.\n   [5]\
    \  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n        \"Structure\
    \ of Management Information for Version 2 of the Simple\n        Network Management\
    \ Protocol (SNMPv2)\", RFC 1902, January 1996.\n   [6]  Case, J., McCloghrie,\
    \ K., Rose, M., and S. Waldbusser, \"Textual\n        Conventions for Version\
    \ 2 of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1903, January\
    \ 1996.\n   [7]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n    \
    \    \"Conformance Statements for Version 2 of the Simple Network\n        Management\
    \ Protocol (SNMPv2)\", RFC 1904, January 1996.\n   [8]  Case, J., Fedor, M., Schoffstall,\
    \ M., and J. Davin, \"Simple\n        Network Management Protocol\", STD 15, RFC\
    \ 1157, May 1990.\n   [9]  Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n\
    \        \"Introduction to Community-based SNMPv2\", RFC 1901, January\n     \
    \   1996.\n   [10] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\n  \
    \      \"Transport Mappings for Version 2 of the Simple Network\n        Management\
    \ Protocol (SNMPv2)\", RFC 1906, January 1996.\n   [11] Case, J., Harrington D.,\
    \ Presuhn R., and B. Wijnen, \"Message\n        Processing and Dispatching for\
    \ the Simple Network Management\n        Protocol (SNMP)\", RFC 2272, January\
    \ 1998.\n   [12] Blumenthal, U., and B. Wijnen, \"User-based Security Model (USM)\n\
    \        for version 3 of the Simple Network Management Protocol\n        (SNMPv3)\"\
    , RFC 2274, January 1998.\n   [13] Case, J., McCloghrie, K., Rose, M., and S.\
    \ Waldbusser, \"Protocol\n        Operations for Version 2 of the Simple Network\
    \ Management\n        Protocol (SNMPv2)\", RFC 1905, January 1996.\n   [14] Levi,\
    \ D., Meyer, P., and B. Stewart, \"SNMPv3 Applications\", RFC\n        2273, January\
    \ 1998.\n   [15] Wijnen, B., Presuhn, R., and K. McCloghrie, \"View-based Access\n\
    \        Control Model (VACM) for the Simple Network Management Protocol\n   \
    \     (SNMP)\", RFC 2275, January 1998.\n   [16] McCloghrie, K. and F. Kastenholz,\
    \ \"The Interfaces Group MIB\n        using SMIv2\", RFC 2233, November 1997.\n\
    \   [17] Fowler D., \"Definitions of Managed Objects for the DS1, E1, DS2,\n \
    \       and E2 Interface Types\", RFC 2495, January 1999.\n   [18] Fowler, D.,\
    \ \"Definitions of Managed Objects for the DS3/E3\n        Interface Types\",\
    \ RFC 2496, January 1999.\n   [19] Brown, T., and K. Tesink, \"Definitions of\
    \ Managed Objects for\n        the SONET/SDH Interface Type\", Work in Progress.\n\
    \   [20] Sharp, H. (Editor), \"Interoperability Requirements for Nx56/64\n   \
    \     kbit/s Calls\", BONDING Spec Version 1.0, BONDING Consortium,\n        Sept\
    \ 1992.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   SNMPv1 by itself is such an insecure environment.\
    \  Even if the\n   network itself is secure (for example by using IPSec), even\
    \ then,\n   there is no control as to who on the secure network is allowed to\n\
    \   access and GET (read) the objects in this MIB.\n   It is recommended that\
    \ the implementors consider the security\n   features as provided by the SNMPv3\
    \ framework.  Specifically, the use\n   of the User-based Security Model RFC 2274\
    \ [12] and the View-based\n   Access Control Model RFC 2275 [15] is recommended.\n\
    \   It is then a customer/user responsibility to ensure that the SNMP\n   entity\
    \ giving access to an instance of this MIB, is properly\n   configured to give\
    \ access to those objects only to those principals\n   (users) that have legitimate\
    \ rights to access them.\n   Setting the following objects to an inappropriate\
    \ value can cause\n   loss of traffic.  In the case of dsx0RobbedBitSignalling,\
    \ for\n   example, the nature of the traffic flowing on the DS0 can be\n   affected.\n\
    \      dsx0RobbedBitSignalling\n      dsx0IdleCode\n      dsx0SeizedCode\n   \
    \   dsx0TransmitCodesEnable\n      dsx0BundleRowStatus\n      dsx0BondMode\n \
    \     dsx0BondRowStatus\n   Setting the following objects is mischievous, but\
    \ not harmful to\n   traffic.\n      dsx0CircuitIdentifier\n      dsx0BundleNextIndex\n"
- title: 10.  Author's Address
  contents:
  - "10.  Author's Address\n   David Fowler\n   Newbridge Networks\n   600 March Road\n\
    \   Kanata, Ontario, Canada K2K 2E6\n   Phone: (613) 599-3600, ext 6559\n   EMail:\
    \ davef@newbridge.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
