- title: __initial_text__
  contents:
  - '                 Referral Whois (RWhois) Protocol V1.5

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes Version 1.5 of the client/server interaction\
    \ of\n   RWhois.  RWhois provides a distributed system for the discovery,\n  \
    \ retrieval, and maintenance of directory information. This system is\n   primarily\
    \ hierarchical by design. It allows for the deterministic\n   routing of a query\
    \ based on hierarchical tags, referring the user\n   closer to the maintainer\
    \ of the information. While RWhois can be\n   considered a generic directory services\
    \ protocol, it distinguishes\n   itself from other protocols by providing an integrated,\
    \ hierarchical\n   architecture and query routing mechanism.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Early in the development of the ARPANET, the SRI-NIC established\
    \ a\n   centralized Whois database that provided host and network information\n\
    \   about the systems connected to the network and the electronic mail\n   (email)\
    \ addresses of the users on those systems [RFC 954]. The\n   ARPANET experiment\
    \ evolved into a global network, the Internet, with\n   countless people and hundreds\
    \ of thousands of end systems. The sheer\n   size and effort needed to maintain\
    \ a centralized database\n   necessitates an alternate, decentralized approach\
    \ to storing and\n   retrieving this information.\n   The original Whois function\
    \ was to be a central directory of\n   resources and people on ARPANET. However,\
    \ it could not adequately\n   meet the needs of the expanded Internet. RWhois\
    \ extends and enhances\n   the Whois concept in a hierarchical and scaleable fashion.\
    \ In\n   accordance with this, RWhois focuses primarily on the distribution of\n\
    \   \"network objects\", or the data representing Internet resources or\n   people,\
    \ and uses the inherently hierarchical nature of these network\n   objects (domain\
    \ names, Internet Protocol (IP) networks, email\n   addresses) to more accurately\
    \ discover the requested information.\n   RWhois synthesizes concepts from other,\
    \ established Internet\n   protocols. The RWhois protocol and architecture derive\
    \ a great deal\n   of structure from the Domain Name System (DNS) [RFC 1034] and\
    \ borrow\n   directory service concepts from other directory service efforts,\n\
    \   primarily [X.500]. The protocol is also influenced by earlier\n   established\
    \ Internet protocols, such as the Simple Mail Transport\n   Protocol (SMTP) [RFC\
    \ 821].\n   This RWhois specification defines both a directory access protocol\n\
    \   and a directory architecture. The directory access protocol\n   specifically\
    \ describes the syntax of the client/server interaction.\n   It describes how\
    \ an RWhois client can search for data on an RWhois\n   server, or how the client\
    \ can modify data on the server. It also\n   describes how the server is to interpret\
    \ input from the client, and\n   how the client should interpret the results returned\
    \ by the server.\n   The architecture portion of this document describes the conceptual\n\
    \   framework behind the RWhois protocol. It details the concepts upon\n   which\
    \ the protocol is based and describes its structural elements.\n   The protocol\
    \ implements the architecture.\n   This document uses language like SHOULD and\
    \ SHALL that have special\n   meaning as specified in \"Key words for use in RFCs\
    \ to Indicate\n   Requirement Levels\". [RFC2119]\n"
- title: 2. Architecture
  contents:
  - '2. Architecture

    '
- title: 2.1 Overview
  contents:
  - "2.1 Overview\n   As a directory service, RWhois is a distributed database, where\
    \ data\n   is split across multiple servers to keep database sizes manageable.\n\
    \   The architecture portion of this document details the concepts upon\n   which\
    \ the protocol is based and describes its structural elements.\n   Specifically,\
    \ the architecture is concerned with how the data is\n   split across the different\
    \ servers. The basis of this splitting is\n   the lexically hierarchical label\
    \ (or tag), which is a text string\n   whose position in a hierarchy can be determined\
    \ from the structure of\n   the string itself.\n   All data can follow some sort\
    \ of hierarchy, even if the hierarchy\n   seems somewhat arbitrary. For example,\
    \ person names can be arranged\n   into hierarchical groups via geography. If\
    \ all the people in\n   particular towns are grouped into town groups, then all\
    \ of the town\n   groups can be grouped into state (or province) groups, and then\
    \ all\n   of the state groups can be grouped into a country group. Then, a\n \
    \  particular name would belong in a town group, a state group, and a\n   country\
    \ group. However, just given a name, it would be impossible to\n   determine where\
    \ in the hierarchy it belongs.  Therefore, a person\n   name is not lexically\
    \ hierarchical.\n   However, there are certain types of data whose position in\
    \ the\n   hierarchy can be determined by deciphering the data itself, for\n  \
    \ example, phone numbers. A phone number is grouped according to\n   country code,\
    \ area code, local exchange, and local extension. By\n   looking at a phone number,\
    \ it is possible to determine to which of\n   all these groups the number belongs:\
    \  1-303-555-2367 is in country\n   code 1, area code 303, local exchange 555,\
    \ and has a local extension\n   of 2367. Therefore, a phone number is lexically\
    \ hierarchical.\n   On the Internet, two such types of data are widely used: domain\
    \ names\n   and IP networks. Domain names are organized via a label-dot system,\n\
    \   reading from a more specific label to a more general label left to\n   right;\
    \ for example, war.west.netsol.com is a part of west.netsol.com,\n   which is\
    \ a part of netsol.com, which is a part of com. IP networks\n   are also lexically\
    \ hierarchical labels using the Classless Inter-\n   Domain Routing (CIDR) notation,\
    \ but their hierarchy is not easily\n   determined with simple text manipulation;\
    \ for example, 198.41.0.0/22\n   is a part of 198.41.0.0/16, which is a part of\
    \ 198.40.0.0/15.\n   Instead, an IP network's hierarchy is determined by converting\
    \ the\n   network to binary notation and applying successively shorter bit\n \
    \  masks.\n   It is important to note that, while very little real data is\n \
    \  lexically hierarchical in nature, people often create label systems\n   (or\
    \ namespaces) to help manage the data and provide an element of\n   uniqueness,\
    \ for example, Social Security Numbers, ISBNs, or the Dewey\n   Decimal System.\
    \ RWhois leverages lexically hierarchical labels,\n   domain names and IP networks,\
    \ for its data splitting using the\n   concepts of authority areas and referrals.\
    \ An authority area is\n   associated with an RWhois server and a lexically hierarchical\
    \ label,\n   which is considered to be its name. An authority area is a piece\
    \ of\n   the distributed database that speaks with authority about its\n   assigned\
    \ part of the hierarchy. All data associated with a particular\n   lexically hierarchical\
    \ tag should be located within that authority\n   area's database. Authority areas\
    \ are further explained in Section\n   2.4.\n   RWhois directs clients toward\
    \ the appropriate authority area by\n   generating referrals. Referrals are pointers\
    \ to other servers that\n   are presumed to be closer to the desired data. The\
    \ client uses this\n   referral to contact the next server and ask the same question.\
    \ The\n   next server may respond with data, an error, or another referral (or\n\
    \   referrals). By following this chain of referrals, the client will\n   eventually\
    \ reach the server with the appropriate authority area. In\n   the RWhois architecture,\
    \ referrals are generated by identifying a\n   lexically hierarchical label and\
    \ deciphering the label to determine\n   the next server. Referrals are further\
    \ explained in Section 2.5.\n   When a number of RWhois servers containing authority\
    \ areas are\n   brought on line and informed about each other, they form an RWhois\n\
    \   tree. The tree has a root authority area, which is the group that\n   contains\
    \ all other groups.  The root authority area must keep\n   pointers to the servers\
    \ and authority areas that form the first level\n   of the hierarchy. The authority\
    \ areas in the first level of the\n   hierarchy are then responsible for keeping\
    \ pointers to the authority\n   areas below them and for keeping a pointer to\
    \ the root.\n"
- title: 2.2 Design Philosophy
  contents:
  - "2.2 Design Philosophy\n   The design goals for the RWhois protocol are as follows.\n\
    \      * It should be a directory access protocol. The server should be\n    \
    \    able to access and update the data residing on it.\n      * It should facilitate\
    \ query routing. An unresolved query should\n        be redirected to a server\
    \ that is presumed to be closer to the\n        desired data.\n      * It should\
    \ enable data replication. The server should be able to\n        duplicate its\
    \ data on another server.\n      * The server should be lightweight and delegate\
    \ more functions to\n        the client.\n   The concepts used to achieve these\
    \ design goals are explained in the\n   remaining document.\n"
- title: 2.3 Schema Model
  contents:
  - "2.3 Schema Model\n   As a directory service, RWhois uses various database schema\
    \ to store\n   and represent data. Schema, in this document, has two definitions.\n\
    \   First, it refers to the entire structure of a database, all the\n   tables\
    \ and fields forming a complete database. When schema is used in\n   this context,\
    \ it is called the \"database schema\". Database schema\n   consists of attributes,\
    \ classes, and objects. Schema may also refer\n   to a single piece of the database,\
    \ a single table with fields. When\n   schema is used in this context, it is just\
    \ called \"schema\" or it is\n   preceded by the name of the particular piece:\
    \ contact schema or\n   domain schema, for example. In this usage, schema is equivalent\
    \ to\n   \"class\", defined below.\n   There is no standard database schema in\
    \ the RWhois architecture. Each\n   authority area is presumed to be able to define\
    \ its own local schema.\n   However, an authority area that is part of a larger\
    \ RWhois tree is\n   expected to have some part of its schema pertain to the lexically\n\
    \   hierarchical label upon which the RWhois tree is based. An authority\n   area\
    \ schema may not change throughout much of an RWhois tree.\n"
- title: 2.3.1 Attributes
  contents:
  - "2.3.1 Attributes\n   An attribute is a named field and is the smallest typed\
    \ unit in the\n   database schema. It is equivalent to a relational database's\
    \ field.\n   An attribute is not considered to be data by itself; it is simply\n\
    \   used to give data a type. When a piece of data has been typed by an\n   attribute,\
    \ it is typically referred to as a value and is represented\n   as an attribute-value\
    \ pair. The RWhois syntax for the attribute-value\n   pair is to separate them\
    \ with a colon, for example:\n   First-Name:Bill\n   Attributes have a number\
    \ of properties, some mandated by the RWhois\n   protocol and some that are implementation\
    \ dependent. These properties\n   are usually a reflection of the database system\
    \ used by the server.\n   The following is a list of the protocol-mandated properties\
    \ and their\n   descriptions.\n    Attribute    This is the name of the attribute.\n\
    \    Description  This is a natural language description of the\n            \
    \     attribute.\n    Type         This is a parameter that broadly indicates\
    \ the use\n                 of the attribute to the protocol. There are three\n\
    \                 standard types:  TEXT, ID, and SEE-ALSO. The default is\n  \
    \               TEXT, which indicates that the value is a text string.\n     \
    \            ID indicates that the attribute contains the ID of\n            \
    \     another RWhois object. This type of attribute is used\n                \
    \ for database normalization.  SEE-ALSO indicates that\n                 the attribute\
    \ contains a pointer (a Uniform Resource\n                 Identifier (URI)) to\
    \ some other kind of external data;\n                 for example, a World Wide\
    \ Web page or FTP site.\n    Format       This is an interpretable string that\
    \ describes the\n                 acceptance format of the value. The server (and\n\
    \                 optionally the client) should match the value to the\n     \
    \            format string to determine if the value is acceptable.\n        \
    \         The format of this property is a keyword indicating the\n          \
    \       syntax of the format string, followed by a colon,\n                 followed\
    \ by the format string itself. Currently, the\n                 only keyword recognized\
    \ is \"re\" for POSIX.2 extended\n                 regular expressions.\n    Indexed\
    \      This is a true or false flag indicating that this\n                 attribute\
    \ should be indexed (and therefore able to be\n                 searched).\n \
    \   Required     This is a true or false flag indicating that this\n         \
    \        attribute must have a value in an instance of the\n                 class.\n\
    \    Multi-Line   This is a true or false flag indicating that this\n        \
    \         attribute may have multiple instances in a class, but\n            \
    \     all of the instances are to be considered as multiple\n                \
    \ lines of the same attribute instance. This allows\n                 normal line\
    \ terminators to terminate values.\n    Repeatable   This is a true or false flag\
    \ indicating that there may\n                 be multiple instances of this attribute\
    \ in a class and\n                 each instance is to be interpreted as a separate\n\
    \                 instance (in contrast to Multi-Line). This flag is\n       \
    \          mutually exclusive with Multi-Line: if Multi-Line is\n            \
    \     true, then Repeatable must be false and vice versa.\n    Primary      This\
    \ is a true or false flag that indicates that this\n                 attribute\
    \ is a primary key. If more than one attribute\n                 in a class is\
    \ marked as primary, then these attributes\n                 together form a single\
    \ primary key. The primary key is\n                 intended to be used to force\
    \ uniqueness among class\n                 instances. Therefore, there can be\
    \ only one instance of\n                 a primary key in a database. The Primary\
    \ flag implies\n                 that the attribute is also required.\n    Hierarchical\
    \ This is a true or false flag that indicates that this\n                 attribute\
    \ is lexically hierarchical.\n    Private      This is a true or false flag that\
    \ indicates whether or\n                 not this attribute is private (that is,\
    \ publicly not\n                 viewable).  It defaults to false. If it is true,\
    \ then\n                 only the clients that satisfy the\n                 authentication/encryption\
    \ requirements of a guardian\n                 (described below) are able to view\
    \ the attribute-value\n                 pair.\n"
- title: 2.3.2 Class
  contents:
  - "2.3.2 Class\n   A class is a collection of attributes; it is a structure, not\
    \ data.\n   The concept is equivalent to that of a relational database table.\
    \ It\n   is also equivalent to the second definition of schema, above.\n   A class\
    \ also has some properties that are sometimes referred to as\n   its \"meta\"\
    \ information. These properties are listed below.\n    Version     This is a time/date\
    \ stamp that is used to quickly detect\n                when a class definition\
    \ has been changed.\n    Description This is a natural language description of\
    \ the class.\n"
- title: 2.3.3 Object
  contents:
  - "2.3.3 Object\n   An object is an instance of a class. It is data with a type\
    \ of\n   <class>.\n"
- title: 2.3.4 Base Class
  contents:
  - "2.3.4 Base Class\n   While RWhois does not have or advocate using a specific,\
    \ standardized\n   schema, it does impose a few requirements. It requires that\
    \ all\n   defined classes inherit attributes from a particular base class (or\n\
    \   base schema).  The RWhois specification does not require the actual\n   implementation\
    \ of inheritance. Instead, all classes must include the\n   attributes defined\
    \ in the base class.\n   The base class has the following attributes.\n    Class-Name\
    \    This attribute contains the name of the class to which\n                \
    \  the object belongs. It is the type of the object\n                  itself.\
    \ It is of type TEXT and is required.\n    Auth-Area     This attribute contains\
    \ the name of the authority area\n                  to which the object belongs.\
    \ It, along with Class-\n                  Name, definitively defines the type\
    \ of the object. It\n                  is of type TEXT and is required.\n    ID\
    \            This attribute is a universal identifier for the\n              \
    \    object. It is formed by choosing a string that is\n                  unique\
    \ within an authority area and appending the\n                  authority area\
    \ to it, separating the local string from\n                  the authority area\
    \ name with a period. The only\n                  restrictions on the local string\
    \ are that it must be\n                  unique within the authority area and\
    \ not contain the\n                  period character. This attribute is hierarchical\
    \ in\n                  nature. It is always generated by the server (for\n  \
    \                example, during a register operation). It is of type\n      \
    \            TEXT and is required.\n    Updated       This attribute is a time/date\
    \ stamp that indicates the\n                  time of last modification of the\
    \ object. It is both\n                  informational and a form of record locking.\
    \ It\n                  prevents two clients from modifying the same object at\n\
    \                  the same time. It is of type TEXT and is required.\n    Guardian\
    \      This attribute is a link to a guardian object\n                  (described\
    \ below). Its value is the ID of a guardian\n                  object. It is of\
    \ type ID and is optional. It is\n                  repeatable, since an object\
    \ may have multiple\n                  guardians.\n    Private      This attribute\
    \ is a true or false flag that indicates\n                  whether or not an\
    \ object is private (that is, publicly\n                  not viewable). It defaults\
    \ to false. If it is true,\n                  then only the clients that satisfy\
    \ the\n                  authentication/encryption requirements of one of the\n\
    \                  object's guardians are able to view the object. If the\n  \
    \                object is publicly viewable, then the Private\n             \
    \     attribute property of each of its attributes still\n                  applies.\n\
    \    TTL           This attribute is the \"time-to-live\" of a given\n       \
    \           object. It is included only if an object has a\n                 \
    \ different time-to-live than the default given in the\n                  Start\
    \ of Authority information. Its value is specified\n                  in seconds.\
    \ It is of type TEXT and is optional.\n   The RWhois specification defines two\
    \ standard classes that should be\n   included in all implementations: the referral\
    \ and guardian classes.\n"
- title: 2.3.5 Referral Class
  contents:
  - "2.3.5 Referral Class\n   The referral class is defined to hold referral information\
    \ (typically\n   for link referrals). It consists of attributes defined as part\
    \ of the\n   base class, the protocol-specific attributes described below, and\
    \ any\n   installation-specific attributes.\n    Referred-Auth-Area This attribute\
    \ contains the name of the authority\n                       area to which the\
    \ referral points. It is used as\n                       a search key during the\
    \ query routing. It is of\n                       type TEXT and is required. It\
    \ is repeatable,\n                       since referrals can point to servers\
    \ hosting more\n                       than one authority area.\n    Referral\
    \           This attribute contains the referral itself. It\n                \
    \       is an RWhois URL. It is of type TEXT and is\n                       required.\
    \ It is repeatable, since more than one\n                       server can host\
    \ a Referred-Auth-Area.\n"
- title: 2.3.6 Guardian Class
  contents:
  - "2.3.6 Guardian Class\n   The guardian class is defined to hold security information.\
    \ The\n   fundamental concept behind the guardian class is that an object (or\n\
    \   another structure) is \"guarded\" by containing a pointer to a guardian\n\
    \   object [Guardian]. To modify, delete, or possibly view the guarded\n   object,\
    \ the authentication (or encryption, or both) scheme must be\n   satisfied. Guardians\
    \ are intended to not have rank: if an object is\n   guarded by more than one\
    \ guardian object, satisfying any one of those\n   guardians is sufficient. A\
    \ guardian object that does not have any\n   Guardian attribute linking it to\
    \ other guardians guards itself. That\n   is, the authentication scheme in the\
    \ guardian object itself must be\n   satisfied to modify, delete, or possibly\
    \ view it.\n   Guardian objects are typically linked to actual database objects\
    \ with\n   the Guardian attribute found in the base class. However, a guardian\n\
    \   may also be linked to an entire authority area, in which case the\n   guardian\
    \ becomes implicitly linked to all of the objects contained\n   within the authority\
    \ area.\n   The guardian class consists of the base class, the protocol-specific\n\
    \   attributes described below, and any installation-specific attributes.\n  \
    \  Guard-Scheme This attribute contains a keyword indicating the\n           \
    \      authentication methodology. Its value must be\n                 understood\
    \ by both the client and server, and its value\n                 dictates the\
    \ contents of the Guard-Info attribute. It\n                 is of type TEXT and\
    \ is required.\n    Guard-Info   This attribute contains that data that is used\
    \ by the\n                 Guard-Scheme to verify the authentication. Its actual\n\
    \                 format is dictated by the Guard-Scheme, for example, it\n  \
    \               could contain a password or Pretty Good Privacy (PGP)\n      \
    \           public key id [RFC 1991]. For security reasons, it\n             \
    \    should not be displayed, and its Private attribute\n                 property\
    \ should be set to true. It is of type TEXT and\n                 is required.\n"
- title: 2.4 Authority Areas
  contents:
  - "2.4 Authority Areas\n   The concept of authority areas is pivotal to the RWhois\
    \ architecture.\n   When an RWhois tree is created for a particular lexically\n\
    \   hierarchical namespace, the different pieces of the hierarchy are\n   mapped\
    \ to authority areas. The most important concept behind an\n   authority area\
    \ is the ability for a portion of the RWhois tree to\n   definitively control\
    \ that portion of the hierarchy. This means that\n   an authority area is able\
    \ to state whether or not a hierarchical tag\n   is in the whole RWhois tree.\
    \ It does this either by returning the\n   object containing this tag, returning\
    \ a referral to a sub-authority\n   area, or returning a response indicating that\
    \ no objects were found.\n   This structure enables efficient routing of queries\
    \ based on the\n   hierarchical label to the piece of the hierarchy responsible\
    \ for it.\n   For example, in the domain name namespace as served by RWhois, the\n\
    \   root of the tree would be an authority area named \".\", which would\n   delegate\
    \ a \"us\" sub-authority area, which would delegate \"va\", \"co\",\n   \"md\"\
    , and \"ca\" authority areas, and so forth. When the server with\n   the \"va.us\"\
    \ authority area is asked about \"loudoun.va.us\", it will be\n   able to authoritatively\
    \ state that either no \"loudoun.va.us\" exists\n   or it will provide an object\
    \ for or a referral to \"loudoun.va.us\".\n   Further, if the server is asked\
    \ about \"howard.md.us\", it cannot\n   answer authoritatively, so it must provide\
    \ a referral to its\n   hierarchical parent (\"us\" or the root).\n   This use\
    \ of authority area strongly indicates where data should be\n   stored within\
    \ an RWhois tree. Because RWhois uses a specific query\n   routing model, data\
    \ needs to be placed under the proper authority\n   area. It is certainly possible\
    \ to place a piece of data under the\n   wrong authority area, for example, putting\
    \ an object for\n   \"howard.md.us\" under the \"va.us\" authority area. In such\
    \ cases, the\n   data is considered to be misplaced and unable to be found within\
    \ the\n   RWhois tree. However, while data should be placed under the lowest\n\
    \   (most specific) authority area, it is also possible that it could be\n   placed\
    \ in a higher (least specific) authority area, for example,\n   putting an object\
    \ for \"loudoun.va.us\" under the \"us\" authority. This\n   may be acceptable\
    \ since, in most cases, the data would be able to be\n   found.\n   In addition\
    \ to controlling a part of an RWhois hierarchy, an\n   authority area is considered\
    \ to be autonomous. Each authority area is\n   treated as a separate database\
    \ by the protocol. However, it is\n   recommended that an authority area share\
    \ some core schema with the\n   rest of the RWhois tree for interoperability reasons.\
    \ Each authority\n   area, however, is not bound by the database schema of its\n\
    \   hierarchical parent or by any of its sub-authority areas.\n"
- title: 2.5 Query Routing
  contents:
  - "2.5 Query Routing\n   RWhois is not only a directory access protocol but it can\
    \ also route\n   queries. Routing a query involves redirecting the query to another\n\
    \   server that is presumed to be closer to the desired data. To route a\n   query,\
    \ the server first determines the location of the next server.\n   It then either\
    \ forwards the query to that server and returns the\n   result to the client or\
    \ returns the location of that server to the\n   client. The location of the server\
    \ must contain its host name (or IP\n   address), port number, and authority area.\n\
    \   The location of the server to which a query is routed is called a\n   referral.\
    \  There are two types of referrals: punt and link referrals.\n   A punt referral\
    \ is a pointer to a server that is further up an RWhois\n   tree, and a link referral\
    \ is a pointer to a server that is further\n   down the tree. For example, in\
    \ Figure 1, when the server for the\n   \"va.us\" authority area routes a query\
    \ up to the server for the \"us\"\n   authority area, it generates a punt referral.\
    \ Alternatively, when it\n   routes a query down to the server for the \"loudon.va.us\"\
    \ authority\n   area, it generates a link referral.\n   Query routing depends\
    \ on whether or not the search value in a query\n   is lexically hierarchical.\
    \ If the search value is hierarchical, the\n   server can generate punt or link\
    \ referrals using the association of\n   authority areas with lexically hierarchical\
    \ labels. Otherwise, the\n   server may send the query to a special index server\
    \ that gathers the\n   indexing information for both hierarchical and non-hierarchical\
    \ data\n   from the directory servers and returns referrals to these servers\n\
    \   [CIP]. If the server receives one or more referrals from the index\n   server,\
    \ it should return them to the client.\n   It is important to note that the server\
    \ may route a query whether it\n   could resolve the query or not. Even if a query\
    \ has been resolved\n   locally, the server may also return referrals to the client\
    \ by\n   sending the query to the index server. For example, if the server for\n\
    \   the \"com\" authority area receives the \"domain Org-Name=IBM\" query, it\n\
    \   may return all the domain objects for IBM within the \"com\" authority\n \
    \  area. In addition, it may also return referrals to the server for the\n   \"\
    nl\" authority area if that server contains domain objects for IBM in\n   the\
    \ Netherlands and has fed the corresponding indexing information to\n   the index\
    \ server. This way the client can get back information for\n   both \"ibm.com\"\
    \ and \"ibm.nl\" domains.\n"
- title: 2.5.1 Query Routing Rules
  contents:
  - "2.5.1 Query Routing Rules\n   An RWhois server routes a query based on certain\
    \ rules. The objective\n   is to determine the location of a server to which to\
    \ route the query.\n   A query may contain one or more query terms. The query\
    \ routing rules\n   are applied on each query term until a referral is found.\
    \ The rules\n   are listed below.\n      * Is the search value in the query term\
    \ hierarchical? If not, go\n        to the next query term.\n      * Parse the\
    \ hierarchical portion of the search value. Is it is\n        within one of the\
    \ authority areas? If not, go to the next query\n        term.\n      * Does the\
    \ found authority area have any referral objects\n        (instances of the referral\
    \ class)? If not, return the \"230 No\n        objects found\" error to the client.\n\
    \      * Is the hierarchical portion of the search value within the\n        Referred-Auth-Area\
    \ attribute of one of the referral objects? If\n        it is, return the value\
    \ of the Referral attribute of the found\n        referral object as a link referral\
    \ to the client.\n      * Are the search values of some of the query terms hierarchical\n\
    \        but not within any of the authority areas? If they are, return a\n  \
    \      punt referral to the client.\n      * Are the search values of all the\
    \ query terms non-hierarchical?\n        If they are, send the query to a special\
    \ index server that\n        gathers the indexing information for both hierarchical\
    \ and non-\n        hierarchical data from the directory servers and returns\n\
    \        referrals to these servers. If the server receives one or more\n    \
    \    referrals from the index server, return them to the client.\n   Note that\
    \ there can be more than one referral returned to the client.\n   These referrals\
    \ may point to servers serving different authority\n   areas. The client may follow\
    \ them in any order.\n   The pseudo code for the above rules is:\n   for each\
    \ query term in the query\n    if the search value in the query term is hierarchical\n\
    \     if the search value is within one of the authority areas\n       if the\
    \ search value is within one of the referred authority areas\n        the server\
    \ sends link referral(s)\n       else\n        the server sends a \"230 No objects\
    \ found\" error\n       endif\n     endif\n    endif\n   endfor\n   if the search\
    \ values of some of the query terms are hierarchical but\n     not within any\
    \ of the authority areas\n    the server sends Punt referral(s)\n   endif\n  \
    \ if the search values of all the query terms are non-hierarchical\n    the server\
    \ sends Referral(s) from an index server\n   endif\n"
- title: 2.6 Data Replication
  contents:
  - "2.6 Data Replication\n   An RWhois server can replicate (duplicate) data from\
    \ another RWhois\n   server on a per-authority area basis. Data replication makes\
    \ the\n   RWhois service more reliable. Further, it increases throughput by\n\
    \   distributing queries to more than one server.\n   There can be two types of\
    \ servers serving an authority area: a master\n   server and a slave server. A\
    \ master server is where data is\n   registered for an authority area. It answers\
    \ authoritatively to\n   queries in that authority area. There must be one and\
    \ only one master\n   server for an authority area. A master server is also called\
    \ a\n   primary server.\n   A slave server is where data is replicated from the\
    \ master server for\n   an authority area. It also answers authoritatively to\
    \ queries in that\n   authority area. There may be one or more slave servers for\
    \ an\n   authority area. A slave server is also called a secondary server.\n \
    \  Note that a slave server must not register data for an authority\n   area.\n\
    \   It is recommended that the master and slave servers for an authority\n   area\
    \ be geographically separate. Therefore, network unreachability at\n   one site\
    \ will not completely shut down the RWhois service for that\n   authority area.\n"
- title: 2.6.1 Data to Replicate
  contents:
  - "2.6.1 Data to Replicate\n   In RWhois, data is replicated on a per-authority\
    \ area basis. The\n   smallest type of data a slave server can replicate is an\
    \ attribute of\n   a class.  Therefore, a slave server can replicate data for\
    \ all the\n   classes, some classes, or some attributes of some classes.\n   The\
    \ amount of data a slave server can replicate each time is either\n   all of the\
    \ data or the data that has changed since the last\n   replication. The process\
    \ of replicating all of the data is called\n   complete replication. The process\
    \ of replicating the data that has\n   changed since the last replication is called\
    \ incremental replication.\n"
- title: 2.6.2 Start Of Authority Variables
  contents:
  - "2.6.2 Start Of Authority Variables\n   Each authority area has some administrative\
    \ variables, defined at the\n   master server, to control data replication. These\
    \ variables are\n   called the Start Of Authority (SOA) variables. They are listed\
    \ below.\n    Serial-Number     This is the serial number of the data in an\n\
    \                      authority area. The master server should update\n     \
    \                 this variable whenever the data in the authority\n         \
    \             area is changed. Its value is a time/date stamp.\n    Refresh-Interval\
    \  This is the time interval before a slave server\n                      checks\
    \ for complete replication. Its value is\n                      specified in seconds.\n\
    \    Increment-IntervalThis is the time interval before a slave server\n     \
    \                 checks for incremental replication. Its value is\n         \
    \             specified in seconds.\n    Retry-Interval    This is the time interval\
    \ before a slave server\n                      tries again to connect to a master\
    \ server that\n                      appears to be out-of-service. Its value is\n\
    \                      specified in seconds.\n    Time-To-Live      This is the\
    \ default time to live for the data in\n                      an authority area\
    \ at a slave server. The slave\n                      server should not answer\
    \ authoritatively to\n                      queries for such stale data. Its value\
    \ is\n                      specified in seconds.\n    Admin-Contact     This\
    \ is the email address of an individual or a\n                      role account\
    \ responsible for the data integrity in\n                      an authority area\
    \ at the master server.\n    Tech-Contact      This is the email address of an\
    \ individual or a\n                      role account responsible for the operation\
    \ of the\n                      master server for an authority area.\n    Hostmaster\
    \        This is the email address of an individual or a\n                   \
    \   role account to whom email messages to update the\n                      data\
    \ in an authority area at the master server are\n                      sent.\n\
    \    Primary-Server    This is the location of the master server for an\n    \
    \                  authority area. Its value must contain both the\n         \
    \             host name (or IP address) and port number of the\n             \
    \         master server.\n"
- title: 3. Protocol
  contents:
  - '3. Protocol

    '
- title: 3.1 Overview
  contents:
  - "3.1 Overview\n   The above sections describe the directory service architecture\
    \ based\n   on the RWhois protocol. The remaining sections describe the syntax\
    \ of\n   the protocol; the sequence and syntax of the information exchanged\n\
    \   between a server and a client. There are five types of information\n   that\
    \ may be exchanged during a client/server session: directive,\n   response, query,\
    \ result, and info.\n"
- title: 3.1.1 Directive
  contents:
  - "3.1.1 Directive\n   A directive is a command that a client sends to a server\
    \ to set a\n   control parameter for the session, get the meta-information (class\n\
    \   definitions and SOA information) about an authority area, or get the\n   data\
    \ in an authority area. The first character of a directive must be\n   a \"-\"\
    . The server must support the \"-rwhois\" directive; all other\n   directives\
    \ are optional. The server must indicate in the banner which\n   directives are\
    \ implemented (see Section 3.1.9).\n"
- title: 3.1.2 Response
  contents:
  - "3.1.2 Response\n   A response is the information that a server returns to a client\
    \ for a\n   directive. It is comprised of one or more lines, and the last line\n\
    \   always indicates the success or failure of the directive. The first\n   character\
    \ of each response line must be a \"%\". If a server runs a\n   directive successfully,\
    \ the last response line must be \"%ok\".\n   Otherwise, it must be \"%error <error-code>\
    \ <error-text>\". A line with\n   the string \"%ok\" or \"%error\" in the first\
    \ position must occur only\n   once in a server response and must always be the\
    \ last line. The\n   server may send the \"%info\" response for special messages.\n\
    \   A client must understand the \"%ok\", \"%error\", and \"%info\" responses.\n\
    \   The client must also understand directive specific responses, if it\n   uses\
    \ the related directives to communicate with the server. For\n   example, if the\
    \ client sends the \"-schema\" directive to the server,\n   the client must understand\
    \ the \"%schema\" response.\n"
- title: 3.1.3 Query
  contents:
  - "3.1.3 Query\n   A query is a command that a client sends to a server to access\
    \ the\n   data in an authority area. The first character of a query must not be\n\
    \   a \"-\", since the server checks the first character of each command\n   from\
    \ a client to determine whether it is a directive or a query.\n"
- title: 3.1.4 Result
  contents:
  - "3.1.4 Result\n   A result is the information that a server returns to a client\
    \ for a\n   query.  It can be either the accessed data or referrals to other\n\
    \   servers. It is comprised of one or more lines, and the last line\n   always\
    \ indicates the success or failure of the query. If a server\n   returns either\
    \ data or referrals for a query, the last result line\n   must be \"%ok\". Otherwise,\
    \ it must be \"%error <error-code> <error-\n   text>\".\n"
- title: 3.1.5 Info
  contents:
  - "3.1.5 Info\n   An info message contains miscellaneous information that a server\n\
    \   sends to a client. The server may use it to send special messages,\n   for\
    \ example a \"message of the day\" (MOTD), to the client. The first\n   info line\
    \ must be \"%info on\", and the last info line must be \"%info\n   off\".\n"
- title: 3.1.6 Client/Server Session
  contents:
  - "3.1.6 Client/Server Session\n   A typical RWhois client/server session has the\
    \ following sequence of\n   messages.\n      * The client connects to the server.\n\
    \      * The server returns a banner identifying its protocol versions\n     \
    \   and capabilities.\n      * The client sends one or more directives to the\
    \ server.\n      * The server returns the response to each directive.\n      *\
    \ The client finally sends a query to the server.\n      * The server returns\
    \ the query results.\n      * The server closes the connection, unless the client\
    \ has directed\n        it not to close the connection.\n"
- title: 3.1.7 Examples
  contents:
  - "3.1.7 Examples\n   This section gives some common examples of the client/server\n\
    \   interaction.  The notation in the examples uses a prefix to indicate\n   from\
    \ where the information comes. A \"C\" indicates that the client\n   sends the\
    \ data to the server. An \"S\" indicates that the server sends\n   the data to\
    \ the client. The line is a comment when \"#\" is used. The\n   space after the\
    \ prefix is not part of the data.\n   The following example illustrates a successful\
    \ query.\n   # The client connects to the server.\n   # The server returns a banner\
    \ identifying its protocol versions and\n   # capabilities.\n   S %rwhois V-1.5:00ffff:00\
    \ master.rwhois.net (Network Solutions V-1.5)\n   # The client sends a directive\
    \ to limit the number of search hits\n   # to 20.\n   C -limit 20\n   # The server\
    \ returns a successful response.\n   S %ok\n   # The client sends a query to search\
    \ for rwhois.net domain.\n   C domain rwhois.net\n   # The server returns the\
    \ data for rwhois.net domain.\n   S domain:ID:dom-1.rwhois.net\n   S domain:Auth-Area:rwhois.net\n\
    \   S domain:Class-Name:domain\n   S domain:Updated:19970107201111000\n   S domain:Domain:rwhois.net\n\
    \   S domain:Server;I:hst-1.rwhois.net\n   S domain:Server;I:hst-2.rwhois.net\n\
    \   S\n   S %ok\n   # The server closes the connection.\n   The following example\
    \ illustrates the link and punt referrals.\n   # The client connects to the server.\n\
    \   # The server returns a banner identifying its protocol versions and\n   #\
    \ capabilities.\n   S %rwhois V-1.5:00ffff:00 master.rwhois.net (Network Solutions\
    \ V-1.5)\n   # The client sends a directive to hold the connection until it sends\n\
    \   # a directive to close the connection.\n   C -holdconnect on\n   # The server\
    \ returns a successful response.\n   S %ok\n   # The client sends a query to search\
    \ for a.b.rwhois.net domain.\n   C domain a.b.rwhois.net\n   # The server returns\
    \ a link referral to a server serving the\n   # b.rwhois.net authority area.\n\
    \   S %referral rwhois://master.b.rwhois.net:4321/auth-area=b.rwhois.net\n   S\
    \ %ok\n   # The client sends a query to search for internic.net domain.\n   C\
    \ domain internic.net\n   # The server returns a punt referral to a server serving\
    \ the root\n   # authority area.\n   S %referral rwhois://rs.internic.net:4321/auth-area=.\n\
    \   S %ok\n   # The client sends a directive to close the connection.\n   C -quit\n\
    \   S %ok\n   # The server closes the connection.\n   The following example illustrates\
    \ a query error.\n   # The client connects to the server.\n   # The server returns\
    \ a banner identifying its protocol versions and\n   # capabilities.\n   S %rwhois\
    \ V-1.5:00ffff:00 master.rwhois.net (Network Solutions V-1.5)\n   # The client\
    \ sends a query to search for c.rwhois.net domain.\n   C domain c.rwhois.net\n\
    \   # The server returns an error, since neither data nor referrals for\n   #\
    \ c.rwhois.net domain are found within the rwhois.net authority area.\n   S %error\
    \ 230 No objects found\n   # The server closes the connection.\n"
- title: 3.1.8 Notation
  contents:
  - "3.1.8 Notation\n   The following sections use the Augmented Backus-Naur Form\
    \ (ABNF)\n   notation to describe the syntax of the protocol. For further\n  \
    \ information, see Section 2 of [RFC822]. The notation in the examples\n   uses\
    \ a prefix to indicate from where the information comes. A \"C\"\n   indicates\
    \ that the client sends the data to the server. An \"S\"\n   indicates that the\
    \ server sends the data to the client. The line is a\n   comment when \"#\" is\
    \ used. The space after the prefix is not part of\n   the data.\n"
- title: 3.1.9 General ABNF definitions
  contents:
  - "3.1.9 General ABNF definitions\n   Lexical Tokens\n   alpha = \"a\"..\"z\" /\
    \ \"A\"..\"Z\"\n   digit = \"0\"..\"9\"\n   hex-digit = digit / \"a\"..\"f\" /\
    \ \"A\".. \"F\"\n   id-char = alpha / digit / \"_\" / \"-\"\n   any-char = <ASCII\
    \ 1..255,\n              except LF (linefeed) and CR (carriage return)>\n   dns-char\
    \ = alpha / digit / \"-\"\n   email-char = <see [RFC 822]>\n   space = \" \"\n\
    \   tab = <ASCII TAB (tab)>\n   lf = <ASCII LF (linefeed)>\n   cr = <ASCII CR\
    \ (carriage return)>\n   crlf = cr lf\n   Grammar\n   year = 4digit\n   month\
    \ = 2digit\n   day = 2digit\n   hour = 2digit\n   minute = 2digit\n   second =\
    \ 2digit\n   milli-second = 3digit\n   host-name = dns-char *(dns-char / \".\"\
    )\n   ip-address = 1*3digit \".\" 1*3digit \".\" 1*3digit \".\" 1*3digit\n   email\
    \ = 1*email-char \"@\" host-name\n   authority-area = (dns-char / \".\") *(dns-char\
    \ / \".\" / \"/\")\n   object-id = 1*id-char \".\" authority-area\n   host-port\
    \ = (host-name / ip-address) \":\" 1*5digit\n   class-name = 1*id-char\n   attribute-name\
    \ = 1*id-char\n   attribute-value = 1*any-char\n   time-stamp = year month day\
    \ hour minute second milli-second\n   on-off = \"on\" / \"off\"\n   Note that\
    \ the time-stamp must be in the Greenwich Mean Time (GMT)\n   time zone.  Also\
    \ note that since in the above any-char is 1..255\n   ASCII that the RWhois protocol\
    \ is an 8 bit protocol.\n   Response\n   The general response for every directive\
    \ and query is either \"%ok\" or\n   \"%error\". In addition, a \"%info\" response\
    \ may be sent.\n   response = ok-response crlf / error-response crlf / info-response\n\
    \   ok-response = \"%ok\"\n   error-response = \"%error\" space error-code space\
    \ error-text\n   error-code = 3digit\n   error-text = 1*any-char\n   info-response\
    \ = \"%info\" space \"on\" crlf *(*any-char crlf) \"%info\"\n           space\
    \ \"off\" crlf\n   Banner\n   The server must send a banner to the client when\
    \ the connection is\n   opened.  The banner contains the version(s) of the protocol\
    \ the\n   server supports and a capability ID of encoded bit flags that\n   indicates\
    \ which directives are implemented. If the server supports\n   more than one version\
    \ of the protocol, the lowest-numbered version\n   must be specified first. The\
    \ bits in extra-id are reserved for future\n   use. The end of the banner should\
    \ contain a free-form string\n   indicating the name of the server implementation.\
    \ A server must\n   support at least one version of the protocol, and may accept\
    \ more\n   versions for compatibility reasons.\n   rwhois-banner = \"%rwhois\"\
    \ space version-list space host-name\n         [space implementation] crlf\n \
    \  version-list = version *(\",\" version)\n   version = version-number [\":\"\
    \ capability-id]\n           / \"V-1.5\" \":\" capability-id\n   version-number\
    \ = \"V-\" 1*digit \".\" 1*digit\n   capability-id = response-id \":\" extra-id\n\
    \   response-id = 6hex-digit\n   extra-id = 2hex-digit\n   implementation = 1*any-char\n\
    \   Protocol\n   The entire RWhois protocol can be defined as a series of directives,\n\
    \   responses, queries, and results.\n   rwhois-protocol = client-sends / server-returns\n\
    \   client-sends = *(directives / rwhois-query)\n   server-returns = *(responses\
    \ / rwhois-query-result)\n"
- title: 3.2 Required Directives
  contents:
  - "3.2 Required Directives\n   The server must implement the following directives.\n"
- title: 3.2.1 rwhois
  contents:
  - "3.2.1 rwhois\n   Description\n   The \"-rwhois\" directive may be issued by the\
    \ client at the start of\n   every session . It tells the server which version\
    \ of the protocol the\n   client can handle. The server must respond with a banner\
    \ containing\n   the protocol version and directives it implements. This banner\
    \ is the\n   same banner that is sent by the server when the connection is opened,\n\
    \   except that the server must indicate only one version number. The\n   banner\
    \ issued when opening a connection may contain more than one\n   version number.\
    \ The directive flags are encoded into three octets,\n   which are described in\
    \ Appendix D.\n   ABNF\n   rwhois-dir = \"-rwhois\" space version-number [space\
    \ implementation]\n                crlf\n   rwhois-response = \"%rwhois\" space\
    \ version space host-name\n           [space implementation] crlf\n   Errors\n\
    \   300 Not compatible with version\n   338 Invalid directive syntax\n   Examples\n\
    \   # When a connection is opened, the server issues the banner.\n   S %rwhois\
    \ V-1.0,V-1.5:00ffff:00 rs.internic.net (NSI Server 1.5.4)\n   # The client sends\
    \ the rwhois directive.\n   C -rwhois V-1.5 NSI Client 1.2.3\n   S %rwhois V-1.5:00ffff:00\
    \ rs.internic.net (NSI Server 1.5.4)\n   S %ok\n"
- title: 3.3 Optional Directives
  contents:
  - "3.3 Optional Directives\n   The server should implement the following directives.\n"
- title: 3.3.1 class
  contents:
  - "3.3.1 class\n   Description\n   The \"-class\" directive can be used by the client\
    \ to get the meta-\n   information for one or more classes in an authority area.\
    \ The\n   response must contain the description and version number of each\n \
    \  specified class and may be expanded in the future with additional\n   attributes.\
    \ When no class name is given, the server must return the\n   meta-information\
    \ for all the classes in the authority area. Every\n   class record must end with\
    \ an empty \"%class\" line.\n   ABNF\n   class-dir = \"-class\" space authority-area\
    \ *(space class-name) crlf\n   class-response = *class-record response\n   class-record\
    \ = *class-line \"%class\" crlf\n   class-line = \"%class\" space class-name \"\
    :\" \"description\" \":\"\n                1*any-char crlf\n      / \"%class\"\
    \ space class-name \":\" \"version\" \":\" time-stamp crlf\n      / \"%class\"\
    \ space class-name \":\" meta-field \":\" meta-value crlf\n   meta-field = 1*id-char\n\
    \   meta-value = 1*any-char\n   The following fields are required.\n    meta-field\
    \   meta-value  Description\n    description  1*any-char  Class description.\n\
    \                           Time/date stamp indicating version of class,\n   \
    \ version      time-stamp  must be updated after class definition is\n       \
    \                      changed.\n   Errors\n   338 Invalid directive syntax\n\
    \   340 Invalid authority area\n   341 Invalid class\n   400 Directive not available\n\
    \   401 Not authorized for directive\n   Examples\n   C -class rwhois.net domain\
    \ host\n   S %class domain:description:Domain information\n   S %class domain:version:19970103101232000\n\
    \   S %class\n   S %class host:description:Host information\n   S %class host:version:19970214213241000\n\
    \   S %class\n   S %ok\n"
- title: 3.3.2 directive
  contents:
  - "3.3.2 directive\n   Description\n   The \"-directive\" directive can be used\
    \ by the client to get\n   information about the directives that the server supports.\
    \ The\n   response must contain the name and description of each specified\n \
    \  directive and may be expanded in the future with additional\n   attributes.\
    \ When no directive name is given, the server must return\n   information about\
    \ all the directives. Every directive record must end\n   with an empty \"%directive\"\
    \ line.\n   ABNF\n   directive-dir = \"-directive\" *(space directive-name) crlf\n\
    \   directive-name = 1*id-char\n   directive-response = *directive-record response\n\
    \   directive-record = \"%directive\" space \"directive\" \":\" directive-name\n\
    \                      crlf *directive-line \"%directive\" crlf\n   directive-line\
    \ = \"%directive\" space \"description\" \":\" 1*any-char crlf\n           / \"\
    %directive\" space attribute-name \":\" attribute-value crlf\n   Errors\n   338\
    \ Invalid directive syntax\n   400 Directive not available\n   401 Not authorized\
    \ for directive\n   Examples\n   Without parameters:\n   C -directive\n   S %directive\
    \ directive:rwhois\n   S %directive description:RWhois directive\n   S %directive\n\
    \   S %directive directive:quit\n   S %directive description:Quit connection\n\
    \   S %directive\n   S %ok\n   With parameters:\n   C -directive quit\n   S %directive\
    \ directive:quit\n   S %directive description:Quit connection\n   S %directive\n\
    \   S %ok\n"
- title: 3.3.3 display
  contents:
  - "3.3.3 display\n   Description\n   By default, the server uses the dump format\
    \ for the output of a query\n   result. The output format can be changed with\
    \ the \"-display\"\n   directive.  When no parameter is given, the server must\
    \ list all the\n   display formats it supports. Every display record must end\
    \ with an\n   empty \"%display\" line.\n   Currently, only the dump format is\
    \ standard and must be supported by\n   the server. Other output formats may be\
    \ added in the future. See\n   Section 3.4 for the definition of the dump format.\n\
    \   ABNF\n   display-dir = \"-display\" crlf\n       / \"-display\" space display-name\
    \ crlf\n   display-name = 1*id-char\n   display-response = *(display-record) response\n\
    \   display-record = \"%display\" space \"name\" \":\" display-name crlf\n   *display-line\
    \ \"%display\" crlf\n   display-line = \"%display\" space attribute-name \":\"\
    \n                  attribute-value crlf\n   Errors\n   338 Invalid directive\
    \ syntax\n   400 Directive not available\n   401 Not authorized for directive\n\
    \   436 Invalid display format\n   Examples\n   # Get the available display formats.\n\
    \   C -display\n   S %display name:dump\n   S %display\n   S %ok\n   # Change\
    \ the active display format.\n   C -display dump\n   S %ok\n"
- title: 3.3.4 forward
  contents:
  - "3.3.4 forward\n   Description\n   The \"-forward\" directive instructs the server\
    \ to follow all the\n   referrals and return the results to the client. This directive\
    \ can be\n   used to run an RWhois server as a proxy server. The default value\n\
    \   must be \"off\". When the value is set to \"on\", the server must not\n  \
    \ return referrals.\n   ABNF\n   forward-dir = \"-forward\" space on-off crlf\n\
    \   forward-response = response\n   Errors\n   338 Invalid directive syntax\n\
    \   400 Directive not available\n   401 Not authorized for directive\n   Examples\n\
    \   C -forward on\n   S %ok\n   C -forward off\n   S %ok\n"
- title: 3.3.5 holdconnect
  contents:
  - "3.3.5 holdconnect\n   Description\n   Normally, the server closes the connection\
    \ after each query. This\n   behavior is controlled by the holdconnect state,\
    \ which can be changed\n   with the \"-holdconnect\" directive. When the holdconnect\
    \ state is set\n   to \"off\", the server must close the connection after a query;\
    \ when it\n   is set to \"on\", the server must not close the connection after\
    \ a\n   query. By default, the holdconnect state must be set to \"off\" for\n\
    \   each connection.\n   ABNF\n   holdconnect-dir = \"-holdconnect\" space on-off\
    \ crlf\n   holdconnect-response = response\n   Errors\n   338 Invalid directive\
    \ syntax\n   400 Directive not available\n   401 Not authorized for directive\n\
    \   Examples\n   C -holdconnect on\n   S %ok\n   C -holdconnect off\n   S %ok\n"
- title: 3.3.6 limit
  contents:
  - "3.3.6 limit\n   Description\n   When returning a query result, the server should\
    \ limit the number of\n   objects returned to the client. The \"-limit\" directive\
    \ changes this\n   limit.  The default and maximum limit is server-dependent.\
    \ The client\n   can get the current limit by using the \"-status\" directive\
    \ (see\n   Section 3.3.13).\n   ABNF\n   limit-dir = \"-limit\" space 1*digit\
    \ crlf\n   limit-response = response\n   Errors\n   331 Invalid limit\n   338\
    \ Invalid directive syntax\n   400 Directive not available\n   401 Not authorized\
    \ for directive\n   Examples\n   C -limit 100\n   S %ok\n"
- title: 3.3.7 notify
  contents:
  - "3.3.7 notify\n   Description\n   The \"-notify\" directive performs several functions.\n\
    \      * If the server returns a referral that results in an error, the\n    \
    \    client can report the bad referral to the server using the\n        \"badref\"\
    \ option.\n      * When the client follows referrals and goes through the same\n\
    \        referral twice, that referral is a recursive referral and causes\n  \
    \      a referral loop. The client can report the recursive referral to\n    \
    \    the server using the \"recurref\" option.\n      * When the data in an authority\
    \ area changes, a master server can\n        use the \"update\" option to notify\
    \ its slave servers to update\n        the data.\n      * The \"inssec\" option\
    \ allows an RWhois server to register itself\n        as a slave server for an\
    \ authority area with a master server.\n        The master server may reject the\
    \ request on the basis of its\n        registration policy.\n      * The \"delsec\"\
    \ option allows a slave server to cancel its\n        registration with the master\
    \ server.\n   ABNF\n   notify-dir = \"-notify\" space \"badref\" space referral-query\
    \ crlf\n           / \"-notify\" space \"recurref\" space referral-query crlf\n\
    \      / \"-notify\" space \"update\" space host-port \":\" authority-area crlf\n\
    \           / \"-notify\" space \"inssec\" space host-port \":\"\n           \
    \  authority-area crlf\n           / \"-notify\" space \"delsec\" space host-port\
    \ \":\"\n             authority-area crlf\n   referral-query = referral-url space\
    \ [class-name space] query\n   notify-response = response\n   See Section 3.4\
    \ for the definitions of referral-url and query.\n   Errors\n   338 Invalid directive\
    \ syntax\n   340 Invalid authority area\n   342 Invalid host/port\n   400 Directive\
    \ not available\n   401 Not authorized for directive\n   Examples\n   # The client\
    \ reports a bad referral to rwhois.foobar.com to the\n   # server.\n   C -notify\
    \ badref rwhois://rwhois.foobar.com:4321/auth-area=foobar.com\n     domain foobar.com\n\
    \   S %ok\n   # The client reports a recursive referral to rwhois.foobar.com to\
    \ the\n   # server.\n   C -notify recurref rwhois://rwhois.foobar.com:4321/auth-area=\n\
    \     foobar.com contact Last-Name=\"Beeblebrox\"\n   S %ok\n   # The master server\
    \ for the foobar.com authority area notifies its\n   # slave servers to update\
    \ the data.\n   C -notify update master.foobar.com:4321:foobar.com\n   S %ok\n\
    \   # The server rwhois2.foobar.com registers as a slave server for the\n   #\
    \ foobar.com authority area.\n   C -notify inssec rwhois2.foobar.com:4321:foobar.com\n\
    \   S %ok\n   # The server rwhois2.foobar.com cancels its registration as a slave\n\
    \   # server for the foobar.com authority area.\n   C -notify delsec rwhois2.foobar.com:4321:foobar.com\n\
    \   S %ok\n"
- title: 3.3.8 quit
  contents:
  - "3.3.8 quit\n   Description\n   The \"-quit\" directive can be used by the client\
    \ to close the\n   connection.  Before the server closes the connection, it must\
    \ respond\n   with \"%ok\".\n   ABNF\n   quit-dir = \"-quit\" crlf\n   quit-response\
    \ = response\n   Errors\n   No errors.\n   Examples\n   C -quit\n   S %ok\n"
- title: 3.3.9 register
  contents:
  - "3.3.9 register\n   Description\n   The \"-register\" directive can be used by\
    \ the client to add, modify,\n   or delete objects in the server's database. The\
    \ client must wait to\n   send the registration data until the \"%ok\" response\
    \ is received from\n   the server.  This directive has the following options.\n\
    \      * The \"add\" option indicates that the object being sent should be\n \
    \       added to the server's database.\n      * The \"mod\" option indicates\
    \ that the object being sent is a\n        modification of an object that already\
    \ resides on the server's\n        database. During a modify operation, the \"\
    _NEW_\" tag is used to\n        delineate the end of the original (unmodified)\
    \ object and the\n        beginning of the replacement object. That is, the identifying\n\
    \        characteristics of the original object are sent first, then the\n   \
    \     \"_NEW_\" separator is sent, and then the entire replacement\n        object\
    \ is sent.\n      The \"del\" option indicates that the object being sent should\
    \ be\n      deleted from the server's database.\n   After a register operation\
    \ (add, modify, or delete an object) in an\n   authority area, the server should\
    \ update the \"Serial-Number\" variable\n   in the SOA information for the authority\
    \ area. This is useful for\n   data replication because a slave server checks\
    \ the \"Serial-Number\"\n   variable to detect a data change at the master server\
    \ (see Section\n   3.6.2).\n   ABNF\n   register-dir = register-on space \"add\"\
    \ space maintainer-id crlf\n                  register-add register-off\n    \
    \       / register-on space \"mod\" space maintainer-id crlf\n             register-mod\
    \ register-off\n           / register-on space \"del\" space maintainer-id crlf\n\
    \             register-del register-off\n   register-on = \"-register\" space\
    \ \"on\"\n   register-off = \"-register\" space \"off\" crlf\n   register-add\
    \ = 1*(register-line crlf)\n   register-mod = 1*(register-line crlf) \"_NEW_\"\
    \ crlf\n                  1*(register-line crlf)\n   register-del = 1*(register-line\
    \ crlf)\n   maintainer-id = email\n   register-line = attribute-name \":\" attribute-value\n\
    \   register-on-response = response\n   register-off-response = \"%register\"\
    \ space \"ID\" \":\" object-id crlf\n                           response\n   \
    \        / \"%register\" space \"Updated\" \":\" time-stamp crlf response\n  \
    \         / response\n      * The server must return the register-on-response\
    \ for the\n        \"-register on\" directive and the register-off-response for\
    \ the\n        \"-register off\" directive.\n      * The maintainer-id identifies,\
    \ for maintenance purposes, the\n        sender of registration information. The\
    \ server should not use it\n        to authenticate the sender.\n      * For the\
    \ \"add\" option, the client must send all the required\n        attributes for\
    \ the object, including the Class-Name and Auth-\n        Area attributes.  However,\
    \ the client must not send the ID and\n        Updated attributes. These attributes\
    \ are assigned by the server\n        and returned in the response.\n      * For\
    \ the \"mod\" option, the client must send the identifying\n        information\
    \ for the object to be modified, followed by the\n        \"_NEW_\" separator\
    \ and the entire replacement object. The\n        identifying information must\
    \ contain the ID and Updated\n        attributes; it may contain other attributes,\
    \ but the server may\n        not check them. The ID, Auth-Area, and Class-Name\
    \ attributes\n        must match in both the original object data and the replacement\n\
    \        object. The original object data is sent before the replacement\n   \
    \     object to enable the server to lock the record in the database.\n      *\
    \ For the \"del\" option, the client must send the identifying\n        information\
    \ for the object to be deleted. The identifying\n        information must contain\
    \ the ID and Updated attributes; it may\n        contain other attributes, but\
    \ the server may not check them.\n   Errors\n   120 Registration deferred\n  \
    \ 320 Invalid attribute\n   321 Invalid attribute syntax\n   322 Required attribute\
    \ missing\n   323 Object reference not found\n   324 Primary key not unique\n\
    \   325 Failed to update outdated object\n   336 Object not found\n   338 Invalid\
    \ directive syntax\n   340 Invalid authority area\n   341 Invalid class\n   400\
    \ Directive not available\n   401 Not authorized for directive\n   Examples\n\
    \   # Add an object.\n   C -register on add joe@netsol.com\n   S %ok\n   C Class-Name:contact\n\
    \   C Auth-Area:a.com\n   C First-Name:Scott\n   C Last-Name:Williamson\n   C\
    \ Name:Williamson, Scott\n   C Email:scottw@a.com\n   C -register off\n   S %register\
    \ ID:23456789.a.com\n   S %register Updated:19961205224403000\n   S %ok\n   #\
    \ Modify an object.\n   C -register on mod joe@netsol.com\n   S %ok\n   C ID:23456789.a.com\n\
    \   C Updated:19961205124403000\n   C _NEW_\n   C Class-Name:contact\n   C Auth-Area:a.com\n\
    \   C ID:23456789.a.com\n   C First-Name:Scott\n   C Last-Name:Williamson\n  \
    \ C Name:Williamson, Scott\n   C Email:sw@a.com\n   C -register off\n   S %ok\n\
    \   # Delete an object.\n   C -register on del joe@netsol.com\n   S %ok\n   C\
    \ ID:23456789.a.com\n   C Updated:19961205224403000\n   C -register off\n   S\
    \ %ok\n"
- title: 3.3.10 schema
  contents:
  - "3.3.10 schema\n   Description\n   The \"-schema\" directive can be used by the\
    \ client to get the\n   attribute definitions of one or more classes in an authority\
    \ area. If\n   the client specifies class names, the server must return the\n\
    \   attribute definitions of the specified classes. Otherwise, the server\n  \
    \ must return the attribute definitions of all the classes in the\n   authority\
    \ area. Every schema record must end with an empty \"%schema\"\n   line.\n   ABNF\n\
    \   schema-dir = \"-schema\" space authority-area *(space class-name) crlf\n \
    \  schema-response = *schema-record response\n   schema-record = *schema-line\
    \ \"%schema\" crlf\n   schema-line = \"%schema\" space class-name \":\" attribute-name\
    \ \":\"\n                 attribute-value crlf\n   Errors\n   338 Invalid directive\
    \ syntax\n   340 Invalid authority area\n   341 Invalid class\n   400 Directive\
    \ not available\n   401 Not authorized for directive\n   Examples\n   C -schema\
    \ map\n   S %schema map:attribute:Class-Name\n   S %schema map:description:Type\
    \ of the object\n   S %schema map:type:TEXT\n   S %schema map:format:re:[a-zA-Z0-9-]+\n\
    \   S %schema map:indexed:OFF\n   S %schema map:required:ON\n   S %schema map:multi-line:OFF\n\
    \   S %schema map:repeatable:OFF\n   S %schema map:primary:OFF\n   S %schema map:hierarchical:OFF\n\
    \   S %schema map:private:OFF\n   S %schema\n   S %schema map:attribute:ID\n \
    \  S %schema map:description:Globally unique object identifier\n   S %schema map:type:TEXT\n\
    \   S %schema map:format:re:[0-9]+.[a-zA-Z0-9.-]+\n   S %schema map:indexed:ON\n\
    \   S %schema map:required:ON\n   S %schema map:multi-line:OFF\n   S %schema map:repeatable:OFF\n\
    \   S %schema map:primary:ON\n   S %schema map:hierarchical:OFF\n   S %schema\
    \ map:private:OFF\n   S %schema\n   # This is an abbreviated example, more attributes\
    \ usually follow.\n   S %ok\n"
- title: 3.3.11 security
  contents:
  - "3.3.11 security\n   Description\n   The \"-security\" directive enables either\
    \ a client request or a server\n   response to be authenticated and/or encrypted.\
    \ Currently, RWhois uses\n   two standard security methods: password and PGP.\
    \ Password provides\n   authentication only, and PGP provides both authentication\
    \ and\n   encryption.  This directive can be used to securely access or update\n\
    \   any information (meta or data) in an authority area that is protected\n  \
    \ by one or more guardian objects.\n   ABNF\n   security-dir = \"-security\" space\
    \ \"on\" space direction space\n           security-method [space security-data]\
    \ crlf\n           security-payload [\"-security\" space \"off\" crlf]\n   direction\
    \ = \"request\" / \"response\"\n   security-method = \"password\" / \"pgp\" /\
    \ 1*id-char\n   security-data = password-data / pgp-data / 1*any-char\n   password-data\
    \ = 1*any-char\n   pgp-data = \"signed\" / \"encrypt\" [space key-id] / \"signed-encrypt\"\
    \n              [space key-id]\n   security-payload = *(*any-char crlf)\n   security-response\
    \ = response\n      * The \"password\" security-method is available in the \"\
    request\"\n        direction only. For password, the security-data is a cleartext\n\
    \        password.\n      * The \"pgp\" security-method is available in both the\
    \ \"request\" and\n        \"response\" directions. For PGP, the security-data\
    \ indicates how\n        to treat the security-payload: signed, encrypted, or\
    \ signed and\n        encrypted. To encrypt the security-payload in the \"response\"\
    \n        direction, the security-data must include the public key ID with\n \
    \       which to encrypt it.\n   Errors\n   338 Invalid directive syntax\n   352\
    \ Invalid security method\n   353 Authentication failed\n   354 Encryption failed\n\
    \   400 Directive not available\n   401 Not authorized for directive\n   Examples\n\
    \   # Authenticate a request using password.\n   C -security on request password\
    \ hello!1\n   S %ok\n   # Authenticate a PGP signed request.\n   C -security on\
    \ request pgp signed\n   S %ok\n   C -register on mod joe@netsol.com\n   S %ok\n\
    \   C -----BEGIN PGP MESSAGE-----\n   C Version: 2.6.2\n   C\n   C owHrZJjKzMpgdP9D9crUhdpBYnwHGRnPbmVhmHlV7Hef9je/n7vyzhmE6589/+Dg\n\
    \   C jPpVm59tNz92vPSmrFB/4ankBRz+xgY+7z9OUYjefGahbWSNwzzxbw6TpWZGerU+\n   C uOUg/Cygs33JBdHqjwEc+wyfZPp+N5p2bu+ywoaOu8eLPyn+m2Mt/T9p1UaG68vP\n\
    \   C Zd2d9EPw+Ywpio7dco6yh3b/v7zmQxJHcWpyaVFmSSUDEHi6WBkZm5iamVtY6iXq\n   C JefnKnCFFqQklqSmWBlaWpoZGhmYGhqZmBgYGxgYKHA55yQWF+v6JeamWiXn55Uk\n\
    \   C JpcocDmWlmToOhalJlpB9cf7uYbHE6kWi/VumUXFJRB9wcn5JUBdPokwgfDMnJzM\n   C xNzi/DwFLjQBHQWoatfcxMwcq+JyB6h5AA==\n\
    \   C =a0sQ\n   C -----END PGP MESSAGE-----\n   C -register off\n   S %ok\n  \
    \ # Encrypt a response using PGP. 52160EC1 is the public key ID with\n   # which\
    \ the response is encrypted.\n   C -security on response pgp encrypt 52160EC1\n\
    \   S %ok\n   C -xfer com class=domain attribute=Domain-Name\n     attribute=Organization-Name\n\
    \   S -----BEGIN PGP MESSAGE-----\n   S Version: 2.6.2\n   S\n   S hIwDqWWhK1IWDsEBBACOXssTzD2CbB7Vjj2cNURScpJc2as2TbUDOQiwkT+8qFgG\n\
    \   S ZyRfktpwNNTawRIcGOk1Kcs84z8a3vvTA/oje9vZexHtzfJwBHFdiIZxPuCEpvgv\n   S 2ppK7WqlmHGcQKVBJJHYw7Fq83CUkeGJB9P1M3CQiXeW8h8MwAuhxSgbgt23PKYA\n\
    \   S AABuhknJrXeh9Owm81+MvyzgLOyM7sjDYmttU9sj/yuOYmAhS9V+34MT/Mwn4wO8\n   S 2BCsJqBHXbwOuYKs02p0se4jyKFtZR8MDPWNm9QyAP+oNMTjsufy6ZRa9PegUC6t\n\
    \   S HDhXymkiP03mKMMVK1//7X0=\n   S =vZ2x\n   S -----END PGP MESSAGE-----\n \
    \  S %ok\n"
- title: 3.3.12 soa
  contents:
  - "3.3.12 soa\n   Description\n   The \"-soa\" directive can be used by the client\
    \ to retrieve the SOA\n   information for one or more authority areas. When no\
    \ authority area\n   name is given, the server must return the SOA information\
    \ for all the\n   authority areas. Every SOA record must end with an empty \"\
    %soa\" line.\n   ABNF\n   soa-dir = \"-soa\" *(space authority-area) crlf\n  \
    \ soa-response = *soa-record response\n   soa-record = *soa-line \"%soa\" crlf\n\
    \   soa-line = \"%soa\" space \"authority\" \":\" authority-area crlf\n      /\
    \ \"%soa\" space \"ttl\" \":\" 1*digit crlf\n      / \"%soa\" space \"serial\"\
    \ \":\" time-stamp crlf\n      / \"%soa\" space \"refresh\" \":\" 1*digit crlf\n\
    \      / \"%soa\" space \"increment\" \":\" 1*digit crlf\n      / \"%soa\" space\
    \ \"retry\" \":\" 1*digit crlf\n      / \"%soa\" space \"tech-contact\" \":\"\
    \ email crlf\n      / \"%soa\" space \"admin-contact\" \":\" email crlf\n    \
    \  / \"%soa\" space \"hostmaster\" \":\" email crlf\n      / \"%soa\" space \"\
    primary\" \":\" host-port crlf\n      / \"%soa\" space attribute-name \":\" attribute-value\
    \ crlf\n   The server must return the following SOA information for an authority\n\
    \   area.\n attribute-name  attribute-value Comments\n authority       authority-area\
    \  This is the name of the authority area.\n ttl             1*digit         This\
    \ is the default time to live for\n                                 the data in\
    \ the authority area.\n serial          time-stamp      This is the serial number\
    \ of the data\n                                 in the authority area; it changes\n\
    \                                 when the data changes.\n refresh         1*digit\
    \         This is the time interval before a\n                               \
    \  slave server checks for complete\n                                 replication.\n\
    \ increment       1*digit         This is the time interval before a\n       \
    \                          slave server checks for incremental\n             \
    \                    replication.\n retry           1*digit         This is the\
    \ time interval before a\n                                 slave server tries\
    \ again to connect\n                                 to a master server that appears\
    \ to be\n                                 out-of-service.\n tech-contact    email\
    \           This is the contact for the operation\n                          \
    \       of the master server.\n admin-contact   email           This is the contact\
    \ for the data\n                                 integrity at the master server.\n\
    \ hostmaster      email           This is the contact for sending update\n   \
    \                              requests at the master server.\n primary      \
    \   host-port       This is the host name (or IP address)\n                  \
    \               and port number of the master server.\n   Errors\n   338 Invalid\
    \ directive syntax\n   340 Invalid authority area\n   400 Directive not available\n\
    \   401 Not authorized for directive\n   Examples\n   C -soa org\n   S %soa authority:org\n\
    \   S %soa ttl:86400\n   S %soa serial:19961119111535000\n   S %soa refresh:3600\n\
    \   S %soa increment:1800\n   S %soa retry:180\n   S %soa tech-contact:tech@internic.net\n\
    \   S %soa admin-contact:admin@internic.net\n   S %soa hostmaster:hostmaster@internic.net\n\
    \   S %soa primary:rs.internic.net:4321\n   S %soa\n   S %ok\n"
- title: 3.3.13 status
  contents:
  - "3.3.13 status\n   Description\n   The \"-status\" directive can be used by the\
    \ client to get various\n   status flags from the server. The response must include\
    \ the number of\n   objects in all the authority areas, the current display format,\
    \ the\n   server contact information, and the status flags for the state-\n  \
    \ oriented directives:  \"-limit\", \"-holdconnect\", and \"-forward\".\n   ABNF\n\
    \   status-dir = \"-status\" crlf\n   status-response = *status-line response\n\
    \   status-line = \"%status\" space \"limit\" \":\" 1*digit crlf\n      / \"%status\"\
    \ space \"holdconnect\" \":\" on-off crlf\n      / \"%status\" space \"forward\"\
    \ \":\" on-off crlf\n      / \"%status\" space \"objects\" \":\" 1*digit crlf\n\
    \      / \"%status\" space \"display\" \":\" 1*any-char crlf\n      / \"%status\"\
    \ space \"contact\" \":\" email crlf\n      / \"%status\" space attribute-name\
    \ \":\" attribute-value crlf\n   Errors\n   338 Invalid directive syntax\n   400\
    \ Directive not available\n   401 Not authorized for directive\n   Examples\n\
    \   C -status\n   S %status limit:20\n   S %status holdconnect:OFF\n   S %status\
    \ forward:OFF\n   S %status objects:12345\n   S %status display:dump\n   S %status\
    \ contact:joe@rwhois.net\n   S %ok\n"
- title: 3.3.14 xfer
  contents:
  - "3.3.14 xfer\n   Description\n   The \"-xfer\" directive can be used by the client\
    \ (generally, a slave\n   server) to transfer the data in an authority area. The\
    \ client can\n   control the amount of data transferred using one of the following\n\
    \   options.\n      * serial-number: The client can transfer all the objects that\
    \ have\n        been added, modified or deleted since a certain time, specifying\n\
    \        the serial-number that indicates that time. This option is used\n   \
    \     for incremental replication.\n      * class: The client can limit the data\
    \ transfer to one or more\n        classes, using the \"class=<class-name>\" option.\
    \ The server must\n        return data for only the specified classes. If no class\
    \ name is\n        specified, the server must return data for all the classes.\n\
    \      * attribute: The client can limit the data transfer to one or more\n  \
    \      attributes of a class, using the \"attribute=<attribute-name>\"\n     \
    \   option in combination with the \"class=<class-name>\" option. The\n      \
    \  server must return data for only the specified attributes of the\n        class.\
    \ The client can specify multiple \"class=\" and \"attribute=\"\n        pairs.\n\
    \   ABNF\n   xfer-dir = \"-xfer\" space authority-area *attribute-def\n      \
    \     [space serial-number] crlf\n   attribute-def = [space \"class=\" class-name]\
    \ *(space \"attribute=\"\n                   attribute-name)\n   serial-number\
    \ = time-stamp\n   xfer-response = *xfer-record response\n   xfer-record = *xfer-line\
    \ \"%xfer\" crlf\n   xfer-line = \"%xfer\" space class-name \":\" attribute-name\
    \ \":\"\n               attribute-value crlf\n   Errors\n   332 Nothing to transfer\n\
    \   333 Not master for authority area\n   338 Invalid directive syntax\n   340\
    \ Invalid authority area\n   341 Invalid class\n   342 Invalid attribute\n   400\
    \ Directive not available\n   401 Not authorized for directive\n   Examples\n\
    \   C -xfer com class=domain attribute=Domain-Name\n     attribute=Organization-Name\n\
    \   S %xfer domain:Domain-Name:acme.com\n   S %xfer domain:Organization-Name:Acme\
    \ Inc.\n   S %xfer\n   S %xfer domain:Domain-Name:vogon.com\n   S %xfer domain:Organization-Name:Vogon\
    \ Heavy Industries\n   S %xfer\n   S %ok\n"
- title: 3.3.15 X
  contents:
  - "3.3.15 X\n   Description\n   The \"-X\" directive is used to specify an additional,\
    \ non-standard\n   directive. It can be implemented by executing an external program,\
    \ by\n   internal functions, or by other means. It may interact with the\n   client\
    \ or simply produce output like one of the standard directives.\n   ABNF\n   x-dir\
    \ = \"-X-\" x-directive [space x-arguments] crlf *x-line\n   x-directive = 1*id-char\n\
    \   x-arguments = *any-char\n   x-response = *(*any-char crlf) response\n   x-line\
    \ = *any-char crlf\n   Errors\n   338 Invalid directive syntax\n   400 Directive\
    \ not available\n   401 Not authorized for directive\n   Examples\n   The following\
    \ example uses an implementation that executes an\n   external program, the UNIX\
    \ \"date\" command. The server runs the \"date\"\n   command and returns its output\
    \ to the client.\n   C -X-date\n   S Mon Jan 6 13:21:20 EST 1997\n   S %ok\n"
- title: 3.4 Query
  contents:
  - "3.4 Query\n   Description\n   The query allows the client to retrieve objects\
    \ from the server's\n   database.  The server must support the following types\
    \ of queries.\n      * Unrestricted query: It is a single word or a quoted string.\
    \ The\n        server must return all the matching objects where one or more\n\
    \        attributes match the query, regardless of the class.\n      * Class-restricted\
    \ query: It is a class name specified in front\n        of the unrestricted query.\
    \ The server must return all the\n        matching objects where one or more attributes\
    \ of the specified\n        class match the query.\n      * Attribute-restricted\
    \ query: It is of the\n        \"<attribute-name>=<search-string>\" form. The\
    \ server must return\n        all the matching objects where the specified attribute\
    \ matches\n        the query.\n   The server may implement the following types\
    \ of queries.\n      * Boolean operator query: It consists of simpler queries\
    \ combined\n        using the \"and\" and \"or\" operators.\n      * Wild card\
    \ query: It consists of an asterisk (\"*\") in the front\n        and/or at the\
    \ end of the search string. The server may support\n        partial matching using\
    \ the asterisk.\n   In response to the query, the server will return the objects\
    \ that\n   match the query. If the server does not support complex queries,\n\
    \   with, for example, wild cards or boolean operators, the server may\n   return\
    \ the \"351 Query too complex\" error. When the number of objects\n   found exceeds\
    \ the limit (set by the \"-limit\" directive), the server\n   should return the\
    \ objects, followed by the \"330 Exceeded maximum\n   objects limit\" error.\n\
    \   The default object output format is the dump format that uses the\n   \"<class-name>:<attribute-name>;<type\
    \ character>:<attribute-value>\"\n   form.  The type character is optional and\
    \ identifies the type of the\n   attribute value. The type character is a shorthand\
    \ for the Type field\n   of the attribute definition (see Section 2.3.1). The\
    \ type characters\n   are defined as follows.\n    Type          Attribute\n \
    \   character     Type\n    T             TEXT\n    I             ID\n    S  \
    \           SEE-ALSO\n   When no type character is given, the client should assume\
    \ the \"T\"\n   type character. The server must provide the type character when\
    \ the\n   attribute type is ID or SEE-ALSO. The purpose of the type character\n\
    \   is to aid the client in displaying the data. For example, when an\n   attribute\
    \ value is an ID, the client may indicate to the end-user\n   that it is possible\
    \ to retrieve the object indicated by the ID.\n   The server may return one or\
    \ more referrals in the \"%referral\n   rwhois://<host-name>:<port-number>/auth-area=<authority\
    \ area>\" form.\n   The client can distinguish multiple referrals by comparing\
    \ their\n   authority areas; if all the referrals refer to the same authority\n\
    \   area, the client should follow only one of them. Otherwise, the\n   client\
    \ should follow all of them. To follow a referral, the client\n   must connect\
    \ to the specified host name and port number, and issue\n   the same query.\n\
    \   ABNF\n   rwhois-query = [class-name space] query crlf\n   query = query-string\
    \ / attribute-query / query bin-boolean query\n   query-char = <any-char, except\
    \ \"\"\", space, tab>\n   quoted-query-char = query-char / space / tab / \"\n\
    \   query-string = [\"*\"] 1*query-char [\"*\"] / \"\"\" [\"*\"]\n           1*quoted-query-char\
    \ [\"*\"] \"\"\"\n   attribute-query = attribute-name \"=\" query-string\n   bin-boolean\
    \ = \"and\" / \"or\"\n   rwhois-query-result = *(query-record / referral-record)\
    \ response\n   query-record = 1*query-line crlf\n   query-line = class-name \"\
    :\" attribute-name [\";\" type-char] \":\"\n           attribute-value crlf\n\
    \   type-char = \"T\" / \"I\" / \"S\"\n   referral-record = 1*(referral-line crlf)\n\
    \   referral-line = \"%referral\" space referral-url\n   referral-url = \"rwhois\"\
    \ \":\" \"//\" host-port \"/\" \"auth-area=\"\n                  authority-area\n\
    \   Errors\n   130 Object not authoritative\n   230 No objects found\n   330 Exceeded\
    \ maximum objects limit\n   340 Invalid authority area\n   341 Invalid class\n\
    \   342 Invalid attribute\n   350 Invalid query syntax\n   351 Query too complex\n\
    \   Examples\n   This example illustrates a query, where no objects are found.\n\
    \   C vogon\n   S %error 230 No objects found\n   This example illustrates a query,\
    \ where two different objects are\n   returned.\n   C ibm\n   S domain:ID:IBMLIFEPRO-DOM.com\n\
    \   S domain:Auth-Area:com\n   S domain:Domain-Name:IBMLIFEPRO.COM\n   S domain:Org-Name:IBM\n\
    \   S domain:Server;I:NS12345-HST.NET\n   S domain:Server;I:NS12345-HST.NET\n\
    \   S domain:Admin-Contact;I:TW1234.COM\n   S domain:Tech-Contact;I:BN123.NET\n\
    \   S domain:Updated:19961120123455000\n   S domain:Updated-By:autoreg@internic.net\n\
    \   S domain:Class-Name:domain\n   S\n   S network:ID:NET-IBMNET-3.0.0.0/0\n \
    \  S network:Auth-Area:0.0.0.0/0\n   S network:Network-Name:IBMNET-3\n   S network:IP-Network:123.45.67.0/24\n\
    \   S network:Org-Name:IBM\n   S network:Street-Address:1234 Maneck Avenue\n \
    \  S network:City:Black Plains\n   S network:State:NY\n   S network:Postal-Code:12345\n\
    \   S network:Country-Code:US\n   S network:Tech-Contact;I:MG305.COM\n   S network:Updated:19931120123455000\n\
    \   S network:Updated-By:joeblo@nic.ddn.mil\n   S network:Class-Name:network\n\
    \   S\n   S %ok\n   This example illustrates a query with a class restrictor,\
    \ where the\n   number of objects found exceeds the limit set by the \"-limit\"\
    \n   directive.\n   C -limit 1\n   S %ok\n   C domain ibm\n   S domain:ID:IBMLIFEPRO-DOM.com\n\
    \   S domain:Auth-Area:com\n   S domain:Domain-Name:IBMLIFEPRO.COM\n   S domain:Org-Name:IBM\n\
    \   S domain:Server;I:NS12345-HST.NET\n   S domain:Server;I:NS12345-HST.NET\n\
    \   S domain:Admin-Contact;I:TW1234.COM\n   S domain:Tech-Contact;I:BN123.NET\n\
    \   S domain:Updated:19961120123455000\n   S domain:Updated-By:erice@internic.net\n\
    \   S domain:Class-Name:domain\n   S\n   S %error 330 Exceeded maximum objects\
    \ limit\n   This is an example of attribute matching.\n   C domain Domain-Name=konabo.com\n\
    \   S domain:ID:12345678.com\n   S domain:Auth-Area:com\n   S domain:Domain-Name:konabo.com\n\
    \   S domain:Org-Name:ACME\n   S domain:Server;I:12345670.com\n   S domain:Server;I:12345671.com\n\
    \   S domain:Admin-Contact;I:12345660.com\n   S domain:Tech-Contact;I:12345665.com\n\
    \   S domain:Updated:19961120123455000\n   S domain:Updated-By:joeblo@internic.net\n\
    \   S domain:Class-Name:domain\n   S\n   S %ok\n   This example illustrates a\
    \ link referral.\n   C domain a.b.rwhois.net\n   # The server returns a link referral\
    \ to a server serving the\n   # b.rwhois.net authority area.\n   S %referral rwhois://master.b.rwhois.net:4321/auth-area=b.rwhois.net\n\
    \   S %ok\n   This example illustrates a punt referral.\n   C domain internic.net\n\
    \   # The server returns a punt referral to a server serving the root\n   # authority\
    \ area.\n   S %referral rwhois://rs.internic.net:4321/auth-area=.\n   S %ok\n\
    \   This example illustrates multiple referrals that refer to the same\n   authority\
    \ area. The client should follow only one of them.\n   C domain a.b.rwhois.net\n\
    \   # The server returns link referrals to two RWhois servers serving the\n  \
    \ # b.rwhois.net authority area.\n   S %referral rwhois://master.b.rwhois.net:4321/auth-area=b.rwhois.net\n\
    \   S %referral rwhois://slave.b.rwhois.net:4321/auth-area=b.rwhois.net\n   S\
    \ %ok\n   This example illustrates multiple referrals that refer to different\n\
    \   authority areas. The client should follow all of them.\n   C contact Last-Name=\"\
    Beeblebrox\"\n   # The server returns a link referral to a server serving the\n\
    \   # b.rwhois.net authority area.\n   S %referral rwhois://master.b.rwhois.net:4321/auth-area=b.rwhois.net\n\
    \   # The server also returns a punt referral to a server serving the\n   # net\
    \ authority area since the query matched an entry in the\n   # non-hierarchical\
    \ index received from it.\n   S %referral rwhois://rs.internic.net:4321/auth-area=net\n\
    \   S %ok\n   This is an example of a boolean operator and wildcard matching.\n\
    \   C ibm and jubliana*\n   S host:ID:JUBLIANA-HST.root\n   S host:Auth-Area:.\n\
    \   S host:Host-Name:JUBLIANA.TRL.IBM.CO.JP\n   S host:IP-Address:123.156.220.68\n\
    \   S host:Org-Name:IBM\n   S host:Street-Address:1234 Maneck Avenue\n   S host:City:Black\
    \ Plains\n   S host:State:NY\n   S host:Postal-Code:12345\n   S host:Country-Code:US\n\
    \   S host:Updated:19961120123455000\n   S host:Updated-By:joeblo@nic.ddn.mil\n\
    \   S host:Class-Name:host\n   S\n   S %ok\n"
- title: 3.5 Connection Model
  contents:
  - "3.5 Connection Model\n   An RWhois client can connect to an RWhois server using\
    \ one of the\n   following transport protocols.\n"
- title: 3.5.1 Transmission Control Protocol (TCP)
  contents:
  - "3.5.1 Transmission Control Protocol (TCP)\n   TCP provides a reliable stream\
    \ transport service between a client and\n   a server. In RWhois, TCP is the default\
    \ transport protocol because,\n   during a particular session, a client can send\
    \ more than one query\n   and a server can reliably return a large amount of data\
    \ for each of\n   those queries. By default, a TCP RWhois server should run on\
    \ the\n   standard, Internet Assigned Number Authority (IANA)-assigned port\n\
    \   4321. However, if port 4321 is not available, it may run on an\n   available\
    \ port in the non-reserved range (1024 - 65535).\n"
- title: 3.5.2 User Datagram Protocol (UDP)
  contents:
  - "3.5.2 User Datagram Protocol (UDP)\n   UDP provides an unreliable connectionless\
    \ transport service between a\n   client and a server. In RWhois, UDP may be used\
    \ as the transport\n   protocol if a client wants to quickly send only one query,\
    \ without\n   incurring the overhead of establishing a TCP connection with a\n\
    \   server. By default, a UDP RWhois server should run on the standard,\n   IANA-assigned\
    \ port 4321. However, if port 4321 is not available, it\n   may run on an available\
    \ port in the non-reserved range (1024 -\n   65535). A separate document will\
    \ describe the use of UDP as the\n   transport protocol in RWhois.\n"
- title: 3.6 Data Replication
  contents:
  - "3.6 Data Replication\n   This section discusses when and how a slave server should\
    \ replicate\n   data.  Further, it describes the server registration and location\n\
    \   mechanisms.\n"
- title: 3.6.1 When to Replicate Data
  contents:
  - "3.6.1 When to Replicate Data\n   The time when a slave server may replicate data\
    \ for an authority area\n   is determined by the SOA variables for that authority\
    \ area. The\n   possible times are the following.\n      * When the \"Refresh-Interval\"\
    \ expires, a slave server may\n        completely replicate data.\n      * When\
    \ the \"Increment-Interval\" expires, a slave server may\n        incrementally\
    \ replicate data.\n      * A slave server fails to connect to its master server\
    \ to\n        replicate data. When the \"Retry-Interval\" expires, it tries\n\
    \        again to replicate data.\n      * When the data in an authority area\
    \ is changed and its \"Serial-\n        Number\" updated, a master server may\
    \ notify its slave servers to\n        immediately update the data. To notify\
    \ about the data change,\n        the master server should send the \"-notify\
    \ update <host-\n        name>:<port-number>:<authority-area>\" directive to its\
    \ slave\n        servers.\n"
- title: 3.6.2 How to Replicate Data
  contents:
  - "3.6.2 How to Replicate Data\n   To replicate data, a slave server sends a series\
    \ of directives to its\n   master server and checks each response before sending\
    \ the next\n   directive.  The following sections describe the protocols for\n\
    \   complete and incremental replication.\n   Complete Replication\n   The protocol\
    \ between a master server and a slave server to completely\n   replicate data\
    \ for an authority area is as follows.\n     1. The slave server should connect\
    \ to the master server. If there\n        is a connection error, the slave server\
    \ should log an error and\n        exit.\n     2. The slave server should send\
    \ the \"-soa <authority-area>\"\n        directive to the master server and parse\
    \ the SOA variables from\n        the response. Let the \"Serial-Number\" variable\
    \ in this response\n        be called the \"old-serial-number\".\n     3. The\
    \ slave server should send the \"-class <authority-area>\"\n        directive\
    \ to the master server and parse the versions of all the\n        classes from\
    \ the response.\n     4. The slave server should send the \"-schema <authority-area>\"\
    \n        directive to the master server and parse the definitions of all\n  \
    \      the classes from the response.\n     5. The slave server should send the\
    \ \"-xfer <authority-area>\"\n        directive to the master server and parse\
    \ the data objects from\n        the response. The master server should return\
    \ all the data\n        objects, excluding the deleted ones, in the authority\
    \ area. The\n        slave server should index these data objects.\n     6. When\
    \ the \"Refresh-Interval\" expires, the slave server should\n        to the master\
    \ server. If there is a connection error, the slave\n        server should try\
    \ again after the \"Retry-Interval\".\n     7. The slave server should send the\
    \ \"-soa <authority-area>\"\n        directive to the master server and parse\
    \ the SOA variables from\n        the response. Let the \"Serial-Number\" variable\
    \ in this response\n        be called the \"new-serial-number\". If the \"new-serial-number\"\
    \ is\n        not greater than the \"old-serial-number\", go back to step 6.\n\
    \        Otherwise, it indicates a data change at the master server.\n     8.\
    \ The slave server should send the \"-class <authority-area>\"\n        directive\
    \ to the master server and parse the versions of all the\n        classes from\
    \ the response. If the version of any of the classes\n        has changed, the\
    \ slave server should send the \"-schema\n        <authority-area>\" directive\
    \ to the master server and parse the\n        definitions of all the classes from\
    \ the response.\n     9. The slave server should send the \"-xfer <authority-area>\"\
    \n        directive the master server and parse the data objects from the\n  \
    \      response. The master server should return all the data objects,\n     \
    \   excluding the deleted ones, in the authority area. The slave\n        server\
    \ should index these data objects and seamlessly replace\n        the old index\
    \ with the new one. Further, it should assign the\n        \"new-serial-number\"\
    \ to the \"old-serial-number\".\n     10. Go back to step 6.\n   Note that the\
    \ \"-class\", \"-schema\", and \"-xfer\" directives change when\n   a slave server\
    \ replicates data for only a subset of the schema for an\n   authority area.\n\
    \   In the following example, a slave server completely replicates data\n   for\
    \ all the classes in an authority area. The notation in the example\n   uses a\
    \ prefix to indicate from where the information is coming. An\n   \"M\" indicates\
    \ that the master server sends the data to the slave\n   server. An \"S\" indicates\
    \ that the slave server sends the data to the\n   master server. The line is a\
    \ comment when \"#\" is used. The space\n   after the prefix is not part of the\
    \ data. The example authority area\n   is \"rwhois.net\".\n   # The slave server\
    \ connects to the master server.\n   M %rwhois V-1.5:00ffff:00 master.rwhois.net\n\
    \   S -soa rwhois.net\n   M ...\n   M %soa serial:19970103102258000\n   M %soa\
    \ refresh:3600\n   M ...\n   S -class rwhois.net\n   # The master server returns\
    \ the versions of all the classes in the\n   # rwhois.net authority area.\n  \
    \ S -schema rwhois.net\n   # The master server returns the definitions of all\
    \ the classes in the\n   # rwhois.net authority area.\n   S -xfer rwhois.net\n\
    \   # The master server returns all the data objects, excluding the\n   # deleted\
    \ ones, in the rwhois.net authority area. The slave server\n   # indexes these\
    \ data objects.\n   # The refresh interval of 3600 seconds expires.\n   S -soa\
    \ rwhois.net\n   M ...\n   M %soa serial:19970103103258000\n   M %soa refresh:3600\n\
    \   M ...\n   # The new serial number 19970103103258000 is greater than the old\n\
    \   # serial number 19970103102258000. It indicates a data change at the\n   #\
    \ master server.\n   S -class rwhois.net\n   # The master server returns the versions\
    \ of all the classes in the\n   # rwhois.net authority area. If the version of\
    \ any of the classes has\n   # changed, the slave server logs an error and closes\
    \ the connection.\n   S -xfer rwhois.net\n   # The master server returns all the\
    \ data objects, excluding the\n   # deleted ones, in the rwhois.net authority\
    \ area. The slave server\n   # indexes these data objects and seamlessly replaces\
    \ the old index.\n   # The refresh interval of 3600 seconds expires.\n   S ...\n\
    \   Incremental Replication\n   The protocol between a master server and a slave\
    \ server to\n   incrementally replicate data for an authority area is as follows.\n\
    \     1. The slave server should connect to the master server. If there\n    \
    \    is a connection error, the slave server should log an error and\n       \
    \ exit.\n     2. The slave server should send the \"-soa <authority-area>\"\n\
    \        directive to the master server and parse the SOA variables from\n   \
    \     the response. Let the \"Serial-Number\" variable in this response\n    \
    \    be called the \"old-serial-number\".\n     3. The slave server should send\
    \ the \"-class <authority-area>\"\n        directive to the master server and\
    \ parse the versions of all the\n        classes from the response.\n     4. The\
    \ slave server should send the \"-schema <authority-area>\"\n        directive\
    \ to the master server and parse the definitions of all\n        the classes from\
    \ the response.\n     5. The slave server should send the \"-xfer <authority-area>\"\
    \n        directive to the master server and parse the data objects from\n   \
    \     the response. The master server should return all the data\n        objects,\
    \ excluding the deleted ones, in the authority area. The\n        slave server\
    \ should index these data objects.\n     6. When the \"Increment-Interval\" expires,\
    \ the slave server should\n        connect to the master server. If there is a\
    \ connection error,\n        the slave server should try again after the \"Retry-Interval\"\
    .\n     7. The slave server should send the \"-soa <authority-area>\"\n      \
    \  directive to the master server and parse the SOA variables from\n        the\
    \ response. Let the \"Serial-Number\" variable in this response\n        be called\
    \ the \"new-serial-number\". If the \"new-serial-number\" is\n        not greater\
    \ than the \"old-serial-number\", go back to step 6.\n        Otherwise, it indicates\
    \ a data change at the master server.\n     8. The slave server should send the\
    \ \"-class <authority-area>\"\n        directive to the master server and parse\
    \ the versions of all the\n        classes from the response. If the version of\
    \ any of the classes\n        has changed, the slave server should send the \"\
    -schema\n        <authority-area>\" directive to the master server and parse the\n\
    \        definitions of all the classes from the response. The slave\n       \
    \ server should then send the \"-xfer <authority-area>\" directive\n        to\
    \ the master server and parse the data objects from the\n        response. The\
    \ master server should return all the data objects,\n        excluding the deleted\
    \ ones, in the authority area. The slave\n        server should index these data\
    \ objects and seamlessly replace\n        the old index with the new one. Further,\
    \ it should assign the\n        \"new-serial-number\" to the \"old-serial-number\"\
    . If the version\n        of any of the classes has changed, go back to step 6.\n\
    \     9. The slave server should send the \"-xfer <authority-area>\n        <old-serial-number>\"\
    \ directive to the master server and parse\n        the data objects from the\
    \ response. The master server should\n        return all the data objects in the\
    \ authority area that have been\n        inserted, updated, or deleted since the\
    \ \"old-serial-number\". The\n        slave server should index all the data again\
    \ after purging stale\n        data objects and seamlessly replace the old index\
    \ with the new\n        one. Further, it should assign the \"new-serial-number\"\
    \ to the\n        \"old-serial-number\".\n     10. Go back to step 6.\n   Note\
    \ that the \"-class\", \"-schema\", and \"-xfer\" directives change when\n   a\
    \ slave server replicates data for only a subset of the schema for an\n   authority\
    \ area.\n   In the following example, a slave server incrementally replicates\n\
    \   data for all the classes in an authority area. The notation in the\n   example\
    \ uses a prefix to indicate from where the information is\n   coming. An \"M\"\
    \ indicates that the master server sends the data to the\n   slave server. An\
    \ \"S\" indicates the slave server sends the data to the\n   master server. The\
    \ line is a comment when \"#\" is used. The space\n   after the prefix is not\
    \ part of the data. The example authority area\n   is \"rwhois.net\".\n   # The\
    \ slave server connects to the master server.\n   M %rwhois V-1.5:00ffff:00 master.rwhois.net\n\
    \   S -soa rwhois.net\n   M ...\n   M %soa serial:19970103102258000\n   M %soa\
    \ increment:1800\n   M ...\n   S -class rwhois.net\n   # The master server returns\
    \ the versions of all the classes in the\n   # rwhois.net authority area.\n  \
    \ S -schema rwhois.net\n   # The master server returns the definitions of all\
    \ the classes in the\n   # rwhois.net authority area.\n   S -xfer rwhois.net\n\
    \   # The master server returns all the data objects, excluding the\n   # deleted\
    \ ones, in the rwhois.net authority area. The slave server\n   # indexes these\
    \ data objects.\n   # The increment interval of 1800 seconds expires.\n   S -soa\
    \ rwhois.net\n   M ...\n   M %soa serial:19970103103258000\n   M %soa increment:1800\n\
    \   M ...\n   # The new serial number 19970103103258000 is greater than the old\n\
    \   # serial number 19970103102258000. It indicates a data change at\n   # the\
    \ master server.\n   S -class rwhois.net\n   # The master server returns the versions\
    \ of all the classes in the\n   # rwhois.net authority area. If the version of\
    \ any of the classes has\n   # changed, the slave server logs an error and closes\
    \ the connection.\n   S -xfer rwhois.net 19970103102258000\n   # The master server\
    \ returns all the data objects in the rwhois.net\n   # authority area that have\
    \ been inserted, updated, or deleted since\n   # 19970103102258000. The slave\
    \ server indexes all the data again\n   # after purging stale data objects and\
    \ seamlessly replaces the old\n   # index. The increment interval of 1800 seconds\
    \ expires.\n   S ...\n"
- title: 3.6.3 Server Registration
  contents:
  - "3.6.3 Server Registration\n   This section discusses how an RWhois server can\
    \ register itself or\n   cancel its registration as a slave server for an authority\
    \ area with\n   a master server.\n   The initial list of slave servers for an\
    \ authority area should be\n   manually configured at the master server. To register\
    \ itself as a\n   slave server, the server should send the \"-notify inssec <host-\n\
    \   name>:<port-number>:<authority-area>\" directive to the master server.\n \
    \  The master server may reject the request on the basis of its\n   registration\
    \ policy. To cancel its registration as a slave server,\n   the server should\
    \ send the \"-notify delsec <host-name>:<port-\n   number>:<authority-area>\"\
    \ directive to the master server. Note that\n   the \"host-name\" and \"port-number\"\
    \ in the above directives correspond\n   to the requesting server.\n"
- title: 3.6.4 Server Location
  contents:
  - "3.6.4 Server Location\n   To resolve a query in a particular authority area,\
    \ an RWhois client\n   may need to first locate the master and slave servers for\
    \ that\n   authority area.  The different server location mechanisms are as\n\
    \   follows.\n   Referrals\n   An RWhois client should know about at least one\
    \ RWhois server. It\n   should send the \"referral <authority-area>\" query to\
    \ that server. The\n   query may be routed up or down the RWhois tree before getting\n\
    \   resolved. If the query does get resolved, the result should be a\n   referral\
    \ object for that authority area. The client should parse the\n   \"Referral\"\
    \ attributes from the result to obtain a list of servers\n   serving that authority\
    \ area.\n   The client should then send the \"-soa <authority-area>\" directive\
    \ to\n   one of the above servers and parse the \"Primary-Server\" variable from\n\
    \   the response. The value of this variable is the master server. Then,\n   the\
    \ remaining servers in the list are the slave servers.\n   SRV RRs\n   The Server\
    \ Resource Record (SRV RR), defined for DNS, can be used to\n   locate the master\
    \ and slave servers for an authority area. An SRV RR\n   specifies the location\
    \ of a network service in an organization's DNS.\n   It is defined in [RFC 2052]\
    \ as follows.\n   Service.Proto.Name TTL Class SRV Priority Weight Port Target\n\
    \   Since an authority area identifier is generally a domain name or an\n   IP\
    \ address, the RWhois SRV RRs can be added to the DNS file for that\n   domain\
    \ or IP address. For example, the RWhois SRV RRs for the\n   \"rwhois.net\" authority\
    \ area could be:\n   rwhois.tcp.rwhois.net. 86400 IN SRV 10 0 4321 master.rwhois.net.\n\
    \                                   SRV 20 0 4322 slave.rwhois.net.\n   where\
    \ the \"master.rwhois.net\" server has a higher priority than the\n   \"slave.rwhois.net\"\
    \ server. The client must try to connect to the\n   server with a higher (lower-numbered)\
    \ priority.\n"
- title: 4. Security Considerations
  contents:
  - "4. Security Considerations\n   RWhois provides security using the guardian class\
    \ (see Section\n   2.3.6). Any information (meta or data) in an authority area\
    \ can be\n   guarded by containing pointers to one or more guardian objects; that\n\
    \   is, it can be securely updated and accessed. Currently, there are two\n  \
    \ standard security methods: password and PGP (see Section 3.3.11).\n   Password\
    \ provides authentication only, and PGP provides both\n   authentication and encryption.\
    \  PGP is the recommended security\n   method in RWhois.\n   The following sections\
    \ discuss how to securely update and access the\n   data in an authority area.\n"
- title: 4.1 Data Update
  contents:
  - "4.1 Data Update\n   This involves the ability to securely add, modify, or delete\
    \ some\n   information (meta or data) in an authority area. An authority area,\n\
    \   on the whole, can be guarded by linking guardians to its SOA and\n   schema\
    \ information. Only these guardians should be allowed to add\n   objects to the\
    \ authority area and modify its SOA and schema\n   information. In addition, they\
    \ can also modify or delete existing\n   objects in the authority area. However,\
    \ the function of modifying or\n   deleting existing objects can be delegated\
    \ to other guardians by\n   linking them to objects on a per-object basis.\n"
- title: 4.2 Access Control
  contents:
  - "4.2 Access Control\n   There are two access control issues; the first is the\
    \ ability to\n   securely transfer data between the slave and master servers.\
    \ To\n   transfer data for an authority area, a slave server can authenticate\n\
    \   itself by satisfying one of the guardians linked to the SOA\n   information\
    \ of the authority area at the master server. In addition,\n   the master server\
    \ may encrypt the transferred data.\n   The second issue is the ability to make\
    \ public only a subset of the\n   data in an authority area. If all the objects\
    \ of a particular class\n   need to be private, the Private attribute of the class\
    \ should be set\n   to true. If only some attributes of all the objects of a particular\n\
    \   class need to be private, the Private attribute property of each of\n   those\
    \ attributes should be set to true. The guardians of such objects\n   must be\
    \ able to view them completely.\n"
- title: 5. Acknowledgments
  contents:
  - "5. Acknowledgments\n   The authors would like to acknowledge the following individuals.\n\
    \   Stan Borinski\n   C. Ming Lu\n   Leslie Meador\n   Michael Mealling\n   Greg\
    \ Pierce\n   Amar Rao\n"
- title: 6. References
  contents:
  - "6. References\n   [CIP] Allen, J., \"The Common Indexing Protocol (CIP)\", Bunyip\n\
    \   Information Systems, November 1996, Work in Progress.\n   [Guardian] Singh,\
    \ J., M. Kosters, \"The InterNIC Guardian Object\",\n   ftp://rs.internic.net/policy/internic/internic-gen-1.txt,\
    \ Network\n   Solutions, February 1996.\n   [RFC 821] Postel, J., \"Simple Mail\
    \ Transfer Protocol\", STD 10, RFC\n   821, ISI, August 1982.\n   [RFC 822] Crocker,\
    \ D, \"Standards for the Format of ARPA Internet Text\n   Messages\", STD 11,\
    \ RFC 822, University of Delaware, August 1982.\n   [RFC 954] Harrenstien, K.,\
    \ Stahl, M., Feinler, E., \"NICNAME/WHOIS\",\n   RFC 954, SRI, October 1985.\n\
    \   [RFC 1034] Mockapetris, P. V., \"Domain names - concepts and\n   facilities\"\
    , STD 13, RFC 1034, November 1987.\n   [RFC 1714] Williamson, S., Kosters, M.,\
    \ \"Referral Whois Protocol\",\n   RFC 1714, Network Solutions, November 1994.\n\
    \   [RFC 1738] T. Berners-Lee, L. Masinter, M. McCahill, \"Uniform\n   Resource\
    \ Locators (URL)\", RFC 1738, CERN, Xerox Corporation,\n   University of Minnesota,\
    \ December 1994.\n   [RFC 1991] Atkins, D.,  W. Stallings, P. Zimmermann, \"PGP\
    \ Message\n   Exchange Formats\", RFC 1991, MIT, Comp-Comm Consulting, Boulder\n\
    \   Software Engineering, August 1996.\n   [RFC 2052] Gulbrandsen, A., P. Vixie,\
    \ \"A DNS RR for specifying the\n   location of services (DNS SRV)\", RFC 2052,\
    \ Troll Technologies, Vixie\n   Enterprises, October 1996.\n   [X.500] \"The Directory:\
    \ Overview of Concepts, Models and Service\",\n   CCITT Recommendation X.500,\
    \ 1988.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Scott Williamson (scottw@rwhois.net)\n   Mark Kosters\
    \ (markk@internic.net)\n   David Blacka (davidb@rwhois.net)\n   Jasdip Singh (jasdips@rwhois.net)\n\
    \   Koert Zeilstra (kzeil@rwhois.net)\n   Postal Address:\n   505 Huntmar Park\
    \ Drive\n   Herndon, VA 22070-5100\n   Telephone: 703-742-0400\n   Appendix A:\
    \ Glossary Of Terms\n   ABNF: Augmented Backus-Naur Form. Refined version of BNF,\
    \ defined in\n   [RFC 822]. See BNF.\n   Attribute: A named field and the smallest\
    \ typed unit in a database\n   schema.  See Database Schema.\n   Authority Area:\
    \ An autonomous part of an RWhois tree. It is\n   associated and named after a\
    \ particular piece of a hierarchy and is\n   able to state authoritatively whether\
    \ or not an instance of\n   hierarchical data is present within the RWhois tree.\
    \ See RWhois Tree.\n   Banner: A line sent by a server indicating which protocol\
    \ versions it\n   supports and which directives are implemented. This line is\
    \ issued by\n   the server after a connection is opened and as a response to the\
    \ \"-\n   rwhois\" directive. See Directive and Response.\n   Base Class: A class\
    \ from which all defined classes in a database\n   schema inherit attributes.\
    \ See Attribute, Class, and Database Schema.\n   BNF: Backus-Naur Form. Language\
    \ to precisely define the syntax of\n   protocols and computer languages.\n  \
    \ Class: A collection of attributes. See Attribute.\n   Complete Replication:\
    \ The process of replicating all of the data for\n   an authority area. See Replication.\n\
    \   Database Schema: A collection of all the classes forming an RWhois\n   database.\
    \ See Class.\n   Directive: A command that a client sends to a server to set a\
    \ control\n   parameter for the session, get the meta-information (class\n   definitions\
    \ and SOA information) about an authority area, or get the\n   data in an authority\
    \ area. See Class and SOA.\n   Guardian Class: A standard class that contains\
    \ security information.\n   An object is guarded by containing a pointer to a\
    \ guardian object.\n   See Class and Object.\n   Incremental Replication: The\
    \ process of replicating the data that has\n   changed since the last replication\
    \ for an authority area. See\n   Replication.\n   Info: The miscellaneous information\
    \ that a server sends to a client.\n   Lexically Hierarchical Label: A text string\
    \ whose position in a\n   hierarchy is encoded in the string itself.\n   Link\
    \ Referral: A pointer to another server that is further down an\n   RWhois tree.\
    \ It is used to route a query down the tree. See Referral\n   and RWhois Tree.\n\
    \   Master Server: A server where the data is registered for an authority\n  \
    \ area.  It answers authoritatively to queries in the authority area.\n   It is\
    \ also called a primary server. See Authority Area.\n   Namespace: A particular\
    \ naming system defined by a set of rules\n   describing the format of a name.\
    \ Alternately, all of the names\n   satisfying the rules.\n   Object: An instance\
    \ of a class. It is data with a type of <class>.\n   See Class.\n   PGP: Pretty\
    \ Good Privacy. An authentication and encryption scheme.\n   Primary Server: See\
    \ Master Server.\n   Punt Referral: A pointer to another server that is further\
    \ up an\n   RWhois tree. It is used to route a query up the tree. See Referral\n\
    \   and RWhois Tree.\n   Query: A command that a client sends to a server to access\
    \ the data\n   in an authority area.\n   Query Routing: Redirecting a query to\
    \ another server for resolution.\n   See Query.\n   Referral: A pointer to another\
    \ server that is presumed to be closer\n   to the desired data. It is used to\
    \ route a query. See Query Routing.\n   Referral Class: A standard class that\
    \ contains referral information\n   for an authority area. See Class and Referral.\n\
    \   Replication: A server duplicating data from another server on a per-\n   authority\
    \ area basis. See Authority Area.\n   Response: The information that a server\
    \ returns to a client for a\n   directive. See Directive.\n   Result: The information\
    \ that a server returns to a client for a\n   query. It can be either the accessed\
    \ data or referrals to other\n   servers. See Query and Referral.\n   RWhois Tree:\
    \ A data information tree of RWhois servers where the data\n   is arranged hierarchically\
    \ in the authority areas. See Authority\n   Area.\n   Schema: See Class.\n   Secondary\
    \ Server: See Slave Server.\n   Slave Server: A server where the data is replicated\
    \ from the master\n   server for an authority area. It also answers authoritatively\
    \ to\n   queries in the authority area. It is also called a secondary server.\n\
    \   See Master Server.\n   SOA: Start Of Authority. Administrative variables,\
    \ defined at the\n   master server, to control replication for an authority area.\
    \ See\n   Master Server and Replication.\n"
- title: 'Appendix B: RWhois ABNF'
  contents:
  - "Appendix B: RWhois ABNF\n   This specification uses the Augmented Backus-Naur\
    \ Form (ABNF)\n   notation, as defined in Section 2 of [RFC 822].\n   General\
    \ Definitions\n   Lexical Tokens\n   alpha = \"a\"..\"z\" / \"A\"..\"Z\"\n   digit\
    \ = \"0\"..\"9\"\n   hex-digit = digit / \"a\"..\"f\" / \"A\".. \"F\"\n   id-char\
    \ = alpha / digit / \"_\" / \"-\"\n   any-char = <ASCII 1..255,\n            \
    \  except LF (linefeed) and CR (carriage return)>\n   dns-char = alpha / digit\
    \ / \"-\"\n   email-char = <see [RFC 822]>\n   space = \" \"\n   tab = <ASCII\
    \ TAB (tab)>\n   lf = <ASCII LF (linefeed)>\n   cr = <ASCII CR (carriage return)>\n\
    \   crlf = cr lf\n   Grammar\n   year = 4digit\n   month = 2digit\n   day = 2digit\n\
    \   hour = 2digit\n   minute = 2digit\n   second = 2digit\n   milli-second = 3digit\n\
    \   host-name = dns-char *(dns-char / \".\")\n   email = 1*email-char \"@\" host-name\n\
    \   authority-area = (dns-char / \".\") *(dns-char / \".\" / \"/\")\n   object-id\
    \ = 1*id-char \".\" authority-area\n   host-port = (host-name / ip-address) \"\
    :\" 1*5digit\n   ip-address = 1*3digit \".\" 1*3digit \".\" 1*3digit \".\" 1*3digit\n\
    \   class-name = 1*id-char\n   attribute-name = 1*id-char\n   attribute-value\
    \ = 1*any-char\n   time-stamp = year month day hour minute second milli-second\n\
    \   on-off = \"on\" / \"off\"\n   Note that the time-stamp must be in the Greenwich\
    \ Mean Time (GMT)\n   time zone.\n   response = ok-response crlf / error-response\
    \ crlf / info-response\n   ok-response = \"%ok\"\n   error-response = \"%error\"\
    \ space error-code space error-text\n   error-code = 3digit\n   error-text = 1*any-char\n\
    \   info-response = \"%info\" space \"on\" crlf *(*any-char crlf) \"%info\"\n\
    \           space \"off\" crlf\n   rwhois-banner = \"%rwhois\" space version-list\
    \ space host-name\n           [space implementation] crlf\n   version-list = version\
    \ *(\",\" version)\n   version = version-number [\":\" capability-id]\n      \
    \     / \"V-1.5\" \":\" capability-id\n   version-number = \"V-\" 1*digit \".\"\
    \ 1*digit\n   capability-id = response-id \":\" extra-id\n   response-id = 6hex-digit\n\
    \   extra-id = 2hex-digit\n   implementation = 1*any-char\n   rwhois-protocol\
    \ = client-sends / server-returns\n   client-sends = *(directives / rwhois-query)\n\
    \   server-returns = *(responses / rwhois-query-result)\n   directives = rwhois-dir\
    \ / class-dir / directive-dir / display-dir /\n           holdconnect-dir / limit-dir\
    \ / notify-dir / quit-dir /\n           register-dir / schema-dir / security-dir\
    \ / soa-dir /\n           status-dir / xfer-dir / x-dir\n   responses = rwhois-response\
    \ / class-response/ directive-response/\n           display-response/ holdconnect-response/\
    \ limit-response/\n           notify-response/ quit-response/ register-response/\n\
    \           schema-response / security-response/ soa-response/\n           status-response/\
    \ xfer-response/ x-response\n   Required Directives\n   rwhois\n   rwhois-dir\
    \ = \"-rwhois\" space version-number [space implementation]\n                crlf\n\
    \   rwhois-response = \"%rwhois\" space version space host-name\n           [space\
    \ implementation] crlf\n   Optional Directives\n   class\n   class-dir = \"-class\"\
    \ space authority-area *(space class-name) crlf\n   class-response = *class-record\
    \ response\n   class-record = *class-line \"%class\" crlf\n   class-line = \"\
    %class\" space class-name \":\" \"description\" \":\"\n                1*any-char\
    \ crlf\n      / \"%class\" space class-name \":\" \"version\" \":\" time-stamp\
    \ crlf\n      / \"%class\" space class-name \":\" meta-field \":\" meta-value\
    \ crlf\n   meta-field = 1*id-char\n   meta-value = 1*any-char\n   directive\n\
    \   directive-dir = \"-directive\" *(space directive-name)crlf\n   directive-name\
    \ = 1*id-char\n   directive-response = *directive-record response\n   directive-record\
    \ = \"%directive\" space \"directive\" \":\"\n           directive-name crlf *directive-line\
    \ \"%directive\" crlf\n   directive-line = \"%directive\" space \"description\"\
    \ \":\" 1*any-char crlf\n           / \"%directive\" space attribute-name \":\"\
    \ attribute-value crlf\n   display\n   display-dir = \"-display\" crlf\n     \
    \ / \"-display\" space display-name crlf\n   display-name = 1*id-char\n   display-response\
    \ = *display-record response\n   display-record = \"%display\" space \"name\"\
    \ \":\" display-name crlf\n   *display-line \"%display\" crlf\n   display-line\
    \ = \"%display\" space attribute-name \":\" attribute-value\n                \
    \  crlf\n   holdconnect\n   holdconnect-dir = \"-holdconnect\" space on-off crlf\n\
    \   holdconnect-response = response\n   limit\n   limit-dir = \"-limit\" space\
    \ 1*digit crlf\n   limit-response = response\n   notify\n   notify-dir = \"-notify\"\
    \ space \"badref\" space referral-query crlf\n           / \"-notify\" space \"\
    recurref\" space referral-query crlf\n           / \"-notify\" space \"update\"\
    \ space host-port \":\" authority-area\n             crlf\n           / \"-notify\"\
    \ space \"inssec\" space host-port \":\" authority-area\n             crlf\n \
    \          / \"-notify\" space \"delsec\" space host-port \":\" authority-area\n\
    \             crlf\n   referral-query = referral-url space [class-name space]\
    \ query\n   notify-response = response\n   See the query section for the definitions\
    \ of referral-url and query.\n   quit\n   quit-dir = \"-quit\" crlf\n   quit-response\
    \ = response\n   register\n   register-dir = register-on space \"add\" space maintainer-id\
    \ crlf\n           register-add register-off\n           / register-on space \"\
    mod\" space maintainer-id crlf\n                   register-mod register-off\n\
    \           / register-on space \"del\" space maintainer-id crlf\n           \
    \        register-del register-off\n   register-on = \"-register\" space \"on\"\
    \n   register-off = \"-register\" space \"off\" crlf\n   register-add = 1*(register-line\
    \ crlf)\n   register-mod = 1*(register-line crlf) \"_NEW_\" crlf\n           \
    \       1*(register-line crlf)\n   register-del = 1*(register-line crlf)\n   maintainer-id\
    \ = email\n   register-line = attribute-name \":\" attribute-value\n   register-on-response\
    \ = response\n   register-off-response = \"%register\" space \"ID\" \":\" object-id\
    \ crlf\n                           response\n           / \"%register\" space\
    \ \"Updated\" \":\" time-stamp crlf response\n           / response\n   schema\n\
    \   schema-dir = \"-schema\" space authority-area *(space class-name) crlf\n \
    \  schema-response = *schema-record response\n   schema-record = *schema-line\
    \ \"%schema\" crlf\n   schema-line = \"%schema\" space class-name \":\" attribute-name\
    \ \":\"\n           attribute-value crlf\n   security\n   security-dir = \"-security\"\
    \ space \"on\" space direction space\n           security-method [space security-data]\
    \ crlf security-payload\n           [\"-security\" space \"off\" crlf]\n   direction\
    \ = \"request\" / \"response\"\n   security-method = \"password\" / \"pgp\" /\
    \ 1*id-char\n   security-data = password-data / pgp-data / 1*any-char\n   password-data\
    \ = 1*any-char\n   pgp-data = \"signed\" / \"encrypt\" [space key-id] / \"signed-encrypt\"\
    \n              [space key-id]\n   security-payload = *(*any-char crlf)\n   security-response\
    \ = response\n   soa\n   soa-dir = \"-soa\" *(space authority-area) crlf\n   soa-response\
    \ = *soa-record response\n   soa-record = *soa-line \"%soa\" crlf\n   soa-line\
    \ = \"%soa\" space \"authority\" \":\" authority-area crlf\n      / \"%soa\" space\
    \ \"ttl\" \":\" 1*digit crlf\n      / \"%soa\" space \"serial\" \":\" time-stamp\
    \ crlf\n      / \"%soa\" space \"refresh\" \":\" 1*digit crlf\n      / \"%soa\"\
    \ space \"increment\" \":\" 1*digit crlf\n      / \"%soa\" space \"retry\" \"\
    :\" 1*digit crlf\n      / \"%soa\" space \"tech-contact\" \":\" email crlf\n \
    \     / \"%soa\" space \"admin-contact\" \":\" email crlf\n      / \"%soa\" space\
    \ \"hostmaster\" \":\" email crlf\n      / \"%soa\" space \"primary\" \":\" host-port\
    \ crlf\n      / \"%soa\" space attribute-name \":\" attribute-value crlf\n   status\n\
    \   status-dir = \"-status\" crlf\n   status-response = *status-line response\n\
    \   status-line = \"%status\" space \"limit\" \":\" 1*digit crlf\n      / \"%status\"\
    \ space \"holdconnect\" \":\" on-off crlf\n      / \"%status\" space \"forward\"\
    \ \":\" on-off crlf\n      / \"%status\" space \"authority\" \":\" 1*digit crlf\n\
    \      / \"%status\" space \"display\" \":\" 1*any-char crlf\n      / \"%status\"\
    \ space \"contact\" \":\" email crlf\n      / \"%status\" space attribute-name\
    \ \":\" attribute-value crlf\n   xfer\n   xfer-dir = \"-xfer\" space authority-area\
    \ *attribute-def\n           [space serial-number] crlf\n   attribute-def = [space\
    \ \"class=\" class-name]\n                   *(space \"attribute=\" attribute-name)\n\
    \   serial-number = time-stamp\n   xfer-response = *xfer-record response\n   xfer-record\
    \ = *xfer-line \"%xfer\" crlf\n   xfer-line = \"%xfer\" space class-name \":\"\
    \ attribute-name \":\"\n               attribute-value crlf\n   X\n   x-dir =\
    \ \"-X-\" x-directive [space *[x-arguments]] crlf\n   x-directive = 1*id-char\n\
    \   x-arguments = *any-char\n   x-response = *(*any-char crlf) response\n   Query\n\
    \   rwhois-query = [class-name space] query crlf\n   query = query-string / attribute-query\
    \ / query bin-boolean query\n   query-char = <any-char, except \"\"\", space,\
    \ tab>\n   quoted-query-char = query-char / space / tab / \"\n   query-string\
    \ = 1*query-char [\"*\"] / \"\"\" 1*quoted-query-char [\"*\"] \"\"\"\n   attribute-query\
    \ = attribute-name \"=\" query-string\n   bin-boolean = \"and\" / \"or\"\n   rwhois-query-result\
    \ = *(query-record / referral-record) response\n   query-record = 1*query-line\
    \ crlf\n   query-line = class-name \":\" attribute-name [\";\" type-char] \":\"\
    \n           attribute-value crlf\n   type-char = \"T\" / \"I\" / \"S\"\n   referral-record\
    \ = 1*(referral-line crlf)\n   referral-line = \"%referral\" space referral-url\n\
    \   referral-url = \"rwhois\" \":\" \"//\" host-port \"/\" \"auth-area=\"\n  \
    \                authority-area\n"
- title: 'Appendix C: Error Codes'
  contents:
  - "Appendix C: Error Codes\n   When a server fails to run a command (directive or\
    \ query), it returns\n   an error response. The ABNF for an error response is\
    \ as follows.\n   error-response = \"%error\" space error-code space error-text\n\
    \   error-code = 3digit\n   error-text = 1*any-char\n   An error text may be modified,\
    \ but its meaning must remain the same.\n   The server may append additional information\
    \ to it, for example\n   \"%error 333 Not master for authority area: foobar.com\"\
    .\n   The following table describes the possible digits in the first,\n   second,\
    \ and third positions of an error code.\n    XXX    Description\n    1XX    Information\
    \ only, no action required\n    2XX    Information, action required\n    3XX \
    \   Specific command error, retry that command or try another one\n    4XX   \
    \ Serious for current command, may correct with another command\n    5XX    Fatal,\
    \ must disconnect\n    X0X    System wide, no specific command\n    X1X    System\
    \ wide, no specific command\n    X2X    Registration error\n    X3X    Specific\
    \ command\n    X4X    Specific command\n    X5X    Specific command\n    X6X \
    \   Extended message (version specific)\n    XXX    Sequential order\n   The following\
    \ table gives an ordered list of RWhois error codes.\n   These codes may be extended\
    \ with implementation- specific codes. An\n   implementation- specific code must\
    \ have a \"6\" in the second position.\n    Code    Text\n    120     Registration\
    \ deferred\n    130     Object not authoritative\n    230     No objects found\n\
    \    300     Not compatible with version\n    320     Invalid attribute\n    321\
    \     Invalid attribute syntax\n    322     Required attribute missing\n    323\
    \     Object reference not found\n    324     Primary key not unique\n    325\
    \     Failed to update outdated object\n    330     Exceeded maximum objects limit\n\
    \    331     Invalid limit\n    332     Nothing to transfer\n    333     Not master\
    \ for authority area\n    336     Object not found\n    338     Invalid directive\
    \ syntax\n    340     Invalid authority area\n    341     Invalid class\n    342\
    \     Invalid host/port\n    350     Invalid query syntax\n    351     Query too\
    \ complex\n    352     Invalid security method\n    353     Authentication failed\n\
    \    354     Encryption failed\n    400     Directive not available\n    401 \
    \    Not authorized for directive\n    402     Unidentified error\n    420   \
    \  Registration not authorized\n    436     Invalid display format\n    500  \
    \   Memory allocation problem\n    501     Service not available\n    502    \
    \ Unrecoverable error\n    503     Idle time exceeded\n   The following error\
    \ codes, defined in [RFC 1714], have been made\n   obsolete:  100, 200, 231, 334,\
    \ 335, 337, 421, 431, 432, 433, 434,\n   460, 461, and 530.\n"
- title: 'Appendix D: Capability ID'
  contents:
  - "Appendix D: Capability ID\n   The capability ID encodes which directives are\
    \ implemented in the\n   server.  To create a capability ID, perform a logical\
    \ OR on all the\n   hexadecimal numbers corresponding to the implemented directives.\
    \ The\n   resulting number is used in the banner, which is sent by the server\n\
    \   after opening a connection and as a response to the \"-rwhois\"\n   directive.\
    \ The eight most significant bits of the capability ID are\n   reserved for future\
    \ use:\n    class        000001h\n    directive    000002h\n    display      000004h\n\
    \    forward      000008h\n    holdconnect  000010h\n    limit        000020h\n\
    \    notify       000040h\n    quit         000080h\n    register     000100h\n\
    \    schema       000200h\n    security     000400h\n    soa          000800h\n\
    \    status       001000h\n    xfer         002000h\n    X            004000h\n"
- title: 'Appendix E: Schema Definitions'
  contents:
  - 'Appendix E: Schema Definitions

    '
- title: Attribute Definition Model
  contents:
  - "Attribute Definition Model\n Name         Type  Description\n Attribute    N\
    \     This is the name of the attribute.\n Description  S     This is a free-form\
    \ description of the attribute.\n Type         T     This is a parameter that\
    \ broadly indicates the use\n                    of the attribute to the protocol.\
    \ There are three\n                    standard types: TEXT, ID, and SEE-ALSO.\
    \ The default\n                    is TEXT, which indicates that the value is\
    \ a text\n                    string.  ID indicates that the attribute contains\n\
    \                    the ID of another RWhois object. This type of\n         \
    \           attribute is used for database normalization. SEE-\n             \
    \       ALSO indicates that the attribute contains a pointer\n               \
    \     (a Uniform Resource Identifier (URI)) to some other\n                  \
    \  kind of external data; for example, a World Wide Web\n                    page\
    \ or FTP site.\n Format       S     This is an interpretable string that describes\
    \ the\n                    acceptance format of the value. The server (and\n \
    \                   optionally the client) should match the value to the\n   \
    \                 format string to determine if the value is\n               \
    \     acceptable.  The format of this property is a\n                    keyword\
    \ indicating the syntax of the format string,\n                    followed by\
    \ a colon, followed by the format string\n                    itself. Currently,\
    \ the only keyword recognized is\n                    \"re\" for POSIX.2 extended\
    \ regular expressions.\n Indexed      B     This is a true or false flag that\
    \ indicates that\n                    this attribute should be indexed (and therefore\
    \ able\n                    to be searched).\n Required     B     This is a true\
    \ or false flag that indicates that\n                    this attribute must have\
    \ a value.\n Multi-Line   B     This is a true or false flag that indicates that\n\
    \                    this attribute may have multiple instances in an\n      \
    \              object; all the instances are to be considered as\n           \
    \         multiple lines of the same attribute instance.\n Repeatable   B    \
    \ This is a true or false flag that indicates that\n                    there\
    \ may be multiple instances of this attribute in\n                    a class\
    \ and each instance is to be interpreted as a\n                    separate instance\
    \ (in contrast to Multi-Line). This\n                    flag is mutually exclusive\
    \ with Multi-Line: if\n                    Multi-Line is true, then Repeatable\
    \ must be false\n                    and vice versa.\n Primary      B     This\
    \ is a true or false flag that indicates that\n                    this attribute\
    \ is a primary key. If more than one\n                    attribute in a class\
    \ is marked as primary, then\n                    these attributes together form\
    \ a single primary key.\n                    The primary key is intended to be\
    \ used to force\n                    uniqueness among class instances. Therefore,\
    \ there\n                    can be only one instance of a primary key in a\n\
    \                    database. The Primary flag implies that the\n           \
    \         attribute is also required.\n Hierarchical B     This is a true or false\
    \ flag that indicates that\n                    this attribute is lexically hierarchical.\n\
    \ Private      B     This is a true or false flag that indicates whether\n   \
    \                 or not this attribute is private (that is, publicly\n      \
    \              not viewable). It defaults to false. If it is true,\n         \
    \           then only the clients that satisfy the\n                    authentication/encryption\
    \ requirements of a guardian\n                    are able to view the attribute-value\
    \ pair.\n   Type is defined as follows:\n    Type  ABNF Definition\n     B   \
    \  \"ON\" / \"OFF\"\n     N     1*id-char\n     S     1*any-char\n     T     \"\
    ID\" / \"SEE-ALSO\" / \"TEXT\"\n   Base Class\n Name       Type   Required  RepeatableDescription\n\
    \ Class-Name TEXT   Y         N         This attribute is the name of the\n  \
    \                                     class to which the object\n            \
    \                           belongs.\n Auth-Area  TEXT   Y         N         This\
    \ attribute is the name of the\n                                       authority\
    \ area to which the\n                                       object belongs.\n\
    \ ID         TEXT   Y         N         This attribute is the universal\n    \
    \                                   identifier of the object.\n Updated    TEXT\
    \   Y         N         This attribute is a time/date\n                      \
    \                 stamp that indicates the time of\n                         \
    \              last modification of the object.\n Guardian   ID     N        \
    \ Y         This attribute is a link to a\n                                  \
    \     guardian object. Its value is the\n                                    \
    \   ID of a guardian object.\n Private    TEXT   N         N         This attribute\
    \ is a true or false\n                                       flag that indicates\
    \ whether or\n                                       not an object is private\
    \ (that\n                                       is, publicly not viewable). It\n\
    \                                       defaults to false. If it is\n        \
    \                               true, then only the clients\n                \
    \                       that satisfy the\n                                   \
    \    authentication/encryption\n                                       requirements\
    \ of one of the\n                                       object's guardians are\
    \ able to\n                                       view the object. If the object\n\
    \                                       is publicly viewable, then the\n     \
    \                                  Private attribute property of\n           \
    \                            each of its attributes still\n                  \
    \                     applies.\n TTL        TEXT   N         N         This attribute\
    \ is the\n                                       \"time-to-live\" of a given object.\n\
    \                                       It is included only if an object\n   \
    \                                    has a different time-to-live than\n     \
    \                                  the default given in the Start of\n       \
    \                                Authority information. Its value\n          \
    \                             is specified in seconds.\n"
- title: 'Appendix F: Changes RWhois V1.0 - V1.5'
  contents:
  - "Appendix F: Changes RWhois V1.0 - V1.5\n   General\n      * Multiple authority\
    \ areas per server.\n      * Data replication.\n      * Revised schema model.\n\
    \      * Revised query routing rules.\n      * Revised error codes.\n      * Removed\
    \ unnecessary spaces in responses and results.\n   Directives\n      * Class:\
    \ New. Returns meta-information for a class.\n      * Display: Can return supported\
    \ display formats.\n      * Load: Obsolete.\n      * Notify: Syntax change.\n\
    \      * Private: Obsolete.\n      * Register: Syntax change.\n      * Schema:\
    \ Syntax change.\n      * Security: Obsoletes Private.\n      * Xfer: Syntax change.\n\
    \   Query\n      * Display option removed.\n      * Output format: Only the dump\
    \ format is standard; optional type\n        character added.\n      * Attribute-restricted\
    \ query.\n      * Revised referral syntax.\n"
