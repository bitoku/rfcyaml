- title: __initial_text__
  contents:
  - "                 Multiple-Recipient MESSAGE Requests in\n                 the\
    \ Session Initiation Protocol (SIP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a mechanism that allows a SIP User Agent\n\
    \   Client (UAC) to send a SIP MESSAGE request to a set of destinations,\n   by\
    \ using a SIP URI-list (Uniform Resource Identifier list) service.\n   The UAC\
    \ sends a SIP MESSAGE request that includes the payload along\n   with the URI\
    \ list to the MESSAGE URI-list service, which sends a\n   MESSAGE request including\
    \ the payload to each of the URIs included in\n   the list.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Overview . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   4.  URI-List Document  . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   5.  Option-Tag . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  6\n   6.  Procedures at the User Agent Client  . . . . . . . . . . . .\
    \ .  6\n   7.  Procedures at the MESSAGE URI-List Service . . . . . . . . . .\
    \  7\n     7.1.  Determining the Intended Recipient . . . . . . . . . . . .  8\n\
    \     7.2.  Creating an Outgoing MESSAGE Request . . . . . . . . . . .  8\n  \
    \   7.3.  Composing Bodies in the Outgoing MESSAGE Request . . . . . 10\n   8.\
    \  Procedures at the UAS  . . . . . . . . . . . . . . . . . . . . 11\n   9.  Examples\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 12\n   10. Security Considerations\
    \  . . . . . . . . . . . . . . . . . . . 15\n   11. IANA Considerations  . . .\
    \ . . . . . . . . . . . . . . . . . . 15\n   12. Acknowledgements . . . . . .\
    \ . . . . . . . . . . . . . . . . . 15\n   13. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 16\n     13.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 16\n     13.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   RFC 3261 (SIP) [RFC3261] is extended by RFC 3248 [RFC3428]\
    \ to carry\n   instant messages in MESSAGE requests.  SIP-based messaging, as\n\
    \   described in RFC 3428 [RFC3428], does not provide a mechanism to send\n  \
    \ the same request to multiple recipients or replying to all recipients\n   of\
    \ a SIP MESSAGE request.  This memo addresses these functions.\n   A first requirement\
    \ can be expressed as:\n      REQ-1: It must be possible for a user to send an\
    \ instant message\n      request to an ad hoc group, where the identities of the\
    \ recipients\n      are carried in the message itself.\n   One possibility to\
    \ fulfill the above requirement is to establish a\n   session of instant messages\
    \ with an instant messaging conference\n   server, and exchange the messages,\
    \ for example, using MSRP (Message\n   Session Relay Protocol) [RFC4975].  While\
    \ this option seems to be\n   reasonable in many cases, in other situations the\
    \ sending user just\n   wants to send a small pager-mode instant message to an\
    \ ad hoc group\n   without the burden of setting up a session.  This document\
    \ focuses on\n   sending a pager-mode instant message to a number of intended\n\
    \   recipients.\n   To meet the requirement with a pager-mode instant message,\
    \ we allow\n   SIP MESSAGE requests carry recipient-list bodies, i.e., URI lists\
    \ in\n   body parts whose Content-Disposition (RFC 2183) [RFC2183] is\n   'recipient-list',\
    \ as specified in RFC 5363 [RFC5363].  A SIP MESSAGE\n   URI-list service, which\
    \ is a specialized application service,\n   receives the request and sends a MESSAGE\
    \ request including the\n   received payload to each of the URIs in the list.\
    \  Each of these\n   MESSAGE requests contains a copy of the body included in\
    \ the original\n   MESSAGE request.\n   A second requirement addresses the \"\
    Reply-To-All\" functionality:\n      REQ-2: It MUST be possible for the recipient\
    \ of a group instant\n      message to send a message to all other participants\
    \ that received\n      the same group instant message (i.e., Reply-To-All).\n\
    \   To meet this requirement, we provide a mechanism whereby the MESSAGE\n   URI-list\
    \ service also includes a URI list in body parts whose\n   Content-Disposition\
    \ (RFC 2183) [RFC2183] is 'recipient-list-history',\n   as specified in RFC 5364\
    \ [RFC5364].  The 'recipient-list-history'\n   body is sent along with the instant\
    \ message payload in each of the\n   instant messages sent to the recipients.\n\
    \   The User Agent Client (UAC) that sends a MESSAGE request to a MESSAGE\n  \
    \ URI-list service needs to be configured with the SIP URI of the\n   service\
    \ that provides the functionality.  Discovering and\n   provisioning of this URI\
    \ to the UAC is outside the scope of this\n   document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP\
    \ 14, RFC 2119\n   [RFC2119] and indicate requirement levels for compliant\n \
    \  implementations.\n   This document reuses the following terminology defined\
    \ in RFC 3261\n   [RFC3261]:\n   o  Address-of-Record (AOR)\n   o  User Agent\
    \ (UA)\n   o  User Agent Client (UAC)\n   o  User Agent Server (UAS)\n   This\
    \ document defines the following new terms:\n   MESSAGE URI-list service:  A specialized\
    \ URI-list service that\n      receives a MESSAGE request with a URI list and\
    \ sends a similar\n      MESSAGE request to each URI in the list.  In this context,\
    \ similar\n      indicates that some SIP header fields can change, but the MESSAGE\n\
    \      URI-list service will not change the instant message payload.\n      MESSAGE\
    \ URI-list services behave effectively as specialized B2BUAs\n      (Back-to-Back-User-Agents).\
    \  A server providing MESSAGE URI-list\n      services can also offer URI-list\
    \ services for other methods,\n      although this functionality is outside the\
    \ scope of this document.\n      In this document, we only discuss MESSAGE URI-list\
    \ services.\n   Incoming MESSAGE request:  A SIP MESSAGE request that a UAC creates\n\
    \      and addresses to a MESSAGE URI-list service.  Besides the regular\n   \
    \   instant message payload, an incoming MESSAGE request contains a\n      URI\
    \ list.\n   Outgoing MESSAGE request:  A SIP MESSAGE request that a MESSAGE URI-\n\
    \      list service creates and addresses to a UAS (User Agent Server).\n    \
    \  It contains the regular instant message payload.\n   Intended recipient:  The\
    \ intended final recipient of the request to\n      be generated by MESSAGE URI-list\
    \ service.\n   Reply-To-All:  The ability of an intended recipient to receive\
    \ a\n      MESSAGE request that includes the payload and the list of\n      recipients,\
    \ and compose and send a MESSAGE request to the sender\n      and the rest of\
    \ the recipients.  The replying entity can use a\n      MESSAGE URI-list service\
    \ if one is at its disposal or can create a\n      sequence of regular single-recipient\
    \ MESSAGE requests to each SIP\n      AOR.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   A UAC creates a MESSAGE request that contains a multipart body\n\
    \   including a list of URIs (intended recipients) and an instant\n   message.\
    \  The list of URIs is formatted according to the resource\n   list document format\
    \ specified in RFC 4826 [RFC4826] and extended\n   with the attributes defined\
    \ in RFC 5364 [RFC5364].  The UAC sends\n   this MESSAGE request to the MESSAGE\
    \ URI-list service.  On reception\n   of this incoming MESSAGE request, the MESSAGE\
    \ URI-list service\n   creates a MESSAGE request per intended recipient (listed\
    \ in the URI\n   list) and copies the instant message payload to each of those\n\
    \   MESSAGES.  The MESSAGE URI-list service also manipulates the XML\n   resource\
    \ list according to the procedures indicated in RFC 5364\n   [RFC5364], and attaches\
    \ the result to each of the MESSAGE requests,\n   along with the instant message\
    \ payload.  Then the MESSAGE URI-list\n   service sends each of the created outgoing\
    \ MESSAGE request to the\n   respective receiver.\n   The MESSAGE URI-list mechanism\
    \ allows a sender to specify multiple\n   targets for a MESSAGE request by including\
    \ an XML resource list\n   document according to RFC 4826 [RFC4826] in the body\
    \ of the MESSAGE\n   request extended with the attributes defined in RFC 5364\
    \ [RFC5364].\n   This resource list, whose Content-Disposition (RFC 2183) [RFC2183]\
    \ is\n   'recipient-list', as specified in RFC 5363 [RFC5363], includes the\n\
    \   URIs of the targets.  Each target URI may also be marked to indicate\n   in\
    \ what role the URI-list service will place the target (e.g., \"to\",\n   \"cc\"\
    , or \"bcc\"), and whether the target URI is expected to be\n   anonymized or\
    \ not, according to the procedures described in RFC 5364\n   [RFC5364].  When\
    \ the MESSAGE URI-list server expands the MESSAGE\n   request to each recipient,\
    \ it includes (along with the instant\n   message payload) a new URI list (based\
    \ on the received one), whose\n   Content-Disposition (RFC 2183) [RFC2183] is\
    \ 'recipient-list-history',\n   as specified in RFC 5364 [RFC5364].  This new\
    \ URI list includes the\n   list of non-anonymous \"to\" and \"cc\" targets, allowing\
    \ recipients both\n   to get knowledge of other recipients and to reply to them.\n"
- title: 4.  URI-List Document
  contents:
  - "4.  URI-List Document\n   As described in RFC 5363 [RFC5363], specifications\
    \ of individual URI-\n   list services, like the MESSAGE URI-list service described\
    \ here, need\n   to specify a default format for 'recipient-list' bodies used\
    \ within\n   the particular service.\n   The default format for 'recipient-list'\
    \ bodies for MESSAGE URI-list\n   services is the resource list document specified\
    \ in RFC 4826\n   [RFC4826] extended with the copy control attributes [RFC5364].\
    \  UACs\n   and MESSAGE URI-list services handling 'recipient-list' bodies MUST\n\
    \   support both of these formats and MAY support other formats.\n   As described\
    \ in RFC 5364 [RFC5364], each URI can be tagged with a\n   'copyControl' attribute\
    \ set to either \"to\", \"cc\", or \"bcc\",\n   indicating the role in which the\
    \ recipient will get the MESSAGE\n   request.  Additionally, URIs can be tagged\
    \ with the 'anonymize'\n   attribute to prevent that the MESSAGE URI-list server\
    \ discloses the\n   target URI in a URI list.\n   Additionally, RFC 5364 [RFC5364]\
    \ defines a 'recipient-list-history'\n   body that contains the list of intended\
    \ recipients.  The default\n   format for 'recipient-list-history' bodies for\
    \ MESSAGE URI-list\n   services is also the resource list document specified in\
    \ RFC 4826\n   [RFC4826] extended with the copy control attributes [RFC5364].\n\
    \   MESSAGE URI-list services MUST support both of these formats; UASs\n   MAY\
    \ support these formats.  MESSAGE URI-list servers and UASs MAY\n   support other\
    \ formats.\n   The resource list document specified in RFC 4826 [RFC4826] provides\
    \ a\n   number of features that are not needed by the MESSAGE URI-list\n   service\
    \ defined in this document.  The MESSAGE URI-list service needs\n   to transfer\
    \ a simple flat list of URIs between a UAC and the MESSAGE\n   URI-list server\
    \ and between the MESSAGE URI-list server and the UAS.\n   The service does not\
    \ need hierarchical lists or the ability to\n   include entries by reference relative\
    \ to the Extensible Configuration\n   Access Protocol (XCAP) [RFC4825] root URI.\
    \  Therefore, the MESSAGE\n   URI-list service specified herein only uses flat\
    \ resource lists\n   documents that do not contain relative references.\n"
- title: 5.  Option-Tag
  contents:
  - "5.  Option-Tag\n   This document defines the 'recipient-list-message' option-tag\
    \ for use\n   in the Require and Supported SIP header fields.\n      This option-tag\
    \ is used to ensure that a server can process the\n      'recipient-list' body\
    \ used in a MESSAGE request.  It also provides\n      a mechanism to discover\
    \ the capability of the server in responses\n      to OPTIONS requests.\n   Section\
    \ 6 provides normative procedures for the usage of this option\n   tag.\n"
- title: 6.  Procedures at the User Agent Client
  contents:
  - "6.  Procedures at the User Agent Client\n   A UAC that wants to create a multiple-recipient\
    \ MESSAGE request\n   creates a MESSAGE request that MUST be formatted according\
    \ to RFC\n   3428 [RFC3428] Section 4.  The UAC populates the Request-URI with\
    \ the\n   SIP or SIPS URI of the MESSAGE URI-list service.  In addition to the\n\
    \   regular instant message body, the UAC adds a recipient-list body\n   whose\
    \ Content-Disposition type is 'recipient-list', specified in RFC\n   5363 [RFC5363].\
    \  This body contains a URI list with the recipients of\n   the MESSAGE.  Target\
    \ URIs in this body MAY also be tagged with the\n   'copyControl' and 'anonymize'\
    \ attributes specified in RFC 5364\n   [RFC5364].  The UAC MUST also include the\
    \ 'recipient-list-message'\n   option-tag, defined in Section 5, in a Require\
    \ header field.\n   UACs generating MESSAGE requests that carry recipient-list\
    \ bodies, as\n   described in previous sections, MUST include this option-tag\
    \ in a\n   Require header field.  UAs that are able to receive and process\n \
    \  MESSAGEs with a recipient-list body, as described in previous\n   sections,\
    \ SHOULD include this option-tag in a Supported header field\n   when responding\
    \ to OPTIONS requests.\n   Multiple-recipient MESSAGE requests contain a multipart\
    \ body that\n   contains the body carrying the list and the actual instant message\n\
    \   payload.  In some cases, the MESSAGE request can contain bodies other\n  \
    \ than the text and the list bodies (e.g., when the request is\n   protected with\
    \ S/MIME as per RFC 3851 [RFC3851]).\n   Typically, the MESSAGE URI-list service\
    \ will copy all the significant\n   header fields in the outgoing MESSAGE request.\
    \  However, there might\n   be cases where the SIP UA wants the MESSAGE URI-list\
    \ service to add a\n   particular header field with a particular value, even if\
    \ the header\n   field wasn't present in the MESSAGE request sent by the UAC.\
    \  In this\n   case, the UAC MAY use the \"?\" mechanism described in Section\
    \ 19.1.1\n   of RFC 3261 [RFC3261] to encode extra information in any URI in the\n\
    \   list.  However, the UAC MUST NOT use the special \"body\" hname (see\n   Section\
    \ 19.1.1 of RFC 3261 [RFC3261]) to encode a body, since the\n   body is present\
    \ in the MESSAGE request itself.\n   The following is an example of a URI that\
    \ uses the \"?\" mechanism:\n   sip:bob@example.com?Accept-Contact=*%3bmobility%3d%22mobile%22\n\
    \   The previous URI requests the MESSAGE URI-list service to add the\n   following\
    \ header field to a MESSAGE request to be sent to\n   bob@example.com:\n   Accept-Contact:\
    \ *;mobility=\"mobile\"\n   The resource list document format specified in RFC\
    \ 4826 [RFC4826]\n   provides features, such as hierarchical lists and the ability\
    \ to\n   include entries by reference relative to the XCAP root URI.  However,\n\
    \   these features are not needed by the multiple MESSAGE URI-list\n   service\
    \ defined in this document.  Therefore, when using the default\n   resource list\
    \ document, UAs SHOULD use flat lists (i.e., no\n   hierarchical lists) and SHOULD\
    \ NOT use <entry-ref> elements.\n"
- title: 7.  Procedures at the MESSAGE URI-List Service
  contents:
  - "7.  Procedures at the MESSAGE URI-List Service\n   On reception of a MESSAGE\
    \ request containing a URI list, the MESSAGE\n   URI-list service answers to the\
    \ UAC with a 202 (Accepted) response.\n      Note that the status code in the\
    \ response to the MESSAGE does not\n      provide any information about whether\
    \ or not the MESSAGEs\n      generated by the URI-list service were successfully\
    \ delivered to\n      the URIs in the list.  That is, a 202 (Accepted) response\
    \ means\n      that the MESSAGE URI-list service has received the MESSAGE and\n\
    \      that it will try to send a similar MESSAGE to the URIs in the\n      list.\
    \  Designing a mechanism to inform a client about the delivery\n      status of\
    \ an instant message is outside the scope of this\n      document.\n   Since the\
    \ MESSAGE URI-list service does not use hierarchical lists\n   nor lists that\
    \ include entries by reference to the XCAP root URI, a\n   MESSAGE URI-list server\
    \ receiving a URI list with more information\n   than what has just been described\
    \ MAY discard all the extra\n   information.\n   If a MESSAGE request contains\
    \ a Request-URI containing a URI that\n   uses the \"?\" mechanism (see Section\
    \ 19.1.1 of RFC 3261 [RFC3261]) and\n   such URI contains the special \"body\"\
    \ hname to include an additional\n   body, the MESSAGE URI-list server MAY discard\
    \ the contents of the\n   \"body\" parameter.\n"
- title: 7.1.  Determining the Intended Recipient
  contents:
  - "7.1.  Determining the Intended Recipient\n   On reception of a MESSAGE request\
    \ containing a URI list, a MESSAGE\n   URI-list service determines the list of\
    \ intended recipients by\n   inspecting the URI list contained in the body.\n\
    \   Section 4.1 of RFC 5363 [RFC5363] discusses cases when duplicated\n   URIs\
    \ are found in a URI list.  In order to avoid duplicated requests,\n   MESSAGE\
    \ URI-list services MUST take those actions specified in RFC\n   5363 [RFC5363]\
    \ into account to avoid sending duplicated requests to\n   the same recipient.\n"
- title: 7.2.  Creating an Outgoing MESSAGE Request
  contents:
  - "7.2.  Creating an Outgoing MESSAGE Request\n   Since the MESSAGE URI-list service\
    \ behaves as a UAC for outgoing\n   MESSAGE requests, for each of the intended\
    \ recipients, the MESSAGE\n   URI-list service creates a new MESSAGE request according\
    \ to the\n   procedures described in Section 4 of RFC 3428 [RFC3428].\n   Additionally,\
    \ Section 5.3 of RFC 5363 [RFC5363] provides additional\n   general guidance in\
    \ creating outgoing requests.  This document also\n   specifies the following\
    \ procedures:\n   o  A MESSAGE URI-list service MUST include a From header field\
    \ whose\n      value is the same as the From header field included in the\n  \
    \    incoming MESSAGE request, subject to the privacy requirements (see\n    \
    \  RFC 3323 [RFC3323] and RFC 3325 [RFC3325]) expressed in the\n      incoming\
    \ MESSAGE request.\n         Note that this does not apply to the \"tag\" parameter.\n\
    \         Failure to copy the From header field of the sender results in\n   \
    \      unacceptable security and privacy failures.  Note also that\n         this\
    \ requirement does not intend to contradict requirements for\n         additional\
    \ services running on the same physical node.\n         Specifically, a privacy\
    \ service (see RFC 3323 [RFC3323]) can be\n         co-located with the MESSAGE\
    \ URI-list service, in which case,\n         the privacy service has precedence\
    \ over the MESSAGE URI-list\n         service.\n   o  A MESSAGE URI-list service\
    \ SHOULD generate a new To header field\n      value set to the intended recipient's\
    \ URI.  According to the\n      procedures of RFC 3261 [RFC3261] Section 8.1.1.1,\
    \ this value is\n      also expected to be equal to the Request-URI of the outgoing\n\
    \      MESSAGE request.\n         The MESSAGE URI-list service behaves as a User\
    \ Agent Client;\n         thus, the To header field should be populated with the\n\
    \         recipient's URI.\n   o  A MESSAGE URI-list service SHOULD create a new\
    \ Call-ID header\n      field value.\n         A Call-ID header field might contain\
    \ addressing information\n         that the sender wants to remain private.  Since\
    \ there is no\n         need to keep the same Call-ID on both sides of the MESSAGE\
    \ URI-\n         list service, and since the MESSAGE URI-list service behaves\
    \ as\n         a User Agent Client, it is recommended to create a new Call-ID\n\
    \         header field value according to the regular SIP procedures.\n   o  If\
    \ a P-Asserted-Identity header field was present in the incoming\n      MESSAGE\
    \ request and the request was received from a trusted\n      source, as specified\
    \ in RFC 3325 [RFC3325], and the first hop of\n      the outgoing MESSAGE request\
    \ is also trusted, a MESSAGE URI-list\n      service MUST include a P-Asserted-Identity\
    \ header field in the\n      outgoing MESSAGE request with the same received value.\
    \  However,\n      if the first hop of the outgoing MESSAGE request is not trusted\n\
    \      and the incoming MESSAGE request included a Privacy header field\n    \
    \  with a value different than 'none', the MESSAGE URI-list service\n      MUST\
    \ NOT include a P-Asserted-Identity header field in the\n      outgoing MESSAGE\
    \ request.\n   o  If a MESSAGE URI-list service is able to assert the identity\
    \ of a\n      user (e.g., using HTTP Digest authentication scheme as per RFC\n\
    \      2617 [RFC2617], S/MIME as per RFC 3851 [RFC3851], etc.) and the\n     \
    \ service implements a mechanism where it can map that\n      authentication scheme\
    \ to a user's SIP or SIPS URI, and subject to\n      the privacy requirements\
    \ expressed in the incoming MESSAGE request\n      (see RFC 3323 [RFC3323]), the\
    \ MESSAGE URI-list service MAY insert\n      a P-Asserted-Identity header with\
    \ the value of the user's asserted\n      URI.\n   o  If the incoming MESSAGE\
    \ request contains an Authorization or\n      Proxy-Authorization header field\
    \ whose realm is set to the MESSAGE\n      URI-list server's realm, then the MESSAGE\
    \ URI-list service SHOULD\n      NOT copy it to the outgoing MESSAGE request;\
    \ otherwise (i.e., if\n      the Authorization or Proxy-Authorization header field\
    \ of incoming\n      MESSAGE request contains a different realm), the MESSAGE\
    \ URI-list\n      service MUST copy the value to the respective header field of\
    \ the\n      outgoing MESSAGE request.\n   o  A MESSAGE URI-list service SHOULD\
    \ create a separate count for the\n      CSeq header field [RFC3261] of the outgoing\
    \ MESSAGE request.\n   o  A MESSAGE URI-list service SHOULD initialize the value\
    \ of the Max-\n      Forward header field of the outgoing MESSAGE request.\n \
    \  o  A MESSAGE URI-list service MUST include its own value in the Via\n     \
    \ header field.\n"
- title: 7.3.  Composing Bodies in the Outgoing MESSAGE Request
  contents:
  - "7.3.  Composing Bodies in the Outgoing MESSAGE Request\n   When creating the\
    \ body of each of the outgoing MESSAGE requests, the\n   MESSAGE URI-list service\
    \ keeps the relevant bodies of the incoming\n   MESSAGE request and copies them\
    \ to the outgoing MESSAGE request.  The\n   following guidelines constitute exceptions\
    \ to the general body\n   handling:\n   o  A MESSAGE request received at a MESSAGE\
    \ URI-list service can\n      contain one or more security bodies (e.g., S/MIME,\
    \ RFC 3851\n      [RFC3851]) encrypted with the public key of the MESSAGE URI-list\n\
    \      service.  These bodies are deemed to be read by the URI-list\n      service\
    \ rather than the recipient of the outgoing MESSAGE request\n      (which will\
    \ not be able to decrypt them).  Therefore, a MESSAGE\n      URI-list service\
    \ MUST NOT copy any security body (such as an\n      S/MIME as per RFC 3851 [RFC3851]\
    \ encrypted body) addressed to the\n      MESSAGE URI-list service to the outgoing\
    \ MESSAGE request.  This\n      includes bodies encrypted with the public key\
    \ of the URI-list\n      service.\n   o  The incoming MESSAGE request typically\
    \ contains a recipient-list\n      body or reference, as indicated in RFC 5363\
    \ [RFC5363] with the\n      actual list of recipients.  If this URI list includes\
    \ resources\n      tagged with the 'copyControl' attribute set to a value of \"\
    to\" or\n      \"cc\", the URI-list service SHOULD include a URI list in each\
    \ of\n      the outgoing MESSAGE requests.  This list SHOULD be formatted\n  \
    \    according to the resource list document format specified in RFC\n      4826\
    \ [RFC4826] and the copyControl extension specified in RFC 5364\n      [RFC5364].\
    \  The MESSAGE URI-list service MUST follow the\n      procedures specified in\
    \ RFC 5364 [RFC5364] with respect to\n      handling of the 'anonymize', 'count',\
    \ and 'copyControl'\n      attributes.\n   o  If the MESSAGE URI-list service\
    \ includes a URI list in an outgoing\n      MESSAGE request, it MUST include a\
    \ Content-Disposition header\n      field as per RFC 2183 [RFC2183] with the value\
    \ set to 'recipient-\n      list-history' and a \"handling\" parameter as per\
    \ RFC 3204 [RFC3204]\n      set to \"optional\".\n   o  If a MESSAGE URI-list\
    \ service includes a URI list in an outgoing\n      MESSAGE request, it SHOULD\
    \ use S/MIME (RFC 3851) [RFC3851] to\n      encrypt the URI list with the public\
    \ key of the receiver.\n   o  The MESSAGE URI-list service SHOULD copy all the\
    \ remaining message\n      bodies (e.g., text messages, images, etc.) of the incoming\
    \ MESSAGE\n      request to the outgoing MESSAGE request.\n   o  If there is only\
    \ one body left, the MESSAGE URI-list service MUST\n      remove the multipart/mixed\
    \ wrapper in the outgoing MESSAGE\n      request.\n   The rest of the MESSAGE\
    \ request corresponding to a given URI in the\n   URI list MUST be created following\
    \ the rules in Section 19.1.5,\n   \"Forming Requests from a URI\", of RFC 3261\
    \ [RFC3261].  In particular,\n   Section 19.1.5 of RFC 3261 [RFC3261] states:\n\
    \      \"An implementation SHOULD treat the presence of any headers or\n     \
    \ body parts in the URI as a desire to include them in the message,\n      and\
    \ choose to honor the request on a per-component basis.\"\n   SIP allows to append\
    \ a \"method\" parameter to a URI.  Therefore, it is\n   legitimate that the 'uri'\
    \ attribute of the <entry> element in the XML\n   resource list contains a \"\
    method\" parameter.  MESSAGE URI-list\n   services MUST generate only MESSAGE\
    \ requests, regardless of the\n   \"method\" parameter that the URIs in the list\
    \ indicate.  Effectively,\n   MESSAGE URI-list services MUST ignore the \"method\"\
    \ parameter in each\n   of the URIs present in the URI list.\n"
- title: 8.  Procedures at the UAS
  contents:
  - "8.  Procedures at the UAS\n   A UAS (in this specification, also known as intended\
    \ recipient UAS)\n   that receives a MESSAGE request from the MESSAGE URI-list\
    \ service\n   behaves as specified in RFC 3428 [RFC3428] Section 7.\n   If the\
    \ UAS supports this specification and the MESSAGE request\n   contains a body\
    \ with a Content-Disposition header field as per RFC\n   2183 [RFC2183] set to\
    \ 'recipient-list-history', then the UAS will be\n   able to determine the SIP\
    \ Address-of-Record (AOR) of the other\n   intended recipients of the MESSAGE\
    \ request.  This allows the user to\n   create a reply request (e.g., MESSAGE,\
    \ INVITE) to the sender and the\n   rest of the recipients included in the URI\
    \ list.\n"
- title: 9.  Examples
  contents:
  - "9.  Examples\n   Figure 1 shows an example of operation.  A SIP UAC issuer sends\
    \ a\n   MESSAGE request.  The MESSAGE URI-list service answers with a 202\n  \
    \ (Accepted) response and sends a MESSAGE request to each of the\n   intended\
    \ recipients.\n   +--------+        +---------+      +--------+ +--------+ +--------+\n\
    \   |SIP UAC |        | MESSAGE |      |intended| |intended| |intended|\n   |\
    \ issuer |        | URI-list|      | recip. | | recip. | | recip. |\n   |    \
    \    |        | service |      |   1    | |   2    | |   n    |\n   +--------+\
    \        +---------+      +--------+ +--------+ +--------+\n       |         \
    \         |               |          |          |\n       | F1 MESSAGE       |\
    \               |          |          |\n       | ---------------->|         \
    \      |          |          |\n       | F2 202 Accepted  |               |  \
    \        |          |\n       |<---------------- |  F3 MESSAGE   |          |\
    \          |\n       |                  | ------------->|          |         \
    \ |\n       |                  |  F4 MESSAGE   |          |          |\n     \
    \  |                  | ------------------------>|          |\n       |      \
    \            |  F5 MESSAGE   |          |          |\n       |               \
    \   | ----------------------------------->|\n       |                  |  F6 200\
    \ OK    |          |          |\n       |                  |<------------- | \
    \         |          |\n       |                  |  F7 200 OK    |          |\
    \          |\n       |                  |<------------------------ |         \
    \ |\n       |                  |  F8 200 OK    |          |          |\n     \
    \  |                  |<----------------------------------- |\n       |      \
    \            |               |          |          |\n       |               \
    \   |               |          |          |\n       |                  |     \
    \          |          |          |\n                      Figure 1: Example of\
    \ operation\n   The MESSAGE request F1 (shown in Figure 2) contains a multipart/mixed\n\
    \   body that is composed of two bodies: a text/plain body containing the\n  \
    \ instant message payload and an application/resource-lists+xml body\n   containing\
    \ the list of recipients.\n   MESSAGE sip:list-service.example.com SIP/2.0\n \
    \  Via: SIP/2.0/TCP uac.example.com\n       ;branch=z9hG4bKhjhs8ass83\n   Max-Forwards:\
    \ 70\n   To: MESSAGE URI-list service <sip:list-service.example.com>\n   From:\
    \ Alice <sip:alice@example.com>;tag=32331\n   Call-ID: d432fa84b4c76e66710\n \
    \  CSeq: 1 MESSAGE\n   Require: recipient-list-message\n   Content-Type: multipart/mixed;boundary=\"\
    boundary1\"\n   Content-Length: 501\n   --boundary1\n   Content-Type: text/plain\n\
    \   Hello World!\n   --boundary1\n   Content-Type: application/resource-lists+xml\n\
    \   Content-Disposition: recipient-list\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <resource-lists xmlns=\"urn:ietf:params:xml:ns:resource-lists\"\n\
    \             xmlns:cp=\"urn:ietf:params:xml:ns:copycontrol\">\n     <list>\n\
    \       <entry uri=\"sip:bill@example.com\" cp:copyControl=\"to\" />\n       <entry\
    \ uri=\"sip:randy@example.net\" cp:copyControl=\"to\"\n                      \
    \                    cp:anonymize=\"true\"/>\n       <entry uri=\"sip:eddy@example.com\"\
    \ cp:copyControl=\"to\"\n                                         cp:anonymize=\"\
    true\"/>\n       <entry uri=\"sip:joe@example.org\" cp:copyControl=\"cc\" />\n\
    \       <entry uri=\"sip:carol@example.net\" cp:copyControl=\"cc\"\n         \
    \                                 cp:anonymize=\"true\"/>\n       <entry uri=\"\
    sip:ted@example.net\" cp:copyControl=\"bcc\" />\n       <entry uri=\"sip:andy@example.com\"\
    \ cp:copyControl=\"bcc\" />\n     </list>\n   </resource-lists>\n   --boundary1--\n\
    \     Figure 2: MESSAGE request received at the MESSAGE URI-list server\n   The\
    \ MESSAGE requests F3, F4, and F5 are similar in nature.  All those\n   MESSAGE\
    \ requests contain a multipart/mixed body that is composed of\n   two other bodies:\
    \ a text/plain body containing the instant message\n   payload and an application/resource-lists+xml\
    \ containing the list of\n   recipients.  Unlike the text/plain body, the application/\n\
    \   resource-lists+xml bodies of MESSAGE requests F3, F4, and F5 are not\n   equal\
    \ to the application/resource-lists+xml body included in the\n   incoming MESSAGE\
    \ request F1.  This is because the URI-list service\n   has anonymized those URIs\
    \ tagged with the 'anonymize' attribute and\n   has removed those URIs tagged\
    \ with a \"bcc\" 'copyControl' attribute;\n   besides, the content disposition\
    \ of these bodies is different.\n   Figure 3 shows an example of the MESSAGE request\
    \ F3.\n   MESSAGE sip:bill@example.com SIP/2.0\n   Via: SIP/2.0/TCP list-service.example.com\n\
    \       ;branch=z9hG4bKhjhs8as34sc\n   Max-Forwards: 70\n   To: <sip:bill@example.com>\n\
    \   From: Alice <sip:alice@example.com>;tag=210342\n   Call-ID: 39s02sdsl20d9sj2l\n\
    \   CSeq: 1 MESSAGE\n   Content-Type: multipart/mixed;boundary=\"boundary1\"\n\
    \   Content-Length: 501\n   --boundary1\n   Content-Type: text/plain\n   Hello\
    \ World!\n   --boundary1\n   Content-Type: application/resource-lists+xml\n  \
    \ Content-Disposition: recipient-list-history; handling=optional\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <resource-lists xmlns=\"urn:ietf:params:xml:ns:resource-lists\"\
    \n             xmlns:cp=\"urn:ietf:params:xml:ns:copycontrol\">\n     <list>\n\
    \       <entry uri=\"sip:bill@example.com\" cp:copyControl=\"to\" />\n       <entry\
    \ uri=\"sip:anonymous@anonymous.invalid\" cp:copyControl=\"to\"\n            \
    \                                        cp:count=\"2\"/>\n       <entry uri=\"\
    sip:joe@example.org\" cp:copyControl=\"cc\" />\n       <entry uri=\"sip:anonymous@anonymous.invalid\"\
    \ cp:copyControl=\"cc\"\n                                                    cp:count=\"\
    1\"/>\n     </list>\n   </resource-lists>\n   --boundary1--\n       Figure 3:\
    \ MESSAGE request sent by the MESSAGE URI-list server\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   RFC 5363 [RFC5363] discusses issues related\
    \ to SIP URI-list services.\n   Implementations of MESSAGE URI-list services MUST\
    \ follow the\n   security-related rules in RFC 5363 [RFC5363].  These rules include\n\
    \   opt-in lists and mandatory authentication and authorization of\n   clients.\n\
    \   If the contents of the instant message needs to be kept private, the\n   User\
    \ Agent Client SHOULD use S/MIME as per RFC 3851 [RFC3851] to\n   prevent a third\
    \ party from viewing this information.  In this case,\n   the user agent client\
    \ SHOULD encrypt the instant message body with a\n   content encryption key. \
    \ Then, for each receiver in the list, the UAC\n   SHOULD encrypt the content\
    \ encryption key with the public key of the\n   receiver, and attach it to the\
    \ MESSAGE request.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   This document defines the SIP option tag 'recipient-list-message'\n\
    \   The following row has been added to the \"Option Tags\" section of the\n \
    \  SIP Parameter Registry:\n   +------------------------+------------------------------+-----------+\n\
    \   | Name                   | Description                  | Reference |\n  \
    \ +------------------------+------------------------------+-----------+\n   |\
    \ recipient-list-message | The body contains a list of  | [RFC5365] |\n   |  \
    \                      | URIs that indicates the      |           |\n   |    \
    \                    | recipients of the SIP        |           |\n   |      \
    \                  | MESSAGE request              |           |\n   +------------------------+------------------------------+-----------+\n\
    \     Table 1: Registration of the 'recipient-list-message' Option-Tag\n     \
    \                             in SIP\n"
- title: 12.  Acknowledgements
  contents:
  - "12.  Acknowledgements\n   Duncan Mills supported the idea of having 1 to n MESSAGEs.\
    \  Ben\n   Campbell, Paul Kyzivat, Cullen Jennings, Jonathan Rosenberg, Dean\n\
    \   Willis, and Keith Drage provided helpful comments.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2183]  Troost, R., Dorner, S., and K. Moore, \"Communicating\n\
    \              Presentation Information in Internet Messages: The\n          \
    \    Content-Disposition Header Field\", RFC 2183, August 1997.\n   [RFC2617]\
    \  Franks, J., Hallam-Baker, P., Hostetler, J., Lawrence, S.,\n              Leach,\
    \ P., Luotonen, A., and L. Stewart, \"HTTP\n              Authentication: Basic\
    \ and Digest Access Authentication\",\n              RFC 2617, June 1999.\n  \
    \ [RFC3204]  Zimmerer, E., Peterson, J., Vemuri, A., Ong, L., Audet,\n       \
    \       F., Watson, M., and M. Zonoun, \"MIME media types for ISUP\n         \
    \     and QSIG Objects\", RFC 3204, December 2001.\n   [RFC3261]  Rosenberg, J.,\
    \ Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J., Sparks,\
    \ R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\"\
    , RFC 3261,\n              June 2002.\n   [RFC3323]  Peterson, J., \"A Privacy\
    \ Mechanism for the Session\n              Initiation Protocol (SIP)\", RFC 3323,\
    \ November 2002.\n   [RFC3325]  Jennings, C., Peterson, J., and M. Watson, \"\
    Private\n              Extensions to the Session Initiation Protocol (SIP) for\n\
    \              Asserted Identity within Trusted Networks\", RFC 3325,\n      \
    \        November 2002.\n   [RFC3428]  Campbell, B., Rosenberg, J., Schulzrinne,\
    \ H., Huitema, C.,\n              and D. Gurle, \"Session Initiation Protocol\
    \ (SIP) Extension\n              for Instant Messaging\", RFC 3428, December 2002.\n\
    \   [RFC3851]  Ramsdell, B., \"Secure/Multipurpose Internet Mail\n           \
    \   Extensions (S/MIME) Version 3.1 Message Specification\",\n              RFC\
    \ 3851, July 2004.\n   [RFC4826]  Rosenberg, J., \"Extensible Markup Language\
    \ (XML) Formats\n              for Representing Resource Lists\", RFC 4826, May\
    \ 2007.\n   [RFC5363]  Camarillo, G. and A.B. Roach, \"Framework and Security\n\
    \              Considerations for Session Initiation Protocol (SIP) URI-\n   \
    \           List Services\", RFC 5363, October 2008.\n   [RFC5364]  Garcia-Martin,\
    \ M. and G. Camarillo, \"Extensible Markup\n              Language (XML) Format\
    \ Extension for Representing Copy\n              Control Attributes in Resource\
    \ Lists\", RFC 5364,\n              October 2008.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [RFC4825]  Rosenberg, J., \"The Extensible\
    \ Markup Language (XML)\n              Configuration Access Protocol (XCAP)\"\
    , RFC 4825, May 2007.\n   [RFC4975]  Campbell, B., Mahy, R., and C. Jennings,\
    \ \"The Message\n              Session Relay Protocol (MSRP)\", RFC 4975, September\
    \ 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Miguel A. Garcia-Martin\n   Ericsson\n   Via de los Poblados\
    \ 13\n   Madrid  28033\n   Spain\n   EMail: miguel.a.garcia@ericsson.com\n   Gonzalo\
    \ Camarillo\n   Ericsson\n   Hirsalantie 11\n   Jorvas  02420\n   Finland\n  \
    \ EMail: Gonzalo.Camarillo@ericsson.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
