- title: __initial_text__
  contents:
  - '    Issues and Recommendations with Multiple Stateful DHCPv6 Options

    '
- title: Abstract
  contents:
  - "Abstract\n   The Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\n   specification\
    \ defined two stateful options, IA_NA and IA_TA, but did\n   not anticipate the\
    \ development of additional stateful options.\n   DHCPv6 Prefix Delegation added\
    \ the IA_PD option, which is stateful.\n   Applications that use IA_NA and IA_PD\
    \ together have revealed issues\n   that need to be addressed.  This document\
    \ updates RFCs 3315 and 3633\n   to address these issues.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7550.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Conventions . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Handling of Multiple IA Option Types  . . . . . . . . . .\
    \ . .   4\n     4.1.  Placement of Status Codes in an Advertise Message . . .\
    \ .   6\n     4.2.  Advertise Message Processing by a Client  . . . . . . . .\
    \   8\n     4.3.  T1/T2 Timers  . . . . . . . . . . . . . . . . . . . . . .  \
    \ 9\n     4.4.  Renew and Rebind Messages . . . . . . . . . . . . . . . .  10\n\
    \       4.4.1.  Renew Message . . . . . . . . . . . . . . . . . . . .  10\n  \
    \     4.4.2.  Rebind Message  . . . . . . . . . . . . . . . . . . .  11\n    \
    \   4.4.3.  Updates to Section 18.1.3 of RFC 3315 . . . . . . . .  11\n      \
    \ 4.4.4.  Updates to Section 18.1.4 of RFC 3315 . . . . . . . .  13\n       4.4.5.\
    \  Updates to Section 18.1.8 of RFC 3315 . . . . . . . .  14\n       4.4.6.  Updates\
    \ to Section 18.2.3 of RFC 3315 . . . . . . . .  16\n       4.4.7.  Updates to\
    \ Section 18.2.4 of RFC 3315 . . . . . . . .  18\n       4.4.8.  Updates to RFC\
    \ 3633 . . . . . . . . . . . . . . . . .  20\n     4.5.  Confirm Message . . .\
    \ . . . . . . . . . . . . . . . . . .  21\n     4.6.  Decline Should Not Necessarily\
    \ Trigger a Release  . . . .  22\n     4.7.  Multiple Provisioning Domains . .\
    \ . . . . . . . . . . . .  22\n   5.  Security Considerations . . . . . . . .\
    \ . . . . . . . . . . .  22\n   6.  References  . . . . . . . . . . . . . . .\
    \ . . . . . . . . . .  22\n     6.1.  Normative References  . . . . . . . . .\
    \ . . . . . . . . .  22\n     6.2.  Informative References  . . . . . . . . .\
    \ . . . . . . . .  23\n   Acknowledgements  . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  24\n   Authors' Addresses  . . . . . . . . . . . . . . . . .\
    \ . . . . . .  24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   DHCPv6 [RFC3315] was written without the expectation that\
    \ additional\n   stateful DHCPv6 options would be developed.  DHCPv6 Prefix Delegation\n\
    \   [RFC3633] since added a new stateful option for Prefix Delegation to\n   DHCPv6.\
    \  Implementation experience of the Customer Edge (CE) router\n   model described\
    \ in [RFC7084] has shown issues with the DHCPv6\n   protocol in supporting multiple\
    \ stateful option types, in particular\n   IA_NA (non-temporary addresses) and\
    \ IA_PD (delegated prefixes).\n   This document describes a number of problems\
    \ encountered with\n   coexistence of the IA_NA and IA_PD option types and specifies\
    \ changes\n   to the DHCPv6 protocol to address these problems.\n   The intention\
    \ of this work is to clarify and, where needed, modify\n   the DHCPv6 protocol\
    \ specification to support IA_NA and IA_PD option\n   types within a single DHCPv6\
    \ session.\n   Note that while IA_TA (temporary addresses) options may be included\n\
    \   with other IA option type requests, these generally are not renewed\n   (there\
    \ are no T1/T2 times) and have a separate life cycle from IA_NA\n   and IA_PD\
    \ option types.  Therefore, the IA_TA option type is mostly\n   out of scope for\
    \ this document.\n   The changes described in this document are intended to be\n\
    \   incorporated in a new revision of the DHCPv6 protocol specification\n   [DHCPv6].\n"
- title: 2.  Conventions
  contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   In addition to the terminology defined in [RFC3315], [RFC3633],\
    \ and\n   [RFC7227], the following terminology is used in this document:\n   Identity\
    \ Association (IA):  Throughout this document, \"IA\" is used to\n      refer\
    \ to the Identity Association containing addresses or prefixes\n      assigned\
    \ to a client and carried in the IA_NA or IA_PD options,\n      respectively.\n\
    \   IA option types:  This is used to generally mean an IA_NA and/or\n      IA_PD\
    \ option.\n   Stateful options:  Options that require a dynamic binding state\
    \ per\n      client on the server.\n   Top-level options:  Top-level options are\
    \ DHCPv6 options that are not\n      encapsulated within other options, excluding\
    \ the Relay Message\n      option.  Options encapsulated by Relay Message options,\
    \ but not by\n      any other option, are still top-level options, whether they\
    \ appear\n      in a relay agent message or a server message; see [RFC7227].\n"
- title: 4.  Handling of Multiple IA Option Types
  contents:
  - "4.  Handling of Multiple IA Option Types\n   The DHCPv6 specification [RFC3315]\
    \ was written with the assumption\n   that the only stateful options were for\
    \ assigning addresses.  DHCPv6\n   Prefix Delegation [RFC3633] describes how to\
    \ extend the DHCPv6\n   protocol to handle prefix delegation, but does not clearly\
    \ specify\n   how the DHCP address assignment and prefix delegation coexist.\n\
    \   If a client requests multiple IA option types, but the server is\n   configured\
    \ to only offer a subset of them, the client could react in\n   several ways:\n\
    \   1.  Reset the state machine and continue to send Solicit messages,\n   2.\
    \  Create separate DHCP sessions for each IA option type and\n       continue\
    \ to Solicit for the unfulfilled IA options, or\n   3.  The client could continue\
    \ with the single session and include the\n       unfulfilled IA options in subsequent\
    \ messages to the server.\n   Resetting the state machine and continuing to send\
    \ Solicit messages\n   may result in the client never completing DHCP and is generally\
    \ not\n   considered a good solution.  It can also result in a packet storm if\n\
    \   the client does not appropriately rate limit its sending of Solicit\n   messages\
    \ or if there are many clients on the network.  Client\n   implementors that follow\
    \ this approach SHOULD implement the updates\n   to RFC 3315 specified in [RFC7083].\n\
    \   Creating a separate DHCP session (separate instances of the client\n   state\
    \ machine) per IA option type, while conceptually simple, causes\n   a number\
    \ of issues: additional host resources required to create and\n   maintain multiple\
    \ instances of the state machine in clients,\n   additional DHCP protocol traffic,\
    \ unnecessary duplication of other\n   configuration options and the potential\
    \ for conflict, and divergence\n   in that each IA option type specification specifies\
    \ its 'own' version\n   of the DHCP protocol.\n   The single session and state\
    \ machine allows the client to use the\n   best configuration it is able to obtain\
    \ from a single DHCP server\n   during the configuration exchange.  Note, however,\
    \ that the server\n   may not be configured to deliver the entire configuration\
    \ requested\n   by the client.  In that case, the client could continue to operate\n\
    \   only using the configuration received, even if other servers can\n   provide\
    \ the missing configuration.  In practice, especially in the\n   case of handling\
    \ IA_NA and IA_PD, this situation should be rare or a\n   temporary operational\
    \ error.  So, it is more likely for the client to\n   get all configuration if\
    \ it continues, in each subsequent\n   configuration exchange, to request all\
    \ the configuration information\n   it is programmed to try to obtain, including\
    \ any stateful\n   configuration options for which no results were returned in\
    \ previous\n   exchanges.\n   One major issue of this last approach is that it\
    \ is difficult to\n   allow it with the current DHCPv6 specifications; in some\
    \ cases they\n   are not clear enough, and in other cases existing restrictions\
    \ can\n   make it impossible.  This document introduces some clarifications and\n\
    \   small modifications to the current specifications to address these\n   concerns.\n\
    \   While all approaches have their own pros and cons, approach number 3\n   above\
    \ SHOULD be used and is the focus of this document because it is\n   deemed to\
    \ work best for common cases of the mixed use of IA_NA and\n   IA_PD.  But this\
    \ document does not exclude other approaches.  Also,\n   in some corner cases\
    \ it may not be feasible to maintain a single\n   DHCPv6 session for both IA_NA\
    \ and IA_PD.  These corner cases are\n   beyond the scope of this document and\
    \ may depend on the network in\n   which the client (CE router) is designed to\
    \ operate and on the\n   functions the client is required to perform.\n   The\
    \ sections that follow update RFCs 3315 and 3633 to accommodate the\n   recommendation,\
    \ though many of the changes are also applicable even\n   if other approaches\
    \ are used.\n"
- title: 4.1.  Placement of Status Codes in an Advertise Message
  contents:
  - "4.1.  Placement of Status Codes in an Advertise Message\n   In Reply messages,\
    \ IA-specific status codes (i.e., NoAddrsAvail,\n   NotOnLink, NoBinding, and\
    \ NoPrefixAvail) are encapsulated in the IA\n   option.  In Advertise messages\
    \ though, the NoAddrsAvail code is\n   returned at the top level.  This makes\
    \ sense if the client is only\n   interested in the assignment of the addresses\
    \ and the failure case is\n   fatal.  However, if the client sends both IA_NA\
    \ and IA_PD options in\n   a Solicit message, it is possible that the server will\
    \ offer some\n   prefixes but no addresses, and the client may choose to send\
    \ a\n   Request message to obtain the offered prefixes.  In this case, it is\n\
    \   better if the Status Code option for IA-specific status codes is\n   encapsulated\
    \ in the IA option to indicate that the failure occurred\n   for the specific\
    \ IA.  This also makes the NoAddrsAvail and\n   NoPrefixAvail Status Code option\
    \ placement for Advertise messages\n   identical to Reply messages.\n   In addition,\
    \ how a server formats the Advertise message when\n   addresses are not available\
    \ has been a point of some confusion and\n   implementations seem to vary (some\
    \ strictly follow RFC 3315 while\n   others assumed it was encapsulated in the\
    \ IA option as for Reply\n   messages).\n   We have chosen the following solution:\n\
    \   Clients MUST handle each of the following Advertise message formats\n   when\
    \ there are no addresses available (even when no other IA option\n   types were\
    \ in the Solicit):\n   1.  Advertise containing the IA_NAs and/or IA_TAs with\
    \ an\n       encapsulated Status Code option of NoAddrsAvail and no top-level\n\
    \       Status Code option.\n   2.  Advertise containing just a top-level Status\
    \ Code option of\n       NoAddrsAvail and no IA_NAs/IA_TAs.\n   3.  Advertise\
    \ containing a top-level Status Code option of\n       NoAddrsAvail and IA_NAs\
    \ and/or IA_TAs with a Status Code option\n       of NoAddrsAvail.\n   Note: Clients\
    \ MUST handle the last two formats listed above to\n   facilitate backward compatibility\
    \ with the servers that have not been\n   updated to this specification.\n   See\
    \ Section 4.2 for updated text for Section 17.1.3 of RFC 3315 and\n   Section\
    \ 11.1 of RFC 3633.\n   Servers MUST return the Status Code option of NoAddrsAvail\n\
    \   encapsulated in IA_NA/IA_TA options and MUST NOT return a top-level\n   Status\
    \ Code option of NoAddrsAvail when no addresses will be assigned\n   (number 1\
    \ in the above list).  This means that the Advertise response\n   matches the\
    \ Reply response with respect to the handling of the\n   NoAddrsAvail status.\n\
    \   Replace the following paragraph in RFC 3315, Section 17.2.2:\n      If the\
    \ server will not assign any addresses to any IAs in a\n      subsequent Request\
    \ from the client, the server MUST send an\n      Advertise message to the client\
    \ that includes only a Status\n      Code option with code NoAddrsAvail and a\
    \ status message for\n      the user, a Server Identifier option with the server's\
    \ DUID,\n      and a Client Identifier option with the client's DUID.\n   With\
    \ the following text (which addresses the existing erratum\n   [Err2472]):\n \
    \     If the server will not assign any addresses to an IA in a\n      subsequent\
    \ Request from the client, the server MUST include\n      the IA in the Advertise\
    \ message with no addresses in the IA\n      and a Status Code option encapsulated\
    \ in the IA containing\n      status code NoAddrsAvail.\n"
- title: 4.2.  Advertise Message Processing by a Client
  contents:
  - "4.2.  Advertise Message Processing by a Client\n   [RFC3315] specifies that a\
    \ client must ignore an Advertise message if\n   a server will not assign any\
    \ addresses to a client, and [RFC3633]\n   specifies that a client must ignore\
    \ an Advertise message if a server\n   returns the NoPrefixAvail status to a requesting\
    \ router.  Thus, a\n   client requesting both IA_NA and IA_PD, with a server that\
    \ only\n   offers either addresses or delegated prefixes, is not supported by\n\
    \   the current protocol specifications.\n   Solution: a client SHOULD accept\
    \ Advertise messages, even when not\n   all IA option types are being offered.\
    \  And, in this case, the client\n   SHOULD include the not offered IA option\
    \ types in its Request.  A\n   client SHOULD only ignore an Advertise message\
    \ when none of the\n   requested IA options include offered addresses or delegated\
    \ prefixes.\n   Note that ignored messages MUST still be processed for SOL_MAX_RT\
    \ and\n   INF_MAX_RT options as specified in [RFC7083].\n   Replace Section 17.1.3\
    \ of RFC 3315: (existing errata)\n     The client MUST ignore any Advertise message\
    \ that includes a Status\n     Code option containing the value NoAddrsAvail,\
    \ with the exception\n     that the client MAY display the associated status message(s)\
    \ to the\n     user.\n   With the following text (which addresses the existing\
    \ erratum\n   [Err2471] and includes the changes made by [RFC7083]):\n     The\
    \ client MUST ignore any Advertise message that contains no\n     addresses (IAADDR\
    \ options encapsulated in IA_NA or IA_TA options)\n     and no delegated prefixes\
    \ (IAPREFIX options encapsulated in IA_PD\n     options; see RFC 3633) with the\
    \ exception that the client:\n       - MUST process an included SOL_MAX_RT option\
    \ (RFC 7083) and\n       - MUST process an included INF_MAX_RT option (RFC 7083).\n\
    \     A client can display any associated status message(s) to the user\n    \
    \ or activity log.\n     The client ignoring this Advertise message MUST NOT restart\
    \ the\n     Solicit retransmission timer.\n   And, replace:\n     -  The client\
    \ MAY choose a less-preferred server if that server\n        has a better set\
    \ of advertised parameters, such as the\n        available addresses advertised\
    \ in IAs.\n   With:\n     -  The client MAY choose a less-preferred server if\
    \ that server has\n        a better set of advertised parameters, such as the\
    \ available set\n        of IAs, as well as the set of other configuration options\n\
    \        advertised.\n   And, replace the last paragraph of Section 11.1 of RFC\
    \ 3633 with the\n   following text (which addresses the existing erratum [Err2469]):\n\
    \     The requesting router MUST ignore any Advertise message that\n     contains\
    \ no addresses (IAADDR options encapsulated in IA_NA or\n     IA_TA options) and\
    \ no delegated prefixes (IAPREFIX options\n     encapsulated in IA_PD options;\
    \ see RFC 3633) with the exception\n     that the requesting router:\n       -\
    \ MUST process an included SOL_MAX_RT option (RFC 7083) and\n       - MUST process\
    \ an included INF_MAX_RT option (RFC 7083).\n     A client can display any associated\
    \ status message(s) to the user\n     or activity log.\n     The requesting router\
    \ ignoring this Advertise message MUST NOT\n     restart the Solicit retransmission\
    \ timer.\n"
- title: 4.3.  T1/T2 Timers
  contents:
  - "4.3.  T1/T2 Timers\n   The T1 and T2 times determine when the client will contact\
    \ the server\n   to extend lifetimes of information received in an IA.  How should\
    \ a\n   client handle the case where multiple IA options have different T1\n \
    \  and T2 times?\n   In a multiple IA option type model, the T1/T2 times are protocol\n\
    \   timers that should be independent of the IA options themselves.  If\n   we\
    \ were to redo the DHCP protocol from scratch, the T1/T2 times\n   should be carried\
    \ in a separate DHCP option.\n   Solution: The server MUST set the T1/T2 times\
    \ in all IA options in a\n   Reply or Advertise message to the same value.  To\
    \ deal with the case\n   where servers have not yet been updated to do that, the\
    \ client MUST\n   select a T1 and T2 time from all IA options, which will guarantee\n\
    \   that the client will send Renew/Rebind messages not later than at the\n  \
    \ T1/T2 times associated with any of the client's bindings.\n   As an example,\
    \ if the client receives a Reply with T1_NA of 3600 /\n   T2_NA of 5760 and T1_PD\
    \ of 0 / T2_PD of 1800, the client SHOULD use\n   the T1_PD of 0 / T2_PD of 1800.\
    \  The reason for this is that a T1 of\n   0 means that the Renew time is at the\
    \ client's discretion, but this\n   value cannot be greater than the T2 value\
    \ (1800).\n   The following paragraph should be added to Sections 18.2.1, 18.2.3,\n\
    \   and 18.2.4 of RFC 3315:\n     The T1/T2 times set in each applicable IA option\
    \ for a Reply MUST\n     be the same values across all IAs.  The server MUST determine\
    \ the\n     T1/T2 times across all of the applicable client's bindings in the\n\
    \     Reply.  This facilitates the client being able to renew all of the\n   \
    \  bindings at the same time.\n   Note: This additional paragraph has also been\
    \ included in the revised\n   text later in this document for Sections 18.2.3\
    \ and 18.2.4 of RFC\n   3315.\n   Changes for client T1/T2 handling are included\
    \ in Sections 4.4.3 and\n   4.4.4.\n"
- title: 4.4.  Renew and Rebind Messages
  contents:
  - "4.4.  Renew and Rebind Messages\n   This section presents issues with handling\
    \ multiple IA option types\n   in the context of creation and processing the Renew\
    \ and Rebind\n   messages.  It also introduces relevant updates to [RFC3315] and\n\
    \   [RFC3633].\n"
- title: 4.4.1.  Renew Message
  contents:
  - "4.4.1.  Renew Message\n   In multiple IA option type models, the client may include\
    \ multiple IA\n   options in the Request message, and the server may create bindings\n\
    \   only for a subset of the IA options included by the client.  For the\n   IA\
    \ options in the Request message for which the server does not\n   create the\
    \ bindings, the server sends the IA options in the Reply\n   message with the\
    \ NoAddrsAvail or NoPrefixAvail status codes.\n   The client may accept the bindings\
    \ created by the server, but may\n   desire the other bindings to be created once\
    \ they become available,\n   e.g., when the server configuration is changed. \
    \ The client that\n   accepted the bindings created by the server will periodically\
    \ send a\n   Renew message to extend their lifetimes.  However, the Renew message,\n\
    \   as described in [RFC3315], does not support the ability for the\n   client\
    \ to extend the lifetimes of the bindings for some IAs, while\n   requesting bindings\
    \ for other IAs.\n   Solution: The client, which sends a Renew message to extend\
    \ the\n   lifetimes of the bindings assigned to the client, SHOULD include IA\n\
    \   options for these bindings as well as IA options for all other\n   bindings\
    \ that the client desires but has been unable to obtain.  The\n   client and server\
    \ processing need to be modified.  Note that this\n   change makes the server's\
    \ IA processing of Renew similar to the\n   Request processing.\n"
- title: 4.4.2.  Rebind Message
  contents:
  - "4.4.2.  Rebind Message\n   According to Section 4.4.1, the client includes IA\
    \ options in a Renew\n   message for the bindings it desires but has been unable\
    \ to obtain by\n   sending a Request message, apart from the IA options for the\
    \ existing\n   bindings.\n   At time T2, the client stops sending Renew messages\
    \ to the server and\n   initiates the Rebind/Reply message exchange with any available\n\
    \   server.  In this case, it should be possible to continue trying to\n   obtain\
    \ new bindings using the Rebind message if the client failed to\n   get the response\
    \ from the server to the Renew message.\n   Solution: The client SHOULD continue\
    \ to include the IA options\n   received from the server, and it MAY include additional\
    \ IA options to\n   request creation of the additional bindings.\n"
- title: 4.4.3.  Updates to Section 18.1.3 of RFC 3315
  contents:
  - "4.4.3.  Updates to Section 18.1.3 of RFC 3315\n   Replace Section 18.1.3 of RFC\
    \ 3315 with the following text:\n     To extend the valid and preferred lifetimes\
    \ for the addresses\n     assigned to an IA, the client sends a Renew message\
    \ to the server\n     from which the addresses were obtained, which includes an\
    \ IA option\n     for the IA whose address lifetimes are to be extended.  The\
    \ client\n     includes IA Address options within the IA option for the addresses\n\
    \     assigned to the IA.  The server determines new lifetimes for these\n   \
    \  addresses according to the administrative configuration of the\n     server.\
    \  The server may also add new addresses to the IA.  The\n     server can remove\
    \ addresses from the IA by returning IA Address\n     options for such addresses\
    \ with preferred and valid lifetimes set\n     to 0.\n     The server controls\
    \ the time at which the client contacts the\n     server to extend the lifetimes\
    \ on assigned addresses through the T1\n     and T2 parameters assigned to an\
    \ IA.  However, as the client\n     Renews/Rebinds all IAs from the server at\
    \ the same time, the client\n     MUST select a T1 and T2 time from all IA options,\
    \ which will\n     guarantee that the client will send Renew/Rebind messages not\
    \ later\n     than at the T1/T2 times associated with any of the client's\n  \
    \   bindings.\n     At time T1, the client initiates a Renew/Reply message exchange\
    \ to\n     extend the lifetimes on any addresses in the IA.\n     If T1 or T2\
    \ had been set to 0 by the server (for an IA_NA) or there\n     are no T1 or T2\
    \ times (for an IA_TA) in a previous Reply, the\n     client may send a Renew\
    \ or Rebind message, respectively, at the\n     client's discretion.\n     The\
    \ client sets the \"msg-type\" field to RENEW.  The client\n     generates a transaction\
    \ ID and inserts this value in the\n     \"transaction-id\" field.\n     The client\
    \ places the identifier of the destination server in a\n     Server Identifier\
    \ option.\n     The client MUST include a Client Identifier option to identify\n\
    \     itself to the server.  The client adds any appropriate options,\n     including\
    \ one or more IA options.\n     For IAs to which addresses have been assigned,\
    \ the client includes\n     a corresponding IA option containing an IA Address\
    \ option for each\n     address assigned to the IA.  The client MUST NOT include\
    \ addresses\n     in any IA option that the client did not obtain from the server\
    \ or\n     that are no longer valid (that have a valid lifetime of 0).\n     The\
    \ client MAY include an IA option for each binding it desires but\n     has been\
    \ unable to obtain.  This IA option MUST NOT contain any\n     addresses.  However,\
    \ it MAY contain the IA Address option with the\n     \"IPv6 address\" field set\
    \ to 0 to indicate the client's preference\n     for the preferred and valid lifetimes\
    \ for any newly assigned\n     addresses.\n     The client MUST include an Option\
    \ Request option (see section 22.7)\n     to indicate the options the client is\
    \ interested in receiving.  The\n     client MAY include options with data values\
    \ as hints to the server\n     about parameter values the client would like to\
    \ have returned.\n     The client transmits the message according to section 14,\
    \ using the\n     following parameters:\n     IRT        REN_TIMEOUT\n     MRT\
    \        REN_MAX_RT\n     MRC        0\n     MRD        Remaining time until T2\n\
    \     The message exchange is terminated when time T2 is reached (see\n     section\
    \ 18.1.4), at which time the client begins a Rebind message\n     exchange.\n"
- title: 4.4.4.  Updates to Section 18.1.4 of RFC 3315
  contents:
  - "4.4.4.  Updates to Section 18.1.4 of RFC 3315\n   Replace Section 18.1.4 of RFC\
    \ 3315 with the following text:\n     At time T2 (which will only be reached if\
    \ the server to which the\n     Renew message was sent at time T1 has not responded),\
    \ the client\n     initiates a Rebind/Reply message exchange with any available\n\
    \     server.\n     The client constructs the Rebind message as described in section\n\
    \     18.1.3 with the following differences:\n     -  The client sets the \"msg-type\"\
    \ field to REBIND.\n     -  The client does not include the Server Identifier\
    \ option in the\n        Rebind message.\n     The client transmits the message\
    \ according to section 14, using the\n     following parameters:\n     IRT   \
    \  REB_TIMEOUT\n     MRT     REB_MAX_RT\n     MRC     0\n     MRD     Remaining\
    \ time until valid lifetimes of all addresses in\n                all IAs have\
    \ expired\n     If all addresses for an IA have expired, the client may choose\
    \ to\n     include this IA without any addresses (or with only a hint for\n  \
    \   lifetimes) in subsequent Rebind messages to indicate that the\n     client\
    \ is interested in assignment of the addresses to this IA.\n     The message exchange\
    \ is terminated when the valid lifetimes of all\n     addresses across all IAs\
    \ have expired, at which time the client\n     uses the Solicit message to locate\
    \ a new DHCP server and sends a\n     Request for the expired IAs to the new server.\n"
- title: 4.4.5.  Updates to Section 18.1.8 of RFC 3315
  contents:
  - "4.4.5.  Updates to Section 18.1.8 of RFC 3315\n   Replace Section 18.1.8 of RFC\
    \ 3315 with the following text:\n     Upon the receipt of a valid Reply message\
    \ in response to a Solicit\n     (with a Rapid Commit option), Request, Confirm,\
    \ Renew, Rebind, or\n     Information-request message, the client extracts the\
    \ configuration\n     information contained in the Reply.  The client MAY choose\
    \ to\n     report any status code or message from the Status Code option in\n\
    \     the Reply message.\n     If the client receives a Reply message with a status\
    \ code\n     containing UnspecFail, the server is indicating that it was unable\n\
    \     to process the message due to an unspecified failure condition.  If\n  \
    \   the client retransmits the original message to the same server to\n     retry\
    \ the desired operation, the client MUST limit the rate at\n     which it retransmits\
    \ the message and limit the duration of the time\n     during which it retransmits\
    \ the message.\n     When the client receives a Reply message with a Status Code\
    \ option\n     with the value UseMulticast, the client records the receipt of\
    \ the\n     message and sends subsequent messages to the server through the\n\
    \     interface on which the message was received using multicast.  The\n    \
    \ client resends the original message using multicast.\n     When the client receives\
    \ a NotOnLink status from the server in\n     response to a Confirm message, the\
    \ client performs DHCP server\n     solicitation, as described in section 17,\
    \ and client-initiated\n     configuration, as described in section 18.  If the\
    \ client receives\n     any Reply messages that do not indicate a NotOnLink status,\
    \ the\n     client can use the addresses in the IA and ignore any messages that\n\
    \     indicate a NotOnLink status.\n     When the client receives a NotOnLink\
    \ status from the server in\n     response to a Request, the client can either\
    \ reissue the Request\n     without specifying any addresses or restart the DHCP\
    \ server\n     discovery process (see section 17).\n     The client SHOULD perform\
    \ duplicate address detection [17] on each\n     of the received addresses in\
    \ any IAs, on which it has not performed\n     duplicate address detection during\
    \ processing of any of the\n     previous Reply messages from the server.  The\
    \ client performs the\n     duplicate address detection before using the received\
    \ addresses for\n     the traffic.  If any of the addresses are found to be in\
    \ use on the\n     link, the client sends a Decline message to the server for\
    \ those\n     addresses as described in section 18.1.7.\n     If the Reply was\
    \ received in response to a Solicit (with a Rapid\n     Commit option), Request,\
    \ Renew, or Rebind message, the client\n     updates the information it has recorded\
    \ about IAs from the IA\n     options contained in the Reply message:\n     -\
    \  Record T1 and T2 times.\n     -  Add any new addresses in the IA option to\
    \ the IA as recorded by\n        the client.\n     -  Update lifetimes for any\
    \ addresses in the IA option that the\n        client already has recorded in\
    \ the IA.\n     -  Discard any addresses from the IA, as recorded by the client,\n\
    \        that have a valid lifetime of 0 in the IA Address option.\n     -  Leave\
    \ unchanged any information about addresses the client has\n        recorded in\
    \ the IA but that were not included in the IA from the\n        server.\n    \
    \ Management of the specific configuration information is detailed in\n     the\
    \ definition of each option in section 22.\n     The client examines the status\
    \ code in each IA individually.  If\n     the client receives a NoAddrsAvail status\
    \ code, the client has\n     received no usable addresses in the IA.\n     If\
    \ the client can operate with the addresses obtained from the\n     server, the\
    \ client uses addresses and other information from any\n     IAs that do not contain\
    \ a Status Code option with the NoAddrsAvail\n     status code.  The client MAY\
    \ include the IAs for which it received\n     the NoAddrsAvail status code, with\
    \ no addresses, in subsequent\n     Renew and Rebind messages sent to the server,\
    \ to retry obtaining\n     the addresses for these IAs.\n     If the client cannot\
    \ operate without the addresses for the IAs for\n     which it received the NoAddrsAvail\
    \ status code, the client may try\n     another server (perhaps by restarting\
    \ the DHCP server discovery\n     process).\n     If the client finds no usable\
    \ addresses in any of the IAs, it may\n     either try another server (perhaps\
    \ restarting the DHCP server\n     discovery process) or use the Information-request\
    \ message to obtain\n     other configuration information only.\n     When the\
    \ client receives a Reply message in response to a Renew or\n     Rebind message,\
    \ the client:\n     -  sends a Request message if any of the IAs in the Reply\
    \ message\n        contains the NoBinding status code.  The client places IA\n\
    \        options in this message for only those IAs for which the server\n   \
    \     returned the NoBinding status code in the Reply message.  The\n        client\
    \ continues to use other bindings for which the server did\n        not return\
    \ an error.\n     -  sends a Renew/Rebind if any of the IAs are not in the Reply\n\
    \        message, but in this case the client MUST limit the rate at\n       \
    \ which it sends these messages, to avoid the Renew/Rebind storm.\n     -  otherwise\
    \ accepts the information in the IA.\n     When the client receives a valid Reply\
    \ message in response to a\n     Release message, the client considers the Release\
    \ event completed,\n     regardless of the Status Code option(s) returned by the\
    \ server.\n     When the client receives a valid Reply message in response to\
    \ a\n     Decline message, the client considers the Decline event completed,\n\
    \     regardless of the Status Code option(s) returned by the server.\n"
- title: 4.4.6.  Updates to Section 18.2.3 of RFC 3315
  contents:
  - "4.4.6.  Updates to Section 18.2.3 of RFC 3315\n   Replace Section 18.2.3 of RFC\
    \ 3315 with the following text:\n     When the server receives a Renew message\
    \ via unicast from a client\n     to which the server has not sent a unicast option,\
    \ the server\n     discards the Renew message and responds with a Reply message\n\
    \     containing a Status Code option with the value UseMulticast, a\n     Server\
    \ Identifier option containing the server's DUID, the Client\n     Identifier\
    \ option from the client message, and no other options.\n     For each IA in the\
    \ Renew message from a client, the server locates\n     the client's binding and\
    \ verifies that the information in the IA\n     from the client matches the information\
    \ stored for that client.\n     If the server finds the client entry for the IA,\
    \ the server sends\n     back the IA to the client with new lifetimes and, if\
    \ applicable,\n     T1/T2 times.  If the server is unable to extend the lifetimes\
    \ of an\n     address in the IA, the server MAY choose not to include the IA\n\
    \     Address option for this address.\n     The server may choose to change the\
    \ list of addresses and the\n     lifetimes of addresses in IAs that are returned\
    \ to the client.\n     If the server finds that any of the addresses in the IA\
    \ are not\n     appropriate for the link to which the client is attached, the\n\
    \     server returns the address to the client with lifetimes of 0.\n     For\
    \ each IA for which the server cannot find a client entry, the\n     server has\
    \ the following choices depending on the server's policy\n     and configuration\
    \ information:\n     -  If the server is configured to create new bindings as\
    \ a result\n        of processing Renew messages, the server SHOULD create a binding\n\
    \        and return the IA with allocated addresses with lifetimes and,\n    \
    \    if applicable, T1/T2 times and other information requested by\n        the\
    \ client.  The server MAY use values in the IA Address option\n        (if included)\
    \ as a hint.\n     -  If the server is configured to create new bindings as a\
    \ result\n        of processing Renew messages, but the server will not assign\
    \ any\n        addresses to an IA, the server returns the IA option containing\n\
    \        a Status Code option with the NoAddrsAvail status code and a\n      \
    \  status message for a user.\n     -  If the server does not support creation\
    \ of new bindings for the\n        client sending a Renew message, or if this\
    \ behavior is disabled\n        according to the server's policy or configuration\
    \ information,\n        the server returns the IA option containing a Status Code\
    \ option\n        with the NoBinding status code and a status message for a user.\n\
    \     The server constructs a Reply message by setting the \"msg-type\"\n    \
    \ field to REPLY and copying the transaction ID from the Renew\n     message into\
    \ the \"transaction-id\" field.\n     The server MUST include a Server Identifier\
    \ option containing the\n     server's DUID and the Client Identifier option from\
    \ the Renew\n     message in the Reply message.\n     The server includes other\
    \ options containing configuration\n     information to be returned to the client\
    \ as described in section\n     18.2.\n     The T1/T2 times set in each applicable\
    \ IA option for a Reply MUST\n     be the same values across all IAs.  The server\
    \ MUST determine the\n     T1/T2 times across all of the applicable client's bindings\
    \ in the\n     Reply.  This facilitates the client being able to renew all of\
    \ the\n     bindings at the same time.\n"
- title: 4.4.7.  Updates to Section 18.2.4 of RFC 3315
  contents:
  - "4.4.7.  Updates to Section 18.2.4 of RFC 3315\n   Replace Section 18.2.4 of RFC\
    \ 3315 with the following text:\n      When the server receives a Rebind message\
    \ that contains an IA\n      option from a client, it locates the client's binding\
    \ and verifies\n      that the information in the IA from the client matches the\n\
    \      information stored for that client.\n      If the server finds the client\
    \ entry for the IA and the server\n      determines that the addresses in the\
    \ IA are appropriate for the\n      link to which the client's interface is attached\
    \ according to the\n      server's explicit configuration information, the server\
    \ SHOULD\n      send back the IA to the client with new lifetimes and, if\n  \
    \    applicable, T1/T2 times.  If the server is unable to extend the\n      lifetimes\
    \ of an address in the IA, the server MAY choose not to\n      include the IA\
    \ Address option for this address.\n      If the server finds that the client\
    \ entry for the IA and any of\n      the addresses are no longer appropriate for\
    \ the link to which the\n      client's interface is attached according to the\
    \ server's explicit\n      configuration information, the server returns the address\
    \ to the\n      client with lifetimes of 0.\n      If the server cannot find a\
    \ client entry for the IA, the IA\n      contains addresses and the server determines\
    \ that the addresses in\n      the IA are not appropriate for the link to which\
    \ the client's\n      interface is attached according to the server's explicit\n\
    \      configuration information, the server MAY send a Reply message to\n   \
    \   the client containing the client's IA, with the lifetimes for the\n      addresses\
    \ in the IA set to 0.  This Reply constitutes an explicit\n      notification\
    \ to the client that the addresses in the IA are no\n      longer valid.  In this\
    \ situation, if the server does not send a\n      Reply message, it silently discards\
    \ the Rebind message.\n      Otherwise, for each IA for which the server cannot\
    \ find a client\n      entry, the server has the following choices depending on\
    \ the\n      server's policy and configuration information:\n      -  If the server\
    \ is configured to create new bindings as a result\n         of processing Rebind\
    \ messages (also see the note about the\n         Rapid Commit option below),\
    \ the server SHOULD create a binding\n         and return the IA with allocated\
    \ addresses with lifetimes and,\n         if applicable, T1/T2 times and other\
    \ information requested by\n         the client.  The server MAY use values in\
    \ the IA Address option\n         (if included) as a hint.\n      -  If the server\
    \ is configured to create new bindings as a result\n         of processing Rebind\
    \ messages, but the server will not assign\n         any addresses to an IA, the\
    \ server returns the IA option\n         containing a Status Code option with\
    \ the NoAddrsAvail status\n         code and a status message for a user.\n  \
    \    -  If the server does not support creation of new bindings for the\n    \
    \     client sending a Rebind message, or if this behavior is\n         disabled\
    \ according to the server's policy or configuration\n         information, the\
    \ server returns the IA option containing a\n         Status Code option with\
    \ the NoBinding status code and a status\n         message for a user.\n     \
    \ When the server creates new bindings for the IA, it is possible\n      that\
    \ other servers also create bindings as a result of receiving\n      the same\
    \ Rebind message.  This is the same issue as in the\n      Discussion under \"\
    Rapid Commit Option\"; see section 22.14.\n      Therefore, the server SHOULD\
    \ only create new bindings during\n      processing of a Rebind message if the\
    \ server is configured to\n      respond with a Reply message to a Solicit message\
    \ containing the\n      Rapid Commit option.\n      The server constructs a Reply\
    \ message by setting the \"msg-type\"\n      field to REPLY and copying the transaction\
    \ ID from the Rebind\n      message into the \"transaction-id\" field.\n     \
    \ The server MUST include a Server Identifier option containing the\n      server's\
    \ DUID and the Client Identifier option from the Rebind\n      message in the\
    \ Reply message.\n      The server includes other options containing configuration\n\
    \      information to be returned to the client as described in section\n    \
    \  18.2.\n      The T1/T2 times set in each applicable IA option for a Reply MUST\n\
    \      be the same values across all IAs.  The server MUST determine the\n   \
    \   T1/T2 times across all of the applicable client's bindings in the\n      Reply.\
    \  This facilitates the client being able to renew all of the\n      bindings\
    \ at the same time.\n"
- title: 4.4.8.  Updates to RFC 3633
  contents:
  - "4.4.8.  Updates to RFC 3633\n   Replace the following text in Section 12.1 of\
    \ RFC 3633:\n      Each prefix has valid and preferred lifetimes whose durations\
    \ are\n      specified in the IA_PD Prefix option for that prefix.  The\n    \
    \  requesting router uses Renew and Rebind messages to request the\n      extension\
    \ of the lifetimes of a delegated prefix.\n   With:\n      Each prefix has valid\
    \ and preferred lifetimes whose durations are\n      specified in the IA_PD Prefix\
    \ option for that prefix.  The\n      requesting router uses Renew and Rebind\
    \ messages to request the\n      extension of the lifetimes of a delegated prefix.\n\
    \      The requesting router MAY include IA_PD options without any\n      prefixes,\
    \ i.e., without an IA Prefix option or with the IPv6\n      prefix field of the\
    \ IA Prefix option set to 0, in a Renew or\n      Rebind message to obtain bindings\
    \ it desires but has been unable\n      to obtain.  The requesting router MAY\
    \ set the \"prefix-length\"\n      field of the IA Prefix option as a hint to\
    \ the server.  As in\n      [RFC3315], the requesting router MAY also provide\
    \ lifetime hints\n      in the IA Prefix option.\n   Replace the following text\
    \ in Section 12.2 of RFC 3633:\n      The delegating router behaves as follows\
    \ when it cannot find a\n      binding for the requesting router's IA_PD:\n  \
    \ With:\n      For the Renew or Rebind, if the IA_PD contains no IA Prefix option\n\
    \      or it contains an IA Prefix option with the IPv6 prefix field set\n   \
    \   to 0, the delegating router SHOULD assign prefixes to the IA_PD\n      according\
    \ to the delegating router's explicit configuration\n      information.  In this\
    \ case, if the IA_PD contains an IA Prefix\n      option with the IPv6 prefix\
    \ field set to 0, the delegating router\n      MAY use the value in the \"prefix-length\"\
    \ field of the IA Prefix\n      option as a hint for the length of the prefixes\
    \ to be assigned.\n      The delegating router MAY also respect lifetime hints\
    \ provided by\n      the requesting router in the IA Prefix option.\n      The\
    \ delegating router behaves as follows when it cannot find a\n      binding for\
    \ the requesting router's IA_PD containing prefixes:\n"
- title: 4.5.  Confirm Message
  contents:
  - "4.5.  Confirm Message\n   The Confirm message, as described in [RFC3315], is\
    \ specific to\n   address assignment.  It allows a server without a binding to\
    \ reply to\n   the message, under the assumption that the server only needs\n\
    \   knowledge about the prefix(es) on the link, to inform the client that\n  \
    \ the address is likely valid or not.  This message is sent when, e.g.,\n   the\
    \ client has moved and needs to validate its addresses.  Not all\n   bindings\
    \ can be validated by servers and the Confirm message provides\n   for this by\
    \ specifying that a server that is unable to determine the\n   on-link status\
    \ MUST NOT send a Reply.\n   Note: Confirm has a specific meaning and does not\
    \ overload Renew/\n   Rebind.  It also has a lower processing cost as the server\
    \ does NOT\n   need to extend lease times or otherwise send back other configuration\n\
    \   options.\n   The Confirm message is used by the client to verify that it has\
    \ not\n   moved to a different link.  For IAs with addresses, the mechanism\n\
    \   used to verify if a client has moved or not is by matching the link's\n  \
    \ on-link prefix(es) (typically a /64) against the prefix-length first\n   bits\
    \ of the addresses provided by the client in the IA_NA or IA_TA\n   IA-types.\
    \  As a consequence, Confirm can only be used when the client\n   has an IA with\
    \ an address(es) (IA_NA or IA_TA).\n   A client MUST have a binding including\
    \ an IA with addresses to use\n   the Confirm message.  A client with IAs with\
    \ addresses as well as\n   other IA-types MAY, depending on the IA-type, use the\
    \ Confirm message\n   to detect if the client has moved to a different link. \
    \ A client that\n   does not have a binding with an IA with addresses MUST use\
    \ the Rebind\n   message instead.\n   IA_PD requires verification that the delegating\
    \ router (server) has\n   the binding for the IAs.  In that case, a requesting\
    \ router (client)\n   MUST use the Rebind message in place of the Confirm message\
    \ and it\n   MUST include all of its bindings, even address IAs.\n   Note that\
    \ Section 18.1.2 of RFC 3315 states that a client MUST\n   initiate a Confirm\
    \ when it may have moved to a new link.  This is\n   relaxed to a SHOULD as a\
    \ client may have determined whether it has or\n   has not moved using other techniques,\
    \ such as described in [RFC6059].\n   And, as stated above, a client with delegated\
    \ prefixes MUST send a\n   Rebind instead of a Confirm.\n"
- title: 4.6.  Decline Should Not Necessarily Trigger a Release
  contents:
  - "4.6.  Decline Should Not Necessarily Trigger a Release\n   Some client implementations\
    \ have been found to send a Release message\n   for other bindings they may have\
    \ received after they determine a\n   conflict and have correctly sent a Decline\
    \ message for the\n   conflicting address(es).\n   A client SHOULD NOT send a\
    \ Release message for other bindings it may\n   have received just because it\
    \ sent a Decline message.  The client\n   SHOULD retain the non-conflicting bindings.\
    \  The client SHOULD treat\n   the failure to acquire a binding as a result of\
    \ the conflict, to be\n   equivalent to not having received the binding, insofar\
    \ as it behaves\n   when sending Renew and Rebind messages.\n"
- title: 4.7.  Multiple Provisioning Domains
  contents:
  - "4.7.  Multiple Provisioning Domains\n   This document has assumed that all DHCP\
    \ servers on a network are in a\n   single provisioning domain and thus should\
    \ be \"equal\" in the service\n   that they offer.  This was also assumed by [RFC3315]\
    \ and [RFC3633].\n   One could envision a network where the DHCP servers are in\
    \ multiple\n   provisioning domains, and it may be desirable to have the DHCP\
    \ client\n   obtain different IA-types from different provisioning domains.  How\
    \ a\n   client detects the multiple provisioning domains and how it would\n  \
    \ interact with the multiple servers in these different domains is\n   outside\
    \ the scope of this document (see [MPVD-ARCH] and\n   [DHCPv6-SUPPORT]).\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   There are no new security considerations pertaining\
    \ to this document.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n    \
    \          C., and M. Carney, \"Dynamic Host Configuration Protocol\n        \
    \      for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n           \
    \   2003, <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC3633]  Troan, O. and\
    \ R. Droms, \"IPv6 Prefix Options for Dynamic\n              Host Configuration\
    \ Protocol (DHCP) version 6\", RFC 3633,\n              DOI 10.17487/RFC3633,\
    \ December 2003,\n              <http://www.rfc-editor.org/info/rfc3633>.\n  \
    \ [RFC7083]  Droms, R., \"Modification to Default Values of SOL_MAX_RT\n     \
    \         and INF_MAX_RT\", RFC 7083, DOI 10.17487/RFC7083, November\n       \
    \       2013, <http://www.rfc-editor.org/info/rfc7083>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [DHCPv6]   Mrugalski, T., Siodelski, M., Volz,\
    \ B., Yourtchenko, A.,\n              Richardson, M., Jiang, S., and T. Lemon,\
    \ \"Dynamic Host\n              Configuration Protocol for IPv6 (DHCPv6) bis\"\
    , Work in\n              Progress, draft-ietf-dhc-rfc3315bis-00, March 2015.\n\
    \   [DHCPv6-SUPPORT]\n              Krishnan, S., Korhonen, J., and S. Bhandari,\
    \ \"Support for\n              multiple provisioning domains in DHCPv6\", Work\
    \ in\n              Progress, draft-ietf-mif-mpvd-dhcp-support-01, March 2015.\n\
    \   [Err2469]  RFC Errata, Errata ID 2469, RFC 3633,\n              <http://www.rfc-editor.org>.\n\
    \   [Err2471]  RFC Errata, Errata ID 2471, RFC 3315,\n              <http://www.rfc-editor.org>.\n\
    \   [Err2472]  RFC Errata, Errata ID 2472, RFC 3315,\n              <http://www.rfc-editor.org>.\n\
    \   [MPVD-ARCH]\n              Anipko, D., \"Multiple Provisioning Domain Architecture\"\
    ,\n              Work in Progress, draft-ietf-mif-mpvd-arch-11, March 2015.\n\
    \   [RFC6059]  Krishnan, S. and G. Daley, \"Simple Procedures for\n          \
    \    Detecting Network Attachment in IPv6\", RFC 6059,\n              DOI 10.17487/RFC6059,\
    \ November 2010,\n              <http://www.rfc-editor.org/info/rfc6059>.\n  \
    \ [RFC7084]  Singh, H., Beebee, W., Donley, C., and B. Stark, \"Basic\n      \
    \        Requirements for IPv6 Customer Edge Routers\", RFC 7084,\n          \
    \    DOI 10.17487/RFC7084, November 2013,\n              <http://www.rfc-editor.org/info/rfc7084>.\n\
    \   [RFC7227]  Hankins, D., Mrugalski, T., Siodelski, M., Jiang, S., and\n   \
    \           S. Krishnan, \"Guidelines for Creating New DHCPv6 Options\",\n   \
    \           BCP 187, RFC 7227, DOI 10.17487/RFC7227, May 2014,\n             \
    \ <http://www.rfc-editor.org/info/rfc7227>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to the many people that contributed to identify the\
    \ stateful\n   issues addressed by this document and for reviewing drafts of this\n\
    \   document, including Ralph Droms, John Brzozowski, Ted Lemon, Hemant\n   Singh,\
    \ Wes Beebee, Gaurau Halwasia, Bud Millword, Tim Winters, Rob\n   Shakir, Jinmei\
    \ Tatuya, Andrew Yourtchenko, Fred Templin, Tomek\n   Mrugalski, Suresh Krishnan,\
    \ and Ian Farrer.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ole Troan\n   Cisco Systems, Inc.\n   Philip Pedersens\
    \ vei 20\n   N-1324 Lysaker\n   Norway\n   EMail: ot@cisco.com\n   Bernie Volz\n\
    \   Cisco Systems, Inc.\n   1414 Massachusetts Ave\n   Boxborough, MA  01719\n\
    \   United States\n   EMail: volz@cisco.com\n   Marcin Siodelski\n   ISC\n   950\
    \ Charter Street\n   Redwood City, CA  94063\n   United States\n   EMail: msiodelski@gmail.com\n"
