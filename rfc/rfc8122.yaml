- title: __initial_text__
  contents:
  - "                Connection-Oriented Media Transport over\n              the Transport\
    \ Layer Security (TLS) Protocol\n               in the Session Description Protocol\
    \ (SDP)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how to establish secure connection-oriented\n\
    \   media transport sessions over the Transport Layer Security (TLS)\n   protocol\
    \ using the Session Description Protocol (SDP).  It defines\n   the SDP protocol\
    \ identifier, 'TCP/TLS'.  It also defines the syntax\n   and semantics for an\
    \ SDP 'fingerprint' attribute that identifies the\n   certificate that will be\
    \ presented for the TLS session.  This\n   mechanism allows media transport over\
    \ TLS connections to be\n   established securely, so long as the integrity of\
    \ session\n   descriptions is assured.\n   This document obsoletes RFC 4572 by\
    \ clarifying the usage of multiple\n   fingerprints.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8122.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Changes from RFC 4572 . . . . . . . . . . . . . .\
    \ . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   3.  Overview  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n     3.1.  SDP Operational Modes . . . . . . . . . . . . . . . . .\
    \ .   4\n     3.2.  Threat Model  . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n     3.3.  The Need for Self-Signed Certificates . . . . . . . . . .  \
    \ 6\n     3.4.  Example SDP Description for TLS Connection  . . . . . . .   6\n\
    \   4.  Protocol Identifiers  . . . . . . . . . . . . . . . . . . . .   7\n  \
    \ 5.  Fingerprint Attribute . . . . . . . . . . . . . . . . . . . .   7\n    \
    \ 5.1.  Multiple Fingerprints . . . . . . . . . . . . . . . . . .   9\n   6. \
    \ Endpoint Identification . . . . . . . . . . . . . . . . . . .  10\n     6.1.\
    \  Certificate Choice  . . . . . . . . . . . . . . . . . . .  10\n     6.2.  Certificate\
    \ Presentation  . . . . . . . . . . . . . . . .  11\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  12\n   8.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  14\n   9.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  15\n     9.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  15\n     9.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  16\n   Acknowledgments . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  18\n   Authors' Addresses  . . . . . . . . . .\
    \ . . . . . . . . . . . . .  18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Session Description Protocol (SDP) [8] provides a general-purpose\n\
    \   format for describing multimedia sessions in announcements or\n   invitations.\
    \  For many applications, it is desirable to establish, as\n   part of a multimedia\
    \ session, a media stream that uses a connection-\n   oriented transport.  RFC\
    \ 4145, \"TCP-Based Media Transport in the\n   Session Description Protocol (SDP)\"\
    \ [7], specifies a general\n   mechanism for describing and establishing such\
    \ connection-oriented\n   streams; however, the only transport protocol it directly\
    \ supports is\n   TCP.  In many cases, session participants wish to provide\n\
    \   confidentiality, data integrity, and authentication for their media\n   sessions.\
    \  Therefore, this document extends the TCP-Based Media\n   specification to allow\
    \ session descriptions to describe media\n   sessions that use the Transport Layer\
    \ Security (TLS) protocol [10].\n   The TLS protocol allows applications to communicate\
    \ over a channel\n   that provides confidentiality and data integrity.  The TLS\n\
    \   specification, however, does not specify how specific protocols\n   establish\
    \ and use this secure channel; particularly, TLS leaves the\n   question of how\
    \ to interpret and validate authentication certificates\n   as an issue for the\
    \ protocols that run over TLS.  This document\n   specifies such usage for the\
    \ case of connection-oriented media\n   transport.\n   Complicating this issue,\
    \ endpoints exchanging media will often be\n   unable to obtain authentication\
    \ certificates signed by a well-known\n   root certification authority (CA). \
    \ Most certificate authorities\n   charge for signed certificates, particularly\
    \ host-based certificates;\n   additionally, there is a substantial administrative\
    \ overhead to\n   obtaining signed certificates, as certification authorities\
    \ must be\n   able to confirm that they are issuing the signed certificates to\
    \ the\n   correct party.  Furthermore, in many cases the endpoints' IP\n   addresses\
    \ and host names are dynamic, for example, they may be\n   obtained from DHCP.\
    \  It is impractical to obtain a CA-signed\n   certificate valid for the duration\
    \ of a DHCP lease.  For such hosts,\n   self-signed certificates are usually the\
    \ only option.  This\n   specification defines a mechanism that allows self-signed\n\
    \   certificates to be used securely, provided that the integrity of the\n   SDP\
    \ description is assured.  It allows for endpoints to include a\n   secure hash\
    \ of their certificate, known as the \"certificate\n   fingerprint\", within the\
    \ session description.  Provided that the\n   fingerprint of the offered certificate\
    \ matches the one in the session\n   description, end hosts can trust even self-signed\
    \ certificates.\n   The rest of this document is laid out as follows.  An overview\
    \ of the\n   problem and threat model is given in Section 3.  Section 4 gives\
    \ the\n   basic mechanism for establishing TLS-based connected-oriented media\n\
    \   in SDP.  Section 5 describes the SDP fingerprint attribute, which,\n   assuming\
    \ that the integrity of the SDP content is assured, allows the\n   secure use\
    \ of self-signed certificates.  Section 6 describes which\n   X.509 certificates\
    \ are presented and how they are used in TLS.\n   Section 7 discusses additional\
    \ security considerations.\n"
- title: 1.1.  Changes from RFC 4572
  contents:
  - "1.1.  Changes from RFC 4572\n   This document obsoletes RFC 4572 [20] but remains\
    \ backwards\n   compatible with older implementations.  The changes from RFC 4572\n\
    \   [20] are as follows:\n   o  clarifies that multiple 'fingerprint' attributes\
    \ can be used to\n      carry fingerprints (calculated using different hash functions)\n\
    \      associated with a given certificate and to carry fingerprints\n      associated\
    \ with multiple certificates.\n   o  clarifies the fingerprint matching procedure\
    \ when multiple\n      fingerprints are provided.\n   o  updates the preferred\
    \ hash function with a stronger cipher suite\n      and removes the requirement\
    \ to use the same hash function for\n      calculating a certificate fingerprint\
    \ and certificate signature.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [3].\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This section discusses the threat model that motivates TLS transport\n\
    \   for connection-oriented media streams.  It also discusses, in more\n   detail,\
    \ the need for end systems to use self-signed certificates.\n"
- title: 3.1.  SDP Operational Modes
  contents:
  - "3.1.  SDP Operational Modes\n   There are two principal operational modes for\
    \ multimedia sessions:\n   advertised and offer-answer.  Advertised sessions are\
    \ the simpler\n   mode.  In this mode, a server publishes, in some manner, an\
    \ SDP\n   session description of a multimedia session it is making available.\n\
    \   The classic example of this mode of operation is the Session\n   Announcement\
    \ Protocol (SAP) [15], in which SDP session descriptions\n   are periodically\
    \ transmitted to a well-known multicast group.\n   Traditionally, these descriptions\
    \ involve multicast conferences, but\n   unicast sessions are also possible. \
    \ (Obviously, connection-oriented\n   media cannot use multicast.)  Recipients\
    \ of a session description\n   connect to the addresses published in the session\
    \ description.  These\n   recipients may not have been previously known to the\
    \ advertiser of\n   the session description.\n   Alternatively, SDP conferences\
    \ can operate in offer-answer mode [4].\n   This mode allows two participants\
    \ in a multimedia session to\n   negotiate the multimedia session between them.\
    \  In this model, one\n   participant offers the other a description of the desired\
    \ session\n   from its perspective, and the other participant answers with the\n\
    \   desired session from its own perspective.  In this mode, each of the\n   participants\
    \ in the session has knowledge of the other one.  This is\n   the mode of operation\
    \ used by the Session Initiation Protocol (SIP)\n   [17].\n"
- title: 3.2.  Threat Model
  contents:
  - "3.2.  Threat Model\n   Participants in multimedia conferences often wish to guarantee\n\
    \   confidentiality, data integrity, and authentication for their media\n   sessions.\
    \  This section describes various types of attackers and the\n   ways they attempt\
    \ to violate these guarantees.  It then describes how\n   the TLS protocol can\
    \ be used to thwart the attackers.\n   The simplest type of attacker is one who\
    \ listens passively to the\n   traffic associated with a multimedia session. \
    \ This attacker might,\n   for example, be on the same local-area or wireless\
    \ network as one of\n   the participants in a conference.  This sort of attacker\
    \ does not\n   threaten a connection's data integrity or authentication, and almost\n\
    \   any operational mode of TLS can provide media-stream confidentiality.\n  \
    \ More sophisticated is an attacker who can send his own data traffic\n   over\
    \ the network, but who cannot modify or redirect valid traffic.\n   In SDP's 'advertised'\
    \ operational mode, this can barely be considered\n   an attack; media sessions\
    \ are expected to be initiated from anywhere\n   on the network.  In SDP's offer-answer\
    \ mode, however, this type of\n   attack is more serious.  An attacker could initiate\
    \ a connection to\n   one or both of the endpoints of a session, thus impersonating\
    \ an\n   endpoint or acting as a man in the middle to listen in on their\n   communications.\
    \  To thwart these attacks, TLS uses endpoint\n   certificates.  So long as the\
    \ certificates' private keys have not\n   been compromised, the endpoints have\
    \ an externally trusted mechanism\n   (most commonly, a mutually trusted certification\
    \ authority) to\n   validate certificates.  Because the endpoints know what certificate\n\
    \   identity to expect, endpoints can be certain that such an attack has\n   not\
    \ taken place.\n   Finally, the most serious type of attacker is one who can modify\
    \ or\n   redirect session descriptions: for example, a compromised or\n   malicious\
    \ SIP proxy server.  Neither TLS itself nor any mechanisms\n   that use it can\
    \ protect an SDP session against such an attacker.\n   Instead, the SDP description\
    \ itself must be secured through some\n   mechanism; SIP, for example, defines\
    \ how S/MIME [22] can be used to\n   secure session descriptions.\n"
- title: 3.3.  The Need for Self-Signed Certificates
  contents:
  - "3.3.  The Need for Self-Signed Certificates\n   SDP session descriptions are\
    \ created by any endpoint that needs to\n   participate in a multimedia session.\
    \  In many cases, such as SIP\n   phones, such endpoints have dynamically configured\
    \ IP addresses and\n   host names and must be deployed with nearly zero configuration.\
    \  For\n   such an endpoint, it is, for practical purposes, impossible to obtain\n\
    \   a certificate signed by a well-known certification authority.\n   If two endpoints\
    \ have no prior relationship, self-signed certificates\n   cannot generally be\
    \ trusted, as there is no guarantee that an\n   attacker is not launching a man-in-the-middle\
    \ attack.  Fortunately,\n   however, if the integrity of SDP session descriptions\
    \ can be assured,\n   it is possible to consider those SDP descriptions themselves\
    \ as a\n   prior relationship: certificates can be securely described in the\n\
    \   session description itself.  This is done by providing a secure hash\n   of\
    \ a certificate, or \"certificate fingerprint\", as an SDP attribute;\n   this\
    \ mechanism is described in Section 5.\n"
- title: 3.4.  Example SDP Description for TLS Connection
  contents:
  - "3.4.  Example SDP Description for TLS Connection\n   Figure 1 illustrates an\
    \ SDP offer that signals the availability of a\n   T.38 fax session over TLS.\
    \  For the purpose of brevity, the main\n   portion of the session description\
    \ is omitted in the example, showing\n   only the 'm' line and its attributes.\
    \  (This example is the same as\n   the first one in RFC 4145 [7], except for\
    \ the proto parameter and the\n   fingerprint attribute.)  See the subsequent\
    \ sections for explanations\n   of the example's TLS-specific attributes.\n  \
    \ Note: due to RFC formatting conventions, this document splits SDP\n   across\
    \ lines whose content would exceed 72 characters.  A backslash\n   character marks\
    \ where this line folding has taken place.  This\n   backslash and its trailing\
    \ CRLF and whitespace would not appear in\n   actual SDP content.\n m=image 54111\
    \ TCP/TLS t38\n c=IN IP4 192.0.2.2\n a=setup:passive\n a=connection:new\n a=fingerprint:SHA-256\
    \ \\\n    12:DF:3E:5D:49:6B:19:E5:7C:AB:4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF: \\\
    \n    3E:5D:49:6B:19:E5:7C:AB:4A:AD\n a=fingerprint:SHA-1 \\\n    4A:AD:B9:B1:3F:82:18:3B:54:02:12:DF:3E:5D:49:6B:19:E5:7C:AB\n\
    \   Figure 1: Example SDP Description Offering a TLS Media Stream\n"
- title: 4.  Protocol Identifiers
  contents:
  - "4.  Protocol Identifiers\n   The 'm' line in SDP specifies, among other items,\
    \ the transport\n   protocol to be used for the media in the session.  See the\
    \ \"Media\n   Descriptions\" section of SDP [8] for a discussion on transport\n\
    \   protocol identifiers.\n   This specification defines the protocol identifier,\
    \ 'TCP/TLS', which\n   indicates that the media described will use the Transport\
    \ Layer\n   Security protocol [10] over TCP.  (Using TLS over other transport\n\
    \   protocols is not discussed in this document.)  The 'TCP/TLS' protocol\n  \
    \ identifier describes only the transport protocol, not the upper-layer\n   protocol.\
    \  An 'm' line that specifies 'TCP/TLS' MUST further qualify\n   the protocol\
    \ using an fmt identifier to indicate the application\n   being run over TLS.\n\
    \   Media sessions described with this identifier follow the procedures\n   defined\
    \ in RFC 4145 [7].  They also use the SDP attributes defined in\n   that specification,\
    \ 'setup' and 'connection'.\n"
- title: 5.  Fingerprint Attribute
  contents:
  - "5.  Fingerprint Attribute\n   Parties to a TLS session indicate their identities\
    \ by presenting\n   authentication certificates as part of the TLS handshake procedure.\n\
    \   Authentication certificates are X.509 [2] certificates, as profiled\n   by\
    \ RFCs 3279 [5], 5280 [11], and 4055 [6].\n   In order to associate media streams\
    \ with connections and to prevent\n   unauthorized barge-in attacks on the media\
    \ streams, endpoints MUST\n   provide a certificate fingerprint.  If the X.509\
    \ certificate\n   presented for the TLS connection matches the fingerprint presented\
    \ in\n   the SDP, the endpoint can be confident that the author of the SDP is\n\
    \   indeed the initiator of the connection.\n   A certificate fingerprint is a\
    \ secure one-way hash of the\n   Distinguished Encoding Rules (DER) form of the\
    \ certificate.\n   (Certificate fingerprints are widely supported by tools that\n\
    \   manipulate X.509 certificates; for instance, the command \"openssl\n   x509\
    \ -fingerprint\" causes the command-line tool of the openssl\n   package to print\
    \ a certificate fingerprint, and the certificate\n   managers for Mozilla and\
    \ Internet Explorer display them when viewing\n   the details of a certificate.)\n\
    \   A fingerprint is represented in SDP as an attribute (an 'a' line).\n   It\
    \ consists of the name of the hash function used, followed by the\n   hash value\
    \ itself.  The hash value is represented as a sequence of\n   uppercase hexadecimal\
    \ bytes, separated by colons.  The number of\n   bytes is defined by the hash\
    \ function.  (This is the syntax used by\n   openssl and by the browsers' certificate\
    \ managers.  It is different\n   from the syntax used to represent hash values\
    \ in, for example, HTTP\n   digest authentication [24], which uses unseparated\
    \ lowercase\n   hexadecimal bytes.  Consistency with other applications of\n \
    \  fingerprints was considered more important.)\n   The formal syntax of the fingerprint\
    \ attribute is given in Augmented\n   Backus-Naur Form [9] in Figure 2.  This\
    \ syntax extends the BNF syntax\n   of SDP [8].\n   attribute              =/\
    \ fingerprint-attribute\n   fingerprint-attribute  =  \"fingerprint\" \":\" hash-func\
    \ SP fingerprint\n   hash-func              =  \"sha-1\" / \"sha-224\" / \"sha-256\"\
    \ /\n                             \"sha-384\" / \"sha-512\" /\n              \
    \               \"md5\" / \"md2\" / token\n                             ; Additional\
    \ hash functions can only come\n                             ; from updates to\
    \ RFC 3279\n   fingerprint            =  2UHEX *(\":\" 2UHEX)\n              \
    \               ; Each byte in upper-case hex, separated\n                   \
    \          ; by colons.\n   UHEX                   =  DIGIT / %x41-46 ; A-F uppercase\n\
    \   Figure 2: Augmented Backus-Naur Syntax for the Fingerprint Attribute\n   Following\
    \ RFC 3279 [5] as updated by RFC 4055 [6], the defined hash\n   functions are\
    \ 'SHA-1' [1] [16], 'SHA-224' [1], 'SHA-256' [1], 'SHA-\n   384' [1], 'SHA-512'\
    \ [1], 'MD5' [13], and 'MD2' [23], with 'SHA-256'\n   preferred.  A new IANA registry,\
    \ named \"Hash Function Textual Names\",\n   specified in Section 8, allows for\
    \ the addition of future tokens, but\n   they may only be added if they are included\
    \ in RFCs that update or\n   obsolete RFC 3279 [5].\n   Implementations compliant\
    \ with this specification MUST NOT use the\n   MD2 and MD5 hash functions to calculate\
    \ fingerprints or to verify\n   received fingerprints that have been calculated\
    \ using them.\n   Note: The MD2 and MD5 hash functions are listed in this specification\n\
    \   so that implementations can recognize them.  Implementations that log\n  \
    \ unused hash functions might log occurrences of these algorithms\n   differently\
    \ to unknown hash algorithms.\n   The fingerprint attribute may be either a session-level\
    \ or a media-\n   level SDP attribute.  If it is a session-level attribute, it\
    \ applies\n   to all TLS sessions for which no media-level fingerprint attribute\
    \ is\n   defined.\n"
- title: 5.1.  Multiple Fingerprints
  contents:
  - "5.1.  Multiple Fingerprints\n   Multiple SDP fingerprint attributes can be associated\
    \ with an 'm'\n   line.  This can occur if multiple fingerprints have been calculated\n\
    \   for a certificate using different hash functions.  It can also occur\n   if\
    \ one or more fingerprints associated with multiple certificates\n   have been\
    \ calculated.  This might be needed if multiple certificates\n   will be used\
    \ for media associated with an 'm' line (e.g., if separate\n   certificates are\
    \ used for RTP and the RTP Control Protocol (RTCP)) or\n   where it is not known\
    \ which certificate will be used when the\n   fingerprints are exchanged.  In\
    \ such cases, one or more fingerprints\n   MUST be calculated for each possible\
    \ certificate.\n   An endpoint MUST, as a minimum, calculate a fingerprint using\
    \ both\n   the 'SHA-256' hash function algorithm and the hash function used to\n\
    \   generate the signature on the certificate for each possible\n   certificate.\
    \  Including the hash from the signature algorithm ensures\n   interoperability\
    \ with strict implementations of RFC 4572 [20].\n   Either of these fingerprints\
    \ MAY be omitted if the endpoint includes\n   a hash with a stronger hash algorithm\
    \ that it knows that the peer\n   supports, if it is known that the peer does\
    \ not support the hash\n   algorithm, or if local policy mandates use of stronger\
    \ algorithms.\n   If fingerprints associated with multiple certificates are calculated,\n\
    \   the same set of hash functions MUST be used to calculate fingerprints\n  \
    \ for each certificate associated with the 'm' line.\n   An endpoint MUST select\
    \ the set of fingerprints that use its most\n   preferred hash function (out of\
    \ those offered by the peer) and verify\n   that each certificate used matches\
    \ one fingerprint out of that set.\n   If a certificate does not match any such\
    \ fingerprint, the endpoint\n   MUST NOT establish the TLS connection.\n   Note:\
    \ The SDP fingerprint attribute does not contain a reference to a\n   specific\
    \ certificate.  Endpoints need to compare the fingerprint with\n   a certificate\
    \ hash in order to look for a match.\n"
- title: 6.  Endpoint Identification
  contents:
  - '6.  Endpoint Identification

    '
- title: 6.1.  Certificate Choice
  contents:
  - "6.1.  Certificate Choice\n   An X.509 certificate binds an identity and a public\
    \ key.  If SDP\n   describing a TLS session is transmitted over a mechanism that\n\
    \   provides integrity protection, a certificate asserting any\n   syntactically\
    \ valid identity MAY be used.  For example, an SDP\n   description sent over HTTP/TLS\
    \ [14] or secured by S/MIME [22] MAY\n   assert any identity in the certificate\
    \ securing the media connection.\n   Security protocols that provide only hop-by-hop\
    \ integrity protection\n   (e.g., the SIPS scheme [17], SIP over TLS) are considered\n\
    \   sufficiently secure to allow the mode in which any valid identity is\n   accepted.\
    \  However, see Section 7 for a discussion of some security\n   implications of\
    \ this fact.\n   In situations where the SDP is not integrity-protected, the\n\
    \   certificate provided for a TLS connection MUST certify an appropriate\n  \
    \ identity for the connection.  In these scenarios, the certificate\n   presented\
    \ by an endpoint MUST certify either the SDP connection\n   address or the identity\
    \ of the creator of the SDP message, as\n   follows:\n   o  If the connection\
    \ address for the media description is specified\n      as an IP address, the\
    \ endpoint MAY use a certificate with an\n      iPAddress subjectAltName that\
    \ exactly matches the IP in the\n      connection-address in the session description's\
    \ 'c' line.\n      Similarly, if the connection address for the media description\
    \ is\n      specified as a fully qualified domain name, the endpoint MAY use a\n\
    \      certificate with a dNSName subjectAltName matching the specified\n    \
    \  'c' line connection-address exactly.  (Wildcard patterns MUST NOT\n      be\
    \ used.)\n   o  Alternately, if the SDP session description of the session was\n\
    \      transmitted over a protocol (such as SIP [17]) for which the\n      identities\
    \ of session participants are defined by Uniform Resource\n      Identifiers (URIs),\
    \ the endpoint MAY use a certificate with a\n      uniformResourceIdentifier subjectAltName\
    \ corresponding to the\n      identity of the endpoint that generated the SDP.\
    \  The details of\n      what URIs are valid are dependent on the transmitting\
    \ protocol.\n      (For more details on the validity of URIs, see Section 7.\n\
    \   Identity matching is performed using the matching rules specified by\n   RFC\
    \ 5280 [11].  If more than one identity of a given type is present\n   in the\
    \ certificate (e.g., more than one dNSName name), a match in any\n   one of the\
    \ set is considered acceptable.  To support the use of\n   certificate caches,\
    \ as described in Section 7, endpoints SHOULD\n   consistently provide the same\
    \ certificate for each identity they\n   support.\n"
- title: 6.2.  Certificate Presentation
  contents:
  - "6.2.  Certificate Presentation\n   In all cases, an endpoint acting as the TLS\
    \ server (i.e., one taking\n   the 'setup:passive' role, in the terminology of\
    \ connection-oriented\n   media) MUST present a certificate during TLS initiation,\
    \ following\n   the rules presented in Section 6.1.  If the certificate does not\n\
    \   match the original fingerprint, the client endpoint MUST terminate\n   the\
    \ media connection with a bad_certificate error.\n   If the SDP offer/answer model\
    \ [4] is being used, the client (the\n   endpoint with the 'setup:active' role)\
    \ MUST also present a\n   certificate following the rules of Section 6.1.  The\
    \ server MUST\n   request a certificate; if the client does not provide one, or\
    \ if the\n   certificate does not match a provided fingerprint, the server\n \
    \  endpoint MUST terminate the media connection with a bad_certificate\n   error.\n\
    \   Note that when the offer/answer model is being used, it is possible\n   for\
    \ a media connection to outrace the answer back to the offerer.\n   Thus, if the\
    \ offerer has offered a 'setup:passive' or 'setup:actpass'\n   role, it MUST (as\
    \ specified in RFC 4145 [7]) begin listening for an\n   incoming connection as\
    \ soon as it sends its offer.  However, it MUST\n   NOT assume that the data transmitted\
    \ over the TLS connection is valid\n   until it has received a matching fingerprint\
    \ in an SDP answer.  If\n   the fingerprint, once it arrives, does not match the\
    \ client's\n   certificate, the server endpoint MUST terminate the media connection\n\
    \   with a bad_certificate error, as stated in the previous paragraph.\n   If\
    \ offer/answer is not being used (e.g., if the SDP was sent over the\n   Session\
    \ Announcement Protocol [15]), there is no secure channel\n   available for clients\
    \ to communicate certificate fingerprints to\n   servers.  In this case, servers\
    \ MAY request client certificates,\n   which SHOULD be signed by a well-known\
    \ certification authority, or\n   MAY allow clients to connect without a certificate.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This entire document concerns itself with security.\
    \  The problem to\n   be solved is addressed in Section 1, and a high-level overview\
    \ is\n   presented in Section 3.  See the SDP specification [8] for security\n\
    \   considerations applicable to SDP in general.\n   Offering a TCP/TLS connection\
    \ in SDP (or agreeing to one in the SDP\n   offer/answer mode) does not create\
    \ an obligation for an endpoint to\n   accept any TLS connection with the given\
    \ fingerprint.  Instead, the\n   endpoint must engage in the standard TLS negotiation\
    \ procedure to\n   ensure that the TLS stream cipher and MAC algorithm chosen\
    \ meet the\n   security needs of the higher-level application.  (For example,\
    \ an\n   offered stream cipher of TLS_NULL_WITH_NULL_NULL SHOULD be rejected\n\
    \   in almost every application scenario.)\n   Like all SDP messages, SDP messages\
    \ describing TLS streams are\n   conveyed in an encapsulating application protocol\
    \ (e.g., SIP, Media\n   Gateway Control Protocol (MGCP), etc.).  It is the responsibility\
    \ of\n   the encapsulating protocol to ensure the integrity of the SDP\n   security\
    \ descriptions.  Therefore, the application protocol SHOULD\n   either invoke\
    \ its own security mechanisms (e.g., secure multiparts)\n   or, alternatively,\
    \ utilize a lower-layer security service (e.g., TLS\n   or IPsec).  This security\
    \ service SHOULD provide strong message\n   authentication as well as effective\
    \ replay protection.\n   However, such integrity protection is not always possible.\
    \  For these\n   cases, end systems SHOULD maintain a cache of certificates that\
    \ other\n   parties have previously presented using this mechanism.  If possible,\n\
    \   users SHOULD be notified when an unsecured certificate associated\n   with\
    \ a previously unknown end system is presented and SHOULD be\n   strongly warned\
    \ if a different unsecured certificate is presented by\n   a party with which\
    \ they have communicated in the past.  In this way,\n   even in the absence of\
    \ integrity protection for SDP, the security of\n   this document's mechanism\
    \ is equivalent to that of the Secure Shell\n   (SSH) protocol [18], which is\
    \ vulnerable to man-in-the-middle attacks\n   when two parties first communicate\
    \ but can detect ones that occur\n   subsequently.  (Note that a precise definition\
    \ of the \"other party\"\n   depends on the application protocol carrying the\
    \ SDP message.)  Users\n   SHOULD NOT, however, in any circumstances be notified\
    \ about\n   certificates described in the SDP descriptions sent over an\n   integrity-protected\
    \ channel.\n   To aid interoperability and deployment, security protocols that\n\
    \   provide only hop-by-hop integrity protection (e.g., the SIPS scheme\n   [17],\
    \ SIP over TLS) are considered sufficiently secure to allow the\n   mode in which\
    \ any syntactically valid identity is accepted in a\n   certificate.  This decision\
    \ was made because SIPS is currently the\n   integrity mechanism most likely to\
    \ be used in deployed networks in\n   the short to medium term.  However, in this\
    \ mode, SDP integrity is\n   vulnerable to attacks by compromised or malicious\
    \ middleboxes, e.g.,\n   SIP proxy servers.  End systems MAY warn users about\
    \ SDP sessions\n   that are secured in only a hop-by-hop manner, and definitions\
    \ of\n   media formats running over TCP/TLS MAY specify that only end-to-end\n\
    \   integrity mechanisms be used.\n   Depending on how SDP messages are transmitted,\
    \ it is not always\n   possible to determine whether or not a subjectAltName presented\
    \ in a\n   remote certificate is expected for the remote party.  In particular,\n\
    \   given call forwarding, third-party call control, or session\n   descriptions\
    \ generated by endpoints controlled by the Gateway Control\n   Protocol [21],\
    \ it is not always possible in SIP to determine what\n   entity ought to have\
    \ generated a remote SDP response.  In general,\n   when not using authenticity\
    \ and integrity protection of the SDP\n   descriptions, a certificate transmitted\
    \ over SIP SHOULD assert the\n   endpoint's SIP Address of Record as a uniformResourceIndicator\n\
    \   subjectAltName.  When an endpoint receives a certificate over SIP\n   asserting\
    \ an identity (including an iPAddress or dNSName identity)\n   other than the\
    \ one to which it placed or received the call, it SHOULD\n   alert the user and\
    \ ask for confirmation.  This applies whether\n   certificates are self-signed\
    \ or signed by certification authorities;\n   a certificate for \"sip:bob@example.com\"\
    \ may be legitimately signed by\n   a certification authority, but it may still\
    \ not be acceptable for a\n   call to \"sip:alice@example.com\".  (This issue\
    \ is not one specific to\n   this specification; the same consideration applies\
    \ for S/MIME-signed\n   SDP carried over SIP.)\n   This document does not define\
    \ a mechanism for securely transporting\n   RTP and RTCP packets over a connection-oriented\
    \ channel.  Please see\n   RFC 7850 [19] for more details.\n   TLS is not always\
    \ the most appropriate choice for secure connection-\n   oriented media; in some\
    \ cases, a higher- or lower-level security\n   protocol may be appropriate.\n\
    \   This document improves security from RFC 4572 [20].  It updates the\n   preferred\
    \ hash function from SHA-1 to SHA-256 and deprecates the\n   usage of the MD2\
    \ and MD5 hash functions.\n   By clarifying the usage and handling of multiple\
    \ fingerprints, the\n   document also enables hash agility and incremental deployment\
    \ of\n   newer and more secure hash functions.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA has updated the registrations defined in RFC\
    \ 4572 [20] to refer\n   to this specification.\n   This document defines an SDP\
    \ proto value: 'TCP/TLS'.  Its format is\n   defined in Section 4.  This proto\
    \ value has been registered by IANA\n   under the \"proto\" registry within the\
    \ \"Session Description Protocol\n   (SDP) Parameters\" registry.\n   This document\
    \ defines an SDP session and media-level attribute:\n   'fingerprint'.  Its format\
    \ is defined in Section 5.  This attribute\n   has been registered by IANA under\
    \ the \"att-field (both session and\n   media level)\" registry within the \"\
    Session Description Protocol (SDP)\n   Parameters\" registry.\n   The SDP specification\
    \ [8] states that specifications defining new\n   proto values, like the 'TCP/TLS'\
    \ proto value defined in this one,\n   must define the rules by which their media\
    \ format (fmt) namespace is\n   managed.  For the TCP/TLS protocol, new formats\
    \ SHOULD have an\n   associated MIME registration.  Use of an existing MIME subtype\
    \ for\n   the format is encouraged.  If no MIME subtype exists, it is\n   RECOMMENDED\
    \ that a suitable one be registered through the IETF\n   process [12] by production\
    \ of, or reference to, a Standards Track RFC\n   that defines the transport protocol\
    \ for the format.\n   IANA has updated the \"Hash Function Textual Names\" registry\
    \ (which\n   was originally created in [20]) to refer to this document.\n   The\
    \ names of hash functions used for certificate fingerprints are\n   registered\
    \ by the IANA.  Hash functions MUST be defined by Standards\n   Track RFCs that\
    \ update or obsolete RFC 3279 [5].\n   When registering a new hash function textual\
    \ name, the following\n   information MUST be provided:\n   o  The textual name\
    \ of the hash function.\n   o  The Object Identifier (OID) of the hash function\
    \ as used in X.509\n      certificates.\n   o  A reference to the Standards Track\
    \ RFC that updates or obsoletes\n      RFC 3279 [5] and defines the use of the\
    \ hash function in X.509\n      certificates.\n   Table 1 contains the initial\
    \ values of this registry.\n        +--------------------+------------------------+-----------+\n\
    \        | Hash Function Name |          OID           | Reference |\n       \
    \ +--------------------+------------------------+-----------+\n        |     \
    \  \"md2\"        |   1.2.840.113549.2.2   |  RFC 3279 |\n        |       \"md5\"\
    \        |   1.2.840.113549.2.5   |  RFC 3279 |\n        |      \"sha-1\"    \
    \   |     1.3.14.3.2.26      |  RFC 3279 |\n        |     \"sha-224\"      | 2.16.840.1.101.3.4.2.4\
    \ |  RFC 4055 |\n        |     \"sha-256\"      | 2.16.840.1.101.3.4.2.1 |  RFC\
    \ 4055 |\n        |     \"sha-384\"      | 2.16.840.1.101.3.4.2.2 |  RFC 4055\
    \ |\n        |     \"sha-512\"      | 2.16.840.1.101.3.4.2.3 |  RFC 4055 |\n \
    \       +--------------------+------------------------+-----------+\n        \
    \     Table 1: IANA Hash Function Textual Name Registry\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [1]  National Institute of Standards and Technology,\
    \ \"Secure Hash\n        Standard (SHS)\", FIPS PUB 180-4, DOI 10.6028/NIST.FIPS.180-4,\n\
    \        August 2015, <http://nvlpubs.nist.gov/nistpubs/FIPS/\n        NIST.FIPS.180-4.pdf>.\n\
    \   [2]  International Organization for Standardization, \"Information\n     \
    \   technology -- Open Systems Interconnection -- The Directory --\n        Part\
    \ 8: Public-key and attribute certificate frameworks\",\n        ISO/IEC 9594-8:2014,\
    \ March 2014,\n        <https://www.iso.org/standard/64854.html>.\n   [3]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, DOI 10.17487/RFC2119, March 1997,\n        <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [4]  Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer Model with\n    \
    \    Session Description Protocol (SDP)\", RFC 3264,\n        DOI 10.17487/RFC3264,\
    \ June 2002,\n        <http://www.rfc-editor.org/info/rfc3264>.\n   [5]  Bassham,\
    \ L., Polk, W., and R. Housley, \"Algorithms and\n        Identifiers for the\
    \ Internet X.509 Public Key Infrastructure\n        Certificate and Certificate\
    \ Revocation List (CRL) Profile\",\n        RFC 3279, DOI 10.17487/RFC3279, April\
    \ 2002,\n        <http://www.rfc-editor.org/info/rfc3279>.\n   [6]  Schaad, J.,\
    \ Kaliski, B., and R. Housley, \"Additional Algorithms\n        and Identifiers\
    \ for RSA Cryptography for use in the Internet\n        X.509 Public Key Infrastructure\
    \ Certificate and Certificate\n        Revocation List (CRL) Profile\", RFC 4055,\
    \ DOI 10.17487/RFC4055,\n        June 2005, <http://www.rfc-editor.org/info/rfc4055>.\n\
    \   [7]  Yon, D. and G. Camarillo, \"TCP-Based Media Transport in the\n      \
    \  Session Description Protocol (SDP)\", RFC 4145,\n        DOI 10.17487/RFC4145,\
    \ September 2005,\n        <http://www.rfc-editor.org/info/rfc4145>.\n   [8] \
    \ Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n        Description\
    \ Protocol\", RFC 4566, DOI 10.17487/RFC4566, July\n        2006, <http://www.rfc-editor.org/info/rfc4566>.\n\
    \   [9]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n       \
    \ Specifications: ABNF\", STD 68, RFC 5234, DOI 10.17487/RFC5234,\n        January\
    \ 2008, <http://www.rfc-editor.org/info/rfc5234>.\n   [10] Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer Security (TLS)\n        Protocol Version 1.2\", RFC 5246,\
    \ DOI 10.17487/RFC5246, August\n        2008, <http://www.rfc-editor.org/info/rfc5246>.\n\
    \   [11] Cooper, D., Santesson, S., Farrell, S., Boeyen, S., Housley, R.,\n  \
    \      and W. Polk, \"Internet X.509 Public Key Infrastructure\n        Certificate\
    \ and Certificate Revocation List (CRL) Profile\",\n        RFC 5280, DOI 10.17487/RFC5280,\
    \ May 2008,\n        <http://www.rfc-editor.org/info/rfc5280>.\n   [12] Freed,\
    \ N., Klensin, J., and T. Hansen, \"Media Type\n        Specifications and Registration\
    \ Procedures\", BCP 13, RFC 6838,\n        DOI 10.17487/RFC6838, January 2013,\n\
    \        <http://www.rfc-editor.org/info/rfc6838>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [13] Rivest, R., \"The MD5 Message-Digest Algorithm\"\
    , RFC 1321,\n        DOI 10.17487/RFC1321, April 1992,\n        <http://www.rfc-editor.org/info/rfc1321>.\n\
    \   [14] Rescorla, E., \"HTTP Over TLS\", RFC 2818, DOI 10.17487/RFC2818,\n  \
    \      May 2000, <http://www.rfc-editor.org/info/rfc2818>.\n   [15] Handley, M.,\
    \ Perkins, C., and E. Whelan, \"Session Announcement\n        Protocol\", RFC\
    \ 2974, DOI 10.17487/RFC2974, October 2000,\n        <http://www.rfc-editor.org/info/rfc2974>.\n\
    \   [16] Eastlake 3rd, D. and P. Jones, \"US Secure Hash Algorithm 1\n       \
    \ (SHA1)\", RFC 3174, DOI 10.17487/RFC3174, September 2001,\n        <http://www.rfc-editor.org/info/rfc3174>.\n\
    \   [17] Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n      \
    \  Peterson, J., Sparks, R., Handley, M., and E.  Schooler, \"SIP:\n        Session\
    \ Initiation Protocol\", RFC 3261, DOI 10.17487/RFC3261,\n        June 2002, <http://www.rfc-editor.org/info/rfc3261>.\n\
    \   [18] Ylonen, T. and C. Lonvick, Ed., \"The Secure Shell (SSH) Protocol\n \
    \       Architecture\", RFC 4251, DOI 10.17487/RFC4251, January 2006,\n      \
    \  <http://www.rfc-editor.org/info/rfc4251>.\n   [19] Lazzaro, J., \"Framing Real-time\
    \ Transport Protocol (RTP) and RTP\n        Control Protocol (RTCP) Packets over\
    \ Connection-Oriented\n        Transport\", RFC 4571, DOI 10.17487/RFC4571, July\
    \ 2006,\n        <http://www.rfc-editor.org/info/rfc4571>.\n   [20] Lennox, J.,\
    \ \"Connection-Oriented Media Transport over the\n        Transport Layer Security\
    \ (TLS) Protocol in the Session\n        Description Protocol (SDP)\", RFC 4572,\
    \ DOI 10.17487/RFC4572,\n        July 2006, <http://www.rfc-editor.org/info/rfc4572>.\n\
    \   [21] Taylor, T., \"Reclassification of RFC 3525 to Historic\",\n        RFC\
    \ 5125, DOI 10.17487/RFC5125, February 2008,\n        <http://www.rfc-editor.org/info/rfc5125>.\n\
    \   [22] Ramsdell, B. and S. Turner, \"Secure/Multipurpose Internet Mail\n   \
    \     Extensions (S/MIME) Version 3.2 Message Specification\",\n        RFC 5751,\
    \ DOI 10.17487/RFC5751, January 2010,\n        <http://www.rfc-editor.org/info/rfc5751>.\n\
    \   [23] Turner, S. and L. Chen, \"MD2 to Historic Status\", RFC 6149,\n     \
    \   DOI 10.17487/RFC6149, March 2011,\n        <http://www.rfc-editor.org/info/rfc6149>.\n\
    \   [24] Shekh-Yusef, R., Ed., Ahrens, D., and S. Bremer, \"HTTP Digest\n    \
    \    Access Authentication\", RFC 7616, DOI 10.17487/RFC7616,\n        September\
    \ 2015, <http://www.rfc-editor.org/info/rfc7616>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document included significant contributions by Cullen\
    \ Jennings,\n   Paul Kyzivat, Roman Shpount, and Martin Thomson.  Elwyn Davies\n\
    \   performed the Gen-ART review of the document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jonathan Lennox\n   Vidyo\n   Email: jonathan@vidyo.com\n\
    \   Christer Holmberg\n   Ericsson\n   Email: christer.holmberg@ericsson.com\n"
