- title: __initial_text__
  contents:
  - "   Finding Internet Small Computer Systems Interface (iSCSI) Targets\n and Name\
    \ Servers by Using Service Location Protocol version 2 (SLPv2)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   The iSCSI protocol provides a way for hosts to access SCSI devices\n\
    \   over an IP network.  This document defines the use of the Service\n   Location\
    \ Protocol (SLP) by iSCSI hosts, devices, and management\n   services, along with\
    \ the SLP service type templates that describe the\n   services they provide.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1.  Introduction................................................\
    \   2\n    2.  Notation Conventions........................................  \
    \ 2\n    3.  Terminology.................................................   3\n\
    \    4.  Using SLP for iSCSI Service Discovery.......................   4\n  \
    \  5.  iSCSI SLP Templates.........................................  11\n    6.\
    \  Security Considerations.....................................  18\n    7.  IANA\
    \ Considerations.........................................  19\n    8.  Summary.....................................................\
    \  19\n    9.  Normative References........................................  19\n\
    \   10.  Informative References......................................  20\n  \
    \ 11.  Acknowledgements............................................  21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   iSCSI [RFC3720] is a protocol used to transport SCSI [SAM2]\
    \ commands,\n   data, and status across an IP network.  This protocol is connection-\n\
    \   oriented and is currently defined over TCP.  iSCSI uses a client-\n   server\
    \ relationship.  The client end of the connection is an\n   initiator, and it\
    \ sends SCSI commands; the server end of the\n   connection is called a target,\
    \ and it receives and executes the\n   commands.\n   There are several methods\
    \ an iSCSI initiator can use to find the\n   targets to which it should connect.\
    \  Two of these methods can be\n   accomplished without the use of SLP:\n   -\
    \ Each target and its address can be statically configured on the\n     initiator.\n\
    \   - Each address providing targets can be configured on the initiator;\n   \
    \  iSCSI provides a mechanism by which the initiator can query the\n     address\
    \ for a list of targets.\n   The above methods are further defined in \"iSCSI\
    \ Naming and Discovery\n   Requirements\" [RFC3721].\n   Each of the above methods\
    \ requires a small amount of configuration to\n   be done on each initiator. \
    \ The ability to discover targets and name\n   services without having to configure\
    \ initiators is a desirable\n   feature.  The Service Location Protocol (SLP)\
    \ [RFC2608] is an IETF\n   standards track protocol providing several features\
    \ that will\n   simplify locating iSCSI services.  This document describes how\
    \ SLP\n   can be used in iSCSI environments to discover targets, addresses\n \
    \  providing targets, and storage management servers.\n"
- title: 2.  Notation Conventions
  contents:
  - "2.  Notation Conventions\n   In this document, the key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\",\n   \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\",\n   and \"OPTIONAL\" are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   Here are some definitions that may aid readers who are unfamiliar\n\
    \   with SLP, SCSI, or iSCSI.  Some of these definitions have been\n   reproduced\
    \ from [RFC2608] and \"Finding an RSIP Server with SLP\"\n   [RFC3105].\n   User\
    \ Agent (UA)            A process working on the client's behalf\n           \
    \                   to establish contact with some service.\n                \
    \              The UA retrieves service information from\n                   \
    \           the Service Agents or Directory Agents.\n   Service Agent (SA)   \
    \      A process working on behalf of one or more\n                          \
    \    services to advertise the services and\n                              their\
    \ capabilities.\n   Directory Agent (DA)       A process that collects service\n\
    \                              advertisements.  There can only be one DA\n   \
    \                           present per given host.\n   Scope                \
    \      A named set of services, typically making\n                           \
    \   up a logical administrative group.\n   Service Advertisement      A URL, attributes,\
    \ and a lifetime\n                              (indicating how long the advertisement\
    \ is\n                              valid) providing service access\n        \
    \                      information and capabilities description\n            \
    \                  for a particular service.\n   Initiator                  A\
    \ logical entity, typically within a host,\n                              that\
    \ sends SCSI commands to targets to be\n                              executed.\
    \  An initiator is usually present\n                              in the form\
    \ of a device driver.\n   Target                     A logical entity, typically\
    \ within a\n                              storage controller or gateway that\n\
    \                              receives SCSI commands from an initiator\n    \
    \                          and executes them.  A target includes one\n       \
    \                       or more Logical Units (LUs); each LU is a\n          \
    \                    SCSI device, such as a disk or tape drive.\n   iSCSI Name\
    \                 A UTF-8 character string that serves as a\n                \
    \              unique identifier for iSCSI initiators and\n                  \
    \            targets.  Its format and usage is further\n                     \
    \         defined in [RFC3721].\n   iSCSI Client               A logical entity,\
    \ typically a host that\n                              includes at least one iSCSI\
    \ Initiator.\n   iSCSI Server               A logical entity, typically a storage\n\
    \                              controller or gateway that includes at\n      \
    \                        least one iSCSI Target.\n   Storage Management Server\
    \  An addressable entity that provides\n                              management\
    \ services that benefit an iSCSI\n                              environment. \
    \ \"Storage management server\"\n                              is used as a generic\
    \ term and does not\n                              indicate a specific protocol\
    \ or service.\n"
- title: 4.  Using SLP for iSCSI Service Discovery
  contents:
  - "4.  Using SLP for iSCSI Service Discovery\n   Two entities are involved in iSCSI\
    \ discovery.  The end result is that\n   an iSCSI initiator (e.g., a host) discovers\
    \ iSCSI targets, usually\n   provided by storage controllers or gateways.\n  \
    \ iSCSI targets are registered with SLP as a set of service URLs, one\n   for\
    \ each address on which the target may be accessed.  Initiators\n   discover these\
    \ targets by using SLP service requests.  Targets that\n   do not directly support\
    \ SLP or that are under the control of a\n   management service may be registered\
    \ by a proxy service agent as part\n   of the software providing this service.\n\
    \   iSCSI entities may also use SLP to discover higher-level management\n   services\
    \ when these are needed.\n   This section first describes the use of SLP for discovery\
    \ of targets\n   by iSCSI initiators, it then describes the use of SLP to discover\n\
    \   storage management servers.\n   This document assumes that SLPv2 will be used\
    \ for discovering iSCSI-\n   related services; no attempt is made to include support\
    \ for SLPv1.\n"
- title: 4.1.  Discovering iSCSI Targets with SLP
  contents:
  - "4.1.  Discovering iSCSI Targets with SLP\n   The following diagram shows the\
    \ relationship among iSCSI clients,\n   servers, initiators, and targets.  An\
    \ iSCSI client includes at least\n   one iSCSI initiator, and an SLP user agent\
    \ (UA).  An iSCSI server\n   includes at least one iSCSI target an SLP service\
    \ agent (SA).  Some\n   entities, such as extended copy engines, include both\
    \ initiators and\n   targets.  These include both an SA, for its targets to be\
    \ discovered,\n   and a UA, for its initiator(s) to discover other targets.\n\
    \              +---------------------------------+\n              |          iSCSI\
    \ Client           |\n              |         +-----------+           |\n    \
    \          |         | iSCSI     |           |\n              |         | initiator\
    \ |           |\n              |         | \"myhost\"  |           |\n       \
    \       |         +-----------+           |\n              |                 \
    \                |\n              +--------------------------+------+\n      \
    \        | iSCSI Driver             |  UA  |\n              +--------------------------+------+\n\
    \              |           TCP/UDP/IP            |\n              +----------------+----------------+\n\
    \              |  Interface 1   |   Interface 2  |\n              +----------------+----------------+\n\
    \                       |               |\n     +------------+    |          \
    \     |    +------------+\n     |   SLP DA   |    |               |    |  SLP\
    \ DA    |\n     | (optional) |----+  IP Networks  +----| (optional) |\n     +------------+\
    \    |               |    +------------+\n                       |           \
    \    |\n              +-----------------+-----------------|\n              | \
    \  Interface 1   |   Interface 2   |\n              |   192.0.2.131   |    192.0.2.3\
    \    |\n              +-----------------+-----------------+\n              | \
    \           TCP/UDP/IP             |\n              +---------------------------+-------+\n\
    \              |       iSCSI Driver        |  SA   |\n              +---------------------------+-------|\n\
    \              |                                   |\n              | +--------+\
    \ +--------+ +---------+ |\n              | | iSCSI  | | iSCSI  | |  iSCSI  |\
    \ |\n              | | target | | target | |  target | |\n              | | \"\
    one\"  | | \"two\"  | | \"three\" | |\n              | +--------+ +--------+ +---------+\
    \ |\n              |            iSCSI Server           |\n              +-----------------------------------+\n\
    \   In the above drawing, the iSCSI server has three iSCSI targets that\n   the\
    \ client could discover, named \"one\", \"two\" and \"three\".  The iSCSI\n  \
    \ client has an iSCSI initiator with the name \"myhost\".  The iSCSI\n   client\
    \ may use the initiator name in its SLP Service Requests as a\n   filter to discover\
    \ only targets that are configured to accept iSCSI\n   connections from \"myhost\"\
    .\n   Each iSCSI target and initiator has a unique name, called an iSCSI\n   Name.\
    \  This identifier is the same regardless of the network path\n   (through adapter\
    \ cards, networks, and interfaces on the storage\n   device) over which the target\
    \ is discovered and accessed.  For this\n   example, the iSCSI names \"one\",\
    \ \"two\", and \"three\" are used for the\n   targets; the initiator uses the\
    \ name \"myhost\".  An actual iSCSI name\n   would incorporate more structure,\
    \ including a naming authority, and\n   is not described here.\n   Each of the\
    \ iSCSI targets in the drawing can appear at two addresses,\n   since two network\
    \ interfaces are present.  Each target would have two\n   service URLs, unless\
    \ a single service URL included a DNS host name\n   mapping to both addresses.\n\
    \   An iSCSI target URL consists of its fully qualified host name or IP\n   address,\
    \ the TCP port on which it is listening, and its iSCSI name.\n   An iSCSI server\
    \ must register each of its individual targets at each\n   of its network addresses.\n\
    \   The iSCSI server constructs a service advertisement of the type\n   \"service:iscsi:target\"\
    \ for each of the service URLs it wishes to\n   register.  The advertisement contains\
    \ a lifetime, along with other\n   attributes that are defined in the service\
    \ template.\n   If the server in the above drawing is listening at TCP port 3260\
    \ for\n   both network addresses, the service URLs registered would be\n   - 192.0.2.131:3260/one\n\
    \   - 192.0.2.131:3260/two\n   - 192.0.2.131:3260/three\n   - 192.0.2.3:3260/one\n\
    \   - 192.0.2.3:3260/two\n   - 192.0.2.3:3260/three\n   The remainder of the discovery\
    \ procedure is identical to that used by\n   any client/server pair implementing\
    \ SLP:\n   1.  If an SLP DA is found, the SA contacts the DA and registers the\n\
    \       service advertisement.  Whether or not one or more SLPv2 DAs are\n   \
    \    discovered, the SA maintains the advertisement itself and answers\n     \
    \  multicast UA queries directly.\n   2.  When the iSCSI initiator requires contact\
    \ information for an\n       iSCSI target, the UA either contacts the DA by using\
    \ unicast or\n       the SA by using multicast.  If a UA is configured with the\n\
    \       address of the SA, it may avoid multicast and may contact an SA\n    \
    \   by using unicast.  The UA includes a query based on the\n       attributes\
    \ to indicate the characteristics of the target(s) it\n       requires.\n   3.\
    \  Once the UA has the host name or address of the iSCSI server, as\n       well\
    \ as the port number and iSCSI Target Name, it can begin the\n       normal iSCSI\
    \ login to the target.\n   As information contained in the iSCSI target template\
    \ may exceed\n   common network datagram sizes, the SLP implementation for both\
    \ UAs\n   and SAs supporting this template MUST implement SLP over TCP.\n"
- title: 4.1.1.  Finding Targets Based on Initiator Credentials
  contents:
  - "4.1.1.  Finding Targets Based on Initiator Credentials\n   To be allowed access\
    \ to an iSCSI target, an initiator must be\n   authenticated.  The initiator may\
    \ be required by the target to\n   produce one or more of the following credentials:\n\
    \   - An iSCSI Initiator Name\n   - An IP address\n   - A CHAP, SRP, or Kerberos\
    \ credential\n   - Any combination of the above\n   Most iSCSI targets allow access\
    \ to only one or two initiators.  In\n   the ideal discovery scenario, an initiator\
    \ would send an SLP request\n   and receive responses ONLY for targets to which\
    \ the initiator is\n   guaranteed a successful login.  To achieve this goal, the\
    \ iSCSI\n   target template contains the following attributes, each of which\n\
    \   allows a list of values:\n   1.  auth-name:  This attribute contains the list\
    \ of initiator names\n       allowed to access this target, or the value \"any\"\
    , indicating\n       that no specific initiator name is required.\n   2.  auth-addr:\
    \  This attribute contains the list of host names\n       and/or IP addresses\
    \ that will be allowed access to this target,\n       or the value \"any\", indicating\
    \ that no specific address or\n       host name is required.  If a large number\
    \ of addresses is to\n       be allowed (perhaps a subnet), this attribute may\
    \ contain the\n       value \"any\".\n   3.  auth-cred:  This attribute contains\
    \ a list of \"method/identifier\"\n       credentials that will be allowed access\
    \ to the target, provided\n       they can produce the correct password or other\
    \ verifier during\n       the login process.  If no specific credentials are required,\
    \ the\n       value \"any\" is used.\n   The list of valid method strings for\
    \ auth-cred are defined in\n   [RFC3720], section 11.1, \"AuthMethod\".  The identifier\
    \ used after the\n   \"/\" is defined by the specific AuthMethod, also in [RFC3720].\n\
    \   Examples showing initiator searches based on auth-xxxx attributes are\n  \
    \ shown in the target-specific template section below.\n   Also note that the\
    \ auth-xxxx attributes are considered security\n   policy information.  If these\
    \ attributes are distributed, IPsec MUST\n   be implemented as specified in the\
    \ Security Implementation section\n   below.\n"
- title: 4.1.2.  Supporting Access by Multiple Identities to the Same Target
  contents:
  - "4.1.2.  Supporting Access by Multiple Identities to the Same Target\n   If a\
    \ target is to allow access to multiple host identities, more than\n   one combination\
    \ of auth-xxxx attributes will have to be allowed.  In\n   some of these cases,\
    \ it is not possible to express the entire set of\n   valid combinations of auth-xxxx\
    \ attributes within a single registered\n   service URL.  For example, if a target\
    \ can be addressed by\n      auth-name=myhost1 AND auth-cred=CHAP/user1      (identity1)\n\
    \   OR\n      auth-name-myhost2 AND auth-cred=CHAP/user2      (identity2)\n  \
    \ the above cannot be specified in a single registered service URL,\n   since\
    \ (auth-name=myhost1, auth-name=myhost2, auth-cred=CHAP/user1,\n   auth-cred=CHAP/user2)\
    \ would allow either auth-name to be used with\n   either auth-cred.  This necessitates\
    \ the ability to register a target\n   and address under more than one service\
    \ URL; one for (identity1) and\n   one for (identity2).\n   Because service URLs\
    \ must be unique, (identity1) and (identity2) must\n   each be registered under\
    \ a unique service URL.  For systems that\n   support the configuration of multiple\
    \ identities to access a target,\n   the service URL must contain an additional,\
    \ opaque string defining\n   the identity.  This appears after the iSCSI name\
    \ in the URL string\n   and is separated by a \"/\".  Each registered (target-address,\
    \ target-\n   name, initiator-identity) tuple can then register a set of auth-xxxx\n\
    \   attributes.\n"
- title: 4.1.3.  Using SLP in a Non-multicast Environment
  contents:
  - "4.1.3.  Using SLP in a Non-multicast Environment\n   In some networks, the use\
    \ of multicast for discovery purposes is\n   either unavailable or not allowed.\
    \  These include public or service-\n   provider networks that are placed between\
    \ an iSCSI client and a\n   server.  These are probably most common between two\
    \ iSCSI gateways,\n   one at a storage service provider site, and one at a customer\
    \ site.\n   In these networks, an initiator may allow the addresses of one or\n\
    \   more SAs to be configured instead of or in addition to its DA\n   configuration.\
    \  The initiator would then make unicast SLP service\n   requests directly to\
    \ these SAs, without the use of multicast to\n   discover them first.\n   This\
    \ functionality is well within the scope of the current SLP\n   protocol.  The\
    \ main consequence for implementors is that an initiator\n   configured to make\
    \ direct unicast requests to an SA will have to add\n   this to the SLP API, if\
    \ it is following the service location API\n   defined in [RFC2614].\n"
- title: 4.2.  Discovering Storage Management Services with SLP
  contents:
  - "4.2.  Discovering Storage Management Services with SLP\n   Storage management\
    \ servers can be built to manage and control access\n   to targets in a variety\
    \ of ways.  They can provide extended services\n   beyond discovery, which could\
    \ include storage allocation and\n   management.  None of these services are defined\
    \ here; the intent of\n   this document is to allow these services to be discovered\
    \ by both\n   clients and servers, in addition to the target discovery already\n\
    \   being performed.\n   The following drawing shows an iSCSI client, an iSCSI\
    \ server, and a\n   storage management server.  To simplify the drawing, the second\
    \ IP\n   network is not shown but is assumed to exist.  The storage management\n\
    \   server would use its own protocol (smsp) to provide capabilities to\n   iSCSI\
    \ clients and servers; these clients and servers can both use SLP\n   to discover\
    \ the storage management server.\n      +---------------------------+\n      |\
    \         iSCSI Client      |\n      |                           |\n      |  \
    \     +-----------+       |\n      |       | iSCSI     |       |\n      |    \
    \   | initiator |       |\n      |       +-----------+       |\n      |      \
    \                     |\n      +---------------+------+----+      +------------+\n\
    \      | iSCSI Driver  | smsp | UA |      |  SLP DA    |\n      +---------------+------+----+\
    \      |            |\n      |        TCP/UDP/IP         |      | (optional) |\n\
    \      +---------------+------+----+      +------------+\n               |   \
    \                            |\n               |   IP Network                \
    \  |\n           ------------------------------------------\n               |\
    \                          |\n               |                          |\n  \
    \    +---------------+-----------+     +---------------------+\n      |      \
    \  TCP/UDP/IP         |     | TCP/UDP/IP          |\n      +---------------+------+----+\
    \     +---------------------+\n      | iSCSI Driver  | smsp | UA |     |   SA\
    \    |   smsp    |\n      +---------------+------+----+     +---------------------+\n\
    \      |                           |     |                     |\n      | +--------+\
    \ +--------+     |     | storage mgmt server |\n      | | iSCSI  | | iSCSI  |\
    \     |     |                     |\n      | | target | | target |     |     +---------------------+\n\
    \      | |   1    | |   2    |     |\n      | +--------+ +--------+     |\n  \
    \    |                           |\n      |     iSCSI Server          |\n    \
    \  +---------------------------+\n   Note the difference between the storage management\
    \ server model and\n   the previously defined target discovery model.  When target\
    \ discovery\n   was used, the iSCSI Server implemented an SA, to be discovered\
    \ by the\n   initiator's UA.  In the storage management server model, the iSCSI\n\
    \   clients and servers both implement UAs, and the management server\n   implements\
    \ the SA.\n   A storage management server's URL contains the domain name or IP\n\
    \   address and TCP or UDP port number.  No other information is\n   required.\n\
    \   The storage management server constructs a service advertisement of\n   the\
    \ type \"service:iscsi:sms\" for each of the addresses at which it\n   appears.\
    \  The advertisement contains the URL and a lifetime, along\n   with other attributes\
    \ that are defined in the service template.\n   The remainder of the discovery\
    \ procedure is identical to that used to\n   discover iSCSI targets, except that\
    \ both initiators and targets would\n   normally be \"clients\" of the storage\
    \ management service.\n   Targets that support a storage management service implement\
    \ a UA in\n   addition to the SA.  A target may alternatively just implement the\
    \ UA\n   and allow the storage management service to advertise its targets\n \
    \  appropriately by providing an SA and registering the appropriate\n   service:iscsi:target\
    \ registrations on the target's behalf: The target\n   device would not have to\
    \ advertise its own targets.  This has no\n   impact on the initiator.\n   This\
    \ allows the initiators' discovery of targets to be completely\n   interoperable\
    \ regardless of which storage management service is used,\n   or whether one is\
    \ used at all, or whether the target registrations\n   are provided directly by\
    \ the target or by the management service.\n"
- title: 4.3.  Internationalization Considerations
  contents:
  - "4.3.  Internationalization Considerations\n   SLP allows internationalized strings\
    \ to be registered and retrieved.\n   Attributes in the template that are not\
    \ marked with an 'L' (literal)\n   will be registered in a localized manner. \
    \ An \"en\" (English)\n   localization MUST be registered, and others MAY be registered.\n\
    \   Attributes that include non-ASCII characters will be encoded by using\n  \
    \ UTF-8, as discussed in [RFC3722] and [RFC3491].\n"
- title: 5.  iSCSI SLP Templates
  contents:
  - "5.  iSCSI SLP Templates\n   Three templates are provided: an iSCSI target template,\
    \ a management\n   service template, and an abstract template to encapsulate the\
    \ two.\n"
- title: 5.1.  The iSCSI Abstract Service Type Template
  contents:
  - "5.1.  The iSCSI Abstract Service Type Template\n   This template defines the\
    \ abstract service \"service:iscsi\".  It is\n   used as a top-level service to\
    \ encapsulate all other iSCSI-related\n   services.\n   Name of submitter: Mark\
    \ Bakke\n   Language of service template: en\n   Security Considerations: See\
    \ section 6.\n   Template Text:\n   -------------------------template begins here-----------------------\n\
    \   template-type=iscsi\n   template-version=1.0\n   template-description=\n \
    \    This is an abstract service type.  The purpose of the iscsi\n     service\
    \ type is to encompass all of the services used to support\n     the iSCSI protocol.\n\
    \   template-url-syntax=\n     url-path=  ;  Depends on the concrete service type.\n\
    \   --------------------------template ends here------------------------\n"
- title: 5.2.  The iSCSI Target Concrete Service Type Template
  contents:
  - "5.2.  The iSCSI Target Concrete Service Type Template\n   This template defines\
    \ the service \"service:iscsi:target\".  An entity\n   containing iSCSI targets\
    \ that wishes them discovered via SLP would\n   register each of them, with each\
    \ of their addresses, as this service\n   type.\n   Initiators (and perhaps management\
    \ services) wishing to discover\n   targets in this way will generally use one\
    \ of the following queries:\n   1. Find a specific target, given its iSCSI Target\
    \ Name:\n        Service: service:iscsi:target\n        Scope:   initiator-scope-list\n\
    \        Query:   (iscsi-name=iqn.2001-04.com.example:sn.456)\n   2. Find all\
    \ of the iSCSI Target Names that may allow access to a\n      given initiator:\n\
    \        Service: service:iscsi:target\n        Scope:   initiator-scope-list\n\
    \        Query:   (auth-name=iqn.1998-03.com.example:hostid.045A7B)\n   3. Find\
    \ all of the iSCSI Target Names that may allow access to\n      any initiator:\n\
    \        Service: service:iscsi:target\n        Scope:   initiator-scope-list\n\
    \        Query:   (auth-name=any)\n   4. Find all of the iSCSI Target Names that\
    \ may allow access to\n      this initiator, or that will allow access to any\
    \ initiator:\n        Service: service:iscsi:target\n        Scope:   initiator-scope-list\n\
    \        Query:   &(auth-name=iqn.1998-03.com.example:hostid.045A7B)\n       \
    \           (auth-name=any)\n   5. Find all of the iSCSI Target Names that may\
    \ allow access to\n      a given CHAP user name:\n        Service: service:iscsi:target\n\
    \        Scope:   initiator-scope-list\n        Query:   (auth-cred=chap/my-user-name)\n\
    \   6. Find all of the iSCSI Target Names that may allow access to a\n      given\
    \ initiator that supports two IP addresses, a CHAP credential\n      and SRP credential,\
    \ and an initiator name:\n        Service: service:iscsi:target\n        Scope:\
    \   initiator-scope-list\n        Query:   &(|(auth-name=iqn.com.example:host47)(auth-name=any)\n\
    \        |(auth-addr=192.0.2.3)(auth-addr=192.0.2.131)(auth-addr=any)\n      \
    \  |(auth-cred=chap/foo)(auth-cred=srp/my-user-name)\n         (auth-cred=any))\n\
    \   7. Find the iSCSI Target Names from which the given initiator is\n      allowed\
    \ to boot:\n        Service: service:iscsi:target\n        Scope:   initiator-scope-list\n\
    \        Query:   (boot-list=iqn.1998-03.com.example:hostid.045A7B)\n   8. In\
    \ addition, a management service may wish to discover all\n      targets:\n  \
    \      Service: service:iscsi:target\n        Scope:   management-server-scope-list\n\
    \        Query:   <empty-string>\n   More details on booting from an iSCSI target\
    \ are defined in [BOOT].\n   Name of submitter: Mark Bakke\n   Language of service\
    \ template: en\n   Security Considerations: see section 6.\n   Template Text:\n\
    \   -------------------------template begins here-----------------------\n   template-type=iscsi:target\n\
    \   template-version=1.0\n   template-description=\n     This is a concrete service\
    \ type.  The iscsi:target service type is\n     used to register individual target\
    \ addresses to be discovered\n     by others.  UAs will generally search for these\
    \ by including one of\n     the following:\n     - the iSCSI target name\n   \
    \  - iSCSI initiator identifiers (iSCSI name, credential, IP address)\n     -\
    \ the service URL\n   template-url-syntax=\n     url-path    = hostport \"/\"\
    \ iscsi-name [ \"/\" identity ]\n     hostport    = host [ \":\" port ]\n    \
    \ host        = hostname / hostnumber  ; DNS name or IP address\n     hostname\
    \    = *( domainlabel \".\" ) toplabel\n     alphanum    = ALPHA / DIGIT\n   \
    \  domainlabel = alphanum / alphanum *[alphanum / \"-\"] alphanum\n     toplabel\
    \    = ALPHA / ALPHA *[ alphanum / \"-\" ] alphanum\n     hostnumber  = ipv4-number\
    \ / ipv6-addr  ; IPv4 or IPv6 address\n     ipv4-number = 1*3DIGIT 3(\".\" 1*3DIGIT)\n\
    \     ipv6-addr   = \"[\" ipv6-number \"]\"\n     ipv6-number =              \
    \                6( h16 \":\" ) ls32\n                   /                   \
    \    \"::\" 5( h16 \":\" ) ls32\n                   / [               h16 ] \"\
    ::\" 4( h16 \":\" ) ls32\n                   / [ *1( h16 \":\" ) h16 ] \"::\"\
    \ 3( h16 \":\" ) ls32\n                   / [ *2( h16 \":\" ) h16 ] \"::\" 2(\
    \ h16 \":\" ) ls32\n                   / [ *3( h16 \":\" ) h16 ] \"::\"    h16\
    \ \":\"   ls32\n                   / [ *4( h16 \":\" ) h16 ] \"::\"          \
    \    ls32\n                   / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n\
    \                   / [ *6( h16 \":\" ) h16 ] \"::\"\n     ls32        = ( h16\
    \ \":\" h16 ) / ipv4-number\n                   ; least-significant 32 bits of\
    \ ipv6 address\n     h16         = 1*4HEXDIG\n     port        = 1*DIGIT\n   \
    \  iscsi-name  = iscsi-char ; iSCSI target name\n     identity    = iscsi-char\
    \ ; optional identity string\n     iscsi-char  = ALPHA / DIGIT / escaped / \"\
    :\" / \"-\" / \".\"\n                   ; Intended to allow UTF-8 encoded strings\n\
    \     escaped     = 1*(\"\\\" HEXDIG HEXDIG)\n     ;\n     ; The iscsi-name part\
    \ of the URL is required and must be the iSCSI\n     ; name of the target being\
    \ registered.\n     ; A device representing multiple targets must individually\n\
    \     ; register each target/address combination with SLP.\n     ; The identity\
    \ part of the URL is optional, and is used to\n     ; indicate an identity that\
    \ is allowed to access this target.\n     ;\n     ; Example (split into two lines\
    \ for clarity):\n     ; service:iscsi:target://192.0.2.3:3260/\n     ;       \
    \               iqn.2001-04.com.example:sn.45678\n     ;\n     ; IPv6 addresses\
    \ are also supported; they use the notation\n     ; specified above and in [RFC3513],\
    \ section 2.2\n   iscsi-name = string\n   # The iSCSI Name of this target.\n \
    \  # This must match the iscsi-name in the url-path.\n   portal-group = integer\n\
    \   # The iSCSI portal group tag for this address.  Addresses sharing\n   # the\
    \ same iscsi-name and portal-group tag can be used within the\n   # same iSCSI\
    \ session.  Portal groups are described in [RFC3720].\n   transports = string\
    \ M L\n   tcp\n     # This is a list of transport protocols that the registered\n\
    \     # entity supports.  iSCSI is currently supported over TCP,\n     # but it\
    \ is anticipated that it could be supported over other\n     # transports, such\
    \ as SCTP, in the future.\n   tcp\n   mgmt-entity = string O\n   # The fully qualified\
    \ domain name, or IP address in dotted-decimal\n   # notation, of the management\
    \ interface of the entity containing\n   # this target.\n   #\n   alias = string\
    \ O\n   # The alias string contains a descriptive name of the target.\n   auth-name\
    \ = string M X\n   # A list of iSCSI Initiator Names that can access this target.\n\
    \   # Normal iSCSI names will be 80 characters or less; max length\n   # is 255.\n\
    \   # Normally, only one or a few values will be in the list.\n   # Using the\
    \ equivalence search on this will evaluate to \"true\"\n   # if any one of the\
    \ items in this list matches the query.\n   # If this list contains the default\
    \ name \"any\", any initiator\n   # is allowed to access this target, provided\
    \ it matches\n   # the other auth-xxx attributes.\n   #\n   # This attribute contains\
    \ security policy information.  If this\n   # attribute is distributed via an\
    \ Attribute Reply message,\n   # IPsec MUST be implemented.\n   auth-addr = string\
    \ M X\n   # A list of initiator IP addresses (or host names) which will\n   #\
    \ be allowed access to this target.  If this list contains the\n   # default name\
    \ \"any\", any IP address is allowed access to this\n   # target, provided it\
    \ matches the other auth-xxx attributes.\n   #\n   # This attribute contains security\
    \ policy information.  If this\n   # attribute is distributed via an Attribute\
    \ Reply message,\n   # IPsec MUST be implemented.\n   auth-cred = string M X\n\
    \   # A list of credentials which will be allowed access to the target\n   # (provided\
    \ they can provide the correct password or other\n   # authenticator).  Entries\
    \ in this list are of the form\n   # \"method/identifier\", where the currently\
    \ defined methods are\n   # \"chap\" and \"srp\", both of which take usernames\
    \ as their\n   # identifiers.\n   #\n   # This attribute contains security policy\
    \ information.  If this\n   # attribute is distributed via an Attribute Reply\
    \ message,\n   # IPsec MUST be implemented.\n   boot-list = string M O\n   # A\
    \ list of iSCSI Initiator Names that can boot from this target.\n   # This list\
    \ works precisely like the auth-name attribute.  A name\n   # appearing in this\
    \ list must either appear in the access-list,\n   # or the access-list must contain\
    \ the initiator name \"iscsi\".\n   # Otherwise, an initiator will be unable to\
    \ find its boot\n   # target.  If boot-list contains the name \"iscsi\", any host\
    \ can boot\n   # from it, but I am not sure if this is useful to anyone.  If this\n\
    \   # attribute is not registered, this target is not \"bootable\".\n   #\n  \
    \ # Note that the LUN the host boots from is not specified here; a\n   # host\
    \ will generally attempt to boot from LUN 0.\n   #\n   # It is quite possible\
    \ that other attributes will need to be defined\n   # here for booting as well.\n\
    \   #\n   # This attribute contains security policy information.  If this\n  \
    \ # attribute is distributed via an Attribute Reply message,\n   # IPsec MUST\
    \ be implemented.\n   --------------------------template ends here------------------------\n"
- title: 5.3.  iSCSI Storage Management Service Templates
  contents:
  - "5.3.  iSCSI Storage Management Service Templates\n   This template defines the\
    \ service \"service:iscsi:sms\".  An entity\n   supporting one or more iSCSI management\
    \ service protocols may\n   register itself with SLP as this service type.  iSCSI\
    \ clients and\n   servers wishing to discover storage management services using\
    \ SLP\n   will usually search for them by the protocol(s) they support:\n    \
    \    Service: service:iscsi:sms\n        Scope:   initiator-scope-list\n     \
    \   Query:   (protocols=isns)\n   Name of submitter: Mark Bakke\n   Language of\
    \ service template: en\n   Security Considerations: see section 6.\n   Template\
    \ Text:\n   -------------------------template begins here-----------------------\n\
    \   template-type=iscsi:sms\n   template-version=1.0\n   template-description=\n\
    \     This is a concrete service type.  The iscsi:sms service type\n     provides\
    \ the capability for entities supporting iSCSI to discover\n     appropriate management\
    \ services.\n   template-url-syntax=\n     url-path   = ; The URL of the management\
    \ service [RFC2608].\n   protocols = string M\n   # The list of protocols supported\
    \ by this name service.  This\n   # list may be expanded in the future.  There\
    \ is no default.\n   #\n   # \"isns\"  - This management service supports the\
    \ use of the iSNS\n   #           protocol for access management, health monitoring,\
    \ and\n   #           discovery management services.  This protocol is defined\n\
    \   #           in [ISNS].\n   isns\n   transports = string M L\n   tcp\n   #\
    \ This is a list of transport protocols that the registered\n   # entity supports.\n\
    \   tcp, udp\n   server-priority = integer\n   # The priority a client should\
    \ give this server, when choosing\n   # between multiple servers with the same\
    \ protocol type.\n   # When multiple servers are discovered for a given protocol\
    \ type,\n   # this parameter indicates their relative precedence. Server\n   #\
    \ precedence is protocol-specific; for some protocols, the primary\n   # server\
    \ may have the highest server-priority value, while for\n   # others it may have\
    \ the lowest. For example, with iSNS, the primary\n   # server has the lowest\
    \ value (value 0).\n   --------------------------template ends here------------------------\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The SLPv2 security model as specified in [RFC2608]\
    \ does not provide\n   confidentiality but does provide an authentication mechanism\
    \ for UAs\n   to ensure that service advertisements only come from trusted SAs,\n\
    \   with the exception that it does not provide a mechanism to\n   authenticate\
    \ \"zero-result responses\".  See [RFC3723] for a discussion\n   of the SLPv2\
    \ [RFC2608] security model.\n   Once a target or management server is discovered,\
    \ authentication and\n   authorization are handled by the iSCSI protocol, or by\
    \ the management\n   server's protocol.  It is the responsibility of the providers\
    \ of\n   these services to ensure that an inappropriately advertised or\n   discovered\
    \ service does not compromise their security.\n   When no security is used for\
    \ SLPv2, there is a risk of distribution\n   of false discovery information. \
    \ The primary countermeasure for this\n   risk is authentication.  When this risk\
    \ is a significant concern,\n   IPsec SAs and iSCSI in-band authentication SHOULD\
    \ be used for iSCSI\n   traffic subject to this risk to ensure that iSCSI traffic\
    \ only flows\n   between endpoints that have participated in IKE authentication\
    \ and\n   iSCSI in-band authentication.  For example, if an attacker\n   distributes\
    \ discovery information falsely claiming that it is an\n   iSCSI target, it will\
    \ lack the secret information necessary to\n   complete IKE authentication or\
    \ iSCSI in-band authentication\n   successfully and therefore will be prevented\
    \ from falsely sending or\n   receiving iSCSI traffic.\n   A risk remains of a\
    \ denial of service attack based on repeated use of\n   false discovery information\
    \ that will cause initiation of IKE\n   negotiation.  The countermeasures for\
    \ this are administrative\n   configuration of each iSCSI Target to limit the\
    \ peers  it is willing\n   to communicate with (i.e., by IP address range and/or\
    \ DNS domain),\n   and maintenance of a negative authentication cache to avoid\n\
    \   repeatedly contacting an iSCSI Target that fails to authenticate.\n   These\
    \ three measures (i.e., IP address range limits, DNS domain\n   limits, negative\
    \ authentication cache) MUST be implemented.\n   The auth-name, auth-addr, auth-cred,\
    \ and boot-list attributes\n   comprise security policy information.  When these\
    \ are distributed,\n   IPsec MUST be implemented.\n"
- title: 6.1.  Security Implementation
  contents:
  - "6.1.  Security Implementation\n   Security for SLPv2 in an IP storage environment\
    \ is specified in\n   [RFC3723].  IPsec is mandatory-to-implement for IPS clients\
    \ and\n   servers.  Thus, all IP storage clients, including those invoking SLP,\n\
    \   can be assumed to support IPsec.  SLP servers, however, cannot be\n   assumed\
    \ to implement IPsec, since there is no such requirement in\n   standard SLP.\
    \  In particular, SLP Directory Agents (DA) may be\n   running on machines other\
    \ than those running the IPS protocols.\n   IPsec SHOULD be implemented for SLPv2\
    \ as specified in [RFC3723]; this\n   includes ESP with a non-null transform to\
    \ provide both authentication\n   and confidentiality.\n   When SLPv2 can be used\
    \ to distribute auth-name, auth-addr, auth-cred,\n   and boot-list information\
    \ (see section 5.2 above), IPsec MUST be\n   implemented, as these items are considered\
    \ sensitive security policy\n   information.  If IPsec is not implemented, auth-name,\
    \ auth-addr,\n   auth-cred, and boot-list information MUST NOT be distributed\
    \ via\n   SLPv2 and MUST NOT be used if discovered via SLPv2.\n   Because the\
    \ IP storage services have their own authentication\n   capabilities when located,\
    \ SLPv2 authentication is OPTIONAL to\n   implement and use (as discussed in more\
    \ detail in [RFC3723]).\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document describes three SLP Templates.  They\
    \ have been reviewed\n   and approved by the IESG and registered in the IANA's\
    \ \"SVRLOC\n   Templates\" registry.  This process is described in the IANA\n\
    \   Considerations section of [RFC2609].\n"
- title: 8.  Summary
  contents:
  - "8.  Summary\n   This document describes how SLP can be used by iSCSI initiators\
    \ to\n   find iSCSI targets and storage management servers.  Service type\n  \
    \ templates for iSCSI targets and storage management servers are\n   presented.\n"
- title: 9.  Normative References
  contents:
  - "9.  Normative References\n   [RFC2608]   Guttman, E., Perkins, C., Veizades,\
    \ J., and M. Day,\n               \"Service Location Protocol, Version 2\", RFC\
    \ 2608, June\n               1999.\n   [RFC2609]   Guttman, E., Perkins, C., and\
    \ J. Kempf, \"Service\n               Templates and Service: Schemes\", RFC 2609,\
    \ June 1999.\n   [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3491]\
    \   Hoffman, P. and M. Blanchet, \"Nameprep: A Stringprep\n               Profile\
    \ for Internationalized Domain Names (IDN)\", RFC\n               3491, March\
    \ 2003.\n   [RFC3513]   Hinden, R. and S. Deering, \"Internet Protocol Version\
    \ 6\n               (IPv6) Addressing Architecture\", RFC 3513, April 2003.\n\
    \   [RFC3720]   Satran, J., Meth, K., Sapuntzakis, C., Chadalapaka, M.,\n    \
    \           and E. Zeidner, \"Internet Small Computer Systems\n              \
    \ Interface (iSCSI)\", RFC 3720, April 2004.\n   [RFC3722]   Bakke, M., \"String\
    \ Profile for Internet Small Computer\n               Systems Interface (iSCSI)\
    \ Names\", RFC 3722, April 2004.\n   [RFC3723]   Aboba, B., Tseng, J., Walker,\
    \ J., Rangan, V., and F.\n               Travostino, \"Securing Block Storage\
    \ Protocols over IP\",\n               RFC 3723, April 2004.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [RFC2614]   Kempf, J. and E. Guttman, \"An API\
    \ for Service Location\",\n               RFC 2614, June 1999.\n   [SAM2]    \
    \  ANSI T10.  \"SCSI Architectural Model 2\", March 2000.\n   [RFC3721]   Bakke,\
    \ M., Hafner, J., Hufferd, J., Voruganti, K., and M.\n               Krueger,\
    \ \"Internet Small Computer Systems Interface\n               (iSCSI) Naming and\
    \ Discovery\", RFC 3721, April 2004.\n   [ISNS]      Tseng, J., Gibbons, K., Travostino,\
    \ F., Du Laney, C. and\n               J.  Souza, \"Internet Storage Name Service\"\
    , Work in\n               Progress, February 2004.\n   [BOOT]      Sarkar, P.,\
    \ Missimer, D. and C. Sapuntzakis,  \"A Standard\n               for Bootstrapping\
    \ Clients using the iSCSI Protocol\", Work\n               in Progress, March\
    \ 2004.\n   [RFC3105]   Kempf, J. and G. Montenegro, \"Finding an RSIP Server\
    \ with\n               SLP\", RFC 3105, October 2001.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   This document was produced by the iSCSI Naming and\
    \ Discovery team,\n   including Joe Czap, Jim Hafner, John Hufferd, and Kaladhar\
    \ Voruganti\n   (IBM), Howard Hall (Pirus), Jack Harwood (EMC), Yaron Klein (Sanrad),\n\
    \   Marjorie Krueger (HP), Lawrence Lamers (San Valley), Todd Sperry\n   (Adaptec),\
    \ and Joshua Tseng (Nishan).  Thanks also to Julian Satran\n   (IBM) for suggesting\
    \ the use of SLP for iSCSI discovery, and to Matt\n   Peterson (Caldera) and James\
    \ Kempf (Sun) for reviewing the document\n   from an SLP perspective.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mark Bakke\n   Cisco Systems, Inc.\n   7900 International\
    \ Drive, Suite 400\n   Bloomington, MN\n   USA 55425\n   EMail: mbakke@cisco.com\n\
    \   Kaladhar Voruganti\n   IBM Almaden Research Center\n   650 Harry Road\n  \
    \ San Jose, CA 95120\n   EMail: kaladhar@us.ibm.com\n   John L. Hufferd\n   IBM\
    \ Storage Systems Group\n   5600 Cottle Road\n   San Jose, CA 95193\n   Phone:\
    \ +1 408 997-6136\n   EMail: jlhufferd@comcast.net\n   Marjorie Krueger\n   Hewlett-Packard\
    \ Corporation\n   8000 Foothills Blvd\n   Roseville, CA 95747-5668, USA\n   Phone:\
    \ +1 916 785-2656\n   EMail: marjorie_krueger@hp.com\n   Todd Sperry\n   Adaptec,\
    \ Inc.\n   691 South Milpitas Boulevard\n   Milpitas, Ca. 95035\n   Phone: +1\
    \ 408 957-4980\n   EMail: todd_sperry@adaptec.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
