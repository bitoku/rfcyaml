- title: __initial_text__
  contents:
  - '                   cisco Systems X.25 over TCP (XOT)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   5.  TCP Connection, Port Number, and Logical Channel Numbers\
    \ (LCNs).4\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   It is sometimes desirable to transport X.25 over IP internets.\
    \  The\n   X.25 Packet Level requires a reliable link level below it and\n   normally\
    \ uses LAPB.  This memo documents a method of sending X.25\n   packets over IP\
    \ internets by encapsulating the X.25 Packet Level in\n   TCP packets.\n   TCP\
    \ provides a reliable byte stream.  X.25 requires that the layer\n   below it\
    \ provide message semantics, in particular the boundary\n   between packets. \
    \ To provide this, a small (4-byte) XOT header is\n   used between TCP and X.25.\
    \  The primary content of this header is a\n   length field, which is used to\
    \ separate the X.25 packets within the\n   TCP stream.\n   In general, the normal\
    \ X.25 protocol packet formats and state\n   transition rules apply to the X.25\
    \ layer in XOT.  Exceptions to this\n   are noted.\n"
- title: 2. Conventions
  contents:
  - "2. Conventions\n   The following language conventions are used in the items of\n\
    \   specification in this document:\n      o   MUST, SHALL, or MANDATORY -- This\
    \ item is an absolute\n          requirement of the specification.\n      o  \
    \ SHOULD or RECOMMEND -- This item should generally be followed\n          for\
    \ all but exceptional circumstances.\n      o   MAY or OPTIONAL -- This item is\
    \ truly optional and may be\n          followed or ignored according to the needs\
    \ of the implementor.\n   In some places in this document, there is parenthetical\
    \ material\n   labeled \"DISCUSSION\".  This material is intended to give\n  \
    \ clarification and explanation of the preceding text.\n"
- title: 3. Relationship Between XOT and X.25
  contents:
  - "3. Relationship Between XOT and X.25\n   When a networking device (a host, router,\
    \ etc.) has an X.25 engine\n   (i.e., protocol implementation), that engine  may\
    \ be connected to\n   interface(s) running LAPB, and/or to logical interface(s)\
    \ running LLC\n   or XOT/TCP/IP.  In general, the XOT layer itself is not at all\n\
    \   sensitive to what kind of packets the X.25 engine passes to it.\n   However,\
    \ to improve interoperability between separate\n   implementations, this document\
    \ in some cases does specify behavior of\n   the X.25 engine.\n   While this document\
    \ primarily discusses XOT from the perspective of\n   switching X.25 traffic (i.e.,\
    \ connecting an X.25 Virtual Circuit\n   between the local X.25 interfaces of\
    \ two networking devices), this\n   should not prevent a host from offering X.25\
    \ connectivity using XOT.\n   The various X.25 standards may call a given packet\
    \ type by a\n   different name according to the assigned DTE/DCE role of the\n\
    \   interface that originated the packet.  XOT is intended to be\n   insensitive\
    \ to the DTE/DCE role of the local interfaces at either end\n   of an XOT TCP\
    \ connection, so, for this document, the following terms\n   are interchangeable\
    \ unless stated otherwise:\n      o  Call, Call Request and Incoming Call\n  \
    \    o  Call Confirm, Call Accepted and Call Connected\n      o  Clear, Clear\
    \ Request and Clear Indication\n      o  Clear Confirm, DTE Clear Confirmation\
    \ and DCE Clear Confirmation\n      o  Data, DTE Data and DCE Data\n      o  Interrupt,\
    \ DTE Interrupt and DCE Interrupt\n      o  Interrupt Confirm, DTE Interrupt Confirmation\
    \ and\n           DCE Interrupt Confirmation\n      o  RR, DTE RR and DCE RR\n\
    \      o  RNR, DTE RNR and DCE RNR\n      o  REJ, Reject and DTE REJ\n      o\
    \  Reset, Reset Request and Reset Indication\n      o  Reset Confirm, DTE Reset\
    \ Confirmation and DCE Reset Confirmation\n      o  Restart, Restart Request and\
    \ Restart Indication\n      o  Restart Confirm, DTE Restart Confirmation and\n\
    \           DCE Restart Confirmation\n"
- title: 4. Overall Packet Format
  contents:
  - "4. Overall Packet Format\n   The entire encapsulated packet has the following\
    \ format:\n                  ---------------------------------\n             \
    \     |                               |\n                  |       IP Header \
    \              |\n                  |                               |\n      \
    \            ---------------------------------\n                  |          \
    \                     |\n                  |       TCP Header              |\n\
    \                  |                               |\n                  ---------------------------------\n\
    \                  |                               |\n                  |    \
    \   XOT Header              |\n                  |                           \
    \    |\n                  ---------------------------------\n                \
    \  |                               |\n                  |       X.25  Packet \
    \           |\n                  |                               |\n         \
    \         ---------------------------------\n   RFC convention is that a packet\
    \ format is represented graphically\n   with the data sent first above the data\
    \ sent later.  This convention\n   is followed in this document, and therefore,\
    \ while we refer to X.25\n   being transported over TCP, we draw the packet format\
    \ with the X.25\n   portion of the packet lower on the page than the TCP portion.\n"
- title: 4.1 XOT Header
  contents:
  - "4.1 XOT Header\n   The XOT header has the format:\n       0                 \
    \  1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |          Version              |           Length              |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      Version\
    \ (2 octets)\n         The version number of the XOT protocol is encoded in the\
    \ first\n         two octets.  The version number MUST be 0.  Other values of\n\
    \         this field are reserved for future use.  If a value other than\n   \
    \      0 is received, then the TCP connection MUST be closed.\n      Length (2\
    \ octets)\n         The length of the X.25 packet is encoded in the second two\n\
    \         octets.  Values must be legal X.25 packet lengths.  If the\n       \
    \  Length field has an illegal value, then the TCP connection MUST\n         be\
    \ closed.\n"
- title: 5. TCP Connection, Port Number, and Logical Channel Numbers (LCNs)
  contents:
  - "5. TCP Connection, Port Number, and Logical Channel Numbers (LCNs)\n   A separate\
    \ TCP connection MUST be used for each X.25 virtual circuit.\n   All connections\
    \ MUST be made to TCP port number 1998.  This port\n   number is an IANA Registered\
    \ Port Number registered by cisco Systems;\n   cisco has designated it for use\
    \ by XOT.\n   The TCP connection MUST be created before the virtual circuit can\
    \ be\n   established.  The TCP connection MAY be maintained after the virtual\n\
    \   circuit has been cleared.  Data MUST NOT be passed along with the TCP\n  \
    \ SYN packet.\n   The Logical Channel Number (LCN) field in the X.25 header has\
    \ no\n   significance and has arbitrary values.  A corollary of this is that\n\
    \   there is no assignment of one side of the connection to be DTE and\n   another\
    \ to be DCE.\n   DISCUSSION\n      Consider three devices A, B and C, where A\
    \ and B both conduct XOT\n      sessions to C.  It's possible that C could receive\
    \ two calls with\n      the same LCN and, unless the X.25 engine could tell that\
    \ they were\n      received on different logical (XOT) interfaces, here would\
    \ a\n      danger of call collision (indeed a valid LCN on one interface may\n\
    \      not even be valid on a different interface).  It is therefore\n      necessary\
    \ for C's X.25 engine to distinguish between the two\n      streams, but the LCN\
    \ field is not sufficient to do this.  The XOT\n      protocol design decision\
    \ was to expect the XOT layer to\n      communicate the stream identification\
    \ to the X.25 layer.\n"
- title: 6. XOT Packets
  contents:
  - "6. XOT Packets\n   For each X.25 packet received from the TCP connection to be\
    \ sent out\n   a local interface, an XOT implementation MUST set the packet's\n\
    \   logical channel number to that used on the outgoing interface.  For\n   the\
    \ purposes of this RFC, a logical channel number is the 12 bit\n   field confusingly\
    \ defined by the X.25 Recommendations as the high-\n   order 4 bit \"logical channel\
    \ group number\" and low-order 8 bit\n   \"logical channel number\", where the\
    \ latter phrase is used to refer to\n   both the aggregated 12 bits and the low-order\
    \ 8 bits.\n   An XOT implementation SHOULD NOT modify the X.25 packet header\n\
    \   information received on a local interface to be transmitted over the\n   TCP\
    \ connection.\n   An XOT implementation MUST modify the X.25 packet header information\n\
    \   as required for proper X.25 protocol operation for packets received\n   on\
    \ a TCP connection to be transmitted over a local interface.\n   An XOT implementation\
    \ MAY support connection between interfaces that\n   use different flow control\
    \ modulos.  If this feature is supported,\n   XOT MUST modify the packet General\
    \ Format Identifier on all packets\n   received over the TCP connection to set\
    \ the proper modulus\n   identifier.\n"
- title: 6.1 Virtual Circuit Setup and Clearing
  contents:
  - "6.1 Virtual Circuit Setup and Clearing\n   Once a TCP connection has been established,\
    \ the X.25 Call packet is\n   sent by the XOT that initiated the TCP connection.\
    \  Eventually a Call\n   Confirm or Clear packet is received, or the X.25 T11/T21\
    \ timeout\n   occurs or the XOT TCP connection is closed.  The usual X.25 state\n\
    \   transitions are followed.\n   Any legal X.25 facilities from the family of\
    \ X.25 protocols\n   (including but not limited to the 1980, 1984 and 1988 CCITT\
    \ X.25\n   Recommendations) MAY be included in the Call, Call Confirm and Clear\n\
    \   packets.  Receipt of an unknown or unsupported X.25 facility received\n  \
    \ from the TCP connection SHOULD be ignored (i.e., not presented in the\n   packet\
    \ sent out the local interface) or treated as an error as\n   defined by the X.25\
    \ standard implemented.\n   To simplify end-to-end flow control, the packet size\
    \ and window size\n   are always sent explicitly as facilities in the Call packet.\
    \   The\n   Call packet MUST contain both Packet Size and Window Size facilities.\n\
    \   The Call Confirm packet MAY contain these facilities.  The handling\n   of\
    \ a Call received over a TCP connection that does not encode one or\n   both of\
    \ the flow control facilities is a local matter--if the XOT\n   accepts such a\
    \ Call, it MUST encode the missing flow control facility\n   values that apply\
    \ to the connection in the returned Call Confirm\n   packet.\n   DISCUSSION\n\
    \      X.25 interfaces normally have a concept of network default values\n   \
    \   for packet size and window size.  It was thought that when\n      connecting\
    \ diverse sites over a TCP/IP network this concept would\n      be difficult to\
    \ achieve in practice.  If there is no network\n      default, then each call\
    \ must state the packet size and window\n      size.  This is the reason for requiring\
    \ the packet size and window\n      size facilities.  It is expected that this\
    \ can be achieved either\n      by the XOT layer itself, or by configuring the\
    \ X.25 engine such\n      that there no network default on this interface.\n \
    \  After sending a Clear the TCP connection MAY be closed immediately\n   without\
    \ waiting for the Clear Confirm.  A Clear Confirm received on\n   the TCP connection\
    \ MAY be silently discarded.\n   A packet with an invalid X.25 Packet Type Identifier\
    \ (PTI) received\n   over the TCP connection before a Call has been received (i.e.,\
    \ while\n   in the P1 state) MUST be silently discarded.\n"
- title: 6.2 Data and Flow Control
  contents:
  - "6.2 Data and Flow Control\n   DISCUSSION\n      The implementation of X.25 flow\
    \ control is a local matter, but\n      different implementation choices affect\
    \ XOT behavior.\n      An XOT implementation may implement either end-to-end flow\n\
    \      control, where DATA, RR and RNR packets are sent over the TCP\n      connection\
    \ as received over the local interface, or local flow\n      control, where flow\
    \ control packets (RR, RNR and, if supported,\n      REJ) are sent on a VC according\
    \ to local criteria, a complete\n      packet sequence of DATA packets may be\
    \ fragmented or combined, and\n      data packet numbering normally has only local\
    \ DTE-DCE\n      significance.\n      Existing implementations of XOT perform\
    \ end-to-end flow control.\n      Data and flow control packets are simply transferred\
    \ between the\n      two local interfaces via the TCP connection, adjusting the\
    \ X.25\n      header data as necessary for mixed modulo operation.  This does\n\
    \      not preclude an XOT implementation that performs local flow\n      control,\
    \ but interoperability requires that a local flow control\n      implementation\
    \ conduct the XOT session such that a connecting\n      end-to-end flow control\
    \ implementation receives Data packets of\n      the proper size and flow control\
    \ fields with appropriate P(S) and\n      P(R) values.\n      An X.25 implementation\
    \ that performs local flow control similarly\n      may set up a Call between\
    \ two local interfaces where each logical\n      channel has its own packet and\
    \ window sizes and Data packets must\n      be fragmented or collected between\
    \ the interfaces and each\n      interface manages distinct packet sequence numbers;\
    \ XOT operation\n      is simply an extension to this operation as a VC is connected\n\
    \      between the local interface and an XOT/TCP virtual interface, each\n  \
    \    of which have distinct window and packet sizes.\n   An XOT that implements\
    \ local flow control MUST send data packet\n   acknowledgements across the TCP\
    \ connection for the DATA packets it\n   receives from the TCP connection, using\
    \ the received packet numbers,\n   and MUST observe the maximum packet sizes agreed\
    \ to across the TCP\n   connection.\n   An XOT implementation MUST NOT assume\
    \ that an RNR sent across the TCP\n   connection will stop the flow of DATA packets\
    \ in the other direction.\n   An RNR packet received from the TCP connection MAY\
    \ cause an RNR\n   packet to be sent across the local interface; end-to-end flow\
    \ control\n   implementations MAY communicate the P(R) in an RNR packet received\n\
    \   from the TCP connection by sending an RR packet on the local\n   interface.\n\
    \   An XOT implementation that allows mixed-modulo connections and\n   implements\
    \ end-to-end flow control MUST intervene in the window size\n   negotiation process\
    \ when a modulo 128 Call Request proposes a window\n   size of 8 or larger to\
    \ an XOT connection that serves a modulo 8\n   interface.  The intervention MUST\
    \ either refuse the connection or\n   lower the too-large window size(s) to a\
    \ value valid for the interface\n   and indicate the final result of the window\
    \ size negotiation process\n   in the Call Confirm packet returned over the TCP\
    \ connection.\n   For any type of flow control implementation that supports mixed\n\
    \   modulo connections, both cooperating XOTs MUST interpret the the P(S)\n  \
    \ and P(R) values received from the TCP connection and perform any flow\n   control\
    \ operation appropriate for correct X.25 operation of the local\n   interface.\
    \  End-to-end flow control implementations MUST translate\n   between the two\
    \ modulos and construct the analogous X.25 header P(S)\n   and P(R) fields for\
    \ DATA, RR and RNR packets.\n   An XOT implementation MAY support connecting two\
    \ XOT TCP sessions to\n   each other.  If this feature is supported, XOT MUST\
    \ simply connect\n   the two TCP sessions without modifying the data passed.\n"
- title: 6.3 Interrupt, and Reset Packets
  contents:
  - "6.3 Interrupt, and Reset Packets\n   Interrupt, Interrupt Confirm, Reset and\
    \ Reset Confirm packets are\n   sent over the TCP connection using the normal\
    \ X.25 packet formats and\n   state transitions.  The end-to-end nature of both\
    \ the Interrupt and\n   Reset services MUST be maintained for correct X.25 operation.\n"
- title: 6.4 Restart, DTE Reject, Diagnostics, and Registration
  contents:
  - "6.4 Restart, DTE Reject, Diagnostics, and Registration\n   X.25 packets that\
    \ have only a local DTE/DCE interface significance\n   (Restart, Restart Confirm,\
    \ DTE Reject, Diagnostic, Registration\n   Request and Registration Confirmation)\
    \ MUST NOT be sent over the TCP\n   connection.  If one of these packets is received,\
    \ then it MUST be\n   silently discarded.\n"
- title: 6.5 PVC Setup
  contents:
  - "6.5 PVC Setup\n   An XOT implementation MAY support connecting a PVC via XOT.\n\
    \      DISCUSSION\n      X.25 PVCs are Virtual Circuits that are presumed to be\
    \ available\n      when the X.25 service is available (i.e., in the R1 state).\n\
    \      Connecting a PVC via XOT is complicated because no Call, Call\n      Confirm,\
    \ Clear or Clear Confirm packets are transferred (or\n      allowed) across the\
    \ X.25 interface--PVCs are simply available\n      because they have been provisioned\
    \ by the network provider as\n      contracted for by the network users.\n   \
    \   Supporting a PVC using XOT requires a data exchange between the\n      XOT\
    \ entities that is outside the scope of the X.25 standards, and\n      must provide\
    \ for a number of error conditions.\n   The setup of a PVC between two XOT entities\
    \ is performed by\n   exchanging a non-standard X.25 packet type (encapsulated\
    \ in an XOT\n   Header); the PVC setup exchange takes place immediately after\
    \ a new\n   TCP XOT connection has been established.  The XOT implementation that\n\
    \   initiated the TCP connection is the initiator; the other XOT is the\n   responder.\n\
    \   The PVC Setup packet includes the X.25 General Format Identifier, LCN\n  \
    \ and Packet Type Identifier fields followed by additional data.  This\n   non-standard\
    \ packet type takes the form:\n   +--+--+--+--+--+--+--+--+--+\n   | X.25 GFI\
    \  |  X.25 LCN    |\n   +--+--+--+--+              +\n   |                   \
    \       |\n   +--+--+--+--+--+--+--+--+--+\n   |        X.25 PTI          | PVC\
    \ setup PTI (= 0xF5)\n   +--+--+--+--+--+--+--+--+--+\n   |                  \
    \        | version (= 0x81)\n   +--+--+--+--+--+--+--+--+--+\n   |           \
    \               | status\n   +--+--+--+--+--+--+--+--+--+\n   |              \
    \            | initiator interface name length (N)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | initiator LCN (high octet)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | initiator LCN (low octet)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | responder interface name length (M)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | responder LCN (high octet)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | responder LCN (low octet)\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | sender incoming window\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | sender outgoing window\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | sender incoming max. packet size\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | sender outgoing max. packet size\n   +--+--+--+--+--+--+--+--+--+\n\
    \   |                          | initiator interface name (N octets)\n   |   \
    \                       |\n   +--+--+--+--+--+--+--+--+--+\n   |             \
    \             | responder interface name (M octets)\n   |                    \
    \      |\n   +--+--+--+--+--+--+--+--+--+\n   DISCUSSION\n      The PVC setup\
    \ packet was designed so that the responder could\n      simply modify a few fields\
    \ of the received packet and send it back\n      to the initiator.\n      The\
    \ Packet Type Identifier was chosen from the unused X.25 PTI\n      values so\
    \ it is distinct from the standard X.25 Packet Type\n      Identifiers.\n    \
    \  The PVC setup version value was chosen to prevent connections with\n      prior\
    \ experimental implementations.\n   The PVC status field has the following values\
    \ defined:\n   Status    Meaning\n   ------    --------------------------------------\n\
    \    0x00     Waiting to connect\n    0x08     Destination disconnected\n    0x09\
    \     PVC/TCP connection refused\n    0x0A     PVC/TCP routing error\n    0x0B\
    \     PVC/TCP connect timed out\n    0x10     Trying to connect via TCP\n    0x11\
    \     Awaiting PVC-SETUP reply\n    0x12     Connected\n    0x13     No such destination\
    \ interface\n    0x14     Destination interface is not up\n    0x15     Non-X.25\
    \ destination interface\n    0x16     No such destination PVC\n    0x17     Destination\
    \ PVC configuration mismatch\n    0x18     Mismatched flow control values\n  \
    \  0x19     Can't support flow control values\n    0x1A     PVC setup protocol\
    \ error\n   DISCUSSION\n      Not all of the PVC status values are appropriate\
    \ for a PVC setup\n      packet; these values represent a particular implementation\
    \ that\n      chose to assign values in three groups that correspond to a short\n\
    \      timer for a connect attempt (0x00 through 0x07), a long timer for\n   \
    \   a connect attempt (0x08 through 0x0F) and no attempt to connect\n      (greater\
    \ than 0x0F).  The values that are appropriate for a PVC\n      setup packet are\
    \ 0x00 and those values greater than 0x12.\n      Most of the PVC status error\
    \ values that may be found in a setup\n      message are self-explanatory, with\
    \ a few exceptions.  The value\n      0x17, \"Destination PVC configuration mismatch\"\
    \ may returned in the\n      case that the targeted PVC already has an XOT PVC\
    \ connection\n      active.  The value 0x19, \"Can't support flow control values\"\
    , may\n      be returned when the flow control values match but, for instance,\n\
    \      a modulo 8 interface is requested to set up a PVC with a window\n     \
    \ size greater than 7 or an interface is requested to set up a PVC\n      with\
    \ a maximum packet size that is too large for its data link\n      layer to transfer.\n\
    \   An XOT MAY retry a failed PVC setup; if implemented the XOT SHOULD\n   wait\
    \ between attempts (5 minutes is suggested).\n   Each XOT PVC is configured with\
    \ the identity of the other XOT (i.e.,\n   IP address), the name of the interface\
    \ to connect to, the Logical\n   Channel Number on that interface and the flow\
    \ control values to use.\n   These data are present in the PVC setup packets and\
    \ the responding\n   XOT verifies the configurations are compatible.\n   The interface\
    \ name fields are the ASCII names of the two interfaces\n   involved.  These names\
    \ SHOULD be case-insensitive.  There MUST NOT be\n   any padding or trailing zero\
    \ octets between or after the interface\n   names.\n   The flow control values\
    \ are the values from the perspective of the\n   local interface of the XOT implementation\
    \ that sent the PVC setup\n   packet.  The maximum packet size values are encoded\
    \ as they are in\n   the packet size facility, (i.e., the base-2 log of the size\
    \ in\n   octets, so 7 represents a maximum packet size of 128 octets).  If the\n\
    \   responding XOT implements end-to-end flow control, it will require\n   that\
    \ the configured flow control values be complimentary, so a\n   returned status\
    \ of 0x18 will indicate the values required by the\n   responding XOT (note that\
    \ the incoming value of one local interface\n   corresponds to the outgoing value\
    \ of the connecting local interface,\n   and vice-versa).\n   After establishing\
    \ the TCP connection the initiator sends a PVC setup\n   packet, the status value\
    \ MUST be 0x00; the responder will reply with\n   its own PVC setup packet or\
    \ by closing the TCP connection.  An XOT\n   PVC setup is successful if the responder\
    \ returns a status of 0x00.\n   Once the XOT PVC connection is successfully established,\
    \ each XOT\n   MUST complete a Reset procedure on the local interface, so if each\n\
    \   local interface LCI is in state D1, a Reset packet would be generated\n  \
    \ both to the local interface and the XOT TCP connection.\n   An XOT PVC connection\
    \ is broken by simply closing the TCP connection;\n   X.25 packets that are not\
    \ legal for PVCs MUST NOT be transferred\n   across an XOT PVC connection.  When\
    \ a local interface undergoes the\n   Restart procedure, the XOT PVC connections\
    \ MUST be either perform a\n   Reset (which is appropriate if the interface remains\
    \ in state R1) or\n   close the XOT PVC connection.\n   DISCUSSION\n      An XOT\
    \ implementation SHOULD also consider how a PVC setup\n      collision will be\
    \ handled.  Receipt of an XOT PVC setup for a PVC\n      that is itself attempting\
    \ to setup an XOT connection could either\n      accept a (valid) setup attempt\
    \ and, if two TCP XOT connections\n      result, simply use one connection to\
    \ send XOT data (XOT MUST NOT\n      send traffic over both) and accept XOT data\
    \ on either, or it can\n      close the incoming attempt and, if no connections\
    \ result, retry\n      the connection after waiting for a random interval.  If\
    \ two\n      connections are allowed for a PVC, closure of one SHOULD result in\n\
    \      the closure of the other.\n"
- title: 7. Acknowledgments
  contents:
  - "7. Acknowledgments\n   Greg Satz is the original designer and implementor of\
    \ X.25 over TCP.\n   Aviva Garrett of cisco Systems reviewed the specification\
    \ and made\n   many editorial corrections.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9. References
  contents:
  - "9. References\n   [1] Reynolds, J., and J. Postel, \"Assigned Numbers\", STD\
    \ 2, RFC 1340,\n       USC/Information Sciences Institute, July 1992.\n   [2]\
    \ CCITT, Blue Book Volume VIII--Fascicle VIII.2, \"Data\n       Communication\
    \ Networks: Services and Facilities, Interfaces\";\n       Recommendation X.25,\
    \ \"Interface Between Data Circuit-Terminating\n       Equipment (DCE) for Terminals\
    \ Operating in the Packet Mode and\n       Connected to Public Data Networks by\
    \ Dedicated Circuit\", 1989,\n       Geneva.\n"
- title: 10. Authors' Addresses
  contents:
  - "10. Authors' Addresses\n       James R. Forster\n       Engineering Dept.\n \
    \      cisco Systems\n       1525 O'Brien Dr.\n       Menlo Park. CA. 94025\n\
    \       Phone: 1.415.688.8245\n       Fax:   1.415.688.8282\n       EMail: forster@cisco.com\n\
    \       Greg Satz\n       Engineering Dept.\n       cisco Systems\n       1525\
    \ O'Brien Dr.\n       Menlo Park. CA. 94025\n       Phone: 1.415.688.8245\n  \
    \     Fax:   1.415.688.8282\n       EMail: satz@cisco.com\n       Gilbert Glick\n\
    \       Engineering Dept.\n       cisco Systems\n       1525 O'Brien Dr.\n   \
    \    Menlo Park. CA. 94025\n       Phone: 1.415.688.8245\n       Fax:   1.415.688.8282\n\
    \       EMail: gglick@cisco.com\n       Bob Day\n       Joint Network Team\n \
    \      c/o Rutherford Appleton Laboratory\n       Chilton\n       Didcot\n   \
    \    Oxfordshire OX11 0QX\n       United Kingdom\n       Phone: 44.235.44.5163\n\
    \       Fax:   44.235.44.6251\n       EMail: R.Day@jnt.ac.uk\n"
