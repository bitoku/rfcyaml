Compressed Data within an Internet Electronic Data Interchange (EDI)
This document explains the rules and procedures for utilizing compression (RFC 3274) within an Internet EDI (Electronic Data Interchange) 'AS' message, as defined in RFCs 3335, 4130, and 4823.
The content of this RFC was at one time considered by the IETF, and therefore it may resemble a current IETF work in progress or a published IETF work.
This RFC is not a candidate for any level of Internet Standard.
Readers of this RFC should exercise caution in evaluating its value for implementation and deployment.
Introduction Historically, electronic messages produced by systems following the guidelines as outlined in the IETF EDIINT Working Group specifications AS1 [AS1], AS2 [AS2], and AS3 [AS3] did not have a way to provide a standardized transport neutral mechanism for compressing large payloads.
However, with the development of RFC 3274, "Compressed Data Content Type for Cryptographic Message Syntax (CMS)", we now have a transport neutral mechanism for compressing large payloads.
A typical EDIINT 'AS' message is a multi layered MIME message, consisting of one or more of the following: payload layer, signature layer, and/or encryption layer.
When an 'AS' message is received, a Message Integrity Check (MIC) value must be computed based upon defined rules within the EDIINT 'AS' RFCs and must be returned to the sender of the message via a Message Disposition Notification (MDN).
The addition of a new compression layer will require this document to outline new procedures for building/layering 'AS' messages and computing a MIC value that is returned in the MDN receipt.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The compressed data CMS (Cryptographic Message Syntax) MIME entity as described in [COMPRESSED DATA] may encapsulate a MIME entity that consists of either an unsigned or signed business document.
Implementers are to follow the appropriate specifications identified in the "MIME Media Types" registry [MIME TYPES] maintained by IANA for the type of object being packaged.
For example, to package an XML object, the MIME media type of "application/xml" is used in the Content Type MIME header field and the specifications for enveloping the object are contained in [XMLTYPES].
xml version "1.0" encoding "UTF 8"?
The MIME entity will be compressed using [ZLIB] and placed inside a CMS compressed data object as outlined in [COMPRESSED DATA].
The compressed data object will be MIME encapsulated according to details outlined in [S/MIME3.1], RFC 3851, Section 3.5.
Content Type: application/pkcs7 mime; smime type compressed data; name smime.p7z Content Transfer Encoding:
base64 Content Disposition: attachment; filename smime.p7z MIAGCyqGSIb3DQEJEAEJoIAwgAIBADANBgsqhkiG9w0BCRADCDCABgkqhkiG9w0BBwGg Hnic7ZRdb9owFIbvK/k/5PqVYPFXGK12YYyboVFASSp1vQtZGiLRACZE49/XHoUW7S/0 fU5ivWnasml72XFb3gb5druui7ytN803M570nii7C5r8tfwR281hy/p/KSM3 jzH5s3  P3VT3QbLusnt8WPIuN5vN
C5P v ORAcshOGeCcdFJyfgFxdtCdEcmOrbinc/ BBMzRThEYpwl jEBpciSGWQkI0TSlREm SGLuESm/iKUFt1y4XHBO2a5oq0IKJKWLS9kUZTA7vC5LSxYmgVL46SIWxIfWBQd6Adrn vGxVibLqRCtIpp4g2qpdtqK1LiOeolpVK5wVQ5P7 QjZAlrh0cePYTx/gNZuB9Vhndtg W9ogK
Content Transfer Encoding of base64 would only be required if the compressed data MIME bodypart is transferred via a 7 bit protocol like SMTP and is visible in the outer layer of the MIME message.
If the compressed data MIME bodypart is placed inside of an encrypted MIME bodypart, content transfer encoding would not be required on the compressed data MIME bodypart, but would be required on the encrypted MIME bodypart.
Structure of an EDI MIME Compressed Message
When compressing a document that will be signed, the application MAY compress the innermost MIME body before signing (see Sections 3.2 and 3.5), or it MAY compress the outer multipart/signed MIME body (see Sections 3.3 and 3.6), but it MUST NOT do both within the same document.
The receiving application MUST support both methods of compression when unpackaging an inbound document.
The following sections (3.1 3.6) show the individual layers of a properly formatted EDI MIME message with a compressed data layer.
Please refer to the appropriate RFCs for the proper construction of the resulting MIME message.
"application/xxxxxxx" is used to indicate an application media subtype.
This section shows the layers of an unsigned, unencrypted compressed message.
The first line indicates that the MIME message conforms to [RFC5322] and [RFC2045] with a Content Type of application/pkcs7 mime.
Within the pkcs7 mime entity is a compressed MIME entity containing the electronic business document.
This section shows the layers of a signed, unencrypted compressed message where the payload is compressed before being signed.
This section shows the layers of a signed, unencrypted compressed message where a signed payload is compressed.
RFC3851 (application/pkcs7 mime)  [COMPRESSED DATA](application/pkcs7 mime)
This section shows the layers of an unsigned, encrypted compressed message where the payload is compressed before it is encrypted.
This section shows the layers of a signed, encrypted compressed message where the payload is compressed before being signed and encrypted.
RFC3851 (application/pkcs7 mime)  [COMPRESSED DATA](application/pkcs7 mime)
This section shows the layers of a signed, encrypted compressed message where the payload is signed before being compressed and encrypted.
MIC Calculations for Compressed Messages Requesting Signed Receipts 4.1.
MIC Calculation for Signed Message For any signed message
, the MIC to be returned is calculated over the same data that was signed in the original message as per [AS1].
The signed content will be a MIME bodypart that contains either compressed or uncompressed data.
MIC Calculation for Encrypted, Unsigned Message
For encrypted, unsigned messages, the MIC to be returned is calculated over the uncompressed data content including all MIME header fields and any applied Content Transfer Encoding.
MIC Calculation for Unencrypted, Unsigned Message
For unsigned, unencrypted messages, the MIC is calculated over the uncompressed data content including all MIME header fields and any applied Content Transfer Encoding.
For a received message where a receipt has been requested and decompression fails, the following disposition modifier will be returned in the signed MDN. "
Error: decompression failed" the receiver could not decompress the message 6.
Any application that supports the compression methods outlined within this document MUST use a version identifier value of "1.1" or greater within the AS2 or AS3 Version header field as describe in [AS2] and [AS3].
Compression Formats Implementations MUST support ZLIB [ZLIB], which utilizes DEFLATE [DEFLATE].
Security Considerations This document is not concerned with security, except for any security concerns mentioned in the referenced RFCs.
