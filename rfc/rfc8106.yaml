- title: __initial_text__
  contents:
  - '        IPv6 Router Advertisement Options for DNS Configuration

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies IPv6 Router Advertisement (RA) options\n\
    \   (called \"DNS RA options\") to allow IPv6 routers to advertise a list\n  \
    \ of DNS Recursive Server Addresses and a DNS Search List to IPv6\n   hosts.\n\
    \   This document, which obsoletes RFC 6106, defines a higher default\n   value\
    \ of the lifetime of the DNS RA options to reduce the likelihood\n   of expiry\
    \ of the options on links with a relatively high rate of\n   packet loss.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8106.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Applicability Statements ...................................3\n  \
    \    1.2. Coexistence of RA Options and DHCP Options for DNS\n           Configuration\
    \ ..............................................4\n   2. Requirements Language\
    \ ...........................................4\n   3. Terminology .....................................................4\n\
    \   4. Overview ........................................................5\n  \
    \ 5. Neighbor Discovery Extension ....................................5\n    \
    \  5.1. Recursive DNS Server Option ................................6\n      5.2.\
    \ DNS Search List Option .....................................7\n      5.3. DNS\
    \ Configuration Procedure ................................8\n           5.3.1.\
    \ Procedure in IPv6 Hosts .............................9\n           5.3.2. Warnings\
    \ for DNS Options Configuration ..............9\n   6. Implementation Considerations\
    \ ..................................10\n      6.1. DNS Repository Management .................................10\n\
    \      6.2. Synchronization between DNS Server List and\n           Resolver Repository\
    \ .......................................11\n      6.3. Synchronization between\
    \ DNS Search List and\n           Resolver Repository .......................................12\n\
    \   7. Security Considerations ........................................12\n  \
    \    7.1. Security Threats ..........................................12\n    \
    \  7.2. Recommendations ...........................................13\n   8. IANA\
    \ Considerations ............................................13\n   9. References\
    \ .....................................................14\n      9.1. Normative\
    \ References ......................................14\n      9.2. Informative\
    \ References ....................................14\n   Appendix A. Changes from\
    \ RFC 6106 .................................17\n   Acknowledgements ..................................................18\n\
    \   Authors' Addresses ................................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The purpose of this document is to standardize IPv6 Router\n\
    \   Advertisement (RA) options (DNS RA options) for DNS Recursive Server\n   Addresses\
    \ used for DNS name resolution in IPv6 hosts, and also for a\n   DNS Search List\
    \ (DNSSL) of domain suffixes.\n   IPv6 Neighbor Discovery (ND) and IPv6 Stateless\
    \ Address\n   Autoconfiguration (SLAAC) provide ways to configure either fixed\
    \ or\n   mobile nodes with one or more IPv6 addresses, default routers, and\n\
    \   some other parameters [RFC4861] [RFC4862].\n   It is infeasible to manually\
    \ configure nomadic hosts each time they\n   connect to a different network. \
    \ While a one-time static\n   configuration is possible, it is generally not desirable\
    \ on general-\n   purpose hosts such as laptops.  For instance, locally defined\n\
    \   namespaces would not be available to the host if it were to run its\n   own\
    \ recursive name server directly connected to the global DNS.\n   The DNS information\
    \ can also be provided through DHCPv6 [RFC3315]\n   [RFC3736] [RFC3646].  However,\
    \ access to DNS is a fundamental\n   requirement for almost all hosts, so IPv6\
    \ SLAAC cannot stand on its\n   own as an alternative deployment model in any\
    \ practical network\n   without any support for DNS configuration.\n   These issues\
    \ are not pressing in dual-stack networks as long as a DNS\n   server is available\
    \ on the IPv4 side, but they become more critical\n   with the deployment of IPv6-only\
    \ networks.  As a result, this\n   document defines a mechanism based on DNS RA\
    \ options to allow IPv6\n   hosts to perform automatic DNS configuration.\n"
- title: 1.1.  Applicability Statements
  contents:
  - "1.1.  Applicability Statements\n   RA-based DNS configuration is a useful alternative\
    \ in networks where\n   an IPv6 host's address is autoconfigured through IPv6\
    \ SLAAC and where\n   either (i) there is no DHCPv6 infrastructure at all or (ii)\
    \ some\n   hosts do not have a DHCPv6 client.  The intention is to enable the\n\
    \   full configuration of basic networking information for hosts without\n   requiring\
    \ DHCPv6.  However, for networks that need to distribute\n   additional information,\
    \ DHCPv6 is likely to be employed.  In these\n   networks, RA-based DNS configuration\
    \ may not be needed.\n   RA-based DNS configuration allows an IPv6 host to acquire\
    \ the DNS\n   configuration (i.e., DNS Recursive Server Addresses and the DNSSL)\n\
    \   for the link(s) to which the host is connected.  Furthermore, the\n   host\
    \ learns this DNS configuration from the same RA message that\n   provides configuration\
    \ information for the link.\n   The advantages and disadvantages of the RA-based\
    \ approach are\n   discussed in [RFC4339] along with other approaches, such as\
    \ the DHCP\n   and well-known anycast address approaches.\n"
- title: 1.2.  Coexistence of RA Options and DHCP Options for DNS Configuration
  contents:
  - "1.2.  Coexistence of RA Options and DHCP Options for DNS Configuration\n   Two\
    \ protocols exist to configure the DNS information on a host: the\n   RA options\
    \ specified in this document and the DHCPv6 options\n   specified in [RFC3646].\
    \  They can be used together.  The rules\n   governing the decision to use stateful\
    \ configuration mechanisms are\n   specified in [RFC4861].  Hosts conforming to\
    \ this specification MUST\n   extract DNS information from RA messages, unless\
    \ static DNS\n   configuration has been specified by the user.  If there is DNS\n\
    \   information available from multiple RAs and/or from DHCP, the host\n   MUST\
    \ maintain an ordered list of this information as specified in\n   Section 5.3.1.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   This document uses the terminology defined in [RFC4861] and\n\
    \   [RFC4862].  In addition, six new terms are defined below:\n   o  Recursive\
    \ DNS Server (RDNSS): A server that provides a recursive\n      DNS resolution\
    \ service for translating domain names into IP\n      addresses or resolving PTR\
    \ records as defined in [RFC1034] and\n      [RFC1035].\n   o  RDNSS Option: An\
    \ IPv6 RA option to deliver the RDNSS information\n      to IPv6 hosts [RFC4861].\n\
    \   o  DNS Search List (DNSSL): The list of DNS suffix domain names used\n   \
    \   by IPv6 hosts when they perform DNS query searches for short,\n      unqualified\
    \ domain names.\n   o  DNSSL Option: An IPv6 RA option to deliver the DNSSL information\n\
    \      to IPv6 hosts.\n   o  DNS Repository: Two data structures for managing\
    \ DNS configuration\n      information in the IPv6 protocol stack, in addition\
    \ to the\n      Neighbor Cache and Destination Cache for Neighbor Discovery\n\
    \      [RFC4861].  The first data structure is the DNS Server List for\n     \
    \ RDNSS addresses, and the second is the DNSSL for DNS search domain\n      names.\n\
    \   o  Resolver Repository: Configuration repository with RDNSS addresses\n  \
    \    and a DNSSL that a DNS resolver on the host uses for DNS name\n      resolution\
    \ -- for example, the UNIX resolver file (i.e.,\n      /etc/resolv.conf) and the\
    \ Windows registry.\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   This document standardizes an ND option called the \"RDNSS option\"\
    ,\n   which contains the addresses of RDNSSes.  This document also\n   standardizes\
    \ an ND option called the \"DNSSL option\", which contains\n   the DNSSL.  This\
    \ is to maintain parity with the DHCPv6 options and to\n   ensure that there is\
    \ necessary functionality to determine the search\n   domains.\n   The existing\
    \ ND message (i.e., RA) is used to carry this information.\n   An IPv6 host can\
    \ configure the IPv6 addresses of one or more RDNSSes\n   via RA messages.  Through\
    \ the RDNSS and DNSSL options, along with the\n   Prefix Information option based\
    \ on the ND protocol [RFC4861]\n   [RFC4862], an IPv6 host can perform the network\
    \ configuration of its\n   IPv6 address and the DNS information simultaneously\
    \ without needing\n   DHCPv6 for the DNS configuration.  The RA options for RDNSS\
    \ and DNSSL\n   can be used on networks that support the use of ND.\n   This approach\
    \ requires manual configuration or automatic mechanisms\n   (e.g., DHCPv6 or vendor-proprietary\
    \ configuration mechanisms) to\n   configure the DNS information in routers sending\
    \ the advertisements.\n   The automatic configuration of RDNSS addresses and a\
    \ DNSSL in routers\n   is out of scope for this document.\n"
- title: 5.  Neighbor Discovery Extension
  contents:
  - "5.  Neighbor Discovery Extension\n   The IPv6 DNS configuration mechanism described\
    \ in this document needs\n   two ND options in Neighbor Discovery: (i) the RDNSS\
    \ option and\n   (ii) the DNSSL option.\n"
- title: 5.1.  Recursive DNS Server Option
  contents:
  - "5.1.  Recursive DNS Server Option\n   The RDNSS option contains one or more IPv6\
    \ addresses of RDNSSes.  All\n   of the addresses share the same Lifetime value.\
    \  If it is desirable\n   to have different Lifetime values, multiple RDNSS options\
    \ can be\n   used.  Figure 1 shows the format of the RDNSS option.\n      0  \
    \                 1                   2                   3\n      0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type      |     Length    |           Reserved            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         Lifetime                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ :            Addresses of IPv6 Recursive DNS Servers            :\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 1: RDNSS Option Format\n   Fields:\n   Type   \
    \     8-bit identifier of the RDNSS option type as assigned by\n             \
    \  IANA: 25\n   Length      8-bit unsigned integer.  The length of the option\n\
    \               (including the Type and Length fields) is in units of\n      \
    \         8 octets.  The minimum value is 3 if one IPv6 address is\n         \
    \      contained in the option.  Every additional RDNSS address\n            \
    \   increases the length by 2.  The Length field is used by\n               the\
    \ receiver to determine the number of IPv6 addresses in\n               the option.\n\
    \   Lifetime    32-bit unsigned integer.  The maximum time in seconds\n      \
    \         (relative to the time the packet is received) over which\n         \
    \      these RDNSS addresses MAY be used for name resolution.\n              \
    \ The value of Lifetime SHOULD by default be at least\n               3 * MaxRtrAdvInterval,\
    \ where MaxRtrAdvInterval is the\n               maximum RA interval as defined\
    \ in [RFC4861].  A value of\n               all one bits (0xffffffff) represents\
    \ infinity.  A value\n               of zero means that the RDNSS addresses MUST\
    \ no longer\n               be used.\n   Addresses of IPv6 Recursive DNS Servers\n\
    \               One or more 128-bit IPv6 addresses of the RDNSSes.  The\n    \
    \           number of addresses is determined by the Length field.\n         \
    \      That is, the number of addresses is equal to\n               (Length -\
    \ 1) / 2.\n   Note: The addresses for RDNSSes in the RDNSS option MAY be link-local\n\
    \         addresses.  Such link-local addresses SHOULD be registered in\n    \
    \     the Resolver Repository along with the corresponding link zone\n       \
    \  indices of the links that receive the RDNSS option(s) for them.\n         The\
    \ link-local addresses MAY be represented in the Resolver\n         Repository\
    \ with their link zone indices in the textual format\n         for scoped addresses\
    \ as described in [RFC4007].  When a\n         resolver sends a DNS query message\
    \ to an RDNSS identified by a\n         link-local address, it MUST use the corresponding\
    \ link.\n         The rationale of the default value of the Lifetime field is\
    \ as\n         follows.  The Router Lifetime field, set by AdvDefaultLifetime,\n\
    \         has the default of 3 * MaxRtrAdvInterval as specified in\n         [RFC4861],\
    \ so such a default or a larger default can allow for\n         the reliability\
    \ of DNS options even under the loss of RAs on\n         links with a relatively\
    \ high rate of packet loss.  Note that\n         the ratio of AdvDefaultLifetime\
    \ to MaxRtrAdvInterval is the\n         number of unsolicited multicast RAs sent\
    \ by the router.  Since\n         the DNS option entries can survive for at most\
    \ three\n         consecutive losses of RAs containing DNS options, the default\n\
    \         value of the Lifetime lets the DNS option entries be resilient\n   \
    \      to packet-loss environments.\n"
- title: 5.2.  DNS Search List Option
  contents:
  - "5.2.  DNS Search List Option\n   The DNSSL option contains one or more domain\
    \ names of DNS suffixes.\n   All of the domain names share the same Lifetime value.\
    \  If it is\n   desirable to have different Lifetime values, multiple DNSSL options\n\
    \   can be used.  Figure 2 shows the format of the DNSSL option.\n      0    \
    \               1                   2                   3\n      0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |     Type      |     Length    |           Reserved            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         Lifetime                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                                                               |\n    \
    \ :                Domain Names of DNS Search List                :\n     |  \
    \                                                             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                       Figure 2: DNSSL Option Format\n   Fields:\n   Type   \
    \     8-bit identifier of the DNSSL option type as assigned by\n             \
    \  IANA: 31\n   Length      8-bit unsigned integer.  The length of the option\n\
    \               (including the Type and Length fields) is in units of\n      \
    \         8 octets.  The minimum value is 2 if at least one domain\n         \
    \      name is contained in the option.  The Length field is set\n           \
    \    to a multiple of 8 octets to accommodate all the domain\n               names\
    \ in the \"Domain Names of DNS Search List\" field.\n   Lifetime    32-bit unsigned\
    \ integer.  The maximum time in seconds\n               (relative to the time\
    \ the packet is received) over which\n               these DNSSL domain names\
    \ MAY be used for name resolution.\n               The Lifetime value has the\
    \ same semantics as the\n               semantics for the RDNSS option.  That\
    \ is, Lifetime SHOULD\n               by default be at least 3 * MaxRtrAdvInterval.\
    \  A value of\n               all one bits (0xffffffff) represents infinity. \
    \ A value\n               of zero means that the DNSSL domain names MUST no longer\n\
    \               be used.\n   Domain Names of DNS Search List\n               One\
    \ or more domain names of the DNSSL that MUST be\n               encoded as described\
    \ in Section 3.1 of [RFC1035].  With\n               this technique, each domain\
    \ name is represented as a\n               sequence of labels ending in a zero\
    \ octet, defined as a\n               domain name representation.  For more than\
    \ one domain\n               name, the corresponding domain name representations\
    \ are\n               concatenated as they are.  Note that for the simple\n  \
    \             decoding, the domain names MUST NOT be encoded in the\n        \
    \       compressed form described in Section 4.1.4 of [RFC1035].\n           \
    \    Because the size of this field MUST be a multiple of\n               8 octets,\
    \ for the minimum multiple including the domain\n               name representations,\
    \ the remaining octets other than the\n               encoding parts of the domain\
    \ name representations MUST be\n               padded with zeros.\n"
- title: 5.3.  DNS Configuration Procedure
  contents:
  - "5.3.  DNS Configuration Procedure\n   The procedure for DNS configuration through\
    \ the RDNSS and DNSSL\n   options is the same as it is with any other ND option\
    \ [RFC4861].\n"
- title: 5.3.1.  Procedure in IPv6 Hosts
  contents:
  - "5.3.1.  Procedure in IPv6 Hosts\n   When an IPv6 host receives DNS options (i.e.,\
    \ RDNSS and DNSSL\n   options) through RA messages, it processes the options as\
    \ follows:\n   o  The validity of DNS options is checked with the Length field;\n\
    \      that is, the value of the Length field in the RDNSS option is\n      greater\
    \ than or equal to the minimum value (3) and satisfies the\n      requirement\
    \ that (Length - 1) % 2 == 0.  The value of the Length\n      field in the DNSSL\
    \ option is greater than or equal to the minimum\n      value (2).  Also, the\
    \ validity of the RDNSS option is checked with\n      the \"Addresses of IPv6\
    \ Recursive DNS Servers\" field; that is, the\n      addresses should be unicast\
    \ addresses.\n   o  If the DNS options are valid, the host SHOULD copy the values\
    \ of\n      the options into the DNS Repository and the Resolver Repository in\n\
    \      order.  Otherwise, the host MUST discard the options.  Refer to\n     \
    \ Section 6 for the detailed procedure.\n   In the case where the DNS information\
    \ of RDNSS and DNSSL can be\n   obtained from multiple sources, such as RAs and\
    \ DHCP, the IPv6 host\n   SHOULD keep some DNS options from all sources.  Unless\
    \ explicitly\n   specified for the discovery mechanism, the exact number of addresses\n\
    \   and domain names to keep is a matter of local policy and\n   implementation\
    \ choice as a local configuration option.  However, in\n   the case of multiple\
    \ sources, the ability to store a total of at\n   least three RDNSS addresses\
    \ (or DNSSL domain names) from the multiple\n   sources is RECOMMENDED.  The DNS\
    \ options from RAs and DHCP SHOULD be\n   stored in the DNS Repository and Resolver\
    \ Repository so that\n   information from DHCP appears there first and therefore\
    \ takes\n   precedence.  Thus, the DNS information from DHCP takes precedence\n\
    \   over that from RAs for DNS queries.  On the other hand, for DNS\n   options\
    \ announced by RAs, if some RAs use the Secure Neighbor\n   Discovery (SEND) protocol\
    \ [RFC3971] for RA security, they MUST be\n   preferred over those that do not\
    \ use SEND.  Also, DNS options\n   announced by RAs via SEND MUST be preferred\
    \ over those announced by\n   unauthenticated DHCP [RFC3118].  Refer to Section\
    \ 7 for a detailed\n   discussion of SEND for DNS RA options.\n"
- title: 5.3.2.  Warnings for DNS Options Configuration
  contents:
  - "5.3.2.  Warnings for DNS Options Configuration\n   There are two warnings for\
    \ DNS options configuration: (i) warning for\n   multiple sources of DNS options\
    \ and (ii) warning for multiple network\n   interfaces.  First, in the case of\
    \ multiple sources for DNS options\n   (e.g., RAs and DHCP), an IPv6 host can\
    \ configure its IP addresses\n   from these sources.  In this case, it is not\
    \ possible to control how\n   the host uses DNS information and what source addresses\
    \ it uses to\n   send DNS queries.  As a result, configurations where different\n\
    \   information is provided by different mechanisms for autoconfiguration\n  \
    \ may lead to problems.  Therefore, the network administrator needs to\n   carefully\
    \ configure different DNS options in the multiple mechanisms\n   for autoconfiguration\
    \ in order to minimize the impact of such\n   problems [DHCPv6-SLAAC].\n   Second,\
    \ if different DNS information is provided on different network\n   interfaces,\
    \ this can lead to inconsistent behavior.  The IETF worked\n   on solving this\
    \ problem for both DNS and other information obtained\n   from multiple interfaces\
    \ [RFC6418] [RFC6419] and standardized a\n   DHCP-based solution for RDNSS selection\
    \ for multi-interfaced nodes as\n   described in [RFC6731].\n"
- title: 6.  Implementation Considerations
  contents:
  - "6.  Implementation Considerations\n   The implementation considerations in this\
    \ document include the\n   following three: (i) DNS repository management, (ii)\
    \ synchronization\n   between the DNS Server List and the Resolver Repository,\
    \ and\n   (iii) synchronization between the DNSSL and the Resolver Repository.\n\
    \   Note: The implementations that are updated according to this document\n  \
    \       will still interoperate with the existing implementations\n         according\
    \ to [RFC6106].  This is because the main change in\n         this document is\
    \ the increase of the default Lifetime of DNS\n         options, considering lossy\
    \ links.\n"
- title: 6.1.  DNS Repository Management
  contents:
  - "6.1.  DNS Repository Management\n   For DNS repository management, the following\
    \ two data structures\n   SHOULD be synchronized with the Resolver Repository:\
    \ (i) the DNS\n   Server List, which keeps the list of RDNSS addresses and (ii)\
    \ the\n   DNSSL, which keeps the list of DNS search domain names.  Each entry\n\
    \   in these two lists consists of a pair of an RDNSS address (or DNSSL\n   domain\
    \ name) and Expiration-time as follows:\n   o  RDNSS address for DNS Server List:\
    \ IPv6 address of the RDNSS that\n      is available for recursive DNS resolution\
    \ service in the network\n      advertising the RDNSS option.\n   o  DNSSL domain\
    \ name for DNSSL: DNS suffix domain name that is used\n      to perform DNS query\
    \ searches for short, unqualified domain names.\n   o  Expiration-time for DNS\
    \ Server List or DNSSL: The time when this\n      entry becomes invalid.  Expiration-time\
    \ is set to the value of the\n      Lifetime field of the RDNSS option or DNSSL\
    \ option plus the\n      current time.  Whenever a new RDNSS option with the same\
    \ address\n      (or DNSSL option with the same domain name) is received on the\n\
    \      same interface as a previous RDNSS option (or DNSSL option), this\n   \
    \   field is updated to have a new Expiration-time.  When the current\n      time\
    \ becomes larger than Expiration-time, this entry is regarded\n      as expired,\
    \ so it should not be used any more.  Note that the DNS\n      information for\
    \ the RDNSS and DNSSL options need not be dropped if\n      the expiry of the\
    \ RA router lifetime happens.  This is because\n      these options have their\
    \ own lifetime values.\n"
- title: 6.2.  Synchronization between DNS Server List and Resolver Repository
  contents:
  - "6.2.  Synchronization between DNS Server List and Resolver Repository\n   When\
    \ an IPv6 host receives the information of multiple RDNSS\n   addresses within\
    \ a network (e.g., campus network and company network)\n   through an RA message\
    \ with RDNSS option(s), it stores the RDNSS\n   addresses (in order) in both the\
    \ DNS Server List and the Resolver\n   Repository.  The processing of the RDNSS\
    \ consists of (i) the\n   processing of RDNSS option(s) included in an RA message\
    \ and (ii) the\n   handling of expired RDNSSes.  The processing of RDNSS option(s)\
    \ is as\n   follows:\n   o  Step (a): Receive and parse the RDNSS option(s). \
    \ For the RDNSS\n      addresses in each RDNSS option, perform Steps (b) through\
    \ (d).\n   o  Step (b): For each RDNSS address, check the following: If the\n\
    \      RDNSS address already exists in the DNS Server List and the RDNSS\n   \
    \   option's Lifetime field is set to zero, delete the corresponding\n      RDNSS\
    \ entry from both the DNS Server List and the Resolver\n      Repository in order\
    \ to prevent the RDNSS address from being used\n      any more for certain reasons\
    \ in network management, e.g., the\n      termination of the RDNSS or a renumbering\
    \ scenario.  That is, the\n      RDNSS can resign from its DNS service because\
    \ the machine running\n      the RDNSS is out of service intentionally or unintentionally.\n\
    \      Also, in the renumbering scenario, the RDNSS's IPv6 address will\n    \
    \  be changed, so the previous RDNSS address should not be used any\n      more.\
    \  The processing of this RDNSS address is finished here.\n      Otherwise, go\
    \ to Step (c).\n   o  Step (c): For each RDNSS address, if it already exists in\
    \ the DNS\n      Server List and the RDNSS option's Lifetime field is not set\
    \ to\n      zero, then just update the value of the Expiration-time field\n  \
    \    according to the procedure specified in the third bullet of\n      Section\
    \ 6.1.  Otherwise, go to Step (d).\n   o  Step (d): For each RDNSS address, if\
    \ it does not exist in the DNS\n      Server List, register the RDNSS address\
    \ and Lifetime with the DNS\n      Server List and then insert the RDNSS address\
    \ as the first one in\n      the Resolver Repository.  In the case where the data\
    \ structure for\n      the DNS Server List is full of RDNSS entries (that is,\
    \ has more\n      RDNSSes than the sufficient number discussed in Section 5.3.1),\n\
    \      delete from the DNS Server List the entry with the shortest\n      Expiration-time\
    \ (i.e., the entry that will expire first).  The\n      corresponding RDNSS address\
    \ is also deleted from the Resolver\n      Repository.  For the ordering of RDNSS\
    \ addresses in an RDNSS\n      option, position the first RDNSS address in the\
    \ RDNSS option as\n      the first one in the Resolver Repository, the second\
    \ RDNSS address\n      in the option as the second one in the repository, and\
    \ so on.\n      This ordering allows the RDNSS addresses in the RDNSS option to\
    \ be\n      preferred according to their order in the RDNSS option for DNS\n \
    \     name resolution.  The processing of these RDNSS addresses is\n      finished\
    \ here.\n   The handling of expired RDNSSes is as follows: Whenever an entry\n\
    \   expires in the DNS Server List, the expired entry is deleted from the\n  \
    \ DNS Server List, and also the RDNSS address corresponding to the\n   entry is\
    \ deleted from the Resolver Repository.\n"
- title: 6.3.  Synchronization between DNS Search List and Resolver Repository
  contents:
  - "6.3.  Synchronization between DNS Search List and Resolver Repository\n   When\
    \ an IPv6 host receives the information of multiple DNSSL domain\n   names within\
    \ a network through an RA message with DNSSL option(s), it\n   stores the DNSSL\
    \ domain names (in order) in both the DNSSL and the\n   Resolver Repository. \
    \ The processing of the DNSSL consists of (i) the\n   processing of DNSSL option(s)\
    \ included in an RA message and (ii) the\n   handling of expired DNSSLs.  The\
    \ processing of DNSSL option(s) is the\n   same as the processing of RDNSS option(s)\
    \ as described in\n   Section 6.2.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   In this section, we analyze security threats\
    \ related to DNS options\n   and then make recommendations to cope with such security\
    \ threats.\n"
- title: 7.1.  Security Threats
  contents:
  - "7.1.  Security Threats\n   For the RDNSS option, an attacker could send an RA\
    \ with a fraudulent\n   RDNSS address, misleading IPv6 hosts into contacting an\
    \ unintended\n   DNS server for DNS name resolution.  Also, for the DNSSL option,\
    \ an\n   attacker can let IPv6 hosts resolve a hostname without a DNS suffix\n\
    \   into an unintended host's IP address with a fraudulent DNSSL.  These\n   attacks\
    \ are similar to ND attacks specified in [RFC4861] that use\n   Redirect or Neighbor\
    \ Advertisement messages to redirect traffic to\n   individual addresses of malicious\
    \ parties.\n   However, the security of these RA options for DNS configuration\
    \ does\n   not affect ND protocol security [RFC4861].  This is because learning\n\
    \   DNS information via the RA options cannot be worse than learning bad\n   router\
    \ information via the RA options.  Therefore, the vulnerability\n   of ND is not\
    \ worse and is a subset of the attacks that any node\n   attached to a LAN can\
    \ do.\n"
- title: 7.2.  Recommendations
  contents:
  - "7.2.  Recommendations\n   The Secure Neighbor Discovery (SEND) protocol [RFC3971]\
    \ is designed\n   as a security mechanism for ND.  In this case, ND can use SEND\
    \ to\n   allow all the ND options, including the RDNSS and DNSSL options, to\n\
    \   be automatically signed with digital signatures.\n   It is common for network\
    \ devices such as switches to include\n   mechanisms to block unauthorized ports\
    \ from running a DHCPv6 server\n   to provide protection from rogue DHCPv6 servers\
    \ [RFC7610].  That\n   means that an attacker on other ports cannot insert bogus\
    \ DNS servers\n   using DHCPv6.  The corresponding technique for network devices\
    \ is\n   RECOMMENDED to block rogue RA messages that include the RDNSS and\n \
    \  DNSSL options from unauthorized nodes [RFC6104] [RFC6105].\n   An attacker\
    \ may provide a bogus DNSSL option in order to cause the\n   victim to send DNS\
    \ queries to a specific DNS server when the victim\n   queries non-FQDNs (fully\
    \ qualified domain names).  For this attack,\n   the DNS resolver in IPv6 hosts\
    \ can mitigate the vulnerability with\n   the recommendations mentioned in [RFC1535],\
    \ [RFC1536], and [RFC3646].\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The RDNSS option defined in this document uses the\
    \ IPv6 Neighbor\n   Discovery Option type assigned by IANA as follows:\n     \
    \ Option Name                    Type\n      -----------------------------------\n\
    \      Recursive DNS Server Option    25\n   The DNSSL option defined in this\
    \ document uses the IPv6 Neighbor\n   Discovery Option type assigned by IANA as\
    \ follows:\n      Option Name                    Type\n      -----------------------------------\n\
    \      DNS Search List Option         31\n   These options are registered in the\
    \ \"IPv6 Neighbor Discovery Option\n   Formats\" registry [ICMPv6].\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4861]  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n      \
    \        \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n         \
    \     DOI 10.17487/RFC4861, September 2007,\n              <http://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n    \
    \          Address Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862,\
    \ September 2007,\n              <http://www.rfc-editor.org/info/rfc4862>.\n \
    \  [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n         \
    \     specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n             \
    \ November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC4007]  Deering,\
    \ S., Haberman, B., Jinmei, T., Nordmark, E., and\n              B. Zill, \"IPv6\
    \ Scoped Address Architecture\", RFC 4007,\n              DOI 10.17487/RFC4007,\
    \ March 2005,\n              <http://www.rfc-editor.org/info/rfc4007>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC1034]  Mockapetris, P., \"Domain names -\
    \ concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,\
    \ November 1987,\n              <http://www.rfc-editor.org/info/rfc1034>.\n  \
    \ [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n      \
    \        C., and M. Carney, \"Dynamic Host Configuration Protocol\n          \
    \    for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315,\n              July\
    \ 2003, <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC3736]  Droms, R., \"\
    Stateless Dynamic Host Configuration Protocol\n              (DHCP) Service for\
    \ IPv6\", RFC 3736, DOI 10.17487/RFC3736,\n              April 2004, <http://www.rfc-editor.org/info/rfc3736>.\n\
    \   [RFC3646]  Droms, R., Ed., \"DNS Configuration options for Dynamic\n     \
    \         Host Configuration Protocol for IPv6 (DHCPv6)\", RFC 3646,\n       \
    \       DOI 10.17487/RFC3646, December 2003,\n              <http://www.rfc-editor.org/info/rfc3646>.\n\
    \   [RFC6106]  Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,\n       \
    \       \"IPv6 Router Advertisement Options for DNS Configuration\",\n       \
    \       RFC 6106, DOI 10.17487/RFC6106, November 2010,\n              <http://www.rfc-editor.org/info/rfc6106>.\n\
    \   [RFC4339]  Jeong, J., Ed., \"IPv6 Host Configuration of DNS Server\n     \
    \         Information Approaches\", RFC 4339, DOI 10.17487/RFC4339,\n        \
    \      February 2006, <http://www.rfc-editor.org/info/rfc4339>.\n   [RFC3971]\
    \  Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n              \"SEcure\
    \ Neighbor Discovery (SEND)\", RFC 3971,\n              DOI 10.17487/RFC3971,\
    \ March 2005,\n              <http://www.rfc-editor.org/info/rfc3971>.\n   [RFC3118]\
    \  Droms, R., Ed., and W. Arbaugh, Ed., \"Authentication for\n              DHCP\
    \ Messages\", RFC 3118, DOI 10.17487/RFC3118, June 2001,\n              <http://www.rfc-editor.org/info/rfc3118>.\n\
    \   [RFC6104]  Chown, T. and S. Venaas, \"Rogue IPv6 Router Advertisement\n  \
    \            Problem Statement\", RFC 6104, DOI 10.17487/RFC6104,\n          \
    \    February 2011, <http://www.rfc-editor.org/info/rfc6104>.\n   [RFC6105]  Levy-Abegnoli,\
    \ E., Van de Velde, G., Popoviciu, C., and J.\n              Mohacsi, \"IPv6 Router\
    \ Advertisement Guard\", RFC 6105,\n              DOI 10.17487/RFC6105, February\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6105>.\n   [RFC7610]\
    \  Gont, F., Liu, W., and G. Van de Velde, \"DHCPv6-Shield:\n              Protecting\
    \ against Rogue DHCPv6 Servers\", BCP 199,\n              RFC 7610, DOI 10.17487/RFC7610,\
    \ August 2015,\n              <http://www.rfc-editor.org/info/rfc7610>.\n   [RFC1535]\
    \  Gavron, E., \"A Security Problem and Proposed Correction\n              With\
    \ Widely Deployed DNS Software\", RFC 1535,\n              DOI 10.17487/RFC1535,\
    \ October 1993,\n              <http://www.rfc-editor.org/info/rfc1535>.\n   [RFC1536]\
    \  Kumar, A., Postel, J., Neuman, C., Danzig, P., and S.\n              Miller,\
    \ \"Common DNS Implementation Errors and Suggested\n              Fixes\", RFC\
    \ 1536, DOI 10.17487/RFC1536, October 1993,\n              <http://www.rfc-editor.org/info/rfc1536>.\n\
    \   [DHCPv6-SLAAC]\n              Liu, B., Jiang, S., Gong, X., Wang, W., and\
    \ E. Rey,\n              \"DHCPv6/SLAAC Interaction Problems on Address and\n\
    \              DNS Configuration\", Work in Progress,\n              draft-ietf-v6ops-dhcpv6-slaac-problem-07,\
    \ August 2016.\n   [RFC6418]  Blanchet, M. and P. Seite, \"Multiple Interfaces\
    \ and\n              Provisioning Domains Problem Statement\", RFC 6418,\n   \
    \           DOI 10.17487/RFC6418, November 2011,\n              <http://www.rfc-editor.org/info/rfc6418>.\n\
    \   [RFC6419]  Wasserman, M. and P. Seite, \"Current Practices for\n         \
    \     Multiple-Interface Hosts\", RFC 6419, DOI 10.17487/RFC6419,\n          \
    \    November 2011, <http://www.rfc-editor.org/info/rfc6419>.\n   [RFC6731]  Savolainen,\
    \ T., Kato, J., and T. Lemon, \"Improved\n              Recursive DNS Server Selection\
    \ for Multi-Interfaced\n              Nodes\", RFC 6731, DOI 10.17487/RFC6731,\
    \ December 2012,\n              <http://www.rfc-editor.org/info/rfc6731>.\n  \
    \ [ICMPv6]   IANA, \"Internet Control Message Protocol version 6\n           \
    \   (ICMPv6) Parameters\",\n              <http://www.iana.org/assignments/icmpv6-parameters/>.\n"
- title: Appendix A.  Changes from RFC 6106
  contents:
  - "Appendix A.  Changes from RFC 6106\n   The following changes were made from RFC\
    \ 6106 (\"IPv6 Router\n   Advertisement Options for DNS Configuration\"):\n  \
    \ o  This document allows a higher default value of the lifetime of the\n    \
    \  DNS RA options than RFC 6106 in order to avoid the frequent expiry\n      of\
    \ the options on links with a relatively high rate of packet\n      loss; at the\
    \ same time, this document also makes additional\n      clarifications.  The lifetime's\
    \ lower bound of\n      2 * MaxRtrAdvInterval was shown to lead to the expiry\
    \ of these\n      options on links with a relatively high rate of packet loss.\
    \  To\n      avoid this problem, this revision relaxes the lower bound and sets\n\
    \      a higher default value of 3 * MaxRtrAdvInterval.\n   o  The text regarding\
    \ the generation of a Router Solicitation message\n      to ensure that the RDNSS\
    \ information is fresh before the expiry of\n      the RDNSS option is removed\
    \ in order to prevent multicast traffic\n      on the link from increasing.\n\
    \   o  The addresses for RDNSSes in the RDNSS option can be not only\n      global\
    \ addresses but also link-local addresses.  The link-local\n      addresses for\
    \ RDNSSes should be registered in the Resolver\n      Repository along with the\
    \ corresponding link zone indices.\n   o  RFC 6106 recommended that the number\
    \ of RDNSS addresses that\n      should be learned and maintained through the\
    \ RDNSS RA option\n      should be limited to three.  This document removes that\n\
    \      recommendation; thus, the number of RDNSS addresses to maintain is\n  \
    \    determined by an implementer's local policy.\n   o  RFC 6106 recommended\
    \ that the number of DNS search domains that\n      should be learned and maintained\
    \ through the DNSSL RA option\n      should be limited to three.  This document\
    \ removes that\n      recommendation; thus, when the set of unique DNSSL values\
    \ are not\n      equivalent, none of them may be ignored for hostname lookups\n\
    \      according to an implementer's local policy.\n   o  The guidance of the\
    \ specific implementation for the\n      synchronization of the DNS Repository\
    \ and Resolver Repository in\n      the kernel space and user space is removed.\n\
    \   o  The key words \"SHOULD\" and \"RECOMMENDED\" (RFC 2119) are removed in\n\
    \      the recommendation of using SEND as a security mechanism for ND.\n    \
    \  Instead of using these key words, SEND is specified as only a\n      possible\
    \ security mechanism for ND.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document has greatly benefited from inputs by Robert\
    \ Hinden,\n   Pekka Savola, Iljitsch van Beijnum, Brian Haberman, Tim Chown, Erik\n\
    \   Nordmark, Dan Wing, Jari Arkko, Ben Campbell, Vincent Roca, Tony\n   Cheneau,\
    \ Fernando Gont, Jen Linkova, Ole Troan, Mark Smith, Tatuya\n   Jinmei, Lorenzo\
    \ Colitti, Tore Anderson, David Farmer, Bing Liu, and\n   Tassos Chatzithomaoglou.\
    \  The authors sincerely appreciate their\n   contributions.\n   This document\
    \ was supported by an Institute for Information &\n   communications Technology\
    \ Promotion (IITP) grant funded by the Korean\n   government (MSIP) [10041244,\
    \ Smart TV 2.0 Software Platform].\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jaehoon Paul Jeong\n   Department of Software\n   Sungkyunkwan\
    \ University\n   2066 Seobu-Ro, Jangan-Gu\n   Suwon, Gyeonggi-Do  16419\n   Republic\
    \ of Korea\n   Phone: +82 31 299 4957\n   Fax:   +82 31 290 7996\n   Email: pauljeong@skku.edu\n\
    \   URI:   http://iotlab.skku.edu/people-jaehoon-jeong.php\n   Soohong Daniel\
    \ Park\n   Software R&D Center\n   Samsung Electronics\n   Seoul R&D Campus D-Tower,\
    \ 56, Seongchon-Gil, Seocho-Gu\n   Seoul  06765\n   Republic of Korea\n   Email:\
    \ soohong.park@samsung.com\n   Luc Beloeil\n   Orange\n   5 rue Maurice Sibille\n\
    \   BP 44211\n   44042 Nantes Cedex 1\n   France\n   Phone: +33 2 28 56 11 84\n\
    \   Email: luc.beloeil@orange.com\n   Syam Madanapalli\n   NTT Data\n   #H304,\
    \ Shriram Samruddhi, Thubarahalli\n   Bangalore  560066\n   India\n   Phone: +91\
    \ 959 175 7926\n   Email: smadanapalli@gmail.com\n"
