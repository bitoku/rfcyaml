- contents:
  - '             Information Model for Packet Sampling Exports

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines an information model for the Packet SAMPling\n
    \  (PSAMP) protocol.  It is used by the PSAMP protocol for encoding\n   sampled
    packet data and information related to the Sampling process.\n   As the PSAMP
    protocol is based on the IP Flow Information eXport\n   (IPFIX) protocol, this
    information model is an extension to the IPFIX\n   information model.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  PSAMP Documents Overview . . . . . . . . . . . . . . .
    . . . .  4\n   3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . .
    . .  4\n     3.1.  Conventions Used in This Document  . . . . . . . . . . . .
    \ 5\n   4.  Relationship between PSAMP and IPFIX . . . . . . . . . . . . .  5\n
    \  5.  Properties of a PSAMP Information Element  . . . . . . . . . .  5\n   6.
    \ Type Space . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n   7.  Overloading
    Information Elements . . . . . . . . . . . . . . .  6\n   8.  The PSAMP Information
    Elements . . . . . . . . . . . . . . . .  6\n     8.1.  Identifiers (301-303)
    \ . . . . . . . . . . . . . . . . . .  7\n       8.1.1.  selectionSequenceId  .
    . . . . . . . . . . . . . . . .  7\n       8.1.2.  selectorId . . . . . . . .
    . . . . . . . . . . . . . .  8\n       8.1.3.  informationElementId . . . . .
    . . . . . . . . . . . .  8\n     8.2.  Sampling Configuration (304-311) . . .
    . . . . . . . . . .  9\n       8.2.1.  selectorAlgorithm  . . . . . . . . . .
    . . . . . . . .  9\n       8.2.2.  samplingPacketInterval . . . . . . . . . .
    . . . . . . 11\n       8.2.3.  samplingPacketSpace  . . . . . . . . . . . . .
    . . . . 11\n       8.2.4.  samplingTimeInterval . . . . . . . . . . . . . . .
    . . 12\n       8.2.5.  samplingTimeSpace  . . . . . . . . . . . . . . . . . .
    12\n       8.2.6.  samplingSize . . . . . . . . . . . . . . . . . . . . . 13\n
    \      8.2.7.  samplingPopulation . . . . . . . . . . . . . . . . . . 13\n       8.2.8.
    \ samplingProbability  . . . . . . . . . . . . . . . . . 13\n     8.3.  Hash Configuration
    (326-334) . . . . . . . . . . . . . . . 14\n       8.3.1.  digestHashValue  .
    . . . . . . . . . . . . . . . . . . 14\n       8.3.2.  hashIPPayloadOffset  .
    . . . . . . . . . . . . . . . . 15\n       8.3.3.  hashIPPayloadSize  . . . .
    . . . . . . . . . . . . . . 15\n       8.3.4.  hashOutputRangeMin . . . . . .
    . . . . . . . . . . . . 15\n       8.3.5.  hashOutputRangeMax . . . . . . . .
    . . . . . . . . . . 16\n       8.3.6.  hashSelectedRangeMin . . . . . . . . .
    . . . . . . . . 16\n       8.3.7.  hashSelectedRangeMax . . . . . . . . . . .
    . . . . . . 16\n       8.3.8.  hashDigestOutput . . . . . . . . . . . . . . .
    . . . . 17\n       8.3.9.  hashInitialiserValue . . . . . . . . . . . . . . .
    . . 17\n     8.4.  Timestamps (322-325) . . . . . . . . . . . . . . . . . . .
    18\n       8.4.1.  observationTimeSeconds . . . . . . . . . . . . . . . . 18\n
    \      8.4.2.  observationTimeMilliseconds  . . . . . . . . . . . . . 18\n       8.4.3.
    \ observationTimeMicroseconds  . . . . . . . . . . . . . 19\n       8.4.4.  observationTimeNanoseconds
    . . . . . . . . . . . . . . 19\n     8.5.  Packet Data (313-314, 316-317) . .
    . . . . . . . . . . . . 19\n       8.5.1.  ipHeaderPacketSection  . . . . . .
    . . . . . . . . . . 20\n       8.5.2.  ipPayloadPacketSection . . . . . . . .
    . . . . . . . . 20\n       8.5.3.  mplsLabelStackSection  . . . . . . . . . .
    . . . . . . 21\n       8.5.4.  mplsPayloadPacketSection . . . . . . . . . . .
    . . . . 21\n     8.6.  Statistics (318-321, 336-338)  . . . . . . . . . . . .
    . . 22\n       8.6.1.  selectorIdTotalPktsObserved  . . . . . . . . . . . . .
    22\n       8.6.2.  selectorIdTotalPktsSelected  . . . . . . . . . . . . . 23\n
    \      8.6.3.  absoluteError  . . . . . . . . . . . . . . . . . . . . 23\n       8.6.4.
    \ relativeError  . . . . . . . . . . . . . . . . . . . . 24\n       8.6.5.  upperCILimit
    . . . . . . . . . . . . . . . . . . . . . 24\n       8.6.6.  lowerCILimit . .
    . . . . . . . . . . . . . . . . . . . 25\n       8.6.7.  confidenceLevel  . .
    . . . . . . . . . . . . . . . . . 26\n   9.  Security Considerations  . . . .
    . . . . . . . . . . . . . . . 26\n   10. IANA Considerations  . . . . . . . .
    . . . . . . . . . . . . . 27\n     10.1. Related Considerations . . . . . . .
    . . . . . . . . . . . 27\n     10.2. PSAMP-Related Considerations . . . . . .
    . . . . . . . . . 27\n   11. References . . . . . . . . . . . . . . . . . . .
    . . . . . . . 27\n     11.1. Normative References . . . . . . . . . . . . . .
    . . . . . 27\n     11.2. Informative References . . . . . . . . . . . . . . .
    . . . 28\n   Appendix A.  Formal Specification of PSAMP Information Elements  .
    29\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Packet Sampling techniques are required for various measurement\n
    \  scenarios.  The Packet Sampling (PSAMP) protocol provides mechanisms\n   for
    packet selection using different Filtering and Sampling\n   techniques.  A standardized
    way for the export and storage of the\n   Information Elements defined in Section
    8 is required.  The\n   definition of the PSAMP information and data model is
    based on the\n   IPFIX information model [RFC5102].  The PSAMP protocol document\n
    \  [RFC5476] specifies how to use the IPFIX protocol in the PSAMP\n   context.\n
    \  This document examines the IPFIX information model [RFC5102] and\n   extends
    it to meet the PSAMP requirements.  Therefore, the structure\n   of this document
    is strongly based on the IPFIX document.  It\n   complements the PSAMP protocol
    specification by providing an\n   appropriate PSAMP information model.  The main
    part of this document,\n   Section 8, defines the list of Information Elements
    to be transmitted\n   by the PSAMP protocol.  Sections 5 and 6 describe the data
    types and\n   Information Element properties used within this document and their\n
    \  relationship to the IPFIX information model.\n   Although the PSAMP charter
    specified no requirements for measuring\n   packet errors (such as drops, malformed,
    etc.), and this document\n   does not cover such data, if there is need for collecting
    and\n   exporting packet error information, the appropriate Information\n   Elements
    can be requested from IANA, and exported with the PSAMP\n   protocol.\n   The
    main body of Section 8 was generated from an XML document.  The\n   XML-based
    specification of the PSAMP Information Elements can be used\n   for automatically
    checking syntactical correctness of the\n   specification.  Furthermore it can
    be used -- in combination with the\n   IPFIX information model -- for automated
    code generation.  The\n   resulting code can be used in PSAMP protocol implementations
    to deal\n   with processing PSAMP information elements.\n   For that reason, the
    XML document that served as the source for\n   Section 8 is attached to this document
    in Appendix A.\n   Note that although partially generated from the attached XML\n
    \  documents, the main body of this document is normative while the\n   appendix
    is informational.\n"
  title: 1.  Introduction
- contents:
  - "2.  PSAMP Documents Overview\n   This document is one out of a series of documents
    from the PSAMP\n   group.\n   [RFC5474]: \"A Framework for Packet Selection and
    Reporting\" describes\n   the PSAMP framework for network elements to select subsets
    of packets\n   by statistical and other methods, and to export a stream of reports\n
    \  on the selected packets to a Collector.\n   [RFC5475]: \"Sampling and Filtering
    Techniques for IP Packet\n   Selection\" describes the set of packet selection
    techniques supported\n   by PSAMP.\n   [RFC5476]: \"Packet Sampling (PSAMP) Protocol
    Specifications\"\n   specifies the export of packet information from a PSAMP Exporting\n
    \  Process to a PSAMP Collecting Process.\n   RFC 5477 (this document): \"Information
    Model for Packet Sampling\n   Exports\" defines an information and data model
    for PSAMP.\n"
  title: 2.  PSAMP Documents Overview
- contents:
  - "3.  Terminology\n   IPFIX-specific terminology used in this document is defined
    in\n   Section 2 of [RFC5101].  PSAMP-specific terminology used in this\n   document
    is defined in Section 3.2 of [RFC5476].  In this document,\n   as in [RFC5101]
    and [RFC5476], the first letter of each IPFIX- and\n   PSAMP-specific term is
    capitalized.\n"
  title: 3.  Terminology
- contents:
  - "3.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in RFC 2119 [RFC2119].\n"
  title: 3.1.  Conventions Used in This Document
- contents:
  - "4.  Relationship between PSAMP and IPFIX\n   As described in the PSAMP protocol
    [RFC5476], a PSAMP Report can be\n   seen as a very special IPFIX Data Record.
    \ It represents an IPFIX\n   Flow containing only a single packet.  Therefore,
    the IPFIX\n   information model can be used as a basis for PSAMP Reports.\n   Nevertheless,
    there are properties required in PSAMP Reports that\n   cannot be modeled using
    the current IPFIX information model.  This\n   document describes extensions to
    the IPFIX information model that\n   allow the modeling of information and data
    required by PSAMP.\n   Some of these extensions allow the export of what may be
    considered\n   sensitive information.  Refer to the Security Considerations section\n
    \  for a fuller discussion.\n   Note that the export of sampled or filtered PSAMP
    Reports may not\n   need all the Information Elements defined by the IPFIX information\n
    \  model [RFC5102], as discussed in Sections 6.2 and 6.3 of the PSAMP\n   Framework
    [RFC5474].\n"
  title: 4.  Relationship between PSAMP and IPFIX
- contents:
  - "5.  Properties of a PSAMP Information Element\n   The PSAMP Information Elements
    are defined in accordance with\n   Sections 2.1 to 2.3 of the IPFIX information
    model [RFC5102] to which\n   reference should be made for more information.  Nevertheless,
    we\n   strongly recommend defining the optional \"units\" property for every\n
    \  Information Element (if applicable).\n   The Data Types defined in Section
    3.1 of the IPFIX information model\n   [RFC5102] are also used for the PSAMP Information
    Elements.\n"
  title: 5.  Properties of a PSAMP Information Element
- contents:
  - "6.  Type Space\n   The PSAMP Information Elements MUST be constructed from the
    basic\n   abstract data types and data type semantics described in Section 3 of\n
    \  the IPFIX information model [RFC5102].  To ensure consistency between\n   IPFIX
    and PSAMP, the data types are not repeated in this document.\n   The encoding
    of these data types is described in the IPFIX protocol\n   [RFC5101].\n"
  title: 6.  Type Space
- contents:
  - "7.  Overloading Information Elements\n   Information Elements SHOULD NOT be overloaded
    with multiple meanings\n   or re-used for multiple purposes.  Different Information
    Elements\n   SHOULD be allocated for each requirement.\n   Although the presence
    of certain other Information Elements allows\n   the selection method to be inferred,
    a separate Information Element\n   is provided for the selectorAlgorithm to include
    as scope for the\n   Selector Report Interpretation [RFC5476].\n   Even if the
    Information Elements are specified with a specific\n   selection method (i.e.,
    a specific value of selectorAlgorithm) in\n   mind, these Information Elements
    are not restricted to the selection\n   method and MAY be used for different selection
    methods in the future.\n"
  title: 7.  Overloading Information Elements
- contents:
  - "8.  The PSAMP Information Elements\n   This section describes the Information
    Elements used by the PSAMP\n   protocol.\n   For each Information Element specified
    in Sections 8.1 - 8.6 below, a\n   unique identifier is allocated in accordance
    with Section 4 of the\n   IPFIX information model [RFC5102].  The assignments
    are controlled by\n   IANA as an extension of the IPFIX information model.\n   The
    Information Elements specified by the IPFIX information model\n   [RFC5102] are
    used by the PSAMP protocol where applicable.  To avoid\n   inconsistencies between
    the IPFIX and the PSAMP information and data\n   models, only those Information
    Elements that are not already\n   described by the IPFIX information model are
    defined here.\n   Below is the list of additional PSAMP Information Elements:\n
    +-----+----------------------------+-----+----------------------------+\n |  ID
    | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 301 | selectionSequenceId        | 321 | relativeError              |\n | 302
    | selectorId                 | 322 | observationTimeSeconds     |\n | 303 | informationElementId
    \      | 323 | observationTimeMilliseconds|\n | 304 | selectorAlgorithm          |
    324 | observationTimeMicroseconds|\n | 305 | samplingPacketInterval     | 325
    | observationTimeNanoseconds |\n | 306 | samplingPacketSpace        | 326 | digestHashValue
    \           |\n | 307 | samplingTimeInterval       | 327 | hashIPPayloadOffset
    \       |\n | 308 | samplingTimeSpace          | 328 | hashIPPayloadSize          |\n
    | 309 | samplingSize               | 329 | hashOutputRangeMin         |\n | 310
    | samplingPopulation         | 330 | hashOutputRangeMax         |\n | 311 | samplingProbability
    \       | 331 | hashSelectedRangeMin       |\n | 313 | ipHeaderPacketSection      |
    332 | hashSelectedRangeMax       |\n | 314 | ipPayloadPacketSection     | 333
    | hashDigestOutput           |\n | 316 | mplsLabelStackSection      | 334 | hashInitialiserValue
    \      |\n | 317 | mplsPayloadPacketSection   | 336 | upperCILimit               |\n
    | 318 | selectorIdTotalPktsObserved| 337 | lowerCILimit               |\n | 319
    | selectorIdTotalPktsSelected| 338 | confidenceLevel            |\n | 320 | absoluteError
    \             |     |                            |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.  The PSAMP Information Elements
- contents:
  - "8.1.  Identifiers (301-303)\n   Information Elements in this section serve as
    identifiers.  All of\n   them have an integral abstract data type and data type
    semantics\n   \"identifier\".\n +-----+----------------------------+-----+----------------------------+\n
    |  ID | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 301 | selectionSequenceId        | 303 | informationElementId       |\n | 302
    | selectorId                 |     |                            |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.1.  Identifiers (301-303)
- contents:
  - "8.1.1.  selectionSequenceId\n   Description:\n      From all the packets observed
    at an Observation Point, a subset of\n      the packets is selected by a sequence
    of one or more Selectors.\n      The selectionSequenceId is a unique value per
    Observation Domain,\n      specifying the Observation Point and the sequence of
    Selectors\n      through which the packets are selected.\n   Abstract Data Type:
    \ unsigned64\n   Data Type Semantics:  identifier\n   ElementId:  301\n   Status:
    \ current\n"
  title: 8.1.1.  selectionSequenceId
- contents:
  - "8.1.2.  selectorId\n   Description:\n      The Selector ID is the unique ID identifying
    a Primitive Selector.\n      Each Primitive Selector must have a unique ID in
    the Observation\n      Domain.\n   Abstract Data Type:  unsigned16\n   Data Type
    Semantics:  identifier\n   ElementId:  302\n   Status:  current\n"
  title: 8.1.2.  selectorId
- contents:
  - "8.1.3.  informationElementId\n   Description:\n      This Information Element
    contains the ID of another Information\n      Element.\n   Abstract Data Type:
    \ unsigned16\n   Data Type Semantics:  identifier\n   ElementId:  303\n   Status:
    \ current\n"
  title: 8.1.3.  informationElementId
- contents:
  - "8.2.  Sampling Configuration (304-311)\n   Information Elements in this section
    can be used for describing the\n   Sampling configuration of a Selection Process.\n
    +-----+----------------------------+-----+----------------------------+\n |  ID
    | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 304 | selectorAlgorithm          | 308 | samplingTimeSpace          |\n | 305
    | samplingPacketInterval     | 309 | samplingSize               |\n | 306 | samplingPacketSpace
    \       | 310 | samplingPopulation         |\n | 307 | samplingTimeInterval       |
    311 | samplingProbability        |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.2.  Sampling Configuration (304-311)
- contents:
  - "8.2.1.  selectorAlgorithm\n   Description:\n      This Information Element identifies
    the packet selection methods\n      (e.g., Filtering, Sampling) that are applied
    by the Selection\n      Process.\n      Most of these methods have parameters.
    \ Further Information\n      Elements are needed to fully specify packet selection
    with these\n      methods and all their parameters.\n      The methods listed
    below are defined in [RFC5475].  For their\n      parameters, Information Elements
    are defined in the information\n      model document.  The names of these Information
    Elements are\n      listed for each method identifier.\n      Further method identifiers
    may be added to the list below.  It\n      might be necessary to define new Information
    Elements to specify\n      their parameters.\n      The selectorAlgorithm registry
    is maintained by IANA.  New\n      assignments for the registry will be administered
    by IANA and are\n      subject to Expert Review [RFC5226].\n      The registry
    can be updated when specifications of the new\n      method(s) and any new Information
    Elements are provided.\n      The group of experts must double check the selectorAlgorithm\n
    \     definitions and Information Elements with already defined\n      selectorAlgorithms
    and Information Elements for completeness,\n      accuracy, and redundancy.  Those
    experts will initially be drawn\n      from the Working Group Chairs and document
    editors of the IPFIX\n      and PSAMP Working Groups.\n      The following packet
    selection methods identifiers are defined\n      here:\n           +----+------------------------+------------------------+\n
    \          | ID |        Method          |      Parameters        |\n           +----+------------------------+------------------------+\n
    \          | 1  | Systematic count-based | samplingPacketInterval |\n           |
    \   | Sampling               | samplingPacketSpace    |\n           +----+------------------------+------------------------+\n
    \          | 2  | Systematic time-based  | samplingTimeInterval   |\n           |
    \   | Sampling               | samplingTimeSpace      |\n           +----+------------------------+------------------------+\n
    \          | 3  | Random n-out-of-N      | samplingSize           |\n           |
    \   | Sampling               | samplingPopulation     |\n           +----+------------------------+------------------------+\n
    \          | 4  | Uniform probabilistic  | samplingProbability    |\n           |
    \   | Sampling               |                        |\n           +----+------------------------+------------------------+\n
    \          | 5  | Property Match         | no agreed parameters   |\n           |
    \   | Filtering              |                        |\n           +----+------------------------+------------------------+\n
    \          |   Hash-based Filtering      | hashInitialiserValue   |\n           +----+------------------------+
    hashIPPayloadOffset    |\n           | 6  | using BOB              | hashIPPayloadSize
    \     |\n           +----+------------------------+ hashSelectedRangeMin   |\n
    \          | 7  | using IPSX             | hashSelectedRangeMax   |\n           +----+------------------------+
    hashOutputRangeMin     |\n           | 8  | using CRC              | hashOutputRangeMax
    \    |\n           +----+------------------------+------------------------+\n
    \     There is a broad variety of possible parameters that could be used\n      for
    Property match Filtering (5), but currently there are no\n      agreed parameters
    specified.\n   Abstract Data Type:  unsigned16\n   Data Type Semantics:  identifier\n
    \  ElementId:  304\n   Status:  current\n"
  title: 8.2.1.  selectorAlgorithm
- contents:
  - "8.2.2.  samplingPacketInterval\n   Description:\n      This Information Element
    specifies the number of packets that are\n      consecutively sampled.  A value
    of 100 means that 100 consecutive\n      packets are sampled.\n      For example,
    this Information Element may be used to describe the\n      configuration of a
    systematic count-based Sampling Selector.\n   Abstract Data Type:  unsigned32\n
    \  Data Type Semantics:  quantity\n   ElementId:  305\n   Status:  current\n   Units:
    \ packets\n"
  title: 8.2.2.  samplingPacketInterval
- contents:
  - "8.2.3.  samplingPacketSpace\n   Description:\n      This Information Element
    specifies the number of packets between\n      two \"samplingPacketInterval\"s.
    \ A value of 100 means that the next\n      interval starts 100 packets (which
    are not sampled) after the\n      current \"samplingPacketInterval\" is over.\n
    \     For example, this Information Element may be used to describe the\n      configuration
    of a systematic count-based Sampling Selector.\n   Abstract Data Type:  unsigned32\n
    \  Data Type Semantics:  quantity\n   ElementId:  306\n   Status:  current\n   Units:
    \ packets\n"
  title: 8.2.3.  samplingPacketSpace
- contents:
  - "8.2.4.  samplingTimeInterval\n   Description:\n      This Information Element
    specifies the time interval in\n      microseconds during which all arriving packets
    are sampled.\n      For example, this Information Element may be used to describe
    the\n      configuration of a systematic time-based Sampling Selector.\n   Abstract
    Data Type:  unsigned32\n   Data Type Semantics:  quantity\n   ElementId:  307\n
    \  Status:  current\n   Units:  microseconds\n"
  title: 8.2.4.  samplingTimeInterval
- contents:
  - "8.2.5.  samplingTimeSpace\n   Description:\n      This Information Element specifies
    the time interval in\n      microseconds between two \"samplingTimeInterval\"s.
    \ A value of 100\n      means that the next interval starts 100 microseconds (during
    which\n      no packets are sampled) after the current \"samplingTimeInterval\"\n
    \     is over.\n      For example, this Information Element may used to describe
    the\n      configuration of a systematic time-based Sampling Selector.\n   Abstract
    Data Type:  unsigned32\n   Data Type Semantics:  quantity\n   ElementId:  308\n
    \  Status:  current\n   Units:  microseconds\n"
  title: 8.2.5.  samplingTimeSpace
- contents:
  - "8.2.6.  samplingSize\n   Description:\n      This Information Element specifies
    the number of elements taken\n      from the parent Population for random Sampling
    methods.\n      For example, this Information Element may be used to describe
    the\n      configuration of a random n-out-of-N Sampling Selector.\n   Abstract
    Data Type:  unsigned32\n   Data Type Semantics:  quantity\n   ElementId:  309\n
    \  Status:  current\n   Units:  packets\n"
  title: 8.2.6.  samplingSize
- contents:
  - "8.2.7.  samplingPopulation\n   Description:\n      This Information Element specifies
    the number of elements in the\n      parent Population for random Sampling methods.\n
    \     For example, this Information Element may be used to describe the\n      configuration
    of a random n-out-of-N Sampling Selector.\n   Abstract Data Type:  unsigned32\n
    \  Data Type Semantics:  quantity\n   ElementId:  310\n   Status:  current\n   Units:
    \ packets\n"
  title: 8.2.7.  samplingPopulation
- contents:
  - "8.2.8.  samplingProbability\n   Description:\n      This Information Element
    specifies the probability that a packet\n      is sampled, expressed as a value
    between 0 and 1.  The probability\n      is equal for every packet.  A value of
    0 means no packet was\n      sampled since the probability is 0.\n      For example,
    this Information Element may be used to describe the\n      configuration of a
    uniform probabilistic Sampling Selector.\n   Abstract Data Type:  float64\n   Data
    Type Semantics:  quantity\n   ElementId:  311\n   Status:  current\n"
  title: 8.2.8.  samplingProbability
- contents:
  - "8.3.  Hash Configuration (326-334)\n   The following Information Elements can
    be used for describing the\n   Sampling configuration of a Selection Process.
    \ The individual\n   parameters are explained in more detail in Sections 6.2,
    3.8, and 7.1\n   of [RFC5475].\n +-----+----------------------------+-----+----------------------------+\n
    |  ID | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 326 | digestHashValue            | 331 | hashSelectedRangeMin       |\n | 327
    | hashIPPayloadOffset        | 332 | hashSelectedRangeMax       |\n | 328 | hashIPPayloadSize
    \         | 333 | hashDigestOutput           |\n | 329 | hashOutputRangeMin         |
    334 | hashInitialiserValue       |\n | 330 | hashOutputRangeMax         |     |
    \                           |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.3.  Hash Configuration (326-334)
- contents:
  - "8.3.1.  digestHashValue\n   Description:\n      This Information Element specifies
    the value from the digest hash\n      function.\n      See also Sections 6.2,
    3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:  unsigned64\n   Data Type Semantics:
    \ quantity\n   ElementId:  326\n   Status:  current\n"
  title: 8.3.1.  digestHashValue
- contents:
  - "8.3.2.  hashIPPayloadOffset\n   Description:\n      This Information Element
    specifies the IP payload offset used by a\n      Hash-based Selection Selector.\n
    \     See also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:
    \ unsigned64\n   Data Type Semantics:  quantity\n   ElementId:  327\n   Status:
    \ current\n"
  title: 8.3.2.  hashIPPayloadOffset
- contents:
  - "8.3.3.  hashIPPayloadSize\n   Description:\n      This Information Element specifies
    the IP payload size used by a\n      Hash-based Selection Selector.\n      See
    also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:  unsigned64\n
    \  Data Type Semantics:  quantity\n   ElementId:  328\n   Status:  current\n"
  title: 8.3.3.  hashIPPayloadSize
- contents:
  - "8.3.4.  hashOutputRangeMin\n   Description:\n      This Information Element specifies
    the value for the beginning of\n      a hash function's potential output range.\n
    \     See also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:
    \ unsigned64\n   Data Type Semantics:  quantity\n   ElementId:  329\n   Status:
    \ current\n"
  title: 8.3.4.  hashOutputRangeMin
- contents:
  - "8.3.5.  hashOutputRangeMax\n   Description:\n      This Information Element specifies
    the value for the end of a hash\n      function's potential output range.\n      See
    also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:  unsigned64\n
    \  Data Type Semantics:  quantity\n   ElementId:  330\n   Status:  current\n"
  title: 8.3.5.  hashOutputRangeMax
- contents:
  - "8.3.6.  hashSelectedRangeMin\n   Description:\n      This Information Element
    specifies the value for the beginning of\n      a hash function's selected range.\n
    \     See also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:
    \ unsigned64\n   Data Type Semantics:  quantity\n   ElementId:  331\n   Status:
    \ current\n"
  title: 8.3.6.  hashSelectedRangeMin
- contents:
  - "8.3.7.  hashSelectedRangeMax\n   Description:\n      This Information Element
    specifies the value for the end of a hash\n      function's selected range.\n
    \     See also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:
    \ unsigned64\n   Data Type Semantics:  quantity\n   ElementId:  332\n   Status:
    \ current\n"
  title: 8.3.7.  hashSelectedRangeMax
- contents:
  - "8.3.8.  hashDigestOutput\n   Description:\n      This Information Element contains
    a boolean value that is TRUE if\n      the output from this hash Selector has
    been configured to be\n      included in the packet report as a packet digest,
    else FALSE.\n      See also Sections 6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract
    Data Type:  boolean\n   Data Type Semantics:  quantity\n   ElementId:  333\n   Status:
    \ current\n"
  title: 8.3.8.  hashDigestOutput
- contents:
  - "8.3.9.  hashInitialiserValue\n   Description:\n      This Information Element
    specifies the initialiser value to the\n      hash function.\n      See also Sections
    6.2, 3.8, and 7.1 of [RFC5475].\n   Abstract Data Type:  unsigned64\n   Data Type
    Semantics:  quantity\n   ElementId:  334\n   Status:  current\n"
  title: 8.3.9.  hashInitialiserValue
- contents:
  - "8.4.  Timestamps (322-325)\n   The Information Elements listed below contain
    timestamps.  They can\n   be used for reporting the observation time of a single
    packet.\n +-----+----------------------------+-----+----------------------------+\n
    |  ID | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 322 | observationTimeSeconds     | 324 | observationTimeMicroseconds|\n | 323
    | observationTimeMilliseconds| 325 | observationTimeNanoseconds |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.4.  Timestamps (322-325)
- contents:
  - "8.4.1.  observationTimeSeconds\n   Description:\n      This Information Element
    specifies the absolute time in seconds of\n      an observation.\n   Abstract
    Data Type:  dateTimeSeconds\n   Data Type Semantics:  quantity\n   ElementId:
    \ 322\n   Status:  current\n   Units:  seconds\n"
  title: 8.4.1.  observationTimeSeconds
- contents:
  - "8.4.2.  observationTimeMilliseconds\n   Description:\n      This Information
    Element specifies the absolute time in\n      milliseconds of an observation.\n
    \  Abstract Data Type:  dateTimeMilliseconds\n   Data Type Semantics:  quantity\n
    \  ElementId:  323\n   Status:  current\n   Units:  milliseconds\n"
  title: 8.4.2.  observationTimeMilliseconds
- contents:
  - "8.4.3.  observationTimeMicroseconds\n   Description:\n      This Information
    Element specifies the absolute time in\n      microseconds of an observation.\n
    \  Abstract Data Type:  dateTimeMicroseconds\n   Data Type Semantics:  quantity\n
    \  ElementId:  324\n   Status:  current\n   Units:  microseconds\n"
  title: 8.4.3.  observationTimeMicroseconds
- contents:
  - "8.4.4.  observationTimeNanoseconds\n   Description:\n      This Information Element
    specifies the absolute time in\n      nanoseconds of an observation.\n   Abstract
    Data Type:  dateTimeNanoseconds\n   Data Type Semantics:  quantity\n   ElementId:
    \ 325\n   Status:  current\n   Units:  nanoseconds\n"
  title: 8.4.4.  observationTimeNanoseconds
- contents:
  - "8.5.  Packet Data (313-314, 316-317)\n   The following Information Elements are
    all used for reporting raw\n   content of a packet.  All Information Elements
    containing sections of\n   the observed packet can also be used in IPFIX [RFC5101].
    \ If the\n   values for those sections vary for different packets in a Flow, then\n
    \  the Flow Report will contain the value observed in the first packet\n   of
    the Flow.\n +-----+----------------------------+-----+----------------------------+\n
    |  ID | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 313 | ipHeaderPacketSection      | 316 | mplsLabelStackSection      |\n | 314
    | ipPayloadPacketSection     | 317 | mplsPayloadPacketSection   |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.5.  Packet Data (313-314, 316-317)
- contents:
  - "8.5.1.  ipHeaderPacketSection\n   Description:\n      This Information Element,
    which may have a variable length,\n      carries a series of octets from the start
    of the IP header of a\n      sampled packet.\n      With sufficient length, this
    element also reports octets from the\n      IP payload, subject to [RFC2804].
    \ See the Security Considerations\n      section.\n      The size of the exported
    section may be constrained due to\n      limitations in the IPFIX protocol.\n
    \     The data for this field MUST NOT be padded.\n   Abstract Data Type:  octetArray\n
    \  ElementId:  313\n   Status:  current\n"
  title: 8.5.1.  ipHeaderPacketSection
- contents:
  - "8.5.2.  ipPayloadPacketSection\n   Description:\n      This Information Element,
    which may have a variable length,\n      carries a series of octets from the start
    of the IP payload of a\n      sampled packet.\n      The IPv4 payload is that
    part of the packet that follows the IPv4\n      header and any options, which
    [RFC0791] refers to as \"data\" or\n      \"data octets\".  For example, see the
    examples in [RFC0791],\n      Appendix A.\n      The IPv6 payload is the rest
    of the packet following the 40-octet\n      IPv6 header.  Note that any extension
    headers present are\n      considered part of the payload.  See [RFC2460] for
    the IPv6\n      specification.\n      The size of the exported section may be
    constrained due to\n      limitations in the IPFIX protocol.\n      The data for
    this field MUST NOT be padded.\n   Abstract Data Type:  octetArray\n   ElementId:
    \ 314\n   Status:  current\n"
  title: 8.5.2.  ipPayloadPacketSection
- contents:
  - "8.5.3.  mplsLabelStackSection\n   Description:\n      This Information Element,
    which may have a variable length,\n      carries the first n octets from the MPLS
    label stack of a sampled\n      packet.\n      With sufficient length, this element
    also reports octets from the\n      MPLS payload, subject to [RFC2804].  See the
    Security\n      Considerations section.\n      See [RFC3031] for the specification
    of MPLS packets.\n      See [RFC3032] for the specification of the MPLS label
    stack.\n      The size of the exported section may be constrained due to\n      limitations
    in the IPFIX protocol.\n      The data for this field MUST NOT be padded.\n   Abstract
    Data Type:  octetArray\n   ElementId:  316\n   Status:  current\n"
  title: 8.5.3.  mplsLabelStackSection
- contents:
  - "8.5.4.  mplsPayloadPacketSection\n   Description:\n      This Information Element,
    which may have a variable length,\n      carries the first n octets from the MPLS
    payload of a sampled\n      packet, being data that follows immediately after
    the MPLS label\n      stack.\n      See [RFC3031] for the specification of MPLS
    packets.\n      See [RFC3032] for the specification of the MPLS label stack.\n
    \     The size of the exported section may be constrained due to\n      limitations
    in the IPFIX protocol.\n      The data for this field MUST NOT be padded.\n   Abstract
    Data Type:  octetArray\n   ElementId:  317\n   Status:  current\n"
  title: 8.5.4.  mplsPayloadPacketSection
- contents:
  - "8.6.  Statistics (318-321, 336-338)\n   Information Elements in this section
    can be used for reporting\n   statistics from the Metering Process.\n +-----+----------------------------+-----+----------------------------+\n
    |  ID | Name                       |  ID | Name                       |\n +-----+----------------------------+-----+----------------------------+\n
    | 318 | selectorIdTotalPktsObserved| 336 | upperCILimit               |\n | 319
    | selectorIdTotalPktsSelected| 337 | lowerCILimit               |\n | 320 | absoluteError
    \             | 338 | confidenceLevel            |\n | 321 | relativeError              |
    \    |                            |\n +-----+----------------------------+-----+----------------------------+\n"
  title: 8.6.  Statistics (318-321, 336-338)
- contents:
  - "8.6.1.  selectorIdTotalPktsObserved\n   Description:\n      This Information
    Element specifies the total number of packets\n      observed by a Selector, for
    a specific value of SelectorId.\n      This Information Element should be used
    in an Options Template\n      scoped to the observation to which it refers.  See
    Section 3.4.2.1\n      of the IPFIX protocol document [RFC5101].\n   Abstract
    Data Type:  unsigned64\n   Data Type Semantics:  totalCounter\n   ElementId:  318\n
    \  Status:  current\n   Units:  packets\n"
  title: 8.6.1.  selectorIdTotalPktsObserved
- contents:
  - "8.6.2.  selectorIdTotalPktsSelected\n   Description:\n      This Information
    Element specifies the total number of packets\n      selected by a Selector, for
    a specific value of SelectorId.\n      This Information Element should be used
    in an Options Template\n      scoped to the observation to which it refers.  See
    Section 3.4.2.1\n      of the IPFIX protocol document [RFC5101].\n   Abstract
    Data Type:  unsigned64\n   Data Type Semantics:  totalCounter\n   ElementId:  319\n
    \  Status:  current\n   Units:  packets\n"
  title: 8.6.2.  selectorIdTotalPktsSelected
- contents:
  - "8.6.3.  absoluteError\n   Description:\n      This Information Element specifies
    the maximum possible\n      measurement error of the reported value for a given
    Information\n      Element.  The absoluteError has the same unit as the Information\n
    \     Element with which it is associated.  The real value of the metric\n      can
    differ by absoluteError (positive or negative) from the\n      measured value.\n
    \     This Information Element provides only the error for measured\n      values.
    \ If an Information Element contains an estimated value\n      (from Sampling),
    the confidence boundaries and confidence level\n      have to be provided instead,
    using the upperCILimit, lowerCILimit,\n      and confidenceLevel Information Elements.\n
    \     This Information Element should be used in an Options Template\n      scoped
    to the observation to which it refers.  See section 3.4.2.1\n      of the IPFIX
    protocol document [RFC5101].\n   Abstract Data Type:  float64\n   Data Type Semantics:
    \ quantity\n   ElementId:  320\n   Status:  current\n   Units:  The units of the
    Information Element for which the error is\n      specified.\n"
  title: 8.6.3.  absoluteError
- contents:
  - "8.6.4.  relativeError\n   Description:\n      This Information Element specifies
    the maximum possible positive\n      or negative error ratio for the reported
    value for a given\n      Information Element as a percentage of the measured value.
    \ The\n      real value of the metric can differ by relativeError percent\n      (positive
    or negative) from the measured value.\n      This Information Element provides
    only the error for measured\n      values.  If an Information Element contains
    an estimated value\n      (from Sampling), the confidence boundaries and confidence
    level\n      have to be provided instead, using the upperCILimit, lowerCILimit,\n
    \     and confidenceLevel Information Elements.\n      This Information Element
    should be used in an Options Template\n      scoped to the observation to which
    it refers.  See Section 3.4.2.1\n      of the IPFIX protocol document [RFC5101].\n
    \  Abstract Data Type:  float64\n   Data Type Semantics:  quantity\n   ElementId:
    \ 321\n   Status:  current\n"
  title: 8.6.4.  relativeError
- contents:
  - "8.6.5.  upperCILimit\n   Description:\n      This Information Element specifies
    the upper limit of a confidence\n      interval.  It is used to provide an accuracy
    statement for an\n      estimated value.  The confidence limits define the range
    in which\n      the real value is assumed to be with a certain probability p.\n
    \     Confidence limits always need to be associated with a confidence\n      level
    that defines this probability p.  Please note that a\n      confidence interval
    only provides a probability that the real\n      value lies within the limits.
    \ That means the real value can lie\n      outside the confidence limits.\n      The
    upperCILimit, lowerCILimit, and confidenceLevel Information\n      Elements should
    all be used in an Options Template scoped to the\n      observation to which they
    refer.  See Section 3.4.2.1 of the IPFIX\n      protocol document [RFC5101].\n
    \     Note that the upperCILimit, lowerCILimit, and confidenceLevel are\n      all
    required to specify confidence, and should be disregarded\n      unless all three
    are specified together.\n   Abstract Data Type:  float64\n   Data Type Semantics:
    \ quantity\n   ElementId:  336\n   Status:  current\n"
  title: 8.6.5.  upperCILimit
- contents:
  - "8.6.6.  lowerCILimit\n   Description:\n      This Information Element specifies
    the lower limit of a confidence\n      interval.  For further information, see
    the description of\n      upperCILimit.\n      The upperCILimit, lowerCILimit,
    and confidenceLevel Information\n      Elements should all be used in an Options
    Template scoped to the\n      observation to which they refer.  See Section 3.4.2.1
    of the IPFIX\n      protocol document [RFC5101].\n      Note that the upperCILimit,
    lowerCILimit, and confidenceLevel are\n      all required to specify confidence,
    and should be disregarded\n      unless all three are specified together.\n   Abstract
    Data Type:  float64\n   Data Type Semantics:  quantity\n   ElementId:  337\n   Status:
    \ current\n"
  title: 8.6.6.  lowerCILimit
- contents:
  - "8.6.7.  confidenceLevel\n   Description:\n      This Information Element specifies
    the confidence level.  It is\n      used to provide an accuracy statement for
    estimated values.  The\n      confidence level provides the probability p with
    which the real\n      value lies within a given range.  A confidence level always
    needs\n      to be associated with confidence limits that define the range in\n
    \     which the real value is assumed to be.\n      The upperCILimit, lowerCILimit,
    and confidenceLevel Information\n      Elements should all be used in an Options
    Template scoped to the\n      observation to which they refer.  See Section 3.4.2.1
    of the IPFIX\n      protocol document [RFC5101].\n      Note that the upperCILimit,
    lowerCILimit, and confidenceLevel are\n      all required to specify confidence,
    and should be disregarded\n      unless all three are specified together.\n   Abstract
    Data Type:  float64\n   Data Type Semantics:  quantity\n   ElementId:  338\n   Status:
    \ current\n"
  title: 8.6.7.  confidenceLevel
- contents:
  - "9.  Security Considerations\n   The PSAMP information model itself does not directly
    introduce\n   security issues.  Rather, it defines a set of attributes that may
    for\n   privacy or business issues be considered sensitive information.\n   For
    example, exporting values of header fields may make attacks\n   possible for the
    receiver of this information, which would otherwise\n   only be possible for direct
    observers of the reported Flows along the\n   data path.  Specifically, the Information
    Elements pertaining to\n   packet sections MUST target no more than the packet
    header, some\n   subsequent bytes of the packet, and encapsulating headers if
    present.\n   Full packet capture of arbitrary packet streams is explicitly out
    of\n   scope, per [RFC2804].\n   The underlying protocol used to exchange the
    information described\n   here MUST therefore apply appropriate procedures to
    guarantee the\n   integrity and confidentiality of the exported information.  Such\n
    \  procedures are defined in separate documents, specifically the IPFIX\n   protocol
    document [RFC5101].\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   The PSAMP information model, as set out in this
    document, has two\n   sets of assigned numbers.  Considerations for assigning
    them are\n   discussed in this section, using the example policies as set out
    in\n   the \"Guidelines for IANA Considerations\" document [RFC5226].\n"
  title: 10.  IANA Considerations
- contents:
  - "10.1.  Related Considerations\n   As the PSAMP protocol uses the IPFIX protocol,
    refer to the IANA\n   Considerations section in [RFC5102] for the assignments
    of numbers\n   used in the protocol and for the numbers used in the information\n
    \  model.\n"
  title: 10.1.  Related Considerations
- contents:
  - "10.2.  PSAMP-Related Considerations\n   This document specifies an initial set
    of PSAMP Information Elements\n   fulfilling the needs specified in [RFC5475],
    as an extension to the\n   IPFIX Information Elements [RFC5102].\n   Note that
    the PSAMP Information Element IDs were initially started at\n   value 301, in
    order to leave a gap for any ongoing IPFIX work\n   requiring new Information
    Elements.  It is expected that this gap in\n   the Information Element numbering
    will be filled in by IANA with new\n   IPFIX Information Elements.\n   Each new
    selection method MUST be assigned a unique value in the\n   selectorAlgorithm
    registry.  Its configuration parameter(s), along\n   with the way to report them
    with an Options Template, MUST be clearly\n   specified.  The initial content
    of the selectorAlgorithm registry is\n   found in Section 8.2.1.\n   New assignments
    for the PSAMP selection method will be administered\n   by IANA and are subject
    to Expert Review [RFC5226].  The group of\n   experts must double check the Information
    Elements definitions with\n   already defined Information Elements for completeness,
    accuracy, and\n   redundancy.  Those experts will initially be drawn from the
    Working\n   Group Chairs and document editors of the IPFIX and PSAMP Working\n
    \  Groups.  The selectorAlgorithm registry is maintained by IANA and can\n   be
    updated as long as specifications of the new method(s) and any new\n   Information
    Elements are provided.\n"
  title: 10.2.  PSAMP-Related Considerations
- contents:
  - '11.  References

    '
  title: 11.  References
- contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in
    RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
    1997.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n
    \             IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May
    2008.\n   [RFC5101]  Claise, B., \"Specification of the IP Flow Information\n
    \             Export (IPFIX) Protocol for the Exchange of IP Traffic\n              Flow
    Information\", RFC 5101, January 2008.\n   [RFC5102]  Quittek, J., Bryant, S.,
    Claise, B., Aitken, P., and J.\n              Meyer, \"Information Model for IP
    Flow Information Export\",\n              RFC 5102, January 2008.\n   [RFC5475]
    \ Zseby, T., Molina, M., Duffield, D., Niccolini, S., and F.\n              Rapall,
    \"Sampling and Filtering Techniques for IP Packet\n              Selection\",
    RFC 5475, March 2009.\n   [RFC5476]  Claise, B., Ed., \"Packet Sampling (PSAMP)
    Protocol\n              Specifications\", RFC 5476, March 2009.\n"
  title: 11.1.  Normative References
- contents:
  - "11.2.  Informative References\n   [RFC0791]  Postel, J., \"Internet Protocol\",
    STD 5, RFC 791,\n              September 1981.\n   [RFC2460]  Deering, S. and
    R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\",
    RFC 2460, December 1998.\n   [RFC2629]  Rose, M., \"Writing I-Ds and RFCs using
    XML\", RFC 2629,\n              June 1999.\n   [RFC2804]  IAB and IESG, \"IETF
    Policy on Wiretapping\", RFC 2804,\n              May 2000.\n   [RFC3031]  Rosen,
    E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label Switching
    Architecture\", RFC 3031, January 2001.\n   [RFC3032]  Rosen, E., Tappan, D.,
    Fedorkow, G., Rekhter, Y.,\n              Farinacci, D., Li, T., and A. Conta,
    \"MPLS Label Stack\n              Encoding\", RFC 3032, January 2001.\n   [RFC5474]
    \ Duffield, N., Ed., \"A Framework for Packet Selection and\n              Reporting\",
    RFC 5474, March 2009.\n"
  title: 11.2.  Informative References
- contents:
  - "Appendix A.  Formal Specification of PSAMP Information Elements\n   This appendix
    contains a formal description of the PSAMP information\n   model XML document.
    \ Note that this appendix is of informational\n   nature, while the text in Section
    8 generated from this appendix is\n   normative.\n   Using a formal and machine-readable
    syntax for the information model\n   enables the creation of PSAMP-aware tools
    that can automatically\n   adapt to extensions to the information model, by simply
    reading\n   updated information model specifications.\n   The wide availability
    of XML-aware tools and libraries for client\n   devices is a primary consideration
    for this choice.  In particular,\n   libraries for parsing XML documents are readily
    available.  Also,\n   mechanisms such as the Extensible Stylesheet Language (XSL)
    allow for\n   transforming a source XML document into other documents.  This draft\n
    \  was authored in XML and transformed according to [RFC2629].\n   It should be
    noted that the use of XML in Exporters, Collectors, or\n   other tools is not
    mandatory for the deployment of PSAMP.  In\n   particular, exporting processes
    do not produce or consume XML as part\n   of their operation.  It is expected
    that PSAMP Collectors MAY take\n   advantage of the machine readability of the
    information model vs.\n   hardcoding their behavior or inventing proprietary means
    for\n   accommodating extensions.\n"
  - '<?xml version="1.0" encoding="UTF-8"?>

    '
  - "<!--\n  This XML document is a product of the IETF IPFIX Working Group.\n  Contact
    information:\n    WG charter:\n      http://www.ietf.org/html.charters/ipfix-charter.html\n
    \   Mailing Lists:\n      General Discussion: ipfix@ietf.org\n      To Subscribe:
    http://www1.ietf.org/mailman/listinfo/ipfix\n      Archive:\n        http://www1.ietf.org/mail-archive/web/ipfix/current/index.html\n
    \   Editor:\n      Thomas Dietz\n      NEC Europe Ltd.\n      NEC Laboratories
    Europe\n      Network Research Division\n      Kurfuersten-Anlage 36\n      Heidelberg
    69115\n      Germany\n      Phone: +49 6221 4342-128\n      Email: Thomas.Dietz@nw.neclab.eu\n
    \     Benoit Claise\n      Cisco Systems, Inc.\n      De Kleetlaan 6a b1\n      Degem
    \ 1813\n      Belgium\n      Phone: +32 2 704 5622\n      Email: bclaise@cisco.com\n
    \     Paul Aitken\n      Cisco Systems, Inc.\n      96 Commercial Quay\n      Edinburgh
    \ EH6 6LX\n      Scotland\n      Phone: +44 131 561 3616\n      Email: paitken@cisco.com\n
    \     URI: http://www.cisco.com\n      Falko Dressler\n      University of Erlangen-Nuremberg\n
    \     Dept. of Computer Sciences\n      Martensstr. 3\n      Erlangen  91058\n
    \     Germany\n      Phone: +49 9131 85-27914\n      Email: dressler@informatik.uni-erlangen.de\n
    \     URI: http://www7.informatik.uni-erlangen.de/~dressler\n      Georg Carle\n
    \     Technical University of Munich\n      Institute for Informatics\n      Boltzmannstr.
    3\n      Garching bei Muenchen  85737\n      Germany\n      Phone: +49 89 289-18030\n
    \     EMail: carle@in.tum.de\n      URI: http://www.net.in.tum.de/~carle/\n  Abstract:\n
    \  This memo defines an information model for the Packet SAMPling\n   (PSAMP)
    protocol.  It is used by the PSAMP protocol for encoding\n   sampled packet data
    and information related to the Sampling process.\n   As the PSAMP protocol is
    based on the IPFIX protocol, this\n   information model is an extension to the
    IPFIX information model.\n   Copyright (c) 2009 IETF Trust and the persons identified
    as\n   authors of the code.  All rights reserved.\n   Redistribution and use in
    source and binary forms, with or without\n   modification, are permitted provided
    that the following conditions\n   are met:\n   - Redistributions of source code
    must retain the above copyright\n     notice, this list of conditions and the
    following disclaimer.\n   - Redistributions in binary form must reproduce the
    above copyright\n     notice, this list of conditions and the following disclaimer
    in\n     the documentation and/or other materials provided with the\n     distribution.\n
    \  - Neither the name of Internet Society, IETF or IETF Trust, nor the\n     names
    of specific contributors, may be used to endorse or promote\n     products derived
    from this software without specific prior\n     written permission.\n   THIS SOFTWARE
    IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   'AS IS' AND ANY EXPRESS
    OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES
    OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED. IN
    NO EVENT SHALL THE COPYRIGHT\n   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
    INDIRECT, INCIDENTAL,\n   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT\n   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n
    \  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n   THEORY
    OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n   (INCLUDING NEGLIGENCE
    OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n   OF THIS SOFTWARE, EVEN IF
    ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   This version of the XML document
    is part of RFC 5477;\n   see the RFC itself for full legal notices.\n"
  - '-->

    '
  - "<fieldDefinitions xmlns=\"urn:ietf:params:xml:ns:ipfix-info\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n
    \ xsi:schemaLocation=\"urn:ietf:params:xml:ns:ipfix-info\n             ipfix-info.xsd\">\n
    \ <field name=\"selectionSequenceId\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"identifier\"
    elementId=\"301\" status=\"current\"\n    group=\"identifiers\">\n    <description>\n
    \     <paragraph>\n        From all the packets observed at an Observation Point,
    a subset\n        of the packets is selected by a sequence of one or more\n        Selectors.
    \ The selectionSequenceId is a unique value per\n        Observation Domain, specifying
    the Observation Point and the\n        sequence of Selectors through which the
    packets are selected.\n      </paragraph>\n    </description>\n  </field>\n  <field
    name=\"selectorId\" dataType=\"unsigned16\"\n    dataTypeSemantics=\"identifier\"
    elementId=\"302\" status=\"current\"\n    group=\"identifiers\">\n    <description>\n
    \     <paragraph>\n        The Selector ID is the unique ID identifying a Primitive\n
    \       Selector.  Each Primitive Selector must have a unique ID in the\n        Observation
    Domain.\n      </paragraph>\n    </description>\n  </field>\n  <field name=\"informationElementId\"
    dataType=\"unsigned16\"\n    dataTypeSemantics=\"identifier\" elementId=\"303\"
    status=\"current\"\n    group=\"identifiers\">\n    <description>\n      <paragraph>\n
    \       This Information Element contains the ID of another Information\n        Element.\n
    \     </paragraph>\n    </description>\n  </field>\n  <field name=\"selectorAlgorithm\"
    dataType=\"unsigned16\"\n    dataTypeSemantics=\"identifier\" elementId=\"304\"
    status=\"current\"\n    group=\"sampling configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element identifies the packet selection\n
    \       methods (e.g., Filtering, Sampling) that are applied by\n        the Selection
    Process.\n        Most of these methods have parameters.  Further\n        Information
    Elements are needed to fully specify packet\n        selection with these methods
    and all their parameters.\n        The methods listed below are defined in\n        [RFC5475].
    \ For their parameters,\n        Information Elements are defined in the information
    model\n        document.  The names of these Information Elements are\n        listed
    for each method identifier.\n        Further method identifiers may be added to
    the list\n        below.  It might be necessary to define new Information\n        Elements
    to specify their parameters.\n        The selectorAlgorithm registry is maintained
    by IANA.  New\n        assignments for the registry will be administered by IANA\n
    \       and are subject to Expert Review [RFC5226].\n        The registry can
    be updated when specifications of the new\n        method(s) and any new Information
    Elements are provided.\n        The group of experts must double check the selectorAlgorithm\n
    \       definitions and Information Elements with already defined\n        selectorAlgorithms
    and Information Elements for completeness,\n        accuracy, and redundancy.
    \ Those experts will initially be drawn\n        from the Working Group Chairs
    and document editors of the IPFIX\n        and PSAMP Working Groups.\n        The
    following packet selection methods identifiers are\n        defined here:\n        +----+------------------------+------------------------+\n
    \       | ID |        Method          |      Parameters        |\n        +----+------------------------+------------------------+\n
    \       | 1  | Systematic count-based | samplingPacketInterval |\n        |    |
    Sampling               | samplingPacketSpace    |\n        +----+------------------------+------------------------+\n
    \       | 2  | Systematic time-based  | samplingTimeInterval   |\n        |    |
    Sampling               | samplingTimeSpace      |\n        +----+------------------------+------------------------+\n
    \       | 3  | Random n-out-of-N      | samplingSize           |\n        |    |
    Sampling               | samplingPopulation     |\n        +----+------------------------+------------------------+\n
    \       | 4  | Uniform probabilistic  | samplingProbability    |\n        |    |
    Sampling               |                        |\n        +----+------------------------+------------------------+\n
    \       | 5  | Property Match         | no agreed parameters   |\n        |    |
    Filtering              |                        |\n        +----+------------------------+------------------------+\n
    \       |   Hash-based Filtering      | hashInitialiserValue   |\n        +----+------------------------+
    hashIPPayloadOffset    |\n        | 6  | using BOB              | hashIPPayloadSize
    \     |\n        +----+------------------------+ hashSelectedRangeMin   |\n        |
    7  | using IPSX             | hashSelectedRangeMax   |\n        +----+------------------------+
    hashOutputRangeMin     |\n        | 8  | using CRC              | hashOutputRangeMax
    \    |\n        +----+------------------------+------------------------+\n        There
    is a broad variety of possible parameters that could be\n        used for Property
    Match Filtering (5), but currently there are\n        no agreed parameters specified.\n
    \     </paragraph>\n    </description>\n  </field>\n  <field name=\"samplingPacketInterval\"
    dataType=\"unsigned32\"\n    dataTypeSemantics=\"quantity\" elementId=\"305\"
    status=\"current\"\n    group=\"sampling configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the number of packets
    that\n        are consecutively sampled.  A value of 100 means that\n        100
    consecutive packets are sampled.\n        For example, this Information Element
    may be used to describe\n        the configuration of a systematic count-based
    Sampling Selector.\n      </paragraph>\n    </description>\n    <units>packets</units>\n
    \ </field>\n  <field name=\"samplingPacketSpace\" dataType=\"unsigned32\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"306\" status=\"current\"\n    group=\"sampling configuration\">\n
    \   <description>\n      <paragraph>\n        This Information Element specifies
    the number of packets between\n        two \"samplingPacketInterval\"s.  A value
    of 100 means that the\n        next interval starts 100 packets (which are not
    sampled)\n        after the current \"samplingPacketInterval\" is over.\n        For
    example, this Information Element may be used to describe\n        the configuration
    of a systematic count-based Sampling Selector.\n      </paragraph>\n    </description>\n
    \   <units>packets</units>\n  </field>\n  <field name=\"samplingTimeInterval\"
    dataType=\"unsigned32\"\n    dataTypeSemantics=\"quantity\" elementId=\"307\"
    status=\"current\"\n    group=\"sampling configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the time interval
    in\n        microseconds during which all arriving packets are sampled.\n        For
    example, this Information Element may be used to describe\n        the configuration
    of a systematic time-based Sampling Selector.\n      </paragraph>\n    </description>\n
    \   <units>microseconds</units>\n  </field>\n  <field name=\"samplingTimeSpace\"
    dataType=\"unsigned32\"\n    dataTypeSemantics=\"quantity\" elementId=\"308\"
    status=\"current\"\n    group=\"sampling configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the time interval
    in\n        microseconds between two \"samplingTimeInterval\"s.  A value of 100\n
    \       means that the next interval starts 100 microseconds\n        (during
    which no packets are sampled) after the current\n        \"samplingTimeInterval\"
    is over.\n        For example, this Information Element may used to describe the\n
    \       configuration of a systematic time-based Sampling Selector.\n      </paragraph>\n
    \   </description>\n    <units>microseconds</units>\n  </field>\n  <field name=\"samplingSize\"
    dataType=\"unsigned32\"\n    dataTypeSemantics=\"quantity\" elementId=\"309\"
    status=\"current\"\n    group=\"sampling configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the number of elements
    taken\n        from the parent Population for random Sampling methods.\n        For
    example, this Information Element may be used to describe\n        the configuration
    of a random n-out-of-N Sampling Selector.\n      </paragraph>\n    </description>\n
    \   <units>packets</units>\n  </field>\n  <field name=\"samplingPopulation\" dataType=\"unsigned32\"\n
    \   dataTypeSemantics=\"quantity\" elementId=\"310\" status=\"current\"\n    group=\"sampling
    configuration\">\n    <description>\n      <paragraph>\n        This Information
    Element specifies the number of elements in the\n        parent Population for
    random Sampling methods.\n        For example, this Information Element may be
    used to describe\n        the configuration of a random n-out-of-N Sampling Selector.\n
    \     </paragraph>\n    </description>\n    <units>packets</units>\n  </field>\n
    \ <field name=\"samplingProbability\" dataType=\"float64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"311\" status=\"current\"\n    group=\"sampling configuration\">\n
    \   <description>\n      <paragraph>\n        This Information Element specifies
    the probability that a packet\n        is sampled, expressed as a value between
    0 and 1.  The\n        probability is equal for every packet.  A value of 0 means
    no\n        packet was sampled since the probability is 0.\n        For example,
    this Information Element may be used to describe\n        the configuration of
    a uniform probabilistic Sampling Selector.\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"ipHeaderPacketSection\" dataType=\"octetArray\"\n
    \   elementId=\"313\" status=\"current\" group=\"packet data\">\n    <description>\n
    \     <paragraph>\n        This Information Element, which may have a variable
    length,\n        carries a series of octets from the start of the IP header of
    a\n        sampled packet.\n        With sufficient length, this element also
    reports octets from\n        the IP payload, subject to [RFC2804].  See the Security\n
    \       Considerations section.\n        The size of the exported section may
    be constrained due to\n        limitations in the IPFIX protocol.\n        The
    data for this field MUST NOT be padded.\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"ipPayloadPacketSection\" dataType=\"octetArray\"\n
    \   elementId=\"314\" status=\"current\" group=\"packet data\">\n    <description>\n
    \     <paragraph>\n        This Information Element, which may have a variable
    length,\n        carries a series of octets from the start of the IP payload of
    a\n        sampled packet.\n        The IPv4 payload is that part of the packet
    that follows the\n        IPv4 header and any options, which [RFC0791] refers
    to as \"data\"\n        or \"data octets\".  For example, see the examples in
    [RFC0791],\n        Appendix A.\n        The IPv6 payload is the rest of the packet
    following the\n        40-octet IPv6 header.  Note that any extension headers
    present\n        are considered part of the payload.  See [RFC2460] for the IPv6\n
    \       specification.\n        The size of the exported section may be constrained
    due to\n        limitations in the IPFIX protocol.\n        The data for this
    field MUST NOT be padded.\n      </paragraph>\n    </description>\n  </field>\n
    \ <field name=\"mplsLabelStackSection\" dataType=\"octetArray\"\n    elementId=\"316\"
    status=\"current\" group=\"packet data\">\n    <description>\n      <paragraph>\n
    \       This Information Element, which may have a variable length,\n        carries
    the first n octets from the MPLS label stack of a\n        sampled packet.\n        With
    sufficient length, this element also reports octets from\n        the MPLS payload,
    subject to [RFC2804].  See the Security\n        Considerations section.\n        See
    [RFC3031] for the specification of MPLS packets.\n        See [RFC3032] for the
    specification of the MPLS label stack.\n        The size of the exported section
    may be constrained due to\n        limitations in the IPFIX protocol.\n        The
    data for this field MUST NOT be padded.\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"mplsPayloadPacketSection\" dataType=\"octetArray\"\n
    \   elementId=\"317\" status=\"current\" group=\"packet data\">\n    <description>\n
    \     <paragraph>\n        This Information Element, which may have a variable
    length,\n        carries the first n octets from the MPLS payload of a sampled\n
    \       packet, being data that follows immediately after the MPLS label\n        stack.\n
    \       See [RFC3031] for the specification of MPLS packets.\n        See [RFC3032]
    for the specification of the MPLS label stack.\n        The size of the exported
    section may be constrained due to\n        limitations in the IPFIX protocol.\n
    \       The data for this field MUST NOT be padded.\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"selectorIdTotalPktsObserved\" dataType=\"unsigned64\"\n
    \   dataTypeSemantics=\"totalCounter\" elementId=\"318\" status=\"current\"\n
    \   group=\"statistics\">\n    <description>\n      <paragraph>\n        This
    Information Element specifies the total number of packets\n        observed by
    a Selector, for a specific value of SelectorId.\n        This Information Element
    should be used in an Options Template\n        scoped to the observation to which
    it refers.\n        See Section 3.4.2.1 of the IPFIX protocol document [RFC5101].\n
    \     </paragraph>\n    </description>\n    <units>packets</units>\n  </field>\n
    \ <field name=\"selectorIdTotalPktsSelected\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"totalCounter\"
    elementId=\"319\" status=\"current\"\n    group=\"statistics\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the total number
    of packets\n        selected by a Selector, for a specific value of SelectorId.\n
    \       This Information Element should be used in an Options Template\n        scoped
    to the observation to which it refers.\n        See Section 3.4.2.1 of the IPFIX
    protocol document [RFC5101].\n        </paragraph>\n    </description>\n    <units>packets</units>\n
    \ </field>\n  <field name=\"absoluteError\" dataType=\"float64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"320\" status=\"current\"\n    group=\"statistics\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the maximum possible\n
    \       measurement error of the reported value for a given Information\n        Element.
    \ The absoluteError has the same unit as the Information\n        Element with
    which it is associated.  The real value of the\n        metric can differ by absoluteError
    (positive or negative) from\n        the measured value.\n        This Information
    Element provides only the\n        error for measured values.  If an Information
    Element contains\n        an estimated value (from Sampling), the confidence boundaries\n
    \       and confidence level have to be provided instead, using the\n        upperCILimit,
    lowerCILimit, and confidenceLevel Information\n        Elements.\n        This
    Information Element should be used in an Options Template\n        scoped to the
    observation to which it refers.\n        See Section 3.4.2.1 of the IPFIX protocol
    document [RFC5101].\n      </paragraph>\n    </description>\n    <units>\n      The
    units of the Information Element for which the error is\n      specified.\n    </units>\n
    \ </field>\n  <field name=\"relativeError\" dataType=\"float64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"321\" status=\"current\"\n    group=\"statistics\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the maximum possible
    positive\n        or negative error ratio for the reported value for a given\n
    \       Information Element as a percentage of the measured value.\n        The
    real value of the metric can differ by relativeError percent\n        (positive
    or negative) from the measured value.\n        This Information Element provides
    only the error for measured\n        values.  If an Information Element contains
    an estimated value\n        (from Sampling), the confidence boundaries and confidence\n
    \       level have to be provided instead, using the upperCILimit,\n        lowerCILimit,
    and confidenceLevel Information Elements.\n        This Information Element should
    be used in an Options Template\n        scoped to the observation to which it
    refers.\n        See Section 3.4.2.1 of the IPFIX protocol document [RFC5101].\n
    \     </paragraph>\n    </description>\n  </field>\n  <field name=\"observationTimeSeconds\"
    dataType=\"dateTimeSeconds\"\n    dataTypeSemantics=\"quantity\" elementId=\"322\"
    status=\"current\"\n    group=\"timestamps\">\n    <description>\n      <paragraph>\n
    \       This Information Element specifies the absolute time in seconds\n        of
    an observation.\n      </paragraph>\n    </description>\n    <units>seconds</units>\n
    \ </field>\n  <field name=\"observationTimeMilliseconds\"\n    dataType=\"dateTimeMilliseconds\"
    dataTypeSemantics=\"quantity\"\n    elementId=\"323\" status=\"current\" group=\"timestamps\">\n
    \   <description>\n      <paragraph>\n        This Information Element specifies
    the absolute time in\n        milliseconds of an observation.\n      </paragraph>\n
    \   </description>\n    <units>milliseconds</units>\n  </field>\n  <field name=\"observationTimeMicroseconds\"\n
    \   dataType=\"dateTimeMicroseconds\" dataTypeSemantics=\"quantity\"\n    elementId=\"324\"
    status=\"current\" group=\"timestamps\">\n    <description>\n      <paragraph>\n
    \       This Information Element specifies the absolute time in\n        microseconds
    of an observation.\n      </paragraph>\n    </description>\n    <units>microseconds</units>\n
    \ </field>\n  <field name=\"observationTimeNanoseconds\"\n    dataType=\"dateTimeNanoseconds\"
    dataTypeSemantics=\"quantity\"\n    elementId=\"325\" status=\"current\" group=\"timestamps\">\n
    \   <description>\n      <paragraph>\n        This Information Element specifies
    the absolute time in\n        nanoseconds of an observation.\n      </paragraph>\n
    \   </description>\n    <units>nanoseconds</units>\n  </field>\n  <field name=\"digestHashValue\"
    dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\" elementId=\"326\"
    status=\"current\"\n    group=\"hash configuration\">\n    <description>\n      <paragraph>\n
    \       This Information Element specifies the value from the digest\n        hash
    function.\n        See also Sections 6.2, 3.8, and 7.1 of\n        [RFC5475].\n
    \     </paragraph>\n    </description>\n  </field>\n  <field name=\"hashIPPayloadOffset\"
    dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\" elementId=\"327\"
    status=\"current\"\n    group=\"hash configuration\">\n    <description>\n      <paragraph>\n
    \       This Information Element specifies the IP payload offset used by\n        a
    Hash-based Selection Selector.\n        See also Sections 6.2, 3.8, and 7.1 of\n
    \       [RFC5475].\n      </paragraph>\n    </description>\n  </field>\n  <field
    name=\"hashIPPayloadSize\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"328\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the IP payload size
    used by a\n        Hash-based Selection Selector.\n        See also Sections 6.2,
    3.8, and 7.1 of\n        [RFC5475]\n      </paragraph>\n    </description>\n  </field>\n
    \ <field name=\"hashOutputRangeMin\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"329\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the value for the
    beginning\n        of a hash function's potential output range.\n        See also
    Sections 6.2, 3.8, and 7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"hashOutputRangeMax\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"330\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the value for the
    end of a\n        hash function's potential output range.\n        See also Sections
    6.2, 3.8, and 7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"hashSelectedRangeMin\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"331\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the value for the
    beginning\n        of a hash function's selected range.\n        See also Sections
    6.2, 3.8, and 7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"hashSelectedRangeMax\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"332\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the value for the
    end of a\n        hash function's selected range.\n        See also Sections 6.2,
    3.8, and 7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"hashDigestOutput\" dataType=\"boolean\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"333\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element contains a boolean value that
    is TRUE\n        if the output from this hash Selector has been configured to
    be\n        included in the packet report as a packet digest, else FALSE.\n        See
    also Sections 6.2, 3.8, and 7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n
    \ </field>\n  <field name=\"hashInitialiserValue\" dataType=\"unsigned64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"334\" status=\"current\"\n    group=\"hash configuration\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the initialiser
    value to the\n        hash function.\n        See also Sections 6.2, 3.8, and
    7.1 of\n        [RFC5475].\n      </paragraph>\n    </description>\n  </field>\n
    \ <field name=\"upperCILimit\" dataType=\"float64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"336\" status=\"current\"\n    group=\"statistics\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the upper limit
    of a\n        confidence interval.  It is used to provide an accuracy\n        statement
    for an estimated value.  The confidence limits\n        define the range in which
    the real value is assumed to be\n        with a certain probability p.  Confidence
    limits always need\n        to be associated with a confidence level that defines
    this\n        probability p.  Please note that a confidence interval only\n        provides
    a probability that the real value lies within the\n        limits.  That means
    the real value can lie outside the\n        confidence limits.\n        The upperCILimit,
    lowerCILimit, and confidenceLevel\n        Information Elements should all be
    used in an Options Template\n        scoped to the observation to which they refer.\n
    \       See Section 3.4.2.1 of the IPFIX protocol document [RFC5101].\n        Note
    that the upperCILimit, lowerCILimit, and confidenceLevel\n        are all required
    to specify confidence, and should be\n        disregarded unless all three are
    specified together.\n      </paragraph>\n    </description>\n    </field>\n  <field
    name=\"lowerCILimit\" dataType=\"float64\"\n    dataTypeSemantics=\"quantity\"
    elementId=\"337\" status=\"current\"\n    group=\"statistics\">\n    <description>\n
    \     <paragraph>\n        This Information Element specifies the lower limit
    of a\n        confidence interval.  For further information, see the\n        description
    of upperCILimit.\n        The upperCILimit, lowerCILimit, and confidenceLevel\n
    \       Information Elements should all be used in an Options Template\n        scoped
    to the observation to which they refer.\n        See Section 3.4.2.1 of the IPFIX
    protocol document [RFC5101].\n        Note that the upperCILimit, lowerCILimit,
    and confidenceLevel\n        are all required to specify confidence, and should
    be\n        disregarded unless all three are specified together.\n      </paragraph>\n
    \   </description>\n  </field>\n  <field name=\"confidenceLevel\" dataType=\"float64\"\n
    \   dataTypeSemantics=\"quantity\" elementId=\"338\" status=\"current\"\n    group=\"statistics\">\n
    \   <description>\n      <paragraph>\n        This Information Element specifies
    the confidence level.  It is\n        used to provide an accuracy statement for
    estimated values.\n        The confidence level provides the probability p with
    which the\n        real value lies within a given range.  A confidence level\n
    \       always needs to be associated with confidence limits that\n        define
    the range in which the real value is assumed to be.\n        The upperCILimit,
    lowerCILimit, and confidenceLevel\n        Information Elements should all be
    used in an Options Template\n        scoped to the observation to which they refer.\n
    \       See Section 3.4.2.1 of the IPFIX protocol document [RFC5101].\n        Note
    that the upperCILimit, lowerCILimit, and confidenceLevel\n        are all required
    to specify confidence, and should be\n        disregarded unless all three are
    specified together.\n      </paragraph>\n    </description>\n  </field>\n"
  - '</fieldDefinitions>

    '
  title: Appendix A.  Formal Specification of PSAMP Information Elements
- contents:
  - "Authors' Addresses\n   Thomas Dietz\n   NEC Europe Ltd.\n   NEC Laboratories
    Europe\n   Network Research Division\n   Kurfuersten-Anlage 36\n   Heidelberg
    \ 69115\n   Germany\n   Phone: +49 6221 4342-128\n   EMail: Thomas.Dietz@nw.neclab.eu\n
    \  URI:   http://www.nw.neclab.eu\n   Benoit Claise\n   Cisco Systems, Inc.\n
    \  De Kleetlaan 6a b1\n   Degem  1813\n   Belgium\n   Phone: +32 2 704 5622\n
    \  EMail: bclaise@cisco.com\n   Paul Aitken\n   Cisco Systems, Inc.\n   96 Commercial
    Quay\n   Edinburgh  EH6 6LX\n   Scotland\n   Phone: +44 131 561 3616\n   EMail:
    paitken@cisco.com\n   URI:   http://www.cisco.com/\n   Falko Dressler\n   University
    of Erlangen-Nuremberg\n   Dept. of Computer Sciences\n   Martensstr. 3\n   Erlangen
    \ 91058\n   Germany\n   Phone: +49 9131 85-27914\n   EMail: dressler@informatik.uni-erlangen.de\n
    \  URI:   http://www7.informatik.uni-erlangen.de/~dressler\n   Georg Carle\n   Technical
    University of Munich\n   Institute for Informatics\n   Boltzmannstr. 3\n   Garching
    bei Muenchen  85737\n   Germany\n   Phone: +49 89 289-18030\n   EMail: carle@in.tum.de\n
    \  URI:   http://www.net.in.tum.de/~carle/\n"
  title: Authors' Addresses
