- title: __initial_text__
  contents:
  - '         A Framework for Integrated Services and RSVP over ATM

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document outlines the issues and framework related to providing\n\
    \   IP Integrated Services with RSVP over ATM. It provides an overall\n   approach\
    \ to the problem(s) and related issues.  These issues and\n   problems are to\
    \ be addressed in further documents from the ISATM\n   subgroup of the ISSLL working\
    \ group.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Internet currently has one class of service normally\
    \ referred to\n   as \"best effort.\"  This service is typified by first-come,\
    \ first-\n   serve scheduling at each hop in the network.  Best effort service\
    \ has\n   worked well for electronic mail, World Wide Web (WWW) access, file\n\
    \   transfer (e.g. ftp), etc.  For real-time traffic such as voice and\n   video,\
    \ the current Internet has performed well only across unloaded\n   portions of\
    \ the network.  In order to provide quality real-time\n   traffic, new classes\
    \ of service and a QoS signalling protocol are\n   being introduced in the Internet\
    \ [1,6,7], while retaining the\n   existing best effort service.  The QoS signalling\
    \ protocol is RSVP\n   [1], the Resource ReSerVation Protocol and the service\
    \ models\n   One of the important features of ATM technology is the ability to\n\
    \   request a point-to-point Virtual Circuit (VC) with a specified\n   Quality\
    \ of Service (QoS).  An additional feature of ATM technology is\n   the ability\
    \ to request point-to-multipoint VCs with a specified QoS.\n   Point-to-multipoint\
    \ VCs allows leaf nodes to be added and removed\n   from the VC dynamically and\
    \ so provides a mechanism for supporting IP\n   multicast. It is only natural\
    \ that RSVP and the Internet Integrated\n   Services (IIS) model would like to\
    \ utilize the QoS properties of any\n   underlying link layer including ATM, and\
    \ this memo concentrates on\n   ATM.\n   Classical IP over ATM [10] has solved\
    \ part of this problem,\n   supporting IP unicast best effort traffic over ATM.\
    \  Classical IP\n   over ATM is based on a Logical IP Subnetwork (LIS), which\
    \ is a\n   separately administered IP subnetwork.  Hosts within an LIS\n   communicate\
    \ using the ATM network, while hosts from different subnets\n   communicate only\
    \ by going through an IP router (even though it may be\n   possible to open a\
    \ direct VC between the two hosts over the ATM\n   network).  Classical IP over\
    \ ATM provides an Address Resolution\n   Protocol (ATMARP) for ATM edge devices\
    \ to resolve IP addresses to\n   native ATM addresses.  For any pair of IP/ATM\
    \ edge devices (i.e.\n   hosts or routers), a single VC is created on demand and\
    \ shared for\n   all traffic between the two devices.  A second part of the RSVP\
    \ and\n   IIS over ATM problem, IP multicast, is being solved with MARS [5],\n\
    \   the Multicast Address Resolution Server.\n   MARS compliments ATMARP by allowing\
    \ an IP address to resolve into a\n   list of native ATM addresses, rather than\
    \ just a single address.\n   The ATM Forum's LAN Emulation (LANE) [17, 20] and\
    \ Multiprotocol Over\n   ATM (MPOA) [18] also address the support of IP best effort\
    \ traffic\n   over ATM through similar means.\n   A key remaining issue for IP\
    \ in an ATM environment is the integration\n   of RSVP signalling and ATM signalling\
    \ in support of the Internet\n   Integrated Services (IIS) model.  There are two\
    \ main areas involved\n   in supporting the IIS model, QoS translation and VC\
    \ management. QoS\n   translation concerns mapping a QoS from the IIS model to\
    \ a proper ATM\n   QoS, while VC management concentrates on how many VCs are needed\
    \ and\n   which traffic flows are routed over which VCs.\n"
- title: 1.1 Structure and Related Documents
  contents:
  - "1.1 Structure and Related Documents\n   This document provides a guide to the\
    \ issues for IIS over ATM.  It is\n   intended to frame the problems that are\
    \ to be addressed in further\n   documents. In this document, the modes and models\
    \ for RSVP operation\n   over ATM will be discussed followed by a discussion of\
    \ management of\n   ATM VCs for RSVP data and control. Lastly, the topic of\n\
    \   encapsulations will be discussed in relation to the models presented.\n  \
    \ This document is part of a group of documents from the ISATM subgroup\n   of\
    \ the ISSLL working group related to the operation of IntServ and\n   RSVP over\
    \ ATM.  [14] discusses the mapping of the IntServ models for\n   Controlled Load\
    \ and Guaranteed Service to ATM.  [15 and 16] discuss\n   detailed implementation\
    \ requirements and guidelines for RSVP over\n   ATM, respectively.  While these\
    \ documents may not address all the\n   issues raised in this document, they should\
    \ provide enough\n   information for development of solutions for IntServ and\
    \ RSVP over\n   ATM.\n"
- title: 1.2 Terms
  contents:
  - "1.2 Terms\n   Several term used in this document are used in many contexts, often\n\
    \   with different meaning.  These terms are used in this document with\n   the\
    \ following meaning:\n   - Sender is used in this document to mean the ingress\
    \ point to the\n     ATM network or \"cloud\".\n   - Receiver is used in this\
    \ document to refer to the egress point from\n     the ATM network or \"cloud\"\
    .\n   - Reservation is used in this document to refer to an RSVP initiated\n \
    \    request for resources. RSVP initiates requests for resources based\n    \
    \ on RESV message processing. RESV messages that simply refresh state\n     do\
    \ not trigger resource requests.  Resource requests may be made\n     based on\
    \ RSVP sessions and RSVP reservation styles.  RSVP styles\n     dictate whether\
    \ the reserved resources are used by one sender or\n     shared by multiple senders.\
    \ See [1] for details of each. Each new\n     request is referred to in this document\
    \ as an RSVP reservation, or\n     simply reservation.\n   - Flow is used to refer\
    \ to the data traffic associated with a\n     particular reservation.  The specific\
    \ meaning of flow is RSVP style\n     dependent. For shared style reservations,\
    \ there is one flow per\n     session. For distinct style reservations, there\
    \ is one flow per\n     sender (per session).\n"
- title: 2. Issues Regarding the Operation of RSVP and IntServ over ATM
  contents:
  - "2. Issues Regarding the Operation of RSVP and IntServ over ATM\n   The issues\
    \ related to RSVP and IntServ over ATM fall into several\n   general classes:\n\
    \   - How to make RSVP run over ATM now and in the future\n   - When to set up\
    \ a virtual circuit (VC) for a specific Quality of\n     Service (QoS) related\
    \ to RSVP\n   - How to map the IntServ models to ATM QoS models\n   - How to know\
    \ that an ATM network is providing the QoS necessary for\n     a flow\n   - How\
    \ to handle the many-to-many connectionless features of IP\n     multicast and\
    \ RSVP in the one-to-many connection-oriented world of\n     ATM\n"
- title: 2.1 Modes/Models for RSVP and IntServ over ATM
  contents:
  - "2.1 Modes/Models for RSVP and IntServ over ATM\n   [3] Discusses several different\
    \ models for running IP over ATM\n   networks.  [17, 18, and 20] also provide\
    \ models for IP in ATM\n   environments.  Any one of these models would work as\
    \ long as the RSVP\n   control packets (IP protocol 46) and data packets can follow\
    \ the same\n   IP path through the network.  It is important that the RSVP PATH\n\
    \   messages follow the same IP path as the data such that appropriate\n   PATH\
    \ state may be installed in the routers along the path.  For an\n   ATM subnetwork,\
    \ this means the ingress and egress points must be the\n   same in both directions\
    \ for the RSVP control and data messages.  Note\n   that the RSVP protocol does\
    \ not require symmetric routing.  The PATH\n   state installed by RSVP allows\
    \ the RESV messages to \"retrace\" the\n   hops that the PATH message crossed.\
    \  Within each of the models for IP\n   over ATM, there are decisions about using\
    \ different types of data\n   distribution in ATM as well as different connection\
    \ initiation.  The\n   following sections look at some of the different ways QoS\
    \ connections\n   can be set up for RSVP.\n"
- title: 2.1.1 UNI 3.x and 4.0
  contents:
  - "2.1.1 UNI 3.x and 4.0\n   In the User Network Interface (UNI) 3.0 and 3.1 specifications\
    \ [8,9]\n   and 4.0 specification, both permanent and switched virtual circuits\n\
    \   (PVC and SVC) may be established with a specified service category\n   (CBR,\
    \ VBR, and UBR for UNI 3.x and VBR-rt and ABR for 4.0) and\n   specific traffic\
    \ descriptors in point-to-point and point-to-\n   multipoint configurations. \
    \ Additional QoS parameters are not\n   available in UNI 3.x and those that are\
    \ available are vendor-\n   specific.  Consequently, the level of QoS control\
    \ available in\n   standard UNI 3.x networks is somewhat limited.  However, using\
    \ these\n   building blocks, it is possible to use RSVP and the IntServ models.\n\
    \   ATM 4.0 with the Traffic Management (TM) 4.0 specification [21]\n   allows\
    \ much greater control of QoS.  [14] provides the details of\n   mapping the IntServ\
    \ models to UNI 3.x and 4.0 service categories and\n   traffic parameters.\n"
- title: 2.1.1.1 Permanent Virtual Circuits (PVCs)
  contents:
  - "2.1.1.1 Permanent Virtual Circuits (PVCs)\n   PVCs emulate dedicated point-to-point\
    \ lines in a network, so the\n   operation of RSVP can be identical to the operation\
    \ over any point-\n   to-point network.  The QoS of the PVC must be consistent\
    \ and\n   equivalent to the type of traffic and service model used.  The\n   devices\
    \ on either end of the PVC have to provide traffic control\n   services in order\
    \ to multiplex multiple flows over the same PVC.\n   With PVCs, there is no issue\
    \ of when or how long it takes to set up\n   VCs, since they are made in advance\
    \ but the resources of the PVC are\n   limited to what has been pre-allocated.\
    \  PVCs that are not fully\n   utilized can tie up ATM network resources that\
    \ could be used for\n   SVCs.\n   An additional issue for using PVCs is one of\
    \ network engineering.\n   Frequently, multiple PVCs are set up such that if all\
    \ the PVCs were\n   running at full capacity, the link would be over-subscribed.\
    \  This\n   frequently used \"statistical multiplexing gain\" makes providing\
    \ IIS\n   over PVCs very difficult and unreliable.  Any application of IIS over\n\
    \   PVCs has to be assured that the PVCs are able to receive all the\n   requested\
    \ QoS.\n"
- title: 2.1.1.2 Switched Virtual Circuits (SVCs)
  contents:
  - "2.1.1.2 Switched Virtual Circuits (SVCs)\n   SVCs allow paths in the ATM network\
    \ to be set up \"on demand\".  This\n   allows flexibility in the use of RSVP\
    \ over ATM along with some\n   complexity.  Parallel VCs can be set up to allow\
    \ best-effort and\n   better service class paths through the network, as shown\
    \ in Figure 1.\n   The cost and time to set up SVCs can impact their use.  For\
    \ example,\n   it may be better to initially route QoS traffic over existing VCs\n\
    \   until a SVC with the desired QoS can be set up for the flow.  Scaling\n  \
    \ issues can come into play if a single RSVP flow is used per VC, as\n   will\
    \ be discussed in Section 4.3.1.1. The number of VCs in any ATM\n   device may\
    \ also be limited so the number of RSVP flows that can be\n   supported by a device\
    \ can be strictly limited to the number of VCs\n   available, if we assume one\
    \ flow per VC.  Section 4 discusses the\n   topic of VC management for RSVP in\
    \ greater detail.\n                             Data Flow ==========>\n      \
    \               +-----+\n                     |     |      -------------->  +----+\n\
    \                     | Src |    -------------->    | R1 |\n                 \
    \    |    *|  -------------->      +----+\n                     +-----+      \
    \ QoS VCs\n                          /\\\n                          ||\n     \
    \                 VC  ||\n                      Initiator\n                  \
    \  Figure 1: Data Flow VC Initiation\n   While RSVP is receiver oriented, ATM\
    \ is sender oriented.  This might\n   seem like a problem but the sender or ingress\
    \ point receives RSVP\n   RESV messages and can determine whether a new VC has\
    \ to be set up to\n   the destination or egress point.\n"
- title: 2.1.1.3 Point to MultiPoint
  contents:
  - "2.1.1.3 Point to MultiPoint\n   In order to provide QoS for IP multicast, an\
    \ important feature of\n   RSVP, data flows must be distributed to multiple destinations\
    \ from a\n   given source.  Point-to-multipoint VCs provide such a mechanism.\
    \  It\n   is important to map the actions of IP multicasting and RSVP (e.g.\n\
    \   IGMP JOIN/LEAVE and RSVP RESV/RESV TEAR) to add party and drop party\n   functions\
    \ for ATM.  Point-to-multipoint VCs as defined in UNI 3.x and\n   UNI 4.0 have\
    \ a single service class for all destinations.  This is\n   contrary to the RSVP\
    \ \"heterogeneous receiver\" concept.  It is\n   possible to set up a different\
    \ VC to each receiver requesting a\n   different QoS, as shown in Figure 2. This\
    \ again can run into scaling\n   and resource problems when managing multiple\
    \ VCs on the same\n   interface to different destinations.\n                 \
    \                   +----+\n                           +------> | R1 |\n     \
    \                      |        +----+\n                           |\n       \
    \                    |        +----+\n              +-----+ -----+   +--> | R2\
    \ |\n              |     | ---------+    +----+  Receiver Request Types:\n   \
    \           | Src |                       ---->  QoS 1 and QoS 2\n           \
    \   |     | .........+    +----+  ....>  Best-Effort\n              +-----+ .....+\
    \   +..> | R3 |\n                           :        +----+\n                \
    \       /\\  :\n                       ||  :        +----+\n                 \
    \      ||  +......> | R4 |\n                       ||           +----+\n     \
    \                Single\n                  IP Multicast\n                    \
    \ Group\n                    Figure 2: Types of Multicast Receivers\n   RSVP sends\
    \ messages both up and down the multicast distribution tree.\n   In the case of\
    \ a large ATM cloud, this could result in a RSVP message\n   implosion at an ATM\
    \ ingress point with many receivers.\n   ATM 4.0 expands on the point-to-multipoint\
    \ VCs by adding a Leaf\n   Initiated Join (LIJ) capability. LIJ allows an ATM\
    \ end point to join\n   into an existing point-to-multipoint VC without necessarily\n\
    \   contacting the source of the VC.  This can reduce the burden on the\n   ATM\
    \ source point for setting up new branches and more closely matches\n   the receiver-based\
    \ model of RSVP and IP multicast.  However, many of\n   the same scaling issues\
    \ exist and the new branches added to a point-\n   to-multipoint VC must use the\
    \ same QoS as existing branches.\n"
- title: 2.1.1.4 Multicast Servers
  contents:
  - "2.1.1.4 Multicast Servers\n   IP-over-ATM has the concept of a multicast server\
    \ or reflector that\n   can accept cells from multiple senders and send them via\
    \ a point-to-\n   multipoint VC to a set of receivers.  This moves the VC scaling\n\
    \   issues noted previously for point-to-multipoint VCs to the multicast\n   server.\
    \  Additionally, the multicast server will need to know how to\n   interpret RSVP\
    \ packets or receive instruction from another node so it\n   will be able to provide\
    \ VCs of the appropriate QoS for the RSVP\n   flows.\n"
- title: 2.1.2 Hop-by-Hop vs. Short Cut
  contents:
  - "2.1.2 Hop-by-Hop vs. Short Cut\n   If the ATM \"cloud\" is made up a number of\
    \ logical IP subnets (LISs),\n   then it is possible to use \"short cuts\" from\
    \ a node on one LIS\n   directly to a node on another LIS, avoiding router hops\
    \ between the\n   LISs. NHRP [4], is one mechanism for determining the ATM address\
    \ of\n   the egress point on the ATM network given a destination IP address.\n\
    \   It is a topic for further study to determine if significant benefit\n   is\
    \ achieved from short cut routes vs. the extra state required.\n"
- title: 2.1.3 Future Models
  contents:
  - "2.1.3 Future Models\n   ATM is constantly evolving.  If we assume that RSVP and\
    \ IntServ\n   applications are going to be wide-spread, it makes sense to consider\n\
    \   changes to ATM that would improve the operation of RSVP and IntServ\n   over\
    \ ATM.  Similarly, the RSVP protocol and IntServ models will\n   continue to evolve\
    \ and changes that affect them should also be\n   considered.  The following are\
    \ a few ideas that have been discussed\n   that would make the integration of\
    \ the IntServ models and RSVP easier\n   or more complete.  They are presented\
    \ here to encourage continued\n   development and discussion of ideas that can\
    \ help aid in the\n   integration of RSVP, IntServ, and ATM.\n"
- title: 2.1.3.1 Heterogeneous Point-to-MultiPoint
  contents:
  - "2.1.3.1 Heterogeneous Point-to-MultiPoint\n   The IntServ models and RSVP support\
    \ the idea of \"heterogeneous\n   receivers\"; e.g., not all receivers of a particular\
    \ multicast flow\n   are required to ask for the same QoS from the network, as\
    \ shown in\n   Figure 2.\n   The most important scenario that can utilize this\
    \ feature occurs when\n   some receivers in an RSVP session ask for a specific\
    \ QoS while others\n   receive the flow with a best-effort service.  In some cases\
    \ where\n   there are multiple senders on a shared-reservation flow (e.g., an\n\
    \   audio conference), an individual receiver only needs to reserve\n   enough\
    \ resources to receive one sender at a time.  However, other\n   receivers may\
    \ elect to reserve more resources, perhaps to allow for\n   some amount of \"\
    over-speaking\" or in order to record the conference\n   (post processing during\
    \ playback can separate the senders by their\n   source addresses).\n   In order\
    \ to prevent denial-of-service attacks via reservations, the\n   service models\
    \ do not allow the service elements to simply drop non-\n   conforming packets.\
    \  For example, Controlled Load service model [7]\n   assigns non-conformant packets\
    \ to best-effort status (which may\n   result in packet drops if there is congestion).\n\
    \   Emulating these behaviors over an ATM network is problematic and\n   needs\
    \ to be studied.  If a single maximum QoS is used over a point-\n   to-multipoint\
    \ VC, resources could be wasted if cells are sent over\n   certain links where\
    \ the reassembled packets will eventually be\n   dropped.  In addition, the \"\
    maximum QoS\" may actually cause a\n   degradation in service to the best-effort\
    \ branches.\n   The term \"variegated VC\" has been coined to describe a point-to-\n\
    \   multipoint VC that allows a different QoS on each branch.  This\n   approach\
    \ seems to match the spirit of the Integrated Service and RSVP\n   models, but\
    \ some thought has to be put into the cell drop strategy\n   when traversing from\
    \ a \"bigger\" branch to a \"smaller\" one.  The\n   \"best-effort for non-conforming\
    \ packets\" behavior must also be\n   retained.  Early Packet Discard (EPD) schemes\
    \ must be used so that\n   all the cells for a given packet can be discarded at\
    \ the same time\n   rather than discarding only a few cells from several packets\
    \ making\n   all the packets useless to the receivers.\n"
- title: 2.1.3.2 Lightweight Signalling
  contents:
  - "2.1.3.2 Lightweight Signalling\n   Q.2931 signalling is very complete and carries\
    \ with it a significant\n   burden for signalling in all possible public and private\
    \ connections.\n   It might be worth investigating a lighter weight signalling\
    \ mechanism\n   for faster connection setup in private networks.\n"
- title: 2.1.3.3 QoS Renegotiation
  contents:
  - "2.1.3.3 QoS Renegotiation\n   Another change that would help RSVP over ATM is\
    \ the ability to\n   request a different QoS for an active VC.  This would eliminate\
    \ the\n   need to setup and tear down VCs as the QoS changed.  RSVP allows\n \
    \  receivers to change their reservations and senders to change their\n   traffic\
    \ descriptors dynamically.  This, along with the merging of\n   reservations,\
    \ can create a situation where the QoS needs of a VC can\n   change.  Allowing\
    \ changes to the QoS of an existing VC would allow\n   these features to work\
    \ without creating a new VC.  In the ITU-T ATM\n   specifications [24,25], some\
    \ cell rates can be renegotiated or\n   changed.  Specifically, the Peak Cell\
    \ Rate (PCR) of an existing VC\n   can be changed and, in some cases, QoS parameters\
    \ may be renegotiated\n   during the call setup phase. It is unclear if this is\
    \ sufficient for\n   the QoS renegotiation needs of the IntServ models.\n"
- title: 2.1.3.4 Group Addressing
  contents:
  - "2.1.3.4 Group Addressing\n   The model of one-to-many communications provided\
    \ by point-to-\n   multipoint VCs does not really match the many-to-many communications\n\
    \   provided by IP multicasting.  A scaleable mapping from IP multicast\n   addresses\
    \ to an ATM \"group address\" can address this problem.\n"
- title: 2.1.3.5 Label Switching
  contents:
  - "2.1.3.5 Label Switching\n   The MultiProtocol Label Switching (MPLS) working\
    \ group is discussing\n   methods for optimizing the use of ATM and other switched\
    \ networks for\n   IP by encapsulating the data with a header that is used by\
    \ the\n   interior switches to achieve faster forwarding lookups.  [22]\n   discusses\
    \ a framework for this work.  It is unclear how this work\n   will affect IntServ\
    \ and RSVP over label switched networks but there\n   may be some interactions.\n"
- title: 2.1.4 QoS Routing
  contents:
  - "2.1.4 QoS Routing\n   RSVP is explicitly not a routing protocol.  However, since\
    \ it conveys\n   QoS information, it may prove to be a valuable input to a routing\n\
    \   protocol that can make path determinations based on QoS and network\n   load\
    \ information.  In other words, instead of asking for just the IP\n   next hop\
    \ for a given destination address, it might be worthwhile for\n   RSVP to provide\
    \ information on the QoS needs of the flow if routing\n   has the ability to use\
    \ this information in order to determine a\n   route.  Other forms of QoS routing\
    \ have existed in the past such as\n   using the IP TOS and Precedence bits to\
    \ select a path through the\n   network.  Some have discussed using these same\
    \ bits to select one of\n   a set of parallel ATM VCs as a form of QoS routing.\
    \  ATM routing has\n   also considered the problem of QoS routing through the\
    \ Private\n   Network-to-Network Interface (PNNI) [26] routing protocol for routing\n\
    \   ATM VCs on a path that can support their needs.  The work in this\n   area\
    \ is just starting and there are numerous issues to consider.\n   [23], as part\
    \ of the work of the QoSR working group frame the issues\n   for QoS Routing in\
    \ the Internet.\n"
- title: 2.2 Reliance on Unicast and Multicast Routing
  contents:
  - "2.2 Reliance on Unicast and Multicast Routing\n   RSVP was designed to support\
    \ both unicast and IP multicast\n   applications.  This means that RSVP needs\
    \ to work closely with\n   multicast and unicast routing.  Unicast routing over\
    \ ATM has been\n   addressed [10] and [11].  MARS [5] provides multicast address\n\
    \   resolution for IP over ATM networks, an important part of the\n   solution\
    \ for multicast but still relies on multicast routing\n   protocols to connect\
    \ multicast senders and receivers on different\n   subnets.\n"
- title: 2.3 Aggregation of Flows
  contents:
  - "2.3 Aggregation of Flows\n   Some of the scaling issues noted in previous sections\
    \ can be\n   addressed by aggregating several RSVP flows over a single VC if the\n\
    \   destinations of the VC match for all the flows being aggregated.\n   However,\
    \ this causes considerable complexity in the management of VCs\n   and in the\
    \ scheduling of packets within each VC at the root point of\n   the VC.  Note\
    \ that the rescheduling of flows within a VC is not\n   possible in the switches\
    \ in the core of the ATM network. Virtual\n   Paths (VPs) can be used for aggregating\
    \ multiple VCs. This topic is\n   discussed in greater detail as it applies to\
    \ multicast data\n   distribution in section 4.2.3.4\n"
- title: 2.4 Mapping QoS Parameters
  contents:
  - "2.4 Mapping QoS Parameters\n   The mapping of QoS parameters from the IntServ\
    \ models to the ATM\n   service classes is an important issue in making RSVP and\
    \ IntServ work\n   over ATM.  [14] addresses these issues very completely for\
    \ the\n   Controlled Load and Guaranteed Service models.  An additional issue\n\
    \   is that while some guidelines can be developed for mapping the\n   parameters\
    \ of a given service model to the traffic descriptors of an\n   ATM traffic class,\
    \ implementation variables, policy, and cost factors\n   can make strict mapping\
    \ problematic.  So, a set of workable mappings\n   that can be applied to different\
    \ network requirements and scenarios\n   is needed as long as the mappings can\
    \ satisfy the needs of the\n   service model(s).\n"
- title: 2.5 Directly Connected ATM Hosts
  contents:
  - "2.5 Directly Connected ATM Hosts\n   It is obvious that the needs of hosts that\
    \ are directly connected to\n   ATM networks must be considered for RSVP and IntServ\
    \ over ATM.\n   Functionality for RSVP over ATM must not assume that an ATM host\
    \ has\n   all the functionality of a router, but such things as MARS and NHRP\n\
    \   clients would be worthwhile features.  A host must manage VCs just\n   like\
    \ any other ATM sender or receiver as described later in section\n   4.\n"
- title: 2.6 Accounting and Policy Issues
  contents:
  - "2.6 Accounting and Policy Issues\n   Since RSVP and IntServ create classes of\
    \ preferential service, some\n   form of administrative control and/or cost allocation\
    \ is needed to\n   control access.  There are certain types of policies specific\
    \ to ATM\n   and IP over ATM that need to be studied to determine how they\n \
    \  interoperate with the IP and IntServ policies being developed.\n   Typical\
    \ IP policies would be that only certain users are allowed to\n   make reservations.\
    \  This policy would translate well to IP over ATM\n   due to the similarity to\
    \ the mechanisms used for Call Admission\n   Control (CAC).\n   There may be a\
    \ need for policies specific to IP over ATM.  For\n   example, since signalling\
    \ costs in ATM are high relative to IP, an IP\n   over ATM specific policy might\
    \ restrict the ability to change the\n   prevailing QoS in a VC.  If VCs are relatively\
    \ scarce, there also\n   might be specific accounting costs in creating a new\
    \ VC.  The work so\n   far has been preliminary, and much work remains to be done.\
    \  The\n   policy mechanisms outlined in [12] and [13] provide the basic\n   mechanisms\
    \ for implementing policies for RSVP and IntServ over any\n   media, not just\
    \ ATM.\n"
- title: 3. Framework for IntServ and RSVP over ATM
  contents:
  - "3. Framework for IntServ and RSVP over ATM\n   Now that we have defined some\
    \ of the issues for IntServ and RSVP over\n   ATM, we can formulate a framework\
    \ for solutions.  The problem breaks\n   down to two very distinct areas; the\
    \ mapping of IntServ models to ATM\n   service categories and QoS parameters and\
    \ the operation of RSVP over\n   ATM.\n   Mapping IntServ models to ATM service\
    \ categories and QoS parameters\n   is a matter of determining which categories\
    \ can support the goals of\n   the service models and matching up the parameters\
    \ and variables\n   between the IntServ description and the ATM description(s).\
    \  Since\n   ATM has such a wide variety of service categories and parameters,\n\
    \   more than one ATM service category should be able to support each of\n   the\
    \ two IntServ models.  This will provide a good bit of flexibility\n   in configuration\
    \ and deployment.  [14] examines this topic\n   completely.\n   The operation\
    \ of RSVP over ATM requires careful management of VCs in\n   order to match the\
    \ dynamics of the RSVP protocol.  VCs need to be\n   managed for both the RSVP\
    \ QoS data and the RSVP signalling messages.\n   The remainder of this document\
    \ will discuss several approaches to\n   managing VCs for RSVP and [15] and [16]\
    \ discuss their application for\n   implementations in term of interoperability\
    \ requirement and\n   implementation guidelines.\n"
- title: 4. RSVP VC Management
  contents:
  - "4. RSVP VC Management\n   This section provides more detail on the issues related\
    \ to the\n   management of SVCs for RSVP and IntServ.\n"
- title: 4.1 VC Initiation
  contents:
  - "4.1 VC Initiation\n   As discussed in section 2.1.1.2, there is an apparent mismatch\n\
    \   between RSVP and ATM. Specifically, RSVP control is receiver oriented\n  \
    \ and ATM control is sender oriented.  This initially may seem like a\n   major\
    \ issue, but really is not.  While RSVP reservation (RESV)\n   requests are generated\
    \ at the receiver, actual allocation of\n   resources takes place at the subnet\
    \ sender. For data flows, this\n   means that subnet senders will establish all\
    \ QoS VCs and the subnet\n   receiver must be able to accept incoming QoS VCs,\
    \ as illustrated in\n   Figure 1.  These restrictions are consistent with RSVP\
    \ version 1\n   processing rules and allow senders to use different flow to VC\n\
    \   mappings and even different QoS renegotiation techniques without\n   interoperability\
    \ problems.\n   The use of the reverse path provided by point-to-point VCs by\n\
    \   receivers is for further study. There are two related issues. The\n   first\
    \ is that use of the reverse path requires the VC initiator to\n   set appropriate\
    \ reverse path QoS parameters. The second issue is that\n   reverse paths are\
    \ not available with point-to-multipoint VCs, so\n   reverse paths could only\
    \ be used to support unicast RSVP\n   reservations.\n"
- title: 4.2 Data VC Management
  contents:
  - "4.2 Data VC Management\n   Any RSVP over ATM implementation must map RSVP and\
    \ RSVP associated\n   data flows to ATM Virtual Circuits (VCs). LAN Emulation\
    \ [17],\n   Classical IP [10] and, more recently, NHRP [4] discuss mapping IP\n\
    \   traffic onto ATM SVCs, but they only cover a single QoS class, i.e.,\n   best\
    \ effort traffic. When QoS is introduced, VC mapping must be\n   revisited. For\
    \ RSVP controlled QoS flows, one issue is VCs to use for\n   QoS data flows.\n\
    \   In the Classic IP over ATM and current NHRP models, a single point-\n   to-point\
    \ VC is used for all traffic between two ATM attached hosts\n   (routers and end-stations).\
    \  It is likely that such a single VC will\n   not be adequate or optimal when\
    \ supporting data flows with multiple\n   .bp QoS types. RSVP's basic purpose\
    \ is to install support for flows\n   with multiple QoS types, so it is essential\
    \ for any RSVP over ATM\n   solution to address VC usage for QoS data flows, as\
    \ shown in Figure\n   1.\n   RSVP reservation styles must also be taken into account\
    \ in any VC\n   usage strategy.\n   This section describes issues and methods\
    \ for management of VCs\n   associated with QoS data flows. When establishing\
    \ and maintaining\n   VCs, the subnet sender will need to deal with several complicating\n\
    \   factors including multiple QoS reservations, requests for QoS\n   changes,\
    \ ATM short-cuts, and several multicast specific issues. The\n   multicast specific\
    \ issues result from the nature of ATM connections.\n   The key multicast related\
    \ issues are heterogeneity, data\n   distribution, receiver transitions, and end-point\
    \ identification.\n"
- title: 4.2.1 Reservation to VC Mapping
  contents:
  - "4.2.1 Reservation to VC Mapping\n   There are various approaches available for\
    \ mapping reservations on to\n   VCs.  A distinguishing attribute of all approaches\
    \ is how\n   reservations are combined on to individual VCs.  When mapping\n \
    \  reservations on to VCs, individual VCs can be used to support a\n   single\
    \ reservation, or reservation can be combined with others on to\n   \"aggregate\"\
    \ VCs.  In the first case, each reservation will be\n   supported by one or more\
    \ VCs.  Multicast reservation requests may\n   translate into the setup of multiple\
    \ VCs as is described in more\n   detail in section 4.2.2.  Unicast reservation\
    \ requests will always\n   translate into the setup of a single QoS VC.  In both\
    \ cases, each VC\n   will only carry data associated with a single reservation.\
    \  The\n   greatest benefit if this approach is ease of implementation, but it\n\
    \   comes at the cost of increased (VC) setup time and the consumption of\n  \
    \ greater number of VC and associated resources.\n   When multiple reservations\
    \ are combined onto a single VC, it is\n   referred to as the \"aggregation\"\
    \ model. With this model, large VCs\n   could be set up between IP routers and\
    \ hosts in an ATM network. These\n   VCs could be managed much like IP Integrated\
    \ Service (IIS) point-to-\n   point links (e.g. T-1, DS-3) are managed now.  Traffic\
    \ from multiple\n   sources over multiple RSVP sessions might be multiplexed on\
    \ the same\n   VC.  This approach has a number of advantages. First, there is\n\
    \   typically no signalling latency as VCs would be in existence when the\n  \
    \ traffic started flowing, so no time is wasted in setting up VCs.\n   Second,\
    \ the heterogeneity problem (section 4.2.2) in full over ATM\n   has been reduced\
    \ to a solved problem. Finally, the dynamic QoS\n   problem (section 4.2.7) for\
    \ ATM has also been reduced to a solved\n   problem.\n   The aggregation model\
    \ can be used with point-to-point and point-to-\n   multipoint VCs.  The problem\
    \ with the aggregation model is that the\n   choice of what QoS to use for the\
    \ VCs may be difficult, without\n   knowledge of the likely reservation types\
    \ and sizes but is made\n   easier since the VCs can be changed as needed.\n"
- title: 4.2.2 Unicast Data VC Management
  contents:
  - "4.2.2 Unicast Data VC Management\n   Unicast data VC management is much simpler\
    \ than multicast data VC\n   management but there are still some similar issues.\
    \  If one considers\n   unicast to be a devolved case of multicast, then implementing\
    \ the\n   multicast solutions will cover unicast.  However, some may want to\n\
    \   consider unicast-only implementations.  In these situations, the\n   choice\
    \ of using a single flow per VC or aggregation of flows onto a\n   single VC remains\
    \ but the problem of heterogeneity discussed in the\n   following section is removed.\n"
- title: 4.2.3 Multicast Heterogeneity
  contents:
  - "4.2.3 Multicast Heterogeneity\n   As mentioned in section 2.1.3.1 and shown in\
    \ figure 2, multicast\n   heterogeneity occurs when receivers request different\
    \ qualities of\n   service within a single session.  This means that the amount\
    \ of\n   requested resources differs on a per next hop basis. A related type\n\
    \   of heterogeneity occurs due to best-effort receivers.  In any IP\n   multicast\
    \ group, it is possible that some receivers will request QoS\n   (via RSVP) and\
    \ some receivers will not. In shared media networks,\n   like Ethernet, receivers\
    \ that have not requested resources can\n   typically be given identical service\
    \ to those that have without\n   complications.  This is not the case with ATM.\
    \ In ATM networks, any\n   additional end-points of a VC must be explicitly added.\
    \ There may be\n   costs associated with adding the best-effort receiver, and\
    \ there\n   might not be adequate resources.  An RSVP over ATM solution will need\n\
    \   to support heterogeneous receivers even though ATM does not currently\n  \
    \ provide such support directly.\n   RSVP heterogeneity is supported over ATM\
    \ in the way RSVP reservations\n   are mapped into ATM VCs.  There are four alternative\
    \ approaches this\n   mapping. There are multiple models for supporting RSVP heterogeneity\n\
    \   over ATM.  Section 4.2.3.1 examines the multiple VCs per RSVP\n   reservation\
    \ (or full heterogeneity) model where a single reservation\n   can be forwarded\
    \ onto several VCs each with a different QoS. Section\n   4.2.3.2 presents a limited\
    \ heterogeneity model where exactly one QoS\n   VC is used along with a best effort\
    \ VC.  Section 4.2.3.3 examines the\n   VC per RSVP reservation (or homogeneous)\
    \ model, where each RSVP\n   reservation is mapped to a single ATM VC.  Section\
    \ 4.2.3.4 describes\n   the aggregation model allowing aggregation of multiple\
    \ RSVP\n   reservations into a single VC.\n"
- title: 4.2.3.1 Full Heterogeneity Model
  contents:
  - "4.2.3.1 Full Heterogeneity Model\n   RSVP supports heterogeneous QoS, meaning\
    \ that different receivers of\n   the same multicast group can request a different\
    \ QoS.  But\n   importantly, some receivers might have no reservation at all and\
    \ want\n   to receive the traffic on a best effort service basis.  The IP model\n\
    \   allows receivers to join a multicast group at any time on a best\n   effort\
    \ basis, and it is important that ATM as part of the Internet\n   continue to\
    \ provide this service. We define the \"full heterogeneity\"\n   model as providing\
    \ a separate VC for each distinct QoS for a\n   multicast session including best\
    \ effort and one or more qualities of\n   service.\n   Note that while full heterogeneity\
    \ gives users exactly what they\n   request, it requires more resources of the\
    \ network than other\n   possible approaches. The exact amount of bandwidth used\
    \ for duplicate\n   traffic depends on the network topology and group membership.\n"
- title: 4.2.3.2 Limited Heterogeneity Model
  contents:
  - "4.2.3.2 Limited Heterogeneity Model\n   We define the \"limited heterogeneity\"\
    \ model as the case where the\n   receivers of a multicast session are limited\
    \ to use either best\n   effort service or a single alternate quality of service.\
    \  The\n   alternate QoS can be chosen either by higher level protocols or by\n\
    \   dynamic renegotiation of QoS as described below.\n   In order to support limited\
    \ heterogeneity, each ATM edge device\n   participating in a session would need\
    \ at most two VCs.  One VC would\n   be a point-to-multipoint best effort service\
    \ VC and would serve all\n   best effort service IP destinations for this RSVP\
    \ session.\n   The other VC would be a point to multipoint VC with QoS and would\n\
    \   serve all IP destinations for this RSVP session that have an RSVP\n   reservation\
    \ established.\n   As with full heterogeneity, a disadvantage of the limited\n\
    \   heterogeneity scheme is that each packet will need to be duplicated\n   at\
    \ the network layer and one copy sent into each of the 2 VCs.\n   Again, the exact\
    \ amount of excess traffic will depend on the network\n   topology and group membership.\
    \ If any of the existing QoS VC end-\n   points cannot upgrade to the new QoS,\
    \ then the new reservation fails\n   though the resources exist for the new receiver.\n"
- title: 4.2.3.3 Homogeneous and Modified Homogeneous Models
  contents:
  - "4.2.3.3 Homogeneous and Modified Homogeneous Models\n   We define the \"homogeneous\"\
    \ model as the case where all receivers of\n   a multicast session use a single\
    \ quality of service VC. Best-effort\n   receivers also use the single RSVP triggered\
    \ QoS VC.  The single VC\n   can be a point-to-point or point-to-multipoint as\
    \ appropriate. The\n   QoS VC is sized to provide the maximum resources requested\
    \ by all\n   RSVP next- hops.\n   This model matches the way the current RSVP\
    \ specification addresses\n   heterogeneous requests. The current processing rules\
    \ and traffic\n   control interface describe a model where the largest requested\n\
    \   reservation for a specific outgoing interface is used in resource\n   allocation,\
    \ and traffic is transmitted at the higher rate to all\n   next-hops. This approach\
    \ would be the simplest method for RSVP over\n   ATM implementations.\n   While\
    \ this approach is simple to implement, providing better than\n   best-effort\
    \ service may actually be the opposite of what the user\n   desires.  There may\
    \ be charges incurred or resources that are\n   wrongfully allocated.  There are\
    \ two specific problems. The first\n   problem is that a user making a small or\
    \ no reservation would share a\n   QoS VC resources without making (and perhaps\
    \ paying for) an RSVP\n   reservation. The second problem is that a receiver may\
    \ not receive\n   any data.  This may occur when there is insufficient resources\
    \ to add\n   a receiver.  The rejected user would not be added to the single VC\n\
    \   and it would not even receive traffic on a best effort basis.\n   Not sending\
    \ data traffic to best-effort receivers because of another\n   receiver's RSVP\
    \ request is clearly unacceptable.  The previously\n   described limited heterogeneous\
    \ model ensures that data is always\n   sent to both QoS and best-effort receivers,\
    \ but it does so by\n   requiring replication of data at the sender in all cases.\
    \  It is\n   possible to extend the homogeneous model to both ensure that data\
    \ is\n   always sent to best-effort receivers and also to avoid replication in\n\
    \   the normal case.  This extension is to add special handling for the\n   case\
    \ where a best- effort receiver cannot be added to the QoS VC.  In\n   this case,\
    \ a best effort VC can be established to any receivers that\n   could not be added\
    \ to the QoS VC. Only in this special error case\n   would senders be required\
    \ to replicate data.  We define this approach\n   as the \"modified homogeneous\"\
    \ model.\n"
- title: 4.2.3.4 Aggregation
  contents:
  - "4.2.3.4 Aggregation\n   The last scheme is the multiple RSVP reservations per\
    \ VC (or\n   aggregation) model. With this model, large VCs could be set up\n\
    \   between IP routers and hosts in an ATM network. These VCs could be\n   managed\
    \ much like IP Integrated Service (IIS) point-to-point links\n   (e.g. T-1, DS-3)\
    \ are managed now. Traffic from multiple sources over\n   multiple RSVP sessions\
    \ might be multiplexed on the same VC. This\n   approach has a number of advantages.\
    \ First, there is typically no\n   signalling latency as VCs would be in existence\
    \ when the traffic\n   started flowing, so no time is wasted in setting up VCs.\
    \   Second,\n   the heterogeneity problem in full over ATM has been reduced to\
    \ a\n   solved problem. Finally, the dynamic QoS problem for ATM has also\n  \
    \ been reduced to a solved problem.  This approach can be used with\n   point-to-point\
    \ and point-to-multipoint VCs. The problem with the\n   aggregation approach is\
    \ that the choice of what QoS to use for which\n   of the VCs is difficult, but\
    \ is made easier if the VCs can be changed\n   as needed.\n"
- title: 4.2.4 Multicast End-Point Identification
  contents:
  - "4.2.4 Multicast End-Point Identification\n   Implementations must be able to\
    \ identify ATM end-points participating\n   in an IP multicast group.  The ATM\
    \ end-points will be IP multicast\n   receivers and/or next-hops.  Both QoS and\
    \ best-effort end-points must\n   be identified.  RSVP next-hop information will\
    \ provide QoS end-\n   points, but not best-effort end-points. Another issue is\
    \ identifying\n   end-points of multicast traffic handled by non-RSVP capable\
    \ next-\n   hops. In this case a PATH message travels through a non-RSVP egress\n\
    \   router on the way to the next hop RSVP node.  When the next hop RSVP\n   node\
    \ sends a RESV message it may arrive at the source over a\n   different route\
    \ than what the data is using. The source will get the\n   RESV message, but will\
    \ not know which egress router needs the QoS.\n   For unicast sessions, there\
    \ is no problem since the ATM end-point\n   will be the IP next-hop router.  Unfortunately,\
    \ multicast routing may\n   not be able to uniquely identify the IP next-hop router.\
    \  So it is\n   possible that a multicast end-point can not be identified.\n \
    \  In the most common case, MARS will be used to identify all end-points\n   of\
    \ a multicast group.  In the router to router case, a multicast\n   routing protocol\
    \ may provide all next-hops for a particular multicast\n   group.  In either case,\
    \ RSVP over ATM implementations must obtain a\n   full list of end-points, both\
    \ QoS and non-QoS, using the appropriate\n   mechanisms.  The full list can be\
    \ compared against the RSVP\n   identified end-points to determine the list of\
    \ best-effort receivers.\n   There is no straightforward solution to uniquely\
    \ identifying end-\n   points of multicast traffic handled by non-RSVP next hops.\
    \  The\n   preferred solution is to use multicast routing protocols that support\n\
    \   unique end-point identification.  In cases where such routing\n   protocols\
    \ are unavailable, all IP routers that will be used to\n   support RSVP over ATM\
    \ should support RSVP.  To ensure proper\n   behavior, implementations should,\
    \ by default, only establish RSVP-\n   initiated VCs to RSVP capable end-points.\n"
- title: 4.2.5 Multicast Data Distribution
  contents:
  - "4.2.5 Multicast Data Distribution\n   Two models are planned for IP multicast\
    \ data distribution over ATM.\n   In one model, senders establish point-to-multipoint\
    \ VCs to all ATM\n   attached destinations, and data is then sent over these VCs.\
    \  This\n   model is often called \"multicast mesh\" or \"VC mesh\" mode\n   distribution.\
    \  In the second model, senders send data over point-to-\n   point VCs to a central\
    \ point and the central point relays the data\n   onto point-to-multipoint VCs\
    \ that have been established to all\n   receivers of the IP multicast group. \
    \ This model is often referred to\n   as \"multicast server\" mode distribution.\
    \ RSVP over ATM solutions must\n   ensure that IP multicast data is distributed\
    \ with appropriate QoS.\n   In the Classical IP context, multicast server support\
    \ is provided via\n   MARS [5].  MARS does not currently provide a way to communicate\
    \ QoS\n   requirements to a MARS multicast server.  Therefore, RSVP over ATM\n\
    \   implementations must, by default, support \"mesh-mode\" distribution\n   for\
    \ RSVP controlled multicast flows.  When using multicast servers\n   that do not\
    \ support QoS requests, a sender must set the service, not\n   global, break bit(s).\n"
- title: 4.2.6 Receiver Transitions
  contents:
  - "4.2.6 Receiver Transitions\n   When setting up a point-to-multipoint VCs for\
    \ multicast RSVP\n   sessions, there will be a time when some receivers have been\
    \ added to\n   a QoS VC and some have not.  During such transition times it is\n\
    \   possible to start sending data on the newly established VC.  The\n   issue\
    \ is when to start send data on the new VC.  If data is sent both\n   on the new\
    \ VC and the old VC, then data will be delivered with proper\n   QoS to some receivers\
    \ and with the old QoS to all receivers.  This\n   means the QoS receivers can\
    \ get duplicate data.  If data is sent just\n   on the new QoS VC, the receivers\
    \ that have not yet been added will\n   lose information.  So, the issue comes\
    \ down to whether to send to\n   both the old and new VCs, or to send to just\
    \ one of the VCs.  In one\n   case duplicate information will be received, in\
    \ the other some\n   information may not be received.\n   This issue needs to\
    \ be considered for three cases:\n   - When establishing the first QoS VC\n  \
    \ - When establishing a VC to support a QoS change\n   - When adding a new end-point\
    \ to an already established QoS VC\n   The first two cases are very similar. \
    \ It both, it is possible to\n   send data on the partially completed new VC,\
    \ and the issue of\n   duplicate versus lost information is the same. The last\
    \ case is when\n   an end-point must be added to an existing QoS VC.  In this\
    \ case the\n   end-point must be both added to the QoS VC and dropped from a best-\n\
    \   effort VC.  The issue is which to do first.  If the add is first\n   requested,\
    \ then the end-point may get duplicate information.  If the\n   drop is requested\
    \ first, then the end-point may loose information.\n   In order to ensure predictable\
    \ behavior and delivery of data to all\n   receivers, data can only be sent on\
    \ a new VCs once all parties have\n   been added.  This will ensure that all data\
    \ is only delivered once to\n   all receivers.  This approach does not quite apply\
    \ for the last case.\n   In the last case, the add operation should be completed\
    \ first, then\n   the drop operation.  This means that receivers must be prepared\
    \ to\n   receive some duplicate packets at times of QoS setup.\n"
- title: 4.2.7 Dynamic QoS
  contents:
  - "4.2.7 Dynamic QoS\n   RSVP provides dynamic quality of service (QoS) in that\
    \ the resources\n   that are requested may change at any time. There are several\
    \ common\n   reasons for a change of reservation QoS.\n   1. An existing receiver\
    \ can request a new larger (or smaller) QoS.\n   2. A sender may change its traffic\
    \ specification (TSpec), which can\n      trigger a change in the reservation\
    \ requests of the receivers.\n   3. A new sender can start sending to a multicast\
    \ group with a larger\n      traffic specification than existing senders, triggering\
    \ larger\n      reservations.\n   4. A new receiver can make a reservation that\
    \ is larger than existing\n      reservations.\n   If the limited heterogeneity\
    \ model is being used and the merge node\n   for the larger reservation is an\
    \ ATM edge device, a new larger\n   reservation must be set up across the ATM\
    \ network. Since ATM service,\n   as currently defined in UNI 3.x and UNI 4.0,\
    \ does not allow\n   renegotiating the QoS of a VC, dynamically changing the reservation\n\
    \   means creating a new VC with the new QoS, and tearing down an\n   established\
    \ VC. Tearing down a VC and setting up a new VC in ATM are\n   complex operations\
    \ that involve a non-trivial amount of processing\n   time, and may have a substantial\
    \ latency.  There are several options\n   for dealing with this mismatch in service.\
    \  A specific approach will\n   need to be a part of any RSVP over ATM solution.\n\
    \   The default method for supporting changes in RSVP reservations is to\n   attempt\
    \ to replace an existing VC with a new appropriately sized VC.\n   During setup\
    \ of the replacement VC, the old VC must be left in place\n   unmodified. The\
    \ old VC is left unmodified to minimize interruption of\n   QoS data delivery.\
    \  Once the replacement VC is established, data\n   transmission is shifted to\
    \ the new VC, and the old VC is then closed.\n   If setup of the replacement VC\
    \ fails, then the old QoS VC should\n   continue to be used. When the new reservation\
    \ is greater than the old\n   reservation, the reservation request should be answered\
    \ with an\n   error.  When the new reservation is less than the old reservation,\n\
    \   the request should be treated as if the modification was successful.\n   While\
    \ leaving the larger allocation in place is suboptimal, it\n   maximizes delivery\
    \ of service to the user. Implementations should\n   retry replacing the too large\
    \ VC after some appropriate elapsed time.\n   One additional issue is that only\
    \ one QoS change can be processed at\n   one time per reservation. If the (RSVP)\
    \ requested QoS is changed\n   while the first replacement VC is still being setup,\
    \ then the\n   replacement VC is released and the whole VC replacement process\
    \ is\n   restarted. To limit the number of changes and to avoid excessive\n  \
    \ signalling load, implementations may limit the number of changes that\n   will\
    \ be processed in a given period.  One implementation approach\n   would have\
    \ each ATM edge device configured with a time parameter T\n   (which can change\
    \ over time) that gives the minimum amount of time\n   the edge device will wait\
    \ between successive changes of the QoS of a\n   particular VC.  Thus if the QoS\
    \ of a VC is changed at time t, all\n   messages that would change the QoS of\
    \ that VC that arrive before time\n   t+T would be queued. If several messages\
    \ changing the QoS of a VC\n   arrive during the interval, redundant messages\
    \ can be discarded. At\n   time t+T, the remaining change(s) of QoS, if any, can\
    \ be executed.\n   This timer approach would apply more generally to any network\n\
    \   structure, and might be worthwhile to incorporate into RSVP.\n   The sequence\
    \ of events for a single VC would be\n   - Wait if timer is active\n   - Establish\
    \ VC with new QoS\n   - Remap data traffic to new VC\n   - Tear down old VC\n\
    \   - Activate timer\n   There is an interesting interaction between heterogeneous\n\
    \   reservations and dynamic QoS. In the case where a RESV message is\n   received\
    \ from a new next-hop and the requested resources are larger\n   than any existing\
    \ reservation, both dynamic QoS and heterogeneity\n   need to be addressed. A\
    \ key issue is whether to first add the new\n   next-hop or to change to the new\
    \ QoS. This is a fairly straight\n   forward special case. Since the older, smaller\
    \ reservation does not\n   support the new next-hop, the dynamic QoS process should\
    \ be initiated\n   first. Since the new QoS is only needed by the new next-hop,\
    \ it\n   should be the first end-point of the new VC.  This way signalling is\n\
    \   minimized when the setup to the new next-hop fails.\n"
- title: 4.2.8 Short-Cuts
  contents:
  - "4.2.8 Short-Cuts\n   Short-cuts [4] allow ATM attached routers and hosts to directly\n\
    \   establish point-to-point VCs across LIS boundaries, i.e., the VC\n   end-points\
    \ are on different IP subnets.  The ability for short-cuts\n   and RSVP to interoperate\
    \ has been raised as a general question.  An\n   area of concern is the ability\
    \ to handle asymmetric short-cuts.\n   Specifically how RSVP can handle the case\
    \ where a downstream short-\n   cut may not have a matching upstream short-cut.\
    \  In this case, PATH\n   and RESV messages following different paths.\n   Examination\
    \ of RSVP shows that the protocol already includes\n   mechanisms that will support\
    \ short-cuts.  The mechanism is the same\n   one used to support RESV messages\
    \ arriving at the wrong router and\n   the wrong interface.  The key aspect of\
    \ this mechanism is RSVP only\n   processing messages that arrive at the proper\
    \ interface and RSVP\n   forwarding of messages that arrive on the wrong interface.\
    \  The\n   proper interface is indicated in the NHOP object of the message.  So,\n\
    \   existing RSVP mechanisms will support asymmetric short-cuts. The\n   short-cut\
    \ model of VC establishment still poses several issues when\n   running with RSVP.\
    \ The major issues are dealing with established\n   best-effort short-cuts, when\
    \ to establish short-cuts, and QoS only\n   short-cuts. These issues will need\
    \ to be addressed by RSVP\n   implementations.\n   The key issue to be addressed\
    \ by any RSVP over ATM solution is when\n   to establish a short-cut for a QoS\
    \ data flow. The default behavior is\n   to simply follow best-effort traffic.\
    \ When a short-cut has been\n   established for best-effort traffic to a destination\
    \ or next-hop,\n   that same end-point should be used when setting up RSVP triggered\
    \ VCs\n   for QoS traffic to the same destination or next-hop. This will happen\n\
    \   naturally when PATH messages are forwarded over the best-effort\n   short-cut.\
    \  Note that in this approach when best-effort short-cuts\n   are never established,\
    \ RSVP triggered QoS short-cuts will also never\n   be established.  More study\
    \ is expected in this area.\n"
- title: 4.2.9 VC Teardown
  contents:
  - "4.2.9 VC Teardown\n   RSVP can identify from either explicit messages or timeouts\
    \ when a\n   data VC is no longer needed.  Therefore, data VCs set up to support\n\
    \   RSVP controlled flows should only be released at the direction of\n   RSVP.\
    \ VCs must not be timed out due to inactivity by either the VC\n   initiator or\
    \ the VC receiver.   This conflicts with VCs timing out as\n   described in RFC\
    \ 1755 [11], section 3.4 on VC Teardown.  RFC 1755\n   recommends tearing down\
    \ a VC that is inactive for a certain length of\n   time. Twenty minutes is recommended.\
    \ This timeout is typically\n   implemented at both the VC initiator and the VC\
    \ receiver.   Although,\n   section 3.1 of the update to RFC 1755 [11] states\
    \ that inactivity\n   timers must not be used at the VC receiver.\n   When this\
    \ timeout occurs for an RSVP initiated VC, a valid VC with\n   QoS will be torn\
    \ down unexpectedly.  While this behavior is\n   acceptable for best-effort traffic,\
    \ it is important that RSVP\n   controlled VCs not be torn down.  If there is\
    \ no choice about the VC\n   being torn down, the RSVP daemon must be notified,\
    \ so a reservation\n   failure message can be sent.\n   For VCs initiated at the\
    \ request of RSVP, the configurable inactivity\n   timer mentioned in [11] must\
    \ be set to \"infinite\".  Setting the\n   inactivity timer value at the VC initiator\
    \ should not be problematic\n   since the proper value can be relayed internally\
    \ at the originator.\n   Setting the inactivity timer at the VC receiver is more\
    \ difficult,\n   and would require some mechanism to signal that an incoming VC\
    \ was\n   RSVP initiated.  To avoid this complexity and to conform to [11]\n \
    \  implementations must not use an inactivity timer to clear received\n   connections.\n"
- title: 4.3 RSVP Control Management
  contents:
  - "4.3 RSVP Control Management\n   One last important issue is providing a data\
    \ path for the RSVP\n   messages themselves.  There are two main types of messages\
    \ in RSVP,\n   PATH and RESV. PATH messages are sent to unicast or multicast\n\
    \   addresses, while RESV messages are sent only to unicast addresses.\n   Other\
    \ RSVP messages are handled similar to either PATH or RESV,\n   although this\
    \ might be more complicated for RERR messages.  So ATM\n   VCs used for RSVP signalling\
    \ messages need to provide both unicast\n   and multicast functionality.  There\
    \ are several different approaches\n   for how to assign VCs to use for RSVP signalling\
    \ messages.\n   The main approaches are:\n      - use same VC as data\n      -\
    \ single VC per session\n      - single point-to-multipoint VC multiplexed among\
    \ sessions\n      - multiple point-to-point VCs multiplexed among sessions\n \
    \  There are several different issues that affect the choice of how to\n   assign\
    \ VCs for RSVP signalling. One issue is the number of additional\n   VCs needed\
    \ for RSVP signalling. Related to this issue is the degree\n   of multiplexing\
    \ on the RSVP VCs. In general more multiplexing means\n   fewer VCs. An additional\
    \ issue is the latency in dynamically setting\n   up new RSVP signalling VCs.\
    \ A final issue is complexity of\n   implementation. The remainder of this section\
    \ discusses the issues\n   and tradeoffs among these different approaches and\
    \ suggests\n   guidelines for when to use which alternative.\n"
- title: 4.3.1 Mixed data and control traffic
  contents:
  - "4.3.1 Mixed data and control traffic\n   In this scheme RSVP signalling messages\
    \ are sent on the same VCs as\n   is the data traffic. The main advantage of this\
    \ scheme is that no\n   additional VCs are needed beyond what is needed for the\
    \ data traffic.\n   An additional advantage is that there is no ATM signalling\
    \ latency\n   for PATH messages (which follow the same routing as the data\n \
    \  messages).  However there can be a major problem when data traffic on\n   a\
    \ VC is nonconforming. With nonconforming traffic, RSVP signalling\n   messages\
    \ may be dropped. While RSVP is resilient to a moderate level\n   of dropped messages,\
    \ excessive drops would lead to repeated tearing\n   down and re-establishing\
    \ of QoS VCs, a very undesirable behavior for\n   ATM. Due to these problems,\
    \ this may not be a good choice for\n   providing RSVP signalling messages, even\
    \ though the number of VCs\n   needed for this scheme is minimized. One variation\
    \ of this scheme is\n   to use the best effort data path for signalling traffic.\
    \ In this\n   scheme, there is no issue with nonconforming traffic, but there\
    \ is an\n   issue with congestion in the ATM network. RSVP provides some\n   resiliency\
    \ to message loss due to congestion, but RSVP control\n   messages should be offered\
    \ a preferred class of service. A related\n   variation of this scheme that is\
    \ hopeful but requires further study\n   is to have a packet scheduling algorithm\
    \ (before entering the ATM\n   network) that gives priority to the RSVP signalling\
    \ traffic. This can\n   be difficult to do at the IP layer.\n"
- title: 4.3.1.1 Single RSVP VC per RSVP Reservation
  contents:
  - "4.3.1.1 Single RSVP VC per RSVP Reservation\n   In this scheme, there is a parallel\
    \ RSVP signalling VC for each RSVP\n   reservation. This scheme results in twice\
    \ the number of VCs, but\n   means that RSVP signalling messages have the advantage\
    \ of a separate\n   VC.  This separate VC means that RSVP signalling messages\
    \ have their\n   own traffic contract and compliant signalling messages are not\n\
    \   subject to dropping due to other noncompliant traffic (such as can\n   happen\
    \ with the scheme in section 4.3.1). The advantage of this\n   scheme is its simplicity\
    \ - whenever a data VC is created, a separate\n   RSVP signalling VC is created.\
    \  The disadvantage of the extra VC is\n   that extra ATM signalling needs to\
    \ be done. Additionally, this scheme\n   requires twice the minimum number of\
    \ VCs and also additional latency,\n   but is quite simple.\n"
- title: 4.3.1.2 Multiplexed point-to-multipoint RSVP VCs
  contents:
  - "4.3.1.2 Multiplexed point-to-multipoint RSVP VCs\n   In this scheme, there is\
    \ a single point-to-multipoint RSVP signalling\n   VC for each unique ingress\
    \ router and unique set of egress routers.\n   This scheme allows multiplexing\
    \ of RSVP signalling traffic that\n   shares the same ingress router and the same\
    \ egress routers.  This can\n   save on the number of VCs, by multiplexing, but\
    \ there are problems\n   when the destinations of the multiplexed point-to-multipoint\
    \ VCs are\n   changing.  Several alternatives exist in these cases, that have\n\
    \   applicability in different situations. First, when the egress routers\n  \
    \ change, the ingress router can check if it already has a point-to-\n   multipoint\
    \ RSVP signalling VC for the new list of egress routers. If\n   the RSVP signalling\
    \ VC already exists, then the RSVP signalling\n   traffic can be switched to this\
    \ existing VC. If no such VC exists,\n   one approach would be to create a new\
    \ VC with the new list of egress\n   routers. Other approaches include modifying\
    \ the existing VC to add an\n   egress router or using a separate new VC for the\
    \ new egress routers.\n   When a destination drops out of a group, an alternative\
    \ would be to\n   keep sending to the existing VC even though some traffic is\
    \ wasted.\n   The number of VCs used in this scheme is a function of traffic\n\
    \   patterns across the ATM network, but is always less than the number\n   used\
    \ with the Single RSVP VC per data VC. In addition, existing best\n   effort data\
    \ VCs could be used for RSVP signalling. Reusing best\n   effort VCs saves on\
    \ the number of VCs at the cost of higher\n   probability of RSVP signalling packet\
    \ loss.  One possible place where\n   this scheme will work well is in the core\
    \ of the network where there\n   is the most opportunity to take advantage of\
    \ the savings due to\n   multiplexing.  The exact savings depend on the patterns\
    \ of traffic\n   and the topology of the ATM network.\n"
- title: 4.3.1.3 Multiplexed point-to-point RSVP VCs
  contents:
  - "4.3.1.3 Multiplexed point-to-point RSVP VCs\n   In this scheme, multiple point-to-point\
    \ RSVP signalling VCs are used\n   for a single point-to-multipoint data VC. \
    \ This scheme allows\n   multiplexing of RSVP signalling traffic but requires\
    \ the same traffic\n   to be sent on each of several VCs. This scheme is quite\
    \ flexible and\n   allows a large amount of multiplexing.\n   Since point-to-point\
    \ VCs can set up a reverse channel at the same\n   time as setting up the forward\
    \ channel, this scheme could save\n   substantially on signalling cost.  In addition,\
    \ signalling traffic\n   could share existing best effort VCs.  Sharing existing\
    \ best effort\n   VCs reduces the total number of VCs needed, but might cause\n\
    \   signalling traffic drops if there is congestion in the ATM network.\n   This\
    \ point-to-point scheme would work well in the core of the network\n   where there\
    \ is much opportunity for multiplexing. Also in the core of\n   the network, RSVP\
    \ VCs can stay permanently established either as\n   Permanent Virtual Circuits\
    \ (PVCs) or  as long lived Switched Virtual\n   Circuits (SVCs). The number of\
    \ VCs in this scheme will depend on\n   traffic patterns, but in the core of a\
    \ network would be approximately\n   n(n-1)/2 where n is the number of IP nodes\
    \ in the network.  In the\n   core of the network, this will typically be small\
    \ compared to the\n   total number of VCs.\n"
- title: 4.3.2 QoS for RSVP VCs
  contents:
  - "4.3.2 QoS for RSVP VCs\n   There is an issue of what QoS, if any, to assign to\
    \ the RSVP\n   signalling VCs. For other RSVP VC schemes, a QoS (possibly best\n\
    \   effort) will be needed.  What QoS to use partially depends on the\n   expected\
    \ level of multiplexing that is being done on the VCs, and the\n   expected reliability\
    \ of best effort VCs. Since RSVP signalling is\n   infrequent (typically every\
    \ 30 seconds), only a relatively small QoS\n   should be needed. This is important\
    \ since using a larger QoS risks\n   the VC setup being rejected for lack of resources.\
    \ Falling back to\n   best effort when a QoS call is rejected is possible, but\
    \ if the ATM\n   net is congested, there will likely be problems with RSVP packet\
    \ loss\n   on the best effort VC also. Additional experimentation is needed in\n\
    \   this area.\n"
- title: 5. Encapsulation
  contents:
  - "5. Encapsulation\n   Since RSVP is a signalling protocol used to control flows\
    \ of IP data\n   packets, encapsulation for both RSVP packets and associated IP\
    \ data\n   packets must be defined. The methods for transmitting IP packets over\n\
    \   ATM (Classical IP over ATM[10], LANE[17], and MPOA[18]) are all based\n  \
    \ on the encapsulations defined in RFC1483 [19].  RFC1483 specifies two\n   encapsulations,\
    \ LLC Encapsulation and VC-based multiplexing.  The\n   former allows multiple\
    \ protocols to be encapsulated over the same VC\n   and the latter requires different\
    \ VCs for different protocols.\n   For the purposes of RSVP over ATM, any encapsulation\
    \ can be used as\n   long as the VCs are managed in accordance to the methods\
    \ outlined in\n   Section 4.  Obviously, running multiple protocol data streams\
    \ over\n   the same VC with LLC encapsulation can cause the same problems as\n\
    \   running multiple flows over the same VC.\n   While none of the transmission\
    \ methods directly address the issue of\n   QoS, RFC1755 [11] does suggest some\
    \ common values for VC setup for\n   best-effort traffic.  [14] discusses the\
    \ relationship of the RFC1755\n   setup parameters and those needed to support\
    \ IntServ flows in greater\n   detail.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The same considerations stated in [1] and [11]\
    \ apply to this\n   document.  There are no additional security issues raised\
    \ in this\n   document.\n"
- title: 7. References
  contents:
  - "7. References\n   [1] Braden, R., Zhang, L., Berson, S., Herzog, S., and S. Jamin,\n\
    \       \"Resource ReSerVation Protocol (RSVP) -- Version 1 Functional\n     \
    \  Specification\", RFC 2209, September 1997.\n   [2] Borden, M., Crawley, E.,\
    \ Davie, B., and S. Batsell, \"Integration\n       of Realtime Services in an\
    \ IP-ATM Network Architecture\", RFC\n       1821, August 1995.\n   [3] Cole,\
    \ R., Shur, D., and C. Villamizar, \"IP over ATM: A Framework\n       Document\"\
    , RFC 1932, April 1996.\n   [4] Luciani, J., Katz, D., Piscitello, D., Cole, B.,\
    \ and N.\n       Doraswamy, \"NBMA Next Hop Resolution Protocol (NHRP)\", RFC\
    \ 2332,\n       April 1998.\n   [5] Armitage, G., \"Support for Multicast over\
    \ UNI 3.0/3.1 based ATM\n       Networks\", RFC 2022, November 1996.\n   [6] Shenker,\
    \ S., and C. Partridge, \"Specification of Guaranteed\n       Quality of Service\"\
    , RFC 2212, September 1997.\n   [7] Wroclawski, J., \"Specification of the Controlled-Load\
    \ Network\n       Element Service\", RFC 2211, September 1997.\n   [8] ATM Forum.\
    \ ATM User-Network Interface Specification Version 3.0.\n       Prentice Hall,\
    \ September 1993.\n   [9] ATM Forum. ATM User Network Interface (UNI) Specification\
    \ Version\n       3.1. Prentice Hall, June 1995.\n   [10] Laubach, M., \"Classical\
    \ IP and ARP over ATM\", RFC 2225, April\n        1998.\n   [11] Perez, M., Mankin,\
    \ A., Hoffman, E., Grossman, G., and A. Malis,\n        \"ATM Signalling Support\
    \ for IP over ATM\", RFC 1755, February\n        1995.\n   [12] Herzog, S., \"\
    RSVP Extensions for Policy Control\", Work in\n        Progress.\n   [13] Herzog,\
    \ S., \"Local Policy Modules (LPM): Policy Control for\n        RSVP\", Work in\
    \ Progress.\n   [14] Borden, M., and M. Garrett, \"Interoperation of Controlled-Load\n\
    \        and Guaranteed Service with ATM\", RFC 2381, August 1998.\n   [15] Berger,\
    \ L., \"RSVP over ATM Implementation Requirements\", RFC\n        2380, August\
    \ 1998.\n   [16] Berger, L., \"RSVP over ATM Implementation Guidelines\", RFC\
    \ 2379,\n        August 1998.\n   [17] ATM Forum Technical Committee. LAN Emulation\
    \ over ATM, Version\n        1.0 Specification, af-lane-0021.000, January 1995.\n\
    \   [18] ATM Forum Technical Committee. Baseline Text for MPOA, af-95-\n     \
    \   0824r9, September 1996.\n   [19] Heinanen, J., \"Multiprotocol Encapsulation\
    \ over ATM Adaptation\n        Layer 5\", RFC 1483, July 1993.\n   [20] ATM Forum\
    \ Technical Committee. LAN Emulation over ATM Version 2\n        - LUNI Specification,\
    \ December 1996.\n   [21] ATM Forum Technical Committee. Traffic Management Specification\n\
    \        v4.0, af-tm-0056.000, April 1996.\n   [22] Callon, R., et al., \"A Framework\
    \ for Multiprotocol Label\n        Switching, Work in Progress.\n   [23] Rajagopalan,\
    \ B., Nair, R., Sandick, H., and E. Crawley, \"A\n        Framework for QoS-based\
    \ Routing in the Internet\", RFC 2386,\n        August 1998.\n   [24] ITU-T. Digital\
    \ Subscriber Signaling System No. 2-Connection\n        modification: Peak cell\
    \ rate modification by the connection\n        owner, ITU-T Recommendation Q.2963.1,\
    \ July 1996.\n   [25] ITU-T. Digital Subscriber Signaling System No. 2-Connection\n\
    \        characteristics negotiation during call/connection establishment\n  \
    \      phase, ITU-T Recommendation Q.2962, July 1996.\n   [26] ATM Forum Technical\
    \ Committee. Private Network-Network Interface\n        Specification v1.0 (PNNI),\
    \ March 1996.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Eric S. Crawley\n   Argon Networks\n   25 Porter Road\n\
    \   Littleton, Ma 01460\n   Phone: +1 978 486-0665\n   EMail: esc@argon.com\n\
    \   Lou Berger\n   FORE Systems\n   6905 Rockledge Drive\n   Suite 800\n   Bethesda,\
    \ MD 20817\n   Phone: +1 301 571-2534\n   EMail: lberger@fore.com\n   Steven Berson\n\
    \   USC Information Sciences Institute\n   4676 Admiralty Way\n   Marina del Rey,\
    \ CA 90292\n   Phone: +1 310 822-1511\n   EMail: berson@isi.edu\n   Fred Baker\n\
    \   Cisco Systems\n   519 Lado Drive\n   Santa Barbara, California 93111\n   Phone:\
    \ +1 805 681-0115\n   EMail: fred@cisco.com\n   Marty Borden\n   Bay Networks\n\
    \   125 Nagog Park\n   Acton, MA 01720\n   Phone: +1 978 266-1011\n   EMail: mborden@baynetworks.com\n\
    \   John J. Krawczyk\n   ArrowPoint Communications\n   235 Littleton Road\n  \
    \ Westford, Massachusetts 01886\n   Phone: +1 978 692-5875\n   EMail: jj@arrowpoint.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
