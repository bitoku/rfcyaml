- title: __initial_text__
  contents:
  - "                   Definitions of Managed Objects for\n               IEEE 802.3\
    \ Medium Attachment Units (MAUs)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n\
    \   for use with network management protocols in the Internet community.\n   This\
    \ memo obsoletes RFC 2239, \"Definitions of Managed Objects for\n   IEEE 802.3\
    \ Medium Attachment Units (MAUs) using SMIv2\".  This memo\n   extends that specification\
    \ by including management information useful\n   for the management of 1000 Mb/s\
    \ MAUs.\n   Ethernet technology, as defined by the 802.3 Working Group of the\n\
    \   IEEE, continues to evolve, with scalable increases in speed, new\n   types\
    \ of cabling and interfaces, and new features.  This evolution\n   may require\
    \ changes in the managed objects in order to reflect this\n   new functionality.\
    \  This document, as with other documents issued by\n   this working group, reflects\
    \ a certain stage in the evolution of\n   Ethernet technology.  In the future,\
    \ this document might be revised,\n   or new documents might be issued by the\
    \ Ethernet Interfaces and Hub\n   MIB Working Group, in order to reflect the evolution\
    \ of Ethernet\n   technology.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction ...............................................\
    \    2\n   2.  The SNMP Management Framework ..............................  \
    \  3\n   3.  Overview ...................................................    4\n\
    \   3.1.  Relationship to RFC 2239 .................................    4\n  \
    \ 3.2.  Relationship to RFC 1515 .................................    4\n   3.3.\
    \  MAU Management ...........................................    4\n   3.4.  Relationship\
    \ to Other MIBs ...............................    5\n   3.4.1.  Relationship\
    \ to the Interfaces MIB .....................    5\n   3.4.2.  Relationship to\
    \ the 802.3 Repeater MIB .................    5\n   3.5.  Management of Internal\
    \ MAUs ..............................    5\n   4.  Definitions ................................................\
    \    6\n   5.  Intellectual Property ......................................  \
    \ 49\n   6.  Acknowledgements ...........................................   49\n\
    \   7.  References .................................................   50\n  \
    \ 8.  Security Considerations ....................................   52\n   9.\
    \  Authors' Addresses .........................................   53\n   10. Appendix:\
    \ Change Log .......................................   55\n   11.  Full Copyright\
    \ Statement ..................................   57\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing IEEE 802.3 Medium\n   Attachment\
    \ Units (MAUs).\n   This memo also includes a MIB module.  This MIB module extends\
    \ the\n   list of managed objects specified in the earlier version of this MIB:\n\
    \   RFC 2239 [21].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [20].\n"
- title: 2.  The SNMP Management Framework
  contents:
  - "2.  The SNMP Management Framework\n   The SNMP Management Framework presently\
    \ consists of five major\n   components:\n    o   An overall architecture, described\
    \ in RFC 2571 [1].\n    o   Mechanisms for describing and naming objects and events\
    \ for the\n        purpose of management. The first version of this Structure\
    \ of\n        Management Information (SMI) is called SMIv1 and described in\n\
    \        STD 16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The\n  \
    \      second version, called SMIv2, is described in STD 58, RFC 2578\n      \
    \  [5], STD 58, RFC 2579 [6] and STD 58, RFC 2580 [7].\n    o   Message protocols\
    \ for transferring management information. The\n        first version of the SNMP\
    \ message protocol is called SNMPv1 and\n        described in STD 15, RFC 1157\
    \ [8]. A second version of the SNMP\n        message protocol, which is not an\
    \ Internet standards track\n        protocol, is called SNMPv2c and described\
    \ in RFC 1901 [9] and RFC\n        1906 [10].  The third version of the message\
    \ protocol is called\n        SNMPv3 and described in RFC 1906 [10], RFC 2572\
    \ [11] and RFC 2574\n        [12].\n    o   Protocol operations for accessing\
    \ management information. The\n        first set of protocol operations and associated\
    \ PDU formats is\n        described in STD 15, RFC 1157 [8]. A second set of protocol\n\
    \        operations and associated PDU formats is described in RFC 1905\n    \
    \    [13].\n    o   A set of fundamental applications described in RFC 2573 [14]\
    \ and\n        the view-based access control mechanism described in RFC 2575\n\
    \        [15].\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the mechanisms defined in the SMI.\n   This memo specifies a\
    \ MIB module that is compliant to the SMIv2. A\n   MIB conforming to the SMIv1\
    \ can be produced through the appropriate\n   translations. The resulting translated\
    \ MIB must be semantically\n   equivalent, except where objects or events are\
    \ omitted because no\n   translation is possible (use of Counter64). Some machine\
    \ readable\n   information in SMIv2 will be converted into textual descriptions\
    \ in\n   SMIv1 during the translation process. However, this loss of machine\n\
    \   readable information is not considered to change the semantics of the\n  \
    \ MIB.\n"
- title: 3.  Overview
  contents:
  - '3.  Overview

    '
- title: 3.1.  Relationship to RFC 2239
  contents:
  - "3.1.  Relationship to RFC 2239\n   This MIB is intended to be a superset of that\
    \ defined by RFC 2239\n   [21], which will go to historic status.  This MIB includes\
    \ all of the\n   objects contained in that MIB, plus several new ones which provide\n\
    \   additional capabilities.  Implementors are encouraged to support all\n   applicable\
    \ conformance groups in order to make the best use of the\n   new functionality\
    \ provided by this MIB.  The new objects provide\n   management support for:\n\
    \   o    management of 1000 Mb/s devices\n   o    management of PAUSE negotiation\n\
    \   o    management of remote fault status\n"
- title: 3.2.  Relationship to RFC 1515
  contents:
  - "3.2.  Relationship to RFC 1515\n   RFC 2239 was a replacement for RFC 1515 [22],\
    \ which is now historic.\n   RFC 2239 defined a superset of RFC 1515 which contained\
    \ all of the\n   objects defined in RFC 1515, plus several new ones which provided\n\
    \   additional capabilities.  The new objects in RFC 2239 provided\n   management\
    \ support for:\n   o    management of 100 Mb/s devices\n   o    auto-negotiation\
    \ on interface MAUs\n   o    jack management\n"
- title: 3.3.  MAU Management
  contents:
  - "3.3.  MAU Management\n   Instances of these object types represent attributes\
    \ of an IEEE 802.3\n   MAU.  Several types of MAUs are defined in the IEEE 802.3\
    \ CSMA/CD\n   standard [16].  These MAUs may be connected to IEEE 802.3 repeaters\n\
    \   or to 802.3 (Ethernet-like) interfaces. For convenience this document\n  \
    \ refers to these devices as \"repeater MAUs\" and \"interface MAUs.\"\n   The\
    \ definitions presented here are based on Section 30.5, \"Layer\n   Management\
    \ for 10, 100 & 1000 Mb/s Medium Attachment Units (MAUs)\",\n   and Annex 30A,\
    \ \"GDMO Specifications for 802.3 managed object classes\"\n   of IEEE Std. 802.3,\
    \ 1998 edition [16].  That specification includes\n   definitions for 10Mb/s,\
    \ 100Mb/s and 1000Mb/s devices.  This\n   specification is intended to serve the\
    \ same purpose: to provide for\n   management of all types of Ethernet/802.3 MAUs.\n"
- title: 3.4.  Relationship to Other MIBs
  contents:
  - "3.4.  Relationship to Other MIBs\n   It is assumed that an agent implementing\
    \ this MIB will also implement\n   (at least) the 'system' group defined in MIB-II\
    \ [18].  The following\n   sections identify other MIBs that such an agent should\
    \ implement.\n"
- title: 3.4.1.  Relationship to the Interfaces MIB.
  contents:
  - "3.4.1.  Relationship to the Interfaces MIB.\n   The sections of this document\
    \ that define interface MAU-related\n   objects specify an extension to the Interfaces\
    \ MIB [19].  An agent\n   implementing these interface-MAU related objects MUST\
    \ also implement\n   the relevant groups of Interface MIB.  The value of the object\n\
    \   ifMauIfIndex is the same as the value of 'ifIndex' used to\n   instantiate\
    \ the interface to which the given MAU is connected.\n   It is expected that an\
    \ agent implementing the interface-MAU related\n   objects in this MIB will also\
    \ implement the Ethernet-like Interfaces\n   MIB, [23].\n   (Note that repeater\
    \ ports are not represented as interfaces in the\n   Interface MIB.)\n"
- title: 3.4.2.  Relationship to the 802.3 Repeater MIB
  contents:
  - "3.4.2.  Relationship to the 802.3 Repeater MIB\n   The section of this document\
    \ that defines repeater MAU-related\n   objects specifies an extension to the\
    \ 802.3 Repeater MIB defined in\n   [17].  An agent implementing these repeater-MAU\
    \ related objects MUST\n   also implement the 802.3 Repeater MIB.\n   The values\
    \ of 'rpMauGroupIndex' and 'rpMauPortIndex' used to\n   instantiate a repeater\
    \ MAU variable SHALL be the same as the values\n   of 'rptrPortGroupIndex' and\
    \ 'rptrPortIndex' used to instantiate the\n   port to which the given MAU is connected.\n"
- title: 3.5.  Management of Internal MAUs
  contents:
  - "3.5.  Management of Internal MAUs\n   In some situations, a MAU can be \"internal\"\
    \ -- i.e., its\n   functionality is implemented entirely within a device.  For\
    \ example,\n   a managed repeater may contain an internal repeater-MAU and/or\
    \ an\n   internal interface-MAU through which management communications\n   originating\
    \ on one of the repeater's external ports pass in order to\n   reach the management\
    \ agent associated with the repeater.  Such\n   internal MAUs may or may not be\
    \ managed.  If they are managed,\n   objects describing their attributes should\
    \ appear in the appropriate\n   MIB subtree:  dot3RpMauBasicGroup for internal\
    \ repeater-MAUs and\n   dot3IfMauBasicGroup for internal interface-MAUs.\n"
- title: 4.  Definitions
  contents:
  - "4.  Definitions\n   MAU-MIB DEFINITIONS ::= BEGIN\n       IMPORTS\n         \
    \  Counter32, Integer32,\n           OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE,\n\
    \           OBJECT-IDENTITY, mib-2\n               FROM SNMPv2-SMI\n         \
    \  TruthValue, TEXTUAL-CONVENTION\n               FROM SNMPv2-TC\n           OBJECT-GROUP,\
    \ MODULE-COMPLIANCE, NOTIFICATION-GROUP\n               FROM SNMPv2-CONF;\n  \
    \     mauMod MODULE-IDENTITY\n           LAST-UPDATED \"9908240400Z\"  -- August\
    \ 24, 1999\n           ORGANIZATION \"IETF Ethernet Interfaces and Hub MIB\n \
    \                       Working Group\"\n           CONTACT-INFO\n           \
    \    \"WG E-mail: hubmib@hprnd.rose.hp.com\n             To subscribe: hubmib-request@hprnd.rose.hp.com\n\
    \                    Chair: Dan Romascanu\n                   Postal: Lucent Technologies\n\
    \                           Atidim Technology Park, Bldg. 3\n                \
    \           Tel Aviv 61131\n                           Israel\n              \
    \        Tel: +972 3 645 8414, 6458458\n                      Fax: +972 3 648\
    \ 7146\n                   E-mail: dromasca@lucent.com\n                  Editors:\
    \ Andrew Smith\n                   Postal: Extreme Networks, Inc.\n          \
    \                 10460 Bandley Drive\n                           Cupertino, CA\
    \ 95014\n                           USA\n                      Tel: +1 408 579-2821\n\
    \                   E-mail: andrew@extremenetworks.com\n                     \
    \      John Flick\n                   Postal: Hewlett-Packard Company\n      \
    \                     8000 Foothills Blvd. M/S 5557\n                        \
    \  Roseville, CA 95747-5557\n                          USA\n                 \
    \    Tel: +1 916 785 4018\n                     Fax: +1 916 785 1199\n       \
    \           E-mail: johnf@rose.hp.com\n                          Kathryn de Graaf\n\
    \                  Postal: Argon Networks\n                          25 Porter\
    \ Road\n                          Littleton, MA  01460\n                     \
    \     USA\n                     Tel: +1 978 486 0665 x163\n                  \
    \   Fax: +1 978 486 9379\n                  E-mail: kdegraaf@argon.com\"\n   \
    \       DESCRIPTION \"Management information for 802.3 MAUs.\n               \
    \       The following reference is used throughout\n                      this\
    \ MIB module:\n                      [IEEE 802.3 Std] refers to\n            \
    \             IEEE Std 802.3, 1998 Edition: 'Information\n                   \
    \      technology - Telecommunications and\n                         information\
    \ exchange between systems -\n                         Local and metropolitan\
    \ area networks -\n                         Specific requirements - Part 3: Carrier\n\
    \                         sense multiple access with collision\n             \
    \            detection (CSMA/CD) access method and\n                         physical\
    \ layer specifications',\n                         September 1998.\n         \
    \             Of particular interest is Clause 30, '10Mb/s,\n                \
    \      100Mb/s and 1000Mb/s Management'.\"\n          REVISION    \"9908240400Z\"\
    \ -- August 24, 1999\n          DESCRIPTION \"This version published as RFC 2668.\
    \ Updated\n                       to include support for 1000 Mb/sec\n       \
    \                MAUs and flow control negotiation.\"\n          REVISION    \"\
    9710310000Z\" -- October 31, 1997\n          DESCRIPTION \"This version published\
    \ as RFC 2239.\"\n          REVISION    \"9309300000Z\" -- September 30, 1993\n\
    \          DESCRIPTION \"Initial version, published as RFC 1515.\"\n         \
    \ ::= { snmpDot3MauMgt 6 }\n      snmpDot3MauMgt OBJECT IDENTIFIER ::= { mib-2\
    \ 26 }\n      -- textual conventions\n      JackType ::= TEXTUAL-CONVENTION\n\
    \          STATUS      current\n          DESCRIPTION \"Common enumeration values\
    \ for repeater\n                      and interface MAU jack types.\"\n      \
    \    SYNTAX      INTEGER {\n                          other(1),\n            \
    \              rj45(2),\n                          rj45S(3), -- rj45 shielded\n\
    \                          db9(4),\n                          bnc(5),\n      \
    \                    fAUI(6),  -- female aui\n                          mAUI(7),\
    \  -- male aui\n                          fiberSC(8),\n                      \
    \    fiberMIC(9),\n                          fiberST(10),\n                  \
    \        telco(11),\n                          mtrj(12),  -- fiber MT-RJ\n   \
    \                       hssdc(13)  -- fiber channel style-2\n                \
    \      }\n      dot3RpMauBasicGroup\n          OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 1 }\n      dot3IfMauBasicGroup\n          OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 2 }\n      dot3BroadMauBasicGroup\n          OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 3 }\n      dot3IfMauAutoNegGroup\n          OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 5 }\n      -- object identities for MAU types\n      --  (see rpMauType and\
    \ ifMauType for usage)\n      dot3MauType\n          OBJECT IDENTIFIER ::= { snmpDot3MauMgt\
    \ 4 }\n      dot3MauTypeAUI OBJECT-IDENTITY\n          STATUS      current\n \
    \         DESCRIPTION \"no internal MAU, view from AUI\"\n          ::= { dot3MauType\
    \ 1 }\n      dot3MauType10Base5 OBJECT-IDENTITY\n          STATUS      current\n\
    \          DESCRIPTION \"thick coax MAU (per 802.3 section 8)\"\n          ::=\
    \ { dot3MauType 2 }\n      dot3MauTypeFoirl OBJECT-IDENTITY\n          STATUS\
    \      current\n          DESCRIPTION \"FOIRL MAU (per 802.3 section 9.9)\"\n\
    \          ::= { dot3MauType 3 }\n      dot3MauType10Base2 OBJECT-IDENTITY\n \
    \         STATUS      current\n          DESCRIPTION \"thin coax MAU (per 802.3\
    \ section 10)\"\n          ::= { dot3MauType 4 }\n      dot3MauType10BaseT OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"UTP MAU (per 802.3 section\
    \ 14).\n                      Note that it is strongly recommended that\n    \
    \                  agents return either dot3MauType10BaseTHD or\n            \
    \          dot3MauType10BaseTFD if the duplex mode is\n                      known.\
    \  However, management applications should\n                      be prepared\
    \ to receive this MAU type value from\n                      older agent implementations.\"\
    \n          ::= { dot3MauType 5 }\n      dot3MauType10BaseFP OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"passive fiber MAU (per\
    \ 802.3 section 16)\"\n          ::= { dot3MauType 6 }\n      dot3MauType10BaseFB\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"sync\
    \ fiber MAU (per 802.3 section 17)\"\n          ::= { dot3MauType 7 }\n      dot3MauType10BaseFL\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"async\
    \ fiber MAU (per 802.3 section 18)\n                      Note that it is strongly\
    \ recommended that\n                      agents return either dot3MauType10BaseFLHD\
    \ or\n                      dot3MauType10BaseFLFD if the duplex mode is\n    \
    \                  known.  However, management applications should\n         \
    \             be prepared to receive this MAU type value from\n              \
    \        older agent implementations.\"\n          ::= { dot3MauType 8 }\n   \
    \   dot3MauType10Broad36 OBJECT-IDENTITY\n          STATUS      current\n    \
    \      DESCRIPTION \"broadband DTE MAU (per 802.3 section 11).\n             \
    \         Note that 10BROAD36 MAUs can be attached to\n                      interfaces\
    \ but not to repeaters.\"\n          ::= { dot3MauType 9 }\n      ------ new since\
    \ RFC 1515:\n      dot3MauType10BaseTHD OBJECT-IDENTITY\n          STATUS    \
    \  current\n          DESCRIPTION \"UTP MAU (per 802.3 section 14), half duplex\n\
    \                      mode\"\n          ::= { dot3MauType 10 }\n      dot3MauType10BaseTFD\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"UTP\
    \ MAU (per 802.3 section 14), full duplex\n                      mode\"\n    \
    \      ::= { dot3MauType 11 }\n      dot3MauType10BaseFLHD OBJECT-IDENTITY\n \
    \         STATUS      current\n          DESCRIPTION \"async fiber MAU (per 802.3\
    \ section 18), half\n                      duplex mode\"\n          ::= { dot3MauType\
    \ 12 }\n      dot3MauType10BaseFLFD OBJECT-IDENTITY\n          STATUS      current\n\
    \          DESCRIPTION \"async fiber MAU (per 802.3 section 18), full\n      \
    \                duplex mode\"\n          ::= { dot3MauType 13 }\n      dot3MauType100BaseT4\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"4 pair\
    \ categ. 3 UTP (per 802.3 section 23)\"\n          ::= { dot3MauType 14 }\n  \
    \    dot3MauType100BaseTXHD OBJECT-IDENTITY\n          STATUS      current\n \
    \         DESCRIPTION \"2 pair categ. 5 UTP (per 802.3 section 25),\n        \
    \              half duplex mode\"\n          ::= { dot3MauType 15 }\n      dot3MauType100BaseTXFD\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"2 pair\
    \ categ. 5 UTP (per 802.3 section 25),\n                      full duplex mode\"\
    \n          ::= { dot3MauType 16 }\n      dot3MauType100BaseFXHD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"X fiber over PMT (per\
    \ 802.3 section 26), half\n                      duplex mode\"\n          ::=\
    \ { dot3MauType 17 }\n      dot3MauType100BaseFXFD OBJECT-IDENTITY\n         \
    \ STATUS      current\n          DESCRIPTION \"X fiber over PMT (per 802.3 section\
    \ 26), full\n                      duplex mode\"\n          ::= { dot3MauType\
    \ 18 }\n      dot3MauType100BaseT2HD OBJECT-IDENTITY\n          STATUS      current\n\
    \          DESCRIPTION \"2 pair categ. 3 UTP (per 802.3 section 32),\n       \
    \               half duplex mode\"\n          ::= { dot3MauType 19 }\n      dot3MauType100BaseT2FD\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"2 pair\
    \ categ. 3 UTP (per 802.3 section 32),\n                      full duplex mode\"\
    \n          ::= { dot3MauType 20 }\n      ------ new since RFC 2239:\n      dot3MauType1000BaseXHD\
    \ OBJECT-IDENTITY\n          STATUS      current\n          DESCRIPTION \"PCS/PMA\
    \ (per 802.3 section 36), unknown PMD,\n                      half duplex mode\"\
    \n          ::= { dot3MauType 21 }\n      dot3MauType1000BaseXFD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"PCS/PMA (per 802.3 section\
    \ 36), unknown PMD,\n                      full duplex mode\"\n          ::= {\
    \ dot3MauType 22 }\n      dot3MauType1000BaseLXHD OBJECT-IDENTITY\n          STATUS\
    \      current\n          DESCRIPTION \"Fiber over long-wavelength laser (per\
    \ 802.3\n                      section 38), half duplex mode\"\n          ::=\
    \ { dot3MauType 23 }\n      dot3MauType1000BaseLXFD OBJECT-IDENTITY\n        \
    \  STATUS      current\n          DESCRIPTION \"Fiber over long-wavelength laser\
    \ (per 802.3\n                      section 38), full duplex mode\"\n        \
    \  ::= { dot3MauType 24 }\n      dot3MauType1000BaseSXHD OBJECT-IDENTITY\n   \
    \       STATUS      current\n          DESCRIPTION \"Fiber over short-wavelength\
    \ laser (per 802.3\n                      section 38), half duplex mode\"\n  \
    \        ::= { dot3MauType 25 }\n      dot3MauType1000BaseSXFD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"Fiber over short-wavelength\
    \ laser (per 802.3\n                      section 38), full duplex mode\"\n  \
    \        ::= { dot3MauType 26 }\n      dot3MauType1000BaseCXHD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"Copper over 150-Ohm balanced\
    \ cable (per 802.3\n                      section 39), half duplex mode\"\n  \
    \        ::= { dot3MauType 27 }\n      dot3MauType1000BaseCXFD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"Copper over 150-Ohm balanced\
    \ cable (per 802.3\n                      section 39), full duplex mode\"\n  \
    \        ::= { dot3MauType 28 }\n      dot3MauType1000BaseTHD OBJECT-IDENTITY\n\
    \          STATUS      current\n          DESCRIPTION \"Four-pair Category 5 UTP\
    \ (per 802.3 section\n                      40), half duplex mode\"\n        \
    \  ::= { dot3MauType 29 }\n      dot3MauType1000BaseTFD OBJECT-IDENTITY\n    \
    \      STATUS      current\n          DESCRIPTION \"Four-pair Category 5 UTP (per\
    \ 802.3 section\n                      40), full duplex mode\"\n          ::=\
    \ { dot3MauType 30 }\n      --\n      -- The Basic Repeater MAU Table\n      --\n\
    \      rpMauTable OBJECT-TYPE\n          SYNTAX      SEQUENCE OF RpMauEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS      current\n       \
    \   DESCRIPTION \"Table of descriptive and status information\n              \
    \        about the MAU(s) attached to the ports of a\n                      repeater.\"\
    \n          ::= { dot3RpMauBasicGroup 1 }\n      rpMauEntry OBJECT-TYPE\n    \
    \      SYNTAX      RpMauEntry\n          MAX-ACCESS  not-accessible\n        \
    \  STATUS      current\n          DESCRIPTION \"An entry in the table, containing\
    \ information\n                      about a single MAU.\"\n          INDEX  \
    \     { rpMauGroupIndex,\n                        rpMauPortIndex,\n          \
    \              rpMauIndex\n                      }\n          ::= { rpMauTable\
    \ 1 }\n      RpMauEntry ::=\n          SEQUENCE {\n              rpMauGroupIndex\
    \                     Integer32,\n              rpMauPortIndex               \
    \       Integer32,\n              rpMauIndex                          Integer32,\n\
    \              rpMauType                           OBJECT IDENTIFIER,\n      \
    \        rpMauStatus                         INTEGER,\n              rpMauMediaAvailable\
    \                 INTEGER,\n              rpMauMediaAvailableStateExits      \
    \ Counter32,\n              rpMauJabberState                    INTEGER,\n   \
    \           rpMauJabberingStateEnters           Counter32,\n              rpMauFalseCarriers\
    \                  Counter32\n      }\n      rpMauGroupIndex OBJECT-TYPE\n   \
    \       SYNTAX      Integer32 (1..2147483647)\n          MAX-ACCESS  read-only\n\
    \          STATUS      current\n          DESCRIPTION \"This variable uniquely\
    \ identifies the group\n                      containing the port to which the\
    \ MAU described\n                      by this entry is connected.\n         \
    \             Note:  In practice, a group will generally be\n                \
    \      a field-replaceable unit (i.e., module, card,\n                      or\
    \ board) that can fit in the physical system\n                      enclosure,\
    \ and the group number will correspond\n                      to a number marked\
    \ on the physical enclosure.\n                      The group denoted by a particular\
    \ value of this\n                      object is the same as the group denoted\
    \ by the\n                      same value of rptrGroupIndex.\"\n          REFERENCE\
    \   \"Reference RFC 2108, rptrGroupIndex.\"\n          ::= { rpMauEntry 1 }\n\
    \      rpMauPortIndex OBJECT-TYPE\n          SYNTAX      Integer32 (1..2147483647)\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"This variable uniquely identifies the repeater\n                      port\
    \ within group rpMauGroupIndex to which the\n                      MAU described\
    \ by this entry is connected.\"\n          REFERENCE   \"Reference RFC 2108, rptrPortIndex.\"\
    \n          ::= { rpMauEntry 2 }\n      rpMauIndex OBJECT-TYPE\n          SYNTAX\
    \      Integer32 (1..2147483647)\n          MAX-ACCESS  read-only\n          STATUS\
    \      current\n          DESCRIPTION \"This variable uniquely identifies the\
    \ MAU\n                      described by this entry from among other\n      \
    \                MAUs connected to the same port\n                      (rpMauPortIndex).\"\
    \n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID.\"\n          ::=\
    \ { rpMauEntry 3 }\n      rpMauType OBJECT-TYPE\n          SYNTAX      OBJECT\
    \ IDENTIFIER\n          MAX-ACCESS  read-only\n          STATUS      current\n\
    \          DESCRIPTION \"This object identifies the MAU type.  An\n          \
    \            initial set of MAU types are defined above.  The\n              \
    \        assignment of OBJECT IDENTIFIERs to new types of\n                  \
    \    MAUs is managed by the IANA.  If the MAU type is\n                      unknown,\
    \ the object identifier\n                      unknownMauType OBJECT IDENTIFIER\
    \ ::= { 0 0 }\n                      is returned.  Note that unknownMauType is\
    \ a\n                      syntactically valid object identifier, and any\n  \
    \                    conformant implementation of ASN.1 and the BER\n        \
    \              must be able to generate and recognize this\n                 \
    \     value.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.2, aMAUType.\"\
    \n          ::= { rpMauEntry 4 }\n      rpMauStatus OBJECT-TYPE\n          SYNTAX\
    \      INTEGER {\n                          other(1),\n                      \
    \    unknown(2),\n                          operational(3),\n                \
    \          standby(4),\n                          shutdown(5),\n             \
    \             reset(6)\n                      }\n          MAX-ACCESS  read-write\n\
    \          STATUS      current\n          DESCRIPTION \"The current state of the\
    \ MAU.  This object MAY\n                      be implemented as a read-only object\
    \ by those\n                      agents and MAUs that do not implement software\n\
    \                      control of the MAU state.  Some agents may not\n      \
    \                support setting the value of this object to some\n          \
    \            of the enumerated values.\n                      The value other(1)\
    \ is returned if the MAU is in\n                      a state other than one of\
    \ the states 2 through\n                      6.\n                      The value\
    \ unknown(2) is returned when the MAU's\n                      true state is unknown;\
    \ for example, when it is\n                      being initialized.\n        \
    \              A MAU in the operational(3) state is fully\n                  \
    \    functional, operates, and passes signals to its\n                      attached\
    \ DTE or repeater port in accordance to\n                      its specification.\n\
    \                      A MAU in standby(4) state forces DI and CI to\n       \
    \               idle and the media transmitter to idle or fault,\n           \
    \           if supported.  Standby(4) mode only applies to\n                 \
    \     link type MAUs.  The state of\n                      rpMauMediaAvailable\
    \ is unaffected.\n                      A MAU in shutdown(5) state assumes the\
    \ same\n                      condition on DI, CI, and the media transmitter\n\
    \                      as though it were powered down or not connected.\n    \
    \                  The MAU MAY return other(1) value for the\n               \
    \       rpMauJabberState and rpMauMediaAvailable objects\n                   \
    \   when it is in this state.  For an AUI, this\n                      state will\
    \ remove power from the AUI.\n                      Setting this variable to the\
    \ value reset(6)\n                      resets the MAU in the same manner as a\n\
    \                      power-off, power-on cycle of at least one-half\n      \
    \                second would.  The agent is not required to\n               \
    \       return the value reset (6).\n                      Setting this variable\
    \ to the value\n                      operational(3), standby(4), or shutdown(5)\n\
    \                      causes the MAU to assume the respective state\n       \
    \               except that setting a mixing-type MAU or an AUI\n            \
    \          to standby(4) will cause the MAU to enter the\n                   \
    \   shutdown state.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.7, aMAUAdminState,\n\
    \                          30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1,\n  \
    \                    acResetMAU.\"\n          ::= { rpMauEntry 5 }\n      rpMauMediaAvailable\
    \ OBJECT-TYPE\n          SYNTAX      INTEGER {\n                          other(1),\n\
    \                          unknown(2),\n                          available(3),\n\
    \                          notAvailable(4),\n                          remoteFault(5),\n\
    \                          invalidSignal(6),\n                          remoteJabber(7),\n\
    \                          remoteLinkLoss(8),\n                          remoteTest(9),\n\
    \                          offline(10),\n                          autoNegError(11)\n\
    \                      }\n          MAX-ACCESS  read-only\n          STATUS  \
    \    current\n          DESCRIPTION \"If the MAU is a link or fiber type (FOIRL,\n\
    \                      10BASE-T, 10BASE-F) then this is equivalent to\n      \
    \                the link test fail state/low light function.\n              \
    \        For an AUI or a coax (including broadband) MAU\n                    \
    \  this indicates whether or not loopback is\n                      detected on\
    \ the DI circuit.  The value of this\n                      attribute persists\
    \ between packets for MAU types\n                      AUI, 10BASE5, 10BASE2,\
    \ 10BROAD36, and 10BASE-FP.\n                      The value other(1) is returned\
    \ if the\n                      mediaAvailable state is not one of 2 through 11.\n\
    \                      The value unknown(2) is returned when the MAU's\n     \
    \                 true state is unknown; for example, when it is\n           \
    \           being initialized.  At power-up or following a\n                 \
    \     reset, the value of this attribute will be\n                      unknown\
    \ for AUI, coax, and 10BASE-FP MAUs.  For\n                      these MAUs loopback\
    \ will be tested on each\n                      transmission during which no collision\
    \ is\n                      detected.  If DI is receiving input when DO\n    \
    \                  returns to IDL after a transmission and there\n           \
    \           has been no collision during the transmission\n                  \
    \    then loopback will be detected.  The value of\n                      this\
    \ attribute will only change during\n                      non-collided transmissions\
    \ for AUI, coax, and\n                      10BASE-FP MAUs.\n                \
    \      For 100Mbps and 1000Mbps MAUs, the enumerations\n                     \
    \ match the states within the respective link\n                      integrity\
    \ state diagrams, fig 32-16, 23-12 and\n                      24-15 of sections\
    \ 32, 23 and 24 of [16].  Any\n                      MAU which implements management\
    \ of\n                      auto-negotiation will map remote fault\n         \
    \             indication to remote fault.\n                      The value available(3)\
    \ indicates that the link,\n                      light, or loopback is normal.\
    \  The value\n                      notAvailable(4) indicates link loss, low light,\n\
    \                      or no loopback.\n                      The value remoteFault(5)\
    \ indicates that a fault\n                      has been detected at the remote\
    \ end of the link.\n                      This value applies to 10BASE-FB, 100BASE-T4\
    \ Far\n                      End Fault Indication and non-specified remote\n \
    \                     faults from a system running auto-negotiation.\n       \
    \               The values remoteJabber(7), remoteLinkLoss(8),\n             \
    \         and remoteTest(9) SHOULD be used instead of\n                      remoteFault(5)\
    \ where the reason for remote fault\n                      is identified in the\
    \ remote signaling protocol.\n                      The value invalidSignal(6)\
    \ indicates that an\n                      invalid signal has been received from\
    \ the other\n                      end of the link.  InvalidSignal(6) applies\
    \ only\n                      to MAUs of type 10BASE-FB.\n                   \
    \   Where an IEEE Std 802.3u-1995 clause 22 MII\n                      is present,\
    \ a logic one in the remote fault bit\n                      (reference section\
    \ 22.2.4.2.8 of that document)\n                      maps to the value remoteFault(5),\
    \ and a logic\n                      zero in the link status bit (reference section\n\
    \                      22.2.4.2.10 of that document) maps to the value\n     \
    \                 notAvailable(4).  The value notAvailable(4)\n              \
    \        takes precedence over the value remoteFault(5).\n                   \
    \   Any MAU that implements management of clause 37\n                      Auto-Negotiation\
    \ will map the received Remote\n                      Fault (RF1 and RF2) bit\
    \ values for Offline to\n                      offline(10), Link Failure to remoteFault(5)\
    \ and\n                      Auto-Negotiation Error to autoNegError(11).\"\n \
    \         REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.4, aMediaAvailable.\"\n   \
    \       ::= { rpMauEntry 6 }\n      rpMauMediaAvailableStateExits OBJECT-TYPE\n\
    \          SYNTAX      Counter32\n          MAX-ACCESS  read-only\n          STATUS\
    \      current\n          DESCRIPTION \"A count of the number of times that\n\
    \                      rpMauMediaAvailable for this MAU instance leaves\n    \
    \                  the state available(3).\n                      Discontinuities\
    \ in the value of this counter can\n                      occur at re-initialization\
    \ of the management\n                      system, and at other times as indicated\
    \ by the\n                      value of rptrMonitorPortLastChange.\"\n      \
    \    REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.5,\n                      aLoseMediaCounter.\n\
    \                      RFC 2108, rptrMonitorPortLastChange\"\n          ::= {\
    \ rpMauEntry 7 }\n      rpMauJabberState OBJECT-TYPE\n          SYNTAX      INTEGER\
    \ {\n                          other(1),\n                          unknown(2),\n\
    \                          noJabber(3),\n                          jabbering(4)\n\
    \                      }\n          MAX-ACCESS  read-only\n          STATUS  \
    \    current\n          DESCRIPTION \"The value other(1) is returned if the jabber\n\
    \                      state is not 2, 3, or 4.  The agent MUST always\n     \
    \                 return other(1) for MAU type dot3MauTypeAUI.\n             \
    \         The value unknown(2) is returned when the MAU's\n                  \
    \    true state is unknown; for example, when it is\n                      being\
    \ initialized.\n                      If the MAU is not jabbering the agent returns\n\
    \                      noJabber(3).  This is the 'normal' state.\n           \
    \           If the MAU is in jabber state the agent returns\n                \
    \      the jabbering(4) value.\"\n          REFERENCE \"[IEEE 802.3 Std], 30.5.1.1.6,\n\
    \                    aJabber.jabberFlag.\"\n          ::= { rpMauEntry 8 }\n \
    \     rpMauJabberingStateEnters OBJECT-TYPE\n          SYNTAX      Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A count of the number of times that\n                      mauJabberState\
    \ for this MAU instance enters the\n                      state jabbering(4).\
    \  For MAUs of type\n                      dot3MauTypeAUI, dot3MauType100BaseT4,\n\
    \                      dot3MauType100BaseTX, dot3MauType100BaseFX and\n      \
    \                    all 1000Mbps types, this counter will always\n          \
    \                indicate zero.\n                          Discontinuities in\
    \ the value of this counter\n                          can occur at re-initialization\
    \ of the\n                          management system, and at other times as\n\
    \                          indicated by the value of\n                       \
    \   rptrMonitorPortLastChange.\"\n              REFERENCE   \"[IEEE 802.3 Std],\
    \ 30.5.1.1.6,\n                          aJabber.jabberCounter.\n            \
    \              RFC 2108, rptrMonitorPortLastChange\"\n          ::= { rpMauEntry\
    \ 9 }\n      rpMauFalseCarriers OBJECT-TYPE\n          SYNTAX      Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A count of the number of false carrier events\n                      during\
    \ IDLE in 100BASE-X links.  This counter\n                      does not increment\
    \ at the symbol rate.  It can\n                      increment after a valid carrier\
    \ completion at a\n                      maximum rate of once per 100 ms until\
    \ the next\n                      carrier event.\n                      This counter\
    \ increments only for MAUs of type\n                      dot3MauType100BaseT4,\
    \ dot3MauType100BaseTX, and\n                      dot3MauType100BaseFX and all\
    \ 1000Mbps types.\n                      For all other MAU types, this counter\
    \ will\n                      always indicate zero.\n                      The\
    \ approximate minimum time for rollover of\n                      this counter\
    \ is 7.4 hours.\n                      Discontinuities in the value of this counter\
    \ can\n                      occur at re-initialization of the management\n  \
    \                    system, and at other times as indicated by the\n        \
    \              value of rptrMonitorPortLastChange.\"\n          REFERENCE   \"\
    [IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.\n                      RFC 2108,\
    \ rptrMonitorPortLastChange\"\n          ::= { rpMauEntry 10 }\n      -- The rpJackTable\
    \ applies to MAUs attached to repeaters\n      -- which have one or more external\
    \ jacks (connectors).\n      rpJackTable OBJECT-TYPE\n          SYNTAX      SEQUENCE\
    \ OF RpJackEntry\n          MAX-ACCESS  not-accessible\n          STATUS     \
    \ current\n          DESCRIPTION \"Information about the external jacks attached\n\
    \                      to MAUs attached to the ports of a repeater.\"\n      \
    \    ::= { dot3RpMauBasicGroup 2 }\n      rpJackEntry OBJECT-TYPE\n          SYNTAX\
    \      RpJackEntry\n          MAX-ACCESS  not-accessible\n          STATUS   \
    \   current\n          DESCRIPTION \"An entry in the table, containing information\n\
    \                      about a particular jack.\"\n          INDEX       { rpMauGroupIndex,\n\
    \                        rpMauPortIndex,\n                        rpMauIndex,\n\
    \                        rpJackIndex\n                      }\n          ::= {\
    \ rpJackTable 1 }\n      RpJackEntry ::=\n          SEQUENCE {\n             \
    \ rpJackIndex                         Integer32,\n              rpJackType   \
    \                       JackType\n          }\n      rpJackIndex OBJECT-TYPE\n\
    \          SYNTAX      Integer32 (1..2147483647)\n          MAX-ACCESS  not-accessible\n\
    \          STATUS      current\n          DESCRIPTION \"This variable uniquely\
    \ identifies the jack\n                      described by this entry from among\
    \ other jacks\n                      attached to the same MAU (rpMauIndex).\"\n\
    \          ::= { rpJackEntry 1 }\n      rpJackType OBJECT-TYPE\n          SYNTAX\
    \      JackType\n          MAX-ACCESS  read-only\n          STATUS      current\n\
    \          DESCRIPTION \"The jack connector type, as it appears on the\n     \
    \                 outside of the system.\"\n          ::= { rpJackEntry 2 }\n\
    \      --\n      -- The Basic Interface MAU Table\n      --\n      ifMauTable\
    \ OBJECT-TYPE\n          SYNTAX      SEQUENCE OF IfMauEntry\n          MAX-ACCESS\
    \  not-accessible\n          STATUS      current\n          DESCRIPTION \"Table\
    \ of descriptive and status information\n                      about MAU(s) attached\
    \ to an interface.\"\n          ::= { dot3IfMauBasicGroup 1 }\n      ifMauEntry\
    \ OBJECT-TYPE\n          SYNTAX      IfMauEntry\n          MAX-ACCESS  not-accessible\n\
    \          STATUS      current\n          DESCRIPTION \"An entry in the table,\
    \ containing information\n                      about a single MAU.\"\n      \
    \    INDEX       { ifMauIfIndex,\n                        ifMauIndex\n       \
    \               }\n          ::= { ifMauTable 1 }\n      IfMauEntry ::=\n    \
    \      SEQUENCE {\n              ifMauIfIndex                        Integer32,\n\
    \              ifMauIndex                          Integer32,\n              ifMauType\
    \                           OBJECT IDENTIFIER,\n              ifMauStatus    \
    \                     INTEGER,\n              ifMauMediaAvailable            \
    \     INTEGER,\n              ifMauMediaAvailableStateExits       Counter32,\n\
    \              ifMauJabberState                    INTEGER,\n              ifMauJabberingStateEnters\
    \           Counter32,\n              ifMauFalseCarriers                  Counter32,\n\
    \              ifMauTypeList                       Integer32,\n              ifMauDefaultType\
    \                    OBJECT IDENTIFIER,\n              ifMauAutoNegSupported \
    \              TruthValue,\n              ifMauTypeListBits                  \
    \ BITS\n          }\n      ifMauIfIndex OBJECT-TYPE\n          SYNTAX      Integer32\
    \ (1..2147483647)\n          MAX-ACCESS  read-only\n          STATUS      current\n\
    \          DESCRIPTION \"This variable uniquely identifies the interface\n   \
    \                   to which the MAU described by this entry is\n            \
    \          connected.\"\n          REFERENCE   \"RFC 1213, ifIndex\"\n       \
    \   ::= { ifMauEntry 1 }\n      ifMauIndex OBJECT-TYPE\n          SYNTAX     \
    \ Integer32 (1..2147483647)\n          MAX-ACCESS  read-only\n          STATUS\
    \      current\n          DESCRIPTION \"This variable uniquely identifies the\
    \ MAU\n                      described by this entry from among other MAUs\n \
    \                     connected to the same interface (ifMauIfIndex).\"\n    \
    \      REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID.\"\n          ::= {\
    \ ifMauEntry 2 }\n      ifMauType OBJECT-TYPE\n          SYNTAX      OBJECT IDENTIFIER\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"This object identifies the MAU type.  An\n                      initial set\
    \ of MAU types are defined above.  The\n                      assignment of OBJECT\
    \ IDENTIFIERs to new types of\n                      MAUs is managed by the IANA.\
    \  If the MAU type is\n                      unknown, the object identifier\n\
    \                      unknownMauType OBJECT IDENTIFIER ::= { 0 0 }\n        \
    \              is returned.  Note that unknownMauType is a\n                 \
    \     syntactically valid object identifier, and any\n                      conformant\
    \ implementation of ASN.1 and the BER\n                      must be able to generate\
    \ and recognize this\n                      value.\n                      This\
    \ object represents the operational type of\n                      the MAU, as\
    \ determined by either (1) the result\n                      of the auto-negotiation\
    \ function or (2) if\n                      auto-negotiation is not enabled or\
    \ is not\n                      implemented for this MAU, by the value of the\n\
    \                      object ifMauDefaultType.  In case (2), a set to\n     \
    \                 the object ifMauDefaultType will force the MAU\n           \
    \           into the new operating mode.\"\n          REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.2, aMAUType.\"\n          ::= { ifMauEntry 3 }\n      ifMauStatus\
    \ OBJECT-TYPE\n          SYNTAX      INTEGER {\n                          other(1),\n\
    \                          unknown(2),\n                          operational(3),\n\
    \                          standby(4),\n                          shutdown(5),\n\
    \                          reset(6)\n                      }\n          MAX-ACCESS\
    \  read-write\n          STATUS      current\n          DESCRIPTION \"The current\
    \ state of the MAU.  This object MAY\n                      be implemented as\
    \ a read-only object by those\n                      agents and MAUs that do not\
    \ implement software\n                      control of the MAU state.  Some agents\
    \ may not\n                      support setting the value of this object to some\n\
    \                      of the enumerated values.\n                      The value\
    \ other(1) is returned if the MAU is in\n                      a state other than\
    \ one of the states 2 through\n                      6.\n                    \
    \  The value unknown(2) is returned when the MAU's\n                      true\
    \ state is unknown; for example, when it is\n                      being initialized.\n\
    \                      A MAU in the operational(3) state is fully\n          \
    \            functional, operates, and passes signals to its\n               \
    \       attached DTE or repeater port in accordance to\n                     \
    \ its specification.\n                      A MAU in standby(4) state forces DI\
    \ and CI to\n                      idle and the media transmitter to idle or fault,\n\
    \                      if supported.  Standby(4) mode only applies to\n      \
    \                link type MAUs.  The state of\n                      ifMauMediaAvailable\
    \ is unaffected.\n                      A MAU in shutdown(5) state assumes the\
    \ same\n                      condition on DI, CI, and the media transmitter\n\
    \                      as though it were powered down or not connected.\n    \
    \                  The MAU MAY return other(1) value for the\n               \
    \       ifMauJabberState and ifMauMediaAvailable objects\n                   \
    \   when it is in this state.  For an AUI, this\n                      state will\
    \ remove power from the AUI.\n                      Setting this variable to the\
    \ value reset(6)\n                      resets the MAU in the same manner as a\n\
    \                      power-off, power-on cycle of at least one-half\n      \
    \                second would.  The agent is not required to\n               \
    \       return the value reset (6).\n                      Setting this variable\
    \ to the value\n                      operational(3), standby(4), or shutdown(5)\n\
    \                      causes the MAU to assume the respective state\n       \
    \               except that setting a mixing-type MAU or an AUI\n            \
    \          to standby(4) will cause the MAU to enter the\n                   \
    \   shutdown state.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.7, aMAUAdminState,\n\
    \                      30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1,\n      \
    \                acResetMAU.\"\n          ::= { ifMauEntry 4 }\n      ifMauMediaAvailable\
    \ OBJECT-TYPE\n          SYNTAX      INTEGER {\n                          other(1),\n\
    \                          unknown(2),\n                          available(3),\n\
    \                          notAvailable(4),\n                          remoteFault(5),\n\
    \                          invalidSignal(6),\n                          remoteJabber(7),\n\
    \                          remoteLinkLoss(8),\n                          remoteTest(9),\n\
    \                          offline(10),\n                          autoNegError(11)\n\
    \                      }\n          MAX-ACCESS  read-only\n          STATUS  \
    \    current\n          DESCRIPTION \"If the MAU is a link or fiber type (FOIRL,\n\
    \                      10BASE-T, 10BASE-F) then this is equivalent to\n      \
    \                the link test fail state/low light function.\n              \
    \        For an AUI or a coax (including broadband) MAU\n                    \
    \  this indicates whether or not loopback is\n                      detected on\
    \ the DI circuit.  The value of this\n                      attribute persists\
    \ between packets for MAU types\n                      AUI, 10BASE5, 10BASE2,\
    \ 10BROAD36, and 10BASE-FP.\n                      The value other(1) is returned\
    \ if the\n                      mediaAvailable state is not one of 2 through 11.\n\
    \                      The value unknown(2) is returned when the MAU's\n     \
    \                 true state is unknown; for example, when it is\n           \
    \           being initialized.  At power-up or following a\n                 \
    \     reset, the value of this attribute will be\n                      unknown\
    \ for AUI, coax, and 10BASE-FP MAUs.  For\n                      these MAUs loopback\
    \ will be tested on each\n                      transmission during which no collision\
    \ is\n                      detected.  If DI is receiving input when DO\n    \
    \                  returns to IDL after a transmission and there\n           \
    \           has been no collision during the transmission\n                  \
    \    then loopback will be detected.  The value of\n                      this\
    \ attribute will only change during\n                      non-collided transmissions\
    \ for AUI, coax, and\n                      10BASE-FP MAUs.\n                \
    \      For 100Mbps and 1000Mbps MAUs, the enumerations\n                     \
    \ match the states within the respective link\n                      integrity\
    \ state diagrams, fig 32-16, 23-12 and\n                      24-15 of sections\
    \ 32, 23 and 24 of [16].  Any\n                      MAU which implements management\
    \ of\n                      auto-negotiation will map remote fault\n         \
    \             indication to remote fault.\n                      The value available(3)\
    \ indicates that the link,\n                      light, or loopback is normal.\
    \  The value\n                      notAvailable(4) indicates link loss, low light,\n\
    \                      or no loopback.\n                      The value remoteFault(5)\
    \ indicates that a fault\n                      has been detected at the remote\
    \ end of the link.\n                      This value applies to 10BASE-FB, 100BASE-T4\
    \ Far\n                      End Fault Indication and non-specified remote\n \
    \                     faults from a system running auto-negotiation.\n       \
    \               The values remoteJabber(7), remoteLinkLoss(8),\n             \
    \         and remoteTest(9) SHOULD be used instead of\n                      remoteFault(5)\
    \ where the reason for remote fault\n                      is identified in the\
    \ remote signaling protocol.\n                      The value invalidSignal(6)\
    \ indicates that an\n                      invalid signal has been received from\
    \ the other\n                      end of the link.  InvalidSignal(6) applies\
    \ only\n                      to MAUs of type 10BASE-FB.\n                   \
    \   Where an IEEE Std 802.3u-1995 clause 22 MII\n                      is present,\
    \ a logic one in the remote fault bit\n                      (reference section\
    \ 22.2.4.2.8 of that document)\n                      maps to the value remoteFault(5),\
    \ and a logic\n                      zero in the link status bit (reference section\n\
    \                      22.2.4.2.10 of that document) maps to the value\n     \
    \                 notAvailable(4).  The value notAvailable(4)\n              \
    \        takes precedence over the value remoteFault(5).\n                   \
    \   Any MAU that implements management of clause 37\n                      Auto-Negotiation\
    \ will map the received RF1 and\n                      RF2 bit values for Offline\
    \ to offline(10), Link\n                      Failure to remoteFault(5) and Auto-Negotiation\n\
    \                      Error to autoNegError(11).\"\n          REFERENCE   \"\
    [IEEE 802.3 Std], 30.5.1.1.4, aMediaAvailable.\"\n          ::= { ifMauEntry 5\
    \ }\n      ifMauMediaAvailableStateExits OBJECT-TYPE\n          SYNTAX      Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A count of the number of times that\n                      ifMauMediaAvailable\
    \ for this MAU instance leaves\n                      the state available(3).\n\
    \                      Discontinuities in the value of this counter can\n    \
    \                  occur at re-initialization of the management\n            \
    \          system, and at other times as indicated by the\n                  \
    \    value of ifCounterDiscontinuityTime.\"\n          REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.5,\n                      aLoseMediaCounter.\n              \
    \        RFC 2233, ifCounterDiscontinuityTime.\"\n          ::= { ifMauEntry 6\
    \ }\n      ifMauJabberState OBJECT-TYPE\n          SYNTAX      INTEGER {\n   \
    \                       other(1),\n                          unknown(2),\n   \
    \                       noJabber(3),\n                          jabbering(4)\n\
    \                      }\n          MAX-ACCESS  read-only\n          STATUS  \
    \    current\n          DESCRIPTION \"The value other(1) is returned if the jabber\n\
    \                      state is not 2, 3, or 4.  The agent MUST always\n     \
    \                 return other(1) for MAU type dot3MauTypeAUI.\n             \
    \         The value unknown(2) is returned when the MAU's\n                  \
    \    true state is unknown; for example, when it is\n                      being\
    \ initialized.\n                      If the MAU is not jabbering the agent returns\n\
    \                      noJabber(3).  This is the 'normal' state.\n           \
    \           If the MAU is in jabber state the agent returns\n                \
    \      the jabbering(4) value.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.6,\n\
    \                      aJabber.jabberFlag.\"\n          ::= { ifMauEntry 7 }\n\
    \      ifMauJabberingStateEnters OBJECT-TYPE\n          SYNTAX      Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A count of the number of times that\n                      mauJabberState\
    \ for this MAU instance enters the\n                      state jabbering(4).\
    \ This counter will always\n                      indicate zero for MAUs of type\
    \ dot1MauTypeAUI\n                      and those of speeds above 10Mbps.\n  \
    \                    Discontinuities in the value of this counter can\n      \
    \                occur at re-initialization of the management\n              \
    \        system, and at other times as indicated by the\n                    \
    \  value of ifCounterDiscontinuityTime.\"\n          REFERENCE   \"[IEEE 802.3\
    \ Std], 30.5.1.1.6,\n                      aJabber.jabberCounter.\n          \
    \            RFC 2233, ifCounterDiscontinuityTime.\"\n          ::= { ifMauEntry\
    \ 8 }\n      ifMauFalseCarriers OBJECT-TYPE\n          SYNTAX      Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A count of the number of false carrier events\n                      during\
    \ IDLE in 100BASE-X and 1000BASE-X links.\n                      For all other\
    \ MAU types, this counter will\n                      always indicate zero. This\
    \ counter does not\n                      increment at the symbol rate.\n    \
    \                  It can increment after a valid carrier\n                  \
    \    completion at a maximum rate of once per 100 ms\n                      for\
    \ 100BASE-X and once per 10us for 1000BASE-X\n                      until the\
    \ next CarrierEvent.\n                      Discontinuities in the value of this\
    \ counter can\n                      occur at re-initialization of the management\n\
    \                      system, and at other times as indicated by the\n      \
    \                value of ifCounterDiscontinuityTime.\"\n          REFERENCE \
    \  \"[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.\n                      RFC\
    \ 2233, ifCounterDiscontinuityTime.\"\n          ::= { ifMauEntry 9 }\n      ifMauTypeList\
    \ OBJECT-TYPE\n          SYNTAX      Integer32\n          MAX-ACCESS  read-only\n\
    \          STATUS      deprecated\n          DESCRIPTION \"********* THIS OBJECT\
    \ IS DEPRECATED **********\n                      A value that uniquely identifies\
    \ the set of\n                      possible IEEE 802.3 types that the MAU could\
    \ be.\n                      The value is a sum which initially takes the\n  \
    \                    value zero.  Then, for each type capability of\n        \
    \              this MAU, 2 raised to the power noted below is\n              \
    \        added to the sum. For example, a MAU which has\n                    \
    \  the capability to be only 10BASE-T would have a\n                      value\
    \ of 512 (2**9).  In contrast, a MAU which\n                      supports both\
    \ 10Base-T (full duplex) and\n                      100BASE-TX (full duplex) would\
    \ have a value of\n                      ((2**11) + (2**16)) or 67584.\n     \
    \                 The powers of 2 assigned to the capabilities are\n         \
    \             these:\n                      Power  Capability\n              \
    \          0      other or unknown\n                        1      AUI\n     \
    \                   2      10BASE-5\n                        3      FOIRL\n  \
    \                      4      10BASE-2\n                        5      10BASE-T\
    \ duplex mode unknown\n                        6      10BASE-FP\n            \
    \            7      10BASE-FB\n                        8      10BASE-FL duplex\
    \ mode unknown\n                        9      10BROAD36\n                   \
    \    10      10BASE-T  half duplex mode\n                       11      10BASE-T\
    \  full duplex mode\n                       12      10BASE-FL half duplex mode\n\
    \                       13      10BASE-FL full duplex mode\n                 \
    \      14      100BASE-T4\n                       15      100BASE-TX half duplex\
    \ mode\n                       16      100BASE-TX full duplex mode\n         \
    \              17      100BASE-FX half duplex mode\n                       18\
    \      100BASE-FX full duplex mode\n                       19      100BASE-T2\
    \ half duplex mode\n                       20      100BASE-T2 full duplex mode\n\
    \                      If auto-negotiation is present on this MAU, this\n    \
    \                  object will map to ifMauAutoNegCapability.\n              \
    \        This object has been deprecated in favour of\n                      ifMauTypeListBits.\"\
    \n          ::= { ifMauEntry 10 }\n      ifMauDefaultType OBJECT-TYPE\n      \
    \    SYNTAX      OBJECT IDENTIFIER\n          MAX-ACCESS  read-write\n       \
    \   STATUS      current\n          DESCRIPTION \"This object identifies the default\n\
    \                      administrative baseband MAU type, to be used in\n     \
    \                 conjunction with the operational MAU type\n                \
    \      denoted by ifMauType.\n                      The set of possible values\
    \ for this object is\n                      the same as the set defined for the\
    \ ifMauType\n                      object.\n                      This object\
    \ represents the\n                      administratively-configured type of the\
    \ MAU.  If\n                      auto-negotiation is not enabled or is not\n\
    \                      implemented for this MAU, the value of this\n         \
    \             object determines the operational type of the\n                \
    \      MAU.  In this case, a set to this object will\n                      force\
    \ the MAU into the specified operating mode.\n                      If auto-negotiation\
    \ is implemented and enabled\n                      for this MAU, the operational\
    \ type of the MAU\n                      is determined by auto-negotiation, and\
    \ the value\n                      of this object denotes the type to which the\
    \ MAU\n                      will automatically revert if/when\n             \
    \         auto-negotiation is later disabled.\n                      NOTE TO IMPLEMENTORS:\
    \  It may be necessary to\n                      provide for underlying hardware\
    \ implementations\n                      which do not follow the exact behavior\
    \ specified\n                      above.  In particular, when\n             \
    \         ifMauAutoNegAdminStatus transitions from enabled\n                 \
    \     to disabled, the agent implementation MUST\n                      ensure\
    \ that the operational type of the MAU (as\n                      reported by\
    \ ifMauType) correctly transitions to\n                      the value specified\
    \ by this object, rather than\n                      continuing to operate at\
    \ the value earlier\n                      determined by the auto-negotiation\
    \ function.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID, and\n\
    \                      22.2.4.1.4.\"\n          ::= { ifMauEntry 11 }\n      ifMauAutoNegSupported\
    \ OBJECT-TYPE\n          SYNTAX      TruthValue\n          MAX-ACCESS  read-only\n\
    \          STATUS      current\n          DESCRIPTION \"This object indicates\
    \ whether or not\n                      auto-negotiation is supported on this\
    \ MAU.\"\n          ::= { ifMauEntry 12 }\n      ifMauTypeListBits OBJECT-TYPE\n\
    \          SYNTAX      BITS {\n              bOther(0),         -- other or unknown\n\
    \              bAUI(1),           -- AUI\n              b10base5(2),       --\
    \ 10BASE-5\n              bFoirl(3),         -- FOIRL\n              b10base2(4),\
    \       -- 10BASE-2\n              b10baseT(5),       -- 10BASE-T duplex mode\
    \ unknown\n              b10baseFP(6),      -- 10BASE-FP\n              b10baseFB(7),\
    \      -- 10BASE-FB\n              b10baseFL(8),      -- 10BASE-FL duplex mode\
    \ unknown\n              b10broad36(9),     -- 10BROAD36\n              b10baseTHD(10),\
    \    -- 10BASE-T  half duplex mode\n              b10baseTFD(11),    -- 10BASE-T\
    \  full duplex mode\n              b10baseFLHD(12),   -- 10BASE-FL half duplex\
    \ mode\n              b10baseFLFD(13),   -- 10BASE-FL full duplex mode\n     \
    \         b100baseT4(14),    -- 100BASE-T4\n              b100baseTXHD(15),  --\
    \ 100BASE-TX half duplex mode\n              b100baseTXFD(16),  -- 100BASE-TX\
    \ full duplex mode\n              b100baseFXHD(17),  -- 100BASE-FX half duplex\
    \ mode\n              b100baseFXFD(18),  -- 100BASE-FX full duplex mode\n    \
    \          b100baseT2HD(19),  -- 100BASE-T2 half duplex mode\n              b100baseT2FD(20),\
    \  -- 100BASE-T2 full duplex mode\n              b1000baseXHD(21),  -- 1000BASE-X\
    \ half duplex mode\n              b1000baseXFD(22),  -- 1000BASE-X full duplex\
    \ mode\n              b1000baseLXHD(23), -- 1000BASE-LX half duplex mode\n   \
    \           b1000baseLXFD(24), -- 1000BASE-LX full duplex mode\n             \
    \ b1000baseSXHD(25), -- 1000BASE-SX half duplex mode\n              b1000baseSXFD(26),\
    \ -- 1000BASE-SX full duplex mode\n              b1000baseCXHD(27), -- 1000BASE-CX\
    \ half duplex mode\n              b1000baseCXFD(28), -- 1000BASE-CX full duplex\
    \ mode\n              b1000baseTHD(29),  -- 1000BASE-T half duplex mode\n    \
    \          b1000baseTFD(30)   -- 1000BASE-T full duplex mode\n          }\n  \
    \        MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A value that uniquely identifies the set of\n                      possible\
    \ IEEE 802.3 types that the MAU could be.\n                      If auto-negotiation\
    \ is present on this MAU, this\n                      object will map to ifMauAutoNegCapability.\n\
    \                      Note that this MAU may be capable of operating\n      \
    \                as a MAU type that is beyond the scope of this\n            \
    \          MIB.  This is indicated by returning the\n                      bit\
    \ value bOther in addition to any bit values\n                      for capabilities\
    \ that are listed above.\"\n          ::= { ifMauEntry 13 }\n      -- The ifJackTable\
    \ applies to MAUs attached to interfaces\n      -- which have one or more external\
    \ jacks (connectors).\n      ifJackTable OBJECT-TYPE\n          SYNTAX      SEQUENCE\
    \ OF IfJackEntry\n          MAX-ACCESS  not-accessible\n          STATUS     \
    \ current\n          DESCRIPTION \"Information about the external jacks attached\n\
    \                      to MAUs attached to an interface.\"\n          ::= { dot3IfMauBasicGroup\
    \ 2 }\n      ifJackEntry OBJECT-TYPE\n          SYNTAX      IfJackEntry\n    \
    \      MAX-ACCESS  not-accessible\n          STATUS      current\n          DESCRIPTION\
    \ \"An entry in the table, containing information\n                      about\
    \ a particular jack.\"\n          INDEX       { ifMauIfIndex,\n              \
    \          ifMauIndex,\n                        ifJackIndex\n                \
    \      }\n          ::= { ifJackTable 1 }\n      IfJackEntry ::=\n          SEQUENCE\
    \ {\n              ifJackIndex                         Integer32,\n          \
    \    ifJackType                          JackType\n          }\n      ifJackIndex\
    \ OBJECT-TYPE\n          SYNTAX      Integer32 (1..2147483647)\n          MAX-ACCESS\
    \  not-accessible\n          STATUS      current\n          DESCRIPTION \"This\
    \ variable uniquely identifies the jack\n                      described by this\
    \ entry from among other jacks\n                      attached to the same MAU.\"\
    \n          ::= { ifJackEntry 1 }\n      ifJackType OBJECT-TYPE\n          SYNTAX\
    \      JackType\n          MAX-ACCESS  read-only\n          STATUS      current\n\
    \          DESCRIPTION \"The jack connector type, as it appears on the\n     \
    \                 outside of the system.\"\n          ::= { ifJackEntry 2 }\n\
    \      -- The ifMauAutoNegTable applies to systems in which\n      -- auto-negotiation\
    \ is supported on one or more MAUs\n      -- attached to interfaces.  Note that\
    \ if auto-negotiation\n      -- is present and enabled, the ifMauType object reflects\n\
    \      -- the result of the auto-negotiation function.\n      ifMauAutoNegTable\
    \ OBJECT-TYPE\n          SYNTAX      SEQUENCE OF IfMauAutoNegEntry\n         \
    \ MAX-ACCESS  not-accessible\n          STATUS      current\n          DESCRIPTION\
    \ \"Configuration and status objects for the\n                      auto-negotiation\
    \ function of MAUs attached to\n                      interfaces.\"\n        \
    \  ::= { dot3IfMauAutoNegGroup 1 }\n      ifMauAutoNegEntry OBJECT-TYPE\n    \
    \      SYNTAX      IfMauAutoNegEntry\n          MAX-ACCESS  not-accessible\n \
    \         STATUS      current\n          DESCRIPTION \"An entry in the table,\
    \ containing configuration\n                      and status information for the\
    \ auto-negotiation\n                      function of a particular MAU.\"\n  \
    \        INDEX       { ifMauIfIndex,\n                        ifMauIndex\n   \
    \                   }\n          ::= { ifMauAutoNegTable 1 }\n      IfMauAutoNegEntry\
    \ ::=\n          SEQUENCE {\n              ifMauAutoNegAdminStatus           \
    \  INTEGER,\n              ifMauAutoNegRemoteSignaling         INTEGER,\n    \
    \          ifMauAutoNegConfig                  INTEGER,\n              ifMauAutoNegCapability\
    \              Integer32,\n              ifMauAutoNegCapAdvertised           Integer32,\n\
    \              ifMauAutoNegCapReceived             Integer32,\n              ifMauAutoNegRestart\
    \                 INTEGER,\n              ifMauAutoNegCapabilityBits         \
    \ BITS,\n              ifMauAutoNegCapAdvertisedBits       BITS,\n           \
    \   ifMauAutoNegCapReceivedBits         BITS,\n              ifMauAutoNegRemoteFaultAdvertised\
    \   INTEGER,\n              ifMauAutoNegRemoteFaultReceived     INTEGER\n    \
    \      }\n      ifMauAutoNegAdminStatus OBJECT-TYPE\n          SYNTAX      INTEGER\
    \ {\n                          enabled(1),\n                          disabled(2)\n\
    \                      }\n          MAX-ACCESS  read-write\n          STATUS \
    \     current\n          DESCRIPTION \"Setting this object to enabled(1) will\
    \ cause\n                      the interface which has the auto-negotiation\n\
    \                      signaling ability to be enabled.\n                    \
    \  If the value of this object is disabled(2) then\n                      the\
    \ interface will act as it would if it had no\n                      auto-negotiation\
    \ signaling.  Under these\n                      conditions, an IEEE 802.3 MAU\
    \ will immediately\n                      be forced to the state indicated by\
    \ the value of\n                      the object ifMauDefaultType.\n         \
    \             NOTE TO IMPLEMENTORS:  When\n                      ifMauAutoNegAdminStatus\
    \ transitions from enabled\n                      to disabled, the agent implementation\
    \ MUST\n                      ensure that the operational type of the MAU (as\n\
    \                      reported by ifMauType) correctly transitions to\n     \
    \                 the value specified by the ifMauDefaultType\n              \
    \        object, rather than continuing to operate at the\n                  \
    \    value earlier determined by the auto-negotiation\n                      function.\"\
    \n          REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.2,\n                    \
    \  aAutoNegAdminState and 30.6.1.2.2,\n                      acAutoNegAdminControl.\"\
    \n          ::= { ifMauAutoNegEntry 1 }\n      ifMauAutoNegRemoteSignaling OBJECT-TYPE\n\
    \          SYNTAX      INTEGER {\n                          detected(1),\n   \
    \                       notdetected(2)\n                      }\n          MAX-ACCESS\
    \  read-only\n          STATUS      current\n          DESCRIPTION \"A value indicating\
    \ whether the remote end of\n                      the link is using auto-negotiation\
    \ signaling. It\n                      takes the value detected(1) if and only\
    \ if,\n                      during the previous link negotiation, FLP Bursts\n\
    \                      were received.\"\n          REFERENCE   \"[IEEE 802.3 Std],\
    \ 30.6.1.1.3,\n                      aAutoNegRemoteSignaling.\"\n          ::=\
    \ { ifMauAutoNegEntry 2 }\n      ifMauAutoNegConfig OBJECT-TYPE\n          SYNTAX\
    \      INTEGER {\n                          other(1),\n                      \
    \    configuring(2),\n                          complete(3),\n               \
    \           disabled(4),\n                          parallelDetectFail(5)\n  \
    \                    }\n          MAX-ACCESS  read-only\n          STATUS    \
    \  current\n          DESCRIPTION \"A value indicating the current status of the\n\
    \                      auto-negotiation process.  The enumeration\n          \
    \            parallelDetectFail(5) maps to a failure in\n                    \
    \  parallel detection as defined in 28.2.3.1 of\n                      [IEEE 802.3\
    \ Std].\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.4,\n           \
    \           aAutoNegAutoConfig.\"\n          ::= { ifMauAutoNegEntry 4 }\n   \
    \   ifMauAutoNegCapability OBJECT-TYPE\n          SYNTAX      Integer32\n    \
    \      MAX-ACCESS  read-only\n          STATUS      deprecated\n          DESCRIPTION\
    \ \"********* THIS OBJECT IS DEPRECATED **********\n                      A value\
    \ that uniquely identifies the set of\n                      capabilities of the\
    \ local auto-negotiation\n                      entity.  The value is a sum which\
    \ initially\n                      takes the value zero.  Then, for each capability\n\
    \                      of this interface, 2 raised to the power noted\n      \
    \                below is added to the sum. For example, an\n                \
    \      interface which has the capability to support\n                      only\
    \ 100Base-TX half duplex would have a value\n                      of 32768 (2**15).\
    \  In contrast, an interface\n                      which supports both 100Base-TX\
    \ half duplex and\n                      and 100Base-TX full duplex would have\
    \ a value of\n                      98304 ((2**15) + (2**16)).\n             \
    \         The powers of 2 assigned to the capabilities are\n                 \
    \     these:\n                      Power   Capability\n                     \
    \   0       other or unknown\n                       (1-9)    (reserved)\n   \
    \                    10       10BASE-T  half duplex mode\n                   \
    \    11       10BASE-T  full duplex mode\n                       12       (reserved)\n\
    \                       13       (reserved)\n                       14       100BASE-T4\n\
    \                       15       100BASE-TX half duplex mode\n               \
    \        16       100BASE-TX full duplex mode\n                       17     \
    \  (reserved)\n                       18       (reserved)\n                  \
    \     19      100BASE-T2 half duplex mode\n                       20      100BASE-T2\
    \ full duplex mode\n                      Note that interfaces that support this\
    \ MIB may\n                      have capabilities that extend beyond the scope\n\
    \                      of this MIB.\n                      This object has been\
    \ deprecated in favour of\n                      ifMauAutoNegCapabilityBits\"\n\
    \          REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.5,\n                     \
    \ aAutoNegLocalTechnologyAbility.\"\n          ::= { ifMauAutoNegEntry 5 }\n \
    \     ifMauAutoNegCapAdvertised OBJECT-TYPE\n          SYNTAX      Integer32\n\
    \          MAX-ACCESS  read-write\n          STATUS      deprecated\n        \
    \  DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n            \
    \          A value that uniquely identifies the set of\n                     \
    \ capabilities advertised by the local\n                      auto-negotiation\
    \ entity. Refer to\n                      ifMauAutoNegCapability for a description\
    \ of the\n                      possible values of this object.\n            \
    \          Capabilities in this object that are not\n                      available\
    \ in ifMauAutoNegCapability cannot be\n                      enabled.\n      \
    \                This object has been deprecated in favour of\n              \
    \        ifMauAutoNegCapAdvertisedBits\"\n          REFERENCE   \"[IEEE 802.3\
    \ Std], 30.6.1.1.6,\n                      aAutoNegAdvertisedTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 6 }\n      ifMauAutoNegCapReceived OBJECT-TYPE\n\
    \          SYNTAX      Integer32\n          MAX-ACCESS  read-only\n          STATUS\
    \      deprecated\n          DESCRIPTION \"********* THIS OBJECT IS DEPRECATED\
    \ **********\n                      A value that uniquely identifies the set of\n\
    \                      capabilities received from the remote\n               \
    \       auto-negotiation entity. Refer to\n                      ifMauAutoNegCapability\
    \ for a description of the\n                      possible values of this object.\n\
    \                      Note that interfaces that support this MIB may\n      \
    \                be attached to remote auto-negotiation entities\n           \
    \           which have capabilities beyond the scope of this\n               \
    \       MIB.\n                      This object has been deprecated in favour\
    \ of\n                      ifMauAutoNegCapReceivedBits\"\n          REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.1.7,\n                      aAutoNegReceivedTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 7 }\n      ifMauAutoNegRestart OBJECT-TYPE\n\
    \          SYNTAX      INTEGER {\n                          restart(1),\n    \
    \                      norestart(2)\n                      }\n          MAX-ACCESS\
    \  read-write\n          STATUS      current\n          DESCRIPTION \"If the value\
    \ of this object is set to\n                      restart(1) then this will force\
    \ auto-negotiation\n                      to begin link renegotiation. If auto-negotiation\n\
    \                      signaling is disabled, a write to this object\n       \
    \               has no effect.\n                      Setting the value of this\
    \ object to norestart(2)\n                      has no effect.\"\n          REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.2.1,\n                      acAutoNegRestartAutoConfig.\"\
    \n          ::= { ifMauAutoNegEntry 8 }\n      ifMauAutoNegCapabilityBits OBJECT-TYPE\n\
    \          SYNTAX      BITS {\n              bOther(0),        -- other or unknown\n\
    \              b10baseT(1),      -- 10BASE-T  half duplex mode\n             \
    \ b10baseTFD(2),    -- 10BASE-T  full duplex mode\n              b100baseT4(3),\
    \    -- 100BASE-T4\n              b100baseTX(4),    -- 100BASE-TX half duplex\
    \ mode\n              b100baseTXFD(5),  -- 100BASE-TX full duplex mode\n     \
    \         b100baseT2(6),    -- 100BASE-T2 half duplex mode\n              b100baseT2FD(7),\
    \  -- 100BASE-T2 full duplex mode\n              bfdxPause(8),     -- PAUSE for\
    \ full-duplex links\n              bfdxAPause(9),    -- Asymmetric PAUSE for full-duplex\n\
    \                                --     links\n              bfdxSPause(10), \
    \  -- Symmetric PAUSE for full-duplex\n                                --    \
    \ links\n              bfdxBPause(11),   -- Asymmetric and Symmetric PAUSE for\n\
    \                                --     full-duplex links\n              b1000baseX(12),\
    \   -- 1000BASE-X, -LX, -SX, -CX half\n                                --    \
    \ duplex mode\n              b1000baseXFD(13), -- 1000BASE-X, -LX, -SX, -CX full\n\
    \                                --     duplex mode\n              b1000baseT(14),\
    \   -- 1000BASE-T half duplex mode\n              b1000baseTFD(15)  -- 1000BASE-T\
    \ full duplex mode\n          }\n          MAX-ACCESS  read-only\n          STATUS\
    \      current\n          DESCRIPTION \"A value that uniquely identifies the set\
    \ of\n                      capabilities of the local auto-negotiation\n     \
    \                 entity.  Note that interfaces that support this\n          \
    \            MIB may have capabilities that extend beyond the\n              \
    \        scope of this MIB.\n                      Note that the local auto-negotiation\
    \ entity may\n                      support some capabilities beyond the scope\
    \ of\n                      this MIB.  This is indicated by returning the\n  \
    \                    bit value bOther in addition to any bit values\n        \
    \              for capabilities that are listed above.\"\n          REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.1.5,\n                      aAutoNegLocalTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 9 }\n      ifMauAutoNegCapAdvertisedBits OBJECT-TYPE\n\
    \          SYNTAX      BITS {\n              bOther(0),        -- other or unknown\n\
    \              b10baseT(1),      -- 10BASE-T  half duplex mode\n             \
    \ b10baseTFD(2),    -- 10BASE-T  full duplex mode\n              b100baseT4(3),\
    \    -- 100BASE-T4\n              b100baseTX(4),    -- 100BASE-TX half duplex\
    \ mode\n              b100baseTXFD(5),  -- 100BASE-TX full duplex mode\n     \
    \         b100baseT2(6),    -- 100BASE-T2 half duplex mode\n              b100baseT2FD(7),\
    \  -- 100BASE-T2 full duplex mode\n              bFdxPause(8),     -- PAUSE for\
    \ full-duplex links\n              bFdxAPause(9),    -- Asymmetric PAUSE for full-duplex\n\
    \                                --     links\n              bFdxSPause(10), \
    \  -- Symmetric PAUSE for full-duplex\n                                --    \
    \ links\n              bFdxBPause(11),   -- Asymmetric and Symmetric PAUSE for\n\
    \                                --     full-duplex links\n              b1000baseX(12),\
    \   -- 1000BASE-X, -LX, -SX, -CX half\n                                --    \
    \ duplex mode\n              b1000baseXFD(13), -- 1000BASE-X, -LX, -SX, -CX full\n\
    \                                --     duplex mode\n              b1000baseT(14),\
    \   -- 1000BASE-T half duplex mode\n              b1000baseTFD(15)  -- 1000BASE-T\
    \ full duplex mode\n          }\n          MAX-ACCESS  read-write\n          STATUS\
    \      current\n          DESCRIPTION \"A value that uniquely identifies the set\
    \ of\n                      capabilities advertised by the local\n           \
    \           auto-negotiation entity.\n                      Capabilities in this\
    \ object that are not\n                      available in ifMauAutoNegCapabilityBits\
    \ cannot\n                      be enabled.\n                      Note that the\
    \ local auto-negotiation entity may\n                      advertise some capabilities\
    \ beyond the scope of\n                      this MIB.  This is indicated by returning\
    \ the\n                      bit value bOther in addition to any bit values\n\
    \                      for capabilities that are listed above.\"\n          REFERENCE\
    \   \"[IEEE 802.3 Std], 30.6.1.1.6,\n                      aAutoNegAdvertisedTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 10 }\n      ifMauAutoNegCapReceivedBits OBJECT-TYPE\n\
    \          SYNTAX      BITS {\n               bOther(0),        -- other or unknown\n\
    \               b10baseT(1),      -- 10BASE-T  half duplex mode\n            \
    \   b10baseTFD(2),    -- 10BASE-T  full duplex mode\n               b100baseT4(3),\
    \    -- 100BASE-T4\n               b100baseTX(4),    -- 100BASE-TX half duplex\
    \ mode\n               b100baseTXFD(5),  -- 100BASE-TX full duplex mode\n    \
    \           b100baseT2(6),    -- 100BASE-T2 half duplex mode\n               b100baseT2FD(7),\
    \  -- 100BASE-T2 full duplex mode\n               bFdxPause(8),     -- PAUSE for\
    \ full-duplex links\n               bFdxAPause(9),    -- Asymmetric PAUSE for\
    \ full-duplex\n                                 --     links\n               bFdxSPause(10),\
    \   -- Symmetric PAUSE for full-duplex\n                                 --  \
    \   links\n               bFdxBPause(11),   -- Asymmetric and Symmetric PAUSE\
    \ for\n                                 --     full-duplex links\n           \
    \    b1000baseX(12),   -- 1000BASE-X, -LX, -SX, -CX half\n                   \
    \              --     duplex mode\n               b1000baseXFD(13), -- 1000BASE-X,\
    \ -LX, -SX, -CX full\n                                 --     duplex mode\n  \
    \             b1000baseT(14),   -- 1000BASE-T half duplex mode\n             \
    \  b1000baseTFD(15)  -- 1000BASE-T full duplex mode\n          }\n          MAX-ACCESS\
    \  read-only\n          STATUS      current\n          DESCRIPTION \"A value that\
    \ uniquely identifies the set of\n                      capabilities received\
    \ from the remote\n                      auto-negotiation entity.\n          \
    \            Note that interfaces that support this MIB may\n                \
    \      be attached to remote auto-negotiation entities\n                     \
    \ which have capabilities beyond the scope of this\n                      MIB.\
    \  This is indicated by returning the bit\n                      value bOther\
    \ in addition to any bit values for\n                      capabilities that are\
    \ listed above.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.6.1.1.7,\n   \
    \                   aAutoNegReceivedTechnologyAbility.\"\n          ::= { ifMauAutoNegEntry\
    \ 11 }\n      ifMauAutoNegRemoteFaultAdvertised OBJECT-TYPE\n          SYNTAX\
    \      INTEGER {\n                          noError(1),\n                    \
    \      offline(2),\n                          linkFailure(3),\n              \
    \            autoNegError(4)\n                      }\n          MAX-ACCESS  read-write\n\
    \          STATUS      current\n          DESCRIPTION \"A value that identifies\
    \ any local fault\n                      indications that this MAU has detected\
    \ and will\n                      advertise at the next auto-negotiation\n   \
    \                   interaction for 1000Mbps MAUs.\"\n          REFERENCE   \"\
    [IEEE 802.3 Std], 30.6.1.1.6,\n                      aAutoNegAdvertisedTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 12 }\n      ifMauAutoNegRemoteFaultReceived\
    \ OBJECT-TYPE\n          SYNTAX      INTEGER {\n                          noError(1),\n\
    \                          offline(2),\n                          linkFailure(3),\n\
    \                          autoNegError(4)\n                      }\n        \
    \  MAX-ACCESS  read-only\n          STATUS      current\n          DESCRIPTION\
    \ \"A value that identifies any fault indications\n                      received\
    \ from the far end of a link by the\n                      local auto-negotiation\
    \ entity for 1000Mbps\n                      MAUs.\"\n          REFERENCE   \"\
    [IEEE 802.3 Std], 30.6.1.1.7,\n                      aAutoNegReceivedTechnologyAbility.\"\
    \n          ::= { ifMauAutoNegEntry 13 }\n      --\n      -- The Basic Broadband\
    \ MAU Table\n      --\n      broadMauBasicTable OBJECT-TYPE\n          SYNTAX\
    \      SEQUENCE OF BroadMauBasicEntry\n          MAX-ACCESS  not-accessible\n\
    \          STATUS      deprecated\n          DESCRIPTION \"********* THIS OBJECT\
    \ IS DEPRECATED **********\n                      Table of descriptive and status\
    \ information\n                      about the broadband MAUs connected to\n \
    \                     interfaces.\"\n          ::= { dot3BroadMauBasicGroup 1\
    \ }\n      broadMauBasicEntry OBJECT-TYPE\n          SYNTAX      BroadMauBasicEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS      deprecated\n    \
    \      DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n        \
    \              An entry in the table, containing information\n               \
    \       about a single broadband MAU.\"\n          INDEX       { broadMauIfIndex,\n\
    \                        broadMauIndex\n                      }\n          ::=\
    \ { broadMauBasicTable 1 }\n      BroadMauBasicEntry ::=\n          SEQUENCE {\n\
    \              broadMauIfIndex                     Integer32,\n              broadMauIndex\
    \                       Integer32,\n              broadMauXmtRcvSplitType    \
    \         INTEGER,\n              broadMauXmtCarrierFreq              Integer32,\n\
    \              broadMauTranslationFreq             Integer32\n          }\n  \
    \    broadMauIfIndex OBJECT-TYPE\n          SYNTAX      Integer32 (1..2147483647)\n\
    \          MAX-ACCESS  read-only\n          STATUS      deprecated\n         \
    \ DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n             \
    \         This variable uniquely identifies the interface\n                  \
    \    to which the MAU described by this entry is\n                      connected.\"\
    \n          REFERENCE   \"Reference RFC 1213, ifIndex.\"\n          ::= { broadMauBasicEntry\
    \ 1 }\n      broadMauIndex OBJECT-TYPE\n          SYNTAX      Integer32 (1..2147483647)\n\
    \          MAX-ACCESS  read-only\n          STATUS      deprecated\n         \
    \ DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n             \
    \         This variable uniquely identifies the MAU\n                      connected\
    \ to interface broadMauIfIndex that is\n                      described by this\
    \ entry.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.1, aMAUID.\"\n\
    \          ::= { broadMauBasicEntry 2 }\n      broadMauXmtRcvSplitType OBJECT-TYPE\n\
    \          SYNTAX      INTEGER {\n                          other(1),\n      \
    \                    single(2),\n                          dual(3)\n         \
    \             }\n          MAX-ACCESS  read-only\n          STATUS      deprecated\n\
    \          DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n    \
    \                  This object indicates the type of frequency\n             \
    \         multiplexing/cabling system used to separate the\n                 \
    \     transmit and receive paths for the 10BROAD36\n                      MAU.\n\
    \                      The value other(1) is returned if the split type\n    \
    \                  is not either single or dual.\n                      The value\
    \ single(2) indicates a single cable\n                      system.  The value\
    \ dual(3) indicates a dual\n                      cable system, offset normally\
    \ zero.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.8,\n           \
    \           aBbMAUXmitRcvSplitType.\"\n          ::= { broadMauBasicEntry 3 }\n\
    \      broadMauXmtCarrierFreq OBJECT-TYPE\n          SYNTAX      Integer32\n \
    \         MAX-ACCESS  read-only\n          STATUS      deprecated\n          DESCRIPTION\
    \ \"********* THIS OBJECT IS DEPRECATED **********\n                      This\
    \ variable indicates the transmit carrier\n                      frequency of\
    \ the 10BROAD36 MAU in MHz/4; that\n                      is, in units of 250\
    \ kHz.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.9,\n            \
    \          aBroadbandFrequencies.xmitCarrierFrequency.\"\n          ::= { broadMauBasicEntry\
    \ 4 }\n      broadMauTranslationFreq OBJECT-TYPE\n          SYNTAX      Integer32\n\
    \          MAX-ACCESS  read-only\n          STATUS      deprecated\n         \
    \ DESCRIPTION \"********* THIS OBJECT IS DEPRECATED **********\n             \
    \         This variable indicates the translation offset\n                   \
    \   frequency of the 10BROAD36 MAU in MHz/4; that\n                      is, in\
    \ units of 250 kHz.\"\n          REFERENCE   \"[IEEE 802.3 Std], 30.5.1.1.9,\n\
    \                      aBroadbandFrequencies.translationFrequency.\"\n       \
    \   ::= { broadMauBasicEntry 5 }\n      -- Notifications for use by 802.3 MAUs\n\
    \      snmpDot3MauTraps OBJECT IDENTIFIER ::= { snmpDot3MauMgt 0 }\n      rpMauJabberTrap\
    \ NOTIFICATION-TYPE\n          OBJECTS     { rpMauJabberState }\n          STATUS\
    \      current\n          DESCRIPTION \"This trap is sent whenever a managed repeater\n\
    \                      MAU enters the jabber state.\n                      The\
    \ agent MUST throttle the generation of\n                      consecutive rpMauJabberTraps\
    \ so that there is at\n                      least a five-second gap between them.\"\
    \n          REFERENCE   \"[IEEE 802.3 Mgt], 30.5.1.3.1, nJabber\n            \
    \          notification.\"\n          ::= { snmpDot3MauTraps 1 }\n      ifMauJabberTrap\
    \ NOTIFICATION-TYPE\n          OBJECTS     { ifMauJabberState }\n          STATUS\
    \      current\n          DESCRIPTION \"This trap is sent whenever a managed interface\n\
    \                      MAU enters the jabber state.\n                      The\
    \ agent MUST throttle the generation of\n                      consecutive ifMauJabberTraps\
    \ so that there is at\n                      least a five-second gap between them.\"\
    \n          REFERENCE   \"[IEEE 802.3 Mgt], 30.5.1.3.1, nJabber\n            \
    \          notification.\"\n          ::= { snmpDot3MauTraps 2 }\n      -- Conformance\
    \ information\n      mauModConf\n              OBJECT IDENTIFIER ::= { mauMod\
    \ 1 }\n        mauModCompls\n              OBJECT IDENTIFIER ::= { mauModConf\
    \ 1 }\n        mauModObjGrps\n              OBJECT IDENTIFIER ::= { mauModConf\
    \ 2 }\n        mauModNotGrps\n              OBJECT IDENTIFIER ::= { mauModConf\
    \ 3 }\n      -- Object groups\n      mauRpGrpBasic OBJECT-GROUP\n          OBJECTS\
    \     { rpMauGroupIndex,\n                        rpMauPortIndex,\n          \
    \              rpMauIndex,\n                        rpMauType,\n             \
    \           rpMauStatus,\n                        rpMauMediaAvailable,\n     \
    \                   rpMauMediaAvailableStateExits,\n                        rpMauJabberState,\n\
    \                        rpMauJabberingStateEnters\n                      }\n\
    \          STATUS      current\n          DESCRIPTION \"Basic conformance group\
    \ for MAUs attached to\n                      repeater ports.  This group is also\
    \ the\n                      conformance specification for RFC 1515\n        \
    \              implementations.\"\n          ::= { mauModObjGrps 1 }\n      mauRpGrp100Mbs\
    \ OBJECT-GROUP\n          OBJECTS     { rpMauFalseCarriers }\n          STATUS\
    \      current\n          DESCRIPTION \"Conformance group for MAUs attached to\n\
    \                      repeater ports with 100 Mb/s or greater\n             \
    \         capability.\"\n          ::= { mauModObjGrps 2 }\n      mauRpGrpJack\
    \ OBJECT-GROUP\n          OBJECTS     { rpJackType }\n          STATUS      current\n\
    \          DESCRIPTION \"Conformance group for MAUs attached to\n            \
    \          repeater ports with managed jacks.\"\n          ::= { mauModObjGrps\
    \ 3 }\n      mauIfGrpBasic OBJECT-GROUP\n          OBJECTS     { ifMauIfIndex,\n\
    \                        ifMauIndex,\n                        ifMauType,\n   \
    \                     ifMauStatus,\n                        ifMauMediaAvailable,\n\
    \                        ifMauMediaAvailableStateExits,\n                    \
    \    ifMauJabberState,\n                        ifMauJabberingStateEnters\n  \
    \                    }\n          STATUS      current\n          DESCRIPTION \"\
    Basic conformance group for MAUs attached to\n                      interfaces.\
    \  This group also provides a\n                      conformance specification\
    \ for RFC 1515\n                      implementations.\"\n          ::= { mauModObjGrps\
    \ 4 }\n      mauIfGrp100Mbs OBJECT-GROUP\n          OBJECTS     { ifMauFalseCarriers,\n\
    \                        ifMauTypeList,\n                        ifMauDefaultType,\n\
    \                        ifMauAutoNegSupported\n                      }\n    \
    \      STATUS      deprecated\n          DESCRIPTION \"********* THIS GROUP IS\
    \ DEPRECATED **********\n                      Conformance group for MAUs attached\
    \ to\n                      interfaces with 100 Mb/s capability.\n           \
    \           This object group has been deprecated in favor\n                 \
    \     of mauIfGrpHighCapacity.\"\n          ::= { mauModObjGrps 5 }\n      mauIfGrpJack\
    \ OBJECT-GROUP\n          OBJECTS     { ifJackType }\n          STATUS      current\n\
    \          DESCRIPTION \"Conformance group for MAUs attached to\n            \
    \          interfaces with managed jacks.\"\n          ::= { mauModObjGrps 6 }\n\
    \      mauIfGrpAutoNeg OBJECT-GROUP\n          OBJECTS     { ifMauAutoNegAdminStatus,\n\
    \                        ifMauAutoNegRemoteSignaling,\n                      \
    \  ifMauAutoNegConfig,\n                        ifMauAutoNegCapability,\n    \
    \                    ifMauAutoNegCapAdvertised,\n                        ifMauAutoNegCapReceived,\n\
    \                        ifMauAutoNegRestart\n                      }\n      \
    \    STATUS      deprecated\n          DESCRIPTION \"********* THIS GROUP IS DEPRECATED\
    \ **********\n                      Conformance group for MAUs attached to\n \
    \                     interfaces with managed auto-negotiation.\n            \
    \          This object group has been deprecated in favor\n                  \
    \    of mauIfGrpAutoNeg2.\"\n          ::= { mauModObjGrps 7 }\n      mauBroadBasic\
    \ OBJECT-GROUP\n          OBJECTS     { broadMauIfIndex,\n                   \
    \     broadMauIndex,\n                        broadMauXmtRcvSplitType,\n     \
    \                   broadMauXmtCarrierFreq,\n                        broadMauTranslationFreq\n\
    \                      }\n          STATUS      deprecated\n          DESCRIPTION\
    \ \"********* THIS GROUP IS DEPRECATED **********\n                      Conformance\
    \ group for broadband MAUs attached\n                      to interfaces.\n  \
    \                    This object group is deprecated.  There have\n          \
    \            been no reported implementations of this group,\n               \
    \       and it was felt to be unlikely that there will\n                     \
    \ be any future implementations.\"\n          ::= { mauModObjGrps 8 }\n      mauIfGrpHighCapacity\
    \ OBJECT-GROUP\n          OBJECTS     { ifMauFalseCarriers,\n                \
    \        ifMauTypeListBits,\n                        ifMauDefaultType,\n     \
    \                   ifMauAutoNegSupported\n                      }\n         \
    \ STATUS      current\n          DESCRIPTION \"Conformance group for MAUs attached\
    \ to\n                      interfaces with 100 Mb/s or greater capability.\"\n\
    \          ::= { mauModObjGrps 9 }\n      mauIfGrpAutoNeg2 OBJECT-GROUP\n    \
    \      OBJECTS     { ifMauAutoNegAdminStatus,\n                        ifMauAutoNegRemoteSignaling,\n\
    \                        ifMauAutoNegConfig,\n                        ifMauAutoNegCapabilityBits,\n\
    \                        ifMauAutoNegCapAdvertisedBits,\n                    \
    \    ifMauAutoNegCapReceivedBits,\n                        ifMauAutoNegRestart\n\
    \                      }\n          STATUS      current\n          DESCRIPTION\
    \ \"Conformance group for MAUs attached to\n                      interfaces with\
    \ managed auto-negotiation.\"\n          ::= { mauModObjGrps 10 }\n      mauIfGrpAutoNeg1000Mbps\
    \ OBJECT-GROUP\n          OBJECTS     { ifMauAutoNegRemoteFaultAdvertised,\n \
    \                       ifMauAutoNegRemoteFaultReceived\n                    \
    \  }\n          STATUS      current\n          DESCRIPTION \"Conformance group\
    \ for 1000Mbps MAUs attached to\n                      interfaces with managed\
    \ auto-negotiation.\"\n          ::= { mauModObjGrps 11 }\n      -- Notification\
    \ groups\n      rpMauNotifications NOTIFICATION-GROUP\n          NOTIFICATIONS\
    \ { rpMauJabberTrap }\n          STATUS      current\n          DESCRIPTION \"\
    Notifications for repeater MAUs.\"\n          ::= { mauModNotGrps 1 }\n      ifMauNotifications\
    \ NOTIFICATION-GROUP\n          NOTIFICATIONS { ifMauJabberTrap }\n          STATUS\
    \      current\n          DESCRIPTION \"Notifications for interface MAUs.\"\n\
    \          ::= { mauModNotGrps 2 }\n      -- Compliances\n      mauModRpCompl\
    \ MODULE-COMPLIANCE\n          STATUS      deprecated\n          DESCRIPTION \"\
    ******** THIS COMPLIANCE IS DEPRECATED ********\n                      Compliance\
    \ for MAUs attached to repeater\n                      ports.\n              \
    \        This compliance is deprecated and replaced by\n                     \
    \ mauModRpCompl2, which corrects an oversight by\n                      allowing\
    \ rpMauStatus to be implemented\n                      read-only.\"\n        \
    \  MODULE -- this module\n              MANDATORY-GROUPS { mauRpGrpBasic }\n \
    \             GROUP       mauRpGrp100Mbs\n              DESCRIPTION \"Implementation\
    \ of this optional group is\n                          recommended for MAUs which\
    \ have 100Mb/s or\n                          greater capability.\"\n         \
    \     GROUP       mauRpGrpJack\n              DESCRIPTION \"Implementation of\
    \ this optional group is\n                          recommended for MAUs which\
    \ have one or more\n                          external jacks.\"\n            \
    \  GROUP       rpMauNotifications\n              DESCRIPTION \"Implementation\
    \ of this group is recommended\n                          for MAUs attached to\
    \ repeater ports.\"\n          ::= { mauModCompls 1 }\n      mauModIfCompl MODULE-COMPLIANCE\n\
    \          STATUS      deprecated\n          DESCRIPTION \"******** THIS COMPLIANCE\
    \ IS DEPRECATED ********\n                      Compliance for MAUs attached to\
    \ interfaces.\n                      This compliance is deprecated and replaced\
    \ by\n                      mauModIfCompl2.\"\n          MODULE -- this module\n\
    \              MANDATORY-GROUPS { mauIfGrpBasic }\n              GROUP       mauIfGrp100Mbs\n\
    \              DESCRIPTION \"Implementation of this optional group is\n      \
    \                    recommended for MAUs which have 100Mb/s\n               \
    \           capability.\"\n              GROUP       mauIfGrpJack\n          \
    \    DESCRIPTION \"Implementation of this optional group is\n                \
    \          recommended for MAUs which have one or more\n                     \
    \     external jacks.\"\n              GROUP       mauIfGrpAutoNeg\n         \
    \     DESCRIPTION \"Implementation of this group is mandatory\n              \
    \            for MAUs which support managed\n                          auto-negotiation.\"\
    \n              GROUP       mauBroadBasic\n              DESCRIPTION \"Implementation\
    \ of this group is mandatory\n                          for broadband MAUs.\"\n\
    \              GROUP       ifMauNotifications\n              DESCRIPTION \"Implementation\
    \ of this group is recommended\n                          for MAUs attached to\
    \ interfaces.\"\n          ::= { mauModCompls 2 }\n      mauModIfCompl2 MODULE-COMPLIANCE\n\
    \          STATUS      current\n          DESCRIPTION \"Compliance for MAUs attached\
    \ to interfaces.\"\n          MODULE -- this module\n              MANDATORY-GROUPS\
    \ { mauIfGrpBasic }\n              GROUP       mauIfGrpHighCapacity\n        \
    \      DESCRIPTION \"Implementation of this optional group is\n              \
    \            recommended for MAUs which have 100Mb/s\n                       \
    \   or greater capability.\"\n              GROUP       mauIfGrpJack\n       \
    \       DESCRIPTION \"Implementation of this optional group is\n             \
    \             recommended for MAUs which have one or more\n                  \
    \        external jacks.\"\n              GROUP       mauIfGrpAutoNeg2\n     \
    \         DESCRIPTION \"Implementation of this group is mandatory\n          \
    \                for MAUs which support managed\n                          auto-negotiation.\"\
    \n              GROUP       mauIfGrpAutoNeg1000Mbps\n              DESCRIPTION\
    \ \"Implementation of this group is mandatory\n                          for MAUs\
    \ which have 1000Mb/s or greater\n                          capability and support\
    \ managed\n                          auto-negotiation.\"\n              GROUP\
    \       ifMauNotifications\n              DESCRIPTION \"Implementation of this\
    \ group is recommended\n                          for MAUs attached to interfaces.\"\
    \n              OBJECT      ifMauStatus\n              MIN-ACCESS  read-only\n\
    \              DESCRIPTION \"Write access is not required.\"\n          ::= {\
    \ mauModCompls 3 }\n      mauModRpCompl2 MODULE-COMPLIANCE\n          STATUS \
    \     current\n          DESCRIPTION \"Compliance for MAUs attached to repeater\n\
    \                      ports.\"\n          MODULE -- this module\n           \
    \   MANDATORY-GROUPS { mauRpGrpBasic }\n              GROUP       mauRpGrp100Mbs\n\
    \              DESCRIPTION \"Implementation of this optional group is\n      \
    \                    recommended for MAUs which have 100Mb/s or\n            \
    \              greater capability.\"\n              GROUP       mauRpGrpJack\n\
    \              DESCRIPTION \"Implementation of this optional group is\n      \
    \                    recommended for MAUs which have one or more\n           \
    \               external jacks.\"\n              GROUP       rpMauNotifications\n\
    \              DESCRIPTION \"Implementation of this group is recommended\n   \
    \                       for MAUs attached to repeater ports.\"\n             \
    \ OBJECT      rpMauStatus\n              MIN-ACCESS  read-only\n             \
    \ DESCRIPTION \"Write access is not required.\"\n          ::= { mauModCompls\
    \ 4 }\n   END\n"
- title: 5.  Intellectual Property
  contents:
  - "5.  Intellectual Property\n   The IETF takes no position regarding the validity\
    \ or scope of any\n   intellectual property or other rights that might be claimed\
    \ to\n   pertain to the implementation or use of the technology described in\n\
    \   this document or the extent to which any license under such rights\n   might\
    \ or might not be available; neither does it represent that it\n   has made any\
    \ effort to identify any such rights.  Information on the\n   IETF's procedures\
    \ with respect to rights in standards-track and\n   standards-related documentation\
    \ can be found in BCP-11.  Copies of\n   claims of rights made available for publication\
    \ and any assurances of\n   licenses to be made available, or the result of an\
    \ attempt made to\n   obtain a general license or permission for the use of such\n\
    \   proprietary rights by implementors or users of this specification can\n  \
    \ be obtained from the IETF Secretariat.\n   The IETF invites any interested party\
    \ to bring to its attention any\n   copyrights, patents or patent applications,\
    \ or other proprietary\n   rights which may cover technology that may be required\
    \ to practice\n   this standard.  Please address the information to the IETF Executive\n\
    \   Director.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document was produced by the IETF Ethernet Interfaces\
    \ and Hub\n   MIB Working Group, whose efforts were greatly advanced by the\n\
    \   contributions of the following people:\n       Chuck Black\n       John Flick\n\
    \       Jeff Johnson\n       Leon Leong\n       Mike Lui\n       Dave Perkins\n\
    \       Geoff Thompson\n       Maurice Turcotte\n       Paul Woodruff\n   Special\
    \ thanks as well to Dave Perkins for his excellent work on the\n   SMICng compiler,\
    \ which made it easy to take advantage of the latest\n   SNMPv2 constructs in\
    \ this MIB.\n"
- title: 7.  References
  contents:
  - "7.  References\n    [1] Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture\
    \ for\n        Describing SNMP Management Frameworks\", RFC 2571, May 1999.\n\
    \    [2] Rose, M. and K. McCloghrie, \"Structure and Identification of\n     \
    \   Management Information for TCP/IP-based Internets\", STD 16, RFC\n       \
    \ 1155, May 1990.\n    [3] Rose, M. and K. McCloghrie, \"Concise MIB Definitions\"\
    , STD 16,\n        RFC 1212, March 1991.\n    [4] Rose, M., \"A Convention for\
    \ Defining Traps for use with the\n        SNMP\", RFC 1215, March 1991.\n   \
    \ [5] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n      \
    \  M. and S. Waldbusser, \"Structure of Management Information\n        Version\
    \ 2 (SMIv2)\", STD 58, RFC 2578, April 1999.\n    [6] McCloghrie, K., Perkins,\
    \ D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser, \"Textual\
    \ Conventions for SMIv2\", STD 58,\n        RFC 2579, April 1999.\n    [7] McCloghrie,\
    \ K., Perkins, D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser,\
    \ \"Conformance Statements for SMIv2\", STD\n        58, RFC 2580, April 1999.\n\
    \    [8] Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple\n       \
    \ Network Management Protocol\", STD 15, RFC 1157, May 1990.\n    [9] Case, J.,\
    \ McCloghrie, K., Rose, M. and S. Waldbusser,\n        \"Introduction to Community-based\
    \ SNMPv2\", RFC 1901, January\n        1996.\n   [10] Case, J., McCloghrie, K.,\
    \ Rose, M. and S. Waldbusser, \"Transport\n        Mappings for Version 2 of the\
    \ Simple Network Management Protocol\n        (SNMPv2)\", RFC 1906, January 1996.\n\
    \   [11] Case, J., Harrington, D., Presuhn, R. and B. Wijnen, \"Message\n    \
    \    Processing and Dispatching for the Simple Network Management\n        Protocol\
    \ (SNMP)\", RFC 2572, May 1999.\n   [12] Blumenthal, U. and B. Wijnen, \"User-based\
    \ Security Model (USM)\n        for version 3 of the Simple Network Management\
    \ Protocol\n        (SNMPv3)\", RFC 2574, May 1999.\n   [13] Case, J., McCloghrie,\
    \ K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations for Version 2\
    \ of the Simple Network Management\n        Protocol (SNMPv2)\", RFC 1905, January\
    \ 1996.\n   [14] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\",\
    \ RFC\n        2573, May 1999.\n   [15] Wijnen, B., Presuhn, R. and K. McCloghrie,\
    \ \"View-based Access\n        Control Model (VACM) for the Simple Network Management\
    \ Protocol\n        (SNMP)\", RFC 2575, May 1999.\n   [16] IEEE, IEEE Std 802.3,\
    \ 1998 Edition: \"Information technology -\n        Telecommunications and information\
    \ exchange between systems -\n        Local and metropolitan area networks - Specific\
    \ requirements -\n        Part 3: Carrier sense multiple access with collision\
    \ detection\n        (CSMA/CD) access method and physical layer specifications\"\
    \n        (incorporating ANSI/IEEE Std. 802.3, 1996 Edition, IEEE Std.\n     \
    \   802.3r-1996, 802.3u-1995, 802.3x&y-1997, 802.3z-1998, and\n        802.3aa-1998),\
    \ September 1998.\n   [17] de Graaf, K., Romascanu, D., McMaster, D.  and K. McCloghrie,\n\
    \        \"Definitions of Managed Objects for IEEE 802.3 Repeater Devices\n  \
    \      using SMIv2\", RFC 2108, February 1997.\n   [18] McCloghrie, K. and M.\
    \ Rose, Editors, \"Management Information\n        Base for Network Management\
    \ of TCP/IP-based internets: MIB-II\",\n        STD 17, RFC 1213, March 1991.\n\
    \   [19] McCloghrie, K. and F. Kastenholtz, \"The Interfaces Group MIB\n     \
    \   using SMIv2\", RFC 2233, November 1997.\n   [20] Bradner, S., \"Key words\
    \ for use in RFCs to Indicate Requirements\n        Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [21] de Graaf, K., Romascanu, D., McMaster, D., McCloghrie,\
    \ K. and S.\n        Roberts, \"Definitions of Managed Objects for IEEE 802.3\
    \ Medium\n        Attachment Units (MAUs) using SMIv2\", RFC 2239, November 1997.\n\
    \   [22] McMaster, D., McCloghrie, K. and S. Roberts, \"Definitions of\n     \
    \   Managed Objects for IEEE 802.3 Medium Attachment Units (MAUs)\",\n       \
    \ RFC 1515, September 1993.\n   [23] Flick, J. and J. Johnson, \"Definitions of\
    \ Managed Objects for\n        the Ethernet-like Interface Types\", RFC 2665,\
    \ August 1999.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are a number of management objects defined\
    \ in this MIB that\n   have a MAX-ACCESS clause of read-write. Setting these objects\
    \ can\n   have a serious effect on the operation of the network, including:\n\
    \        enabling or disabling a MAU\n        changing a MAU's default type\n\
    \        enabling, disabling or restarting autonegotiation\n        modifying\
    \ the capabilities that a MAU advertizes during\n            autonegotiation.\n\
    \   Such objects may be considered sensitive or vulnerable in some\n   network\
    \ environments.  The support for SET operations in a non-secure\n   environment\
    \ without proper protection can have a negative effect on\n   network operations.\n\
    \   SNMPv1 by itself is such an insecure environment.  Even if the\n   network\
    \ itself is secure (for example by using IPSec), even then,\n   there is no control\
    \ as to who on the secure network is allowed to\n   access and GET/SET (read/change/create/delete)\
    \ the objects in this\n   MIB.\n   It is recommended that the implementers consider\
    \ the security\n   features as provided by the SNMPv3 framework.  Specifically,\
    \ the use\n   of the User-based Security Model RFC 2574 [12] and the View-based\n\
    \   Access Control Model RFC 2575 [15] is recommended.\n   It is then a customer/user\
    \ responsibility to ensure that the SNMP\n   entity giving access to an instance\
    \ of this MIB, is properly\n   configured to give access to those objects only\
    \ to those principals\n   (users) that have legitimate rights to access them.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Andrew Smith\n   Extreme Networks, Inc.\n   3585 Monroe\
    \ St.\n   Santa Clara, CA 95051 USA\n   Phone: +1 408 579-2821\n   EMail: andrew@extremenetworks.com\n\
    \   John Flick\n   Hewlett-Packard Company\n   8000 Foothills Blvd. M/S 5557\n\
    \   Roseville, CA 95747-5557\n   Phone: +1 916 785 4018\n   EMail: johnf@rose.hp.com\n\
    \   Kathryn de Graaf\n   Argon Networks\n   25 Porter Road\n   Littleton, MA 01460\
    \ USA\n   Phone: +1 978 486 0665 x163\n   Fax: +1 978 486 9379\n   EMail: kdegraaf@argon.com\n\
    \   Dan Romascanu\n   Lucent Technologies\n   Atidim Technology Park, Bldg. 3\n\
    \   Tel Aviv 61131\n   Israel\n   Phone: 972 3 645 8414, 6458458\n   Fax: 972\
    \ 3 648 7146\n   EMail: dromasca@lucent.com\n   Donna McMaster\n   Cisco Systems\
    \ Inc.\n   170 West Tasman Drive\n   San Jose, CA 95134\n   Phone: +1 408 526\
    \ 5260\n   EMail: mcmaster@cisco.com\n   Keith McCloghrie\n   Cisco Systems Inc.\n\
    \   170 West Tasman Drive\n   San Jose, CA 95134\n   Phone: +1 408 526 5260\n\
    \   EMail: kzm@cisco.com\n   Sam Roberts\n   Farallon Computing, Inc.\n   2470\
    \ Mariner Square Loop\n   Alameda, CA 94501-1010\n   Phone: +1 510 814 5215\n\
    \   EMail: sroberts@farallon.com\n"
- title: Appendix
  contents:
  - "Appendix\n   Change Log\n   This section enumerates the changes made to RFC 2239\
    \ to produce this\n   document.\n      (1)   The MODULE-IDENTITY has been updated\
    \ to reflect the changes\n            in the MIB.\n      (2)   OBJECT-IDENTITY\
    \ definitions have been added for gigabit MAU\n            types.\n      (3) \
    \  The ifMauTypeList, ifMauAutoNegCapability,\n            ifMauAutoNegCapAdvertised\
    \ and ifMauAutoNegCapReceived\n            objects have been deprecated and replaced\
    \ by\n            ifMauTypeListBits, ifMauAutoNegCapabilityBits,\n           \
    \ ifMauAutoNegCapAdvertisedBits and\n            ifMauAutoNegCapReceivedBits.\n\
    \      (4)   Two new objects, ifMauAutoNegRemoteFaultAdvertised and\n        \
    \    ifMauAutoNegRemoteFaultReceived have been added.\n      (5)   Enumerations\
    \ for 'offline' and 'autoNegError' have been\n            added for the rpMauMediaAvailable\
    \ and ifMauMediaAvailable\n            objects.\n      (6)   The broadMauBasicTable\
    \ and mauBroadBasic object group have\n            been deprecated.\n      (7)\
    \   The mauIfGrp100Mbs and mauIfGrpAutoNeg object groups have\n            been\
    \ deprecated and replaced by mauIfGrpHighCapacity and\n            mauIfGrpAutoNeg2.\n\
    \      (8)   A new object group, mauIfGrpAutoNeg1000Mbps, has been added.\n  \
    \    (9)   The mauModIfCompl and mauModRpCompl compliances have been\n       \
    \     deprecated and replaced by mauModIfCompl2 and\n            mauModRpCompl2.\n\
    \      (10)  Added section on relationship to RFC 2239.\n      (11)  Updated the\
    \ SNMP Network Management Framework boilerplate.\n      (12)  Refer to the Interfaces\
    \ MIB, rather than the interfaces\n            group of MIB-II.\n      (13)  Updated\
    \ references to refer to latest edition of IEEE 802.3.\n      (14)  An intellectual\
    \ property notice was added, as required by\n            RFC 2026.\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
