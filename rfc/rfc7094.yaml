- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                           D. McPherson
  contents:
  - "Internet Architecture Board (IAB)                           D. McPherson\n  \
    \             Architectural Considerations of IP Anycast\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo discusses architectural implications of IP anycast and\n\
    \   provides some historical analysis of anycast use by various IETF\n   protocols.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  It represents\
    \ the consensus of the\n   Internet Architecture Board (IAB).  Documents approved\
    \ for\n   publication by the IAB are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7094.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Overview ........................................................2\n\
    \   2. Background ......................................................3\n  \
    \    2.1. Anycast History ............................................3\n    \
    \  2.2. Anycast in IPv6 ............................................6\n      2.3.\
    \ DNS Anycast ................................................6\n      2.4. BCP\
    \ 126 on Operation of Anycast Services ...................8\n   3. Principles\
    \ ......................................................8\n      3.1. Layering\
    \ and Resiliency ....................................8\n      3.2. Anycast Addresses\
    \ as Destinations ..........................9\n      3.3. Anycast Addresses as\
    \ Sources ..............................10\n      3.4. Service Discovery .........................................10\n\
    \   4. Analysis .......................................................11\n  \
    \    4.1. Regarding Widespread Anycast Use ..........................11\n    \
    \  4.2. Transport Implications ....................................11\n      4.3.\
    \ Stateful Firewalls, Middleboxes, and Anycast ..............12\n      4.4. Security\
    \ Considerations ...................................12\n      4.5. Deployment\
    \ Considerations .................................15\n   5. Conclusions ....................................................16\n\
    \   6. Acknowledgements ...............................................16\n  \
    \ 7. Informative References .........................................16\n   Appendix\
    \ A. IAB Members at the Time of Approval ...................21\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   IP anycast is a technique with a long legacy and interesting\n\
    \   engineering challenges.  However, at its core, it is a relatively\n   simple\
    \ concept.  As described in BCP 126 [RFC4786], the general form\n   of IP anycast\
    \ is the practice of making a particular Service Address\n   available in multiple,\
    \ discrete, autonomous locations, such that\n   datagrams sent are routed to one\
    \ of several available locations.\n   IP anycast is used for at least one critical\
    \ Internet service: that\n   of the Domain Name System [RFC1035] root servers.\
    \  By late 2007, at\n   least 10 of the 13 root name servers were already using\
    \ IP anycast\n   [RSSAC29].  Use of IP anycast is growing for other applications\
    \ as\n   well.  It has been deployed for over a decade for DNS resolution\n  \
    \ services and is currently used by several DNS Top Level Domain (TLD)\n   operators.\
    \  IP anycast is also used for other services in operational\n   environments,\
    \ including Network Time Protocol (NTP) [RFC5905]\n   services.\n   Anycast addresses\
    \ are syntactically indistinguishable from unicast\n   addresses.  Anycast addressing\
    \ is equivalent to that of unicast in\n   multiple locations.  Destination-based\
    \ routing does best-effort\n   delivery of a packet to one interface among the\
    \ set of interfaces\n   asserting reachability for the address.  The expectation\
    \ of delivery\n   is to the \"closest\" instance as determined by unicast routing\n\
    \   topology metric(s), and there is also a possibility that various\n   load-balancing\
    \ techniques (e.g., per-packet, per-microflow) may be\n   used among multiple\
    \ equal-cost routes to distribute load for an\n   anycasted prefix.\n   Unlike\
    \ IP unicast, it is not considered an error to assert the same\n   anycast address\
    \ on multiple interfaces within the same or multiple\n   systems.\n   When IP\
    \ anycast is employed, many pitfalls and subtleties exist with\n   applications\
    \ and transports as well as for routing configuration and\n   operation.  In this\
    \ document, we aim to capture many of the\n   architectural implications of IP\
    \ anycast.\n   BCP 126 [RFC4786] discusses several different deployment models\
    \ with\n   IP anycast.  Two additional distinctions beyond that document involve\n\
    \   \"off-link anycast\" and \"on-link anycast\".  \"Off-link anycast\" takes\n\
    \   advantage of routing protocol preferences and the IP hop-by-hop\n   destination-based\
    \ forwarding paradigm in order to direct packets to\n   the \"closest\" destination.\
    \  This is the traditional method of anycast\n   largely considered in BCP 126\
    \ [RFC4786] and can be used for IPv4 and\n   IPv6.  \"On-link anycast\" is the\
    \ formal support of anycast in the\n   address resolution (duplicate address detection)\
    \ protocol and is only\n   standardized for IPv6, with the introduction of designated\
    \ anycast\n   addresses on the anycasted hosts, and the Override flag in Neighbor\n\
    \   Discovery (ND) Neighbor Advertisements (NAs) [RFC4861].  There is no\n   standardized\
    \ mechanism for this in IPv4.\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   As of this writing, the term \"anycast\" appears in 176 RFCs\
    \ and 144\n   active Internet-Drafts.  The following sections capture some of\
    \ the\n   key appearances and discussion of anycasting within the IETF over the\n\
    \   years.\n"
- title: 2.1.  Anycast History
  contents:
  - "2.1.  Anycast History\n   The first formal specification of anycast was provided\
    \ in \"Host\n   Anycasting Service\" [RFC1546].  The authors of this document\
    \ did a\n   good job of capturing most of the issues that exist with IP anycast\n\
    \   today.\n   One of the first documented uses of anycast was in 1994 for a \"\
    Video\n   Registry\" experiment [IMR9401].  In the experiment, a UDP query was\n\
    \   transmitted to an anycasted address to locate the topologically\n   closest\
    \ \"supposedly equivalent network resource\":\n      A video resource (for example,\
    \ a catalog server that lists\n      available video clips) sends an anycast UDP\
    \ datagram to locate the\n      nearest video registry.  At most one registry\
    \ responds with a\n      unicast UDP datagram containing the registry's IP address.\
    \  Said\n      resource then opens a TCP connection to that [the received\n  \
    \    registry address] address and sends a request to register itself.\n     \
    \ Every 5 minutes or so, each registry multicasts to all other\n      registries\
    \ all of the resources it knows from local registration\n      requests.  It also\
    \ immediately announces newly registered\n      resources.  Remotely registered\
    \ resources not heard about for 20\n      minutes are dropped.\n   There is also\
    \ discussion that ISPs began using anycast for DNS\n   resolution services around\
    \ the same time, although no public\n   references to support this are available.\n\
    \   In 1997, the IAB clarified that IPv4 anycast addresses were pure\n   \"locators\"\
    \ and could never serve as \"identifiers\" of hosts or\n   interfaces [RFC2101].\n\
    \   In 1998, the IAB conducted a routing workshop [RFC2902].  Of the\n   conclusions\
    \ and output action items from the report, an Anycast\n   section is contained\
    \ in Section 2.10.3.  Specifically called out is\n   the need to describe the\
    \ advantages and disadvantages of anycast and\n   the belief that local-scoped\
    \ well-known anycast addresses will be\n   useful to some applications.  In the\
    \ subsequent section, an action\n   item was outlined that suggested a BOF should\
    \ be held to plan work on\n   anycast, and if a working group forms, a paper on\
    \ the advantages and\n   the disadvantages of anycast should be included as part\
    \ of the\n   charter.\n   As a result of the recommendation in [RFC2902], an Anycast\
    \ BOF\n   [ANYCASTBOF] was held at IETF 46 in November of 1999.  A number of\n\
    \   uses for anycast were discussed.  No firm conclusion was reached\n   regarding\
    \ use of TCP with anycasted services.  However, it was\n   observed that anycasting\
    \ was useful for DNS, although it did\n   introduce some new complexities.  The\
    \ use of global anycast was not\n   expected to scale (see Section 4.1 below for\
    \ more discussion) and,\n   hence, was expected to be limited to a small number\
    \ of key uses.\n   In 2001, the Multicast and Anycast Group Membership [MAGMA]\
    \ WG was\n   chartered to address host-to-router signaling, including initial\n\
    \   authentication and access control issues for multicast and anycast\n   group\
    \ membership, but other aspects of anycast, including\n   architecture and routing,\
    \ were outside the group's scope.\n   Simple Network Time Protocol (SNTP) Version\
    \ 4 [RFC2030] defined how\n   to use SNTP anycast for server discovery.  This\
    \ was extended in\n   [RFC4330] as an NTP-specific \"manycast\" service, in which\
    \ anycast was\n   used for the discovery part.\n   IPv6 defined some reserved\
    \ subnet anycast addresses [RFC2526] and\n   assigned one to \"Mobile IPv6 Home-Agents\"\
    \ [RFC3775] (obsoleted by\n   [RFC6275]).\n   The original IPv6 transition mechanism\
    \ [RFC2893] made use of IPv4\n   anycast addresses as tunnel endpoints for IPv6\
    \ encapsulated in IPv4,\n   but this was later removed [RFC4213].  The 6to4 tunneling\
    \ protocol\n   [RFC3056] was augmented by a 6to4 relay anycast prefix [RFC3068]\
    \ in a\n   move aimed at simplifying the configuration of 6to4 routers.\n   Incidentally,\
    \ 6to4 deployment has shown a fair number of operational\n   and security issues\
    \ [RFC3964] that result from using anycast as a\n   discovery mechanism.  Specifically,\
    \ one inference is that operational\n   consideration is needed to ensure that\
    \ anycast addresses get\n   advertised and/or filtered in a way that produces\
    \ the intended scope\n   (e.g., only advertise a route for your 6to4 relay to\
    \ Autonomous\n   Systems (ASes) that conform to your own acceptable usage policy),\
    \ an\n   attribute that can easily become quite operationally expensive.\n   In\
    \ 2002, DNS' use of anycast was first specified in \"Distributing\n   Authoritative\
    \ Name Servers via Shared Unicast Addresses\" [RFC3258].\n   It is notable that\
    \ it used the term \"shared unicast address\" rather\n   than \"anycast address\"\
    \ for the service.  This distinction was made\n   due to the IPv6 differentiation\
    \ in the on-link model.  \"Shared\n   unicast\" addresses are unicast (not multicast)\
    \ in the IPv6 model and,\n   therefore, support the off-link anycast model (described\
    \ earlier) but\n   not the on-link anycast model.  At the same time, site-local-scoped\n\
    \   well-known addresses began being used for recursive resolvers\n   [DNS-DISC],\
    \ but this use was never standardized (see below in\n   Section 3.4 for more discussion).\n\
    \   Anycast was used for routing to rendezvous points (RPs) for PIM\n   [RFC4610].\n\
    \   \"Operation of Anycast Services\" BCP 126 [RFC4786] deals with how the\n \
    \  routing system interacts with anycast services and the operation of\n   anycast\
    \ services.\n   \"Requirements for a Mechanism Identifying a Name Server Instance\"\
    \n   [RFC4892] cites the use of anycast with DNS as a motivation to\n   identify\
    \ individual name server instances, and the Name Server ID\n   (NSID) option was\
    \ defined for this purpose [RFC5001].  One could view\n   the addition of NSID\
    \ as an incarnation of locator and identifier\n   separation (where the anycast\
    \ address is a locator and the NSID is an\n   identifier).\n   The IAB's \"Reflections\
    \ on Internet Transparency\" [RFC4924] briefly\n   mentions how violating transparency\
    \ can also damage global services\n   that use anycast.\n"
- title: 2.2.  Anycast in IPv6
  contents:
  - "2.2.  Anycast in IPv6\n   Originally, the IPv6 addressing architecture [RFC1884]\
    \ [RFC2373]\n   [RFC3513] severely restricted the use of anycast addresses.  In\n\
    \   particular, the architecture provided that anycast addresses must not\n  \
    \ be used as source addresses and must not be assigned to IPv6 hosts\n   (i.e.,\
    \ only routers).  These restrictions were later lifted in 2006\n   [RFC4291].\n\
    \   In fact, the more recent \"IPv6 Transition/Co-existence Security\n   Considerations\"\
    \ [RFC4942] overview now recommends:\n      To avoid exposing knowledge about\
    \ the internal structure of the\n      network, it is recommended that anycast\
    \ servers now take advantage\n      of the ability to return responses with the\
    \ anycast address as the\n      source address if possible.\n   As discussed in\
    \ the Overview, \"on-link anycast\" is employed expressly\n   in IPv6 via ND NAs;\
    \ see Section 7.2.7 of [RFC4861] for additional\n   information.\n"
- title: 2.3.  DNS Anycast
  contents:
  - "2.3.  DNS Anycast\n   \"Distributed Authoritative Name Servers via Shared Unicast\
    \ Addresses\"\n   [RFC3258] described how to reach authoritative name servers\
    \ using\n   multiple unicast addresses, each one configured on a different set\
    \ of\n   servers.  It stated in Section 2.3:\n      This document presumes that\
    \ the usual DNS failover methods are the\n      only ones used to ensure reachability\
    \ of the data for clients.  It\n      does not advise that the routes be withdrawn\
    \ in the case of\n      failure; it advises instead that the DNS process shutdown\
    \ so that\n      servers on other addresses are queried.  This recommendation\n\
    \      reflects a choice between performance and operational complexity.\n   \
    \   While it would be possible to have some process withdraw the route\n     \
    \ for a specific server instance when it is not available, there is\n      considerable\
    \ operational complexity involved in ensuring that this\n      occurs reliably.\
    \  Given the existing DNS failover methods, the\n      marginal improvement in\
    \ performance will not be sufficient to\n      justify the additional complexity\
    \ for most uses.\n   In anycast more generally, most anycast benefits cannot be\
    \ realized\n   without route withdrawals, since traffic will continue to be directed\n\
    \   to the link with the failed server.  When multiple unicast addresses\n   are\
    \ used with different sets of servers, a client can still fail over\n   to using\
    \ a different server address and, hence, a different set of\n   servers.  There\
    \ can still be reliability problems, however, when each\n   set contains a failed\
    \ server.  If all servers in the same set are on\n   the same subnet, such problems\
    \ could be minimized where address\n   resolution within the subnet will cause\
    \ traffic to go to an available\n   server.\n   Other assertions included:\n \
    \  o  It asserted (as an advantage) that no routing changes were needed.\n   o\
    \  It recommended stopping DNS processes rather than withdrawing\n      routes\
    \ to deal with failures, data synchronization issues, and\n      failover, as\
    \ provided in the quoted text above.  The spirit of\n      this advice was that\
    \ DNS resolvers may (indeed) reach out and\n      query unavailable DNS name servers,\
    \ but as their queries time out,\n      they will elect to pin themselves to other\
    \ server addresses and,\n      hence, different servers.\n   o  It argued that\
    \ failure modes involving state were not serious,\n      because:\n      *  the\
    \ vast majority of DNS queries are UDP\n      *  large routing metric disparity\
    \ among authoritative server\n         instances would localize queries to a single\
    \ instance for most\n         clients\n      *  when the resolver tries TCP and\
    \ it breaks, the resolver will\n         try to move to a different server address.\
    \  In order to ensure\n         that this is possible, it is important that the\
    \ DNS zone be\n         configured with multiple server addresses for different\
    \ sets of\n         name servers.  The advice given in Section 3.3 of [DNS-DISC]\n\
    \         describes, in more detail, why using multiple addresses is\n       \
    \  important.\n   \"Unique Per-Node Origin ASNs for Globally Anycasted Services\"\
    \n   [RFC6382] makes recommendations regarding the use of per-node unique\n  \
    \ origin Autonomous System Numbers (ASNs) for globally anycasted\n   critical\
    \ infrastructure services in order to provide routing system\n   discriminators\
    \ for a given anycasted prefix.  The object was to allow\n   network management\
    \ and monitoring techniques, or other operational\n   mechanisms to employ this\
    \ new origin AS as a discriminator in\n   whatever manner fits their operating\
    \ environment, either for\n   detection or policy associated with a given anycasted\
    \ node.\n"
- title: 2.4.  BCP 126 on Operation of Anycast Services
  contents:
  - "2.4.  BCP 126 on Operation of Anycast Services\n   \"Operation of Anycast Services\"\
    \ BCP 126 [RFC4786] was a product of\n   the IETF's GROW working group.  The primary\
    \ design constraint\n   considered was that routing \"be stable\" for significantly\
    \ longer than\n   a \"transaction time\", where \"transaction time\" is loosely\
    \ defined as\n   \"a single interaction between a single client and a single server\"\
    .\n   It takes no position on what applications are suitable candidates for\n\
    \   anycast usage.\n   Furthermore, it views anycast service disruptions as an\
    \ operational\n   problem: \"Operators should be aware that, especially for long\
    \ running\n   flows, there are potential failure modes using anycast that are\
    \ more\n   complex than a simple 'destination unreachable' failure using\n   unicast\"\
    .\n   The document primarily deals with global Internet-wide services\n   provided\
    \ by anycast.  Where internal topology issues are discussed,\n   they're mostly\
    \ regarding routing implications rather than application\n   design implications.\
    \  BCP 126 also views networks employing\n   per-packet load balancing on equal\
    \ cost paths as \"pathological\".\n   This was also discussed in [RFC2991].\n"
- title: 3.  Principles
  contents:
  - '3.  Principles

    '
- title: 3.1.  Layering and Resiliency
  contents:
  - "3.1.  Layering and Resiliency\n   Preserving the integrity of a modular layered\
    \ design for IP protocols\n   on the Internet is critical to its continued success\
    \ and flexibility.\n   One such consideration is that of whether an application\
    \ should have\n   to adapt to changes in the routing system.\n   Applications\
    \ should make minimal assumptions about routing stability,\n   just as they should\
    \ make minimal assumptions about congestion and\n   packet loss.  When designing\
    \ applications, it would perhaps be safe\n   to assume that the routing system\
    \ may deliver each anycast packet to\n   a different service instance, in any\
    \ pattern, with temporal\n   reordering being a not-so-rare phenomenon.\n   Most\
    \ stateful transport protocols (e.g., TCP), without modification,\n   do not understand\
    \ the properties of anycast; hence, they will fail\n   probabilistically, but\
    \ possibly catastrophically, when using anycast\n   addresses in the presence\
    \ of \"normal\" routing dynamics.\n   Specifically, if datagrams associated with\
    \ a given active transaction\n   are routed to a new anycasted end system and\
    \ that end system lacks\n   state data associated with the active transaction,\
    \ the session will\n   be reset; hence, it will need to be reinitiated.  As another\
    \ example,\n   different networks have different routing properties and therefore\n\
    \   will experience problems under different conditions.  This can lead\n   to\
    \ a protocol working fine in, say, a test lab but not in the global\n   Internet.\n"
- title: 3.2.  Anycast Addresses as Destinations
  contents:
  - "3.2.  Anycast Addresses as Destinations\n   When an anycast address is used as\
    \ a destination address, different\n   packets with the same destination IP address\
    \ may reach different\n   destination hosts, even if the packets are generated\
    \ by the same\n   source host.  Anycast addresses are thus \"safe\" to use as\
    \ destination\n   addresses for an application if the following design points\
    \ are all\n   met:\n   o  A request message or \"one shot\" message is self-contained\
    \ in a\n      single transport packet.\n   o  A stateless transport (e.g., UDP)\
    \ is used for the above.\n   o  Replies are always sent to a unicast address;\
    \ these can be\n      multipacket since the unicast destination is presumed to\
    \ be\n      associated with a single \"stable\" end system and not an anycasted\n\
    \      source address.  Note that this constrains the use of anycast as\n    \
    \  source addresses in request messages, since reply messages sent\n      back\
    \ to that address may reach a device that was not the source\n      that initially\
    \ triggered it.\n   o  The server side of the application keeps no hard state\
    \ across\n      requests.\n   o  Retries are idempotent; in addition to not assuming\
    \ server state,\n      they do not encode any assumptions about loss of requests\
    \ versus\n      loss of replies.\n   It is noteworthy, though, that even under\
    \ the above circumstances\n   ICMP messages against packets with anycast source\
    \ addresses may be\n   routed to servers other than those expected.  In addition,\
    \ Path\n   Maximum Transmission Unit Discovery (PMTUD) can encounter\n   complications\
    \ when employed against anycast addresses, since\n   iterations in the PMTU discovery\
    \ process may have packets routed to\n   different anycast service instances.\n"
- title: 3.3.  Anycast Addresses as Sources
  contents:
  - "3.3.  Anycast Addresses as Sources\n   When an anycast address is used as a source\
    \ address, the source\n   address does not uniquely identify the source host;\
    \ hence, replies\n   might be sent to a different host.  As noted earlier, this\
    \ concept is\n   sometimes referred to (e.g., in [RFC3258]) as a \"shared unicast\n\
    \   address\".  Anycast addresses are \"safe\" to use as source addresses\n  \
    \ for an application if all of the following design points are met:\n   o  No\
    \ response message is generated by the receiver with the anycast\n      source\
    \ used as a destination unless the application has some\n      private state synchronization\
    \ that allows for the response message\n      arriving at a different instance.\n\
    \   o  The source anycast address is reachable via the interface address\n   \
    \   if unicast reverse path forwarding (RPF) [RFC4778] checking is on,\n     \
    \ or the service address is explicitly provisioned to bypass RPF\n      checks.\
    \  In addition to the application defined in [RFC4778],\n      Section 4.4.5 of\
    \ BCP 126 [RFC4786] gives explicit consideration to\n      RPF checks in anycasting\
    \ operations.\n"
- title: 3.4.  Service Discovery
  contents:
  - "3.4.  Service Discovery\n   Applications able to tolerate an extra round-trip\
    \ time (RTT) to learn\n   a unicast destination address for multipacket exchanges\
    \ might safely\n   use anycast destination addresses for service instance discovery.\n\
    \   For example, \"instance discovery\" messages are sent to an anycast\n   destination\
    \ address, and a reply is subsequently sent from the unique\n   unicast source\
    \ address of the interface that received the discovery\n   message, or a reply\
    \ is sent from the anycast source address of the\n   interface that received the\
    \ message, containing the unicast address\n   to be used to invoke the service.\
    \  Only the latter of these will\n   avoid potential NAT binding and stateful\
    \ firewall issues.\n   [DNS-DISC] discussed several options to address the need\
    \ to configure\n   DNS servers, including the use of a \"Well-known Anycast Address\"\
    \ for\n   recursive DNS service configuration in clients to ease configuration\n\
    \   and allow those systems to ship with these well-known addresses\n   configured\
    \ \"from the beginning, as, say, factory default\".  The\n   proposal was later\
    \ dropped, but the analysis was used in publishing\n   [RFC4339].\n   After the\
    \ final round of revisions to [DNS-DISC] was made, [RFC4339]\n   was published\
    \ with a very similar focus and overlapping content.  The\n   difference was that\
    \ the writing in [RFC4339] focused on analysis,\n   while [DNS-DISC] covered both\
    \ the analysis and a specific proposal.\n   The proposal details were removed\
    \ in what became [RFC4339] although\n   Section 3.3 of that RFC still discusses\
    \ the approach of using a\n   well-known anycast address in this scenario.  During\
    \ publication, the\n   IESG requested that the following \"IESG Note\" be contained\
    \ in the\n   document:\n      This document describes three different approaches\
    \ for the\n      configuration of DNS name resolution server information in IPv6\n\
    \      hosts.\n      There is not an IETF consensus on which approach is preferred.\n\
    \      The analysis in this document was developed by the proponents for\n   \
    \   each approach and does not represent an IETF consensus.\n      The 'RA option'\
    \ and 'Well-known anycast' approaches described in\n      this document are not\
    \ standardized.  Consequently the analysis for\n      these approaches might not\
    \ be completely applicable to any\n      specific proposal that might be proposed\
    \ in the future.\n"
- title: 4.  Analysis
  contents:
  - '4.  Analysis

    '
- title: 4.1.  Regarding Widespread Anycast Use
  contents:
  - "4.1.  Regarding Widespread Anycast Use\n   Widespread use of anycast for global\
    \ Internet-wide services or\n   inter-domain services has some scaling challenges.\
    \  Similar in ways\n   to multicast, each service generates at least one unique\
    \ route in the\n   global BGP routing system.  As a result, additional anycast\
    \ instances\n   result in additional paths for a given prefix, which scales\n\
    \   super-linearly as a function of denseness of inter-domain\n   interconnection\
    \ within the routing system (i.e., more paths result in\n   more resources, more\
    \ network interconnections result in more paths).\n   This is why the Anycast\
    \ BOF concluded that \"the use of global anycast\n   addresses was not expected\
    \ to scale and hence was expected to be\n   limited to a small number of key uses\"\
    .\n   However, one interesting note is that multiple anycast services can\n  \
    \ share a route if they are all located in a single announced prefix\n   and if\
    \ all the servers of all the services are always collocated.  If\n   the announced\
    \ prefix is aggregated differently in different locations\n   though, longest-match\
    \ routing might result in some anycast locations\n   being unreachable.  Hence,\
    \ extra precaution must be taken when\n   aggregating prefixes used by anycast\
    \ services.\n"
- title: 4.2.  Transport Implications
  contents:
  - "4.2.  Transport Implications\n   UDP is the \"lingua franca\" for anycast today.\
    \  Stateful transports\n   could be enhanced to be more anycast friendly.  This\
    \ was anticipated\n   in Host Anycasting Services [RFC1546], specifically:\n \
    \     The solution to this problem is to only permit anycast addresses\n     \
    \ as the remote address of a TCP SYN segment (without the ACK bit\n      set).\
    \  A TCP can then initiate a connection to an anycast address.\n      When the\
    \ SYN-ACK is sent back by the host that received the\n      anycast segment, the\
    \ initiating TCP should replace the anycast\n      address of its peer, with the\
    \ address of the host returning the\n      SYN-ACK.  (The initiating TCP can recognize\
    \ the connection for\n      which the SYN-ACK is destined by treating the anycast\
    \ address as a\n      wildcard address, which matches any incoming SYN-ACK segment\
    \ with\n      the correct destination port and address and source port, provided\n\
    \      the SYN-ACK's full address, including source address, does not\n      match\
    \ another connection and the sequence numbers in the SYN-ACK\n      are correct.)\
    \  This approach ensures that a TCP, after receiving\n      the SYN-ACK is always\
    \ communicating with only one host.\n   The reason for such considerations can\
    \ be illustrated through an\n   example: one operationally observed shortcoming\
    \ of using the\n   Transmission Control Protocol (TCP) [RFC0793] and anycast nodes\
    \ in\n   DNS is that even during the TCP connection establishment, IP control\n\
    \   packets from a DNS client may initially be routed to one anycast\n   instance,\
    \ but subsequent IP packets may be delivered to a different\n   anycast instance\
    \ if (for example) a route has changed.  In such a\n   case, the TCP connection\
    \ will likely elicit a connection reset but\n   will certainly result in the disruption\
    \ of the connection.\n   Multi-address transports (e.g., SCTP) might be more amenable\
    \ to such\n   extensions than TCP.\n   The features needed for address discovery\
    \ when doing multihoming in\n   the transport layer are similar to those needed\
    \ to support anycast.\n"
- title: 4.3.  Stateful Firewalls, Middleboxes, and Anycast
  contents:
  - "4.3.  Stateful Firewalls, Middleboxes, and Anycast\n   Middleboxes (e.g., NATs)\
    \ and stateful firewalls cause problems when\n   used in conjunction with some\
    \ ways to use anycast.  In particular, a\n   server-side transition from an anycast\
    \ source IP address to a unique\n   unicast address may require new or additional\
    \ session state, and this\n   may not exist in the middlebox, as discussed previously\
    \ in\n   Section 3.4.\n"
- title: 4.4.  Security Considerations
  contents:
  - "4.4.  Security Considerations\n   Anycast is often deployed to mitigate or at\
    \ least localize the\n   effects of distributed denial-of-service (DDoS) attacks.\
    \  For\n   example, with the Netgear NTP fiasco [RFC4085] anycast was used in\
    \ a\n   distributed sinkhole model [RFC3882] to mitigate the effects of\n   embedded\
    \ globally routed Internet addresses in network elements.\n   \"Internet Denial-of-Service\
    \ Considerations\" [RFC4732] notes that: \"A\n   number of the root nameservers\
    \ have since been replicated using\n   anycast to further improve their resistance\
    \ to DoS\".\n   \"Operation of Anycast Services\" BCP 126 [RFC4786] cites DoS\n\
    \   mitigation, constraining DoS to localized regions, and identifying\n   attack\
    \ sources using spoofed addresses as some motivations to deploy\n   services using\
    \ anycast.  Multiple anycast service instances such as\n   those used by the root\
    \ name servers also add resiliency when network\n   partitioning occurs (e.g.,\
    \ as the result of transoceanic fiber cuts\n   or natural disasters).\n   When\
    \ using anycast, care must be taken not to simply withdraw an\n   anycast route\
    \ in the presence of a sustained DoS attack, since the\n   result would simply\
    \ move the attack to another service instance,\n   potentially causing a cascaded\
    \ failure.  Anycast adds resiliency when\n   such an attack is instead constrained\
    \ to a single service instance.\n   It should be noted that there is a significant\
    \ man-in-the-middle\n   (MITM) exposure in either variant of anycast discovery\
    \ (see\n   Section 3.4) that, in many applications, may necessitate the need for\n\
    \   end-to-end security models (e.g., using IPsec [RFC6071] or even\n   DNSSEC\
    \ [RFC4033]) that enable end systems to authenticate one\n   another, or the data\
    \ itself.\n   However, when considering the above suggestion of enabling end\n\
    \   systems to authenticate each other, a potential complication can\n   arise.\
    \  If the service nodes of an anycast deployment are\n   administered by separate\
    \ authorities, any server-side authentication\n   credentials that are used must\
    \ (necessarily) be shared across the\n   administrative boundaries in the anycast\
    \ deployment.  This would\n   likely also be the case with Secure Neighbor Discovery,\
    \ described in\n   [RFC5909].\n   Furthermore, as discussed earlier in this document,\
    \ operational\n   consideration needs to be given to ensure that anycast addresses\
    \ get\n   advertised and/or filtered in a way that produces intended scope (for\n\
    \   example, only advertise a route to your 6to4 relay to ASes that\n   conform\
    \ to your own Acceptable Use Policy (AUP)).  This seems to be\n   operationally\
    \ expensive, and is often vulnerable to errors outside of\n   the local routing\
    \ domain, in particular when anycasted services are\n   deployed with the intent\
    \ to scope associated announcements within\n   some local or regional boundary.\n\
    \   As previously discussed, [RFC6382] makes recommendations regarding\n   the\
    \ use of per-node unique origin ASNs for globally anycasted\n   critical infrastructure\
    \ services in order to provide routing system\n   discriminators for a given anycasted\
    \ prefix.  Network management and\n   monitoring techniques, or other operational\
    \ mechanisms, may then\n   employ this new discriminator in whatever manner fits\
    \ their operating\n   environment, for either detection or policy associated with\
    \ a given\n   anycasted node.\n   Moreover, the use of per-node unique origin\
    \ ASNs has the additional\n   benefit of overcoming complications that might arise\
    \ with the\n   potential deployment of the Resource Public Key Infrastructure\
    \ (RPKI)\n   [RFC6480].  Without per-node unique origin ASNs, the cryptographic\n\
    \   certificates needed to attest to the Route Origin Authorizations\n   (ROAs)\
    \ of a multi-administrative deployment of anycast would need to\n   be shared.\
    \  However, if each service instance has a separate ASN,\n   then those ASNs can\
    \ be managed separately in the RPKI.\n   Unlike multicast (but like unicast),\
    \ anycast allows traffic stealing.\n   That is, with multicast, joining a multicast\
    \ group doesn't prevent\n   anyone else who was receiving the traffic from continuing\
    \ to receive\n   the traffic.  With anycast, adding an anycasted node to the routing\n\
    \   system can prevent a previous recipient from continuing to receive\n   traffic\
    \ because it may now be delivered to the new node instead.  As\n   such, if an\
    \ unauthorized anycast node can inject a route into the\n   network, or be resolved\
    \ using ARP/Neighbor Discovery on a link with\n   an authorized anycast node,\
    \ traffic can be diverted thereby\n   triggering DoS or other attacks.  Section\
    \ 6.3 of BCP 126 [RFC4786]\n   provides expanded discussion on \"Service Hijacking\"\
    \ and \"traffic\n   stealing\", and [FanInfocom13] discusses measured instances\
    \ of anycast\n   nodes and \"benign masquerading or hostile hijacking of anycast\n\
    \   services\", by unauthorized nodes.\n   Unlike unicast (but like multicast),\
    \ the desire is to allow\n   applications to cause route injection.  In multicast,\
    \ one often\n   allows arbitrary applications on hosts to join multicast groups,\n\
    \   resulting in multicast routing state.  Trying to apply that same\n   model\
    \ to anycast would present new security concerns, which is why\n   [MAGMA] only\
    \ got so far.  The security concerns include:\n   1.  Allowing route injection\
    \ can cause DOS to a legitimate address\n       owner.\n   2.  Allowing route\
    \ injection consumes routing resources and can hence\n       cause DOS to the\
    \ routing system and impact legitimate\n       communications as a result.\n \
    \  These are two of the core issues that were part of the discussion\n   during\
    \ [RFC1884], the [ANYCASTBOF], and the MAGMA [MAGMA] chartering.\n   Additional\
    \ security considerations are scattered throughout the list\n   of references\
    \ provided herein.\n"
- title: 4.5.  Deployment Considerations
  contents:
  - "4.5.  Deployment Considerations\n   BCP 126 [RFC4786] provides some very solid\
    \ guidance related to\n   operations of anycasted services and, in particular,\
    \ the operations\n   of DNS.\n   This document covers issues associated with the\
    \ architectural\n   implications of anycast.  This document does not address,\
    \ in any\n   depth, the fact that there are deployed services with TCP transport\n\
    \   using anycast today.  Evidence exists to suggest that such practice\n   is\
    \ not \"safe\" in the traditional and architectural sense (as\n   described in\
    \ Section 4.2).  These sorts of issues are indeed\n   relative, and we recognize\
    \ sometimes unpredictability in the routing\n   system beyond the local administrative\
    \ domain can be manageable.\n   That is, despite the inherent architectural problems\
    \ in the use of\n   anycast with stateful transport and connection-oriented protocols,\n\
    \   there is expanding deployment (e.g., for content distribution\n   networks)\
    \ and situations exist where it may make sense (e.g., such as\n   with service\
    \ discovery, short-lived transactions, or in cases where\n   dynamically directing\
    \ traffic to topologically optimal service\n   instances is required).  In general,\
    \ operators should consider the\n   content and references provided herein and\
    \ evaluate the benefits and\n   implications of anycast in their specific environments\
    \ and\n   applications.\n   In addition, (as noted in Section 2.3) the issue of\
    \ whether to\n   withdraw anycast routes when there is a service failure is only\n\
    \   briefly broached in [RFC3258].  The advice given is that routes\n   should\
    \ not be withdrawn, in order to reduce operational complexity.\n   However, the\
    \ issue of route advertisements and service outages\n   deserves greater attention.\n\
    \   There is an inherent trade-off that exists between the operational\n   complexity\
    \ of matching service outages with anycast route\n   withdrawals, and allowing\
    \ anycast routes to persist for services that\n   are no longer available.  [RFC3258]\
    \ maintains that DNS' inherent\n   failure recovery mechanism is sufficient to\
    \ overcome failed nodes,\n   but even this advice enshrines the notion that these\
    \ decisions are\n   both application-specific and subject to the operational needs\
    \ of\n   each deployment.  For example, the routing system plays a larger role\n\
    \   in DNS when services are anycast.  Therefore, operational\n   consideration\
    \ must be given to the fact that relying on anycast for\n   DNS deployment optimizations\
    \ means that there are operational trade-\n   offs related to keeping route advertisements\
    \ (and withdrawals)\n   symmetric with service availability.  For example, in\
    \ order to ensure\n   that the DNS resolvers in a failed anycast instance's catchment\n\
    \   [RFC4786] are able to fail over and reach a non-failed catchment, a\n   route\
    \ withdrawal is almost certainly required.  On the other hand,\n   instability\
    \ of a DNS process that triggers frequent route\n   advertisement and withdrawal\
    \ might result in suppression of\n   legitimate paths to available nodes, e.g.,\
    \ as a result of route flap\n   damping [RFC2439].\n   Rather than prescribing\
    \ advice that attempts to befit all situations,\n   it should simply be recognized\
    \ that when using anycast with network\n   services that provide redundancy or\
    \ resilience capabilities at other\n   layers of the protocol stack, operators\
    \ should carefully consider the\n   optimal layer(s) at which to provide said\
    \ functions.\n   As noted in Section 2.3, use of anycast within a subnet does\
    \ not\n   necessarily suffer from the potential issues with route withdrawals.\n\
    \   As such, use of anycast to reach servers that reside in the same\n   subnet\
    \ can be made more reliable than use of anycast to reach\n   topologically disparate\
    \ server instances.  Within a subnet, however,\n   care must be taken as stated\
    \ in Section 5.4 of [RFC4862], \"Duplicate\n   Address Detection MUST NOT be performed\
    \ on anycast addresses\"; hence,\n   the servers must be configured appropriately.\n"
- title: 5.  Conclusions
  contents:
  - "5.  Conclusions\n   In summary, operators and application vendors alike should\
    \ consider\n   the benefits and implications of anycast in their specific\n  \
    \ environments and applications and also give forward consideration to\n   how\
    \ new network protocols and application functions may take\n   advantage of anycast\
    \ or how they may be negatively impacted if\n   anycasting is employed.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Many thanks to Kurtis Lindqvist for his early review\
    \ and feedback on\n   this document.  Thanks to Brian Carpenter, Alfred Hoenes,\
    \ and Joe\n   Abley for their usual careful review and feedback, as well as Mark\n\
    \   Smith, Lixia Zhang, Stephane Bortzmeyer, Masataka Ohta, and S.\n   Moonesamy\
    \ for their detailed reviews.  Helpful feedback was also\n   received from others\
    \ including Edward Lewis, Jean-Michel Combes,\n   Wolfgang Nagele, Mark Townsley,\
    \ and Abdussalam Baryun.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [ANYCASTBOF]\n              Deering, S., \"IAB\
    \ Anycast BOF Announcement\", October 1999,\n              <http://www.ietf.org/mail-archive/web/ietf/current/\n\
    \              msg11182.html>.\n   [DNS-DISC] Durand, A., Hagino, J., and D. Thaler,\
    \ \"Well known site\n              local unicast addresses for DNS resolver\"\
    , Work in\n              Progress, September 2002.\n   [FanInfocom13]\n      \
    \        Fan, X., Heidemann, J., and R. Govindan, \"Evaluating\n             \
    \ Anycast in the Domain Name System\", Proceedings of the\n              IEEE\
    \ Infocom 2013, April 2013.\n   [IMR9401]  RFC Editor, \"INTERNET MONTHLY REPORT\"\
    , January 1994,\n              <ftp://ftp.rfc-editor.org/in-notes/museum/imr/\n\
    \              imr9401.txt>.\n   [MAGMA]    MAGMA (concluded), \"Multicast and\
    \ Anycast Group Membership\n              (MAGMA)\", April 2006,\n           \
    \   <http://www.ietf.org/wg/concluded/magma>.\n   [RFC0793]  Postel, J., \"Transmission\
    \ Control Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC1035]\
    \  Mockapetris, P., \"Domain names - implementation and\n              specification\"\
    , STD 13, RFC 1035, November 1987.\n   [RFC1546]  Partridge, C., Mendez, T., and\
    \ W. Milliken, \"Host\n              Anycasting Service\", RFC 1546, November\
    \ 1993.\n   [RFC1884]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \              Architecture\", RFC 1884, December 1995.\n   [RFC2030]  Mills,\
    \ D., \"Simple Network Time Protocol (SNTP) Version 4\n              for IPv4,\
    \ IPv6 and OSI\", RFC 2030, October 1996.\n   [RFC2101]  Carpenter, B., Crowcroft,\
    \ J., and Y. Rekhter, \"IPv4\n              Address Behaviour Today\", RFC 2101,\
    \ February 1997.\n   [RFC2373]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n\
    \              Architecture\", RFC 2373, July 1998.\n   [RFC2439]  Villamizar,\
    \ C., Chandra, R., and R. Govindan, \"BGP Route\n              Flap Damping\"\
    , RFC 2439, November 1998.\n   [RFC2526]  Johnson, D. and S. Deering, \"Reserved\
    \ IPv6 Subnet Anycast\n              Addresses\", RFC 2526, March 1999.\n   [RFC2893]\
    \  Gilligan, R. and E. Nordmark, \"Transition Mechanisms for\n              IPv6\
    \ Hosts and Routers\", RFC 2893, August 2000.\n   [RFC2902]  Deering, S., Hares,\
    \ S., Perkins, C., and R. Perlman,\n              \"Overview of the 1998 IAB Routing\
    \ Workshop\", RFC 2902,\n              August 2000.\n   [RFC2991]  Thaler, D.\
    \ and C. Hopps, \"Multipath Issues in Unicast and\n              Multicast Next-Hop\
    \ Selection\", RFC 2991, November 2000.\n   [RFC3056]  Carpenter, B. and K. Moore,\
    \ \"Connection of IPv6 Domains\n              via IPv4 Clouds\", RFC 3056, February\
    \ 2001.\n   [RFC3068]  Huitema, C., \"An Anycast Prefix for 6to4 Relay Routers\"\
    ,\n              RFC 3068, June 2001.\n   [RFC3258]  Hardie, T., \"Distributing\
    \ Authoritative Name Servers via\n              Shared Unicast Addresses\", RFC\
    \ 3258, April 2002.\n   [RFC3513]  Hinden, R. and S. Deering, \"Internet Protocol\
    \ Version 6\n              (IPv6) Addressing Architecture\", RFC 3513, April 2003.\n\
    \   [RFC3775]  Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support\n  \
    \            in IPv6\", RFC 3775, June 2004.\n   [RFC3882]  Turk, D., \"Configuring\
    \ BGP to Block Denial-of-Service\n              Attacks\", RFC 3882, September\
    \ 2004.\n   [RFC3964]  Savola, P. and C. Patel, \"Security Considerations for\n\
    \              6to4\", RFC 3964, December 2004.\n   [RFC4033]  Arends, R., Austein,\
    \ R., Larson, M., Massey, D., and S.\n              Rose, \"DNS Security Introduction\
    \ and Requirements\", RFC\n              4033, March 2005.\n   [RFC4085]  Plonka,\
    \ D., \"Embedding Globally-Routable Internet\n              Addresses Considered\
    \ Harmful\", BCP 105, RFC 4085, June\n              2005.\n   [RFC4213]  Nordmark,\
    \ E. and R. Gilligan, \"Basic Transition Mechanisms\n              for IPv6 Hosts\
    \ and Routers\", RFC 4213, October 2005.\n   [RFC4291]  Hinden, R. and S. Deering,\
    \ \"IP Version 6 Addressing\n              Architecture\", RFC 4291, February\
    \ 2006.\n   [RFC4330]  Mills, D., \"Simple Network Time Protocol (SNTP) Version\
    \ 4\n              for IPv4, IPv6 and OSI\", RFC 4330, January 2006.\n   [RFC4339]\
    \  Jeong, J., \"IPv6 Host Configuration of DNS Server\n              Information\
    \ Approaches\", RFC 4339, February 2006.\n   [RFC4610]  Farinacci, D. and Y. Cai,\
    \ \"Anycast-RP Using Protocol\n              Independent Multicast (PIM)\", RFC\
    \ 4610, August 2006.\n   [RFC4732]  Handley, M., Rescorla, E., and IAB, \"Internet\
    \ Denial-of-\n              Service Considerations\", RFC 4732, December 2006.\n\
    \   [RFC4778]  Kaeo, M., \"Operational Security Current Practices in\n       \
    \       Internet Service Provider Environments\", RFC 4778, January\n        \
    \      2007.\n   [RFC4786]  Abley, J. and K. Lindqvist, \"Operation of Anycast\n\
    \              Services\", BCP 126, RFC 4786, December 2006.\n   [RFC4861]  Narten,\
    \ T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor Discovery\
    \ for IP version 6 (IPv6)\", RFC 4861,\n              September 2007.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862, September 2007.\n   [RFC4892]  Woolf, S. and\
    \ D. Conrad, \"Requirements for a Mechanism\n              Identifying a Name\
    \ Server Instance\", RFC 4892, June 2007.\n   [RFC4924]  Aboba, B. and E. Davies,\
    \ \"Reflections on Internet\n              Transparency\", RFC 4924, July 2007.\n\
    \   [RFC4942]  Davies, E., Krishnan, S., and P. Savola, \"IPv6 Transition/\n \
    \             Co-existence Security Considerations\", RFC 4942, September\n  \
    \            2007.\n   [RFC5001]  Austein, R., \"DNS Name Server Identifier (NSID)\
    \ Option\",\n              RFC 5001, August 2007.\n   [RFC5905]  Mills, D., Martin,\
    \ J., Burbank, J., and W. Kasch, \"Network\n              Time Protocol Version\
    \ 4: Protocol and Algorithms\n              Specification\", RFC 5905, June 2010.\n\
    \   [RFC5909]  Combes, J-M., Krishnan, S., and G. Daley, \"Securing\n        \
    \      Neighbor Discovery Proxy: Problem Statement\", RFC 5909,\n            \
    \  July 2010.\n   [RFC6071]  Frankel, S. and S. Krishnan, \"IP Security (IPsec)\
    \ and\n              Internet Key Exchange (IKE) Document Roadmap\", RFC 6071,\n\
    \              February 2011.\n   [RFC6275]  Perkins, C., Johnson, D., and J.\
    \ Arkko, \"Mobility Support\n              in IPv6\", RFC 6275, July 2011.\n \
    \  [RFC6382]  McPherson, D., Donnelly, R., and F. Scalzo, \"Unique Origin\n  \
    \            Autonomous System Numbers (ASNs) per Node for Globally\n        \
    \      Anycasted Services\", BCP 169, RFC 6382, October 2011.\n   [RFC6480]  Lepinski,\
    \ M. and S. Kent, \"An Infrastructure to Support\n              Secure Internet\
    \ Routing\", RFC 6480, February 2012.\n   [RSSAC29]  \"RSSAC 29 Meeting Minutes\"\
    , December 2007,\n              <http://www.icann.org/en/groups/rssac/meetings/\n\
    \              rssac-29-en.pdf>.\n"
- title: Appendix A.  IAB Members at the Time of Approval
  contents:
  - "Appendix A.  IAB Members at the Time of Approval\n   Bernard Aboba\n   Jari Arkko\n\
    \   Marc Blanchet\n   Ross Callon\n   Alissa Cooper\n   Joel Halpern\n   Russ\
    \ Housley\n   Eliot Lear\n   Xing Li\n   Erik Nordmark\n   Andrew Sullivan\n \
    \  Dave Thaler\n   Hannes Tschofenig\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Danny McPherson\n   Verisign, Inc.\n   12061 Bluemont\
    \ Way\n   Reston, VA\n   USA\n   EMail: dmcpherson@verisign.com\n   Dave Oran\n\
    \   Cisco Systems\n   USA\n   EMail: oran@cisco.com\n   Dave Thaler\n   Microsoft\
    \ Corporation\n   One Microsoft Way\n   Redmond, WA\n   USA\n   EMail: dthaler@microsoft.com\n\
    \   Eric Osterweil\n   Verisign, Inc.\n   12061 Bluemont Way\n   Reston, VA\n\
    \   USA\n   EMail: eosterweil@verisign.com\n"
