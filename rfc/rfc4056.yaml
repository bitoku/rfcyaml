- contents:
  - "               Use of the RSASSA-PSS Signature Algorithm\n                 in
    Cryptographic Message Syntax (CMS)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies the conventions for using the RSASSA-PSS
    (RSA\n   Probabilistic Signature Scheme) digital signature algorithm with the\n
    \  Cryptographic Message Syntax (CMS).\n"
  title: Abstract
- contents:
  - "1.  Overview\n   This document specifies the conventions for using the RSA\n
    \  Probabilistic Signature Scheme (RSASSA-PSS) [P1v2.1] digital\n   signature
    algorithm with the Cryptographic Message Syntax [CMS]\n   signed-data content
    type.\n   CMS values are generated using ASN.1 [X.208-88], using the Basic\n   Encoding
    Rules (BER) [X.209-88] and the Distinguished Encoding Rules\n   (DER) [X.509-88].\n
    \  This document is written to be used in conjunction with RFC 4055\n   [RSA-ALGS].
    \ All of the ASN.1 structures referenced in this document\n   are defined in RFC
    4055.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL
    NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [STDWORDS].\n"
  - contents:
    - "1.1.  PSS Algorithm\n   Although there are no known defects with the PKCS #1
      v1.5 [P1v1.5]\n   signature algorithm, RSASSA-PSS [P1v2.1] was developed in
      an effort\n   to have more mathematically provable security.  PKCS #1 v1.5\n
      \  signatures were developed in an ad hoc manner; RSASSA-PSS was\n   developed
      based on mathematical foundations.\n"
    title: 1.1.  PSS Algorithm
  title: 1.  Overview
- contents:
  - '2.  Algorithm Identifiers and Parameters

    '
  - contents:
    - "2.1.  Certificate Identifiers\n   The RSASSA-PSS signature algorithm is defined
      in RFC 3447 [P1v2.1].\n   Conventions for encoding the public key are defined
      in RFC 4055\n   [RSA-ALGS].\n   Two algorithm identifiers for RSA subject public
      keys in certificates\n   are used.  These are:\n      rsaEncryption OBJECT IDENTIFIER
      ::= { pkcs-1 1 }\n   and\n      id-RSASSA-PSS OBJECT IDENTIFIER ::= { pkcs-1
      10 }\n   When the rsaEncryption algorithm identifier is used for a public key,\n
      \  the AlgorithmIdentifier parameters field MUST contain NULL.  Complete\n   details
      can be found in [RSA-ALGS].\n   When the id-RSASSA-PSS algorithm identifier
      is used for a public key,\n   the AlgorithmIdentifier parameters field MUST
      either be absent or\n   contain RSASSA-PSS-params. Again, complete details can
      be found in\n   [RSA-ALGS].\n   In both cases, the RSA public key, which is
      composed of a modulus and\n   a public exponent, MUST be encoded using the RSAPublicKey
      type.  The\n   output of this encoding is carried in the certificate subject
      public\n   key.\n         RSAPublicKey ::= SEQUENCE {\n            modulus INTEGER,
      -- n\n            publicExponent INTEGER } -- e\n"
    title: 2.1.  Certificate Identifiers
  - contents:
    - "2.2.  Signature Identifiers\n   The algorithm identifier for RSASAA-PSS signatures
      is:\n      id-RSASSA-PSS OBJECT IDENTIFIER ::= {pkcs-1 10 }\n   When the id-RSASSA-PSS
      algorithm identifier is used for a signature,\n   the AlgorithmIdentifier parameters
      field MUST contain RSASSA-PSS-\n   params.  Information about RSASSA-PSS-params
      can be found in [RSA-\n   ALGS].\n   When signing, the RSA algorithm generates
      a single value, and that\n   value is used directly as the signature value.\n"
    title: 2.2.  Signature Identifiers
  title: 2.  Algorithm Identifiers and Parameters
- contents:
  - "3.  Signed-data Conventions\n   digestAlgorithms SHOULD contain the one-way hash
    function used to\n   compute the message digest on the eContent value.\n   The
    same one-way hash function SHOULD be used for computing the\n   message digest
    on both the eContent and the signedAttributes value if\n   signedAttributes exist.\n
    \  The same one-way hash function MUST be used for computing the message\n   digest
    on the signedAttributes and as the hashAlgorithm in the RSA-\n   PSS-params structure.\n
    \  signatureAlgorithm MUST contain id-RSASSA-PSS.  The algorithm\n   parameters
    field MUST contain RSASSA-PSS-params.\n   signature contains the single value
    resulting from the signing\n   operation.\n   If the subjectPublicKeyInfo algorithm
    identifier for the public key\n   in the certificate is id-RSASSA-PSS and the
    parameters field is\n   present, the following additional steps MUST be done as
    part of\n   signature validation:\n   1.  The hashAlgorithm field in the certificate\n
    \      subjectPublicKey.algorithm parameters and the signatureAlgorithm\n       parameters
    MUST be the same.\n   2.  The maskGenAlgorithm field in the certificate\n       subjectPublicKey.algorithm
    parameters and the signatureAlgorithm\n       parameters MUST be the same.\n   3.
    \ The saltLength in the signatureAlgorithm parameters MUST be\n       greater
    or equal to the saltLength in the certificate\n       subjectPublicKey.algorithm
    parameters.\n   4.  The trailerField in the certificate subjectPublicKey.algorithm\n
    \      parameters and signatureAlgorithm parameters MUST be the same.\n   In doing
    the above comparisons, default values are considered to be\n   the same as extant
    values.  If any of the above four steps is not\n   true, the signature checking
    algorithm MUST fail validation.\n"
  title: 3.  Signed-data Conventions
- contents:
  - "4.  Security Considerations\n   Implementations must protect the RSA private
    key.  Compromise of the\n   RSA private key may result in the ability to forge
    signatures.\n   The generation of RSA private key relies on random numbers.  The
    use\n   of inadequate pseudo-random number generators (PRNGs) to generate\n   these
    values can result in little or no security.  An attacker may\n   find it much
    easier to reproduce the PRNG environment that produced\n   the keys, searching
    the resulting small set of possibilities, rather\n   than brute force searching
    the whole key space.  The generation of\n   quality random numbers is difficult.
    \ RFC 1750 [RANDOM] offers\n   important guidance in this area.\n   Using the
    same private key for different algorithms has the potential\n   of allowing an
    attacker to get extra information about the key.  It\n   is strongly suggested
    that the same key not be used for both the PKCS\n   #1 v1.5 and RSASSA-PSS signature
    algorithms.\n   When computing signatures, the same hash function should be used
    for\n   all operations.  This reduces the number of failure points in the\n   signature
    process.\n   The parameter checking procedures outlined in section 3 are of\n
    \  special importance.  It is possible to forge signatures by changing\n   (especially
    to weaker values) these parameter values.  Signers using\n   this algorithm should
    take care that only one set of parameter values\n   is used as this decreases
    the possibility of leaking information.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  Normative References\n   [CMS]       Housley, R., \"Cryptographic Message
    Syntax (CMS)\", RFC\n               3852, July 2004.\n   [P1v2.1]    Jonsson,
    J. and B. Kaliski, \"Public-Key Cryptography\n               Standards (PKCS)
    #1: RSA Cryptography Specifications\n               Version 2.1\", RFC 3447, February
    2003.\n   [RSA-ALGS]  Schaad, J., Kaliski, B., and R. Housley, \"Additional\n
    \              Algorithms and Identifiers for RSA Cryptography for use\n               in
    the Internet X.509 Public Key Infrastructure\n               Certificate and Certificate
    Revocation List (CRL)\n               Profile\", RFC 4055, June 2005.\n   [STDWORDS]
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement
    Levels\", BCP 14, RFC 2119, March 1997.\n   [X.208-88]  CCITT Recommendation X.208:
    Specification of Abstract\n               Syntax Notation One (ASN.1), 1998.\n
    \  [X.209-88]  CCITT Recommendation X.209: Specification of Basic\n               Encoding
    Rules for Abstract Syntax Notation One (ASN.1),\n               1988.\n   [X.509-88]
    \ CCITT Recommendation X.509: The Directory Authentication\n               Framework,
    1988.\n"
  title: 5.  Normative References
- contents:
  - "6.  Informative References\n   [P1v1.5]    Kaliski, B., \"PKCS #1: RSA Encryption
    Version 1.5\", RFC\n               2313, March 1998.\n   [RANDOM]    Eastlake
    3rd, D., Crocker, S., and J. Schiller,\n               \"Randomness Recommendations
    for Security\", RFC 1750,\n               December 1994.\n"
  title: 6.  Informative References
- contents:
  - "Author' Address\n   Jim Schaad\n   Soaring Hawk Consulting\n   PO Box 675\n   Gold
    Bar, WA 98251\n   EMail: jimsch@exmsft.com\n"
  title: Author' Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
