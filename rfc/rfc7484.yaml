- title: __initial_text__
  contents:
  - '       Finding the Authoritative Registration Data (RDAP) Service

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a method to find which Registration Data\n\
    \   Access Protocol (RDAP) server is authoritative to answer queries for\n   a\
    \ requested scope, such as domain names, IP addresses, or Autonomous\n   System\
    \ numbers.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7484.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . .\
    \ . . . .   3\n   3.  Structure of the RDAP Bootstrap Service Registries  . .\
    \ . . .   3\n   4.  Bootstrap Service Registry for Domain Name Space  . . . .\
    \ . .   5\n   5.  Bootstrap Service Registries for Internet Numbers . . . . .\
    \ .   6\n     5.1.  Bootstrap Service Registry for IPv4 Address Space . . . .\
    \   7\n     5.2.  Bootstrap Service Registry for IPv6 Address Space . . . .  \
    \ 8\n     5.3.  Bootstrap Service Registry for AS Number Space  . . . . .   9\n\
    \   6.  Entity  . . . . . . . . . . . . . . . . . . . . . . . . . . .  10\n  \
    \ 7.  Non-existent Entries or RDAP URL Values . . . . . . . . . . .  10\n   8.\
    \  Deployment and Implementation Considerations  . . . . . . . .  10\n   9.  Limitations\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  11\n   10. Formal Definition\
    \ . . . . . . . . . . . . . . . . . . . . . .  11\n     10.1.  Imported JSON Terms\
    \  . . . . . . . . . . . . . . . . . .  11\n     10.2.  Registry Syntax  . . .\
    \ . . . . . . . . . . . . . . . . .  12\n   11. Security Considerations . . .\
    \ . . . . . . . . . . . . . . . .  13\n   12. IANA Considerations . . . . . .\
    \ . . . . . . . . . . . . . . .  13\n     12.1.  Bootstrap Service Registry for\
    \ IPv4 Address Space  . . .  14\n     12.2.  Bootstrap Service Registry for IPv6\
    \ Address Space  . . .  14\n     12.3.  Bootstrap Service Registry for AS Number\
    \ Space . . . . .  14\n     12.4.  Bootstrap Service Registry for Domain Name\
    \ Space . . . .  15\n   13. References  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  15\n     13.1.  Normative References . . . . . . . . . . . . .\
    \ . . . . .  15\n     13.2.  Informative References . . . . . . . . . . . . .\
    \ . . . .  15\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  17\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  17\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Querying and retrieving registration data from registries\
    \ are defined\n   in Registration Data Access Protocol (RDAP) [RFC7480] [RFC7482]\n\
    \   [RFC7483].  These documents do not specify where to send the queries.\n  \
    \ This document specifies a method to find which server is\n   authoritative to\
    \ answer queries for the requested scope.\n   Top-Level Domains (TLDs), Autonomous\
    \ System (AS) numbers, and network\n   blocks are delegated by IANA to Internet\
    \ registries such as TLD\n   registries and Regional Internet Registries (RIRs)\
    \ that then issue\n   further delegations and maintain information about them.\
    \  Thus, the\n   bootstrap information needed by RDAP clients is best generated\
    \ from\n   data and processes already maintained by IANA; the relevant\n   registries\
    \ already exist at [ipv4reg], [ipv6reg], [asreg], and\n   [domainreg].\n   Per\
    \ this document, IANA has created new registries based on a JSON\n   format specified\
    \ in this document, herein named RDAP Bootstrap\n   Service Registries.  These\
    \ new registries are based on the existing\n   entries of the above mentioned\
    \ registries.  An RDAP client fetches\n   the RDAP Bootstrap Service Registries,\
    \ extracts the data, and then\n   performs a match with the query data to find\
    \ the authoritative\n   registration data server and appropriate query base URL.\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Structure of the RDAP Bootstrap Service Registries
  contents:
  - "3.  Structure of the RDAP Bootstrap Service Registries\n   The RDAP Bootstrap\
    \ Service Registries, as specified in Section 12\n   below, have been made available\
    \ as JSON [RFC7159] objects, which can\n   be retrieved via HTTP from locations\
    \ specified by IANA.  The JSON\n   object for each registry contains a series\
    \ of members containing\n   metadata about the registry such as a version identifier,\
    \ a timestamp\n   of the publication date of the registry, and a description.\n\
    \   Additionally, a \"services\" member contains the registry items\n   themselves,\
    \ as an array.  Each item of the array contains a second-\n   level array, with\
    \ two elements, each of them being a third-level\n   array.\n   Each element of\
    \ the Services Array is a second-level array with two\n   elements: in order,\
    \ an Entry Array and a Service URL Array.\n   The Entry Array contains all entries\
    \ that have the same set of base\n   RDAP URLs.  The Service URL Array contains\
    \ the list of base RDAP URLs\n   usable for the entries found in the Entry Array.\
    \  Elements within\n   these two arrays are not sorted in any way.\n   An example\
    \ structure of the JSON output of a RDAP Bootstrap Service\n   Registry is illustrated:\n\
    \   {\n       \"version\": \"1.0\",\n       \"publication\": \"YYYY-MM-DDTHH:MM:SSZ\"\
    ,\n       \"description\": \"Some text\",\n       \"services\": [\n         [\n\
    \           [\"entry1\", \"entry2\", \"entry3\"],\n           [\n            \
    \ \"https://registry.example.com/myrdap/\",\n             \"http://registry.example.com/myrdap/\"\
    \n           ]\n         ],\n         [\n           [\"entry4\"],\n          \
    \ [\n             \"http://example.org/\"\n           ]\n         ]\n       ]\n\
    \   }\n   The formal syntax is described in Section 10.\n   The \"version\" corresponds\
    \ to the format version of the registry.\n   This specification defines version\
    \ \"1.0\".\n   The syntax of the \"publication\" value conforms to the Internet\
    \ date/\n   time format [RFC3339].  The value is the latest update date of the\n\
    \   registry by IANA.\n   The optional \"description\" string can contain a comment\
    \ regarding the\n   content of the bootstrap object.\n   Per [RFC7258], in each\
    \ array of base RDAP URLs, the secure versions\n   of the transport protocol SHOULD\
    \ be preferred and tried first.  For\n   example, if the base RDAP URLs array\
    \ contains both HTTPS and HTTP\n   URLs, the bootstrap client SHOULD try the HTTPS\
    \ version first.\n   Base RDAP URLs MUST have a trailing \"/\" character because\
    \ they are\n   concatenated to the various segments defined in [RFC7482].\n  \
    \ JSON names MUST follow the format recommendations of [RFC7480].  Any\n   unrecognized\
    \ JSON object properties or values MUST be ignored by\n   implementations.\n \
    \  Internationalized Domain Name labels used as entries or base RDAP\n   URLs\
    \ in the registries defined in this document MUST be only\n   represented using\
    \ their A-label form as defined in [RFC5890].\n   All Domain Name labels used\
    \ as entries or base RDAP URLs in the\n   registries defined in this document\
    \ MUST be only represented in\n   lowercase.\n"
- title: 4.  Bootstrap Service Registry for Domain Name Space
  contents:
  - "4.  Bootstrap Service Registry for Domain Name Space\n   The JSON output of this\
    \ registry contains domain label entries\n   attached to the root, grouped by\
    \ base RDAP URLs, as shown in this\n   example.\n   {\n       \"version\": \"\
    1.0\",\n       \"publication\": \"YYYY-MM-DDTHH:MM:SSZ\",\n       \"description\"\
    : \"Some text\",\n       \"services\": [\n         [\n           [\"net\", \"\
    com\"],\n           [\n             \"https://registry.example.com/myrdap/\"\n\
    \           ]\n         ],\n         [\n           [\"org\", \"mytld\"],\n   \
    \        [\n             \"http://example.org/\"\n           ]\n         ],\n\
    \         [\n           [\"xn--zckzah\"],\n           [\n             \"https://example.net/rdapxn--zckzah/\"\
    ,\n             \"http://example.net/rdapxn--zckzah/\"\n           ]\n       \
    \  ]\n       ]\n   }\n   The domain name's authoritative registration data service\
    \ is found by\n   doing the label-wise longest match of the target domain name\
    \ with the\n   domain values in the Entry Arrays in the IANA Bootstrap Service\n\
    \   Registry for Domain Name Space.  The match is done per label, from\n   right\
    \ to left.  If the longest match results in multiple entries,\n   then those entries\
    \ are considered equivalent.  The values contained\n   in the Service URL Array\
    \ of the matching second-level array are the\n   valid base RDAP URLs as described\
    \ in [RFC7482].\n   For example, a domain RDAP query for a.b.example.com matches\
    \ the com\n   entry in one of the arrays of the registry.  The base RDAP URL for\n\
    \   this query is then taken from the second element of the array, which\n   is\
    \ an array of base RDAP URLs valid for this entry.  The client\n   chooses one\
    \ of the base URLs from this array; in this example, it\n   chooses the only one\
    \ available, \"https://registry.example.com/\n   myrdap/\".  The segment specified\
    \ in [RFC7482] is then appended to the\n   base URL to complete the query.  The\
    \ complete query is then\n   \"https://registry.example.com/myrdap/domain/a.b.example.com\"\
    .\n   If a domain RDAP query for a.b.example.com matches both com and\n   example.com\
    \ entries in the registry, then the longest match applies\n   and the example.com\
    \ entry is used by the client.\n   If the registry contains entries such as com\
    \ and goodexample.com,\n   then a domain RDAP query for example.com only matches\
    \ the com entry\n   because matching is done on a per-label basis.\n   The entry\
    \ for the root of the domain name space is specified as \"\".\n"
- title: 5.  Bootstrap Service Registries for Internet Numbers
  contents:
  - "5.  Bootstrap Service Registries for Internet Numbers\n   This section discusses\
    \ IPv4 and IPv6 address space and Autonomous\n   System numbers.\n   For IP address\
    \ space, the authoritative registration data service is\n   found by doing a longest\
    \ match of the target address with the values\n   of the arrays in the corresponding\
    \ RDAP Bootstrap Service Registry\n   for Address Space.  The longest match is\
    \ done the same way as for\n   routing: the addresses are converted in binary\
    \ form and then the\n   binary strings are compared to find the longest match\
    \ up to the\n   specified prefix length.  The values contained in the second element\n\
    \   of the array are the base RDAP URLs as described in [RFC7482].  The\n   longest\
    \ match method enables covering prefixes of a larger address\n   space pointing\
    \ to one base RDAP URL while more specific prefixes\n   within the covering prefix\
    \ are being served by another base RDAP URL.\n"
- title: 5.1.  Bootstrap Service Registry for IPv4 Address Space
  contents:
  - "5.1.  Bootstrap Service Registry for IPv4 Address Space\n   The JSON output of\
    \ this registry contains IPv4 prefix entries,\n   specified in Classless Inter-domain\
    \ Routing (CIDR) format [RFC4632]\n   and grouped by RDAP URLs, as shown in this\
    \ example.\n   {\n       \"version\": \"1.0\",\n       \"publication\": \"2024-01-07T10:11:12Z\"\
    ,\n       \"description\": \"RDAP Bootstrap file for example registries.\",\n\
    \       \"services\": [\n         [\n           [\"1.0.0.0/8\", \"192.0.0.0/8\"\
    ],\n           [\n             \"https://rir1.example.com/myrdap/\"\n        \
    \   ]\n         ],\n         [\n           [\"28.2.0.0/16\", \"192.0.2.0/24\"\
    ],\n           [\n             \"http://example.org/\"\n           ]\n       \
    \  ],\n         [\n           [\"28.3.0.0/16\"],\n           [\n             \"\
    https://example.net/rdaprir2/\",\n             \"http://example.net/rdaprir2/\"\
    \n           ]\n         ]\n       ]\n   }\n   For example, a query for \"192.0.2.1/25\"\
    \ matches the \"192.0.0.0/8\"\n   entry and the \"192.0.2.0/24\" entry in the\
    \ example registry above.\n   The latter is chosen by the client given the longest\
    \ match.  The base\n   RDAP URL for this query is then taken from the second element\
    \ of the\n   array, which is an array of base RDAP URLs valid for this entry.\
    \  The\n   client chooses one of the base URLs from this array; in this example,\n\
    \   it chooses the only one available, \"http://example.org/\".  The\n   {resource}\
    \ specified in [RFC7482] is then appended to the base URL to\n   complete the\
    \ query.  The complete query is then \"https://example.org/\n   ip/192.0.2.1/25\"\
    .\n"
- title: 5.2.  Bootstrap Service Registry for IPv6 Address Space
  contents:
  - "5.2.  Bootstrap Service Registry for IPv6 Address Space\n   The JSON output of\
    \ this registry contains IPv6 prefix entries, using\n   [RFC4291] text representation\
    \ of the address prefixes format, grouped\n   by base RDAP URLs, as shown in this\
    \ example.\n   {\n       \"version\": \"1.0\",\n       \"publication\": \"2024-01-07T10:11:12Z\"\
    ,\n       \"description\": \"RDAP Bootstrap file for example registries.\",\n\
    \       \"services\": [\n         [\n           [\"2001:0200::/23\", \"2001:db8::/32\"\
    ],\n           [\n             \"https://rir2.example.com/myrdap/\"\n        \
    \   ]\n         ],\n         [\n           [\"2600::/16\", \"2100:ffff::/32\"\
    ],\n           [\n             \"http://example.org/\"\n           ]\n       \
    \  ],\n         [\n           [\"2001:0200:1000::/36\"],\n           [\n     \
    \        \"https://example.net/rdaprir2/\",\n             \"http://example.net/rdaprir2/\"\
    \n           ]\n         ]\n       ]\n   }\n   For example, a query for \"2001:0200:1000::/48\"\
    \ matches the\n   \"2001:0200::/23\" entry and the \"2001:0200:1000::/36\" entry\
    \ in the\n   example registry above.  The latter is chosen by the client given\
    \ the\n   longest match.  The base RDAP URL for this query is then taken from\n\
    \   the second element of the array, which is an array of base RDAP URLs\n   valid\
    \ for this entry.  The client chooses one of the base URLs from\n   this array;\
    \ in this example, it chooses \"https://example.net/\n   rdaprir2/\" because it's\
    \ the secure version of the protocol.  The\n   segment specified in [RFC7482]\
    \ is then appended to the base URL to\n   complete the query.  The complete query\
    \ is, therefore,\n   \"https://example.net/rdaprir2/ip/2001:0200:1000::/48\".\
    \  If the target\n   RDAP server does not answer, the client can then use another\
    \ URL\n   prefix from the array.\n"
- title: 5.3.  Bootstrap Service Registry for AS Number Space
  contents:
  - "5.3.  Bootstrap Service Registry for AS Number Space\n   The JSON output of this\
    \ contains Autonomous Systems number ranges\n   entries, grouped by base RDAP\
    \ URLs, as shown in this example.  The\n   Entry Array is an array containing\
    \ the list of AS number ranges\n   served by the base RDAP URLs found in the second\
    \ element.  The array\n   always contains two AS numbers represented in decimal\
    \ format that\n   represents the range of AS numbers between the two elements\
    \ of the\n   array.  A single AS number is represented as a range of two identical\n\
    \   AS numbers.\n   {\n       \"version\": \"1.0\",\n       \"publication\": \"\
    2024-01-07T10:11:12Z\",\n       \"description\": \"RDAP Bootstrap file for example\
    \ registries.\",\n       \"services\": [\n         [\n           [\"2045-2045\"\
    ],\n           [\n             \"https://rir3.example.com/myrdap/\"\n        \
    \   ]\n         ],\n         [\n           [\"10000-12000\", \"300000-400000\"\
    ],\n           [\n             \"http://example.org/\"\n           ]\n       \
    \  ],\n         [\n           [\"64512-65534\"],\n           [\n             \"\
    http://example.net/rdaprir2/\",\n             \"https://example.net/rdaprir2/\"\
    \n           ]\n         ]\n       ]\n   }\n   For example, a query for AS 65411\
    \ matches the 64512-65534 entry in\n   the example registry above.  The base RDAP\
    \ URL for this query is then\n   taken from the second element of the array, which\
    \ is an array of base\n   RDAP URLs valid for this entry.  The client chooses\
    \ one of the base\n   URLs from this array; in this example, it chooses\n   \"\
    https://example.net/rdaprir2/\".  The segment specified in [RFC7482]\n   is then\
    \ appended to the base URL to complete the query.  The complete\n   query is,\
    \ therefore, \"https://example.net/rdaprir2/autnum/65411\".  If\n   the server\
    \ does not answer, the client can then use another URL\n   prefix from the array.\n"
- title: 6.  Entity
  contents:
  - "6.  Entity\n   Entities (such as contacts, registrants, or registrars) can be\n\
    \   queried by handle as described in [RFC7482].  Since there is no\n   global\
    \ namespace for entities, this document does not describe how to\n   find the\
    \ authoritative RDAP server for entities.  However, it is\n   possible that, if\
    \ the entity identifier was received from a previous\n   query, the same RDAP\
    \ server could be queried for that entity, or the\n   entity identifier itself\
    \ is a fully referenced URL that can be\n   queried.\n"
- title: 7.  Non-existent Entries or RDAP URL Values
  contents:
  - "7.  Non-existent Entries or RDAP URL Values\n   The registries may not contain\
    \ the requested value.  In these cases,\n   there is no known RDAP server for\
    \ that requested value, and the\n   client SHOULD provide an appropriate error\
    \ message to the user.\n"
- title: 8.  Deployment and Implementation Considerations
  contents:
  - "8.  Deployment and Implementation Considerations\n   This method relies on the\
    \ fact that RDAP clients are fetching the\n   IANA registries to then find the\
    \ servers locally.  Clients SHOULD NOT\n   fetch the registry on every RDAP request.\
    \  Clients SHOULD cache the\n   registry, but use underlying protocol signaling,\
    \ such as the HTTP\n   Expires header field [RFC7234], to identify when it is\
    \ time to\n   refresh the cached registry.\n   If the query data does not match\
    \ any entry in the client cached\n   registry, then the client may implement various\
    \ methods, such as the\n   following:\n   o  In the case of a domain object, the\
    \ client may first query the DNS\n      to see if the respective entry has been\
    \ delegated or if it is\n      mistyped information by the user.  The DNS query\
    \ could be to fetch\n      the NS records for the TLD domain.  If the DNS answer\
    \ is negative,\n      then there is no need to fetch the new version of the registry.\n\
    \      However, if the DNS answer is positive, this may mean that the\n      currently\
    \ cached registry is no longer current.  The client could\n      then fetch the\
    \ registry, parse, and then do the normal matching as\n      specified above.\
    \  This method may not work for all types of RDAP\n      objects.\n   o  If the\
    \ client knows the existence of an RDAP aggregator or\n      redirector and its\
    \ associated base URL, and trusts that service,\n      then it could send the\
    \ query to the redirector, which would\n      redirect the client if it knows\
    \ the authoritative server that\n      client has not found.\n   Some authorities\
    \ of registration data may work together on sharing\n   their information for\
    \ a common service, including mutual redirection\n   [REDIRECT-RDAP].\n   When\
    \ a new object is allocated, such as a new AS range, a new TLD, or\n   a new IP\
    \ address range, there is no guarantee that this new object\n   will have an entry\
    \ in the corresponding bootstrap RDAP registry,\n   since the setup of the RDAP\
    \ server for this new entry may become live\n   and registered later.  Therefore,\
    \ the clients should expect that even\n   if an object, such as TLD, IP address\
    \ range, or AS range is\n   allocated, the existence of the entry in the corresponding\
    \ bootstrap\n   registry is not guaranteed.\n"
- title: 9.  Limitations
  contents:
  - "9.  Limitations\n   This method does not provide a direct way to find authoritative\
    \ RDAP\n   servers for any other objects than the ones described in this\n   document.\
    \  In particular, the following objects are not bootstrapped\n   with the method\
    \ described in this document:\n   o  entities\n   o  queries using search patterns\
    \ that do not contain a terminating\n      string that matches some entries in\
    \ the registries\n   o  nameservers\n   o  help\n"
- title: 10.  Formal Definition
  contents:
  - "10.  Formal Definition\n   This section is the formal definition of the registries.\
    \  The\n   structure of JSON objects and arrays using a set of primitive\n   elements\
    \ is defined in [RFC7159].  Those elements are used to\n   describe the JSON structure\
    \ of the registries.\n"
- title: 10.1.  Imported JSON Terms
  contents:
  - "10.1.  Imported JSON Terms\n   o  OBJECT: a JSON object, defined in Section 4\
    \ of [RFC7159]\n   o  MEMBER: a member of a JSON object, defined in Section 4\
    \ of\n      [RFC7159]\n   o  MEMBER-NAME: the name of a MEMBER, defined as a \"\
    string\" in\n      Section 4 of [RFC7159]\n   o  MEMBER-VALUE: the value of a\
    \ MEMBER, defined as a \"value\" in\n      Section 4 of [RFC7159]\n   o  ARRAY:\
    \ an array, defined in Section 5 of [RFC7159]\n   o  ARRAY-VALUE: an element of\
    \ an ARRAY, defined in Section 5 of\n      [RFC7159]\n   o  STRING: a \"string\"\
    , as defined in Section 7 of [RFC7159]\n"
- title: 10.2.  Registry Syntax
  contents:
  - "10.2.  Registry Syntax\n   Using the above terms for the JSON structures, the\
    \ syntax of a\n   registry is defined as follows:\n   o  rdap-bootstrap-registry:\
    \ an OBJECT containing a MEMBER version and\n      a MEMBER publication, an optional\
    \ MEMBER description, and a MEMBER\n      services-list\n   o  version: a MEMBER\
    \ with MEMBER-NAME \"version\" and MEMBER-VALUE a\n      STRING\n   o  publication:\
    \ a MEMBER with MEMBER-NAME \"publication\" and MEMBER-\n      VALUE a STRING\n\
    \   o  description: a MEMBER with MEMBER-NAME \"description\" and MEMBER-\n  \
    \    VALUE a STRING\n   o  services-list: a MEMBER with MEMBER-NAME \"services\"\
    \ and MEMBER-\n      VALUE a services-array\n   o  services-array: an ARRAY, where\
    \ each ARRAY-VALUE is a service\n   o  service: an ARRAY of 2 elements, where\
    \ the first ARRAY-VALUE is a\n      an entry-list and the second ARRAY-VALUE is\
    \ a service-uri-list\n   o  entry-list: an ARRAY, where each ARRAY-VALUE is an\
    \ entry\n   o  entry: a STRING\n   o  service-uri-list: an ARRAY, where each ARRAY-VALUE\
    \ is a service-\n      uri\n   o  service-uri: a STRING\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   By providing a bootstrap method to find RDAP\
    \ servers, this document\n   helps to ensure that the end users will get the RDAP\
    \ data from an\n   authoritative source, instead of from rogue sources.  The method\
    \ has\n   the same security properties as the RDAP protocols themselves.  The\n\
    \   transport used to access the registries can be more secure by using\n   TLS\
    \ [RFC5246], which IANA supports.\n   Additional considerations on using RDAP\
    \ are described in [RFC7481].\n"
- title: 12.  IANA Considerations
  contents:
  - "12.  IANA Considerations\n   IANA has created the RDAP Bootstrap Services Registries,\
    \ listed\n   below, and made them available as JSON objects.  The contents of\n\
    \   these registries are described in Section 3, Section 4, and\n   Section 5,\
    \ with the formal syntax specified in Section 10.\n   The process for adding or\
    \ updating entries in these registries\n   differs from the normal IANA registry\
    \ processes: these registries are\n   generated from the data, processes, and\
    \ policies maintained by IANA\n   in their allocation registries ([ipv4reg], [ipv6reg],\
    \ [asreg], and\n   [domainreg]), with the addition of new RDAP server information.\n\
    \   IANA will create and update RDAP Bootstrap Services Registries\n   entries\
    \ from the allocation registries as those registries are\n   updated.\n   This\
    \ document does not change any policies related to the allocation\n   registries;\
    \ IANA has provided a mechanism for collecting the RDAP\n   server information.\
    \  The RDAP Bootstrap Services Registries will\n   start empty and will be gradually\
    \ populated as registrants of domains\n   and address spaces provide RDAP server\
    \ information to IANA.\n   IANA has created a new top-level category on the Protocol\
    \ Registries\n   page, <http://www.iana.org/protocols>.  The group is called\n\
    \   \"Registration Data Access Protocol (RDAP)\".  Each of the RDAP\n   Bootstrap\
    \ Services Registries has been made available for general\n   public on-demand\
    \ download in the JSON format, and that registry's URI\n   is listed directly\
    \ on the Protocol Registries page.\n   Other normal registries will be added to\
    \ this group by other\n   documents, but the reason the URIs for these registries\
    \ are clearly\n   listed on the main page is to make those URIs obvious to implementers\n\
    \   -- these are registries that will be accessed by software, as well as\n  \
    \ by humans using them for reference information.\n   Because these registries\
    \ will be accessed by software, the download\n   demand for the RDAP Bootstrap\
    \ Services Registries may be unusually\n   high compared to normal IANA registries.\
    \  The technical\n   infrastructure by which registries are published will need\
    \ to be\n   reviewed and might need to be augmented.\n   As discussed in Section\
    \ 8, software that accesses these registries\n   will depend on the HTTP Expires\
    \ header field to limit their query\n   rate.  It is, therefore, important for\
    \ that header field to be\n   properly set to provide timely information as the\
    \ registries change,\n   while maintaining a reasonable load on the IANA servers.\
    \  The HTTP\n   Content-Type returned to clients accessing these JSON- formatted\n\
    \   registries MUST be \"application/json\", as defined in [RFC7159].\n   Because\
    \ of how information in the RDAP Bootstrap Services Registries\n   is grouped\
    \ and formatted, the registry entries may not be sortable.\n   It is, therefore,\
    \ not required or expected that the entries be sorted\n   in any way.\n"
- title: 12.1.  Bootstrap Service Registry for IPv4 Address Space
  contents:
  - "12.1.  Bootstrap Service Registry for IPv4 Address Space\n   Entries in this\
    \ registry contain at least the following:\n   o  a CIDR [RFC4632] specification\
    \ of the network block being\n      registered.\n   o  one or more URLs that provide\
    \ the RDAP service regarding this\n      registration.\n"
- title: 12.2.  Bootstrap Service Registry for IPv6 Address Space
  contents:
  - "12.2.  Bootstrap Service Registry for IPv6 Address Space\n   Entries in this\
    \ registry contain at least the following:\n   o  an IPv6 prefix [RFC4291] specification\
    \ of the network block being\n      registered.\n   o  one or more URLs that provide\
    \ the RDAP service regarding this\n      registration.\n"
- title: 12.3.  Bootstrap Service Registry for AS Number Space
  contents:
  - "12.3.  Bootstrap Service Registry for AS Number Space\n   Entries in this registry\
    \ contain at least the following:\n   o  a range of Autonomous System numbers\
    \ being registered.\n   o  one or more URLs that provide the RDAP service regarding\
    \ this\n      registration.\n"
- title: 12.4.  Bootstrap Service Registry for Domain Name Space
  contents:
  - "12.4.  Bootstrap Service Registry for Domain Name Space\n   Entries in this registry\
    \ contain at least the following:\n   o  a domain name attached to the root being\
    \ registered.\n   o  one or more URLs that provide the RDAP service regarding\
    \ this\n      registration.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC3339]\
    \  Klyne, G. and C. Newman, \"Date and Time on the Internet:\n              Timestamps\"\
    , RFC 3339, July 2002,\n              <http://www.rfc-editor.org/info/rfc3339>.\n\
    \   [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n        \
    \      Architecture\", RFC 4291, February 2006,\n              <http://www.rfc-editor.org/info/rfc4291>.\n\
    \   [RFC4632]  Fuller, V. and T. Li, \"Classless Inter-domain Routing\n      \
    \        (CIDR): The Internet Address Assignment and Aggregation\n           \
    \   Plan\", BCP 122, RFC 4632, August 2006,\n              <http://www.rfc-editor.org/info/rfc4632>.\n\
    \   [RFC5890]  Klensin, J., \"Internationalized Domain Names for\n           \
    \   Applications (IDNA): Definitions and Document Framework\",\n             \
    \ RFC 5890, August 2010,\n              <http://www.rfc-editor.org/info/rfc5890>.\n\
    \   [RFC7159]  Bray, T., Ed., \"The JavaScript Object Notation (JSON) Data\n \
    \             Interchange Format\", RFC 7159, March 2014,\n              <http://www.rfc-editor.org/info/rfc7159>.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [REDIRECT-RDAP]\n              Martinez, C.,\
    \ Zhou, L., and G. Rada, \"Redirection Service\n              for Registration\
    \ Data Access Protocol\", Work in Progress,\n              draft-ietf-weirds-redirects-04,\
    \ July 2014.\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer\
    \ Security\n              (TLS) Protocol Version 1.2\", RFC 5246, August 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC7071]  Borenstein,\
    \ N. and M. Kucherawy, \"A Media Type for\n              Reputation Interchange\"\
    , RFC 7071, November 2013,\n              <http://www.rfc-editor.org/info/rfc7071>.\n\
    \   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n     \
    \         Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Caching\",\n        \
    \      RFC 7234, June 2014,\n              <http://www.rfc-editor.org/info/rfc7234>.\n\
    \   [RFC7258]  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n \
    \             Attack\", BCP 188, RFC 7258, May 2014,\n              <http://www.rfc-editor.org/info/rfc7258>.\n\
    \   [RFC7480]  Newton, A., Ellacott, B., and N. Kong, \"HTTP Usage in the\n  \
    \            Registration Data Access Protocol (RDAP)\", RFC 7480, March\n   \
    \           2015, <http://www.rfc-editor.org/info/rfc7480>.\n   [RFC7481]  Hollenbeck,\
    \ S. and N. Kong, \"Security Services for the\n              Registration Data\
    \ Access Protocol\", RFC 7481, March 2015,\n              <http://www.rfc-editor.org/info/rfc7481>.\n\
    \   [RFC7482]  Newton, A. and S. Hollenbeck, \"Registration Data Access\n    \
    \          Protocol Query Format\", RFC 7482, March 2015,\n              <http://www.rfc-editor.org/info/rfc7482>.\n\
    \   [RFC7483]  Newton, A. and S. Hollenbeck, \"JSON Responses for the\n      \
    \        Registration Data Access Protocol (RDAP)\", RFC 7483, March\n       \
    \       2015, <http://www.rfc-editor.org/info/rfc7483>.\n   [asreg]    IANA, \"\
    Autonomous System (AS) Numbers\",\n              <http://www.iana.org/assignments/as-numbers>.\n\
    \   [domainreg]\n              IANA, \"Root Zone Database\",\n              <http://www.iana.org/domains/root/db>.\n\
    \   [ipv4reg]  IANA, \"IPv4 Address Space Registry\",\n              <http://www.iana.org/assignments/ipv4-address-space>.\n\
    \   [ipv6reg]  IANA, \"IPv6 Global Unicast Address Assignments\",\n          \
    \    <http://www.iana.org/assignments/\n              ipv6-unicast-address-assignments>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The WEIRDS working group had multiple discussions on this\
    \ topic,\n   including a session during IETF 84, where various methods such as\n\
    \   in-DNS and others were debated.  The idea of using IANA registries\n   was\
    \ discovered by the author during discussions with his colleagues\n   as well\
    \ as by a comment from Andy Newton.  All the people involved in\n   these discussions\
    \ are herein acknowledged.  Linlin Zhou, Jean-\n   Philippe Dionne, John Levine,\
    \ Kim Davies, Ernie Dainow, Scott\n   Hollenbeck, Arturo Servin, Andy Newton,\
    \ Murray Kucherawy, Tom\n   Harrison, Naoki Kambe, Alexander Mayrhofer, Edward\
    \ Lewis, Pete\n   Resnick, Alessandro Vesely, Bert Greevenbosch, Barry Leiba,\
    \ Jari\n   Arkko, Kathleen Moriaty, Stephen Farrell, Richard Barnes, and Jean-\n\
    \   Francois Tremblay have provided input and suggestions to this\n   document.\
    \  Guillaume Leclanche was a coauthor of this document for\n   some revisions;\
    \ his support is therein acknowledged and greatly\n   appreciated.  The section\
    \ on formal definition was inspired by\n   Section 6.2 of [RFC7071].\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Marc Blanchet\n   Viagenie\n   246 Aberdeen\n   Quebec,\
    \ QC  G1R 2E1\n   Canada\n   EMail: Marc.Blanchet@viagenie.ca\n   URI:   http://viagenie.ca\n"
