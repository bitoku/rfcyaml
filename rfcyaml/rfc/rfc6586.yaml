- title: __initial_text__
  contents:
  - '                 Experiences from an IPv6-Only Network

    '
- title: Abstract
  contents:
  - "Abstract\n   This document discusses our experiences from moving a small number\
    \ of\n   users to an IPv6-only network, with access to the IPv4-only parts of\n\
    \   the Internet via a NAT64 device.  The document covers practical\n   experiences\
    \ as well as roadblocks and opportunities for this type of\n   a network setup.\
    \  The document also makes some recommendations about\n   where such networks\
    \ are applicable and what should be taken into\n   account in the network design.\
    \  The document also discusses further\n   work that is needed to make IPv6-only\
    \ networking applicable in all\n   environments.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6586.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Technology and Terminology ......................................4\n  \
    \ 3. Network Setup ...................................................4\n    \
    \  3.1. The IPv6-Only Network ......................................5\n      3.2.\
    \ DNS Operation ..............................................6\n   4. General\
    \ Experiences .............................................7\n   5. Experiences\
    \ with IPv6-Only Networking ...........................9\n      5.1. Operating\
    \ Systems ..........................................9\n      5.2. Programming\
    \ Languages and APIs ............................10\n      5.3. Instant Messaging\
    \ and VoIP ................................11\n      5.4. Gaming ....................................................12\n\
    \      5.5. Music Services ............................................13\n  \
    \    5.6. Appliances ................................................13\n    \
    \  5.7. Other Differences .........................................13\n   6. Experiences\
    \ with NAT64 .........................................13\n      6.1. IPv4 Address\
    \ Literals .....................................14\n      6.2. Comparison of Web\
    \ Access via NAT64 to Other Methods .......15\n   7. Future Work ....................................................15\n\
    \   8. Conclusions and Recommendations ................................16\n  \
    \ 9. Security Considerations ........................................18\n   10.\
    \ References ....................................................19\n      10.1.\
    \ Normative References .....................................19\n      10.2. Informative\
    \ References ...................................19\n   Appendix A. Acknowledgments\
    \ .......................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document discusses our experiences from moving a small\
    \ number of\n   users to an IPv6-only network, with access to the IPv4-only parts\
    \ of\n   the Internet via a NAT64 device.  This arrangement has been done with\n\
    \   a permanent change in mind rather than as a temporary experiment,\n   involves\
    \ both office and home users, heterogeneous computing\n   equipment, and varied\
    \ applications.  We have learned both practical\n   details, roadblocks and opportunities,\
    \ as well as a more general\n   understanding of when such a configuration can\
    \ be recommended and\n   what should be taken into account in the network design.\
    \  Note that\n   this memo documents our experiences primarily from 2010.  As\
    \ time\n   goes by, the situation changes with updated software versions, newer\n\
    \   products, and so on.\n   The networks involved in this setup have been in\
    \ dual-stack mode for\n   a considerable amount of time, in one case, for over\
    \ ten years.  Our\n   IPv6 connectivity is stable and in constant use with no\
    \ significant\n   problems.  Given that the IETF is working on technology such\
    \ as NAT64\n   [RFC6144] and several network providers are discussing the\n  \
    \ possibility of employing IPv6-only networking, we decided to take our\n   network\
    \ beyond the \"comfort zone\" and make sure that we understand\n   the implications\
    \ of having no IPv4 connectivity at all.  This also\n   allowed us to test a NAT64\
    \ device that is being developed by\n   Ericsson.\n   The main conclusion is that\
    \ it is possible to employ IPv6-only\n   networking, though there are a number\
    \ of issues such as lack of IPv6\n   support in some applications and bugs in\
    \ untested parts of code.  As\n   a result, dual-stack [RFC4213] remains as our\
    \ recommended model for\n   general purpose networking at this time, but IPv6-only\
    \ networking can\n   be employed by early adopters or highly controlled networks.\
    \  The\n   document also suggests actions to make IPv6-only networking\n   applicable\
    \ in all environments.  In particular, resolving problems\n   with a few key applications\
    \ would have a significant impact for\n   enabling IPv6-only networking for large\
    \ classes of users and\n   networks.  It is important that the Internet community\
    \ understands\n   these deployment barriers and works to remove them.\n   The\
    \ rest of this document is organized as follows.  Section 2\n   introduces some\
    \ relevant technology and terms, Section 3 describes\n   the network setup, Section\
    \ 4 discusses our general experiences,\n   Section 5 discusses experiences related\
    \ to having only IPv6\n   networking available, and Section 6 discusses experiences\
    \ related to\n   NAT64 use.  Finally, Section 7 presents some of our ideas for\
    \ future\n   work, Section 8 draws conclusions and makes recommendations on when\n\
    \   and how one should employ IPv6-only networks, and Section 9 discusses\n  \
    \ relevant security considerations.\n"
- title: 2.  Technology and Terminology
  contents:
  - "2.  Technology and Terminology\n   In this document, the following terms are\
    \ used.  \"NAT44\" refers to\n   any IPv4-to-IPv4 network address translation\
    \ algorithm, both \"Basic\n   NAT\" and \"Network Address/Port Translator (NAPT)\"\
    , as defined by\n   [RFC2663].\n   \"Dual-stack\" refers to a technique for providing\
    \ complete support for\n   both Internet protocols -- IPv4 and IPv6 -- in hosts\
    \ and routers\n   [RFC4213].\n   \"NAT64\" refers to a Network Address Translator\
    \ - Protocol Translator\n   defined in [RFC6144], [RFC6145], [RFC6146], [RFC6052],\
    \ [RFC6147], and\n   [RFC6384].\n"
- title: 3.  Network Setup
  contents:
  - "3.  Network Setup\n   We have tested IPv6-only networking in two different network\n\
    \   environments: office and home.  In both environments, all hosts had\n   normal\
    \ dual-stack native IPv4 and IPv6 Internet access already in\n   place.  The networks\
    \ were also already employing IPv6 in their\n   servers and DNS records.  Similarly,\
    \ the network was a part of\n   whitelisting arrangement to ensure that IPv6-capable\
    \ content\n   providers would be able to serve their content to the network over\n\
    \   IPv6.\n   The office environment has heterogeneous hardware with PCs, laptops,\n\
    \   and routers running Linux, BSD, Mac OS X, and Microsoft Windows\n   operating\
    \ systems.  Common uses of the network include email, Secure\n   Shell (SSH),\
    \ web browsing, and various instant messaging and Voice\n   over IP (VoIP) applications.\
    \  The hardware in the home environment\n   consists of PCs, laptops, and a number\
    \ of server, camera, and sensor\n   appliances.  The primary operating systems\
    \ in this environment are\n   Linux and Microsoft Windows operating systems. \
    \ Common applications\n   include web browsing, streaming, instant messaging and\
    \ VoIP\n   applications, gaming, file storage, and various home control\n   applications.\
    \  Both environments employ extensive firewalling\n   practices, and filtering\
    \ is applied for both IPv4 and IPv6 traffic.\n   However, firewall capabilities,\
    \ especially with older versions of\n   firewall software, dictate some differences\
    \ between the filtering\n   applied for IPv4 and IPv6 since some features commonly\
    \ supported for\n   IPv4 were not yet implemented for IPv6.  In addition, in the\
    \ home\n   environment, the individual devices are directly accessible from the\n\
    \   Internet on IPv6 (on select protocols such as SSH) but not on IPv4\n   due\
    \ to lack of available public IPv4 addresses.\n   In both environments, volunteers\
    \ had the possibility to opt-in for\n   the IPv6-only network.  The number of\
    \ users was small: there were\n   roughly five permanent users and a dozen users\
    \ who had been in the\n   network at least for some amount of time.  Each user\
    \ had to connect\n   to the IPv6-only wired or wireless network and, depending\
    \ on their\n   software, possibly configure their computer by indicating that\
    \ there\n   is no IPv4 and/or setting DNS server addresses.  The users were also\n\
    \   asked to report their experiences back to the organizers.\n"
- title: 3.1.  The IPv6-Only Network
  contents:
  - "3.1.  The IPv6-Only Network\n   The IPv6-only network was provided as a parallel\
    \ network on the side\n   of the already existing dual-stack network.  It was\
    \ important to\n   retain the dual-stack network for the benefit of those users\
    \ who did\n   not decide to opt-in and because we knew that there were some IPv4-\n\
    \   only devices in the network.  A separate wired access network was\n   created\
    \ using Virtual Local Area Networks (VLANs).  This network had\n   its own IPv6\
    \ prefix.  A separate wireless network, bridged to the\n   wired network, was\
    \ also created.  In our case, the new wireless\n   network required additional\
    \ access point hardware in order to\n   accommodate advertising multiple wireless\
    \ networks.  The simple\n   access point model that we employed in these networks\
    \ did not allow\n   this on a single device, although many other access points\
    \ support\n   this.  All the secondary infrastructure resulted in some additional\n\
    \   management burden and cost, however.  An added complexity was that\n   the\
    \ home network already employed two types of infrastructure, one\n   for family\
    \ members and another one for visitors.  In order to\n   duplicate this model\
    \ for the IPv6-only network, there are now four\n   separate networks, with several\
    \ access points on each.\n   A stateful NAT64 [RFC6146] with integrated DNS64\
    \ was installed on the\n   edge of the IPv6-only networks.  No IPv4 routing or\
    \ Dynamic Host\n   Configuration Protocol (DHCP) was offered on these networks.\
    \  The\n   NAT64 device sends Router Advertisements (RAs) [RFC4861] from which\n\
    \   the hosts learn the IPv6 prefix and can automatically configure IPv6\n   addresses\
    \ for them.  Each new IPv6-only network needed one new /64\n   prefix to be used\
    \ in these advertisements.  In addition, each NAT64\n   device needed another\
    \ /64 prefix to be used for the representation of\n   IPv4 destinations in the\
    \ IPv6-only network.  As a result, one IPv6-\n   only network requires /63 of\
    \ address space.  This space was easily\n   available in our networks, as IPv6\
    \ allocations are purposefully made\n   in sufficiently large blocks.  Additional\
    \ address space needs can be\n   accommodated from the existing block without\
    \ registry involvement.\n   Another option would have been to use the Well-Known\
    \ Prefix [RFC6052]\n   for the representation of IPv4 destinations in the IPv6-only\
    \ network.\n   In any case, the prefixes have to be listed in the intra-domain\n\
    \   routing system so that they can be reached.  In one case, the\n   increase\
    \ from one block to multiple also made it necessary to employ\n   an improved\
    \ routing configuration.  In addition to routing, the new\n   prefixes have to\
    \ be listed in the appropriate firewall rules.\n   Setting up NAT64 and DNS64\
    \ by themselves is easy and can be done\n   quickly by an experienced network\
    \ manager.  However, when duplicate\n   infrastructure is needed for dual-stack\
    \ and IPv6-only networks, the\n   additional switches, cables, access points,\
    \ etc., will take some\n   amount of installation effort.  In addition, if whitelisting\n\
    \   agreements or IPv6 ISP connectivity is needed, setting these up\n   requires\
    \ negotiations with external partners.\n"
- title: 3.2.  DNS Operation
  contents:
  - "3.2.  DNS Operation\n   Router Advertisements are used to carry DNS Configuration\
    \ options\n   [RFC6106], listing the DNS64 as the DNS server the hosts should\
    \ use.\n   In addition, aliases were added to the DNS64 device to allow it to\n\
    \   receive packets on the well-known DNS server addresses that Windows\n   operating\
    \ systems use (fec0:0:0:ffff::1, fec0:0:0:ffff::2, and fec0:\n   0:0:ffff::3).\
    \  At a later stage, support for stateless DHCPv6\n   [RFC3736] was added.  We\
    \ do recommend enabling RFC 6106, well-known\n   addresses, and stateless DHCPv6\
    \ in order to maximize the likelihood\n   of different types of IPv6-only hosts\
    \ being able to use DNS without\n   manual configuration.  DNS server discovery\
    \ was never a problem in\n   dual-stack networks, because DNS servers on the IPv4\
    \ side can easily\n   provide IPv6 information (AAAA records) as well.  With IPv6-only\n\
    \   networking, it becomes crucial that the local DNS server can also be\n   reached\
    \ via IPv6.  In principle, this is exactly the same as needing\n   IPv4-based\
    \ DNS and DNS discovery in IPv4-only networks.  However, in\n   IPv6, the discovery\
    \ mechanisms are somewhat more complicated because\n   there are several alternative\
    \ techniques.\n   When a host served by the DNS64 asks for a domain name that\
    \ does not\n   have a AAAA (IPv6 address) record, but has an A (IPv4 address)\n\
    \   record, a AAAA record is synthesized from the A record (as defined\n   for\
    \ DNS64 in [RFC6147]) and sent in the DNS response to the host.  IP\n   packets\
    \ sent to this synthesized address are routed via the NAT64,\n   translated to\
    \ IPv4 by the NAT64, and forwarded to the queried host's\n   IPv4 address; return\
    \ traffic is translated back from IPv4 to IPv6 and\n   forwarded to the host behind\
    \ the NAT64 (as described in [RFC6144]).\n   This allows the hosts in the IPv6-only\
    \ network to contact any host in\n   the IPv4 Internet as long as the hosts in\
    \ the IPv4 Internet have DNS\n   address records.\n   The NAT64 devices have standard\
    \ dual-stack connectivity and their\n   DNS64 function can use both IPv4 and IPv6\
    \ when requesting information\n   from DNS.  A destination that has both an A\
    \ and AAAA records is not\n   treated in any special manner, because the hosts\
    \ in the IPv6-only\n   network can contact the destination over IPv6.  Destinations\
    \ with\n   only an A record will be given a synthesized AAAA record as explained\n\
    \   above.  However, in one of our open visitor networks that is sharing\n   the\
    \ infrastructure with the home network, we needed a special\n   arrangement. \
    \ Currently, the home network obtains its IPv6\n   connectivity through a tunnel\
    \ via the office network, and it is\n   undesirable to allow outsiders using the\
    \ visitor network to generate\n   traffic through the office network, even if\
    \ the traffic is just\n   passing by and forwarded to the IPv6 Internet.  As a\
    \ result, in the\n   visitor network, there is a special IPv6-only to IPv4-only\n\
    \   configuration where the DNS64 never asks for AAAA records and always\n   generates\
    \ synthesized records.  Therefore, no traffic from the\n   visitor network, even\
    \ if it is destined to the IPv6 Internet, is\n   routed via the office network,\
    \ but traffic from the home network can\n   still use the IPv6 connectivity provided\
    \ by the office network.\n      Note: This configuration may also be useful for\
    \ other purposes.\n      For instance, one drawback of the standard behavior is\
    \ that if a\n      destination publishes AAAA records but has bad IPv6 connectivity,\n\
    \      the hosts in the IPv6-only network have no fallback.  In the dual-\n  \
    \    stack model, a host can always try IPv4 if the IPv6 connection\n      fails.\
    \  In the special configuration, IPv6 is only used internally\n      at the site\
    \ but never across the Internet, eliminating this\n      problem.  This is not\
    \ a recommended mode of operation, but it is\n      interesting to note that it\
    \ may solve some issues.\n   Note that in NAT64 (unlike in its older variant [RFC4966])\
    \ it is\n   possible to decouple the packet translation, IPv6 routing, and DNS64\n\
    \   functions.  Since clients are configured to use a DNS64 as their DNS\n   server,\
    \ there is no need for having an Application Layer Gateway\n   (ALG) on the path\
    \ sniffing and spoofing DNS packets.  This decoupling\n   possibility was implemented\
    \ by one of our users, as he is outside of\n   our physical network and wants\
    \ to communicate directly on IPv6 where\n   it is possible without having to go\
    \ through our central network\n   equipment.  His DNS queries go to our DNS64\
    \ and to establish\n   communications to an IPv4 destination our central NAT64\
    \ is used.  If\n   there is a need to translate some packets, these packets find\
    \ the\n   translator device through normal IPv6 routing means since the\n   synthesized\
    \ addresses have our NAT64's prefix.  However, for non-\n   synthesized IPv6 addresses\
    \ the packets are routed directly to the\n   destination.\n"
- title: 4.  General Experiences
  contents:
  - "4.  General Experiences\n   Based on our experiences, it is possible to live\
    \ (and work) with an\n   IPv6-only network.  For instance, at the time of this\
    \ writing, one of\n   the authors has been in an IPv6-only network for about a\
    \ year and a\n   half and has had no major problems.  Most things work well in\
    \ the new\n   environment; for example, we have been unable to spot any practical\n\
    \   difference in the web browsing (HTTP and HTTPS) experience.  Also,\n   email,\
    \ software upgrades, operating system services, many chat\n   systems, and media\
    \ streaming work well.  On certain Symbian mobile\n   handsets that we tried,\
    \ all applications work even on an IPv6-only\n   network.  In another case, with\
    \ the Android operating system, all the\n   basic applications worked without\
    \ problems.  In order to make the\n   latter handset architecture support IPv6-only\
    \ networks, however, a\n   small change was needed in the operating system so\
    \ that it could\n   discover IPv6-only DNS servers.\n   However, in general, there\
    \ is some pain involved and thus IPv6-only\n   networking is not suitable for\
    \ everyone just yet.  Switching IPv4 off\n   does break many things as well. \
    \ Some of the users in our environment\n   left due to these issues, as they missed\
    \ some key feature that they\n   needed from their computing environment.  These\
    \ issues fall in\n   several categories:\n   Bugs\n      We saw many issues that\
    \ can be classified as bugs, likely related\n      to so few people having tried\
    \ the software in question in an IPv6-\n      only network.  For instance, some\
    \ operating system facilities\n      support IPv6 but have annoying problems that\
    \ are only uncovered in\n      IPv6-only networking.\n   Lack of IPv6 Support\n\
    \      We also saw many applications that do not support IPv6 at all.\n      These\
    \ range from minor, old tools (such as the Unix dict(1)\n      command) to major\
    \ applications that are important to our users\n      (such as Skype) and even\
    \ to entire classes of applications (many\n      games have issues).  As our experiment\
    \ continued, we have seen\n      improvements in some areas, such as gaming.\n\
    \   Protocol, Format, and Content Problems\n      There are many protocols that\
    \ carry IP addresses in them, and\n      using these protocols through a translator\
    \ can lead to problems.\n      In our current network setup, we did not employ\
    \ any ALGs except\n      for FTP [RFC6384].  However, we have observed a number\
    \ of protocol\n      issues with IPv4 addresses.  For instance, some instant messaging\n\
    \      services do not work due to this.  Finally, content on some web\n     \
    \ pages may refer to IPv4 address literals (i.e., plain IP addresses\n      instead\
    \ of host and domain names).  This renders some links\n      inaccessible in an\
    \ IPv6-only network.  While this problem is\n      easily quantifiable in measurements,\
    \ the authors have run into it\n      only a couple of times during real-life\
    \ web browsing.\n   Firewall Issues\n      We also saw a number of issues related\
    \ to lack of features in IPv6\n      support in firewalls.  In particular, while\
    \ we did not experience\n      any Maximum Transmission Unit (MTU) and fragmentation\
    \ problems in\n      our networks, there is potential for generating problems,\
    \ as the\n      support for IPv6 fragment headers is not complete in all firewalls\n\
    \      and the NAT64 specifications call for use of the fragment header\n    \
    \  (even in situations where fragmentation has not yet occurred,\n      e.g.,\
    \ if an IPv4 packet that is not a fragment does not have the\n      Don't Fragment\
    \ (DF) bit set).\n   In general, most of the issues relate to poor testing and\
    \ lack of\n   IPv6 support in some applications.  IPv6 itself and NAT64 did not\n\
    \   cause any major issues for us, once our setup and NAT64 software was\n   stable.\
    \  In general, the authors feel that with the exception of some\n   applications,\
    \ our experience with translation to reach the IPv4\n   Internet has been equal\
    \ to our past experiences with NAT44-based\n   Internet access.  While translation\
    \ implies loss of end-to-end\n   connectivity, in practice, direct connectivity\
    \ has also not been\n   available to the authors in the IPv4 Internet for a number\
    \ of years.\n   It should be noted that the experience with a properly configured\
    \ set\n   of ALGs and workarounds such as proxies may be different.  Some of\n\
    \   the problems we encountered can be solved through these means.  For\n   instance,\
    \ a problematic application can be configured to use a proxy\n   that in turn\
    \ has both IPv4 and IPv6 access.\n"
- title: 5.  Experiences with IPv6-Only Networking
  contents:
  - "5.  Experiences with IPv6-Only Networking\n   The overall experience was as explained\
    \ above.  The remainder of this\n   section discusses specific issues with different\
    \ operating systems,\n   programming languages, applications, and appliances.\n"
- title: 5.1.  Operating Systems
  contents:
  - "5.1.  Operating Systems\n   Even operating systems have some minor problems with\
    \ IPv6.  For\n   example, in Linux, Router Advertisement (RA) information is not\n\
    \   automatically updated when the network changes while the computer is\n   on,\
    \ and this requires an unnecessary suspend/resume cycle to restore\n   its proper\
    \ state.  We have also had issues with the rdnssd daemon,\n   which first does\
    \ not come as a default feature in Ubuntu and does not\n   always appear to work\
    \ reliably.  To resolve these issues, we had to\n   configure the network manager\
    \ to use a specific server address.\n   Later, a new version of the Linux distribution\
    \ that we used solved\n   these problems, even if some problems still remained.\
    \  For instance,\n   in the latest Ubuntu Long-Term Support release (10.04), we\
    \ have\n   experienced that the network manager by default returns to an\n   available\
    \ IPv4 wireless network even if there is a previously used\n   IPv6-only network\
    \ available and the IPv4 network has no global\n   connectivity before a web-based\
    \ login is completed.\n   In Mac OS X (Snow Leopard), the network manager needed\
    \ to be\n   explicitly told not to expect IPv4.  A more annoying issue was that\n\
    \   in order to switch between an IPv6-only and IPv4-only network, these\n   settings\
    \ had to be manually changed, making it undesirable for Mac OS\n   X users to\
    \ employ IPv6-only networks.\n   Also, on Microsoft Windows 7, we experienced\
    \ problems when relying on\n   default, well-known DNS server addresses: without\
    \ manual\n   configuration, the host was unable to use the DNS addresses, even\n\
    \   though the system displays them as current DNS server addresses.\n   Latest\
    \ versions of the Android operating system support IPv6 on its\n   wireless LAN\
    \ interface, but due to lack of DNS discovery mechanisms,\n   this does not work\
    \ in IPv6-only networks.  We corrected this,\n   however, and prototype phones\
    \ in our networks work well now, even in\n   an IPv6-only environment.  This change,\
    \ DNS Discovery Daemon (DDD)\n   now exists as open source software.  Interestingly,\
    \ all applications\n   that we have tried so far seem to work without problems\
    \ with IPv6-\n   only connectivity, though no exhaustive testing was done, nor\
    \ did we\n   try known troublesome applications.\n   While all these operating\
    \ systems (or their predecessors) have\n   already supported IPv6 for a number\
    \ of years, these kinds of small\n   glitches seem to imply that they have not\
    \ been thoroughly tested in\n   networks lacking IPv4 connectivity.  At the very\
    \ least, their\n   usability leaves something to be desired.\n"
- title: 5.2.  Programming Languages and APIs
  contents:
  - "5.2.  Programming Languages and APIs\n   For applications to be able to support\
    \ IPv6, they need access to the\n   necessary APIs.  Luckily, IPv6 seems to be\
    \ well supported by a\n   majority of the commonly used APIs.  The Perl programming\
    \ language\n   used to be an exception with only partial IPv6 support up to the\n\
    \   version 5.14 (released May 14, 2011).  This version finally includes\n   full\
    \ IPv6 support, with that in the core libraries and older modules\n   being updated\
    \ as well.  With previous versions of Perl, while IPv6\n   socket support is available\
    \ as an extension module, it may not be\n   possible to install this module without\
    \ administrative rights.  This\n   has also resulted in other networking core\
    \ libraries (such as FTP and\n   SMTP) not being able to fully support IPv6; thus,\
    \ many existing Perl\n   programs using network functionality may not work properly\
    \ in an\n   IPv6-only environment.\n"
- title: 5.3.  Instant Messaging and VoIP
  contents:
  - "5.3.  Instant Messaging and VoIP\n   By far, the biggest complaint from our group\
    \ of users was that Skype\n   stopped working.  In some environments, even Skype\
    \ can be made to\n   work through a proxy configuration, and this was verified\
    \ in our\n   setting but not used as a permanent solution.  More generally, we\n\
    \   tested a number of instant messaging applications in an IPv6-only\n   network\
    \ with NAT64; the test results can be found in Table 1.  The\n   versions used\
    \ in the tests were the latest versions available in the\n   summer of 2010.\n\
    \     SYSTEM                                 STATUS\n     Facebook on the web\
    \ (http)               OK\n     Facebook via a client (xmpp)             OK\n\
    \     Jabber.org chat service (xmpp)           OK\n     Gmail chat on the web\
    \ (http)             OK\n     Gmail chat via a client (xmpp)           OK\n  \
    \   Google Talk client                     NOT OK\n     AIM (AOL)            \
    \                  NOT OK\n     ICQ (AOL)                              NOT OK\n\
    \     Skype                                  NOT OK\n     MSN                \
    \                    NOT OK\n     Webex                                  NOT OK\n\
    \     Sametime                              OK (NOW)\n   Table 1. Instant Messaging\
    \ Applications in an IPv6-Only Network\n   Packet tracing revealed that the issues\
    \ in AIM, ICQ, and MSN appear\n   to be related to passing literal IPv4 addresses\
    \ in the protocol.  It\n   remains to be determined whether this can be solved\
    \ through\n   configuration, proxies, or ALGs.  The problem with the Google Talk\n\
    \   client is that the software does not support IPv6 connections at this\n  \
    \ time.  We are continuing our tests with additional applications, and\n   we\
    \ have also seen changes over time.  For instance, a new version of\n   Sametime\
    \ suddenly started working with IPv6-only networks, presumably\n   due to the\
    \ new version being more careful with the use of DNS names\n   as opposed to IPv4\
    \ addresses.  One problem in running these tests is\n   to ensure that we can\
    \ distinguish IPv6 and NAT64 issues from other\n   issues, such as a generic issue\
    \ on a given operating system platform.\n   Some of these problems are solvable,\
    \ however.  For instance, we used\n   localhost as a proxy for Skype, and then\
    \ used SSH to tunnel to an\n   external web proxy, bypassing Skype's limitations\
    \ with regard to\n   connecting to IPv6 destinations or even IPv6 proxies.\n"
- title: 5.4.  Gaming
  contents:
  - "5.4.  Gaming\n   Another class of applications that we tried was games.  We tried\
    \ both\n   web-based gaming and standalone gaming applications that have\n   \"\
    network\", \"Internet\", or \"LAN\" gaming modes.  The results are shown\n   in\
    \ Table 2.\n     SYSTEM                                           STATUS\n   \
    \  Web-based (e.g., armorgames)                       OK\n     Runescape (on the\
    \ web)                           NOT OK\n     Flat out 2                     \
    \                  NOT OK\n     Battlefield                                  \
    \    NOT OK\n     Secondlife                                       NOT OK\n  \
    \   Guild Wars                                       NOT OK\n     Age of Empires\
    \                                   NOT OK\n     Star Wars: Empire at War    \
    \                     NOT OK\n     Crysis                                    \
    \       NOT OK\n     Lord of the Rings: Conquest                      NOT OK\n\
    \     Rome Total War                                   NOT OK\n     Lord of the\
    \ Rings: Battle for Middle Earth 2     NOT OK\n   Table 2. Gaming Applications\
    \ in an IPv6-Only Network\n   Most web-based games worked well, as expected from\
    \ our earlier good\n   general web experience.  However, we were also able to\
    \ find one web-\n   based game that failed to work (Runescape).  This particular\
    \ game is\n   a Java application that fails on an attempt to perform a HTTP GET\n\
    \   request.  The reason remains unclear, but a likely theory is the use\n   of\
    \ an IPv4-literal in the application itself.\n   The experience with standalone\
    \ games was far more discouraging.\n   Without exception, all games failed to\
    \ enable either connections to\n   ongoing games in the Internet or even LAN-based\
    \ connections to other\n   computers in the same IPv6-only LAN segment.  This\
    \ is somewhat\n   surprising, and the results require further verification.\n\
    \   Unfortunately, the games provide no diagnostics about their\n   operation,\
    \ so it is hard to guess what is going on.  It is possible\n   that their networking\
    \ code employs older APIs that cannot use IPv6\n   addresses [RFC4038].  The inability\
    \ to provide any LAN-based\n   connectivity is even more surprising, as this must\
    \ mean that they are\n   unable to use IPv4 link local connectivity, which should\
    \ have been\n   available to the devices (IPv4 was not blocked; just that no DHCP\n\
    \   answers were provided on IPv4).\n   While none of the standalone games we\
    \ tested in the summer of 2010\n   were IPv6-capable, the situation improved during\
    \ the experiment.  For\n   instance, a popular online game, World of Warcraft,\
    \ now has IPv6\n   support in its latest version and some of the older games that\
    \ have\n   been re-released as open source (e.g., Quake) have been patched IPv6-\n\
    \   capable by the open source community.\n"
- title: 5.5.  Music Services
  contents:
  - "5.5.  Music Services\n   Most of the web-based music services appear to work\
    \ fine, presumably\n   because they employ TCP and HTTP as a transport.  One notable\n\
    \   exception is Spotify, which requires communication to specific IPv4\n   addresses.\
    \  A proxy configuration similar to the one we used for\n   Skype makes it possible\
    \ to use Spotify as well.\n"
- title: 5.6.  Appliances
  contents:
  - "5.6.  Appliances\n   There are also problems with different appliances such as\
    \ webcams.\n   Many of them do not support IPv6; hence, they will not work in\
    \ an\n   IPv6-only network.  Also, not all firewalls support IPv6.  Or even if\n\
    \   they do, they may still experience issues with some aspects of IPv6\n   such\
    \ as fragments.\n   Some of these issues are easily solved when the appliance\
    \ works as a\n   server, such as what most webcams and our sensor gateway devices\
    \ do.\n   We placed the appliance in the IPv4 part of the network (in this\n \
    \  case, in private address space), added its name to the local DNS, and\n   simply\
    \ allowed devices from the IPv6-only network reach it through\n   NAT64.\n"
- title: 5.7.  Other Differences
  contents:
  - "5.7.  Other Differences\n   One thing that becomes simplified in an IPv6-only\
    \ network is source\n   address selection [RFC3484].  As there is no IPv4 connectivity,\
    \ the\n   host only needs to consider its IPv6 source address.  For global\n \
    \  communications, there is typically just one possible source address.\n   Some\
    \ networks that advertise IPv6 addresses in their DNS records in\n   reality have\
    \ some problems.  For instance, a popular short URL\n   forwarding service has\
    \ advertised a deprecated IPv4-compatible IPv6\n   address [RFC4291] in its AAAA\
    \ record, making it impossible for this\n   site to be reached unless either IPv4\
    \ or NAT64 translation to an IPv4\n   destination is used.\n"
- title: 6.  Experiences with NAT64
  contents:
  - "6.  Experiences with NAT64\n   After correcting some initial bugs and stability\
    \ issues, the NAT64\n   operation itself has been relatively problem-free.  There\
    \ have been\n   no unexplained DNS problems or lost sessions.  With the exception\
    \ of\n   the specific applications mentioned above and IPv4 literals, the user\n\
    \   experience has been in line with using IPv4 Internet through a NAT44\n   device.\
    \  These failures with the specific applications are clearly\n   very different\
    \ from the IPv4 experience, however.\n   The rest of this section discusses our\
    \ measurements on specific\n   issues.  These tests and measurements were performed\
    \ during the year\n   2011 and present a snapshot of the situation on that time.\
    \  More up-\n   to-date measurement information can be found from various online\n\
    \   tools such as [HE-IPv6].\n"
- title: 6.1.  IPv4 Address Literals
  contents:
  - "6.1.  IPv4 Address Literals\n   While browsing in general works, IPv4 literals\
    \ embedded in the HTML\n   code may break some parts of the web pages when using\
    \ IPv6-only\n   access.  This happens because the DNS64 cannot synthesize AAAA\n\
    \   records for the literals since the addresses are not queried from the\n  \
    \ DNS.  Luckily, the IPv4 literals seem to be fairly rarely\n   encountered, at\
    \ least so that they would be noticed, with regular web\n   surfing.  The authors\
    \ have run into this issue only few times during\n   the entire experiment.  Only\
    \ two of those cases had a practical\n   impact (in YouTube, some of the third-party\
    \ applications for\n   downloading content did not work and one hotel's web page\
    \ had a\n   literal link to its reservation system).\n   We have attempted to\
    \ measure the likelihood of running into an IPv4\n   literal in the web.  To do\
    \ this, we took the top 1,000 and 10,000 web\n   sites from the Alexa popular\
    \ web site list.  With 1,000 top sites,\n   0.2% needed an IPv4 literal to render\
    \ all components in their top\n   page (e.g., images, videos, JavaScript, and\
    \ Cascading Style Sheet\n   (CSS) files).  With 10,000 top sites, this number\
    \ increases to 2%.\n   However, it is not clear what conclusions can be made about\
    \ this.  It\n   is often the case that there are unresolvable or inaccessible\n\
    \   components on a web page anyway for various reasons, and to\n   understand\
    \ the true impact we would have to know how \"important\" a\n   given page component\
    \ was.  Also, we did not measure the number of\n   links with IPv4 literals on\
    \ these pages, nor did we attempt to search\n   the site in any thorough manner\
    \ for these literals.\n   As noted, personal anecdotal evidence says that IPv4\
    \ literals are not\n   a big problem.  But clearly, cleaning the most important\
    \ parts of the\n   web from IPv4 literals would be useful.  With tools such as\
    \ the\n   popular web site list, some user pressure, and co-operation from the\n\
    \   content providers the most urgent part of the problem could hopefully\n  \
    \ be solved as a one-time effort.  While IPv4 literals still exist in\n   the\
    \ web, using a suitable HTTP proxy (e.g., [ADD-LITERALS]) can help\n   to cope\
    \ with them.\n"
- title: 6.2.  Comparison of Web Access via NAT64 to Other Methods
  contents:
  - "6.2.  Comparison of Web Access via NAT64 to Other Methods\n   We also compared\
    \ how well the web works behind a NAT64 compared to\n   IPv4-only and native IPv6\
    \ access.  For this purpose, we used wget to\n   go through the same top web site\
    \ lists as described in Section 6.1,\n   again downloading everything needed to\
    \ render their front page.  The\n   tests were repeated and average failure rate\
    \ was calculated over all\n   of the runs.  Separate tests were conducted with\
    \ an IPv4-only\n   network, an IPv6-only network, and an IPv6-only network with\
    \ NAT64.\n   When accessed with the IPv4-only network, our tests show that 1.9%\
    \ of\n   the sites experienced some sort of error or failure.  The failure\n \
    \  could be that the whole site was not accessible, or just that a\n   single\
    \ image (e.g., an advertisement banner) was not loaded properly.\n   It should\
    \ also be noted that access through wget is somewhat\n   different from a regular\
    \ browser: some web sites refuse to serve\n   content to wget, browsers typically\
    \ have DNS heuristics to fill in\n   \"www.\" in front of a domain name where\
    \ needed, and so on.  In\n   addition to missing advertisement banners, temporary\
    \ routing glitches\n   and other mistakes, these differences also help to explain\
    \ the reason\n   for the high baseline error rate in this test.  It should also\
    \ be\n   noted that variations in wget configuration options produced highly\n\
    \   different results, but we believe that the options we settled on bear\n  \
    \ closest resemblance to real-world browsing.\n   When we tried to access the\
    \ same sites with native IPv6 (without\n   NAT64), 96% of the sites failed to\
    \ load correctly.  This was as\n   expected, given that most of the Internet content\
    \ is not available on\n   IPv6.  The few exceptions included, for instance, sites\
    \ managed by\n   Google.\n   When the sites were accessed from the IPv6-only network\
    \ via a NAT64\n   device, the failure rate increased to 2.1%.  Most of these failures\n\
    \   appear to be due to IPv4 address literals, and the increased failure\n   rate\
    \ matches that of IPv4 literal occurrence in the same set of top\n   web sites.\
    \  With the top 10,000 sites, the failure rate with NAT64\n   increases similarly\
    \ to our test on IPv4 address literals.\n"
- title: 7.  Future Work
  contents:
  - "7.  Future Work\n   One important set of measurements remains for future work.\
    \  It would\n   be useful to understand the effect of DNS64 and NAT64 on response\n\
    \   time and end-to-end communication delays.  Some users have anecdotal\n   reports\
    \ of slow web browsing response times, but we have been unable\n   to determine\
    \ if this was due to the IPv6-only network mechanisms or\n   for some other reason.\
    \  Measurements on pure DNS response times and\n   packet round-trip delays does\
    \ not show a significant difference from\n   a NAT44 environment.  It would be\
    \ particularly interesting to measure\n   delays in the context of dual-stack\
    \ versus NAT64-based IPv6-only\n   networking.  When using dual-stack, broken\
    \ IPv6 connectivity can be\n   repaired by falling back to IPv4 use.  With NAT64,\
    \ this is not always\n   possible as discussed in Section 3.2.\n   Also, more\
    \ programs, especially VoIP and Peer-to-Peer (P2P)\n   applications should be\
    \ tested with NAT64.  In addition, tunneling and\n   mobility protocols should\
    \ be tested and especially Virtual Private\n   Network (VPN) protocols and applications\
    \ would deserve more thorough\n   investigation.\n"
- title: 8.  Conclusions and Recommendations
  contents:
  - "8.  Conclusions and Recommendations\n   The main conclusion is that it is possible\
    \ to employ IPv6-only\n   networking.  For large classes of applications, there\
    \ are no\n   downsides or the downsides are negligible.  We have been unable to\n\
    \   spot any practical difference in the web browsing experience, for\n   instance.\
    \  Additionally, IPv6 usage -- be it in dual-stack or IPv6-\n   only form -- comes\
    \ with inherent advantages, such as enabling direct\n   end-to-end connectivity.\
    \  In our case, we employed this by enabling\n   direct connectivity to devices\
    \ in a home network from anywhere in the\n   (IPv6) Internet.  There are, however,\
    \ a number of issues as well,\n   such as lack of IPv6 support in some applications\
    \ or bugs in untested\n   parts of the code.\n   Our experience with IPv6-only\
    \ networking confirms that dual stack\n   should still be our recommended model\
    \ for general purpose networking\n   at this point in time.  However, IPv6-only\
    \ networking can be employed\n   by early adopters or highly controlled networks.\
    \  One example of such\n   a controlled network is a mobile network with operator-driven\n\
    \   selection of handsets.  For instance, on some handsets that we\n   tested,\
    \ we were unable to see any functional difference between IPv4\n   and IPv6.\n\
    \   Our recommendations apply at the present time.  With effort and time,\n  \
    \ deployment barriers can be removed and IPv6-only networking becomes\n   applicable\
    \ in all networking situations.\n   Some of the improvements are already in process\
    \ in the form of new\n   products and additional IPv6 support.  For instance,\
    \ we expect that\n   the handset market will have a much higher number of IPv6-capable\n\
    \   devices in the near future.  However, some of the changes do not come\n  \
    \ without the community spending additional effort.  We have identified\n   a\
    \ number of actions that should be taken to improve the state of\n   IPv6-only\
    \ networking.  These include the following:\n   DNS Discovery\n      The state\
    \ of DNS discovery continues to be one of the main\n      barriers for easy adoption\
    \ of IPv6-only networking.  Since DNS\n      discovery is not a problem in dual-stack\
    \ networking, there has\n      been too little effort in testing and deploying\
    \ the necessary\n      components.  For instance, it would be useful if RA-based\
    \ DNS\n      discovery came as a standard feature and not as an option in Linux\n\
    \      distributions.  Our hope is that recent standardization of the RA-\n  \
    \    based DNS discovery at the IETF will help this happen.  Other\n      operating\
    \ systems face similar issues.  The authors believe that\n      at this time,\
    \ prudent operational practices call for maximizing\n      the number of offered\
    \ automatic configuration mechanisms on the\n      network side.  It might be\
    \ useful for an IETF document to provide\n      guidance on operating DNS in IPv6-only\
    \ networks.\n   Network Managers\n      Other key software components are the\
    \ various network management\n      and attachment tools in operating systems.\
    \  These tools generally\n      have the required functionality, but do not always\
    \ appear to have\n      been tested very extensively on IPv6, or let alone IPv6-only\n\
    \      networks.  Further work is required here.\n   Firewalls\n      More work\
    \ is needed to ensure that IPv6 is supported in equal\n      manner in various\
    \ firewall products.\n   Application Support\n      By far, the most important\
    \ action, at least for our group of\n      users, would be to bring some key applications\
    \ (e.g., instant\n      messaging and VoIP applications and games) to a state\
    \ where they\n      can be easily run on IPv6-only networks and behind a NAT64.\
    \  To\n      facilitate this, application programmers should use IP-version-\n\
    \      agnostic APIs so that applications automatically use IPv4 or IPv6\n   \
    \   depending on what is available.  In some cases, it may also be\n      necessary\
    \ to add support for new types of ALGs.\n   IPv4 Literals\n      The web should\
    \ be cleaned of IPv4 literals.  Also, IPv4 literals\n      should be avoided in\
    \ application protocol signaling messages.\n   Measurements and Analysis\n   \
    \   It is also important to continue with testing, measurement, and\n      analysis\
    \ of which Internet technologies work in IPv6-only\n      networks, to what extent,\
    \ at what speed, and where the remaining\n      problems are.\n   Guidelines\n\
    \      It is also useful to provide guidance for network administrators\n    \
    \  and users on how to turn on IPv6-only networking.\n   As can be seen from the\
    \ above list, there are only minor things that\n   can be done through standardization.\
    \  Most of the effort is practical\n   and centers around improving various implementations.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   By itself, the use of IPv6 instead of IPv4 does\
    \ not make a big\n   security difference.  The main security requirement is that,\n\
    \   naturally, network security devices need to be able to deal with IPv6\n  \
    \ in these networks.  This is already required in all dual-stack\n   networks.\
    \  As noted, it is important, e.g., to ensure firewall\n   capabilities.  Security\
    \ considerations for NAT64 and DNS64 are\n   discussed in [RFC6146] and [RFC6147].\n\
    \   In our experience, many of the critical security functions in a\n   network\
    \ end up being on the dual-stack part of the network anyway.\n   For instance,\
    \ our mail servers obviously still have to be able to\n   communicate with both\
    \ the IPv4 and IPv6 Internet, and as a result,\n   they and the associated spam\
    \ and filtering components are not in the\n   IPv6-only part of the network.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2663]       Srisuresh, P. and M. Holdrege,\
    \ \"IP Network Address\n                   Translator (NAT) Terminology and Considerations\"\
    ,\n                   RFC 2663, August 1999.\n   [RFC3484]       Draves, R., \"\
    Default Address Selection for Internet\n                   Protocol version 6\
    \ (IPv6)\", RFC 3484, February 2003.\n   [RFC3736]       Droms, R., \"Stateless\
    \ Dynamic Host Configuration\n                   Protocol (DHCP) Service for IPv6\"\
    , RFC 3736,\n                   April 2004.\n   [RFC4213]       Nordmark, E. and\
    \ R. Gilligan, \"Basic Transition\n                   Mechanisms for IPv6 Hosts\
    \ and Routers\", RFC 4213,\n                   October 2005.\n   [RFC6106]   \
    \    Jeong, J., Park, S., Beloeil, L., and S. Madanapalli,\n                 \
    \  \"IPv6 Router Advertisement Options for DNS\n                   Configuration\"\
    , RFC 6106, November 2010.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC4038]       Shin, M-K., Hong, Y-G., Hagino,\
    \ J., Savola, P., and\n                   E. Castro, \"Application Aspects of\
    \ IPv6 Transition\",\n                   RFC 4038, March 2005.\n   [RFC4291] \
    \      Hinden, R. and S. Deering, \"IP Version 6 Addressing\n                \
    \   Architecture\", RFC 4291, February 2006.\n   [RFC4861]       Narten, T., Nordmark,\
    \ E., Simpson, W., and H.\n                   Soliman, \"Neighbor Discovery for\
    \ IP version 6\n                   (IPv6)\", RFC 4861, September 2007.\n   [RFC4966]\
    \       Aoun, C. and E. Davies, \"Reasons to Move the Network\n              \
    \     Address Translator - Protocol Translator (NAT-PT) to\n                 \
    \  Historic Status\", RFC 4966, July 2007.\n   [RFC6052]       Bao, C., Huitema,\
    \ C., Bagnulo, M., Boucadair, M., and\n                   X. Li, \"IPv6 Addressing\
    \ of IPv4/IPv6 Translators\",\n                   RFC 6052, October 2010.\n  \
    \ [RFC6144]       Baker, F., Li, X., Bao, C., and K. Yin, \"Framework\n      \
    \             for IPv4/IPv6 Translation\", RFC 6144, April 2011.\n   [RFC6145]\
    \       Li, X., Bao, C., and F. Baker, \"IP/ICMP Translation\n               \
    \    Algorithm\", RFC 6145, April 2011.\n   [RFC6146]       Bagnulo, M., Matthews,\
    \ P., and I. van Beijnum,\n                   \"Stateful NAT64: Network Address\
    \ and Protocol\n                   Translation from IPv6 Clients to IPv4 Servers\"\
    ,\n                   RFC 6146, April 2011.\n   [RFC6147]       Bagnulo, M., Sullivan,\
    \ A., Matthews, P., and I. van\n                   Beijnum, \"DNS64: DNS Extensions\
    \ for Network Address\n                   Translation from IPv6 Clients to IPv4\
    \ Servers\",\n                   RFC 6147, April 2011.\n   [RFC6384]       van\
    \ Beijnum, I., \"An FTP Application Layer Gateway\n                   (ALG) for\
    \ IPv6-to-IPv4 Translation\", RFC 6384,\n                   October 2011.\n  \
    \ [ADD-LITERALS]  Wing, D., \"Coping with IP Address Literals in HTTP\n      \
    \             URIs with IPv6/IPv4 Translators\", Work in Progress,\n         \
    \          March 2010.\n   [HE-IPv6]       Hurricane Electric, \"Global IPv6 Deployment\
    \ Progress\n                   Report\", February 2012,\n                   <http://bgp.he.net/ipv6-progress-report.cgi>.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   The authors would like to thank the many people\
    \ who have engaged in\n   discussions around this topic, and particularly the\
    \ people who were\n   involved in building some of the new tools used in our network,\
    \ our\n   users who were interested in going where only few had dared to\n   venture\
    \ before, or people who helped us in this effort.  In\n   particular, we would\
    \ like to thank Martti Kuparinen, Tero Kauppinen,\n   Heikki Mahkonen, Jan Melen,\
    \ Fredrik Garneij, Christian Gotare, Teemu\n   Rinta-Aho, Petri Jokela, Mikko\
    \ Sarela, Olli Arkko, Lasse Arkko, and\n   Cameron Byrne.  Also, Marcelo Braun,\
    \ Iljitsch van Beijnum, Miika\n   Komu, and Jouni Korhonen have provided useful\
    \ discussion and comments\n   on the document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jari Arkko\n   Ericsson\n   Jorvas  02420\n   Finland\n\
    \   EMail: jari.arkko@piuha.net\n   Ari Keranen\n   Ericsson\n   Jorvas  02420\n\
    \   Finland\n   EMail: ari.keranen@ericsson.com\n"
