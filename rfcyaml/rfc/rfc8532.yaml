- contents:
  - "             Generic YANG Data Model for the Management of\n      Operations,
    Administration, and Maintenance (OAM) Protocols\n                 That Use Connectionless
    Communications\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document presents a base YANG Data model for the management
    of\n   Operations, Administration, and Maintenance (OAM) protocols that use\n
    \  connectionless communications.  The data model is defined using the\n   YANG
    data modeling language, as specified in RFC 7950.  It provides a\n   technology-independent
    abstraction of key OAM constructs for OAM\n   protocols that use connectionless
    communication.  The base model\n   presented here can be extended to include technology-specific\n
    \  details.\n   There are two key benefits of this approach: First, it leads to\n
    \  uniformity between OAM protocols.  Second, it supports both nested\n   OAM
    workflows (i.e., performing OAM functions at the same level or\n   different levels
    through a unified interface) as well as interactive\n   OAM workflows (i.e., performing
    OAM functions at the same level\n   through a unified interface).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8532.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   4\n     2.1.  Abbreviations . . . . . . . . . . . . . . . . . . . . .
    .   4\n     2.2.  Terminology . . . . . . . . . . . . . . . . . . . . . . .   5\n
    \    2.3.  Tree Diagrams . . . . . . . . . . . . . . . . . . . . . .   5\n   3.
    \ Overview of the Connectionless OAM Model  . . . . . . . . . .   5\n     3.1.
    \ TP Address  . . . . . . . . . . . . . . . . . . . . . . .   6\n     3.2.  Tools
    . . . . . . . . . . . . . . . . . . . . . . . . . .   7\n     3.3.  OAM Neighboring
    Test Points . . . . . . . . . . . . . . .   7\n     3.4.  Test Point Location
    Information . . . . . . . . . . . . .   8\n     3.5.  Test Point Locations  .
    . . . . . . . . . . . . . . . . .   8\n     3.6.  Path Discovery Data . . . .
    . . . . . . . . . . . . . . .   8\n     3.7.  Continuity Check Data . . . . .
    . . . . . . . . . . . . .   9\n     3.8.  OAM Data Hierarchy  . . . . . . . .
    . . . . . . . . . . .   9\n   4.  LIME Time Types YANG Module . . . . . . . .
    . . . . . . . . .  12\n   5.  Connectionless OAM YANG Module  . . . . . . . .
    . . . . . . .  15\n   6.  Connectionless Model Applicability  . . . . . . . .
    . . . . .  44\n     6.1.  BFD Extension . . . . . . . . . . . . . . . . . . .
    . . .  45\n       6.1.1.  Augment Method  . . . . . . . . . . . . . . . . . .
    .  45\n       6.1.2.  Schema Mount  . . . . . . . . . . . . . . . . . . . .  47\n
    \    6.2.  LSP Ping Extension  . . . . . . . . . . . . . . . . . . .  49\n       6.2.1.
    \ Augment Method  . . . . . . . . . . . . . . . . . . .  49\n       6.2.2.  Schema
    Mount  . . . . . . . . . . . . . . . . . . . .  50\n   7.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  52\n   8.  IANA Considerations . . . .
    . . . . . . . . . . . . . . . . .  54\n   9.  References  . . . . . . . . . .
    . . . . . . . . . . . . . . .  54\n     9.1.  Normative References  . . . . .
    . . . . . . . . . . . . .  54\n     9.2.  Informative References  . . . . . .
    . . . . . . . . . . .  56\n   Acknowledgments . . . . . . . . . . . . . . . .
    . . . . . . . . .  58\n   Authors' Addresses  . . . . . . . . . . . . . . . .
    . . . . . . .  59\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Operations, Administration, and Maintenance (OAM) are important\n
    \  networking functions that allow operators to:\n   1.  monitor network communications
    (i.e., reachability verification\n       and Continuity Check)\n   2.  troubleshoot
    failures (i.e., fault verification and localization)\n   3.  monitor service-level
    agreements and performance (i.e.,\n       performance management)\n   An overview
    of OAM tools is presented in [RFC7276].\n   Ping and Traceroute (see [RFC792]
    and [RFC4443]) are respectively\n   well-known fault verification and isolation
    tools for IP networks.\n   Over the years, different technologies have developed
    similar\n   toolsets for equivalent purposes.\n   The different sets of OAM tools
    may support both connection-oriented\n   or connectionless technologies.  In connection-oriented
    technologies,\n   a connection is established prior to the transmission of data.
    \ After\n   the connection is established, no additional control information such\n
    \  as signaling or operations and maintenance information is required to\n   transmit
    the actual user data.  In connectionless technologies, data\n   is typically sent
    between communicating endpoints without prior\n   arrangement, but control information
    is required to identify the\n   destination (e.g., [G.800] and [RFC7276]).  The
    YANG data model for\n   OAM protocols using connection-oriented communications
    is specified\n   in [RFC8531].\n   This document defines a base YANG data model
    for OAM protocols that\n   use connectionless communications.  The data model
    is defined using\n   the YANG data modeling language [RFC7950].  This generic
    YANG data\n   model for connectionless OAM includes only configuration and state\n
    \  data.  It can be used in conjunction with the data retrieval method\n   model
    described in [RFC8533], which focuses on the data retrieval\n   procedures such
    as RPC, or it can be used independently of this data\n   retrieval method model.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The following terms are defined in
    [RFC6241] and are used in this\n   specification:\n   o  client\n   o  configuration
    data\n   o  server\n   o  state data\n   The following terms are defined in [RFC7950]
    and are used in this\n   specification:\n   o  augment\n   o  data model\n   o
    \ data node\n   The terminology for describing YANG data models is found in\n
    \  [RFC7950].\n"
  - contents:
    - "2.1.  Abbreviations\n   BFD - Bidirectional Forwarding Detection [RFC5880].\n
      \  RPC - Remote Procedure Call [RFC1831].\n   DSCP - Differentiated Services
      Code Point.\n   VRF - Virtual Routing and Forwarding [RFC4382].\n   OWAMP -
      One-Way Active Measurement Protocol [RFC4656].\n   TWAMP - Two-Way Active Measurement
      Protocol [RFC5357].\n   AS - Autonomous System.\n   LSP - Label Switched Path.\n
      \  TE - Traffic Engineering.\n   MPLS - Multiprotocol Label Switching.\n   NI
      - Network Instance.\n   PTP - Precision Time Protocol [IEEE.1588v2].\n   NTP
      - Network Time Protocol [RFC5905].\n"
    title: 2.1.  Abbreviations
  - contents:
    - "2.2.  Terminology\n   MAC - Media Access Control.\n   MAC address - Address
      for the data-link layer interface.\n   TP - Test Point.  The TP is a functional
      entity that is defined at a\n   node in the network and can initiate and/or
      react to OAM diagnostic\n   tests.  This document focuses on the data-plane
      functionality of TPs.\n   RPC operation - A specific Remote Procedure Call.\n
      \  CC - A Continuity Check [RFC7276] is used to verify that a\n   destination
      is reachable and therefore also referred to as\n   reachability verification.\n"
    title: 2.2.  Terminology
  - contents:
    - "2.3.  Tree Diagrams\n    Tree diagrams used in this document follow the notation
      defined in\n    [RFC8340].\n"
    title: 2.3.  Tree Diagrams
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Overview of the Connectionless OAM Model\n   The YANG data model for OAM
    protocols that use connectionless\n   communications has been split into two modules:\n
    \  o  The \"ietf-lime-time-types\" module provides common definitions such\n      as
    Time-related data types and Timestamp-related data types.\n   o  The \"ietf-connectionless-oam\"
    module defines technology-\n      independent abstraction of key OAM constructs
    for OAM protocols\n      that use connectionless communication.\n   The \"ietf-connectionless-oam\"
    module augments the \"/networks/network/\n   node\" path defined in the \"ietf-network\"
    module [RFC8345] with the\n   'test-point-locations' grouping defined in Section
    3.5.  The network\n   nodes in the \"/networks/network/node\" path are used to
    describe the\n   network hierarchies and the inventory of nodes contained in a\n
    \  network.\n   Under the 'test-point-locations' grouping, each test point location\n
    \  is chosen based on the 'tp-location-type' leaf, which, when chosen,\n   leads
    to a container that includes a list of 'test-point-locations'.\n   Each 'test-point-locations'
    list includes a 'test-point-location-\n   info' grouping.  The 'test-point-location-info'
    grouping includes:\n   o  'tp-technology' grouping,\n   o  'tp-tools' grouping,
    and\n   o  'connectionless-oam-tps' grouping.\n   The groupings of 'tp-address'
    and 'tp-address-ni' are kept out of the\n   'test-point-location-info' grouping
    to make it addressing agnostic\n   and allow varied composition.  Depending upon
    the choice of the\n   'tp-location-type' (determined by the 'tp-address-ni'),
    each\n   container differs in its composition of 'test-point-locations', while\n
    \  the 'test-point-location-info' is a common aspect of every\n   'test-point-locations'.\n
    \  The 'tp-address-ni' grouping is used to describe the corresponding\n   network
    instance.  The 'tp-technology' grouping indicates OAM\n   technology details.
    \ The 'connectionless-oam-tps' grouping is used to\n   describe the relationship
    of one test point with other test points.\n   The 'tp-tools' grouping describes
    the OAM tools supported.\n   In addition, at the top of the model, there is an
    'cc-oper-data'\n   container for session statistics.  A grouping is also defined
    for\n   common session statistics, and these are only applicable for\n   proactive
    OAM sessions (see Section 3.2).\n"
  - contents:
    - "3.1.  TP Address\n   With connectionless OAM protocols, the TP address can
      be one of the\n   following types:\n   o  MAC address [RFC6136] at the data-link
      layer for TPs\n   o  IPv4 or IPv6 address at the IP layer for TPs\n   o  TP-attribute
      identifying a TP associated with an application-layer\n      function\n   o
      \ Router-id to represent the device or node, which is commonly used\n      to
      identify nodes in routing and other control-plane protocols\n      [RFC8294].\n
      \  To define a forwarding treatment of a test packet, the 'tp-address'\n   grouping
      needs to be associated with additional parameters, e.g.,\n   DSCP for IP or
      Traffic Class [RFC5462] for MPLS.  In the generic\n   connectionless OAM YANG
      data model, these parameters are not\n   explicitly configured.  The model user
      can add corresponding\n   parameters according to their requirements.\n"
    title: 3.1.  TP Address
  - contents:
    - "3.2.  Tools\n   The different OAM tools may be used in one of two basic types
      of\n   activation: proactive and on-demand.  Proactive OAM refers to OAM\n   actions
      that are carried out continuously to permit proactive\n   reporting of faults.
      \ The proactive OAM method requires persistent\n   configuration.  On-demand
      OAM refers to OAM actions that are\n   initiated via manual intervention for
      a limited time to carry out\n   specific diagnostics.  The on-demand OAM method
      requires only\n   transient configuration (e.g., [RFC7276] and [G.8013]).  In\n
      \  connectionless OAM, the 'session-type' grouping is defined to\n   indicate
      which kind of activation will be used by the current\n   session.\n   In connectionless
      OAM, the tools attribute is used to describe a\n   toolset for fault detection
      and isolation.  In addition, it can serve\n   as a constraint condition when
      the base model is extended to a\n   specific OAM technology.  For example, to
      fulfill the ICMP PING\n   configuration, the \"../coam:continuity-check\" leaf
      should be set to\n   \"true\", and then the LIME base model should be augmented
      with details\n   specific to ICMP PING.\n"
    title: 3.2.  Tools
  - contents:
    - "3.3.  OAM Neighboring Test Points\n   Given that typical network communication
      stacks have a multi-layer\n   architecture, the set of associated OAM protocols
      has also a multi-\n   layer structure; each communication layer in the stack
      may have its\n   own OAM protocol [RFC7276] that may also be linked to a specific\n
      \  administrative domain.  Management of these OAM protocols will\n   necessitate
      associated test points in the nodes accessible by\n   appropriate management
      domains.  Accordingly, a given network\n   interface may actually present several
      test points.\n   Each OAM test point may have an associated list of neighboring
      test\n   points that are in other layers up and down the protocol stack for\n
      \  the same interface and are therefore related to the current test\n   point.
      \ This allows users to easily navigate between related\n   neighboring layers
      to efficiently troubleshoot a defect.  In this\n   model, the 'position' leaf
      defines the relative position of the\n   neighboring test point corresponding
      to the current test point, and\n   it is provided to allow correlation of faults
      at different locations.\n   If there is one neighboring test point placed before
      the current test\n   point, the 'position' leaf is set to -1.  If there is one
      neighboring\n   test point placed after the current test point, the 'position'
      leaf\n   is set to 1.  If there is no neighboring test point placed before or\n
      \  after the current test point, the 'position' leaf is set to 0.\n     +--
      oam-neighboring-tps* [index]\n        +-- index?                         uint16\n
      \       +-- position?                      int8\n        +-- (tp-location)?\n
      \          +--:(mac-address)\n           |  +-- mac-address-location?    yang:mac-address\n
      \          +--:(ipv4-address)\n           |  +-- ipv4-address-location?   inet:ipv4-address\n
      \          +--:(ipv6-address)\n           |  +-- ipv6-address-location?   inet:ipv6-address\n
      \          +--:(as-number)\n           |  +-- as-number-location?      inet:as-number\n
      \          +--:(router-id)\n              +-- router-id-location?      rt:router-id\n"
    title: 3.3.  OAM Neighboring Test Points
  - contents:
    - "3.4.  Test Point Location Information\n   This is a generic grouping for Test
      Point Location Information (i.e.,\n   'test-point-location-info' grouping).
      \ It provides details of Test\n   Point Location using the 'tp-technology',
      'tp-tools', and\n   'oam-neighboring-tps' groupings, all of which are defined
      above.\n"
    title: 3.4.  Test Point Location Information
  - contents:
    - "3.5.  Test Point Locations\n   This is a generic grouping for Test Point Locations.
      \ 'tp-location-\n   type' leaf is used to define location types -- for example,\n
      \  'ipv4-location-type', 'ipv6-location-type', etc.  Container is\n   defined
      under each location type containing a list keyed to a test\n   point address,
      Test Point Location Information defined in the section\n   above, and network
      instance name (e.g., VRF instance name) if\n   required.\n"
    title: 3.5.  Test Point Locations
  - contents:
    - "3.6.  Path Discovery Data\n   This is a generic grouping for the path discovery
      data model that can\n   be retrieved by any data retrieval method, including
      RPC operations.\n   Path discovery data output from methods, includes 'src-test-point'\n
      \  container, 'dst-test-point' container, 'sequence-number' leaf,\n   'hop-cnt'
      leaf, session statistics of various kinds, and information\n   related to path
      verification and path trace.  Path discovery includes\n   data to be retrieved
      on a 'per-hop' basis via a list of 'path-trace-\n   info-list' items which includes
      information such as 'timestamp'\n   grouping, 'ingress-intf-name', 'egress-intf-name',
      and 'app-meta-\n   data'.  The path discovery data model is made generic enough
      to allow\n   different methods of data retrieval.  None of the fields are made\n
      \  mandatory for that reason.  Note that a set of retrieval methods are\n   defined
      in [RFC8533].\n"
    title: 3.6.  Path Discovery Data
  - contents:
    - "3.7.  Continuity Check Data\n   This is a generic grouping for the Continuity
      Check data model that\n   can be retrieved by any data retrieval methods including
      RPC\n   operations.  Continuity Check data output from methods, includes\n   'src-test-point'
      container, 'dst-test-point' container,\n   'sequence-number' leaf, 'hop-cnt'
      leaf, and session statistics of\n   various kinds.  The Continuity Check data
      model is made generic\n   enough to allow different methods of data retrieval.
      \ None of the\n   fields are made mandatory for that reason.  Noted that a set
      of\n   retrieval methods are defined in [RFC8533].\n"
    title: 3.7.  Continuity Check Data
  - contents:
    - "3.8.  OAM Data Hierarchy\n   The complete data hierarchy related to the OAM
      YANG data model is\n   presented below.\n  module: ietf-connectionless-oam\n
      \     +--ro cc-session-statistics-data {continuity-check}?\n         +--ro cc-session-statistics*
      [type]\n            +--ro type                           identityref\n            +--ro
      cc-ipv4-sessions-statistics\n            |  +--ro cc-session-statistics\n            |
      \    +--ro session-count?              uint32\n            |     +--ro session-up-count?
      \          uint32\n            |     +--ro session-down-count?         uint32\n
      \           |     +--ro session-admin-down-count?   uint32\n            +--ro
      cc-ipv6-sessions-statistics\n               +--ro cc-session-statistics\n                  +--ro
      session-count?              uint32\n                  +--ro session-up-count?
      \          uint32\n                  +--ro session-down-count?         uint32\n
      \                 +--ro session-admin-down-count?   uint32\n    augment /nd:networks/nd:network/nd:node:\n
      \     +--rw tp-location-type?                identityref\n      +--rw ipv4-location-type\n
      \     |  +--rw test-point-ipv4-location-list\n      |     +--rw test-point-locations*
      [ipv4-location ni]\n      |        +--rw ipv4-location          inet:ipv4-address\n
      \     |        +--rw ni                     routing-instance-ref\n      |        +--rw
      (technology)?\n      |        |  +--:(technology-null)\n      |        |     +--rw
      tech-null?             empty\n      |        +--rw tp-tools\n      |        |
      \ +--rw continuity-check    boolean\n      |        |  +--rw path-discovery
      \     boolean\n      |        +--rw root?                  <anydata>\n      |
      \       +--rw oam-neighboring-tps* [index]\n      |           +--rw index                    uint16\n
      \     |           +--rw position?                int8\n      |           +--rw
      (tp-location)?\n      |              +--:(mac-address)\n      |              |
      \ +--rw mac-address-location?    yang:mac-address\n      |              +--:(ipv4-address)\n
      \     |              |  +--rw ipv4-address-location?   inet:ipv4-address\n      |
      \             +--:(ipv6-address)\n      |              |  +--rw ipv6-address-location?
      \  inet:ipv6-address\n      |              +--:(as-number)\n      |              |
      \ +--rw as-number-location?      inet:as-number\n      |              +--:(router-id)\n
      \     |                 +--rw router-id-location?      rt:router-id\n      +--rw
      ipv6-location-type\n      |  +--rw test-point-ipv6-location-list\n      |     +--rw
      test-point-locations* [ipv6-location ni]\n      |        +--rw ipv6-location
      \         inet:ipv6-address\n      |        +--rw ni                     routing-instance-ref\n
      \     |        +--rw (technology)?\n      |        |  +--:(technology-null)\n
      \     |        |     +--rw tech-null?             empty\n      |        +--rw
      tp-tools\n      |        |  +--rw continuity-check    boolean\n      |        |
      \ +--rw path-discovery      boolean\n      |        +--rw root?                  <anydata>\n
      \     |        +--rw oam-neighboring-tps* [index]\n      |           +--rw index
      \                   uint16\n      |           +--rw position?                int8\n
      \     |           +--rw (tp-location)?\n      |              +--:(mac-address)\n
      \     |              |  +--rw mac-address-location?    yang:mac-address\n      |
      \             +--:(ipv4-address)\n      |              |  +--rw ipv4-address-location?
      \  inet:ipv4-address\n      |              +--:(ipv6-address)\n      |              |
      \ +--rw ipv6-address-location?   inet:ipv6-address\n      |              +--:(as-number)\n
      \     |              |  +--rw as-number-location?      inet:as-number\n      |
      \             +--:(router-id)\n      |                 +--rw router-id-location?
      \     rt:router-id\n      +--rw mac-location-type\n      |  +--rw test-point-mac-address-location-list\n
      \     |     +--rw test-point-locations* [mac-address-location]\n      |        +--rw
      mac-address-location    yang:mac-address\n      |        +--rw (technology)?\n
      \     |        |  +--:(technology-null)\n      |        |     +--rw tech-null?
      \             empty\n      |        +--rw tp-tools\n      |        |  +--rw
      continuity-check    boolean\n      |        |  +--rw path-discovery      boolean\n
      \     |        +--rw root?                   <anydata>\n      |        +--rw
      oam-neighboring-tps* [index]\n      |           +--rw index                    uint16\n
      \     |           +--rw position?                int8\n      |           +--rw
      (tp-location)?\n      |              +--:(mac-address)\n      |              |
      \ +--rw mac-address-location?    yang:mac-address\n      |              +--:(ipv4-address)\n
      \     |              |  +--rw ipv4-address-location?   inet:ipv4-address\n      |
      \             +--:(ipv6-address)\n      |              |  +--rw ipv6-address-location?
      \  inet:ipv6-address\n      |              +--:(as-number)\n      |              |
      \ +--rw as-number-location?      inet:as-number\n      |              +--:(router-id)\n
      \     |                 +--rw router-id-location?      rt:router-id\n      +--rw
      group-as-number-location-type\n      |  +--rw test-point-as-number-location-list\n
      \     |     +--rw test-point-locations* [as-number-location]\n      |        +--rw
      as-number-location     inet:as-number\n      |        +--rw ni?                    routing-instance-ref\n
      \     |        +--rw (technology)?\n      |        |  +--:(technology-null)\n
      \     |        |     +--rw tech-null?             empty\n      |        +--rw
      tp-tools\n      |        |  +--rw continuity-check    boolean\n      |        |
      \ +--rw path-discovery      boolean\n      |        +--rw root?                  <anydata>\n
      \     |        +--rw oam-neighboring-tps* [index]\n      |           +--rw index
      \                   uint16\n      |           +--rw position?                int8\n
      \     |           +--rw (tp-location)?\n      |              +--:(mac-address)\n
      \     |              |  +--rw mac-address-location?    yang:mac-address\n      |
      \             +--:(ipv4-address)\n      |              |  +--rw ipv4-address-location?
      \  inet:ipv4-address\n      |              +--:(ipv6-address)\n      |              |
      \ +--rw ipv6-address-location?   inet:ipv6-address\n      |              +--:(as-number)\n
      \     |              |  +--rw as-number-location?      inet:as-number\n      |
      \             +--:(router-id)\n      |                 +--rw router-id-location?
      \     rt:router-id\n      +--rw group-router-id-location-type\n         +--rw
      test-point-system-info-location-list\n            +--rw test-point-locations*
      [router-id-location]\n               +--rw router-id-location     rt:router-id\n
      \              +--rw ni?                    routing-instance-ref\n               +--rw
      (technology)?\n               |  +--:(technology-null)\n               |     +--rw
      tech-null?             empty\n               +--rw tp-tools\n               |
      \ +--rw continuity-check    boolean\n               |  +--rw path-discovery
      \     boolean\n               +--rw root?                  <anydata>\n               +--rw
      oam-neighboring-tps* [index]\n                  +--rw index                    uint16\n
      \                 +--rw position?                int8\n                  +--rw
      (tp-location)?\n                     +--:(mac-address)\n                     |
      \ +--rw mac-address-location?    yang:mac-address\n                     +--:(ipv4-address)\n
      \                    |  +--rw ipv4-address-location?   inet:ipv4-address\n                     +--:(ipv6-address)\n
      \                    |  +--rw ipv6-address-location?   inet:ipv6-address\n                     +--:(as-number)\n
      \                    |  +--rw as-number-location?      inet:as-number\n                     +--:(router-id)\n
      \                       +--rw router-id-location?      rt:router-id\n"
    title: 3.8.  OAM Data Hierarchy
  title: 3.  Overview of the Connectionless OAM Model
- contents:
  - "4.  LIME Time Types YANG Module\n   <CODE BEGINS> file \"ietf-lime-time-types@2019-04-16.yang\"\n
    \  module ietf-lime-time-types {\n     yang-version 1.1;\n     namespace \"urn:ietf:params:xml:ns:yang:ietf-lime-time-types\";\n
    \    prefix lime;\n     organization\n       \"IETF LIME Working Group\";\n     contact\n
    \      \"WG Web:   <https://datatracker.ietf.org/wg/lime>\n        WG List:  <mailto:lmap@ietf.org>\n
    \       Editor:   Qin Wu\n                  <bill.wu@huawei.com>\";\n     description\n
    \      \"This module provides time-related definitions used by the data\n        models
    written for Layer Independent OAM Management in the\n        Multi-Layer Environment
    (LIME).  This module defines\n        identities but no schema tree elements.\n
    \       Copyright (c) 2019 IETF Trust and the persons identified as\n        authors
    of the code.  All rights reserved.\n        Redistribution and use in source and
    binary forms, with or\n        without modification, is permitted pursuant to,
    and subject\n        to the license terms contained in, the Simplified BSD License\n
    \       set forth in Section 4.c of the IETF Trust's Legal Provisions\n        Relating
    to IETF Documents\n        (http://trustee.ietf.org/license-info).\n        This
    version of this YANG module is part of RFC 8532; see\n        the RFC itself for
    full legal notices.\";\n     revision 2019-04-16 {\n       description\n         \"Initial
    version.\";\n       reference\n         \"RFC 8532: Generic YANG Data Model for
    the Management of\n          Operations, Administration, and Maintenance (OAM)
    Protocols\n          That Use Connectionless Communications\";\n     }\n     /***
    Collection of common types related to time ***/\n     /*** Time unit identity
    ***/\n     identity time-unit-type {\n       description\n         \"Time unit
    type.\";\n     }\n     identity hours {\n       base time-unit-type;\n       description\n
    \        \"Time unit in hours.\";\n     }\n     identity minutes {\n       base
    time-unit-type;\n       description\n         \"Time unit in minutes.\";\n     }\n
    \    identity seconds {\n       base time-unit-type;\n       description\n         \"Time
    unit in seconds.\";\n     }\n     identity milliseconds {\n       base time-unit-type;\n
    \      description\n         \"Time unit in milliseconds.\";\n     }\n     identity
    microseconds {\n       base time-unit-type;\n       description\n         \"Time
    unit in microseconds.\";\n     }\n     identity nanoseconds {\n       base time-unit-type;\n
    \      description\n         \"Time unit in nanoseconds.\";\n     }\n     /***
    Timestamp format Identity ***/\n     identity timestamp-type {\n       description\n
    \        \"Base identity for Timestamp Type.\";\n     }\n     identity truncated-ptp
    {\n       base timestamp-type;\n       description\n         \"Identity for 64-bit
    short-format PTP timestamp.\";\n     }\n     identity truncated-ntp {\n       base
    timestamp-type;\n       description\n         \"Identity for 32-bit short-format
    NTP timestamp.\";\n     }\n     identity ntp64 {\n       base timestamp-type;\n
    \      description\n         \"Identity for 64-bit NTP timestamp.\";\n     }\n
    \    identity icmp {\n       base timestamp-type;\n       description\n         \"Identity
    for 32-bit ICMP timestamp.\";\n     }\n     identity ptp80 {\n       base timestamp-type;\n
    \      description\n         \"Identity for 80-bit PTP timestamp.\";\n     }\n
    \  }\n   <CODE ENDS>\n"
  title: 4.  LIME Time Types YANG Module
- contents:
  - "5.  Connectionless OAM YANG Module\n   This module imports the Core YANG Derived
    Types definition (\"ietf-\n   yang-types\" module) and Internet-Specific Derived
    Types definitions\n   (\"ietf-inet-types\" module) from [RFC6991], the \"ietf-routing-types\"\n
    \  module from [RFC8294], the \"ietf-interfaces\" module from [RFC8343],\n   the
    \"ietf-network\" module from [RFC8345], the \"ietf-network-instance\"\n   module
    from [RFC8529], and the \"ietf-lime-time-types\" module in\n   Section 4.  This
    module references [IEEE.1588v1], [IEEE.1588v2],\n   [RFC8029], and additional
    RFCs cited elsewhere in this document.\n   <CODE BEGINS> file \"ietf-connectionless-oam@2019-04-16.yang\"\n"
  - "module ietf-connectionless-oam {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-connectionless-oam\";\n
    \ prefix cl-oam;\n  import ietf-yang-schema-mount {\n    prefix yangmnt;\n  }\n
    \ import ietf-network {\n    prefix nd;\n  }\n  import ietf-yang-types {\n    prefix
    yang;\n  }\n  import ietf-interfaces {\n    prefix if;\n  }\n  import ietf-inet-types
    {\n    prefix inet;\n  }\n  import ietf-network-instance {\n    prefix ni;\n  }\n
    \ import ietf-routing-types {\n    prefix rt;\n  }\n  import ietf-lime-time-types
    {\n    prefix lime;\n  }\n  organization\n    \"IETF LIME Working Group\";\n  contact\n
    \   \"WG Web:   <https://datatracker.ietf.org/wg/lime>\n     WG List:  <mailto:lmap@ietf.org>\n
    \    Deepak Kumar <dekumar@cisco.com>\n     Qin Wu <bill.wu@huawei.com>\n     Srihari
    Raghavan <srihari@cisco.com>\n     Michael Wang <wangzitao@huawei.com>\n     Reshad
    Rahman <rrahman@cisco.com>\";\n  description\n    \"This YANG module defines the
    generic configuration,\n     data model, and statistics for OAM protocols using\n
    \    connectionless communications, described in a\n     protocol independent
    manner.  It is assumed that each\n     protocol maps corresponding abstracts to
    its native\n     format.  Each protocol may extend the YANG data model defined\n
    \    here to include protocol specific extensions.\n     Copyright (c) 2019 IETF
    Trust and the persons identified as\n     authors of the code.  All rights reserved.\n
    \    Redistribution and use in source and binary forms, with or\n     without
    modification, is permitted pursuant to, and subject\n     to the license terms
    contained in, the Simplified BSD License\n     set forth in Section 4.c of the
    IETF Trust's Legal Provisions\n     Relating to IETF Documents\n     (http://trustee.ietf.org/license-info).\n
    \    This version of this YANG module is part of RFC 8532; see\n     the RFC itself
    for full legal notices.\";\n  revision 2019-04-16 {\n    description\n      \"Base
    model for Connectionless Operations, Administration,\n       and Maintenance (OAM).\";\n
    \   reference\n      \"RFC 8532: Generic YANG Data Model for the Management of\n
    \      Operations, Administration, and Maintenance (OAM) Protocols\n       That
    Use Connectionless Communications\";\n  }\n  feature connectionless {\n    description\n
    \     \"This feature indicates that the OAM solution is connectionless.\";\n  }\n
    \ feature continuity-check {\n    description\n      \"This feature indicates
    that the server supports\n       executing a Continuity Check OAM command and\n
    \      returning a response.  Servers that do not advertise\n       this feature
    will not support executing\n       Continuity Check commands or the RPC operation
    model for\n       Continuity Check commands.\";\n  }\n  feature path-discovery
    {\n    description\n      \"This feature indicates that the server supports\n
    \      executing a path discovery OAM command and\n       returning a response.
    \ Servers that do not advertise\n       this feature will not support executing\n
    \      path discovery commands or the RPC operation model for\n       path discovery
    commands.\";\n  }\n  feature ptp-long-format {\n    description\n      \"This
    feature indicates that the timestamp is PTP long format.\";\n  }\n  feature ntp-short-format
    {\n    description\n      \"This feature indicates that the timestamp is NTP short
    format.\";\n  }\n  feature icmp-timestamp {\n    description\n      \"This feature
    indicates that the timestamp is ICMP timestamp.\";\n  }\n  identity traffic-type
    {\n    description\n      \"This is the base identity of the traffic type,\n       which
    includes IPv4, IPv6, etc.\";\n  }\n  identity ipv4 {\n    base traffic-type;\n
    \   description\n      \"identity for IPv4 traffic type.\";\n  }\n  identity ipv6
    {\n    base traffic-type;\n    description\n      \"identity for IPv6 traffic
    type.\";\n  }\n  identity address-attribute-types {\n    description\n      \"This
    is the base identity of the address attribute types, which\n       are Generic
    IPv4/IPv6 Prefix, BGP Labeled IPv4/IPv6 Prefix,\n       Tunnel ID, PW ID, VPLS
    VE ID, etc. (See RFC 8029 for details.)\";\n  }\n  typedef address-attribute-type
    {\n    type identityref {\n      base address-attribute-types;\n    }\n    description\n
    \     \"Target address attribute type.\";\n  }\n  typedef percentage {\n    type
    decimal64 {\n      fraction-digits 5;\n      range \"0..100\";\n    }\n    description\n
    \     \"Percentage.\";\n  }\n  typedef routing-instance-ref {\n    type leafref
    {\n      path \"/ni:network-instances/ni:network-instance/ni:name\";\n    }\n
    \   description\n      \"This type is used for leafs that reference a routing
    instance\n       configuration.\";\n  }\n  grouping cc-session-statistics {\n
    \   description\n      \"Grouping for session statistics.\";\n    container cc-session-statistics
    {\n      description\n        \"CC session counters.\";\n      leaf session-count
    {\n        type uint32;\n        default \"0\";\n        description\n          \"Number
    of Continuity Check sessions.\n           A value of zero indicates that no session\n
    \          count is sent.\";\n      }\n      leaf session-up-count {\n        type
    uint32;\n        default \"0\";\n        description\n          \"Number of sessions
    that are up.\n           A value of zero indicates that no up\n           session
    count is sent.\";\n      }\n      leaf session-down-count {\n        type uint32;\n
    \       default \"0\";\n        description\n          \"Number of sessions that
    are down.\n           A value of zero indicates that no down\n           session
    count is sent.\";\n      }\n      leaf session-admin-down-count {\n        type
    uint32;\n        default \"0\";\n        description\n          \"Number of sessions
    that are admin-down.\n           A value of zero indicates that no admin-\n           down
    session count is sent.\";\n      }\n    }\n  }\n  grouping session-packet-statistics
    {\n    description\n      \"Grouping for statistics per session packet.\";\n    container
    session-packet-statistics {\n      description\n        \"Statistics per session
    packet.\";\n      leaf rx-packet-count {\n        type uint32 {\n          range
    \"0..4294967295\";\n        }\n        default \"0\";\n        description\n          \"Total
    count of received OAM packets.\n           The value of count will be set to zero
    (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \     leaf tx-packet-count {\n        type uint32 {\n          range \"0..4294967295\";\n
    \       }\n        default \"0\";\n        description\n          \"Total count
    of transmitted OAM packets.\n           The value of count will be set to zero
    (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \     leaf rx-bad-packet {\n        type uint32 {\n          range \"0..4294967295\";\n
    \       }\n        default \"0\";\n        description\n          \"Total number
    of received bad OAM packets.\n           The value of count will be set to zero
    (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \     leaf tx-packet-failed {\n        type uint32 {\n          range \"0..4294967295\";\n
    \       }\n        default \"0\";\n        description\n          \"Total number
    of OAM packets that failed when sent.\n           The value of count will be set
    to zero (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \   }\n  }\n  grouping cc-per-session-statistics {\n    description\n      \"Grouping
    for per-session statistics.\";\n    container cc-per-session-statistics {\n      description\n
    \       \"Per-session statistics.\";\n      leaf create-time {\n        type yang:date-and-time;\n
    \       description\n          \"Time and date when session is created.\";\n      }\n
    \     leaf last-down-time {\n        type yang:date-and-time;\n        description\n
    \         \"Time and date of the last time session was down.\";\n      }\n      leaf
    last-up-time {\n        type yang:date-and-time;\n        description\n          \"Time
    and date of the last time session was up.\";\n      }\n      leaf down-count {\n
    \       type uint32 {\n          range \"0..4294967295\";\n        }\n        default
    \"0\";\n        description\n          \"Total count of Continuity Check sessions
    down.\n           The value of count will be set to zero (0)\n           on creation
    and will thereafter increase\n           monotonically until it reaches a maximum
    value\n           of 2^32-1 (4294967295 decimal), when it wraps\n           around
    and starts increasing again from zero.\";\n      }\n      leaf admin-down-count
    {\n        type uint32 {\n          range \"0..4294967295\";\n        }\n        default
    \"0\";\n        description\n          \"Total count of Continuity Check sessions
    admin down.\n           The value of count will be set to zero (0)\n           on
    creation and will thereafter increase\n           monotonically until it reaches
    a maximum value\n           of 2^32-1 (4294967295 decimal), when it wraps\n           around
    and starts increasing again from zero.\";\n      }\n      uses session-packet-statistics;\n
    \   }\n  }\n  grouping session-error-statistics {\n    description\n      \"Grouping
    for per-session error statistics.\";\n    container session-error-statistics {\n
    \     description\n        \"Per-session error statistics.\";\n      leaf packet-loss-count
    {\n        type uint32 {\n          range \"0..4294967295\";\n        }\n        default
    \"0\";\n        description\n          \"Total count of received packet drops.\n
    \          The value of count will be set to zero (0)\n           on creation
    and will thereafter increase\n           monotonically until it reaches a maximum
    value\n           of 2^32-1 (4294967295 decimal), when it wraps\n           around
    and starts increasing again from zero.\";\n      }\n      leaf loss-ratio {\n
    \       type percentage;\n        description\n          \"Loss ratio of the packets.
    \ Expressed as percentage\n           of packets lost with respect to packets
    sent.\";\n      }\n      leaf packet-reorder-count {\n        type uint32 {\n
    \         range \"0..4294967295\";\n        }\n        default \"0\";\n        description\n
    \         \"Total count of received packets that were reordered.\n           The
    value of count will be set to zero (0)\n           on creation and will thereafter
    increase\n           monotonically until it reaches a maximum value\n           of
    2^32-1 (4294967295 decimal), when it wraps\n           around and starts increasing
    again from zero.\";\n      }\n      leaf packets-out-of-seq-count {\n        type
    uint32 {\n          range \"0..4294967295\";\n        }\n        description\n
    \         \"Total count of packets received out of sequence.\n           The value
    of count will be set to zero (0)\n           on creation and will thereafter increase\n
    \          monotonically until it reaches a maximum value\n           of 2^32-1
    (4294967295 decimal), when it wraps\n           around and starts increasing again
    from zero.\";\n      }\n      leaf packets-dup-count {\n        type uint32 {\n
    \         range \"0..4294967295\";\n        }\n        description\n          \"Total
    count of received packet duplicates.\n           The value of count will be set
    to zero (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \   }\n  }\n  grouping session-delay-statistics {\n    description\n      \"Grouping
    for delay statistics per session.\";\n    container session-delay-statistics {\n
    \     description\n        \"Session delay summarized information.  By default,
    a\n         one-way measurement protocol (e.g., OWAMP) is used\n         to measure
    delay.  When a two-way measurement protocol\n         (e.g., TWAMP) is used instead,
    it can be indicated\n         using the protocol-id defined in RPC operation of\n
    \        retrieval methods for connectionless OAM (RFC 8533),\n         i.e.,
    set protocol-id as OWAMP.  Note that only one\n         measurement protocol for
    delay is specified for\n         interoperability reasons.\";\n      leaf time-unit-value
    {\n        type identityref {\n          base lime:time-unit-type;\n        }\n
    \       default \"lime:milliseconds\";\n        description\n          \"Time
    units, where the options are s, ms, ns, etc.\";\n      }\n      leaf min-delay-value
    {\n        type uint32;\n        description\n          \"Minimum delay value
    observed.\";\n      }\n      leaf max-delay-value {\n        type uint32;\n        description\n
    \         \"Maximum delay value observed.\";\n      }\n      leaf average-delay-value
    {\n        type uint32;\n        description\n          \"Average delay value
    observed.\";\n      }\n    }\n  }\n  grouping session-jitter-statistics {\n    description\n
    \     \"Grouping for per session jitter statistics.\";\n    container session-jitter-statistics
    {\n      description\n        \"Summarized information about session jitter.  By
    default,\n         jitter is measured using IP Packet Delay Variation\n         (IPDV)
    as defined in RFC 3393.  When the other measurement\n         method is used instead
    (e.g., Packet Delay Variation used\n         in ITU-T Recommendation Y.1540, it
    can be indicated using\n         protocol-id-meta-data defined in RPC operation
    of\n         retrieval methods for connectionless OAM (RFC 8533).\n         Note
    that only one measurement method for jitter is\n         specified for interoperability
    reasons.\";\n      leaf unit-value {\n        type identityref {\n          base
    lime:time-unit-type;\n        }\n        default \"lime:milliseconds\";\n        description\n
    \         \"Time units, where the options are s, ms, ns, etc.\";\n      }\n      leaf
    min-jitter-value {\n        type uint32;\n        description\n          \"Minimum
    jitter value observed.\";\n      }\n      leaf max-jitter-value {\n        type
    uint32;\n        description\n          \"Maximum jitter value observed.\";\n
    \     }\n      leaf average-jitter-value {\n        type uint32;\n        description\n
    \         \"Average jitter value observed.\";\n      }\n    }\n  }\n  grouping
    session-path-verification-statistics {\n    description\n      \"Grouping for
    path verification statistics per session.\";\n    container session-path-verification-statistics
    {\n      description\n        \"OAM path verification statistics per session.\";\n
    \     leaf verified-count {\n        type uint32 {\n          range \"0..4294967295\";\n
    \       }\n        description\n          \"Total number of OAM packets that\n
    \          went through a path as intended.\n           The value of count will
    be set to zero (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \     leaf failed-count {\n        type uint32 {\n          range \"0..4294967295\";\n
    \       }\n        description\n          \"Total number of OAM packets that\n
    \          went through an unintended path.\n           The value of count will
    be set to zero (0)\n           on creation and will thereafter increase\n           monotonically
    until it reaches a maximum value\n           of 2^32-1 (4294967295 decimal), when
    it wraps\n           around and starts increasing again from zero.\";\n      }\n
    \   }\n  }\n  grouping session-type {\n    description\n      \"This object indicates
    which kind of activation will\n       be used by the current session.\";\n    leaf
    session-type {\n      type enumeration {\n        enum proactive {\n          description\n
    \           \"The current session is a proactive session.\";\n        }\n        enum
    on-demand {\n          description\n            \"The current session is an on-demand
    session.\";\n        }\n      }\n      default \"on-demand\";\n      description\n
    \       \"Indicate which kind of activation will be used\n         by the current
    session.\";\n    }\n  }\n  identity tp-address-technology-type {\n    description\n
    \     \"Test point address type.\";\n  }\n  identity mac-address-type {\n    base
    tp-address-technology-type;\n    description\n      \"MAC address type.\";\n  }\n
    \ identity ipv4-address-type {\n    base tp-address-technology-type;\n    description\n
    \     \"IPv4 address type.\";\n  }\n  identity ipv6-address-type {\n    base tp-address-technology-type;\n
    \   description\n      \"IPv6 address type.\";\n  }\n  identity tp-attribute-type
    {\n    base tp-address-technology-type;\n    description\n      \"Test point attribute
    type.\";\n  }\n  identity router-id-address-type {\n    base tp-address-technology-type;\n
    \   description\n      \"System ID address type.\";\n  }\n  identity as-number-address-type
    {\n    base tp-address-technology-type;\n    description\n      \"AS number address
    type.\";\n  }\n  identity route-distinguisher-address-type {\n    base tp-address-technology-type;\n
    \   description\n      \"Route Distinguisher address type.\";\n  }\n  grouping
    tp-address {\n    leaf tp-location-type {\n      type identityref {\n        base
    tp-address-technology-type;\n      }\n      mandatory true;\n      description\n
    \       \"Test point address type.\";\n    }\n    container mac-address {\n      when
    \"derived-from-or-self(../tp-location-type,\"\n         + \"'cl-oam:mac-address-type')\"
    {\n        description\n          \"MAC address type.\";\n      }\n      leaf
    mac-address {\n        type yang:mac-address;\n        mandatory true;\n        description\n
    \         \"MAC address.\";\n      }\n      description\n        \"MAC address
    based TP addressing.\";\n    }\n    container ipv4-address {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:ipv4-address-type')\" {\n        description\n          \"IPv4
    address type.\";\n      }\n      leaf ipv4-address {\n        type inet:ipv4-address;\n
    \       mandatory true;\n        description\n          \"IPv4 address.\";\n      }\n
    \     description\n        \"IP address based TP addressing.\";\n    }\n    container
    ipv6-address {\n      when \"derived-from-or-self(../tp-location-type,\"\n         +
    \"'cl-oam:ipv6-address-type')\" {\n        description\n          \"IPv6 address
    type.\";\n      }\n      leaf ipv6-address {\n        type inet:ipv6-address;\n
    \       mandatory true;\n        description\n          \"IPv6 address.\";\n      }\n
    \     description\n        \"IPv6 address based TP addressing.\";\n    }\n    container
    tp-attribute {\n      when \"derived-from-or-self(../tp-location-type,\"\n         +
    \"'cl-oam:tp-attribute-type')\" {\n        description\n          \"Test point
    attribute type.\";\n      }\n      leaf tp-attribute-type {\n        type address-attribute-type;\n
    \       description\n          \"Test point type.\";\n      }\n      choice tp-attribute-value
    {\n        description\n          \"Test point value.\";\n        case ip-prefix
    {\n          leaf ip-prefix {\n            type inet:ip-prefix;\n            description\n
    \             \"Generic IPv4/IPv6 prefix.  See Sections 3.2.13 and\n               3.2.14
    of RFC 8029.\";\n            reference\n              \"RFC 8029: Detecting Multiprotocol
    Label\n               Switched (MPLS) Data-Plane Failures\";\n          }\n        }\n
    \       case bgp {\n          leaf bgp {\n            type inet:ip-prefix;\n            description\n
    \             \"BGP Labeled IPv4/IPv6 Prefix.  See Sections\n               3.2.11
    and 3.2.12 of RFC 8029 for details.\";\n            reference\n              \"RFC
    8029: Detecting Multiprotocol Label\n               Switched (MPLS) Data-Plane
    Failures\";\n          }\n        }\n        case tunnel {\n          leaf tunnel-interface
    {\n            type uint32;\n            description\n              \"Basic IPv4/IPv6
    Tunnel ID.  See Sections 3.2.3\n               and 3.2.4 of RFC 8029 for details.\";\n
    \           reference\n              \"RFC 8029: Detecting Multiprotocol Label\n
    \              Switched (MPLS) Data-Plane Failures.\";\n          }\n        }\n
    \       case pw {\n          leaf remote-pe-address {\n            type inet:ip-address;\n
    \           description\n              \"Remote PE address.  See Section 3.2.8\n
    \              of RFC 8029 for details.\";\n            reference\n              \"RFC
    8029: Detecting Multiprotocol Label\n               Switched (MPLS) Data-Plane
    Failures\";\n          }\n          leaf pw-id {\n            type uint32;\n            description\n
    \             \"Pseudowire ID is a non-zero 32-bit ID.  See Sections\n               3.2.8
    and 3.2.9 of RFC 8029 for details.\";\n            reference\n              \"RFC
    8029: Detecting Multiprotocol Label\n               Switched (MPLS) Data-Plane
    Failures\";\n          }\n        }\n        case vpls {\n          leaf route-distinguisher
    {\n            type rt:route-distinguisher;\n            description\n              \"Route
    Distinguisher is an 8-octet identifier\n               used to distinguish information
    about various\n               L2VPNs advertised by a node.\";\n            reference\n
    \             \"RFC 8029: Detecting Multiprotocol Label\n               Switched
    (MPLS) Data-Plane Failures\";\n          }\n          leaf sender-ve-id {\n            type
    uint16;\n            description\n              \"Sender's VE ID.  The VE ID (VPLS
    Edge Identifier)\n               is a 2-octet identifier.\";\n            reference\n
    \             \"RFC 8029: Detecting Multiprotocol Label\n               Switched
    (MPLS) Data-Plane Failures\";\n          }\n          leaf receiver-ve-id {\n
    \           type uint16;\n            description\n              \"Receiver's
    VE ID.  The VE ID (VPLS Edge Identifier)\n               is a 2-octet identifier.\";\n
    \           reference\n              \"RFC 8029: Detecting Multiprotocol Label\n
    \              Switched (MPLS) Data-Plane Failures\";\n          }\n        }\n
    \       case mpls-mldp {\n          choice root-address {\n            description\n
    \             \"Root address choice.\";\n            case ip-address {\n              leaf
    source-address {\n                type inet:ip-address;\n                description\n
    \                 \"IP address.\";\n              }\n              leaf group-ip-address
    {\n                type inet:ip-address;\n                description\n                  \"Group
    IP address.\";\n              }\n            }\n            case vpn {\n              leaf
    as-number {\n                type inet:as-number;\n                description\n
    \                 \"The AS number that identifies an Autonomous\n                   System.\";\n
    \             }\n            }\n            case global-id {\n              leaf
    lsp-id {\n                type string;\n                description\n                  \"LSP
    ID is an identifier of a LSP\n                   within a MPLS network.\";\n                reference\n
    \                 \"RFC 8029: Detecting Multiprotocol Label\n                   Switched
    (MPLS) Data-Plane Failures\";\n              }\n            }\n          }\n        }\n
    \     }\n      description\n        \"Test Point Attribute Container.\";\n    }\n
    \   container system-info {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:router-id-address-type')\" {\n        description\n          \"System
    ID address type.\";\n      }\n      leaf router-id {\n        type rt:router-id;\n
    \       description\n          \"Router ID assigned to this node.\";\n      }\n
    \     description\n        \"Router ID container.\";\n    }\n    description\n
    \     \"TP Address.\";\n  }\n  grouping tp-address-ni {\n    description\n      \"Test
    point address with VRF.\";\n    leaf ni {\n      type routing-instance-ref;\n
    \     description\n        \"The ni is used to describe virtual resource partitioning\n
    \        that may be present on a network device.  An example of a\n         common
    industry term for virtual resource partitioning is\n         'VRF instance'.\";\n
    \   }\n    uses tp-address;\n  }\n  grouping connectionless-oam-tps {\n    list
    oam-neighboring-tps {\n      key \"index\";\n      leaf index {\n        type
    uint16 {\n          range \"0..65535\";\n        }\n        description\n          \"Index
    of a list of neighboring test points\n           in layers up and down the stack
    for\n           the same interface that are related to the\n           current
    test point.\";\n      }\n      leaf position {\n        type int8 {\n          range
    \"-1..1\";\n        }\n        default \"0\";\n        description\n          \"The
    position of the neighboring test point relative to\n           the current test
    point.  Level 0 indicates a test point\n           corresponding to a specific
    index in the same layer as\n           the current test point.  -1 means there
    is a test point\n           corresponding to a specific index in the test point
    down\n           the stack, and +1 means there is a test point corresponding\n
    \          to a specific index in the test point up the stack.\";\n      }\n      choice
    tp-location {\n        case mac-address {\n          leaf mac-address-location
    {\n            type yang:mac-address;\n            description\n              \"MAC
    address.\";\n          }\n          description\n            \"MAC address based
    TP addressing.\";\n        }\n        case ipv4-address {\n          leaf ipv4-address-location
    {\n            type inet:ipv4-address;\n            description\n              \"IPv4
    address.\";\n          }\n          description\n            \"IP address based
    TP addressing.\";\n        }\n        case ipv6-address {\n          leaf ipv6-address-location
    {\n            type inet:ipv6-address;\n            description\n              \"IPv6
    address.\";\n          }\n          description\n            \"IPv6 address based
    TP addressing.\";\n        }\n        case as-number {\n          leaf as-number-location
    {\n            type inet:as-number;\n            description\n              \"AS
    number location.\";\n          }\n          description\n            \"AS number
    for point-to-multipoint OAM.\";\n        }\n        case router-id {\n          leaf
    router-id-location {\n            type rt:router-id;\n            description\n
    \             \"System ID location.\";\n          }\n          description\n            \"System
    ID.\";\n        }\n        description\n          \"TP location.\";\n      }\n
    \     description\n        \"List of neighboring test points in the same layer
    that are\n         related to current test point.  If the neighboring test point\n
    \        is placed after the current test point, the position is\n         specified
    as +1.  If the neighboring test point is placed\n         before the current test
    point, the position is specified\n         as -1; if no neighboring test points
    are placed before or\n         after the current test point in the same layer,
    the\n         position is specified as 0.\";\n    }\n    description\n      \"List
    of neighboring test points related to connectionless OAM.\";\n  }\n  grouping
    tp-technology {\n    choice technology {\n      default \"technology-null\";\n
    \     case technology-null {\n        description\n          \"This is a placeholder
    when no technology is needed.\";\n        leaf tech-null {\n          type empty;\n
    \         description\n            \"There is no technology to be defined.\";\n
    \       }\n      }\n      description\n        \"Technology choice.\";\n    }\n
    \   description\n      \"OAM technology.\";\n  }\n  grouping tp-tools {\n    description\n
    \     \"Test point OAM toolset.\";\n    container tp-tools {\n      leaf continuity-check
    {\n        type boolean;\n        mandatory true;\n        description\n          \"A
    flag indicating whether or not the\n           Continuity Check function is supported.\";\n
    \       reference\n          \"RFC 792: INTERNET CONTROL MESSAGE PROTOCOL\n           RFC
    4443: Internet Control Message Protocol (ICMPv6)\n               for the Internet
    Protocol Version 6 (IPv6) Specification\n           RFC 5880: Bidirectional Forwarding
    Detection\n           RFC 5881: BFD for IPv4 and IPv6\n           RFC 5883: BFD
    for Multihop Paths\n           RFC 5884: BFD for MPLS Label Switched Paths\n           RFC
    5885: BFD for PW VCCV\n           RFC 6450: Multicast Ping Protocol\n           RFC
    8029: Detecting Multiprotocol Label Switched (MPLS)\n               Data-Plane
    Failures\";\n      }\n      leaf path-discovery {\n        type boolean;\n        mandatory
    true;\n        description\n          \"A flag indicating whether or not the\n
    \          path discovery function is supported.\";\n        reference\n          \"RFC
    792: INTERNET CONTROL MESSAGE PROTOCOL\n           RFC 4443: Internet Control
    Message Protocol (ICMPv6)\n               for the Internet Protocol Version 6
    (IPv6) Specification\n           RFC 4884: Extended ICMP to Support Multi-Part
    Messages\n           RFC 5837: Extending ICMP for Interface and Next-Hop\n               Identification\n
    \          RFC 8029: Detecting Multiprotocol Label Switched (MPLS)\n               Data-Plane
    Failures\";\n      }\n      description\n        \"Container for test point OAM
    toolset.\";\n    }\n  }\n  grouping test-point-location-info {\n    uses tp-technology;\n
    \   uses tp-tools;\n    anydata root {\n      yangmnt:mount-point \"root\";\n
    \     description\n        \"Root for models supported per test point.\";\n    }\n
    \   uses connectionless-oam-tps;\n    description\n      \"Test point location.\";\n
    \ }\n  grouping test-point-locations {\n    description\n      \"Group of test
    point locations.\";\n    leaf tp-location-type {\n      type identityref {\n        base
    tp-address-technology-type;\n      }\n      description\n        \"Test point
    location type.\";\n    }\n    container ipv4-location-type {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:ipv4-address-type')\" {\n        description\n          \"When
    test point location type is equal to IPv4 address.\";\n      }\n      container
    test-point-ipv4-location-list {\n        list test-point-locations {\n          key
    \"ipv4-location ni\";\n          leaf ipv4-location {\n            type inet:ipv4-address;\n
    \           description\n              \"IPv4 address.\";\n          }\n          leaf
    ni {\n            type routing-instance-ref;\n            description\n              \"The
    ni is used to describe the\n               corresponding network instance\";\n
    \         }\n          uses test-point-location-info;\n          description\n
    \           \"List of test point locations.\";\n        }\n        description\n
    \         \"Serves as top-level container\n           for test point location
    list.\";\n      }\n      description\n        \"Container for IPv4 location types.\";\n
    \   }\n    container ipv6-location-type {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:ipv6-address-type')\" {\n        description\n          \"When
    test point location is equal to IPv6 address.\";\n      }\n      container test-point-ipv6-location-list
    {\n        list test-point-locations {\n          key \"ipv6-location ni\";\n
    \         leaf ipv6-location {\n            type inet:ipv6-address;\n            description\n
    \             \"IPv6 address.\";\n          }\n          leaf ni {\n            type
    routing-instance-ref;\n            description\n              \"The ni is used
    to describe the\n               corresponding network instance.\";\n          }\n
    \         uses test-point-location-info;\n          description\n            \"List
    of test point locations.\";\n        }\n        description\n          \"Serves
    as top-level container\n           for test point location list.\";\n      }\n
    \     description\n        \"ipv6 location type container.\";\n    }\n    container
    mac-location-type {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:mac-address-type')\" {\n        description\n          \"When
    test point location type is equal to MAC address.\";\n      }\n      container
    test-point-mac-address-location-list {\n        list test-point-locations {\n
    \         key \"mac-address-location\";\n          leaf mac-address-location {\n
    \           type yang:mac-address;\n            description\n              \"MAC
    address.\";\n          }\n          uses test-point-location-info;\n          description\n
    \           \"List of test point locations.\";\n        }\n        description\n
    \         \"Serves as top-level container\n           for test point location
    list.\";\n      }\n      description\n        \"Container for MAC address location
    types.\";\n    }\n    container group-as-number-location-type {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:as-number-address-type')\" {\n        description\n          \"When
    test point location type is equal to AS number.\";\n      }\n      container test-point-as-number-location-list
    {\n        list test-point-locations {\n          key \"as-number-location\";\n
    \         leaf as-number-location {\n            type inet:as-number;\n            description\n
    \             \"AS number for point-to-multipoint OAM.\";\n          }\n          leaf
    ni {\n            type routing-instance-ref;\n            description\n              \"The
    ni is used to describe the\n               corresponding network instance.\";\n
    \         }\n          uses test-point-location-info;\n          description\n
    \           \"List of test point locations.\";\n        }\n        description\n
    \         \"Serves as top-level container\n           for test point location
    list.\";\n      }\n      description\n        \"Container for AS number location
    types.\";\n    }\n    container group-router-id-location-type {\n      when \"derived-from-or-self(../tp-location-type,\"\n
    \        + \"'cl-oam:router-id-address-type')\" {\n        description\n          \"When
    test point location type is equal to system-info.\";\n      }\n      container
    test-point-system-info-location-list {\n        list test-point-locations {\n
    \         key \"router-id-location\";\n          leaf router-id-location {\n            type
    rt:router-id;\n            description\n              \"System ID.\";\n          }\n
    \         leaf ni {\n            type routing-instance-ref;\n            description\n
    \             \"The ni is used to describe the\n               corresponding network
    instance.\";\n          }\n          uses test-point-location-info;\n          description\n
    \           \"List of test point locations.\";\n        }\n        description\n
    \         \"Serves as top-level container for\n           test point location
    list.\";\n      }\n      description\n        \"Container for system ID location
    types.\";\n    }\n  }\n  augment \"/nd:networks/nd:network/nd:node\" {\n    description\n
    \     \"Augments the /networks/network/node path defined in the\n       ietf-network
    module (RFC 8345) with test-point-locations\n       grouping.\";\n    uses test-point-locations;\n
    \ }\n  grouping timestamp {\n    description\n      \"Grouping for timestamp.\";\n
    \   leaf timestamp-type {\n      type identityref {\n        base lime:timestamp-type;\n
    \     }\n      description\n        \"Type of timestamp, such as Truncated PTP
    or NTP.\";\n    }\n    container timestamp-64bit {\n      when \"derived-from-or-self(../timestamp-type,\"\n
    \        + \"'lime:truncated-ptp')\"\n         + \"or derived-from-or-self(../timestamp-type,\"\n
    \        + \"'lime:ntp64')\" {\n        description\n          \"Only applies
    when PTP truncated or 64-bit NTP timestamp.\";\n      }\n      leaf timestamp-sec
    {\n        type uint32;\n        description\n          \"Absolute timestamp in
    seconds as per IEEE 1588v2\n           or seconds part in 64-bit NTP timestamp.\";\n
    \     }\n      leaf timestamp-nanosec {\n        type uint32;\n        description\n
    \         \"Fractional part in nanoseconds as per IEEE 1588v2\n           or fractional
    part in 64-bit NTP timestamp.\";\n      }\n      description\n        \"Container
    for 64-bit timestamp.  The Network Time Protocol\n         (NTP) 64-bit timestamp
    format is defined in RFC 5905.  The\n         PTP truncated timestamp format is
    defined in IEEE 1588v1.\";\n      reference\n        \"RFC 5905: Network Time
    Protocol Version 4: Protocol and\n             Algorithms Specification\n         IEEE
    1588v1: IEEE Standard for a Precision Clock\n             Synchronization Protocol
    for Networked Measurement and\n             Control Systems Version 1\";\n    }\n
    \   container timestamp-80bit {\n      when \"derived-from-or-self(../timestamp-type,
    'lime:ptp80')\" {\n        description\n          \"Only applies when 80-bit PTP
    timestamp.\";\n      }\n      if-feature \"ptp-long-format\";\n      leaf timestamp-sec
    {\n        type uint64 {\n          range \"0..281474976710655\";\n        }\n
    \       description\n          \"48-bit timestamp in seconds as per IEEE 1588v2.\";\n
    \     }\n      leaf timestamp-nanosec {\n        type uint32;\n        description\n
    \         \"Fractional part in nanoseconds as per IEEE 1588v2.\";\n      }\n      description\n
    \       \"Container for 80-bit timestamp.\";\n    }\n    container ntp-timestamp-32bit
    {\n      when \"derived-from-or-self(../timestamp-type,\"\n         + \"'lime:truncated-ntp')\"
    {\n        description\n          \"Only applies when 32-bit NTP short-format
    timestamp.\";\n      }\n      if-feature \"ntp-short-format\";\n      leaf timestamp-sec
    {\n        type uint16;\n        description\n          \"Timestamp in seconds
    as per short-format NTP.\";\n      }\n      leaf timestamp-nanosec {\n        type
    uint16;\n        description\n          \"Truncated fractional part in 16-bit
    NTP timestamp.\";\n      }\n      description\n        \"Container for 32-bit
    timestamp RFC5905.\";\n      reference\n        \"RFC 5905: Network Time Protocol
    Version 4: Protocol and\n         Algorithms Specification.\";\n    }\n    container
    icmp-timestamp-32bit {\n      when \"derived-from-or-self(../timestamp-type, 'lime:icmp')\"
    {\n        description\n          \"Only applies when ICMP timestamp.\";\n      }\n
    \     if-feature \"icmp-timestamp\";\n      leaf timestamp-millisec {\n        type
    uint32;\n        description\n          \"Timestamp in milliseconds for ICMP timestamp.\";\n
    \     }\n      description\n        \"Container for 32-bit timestamp.  See RFC
    792 for ICMP\n         timestamp format.\";\n    }\n  }\n  grouping path-discovery-data
    {\n    description\n      \"Data output from nodes related to path discovery.\";\n
    \   container src-test-point {\n      description\n        \"Source test point.\";\n
    \     uses tp-address-ni;\n    }\n    container dest-test-point {\n      description\n
    \       \"Destination test point.\";\n      uses tp-address-ni;\n    }\n    leaf
    sequence-number {\n      type uint64;\n      default \"0\";\n      description\n
    \       \"Sequence number in data packets.  A value of\n         zero indicates
    that no sequence number is sent.\";\n    }\n    leaf hop-cnt {\n      type uint8;\n
    \     default \"0\";\n      description\n        \"Hop count.  A value of zero
    indicates\n         that no hop count is sent.\";\n    }\n    uses session-packet-statistics;\n
    \   uses session-error-statistics;\n    uses session-delay-statistics;\n    uses
    session-jitter-statistics;\n    container path-verification {\n      description\n
    \       \"Optional information related to path verification.\";\n      leaf flow-info
    {\n        type string;\n        description\n          \"Information that refers
    to the flow.\";\n      }\n      uses session-path-verification-statistics;\n    }\n
    \   container path-trace-info {\n      description\n        \"Optional per-hop
    path trace information about test points.\n         The path trace information
    list typically has a single\n         element for per-hop cases such as path-discovery
    RPC operation\n         but allows a list of hop-related information for other
    types of\n         data retrieval methods.\";\n      list path-trace-info-list
    {\n        key \"index\";\n        description\n          \"Path trace information
    list.\";\n        leaf index {\n          type uint32;\n          description\n
    \           \"Trace information index.\";\n        }\n        uses tp-address-ni;\n
    \       uses timestamp;\n        leaf ingress-intf-name {\n          type if:interface-ref;\n
    \         description\n            \"Ingress interface name.\";\n        }\n        leaf
    egress-intf-name {\n          type if:interface-ref;\n          description\n
    \           \"Egress interface name.\";\n        }\n        leaf queue-depth {\n
    \         type uint32;\n          description\n            \"Length of the queue
    of the interface from where\n             the packet is forwarded out.  The queue
    depth could\n             be the current number of memory buffers used by the\n
    \            queue, and a packet can consume one or more memory buffers,\n             thus
    constituting device-level information.\";\n        }\n        leaf transit-delay
    {\n          type uint32;\n          description\n            \"Time in nanoseconds
    that the packet spent transiting a\n             node.\";\n        }\n        leaf
    app-meta-data {\n          type uint64;\n          description\n            \"Application-specific
    data added by node.\";\n        }\n      }\n    }\n  }\n  grouping continuity-check-data
    {\n    description\n      \"Continuity Check data output from nodes.\";\n    container
    src-test-point {\n      description\n        \"Source test point.\";\n      uses
    tp-address-ni;\n      leaf egress-intf-name {\n        type if:interface-ref;\n
    \       description\n          \"Egress interface name.\";\n      }\n    }\n    container
    dest-test-point {\n      description\n        \"Destination test point.\";\n      uses
    tp-address-ni;\n      leaf ingress-intf-name {\n        type if:interface-ref;\n
    \       description\n          \"Ingress interface name.\";\n      }\n    }\n
    \   leaf sequence-number {\n      type uint64;\n      default \"0\";\n      description\n
    \       \"Sequence number in data packets.  A value of\n         zero indicates
    that no sequence number is sent.\";\n    }\n    leaf hop-cnt {\n      type uint8;\n
    \     default \"0\";\n      description\n        \"Hop count.  A value of zero
    indicates\n         that no hop count is sent.\";\n    }\n    uses session-packet-statistics;\n
    \   uses session-error-statistics;\n    uses session-delay-statistics;\n    uses
    session-jitter-statistics;\n  }\n  container cc-session-statistics-data {\n    if-feature
    \"continuity-check\";\n    config false;\n    list cc-session-statistics {\n      key
    \"type\";\n      leaf type {\n        type identityref {\n          base traffic-type;\n
    \       }\n        description\n          \"Type of traffic.\";\n      }\n      container
    cc-ipv4-sessions-statistics {\n        when \"../type = 'ipv4'\" {\n          description\n
    \           \"Only applies when traffic type is IPv4.\";\n        }\n        description\n
    \         \"CC ipv4 sessions.\";\n        uses cc-session-statistics;\n      }\n
    \     container cc-ipv6-sessions-statistics {\n        when \"../type = 'ipv6'\"
    {\n          description\n            \"Only applies when traffic type is IPv6.\";\n
    \       }\n        description\n          \"CC IPv6 sessions.\";\n        uses
    cc-session-statistics;\n      }\n      description\n        \"List of CC session
    statistics data.\";\n    }\n    description\n      \"CC operational information.\";\n
    \ }\n"
  - "}\n   <CODE ENDS>\n"
  title: 5.  Connectionless OAM YANG Module
- contents:
  - "6.  Connectionless Model Applicability\n   The \"ietf-connectionless-oam\" module
    defined in this document\n   provides a technology-independent abstraction of
    key OAM constructs\n   for OAM protocols that use connectionless communication.
    \ This module\n   can be further extended to include technology-specific details,
    e.g.,\n   adding new data nodes with technology-specific functions and\n   parameters
    into proper anchor points of the base model, so as to\n   develop a technology-specific
    connectionless OAM model.\n   This section demonstrates the usability of the connectionless
    YANG\n   OAM data model to various connectionless OAM technologies, e.g., BFD\n
    \  and LSP ping.  Note that, in this section, several snippets of\n   technology-specific
    model extensions are presented for illustrative\n   purposes.  The complete model
    extensions should be worked on in the\n   working groups of the respective protocols.\n"
  - contents:
    - "6.1.  BFD Extension\n   RFC 7276 defines BFD as a connection-oriented protocol.
      \ It is used\n   to monitor a connectionless protocol in the case of basic BFD
      for IP.\n"
    - contents:
      - "6.1.1.  Augment Method\n   The following sections show how the \"ietf-connectionless-oam\"
        module\n   can be extended to cover BFD technology.  For this purpose, a set
        of\n   extensions are introduced such as the technology-type extension and\n
        \  test-point attributes extension.\n   Note that a dedicated BFD YANG data
        model [BFD-YANG] is also\n   standardized.  Augmentation of the \"ietf-connectionless-oam\"
        module\n   with BFD-specific details provides an alternative approach with
        a\n   unified view of management information across various OAM protocols.\n
        \  The BFD-specific details can be the grouping defined in the BFD\n   model,
        thereby avoiding duplication of effort.\n"
      - contents:
        - "6.1.1.1.  Technology-Type Extension\n   No BFD technology type has been
          defined in the \"ietf-connectionless-\n   oam\" module.  Therefore, a technology-type
          extension is required in\n   the module extension.\n   The snippet below
          depicts an example of adding the \"bfd\" type as an\n   augment to the \"ietf-connectionless-oam\"
          module:\n   augment \"/nd:networks/nd:network/nd:node/\"\n   +\"coam:location-type/coam:ipv4-location-type\"\n
          \  +\"/coam:test-point-ipv4-location-list/\"\n   +\"coam:test-point-locations/coam:technology\"\n
          \  {\n       leaf bfd{\n      type string;\n     }\n   }\n"
        title: 6.1.1.1.  Technology-Type Extension
      - contents:
        - "6.1.1.2.  Test Point Attributes Extension\n   To support BFD, the \"ietf-connectionless-oam\"
          module can be extended\n   by adding specific parameters into the \"test-point-locations\"
          list\n   and/or adding a new location type such as \"BFD over MPLS TE\"
          under\n   \"location-type\".\n"
        - contents:
          - "6.1.1.2.1.  Define and Insert New Nodes into Corresponding test-point-\n
            \           location\n   In the \"ietf-connectionless-oam\" module, multiple
            \"test-point-\n   location\" lists are defined under the \"location-type\"
            choice node.\n   Therefore, to derive a model for some BFD technologies
            (such as IP\n   single-hop, IP multihop, etc.), data nodes for BFD-specific
            details\n   need to be added to the corresponding \"test-point-locations\"
            list.\n   In this section, some groupings that are defined in [BFD-YANG]
            are\n   reused as follows.\n   The snippet below shows how the \"ietf-connectionless-oam\"
            module can\n   be extended to support \"BFD IP Single-Hop\":\n   augment
            \"/nd:networks/nd:network/nd:node/\"\n   +\"coam:location-type/coam:ipv4-location-type\"\n
            \  +\"/coam:test-point-ipv4-location-list/\"\n           +\"coam:test-point-locations\"\n
            \  {\n           container session-cfg {\n             description \"BFD
            IP single-hop session configuration\";\n             list sessions {\n
            \              key \"interface dest-addr\";\n               description
            \"List of IP single-hop sessions\";\n               leaf interface {\n
            \                type if:interface-ref;\n                 description\n
            \                  \"Interface on which the BFD session is running.\";\n
            \              }\n               leaf dest-addr {\n                 type
            inet:ip-address;\n                 description \"IP address of the peer\";\n
            \              }\n               uses bfd:bfd-grouping-common-cfg-parms;\n
            \              uses bfd:bfd-grouping-echo-cfg-parms;\n             }\n
            \          }\n   }\n   Similar augmentations can be defined to support
            other BFD\n   technologies such as BFD IP Multihop, BFD over MPLS, etc.\n"
          title: 6.1.1.2.1.  Define and Insert New Nodes into Corresponding test-point-
        - contents:
          - "6.1.1.2.2.  Add New location-type Cases\n   In the \"ietf-connectionless-oam\"
            module, If there is no appropriate\n   \"location-type\" case that can
            be extended, a new \"location-type\" case\n   can be defined and inserted
            into the \"location-type\" choice node.\n   Therefore, there is flexibility
            -- the module user can add \"location-\n   type\" to support other types
            of test point that are not defined in\n   the \"ietf-connectionless-oam\"
            module.  In this section, a new\n   \"location-type\" case is added, and
            some groupings that are defined in\n   [BFD-YANG] are reused as follows.\n
            \  The snippet below shows how the \"ietf-connectionless-oam\" module
            can\n   be extended to support \"BFD over MPLS-TE\":\n   augment \"/nd:networks/nd:network/nd:node/coam:location-type\"{\n
            \   case te-location{\n     list test-point-location-list{\n      key
            \"tunnel-name\";\n      leaf tunnel-name{\n       type leafref{\n    path
            \"/te:te/te:tunnels/te:tunnel/te:name\";\n   }\n   description\n   \"Point
            to a TE instance.\";\n      }\n       uses bfd:bfd-grouping-common-cfg-parms;\n
            \          uses bfd-mpls:bfd-encap-cfg;\n     }\n    }\n   }\n   Similar
            augmentations can be defined to support other BFD\n   technologies such
            as BFD over LAG, etc.\n"
          title: 6.1.1.2.2.  Add New location-type Cases
        title: 6.1.1.2.  Test Point Attributes Extension
      title: 6.1.1.  Augment Method
    - contents:
      - "6.1.2.  Schema Mount\n   An alternative method is using the schema mount
        mechanism [RFC8528]\n   in the \"ietf-connectionless-oam\" module.  Within
        the \"test-point-\n   locations\" list, a \"root\" attribute is defined to
        provide a mount\n   point for models that will be added onto per \"test-point-locations\".\n
        \  Therefore, the \"ietf-connectionless-oam\" module can provide a place\n
        \  in the node hierarchy where other OAM YANG data models can be\n   attached,
        without any special extension in the \"ietf-connectionless-\n   oam\" YANG
        data module [RFC8528].  Note that the limitation of the\n   schema mount method
        is that it's not allowed to specify certain\n   modules that are required
        to be mounted under a mount point.\n   The snippet below depicts the definition
        of the \"root\" attribute.\n         anydata root {\n          yangmnt:mount-point
        root;\n          description\n            \"Root for models that are supported
        per test point\";\n         }\n   The following section shows how the \"ietf-connectionless-oam\"
        module\n   can use schema mount to support BFD technology.\n"
      - contents:
        - "6.1.2.1.  BFD Modules Might Be Populated in schema-mounts\n   To support
          BFD technology, \"ietf-bfd-ip-sh\" and \"ietf-bfd-ip-mh\" YANG\n   modules
          might be populated in the \"schema-mounts\" container:\n      <schema-mounts\n
          \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\">\n
          \       <mount-point>\n          <module> ietf-connectionless-oam </module>\n
          \         <name>root</name>\n          <use-schema>\n            <name>root</name>\n
          \         </use-schema>\n        </mount-point>\n        <schema>\n          <name>root</name>\n
          \         <module>\n            <name>ietf-bfd-ip-sh </name>\n            <revision>2016-07-04</revision>\n
          \           <namespace>\n              urn:ietf:params:xml:ns:yang:ietf-bfd-ip-sh\n
          \           </namespace>\n            <conformance-type>implement</conformance-type>\n
          \         </module>\n          <module>\n            <name>ietf-bfd-ip-mh</name>\n
          \           <revision> 2016-07-04</revision>\n            <namespace>\n
          \             urn:ietf:params:xml:ns:yang:ietf-bfd-ip-mh\n            </namespace>\n
          \           <conformance-type>implement</conformance-type>\n          </module>\n
          \       </schema>\n      </schema-mounts>\n   and the \"ietf-connectionless-oam\"
          module might have:\n   <ietf-connectionless-oam\n   uri=\"urn:ietf:params:xml:ns:yang:ietf-connectionless-oam\">\n
          \     ......\n    <test-point-locations>\n     <ipv4-location>192.0.2.1</ipv4-location>\n
          \     ......\n     <root>\n      <ietf-bfd-ip-sh uri=\"urn:ietf:params:xml:ns:yang:ietf-bfd-ip-sh\">\n
          \      <ip-sh>\n        foo\n        ......\n       </ip-sh>\n      </ietf-bfd-ip-sh>\n
          \     <ietf-bfd-ip-mh uri=\"urn:ietf:params:xml:ns:yang:ietf-bfd-ip-mh\">\n
          \      <ip-mh>\n        foo\n        ......\n       </ip-mh>\n      </ietf-bfd-ip-mh>\n
          \    </root>\n    </test-point-locations>\n   </ietf-connectionless-oam>\n"
        title: 6.1.2.1.  BFD Modules Might Be Populated in schema-mounts
      title: 6.1.2.  Schema Mount
    title: 6.1.  BFD Extension
  - contents:
    - '6.2.  LSP Ping Extension

      '
    - contents:
      - "6.2.1.  Augment Method\n   The following sections show how the \"ietf-connectionless-oam\"
        module\n   can be extended to support LSP ping technology.  For this purpose,
        a\n   set of extensions are introduced such as the \"technology-type\"\n   extension
        and the test-point \"attributes\" extension.\n   Note that an LSP Ping YANG
        data model is being specified\n   [LSP-PING-YANG].  As with BFD, users can
        choose to use the\n   \"ietf-connectionless-oam\" as the basis and augment
        the\n   \"ietf-connectionless-oam\" model with details specific to LSP Ping
        in\n   the model extension to provide a unified view across different\n   technologies.
        \ The details that are specific to LSP Ping can be the\n   grouping defined
        in the LSP ping model to avoid duplication of\n   effort.\n"
      - contents:
        - "6.2.1.1.  Technology-Type Extension\n   No LSP Ping technology type has
          been defined in the\n   \"ietf-connectionless-oam\" module.  Therefore,
          a technology-type\n   extension is required in the module extension.\n   The
          snippet below depicts an example of augmenting\n   \"ietf-connectionless-oam\"
          with \"lsp-ping\" type:\n   augment \"/nd:networks/nd:network/nd:node/\"\n
          \  +\"coam:location-type/coam:ipv4-location-type\"\n   +\"/coam:test-point-ipv4-location-list/\"\n
          \          +\"coam:test-point-locations/coam:technology\"\n   {\n      leaf
          lsp-ping{\n      type string;\n     }\n   }\n"
        title: 6.2.1.1.  Technology-Type Extension
      - contents:
        - "6.2.1.2.  Test Point Attributes Extension\n   To support LSP Ping, the
          \"ietf-connectionless-oam\" module can be\n   extended and parameters specific
          to LSP Ping can be defined and put\n   on the \"test-point-locations\" list.\n
          \  Users can reuse the attributes or groupings that are defined in\n   [LSP-PING-YANG]
          as follows:\n   The snippet below depicts an example of augmenting the \"test-point-\n
          \  locations\" list with LSP Ping attributes:\n   augment \"/nd:networks/nd:network/nd:node/\"\n
          \  +\"coam:location-type/coam:ipv4-location-type\"\n   +\"/coam:test-point-ipv4-location-list/\"\n
          \          +\"coam:test-point-locations\"\n   {\n   list lsp-ping {\n            key
          \"lsp-ping-name\";\n            leaf lsp-ping-name {\n             type
          string {\n               length \"1..31\";\n            }\n           mandatory
          \"true\";\n           description \"LSP Ping test name.\";\n           ......\n
          \        }\n"
        title: 6.2.1.2.  Test Point Attributes Extension
      title: 6.2.1.  Augment Method
    - contents:
      - "6.2.2.  Schema Mount\n   An alternative method is using the schema mount
        mechanism [RFC8528]\n   in the \"ietf-connectionless-oam\" module.  Within
        the \"test-point-\n   locations\" list, a \"root\" attribute is defined to
        provide a mounted\n   point for models mounted per \"test-point-locations\".
        \ Therefore, the\n   \"ietf-connectionless-oam\" model can provide a place
        in the node\n   hierarchy where other OAM YANG data models can be attached,
        without\n   any special extension in the \"ietf-connectionless-oam\" YANG
        data\n   module [RFC8528].  Note that the limitation of the schema mount\n
        \  method is that it's not allowed to specify certain modules that are\n   required
        to be mounted under a mount point.\n   The snippet below depicts the definition
        of \"root\" attribute.\n         anydata root {\n          yangmnt:mount-point
        root;\n          description\n         \"Root for models supported per test
        point\";\n         }\n   The following section shows how the \"ietf-connectionless-oam\"
        module\n   can use schema mount to support LSP Ping technology.\n"
      - contents:
        - "6.2.2.1.  LSP Ping Modules Might Be Populated in schema-mounts\n   To support
          LSP Ping technology, the \"ietf-lsp-ping\" YANG module\n   [LSP-PING-YANG]
          might be populated in the \"schema-mounts\" container:\n      <schema-mounts\n
          \         xmlns=\"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\">\n
          \       <mount-point>\n          <module> ietf-connectionless-oam </module>\n
          \         <name>root</name>\n          <use-schema>\n            <name>root</name>\n
          \         </use-schema>\n        </mount-point>\n        <schema>\n          <name>root</name>\n
          \         <module>\n            <name>ietf-lsp-ping </name>\n            <revision>2016-03-18</revision>\n
          \           <namespace>\n              urn:ietf:params:xml:ns:yang: ietf-lsp-ping\n
          \           </namespace>\n            <conformance-type>implement</conformance-type>\n
          \         </module>\n        </schema>\n      </schema-mounts>\n   and the
          \"ietf-connectionless-oam\" module might have:\n   <ietf-connectionless-oam\n
          \  uri=\"urn:ietf:params:xml:ns:yang:ietf-connectionless-oam\">\n      ......\n
          \   <test-point-locations>\n     <ipv4-location> 192.0.2.1</ipv4-location>\n
          \     ......\n     <root>\n      <ietf-lsp-ping uri=\"urn:ietf:params:xml:ns:yang:ietf-lsp-ping\">\n
          \      <lsp-pings>\n        foo\n        ......\n       </lsp-pings>\n      </ietf-lsp-ping>\n
          \    </root>\n    </test-point-locations>\n   </ietf-connectionless-oam>\n"
        title: 6.2.2.1.  LSP Ping Modules Might Be Populated in schema-mounts
      title: 6.2.2.  Schema Mount
    title: 6.2.  LSP Ping Extension
  title: 6.  Connectionless Model Applicability
- contents:
  - "7.  Security Considerations\n   The YANG module specified in this document defines
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The NETCONF
    Configuration Access Control Model (NACM) [RFC8341]\n   provides the means to
    restrict access for particular NETCONF or\n   RESTCONF users to a preconfigured
    subset of all available NETCONF or\n   RESTCONF protocol operations and content.\n
    \  There are a number of data nodes defined in this YANG module that are\n   writable/creatable/deletable
    (i.e., config true, which is the\n   default).  These data nodes may be considered
    sensitive in some\n   network environments.  Write operations (e.g., edit-config)
    to these\n   data nodes without proper protection can have a negative effect on\n
    \  network operations.  These are the subtrees and data nodes and their\n   sensitivity/vulnerability:\n
    \     /nd:networks/nd:network/nd:node/cl-oam:location-type/cl-oam:ipv4-\n      location-type/cl-oam:test-point-ipv4-location-list/cl-oam:test-\n
    \     point-locations/\n      /nd:networks/nd:network/nd:node/cl-oam:location-type/cl-oam:ipv6-\n
    \     location-type/cl-oam:test-point-ipv6-location-list/cl-oam:test-\n      point-locations/\n
    \     /nd:networks/nd:network/nd:node/cl-oam:location-type/cl-oam:mac-\n      location-type/cl-oam:test-point-mac-address-location-list/cl-\n
    \     oam:test-point-locations/\n      /nd:networks/nd:network/nd:node/cl-oam:location-type/cl-oam:group-\n
    \     as-number-location-type/cl-oam:test-point-as-number-location-list/\n      cl-oam:test-point-locations/\n
    \     /nd:networks/nd:network/nd:node/cl-oam:location-type/cl-oam:group-\n      router-id-location-type/cl-oam:test-point-system-info-location-\n
    \     list/cl-oam:test-point-locations/\n   Unauthorized access to any of these
    lists can adversely affect OAM\n   management system handling of end-to-end OAM
    and coordination of OAM\n   within underlying network layers.  This may lead to
    inconsistent\n   configuration, reporting, and presentation for the OAM mechanisms\n
    \  used to manage the network.\n   Some of the readable data nodes in this YANG
    module may be considered\n   sensitive or vulnerable in some network environments.
    \ It is thus\n   important to control read access (e.g., via get, get-config,
    or\n   notification) to these data nodes.  These are the subtrees and data\n   nodes
    and their sensitivity/vulnerability:\n      /coam:cc-session-statistics-data/cl-oam:cc-ipv4-sessions-\n
    \     statistics/cl-oam:cc-session-statistics/cl-oam:session-count/\n      /coam:cc-session-statistics-data/cl-oam:cc-ipv4-sessions-\n
    \     statistics/cl-oam:cc-session-statistics/cl-oam:session-up-count/\n      /coam:cc-session-statistics-data/cl-oam:cc-ipv4-sessions-\n
    \     statistics/cl-oam:cc-session-statistics/cl-oam:session-down-count/\n      /coam:cc-session-statistics-data/cl-oam:cc-ipv4-sessions-\n
    \     statistics/cl-oam:cc-session-statistics/cl-oam:session-admin-down-\n      count/\n
    \     /coam:cc-session-statistics-data/cl-oam:cc-ipv6-sessions-\n      statistics/cl-oam:cc-session-statistics/cl-oam:session-count/\n
    \     /coam:cc-session-statistics-data/cl-oam:cc-ipv6-sessions-\n      statistics/cl-oam:cc-session-statistics/cl-oam:session-up-count//\n
    \     /coam:cc-session-statistics-data/cl-oam:cc-ipv6-sessions-\n      statistics/cl-oam:cc-session-statistics/cl-oam:session-down-count/\n
    \     /coam:cc-session-statistics-data/cl-oam:cc-ipv6-sessions-\n      statistics/cl-oam:cc-session-statistics/cl-oam:session-admin-down-\n
    \     count/\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   This document registers URIs in the \"IETF XML Registry\"
    [RFC3688].\n   Following the format in [RFC3688], the following registrations
    have\n   been made.\n      URI: urn:ietf:params:xml:ns:yang:ietf-lime-time-types\n
    \     Registrant Contact: The IESG.\n      XML: N/A; the requested URI is an XML
    namespace.\n      URI: urn:ietf:params:xml:ns:yang:ietf-connectionless-oam\n      Registrant
    Contact: The IESG.\n      XML: N/A; the requested URI is an XML namespace.\n   This
    document registers two YANG modules in the \"YANG Module Names\"\n   registry
    [RFC6020].\n      Name: ietf-lime-time-types\n      Namespace: urn:ietf:params:xml:ns:yang:ietf-lime-time-types\n
    \     Prefix: lime\n      Reference: RFC 8532\n      Name: ietf-connectionless-oam\n
    \     Namespace: urn:ietf:params:xml:ns:yang:ietf-connectionless-oam\n      Prefix:
    cl-oam\n      Reference: RFC 8532\n"
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC792]   Postel, J., \"Internet Control Message
      Protocol\", RFC 792,\n              September 1981.\n   [RFC1831]  Srinivasan,
      R., \"RPC: Remote Procedure Call Protocol\n              Specification Version
      2\", RFC 1831, DOI 10.17487/RFC1831,\n              August 1995, <https://www.rfc-editor.org/info/rfc1831>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC4382]  Nadeau, T., Ed. and H. van der Linde, Ed., \"MPLS/BGP Layer\n
      \             3 Virtual Private Network (VPN) Management Information\n              Base\",
      RFC 4382, DOI 10.17487/RFC4382, February 2006,\n              <https://www.rfc-editor.org/info/rfc4382>.\n
      \  [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n              Control
      Message Protocol (ICMPv6) for the Internet\n              Protocol Version 6
      (IPv6) Specification\", STD 89,\n              RFC 4443, DOI 10.17487/RFC4443,
      March 2006,\n              <https://www.rfc-editor.org/info/rfc4443>.\n   [RFC4656]
      \ Shalunov, S., Teitelbaum, B., Karp, A., Boote, J., and\n              M. Zekauskas,
      \"A One-way Active Measurement Protocol\n              (OWAMP)\", RFC 4656,
      DOI 10.17487/RFC4656, September 2006,\n              <https://www.rfc-editor.org/info/rfc4656>.\n
      \  [RFC5357]  Hedayat, K., Krzanowski, R., Morton, A., Yum, K., and\n              J.
      Babiarz, \"A Two-Way Active Measurement Protocol\n              (TWAMP)\", RFC
      5357, DOI 10.17487/RFC5357, October 2008,\n              <https://www.rfc-editor.org/info/rfc5357>.\n
      \  [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n              (BFD)\",
      RFC 5880, DOI 10.17487/RFC5880, June 2010,\n              <https://www.rfc-editor.org/info/rfc5880>.\n
      \  [RFC5905]  Mills, D., Martin, J., Ed., Burbank, J., and W. Kasch,\n              \"Network
      Time Protocol Version 4: Protocol and Algorithms\n              Specification\",
      RFC 5905, DOI 10.17487/RFC5905, June 2010,\n              <https://www.rfc-editor.org/info/rfc5905>.\n
      \  [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC6991]  Schoenwaelder, J., Ed., \"Common YANG Data Types\",\n              RFC
      6991, DOI 10.17487/RFC6991, July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n
      \  [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n
      \             RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n
      \  [RFC8029]  Kompella, K., Swallow, G., Pignataro, C., Ed., Kumar, N.,\n              Aldrin,
      S., and M. Chen, \"Detecting Multiprotocol Label\n              Switched (MPLS)
      Data-Plane Failures\", RFC 8029,\n              DOI 10.17487/RFC8029, March
      2017,\n              <https://www.rfc-editor.org/info/rfc8029>.\n   [RFC8040]
      \ Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8294]  Liu, X., Qu, Y., Lindem, A., Hopps, C., and L. Berger,\n              \"Common
      YANG Data Types for the Routing Area\", RFC 8294,\n              DOI 10.17487/RFC8294,
      December 2017,\n              <https://www.rfc-editor.org/info/rfc8294>.\n   [RFC8341]
      \ Bierman, A. and M. Bjorklund, \"Network Configuration\n              Access
      Control Model\", STD 91, RFC 8341,\n              DOI 10.17487/RFC8341, March
      2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n   [RFC8343]
      \ Bjorklund, M., \"A YANG Data Model for Interface\n              Management\",
      RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n
      \  [RFC8345]  Clemm, A., Medved, J., Varga, R., Bahadur, N.,\n              Ananthakrishnan,
      H., and X. Liu, \"A YANG Data Model for\n              Network Topologies\",
      RFC 8345, DOI 10.17487/RFC8345, March\n              2018, <https://www.rfc-editor.org/info/rfc8345>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8529]  Berger,
      L., Hopps, C., Lindem, A., Bogdanovic, D., and\n              X. Liu, \"YANG
      Model for Network Instances\", RFC 8529,\n              DOI 10.17487/RFC8529,
      March 2019,\n              <https://www.rfc-editor.org/info/rfc8529>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [BFD-YANG] Rahman, R., Zheng, L., Jethanandani,
      M., Networks, J., and\n              G. Mirsky, \"YANG Data Model for Bidirectional
      Forwarding\n              Detection (BFD)\", Work in Progress, draft-ietf-bfd-yang-\n
      \             17, August 2018.\n   [G.800]    \"Unified functional architecture
      of transport networks\",\n              ITU-T Recommendation G.800, 2016.\n
      \  [G.8013]   \"OAM functions and mechanisms for Ethernet based\n              networks\",
      ITU-T Recommendation G.8013/Y.1731, 2013.\n   [IEEE.1588v1]\n              \"IEEE
      Standard for a Precision Clock Synchronization\n              Protocol for Networked
      Measurement and Control Systems\n              Version 1\", IEEE Std 1588, 2002.\n
      \  [IEEE.1588v2]\n              \"IEEE Standard for a Precision Clock Synchronization\n
      \             Protocol for Networked Measurement and Control Systems\n              Version
      2\", IEEE Std 1588, 2008.\n   [LSP-PING-YANG]\n              Zheng, L., Zheng,
      G., Mirsky, G., Rahman, R., and F.\n              Iqbal, \"YANG Data Model for
      LSP-Ping\", Work in Progress,\n              draft-zheng-mpls-lsp-ping-yang-cfg-10,
      January 2019.\n   [RFC5462]  Andersson, L. and R. Asati, \"Multiprotocol Label
      Switching\n              (MPLS) Label Stack Entry: \"EXP\" Field Renamed to
      \"Traffic\n              Class\" Field\", RFC 5462, DOI 10.17487/RFC5462, February\n
      \             2009, <https://www.rfc-editor.org/info/rfc5462>.\n   [RFC6020]
      \ Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6136]
      \ Sajassi, A., Ed. and D. Mohan, Ed., \"Layer 2 Virtual\n              Private
      Network (L2VPN) Operations, Administration, and\n              Maintenance (OAM)
      Requirements and Framework\", RFC 6136,\n              DOI 10.17487/RFC6136,
      March 2011,\n              <https://www.rfc-editor.org/info/rfc6136>.\n   [RFC7276]
      \ Mizrahi, T., Sprecher, N., Bellagamba, E., and\n              Y. Weingarten,
      \"An Overview of Operations, Administration,\n              and Maintenance
      (OAM) Tools\", RFC 7276,\n              DOI 10.17487/RFC7276, June 2014,\n              <https://www.rfc-editor.org/info/rfc7276>.\n
      \  [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP
      215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n
      \  [RFC8528]  Bjorklund, M. and L. Lhotka, \"YANG Schema Mount\",\n              RFC
      8528, DOI 10.17487/RFC8528, March 2019,\n              <https://www.rfc-editor.org/info/rfc8528>.\n
      \  [RFC8531]  Kumar, D., Wu, Q., and M. Wang, \"Generic YANG Data Model\n              for
      Connection-Oriented Operations, Administration, and\n              Maintenance
      (OAM) Protocols\", RFC 8531,\n              DOI 10.17487/RFC8531, April 2019,\n
      \             <https://www.rfc-editor.org/info/rfc8531>.\n   [RFC8533]  Kumar,
      D., Wang, M., Wu, Q., Ed., Rahman, R., and\n              S. Raghavan, \" A
      YANG Data Model for Retrieval Methods for\n              the Management of Operations,
      Administration, and\n              Maintenance (OAM) Protocols That Use Connectionless\n
      \             Communications\", RFC 8533, DOI 10.17487/RFC8533, April\n              2019.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgments\n   The authors of this document would like to thank Elwyn Davies,
    Alia\n   Atlas, Brian E. Carpenter, Greg Mirsky, Adam Roach, Alissa Cooper,\n
    \  Eric Rescorla, Ben Campbell, Benoit Claise, Kathleen Moriarty, Carlos\n   Pignataro,
    and others for their substantive review and comments, and\n   proposals to stabilize
    and improve the document.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Deepak Kumar\n   CISCO Systems\n   510 McCarthy Blvd\n
    \  Milpitas, CA  95035\n   United States of America\n   Email: dekumar@cisco.com\n
    \  Michael Wang\n   Huawei Technologies, Co., Ltd\n   101 Software Avenue, Yuhua
    District\n   Nanjing  210012\n   China\n   Email: wangzitao@huawei.com\n   Qin
    Wu (editor)\n   Huawei\n   101 Software Avenue, Yuhua District\n   Nanjing, Jiangsu
    \ 210012\n   China\n   Email: bill.wu@huawei.com\n   Reshad Rahman\n   Cisco Systems\n
    \  2000 Innovation Drive\n   Kanata, Ontario  K2K 3E8\n   Canada\n   Email: rrahman@cisco.com\n
    \  Srihari Raghavan\n   Cisco Systems\n   Tril Infopark Sez, Ramanujan IT City\n
    \  Neville Block, 2nd floor, Old Mahabalipuram Road\n   Chennai, Tamil Nadu  600113\n
    \  India\n   Email: srihari@cisco.com\n"
  title: Authors' Addresses
