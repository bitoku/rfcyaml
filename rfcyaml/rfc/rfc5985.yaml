- contents:
  - '                 HTTP-Enabled Location Delivery (HELD)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a Layer 7 Location Configuration Protocol
    (L7\n   LCP) and describes the use of HTTP and HTTP/TLS as transports for the\n
    \  L7 LCP.  The L7 LCP is used for retrieving location information from\n   a
    server within an access network.  It includes options for\n   retrieving location
    information in two forms: by value and by\n   reference.  The protocol is an extensible
    application-layer protocol\n   that is independent of the session layer.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5985.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions and Terminology  . . . . . . . . . . . . .
    . . . .  3\n   3.  Overview and Scope . . . . . . . . . . . . . . . . . . . .
    . .  4\n   4.  Protocol Overview  . . . . . . . . . . . . . . . . . . . . . .
    \ 5\n     4.1.  Device Identifiers, NAT and VPNs . . . . . . . . . . . . .  6\n
    \      4.1.1.  Devices and VPNs . . . . . . . . . . . . . . . . . . .  6\n       4.1.2.
    \ LIS Handling of NATs and VPNs  . . . . . . . . . . . .  7\n     4.2.  Location
    by Value  . . . . . . . . . . . . . . . . . . . .  7\n     4.3.  Location by Reference
    \ . . . . . . . . . . . . . . . . . .  8\n   5.  Protocol Description . . . .
    . . . . . . . . . . . . . . . . .  8\n     5.1.  Location Request . . . . . .
    . . . . . . . . . . . . . . .  9\n     5.2.  Location Response  . . . . . . .
    . . . . . . . . . . . . .  9\n     5.3.  Indicating Errors  . . . . . . . . .
    . . . . . . . . . . .  9\n   6.  Protocol Parameters  . . . . . . . . . . . .
    . . . . . . . . . 10\n     6.1.  \"responseTime\" Parameter . . . . . . . . .
    . . . . . . . . 10\n     6.2.  \"locationType\" Parameter . . . . . . . . . .
    . . . . . . . 11\n       6.2.1.  \"exact\" Attribute  . . . . . . . . . . . .
    . . . . . . 13\n     6.3.  \"code\" Parameter . . . . . . . . . . . . . . . .
    . . . . . 13\n     6.4.  \"message\" Parameter  . . . . . . . . . . . . . . .
    . . . . 14\n     6.5.  \"locationUriSet\" Parameter . . . . . . . . . . . . .
    . . . 14\n       6.5.1.  \"locationURI\" Parameter  . . . . . . . . . . . . .
    . . 14\n       6.5.2.  \"expires\" Parameter  . . . . . . . . . . . . . . . .
    . 15\n     6.6.  \"Presence\" Parameter (PIDF-LO) . . . . . . . . . . . . . .
    16\n   7.  XML Schema . . . . . . . . . . . . . . . . . . . . . . . . . . 16\n
    \  8.  HTTP Binding . . . . . . . . . . . . . . . . . . . . . . . . . 20\n   9.
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 22\n     9.1.
    \ Assuring That the Proper LIS Has Been Contacted  . . . . . 23\n     9.2.  Protecting
    Responses from Modification . . . . . . . . . . 23\n     9.3.  Privacy and Confidentiality
    \ . . . . . . . . . . . . . . . 23\n   10. Examples . . . . . . . . . . . . .
    . . . . . . . . . . . . . . 25\n     10.1. Examples of HTTPS Messages . . . .
    . . . . . . . . . . . . 25\n     10.2. Example of a Simple Location Request .
    . . . . . . . . . . 26\n     10.3. An Example of a Location Request for Multiple
    Location\n           Types  . . . . . . . . . . . . . . . . . . . . . . . . .
    . 27\n   11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 28\n
    \    11.1. URN Sub-Namespace Registration for\n           urn:ietf:params:xml:ns:geopriv:held
    \ . . . . . . . . . . . 28\n     11.2. XML Schema Registration  . . . . . . .
    . . . . . . . . . . 29\n     11.3. MIME Media Type Registration for 'application/held+xml'
    \ . 29\n     11.4. Error Code Registry  . . . . . . . . . . . . . . . . . . .
    30\n   12. Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 32\n
    \  13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 32\n   14.
    References . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n     14.1.
    Normative References . . . . . . . . . . . . . . . . . . . 33\n     14.2. Informative
    References . . . . . . . . . . . . . . . . . . 34\n   Appendix A.  HELD Compliance
    to IETF LCP Requirements  . . . . . . 36\n     A.1.  L7-1: Identifier Choice  .
    . . . . . . . . . . . . . . . . 36\n     A.2.  L7-2: Mobility Support . . . .
    . . . . . . . . . . . . . . 36\n     A.3.  L7-3: ASP and Access Network Provider
    Relationship . . . . 37\n     A.4.  L7-4: Layer 2 and Layer 3 Provider Relationship
    \ . . . . . 37\n     A.5.  L7-5: Legacy Device Considerations . . . . . . . .
    . . . . 37\n     A.6.  L7-6: VPN Awareness  . . . . . . . . . . . . . . . . .
    . . 38\n     A.7.  L7-7: Network Access Authentication  . . . . . . . . . . .
    38\n     A.8.  L7-8: Network Topology Unawareness . . . . . . . . . . . . 38\n
    \    A.9.  L7-9: Discovery Mechanism  . . . . . . . . . . . . . . . . 39\n     A.10.
    L7-10: PIDF-LO Creation  . . . . . . . . . . . . . . . . . 39\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The location of a Device is information that is useful for
    a number\n   of applications.  The L7 Location Configuration Protocol (LCP)\n
    \  problem statement and requirements document [RFC5687] provides some\n   scenarios
    in which a Device might rely on its access network to\n   provide location information.
    \ The Location Information Server (LIS)\n   service applies to access networks
    employing both wired technology\n   (e.g., DSL, cable) and wireless technology
    (e.g., WiMAX) with varying\n   degrees of Device mobility.  This document describes
    a protocol that\n   can be used to acquire Location Information (LI) from a LIS
    within an\n   access network.\n   This specification identifies two types of location
    information that\n   may be retrieved from the LIS.  Location may be retrieved
    from the\n   LIS by value; that is, the Device may acquire a literal location\n
    \  object describing the location of the Device.  The Device may also\n   request
    that the LIS provide a location reference in the form of a\n   Location URI or
    set of Location URIs, allowing the Device to\n   distribute its LI by reference.
    \ Both of these methods can be\n   provided concurrently from the same LIS to
    accommodate application\n   requirements for different types of location information.\n
    \  This specification defines an extensible XML-based protocol that\n   enables
    the retrieval of LI from a LIS by a Device.  This protocol\n   can be bound to
    any session-layer protocol, particularly those\n   capable of MIME transport.
    \ This document describes the use of HTTP\n   and HTTP/TLS as transports for the
    protocol.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions and Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n
    \  This document uses the terms (and their acronym forms): Access\n   Provider
    (AP), Location Information (LI), Location Object (LO),\n   Device, Target, Location
    Generator (LG), Location Recipient (LR), and\n   Rule Maker (RM) and Rule Holder
    (RH) as defined in GEOPRIV\n   Requirements [RFC3693].  The terms Location Information
    Server (LIS),\n   Access Network, Access Provider (AP), and Access Network Provider
    are\n   used in the same context as defined in the L7 LCP Problem statement\n
    \  and Requirements document [RFC5687].  The usage of the terms Civic\n   Location/Address
    and Geodetic Location follows the usage in many of\n   the referenced documents.\n
    \  In describing the protocol, the terms \"attribute\" and \"element\" are\n   used
    according to their context in XML.  The term \"parameter\" is used\n   in a more
    general protocol context and can refer to either an XML\n   \"attribute\" or \"element\".\n"
  title: 2.  Conventions and Terminology
- contents:
  - "3.  Overview and Scope\n   This document describes an interface between a Device
    and a Location\n   Information Server (LIS).  This document assumes that the LIS
    is\n   present within the same administrative domain as the Device (e.g.,\n   the
    access network).  The LIS exists because not all Devices are\n   capable of determining
    LI, and because, even if a Device is able to\n   determine its own LI, it may
    be more efficient with assistance.  This\n   document does not specify how LI
    is determined.  An Access Provider\n   (AP) operates the LIS so that Devices (and
    Targets) can retrieve\n   their LI.  This document assumes that the Device and
    Access Provider\n   have no prior relationship other than what is necessary for
    the\n   Device to obtain network access.\n   This document is based on the attribution
    of the LI to a Device and\n   not specifically a person (end user) or Target,
    based on the premise\n   that location determination technologies are generally
    designed to\n   locate a Device and not a person.  It is expected that, for most\n
    \  applications, LI for the Device can be used as an adequate substitute\n   for
    the end user's LI.  Since revealing the location of the Device\n   almost invariably
    reveals some information about the location of the\n   user of the Device, the
    same level of privacy protection demanded by\n   a user is required for the Device.
    \ This approach may require either\n   some additional assurances about the link
    between Device and target,\n   or an acceptance of the limitation that unless
    the Device requires\n   active user authentication, there is no guarantee that
    any particular\n   individual is using the Device at that instant.\n   The following
    diagram shows the logical configuration of some of the\n   functional elements
    identified in [RFC3693] and the LIS defined in\n   [RFC5687].  It also shows where
    this protocol applies, with the Rule\n   Maker and Target represented by the role
    of the Device.  Note that\n   only the interfaces relevant to the Device are identified
    in the\n   diagram.\n                     +---------------------------------------------+\n
    \                    | Access Network Provider                     |\n                     |
    \                                            |\n                     |   +--------------------------------------+
    \ |\n                     |   | Location Information Server          |  |\n                     |
    \  |                                      |  |\n                     |   |                                      |
    \ |\n                     |   |                                      |  |\n                     |
    \  |                                      |  |\n                     |   +------|-------------------------------+
    \ |\n                     +----------|----------------------------------+\n                                |\n
    \                               |\n                               HELD\n                                |\n
    \    Rule Maker - - _     +-----------+         +-----------+\n           o          -
    - | Device    |         | Location  |\n          <U\\             |           |
    - - - - | Recipient |\n          / \\       _ - - |           |   APP   |           |\n
    \        Target - -       +-----------+         +-----------+\n                        Figure
    1: Significant Roles\n   The interface between the Location Recipient (LR) and
    the Device\n   and/or LIS is application specific, as indicated by the APP\n   annotation
    in the diagram and it is outside the scope of the\n   document.  An example of
    an APP interface between a Device and LR can\n   be found in the SIP Location
    Conveyance document [LOC-CONVEY].\n"
  title: 3.  Overview and Scope
- contents:
  - "4.  Protocol Overview\n   A Device uses the HTTP-Enabled Location Delivery (HELD)
    protocol to\n   retrieve its location either directly in the form of a Presence\n
    \  Information Data Format Location Object (PIDF-LO) document (by value)\n   or
    indirectly as a Location URI (by reference).  The security\n   necessary to ensure
    the accuracy, privacy, and confidentiality of the\n   Device's location is described
    in the Security Considerations\n   (Section 9).\n   As described in the L7 LCP
    problem statement and requirements\n   document [RFC5687], the Device MUST first
    discover the URI for the\n   LIS for sending the HELD protocol requests.  The
    URI for the LIS\n   SHOULD be obtained from an authorized and authenticated entity.
    \ The\n   details for ensuring that an appropriate LIS is contacted are\n   provided
    in Section 9 and in particular Section 9.1.  The LIS\n   discovery protocol details
    are out of scope of this document and are\n   specified in [RFC5986].  The type
    of URI provided by LIS discovery is\n   RECOMMENDED to be an HTTPS URI.\n   The
    LIS requires an identifier for the Device in order to determine\n   the appropriate
    location to include in the location response message.\n   In this document, the
    IP address of the Device, as reflected by the\n   source IP address in the location
    request message, is used as the\n   identifier.  Other identifiers are possible,
    but are beyond the scope\n   of this document.\n"
  - contents:
    - "4.1.  Device Identifiers, NAT and VPNs\n   Use of the HELD protocol is subject
      to the viability of the\n   identifier used by the LIS to determine location.
      \ This document\n   describes the use of the source IP address sent from the
      Device as\n   the identifier used by the LIS.  When Network Address Translation\n
      \  (NAT), a Virtual Private Network (VPN), or other forms of address\n   modification
      occur between the Device and the LIS, the location\n   returned could be inaccurate.\n
      \  Not all cases of NATs introduce inaccuracies in the returned\n   location.
      \ For example, a NAT used in a residential Local Area\n   Network (LAN) is typically
      not a problem.  The external IP address\n   used on the Wide Area Network (WAN)
      side of the NAT is an acceptable\n   identifier for all of the Devices in the
      residence (on the LAN side\n   of the NAT), since the covered geographical area
      is small.\n   On the other hand, if there is a VPN between the Device and the
      LIS\n   (for example, for a teleworker), then the IP address seen by a LIS\n
      \  inside the enterprise network might not be the right address to\n   identify
      the location of the Device.  Section 4.1.2 provides\n   recommendations to address
      this issue.\n"
    - contents:
      - "4.1.1.  Devices and VPNs\n   To minimize the impact of connections or tunnels
        setup for security\n   purposes or for traversing middleboxes, Devices that
        connect to\n   servers such as VPN servers, SOCKS servers, and HTTP proxy
        servers\n   should perform their HELD query on the LIS prior to establishing
        a\n   connection to other servers.  It is RECOMMENDED that discovery\n   [RFC5986]
        and an initial query be performed before establishing any\n   connections
        to other servers.  If a Device performs the HELD query\n   after establishing
        a connection to another server, the Device may\n   receive inaccurate location
        information.\n   Devices that establish VPN connections for use by other Devices\n
        \  inside a LAN or other closed network could serve as a LIS, that\n   implements
        the HELD protocol, for those other Devices.  Devices\n   within the closed
        network are not necessarily able to detect the\n   presence of the VPN.  In
        this case, a VPN Device should provide the\n   address of the LIS server it
        provides, in response to discovery\n   queries, rather than passing such queries
        through the VPN tunnel.\n   Otherwise, the other Devices would be totally
        unaware that they could\n   receive inaccurate location information.\n   It
        could also be useful for a VPN Device to serve as a LIS for other\n   location
        configuration options such as Dynamic Host Configuration\n   Protocol (DHCP)
        [RFC3825] or Link Layer Discovery Protocol - Media\n   Endpoint Discovery
        [LLDP-MED].  For this case, the VPN Device that\n   serves as a LIS may first
        acquire its own location using HELD.\n"
      title: 4.1.1.  Devices and VPNs
    - contents:
      - "4.1.2.  LIS Handling of NATs and VPNs\n   In the cases where the Device connects
        to the LIS through a VPN or a\n   NAT that serves a large geographic area
        or multiple geographic\n   locations (for example, a NAT used by an enterprise
        to connect their\n   private network to the Internet), the LIS might not be
        able to return\n   accurate LI.  If the LIS cannot determine LI for the Device,
        it\n   should provide an error response to the requesting Device.  The LIS\n
        \  needs to be configured to recognize identifiers that represent these\n
        \  conditions.\n   LIS operators have a large role in ensuring the best possible\n
        \  environment for location determination.  The LIS operator needs to\n   ensure
        that the LIS is properly configured with identifiers that\n   indicate Devices
        on the remote side of a NAT or VPN.  In order to\n   serve the Devices on
        the remote side of a NAT or VPN, a LIS needs to\n   have a presence on the
        side of the NAT or VPN nearest the Device.\n"
      title: 4.1.2.  LIS Handling of NATs and VPNs
    title: 4.1.  Device Identifiers, NAT and VPNs
  - contents:
    - "4.2.  Location by Value\n   Where a Device requires LI directly, it can request
      that the LIS\n   create a PIDF-LO document.  This approach fits well with a\n
      \  configuration whereby the Device directly makes use of the provided\n   PIDF-LO
      document.  The details on the information that may be\n   included in the PIDF-LO
      MUST follow the subset of those rules\n   relating to the construction of the
      \"location-info\" element in the\n   PIDF-LO Usage Clarification, Considerations,
      and Recommendations\n   document [RFC5491].  Further detail is included in \"Protocol\n
      \  Parameters\" (Section 6).\n"
    title: 4.2.  Location by Value
  - contents:
    - "4.3.  Location by Reference\n   Requesting location directly does not always
      address the requirements\n   of an application.  A Device can request a Location
      URI instead of\n   literal location.  A Location URI is a URI [RFC3986] of any
      scheme,\n   which a Location Recipient (LR) can use to retrieve LI.  A Location\n
      \  URI provided by a LIS can be assumed to be globally addressable; that\n   is,
      anyone in possession of the URI can access the LIS.\n   However, possession
      of the URI does not in any way suggest that the\n   LIS indiscriminately reveals
      the location associated with the\n   Location URI.  The specific requirements
      associated with the\n   dereference of the location are specified in [RFC5808].
      \ The location\n   dereference protocol details are out of scope of this document.
      \ As\n   such, many of the requirements in [RFC5808] (e.g., canceling of\n   location
      references) are not intended to be supported by this\n   specification.  It
      is anticipated that future specifications may\n   address these requirements.\n"
    title: 4.3.  Location by Reference
  title: 4.  Protocol Overview
- contents:
  - "5.  Protocol Description\n   As discussed in Section 4, the HELD protocol provides
    for the\n   retrieval of the Device's location in the form of a PIDF-LO document\n
    \  and/or Location URI(s) from a LIS.  Three messages are defined to\n   support
    the location retrieval: locationRequest, locationResponse,\n   and error.\n   The
    Location Request (locationRequest) message is described in\n   Section 5.1.  A
    Location Request message from a Device indicates\n   whether location should be
    returned in the form of a PIDF-LO document\n   (with specific type(s) of location)
    and/or Location URI(s).  In case\n   of success, the LIS replies with a locationResponse
    message,\n   including a PIDF-LO document and/or one or more Location URIs.  In\n
    \  the case of an error, the LIS replies with an error message.\n   The HELD protocol
    messages are defined as XML documents that MUST be\n   encoded in UTF-8.  A MIME
    type \"application/held+xml\" is registered\n   in Section 11.3 to distinguish
    HELD messages from other XML document\n   bodies.  This specification follows
    the recommendations and\n   conventions described in [RFC3023], including the
    naming convention\n   of the type ('+xml' suffix) and the usage of the 'charset'
    parameter.\n   The 'charset' parameter MUST be included with the XML document.\n
    \  Section 6 contains a more thorough description of the protocol\n   parameters,
    valid values, and how each should be handled.  Section 7\n   contains a more specific
    definition of the structure of these\n   messages in the form of an XML Schema
    [W3C.REC-xmlschema-1-20041028].\n   Section 8 describes the use of a combination
    of HTTP [RFC2616], TLS\n   [RFC5246], and TCP [RFC0793] for transporting the HELD
    messages.\n"
  - contents:
    - "5.1.  Location Request\n   A location request message is sent from the Device
      to the LIS when\n   the Device requires its own LI.  The type of LI that a Device\n
      \  requests is determined by the type of LI that is included in the\n   \"locationType\"
      element.\n   The location request is made by sending a document formed of a\n
      \  \"locationRequest\" element.  The LIS uses the source IP address of the\n
      \  location request message as the primary source of identity for the\n   requesting
      Device or target.  It is anticipated that other Device\n   identities may be
      provided through schema extensions.\n   The LIS MUST ignore any part of a location
      request message that it\n   does not understand, except the document element.
      \ If the document\n   element of a request is not supported, the LIS MUST return
      an error\n   with the unsupportedMessage error code.\n"
    title: 5.1.  Location Request
  - contents:
    - "5.2.  Location Response\n   A successful response to a location request MUST
      contain a PIDF-LO\n   and/or Location URI(s).  The response SHOULD contain location\n
      \  information of the requested \"locationType\".  The cases whereby a\n   different
      type of location information MAY be returned are described\n   in Section 6.2.\n"
    title: 5.2.  Location Response
  - contents:
    - "5.3.  Indicating Errors\n   If the LIS is unable to provide location information
      based on the\n   received locationRequest message, it MUST return an error message.\n
      \  The LIS may return an error message in response to requests for any\n   \"locationType\".\n
      \  An error indication document consists of an \"error\" element.  The\n   \"error\"
      element MUST include a \"code\" attribute that indicates the\n   type of error.
      \ A set of predefined error codes are included in\n   Section 6.3.\n   Error
      responses MAY also include a \"message\" attribute that can\n   include additional
      information.  This information SHOULD be for\n   diagnostic purposes only and
      MAY be in any language.  The language of\n   the message SHOULD be indicated
      with an \"xml:lang\" attribute.\n"
    title: 5.3.  Indicating Errors
  title: 5.  Protocol Description
- contents:
  - "6.  Protocol Parameters\n   This section describes in detail the parameters that
    are used for\n   this protocol.  Table 1 lists the top-level components used within\n
    \  the protocol and where they are mandatory (m) or optional (o) for\n   each
    of the messages.\n   +----------------+-----------+------------+------------+------------+\n
    \  | Parameter      |  Section  |  Location  |  Location  |    Error   |\n   |
    \               |           |   Request  |  Response  |            |\n   +----------------+-----------+------------+------------+------------+\n
    \  | responseTime   |    6.1    |      o     |            |            |\n   |
    \               |           |            |            |            |\n   | locationType
    \  |    6.2    |      o     |            |            |\n   |                |
    \          |            |            |            |\n   | code           |    6.3
    \   |            |            |      m     |\n   |                |           |
    \           |            |            |\n   | message        |    6.4    |            |
    \           |      o     |\n   |                |           |            |            |
    \           |\n   | locationUriSet |    6.5    |            |      o     |            |\n
    \  |                |           |            |            |            |\n   |
    Presence       |    6.6    |            |      o     |            |\n   | (PIDF-LO)
    \     |           |            |            |            |\n   +----------------+-----------+------------+------------+------------+\n
    \                    Table 1: Message Parameter Usage\n"
  - contents:
    - "6.1.  \"responseTime\" Parameter\n   The \"responseTime\" attribute MAY be
      included in a location request\n   message.  The \"responseTime\" attribute
      includes a time value\n   indicating to the LIS how long the Device is prepared
      to wait for a\n   response or a purpose for which the Device needs the location.\n
      \  In the case of emergency services, the purpose of obtaining the LI\n   could
      be either for routing a call to the appropriate Public Safety\n   Answering
      Point (PSAP) or indicating the location to which responders\n   should be dispatched.
      \ The values defined for the purpose,\n   \"emergencyRouting\" and \"emergencyDispatch\",
      will likely be governed\n   by jurisdictional policies and should be configurable
      on the LIS.\n   The time value in the \"responseTime\" attribute is expressed
      as a non-\n   negative integer in units of milliseconds.  The time value is\n
      \  indicative only, and the LIS is under no obligation to strictly\n   adhere
      to the time limit implied; any enforcement of the time limit\n   is left to
      the requesting Device.  The LIS provides the most accurate\n   LI that can be
      determined within the specified interval for the\n   specific service.\n   The
      LIS may use the value of the time in the \"responseTime\" attribute\n   as input
      when selecting the method of location determination, where\n   multiple such
      methods exist.  If the \"responseTime\" attribute is\n   absent, then the LIS
      should return the most precise LI it is capable\n   of determining, with the
      time interval being implementation\n   dependent.\n"
    title: 6.1.  "responseTime" Parameter
  - contents:
    - "6.2.  \"locationType\" Parameter\n   The \"locationType\" element MAY be included
      in a location request\n   message.  It contains a list of LI types that are
      requested by the\n   Device.  The following list describes the possible values:\n
      \  any:  The LIS SHOULD attempt to provide LI in all forms available to\n      it.\n
      \  geodetic:  The LIS SHOULD return a location by value in the form of a\n      geodetic
      location for the Target.\n   civic:  The LIS SHOULD return a location by value
      in the form of a\n      civic address for the Target.\n   locationURI:  The
      LIS SHOULD return a set of Location URIs for the\n      Target.\n   The LIS
      SHOULD return the requested location type or types.  The\n   location types
      the LIS returns also depend on the setting of the\n   optional \"exact\" attribute.
      \ If the \"exact\" attribute is set to\n   \"true\", then the LIS MUST return
      either the requested location type\n   or provide an error response.  The \"exact\"
      attribute does not apply\n   (is ignored) for a request for a location type
      of \"any\".  Further\n   detail of the \"exact\" attribute processing is provided
      in the\n   following Section 6.2.1.\n   When there is a request for specific
      locationType(s) and the \"exact\"\n   attribute is \"false\", the LIS MAY provide
      additional location types,\n   or it MAY provide alternative types if the request
      cannot be\n   satisfied for a requested location type.  The \"SHOULD\"-strength\n
      \  requirements on this parameter for specific location types are\n   included
      to allow for soft-failover.  This enables a fixed client\n   configuration that
      prefers a specific location type without causing\n   location requests to fail
      when that location type is unavailable.\n   For example, a notebook computer
      could be configured to retrieve\n   civic addresses, which is usually available
      from typical home or work\n   situations.  However, when using a wireless modem,
      the LIS might be\n   unable to provide a civic address and thus provides a geodetic\n
      \  address.\n   The LIS SHOULD return location information in a form that is
      suited\n   for routing and responding to an emergency call in its jurisdiction,\n
      \  specifically by value.  The LIS MAY alternatively or additionally\n   return
      a Location URI.  If the \"locationType\" element is absent, a\n   value of \"any\"
      MUST be assumed as the default.  A Location URI\n   provided by the LIS is a
      reference to the most current available LI\n   and is not a stable reference
      to a specific location.\n   It should be noted that the protocol does not support
      a request to\n   just receive one of a subset of location types.  For example,
      in the\n   case where a Device has a preference for just \"geodetic\" or \"civic\",\n
      \  it is necessary to make the request without an \"exact\" attribute,\n   including
      both location types.  In this case, if neither is\n   available, a LIS SHOULD
      return a locationURI if available.\n   The LIS SHOULD provide the locations
      in the response in the same\n   order in which they were included in the \"locationType\"
      element in\n   the request.  Indeed, the primary advantage of including specific\n
      \  location types in a request when the \"exact\" attribute is set to\n   \"false\"
      is to ensure that one receives the available locations in a\n   specific order.
      \ For example, a locationRequest for \"civic\" could\n   yield any of the following
      location types in the response:\n   o  civic\n   o  civic, geodetic\n   o  civic,
      locationURI\n   o  civic, geodetic, locationURI\n   o  civic, locationURI, geodetic\n
      \  o  geodetic, locationURI (only if civic is not available)\n   o  locationURI,
      geodetic (only if civic is not available)\n   o  geodetic (only if civic is
      not available)\n   o  locationURI (only if civic is not available)\n   For the
      example above, if the \"exact\" attribute was \"true\", then the\n   only possible
      response is either a \"civic\" location or an error\n   message.\n"
    - contents:
      - "6.2.1.  \"exact\" Attribute\n   The \"exact\" attribute MAY be included in
        a location request message\n   when the \"locationType\" element is included.
        \ When the \"exact\"\n   attribute is set to \"true\", it indicates to the
        LIS that the contents\n   of the \"locationType\" parameter MUST be strictly
        followed.  The\n   default value of \"false\" allows the LIS the option of
        returning\n   something beyond what is specified, such as a set of Location
        URIs\n   when only a civic location was requested.\n   A value of \"true\"
        indicates that the LIS MUST provide a location of\n   the requested type or
        types or MUST provide an error.  The LIS MUST\n   provide the requested types
        only.  The LIS MUST handle an exact\n   request that includes a \"locationType\"
        element set to \"any\" as if the\n   \"exact\" attribute were set to \"false\".\n"
      title: 6.2.1.  "exact" Attribute
    title: 6.2.  "locationType" Parameter
  - contents:
    - "6.3.  \"code\" Parameter\n   All \"error\" responses MUST contain a response
      code.  All errors are\n   application-level errors and MUST only be provided
      in successfully\n   processed transport-level responses.  For example, where
      HTTP/HTTPS\n   is used as the transport, HELD error messages MUST be carried
      by a\n   200 OK HTTP/HTTPS response.\n   The value of the response code MUST
      be an IANA-registered value.  The\n   following tokens are registered by this
      document:\n   requestError:  This code indicates that the request was badly
      formed\n      in some fashion (other than the XML content).\n   xmlError:  This
      code indicates that the XML content of the request\n      was either badly formed
      or invalid.\n   generalLisError:  This code indicates that an unspecified error\n
      \     occurred at the LIS.\n   locationUnknown:  This code indicates that the
      LIS could not\n      determine the location of the Device.  The same request
      can be\n      sent by the Device at a later time.  Devices MUST limit any\n
      \     attempts to retry requests.\n   unsupportedMessage:  This code indicates
      that an element in the XML\n      document for the request was not supported
      or understood by the\n      LIS.  This error code is used when a HELD request
      contains a\n      document element that is not supported by the receiver.\n
      \  timeout:  This code indicates that the LIS could not satisfy the\n      request
      within the time specified in the \"responseTime\" parameter.\n   cannotProvideLiType:
      \ This code indicates that the LIS was unable to\n      provide LI of the type
      or types requested.  This code is used when\n      the \"exact\" attribute on
      the \"locationType\" parameter is set to\n      \"true\".\n   notLocatable:
      \ This code indicates that the LIS is unable to locate\n      the Device and
      that the Device MUST NOT make further attempts to\n      retrieve LI from this
      LIS.  This error code is used to indicate\n      that the Device is outside
      the access network served by the LIS,\n      for instance, the VPN and NAT scenarios
      discussed in\n      Section 4.1.2.\n"
    title: 6.3.  "code" Parameter
  - contents:
    - "6.4.  \"message\" Parameter\n   The \"error\" message MAY include one or more
      \"message\" attributes to\n   convey some additional, human-readable information
      about the result\n   of the request.  The message MAY be included in any language,
      which\n   SHOULD be indicated by the \"xml:lang\", attribute.  The default\n
      \  language is assumed to be English (\"en\") [RFC5646].\n"
    title: 6.4.  "message" Parameter
  - contents:
    - "6.5.  \"locationUriSet\" Parameter\n   The \"locationUriSet\" element received
      in a \"locationResponse\" message\n   MAY contain any number of \"locationURI\"
      elements.  It is RECOMMENDED\n   that the LIS allocate a Location URI for each
      scheme that it supports\n   and that each scheme is present only once.  URI
      schemes and their\n   secure variants, such as HTTP and HTTPS, MUST be regarded
      as two\n   separate schemes.\n   If a \"locationUriSet\" element is received
      in a \"locationResponse\"\n   message, it MUST contain an \"expires\" attribute,
      which defines the\n   length of time for which the set of \"locationURI\" elements
      are valid.\n"
    - contents:
      - "6.5.1.  \"locationURI\" Parameter\n   The \"locationURI\" element includes
        a single Location URI.  In order\n   for a URI of any particular scheme to
        be included in a response,\n   there MUST be a specification that defines
        how that URI can be used\n   to retrieve location information.  The details
        of the protocol for\n   dereferencing must meet the location dereference protocol\n
        \  requirements as specified in [RFC5808] and are outside the scope of\n   this
        base HELD specification.\n   Each Location URI that is allocated by the LIS
        is unique to the\n   Device that is requesting it.  At the time the Location
        URI is\n   provided in the response, there is no binding to a specific location\n
        \  type and the Location URI is totally independent of the specific type\n
        \  of location it might reference.  The specific location type is\n   determined
        at the time of dereference.\n   A \"locationURI\" SHOULD NOT contain any information
        that could be used\n   to identify the Device or Target.  Thus, it is RECOMMENDED
        that the\n   \"locationURI\" element contain a public address for the LIS
        and an\n   anonymous identifier, such as a local identifier or unlinked\n
        \  pseudonym.\n   When a LIS returns a \"locationURI\" element to a Device,
        the policy on\n   the \"locationURI\" is set by the LIS alone.  This specification
        does\n   not include a mechanism for the HELD client to set access control\n
        \  policies on a \"locationURI\".  Conversely, there is no mechanism, in\n
        \  this protocol as defined in this document, for the LIS to provide a\n   Device
        the access control policy to be applied to a \"locationURI\".\n   Since the
        Device is not aware of the access controls to be applied to\n   (subsequent)
        requests to dereference a \"locationURI\", the client\n   SHOULD protect a
        \"locationURI\" as if it were a Location Object --\n   i.e., the Device SHOULD
        send a \"locationURI\" over encrypted channels\n   and only to entities that
        are authorized to have access to the\n   location.\n   Further guidelines
        to ensure the privacy and confidentiality of the\n   information contained
        in the \"locationResponse\" message, including\n   the \"locationURI\", are
        included in Section 9.3.\n"
      title: 6.5.1.  "locationURI" Parameter
    - contents:
      - "6.5.2.  \"expires\" Parameter\n   The \"expires\" attribute is only included
        in a \"locationResponse\"\n   message when a \"locationUriSet\" element is
        included.  The \"expires\"\n   attribute indicates the date/time at which
        the Location URIs provided\n   by the LIS will expire.  The \"expires\" attribute
        does not define the\n   length of time a location received by dereferencing
        the Location URI\n   will be valid.  The \"expires\" attribute is RECOMMENDED
        not to exceed\n   24 hours and SHOULD be a minimum of 30 minutes.\n   All
        date-time values used in HELD MUST be expressed in Universal\n   Coordinated
        Time (UTC) using the Gregorian calendar.  The XML schema\n   allows use of
        time zone identifiers to indicate offsets from the zero\n   meridian, but
        this option MUST NOT be used with HELD.  The extended\n   date-time form using
        upper case \"T\" and \"Z\" characters defined in\n   [W3C.REC-xmlschema-2-20041028]
        MUST be used to represent date-time\n   values.\n   Location responses that
        contain a \"locationUriSet\" element MUST\n   include the expiry time in the
        \"expires\" attribute.  If a Device\n   dereferences a Location URI after
        the expiry time, the dereference\n   SHOULD fail.\n"
      title: 6.5.2.  "expires" Parameter
    title: 6.5.  "locationUriSet" Parameter
  - contents:
    - "6.6.  \"Presence\" Parameter (PIDF-LO)\n   A single \"presence\" parameter
      MAY be included in the\n   \"locationResponse\" message when specific locationTypes
      (e.g.,\n   \"geodetic\" or \"civic\") are requested or a \"locationType\" of
      \"any\" is\n   requested.  The LIS MUST follow the subset of the rules relating
      to\n   the construction of the \"location-info\" element in the PIDF-LO Usage\n
      \  Clarification, Considerations, and Recommendations document [RFC5491]\n   in
      generating the PIDF-LO for the presence parameter.\n   The LIS MUST NOT include
      any means of identifying the Device in the\n   PIDF-LO unless it is able to
      verify that the identifier is correct\n   and inclusion of identity is expressly
      permitted by a Rule Maker.\n   Therefore, PIDF parameters that contain identity
      are either omitted\n   or contain unlinked pseudonyms [RFC3693].  A unique,
      unlinked\n   presentity URI SHOULD be generated by the LIS for the mandatory\n
      \  presence \"entity\" attribute of the PIDF document.  Optional\n   parameters
      such as the \"contact\" and \"deviceID\" elements [RFC4479]\n   are not used.\n
      \  Note that the presence parameter is not explicitly shown in the XML\n   schema
      in Section 7 for a location response message, due to XML\n   schema constraints,
      since PIDF is already defined and registered\n   separately.  Thus, the \"##other\"
      namespace serves as a placeholder\n   for the presence parameter in the schema.\n"
    title: 6.6.  "Presence" Parameter (PIDF-LO)
  title: 6.  Protocol Parameters
- contents:
  - "7.  XML Schema\n   This section gives the XML Schema Definition\n   [W3C.REC-xmlschema-1-20041028]
    [W3C.REC-xmlschema-2-20041028] of the\n   \"application/held+xml\" format.  This
    is presented as a formal\n   definition of the \"application/held+xml\" format.
    \ Note that the XML\n   Schema Definition is not intended to be used with on-the-fly\n
    \  validation of the presence XML document.  Whitespaces are included in\n   the
    schema to conform to the line length restrictions of the RFC\n   format without
    having a negative impact on the readability of the\n   document.  Any conforming
    processor should remove leading and\n   trailing white spaces.\n  <?xml version=\"1.0\"?>\n
    \ <xs:schema\n      targetNamespace=\"urn:ietf:params:xml:ns:geopriv:held\"\n
    \     xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n      xmlns:held=\"urn:ietf:params:xml:ns:geopriv:held\"\n
    \     xmlns:xml=\"http://www.w3.org/XML/1998/namespace\"\n      elementFormDefault=\"qualified\"\n
    \     attributeFormDefault=\"unqualified\">\n    <xs:annotation>\n      <xs:documentation>\n
    \       This document (RFC 5985) defines HELD messages.\n      </xs:documentation>\n
    \   </xs:annotation>\n    <xs:import namespace=\"http://www.w3.org/XML/1998/namespace\"/>\n
    \   <!-- Return Location -->\n    <xs:complexType name=\"returnLocationType\">\n
    \     <xs:complexContent>\n        <xs:restriction base=\"xs:anyType\">\n          <xs:sequence>\n
    \           <xs:element name=\"locationURI\" type=\"xs:anyURI\"\n                        maxOccurs=\"unbounded\"/>\n
    \         </xs:sequence>\n          <xs:attribute name=\"expires\" type=\"xs:dateTime\"\n
    \                       use=\"required\"/>\n        </xs:restriction>\n      </xs:complexContent>\n
    \   </xs:complexType>\n    <!-- responseTime Type -->\n    <xs:simpleType name=\"responseTimeType\">\n
    \     <xs:union>\n        <xs:simpleType>\n          <xs:restriction base=\"xs:token\">\n
    \           <xs:enumeration value=\"emergencyRouting\"/>\n            <xs:enumeration
    value=\"emergencyDispatch\"/>\n          </xs:restriction>\n        </xs:simpleType>\n
    \       <xs:simpleType>\n          <xs:restriction base=\"xs:nonNegativeInteger\">\n
    \           <xs:minInclusive value=\"0\"/>\n          </xs:restriction>\n        </xs:simpleType>\n
    \     </xs:union>\n    </xs:simpleType>\n    <!-- Location Type -->\n    <xs:simpleType
    name=\"locationTypeBase\">\n      <xs:union>\n        <xs:simpleType>\n          <xs:restriction
    base=\"xs:token\">\n            <xs:enumeration value=\"any\"/>\n          </xs:restriction>\n
    \       </xs:simpleType>\n        <xs:simpleType>\n          <xs:restriction base=\"held:locationTypeList\">\n
    \           <xs:minLength value=\"1\"/>\n          </xs:restriction>\n        </xs:simpleType>\n
    \     </xs:union>\n    </xs:simpleType>\n    <xs:simpleType name=\"locationTypeList\">\n
    \     <xs:list>\n        <xs:simpleType>\n          <xs:restriction base=\"xs:token\">\n
    \           <xs:enumeration value=\"civic\"/>\n            <xs:enumeration value=\"geodetic\"/>\n
    \           <xs:enumeration value=\"locationURI\"/>\n          </xs:restriction>\n
    \       </xs:simpleType>\n      </xs:list>\n    </xs:simpleType>\n    <xs:complexType
    name=\"locationTypeType\">\n      <xs:simpleContent>\n        <xs:extension base=\"held:locationTypeBase\">\n
    \         <xs:attribute name=\"exact\" type=\"xs:boolean\"\n                        use=\"optional\"
    default=\"false\"/>\n        </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n
    \   <!-- Message Definitions -->\n    <xs:complexType name=\"baseRequestType\">\n
    \     <xs:complexContent>\n        <xs:restriction base=\"xs:anyType\">\n          <xs:sequence/>\n
    \         <xs:attribute name=\"responseTime\" type=\"held:responseTimeType\"\n
    \                       use=\"optional\"/>\n          <xs:anyAttribute namespace=\"##any\"
    processContents=\"lax\"/>\n        </xs:restriction>\n      </xs:complexContent>\n
    \   </xs:complexType>\n    <xs:complexType name=\"errorType\">\n      <xs:complexContent>\n
    \       <xs:restriction base=\"xs:anyType\">\n          <xs:sequence>\n            <xs:element
    name=\"message\" type=\"held:errorMsgType\"\n                        minOccurs=\"0\"
    maxOccurs=\"unbounded\"/>\n            <xs:any namespace=\"##other\" processContents=\"lax\"\n
    \                   minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          </xs:sequence>\n
    \         <xs:attribute name=\"code\" type=\"xs:token\"\n                        use=\"required\"/>\n
    \         <xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n        </xs:restriction>\n
    \     </xs:complexContent>\n    </xs:complexType>\n    <xs:complexType name=\"errorMsgType\">\n
    \     <xs:simpleContent>\n        <xs:extension base=\"xs:token\">\n          <xs:attribute
    ref=\"xml:lang\"/>\n          <xs:anyAttribute namespace=\"##any\" processContents=\"lax\"/>\n
    \       </xs:extension>\n      </xs:simpleContent>\n    </xs:complexType>\n    <xs:element
    name=\"error\" type=\"held:errorType\"/>\n    <!-- Location Response -->\n    <xs:complexType
    name=\"locationResponseType\">\n      <xs:complexContent>\n        <xs:restriction
    base=\"xs:anyType\">\n          <xs:sequence>\n            <xs:element name=\"locationUriSet\"\n
    \                       type=\"held:returnLocationType\"\n                        minOccurs=\"0\"/>\n
    \           <xs:any namespace=\"##other\" processContents=\"lax\"\n                    minOccurs=\"0\"
    maxOccurs=\"unbounded\"/>\n          </xs:sequence>\n        </xs:restriction>\n
    \     </xs:complexContent>\n    </xs:complexType>\n    <xs:element name=\"locationResponse\"\n
    \               type=\"held:locationResponseType\"/>\n    <!-- Location Request
    -->\n    <xs:complexType name=\"locationRequestType\">\n      <xs:complexContent>\n
    \       <xs:extension base=\"held:baseRequestType\">\n          <xs:sequence>\n
    \           <xs:element name=\"locationType\"\n                        type=\"held:locationTypeType\"\n
    \                       minOccurs=\"0\"/>\n            <xs:any namespace=\"##other\"
    processContents=\"lax\"\n                    minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
    \         </xs:sequence>\n        </xs:extension>\n      </xs:complexContent>\n
    \   </xs:complexType>\n    <xs:element name=\"locationRequest\"\n                type=\"held:locationRequestType\"/>\n
    \ </xs:schema>\n"
  title: 7.  XML Schema
- contents:
  - "8.  HTTP Binding\n   This section describes the use of HTTP [RFC2616] and HTTP
    over TLS\n   [RFC2818] as transport mechanisms for the HELD protocol, which a\n
    \  conforming LIS and Device MUST support.\n   Although HELD uses HTTP as a transport,
    it uses a strict subset of\n   HTTP features, and due to the restrictions of some
    features, a LIS is\n   not a fully compliant HTTP server.  It is intended that
    a LIS can\n   easily be built using an HTTP server with extensibility mechanisms\n
    \  and that a HELD Device can trivially use existing HTTP libraries.\n   This
    subset of requirements helps implementors avoid ambiguity with\n   the many options
    that the full HTTP protocol offers.\n   A Device that conforms to this specification
    MAY choose not to\n   support HTTP authentication [RFC2617] or cookies [RFC2965].
    \ Because\n   the Device and the LIS may not necessarily have a prior relationship,\n
    \  the LIS SHOULD NOT require a Device to authenticate, either using the\n   above
    HTTP authentication methods or TLS client authentication.\n   Unless all Devices
    that access a LIS can be expected to be able to\n   authenticate in a certain
    fashion, denying access to location\n   information could prevent a Device from
    using location-dependent\n   services, such as emergency calling.  Extensions
    to this protocol\n   might result in the addition of request parameters that a
    LIS might\n   use to decide to request Device authentication.\n   A HELD request
    is carried in the body of an HTTP POST request.  The\n   Device MUST include a
    Host header in the request.\n   The MIME type of HELD request and response bodies
    is\n   \"application/held+xml\".  LIS and Device MUST provide this value in\n
    \  the HTTP Content-Type and Accept header fields.  If the LIS does not\n   receive
    the appropriate Content-Type and Accept header fields, the\n   LIS SHOULD fail
    the request, returning a 406 (not acceptable)\n   response.  HELD responses SHOULD
    include a Content-Length header.\n   Devices MUST NOT use the \"Expect\" header
    or the \"Range\" header in\n   HELD requests.  The LIS MAY return 501 (not implemented)
    errors if\n   either of these HTTP features are used.  In the case that the LIS\n
    \  receives a request from the Device containing an If-* (conditional)\n   header,
    the LIS SHOULD return a 412 (precondition failed) response.\n   The POST method
    is the only method REQUIRED for HELD.  If a LIS\n   chooses to support GET or
    HEAD, it SHOULD consider the kind of\n   application doing the GET.  Since a HELD
    Device only uses a POST\n   method, the GET or HEAD MUST be either an escaped
    URL (e.g., somebody\n   found a URL in protocol traces or log files and fed it
    into their\n   browser) or somebody doing testing/debugging.  The LIS could provide\n
    \  information in the HELD response indicating that the URL corresponds\n   to
    a LIS server and only responds to HELD POST requests, or the LIS\n   could instead
    try to avoid any leak of information by returning a\n   very generic HTTP error
    message such as 404 (not found).\n   The LIS populates the HTTP headers of responses
    so that they are\n   consistent with the contents of the message.  In particular,
    the\n   \"CacheControl\" header SHOULD be set to disable caching of any PIDF-LO\n
    \  document or Location URIs by HTTP intermediaries.  Otherwise, there\n   is
    the risk of stale locations and/or the unauthorized disclosure of\n   the LI.
    \ This also allows the LIS to control any caching with the\n   HELD \"expires\"
    parameter.  The HTTP status code MUST indicate a 2xx\n   series response for all
    HELD locationResponse and HELD error\n   messages.\n   The LIS MAY redirect a
    HELD request.  A Device MUST handle redirects\n   by using the Location header
    provided by the server in a 3xx\n   response.  When redirecting, the Device MUST
    observe the delay\n   indicated by the Retry-After header.  The Device MUST authenticate\n
    \  the server that returns the redirect response before following the\n   redirect,
    if a Device requires that the server is authenticated.  A\n   Device SHOULD authenticate
    the LIS indicated in a redirect.\n   The LIS SHOULD support persistent connections
    and request pipelining.\n   If pipelining is not supported, the LIS MUST NOT allow
    persistent\n   connections.  The Device MUST support termination of a response
    by\n   the closing of a connection.\n   Implementations of HELD that implement
    HTTP transport MUST implement\n   transport over TLS [RFC2818].  TLS provides
    message integrity and\n   confidentiality between the Device and LIS.  The Device
    MUST\n   implement the server authentication method described in Section 3.1\n
    \  of [RFC2818], with an exception in how wildcards are handled.  The\n   leftmost
    label MAY contain the wildcard string \"*\", which matches any\n   single domain
    name label.  Additional characters in this leftmost\n   label are invalid (that
    is, \"f*.example.com\" is not a valid name and\n   does not match any domain name).\n
    \  The Device uses the URI obtained during LIS discovery to authenticate\n   the
    server.  The details of this authentication method are provided\n   in Section
    3.1 of HTTPS [RFC2818].  When TLS is used, the Device\n   SHOULD fail a request
    if server authentication fails, except in the\n   event of an emergency.\n"
  title: 8.  HTTP Binding
- contents:
  - "9.  Security Considerations\n   HELD is a location acquisition protocol whereby
    the client requests\n   its location from a LIS.  Specific requirements and security\n
    \  considerations for location acquisition protocols are provided in\n   [RFC5687].
    \ An in-depth discussion of the security considerations\n   applicable to the
    use of Location URIs and by-reference provision of\n   LI is included in [RFC5808].\n
    \  By using the HELD protocol, the client and the LIS expose themselves\n   to
    two types of risk:\n   Accuracy:  The client receives incorrect location information.\n
    \  Privacy:  An unauthorized entity receives location information.\n   The provision
    of an accurate and privacy- and confidentiality-\n   protected location to the
    requestor depends on the success of five\n   steps:\n   1.  The client must determine
    the proper LIS.\n   2.  The client must connect to the proper LIS.\n   3.  The
    LIS must be able to identify the Device by its identifier (IP\n       address).\n
    \  4.  The LIS must be able to return the desired location.\n   5.  HELD messages
    must be transmitted unmodified between the LIS and\n       the client.\n   Of
    these, only steps 2, 3, and 5 are within the scope of this\n   document.  Step
    1 is based on either manual configuration or on the\n   LIS discovery defined
    in [RFC5986], in which appropriate security\n   considerations are already discussed.
    \ Step 4 is dependent on the\n   specific positioning capabilities of the LIS
    and is thus outside the\n   scope of this document.\n"
  - contents:
    - "9.1.  Assuring That the Proper LIS Has Been Contacted\n   This document assumes
      that the LIS to be contacted is identified\n   either by an IP address or a
      domain name, as is the case for a LIS\n   discovered as described in LIS Discovery
      [RFC5986].  When the HELD\n   transaction is conducted using TLS [RFC5246],
      the LIS can\n   authenticate its identity, either as a domain name or as an
      IP\n   address, to the client by presenting a certificate containing that\n
      \  identifier as a subjectAltName (i.e., as an iPAddress or dNSName,\n   respectively).
      \ In the case of the HTTP binding described above, this\n   is exactly the authentication
      described by TLS [RFC2818].  If the\n   client has external information as to
      the expected identity or\n   credentials of the proper LIS (e.g., a certificate
      fingerprint),\n   these checks MAY be omitted.  Any binding of HELD MUST be
      capable of\n   being transacted over TLS so that the client can request the
      above\n   authentication, and a LIS implementation for a binding MUST include\n
      \  this feature.  Note that in order for the presented certificate to be\n   valid
      at the client, the client must be able to validate the\n   certificate.  In
      particular, the validation path of the certificate\n   must end in one of the
      client's trust anchors, even if that trust\n   anchor is the LIS certificate
      itself.\n"
    title: 9.1.  Assuring That the Proper LIS Has Been Contacted
  - contents:
    - "9.2.  Protecting Responses from Modification\n   In order to prevent that response
      from being modified en route,\n   messages must be transmitted over an integrity-protected
      channel.\n   When the transaction is being conducted over TLS (a required feature\n
      \  per Section 9.1), the channel will be integrity protected by\n   appropriate
      ciphersuites.  When TLS is not used, this protection will\n   vary depending
      on the binding; in most cases, without protection from\n   TLS, the response
      will not be protected from modification en route.\n"
    title: 9.2.  Protecting Responses from Modification
  - contents:
    - "9.3.  Privacy and Confidentiality\n   Location information returned by the
      LIS must be protected from\n   access by unauthorized parties, whether those
      parties request the\n   location from the LIS or intercept it en route.  As
      in Section 9.2,\n   transactions conducted over TLS with appropriate ciphersuites
      are\n   protected from access by unauthorized parties en route.  Conversely,\n
      \  in most cases, when not conducted over TLS, the response will be\n   accessible
      while en route from the LIS to the requestor.\n   Because HELD is an LCP and
      identifies clients and targets by IP\n   addresses, a requestor is authorized
      to access location for an IP\n   address only if it is the holder of that IP
      address.  The LIS MUST\n   verify that the client is the target of the returned
      location, i.e.,\n   the LIS MUST NOT provide location to other entities than
      the target.\n   Note that this is a necessary, but not sufficient, criterion
      for\n   authorization.  A LIS MAY deny requests according to any local\n   policy.\n
      \  A prerequisite for meeting this requirement is that the LIS must have\n   some
      assurance of the identity of the client.  Since the target of\n   the returned
      location is identified by an IP address, simply sending\n   the response to
      this IP address will provide sufficient assurance in\n   many cases.  This is
      the default mechanism in HELD for assuring that\n   location is given only to
      authorized clients; LIS implementations\n   MUST support a mode of operation
      in which this is the only client\n   authentication.\n   Using IP return routability
      as an authenticator means that location\n   information is vulnerable to exposure
      through IP address spoofing\n   attacks.  A temporary spoofing of an IP address
      could mean that when\n   a Device requests a Location Object or Location URI,
      it receives\n   another Device's location because the attacker is able to receive\n
      \  packets sent to the spoofed address.  In addition, in cases where a\n   Device
      drops off the network for various reasons, the re-use of the\n   Device's IP
      address could result in another Device receiving the\n   original Device's location
      rather than its own location.  These\n   exposures are limited by the following:\n
      \  o  Location URIs MUST have a limited lifetime, as reflected by the\n      value
      for the \"expires\" element in Section 6.5.2.  The lifetime of\n      Location
      URIs necessarily depends on the nature of the access.\n   o  The LIS and network
      SHOULD be configured so that the LIS is made\n      aware of Device movement
      within the network and addressing\n      changes.  If the LIS detects a change
      in the network that results\n      in it no longer being able to determine the
      location of the\n      Device, then all Location URIs for that Device SHOULD
      be\n      invalidated.\n   The above measures are dependent on network configuration,
      which\n   SHOULD be considered.  For instance, in a fixed Internet access,\n
      \  providers may be able to restrict the allocation of IP addresses to a\n   single
      physical line, ensuring that spoofing is not possible; in such\n   an environment,
      additional measures may not be necessary.\n"
    title: 9.3.  Privacy and Confidentiality
  title: 9.  Security Considerations
- contents:
  - "10.  Examples\n   The following sections provide examples of basic HTTP/HTTPS,
    a simple\n   location request, and a location request for multiple location types,\n
    \  along with the relevant location responses.  To focus on important\n   portions
    of messages, the examples in Sections 10.2 and 10.3 do not\n   show HTTP/HTTPS
    headers or the XML prologue.  In addition, sections\n   of XML not relevant to
    the example are replaced with comments.\n"
  - contents:
    - "10.1.  Examples of HTTPS Messages\n   The examples in this section show complete
      HTTP/HTTPS messages that\n   include the HELD request or response document.\n
      \  This example shows the most basic request for a LO.  The POST\n   includes
      an empty \"locationRequest\" element.\n         POST /location HTTP/1.1\n         Host:
      lis.example.com:49152\n         Content-Type: application/held+xml;charset=utf-8\n
      \        Content-Length: 87\n         <?xml version=\"1.0\"?>\n         <locationRequest
      xmlns=\"urn:ietf:params:xml:ns:geopriv:held\"/>\n   Since the above request
      does not include a \"locationType\" element,\n   the successful response to
      the request may contain any type of\n   location.  The following shows a response
      containing a minimal\n   PIDF-LO.\n   HTTP/1.1 200 OK\n   Server: Example LIS\n
      \  Date: Tue, 10 Jan 2006 03:42:29 GMT\n   Expires: Tue, 10 Jan 2006 03:42:29
      GMT\n   Cache-control: private\n   Content-Type: application/held+xml;charset=utf-8\n
      \  Content-Length: 856\n   <?xml version=\"1.0\"?>\n    <locationResponse xmlns=\"urn:ietf:params:xml:ns:geopriv:held\">\n
      \    <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\n      entity=\"pres:3650n87934c@ls.example.com\">\n
      \     <tuple id=\"b650sf789nd\">\n       <status>\n        <geopriv xmlns=\"urn:ietf:params:xml:ns:pidf:geopriv10\">\n
      \        <location-info>\n          <Point xmlns=\"http://www.opengis.net/gml\"\n
      \          srsName=\"urn:ogc:def:crs:EPSG::4326\">\n           <pos>-34.407
      150.88001</pos>\n          </Point>\n         </location-info>\n         <usage-rules\n
      \         xmlns:gbp=\"urn:ietf:params:xml:ns:pidf:geopriv10:basicPolicy\">\n
      \         <gbp:retention-expiry>2006-01-11T03:42:28+00:00\n          </gbp:retention-expiry>\n
      \        </usage-rules>\n         <method>Wiremap</method>\n        </geopriv>\n
      \      </status>\n       <timestamp>2006-01-10T03:42:28+00:00</timestamp>\n
      \     </tuple>\n     </presence>\n    </locationResponse>\n   The error response
      to the request is an error document.  The\n   following response shows an example
      error response.\n         HTTP/1.1 200 OK\n         Server: Example LIS\n         Expires:
      Tue, 10 Jan 2006 03:49:20 GMT\n         Cache-control: private\n         Content-Type:
      application/held+xml;charset=utf-8\n         Content-Length: 182\n         <?xml
      version=\"1.0\"?>\n         <error xmlns=\"urn:ietf:params:xml:ns:geopriv:held\"\n
      \           code=\"locationUnknown\">\n           <message xml:lang=\"en\">Unable
      to determine location\n           </message>\n         </error>\n"
    title: 10.1.  Examples of HTTPS Messages
  - contents:
    - "10.2.  Example of a Simple Location Request\n   The location request shown
      below doesn't specify any location types\n   or response time.\n   <locationRequest
      xmlns=\"urn:ietf:params:xml:ns:geopriv:held\"/>\n   The example response to
      this location request contains a list of\n   Location URIs.\n   <locationResponse
      xmlns=\"urn:ietf:params:xml:ns:geopriv:held\">\n      <locationUriSet expires=\"2006-01-01T13:00:00.0Z\">\n
      \      <locationURI>https://ls.example.com:9768/357yc6s64ceyoiuy5ax3o\n       </locationURI>\n
      \      <locationURI>sip:9769+357yc6s64ceyoiuy5ax3o@ls.example.com\n       </locationURI>\n
      \    </locationUriSet>\n   </locationResponse>\n   An error response to this
      location request is shown below:\n         <error xmlns=\"urn:ietf:params:xml:ns:geopriv:held\"\n
      \                   code=\"locationUnknown\">\n           <message xml:lang=\"en\">Location
      not available\n           </message>\n         </error>\n"
    title: 10.2.  Example of a Simple Location Request
  - contents:
    - "10.3.  An Example of a Location Request for Multiple Location Types\n   The
      following Location Request message includes a request for\n   geodetic, civic,
      and any Location URIs.\n         <locationRequest xmlns=\"urn:ietf:params:xml:ns:geopriv:held\">\n
      \         <locationType exact=\"true\">\n            geodetic\n            civic\n
      \           locationURI\n          </locationType>\n          </locationRequest>\n
      \  The corresponding Location Response message includes the requested\n   location
      information, including two Location URIs.\n     <locationResponse xmlns=\"urn:ietf:params:xml:ns:geopriv:held\">\n
      \      <locationUriSet expires=\"2006-01-01T13:00:00.0Z\">\n       <locationURI>https://ls.example.com:9768/357yc6s64ceyoiuy5ax3o\n
      \      </locationURI>\n       <locationURI>sip:9769+357yc6s64ceyoiuy5ax3o@ls.example.com:\n
      \      </locationURI>\n      </locationUriSet>\n      <presence xmlns=\"urn:ietf:params:xml:ns:pidf\"\n
      \       entity=\"pres:ae3be8585902e2253ce2@10.102.23.9\">\n      <tuple id=\"lisLocation\">\n
      \      <status>\n        <geopriv xmlns=\"urn:ietf:params:xml:ns:pidf:geopriv10\">\n
      \       <location-info>\n         <gs:Circle xmlns:gs=\"http://www.opengis.net/pidflo/1.0\"\n
      \          xmlns:gml=\"http://www.opengis.net/gml\"\n           srsName=\"urn:ogc:def:crs:EPSG::4326\">\n
      \         <gml:pos>-34.407242 150.882518</gml:pos>\n          <gs:radius uom=\"urn:ogc:def:uom:EPSG::9001\">30\n
      \         </gs:radius>\n         </gs:Circle>\n         <ca:civicAddress\n           xmlns:ca=\"urn:ietf:params:xml:ns:pidf:geopriv10:civicAddr\"\n
      \          xml:lang=\"en-au\">\n          <ca:country>AU</ca:country>\n          <ca:A1>NSW</ca:A1>\n
      \         <ca:A3>Wollongong</ca:A3>\n          <ca:A4>Gwynneville</ca:A4>\n
      \         <ca:STS>Northfield Avenue</ca:STS>\n          <ca:LMK>University of
      Wollongong</ca:LMK>\n          <ca:FLR>2</ca:FLR>\n          <ca:NAM>Andrew
      Corporation</ca:NAM>\n          <ca:PC>2500</ca:PC>\n          <ca:BLD>39</ca:BLD>\n
      \         <ca:SEAT>WS-183</ca:SEAT>\n          <ca:POBOX>U40</ca:POBOX>\n        </ca:civicAddress>\n
      \      </location-info>\n       <usage-rules\n         xmlns:gbp=\"urn:ietf:params:xml:ns:pidf:geopriv10:basicPolicy\">\n
      \       <gbp:retransmission-allowed>false\n        </gbp:retransmission-allowed>\n
      \       <gbp:retention-expiry>2007-05-25T12:35:02+10:00\n        </gbp:retention-expiry>\n
      \      </usage-rules>\n       <method>Wiremap</method>\n      </geopriv>\n     </status>\n
      \    <timestamp>2007-05-24T12:35:02+10:00</timestamp>\n    </tuple>\n   </presence>\n
      \  </locationResponse>\n"
    title: 10.3.  An Example of a Location Request for Multiple Location Types
  title: 10.  Examples
- contents:
  - "11.  IANA Considerations\n   IANA has made the registrations detailed in the
    following sections.\n"
  - contents:
    - "11.1.  URN Sub-Namespace Registration for\n       urn:ietf:params:xml:ns:geopriv:held\n
      \  This section registers a new XML namespace,\n   \"urn:ietf:params:xml:ns:geopriv:held\",
      per the guidelines in\n   [RFC3688].\n   URI: urn:ietf:params:xml:ns:geopriv:held\n
      \  Registrant Contact: IETF, GEOPRIV working group, (geopriv@ietf.org),\n   Mary
      Barnes (mary.ietf.barnes@gmail.com).\n      XML:\n         BEGIN\n           <?xml
      version=\"1.0\"?>\n           <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0
      Strict//EN\"\n             \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n
      \          <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n             <head>\n
      \              <title>HELD Messages</title>\n             </head>\n             <body>\n
      \              <h1>Namespace for HELD Messages</h1>\n               <h2>urn:ietf:params:xml:ns:geopriv:held</h2>\n
      \              <p>See RFC 5985</p>\n             </body>\n           </html>\n
      \        END\n"
    title: 11.1.  URN Sub-Namespace Registration for
  - contents:
    - "11.2.  XML Schema Registration\n   This section registers an XML schema as
      per the guidelines in\n   [RFC3688].\n   URI:  urn:ietf:params:xml:schema:geopriv:held\n
      \  Registrant Contact:  IETF, GEOPRIV working group, (geopriv@ietf.org),\n      Mary
      Barnes (mary.ietf.barnes@gmail.com).\n   Schema:  The XML for this schema can
      be found as the entirety of\n      Section 7 of this document.\n"
    title: 11.2.  XML Schema Registration
  - contents:
    - "11.3.  MIME Media Type Registration for 'application/held+xml'\n   This section
      registers the \"application/held+xml\" MIME type.\n   To:  ietf-types@iana.org\n
      \  Subject:  Registration of MIME media type application/held+xml\n   MIME media
      type name:  application\n   MIME subtype name:  held+xml\n   Required parameters:
      \ (none)\n   Optional parameters:  charset\n      Same as the charset parameter
      of \"application/xml\" as specified in\n      RFC 3023 [RFC3023], Section 3.2.\n
      \  Encoding considerations:  Same as the encoding considerations of\n      \"application/xml\"
      as specified in RFC 3023 [RFC3023], Section 3.2.\n   Security considerations:
      \ This content type is designed to carry\n      protocol data related to the
      location of an entity, which could\n      include information that is considered
      private.  Appropriate\n      precautions should be taken to limit disclosure
      of this\n      information.\n   Interoperability considerations:  This content
      type provides a basis\n      for a protocol.  There are multiple interoperable
      implementations\n      of this protocol.\n   Published specification:  RFC 5985\n
      \  Applications which use this media type:  Location information\n      providers
      and consumers.\n   Additional Information:\n      Magic Number(s): (none)\n
      \     File extension(s): .heldxml\n      Macintosh File Type Code(s): \"TEXT\"\n
      \  Person & email address to contact for further information:\n      Mary Barnes
      <mary.ietf.barnes@gmail.com>\n   Intended usage:  LIMITED USE\n   Author/Change
      controller:  The IETF\n   Other information:  This media type is a specialization
      of\n      application/xml [RFC3023], and many of the considerations\n      described
      there also apply to application/held+xml.\n"
    title: 11.3.  MIME Media Type Registration for 'application/held+xml'
  - contents:
    - "11.4.  Error Code Registry\n   As defined in this document, IANA created a
      new registry for the HELD\n   protocol including an initial registry for error
      codes.  The error\n   codes are included in HELD error messages as described
      in Section 6.3\n   and defined in the schema in the 'codeType' token in the
      XML schema\n   in Section 7.\n   The following is a summary of the registry:\n
      \  Related Registry:   Geopriv HELD Registries, Error codes for HELD\n   Defining
      RFC:  RFC 5985\n   Registration/Assignment Procedures:  Following the policies
      outlined\n      in [RFC5226], the IANA policy for assigning new values for the\n
      \     Error codes for HELD is Standards Action: Values are assigned only\n      for
      Standards Track RFCs approved by the IESG.\n   Registrant Contact:  IETF, GEOPRIV
      working group, (geopriv@ietf.org),\n      Mary Barnes (mary.ietf.barnes@gmail.com).\n
      \  This section registers the following eight initial error codes as\n   described
      in Section 6.3:\n   requestError:  This code indicates that the request was
      badly formed\n      in some fashion.\n   xmlError:  This code indicates that
      the XML content of the request\n      was either badly formed or invalid.\n
      \  generalLisError:  This code indicates that an unspecified error\n      occurred
      at the LIS.\n   locationUnknown:  This code indicates that the LIS could not\n
      \     determine the location of the Device.\n   unsupportedMessage:  This code
      indicates that the request was not\n      supported or understood by the LIS.
      \ This error code is used when\n      a HELD request contains a document element
      that is not supported\n      by the receiver.\n   timeout:  This code indicates
      that the LIS could not satisfy the\n      request within the time specified
      in the \"responseTime\" parameter.\n   cannotProvideLiType:  This code indicates
      that the LIS was unable to\n      provide LI of the type or types requested.
      \ This code is used when\n      the \"exact\" attribute on the \"locationType\"
      parameter is set to\n      \"true\".\n   notLocatable:  This code indicates
      that the LIS is unable to locate\n      the Device and that the Device MUST
      NOT make further attempts to\n      retrieve LI from this LIS.  This error code
      is used to indicate\n      that the Device is outside the access network served
      by the LIS;\n      for instance, the VPN and NAT scenarios discussed in\n      Section
      4.1.2.\n"
    title: 11.4.  Error Code Registry
  title: 11.  IANA Considerations
- contents:
  - "12.  Contributors\n   James Winterbottom, Martin Thomson and Barbara Stark are
    the authors\n   of the original document, from which this WG document was derived.\n
    \  Their contact information is included below.  They made additional\n   contributions
    to the WG document, including the XML schema.\n      James Winterbottom\n      Andrew\n
    \     Andrew Building (39)\n      University of Wollongong\n      Northfields
    Avenue\n      Wollongong, NSW  2522\n      AU\n      Phone: +61 2 4221 2938\n
    \     EMail: james.winterbottom@andrew.com\n      URI:   http://www.andrew.com/\n
    \     Martin Thomson\n      Andrew\n      Andrew Building (39)\n      University
    of Wollongong\n      Northfields Avenue\n      Wollongong, NSW  2522\n      AU\n
    \     Phone: +61 2 4221 2915\n      EMail: martin.thomson@andrew.com\n      URI:
    \  http://www.andrew.com/\n      Barbara Stark\n      BellSouth\n      Room 7A43\n
    \     725 W Peachtree St.\n      Atlanta, GA  30308\n      US\n      EMail: barbara.stark@att.com\n"
  title: 12.  Contributors
- contents:
  - "13.  Acknowledgements\n   The author and contributors would like to thank the
    participants in\n   the GEOPRIV WG and the following people for their constructive
    input\n   and feedback on this document (in alphabetical order): Nadine Abbott,\n
    \  Bernard Aboba, Eric Arolick, Richard Barnes (in particular, the\n   security
    considerations section), Peter Blatherwick, Ben Campbell,\n   Guy Caron, Eddy
    Corbett, Martin Dawson, Lisa Dusseault, Robins\n   George, Jerome Grenier, Ted
    Hardie, Cullen Jennings, Neil Justusson,\n   Tat Lam, Marc Linsner, Patti McCalmont,
    Alexey Melnikov, Roger\n   Marshall, Tim Polk, Perry Prozeniuk, Carl Reed, Julian
    Reschke, Eric\n   Rescorla, Dan Romascanu, Brian Rosen, John Schnizlein, Shida\n
    \  Schubert, Henning Schulzrinne, Ed Shrum, Doug Stuard, Hannes\n   Tschofenig,
    and Karl Heinz Wolf.\n"
  title: 13.  Acknowledgements
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n              Masinter,
      L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer Protocol
      -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC2818]  Rescorla, E., \"HTTP Over
      TLS\", RFC 2818, May 2000.\n   [RFC2965]  Kristol, D. and L. Montulli, \"HTTP
      State Management\n              Mechanism\", RFC 2965, October 2000.\n   [RFC3688]
      \ Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              January
      2004.\n   [RFC5246]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n
      \             (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5491]
      \ Winterbottom, J., Thomson, M., and H. Tschofenig, \"GEOPRIV\n              Presence
      Information Data Format Location Object (PIDF-LO)\n              Usage Clarification,
      Considerations, and Recommendations\",\n              RFC 5491, March 2009.\n
      \  [RFC5646]  Phillips, A. and M. Davis, \"Tags for Identifying\n              Languages\",
      BCP 47, RFC 5646, September 2009.\n   [RFC5986]  Thomson, M. and J. Winterbottom,
      \"Discovering the Local\n              Location Information Server (LIS)\",
      RFC 5986,\n              September 2010.\n   [W3C.REC-xmlschema-1-20041028]\n
      \             Thompson, H., Mendelsohn, N., Beech, D., and M. Maloney,\n              \"XML
      Schema Part 1: Structures Second Edition\", World Wide\n              Web Consortium
      Recommendation REC-xmlschema-1-20041028,\n              October 2004,\n              <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.\n
      \  [W3C.REC-xmlschema-2-20041028]\n              Malhotra, A. and P. Biron,
      \"XML Schema Part 2: Datatypes\n              Second Edition\", World Wide Web
      Consortium\n              Recommendation REC-xmlschema-2-20041028, October 2004,\n
      \             <http://www.w3.org/TR/2004/REC-xmlschema-2-20041028>.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [LLDP-MED]\n              TIA, \"ANSI/TIA-1057
      Link Layer Discovery Protocol - Media\n              Endpoint Discovery\".\n
      \  [LOC-CONVEY]\n              Polk, J., Rosen, B., and J. Peterson, \"Location
      Conveyance\n              for the Session Initiation Protocol\", Work in Progress,\n
      \             July 2010.\n   [RFC0793]  Postel, J., \"Transmission Control Protocol\",
      STD 7,\n              RFC 793, September 1981.\n   [RFC2617]  Franks, J., Hallam-Baker,
      P., Hostetler, J., Lawrence, S.,\n              Leach, P., Luotonen, A., and
      L. Stewart, \"HTTP\n              Authentication: Basic and Digest Access Authentication\",\n
      \             RFC 2617, June 1999.\n   [RFC3023]  Murata, M., St. Laurent, S.,
      and D. Kohn, \"XML Media\n              Types\", RFC 3023, January 2001.\n   [RFC3693]
      \ Cuellar, J., Morris, J., Mulligan, D., Peterson, J., and\n              J.
      Polk, \"Geopriv Requirements\", RFC 3693, February 2004.\n   [RFC3825]  Polk,
      J., Schnizlein, J., and M. Linsner, \"Dynamic Host\n              Configuration
      Protocol Option for Coordinate-based\n              Location Configuration Information\",
      RFC 3825, July 2004.\n   [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter,
      \"Uniform\n              Resource Identifier (URI): Generic Syntax\", STD 66,\n
      \             RFC 3986, January 2005.\n   [RFC4479]  Rosenberg, J., \"A Data
      Model for Presence\", RFC 4479,\n              July 2006.\n   [RFC5226]  Narten,
      T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA Considerations
      Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n   [RFC5687]
      \ Tschofenig, H. and H. Schulzrinne, \"GEOPRIV Layer 7\n              Location
      Configuration Protocol: Problem Statement and\n              Requirements\",
      RFC 5687, March 2010.\n   [RFC5808]  Marshall, R., \"Requirements for a Location-by-Reference\n
      \             Mechanism\", RFC 5808, May 2010.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Appendix A.  HELD Compliance to IETF LCP Requirements\n   This appendix describes
    HELD's compliance to the requirements\n   specified in [RFC5687].\n"
  - contents:
    - "A.1.  L7-1: Identifier Choice\n   \"The L7 LCP MUST be able to carry different
      identifiers or MUST\n   define an identifier that is mandatory to implement.
      \ Regarding the\n   latter aspect, such an identifier is only appropriate if
      it is from\n   the same realm as the one for which the location information
      service\n   maintains identifier to location mapping.\"\n   COMPLY\n   HELD
      uses the IP address of the location request message as the\n   primary source
      of identity for the requesting Device or target.  This\n   identity can be used
      with other contextual network information to\n   provide a physical location
      for the Target for many network\n   deployments.  There may be network deployments
      where an IP address\n   alone is insufficient to identify a Target in a network.
      \ However,\n   any necessary identity extensions for these networks is beyond
      the\n   scope of this document.\n"
    title: 'A.1.  L7-1: Identifier Choice'
  - contents:
    - "A.2.  L7-2: Mobility Support\n   \"The GEOPRIV Layer 7 Location Configuration
      Protocol MUST support a\n   broad range of mobility from Devices that can only
      move between\n   reboots, to Devices that can change attachment points with
      the impact\n   that their IP address is changed, to Devices that do not change
      their\n   IP address while roaming, to Devices that continuously move by being\n
      \  attached to the same network attachment point.\"\n   COMPLY\n   Mobility
      support is inherently a characteristic of the access network\n   technology,
      and HELD is designed to be access network agnostic.\n   Consequently, HELD complies
      with this requirement.  In addition, HELD\n   provides specific support for
      mobile environments by providing an\n   optional responseTime attribute in location
      request messages.\n   Wireless networks often have several different mechanisms
      at their\n   disposal for position determination (e.g., assisted GPS versus\n
      \  determining the location based on the identity of the serving base\n   station),
      each providing different degrees of accuracy and taking\n   different amounts
      of time to yield a result.  The responseTime\n   parameter provides the LIS
      with a criterion which it can use to\n   select a location determination technique.\n"
    title: 'A.2.  L7-2: Mobility Support'
  - contents:
    - "A.3.  L7-3: ASP and Access Network Provider Relationship\n   \"The design of
      the L7 LCP MUST NOT assume a business or trust\n   relationship between the
      Application Service Provider (ASP) and the\n   Access Network Provider.  Requirements
      for resolving a reference to\n   location information are not discussed in this
      document.\"\n   COMPLY\n   HELD describes a location acquisition protocol between
      a Device and a\n   LIS.  In the context of HELD, the LIS is within the Access
      Network.\n   Thus, HELD is independent of the business or trust relationship\n
      \  between the Application Service Provider (ASP) and the Access Network\n   Provider.
      \ Location acquisition using HELD is subject to the\n   restrictions described
      in Section 9.\n"
    title: 'A.3.  L7-3: ASP and Access Network Provider Relationship'
  - contents:
    - "A.4.  L7-4: Layer 2 and Layer 3 Provider Relationship\n   \"The design of the
      GEOPRIV Layer 7 Location Configuration Protocol\n   MUST assume that there is
      a trust and business relationship between\n   the L2 and the L3 provider.  The
      L3 provider operates the LIS and\n   needs to obtain location information from
      the L2 provider since this\n   one is closest to the end host.  If the L2 and
      L3 provider for the\n   same host are different entities, they cooperate for
      the purposes\n   needed to determine end system locations.\"\n   COMPLY\n   HELD
      was specifically designed with this model in mind and readily\n   allows itself
      to chaining requests between operators without a change\n   in protocol being
      required.  HELD is a webservices protocol which can\n   be bound to transports
      other than HTTP, such as BEEP.  Using a\n   protocol such as BEEP offers the
      option of high request throughput\n   over a dedicated connection between an
      L3 provider and an L2 provider\n   without incurring the serial restriction
      imposed by HTTP.  This is\n   less easy to do with protocols that do not decouple
      themselves from\n   the transport.\n"
    title: 'A.4.  L7-4: Layer 2 and Layer 3 Provider Relationship'
  - contents:
    - "A.5.  L7-5: Legacy Device Considerations\n   \"The design of the GEOPRIV Layer
      7 Location Configuration Protocol\n   MUST consider legacy residential NAT Devices
      and Network Termination\n   Equipment (NTE) in an DSL environment that cannot
      be upgraded to\n   support additional protocols, for example to pass additional\n
      \  information through DHCP.\"\n   COMPLY\n   HELD is an application protocol
      and operates on top of IP.  A HELD\n   request from a host behind a residential
      NAT will traverse the NAT\n   acquiring the external address of the home router.
      \ The location\n   provided to the host therefore will be the address of the
      home router\n   in this circumstance.  No changes are required to the home router
      in\n   order to support this function, HELD was designed specifically to\n   address
      this deployment scenario.\n"
    title: 'A.5.  L7-5: Legacy Device Considerations'
  - contents:
    - "A.6.  L7-6: VPN Awareness\n   \"The design of the GEOPRIV Layer 7 Location
      Configuration Protocol\n   MUST assume that at least one end of a VPN is aware
      of the VPN\n   functionality.  In an enterprise scenario, the enterprise side
      will\n   provide the LIS used by the client and can thereby detect whether the\n
      \  LIS request was initiated through a VPN tunnel.\"\n   COMPLY\n   HELD does
      not preclude a LIS on the far end of a VPN tunnel from\n   being aware that
      the client request is occurring over that tunnel.\n   It also does not preclude
      a client Device from accessing a LIS\n   serving the local physical network
      and subsequently using the\n   location information with an application that
      is accessed over a VPN\n   tunnel.\n"
    title: 'A.6.  L7-6: VPN Awareness'
  - contents:
    - "A.7.  L7-7: Network Access Authentication\n   \"The design of the GEOPRIV Layer
      7 Location Configuration Protocol\n   MUST NOT assume prior network access authentication.\"\n
      \  COMPLY\n   HELD makes no assumptions about prior network access authentication.\n
      \  HELD strongly recommends the use of TLS with server-side certificates\n   for
      communication between the endpoint and the LIS.  There is no\n   requirement
      for the endpoint to authenticate with the LIS.\n"
    title: 'A.7.  L7-7: Network Access Authentication'
  - contents:
    - "A.8.  L7-8: Network Topology Unawareness\n   \"The design of the GEOPRIV Layer
      7 Location Configuration Protocol\n   MUST NOT assume end systems being aware
      of the access network\n   topology.  End systems are, however, able to determine
      their public\n   IP address(es) via mechanisms such as STUN or NSIS NATFW NSLP.\"\n
      \  COMPLY\n   HELD makes no assumption about the network topology.  HELD doesn't\n
      \  require that the Device know its external IP address, except where\n   that
      is required for discovery of the LIS.\n"
    title: 'A.8.  L7-8: Network Topology Unawareness'
  - contents:
    - "A.9.  L7-9: Discovery Mechanism\n   \"The L7 LCP MUST define a single mandatory
      to implement discovery\n   mechanism.\"\n   COMPLY\n   HELD uses the discovery
      mechanism in [RFC5986].\n"
    title: 'A.9.  L7-9: Discovery Mechanism'
  - contents:
    - "A.10.  L7-10: PIDF-LO Creation\n   \"When a LIS creates a PIDF-LO per RFC 4119
      then it MUST put the\n   <geopriv> element into the <device> element of the
      presence document\n   (see RFC 4479).  This ensures that the resulting PIDF-LO
      document,\n   which is subsequently distributed to other entities, conforms
      to the\n   rules outlined in [now RFC 5941].\"\n   COMPLY\n   HELD protocol
      overview (Section 4) describes the requirements on the\n   LIS in creating the
      PIDF-LO and prescribes that the PIDF-LO generated\n   by the LIS MUST conform
      to [RFC5491].\n"
    title: 'A.10.  L7-10: PIDF-LO Creation'
  title: Appendix A.  HELD Compliance to IETF LCP Requirements
- contents:
  - "Author's Address\n   Mary Barnes (editor)\n   Polycom\n   EMail: mary.ietf.barnes@gmail.com\n"
  title: Author's Address
