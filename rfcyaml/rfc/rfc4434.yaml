- contents:
  - "                  The AES-XCBC-PRF-128 Algorithm for\n                the Internet
    Key Exchange Protocol (IKE)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Some implementations of IP Security (IPsec) may want to use a\n
    \  pseudo-random function derived from the Advanced Encryption Standard\n   (AES).
    \ This document describes such an algorithm, called\n   AES-XCBC-PRF-128.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   [AES-XCBC-MAC] describes a method to use the Advanced Encryption\n
    \  Standard (AES) as a message authentication code (MAC) whose output is\n   96
    bits long.  While 96 bits is considered appropriate for a MAC, it\n   is too short
    to be useful as a long-lived pseudo-random function\n   (PRF) in either IKE version
    1 or version 2.  Both versions of IKE use\n   the PRF to create keys in a fashion
    that is dependent on the length\n   of the output of the PRF.  Using a PRF that
    has 96 bits of output\n   creates keys that are easier to attack with brute force
    than a PRF\n   that uses 128 bits of output.\n   Fortunately, there is a very
    simple method to use much of\n   [AES-XCBC-MAC] as a PRF whose output is 128 bits:
    omit the step that\n   truncates the 128-bit value to 96 bits.\n"
  - contents:
    - "1.1.  Differences from RFC 3664\n   This document specifies the same algorithm
      as RFC 3664 except that\n   the restriction that keys be exactly 128 bits from
      [AES-XCBC-MAC] is\n   removed.  Implementations of RFC 3664 will have the same\n
      \  bits-on-the-wire results as this algorithm; the only difference is\n   that
      keys that were not equal in length to 128 bits will no longer be\n   rejected
      but instead will be made 128 bits.\n   IKEv2 [IKEv2] uses PRFs for multiple
      purposes, most notably for\n   generating keying material and authentication
      of the IKE_SA.  The\n   IKEv2 specification differentiates between PRFs with
      fixed key sizes\n   and those with variable key sizes.\n   When the PRF described
      in this document is used with IKEv2, the PRF\n   is considered fixed-length
      for generating keying material but\n   variable-length for authentication.  That
      is, when generating keying\n   material, \"half the bits must come from Ni and
      half from Nr, taking\n   the first bits of each\" as described in IKEv2, section
      2.14; but for\n   authenticating with shared secrets (IKEv2, section 2.16),
      the shared\n   secret does not have to be 128 bits long.  This somewhat tortured\n
      \  logic allows IKEv2 implementations that use the fixed-length-key\n   semantics
      from RFC 3664 to interoperate with implementations that use\n   the variable-length-key
      semantics of this document.\n"
    title: 1.1.  Differences from RFC 3664
  title: 1.  Introduction
- contents:
  - "2.  The AES-XCBC-PRF-128 Algorithm\n   The AES-XCBC-PRF-128 algorithm is identical
    to [AES-XCBC-MAC] except\n   for two changes.  First, the key length restriction
    of exactly 128\n   bits in [AES-XCBC-MAC] is eliminated, as described below; this
    brings\n   AES-XCBC-PRF-128 in alignment with HMAC-SHA1 and HMAC-MD5 when they\n
    \  are used as PRFs in IKE.  Second, the truncation step in section 4.3\n   of
    [AES-XCBC-MAC] is *not* performed; that is, there is no processing\n   after section
    4.2 of [AES-XCBC-MAC].\n   The key for AES-XCBC-PRF-128 is created as follows:\n
    \  o  If the key is exactly 128 bits long, use it as-is.\n   o  If the key has
    fewer than 128 bits, lengthen it to exactly 128\n      bits by padding it on the
    right with zero bits.\n   o  If the key is 129 bits or longer, shorten it to exactly
    128 bits\n      by performing the steps in AES-XCBC-PRF-128 (that is, the\n      algorithm
    described in this document).  In that re-application of\n      this algorithm,
    the key is 128 zero bits; the message is the\n      too-long current key.\n"
  - contents:
    - "2.1.  Test Vectors\n   Test Case AES-XCBC-PRF-128 with 20-byte input\n   Key
      \       : 000102030405060708090a0b0c0d0e0f\n   Key Length : 16\n   Message    :
      000102030405060708090a0b0c0d0e0f10111213\n   PRF Output : 47f51b4564966215b8985c63055ed308\n
      \  Test Case AES-XCBC-PRF-128 with 20-byte input\n   Key        : 00010203040506070809\n
      \  Key Length : 10\n   Message    : 000102030405060708090a0b0c0d0e0f10111213\n
      \  PRF Output : 0fa087af7d866e7653434e602fdde835\n   Test Case AES-XCBC-PRF-128
      with 20-byte input\n   Key        : 000102030405060708090a0b0c0d0e0fedcb\n   Key
      Length : 18\n   Message    : 000102030405060708090a0b0c0d0e0f10111213\n   PRF
      Output : 8cd3c93ae598a9803006ffb67c40e9e4\n"
    title: 2.1.  Test Vectors
  title: 2.  The AES-XCBC-PRF-128 Algorithm
- contents:
  - "3.  Security Considerations\n   The security provided by AES-XCBC-MAC-PRF is
    based on the strengths\n   of AES and HMAC.  At the time of this writing, there
    are no known\n   practical cryptographic attacks against AES, AES-XCBC-MAC-PRF,
    or\n   HMACs.\n   As is true with any cryptographic algorithm, part of its strength\n
    \  lies in the security of the key management mechanism, the strength of\n   the
    associated secret key, and the correctness of the implementations\n   in all the
    participating systems.  [AES-XCBC-MAC] contains test\n   vectors to assist in
    verifying the correctness of the\n   AES-XCBC-MAC-PRF code.  The test vectors
    all show the full MAC value\n   before it is truncated to 96 bits.  The PRF makes
    use of the full MAC\n   value, not the truncated one.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  IANA Considerations\n   Any reference to RFC 3664 needs to be updated to
    refer to this\n   document when it is published.\n"
  title: 4.  IANA Considerations
- contents:
  - "5.  Normative References\n   [AES-XCBC-MAC] Frankel, S. and H. Herbert, \"The
    AES-XCBC-MAC-96\n                  Algorithm and Its Use With IPsec\", RFC 3566,
    September\n                  2003.\n   [IKEv2]        Kaufman, C., \"Internet
    Key Exchange (IKEv2) Protocol\",\n                  RFC 4306, December 2005.\n"
  title: 5.  Normative References
- contents:
  - "Appendix A.  Acknowledgements\n   Pasi Eronen suggested the easy method for shortening
    too-long keys.\n   Saroop Mathur and John Black provided and verified the test
    vectors.\n"
  title: Appendix A.  Acknowledgements
- contents:
  - "Author's Address\n   Paul Hoffman\n   VPN Consortium\n   EMail: paul.hoffman@vpnc.org\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
