- contents:
  - '                 Registration Revocation in Mobile IPv4

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines a Mobile IPv4 Registration Revocation mechanism\n
    \  whereby a mobility agent involved in providing Mobile IP services to\n   a
    mobile node can notify the other mobility agent providing Mobile IP\n   services
    to the same mobile node of the termination of this\n   registration.  The mechanism
    is also usable by a home agent to notify\n   a co-located mobile node of the termination
    of its binding as well.\n   Moreover, the mechanism provides for this notification
    to be\n   acknowledged.  A signaling mechanism already defined by the Mobile\n
    \  IPv4 protocol is leveraged as a way to inform a mobile node of the\n   revocation
    of its binding.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction and Applicability . . . . . . . . . .
    . . . . . .  2\n   2.  Terminology. . . . . . . . . . . . . . . . . . . . . .
    . . . .  4\n   3.  Registration Revocation Extensions and Messages. . . . . .
    . .  4\n       3.1.  Advertising Registration Revocation Support. . . . . . .
    \ 5\n       3.2.  Revocation Support Extension . . . . . . . . . . . . . .  6\n
    \      3.3.  Registration Revocation Message. . . . . . . . . . . . .  8\n       3.4.
    \ Registration Revocation Acknowledgment Message . . . . . 11\n       3.5.  Replay
    Protection. . . . . . . . . . . . . . . . . . . . 14\n   4.  Registration Revocation
    Overview . . . . . . . . . . . . . . . 15\n       4.1.  Mobile Node Notification
    . . . . . . . . . . . . . . . . 15\n       4.2.  Registration Revocation Mechanism
    - Agent Notification . 17\n             4.2.1.  Negotiating Revocation Support
    . . . . . . . . . 17\n             4.2.2.  Home Domain Revoking a Registration.
    . . . . . . 19\n                     4.2.2.1.  Home Agent Responsibilities. .
    . . . . 19\n                     4.2.2.2.  Foreign Agent Responsibilities . .
    . . 20\n                     4.2.2.3.  'Direct' Co-located Mobile Node\n                               Responsibilities
    . . . . . . . . . . . 20\n             4.2.3.  Foreign Domain Revoking a Registration
    . . . . . 21\n                     4.2.3.1.  Foreign Agent Responsibilities .
    . . . 21\n                     4.2.3.2.  Home Agent Responsibilities. . . . .
    . 22\n             4.2.4.  Mobile Node Deregistering a Registration . . . . 23\n
    \      4.3.  Mobile IP Registration Bits in the Revocation Process. . 23\n             4.3.1.
    \ The 'R' Bit in Use . . . . . . . . . . . . . . . 23\n             4.3.2.  The
    'D' Bit in Use (co-located mobile nodes) . . 23\n   5.  Error Codes. . . . . .
    . . . . . . . . . . . . . . . . . . . . 24\n   6.  Security Considerations. .
    . . . . . . . . . . . . . . . . . . 24\n       6.1.  Agent Advertisements . .
    . . . . . . . . . . . . . . . . 24\n       6.2.  Revocation Messages. . . . .
    . . . . . . . . . . . . . . 25\n   7.  IANA Considerations. . . . . . . . . .
    . . . . . . . . . . . . 27\n       7.1.  New Message Types. . . . . . . . . .
    . . . . . . . . . . 27\n       7.2.  New Extension Values . . . . . . . . . .
    . . . . . . . . 27\n       7.3.  New Error Codes. . . . . . . . . . . . . . .
    . . . . . . 27\n   8.  References . . . . . . . . . . . . . . . . . . . . . .
    . . . . 27\n       8.1.  Normative (Numerical References) . . . . . . . . . .
    . . 27\n       8.2.  Informational (Alphabetical References). . . . . . . . .
    28\n   Appendix A  An Example of the New Messages in Use. . . . . . . . . 29\n
    \              A.1.  The Registration Phase . . . . . . . . . . . . . 29\n               A.2.
    \ The Revocation Phase . . . . . . . . . . . . . . 29\n   Appendix B  Disparate
    Address, and Receiver Considerations . . . . 30\n   Acknowledgments. . . . . .
    . . . . . . . . . . . . . . . . . . . . 32\n   Authors' Addresses . . . . . .
    . . . . . . . . . . . . . . . . . . 32\n   Full Copyright Statement . . . . .
    . . . . . . . . . . . . . . . . 33\n"
  title: Table of Contents
- contents:
  - "1.  Introduction and Applicability\n   Mobile IP [1] defines registration of
    a mobile node's location to\n   provide connectivity between the mobile node and
    its home domain,\n   facilitating communication between mobile nodes and any correspondent\n
    \  node.  At any time, either the home or foreign agent may wish to\n   cease
    servicing a mobile node, or for administrative reasons may no\n   longer be required
    to service a mobile node.\n   This document defines a general registration revocation
    mechanism for\n   Mobile IPv4, whereby a mobility agent can notify another mobility\n
    \  agent (or a 'direct' co-located mobile node) of the termination of\n   mobility
    bindings.  A mobility agent that receives a revocation\n   notification no longer
    has to provide services to the mobile node\n   whose registration has been revoked.
    \ A signaling mechanism already\n   defined by the Mobile IPv4 protocol [1] is
    leveraged as a way to\n   inform a mobile node of the revocation of its binding.\n
    \  The registration revocation protocol provides the following\n   advantages:\n
    \  1. Timely release of Mobile IP resources.  Resources being consumed\n      to
    provide Mobile IP services for a mobile node that has stopped\n      receiving
    Mobile IP services by one agent, can be reclaimed by the\n      other agent in
    a more timely fashion than if it had to wait for\n      the binding to expire.
    \ This also applies to the case in which a\n      mobile node roams away from
    a foreign agent to another foreign\n      agent.  Notification to the previous
    foreign agent would allow it\n      to reclaim resources.\n   2. Accurate accounting.
    \ This has a favorable impact on resolving\n      accounting issues with respect
    to the length of mobility bindings\n      in both domains, as the actual end of
    the registration is relayed.\n   3. Earlier adoption of domain policy changes
    with regards to services\n      offered/required of a Mobile IP binding.  For
    example, the home\n      domain may now require reverse tunnels [C], yet there
    are existing\n      bindings that do not use them.  Without a revocation mechanism,\n
    \     new services can only be put in place or removed as bindings are\n      re-registered.\n
    \  4. Timely notification to a mobile node that it is no longer\n      receiving
    mobility services, thereby significantly shortening any\n      'black-hole' periods
    to facilitate a more robust recovery.\n   The revocation protocol is an active,
    yet unobtrusive mechanism\n   allowing more timely communication between the three
    Mobile IP\n   entities in the various administrative domains.  Since many mobile\n
    \  nodes may not understand the concept of revocation, care has been\n   taken
    to ensure backwards compatibility with [1].\n   The registration revocation protocol
    does not replace the methods\n   described in [1] for Mobile IP deregistration,
    as the purpose of\n   these mechanisms is fundamentally different.  Deregistration
    messages\n   are used by a mobile node to inform its home agent that it has e.g.,\n
    \  roamed back to its home subnet, whereas revocation messages are used\n   between
    mobility agents to signal the termination of mobility\n   bindings.  More specifically,
    the revocation message defined here is\n   NOT for use by 'direct' co-located
    mobile nodes that are terminating\n   their registration as deregistration messages
    are already sufficient\n   for this purpose.  A 'direct' co-located mobile node,
    however, may\n   wish to process revocation messages as it is a useful mechanism
    to\n   trigger the re-negotiation of required services from the home domain.\n"
  title: 1.  Introduction and Applicability
- contents:
  - "2.  Terminology\n   It is assumed that the reader is familiar with the terminology
    used\n   in [1].  In addition, the following terms are defined:\n   'Direct' Co-located
    Mobile Node\n      A mobile node registering directly with its home agent, with
    the\n      'D' bit set in its registration request, and NOT registering\n      through
    a foreign agent.\n   Mobile IP Resources\n      Various functional elements allocated
    by a mobility agent to\n      support a Mobile IP binding, e.g., memory.\n   Mobile
    IP Services\n      Various responsibilities of a mobility agent in supporting
    a\n      mobile node as defined in [1], e.g., encapsulation of packets\n      addressed
    to a mobile node by a home agent, decapsulation of these\n      packets by a foreign
    agent for delivery to a mobile node, etc.\n   Mobility Agent\n      The home agent
    or foreign agent as specified in [1].\n   Revocation\n      Premature termination
    of a mobility binding.\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in BCP
    14, RFC 2119 [3].\n"
  title: 2.  Terminology
- contents:
  - "3.  Registration Revocation Extensions and Messages\n   Registration revocation
    in Mobile IPv4 is accomplished via the\n   following:\n   -  Advertising Registration
    Revocation Support (Section 3.1.):\n      o  A flag in the Agent Advertisement
    extension has been reserved\n         for agents to advertise their support of
    revocation messages.\n   -  Revocation Support Extension (Section 3.2.):\n      o
    \ This extension is appended to a registration request or\n         registration
    reply by a mobility agent to indicate its support\n         of registration revocation.\n
    \     o  This extension is appended to a registration request by a\n         'direct'
    co-located mobile node to indicate its understanding\n         of revocation messages.\n
    \  -  Registration Revocation Message (Section 3.3.):\n      o  A message sent
    by a mobility agent to inform another mobility\n         agent, or a 'direct'
    co-located mobile node, that it has\n         revoked the binding of a mobile
    node.\n   -  Registration Revocation Acknowledgment Message (Section 3.4.):\n
    \     o  A message sent by mobility agents or 'direct' co-located mobile\n         nodes
    to indicate the receipt of a revocation message.\n   Security considerations related
    to the above messages and extensions\n   are covered in Section 6.\n"
  - contents:
    - "3.1.  Advertising Registration Revocation Support\n   Mobility agents can advertise
      their support of registration\n   revocation with a modification to the Mobility
      Agent Advertisement\n   extension described in [1].  An 'X' bit is introduced
      to indicate an\n   agent's support for Registration Revocation.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |    Registration Lifetime      |R|B|H|F|M|G|r|T|U|X| reserved  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                  zero or more Care-of Addresses               |\n   |                              ...
      \                             |\n      X   The mobility agent supports Registration
      Revocation\n   A foreign agent that sets the 'X' bit in an agent advertisement\n
      \  extension MUST support registration revocation messages on that link,\n   specifically
      the Revocation Support Extension (section 3.2.),\n   Revocation Messages (section
      3.3.), and Revocation Acknowledgment\n   (section 3.4.).  It is not required
      that all agents advertising on\n   the same link support registration revocation,
      nor is it required\n   that an agent advertise this support on all of its links.\n
      \  Note that using this information, a mobile node can select a foreign\n   agent
      that supports Registration Revocation.  Should a mobile node\n   not understand
      this bit, it simply ignores it as per [1].\n   As a bit in the agent advertisement,
      use of the 'X' bit has no impact\n   on other messages, such as e.g., Challenge-Response
      [2].\n"
    title: 3.1.  Advertising Registration Revocation Support
  - contents:
    - "3.2.  Revocation Support Extension\n   The Mobile IP revocation support extension
      indicates support of\n   registration revocation, and so MUST be attached to
      a registration\n   request or registration reply by any entity that wants to
      receive\n   revocation messages.  Normally, this is either a foreign agent,
      or a\n   home agent.  However a 'direct' co-located mobile node MAY also\n   include
      a revocation support extension in its registration request.\n   A mobile node
      which is not co-located MUST NOT include a Revocation\n   Support Extension
      in its registration.\n   A foreign agent advertising the 'X' bit on the link
      on which the\n   registration request was received, and that has a security\n
      \  relationship with the home agent identified in the same registration\n   request,
      MUST attach a revocation support extension to the forwarded\n   registration
      request.  A home agent that receives a registration\n   request that does not
      contain a revocation extension SHOULD NOT\n   include a revocation support extension
      in the associated registration\n   reply.\n   The format of the revocation support
      extension is based on the Type-\n   Length-Value Extension Format given in [1]
      and is defined as follows:\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n
      \  |     Type      |     Length    |I|        Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n
      \  |                            Timestamp                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n
      \     Type     137\n      Length\n               Length (in bytes, currently
      6).  Does NOT include Type\n               and Length fields (in accordance
      with section 1.9. of\n               [1]).  This allows for a longer extension
      length should\n               more bits be required in the future.\n      Timestamp\n
      \              Current 4-byte timestamp of the mobility agent or\n               'direct'
      co-located mobile node.  This is used to\n               identify the ordering
      of registrations as they are\n               forwarded, how they relate to the
      sending of any\n               revocation messages, and to identify the approximate\n
      \              offset between the clocks of the mobility agents\n               providing
      support for this binding, or between a 'direct'\n               co-located mobile
      node and its home agent.\n      'I' Bit\n               This bit is set to '1'
      by a mobility agent to indicate it\n               supports the use of the 'I'
      bit in revocation messages\n               (section 3.3.)\n               When
      sent by a foreign agent in a registration request:\n               If set to
      1, the FA is willing to have the home agent use\n               the 'I' bit
      in the revocation process to determine\n               whether the mobile node
      should be informed of the\n               revocation or not.\n               If
      set to 0, indicates to the home agent that the foreign\n               agent
      will follow its own policy with regards to\n               informing the mobile
      node in the event of a revocation.\n               When sent by a home agent
      in response to a revocation\n               extension in which the 'I' bit was
      set to '1':\n               If set to 1, the home agent agrees to use the 'I'
      bit in\n               the revocation process to indicate to the foreign agent\n
      \              whether or not the mobile node should be informed.\n               If
      set to 0, the home agent will not use the 'I' bit in\n               the revocation
      process, thereby yielding to the foreign\n               agent's default behavior
      with regard to informing the\n               mobile node.\n               To
      preserve the robustness of the protocol, the\n               recommended default
      behavior for a foreign agent is to\n               inform the mobile node of
      its revocation as described in\n               Section 4.1.\n      Reserved\n
      \              Reserved for future use.  MUST be set to 0 on sending,\n               MUST
      be ignored on receiving.\n   When appearing in a registration request, or registration
      reply, the\n   Mobile IP revocation support extension MUST be protected either
      by a\n   foreign-home authentication extension, a mobile-home authentication\n
      \  extension, or any other equivalent mechanism [1], e.g., via AAA [A],\n   [B],
      or perhaps IPsec.  If the extension appearing in either of these\n   registration
      messages is NOT protected, the appropriate action as\n   described by [1] (Sections
      3.8.2.1. and Sections 3.7.3.1.) MUST be\n   taken.\n   Support of the 'I' bit
      is OPTIONAL.  If a mobility agent does not\n   support the specified functionality,
      it MUST set the 'I' bit to zero.\n   Note that the home agent setting the 'I'
      bit to '1' in response to a\n   revocation extension from the foreign agent
      in which the 'I' bit was\n   set to '0' is undefined, and SHOULD NOT be done.\n
      \  'I' bit support has been negotiated when both agents have set the 'I'\n   bit
      to '1' in their revocation support extensions.\n   It is important to note that
      this extension is skippable (i.e., if\n   the receiving mobility agent does
      not understand this extension, it\n   MUST skip it, and continue processing
      the remainder of the\n   registration request).\n"
    title: 3.2.  Revocation Support Extension
  - contents:
    - "3.3.  Registration Revocation Messages\n   A revocation message is sent by
      a mobility agent to inform another\n   mobility agent, or a 'direct' co-located
      mobile node, that it is\n   revoking the binding of a mobile node.\n   IP Fields:\n
      \     Source Address       In the case of the home agent issuing the\n                           registration
      revocation, the address\n                           registered with the care-of
      address as that\n                           of the home agent (that is the address\n
      \                          identified as the home address of this\n                           binding).\n
      \                          In the case of the foreign agent issuing the\n                           registration
      revocation, the address\n                           registered with the home
      agent as the care-of\n                           address.\n      Destination
      Address  In the case of the home agent issuing the\n                           registration
      revocation, the source address\n                           of the last approved
      registration request for\n                           this binding, i.e., the
      destination address\n                           of the last registration reply
      indicating\n                           success for this binding.\n                           In
      the case of the foreign agent issuing the\n                           registration
      revocation, the address\n                           registered as that of the
      home agent by the\n                           mobile node whose registration
      is being\n                           revoked.\n   UDP Fields:\n      Source
      Port          variable\n      Destination Port     434\n   The UDP header is
      followed by the Mobile IP fields shown below:\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |   Reserved    |A|I|          Reserved         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                          Home Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                       Home Domain Address                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                     Foreign Domain Address                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                      Revocation Identifier                    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |   Extensions...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   |   Authenticator...\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-\n      Type     7\n      Reserved MUST be sent
      as 0, ignored when received.\n      A        Agent bit ('direction' bit).\n
      \              This bit identifies the role of the agent sending the\n               revocation,
      that is the 'direction' of the revocation\n               message.  This is
      useful for detecting reflection\n               attacks, particularly when symmetric
      keying is being\n               used.\n               Set to '0' if the revoking
      agent is servicing this\n               binding as a foreign agent.\n               Set
      to '1' if the revoking agent is servicing this\n               binding as a
      home agent.\n      I        Inform bit.\n               This bit MUST NOT be
      set to '1' unless 'I' bit support\n               was negotiated in the revocation
      extension messages\n               passed in the registration process, otherwise
      the results\n               can be unpredictable.\n               When sent
      by the home agent to a foreign agent:\n               Set to '0' to request
      that the mobile node SHOULD NOT be\n               informed of the revocation,
      or because the use of the 'I'\n               bit was not agreed upon.\n               Set
      to '1' to request that the mobile node be informed of\n               the revocation.\n
      \              When sending a revocation message to a 'direct' co-\n               located
      mobile node, this bit is essentially irrelevant,\n               but SHOULD
      be set to '1'.\n               When sent by the foreign agent:\n               Set
      to '0' to indicate that the foreign agent is using\n               foreign domain
      policy as to whether or not the mobile\n               node should be informed
      of the revocation, or because 'I'\n               bit support was not agreed
      upon.\n               Set to '1' to ask the home agent if the mobile node\n
      \              should be informed of the revocation.\n      Reserved\n               MUST
      be sent as 0, ignored when received.\n      Home Address\n               The
      home IP address of the mobile node whose registration\n               is being
      revoked.\n      Foreign Domain Address\n               The relevant IP address
      in the foreign domain to identify\n               which binding is being revoked.
      \ This is one of the\n               following: (i) the foreign agent's IP address,
      or (ii)\n               the co-located care-of address.\n      Home Domain Address\n
      \              The IP address of the home agent to identify which\n               binding
      is being revoked.\n      Revocation Identifier\n               Protects against
      replay attacks.  The revoking agent MUST\n               insert its current
      4-byte timestamp running off the same\n               clock as it is using to
      fill in the timestamp in its\n               revocation extensions.  See section
      3.5.\n   A registration revocation message MUST be protected by either a valid\n
      \  authenticator as specified in [1], namely a home-foreign\n   authenticator,
      if the communication is between home and foreign\n   agents, or a mobile-home
      authenticator if the communication is being\n   sent from a home agent to a
      'direct' co-located mobile node, or\n   another security mechanism at least
      as secure, and agreed upon by the\n   home and foreign domains, e.g., IPsec.
      \ If any agent, or 'direct'\n   co-located mobile node, receives a registration
      revocation message\n   that does not contain a valid authenticator, and is not
      adequately\n   protected, the revocation message MUST be ignored, and silently\n
      \  discarded.\n   A revocation message MUST NOT be sent for any registration
      that has\n   expired, and MAY only be sent prior to the expiration of a mobile\n
      \  node's registration.  Note, however, due to the nature of datagram\n   delivery,
      this does not guarantee these messages will arrive before\n   the natural expiration
      of any binding.\n   An agent MUST NOT send more than one revocation message
      or\n   registration message per second for the same binding.  Note that this\n
      \  updates [1] by including revocation messages in the rate limit\n   specified
      in [1], i.e., that an agent MUST NOT send more than one\n   registration message
      per second for the same binding.\n   An example of the use of revocation messages
      is given in Appendix A.\n"
    title: 3.3.  Registration Revocation Messages
  - contents:
    - "3.4.  Registration Revocation Acknowledgment Message\n   A revocation acknowledgment
      message is sent by mobility agents or\n   'direct' co-located mobile nodes to
      indicate the successful receipt\n   of a revocation message.\n   IP fields:\n
      \     Source Address       Copied from the destination address of the\n                           received
      registration revocation message for\n                           which this registration
      revocation\n                           acknowledgment message is being generated.\n
      \     Destination Address  Copied from the source address of the\n                           received
      registration revocation message for\n                           which this registration
      revocation\n                           acknowledgment message is being generated.\n
      \  UDP fields:\n      Source Port          434 (copied from the destination
      port of the\n                           revocation message).\n      Destination
      Port     Copied from the source port of the revocation\n                           message.\n
      \  The UDP header is followed by the Mobile IP fields shown below:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |     Reserved  |I|         Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                          Home Address                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                     Revocation Identifier                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  | Extensions...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n   | Authenticator...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-\n
      \     Type     15\n      Reserved\n               MUST be sent as 0, ignored
      when received.\n      I        Inform bit.\n               The 'I' bit MUST
      NOT be set to '1' in the revocation\n               acknowledgment messages
      unless it was set to '1' in the\n               revocation message.  If an agent
      receives a revocation\n               acknowledgment message in which the 'I'
      bit is set to\n               '1', but for which the revocation message being\n
      \              acknowledged had the 'I' bit set to '0', the 'I' bit in\n               the
      revocation acknowledgment message MUST be ignored.\n               When sent
      by the home agent:\n               Set to '1' by the home agent to request the
      foreign agent\n               inform the mobile node of the revocation.\n               Set
      to '0' by the home agent to request the foreign agent\n               not inform
      the mobile node of the revocation.\n               When sent by a foreign agent:\n
      \              Set to '1' to indicate to the home agent that the mobile\n               node
      was informed.\n               Set to '0' to indicate to the home agent that
      the foreign\n               agent used local policy to determine whether or
      not the\n               mobile node should be informed.  For purposes of protocol\n
      \              robustness, it is highly recommended that such a default\n               be
      set for the foreign agent to inform the mobile node of\n               the revocation.\n
      \     Reserved\n               MUST be sent as 0, ignored when received.\n      Home
      Address\n               The home address copied from the revocation message
      for\n               which this acknowledgment is being sent.\n      Revocation
      Identifier\n               Copied from the Revocation Identifier of the revocation\n
      \              message for which this acknowledgment is being sent.  See\n               Section
      3.5.\n   A registration revocation acknowledgment message MUST be sent in\n
      \  response to a valid and authenticated registration revocation\n   message.\n
      \  A registration acknowledgment message MUST be protected by either a\n   valid
      authenticator as specified in [1], namely a home-foreign\n   authenticator if
      the communication is between home and foreign\n   agents, or a mobile-home authenticator
      if the communication is\n   between home agent and 'direct' co-located mobile
      node, or another\n   security mechanism at least as secure and agreed upon by
      the home and\n   foreign domains, e.g., IPsec.\n   An example of the use of
      Revocation Acknowledgment Messages is given\n   in Appendix A.\n"
    title: 3.4.  Registration Revocation Acknowledgment Message
  - contents:
    - "3.5.  Replay Protection\n   As registration revocation messages are designed
      to terminate service\n   for a mobile node, or multiple mobile nodes simultaneously,
      replay\n   protection is crucial to prevent denial of service attacks by\n   \"malicious
      repeaters\" - those who store datagrams with the intent of\n   replaying them
      at a later time, or by \"malicious reflectors\" - those\n   who reflect packets
      back at their original source (both a form of\n   \"active\" attack).  See Section
      6. for a discussion of these security\n   considerations.\n   All Revocation
      Messages and Revocation Acknowledgment Messages MUST\n   be authenticated as
      well be replay-protected.  The order in which\n   they are done, however, is
      up to implementation.\n   Replay protection is handled with a simple timestamp
      mechanism, using\n   a single 32-bit identifier field in the registration revocation\n
      \  message, in conjunction with the home address field, to associate any\n   revocation
      acknowledgment messages with its revocation messages.  To\n   do this:\n   -
      \ The revoking agent sets the 'A' bit to its agent-type, and the\n      Revocation
      Identifier field in the registration revocation message\n      to a valid 32-bit
      timestamp from the same clock it is using to set\n      the timestamp field
      of its revocation extensions included in\n      registration messages.\n   -
      \ Upon receipt of an authenticated revocation message, the receiving\n      agent
      (or 'direct' co-located mobile node) MUST check the value of\n      the 'A'
      bit, and Revocation Identifier to make sure this\n      revocation message is
      not a replay of an old revocation message\n      received from the same agent.
      \ The receiving agent MUST also check\n      that the message is not a reflection
      of a revocation message it\n      sent in relation to the identified binding.
      \ If the 'A' bit and\n      Identifier field imply this packet is a replay,
      the revocation\n      message MUST be silently discarded.\n   -  When building
      a revocation acknowledgment message, the\n      acknowledging agent (or 'direct'
      co-located mobile node) copies\n      the values of the Home Address and Revocation
      Identifier fields\n      from the revocation message into the  Home Address
      and the\n      Revocation Identifier of the revocation acknowledgment message.\n
      \     This is so the revoking agent can match this revocation\n      acknowledgment
      to its corresponding revocation message.\n   -  Upon receiving a valid revocation
      acknowledgment, the revoking\n      agent MUST check the Home Address and Identifier
      fields to make\n      sure they match those fields from a corresponding revocation\n
      \     message it sent to the acknowledging agent.  If not, this\n      revocation
      acknowledgment message MUST be silently discarded.\n   Note that since the Identifier
      in an incoming revocation message is a\n   32-bit timestamp, it is possible
      for an agent to check the validity\n   of the Identifier fields without having
      to remember all identifiers\n   sent by that corresponding agent.\n   Note:
      as it is possible for a mobile node to register at different\n   times with
      different home agents, and at different times with\n   different foreign agents,
      it is crucial that it not be required that\n   the Identifier fields be unique
      in messages from different agents as\n   there is no guarantee that clocks on
      different agents will be\n   synchronized.  For example, if a mobile node has
      simultaneous\n   bindings with multiple foreign agents, and if revocation messages
      are\n   received by more than one such foreign agent \"simultaneously\", it
      is\n   possible the revocation message from one of these foreign agents may\n
      \  contain Identifier fields that happen to match those of any or all\n   the
      other foreign agents.  This MUST NOT result in any of these\n   revocation messages
      being ignored.\n"
    title: 3.5.  Replay Protection
  title: 3.  Registration Revocation Extensions and Messages
- contents:
  - "4.  Registration Revocation Overview\n   Registration Revocation consists of
    two distinct pieces: a signaling\n   mechanism between tunnel endpoints, and a
    signaling mechanism between\n   foreign agent and mobile node.  A 'direct' co-located
    mobile node MAY\n   implement revocation extensions and revocation acknowledgment
    in\n   order to receive and respond to revocation messages from its home\n   agent,
    however, a 'direct' co-located mobile node MUST NOT send a\n   revocation message
    as de-registration messages defined in [1] are\n   sufficient for this purpose.\n
    \  For further discussion on security issues related to registration\n   revocation,
    refer to Section 6.\n"
  - contents:
    - "4.1.  Mobile Node Notification\n   A mechanism which provides a foreign agent
      a way to actively notify a\n   mobile node that its binding has been reset already
      exists in [1],\n   though it has been overlooked for this purpose.\n   A brief
      overview of the mechanics of the sequence number in agent\n   advertisement
      from [1] is given so that the mechanism by which the\n   foreign agent 'implies'
      to the mobile node that its binding is no\n   longer active is clearly understood.\n
      \  When a foreign agent begins sending agent advertisements, it starts\n   with
      a sequence number of 0, and [monotonically] increments the\n   sequence number
      with each subsequent agent advertisement.  In order\n   for a mobile node to
      be able to distinguish between a foreign agent\n   that has simply exhausted
      the sequence number space from one which\n   has been reset, when the agent
      increments the sequence number counter\n   past its maximum value, it sets the
      sequence number to 256 instead of\n   rolling to 0 [1].  In this way, a mobile
      node would have to miss, at\n   that time, 256 advertisements in a row to mistake
      a reset as a roll-\n   over.  Moreover, the lifetimes contained within an agent\n
      \  advertisement should be set in such a way that when a mobile node\n   believes
      it has missed 3 beacons, the entry for this foreign agent\n   should time out,
      and if the mobile node is registered there, it\n   should send an agent solicitation
      [1].  If, however, an agent is\n   somehow reset, it will begin advertising
      with a sequence number of 0,\n   and the mobile node can presume this foreign
      agent has lost its\n   binding, and the mobile node SHOULD re-register to make
      sure it is\n   still obtaining Mobile IP services through this foreign agent.\n
      \  Leveraging this mechanism, a foreign agent may consciously notify all\n   mobile
      nodes currently bound to it that it has \"reset\" all of their\n   bindings,
      even if the agent itself has not been reset, by simply\n   [re]setting the sequence
      number of the next agent advertisement to 0.\n   Moreover, a foreign agent may
      inform all mobile nodes currently bound\n   to it that they should re-register
      with a different foreign agent by\n   simultaneously setting the 'B' bit in
      the advertisement to 1,\n   indicating this foreign agent is busy and is not
      accepting new\n   registrations [1].  In these situations, any mobile node in\n
      \  compliance with [1] will presume this foreign agent has lost its\n   binding,
      and must re-register if they wish to re-establish Mobile IP\n   functionality
      with their home subnet.\n   To indicate to any registered mobile node that its
      binding no longer\n   exists, the foreign agent with which the mobile node is
      registered\n   may unicast an agent advertisement with the sequence number set
      to 0\n   to the mobile node [1], [D].  Moreover, if such a foreign agent\n   wishes
      to indicate to the mobile node that its binding has been\n   revoked, and that
      the mobile node should not attempt to renew its\n   registration with it, the
      foreign agent MAY also set the 'B' bit to 1\n   in these agent advertisements,
      indicating it is busy, and is not\n   accepting new registrations [1].  All
      mobile nodes compliant with [1]\n   will understand that this means the agent
      is busy, and MAY either\n   immediately attempt to re-register with another
      agent in their\n   foreign agent cache, or MAY solicit for additional agents.
      \ In the\n   latter case, a foreign agent can optionally remember the mobile\n
      \  node's binding was revoked, and respond to the solicit in the same\n   way,
      namely with the 'B' bit set to 1.  It should be noted, though,\n   that since
      the foreign agent is likely to not be setting the 'B' bit\n   to 1 in its broadcasted
      agent advertisements (sent to the entire\n   link), the revoked mobile node,
      upon hearing this agent's multicast\n   agent advertisement without the 'B'
      bit set, may attempt to\n   [re]register with it.  If this happens, depending
      on foreign domain\n   policy, the foreign agent can simply deny the mobile node
      with an\n   appropriate error code (e.g., \"administratively prohibited\").
      \ At\n   this time, a mobile node can use foreign agent fallback to attempt
      to\n   register with a different foreign agent as described in [1].\n   Mobile
      nodes which understand the revocation mechanism described by\n   this document
      may understand that a unicast agent advertisement with\n   the sequence number
      reset to 0 could indicate a revocation, and may\n   attempt to re-register with
      the same foreign agent, or register with\n   a different foreign agent, or co-locate.\n
      \  Agent Advertisements unicast to a mobile node MUST be sent as\n   described
      in [1] in addition to any methods currently in use on the\n   link to make them
      secure or authenticatable to protect from denial-\n   of-service attacks.\n"
    title: 4.1.  Mobile Node Notification
  - contents:
    - "4.2.  Registration Revocation Mechanism - Agent Notification\n   A foreign
      agent that is currently supporting registration revocation\n   on a link MUST
      set the 'X' bit in its Agent Advertisement Extensions\n   being sent on that
      link.  This allows mobile nodes requiring\n   Registration Revocation services
      to register with those foreign\n   agents advertising its support.\n"
    - contents:
      - "4.2.1.  Negotiation of Revocation Support\n   During the registration process,
        if the foreign agent wishes to\n   participate in revocation messages with
        the home domain, it MUST have\n   an existing security association with the
        home agent identified in\n   the registration request, and append a revocation
        support extension\n   (defined in Section 3.2.) to it.  If the corresponding
        registration\n   reply from this home agent does not contain a revocation
        support\n   extension, the foreign agent SHOULD assume the home agent does
        not\n   understand registration revocation, or is unwilling to participate.\n
        \  If this is unacceptable to the foreign agent, it MAY deny the\n   registration
        with e.g., \"Administratively Prohibited\".  Note that in\n   this case, where
        a security association exists, as specified in [1],\n   both registration
        request and registration reply MUST still contain\n   home-foreign authenticators.\n
        \  If a home agent wishes to be able to exchange revocation messages\n   with
        the foreign domain, it MUST have an existing security\n   association with
        the foreign agent who relayed the registration\n   request, and it MUST append
        a revocation support extension to the\n   registration reply.  If the registration
        request from a foreign agent\n   did not contain a revocation support extension,
        the home agent SHOULD\n   assume the foreign agent does not understand registration
        revocation,\n   or is unwilling to participate specifically for this binding.
        \ If\n   this is unacceptable to the home agent, it MAY deny the registration\n
        \  with e.g., \"Administratively Prohibited\".  The home agent MAY include\n
        \  a revocation support extension in the registration reply.\n   If a 'direct'
        co-located mobile node wishes to be informed of a\n   released binding by
        its home agent, it MUST insert a revocation\n   support extension into the
        registration request.  If this is\n   acceptable to the home agent, it MUST
        include a revocation support\n   extension in its registration reply.  Note
        that if this is not\n   acceptable, the home agent MAY deny the registration,
        or it MAY\n   simply not include a revocation support extension in its registration\n
        \  reply indicating to the mobile node that it will not participate in\n   revocation
        for this binding.  A home agent which receives a\n   registration request
        from a 'direct' co-located mobile node which\n   does not contain a revocation
        support extension MAY deny the\n   registration with e.g., \"Administratively
        Prohibited\" and also MAY or\n   MAY NOT include a revocation support extension
        in the registration\n   reply.\n   Note that a non-colocated mobile node MUST
        NOT insert a revocation\n   support extension into its registration request.
        \ If a foreign agent\n   receives such a registration request, it MUST silently
        discard it,\n   and MAY log it as a protocol error.\n   The 'I' bit in the
        revocation extension is used to indicate whether\n   or not the decision to
        inform the mobile node that its binding is\n   terminated will be left to
        the home agent.  This functionality is\n   offered by the foreign agent, and
        accepted by the home agent.  More\n   precisely, by sending a revocation extension
        attached to a\n   registration request in which the 'I' bit is set to 1, the
        foreign\n   agent is indicating to the home agent that it MAY leave the decision\n
        \  to inform this mobile node that its registration is terminated up to\n
        \  the home agent.  (The term \"MAY\" is used here because it is\n   recognized
        that domain policy may change during the lifetime of any\n   registration).
        \ The home agent can acknowledge that it wishes to do\n   this by setting
        the 'I' bit to 1, or it can indicate it will not do\n   so by setting the
        'I' bit to 0, in the revocation extension appearing\n   in the registration
        reply.\n   Revocation support is considered to be negotiated for a binding
        when\n   both sides have included a revocation support extension during a\n
        \  successful registration exchange.\n"
      title: 4.2.1.  Negotiation of Revocation Support
    - contents:
      - "4.2.2.  Home Domain Revoking/Releasing a Registration\n   The following section
        details the responsibilities of each party\n   depending on the functionality
        negotiated in the revocation support\n   extensions when the home domain is
        revoking a registration.\n"
      - contents:
        - "4.2.2.1.  Home Agent Responsibilities\n   In the case where a home agent
          is revoking a mobile node's binding,\n   and revocation support has been
          negotiated, the home agent MUST\n   notify the foreign domain address it
          is terminating the tunnel entry\n   point by sending a revocation message.
          \ Note that the foreign domain\n   address can either be the foreign agent
          care-of address, or the co-\n   located care-of address of a 'direct' co-located
          mobile node.\n   As a home agent, it MUST set the 'A' bit to '1', indicating
          this\n   packet is coming from the home agent servicing this binding.\n
          \  When a revocation message is being sent to a foreign agent, and the\n
          \  use of the 'I' bit was negotiated in the registration process, the\n
          \  home agent MUST set the 'I' bit to 1 if the home agent would like the\n
          \  foreign agent to inform the mobile node of the revocation.\n   Conversely,
          if the home agent does not want the mobile node notified,\n   it MUST set
          the 'I' bit to 0.  Note that the home agent could also\n   set the 'I' bit
          to '0' because it knows the mobile node has\n   registered with a different
          foreign agent, and so there is no need\n   for the foreign agent to attempt
          a notification.\n   The home agent MUST set the Identifier field as defined
          in Section\n   3.5., and MUST include a valid authenticator as specified
          in Section\n   3.3.\n   If the home agent does not receive a revocation
          acknowledgment\n   message within a reasonable amount of time, it MUST retransmit
          the\n   revocation message.  How long the home agent waits to retransmit,
          and\n   how many times the message is retransmitted is limited by the\n
          \  requirement that:\n   -  every time the home agent is about to retransmit
          the revocation\n      message, it MUST update the value of the timestamp
          in the\n      revocation identifier with a current value from the same clock\n
          \     used to generate the timestamps in the revocation extensions sent\n
          \     to this foreign agent.  Note that this also necessarily means\n      updating
          any fields derived using the revocation identifier (e.g.,\n      a home-foreign
          authenticator).\n   -  the home agent MUST NOT send more than one revocation
          per second\n      for a particular binding,\n   -  the time between retransmissions
          SHOULD fall-back in analogy with\n      the registration guidelines in [1],
          namely exponential backoff,\n      and\n   -  the home agent MUST NOT retransmit
          revocation messages beyond the\n      normal life of the binding identified
          by the revocation message.\n"
        title: 4.2.2.1.  Home Agent Responsibilities
      - contents:
        - "4.2.2.2.  Foreign Agent Responsibilities\n   Upon receiving a registration
          revocation message, the foreign agent\n   MUST check that the validity of
          the authenticator, the 'A' bit, and\n   the identifier field against replay
          as defined by Section 3.5.  The\n   foreign agent MUST also identify the
          binding described by the home\n   agent as being released using the information
          in the revocation\n   message, namely the addresses identified by the mobile
          node address,\n   the foreign domain address, the home domain address, as
          well as the\n   timestamp in the revocation message, and also the timestamp
          in the\n   last accepted registration message; revocations are only valid
          for\n   existing registrations, and so the timestamp of a registration MUST\n
          \  precede the revocation message (note that both of those timestamps\n
          \  were set by the same home agent).  Upon locating the binding, the\n   foreign
          agent MUST revoke it, and MUST respond with a revocation\n   acknowledgment
          sent to the source address of the revocation message.\n   If the 'I' bit
          was negotiated, the foreign agent MUST check the value\n   of the 'I' bit
          in the revocation message and act accordingly.\n   If notifying the mobile
          node by the methods described in Section\n   4.1., the foreign agent MUST
          set the 'I' bit to '1' in the revocation\n   acknowledgment to be sent to
          the home agent, or if not notifying the\n   mobile node, the foreign agent
          MUST set the 'I' bit to '0'.\n   The foreign agent may discontinue all Mobile
          IP services by the\n   former binding at this time, and free up any resources
          that were\n   being used by it.\n   The foreign agent MUST then generate
          a revocation acknowledgment,\n   setting the Home Address and Identifier
          field in the revocation\n   acknowledgment message as described by Section
          3.5., and protect it\n   with a valid authenticator as specified in Section
          3.3.\n"
        title: 4.2.2.2.  Foreign Agent Responsibilities
      - contents:
        - "4.2.2.3.  'Direct' co-located mobile node Responsibilities\n   Upon receiving
          a revocation message, the 'direct' co-located mobile\n   node MUST validate
          the authenticator, and check the home address and\n   identifier specified
          in the revocation message for replay.  If the\n   packet passes authentication,
          and the identifier reveals this\n   revocation to be new, the mobile node
          MUST verify that the\n   information contained in the revocation messages
          identifies the home\n   agent with which it has a current binding, that
          this binding\n   identifies correctly this mobile node and any foreign domain
          address\n   it is currently using.  If the mobile node is able to identify
          such a\n   binding, the mobile node SHOULD first generate a revocation\n
          \  acknowledgment message which MUST be sent to the IP source address of\n
          \  the revocation message.  The mobile node may then terminate any\n   reverse
          tunnel encapsulation [C] it is using to this home agent, and\n   consider
          its binding revoked, and free up any other resources\n   associated with
          the former binding.\n"
        title: 4.2.2.3.  'Direct' co-located mobile node Responsibilities
      title: 4.2.2.  Home Domain Revoking/Releasing a Registration
    - contents:
      - "4.2.3.  Foreign Domain Revoking/Releasing a Registration\n   The following
        section details the responsibilities of each party\n   depending on the functionality
        negotiated in the revocation support\n   extensions when the foreign domain
        is revoking a registration.  Note\n   that revocation support for a co-located
        mobile node registering via\n   a foreign agent (because the 'R' bit was set
        in the agent's\n   advertisement) is not supported.  See Section 4.3.1. for
        details.\n"
      - contents:
        - "4.2.3.1.  Foreign Agent Responsibilities\n   If the use of the 'I' bit
          was negotiated, and the foreign domain\n   policy of informing the mobile
          node has not changed since the last\n   successful registration exchange,
          the foreign agent MUST NOT inform\n   any mobile node of its revocation
          at this time.  Instead, the foreign\n   agent MUST set the 'I' bit to '1'
          in the revocation message, thereby\n   asking the home agent to use the
          'I' bit in the revocation\n   acknowledgment to indicate if it should notify
          the effected mobile\n   nodes.  If the policy on the foreign domain was
          to not notify the\n   mobile node, or if it has changed since the most recent
          successful\n   registration, and the foreign agent is no longer able to
          use the 'I'\n   bit, the foreign agent MUST set the 'I' bit to '0', and
          follow the\n   policies of the foreign domain with regard to notifying the
          mobile\n   node.\n   Note that the 'A' bit MUST be set to '0' to indicate
          that the\n   revocation message is coming from the foreign agent servicing
          this\n   binding.\n   Before transmitting the revocation message, the foreign
          agent MUST\n   set the revocation identifier as described by section 3.5.,
          and MUST\n   include an authenticator as described by section 3.3.\n   If
          the foreign agent does not receive a revocation acknowledgment\n   message
          within a reasonable amount of time, it MUST retransmit the\n   revocation
          message.  How long the foreign agent waits to retransmit,\n   and how many
          times the message is retransmitted is only limited by\n   the following
          specifications:\n   -  every time the foreign agent is about to retransmit
          the revocation\n      message, it MUST update the value of the timestamp
          in the\n      revocation identifier with a current value from the same clock\n
          \     used to generate the timestamps in the revocation extensions sent\n
          \     to this home agent.  Note that this also necessarily means\n      updating
          any fields derived using the revocation identifier (e.g.,\n      a home-foreign
          authenticator).\n   -  MUST NOT send more than one revocation per second
          for a particular\n      binding,\n   -  SHOULD set its retransmissions to
          fall-back in analogy with the\n      registration guidelines in [1], namely
          exponential backoff, and\n   -  MUST NOT retransmit revocation messages
          beyond the normal life of\n      the binding identified by the revocation
          message.\n"
        title: 4.2.3.1.  Foreign Agent Responsibilities
      - contents:
        - "4.2.3.2.  Home Agent Responsibilities\n   Upon receiving a registration
          revocation message, the home agent MUST\n   check the 'A' bit, and identifier
          field, as well as the\n   authenticator.  If the packet is acceptable, the
          home agent MUST\n   locate the binding identified by the foreign agent as
          being released\n   using the information in the revocation message, namely
          the addresses\n   identified by the home address, the foreign domain address
          and the\n   home domain address fields.  As revocations are only valid for\n
          \  existing registrations, the timestamp of a registration MUST precede\n
          \  the revocation message (note that both of those timestamps were set\n
          \  by the same foreign agent).  Since this binding is no longer active,\n
          \  the home agent can free up any resources associated with the former\n
          \  binding and discontinue all Mobile IP services for it.\n   Upon processing
          a valid registration revocation message, the home\n   agent MUST send a
          revocation acknowledgment to the IP source address\n   of the registration
          revocation message.\n   If use of the 'I' bit was negotiated, and the 'I'
          bit is set to '1'\n   in the revocation message, the home agent should decide
          if it wants\n   the mobile node informed of the revocation of this binding.
          \ If it\n   does want the mobile node informed, it MUST set the 'I' bit
          in the\n   revocation acknowledgment message to '1'.  If it does not want
          the\n   mobile node informed, it MUST set the 'I' bit to '0'.\n   The home
          agent MUST set the Home Address, and Revocation Identifier\n   fields as
          described by Section 3.5., and protect the revocation\n   acknowledgment
          message with a valid authenticator as specified in\n   Section 3.3.\n"
        title: 4.2.3.2.  Home Agent Responsibilities
      title: 4.2.3.  Foreign Domain Revoking/Releasing a Registration
    - contents:
      - "4.2.4.  Mobile Node Deregistering a Registration\n   The cases where a mobile
        node is registered with its home agent,\n   whether it is registered directly
        with its home agent ('direct' co-\n   located mobile node), or registered
        via a foreign agent, and wishes\n   to terminate its own binding, the mobile
        node MUST NOT send a\n   revocation message, but SHOULD simply deregister
        the appropriate\n   care-of address with its home agent as described by [1].\n"
      title: 4.2.4.  Mobile Node Deregistering a Registration
    title: 4.2.  Registration Revocation Mechanism - Agent Notification
  - contents:
    - "4.3.  Mobile IP Registration Bits in the Revocation Process\n   Several of
      the bits used in the registration process need special\n   consideration when
      using the revocation mechanism.\n"
    - contents:
      - "4.3.1.  The 'R' Bit in Use\n   If the foreign agent wishes to be able to
        revoke a mobile node's\n   registration, it MUST set the 'R' bit in its agent
        advertisements.\n   (A foreign agent advertising the 'R' bit requests every
        mobile node,\n   even one that is co-located (and whose registration would
        otherwise\n   by-pass the foreign agent), to register with the foreign agent.)\n
        \  However, in this case, the foreign agent SHOULD deny a registration\n   request
        as \"Administratively Prohibited\" from a mobile node that is\n   registering
        in a co-located fashion.  The reason being that the\n   foreign agent will
        not be able to revoke the binding of a co-located\n   mobile node due to reasons
        outlined in Section 4.3.2.\n   How the foreign agent and/or foreign domain
        enforce the 'R' bit is\n   beyond the scope of this document.\n"
      title: 4.3.1.  The 'R' Bit in Use
    - contents:
      - "4.3.2.  The 'D' bit in Use\n   A mobile node registering directly with its
        home agent in a co-\n   located fashion with the 'D' bit set in its registration
        request is\n   supported in registration revocation.  However, support for
        a co-\n   located mobile node (with the 'D' bit set in its registration\n
        \  request) registering via a foreign agent is not supported for the\n   following
        reasons.\n   Registration requests where the 'D' bit is set, and which are
        relayed\n   through a foreign agent (e.g., due to the advertising of the 'R'
        bit)\n   should theoretically contain the foreign agent address as the source\n
        \  address of the registration request when received by the home agent.\n
        \  A home agent may conclude that the source address of this\n   registration
        request is not the same as the co-located care-of\n   address contained in
        the registration request, and is therefore\n   likely to be the address of
        the foreign agent.  However, since there\n   is no way to guarantee that this
        IP source address is in fact an\n   address of the foreign agent servicing
        the mobile node, accepting a\n   revocation message from this IP source address
        may lead to a denial-\n   of-service attack by a man-in-the-middle on the
        mobile node.\n   Moreover, there is currently no method for the foreign agent\n
        \  servicing the mobile node to identify itself to the home agent during\n
        \  the Mobile IP registration phase.  Even if a foreign agent could\n   identify
        itself, the co-located mobile node would also need to\n   authorize that this
        foreign agent is indeed the agent that is\n   providing it the Mobile IP services.
        \ This is to thwart a denial-of-\n   service attack on the mobile node by
        a foreign agent that has a\n   security association with the home agent, and
        is on the path between\n   the co-located mobile node and the home agent.\n"
      title: 4.3.2.  The 'D' bit in Use
    title: 4.3.  Mobile IP Registration Bits in the Revocation Process
  title: 4.  Registration Revocation Overview
- contents:
  - "5.  Error Codes\n   As the intent of a registration revocation message is not
    a request\n   to discontinue services, but is a notification that Mobile IP\n
    \  services are discontinued, there are no new error codes.\n"
  title: 5.  Error Codes
- contents:
  - "6.  Security Considerations\n   There are two potential vulnerabilities, one
    in the agent\n   advertisement mechanism, and one related to unauthorized revocation\n
    \  messages.\n"
  - contents:
    - "6.1.  Agent Advertisements\n   Although the mechanisms defined by this document
      do not introduce\n   this problem, it has been recognized that agent advertisements
      as\n   defined in [1] subject mobile nodes to a denial-of-service potential.\n
      \  This is because the agent advertisement as defined in [1] may be\n   spoofed
      by other machines residing on the link.  This makes it\n   possible for such
      nodes to trick the mobile node into believing its\n   registration has been
      revoked either by unicasting an advertisement\n   with a reset sequence number
      to the link-local address of the mobile\n   node, or by broadcasting it to the
      subnet, thereby tricking all\n   mobile nodes registered with a particular foreign
      agent into\n   believing all their registrations have been lost.\n   There has
      been some work in this working group and others (e.g.,\n   IPsec) to secure
      such router advertisements, though at the time of\n   this publication, no solutions
      have become common practice.  To help\n   circumvent possible denial of service
      issues here, bringing their\n   potential for disruption to a minimum, mobile
      node implementors\n   should ensure that any agent advertisement which doesn't
      conform to a\n   strict adherence to [1], specifically those whose TTL is not
      1, or\n   which do not emanate from the same link-address (when present) as\n
      \  other agent advertisements supposedly from the same agent, or even\n   that
      of the last successful registration reply, be silently\n   discarded.\n"
    title: 6.1.  Agent Advertisements
  - contents:
    - "6.2.  Revocation Messages\n   As registration revocation, when performed, terminates
      Mobile IP\n   services being provided to the mobile node, it is crucial that
      all\n   security and replay protection mechanisms be verified before a\n   mobility
      agent believes that the other agent has revoked a binding.\n   Messages which
      are sent link-local (e.g., between mobile node and\n   foreign agent) MAY also
      be secured by methods outlined in [1], namely\n   the use of mobile-foreign
      authenticators, but these have no direct\n   relation to registration revocation.\n
      \  RFC 3344 [1] defines a security mechanism that MUST be used between\n   home
      agents and mobile nodes, and MAY used between home agents and\n   foreign agents,
      namely the use of authenticators.  All foreign and\n   home agents MUST support
      protection of revocation messages via the\n   foreign-home authenticators defined
      in [1].  They MAY implement other\n   mechanisms of equal or greater strength;
      if such mechanisms are known\n   to be available to both parties, they MAY be
      used instead.\n   Revocation messages are at least as secure as registration
      messages\n   passed between home and foreign agents and containing home-foreign\n
      \  authenticators as defined in [1].  Thus, there are no new security\n   threats
      introduced by the revocation mechanism other than those\n   present in [1] with
      respect to the compromise of the shared secret\n   which is used to generate
      the home-foreign authenticators.\n   That said, there are two types of active
      attacks which use messages\n   captured \"in flight\" by a man-in-the-middle
      between the home and\n   foreign agents - \"malicious repeaters\" and \"malicious
      reflectors\".\n   In the case of a \"malicious repeater\", a man-in-the-middle
      captures a\n   revocation message, then replays it to the same IP destination\n
      \  address at a later time.  Presuming the authenticator of the original\n   packet
      was deemed valid, without replay protection, the home-foreign\n   authenticator
      of the replayed packet will (again) pass\n   authentication.  Note that since
      datagrams are not guaranteed to\n   arrive unduplicated, a replay may occur
      by \"design\".\n   In the case of a \"malicious reflector,\" a man-in-the-middle
      captures\n   a revocation message, then returns it to its originator at a later\n
      \  time.  If the security association between home and foreign domains\n   uses
      a security association involving a (single) shared secret which\n   only protects
      the contents of the UDP portion of the packet (such as\n   home-foreign authenticators
      as defined by [1]), without replay\n   protection, the sender of the packet
      will also believe the revocation\n   message to be authentic.\n   The replay
      protection mechanism used by the revocation messages\n   defined by this document
      is designed to protect against both of these\n   active attacks.  As a benefit,
      by using a 32-bit timestamp it can be\n   more quickly determined if revocation
      messages are replays, though\n   the reader is advised to use caution in this
      approach.  An agent\n   which receives an authenticated revocation message can
      compare the\n   Identifier field to that of a previously received revocation
      message,\n   and if the timestamp in the new message is found to have been\n
      \  generated after that of the time-stamp in the last revocation message\n   received,
      it can immediately be determined as not being a replay.\n   Note however that
      since datagrams are not guaranteed to arrive in\n   order, it should not be
      presumed that because the values contained in\n   an Identifier field are timestamps
      that they will necessarily be\n   increasing with each successive revocation
      message received.  Should\n   an implementor decide to base his replay detection
      mechanism on\n   increasing timestamps, and therefore increasing Identifier
      values, a\n   suitable time window should be defined in which revocation messages\n
      \  can be received.  At worst, ignoring any revocation message should\n   result
      in the retransmission of another revocation message, this time\n   with timestamp
      later than the last one received.\n   Note that any registration request or
      reply can be replayed.  With\n   the exchanging of time-stamps by agents in
      revocation extensions, an\n   agent should have a belief that such messages
      have been delivered in\n   a timely manner.  For purposes of registration revocation,
      the\n   timeliness of a registration packet is simply based on the\n   granularity
      of each registration.  Since [1] provides a replay\n   mechanism for the home
      agent to use, it has a way to tell if the\n   registration request being presented
      to it is new.  The foreign\n   agent, however, has no such mechanism in place
      with the mobile node.\n   Foreign agents are advised to continue to consider
      registrations\n   'outstanding' until the associated registration reply is returned\n
      \  from the home agent before using the information in any of its\n   visitor
      entries.  Even so, this leaves the foreign agent open to a\n   potential denial
      of service attack in which registration requests and\n   replies are replayed
      by multiple nodes.  When this happens, the\n   foreign agent could be lead to
      believe such registrations are active,\n   but with old information, which can
      have adverse effects on them, as\n   well as to the ability of that agent to
      successfully use the\n   procedures outlined in this document.  Sufficient protection
      against\n   this scenario is offered by the challenge-response mechanism [2]
      by\n   which a foreign agent generates a live challenge to a mobile node for\n
      \  the purposes of making sure, among other things, that the\n   registration
      request is not a replay.\n"
    title: 6.2.  Revocation Messages
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document defines an additional set of messages
    between the home\n   and foreign agent specific to the services being provided
    to the same\n   mobile node, or sub-set of mobile nodes.  To ensure correct\n
    \  interoperation based on this specification, IANA has reserved values\n   in
    the Mobile IP number space for two new message types, and a single\n   new extension.\n"
  - contents:
    - "7.1.  New Message Types\n   The following message types are introduced by this
      specification:\n   Registration Revocation: A new Mobile IP control message,
      using UDP\n   port 434, type 7.  This value has been taken from the same number\n
      \  space as Mobile IP Registration Request (Type = 1), and Mobile IP\n   Registration
      Reply (Type = 3).\n   Registration Revocation Acknowledgment: A new Mobile IP
      control\n   message, using UDP port 434, type 15.  This value has been taken
      from\n   the same number space as Mobile IP Registration Request (Type = 1),\n
      \  and Mobile IP Registration Reply (Type = 3).\n"
    title: 7.1.  New Message Types
  - contents:
    - "7.2.  New Extension Values\n   The following extensions are introduced by this
      specification:\n   Revocation Support Extension: A new Mobile IP Extension,
      appended to\n   a Registration Request, or Registration Reply.  The value assigned
      is\n   137.  This extension is derived from the Extension number space.  It\n
      \  MUST be in the 'skippable' (128 - 255) range as defined in RFC 3344.\n"
    title: 7.2.  New Extension Values
  - contents:
    - "7.3.  New Error Codes\n   There are no new Mobile IP error codes introduced
      by this document.\n"
    title: 7.3.  New Error Codes
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References (Numerical)\n   [1] Perkins, C., Ed., \"IP Mobility
      Support for IPv4\", RFC 3344,\n       August 2002.\n   [2] Perkins, C. and P.
      Calhoun, \"Mobile IPv4 Challenge/Response\n       Extensions\", RFC 3012, November
      2000.\n   [3] Bradner, S., \"Key Words for us in RFCs to Indicate Requirement\n
      \      Levels\", BCP 14, RFC 2119, March 1997.\n"
    title: 8.1.  Normative References (Numerical)
  - contents:
    - "8.2.  Informational References (Alphabetical)\n   [A] Glass, S., Hiller, T.,
      Jacobs, S. and C. Perkins, \"Mobile IP\n       Authentication, Authorization,
      and Accounting Requirements\", RFC\n       2977, October 2000.\n   [B] Aboba,
      B., Calhoun, P., Glass, S., Hiller, T., McCann, P.,\n       Shiino, H., Walsh,
      P., Zorn, G., Dommety, G., Perkins, C., Patil,\n       B., Mitton, D., Manning,
      S., Beadles, M., Chen, X., Sivalingham,\n       S., Hameed, A., Munson, M.,
      Jacobs, S., Lim, B., Hirschman, B.,\n       Hsu, R., Koo, H., Lipford, M., Campbell,
      E., Xu, Y., Baba, S. and\n       E. Jaques, \"Criteria for Evaluating AAA Protocols
      for Network\n       Access\", RFC 2989, November 2000.\n   [C] Montenegro, G.,
      Ed., \"Reverse Tunneling for Mobile IP, revised\",\n       RFC 3024, January
      2001.\n   [D] Deering, S., Ed., \"ICMP Router Discovery Messages\", RFC 1256,\n
      \      September 1991.\n   [E] Calhoun, P. and C. Perkins, \"Mobile IP Network
      Access Identifier\n       Extension for IPv4\", RFC 2794, March 2000.\n"
    title: 8.2.  Informational References (Alphabetical)
  title: 8.  References
- contents:
  - "Appendix A: An Example of the Revocation Messages in Use\n   For clarity, the
    following example is meant to illustrate the use of\n   the new messages in the
    registration phase, and the revocation phase.\n   In this example, a foreign agent
    and home agent will negotiate\n   revocation during the registration phase.  During
    the revocation\n   phase, the foreign agent will revoke the binding of a mobile
    node.\n"
  - contents:
    - "A.1.  The Registration Phase\n   Consider a foreign agent that supports registration
      revocation, and\n   has a security association with a home agent to which it
      is\n   forwarding a registration request.  The foreign agent will include\n
      \  the revocation support extension after the mobile-home authenticator.\n   Assume
      that the foreign agent supports the use of the 'I' bit, and is\n   willing to
      let the home agent decide if the mobile node should be\n   informed of the revocation
      of its registration. Thus, the foreign\n   agent will set the 'I' bit to '1'.
      \ The foreign agent will append a\n   foreign-home authenticator to the registration
      request.\n   Upon receiving the registration request containing a revocation\n
      \  extension, the home agent will include a revocation support extension\n   in
      the registration reply.  Since the foreign agent set the 'I' bit\n   to '1'
      in its revocation extension, and the home agent supports the\n   use of the
      'I' bit, the home agent will set the 'I' bit in its\n   registration extension
      to '1'.  Additionally, the home agent will\n   append a home-foreign authenticator
      to the registration request.\n   Upon receiving the authenticated registration
      reply, the foreign\n   agent will check the revocation support extension and
      note that the\n   home agent wants to decide if the mobile node should be notified
      in\n   the event this registration is revoked, i.e., since the home agent\n
      \  set the 'I' bit in the return revocation extension.\n"
    title: A.1.  The Registration Phase
  - contents:
    - "A.2.  The Revocation Phase\n   The foreign agent revokes a mobile node's binding,
      and generates a\n   revocation message to be sent to the mobile node's home
      agent.  Since\n   the 'I' bit was negotiated in the revocation extensions, and
      the\n   foreign agent is still willing to let the home agent indicate whether\n
      \  this mobile node should be informed about the revocation, it will set\n   the
      'I' bit to '1' in the revocation message.  The foreign agent also\n   makes
      sure the 'A' bit is set to '0'.\n   The foreign agent will also place the address
      of the mobile node\n   whose registration it wishes to revoke in the home address
      field, the\n   address that the mobile node registered as the care-of address
      in the\n   foreign domain field, and the address registered as the home agent
      in\n   the home domain address field.  The foreign agent will set the\n   Revocation
      Identifier to the current 32-bit timestamp, and append the\n   foreign-home
      authenticator.\n   Upon receiving the above revocation message, the home agent
      uses the\n   address identified as the foreign domain address to identify the\n
      \  security association, and authenticate the revocation message.  After\n   authenticating
      the message, the home agent will check to make sure\n   the 'A' bit and Identifier
      indicate that this revocation is not a\n   replay.  The home agent then uses
      the mobile node home address,\n   foreign domain address, and home domain address
      to locate the mobile\n   node whose registration is being revoked.\n   Upon
      processing a valid registration revocation message, the home\n   agent generates
      a revocation acknowledgment message.  Since the 'I'\n   bit was set to '1' in
      the revocation message and the home agent\n   wishes for the identified mobile
      node to be informed of the\n   revocation, it will set the 'I' bit in the revocation
      acknowledgment\n   to '1'.  The home agent then copies the home address and
      the\n   Revocation Identifier field into the revocation acknowledgement.  The\n
      \  home agent protects the revocation acknowledgment with a home-foreign\n   authenticator.\n
      \  Upon receiving a valid revocation acknowledgment (in which the\n   authenticator
      and Identifier fields are acceptable), the foreign\n   agent checks the state
      of the 'I' bit.  Since the 'I' bit is set to\n   '1', the foreign agent will
      notify the mobile node of the revocation.\n"
    title: A.2.  The Revocation Phase
  title: 'Appendix A: An Example of the Revocation Messages in Use'
- contents:
  - "Appendix B:  Disparate Address, and Receiver Considerations\n   Since the registration
    revocation message comes from a source address\n   that is topologically routable
    from the interface receiving the\n   datagram, the agents, by definition, are
    topologically connected (if\n   this were not the case, the initial registration
    mechanism would have\n   failed).  If either are the ultimate hop from this topologically\n
    \  connected region to one or more disparate address spaces, no problems\n   are
    foreseen.  In order for the mobile node to have successfully\n   registered with
    its home agent, it MUST have provided to the network\n   (foreign agent) to which
    it is currently attached a routable address\n   of its home agent.  Conversely,
    the care-of address being used by the\n   mobile node must also be topologically
    significant to the home agent\n   in order for the registration reply to have
    been received, and the\n   tunnel initiated.  By definition, then, the home agent
    address and\n   the care-of address must each be significant, and either address
    must\n   form a unique pair in the context of this mobile node to both agents.\n
    \  Another way of understanding this is that the tunnel endpoints are in\n   some
    way connected, and hence each are unique as far as the other end\n   is concerned.
    \ The address at the other end of the tunnel, in\n   combination with the address
    of the mobile node, must therefore form\n   a unique pair that can be identified
    by the agent receiving the\n   registration revocation message.\n   As an example,
    consider a mobile node who's home address lies in\n   disparate address space
    A behind its home agent.  In the following\n   diagram, [*] indicates an interface
    of the entity in which it\n   appears.\n      MN[a]-----[c]FA[b]=====((()))=====[b]HA[a]-----[a]CN\n
    \         Address      Some topologically      Address\n          Space C      connected
    network       Space A\n   We presume a binding for MN exists, and hence a tunnel
    between FA[b]\n   and HA[b] exists.  Then, since the address assigned to MN[a]
    MUST be\n   unique in address space A, the pair {FA[b],MN[a]} is guaranteed to
    be\n   unique in the binding table of HA, and the pair {HA[b],MN[a]} is\n   guaranteed
    to be unique in the foreign agent's visitor list.\n   As a result, a home agent
    receiving a registration revocation message\n   and foreign-home authenticator
    for MN[a] from FA[b] is able to\n   determine the unique mobile node address being
    deregistered.\n   Conversely a foreign agent receiving a registration revocation\n
    \  message and home-foreign authenticator for MN[a] from HA[b] is able\n   to
    determine the exact mobile node address being deregistered.  For\n   this reason,
    if a foreign agent receives a registration revocation\n   message with the home
    domain field set to the zero address it MUST be\n   silently discarded.  This
    is to prevent confusion in the case of\n   overlapping private addresses; when
    multiple mobile nodes are\n   registered via the same care-of address and coincidentally
    using the\n   same (disparate/private) home address, the home agent address\n
    \  appearing in the home domain field is the only way a foreign agent\n   can
    discern the difference between these mobile nodes.\n"
  title: 'Appendix B:  Disparate Address, and Receiver Considerations'
- contents:
  - "Acknowledgments\n   The authors would like to thank Rajesh Bhalla, Kent Leung,
    and Alpesh\n   Patel for their contributions to the concepts detailed in\n   draft-subbarao-mobileip-resource-00.txt,
    \"Releasing Resources in\n   Mobile IP,\" from which the revocation support extension,
    and the\n   acknowledgment mechanism contained in this document were derived.\n
    \  The authors would also like to thank Pete McCann for his discussions\n   on
    replay mechanisms, and security concerns, and Ahmad Muhanna for\n   pointing out
    a problem with the initial replay mechanism, which\n   eventually lead to the
    addition of a time stamp to the Revocation\n   Extension.\n   The authors would
    also like to acknowledge Henrik Levkowetz for his\n   detailed review of the document,
    and Michael Thomas for his review of\n   the replay mechanism described herein.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Steven M. Glass\n   Solaris Network Technologies\n   Sun
    Microsystems\n   1 Network Drive\n   Burlington, MA.  01801\n   Phone: +1.781.442.0000\n
    \  Fax:   +1.781.442.1706\n   EMail: steven.glass@sun.com\n   Madhavi W. Chandra\n
    \  IOS Technologies Division\n   Cisco Systems\n   7025 Kit Creek Road\n   Research
    Triangle Park, NC 27709\n   Phone: +1.919.392.8387\n   EMail: mchandra@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2003).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
