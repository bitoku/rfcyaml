- title: __initial_text__
  contents:
  - '    Proxy Mobile IPv6 Extensions for Distributed Mobility Management

    '
- title: Abstract
  contents:
  - "Abstract\n   Distributed Mobility Management solutions allow networks to be set\
    \ up\n   in such a way that traffic is distributed optimally and centrally\n \
    \  deployed anchors are not relied upon to provide IP mobility support.\n   There\
    \ are many different approaches to address Distributed Mobility\n   Management\
    \ -- for example, extending network-based mobility protocols\n   (like Proxy Mobile\
    \ IPv6) or client-based mobility protocols (like\n   Mobile IPv6), among others.\
    \  This document follows the former\n   approach and proposes a solution based\
    \ on Proxy Mobile IPv6, in which\n   mobility sessions are anchored at the last\
    \ IP hop router (called the\n   mobility anchor and access router).  The mobility\
    \ anchor and access\n   router is an enhanced access router that is also able\
    \ to operate as a\n   local mobility anchor or mobility access gateway on a per-prefix\n\
    \   basis.  The document focuses on the required extensions to\n   effectively\
    \ support the simultaneous anchoring several flows at\n   different distributed\
    \ gateways.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are candidates\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8885.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Language\n  \
    \ 2.  Terminology\n   3.  PMIPv6 DMM Extensions\n     3.1.  Initial Registration\n\
    \     3.2.  The CMD as PBU/PBA Relay\n     3.3.  The CMD as MAAR Locator\n   \
    \  3.4.  The CMD as PBU/PBA Proxy\n     3.5.  De-registration\n     3.6.  Retransmissions\
    \ and Rate Limiting\n     3.7.  The Distributed Logical Interface (DLIF) Concept\n\
    \   4.  Message Format\n     4.1.  Proxy Binding Update\n     4.2.  Proxy Binding\
    \ Acknowledgement\n     4.3.  Anchored Prefix Option\n     4.4.  Local Prefix\
    \ Option\n     4.5.  Previous MAAR Option\n     4.6.  Serving MAAR Option\n  \
    \   4.7.  DLIF Link-Local Address Option\n     4.8.  DLIF Link-Layer Address Option\n\
    \   5.  IANA Considerations\n   6.  Security Considerations\n   7.  References\n\
    \     7.1.  Normative References\n     7.2.  Informative References\n   Acknowledgements\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Distributed Mobility Management (DMM) paradigm aims\
    \ at minimizing\n   the impact of currently standardized mobility management solutions,\n\
    \   which are centralized (at least to a considerable extent) [RFC7333].\n   The\
    \ two most relevant examples of current IP mobility solutions are\n   Mobile IPv6\
    \ [RFC6275] and Proxy Mobile IPv6 (PMIPv6) [RFC5213].\n   These solutions offer\
    \ mobility support at the cost of handling\n   operations at a cardinal point\
    \ (i.e., the mobility anchor) and\n   burdening it with data forwarding and control\
    \ mechanisms for a large\n   number of users.  The mobility anchor is the home\
    \ agent for Mobile\n   IPv6 and the local mobility anchor for PMIPv6.  As stated\
    \ in\n   [RFC7333], centralized mobility solutions are prone to several\n   problems\
    \ and limitations: longer (sub-optimal) routing paths,\n   scalability problems,\
    \ signaling overhead (and most likely a longer\n   associated handover latency),\
    \ more complex network deployment, higher\n   vulnerability due to the existence\
    \ of a potential single point of\n   failure, and lack of granularity of the mobility\
    \ management service\n   (i.e., mobility is offered on a per-node basis because\
    \ it is not\n   possible to define finer granularity policies, for example, on\
    \ a per-\n   application basis).\n   The purpose of DMM is to overcome the limitations\
    \ of the traditional\n   centralized mobility management [RFC7333] [RFC7429];\
    \ the main concept\n   behind DMM solutions is indeed bringing the mobility anchor\
    \ closer to\n   the mobile node (MN).  Following this idea, the central anchor\
    \ is\n   moved to the edge of the network and is deployed in the default\n   gateway\
    \ of the MN.  That is, the first elements that provide IP\n   connectivity to\
    \ a set of MNs are also the mobility managers for those\n   MNs.  In this document,\
    \ we call these entities Mobility Anchors and\n   Access Routers (MAARs).\n  \
    \ This document focuses on network-based DMM; hence, the starting point\n   is\
    \ making PMIPv6 work in a distributed manner [RFC7429].  Mobility is\n   handled\
    \ by the network without the MN's involvement.  But differently\n   from PMIPv6,\
    \ when the MN moves from one access network to another,\n   the router anchoring\
    \ the MN's address may change, hence requiring\n   signaling between the anchors\
    \ to retrieve the MN's previous\n   location(s).  Also, a key aspect of network-based\
    \ DMM is that a\n   prefix pool belongs exclusively to each MAAR in the sense\
    \ that those\n   prefixes are assigned by the MAAR to the MNs attached to it and\
    \ are\n   routable at that MAAR.  Prefixes are assigned to MNs attached to a\n\
    \   MAAR at that time, but remain with those MNs as mobility occurs,\n   remaining\
    \ always routable at that MAAR as well as towards the MN\n   itself.\n   We consider\
    \ partially distributed schemes, where only the data plane\n   is distributed\
    \ among access routers similar to mobile access gateways\n   (MAGs), whereas the\
    \ control plane is kept centralized towards a\n   cardinal node (used as an information\
    \ store), which is discharged\n   from any route management and MN's data forwarding\
    \ tasks.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The following terms used in this document are defined in\
    \ the PMIPv6\n   specification [RFC5213]:\n      BCE:  Binding Cache Entry\n \
    \     LMA:  Local Mobility Anchor\n      MAG:  Mobile Access Gateway\n      MN:\
    \  Mobile Node\n      P-CoA:  Proxy Care-of Address\n      PBA:  Proxy Binding\
    \ Acknowledgement\n      PBU:  Proxy Binding Update\n   The following terms used\
    \ in this document are defined in the Mobile\n   IPv6 (MIPv6) specification [RFC6275]:\n\
    \      CN:  Correspondent Node\n   The following terms are used in this document:\n\
    \   Home Control-Plane Anchor (Home-CPA or H-CPA):\n      The Home-CPA function\
    \ hosts the MN's mobility session.  There can\n      be more than one mobility\
    \ session for an MN, and those sessions\n      may be anchored on the same or\
    \ different Home-CPAs.  The Home-CPA\n      will interface with the Home-DPA for\
    \ managing the forwarding\n      state.\n   Home Data Plane Anchor (Home-DPA or\
    \ H-DPA):\n      The Home-DPA is the topological anchor for the MN's IP addresses\n\
    \      and/or prefixes.  The Home-DPA is chosen by the Home-CPA on a\n      session\
    \ basis.  The Home-DPA is in the forwarding path for all the\n      MN's IP traffic.\n\
    \   Access Control Plane Node (Access-CPN or A-CPN):\n      The Access-CPN is\
    \ responsible for interfacing with the MN's Home-\n      CPA and the Access-DPN.\
    \  The Access-CPN has a protocol interface\n      to the Home-CPA.\n   Access\
    \ Data Plane Node (Access-DPN or A-DPN):\n      The Access-DPN function is hosted\
    \ on the first-hop router where\n      the MN is attached.  This function is not\
    \ hosted on a Layer 2 (L2)\n      bridging device such as an eNode(B) or Access\
    \ Point.\n   The following terms are defined and used in this document:\n   MAAR\
    \ (Mobility Anchor and Access Router):\n      First-hop router where the MNs attach.\
    \  It also plays the role of\n      mobility manager for the IPv6 prefixes it\
    \ anchors, running the\n      functionalities of PMIP's MAG and LMA.  Depending\
    \ on the prefix,\n      it plays the role of Access-DPN, Home-DPA, and Access-CPN.\n\
    \   CMD (Central Mobility Database):\n      The node that stores the BCEs allocated\
    \ for the MNs in the\n      mobility domain.  It plays the role of Home-CPA.\n\
    \   P-MAAR (Previous MAAR):\n      When an MN moves to a new point of attachment,\
    \ a new MAAR might be\n      allocated as its anchor point for future IPv6 prefixes.\
    \  The MAAR\n      that served the MN prior to new attachment becomes the P-MAAR.\
    \  It\n      is still the anchor point for the IPv6 prefixes it had allocated\n\
    \      to the MN in the past and serves as the Home-DPA for flows using\n    \
    \  these prefixes.  There might be several P-MAARs serving an MN in\n      cases\
    \ when the MN is frequently switching points of attachment\n      while maintaining\
    \ long-lasting flows.\n   S-MAAR (Serving MAAR):\n      The MAAR to which the\
    \ MN is currently attached.  Depending on the\n      prefix, it plays the role\
    \ of Access-DPN, Home-DPA, and Access-CPN.\n   Anchoring MAAR:\n      A MAAR anchoring\
    \ an IPv6 prefix used by an MN.\n   DLIF (Distributed Logical Interface):\n  \
    \    It is a logical interface at the IP stack of the MAAR.  For each\n      active\
    \ prefix used by the MN, the S-MAAR has a DLIF configured\n      (associated with\
    \ each MAAR still anchoring flows).  In this way,\n      an S-MAAR exposes itself\
    \ towards each MN as multiple routers, one\n      as itself and one per P-MAAR.\n"
- title: 3.  PMIPv6 DMM Extensions
  contents:
  - "3.  PMIPv6 DMM Extensions\n   The solution consists of decoupling the entities\
    \ that participate in\n   the data and the control planes: the data plane becomes\
    \ distributed\n   and managed by the MAARs near the edge of the network, while\
    \ the\n   control plane, besides those on the MAARs, relies on a central entity\n\
    \   called the Central Mobility Database (CMD).  In the proposed\n   architecture,\
    \ the hierarchy present in PMIPv6 between LMA and MAG is\n   preserved but with\
    \ the following substantial variations:\n   *  The LMA is discharged from the\
    \ data forwarding role; only the\n      Binding Cache and its management operations\
    \ are maintained.\n      Hence, the LMA is renamed as \"CMD\", which is therefore\
    \ a Home-CPA.\n      Also, the CMD is able to send and parse both PBU and PBA\
    \ messages.\n   *  The MAG is enriched with the LMA functionalities, hence the\
    \ name\n      Mobility Anchor and Access Router (MAAR).  It maintains a local\n\
    \      Binding Cache for the MNs that are attached to it, and it is able\n   \
    \   to send and parse PBU and PBA messages.\n   *  The Binding Cache will be extended\
    \ to include information\n      regarding P-MAARs where the MN was anchored and\
    \ still retains\n      active data sessions.\n   *  Each MAAR has a unique set\
    \ of global prefixes (which are\n      configurable) that can be allocated by\
    \ the MAAR to the MNs but\n      must be exclusive to that MAAR, i.e., no other\
    \ MAAR can allocate\n      the same prefixes.\n   The MAARs leverage the CMD to\
    \ access and update information related\n   to the MNs, which is stored as mobility\
    \ sessions; hence, a\n   centralized node maintains a global view of the network\
    \ status.  The\n   CMD is queried whenever an MN is detected joining/leaving the\n\
    \   mobility domain.  It might be a fresh attachment, a detachment, or a\n   handover,\
    \ but as MAARs are not aware of past information related to a\n   mobility session,\
    \ they contact the CMD to retrieve the data of\n   interest and eventually take\
    \ the appropriate action.  The procedure\n   adopted for the query and the message\
    \ exchange sequence might vary to\n   optimize the update latency and/or the signaling\
    \ overhead.  Here, one\n   method for the initial registration and three different\
    \ approaches\n   for updating the mobility sessions using PBUs and PBAs are presented.\n\
    \   Each approach assigns a different role to the CMD:\n   *  The CMD is a PBU/PBA\
    \ relay;\n   *  The CMD is only a MAAR locator;\n   *  The CMD is a PBU/PBA proxy.\n\
    \   The solution described in this document allows per-prefix anchoring\n   decisions\
    \ -- for example, to support the anchoring of some flows at a\n   central Home-DPA\
    \ (like a traditional LMA) or to enable an application\n   to switch to the locally\
    \ anchored prefix to gain route optimization,\n   as indicated in [RFC8563]. \
    \ This type of per-prefix treatment would\n   potentially require additional extensions\
    \ to the MAARs and signaling\n   between the MAARs and the MNs to convey the per-flow\
    \ anchor\n   preference (central, distributed), which are not covered in this\n\
    \   document.\n   Note that an MN may move across different MAARs, which might\
    \ result\n   in several P-MAARs existing at a given moment of time, each of them\n\
    \   anchoring a different prefix used by the MN.\n"
- title: 3.1.  Initial Registration
  contents:
  - "3.1.  Initial Registration\n   Initial registration is performed when an MN attaches\
    \ to a network\n   for the first time (rather than attaching to a new network\
    \ after\n   moving from a previous one).\n   In this description (shown in Figure\
    \ 1), it is assumed that:\n   1.  The MN is attaching to MAAR1.\n   2.  The MN\
    \ is authorized to attach to the network.\n   Upon MN attachment, the following\
    \ operations take place:\n   1.  MAAR1 assigns a global IPv6 prefix from its own\
    \ prefix pool to\n       the MN (Pref1).  It also stores this prefix (Pref1) in\
    \ the\n       locally allocated temporary BCE.\n   2.  MAAR1 sends a PBU [RFC5213]\
    \ with Pref1 and the MN's MN-ID to the\n       CMD.\n   3.  Since this is an initial\
    \ registration, the CMD stores a BCE\n       containing the MN-ID, Pref1, and\
    \ MAAR1's address (as a Proxy-CoA)\n       as the primary fields.\n   4.  The\
    \ CMD replies with a PBA with the usual options defined in\n       PMIPv6 [RFC5213],\
    \ meaning that the MN's registration is fresh and\n       no past status is available.\n\
    \   5.  MAAR1 stores the BCE described in (1) and unicasts a Router\n       Advertisement\
    \ (RA) to the MN with Pref1.\n   6.  The MN uses Pref1 to configure an IPv6 address\
    \ (IP1) (e.g., with\n       stateless address autoconfiguration (SLAAC)).\n  \
    \ Note that:\n   1.  Alternative IPv6 autoconfiguration mechanisms can also be\
    \ used,\n       though this document describes the SLAAC-based one.\n   2.  IP1\
    \ is routable at MAAR1 in the sense that it is on the path of\n       packets\
    \ addressed to the MN.\n   3.  MAAR1 acts as a plain router for packets destined\
    \ to the MN as no\n       encapsulation or special handling takes place.\n   In\
    \ the diagram shown in Figure 1 (and subsequent diagrams), the flow\n   of packets\
    \ is presented using '*'.\n     |MAAR1|      |CMD|                |CN|\n     \
    \  MN           |                   *     +---+\n     attach.        |       \
    \        *****    _|CMD|_\n   detection        |         flow1 *       / +-+-+\
    \ \\\n    local BCE       |               *     /     |     \\\n    allocation\
    \      |               *    /      |      \\\n        |--- PBU -->|          \
    \ +---*-+-'    +--+--+    `+-----+\n        |          BCE          |   * |  \
    \    |     |     |     |\n        |        creation       |MAAR1+------+MAAR2+-----+MAAR3|\n\
    \        |<-- PBA ---|           |   * |      |     |     |     |\n    local BCE\
    \       |           +---*-+      +-----+     +-----+\n    finalized       |  \
    \             *\n        |           |         Pref1 *\n     Operations sequence\
    \                  Packet flow\n                 Figure 1: First Attachment to\
    \ the Network\n   Note that the registration process does not change regardless\
    \ of the\n   CMD's modes (relay, locator, or proxy) described in the following\n\
    \   sections.  The procedure is depicted in Figure 1.\n"
- title: 3.2.  The CMD as PBU/PBA Relay
  contents:
  - "3.2.  The CMD as PBU/PBA Relay\n   Upon MN mobility, if the CMD behaves as a\
    \ PBU/PBA relay, the\n   following operations take place:\n   1.  When the MN\
    \ moves from its current point of attachment and\n       attaches to MAAR2 (now\
    \ the S-MAAR), MAAR2 reserves an IPv6 prefix\n       (Pref2), stores a temporary\
    \ BCE, and sends a PBU to the CMD for\n       registration.\n   2.  Upon PBU reception\
    \ and BC lookup, the CMD retrieves an already\n       existing entry for the MN\
    \ and binds the MN-ID to its former\n       location; thus, the CMD forwards the\
    \ PBU to the MAAR indicated as\n       Proxy-CoA (MAAR1) and includes a new mobility\
    \ option to\n       communicate the S-MAAR's global address to MAAR1 (defined\
    \ as the\n       Serving MAAR option in Section 4.6).  The CMD updates the P-CoA\n\
    \       field in the BCE related to the MN with the S-MAAR's address.\n   3. \
    \ Upon PBU reception, MAAR1 can install a tunnel on its side\n       towards MAAR2\
    \ and the related routes for Pref1.  Then MAAR1\n       replies to the CMD with\
    \ a PBA (including the option mentioned\n       before) to ensure that the new\
    \ location has successfully changed.\n       The PBA contains the prefix anchored\
    \ at MAAR1 in the Home Network\n       Prefix option.\n   4.  The CMD, after receiving\
    \ the PBA, updates the BCE and populates\n       an instance of the P-MAAR list.\
    \  The P-MAAR list is an additional\n       field on the BCE that contains an\
    \ element for each P-MAAR\n       involved in the MN's mobility session.  The\
    \ list element contains\n       the P-MAAR's global address and the prefix it\
    \ has delegated.\n       Also, the CMD sends a PBA to the new S-MAAR, which contains\
    \ the\n       previous Proxy-CoA and the prefix anchored to it embedded into a\n\
    \       new mobility option called the Previous MAAR option (defined in\n    \
    \   Section 4.5).  Then, upon PBA arrival, a bidirectional tunnel can\n      \
    \ be established between the two MAARs, and new routes are set\n       appropriately\
    \ to recover the IP flow(s) carrying Pref1.\n   5.  Now, packets destined for\
    \ Pref1 are first received by MAAR1,\n       encapsulated into the tunnel, and\
    \ forwarded to MAAR2, which\n       finally delivers them to their destination.\
    \  In the uplink, when\n       the MN transmits packets using Pref1 as a source\
    \ address, they\n       are sent to MAAR2 (as it is the MN's new default gateway)\
    \ and\n       then tunneled to MAAR1, which routes them towards the next hop to\n\
    \       the destination.  Conversely, packets carrying Pref2 are routed\n    \
    \   by MAAR2 without any special packet handling both for the uplink\n       and\
    \ downlink.\n   |MAAR1|      |CMD|      |MAAR2|           |CN|            |CN|\n\
    \      |           |          MN               *     +---+     *\n      |    \
    \       |        attach.        *****    _|CMD|_    *\n      |           |   \
    \       det.   flow1 *       / +-+-+ \\   *flow2\n      |           |<-- PBU ---|\
    \           *      /    |    \\  *\n      |          BCE          |          \
    \ *     /     | *******\n      |        check+         |           *    /    \
    \  | *    \\\n      |        update         |       +---*-+-'    +--+-*+    `+-----+\n\
    \      |<-- PBU*---|           |       |   * |      |    *|     |     |\n   route\
    \          |           |       |MAAR1|______|MAAR2+-----+MAAR3|\n   update   \
    \      |           |       |   **(______)**  *|     |     |\n      |--- PBA*-->|\
    \           |       +-----+      +-*--*+     +-----+\n      |         BCE    \
    \       |                      *  *\n      |        update         |         \
    \       Pref1 *  *Pref2\n      |           |--- PBA*-->|                     +*--*+\n\
    \      |           |         route         ---move-->|*MN*|\n      |         \
    \  |         update                  +----+\n         Operations sequence    \
    \              Data Packet flow\n   PBU/PBA messages with * contain\n        a\
    \ new mobility option\n             Figure 2: Scenario after a Handover, CMD as\
    \ Relay\n   For MN's next movements, the process is repeated, but the number of\n\
    \   P-MAARs involved increases (according to the number of prefixes that\n   the\
    \ MN wishes to maintain).  Indeed, once the CMD receives the first\n   PBU from\
    \ the new S-MAAR, it forwards copies of the PBU to all the\n   P-MAARs indicated\
    \ in the BCE, namely the P-MAAR registered as the\n   current P-CoA (i.e., the\
    \ MAAR prior to handover) plus the ones in the\n   P-MAAR list.  Those P-MAARs\
    \ reply with a PBA to the CMD, which\n   aggregates all of the PBAs into one PBA\
    \ to notify the S-MAAR, which\n   finally can establish the tunnels with the P-MAARs.\n\
    \   It should be noted that this design separates the mobility management\n  \
    \ at the prefix granularity, and it can be tuned in order to erase old\n   mobility\
    \ sessions when not required, while the MN is reachable\n   through the latest\
    \ prefix acquired.  Moreover, the latency associated\n   with the mobility update\
    \ is bound to the PBA sent by the furthest\n   P-MAAR, in terms of RTT, that takes\
    \ the longest time to reach the\n   CMD.  The drawback can be mitigated by introducing\
    \ a timeout at the\n   CMD, by which, after its expiration, all the PBAs so far\
    \ collected\n   are transmitted, and the remaining are sent later upon their arrival.\n\
    \   Note that, in this case, the S-MAAR might receive multiple PBAs from\n   the\
    \ CMD in response to a PBU.  The CMD SHOULD follow the\n   retransmissions and\
    \ rate-limiting considerations described in\n   Section 3.6, especially when aggregating\
    \ and relaying PBAs.\n   When there are multiple P-MAARs, e.g., k MAARs, a single\
    \ PBU received\n   by the CMD triggers k outgoing packets from a single incoming\
    \ packet.\n   This may lead to packet bursts originating from the CMD, albeit\
    \ to\n   different targets.  Pacing mechanisms MUST be introduced to avoid\n \
    \  bursts on the outgoing link.\n"
- title: 3.3.  The CMD as MAAR Locator
  contents:
  - "3.3.  The CMD as MAAR Locator\n   The handover latency experienced in the approach\
    \ shown before can be\n   reduced if the P-MAARs are allowed to directly signal\
    \ their\n   information to the new S-MAAR.  This procedure reflects what was\n\
    \   described in Section 3.2 up to the moment the P-MAAR receives the PBU\n  \
    \ with the Serving MAAR option.  At that point, a P-MAAR is aware of\n   the new\
    \ MN's location (because of the S-MAAR's address in the Serving\n   MAAR option),\
    \ and, besides sending a PBA to the CMD, it also sends a\n   PBA to the S-MAAR,\
    \ including the prefix it is anchoring.  This latter\n   PBA does not need to\
    \ include new options, as the prefix is embedded\n   in the Home Network Prefix\
    \ (HNP) option and the P-MAAR's address is\n   taken from the message's source\
    \ address.  The CMD is released from\n   forwarding the PBA to the S-MAAR as the\
    \ latter receives a copy\n   directly from the P-MAAR with the necessary information\
    \ to build the\n   tunnels and set the appropriate routes.  Figure 3 illustrates\
    \ the new\n   message sequence.  The data forwarding is unaltered.\n   |MAAR1|\
    \      |CMD|      |MAAR2|           |CN|            |CN|\n      |           |\
    \          MN               *     +---+     *\n      |           |        attach.\
    \        *****    _|CMD|_    *\n      |           |          det.   flow1 *  \
    \     / +-+-+ \\   *flow2\n      |           |<-- PBU ---|           *      /\
    \    |    \\  *\n      |          BCE          |           *     /     | *******\n\
    \      |        check+         |           *    /      | *    \\\n      |    \
    \    update         |       +---*-+-'    +--+-*+    `+-----+\n      |<-- PBU*---|\
    \           |       |   * |      |    *|     |     |\n   route          |    \
    \       |       |MAAR1|______|MAAR2+-----+MAAR3|\n   update         |        \
    \   |       |   **(______)**  *|     |     |\n      |--------- PBA -------->|\
    \       +-----+      +-*--*+     +-----+\n      |--- PBA*-->|         route  \
    \                  *  *\n      |          BCE        update             Pref1\
    \ *  *Pref2\n      |         update        |                     +*--*+\n    \
    \      Operations sequence                  Data Packet flow\n   PBU/PBA messages\
    \ with * contain\n        a new mobility option\n            Figure 3: Scenario\
    \ after a Handover, CMD as Locator\n"
- title: 3.4.  The CMD as PBU/PBA Proxy
  contents:
  - "3.4.  The CMD as PBU/PBA Proxy\n   A further enhancement of previous solutions\
    \ can be achieved when the\n   CMD sends the PBA to the new S-MAAR before notifying\
    \ the P-MAARs of\n   the location change.  Indeed, when the CMD receives the PBU\
    \ for the\n   new registration, it is already in possession of all the information\n\
    \   that the new S-MAAR requires to set up the tunnels and the routes.\n   Thus,\
    \ the PBA is sent to the S-MAAR immediately after a PBU is\n   received, including\
    \ the Previous MAAR option in this case.  In\n   parallel, a PBU is sent by the\
    \ CMD to the P-MAARs containing the\n   Serving MAAR option to notify them about\
    \ the new MN's location so\n   that they receive the information to establish\
    \ the tunnels and routes\n   on their side.  When P-MAARs complete the update,\
    \ they send a PBA to\n   the CMD to indicate that the operation has concluded\
    \ and the\n   information is updated in all network nodes.  This procedure is\n\
    \   obtained from the first procedure rearranging the order of the\n   messages,\
    \ but the parameters communicated are the same.  This scheme\n   is depicted in\
    \ Figure 4, where, again, the data forwarding is kept\n   untouched.\n   |MAAR1|\
    \      |CMD|      |MAAR2|           |CN|            |CN|\n      |           |\
    \          MN               *     +---+     *\n      |           |        attach.\
    \        *****    _|CMD|_    *\n      |           |          det.   flow1 *  \
    \     / +-+-+ \\   *flow2\n      |           |<-- PBU ---|           *      /\
    \    |    \\  *\n      |          BCE          |           *     /     | *******\n\
    \      |        check+         |           *    /      | *    \\\n      |    \
    \    update         |       +---*-+-'    +--+-*+    `+-----+\n      |<-- PBU*---x---\
    \ PBA*-->|       |   * |      |    *|     |     |\n   route          |       \
    \  route     |MAAR1|______|MAAR2+-----+MAAR3|\n   update         |         update\
    \    |   **(______)**  *|     |     |\n      |--- PBA*-->|           |       +-----+\
    \      +-*--*+     +-----+\n      |          BCE          |                  \
    \    *  *\n      |         update        |                Pref1 *  *Pref2\n  \
    \        Operations sequence                 Data Packet flow\n   PBU/PBA messages\
    \ with * contain\n        a new mobility option\n             Figure 4: Scenario\
    \ after a Handover, CMD as Proxy\n"
- title: 3.5.  De-registration
  contents:
  - "3.5.  De-registration\n   The de-registration mechanism devised for PMIPv6 cannot\
    \ be used as is\n   in this solution because each MAAR handles an independent\
    \ mobility\n   session (i.e., a single prefix or a set of prefixes) for a given\
    \ MN,\n   whereas the aggregated session is stored at the CMD.  Indeed, if a\n\
    \   P-MAAR initiates a de-registration procedure because the MN is no\n   longer\
    \ present on the MAAR's access link, it removes the routing\n   state for the\
    \ prefix(es), that would be deleted by the CMD as well,\n   hence defeating any\
    \ prefix continuity attempt.  The simplest approach\n   to overcome this limitation\
    \ is to deny a P-MAAR to de-register a\n   prefix, that is, allowing only an S-MAAR\
    \ to de-register the whole MN\n   session.  This can be achieved by first removing\
    \ any L2 detachment\n   event so that de-registration is triggered only when the\
    \ binding\n   lifetime expires, hence providing a guard interval for the MN to\n\
    \   connect to a new MAAR.  Then, a change in the MAAR operations is\n   required,\
    \ and at this stage, two possible solutions can be deployed:\n   *  A P-MAAR stops\
    \ the BCE timer upon receiving a PBU from the CMD\n      containing a \"Serving\
    \ MAAR\" option.  In this way, only the S-MAAR\n      is allowed to de-register\
    \ the mobility session, arguing that the\n      MN definitely left the domain.\n\
    \   *  P-MAARs can, upon BCE expiry, send de-registration messages to the\n  \
    \    CMD, which, instead of acknowledging the message with a 0\n      lifetime,\
    \ sends back a PBA with a non-zero lifetime, hence\n      renewing the session\
    \ if the MN is still connected to the domain.\n"
- title: 3.6.  Retransmissions and Rate Limiting
  contents:
  - "3.6.  Retransmissions and Rate Limiting\n   The node sending PBUs (the CMD or\
    \ S-MAAR) SHOULD make use of the\n   timeout to also deal with missing PBAs (to\
    \ retransmit PBUs).  The\n   INITIAL_BINDACK_TIMEOUT [RFC6275] SHOULD be used\
    \ for configuring the\n   retransmission timer.  The retransmissions by the node\
    \ MUST use an\n   exponential backoff process in which the timeout period is doubled\n\
    \   upon each retransmission until either the node receives a response or\n  \
    \ the timeout period reaches the value MAX_BINDACK_TIMEOUT [RFC6275].\n   The\
    \ node MAY continue to send these messages at this slower rate\n   indefinitely.\
    \  The node MUST NOT send PBU messages to a particular\n   node more than MAX_UPDATE_RATE\
    \ times within a second [RFC6275].\n"
- title: 3.7.  The Distributed Logical Interface (DLIF) Concept
  contents:
  - "3.7.  The Distributed Logical Interface (DLIF) Concept\n   One of the main challenges\
    \ of a network-based DMM solution is how to\n   allow a MN to simultaneously send/receive\
    \ traffic that is anchored at\n   different MAARs and how to influence the MN's\
    \ selection process of\n   its source IPv6 address for a new flow without requiring\
    \ special\n   support from the MN's IP stack.  This document defines the DLIF,\n\
    \   which is a software construct in the MAAR that can easily hide the\n   change\
    \ of associated anchors from the MN.\n    (                      Operator's  \
    \                   )\n    (                         core                    \
    \    )\n       +---------------+     tunnel    +---------------+\n       |   IP\
    \  stack   |===============|   IP  stack   |\n       |    mn1mar1    |--+ (DLIFs)\
    \ +--|mn1mar1|mn1mar2|--+\n       | phy interface |  |         |  | phy interface\
    \ |  |\n             MAAR1       (o)       (o)       MAAR2       (o)\n       \
    \                    prefA::/64     x         x   prefB::/64\n               \
    \          (AdvPrefLft=0)     x     x\n         Figure 5: DLIF: Exposing Multiple\
    \ Routers (One per P-MAAR)\n   The basic idea of the DLIF concept is the following:\
    \ each S-MAAR\n   exposes itself to a given MN as multiple routers, one per P-MAAR\n\
    \   associated with the MN.  Let's consider the example shown in\n   Figure 5:\
    \ MN1 initially attaches to MAAR1, configuring an IPv6\n   address (prefA::MN1)\
    \ from a prefix locally anchored at MAAR1\n   (prefA::/64).  At this stage, MAAR1\
    \ plays the role of both anchoring\n   and serving MAAR and also behaves as a\
    \ plain IPv6 access router.\n   MAAR1 creates a DLIF to communicate (through a\
    \ point-to-point link)\n   with MN1, exposing itself as a (logical) router with\
    \ specific MAC and\n   IPv6 addresses (e.g., prefA::MAAR1/64 and fe80::MAAR1/64)\
    \ using the\n   DLIF mn1mar1.  As explained below, these addresses represent the\n\
    \   \"logical\" identity of MAAR1 for MN1 and will \"follow\" the MN while\n \
    \  roaming within the domain (note that the place where all this\n   information\
    \ is maintained and updated is out of scope of this\n   document; potential examples\
    \ are to keep it on the home subscriber\n   server -- HSS -- or the user's profile).\n\
    \   If MN1 moves and attaches to a different MAAR of the domain (MAAR2 in\n  \
    \ the example of Figure 5), this MAAR will create a new logical\n   interface\
    \ (mn1mar2) to expose itself to MN1, providing it with a\n   locally anchored\
    \ prefix (prefB::/64).  In this case, since the MN1\n   has another active IPv6\
    \ address anchored at MAAR1, MAAR2 also needs\n   to create an additional logical\
    \ interface configured to resemble the\n   one used by MAAR1 to communicate with\
    \ MN1.  In this example, MAAR1 is\n   the only P-MAAR (MAAR2 is the same as S-MAAR),\
    \ so only the logical\n   interface mn1mar1 is created.  However, the same process\
    \ would be\n   repeated if more P-MAARs were involved.  In order to keep the prefix\n\
    \   anchored at MAAR1 reachable, a tunnel between MAAR1 and MAAR2 is\n   established\
    \ and the routing is modified accordingly.  The PBU/PBA\n   signaling is used\
    \ to set up the bidirectional tunnel between MAAR1\n   and MAAR2, and it might\
    \ also be used to convey the information about\n   the prefix(es) anchored at\
    \ MAAR1 and the addresses of the associated\n   DLIF (i.e., mn1mar1) to MAAR2.\n\
    \   |                  MAAR1                   | |         MAAR2        |\n  \
    \ ||||mn3mar1||mn3mar2||||mn2mar1||mn2mar2|||| ||||mn1mar1||mn1mar2||||\n   ||||\
    \ LMAC1 || LMAC2 |||| LMAC3 || LMAC4 |||| |||| LMAC5 || LMAC6 ||||\n   |||   \
    \ LIFs of MN3   ||    LIFs of MN2   ||| |||   LIFs of MN1    |||\n   ||      \
    \        MAC1   (phy if MAAR1)     || || MAC2 (phy if MAAR2)||\n             \
    \          x        x                            x\n                      x  \
    \        x                          x\n                    (o)          (o)  \
    \                    (o)\n                  | MN3 |      | MN2 |             \
    \     | MN1 |\n              Figure 6: Distributed Logical Interface Concept\n\
    \   Figure 6 shows the logical interface concept in more detail.  The\n   figure\
    \ shows two MAARs and three MNs.  MAAR1 is currently serving MN2\n   and MN3,\
    \ while MAAR2 is serving MN1.  Note that an S-MAAR always\n   plays the role of\
    \ anchoring MAAR for the attached (served) MNs.  Each\n   MAAR has one single\
    \ physical wireless interface as depicted in this\n   example.\n   As discussed\
    \ before, each MN always \"sees\" multiple logical routers\n   -- one per anchoring\
    \ MAAR -- independently of its currently S-MAAR.\n   From the point of view of\
    \ the MN, these MAARs are portrayed as\n   different routers, although the MN\
    \ is physically attached to a single\n   interface.  This is achieved by the S-MAAR\
    \ configuring different\n   logical interfaces.  MN1 is currently attached to\
    \ MAAR2 (i.e., MAAR2\n   is its S-MAAR) and, therefore, it has configured an IPv6\
    \ address from\n   MAAR2's pool (e.g., prefB::/64).  MAAR2 has set up a logical\n\
    \   interface (mn1mar2) on top of its wireless physical interface (phy if\n  \
    \ MAAR2), which is used to serve MN1.  This interface has a logical MAC\n   address\
    \ (LMAC6) that is different from the hardware MAC address\n   (MAC2) of the physical\
    \ interface of MAAR2.  Over the mn1mar2\n   interface, MAAR2 advertises its locally\
    \ anchored prefix prefB::/64.\n   Before attaching to MAAR2, MN1 was attached\
    \ to MAAR1 and configured a\n   locally anchored address at that MAAR, which is\
    \ still being used by\n   MN1 in active communications.  MN1 keeps \"seeing\"\
    \ an interface\n   connecting to MAAR1 as if it were directly connected to the\
    \ two\n   MAARs.  This is achieved by the S-MAAR (MAAR2) configuring an\n   additional\
    \ DLIF, mn1mar1, which behaves as the logical interface\n   configured by MAAR1\
    \ when MN1 was attached to it.  This means that\n   both the MAC and IPv6 addresses\
    \ configured on this logical interface\n   remain the same regardless of the physical\
    \ MAAR that is serving the\n   MN.  The information required by an S-MAAR to properly\
    \ configure this\n   logical interfaces can be obtained in different ways: as\
    \ part of the\n   information conveyed in the PBA, from an external database (e.g.,\
    \ the\n   HSS) or by other means.  As shown in the figure, each MAAR may have\n\
    \   several logical interfaces associated with each attached MN and\n   always\
    \ has at least one (since an S-MAAR is also an anchoring MAAR\n   for the attached\
    \ MN).\n   In order to enforce the use of the prefix locally anchored at the\n\
    \   S-MAAR, the RAs sent over those logical interfaces playing the role\n   of\
    \ anchoring MAARs (different from the serving one) include a zero\n   preferred\
    \ prefix lifetime (and a non-zero valid prefix lifetime, so\n   the prefix remains\
    \ valid while being deprecated).  The goal is to\n   deprecate the prefixes delegated\
    \ by these MAARs (so that they will no\n   longer be serving the MN).  Note that\
    \ ongoing communications may keep\n   on using those addresses even if they are\
    \ deprecated, so this only\n   affects the establishment of new sessions.\n  \
    \ The DLIF concept also enables the following use case: suppose that\n   access\
    \ to a local IP network is provided by a given MAAR (e.g., MAAR1\n   in the example\
    \ shown in Figure 5) and that the resources available at\n   that network cannot\
    \ be reached from outside the local network (e.g.,\n   cannot be accessed by an\
    \ MN attached to MAAR2).  This is similar to\n   the local IP access scenario\
    \ considered by 3GPP, where a local\n   gateway node is selected for sessions\
    \ requiring access to services\n   provided locally (instead of going through\
    \ a central gateway).  The\n   goal is to allow an MN to be able to roam while\
    \ still being able to\n   have connectivity to this local IP network.  The solution\
    \ adopted to\n   support this case makes use of more specific routes, as discussed\
    \ in\n   RFC 4191 [RFC4191], when the MN moves to a MAAR different from the\n\
    \   one providing access to the local IP network (MAAR1 in the example).\n   These\
    \ routes are advertised through the DLIF where the MAAR is\n   providing access\
    \ to the local network (MAAR1 in this example).  In\n   this way, if MN1 moves\
    \ from MAAR1 to MAAR2, any active session that\n   MN1 may have with a node on\
    \ the local network connected to MAAR1 will\n   survive via the tunnel between\
    \ MAAR1 and MAAR2.  Also, any potential\n   future connection attempt to the local\
    \ network will be supported even\n   though MN1 is no longer attached to MAAR1,\
    \ so long as a source\n   address configured from MAAR1 is selected for new connections\
    \ (see\n   [RFC6724], rule 5.5).\n"
- title: 4.  Message Format
  contents:
  - "4.  Message Format\n   This section defines extensions to the PMIPv6 [RFC5213]\
    \ protocol\n   messages.\n"
- title: 4.1.  Proxy Binding Update
  contents:
  - "4.1.  Proxy Binding Update\n   A new flag (D) is included in the PBU to indicate\
    \ that the PBU is\n   coming from a MAAR or a CMD and not from a MAG.  The rest\
    \ of the PBU\n   format remains the same as defined in [RFC5213].\n   0      \
    \         1               2               3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |A|H|L|K|M|R|P|F|T|B|S|D| Rsrvd |    \
    \        Lifetime           |\n   .                        Mobility Options  \
    \                     .\n   DMM Flag (D)\n      The D flag is set to indicate\
    \ to the receiver of the message that\n      the PBU is from a MAAR or a CMD.\
    \  When an LMA that does not\n      support the extensions described in this document\
    \ receives a\n      message with the D flag set, the PBU in that case MUST NOT\
    \ be\n      processed by the LMA, and an error MUST be returned.\n   Mobility\
    \ Options\n      Variable-length field of such length that the complete Mobility\n\
    \      Header is an integer that is a multiple of 8 octets long.  This\n     \
    \ field contains zero or more TLV-encoded mobility options.  The\n      encoding\
    \ and format of the defined options are described in\n      Section 6.2 of [RFC6275].\
    \  The receiving node MUST ignore and skip\n      any options that it does not\
    \ understand.\n"
- title: 4.2.  Proxy Binding Acknowledgement
  contents:
  - "4.2.  Proxy Binding Acknowledgement\n   A new flag (D) is included in the PBA\
    \ to indicate that the sender\n   supports operating as a MAAR or CMD.  The rest\
    \ of the PBA format\n   remains the same as defined in [RFC5213].\n    0     \
    \              1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |         Sequence #   \
    \         |           Lifetime            |\n   .                        Mobility\
    \ Options                       .\n   DMM Flag (D)\n      The D flag is set to\
    \ indicate that the sender of the message\n      supports operating as a MAAR\
    \ or CMD.  When a MAG that does not\n      support the extensions described in\
    \ this document receives a\n      message with the D flag set, it MUST ignore\
    \ the message, and an\n      error MUST be returned.\n   Mobility Options\n  \
    \    Variable-length field of such length that the complete Mobility\n      Header\
    \ is an integer multiple of 8 octets long.  This field\n      contains zero or\
    \ more TLV-encoded mobility options.  The encoding\n      and format of the defined\
    \ options are described in Section 6.2 of\n      [RFC6275].  The MAAR MUST ignore\
    \ and skip any options that it does\n      not understand.\n"
- title: 4.3.  Anchored Prefix Option
  contents:
  - "4.3.  Anchored Prefix Option\n   A new Anchored Prefix option is defined for\
    \ use with the PBU and PBA\n   messages exchanged between MAARs and CMDs.  Therefore,\
    \ this option\n   can only appear if the D bit is set in a PBU/PBA.  This option\
    \ is\n   used for exchanging the MN's prefix anchored at the anchoring MAAR.\n\
    \   There can be multiple Anchored Prefix options present in the message.\n  \
    \ The Anchored Prefix option has an alignment requirement of 8n+4.  Its\n   format\
    \ is as follows:\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   |      Type     |   Length      |   Reserved    | Prefix Length |\n   +  \
    \                      Anchored Prefix                        +\n   Type\n   \
    \   65\n   Length\n      8-bit unsigned integer indicating the length of the option\
    \ in\n      octets, excluding the type and length fields.  This field MUST be\n\
    \      set to 18.\n   Reserved\n      This field is unused at the time of publication.\
    \  The value MUST\n      be initialized to 0 by the sender and MUST be ignored\
    \ by the\n      receiver.\n   Prefix Length\n      8-bit unsigned integer indicating\
    \ the prefix length in bits of the\n      IPv6 prefix contained in the option.\n\
    \   Anchored Prefix\n      A 16-octet field containing the MN's IPv6 Anchored\
    \ Prefix.  Only\n      the first Prefix Length bits are valid for the Anchored\
    \ Prefix\n      option.  The rest of the bits MUST be ignored.\n"
- title: 4.4.  Local Prefix Option
  contents:
  - "4.4.  Local Prefix Option\n   A new Local Prefix option is defined for use with\
    \ the PBU and PBA\n   messages exchanged between MAARs or between a MAAR and a\
    \ CMD.\n   Therefore, this option can only appear if the D bit is set in a PBU/\n\
    \   PBA.  This option is used for exchanging a prefix of a local network\n   that\
    \ is only reachable via the anchoring MAAR.  There can be multiple\n   Local Prefix\
    \ options present in the message.\n   The Local Prefix option has an alignment\
    \ requirement of 8n+4.  Its\n   format is as follows:\n    0                 \
    \  1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |      Type     |   Length      |  \
    \ Reserved    | Prefix Length |\n   +                         Local Prefix   \
    \                       +\n   Type\n      66\n   Length\n      8-bit unsigned\
    \ integer indicating the length of the option in\n      octets, excluding the\
    \ type and length fields.  This field MUST be\n      set to 18.\n   Reserved\n\
    \      This field is unused at the time of publication.  The value MUST\n    \
    \  be initialized to 0 by the sender and MUST be ignored by the\n      receiver.\n\
    \   Prefix Length\n      8-bit unsigned integer indicating the prefix length in\
    \ bits of the\n      IPv6 prefix contained in the option.\n   Local Prefix\n \
    \     A 16-octet field containing the IPv6 Local Prefix.  Only the first\n   \
    \   Prefix Length bits are valid for the IPv6 Local Prefix.  The rest\n      of\
    \ the bits MUST be ignored.\n"
- title: 4.5.  Previous MAAR Option
  contents:
  - "4.5.  Previous MAAR Option\n   This new option is defined for use with the PBA\
    \ messages exchanged by\n   the CMD to a MAAR.  This option is used to notify\
    \ the S-MAAR about\n   the P-MAAR's global address and the prefix anchored to\
    \ it.  There can\n   be multiple Previous MAAR options present in the message.\n\
    \   The Previous MAAR option has an alignment requirement of 8n+4.  Its\n   format\
    \ is as follows:\n    0                   1                   2              \
    \     3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   |      Type     |     Length    |   Reserved    | Prefix Length |\n   +  \
    \                   Previous MAAR                             +\n   +        \
    \            Home Network Prefix                        +\n   Type\n      67\n\
    \   Length\n      8-bit unsigned integer indicating the length of the option in\n\
    \      octets, excluding the type and length fields.  This field MUST be\n   \
    \   set to 34.\n   Reserved\n      This field is unused at the time of publication.\
    \  The value MUST\n      be initialized to 0 by the sender and MUST be ignored\
    \ by the\n      receiver.\n   Prefix Length\n      8-bit unsigned integer indicating\
    \ the prefix length in bits of the\n      IPv6 prefix contained in the option.\n\
    \   Previous MAAR\n      A 16-octet field containing the P-MAAR's IPv6 global\
    \ address.\n   Home Network Prefix\n      A 16-octet field containing the MN's\
    \ IPv6 Home Network Prefix.\n      Only the first Prefix Length bits are valid\
    \ for the MN's IPv6 Home\n      Network Prefix.  The rest of the bits MUST be\
    \ ignored.\n"
- title: 4.6.  Serving MAAR Option
  contents:
  - "4.6.  Serving MAAR Option\n   This new option is defined for use with the PBU\
    \ message exchanged\n   between the CMD and a P-MAAR.  This option is used to\
    \ notify the\n   P-MAAR about the current S-MAAR's global address.  Its format\
    \ is as\n   follows:\n   The Serving MAAR option has an alignment requirement\
    \ of 8n+6.  Its\n   format is as follows:\n    0                   1         \
    \          2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +                     S-MAAR's Address         \
    \                 +\n   Type\n      68\n   Length\n      8-bit unsigned integer\
    \ indicating the length of the option in\n      octets, excluding the type and\
    \ length fields.  This field MUST be\n      set to 16.\n   Serving MAAR\n    \
    \  A 16-octet field containing the S-MAAR's IPv6 global address.\n"
- title: 4.7.  DLIF Link-Local Address Option
  contents:
  - "4.7.  DLIF Link-Local Address Option\n   A new DLIF Link-Local Address option\
    \ is defined for use with the PBA\n   message exchanged between MAARs and between\
    \ a MAAR and a CMD.  This\n   option is used for exchanging the link-local address\
    \ of the DLIF to\n   be configured on the S-MAAR so it resembles the DLIF configured\
    \ on\n   the P-MAAR.\n   The DLIF Link-Local Address option has an alignment requirement\
    \ of\n   8n+6.  Its format is as follows:\n    0                   1         \
    \          2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +                  DLIF Link-Local Address     \
    \                 +\n   Type\n      69\n   Length\n      8-bit unsigned integer\
    \ indicating the length of the option in\n      octets, excluding the type and\
    \ length fields.  This field MUST be\n      set to 16.\n   DLIF Link-Local Address\n\
    \      A 16-octet field containing the link-local address of the logical\n   \
    \   interface.\n"
- title: 4.8.  DLIF Link-Layer Address Option
  contents:
  - "4.8.  DLIF Link-Layer Address Option\n   A new DLIF Link-Layer Address option\
    \ is defined for use with the PBA\n   message exchanged between MAARs and between\
    \ a MAAR and a CMD.  This\n   option is used for exchanging the link-layer address\
    \ of the DLIF to\n   be configured on the S-MAAR so it resembles the DLIF configured\
    \ on\n   the P-MAAR.\n   The format of the DLIF Link-Layer Address option is shown\
    \ below.\n   Based on the size of the address, the option MUST be aligned\n  \
    \ appropriately, as per the mobility option alignment requirements\n   specified\
    \ in [RFC6275].\n    0                   1                   2               \
    \    3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   |   Type        |    Length     |          Reserved             |\n   +  \
    \                  DLIF Link-Layer Address                    +\n   Type\n   \
    \   70\n   Length\n      8-bit unsigned integer indicating the length of the option\
    \ in\n      octets, excluding the type and length fields.\n   Reserved\n     \
    \ This field is unused at the time of publication.  The value MUST\n      be initialized\
    \ to 0 by the sender and MUST be ignored by the\n      receiver.\n   DLIF Link-Layer\
    \ Address\n      A variable length field containing the link-layer address of\
    \ the\n      logical interface to be configured on the S-MAAR.\n      The content\
    \ and format of this field (including octet and bit\n      ordering) is as specified\
    \ in Section 4.6 of [RFC4861] for carrying\n      link-layer addresses.  On certain\
    \ access links where the link-\n      layer address is not used or cannot be determined,\
    \ this option\n      cannot be used.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document defines six new mobility options: Anchored\
    \ Prefix,\n   Local Prefix, Previous MAAR, Serving MAAR, DLIF Link-Local Address,\n\
    \   and DLIF Link-Layer Address.  IANA has assigned Type values for these\n  \
    \ options from the same numbering space as allocated for the other\n   mobility\
    \ options in the \"Mobility Options\" registry defined in\n   http://www.iana.org/assignments/mobility-parameters.\n\
    \   This document reserves a new flag (D) with a value of 0x0010 in the\n   \"\
    Binding Update Flags\" registry and a new flag (D) with a value of\n   0x02 in\
    \ the \"Binding Acknowledgment Flags\" of the \"Mobile IPv6\n   parameters\" registry\
    \ (http://www.iana.org/assignments/mobility-\n   parameters).\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The protocol extensions defined in this document\
    \ share the same\n   security concerns of PMIPv6 [RFC5213].  It is recommended\
    \ that the\n   signaling messages, PBU and PBA, exchanged between the MAARs be\n\
    \   protected using IPsec, specifically by using the established security\n  \
    \ association between them.  This essentially eliminates the threats\n   related\
    \ to the impersonation of a MAAR.\n   When the CMD acts as a PBU/PBA relay, the\
    \ CMD may act as a relay of a\n   single PBU to multiple P-MAARs.  In situations\
    \ with many fast\n   handovers (e.g., with vehicular networks), multiple previous\
    \ (e.g.,\n   k) MAARs may exist.  In this situation, the CMD creates k outgoing\n\
    \   packets from a single incoming packet.  This bears a certain\n   amplification\
    \ risk.  The CMD MUST use a pacing approach in the\n   outgoing queue to cap the\
    \ output traffic (i.e., the rate of PBUs\n   sent) to limit this amplification\
    \ risk.\n   When the CMD acts as a MAAR locator, mobility signaling (PBAs) is\n\
    \   exchanged between P-MAARs and the current S-MAAR.  Hence, security\n   associations\
    \ are REQUIRED to exist between the involved MAARs (in\n   addition to the ones\
    \ needed with the CMD).\n   Since de-registration is performed by timeout, measures\
    \ SHOULD be\n   implemented to minimize the risks associated with continued resource\n\
    \   consumption (DoS attacks), e.g., imposing a limit on the number of\n   P-MAARs\
    \ associated with a given MN.\n   The CMD and the participating MAARs MUST be\
    \ trusted parties\n   authorized perform all operations relevant to their role.\n\
    \   There are some privacy considerations to consider.  While the\n   involved\
    \ parties trust each other, the signaling involves disclosing\n   information\
    \ about the previous locations visited by each MN, as well\n   as the active prefixes\
    \ they are using at a given point of time.\n   Therefore, mechanisms MUST be in\
    \ place to ensure that MAARs and CMDs\n   do not disclose this information to\
    \ other parties or use it for other\n   ends than providing the distributed mobility\
    \ support specified in\n   this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4191]  Draves, R. and D. Thaler, \"Default Router Preferences and\n  \
    \            More-Specific Routes\", RFC 4191, DOI 10.17487/RFC4191,\n       \
    \       November 2005, <https://www.rfc-editor.org/info/rfc4191>.\n   [RFC4861]\
    \  Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n              \"Neighbor\
    \ Discovery for IP version 6 (IPv6)\", RFC 4861,\n              DOI 10.17487/RFC4861,\
    \ September 2007,\n              <https://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC5213]  Gundavelli, S., Ed., Leung, K., Devarapalli, V.,\n            \
    \  Chowdhury, K., and B. Patil, \"Proxy Mobile IPv6\",\n              RFC 5213,\
    \ DOI 10.17487/RFC5213, August 2008,\n              <https://www.rfc-editor.org/info/rfc5213>.\n\
    \   [RFC6275]  Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n     \
    \         Support in IPv6\", RFC 6275, DOI 10.17487/RFC6275, July\n          \
    \    2011, <https://www.rfc-editor.org/info/rfc6275>.\n   [RFC7333]  Chan, H.,\
    \ Ed., Liu, D., Seite, P., Yokota, H., and J.\n              Korhonen, \"Requirements\
    \ for Distributed Mobility\n              Management\", RFC 7333, DOI 10.17487/RFC7333,\
    \ August 2014,\n              <https://www.rfc-editor.org/info/rfc7333>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [DISTRIBUTED-ANCHORING]\n              Bernardos,\
    \ C. and J. Zuniga, \"PMIPv6-based distributed\n              anchoring\", Work\
    \ in Progress, Internet-Draft, draft-\n              bernardos-dmm-distributed-anchoring-09,\
    \ 29 May 2017,\n              <https://tools.ietf.org/html/draft-bernardos-dmm-\n\
    \              distributed-anchoring-09>.\n   [DMM-PMIP] Bernardos, C., Oliva,\
    \ A., and F. Giust, \"A PMIPv6-based\n              solution for Distributed Mobility\
    \ Management\", Work in\n              Progress, Internet-Draft, draft-bernardos-dmm-pmip-09,\
    \ 8\n              September 2017,\n              <https://tools.ietf.org/html/draft-bernardos-dmm-pmip-09>.\n\
    \   [RFC6724]  Thaler, D., Ed., Draves, R., Matsumoto, A., and T. Chown,\n   \
    \           \"Default Address Selection for Internet Protocol Version 6\n    \
    \          (IPv6)\", RFC 6724, DOI 10.17487/RFC6724, September 2012,\n       \
    \       <https://www.rfc-editor.org/info/rfc6724>.\n   [RFC7429]  Liu, D., Ed.,\
    \ Zuniga, JC., Ed., Seite, P., Chan, H., and\n              CJ. Bernardos, \"\
    Distributed Mobility Management: Current\n              Practices and Gap Analysis\"\
    , RFC 7429,\n              DOI 10.17487/RFC7429, January 2015,\n             \
    \ <https://www.rfc-editor.org/info/rfc7429>.\n   [RFC8563]  Katz, D., Ward, D.,\
    \ Pallagatti, S., Ed., and G. Mirsky,\n              Ed., \"Bidirectional Forwarding\
    \ Detection (BFD) Multipoint\n              Active Tails\", RFC 8563, DOI 10.17487/RFC8563,\
    \ April 2019,\n              <https://www.rfc-editor.org/info/rfc8563>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Dirk von Hugo, John Kaippallimalil,\n\
    \   Ines Robles, Joerg Ott, Carlos Pignataro, Vincent Roca, Mirja\n   K\xFChlewind,\
    \ \xC9ric Vyncke, Adam Roach, Benjamin Kaduk, and Roman Danyliw\n   for the comments\
    \ on this document.  The authors would also like to\n   thank Marco Liebsch, Dirk\
    \ von Hugo, Alex Petrescu, Daniel Corujo,\n   Akbar Rahman, Danny Moses, Xinpeng\
    \ Wei, and Satoru Matsushima for\n   their comments and discussion on the documents\n\
    \   [DISTRIBUTED-ANCHORING] and [DMM-PMIP], on which the present document\n  \
    \ is based.\n   The authors would also like to thank Lyle Bertz and Danny Moses\
    \ for\n   their in-depth review of this document and their very valuable\n   comments\
    \ and suggestions.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Carlos J. Bernardos\n   Universidad Carlos III de Madrid\n\
    \   Av. Universidad, 30\n   28911 Leganes Madrid\n   Spain\n   Phone: +34 91624\
    \ 6236\n   Email: cjbc@it.uc3m.es\n   URI:   http://www.it.uc3m.es/cjbc/\n   Antonio\
    \ de la Oliva\n   Universidad Carlos III de Madrid\n   Av. Universidad, 30\n \
    \  28911 Leganes Madrid\n   Spain\n   Phone: +34 91624 8803\n   Email: aoliva@it.uc3m.es\n\
    \   URI:   http://www.it.uc3m.es/aoliva/\n   Fabio Giust\n   Athonet S.r.l.\n\
    \   via Ca' del Luogo 6/8\n   36050 Bolzano Vicentino (VI)\n   Italy\n   Email:\
    \ fabio.giust.research@gmail.com\n   Juan Carlos Z\xFA\xF1iga\n   SIGFOX\n   425\
    \ rue Jean Rostand\n   31670 Labege\n   France\n   Email: j.c.zuniga@ieee.org\n\
    \   URI:   http://www.sigfox.com/\n   Alain Mourad\n   InterDigital Europe\n"
