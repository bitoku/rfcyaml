- contents:
  - '    DNS Certification Authority Authorization (CAA) Resource Record

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The Certification Authority Authorization (CAA) DNS Resource Record\n
    \  allows a DNS domain name holder to specify one or more Certification\n   Authorities
    (CAs) authorized to issue certificates for that domain\n   name.  CAA Resource
    Records allow a public CA to implement additional\n   controls to reduce the risk
    of unintended certificate mis-issue.\n   This document defines the syntax of the
    CAA record and rules for\n   processing CAA records by CAs.\n   This document
    obsoletes RFC 6844.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8659.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Definitions\n     2.1.  Requirements
    Language\n     2.2.  Defined Terms\n   3.  Relevant Resource Record Set\n   4.
    \ Mechanism\n     4.1.  Syntax\n       4.1.1.  Canonical Presentation Format\n
    \    4.2.  CAA issue Property\n     4.3.  CAA issuewild Property\n     4.4.  CAA
    iodef Property\n     4.5.  Critical Flag\n   5.  Security Considerations\n     5.1.
    \ Use of DNS Security\n     5.2.  Non-compliance by Certification Authority\n
    \    5.3.  Mis-Issue by Authorized Certification Authority\n     5.4.  Suppression
    or Spoofing of CAA Records\n     5.5.  Denial of Service\n     5.6.  Abuse of
    the Critical Flag\n   6.  Deployment Considerations\n     6.1.  Blocked Queries
    or Responses\n     6.2.  Rejected Queries and Malformed Responses\n     6.3.  Delegation
    to Private Nameservers\n     6.4.  Bogus DNSSEC Responses\n   7.  Differences
    from RFC 6844\n   8.  IANA Considerations\n   9.  References\n     9.1.  Normative
    References\n     9.2.  Informative References\n   Acknowledgements\n   Authors'
    Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Certification Authority Authorization (CAA) DNS Resource
    Record\n   allows a DNS domain name holder to specify the Certification\n   Authorities
    (CAs) authorized to issue certificates for that domain\n   name.  Publication
    of CAA Resource Records allows a public CA to\n   implement additional controls
    to reduce the risk of unintended\n   certificate mis-issue.\n   Like the TLSA
    record defined in DNS-Based Authentication of Named\n   Entities (DANE) [RFC6698],
    CAA records are used as a part of a\n   mechanism for checking PKIX [RFC6698]
    certificate data.  The\n   distinction between CAA and TLSA is that CAA records
    specify an\n   authorization control to be performed by a CA before issuing a\n
    \  certificate and TLSA records specify a verification control to be\n   performed
    by a Relying Party after the certificate is issued.\n   Conformance with a published
    CAA record is a necessary, but not\n   sufficient, condition for the issuance
    of a certificate.\n   Criteria for the inclusion of embedded trust anchor certificates
    in\n   applications are outside the scope of this document.  Typically, such\n
    \  criteria require the CA to publish a Certification Practices\n   Statement
    (CPS) that specifies how the requirements of the\n   Certificate Policy (CP) are
    achieved.  It is also common for a CA to\n   engage an independent third-party
    auditor to prepare an annual audit\n   statement of its performance against its
    CPS.\n   A set of CAA records describes only current grants of authority to\n
    \  issue certificates for the corresponding DNS domain name.  Since\n   certificates
    are valid for a period of time, it is possible that a\n   certificate that is
    not conformant with the CAA records currently\n   published was conformant with
    the CAA records published at the time\n   that the certificate was issued.  Relying
    Parties MUST NOT use CAA\n   records as part of certificate validation.\n   CAA
    records MAY be used by Certificate Evaluators as a possible\n   indicator of a
    security policy violation.  Such use SHOULD take into\n   account the possibility
    that published CAA records changed between\n   the time a certificate was issued
    and the time at which the\n   certificate was observed by the Certificate Evaluator.\n"
  title: 1.  Introduction
- contents:
  - '2.  Definitions

    '
  - contents:
    - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 2.1.  Requirements Language
  - contents:
    - "2.2.  Defined Terms\n   The following terms are used in this document:\n   Certificate:
      \ An X.509 Certificate, as specified in [RFC5280].\n   Certificate Evaluator:
      \ A party other than a Relying Party that\n      evaluates the trustworthiness
      of certificates issued by\n      Certification Authorities.\n   Certification
      Authority (CA):  An Issuer that issues certificates in\n      accordance with
      a specified Certificate Policy.\n   Certificate Policy (CP):  Specifies the
      criteria that a CA undertakes\n      to meet in its issue of certificates.  See
      [RFC3647].\n   Certification Practices Statement (CPS):  Specifies the means
      by\n      which the criteria of the CP are met.  In most cases, this will be\n
      \     the document against which the operations of the CA are audited.\n      See
      [RFC3647].\n   Domain Name:  The label assigned to a node in the Domain Name
      System.\n   Domain Name System (DNS):  The Internet naming system specified
      in\n      [RFC1034] and [RFC1035].\n   DNS Security (DNSSEC):  Extensions to
      the DNS that provide\n      authentication services as specified in [RFC4033],
      [RFC4034],\n      [RFC4035], [RFC5155], and any revisions to these specifications.\n
      \  Fully Qualified Domain Name (FQDN):  A domain name that includes the\n      labels
      of all superior nodes in the DNS.\n   Issuer:  An entity that issues certificates.
      \ See [RFC5280].\n   Property:  The tag-value portion of a CAA Resource Record.\n
      \  Property Tag:  The tag portion of a CAA Resource Record.\n   Property Value:
      \ The value portion of a CAA Resource Record.\n   Relevant Resource Record Set
      (Relevant RRset):  A set of CAA Resource\n      Records resulting from applying
      the algorithm in Section 3 to a\n      specific FQDN or Wildcard Domain Name.\n
      \  Relying Party:  A party that makes use of an application whose\n      operation
      depends on the use of a certificate for making a\n      security decision.  See
      [RFC5280].\n   Resource Record (RR):  A particular entry in the DNS, including
      the\n      owner name, class, type, time to live, and data, as defined in\n
      \     [RFC1034] and [RFC2181].\n   Resource Record Set (RRset):  A set of RRs
      of a particular owner\n      name, class, and type.  The time to live on all
      RRs within an\n      RRset is always the same, but the data may be different
      among RRs\n      in the RRset.\n   Wildcard Domain Name:  A domain name consisting
      of a single asterisk\n      character followed by a single \"full stop\" character
      (\"*.\")\n      followed by an FQDN.\n"
    title: 2.2.  Defined Terms
  title: 2.  Definitions
- contents:
  - "3.  Relevant Resource Record Set\n   Before issuing a certificate, a compliant
    CA MUST check for\n   publication of a Relevant RRset.  If such an RRset exists,
    a CA\n   MUST NOT issue a certificate unless the CA determines that either\n   (1)
    the certificate request is consistent with the applicable CAA\n   RRset or (2)
    an exception specified in the relevant CP or CPS\n   applies.  If the Relevant
    RRset for an FQDN or Wildcard Domain Name\n   contains no Property Tags that restrict
    issuance (for instance, if it\n   contains only iodef Property Tags or only Property
    Tags unrecognized\n   by the CA), CAA does not restrict issuance.\n   A certificate
    request MAY specify more than one FQDN and MAY specify\n   Wildcard Domain Names.
    \ Issuers MUST verify authorization for all the\n   FQDNs and Wildcard Domain
    Names specified in the request.\n   The search for a CAA RRset climbs the DNS
    name tree from the\n   specified label up to, but not including, the DNS root
    \".\" until a\n   CAA RRset is found.\n   Given a request for a specific FQDN
    X or a request for a Wildcard\n   Domain Name *.X, the Relevant RRset RelevantCAASet(X)
    is determined\n   as follows (in pseudocode):\n      Let CAA(X) be the RRset returned
    by performing a CAA record query\n      for the FQDN X, according to the lookup
    algorithm specified in\n      Section 4.3.2 of [RFC1034] (in particular, chasing
    aliases).  Let\n      Parent(X) be the FQDN produced by removing the leftmost
    label of\n      X.\n      RelevantCAASet(domain):\n        while domain is not
    \".\":\n          if CAA(domain) is not Empty:\n            return CAA(domain)\n
    \         domain = Parent(domain)\n        return Empty\n      For example, processing
    CAA for the FQDN \"X.Y.Z\" where there are\n      no CAA records at any level
    in the tree RelevantCAASet would have\n      the following steps:\n      CAA(\"X.Y.Z.\")
    = Empty; domain = Parent(\"X.Y.Z.\") = \"Y.Z.\"\n      CAA(\"Y.Z.\")   = Empty;
    domain = Parent(\"Y.Z.\")   = \"Z.\"\n      CAA(\"Z.\")     = Empty; domain =
    Parent(\"Z.\")     = \".\"\n      return Empty\n      Processing CAA for the FQDN
    \"A.B.C\" where there is a CAA record\n      \"issue example.com\" at \"B.C\"
    would terminate early upon finding\n      the CAA record:\n      CAA(\"A.B.C.\")
    = Empty; domain = Parent(\"A.B.C.\") = \"B.C.\"\n      CAA(\"B.C.\")   = \"issue
    example.com\"\n      return \"issue example.com\"\n"
  title: 3.  Relevant Resource Record Set
- contents:
  - '4.  Mechanism

    '
  - contents:
    - "4.1.  Syntax\n   A CAA RR contains a single Property consisting of a tag-value
      pair.\n   An FQDN MAY have multiple CAA RRs associated with it, and a given\n
      \  Property Tag MAY be specified more than once across those RRs.\n   The RDATA
      section for a CAA RR contains one Property.  A Property\n   consists of the
      following:\n   +0-1-2-3-4-5-6-7-|0-1-2-3-4-5-6-7-|\n   | Flags          | Tag
      Length = n |\n   | Tag char 0     | Tag char 1     |...| Tag char n-1  |\n   |
      Value byte 0   | Value byte 1   |.....| Value byte m-1 |\n   Where n is the
      length specified in the Tag Length field and m is the\n   number of remaining
      octets in the Value field.  They are related by\n   (m = d - n - 2) where d
      is the length of the RDATA section.\n   The fields are defined as follows:\n
      \  Flags:  One octet containing the following field:\n      Bit 0, Issuer Critical
      Flag:  If the value is set to \"1\", the\n         Property is critical.  A
      CA MUST NOT issue certificates for any\n         FQDN if the Relevant RRset
      for that FQDN contains a CAA\n         critical Property for an unknown or unsupported
      Property Tag.\n   Note that according to the conventions set out in [RFC1035],
      bit 0 is\n   the Most Significant Bit and bit 7 is the Least Significant Bit.\n
      \  Thus, according to those conventions, the Flags value 1 means that\n   bit
      7 is set, while a value of 128 means that bit 0 is set.\n   All other bit positions
      are reserved for future use.\n   To ensure compatibility with future extensions
      to CAA, DNS records\n   compliant with this version of the CAA specification
      MUST clear (set\n   to \"0\") all reserved flag bits.  Applications that interpret
      CAA\n   records MUST ignore the value of all reserved flag bits.\n   Tag Length:
      \ A single octet containing an unsigned integer specifying\n      the tag length
      in octets.  The tag length MUST be at least 1.\n   Tag:  The Property identifier
      -- a sequence of ASCII characters.\n   Tags MAY contain ASCII characters \"a\"
      through \"z\", \"A\" through \"Z\",\n   and the numbers 0 through 9.  Tags MUST
      NOT contain any other\n   characters.  Matching of tags is case insensitive.\n
      \  Tags submitted for registration by IANA MUST NOT contain any\n   characters
      other than the (lowercase) ASCII characters \"a\" through\n   \"z\" and the
      numbers 0 through 9.\n   Value:  A sequence of octets representing the Property
      Value.\n      Property Values are encoded as binary values and MAY employ\n
      \     sub-formats.\n   The length of the Value field is specified implicitly
      as the\n   remaining length of the enclosing RDATA section.\n"
    - contents:
      - "4.1.1.  Canonical Presentation Format\n   The canonical presentation format
        of the CAA record is:\n      CAA <flags> <tag> <value>\n   Where:\n   Flags:
        \ An unsigned integer between 0 and 255.\n   Tag:  A non-zero-length sequence
        of ASCII letters and numbers in\n      lowercase.\n   Value:  The Value field,
        expressed as either (1) a contiguous set of\n      characters without interior
        spaces or (2) a quoted string.  See\n      the <character-string> format specified
        in [RFC1035], Section 5.1,\n      but note that the Value field contains no
        length byte and is not\n      limited to 255 characters.\n"
      title: 4.1.1.  Canonical Presentation Format
    title: 4.1.  Syntax
  - contents:
    - "4.2.  CAA issue Property\n   If the issue Property Tag is present in the Relevant
      RRset for an\n   FQDN, it is a request that Issuers:\n   1.  Perform CAA issue
      restriction processing for the FQDN, and\n   2.  Grant authorization to issue
      certificates containing that FQDN to\n       the holder of the issuer-domain-name
      or a party acting under the\n       explicit authority of the holder of the
      issuer-domain-name.\n   The CAA issue Property Value has the following sub-syntax
      (specified\n   in ABNF as per [RFC5234]).\n   issue-value = *WSP [issuer-domain-name
      *WSP]\n      [\";\" *WSP [parameters *WSP]]\n   issuer-domain-name = label *(\".\"
      label)\n   label = (ALPHA / DIGIT) *( *(\"-\") (ALPHA / DIGIT))\n   parameters
      = (parameter *WSP \";\" *WSP parameters) / parameter\n   parameter = tag *WSP
      \"=\" *WSP value\n   tag = (ALPHA / DIGIT) *( *(\"-\") (ALPHA / DIGIT))\n   value
      = *(%x21-3A / %x3C-7E)\n   For consistency with other aspects of DNS administration,
      FQDN values\n   are specified in letter-digit-hyphen Label (LDH-Label) form.\n
      \  The following CAA RRset requests that no certificates be issued for\n   the
      FQDN \"certs.example.com\" by any Issuer other than ca1.example.net\n   or ca2.example.org.\n
      \  certs.example.com         CAA 0 issue \"ca1.example.net\"\n   certs.example.com
      \        CAA 0 issue \"ca2.example.org\"\n   Because the presence of an issue
      Property Tag in the Relevant RRset\n   for an FQDN restricts issuance, FQDN
      owners can use an issue Property\n   Tag with no issuer-domain-name to request
      no issuance.\n   For example, the following RRset requests that no certificates
      be\n   issued for the FQDN \"nocerts.example.com\" by any Issuer.\n   nocerts.example.com
      \      CAA 0 issue \";\"\n   An issue Property Tag where the issue-value does
      not match the ABNF\n   grammar MUST be treated the same as one specifying an
      empty\n   issuer-domain-name.  For example, the following malformed CAA RRset\n
      \  forbids issuance:\n   malformed.example.com     CAA 0 issue \"%%%%%\"\n   CAA
      authorizations are additive; thus, the result of specifying both\n   an empty
      issuer-domain-name and a non-empty issuer-domain-name is the\n   same as specifying
      just the non-empty issuer-domain-name.\n   An Issuer MAY choose to specify parameters
      that further constrain the\n   issue of certificates by that Issuer -- for example,
      specifying that\n   certificates are to be subject to specific validation policies,\n
      \  billed to certain accounts, or issued under specific trust anchors.\n   For
      example, if ca1.example.net has requested that its customer\n   account.example.com
      specify their account number \"230123\" in each of\n   the customer's CAA records
      using the (CA-defined) \"account\"\n   parameter, it would look like this:\n
      \  account.example.com   CAA 0 issue \"ca1.example.net; account=230123\"\n   The
      semantics of parameters to the issue Property Tag are determined\n   by the
      Issuer alone.\n"
    title: 4.2.  CAA issue Property
  - contents:
    - "4.3.  CAA issuewild Property\n   The issuewild Property Tag has the same syntax
      and semantics as the\n   issue Property Tag except that it only grants authorization
      to issue\n   certificates that specify a Wildcard Domain Name and each issuewild\n
      \  Property takes precedence over each issue Property when specified.\n   Specifically:\n
      \  Each issuewild Property MUST be ignored when processing a request for\n   an
      FQDN that is not a Wildcard Domain Name.\n   If at least one issuewild Property
      is specified in the Relevant RRset\n   for a Wildcard Domain Name, each issue
      Property MUST be ignored when\n   processing a request for that Wildcard Domain
      Name.\n   For example, the following RRset requests that _only_ ca1.example.net\n
      \  issue certificates for \"wild.example.com\" or \"sub.wild.example.com\",\n
      \  and that _only_ ca2.example.org issue certificates for\n   \"*.wild.example.com\"
      or \"*.sub.wild.example.com\".  Note that this\n   presumes that there are no
      CAA RRs for sub.wild.example.com.\n   wild.example.com          CAA 0 issue
      \"ca1.example.net\"\n   wild.example.com          CAA 0 issuewild \"ca2.example.org\"\n
      \  The following RRset requests that _only_ ca1.example.net issue\n   certificates
      for \"wild2.example.com\", \"*.wild2.example.com\", or\n   \"*.sub.wild2.example.com\".\n
      \  wild2.example.com         CAA 0 issue \"ca1.example.net\"\n   The following
      RRset requests that _only_ ca2.example.org issue\n   certificates for \"*.wild3.example.com\"
      or \"*.sub.wild3.example.com\".\n   It does not permit any Issuer to issue for
      \"wild3.example.com\" or\n   \"sub.wild3.example.com\".\n   wild3.example.com
      \        CAA 0 issuewild \"ca2.example.org\"\n   wild3.example.com         CAA
      0 issue \";\"\n   The following RRset requests that _only_ ca2.example.org issue\n
      \  certificates for \"*.wild3.example.com\" or \"*.sub.wild3.example.com\".\n
      \  It permits any Issuer to issue for \"wild3.example.com\" or\n   \"sub.wild3.example.com\".\n
      \  wild3.example.com         CAA 0 issuewild \"ca2.example.org\"\n"
    title: 4.3.  CAA issuewild Property
  - contents:
    - "4.4.  CAA iodef Property\n   The iodef Property specifies a means of reporting
      certificate issue\n   requests or cases of certificate issue for domains for
      which the\n   Property appears in the Relevant RRset, when those requests or\n
      \  issuances violate the security policy of the Issuer or the FQDN\n   holder.\n
      \  The Incident Object Description Exchange Format (IODEF) [RFC7970] is\n   used
      to present the incident report in machine-readable form.\n   The iodef Property
      Tag takes a URL as its Property Value.  The URL\n   scheme type determines the
      method used for reporting:\n   mailto:  The IODEF report is reported as a MIME
      email attachment to\n      an SMTP email that is submitted to the mail address
      specified.\n      The mail message sent SHOULD contain a brief text message
      to alert\n      the recipient to the nature of the attachment.\n   http or https:
      \ The IODEF report is submitted as a web service\n      request to the HTTP
      address specified using the protocol specified\n      in [RFC6546].\n   These
      are the only supported URL schemes.\n   The following RRset specifies that reports
      may be made by means of\n   email with the IODEF data as an attachment, a web
      service [RFC6546],\n   or both:\n   report.example.com         CAA 0 issue \"ca1.example.net\"\n
      \  report.example.com         CAA 0 iodef \"mailto:security@example.com\"\n
      \  report.example.com         CAA 0 iodef \"https://iodef.example.com/\"\n"
    title: 4.4.  CAA iodef Property
  - contents:
    - "4.5.  Critical Flag\n   The critical flag is intended to permit future versions
      of CAA to\n   introduce new semantics that MUST be understood for correct\n
      \  processing of the record, preventing conforming CAs that do not\n   recognize
      the new semantics from issuing certificates for the\n   indicated FQDNs.\n   In
      the following example, the Property with a Property Tag of \"tbs\"\n   is flagged
      as critical.  Neither the ca1.example.net CA nor any other\n   Issuer is authorized
      to issue for \"new.example.com\" (or any other\n   domains for which this is
      the Relevant RRset) unless the Issuer has\n   implemented the processing rules
      for the \"tbs\" Property Tag.\n   new.example.com       CAA 0 issue \"ca1.example.net\"\n
      \  new.example.com       CAA 128 tbs \"Unknown\"\n"
    title: 4.5.  Critical Flag
  title: 4.  Mechanism
- contents:
  - "5.  Security Considerations\n   CAA records assert a security policy that the
    holder of an FQDN\n   wishes to be observed by Issuers.  The effectiveness of
    CAA records\n   as an access control mechanism is thus dependent on observance
    of CAA\n   constraints by Issuers.\n   The objective of the CAA record properties
    described in this document\n   is to reduce the risk of certificate mis-issue
    rather than avoid\n   reliance on a certificate that has been mis-issued.  DANE
    [RFC6698]\n   describes a mechanism for avoiding reliance on mis-issued\n   certificates.\n"
  - contents:
    - "5.1.  Use of DNS Security\n   The use of DNSSEC to authenticate CAA RRs is
      strongly RECOMMENDED but\n   not required.  An Issuer MUST NOT issue certificates
      if doing so\n   would conflict with the Relevant RRset, irrespective of whether
      the\n   corresponding DNS records are signed.\n   DNSSEC provides a proof of
      non-existence for both DNS FQDNs and\n   RRsets within FQDNs.  DNSSEC verification
      thus enables an Issuer to\n   determine whether the answer to a CAA record query
      (1) is empty\n   because the RRset is empty or (2) is non-empty but the response
      has\n   been suppressed.\n   The use of DNSSEC allows an Issuer to acquire and
      archive a proof\n   that they were authorized to issue certificates for the
      FQDN.\n   Verification of such archives may be an audit requirement to verify\n
      \  CAA record-processing compliance.  Publication of such archives may\n   be
      a transparency requirement to verify CAA record-processing\n   compliance.\n"
    title: 5.1.  Use of DNS Security
  - contents:
    - "5.2.  Non-compliance by Certification Authority\n   CAA records offer CAs a
      cost-effective means of mitigating the risk\n   of certificate mis-issue: the
      cost of implementing CAA checks is very\n   small, and the potential costs of
      a mis-issue event include the\n   removal of an embedded trust anchor.\n"
    title: 5.2.  Non-compliance by Certification Authority
  - contents:
    - "5.3.  Mis-Issue by Authorized Certification Authority\n   The use of CAA records
      does not prevent mis-issue by an authorized\n   CA, i.e., a CA that is authorized
      to issue certificates for the FQDN\n   in question by CAA records.\n   FQDN
      holders SHOULD verify that the CAs they authorize to issue\n   certificates
      for their FQDNs employ appropriate controls to ensure\n   that certificates
      are issued only to authorized parties within their\n   organization.\n   Such
      controls are most appropriately determined by the FQDN holder\n   and the authorized
      CA(s) directly and are thus outside the scope of\n   this document.\n"
    title: 5.3.  Mis-Issue by Authorized Certification Authority
  - contents:
    - "5.4.  Suppression or Spoofing of CAA Records\n   Suppression of a CAA record
      or insertion of a bogus CAA record could\n   enable an attacker to obtain a
      certificate from an Issuer that was\n   not authorized to issue for an affected
      FQDN.\n   Where possible, Issuers SHOULD perform DNSSEC validation to detect\n
      \  missing or modified CAA RRsets.\n   In cases where DNSSEC is not deployed
      for a corresponding FQDN, an\n   Issuer SHOULD attempt to mitigate this risk
      by employing appropriate\n   DNS security controls.  For example, all portions
      of the DNS lookup\n   process SHOULD be performed against the authoritative
      nameserver.\n   Data cached by third parties MUST NOT be relied on as the sole
      source\n   of DNS CAA information but MAY be used to support additional\n   anti-spoofing
      or anti-suppression controls.\n"
    title: 5.4.  Suppression or Spoofing of CAA Records
  - contents:
    - "5.5.  Denial of Service\n   Introduction of a malformed or malicious CAA RR
      could, in theory,\n   enable a Denial-of-Service (DoS) attack.  This could happen
      by\n   modification of authoritative DNS records or by spoofing inflight DNS\n
      \  responses.\n   This specific threat is not considered to add significantly
      to the\n   risk of running an insecure DNS service.\n   An attacker could, in
      principle, perform a DoS attack against an\n   Issuer by requesting a certificate
      with a maliciously long DNS name.\n   In practice, the DNS protocol imposes
      a maximum name length, and CAA\n   processing does not exacerbate the existing
      need to mitigate DoS\n   attacks to any meaningful degree.\n"
    title: 5.5.  Denial of Service
  - contents:
    - "5.6.  Abuse of the Critical Flag\n   A CA could make use of the critical flag
      to trick customers into\n   publishing records that prevent competing CAs from
      issuing\n   certificates even though the customer intends to authorize multiple\n
      \  providers.  This could happen if the customers were setting CAA\n   records
      based on data provided by the CA rather than generating those\n   records themselves.\n
      \  In practice, such an attack would be of minimal effect, since any\n   competent
      competitor that found itself unable to issue certificates\n   due to lack of
      support for a Property marked critical should\n   investigate the cause and
      report the reason to the customer.  The\n   customer will thus discover that
      they had been deceived.\n"
    title: 5.6.  Abuse of the Critical Flag
  title: 5.  Security Considerations
- contents:
  - "6.  Deployment Considerations\n   A CA implementing CAA may find that they receive
    errors looking up\n   CAA records.  The following are some common causes of such
    errors, so\n   that CAs may provide guidance to their subscribers on fixing the\n
    \  underlying problems.\n"
  - contents:
    - "6.1.  Blocked Queries or Responses\n   Some middleboxes -- in particular, anti-DDoS
      appliances -- may be\n   configured to drop DNS packets of unknown types, or
      they may start\n   dropping such packets when they consider themselves under
      attack.\n   This generally manifests as a timed-out DNS query or as a SERVFAIL
      at\n   a local recursive resolver.\n"
    title: 6.1.  Blocked Queries or Responses
  - contents:
    - "6.2.  Rejected Queries and Malformed Responses\n   Some authoritative nameservers
      respond with REJECTED or NOTIMP when\n   queried for an RR type they do not
      recognize.  At least one\n   authoritative resolver produces a malformed response
      (with the QR\n   (Query/Response) bit set to \"0\") when queried for unknown
      RR types.\n   Per [RFC1034], the correct response RCODE for unknown RR types
      is 0\n   (\"No error condition\").\n"
    title: 6.2.  Rejected Queries and Malformed Responses
  - contents:
    - "6.3.  Delegation to Private Nameservers\n   Some FQDN administrators make the
      contents of a subdomain\n   unresolvable on the public Internet by delegating
      that subdomain to a\n   nameserver whose IP address is private.  A CA processing
      CAA records\n   for such subdomains will receive SERVFAIL from its recursive\n
      \  resolver.  The CA MAY interpret that as preventing issuance.  FQDN\n   administrators
      wishing to issue certificates for private FQDNs SHOULD\n   use split-horizon
      DNS with a publicly available nameserver, so that\n   CAs can receive a valid,
      empty CAA response for those FQDNs.\n"
    title: 6.3.  Delegation to Private Nameservers
  - contents:
    - "6.4.  Bogus DNSSEC Responses\n   Queries for CAA RRs are different from most
      DNS RR types, because a\n   signed, empty response to a query for CAA RRs is
      meaningfully\n   different from a bogus response.  A signed, empty response
      indicates\n   that there is definitely no CAA policy set at a given label.  A
      bogus\n   response may mean either a misconfigured zone or an attacker\n   tampering
      with records.  DNSSEC implementations may have bugs with\n   signatures on empty
      responses that go unnoticed, because for more\n   common RR types like A and
      AAAA, the difference to an end user\n   between empty and bogus is irrelevant;
      they both mean a site is\n   unavailable.\n   In particular, at least two authoritative
      resolvers that implement\n   live signing had bugs when returning empty RRsets
      for DNSSEC-signed\n   zones, in combination with mixed-case queries.  Mixed-case
      queries,\n   also known as DNS 0x20, are used by some recursive resolvers to\n
      \  increase resilience against DNS poisoning attacks.  DNSSEC-signing\n   authoritative
      resolvers are expected to copy the same capitalization\n   from the query into
      their ANSWER section but also to sign the\n   response as if they had used all
      lowercase.  In particular, PowerDNS\n   versions prior to 4.0.4 had this bug.\n"
    title: 6.4.  Bogus DNSSEC Responses
  title: 6.  Deployment Considerations
- contents:
  - "7.  Differences from RFC 6844\n   This document obsoletes [RFC6844].  The most
    important change is to\n   the \"Certification Authority Processing\" section
    (now called\n   \"Relevant Resource Record Set\" (Section 3), as noted below).\n
    \  [RFC6844] specified an algorithm that performed DNS tree-climbing not\n   only
    on the FQDN being processed but also on all CNAMEs and DNAMEs\n   encountered
    along the way.  This made the processing algorithm very\n   inefficient when used
    on FQDNs that utilize many CNAMEs and would\n   have made it difficult for hosting
    providers to set CAA policies on\n   their own FQDNs without setting potentially
    unwanted CAA policies on\n   their customers' FQDNs.  This document specifies
    a simplified\n   processing algorithm that only performs tree-climbing on the
    FQDN\n   being processed, and it leaves the processing of CNAMEs and DNAMEs up\n
    \  to the CA's recursive resolver.\n   This document also includes a \"Deployment
    Considerations\" section\n   (Section 6) detailing experience gained with practical
    deployment of\n   CAA enforcement among CAs in the WebPKI.\n   This document clarifies
    the ABNF grammar for the issue and issuewild\n   tags and resolves some inconsistencies
    with the document text.  In\n   particular, it specifies that parameters are separated
    with\n   semicolons.  It also allows hyphens in Property Tags.\n   This document
    also clarifies the processing of a CAA RRset that is\n   not empty but that does
    not contain any issue or issuewild tags.\n   This document removes the section
    titled \"The CAA RR Type,\" merging\n   it with \"Mechanism\" (Section 4) because
    the definitions were mainly\n   duplicates.  It moves the \"Use of DNS Security\"
    section into Security\n   Considerations (Section 5).  It renames \"Certification
    Authority\n   Processing\" to \"Relevant Resource Record Set\" (Section 3) and\n
    \  emphasizes the use of that term to more clearly define which domains\n   are
    affected by a given RRset.\n"
  title: 7.  Differences from RFC 6844
- contents:
  - "8.  IANA Considerations\n   IANA has added this document as a reference for the
    \"Certification\n   Authority Restriction Flags\" and \"Certification Authority
    Restriction\n   Properties\" registries and updated references to [RFC6844] within\n
    \  those registries to refer instead to this document.  IANA has also\n   updated
    the CAA TYPE in the \"Resource Record (RR) TYPEs\" subregistry\n   of the \"Domain
    Name System (DNS) Parameters\" registry with a\n   reference to this document.\n"
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names -
      concepts and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034,
      November 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n   [RFC1035]
      \ Mockapetris, P., \"Domain names - implementation and\n              specification\",
      STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November 1987, <https://www.rfc-editor.org/info/rfc1035>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC2181]  Elz,
      R. and R. Bush, \"Clarifications to the DNS\n              Specification\",
      RFC 2181, DOI 10.17487/RFC2181, July 1997,\n              <https://www.rfc-editor.org/info/rfc2181>.\n
      \  [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"DNS Security Introduction and Requirements\",\n              RFC 4033, DOI
      10.17487/RFC4033, March 2005,\n              <https://www.rfc-editor.org/info/rfc4033>.\n
      \  [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"Resource Records for the DNS Security Extensions\",\n              RFC 4034,
      DOI 10.17487/RFC4034, March 2005,\n              <https://www.rfc-editor.org/info/rfc4034>.\n
      \  [RFC4035]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n              Rose,
      \"Protocol Modifications for the DNS Security\n              Extensions\", RFC
      4035, DOI 10.17487/RFC4035, March 2005,\n              <https://www.rfc-editor.org/info/rfc4035>.\n
      \  [RFC5155]  Laurie, B., Sisson, G., Arends, R., and D. Blacka, \"DNS\n              Security
      (DNSSEC) Hashed Authenticated Denial of\n              Existence\", RFC 5155,
      DOI 10.17487/RFC5155, March 2008,\n              <https://www.rfc-editor.org/info/rfc5155>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC5280]
      \ Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley,
      R., and W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate
      and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI
      10.17487/RFC5280, May 2008,\n              <https://www.rfc-editor.org/info/rfc5280>.\n
      \  [RFC6546]  Trammell, B., \"Transport of Real-time Inter-network\n              Defense
      (RID) Messages over HTTP/TLS\", RFC 6546,\n              DOI 10.17487/RFC6546,
      April 2012,\n              <https://www.rfc-editor.org/info/rfc6546>.\n   [RFC6698]
      \ Hoffman, P. and J. Schlyter, \"The DNS-Based Authentication\n              of
      Named Entities (DANE) Transport Layer Security (TLS)\n              Protocol:
      TLSA\", RFC 6698, DOI 10.17487/RFC6698, August\n              2012, <https://www.rfc-editor.org/info/rfc6698>.\n
      \  [RFC6844]  Hallam-Baker, P. and R. Stradling, \"DNS Certification\n              Authority
      Authorization (CAA) Resource Record\", RFC 6844,\n              DOI 10.17487/RFC6844,
      January 2013,\n              <https://www.rfc-editor.org/info/rfc6844>.\n   [RFC7970]
      \ Danyliw, R., \"The Incident Object Description Exchange\n              Format
      Version 2\", RFC 7970, DOI 10.17487/RFC7970,\n              November 2016, <https://www.rfc-editor.org/info/rfc7970>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC3647]  Chokhani, S., Ford, W., Sabett,
      R., Merrill, C., and S.\n              Wu, \"Internet X.509 Public Key Infrastructure
      Certificate\n              Policy and Certification Practices Framework\", RFC
      3647,\n              DOI 10.17487/RFC3647, November 2003,\n              <https://www.rfc-editor.org/info/rfc3647>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank the following people who
    contributed\n   to the design and documentation of this work item: Corey Bonnell,\n
    \  Chris Evans, Stephen Farrell, Jeff Hodges, Paul Hoffman, Tim\n   Hollebeek,
    Stephen Kent, Adam Langley, Ben Laurie, James Manger,\n   Chris Palmer, Scott
    Schmit, Sean Turner, and Ben Wilson.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Phillip Hallam-Baker\n   Venture Cryptography\n   Email:
    phill@hallambaker.com\n   Rob Stradling\n   Sectigo Ltd.\n   Email: rob@sectigo.com\n
    \  Jacob Hoffman-Andrews\n"
  title: Authors' Addresses
