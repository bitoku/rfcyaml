- title: __initial_text__
  contents:
  - '            Deprecate Triple-DES (3DES) and RC4 in Kerberos

    '
- title: Abstract
  contents:
  - "Abstract\n   The triple-DES (3DES) and RC4 encryption types are steadily weakening\n\
    \   in cryptographic strength, and the deprecation process should begin\n   for\
    \ their use in Kerberos.  Accordingly, RFC 4757 has been moved to\n   Historic\
    \ status, as none of the encryption types it specifies should\n   be used, and\
    \ RFC 3961 has been updated to note the deprecation of the\n   triple-DES encryption\
    \ types.  RFC 4120 is likewise updated to remove\n   the recommendation to implement\
    \ triple-DES encryption and checksum\n   types.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 7841.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8429.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Requirements Notation . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Affected Specifications . . . . . . . . . . . . . . . .\
    \ . . .   3\n   4.  Affected Encryption Types . . . . . . . . . . . . . . . .\
    \ . .   4\n   5.  RC4 Weakness  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n     5.1.  Statistical Biases  . . . . . . . . . . . . . . . . . . .\
    \   4\n     5.2.  Password Hash . . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n     5.3.  Cross-Protocol Key Reuse  . . . . . . . . . . . . . . . .   5\n\
    \     5.4.  Interoperability Concerns . . . . . . . . . . . . . . . .   6\n  \
    \ 6.  Triple-DES Weakness . . . . . . . . . . . . . . . . . . . . .   6\n    \
    \ 6.1.  Password-Based Keys . . . . . . . . . . . . . . . . . . .   7\n     6.2.\
    \  Block Size  . . . . . . . . . . . . . . . . . . . . . . .   7\n     6.3.  Interoperability\
    \ Concerns . . . . . . . . . . . . . . . .   7\n   7.  Recommendations . . . .\
    \ . . . . . . . . . . . . . . . . . . .   8\n   8.  Security Considerations .\
    \ . . . . . . . . . . . . . . . . . .   8\n   9.  IANA Considerations . . . .\
    \ . . . . . . . . . . . . . . . . .   9\n   10. References  . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .   9\n     10.1.  Normative References . . .\
    \ . . . . . . . . . . . . . . .   9\n     10.2.  Informative References . . .\
    \ . . . . . . . . . . . . . .   9\n   Acknowledgements  . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  10\n   Authors' Addresses  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The triple-DES (3DES) and RC4 encryption types (enctypes)\
    \ are\n   steadily weakening in cryptographic strength, and the deprecation\n\
    \   process should begin for their use in Kerberos.  Accordingly, RFC\n   4757\
    \ has been moved to Historic status, as none of the encryption\n   types it specifies\
    \ should be used, and RFC 3961 has been updated to\n   note the deprecation of\
    \ the triple-DES encryption types.  RFC 4120 is\n   likewise updated to remove\
    \ the recommendation to implement triple-DES\n   encryption and checksum types.\n"
- title: 2.  Requirements Notation
  contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Affected Specifications
  contents:
  - "3.  Affected Specifications\n   The RC4 Kerberos encryption types (including\
    \ rc4-hmac) are specified\n   in [RFC4757], which has been moved to Historic status.\n\
    \   The des3-cbc-sha1-kd encryption type is specified in [RFC3961].\n   Additional\
    \ triple-DES encryption type codepoints are in use and in\n   the IANA registry\
    \ with no formal specification, in particular\n   des3-cbc-md5 and des3-cbc-sha1.\
    \  These unspecified encryption types\n   are also deprecated by this document.\n\
    \   The Kerberos specification ([RFC4120]) includes recommendations for\n   which\
    \ encryption and checksum types to implement; the deprecated\n   encryption and\
    \ checksum types are now disrecommended to implement.\n   Though the RC4 and triple-DES\
    \ encryption types are still in use in\n   some deployments, the above status\
    \ changes are made to discourage\n   their use.\n"
- title: 4.  Affected Encryption Types
  contents:
  - "4.  Affected Encryption Types\n   The following encryption types are deprecated.\
    \  The numbers are the\n   official identifiers; the names are only for convenience.\n\
    \               +----------------+--------------------------+\n              \
    \ | enctype number | enctype convenience name |\n               +----------------+--------------------------+\n\
    \               |       5        |       des3-cbc-md5       |\n              \
    \ |                |                          |\n               |       7    \
    \    |      des3-cbc-sha1       |\n               |                |         \
    \                 |\n               |       16       |     des3-cbc-sha1-kd  \
    \   |\n               |                |                          |\n        \
    \       |       23       |         rc4-hmac         |\n               +----------------+--------------------------+\n"
- title: 5.  RC4 Weakness
  contents:
  - "5.  RC4 Weakness\n   RC4's weakness as a TLS cipher due to statistical biases\
    \ in the\n   keystream has been well publicized [RFC7465], and these statistical\n\
    \   biases cause concern for any consumer of the RC4 cipher.  However,\n   the\
    \ RC4 Kerberos enctypes have additional flaws.  These flaws reduce\n   the security\
    \ of applications that use the enctypes; the weakening\n   occurs for various\
    \ reasons, including the weakness of the password\n   hashing algorithm, the reuse\
    \ of key material across protocols, and\n   the lack of a salt when hashing the\
    \ password.\n"
- title: 5.1.  Statistical Biases
  contents:
  - "5.1.  Statistical Biases\n   The RC4 stream cipher is known to have statistical\
    \ biases in its\n   output, which have led to practical attacks against protocols\
    \ such as\n   TLS that use RC4 [RFC7465].  At least some of these attacks rely\
    \ on\n   repeated encryptions of thousands of copies of the same plaintext;\n\
    \   although it is easy for malicious javascript in a website to cause\n   such\
    \ traffic, it is unclear whether there is an easy way to induce a\n   kerberized\
    \ application to generate such repeated encryptions.  The\n   statistical biases\
    \ are most pronounced for earlier bits in the output\n   stream, which is somewhat\
    \ mitigated by the use of a confounder in\n   Kerberos messages: the first 64\
    \ bits of plaintext are a random\n   confounder, and are thus of no use to an\
    \ attacker who can retrieve\n   them.\n   Nonetheless, the statistical biases\
    \ in the RC4 keystream extend well\n   past 64 bits and provide potential attack\
    \ surface to an attacker.\n   Continuing to use a known weak algorithm is inviting\
    \ further\n   development of attacks.\n"
- title: 5.2.  Password Hash
  contents:
  - "5.2.  Password Hash\n   Kerberos long-term keys can be either random (as might\
    \ be used in a\n   service's keytab) or derived from a password (e.g., for individual\n\
    \   users to authenticate to a system).  The specification for a Kerberos\n  \
    \ encryption type must include a \"string2key\" algorithm for generating\n   a\
    \ raw crypto key from a string (i.e., password).  Modern encryption\n   types,\
    \ such as those using the AES and Camellia block ciphers, use a\n   string2key\
    \ function based on the Password-Based Key Derivation\n   Function 2 (PBKDF2)\
    \ algorithm.  This algorithm involves many\n   iterations of a cryptographic hash\
    \ function, designed to increase the\n   computational effort required to perform\
    \ a brute-force password-\n   guessing attack.  There is an additional option\
    \ to specify an\n   increased iteration count for a given principal, providing\
    \ some\n   modicum of adaptability for increases in computing power.\n   It is\
    \ also best practice, when deriving cryptographic secrets from\n   user passwords,\
    \ to include as input to the hash function a value that\n   is unique to both\
    \ the user and the realm of authentication; this\n   user-specific input is known\
    \ as a \"salt\".  The default salt for\n   Kerberos principals includes both the\
    \ name of the principal and the\n   name of the realm, in accordance with these\
    \ best practices.  However,\n   the RC4 encryption types ignore the salt input\
    \ to the string2key\n   function; the function itself is a single iteration of\
    \ the MD4 hash\n   function applied to the UTF-16 encoded password, with no salt\
    \ at all.\n   The MD4 hash function is very old and considered to be weak and\n\
    \   unsuitable for new cryptographic applications at this time [RFC6150].\n  \
    \ The omission of a salt input to the hash is contrary to cryptographic\n   best\
    \ practices and allows an attacker to construct a \"rainbow table\"\n   of password\
    \ hashes; such tables are applicable to all principals in\n   all Kerberos realms.\
    \  Given the prevalence of poor-quality user-\n   selected passwords, it is likely\
    \ that a rainbow table derived from a\n   database of common passwords would be\
    \ able to compromise a sizable\n   number of Kerberos principals in any realm\
    \ using RC4 encryption types\n   for password-derived keys.\n"
- title: 5.3.  Cross-Protocol Key Reuse
  contents:
  - "5.3.  Cross-Protocol Key Reuse\n   The selection of unsalted MD4 as the Kerberos\
    \ string2key function was\n   deliberate, since it allowed systems to be converted\
    \ in-place from\n   the old NT LAN Manager (NTLM) logon protocol [MS-NLMP] to\
    \ use\n   Kerberos.\n   Unfortunately, there still exist systems using NTLM for\n\
    \   authentication to applications, which can result in application\n   servers\
    \ possessing the NT password hash of user passwords.  Because\n   the RC4 string2key\
    \ function was chosen to be compatible with the NTLM\n   scheme, these application\
    \ servers also possess the long-term Kerberos\n   key for those users, even though\
    \ the password is unknown.  The cross-\n   protocol use of the long-term key/password\
    \ hash was convenient for\n   migrating to Kerberos, but it now provides a vulnerability\
    \ in\n   Kerberos as NTLM continues to be used.\n"
- title: 5.4.  Interoperability Concerns
  contents:
  - "5.4.  Interoperability Concerns\n   The RC4 Kerberos encryption type remains\
    \ in use in many environments\n   because of interoperability requirements.  In\
    \ those sites, RC4 is the\n   strongest enctype that allows two parties to use\
    \ Kerberos to\n   communicate.  In particular, the Kerberos implementations included\n\
    \   with Windows XP and Windows Server 2003 support only single-DES and\n   RC4.\
    \  Since single-DES is deprecated [RFC6649], machines running\n   those operating\
    \ systems must use RC4.\n   Similarly, there are cross-realm deployments in which\
    \ the cross-realm\n   key was initially established when one peer only supported\
    \ RC4, or\n   machines only supporting RC4 need to obtain a cross-realm Ticket-\n\
    \   Granting Ticket.  It can be difficult to inventory all clients in a\n   Kerberos\
    \ realm and know what implementations will be used by those\n   client principals;\
    \ this leads to concerns that disabling RC4 will\n   cause breakage on machines\
    \ that are unknown to the realm\n   administrators.\n   Fortunately, modern (i.e.,\
    \ supported) Kerberos implementations\n   support a secure alternative to RC4\
    \ in the form of AES.  Windows has\n   supported AES since 2007-2008 with the\
    \ release of Windows Vista and\n   Server 2008.  MIT Kerberos [MITKRB5] has fully\
    \ supported AES enctypes\n   since 2004 with the release of version 1.3.2, including\
    \ the Kerberos\n   mechanism for the Generic Security Service Application Program\n\
    \   Interface (GSSAPI).  Heimdal [HEIMDAL] has fully supported AES since\n   2005\
    \ with the release of version 0.7.  Though there may still be\n   issues running\
    \ ten-year-old unsupported software in mixed\n   environments with new software,\
    \ issues of that sort seem unlikely to\n   be unique to Kerberos, and the administrators\
    \ of such environments\n   are expected to be capable of devising workarounds.\n"
- title: 6.  Triple-DES Weakness
  contents:
  - "6.  Triple-DES Weakness\n   The flaws in triple-DES as used for Kerberos are\
    \ not quite as damning\n   as those in RC4, but there is still ample justification\
    \ for\n   deprecating its use.  As is the case for the RC4 enctypes, the\n   string2key\
    \ algorithm is weak.  Additionally, the triple-DES\n   encryption types were not\
    \ implemented in all Kerberos\n   implementations, and the 64-bit block size may\
    \ be problematic in some\n   environments.\n"
- title: 6.1.  Password-Based Keys
  contents:
  - "6.1.  Password-Based Keys\n   The n-fold-based string2key function used by the\
    \ des3-cbc-sha1-kd\n   encryption type is an ad hoc construction that should not\
    \ be\n   considered cryptographically sound.  It is known to not provide\n   effective\
    \ mixing of the input bits and is computationally easy to\n   evaluate.  As such,\
    \ it does not slow down brute-force attacks in the\n   way that the computationally\
    \ demanding PBKDF2 algorithm used by more\n   modern encryption types does.  The\
    \ salt is used by des3-cbc-sha1-kd's\n   string2key function, in contrast to RC4,\
    \ but a brute-force dictionary\n   attack on common passwords may still be feasible.\n"
- title: 6.2.  Block Size
  contents:
  - "6.2.  Block Size\n   Triple-DES is based on the single-DES primitive, simply\
    \ using\n   additional key material and nested encryption.  Therefore, it\n  \
    \ inherits the 64-bit cipher block size from single-DES.  As a result,\n   an\
    \ attacker who can collect approximately 2**32 blocks of ciphertext\n   has a\
    \ good chance of finding a cipher block collision (the \"birthday\n   attack\"\
    ), which would potentially reveal a couple of blocks of\n   plaintext.\n   A cipher\
    \ block collision would not necessarily cause the key itself\n   to be leaked,\
    \ so the plaintext revealed by such a collision would be\n   limited.  For some\
    \ sites, that may be an acceptable risk, but it is\n   still considered a weakness\
    \ in the encryption type.\n"
- title: 6.3.  Interoperability Concerns
  contents:
  - "6.3.  Interoperability Concerns\n   The triple-DES encryption types were implemented\
    \ by MIT Kerberos\n   early in its development (ca. 1999) and present in the 1.2\
    \ release,\n   but they were superseded when encryption types 17 and 18 (AES)\
    \ were\n   implemented (by 2003); the AES enctypes were present in the 1.3\n \
    \  release.  The Heimdal Kerberos implementation also provided a version\n   of\
    \ triple-DES in 1999 (though the GSSAPI portions remained non-\n   interoperable\
    \ with MIT for some time after that), gaining support for\n   AES in 2005 with\
    \ its 0.7 release.  Both Heimdal and MIT krb5 have\n   supported the AES enctypes\
    \ for some 12 years, and it is expected that\n   deployments that support triple-DES\
    \ but not AES are quite rare.\n   The Kerberos implementation in Microsoft Windows\
    \ has never\n   implemented the triple-DES encryption type.  Support for AES was\n\
    \   introduced with Windows Vista and Windows Server 2008; older versions\n  \
    \ such as Windows XP and Windows Server 2003 only supported the RC4 and\n   single-DES\
    \ encryption types.\n   The triple-DES encryption type offers very slow encryption,\n\
    \   especially compared to the performance of AES using the hardware\n   acceleration\
    \ available in modern CPUs.  There are no areas where\n   triple-DES offers advantages\
    \ over other encryption types except in\n   the rare case where AES is not available.\n"
- title: 7.  Recommendations
  contents:
  - "7.  Recommendations\n   This document hereby removes the following RECOMMENDED\
    \ types from\n   [RFC4120]:\n      Encryption: DES3-CBC-SHA1-KD\n      Checksum:\
    \ HMAC-SHA1-DES3-KD\n   Kerberos implementations and deployments SHOULD NOT implement\
    \ or\n   deploy the following triple-DES encryption types: DES3-CBC-MD5(5),\n\
    \   DES3-CBC-SHA1(7), and DES3-CBC-SHA1-KD(16) (updates [RFC3961] and\n   [RFC4120]).\n\
    \   Kerberos implementations and deployments SHOULD NOT implement or\n   deploy\
    \ the RC4 encryption type RC4-HMAC(23).\n   Kerberos implementations and deployments\
    \ SHOULD NOT implement or\n   deploy the following checksum types: RSA-MD5(7),\
    \ RSA-MD5-DES3(9),\n   HMAC-SHA1-DES3-KD(12), and HMAC-SHA1-DES3(13) (updates\
    \ [RFC3961] and\n   [RFC4120]).\n   Kerberos GSS mechanism implementations and\
    \ deployments SHOULD NOT\n   implement or deploy the following SGN_ALGs: HMAC\
    \ MD5(1100) and HMAC\n   SHA1 DES3 KD(0400).  (With all its content now deprecated,\
    \ [RFC4757]\n   has been made Historic by this document.)\n   Kerberos GSS mechanism\
    \ implementations and deployments SHOULD NOT\n   implement or deploy the following\
    \ SEAL_ALGs: RC4(1000) and\n   DES3KD(0200).\n   Per this document, [RFC4757]\
    \ has been reclassified as Historic.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document is entirely about security considerations,\
    \ namely that\n   the use of the triple-DES and RC4 Kerberos encryption types\
    \ is not\n   secure, and they should not be used.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA has updated the \"Kerberos Encryption Type Numbers\"\
    \ registry\n   [IANA-KRB] to note that 1) encryption types 1, 2, 3, and 24 are\n\
    \   deprecated, with [RFC6649] as the reference and that 2) encryption\n   types\
    \ 5, 7, 16, and 23 are deprecated, with this document as the\n   reference.\n\
    \   Similarly, IANA has updated the \"Kerberos Checksum Type Numbers\"\n   registry\
    \ [IANA-KRB] to note that 1) checksum type values 1, 2, 3, 4,\n   5, 6, and 8\
    \ are deprecated, with [RFC6649] as the reference, and that\n   2) checksum type\
    \ values 7, 12, and 13 are deprecated, with this\n   document as the reference.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3961]  Raeburn, K., \"Encryption and Checksum Specifications for\n   \
    \           Kerberos 5\", RFC 3961, DOI 10.17487/RFC3961, February\n         \
    \     2005, <https://www.rfc-editor.org/info/rfc3961>.\n   [RFC4120]  Neuman,\
    \ C., Yu, T., Hartman, S., and K. Raeburn, \"The\n              Kerberos Network\
    \ Authentication Service (V5)\", RFC 4120,\n              DOI 10.17487/RFC4120,\
    \ July 2005,\n              <https://www.rfc-editor.org/info/rfc4120>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [HEIMDAL]  Heimdal Project, \"The Heimdal Kerberos\
    \ 5, PKIX, CMS, GSS-\n              API, SPNEGO, NTLM, Digest-MD5 and, SASL implementation\"\
    ,\n              <https://www.h5l.org/>.\n   [IANA-KRB]\n              IANA, \"\
    Kerberos Parameters\",\n              <https://www.iana.org/assignments/kerberos-parameters/>.\n\
    \   [MITKRB5]  MIT, \"Kerberos: The Network Authentication Protocol\",\n     \
    \         <https://web.mit.edu/kerberos/>.\n   [MS-NLMP]  Microsoft Corporation,\
    \ \"[MS-NLMP]: NT LAN Manager (NTLM)\n              Authentication Protocol\"\
    , September 2017,\n              <https://msdn.microsoft.com/en-us/library/cc236621.aspx>.\n\
    \   [RFC4757]  Jaganathan, K., Zhu, L., and J. Brezak, \"The RC4-HMAC\n      \
    \        Kerberos Encryption Types Used by Microsoft Windows\",\n            \
    \  RFC 4757, DOI 10.17487/RFC4757, December 2006,\n              <https://www.rfc-editor.org/info/rfc4757>.\n\
    \   [RFC6150]  Turner, S. and L. Chen, \"MD4 to Historic Status\",\n         \
    \     RFC 6150, DOI 10.17487/RFC6150, March 2011,\n              <https://www.rfc-editor.org/info/rfc6150>.\n\
    \   [RFC6649]  Hornquist Astrand, L. and T. Yu, \"Deprecate DES, RC4-HMAC-\n \
    \             EXP, and Other Weak Cryptographic Algorithms in Kerberos\",\n  \
    \            BCP 179, RFC 6649, DOI 10.17487/RFC6649, July 2012,\n           \
    \   <https://www.rfc-editor.org/info/rfc6649>.\n   [RFC7465]  Popov, A., \"Prohibiting\
    \ RC4 Cipher Suites\", RFC 7465,\n              DOI 10.17487/RFC7465, February\
    \ 2015,\n              <https://www.rfc-editor.org/info/rfc7465>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many people have contributed to the understanding of the\
    \ weaknesses\n   of these encryption types over the years, and they cannot all\
    \ be\n   named here.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Benjamin Kaduk\n   Akamai Technologies\n   Email: kaduk@mit.edu\n\
    \   Michiko Short\n   Microsoft Corporation\n   Email: michikos@microsoft.com\n"
