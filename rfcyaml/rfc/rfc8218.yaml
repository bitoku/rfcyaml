- title: __initial_text__
  contents:
  - "                      Multipath Extension for the\n        Optimized Link State\
    \ Routing Protocol Version 2 (OLSRv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a multipath extension for the Optimized\
    \ Link\n   State Routing Protocol version 2 (OLSRv2) to discover multiple\n  \
    \ disjoint paths for Mobile Ad Hoc Networks (MANETs).  Considering the\n   characteristics\
    \ of MANETs, especially the dynamic network topology,\n   using multiple paths\
    \ can increase aggregated throughput and improve\n   the reliability by avoiding\
    \ single route failures.  The\n   interoperability with OLSRv2 is retained.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 7841.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8218.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  Motivation and Experiments to Be Conducted  . . .\
    \ . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   7\n   3.  Applicability Statement . . . . . . . . . . . . . . . . .\
    \ . .   7\n   4.  Protocol Overview and Functioning . . . . . . . . . . . . .\
    \ .   8\n   5.  Parameters and Constants  . . . . . . . . . . . . . . . . . .\
    \   9\n     5.1.  Router Parameters . . . . . . . . . . . . . . . . . . . .  \
    \ 9\n   6.  Packets and Messages  . . . . . . . . . . . . . . . . . . . .  10\n\
    \     6.1.  HELLO and TC messages . . . . . . . . . . . . . . . . . .  10\n  \
    \     6.1.1.  SOURCE_ROUTE TLV  . . . . . . . . . . . . . . . . . .  10\n    \
    \ 6.2.  Datagram  . . . . . . . . . . . . . . . . . . . . . . . .  11\n      \
    \ 6.2.1.  Source Routing Header in IPv4 . . . . . . . . . . . .  11\n       6.2.2.\
    \  Source Routing Header in IPv6 . . . . . . . . . . . .  11\n   7.  Information\
    \ Bases . . . . . . . . . . . . . . . . . . . . . .  11\n     7.1.  SR-OLSRv2\
    \ Router Set  . . . . . . . . . . . . . . . . . .  11\n     7.2.  Multipath Routing\
    \ Set . . . . . . . . . . . . . . . . . .  12\n   8.  Protocol Details  . . .\
    \ . . . . . . . . . . . . . . . . . . .  12\n     8.1.  HELLO and TC Message Generation\
    \ . . . . . . . . . . . . .  12\n     8.2.  HELLO and TC Message Processing .\
    \ . . . . . . . . . . . .  13\n     8.3.  MPR Selection . . . . . . . . . . .\
    \ . . . . . . . . . . .  13\n     8.4.  Datagram Processing at the MP-OLSRv2 Originator\
    \ . . . . .  14\n     8.5.  Multipath Calculation . . . . . . . . . . . . . .\
    \ . . . .  15\n       8.5.1.  Requirements of Multipath Calculation . . . . .\
    \ . . .  15\n       8.5.2.  Multipath Dijkstra Algorithm  . . . . . . . . . .\
    \ . .  16\n     8.6.  Multipath Routing Set Updates . . . . . . . . . . . . .\
    \ .  18\n     8.7.  Datagram Forwarding . . . . . . . . . . . . . . . . . . .\
    \  18\n   9.  Configuration Parameters  . . . . . . . . . . . . . . . . . .  18\n\
    \   10. Security Considerations . . . . . . . . . . . . . . . . . . .  19\n  \
    \ 11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  20\n    \
    \ 11.1.  Message TLV Types  . . . . . . . . . . . . . . . . . . .  20\n   12.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . .  21\n     12.1.\
    \  Normative References . . . . . . . . . . . . . . . . . .  21\n     12.2.  Informative\
    \ References . . . . . . . . . . . . . . . . .  22\n   Appendix A.  Examples of\
    \ Multipath Dijkstra Algorithm . . . . . .  24\n   Acknowledgments . . . . . .\
    \ . . . . . . . . . . . . . . . . . . .  25\n   Authors' Addresses  . . . . .\
    \ . . . . . . . . . . . . . . . . . .  26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Optimized Link State Routing Protocol version 2 (OLSRv2)\n\
    \   [RFC7181] is a proactive link state protocol designed for use in\n   Mobile\
    \ Ad Hoc Networks (MANETs).  It generates routing messages\n   periodically to\
    \ create and maintain a Routing Set, which contains\n   routing information to\
    \ all the possible destinations in the routing\n   domain.  For each destination,\
    \ there exists a unique Routing Tuple,\n   which indicates the next hop to reach\
    \ the destination.\n   This document specifies an extension of the OLSRv2 protocol\
    \ [RFC7181]\n   to provide multiple disjoint paths when appropriate for a source-\n\
    \   destination pair.  Because of the characteristics of MANETs\n   [RFC2501],\
    \ especially the dynamic topology, having multiple paths is\n   helpful for increasing\
    \ network throughput, improving forwarding\n   reliability, and load-balancing.\n\
    \   Multipath OLSRv2 (MP-OLSRv2), specified in this document, uses the\n   Multipath\
    \ Dijkstra Algorithm by default to explore multiple disjoint\n   paths from a\
    \ source router to a destination router based on the\n   topology information\
    \ obtained through OLSRv2 and to forward the\n   datagrams in a load-balancing\
    \ manner using source routing.  MP-OLSRv2\n   is designed to be interoperable\
    \ with OLSRv2.\n"
- title: 1.1.  Motivation and Experiments to Be Conducted
  contents:
  - "1.1.  Motivation and Experiments to Be Conducted\n   This document is an experimental\
    \ extension of OLSRv2 that can\n   increase the data forwarding reliability in\
    \ dynamic and high-load\n   MANET scenarios by transmitting datagrams over multiple\
    \ disjoint\n   paths using source routing.  This mechanism is used because:\n\
    \   o  Disjoint paths can avoid single route failures.\n   o  Transmitting datagrams\
    \ through parallel paths can increase\n      aggregated throughput.\n   o  Some\
    \ scenarios may require that some routers must (or must not) be\n      used.\n\
    \   o  Having control of the paths at the source benefits the load-\n      balancing\
    \ and traffic engineering.\n   o  An application of this extension is in combination\
    \ with Forward\n      Error Correction (FEC) coding applied across packets (erasure\n\
    \      coding) [WPMC11].  Because the packet drops are normally bursty in\n  \
    \    a path (for example, due to route failure), erasure coding is less\n    \
    \  effective in single path routing protocols.  By providing multiple\n      disjoint\
    \ paths, the application of erasure coding with multipath\n      protocol is more\
    \ resilient to routing failures.\n   In existing deployments, while running code\
    \ and simulations have\n   proven the interest of multipath extension for OLSRv2\
    \ in certain\n   networks [GIIS14][WCNC08][ADHOC11], more experiments and experiences\n\
    \   are still needed to understand the effects of the protocol specified\n   in\
    \ this Experimental RFC.  The multipath extension for OLSRv2 is\n   expected to\
    \ be revised and documented as a Standards Track RFC once\n   sufficient operational\
    \ experience is obtained.  Other than general\n   experiences, including the protocol\
    \ specification and\n   interoperability with base OLSRv2 implementations, experiences\
    \ in the\n   following aspects are highly appreciated:\n   o  Optimal values for\
    \ the number of multiple paths (NUMBER_OF_PATHS,\n      see Section 5) to be used.\
    \  This depends on the network topology\n      and router density.\n   o  Optimal\
    \ values used in the metric functions.  Metric functions are\n      applied to\
    \ increase the metric of used links and nodes so as to\n      obtain disjoint\
    \ paths.  What kind of disjointness is desired (node\n      disjoint or link disjoint)\
    \ may depend on the Layer 2 protocol used\n      and can be achieved by applying\
    \ different sets of metric\n      functions.\n   o  Use of different metric types.\
    \  This multipath extension can be\n      used with metric types that meet the\
    \ requirement of OLSRv2, such\n      as [RFC7779].  The metric type used also\
    \ has an impact on the\n      choice of metric functions as indicated in the previous\
    \ bullet\n      point.\n   o  The impact of partial topology information to multipath\n\
    \      calculation.  OLSRv2 maintains a partial topology information base\n  \
    \    to reduce protocol overhead.  Experience has shown that multiple\n      paths\
    \ can be obtained even with such partial information; however,\n      depending\
    \ on the Multipoint Relay (MPR) selection algorithm used,\n      the disjointness\
    \ of the multiple paths might be impacted depending\n      on the Multipoint Relay\
    \ (MPR) selection algorithm used.\n   o  Use of IPv6 loose source routing.  In\
    \ the current specification,\n      only strict source routing is used for IPv6\
    \ based on [RFC6554].\n      In [IPv6-SRH], the use of the loose source routing\
    \ is also\n      proposed in IPv6.  In scenarios where the length of the source\n\
    \      routing header is critical, the loose source routing can be\n      considered.\n\
    \   o  Optimal choice of \"key\" routers for loose source routing.  In some\n\
    \      cases, loose source routing is used to reduce overhead or for\n      interoperability\
    \ with OLSRv2 routers.  Other than the basic rules\n      defined in the following\
    \ parts of this document, optimal choices\n      of routers to put in the loose\
    \ source routing header can be\n      further studied.\n   o  Different path-selection\
    \ schedulers.  Depending on the application\n      type and transport layer type,\
    \ either a per-flow scheduler or per-\n      datagram scheduler is applied.  By\
    \ default, the traffic load\n      should be equally distributed in multiple paths.\
    \  In some\n      scenarios, weighted scheduling can be considered: for example,\
    \ the\n      paths with lower metrics (i.e., higher quality) can transfer more\n\
    \      datagrams or flows compared to paths with higher metrics.\n   o  The impacts\
    \ of the delay variation due to multipath routing.\n      [RFC2991] brings out\
    \ some concerns of multipath routing,\n      especially variable latencies when\
    \ per-datagram scheduling is\n      applied.  Although current experiment results\
    \ show that multipath\n      routing can reduce the jitter in dynamic scenarios,\
    \ some transport\n      protocols or applications may be sensitive to the datagram\n\
    \      reordering.\n   o  The disjoint multipath protocol has an interesting application\n\
    \      with erasure coding, especially for services like video/audio\n      streaming\
    \ [WPMC11].  The combination of erasure coding mechanisms\n      and this extension\
    \ is thus encouraged.\n   o  Different algorithms to obtain multiple paths, other\
    \ than the\n      default Multipath Dijkstra Algorithm introduced in Section 8.5.2\n\
    \      of this specification.\n   o  The use of multitopology information.  By\
    \ using [RFC7722],\n      multiple topologies using different metric types can\
    \ be obtained.\n      Although there is no work defining how this extension can\
    \ make use\n      of the multitopology information base yet, experimentation with\n\
    \      the use of multiple metrics for building multiple paths is\n      encouraged.\n\
    \   Comments are solicited and should be addressed to the MANET working\n   group's\
    \ mailing list at manet@ietf.org and/or the authors.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n   This document uses the terminology and notation\
    \ defined in [RFC5444],\n   [RFC6130], and [RFC7181].  Additionally, it defines\
    \ the following\n   terminology:\n   OLSRv2 Routing Process:  A routing process\
    \ based on [RFC7181],\n      without multipath extension specified in this document.\n\
    \   MP-OLSRv2 Routing Process:  A Multipath Routing Process based on this\n  \
    \    specification as an extension to [RFC7181].\n   SR-OLSRv2 Routing Process:\
    \  An OLSRv2 Routing Process that supports\n      Source Routing (SR) or an MP-OLSRv2\
    \ Routing Process.\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   As an extension of OLSRv2, this specification\
    \ is applicable to MANETs\n   for which OLSRv2 is applicable (see [RFC7181]).\
    \  It can operate on\n   single or multiple interfaces to discover multiple disjoint\
    \ paths\n   from a source router to a destination router.  MP-OLSRv2 is designed\n\
    \   for networks with dynamic topology to avoid single route failure.  It\n  \
    \ can also provide higher aggregated throughput and load-balancing.\n   In a router\
    \ supporting MP-OLSRv2, MP-OLSRv2 does not necessarily\n   replace OLSRv2 completely.\
    \  The extension can be applied for certain\n   applications that are suitable\
    \ for multipath routing (mainly video or\n   audio streams) based on information\
    \ such as a Diffserv codepoint\n   [RFC2474].\n   Compared to OLSRv2, this extension\
    \ does not introduce any new message\n   type.  A new Message TLV Type is introduced\
    \ to identify the routers\n   that support forwarding based on the source routing\
    \ header.  It is\n   interoperable with OLSRv2 implementations that do not have\
    \ this\n   extension: as the MP-OLSRv2 uses source routing, in IPv4 networks the\n\
    \   interoperability is achieved using loose source routing headers; in\n   IPv6\
    \ networks, it is achieved by eliminating routers that do not\n   support IPv6\
    \ strict source routing.\n   MP-OLSRv2 supports two different but interoperable\
    \ multipath\n   calculation approaches: proactive and reactive.  In the proactive\n\
    \   calculation, the paths to all the destinations are calculated before\n   they\
    \ are needed.  In the reactive calculation, only the paths to\n   desired destination(s)\
    \ are calculated on demand.  The proactive\n   approach requires more computational\
    \ resources than the reactive one.\n   The reactive approach requires the IP forwarding\
    \ plane to trigger the\n   multipath calculation.\n   MP-OLSRv2 forwards datagrams\
    \ using the source routing header.  As\n   there are multiple paths to each destination,\
    \ MP-OLSRv2 requires the\n   IP forwarding plane to be able to choose which source\
    \ route to be put\n   in the source routing header based on the path scheduler\
    \ defined by\n   MP-OLSRv2.  For IPv4 networks, implementation of loose source\
    \ routing\n   is required following [RFC791].  For IPv6 networks, implementation\
    \ of\n   strict source routing is required following the source routing header\n\
    \   generation and processing defined in [RFC6554].\n"
- title: 4.  Protocol Overview and Functioning
  contents:
  - "4.  Protocol Overview and Functioning\n   This specification uses OLSRv2 [RFC7181]\
    \ to:\n   o  Identify all the reachable routers in the network.\n   o  Identify\
    \ a sufficient subset of links in the networks so that\n      routes can be calculated\
    \ to all reachable destinations.\n   o  Provide a Routing Set containing the shortest\
    \ routes from this\n      router to all destinations.\n   In addition, the MP-OLSRv2\
    \ Routing Process identifies the routers\n   that support source routing by adding\
    \ a new Message TLV in HELLO and\n   Topology Control (TC) messages.  Based on\
    \ the above information\n   acquired, every MP-OLSRv2 Routing Process is aware\
    \ of a reduced\n   topology map of the network and the routers supporting source\n\
    \   routing.\n   A Multipath Routing Set containing the multipath information\
    \ is\n   maintained.  It may be either proactively calculated or reactively\n\
    \   calculated:\n   o  In the proactive approach, multiple paths to all possible\n\
    \      destinations are calculated and updated based on control message\n    \
    \  exchange.  The routes are thus available before they are actually\n      needed.\n\
    \   o  In the reactive approach, a multipath algorithm is invoked on\n      demand,\
    \ i.e., only when there is a datagram to be sent from the\n      source to the\
    \ destination and there is no available Routing Tuple\n      in the Multipath\
    \ Routing Set.  This requires the IP forwarding\n      information base to trigger\
    \ the multipath calculation specified in\n      Section 8.5 when no Multipath\
    \ Routing Tuple is available.  The\n      reactive operation is local to the router\
    \ and no additional\n      exchange of routing control messages is required. \
    \ When the paths\n      are being calculated, the datagrams SHOULD be buffered\
    \ unless the\n      router does not have enough memory.\n   Routers in the same\
    \ network may choose either proactive or reactive\n   multipath calculation independently\
    \ according to their computation\n   resources.  The Multipath Dijkstra Algorithm\
    \ (defined in Section 8.5)\n   is introduced as the default algorithm to generate\
    \ multiple disjoint\n   paths from a source to a destination, and such information\
    \ is kept in\n   the Multipath Routing Set.\n   The datagram is forwarded based\
    \ on source routing.  When there is a\n   datagram to be sent to a destination,\
    \ the source router acquires a\n   path from the Multipath Routing Set.  The path\
    \ information is stored\n   in the datagram header using the source routing header.\n"
- title: 5.  Parameters and Constants
  contents:
  - "5.  Parameters and Constants\n   In addition to the parameters and constants\
    \ defined in [RFC7181],\n   this specification uses the parameters and constants\
    \ described in\n   this section.\n"
- title: 5.1.  Router Parameters
  contents:
  - "5.1.  Router Parameters\n   NUMBER_OF_PATHS:  The number of paths desired by\
    \ the router.\n   MAX_SRC_HOPS:  The maximum number of hops allowed to be put\
    \ in the\n      source routing header.  A value set to 0 means there is no\n \
    \     limitation on the maximum number of hops.  In an IPv6 network, it\n    \
    \  MUST be set to 0 because [RFC6554] supports only strict source\n      routing.\
    \  All the intermediate routers MUST be included in the\n      source routing\
    \ header, which is a various number of hops.  In an\n      IPv4 network, it MUST\
    \ be strictly less than 11 and greater than 0\n      due to the length limit of\
    \ the IPv4 header.\n   CUTOFF_RATIO:  The ratio that defines the maximum metric\
    \ of a path\n      compared to the shortest path kept in the OLSRv2 Routing Set.\
    \  For\n      example, the metric to a destination is R_metric based on the\n\
    \      Routing Set.  Then, the maximum metric allowed for a path is\n      CUTOFF_RATIO\
    \ * R_metric.  CUTOFF_RATIO MUST be greater than or\n      equal to 1.  Setting\
    \ the number low makes it less likely that\n      additional paths will be found\
    \ -- for example, setting it to 1\n      will mean only equal length paths are\
    \ considered.\n   SR_TC_INTERVAL:  The maximum time between the transmission of\
    \ two\n      successive TC messages by an MP-OLSRv2 Routing Process.\n   SR_HOLD_TIME:\
    \  The minimum value in the TLV with Type = VALIDITY_TIME\n      included in TC\
    \ messages generated based on SR_TC_INTERVAL.\n"
- title: 6.  Packets and Messages
  contents:
  - "6.  Packets and Messages\n   This extension employs the routing control messages\
    \ HELLO and TC as\n   defined in OLSRv2 [RFC7181] to obtain network topology information.\n\
    \   For the datagram to support source routing, a source routing header\n   is\
    \ added to each datagram routed by this extension.  Depending on the\n   IP version\
    \ used, the source routing header is defined in this\n   section.\n"
- title: 6.1.  HELLO and TC messages
  contents:
  - "6.1.  HELLO and TC messages\n   HELLO and TC messages used by the MP-OLSRv2 Routing\
    \ Process use the\n   same format as defined in [RFC7181].  In addition, a new\
    \ Message TLV\n   Type is defined to identify the originator of the HELLO or TC\
    \ message\n   that supports source-route forwarding.  The new Message TLV Type\
    \ is\n   introduced for enabling MP-OLSRv2 as an extension of OLSRv2: only the\n\
    \   routers supporting source-route forwarding can be used in the source\n   routing\
    \ header of a datagram because adding a router that does not\n   understand the\
    \ source routing header will cause routing failure.\n"
- title: 6.1.1.  SOURCE_ROUTE TLV
  contents:
  - "6.1.1.  SOURCE_ROUTE TLV\n   The SOURCE_ROUTE TLV is a Message TLV signaling\
    \ that the message is\n   generated by a router that supports source-route forwarding.\
    \  It can\n   be an MP-OLSRv2 Routing Process or an OLSRv2 Routing Process that\n\
    \   supports source-route forwarding.\n   Every HELLO or TC message generated\
    \ by a MP-OLSRv2 Routing Process\n   MUST have exactly one SOURCE_ROUTE TLV without\
    \ value.\n   Every HELLO or TC message generated by an OLSRv2 Routing Process\
    \ MUST\n   have exactly one SOURCE_ROUTE TLV, if the OLSRv2 Routing Process\n\
    \   supports source-route forwarding, and be willing to join the source\n   route\
    \ generated by other MP-OLSRv2 Routing Processes.  The existence\n   of SOURCE_ROUTE\
    \ TLV MUST be consistent for a specific OLSRv2 Routing\n   Process, i.e., either\
    \ it adds SOURCE_ROUTE TLV to all its HELLO/TC\n   messages or it does not add\
    \ SOURCE_ROUTE TLV to any HELLO/TC\n   messages.\n"
- title: 6.2.  Datagram
  contents:
  - '6.2.  Datagram

    '
- title: 6.2.1.  Source Routing Header in IPv4
  contents:
  - "6.2.1.  Source Routing Header in IPv4\n   In IPv4 [RFC791] networks, the MP-OLSRv2\
    \ Routing Process employs the\n   loose source routing header, as defined in [RFC791].\
    \  It exists as an\n   option header with option class 0 and option number 3.\n\
    \   The source route information is kept in the \"route data\" field of the\n\
    \   loose source routing header.\n"
- title: 6.2.2.  Source Routing Header in IPv6
  contents:
  - "6.2.2.  Source Routing Header in IPv6\n   In IPv6 [RFC8200] networks, the MP-OLSRv2\
    \ Routing Process employs the\n   source routing header, as defined in Section\
    \ 3 of [RFC6554], with\n   IPv6 Routing Type 3.\n   The source route information\
    \ is kept in the \"Addresses\" field of the\n   routing header.\n"
- title: 7.  Information Bases
  contents:
  - "7.  Information Bases\n   Each MP-OLSRv2 Routing Process maintains the information\
    \ bases as\n   defined in [RFC7181].  Additionally, a Multipath Information Base\
    \ is\n   used for this specification.  It includes the protocol sets as\n   defined\
    \ below.\n"
- title: 7.1.  SR-OLSRv2 Router Set
  contents:
  - "7.1.  SR-OLSRv2 Router Set\n   The SR-OLSRv2 Router Set records the routers that\
    \ support source-\n   route forwarding.  This includes routers that run the MP-OLSRv2\n\
    \   Routing Process or the OLSRv2 Routing Process with source-route\n   forwarding\
    \ support.  The set consists of SR-OLSRv2 Routing Tuple:\n   (SR_addr, SR_time)\n\
    \   where:\n      SR_addr is the originator address of the router that supports\n\
    \      source-route forwarding.\n      SR_time is the time until which the SR-OLSRv2\
    \ Routing Tuple is\n      considered valid.\n"
- title: 7.2.  Multipath Routing Set
  contents:
  - "7.2.  Multipath Routing Set\n   The Multipath Routing Set records the full path\
    \ information of\n   different paths to the destination.  It consists of Multipath\
    \ Routing\n   Tuple:\n   (MR_dest_addr, MR_path_set)\n   where:\n      MR_dest_addr\
    \ is the network address of the destination; it is\n      either the network address\
    \ of an interface of a destination router\n      or the network address of an\
    \ attached network.\n      MP_path_set contains the multiple paths to the destination\
    \ and it\n      consists of a set of Path Tuples.\n   Each Path Tuple is defined\
    \ as:\n   (PT_metric, PT_address[1], PT_address[2], ..., PT_address[n])\n   where:\n\
    \      PT_metric is the metric of the path to the destination, measured\n    \
    \  in LINK_METRIC_TYPE defined in [RFC7181].\n      PT_address[1, ..., n-1] are\
    \ the addresses of intermediate routers\n      to be visited, numbered from 1\
    \ to n-1, where n is the number of\n      routers in the path, i.e., the hop count.\n"
- title: 8.  Protocol Details
  contents:
  - "8.  Protocol Details\n   This protocol is based on OLSRv2 and is extended to\
    \ discover multiple\n   disjoint paths from a source router to a destination router.\
    \  It\n   retains the formats of the basic routing control packets and the\n \
    \  processing of OLSRv2 to obtain the topology information of the\n   network.\
    \  The main differences from the OLSRv2 Routing Process are\n   the datagram processing\
    \ at the source router and datagram forwarding.\n"
- title: 8.1.  HELLO and TC Message Generation
  contents:
  - "8.1.  HELLO and TC Message Generation\n   HELLO messages are generated according\
    \ to Section 15.1 of [RFC7181],\n   plus a single message TLV with Type := SOURCE_ROUTE\
    \ included.\n   TC messages are generated according to Section 16.1 of [RFC7181],\n\
    \   plus a single message TLV with Type := SOURCE_ROUTE included.\n   For the\
    \ routers that do not generate TC messages according to\n   [RFC7181], at least\
    \ one TC message MUST be generated by an MP-OLSRv2\n   Routing Process during\
    \ the SR_TC_INTERVAL (Section 5), which MUST be\n   greater than or equal to TC_INTERVAL.\
    \  Those TC messages MUST NOT\n   carry any advertised neighbor addresses.  This\
    \ serves for those\n   routers to advertise the SOURCE_ROUTE TLV so that the other\
    \ routers\n   can be aware of the routers that are source-route enabled so as\
    \ to be\n   used as destinations of multipath routing.  The validity time\n  \
    \ associated with the VALIDITY_TIME TLV in such TC messages equals\n   SR_HOLD_TIME,\
    \ which MUST be greater than the SR_TC_INTERVAL.  If the\n   TC message carries\
    \ an optional INTERVAL_TIME TLV, it MUST have a\n   value encoding the SR_TC_INTERVAL.\n"
- title: 8.2.  HELLO and TC Message Processing
  contents:
  - "8.2.  HELLO and TC Message Processing\n   HELLO and TC messages are processed\
    \ according to Sections 15.3 and\n   16.3 of [RFC7181].\n   In addition to the\
    \ reasons specified in [RFC7181] for discarding a\n   HELLO message or a TC message\
    \ on reception, a HELLO or TC message\n   received MUST be discarded if it has\
    \ more than one Message TLV with\n   Type = SOURCE_ROUTE.\n   For every HELLO\
    \ or TC message received, if there is a Message TLV\n   with Type := SOURCE_ROUTE,\
    \ create or update (if the Tuple exists\n   already) the SR-OLSR Routing Tuple\
    \ with:\n   o  SR_addr := originator address of the HELLO or TC message\n   o\
    \  SR_time := current_time + validity time of the TC or HELLO message\n      defined\
    \ in [RFC7181].\n"
- title: 8.3.  MPR Selection
  contents:
  - "8.3.  MPR Selection\n   Each MP-OLSRv2 Routing Process selects routing MPRs and\
    \ flooding MPRs\n   following Section 18 of [RFC7181].  In a mixed network with\n\
    \   OLSRv2-only routers, the following considerations apply when\n   calculating\
    \ MPRs:\n   o  MP-OLSRv2 routers SHOULD be preferred as routing MPRs to increase\n\
    \      the possibility of finding disjoint paths using MP-OLSRv2 routers.\n  \
    \ o  The number of routing MPRs that run the MP-OLSRv2 Routing Process\n     \
    \ MUST be equal to or greater than NUMBER_OF_PATHS if there are\n      enough\
    \ MP-OLSRv2 symmetric neighbors.  Otherwise, all the\n      MP-OLSRv2 routers\
    \ are selected as routing MPRs, except the routers\n      with willingness WILL_NEVER.\n"
- title: 8.4.  Datagram Processing at the MP-OLSRv2 Originator
  contents:
  - "8.4.  Datagram Processing at the MP-OLSRv2 Originator\n   If datagrams without\
    \ a source routing header need to be forwarded\n   using multiple paths (for example,\
    \ based on the information of a\n   Diffserv codepoint [RFC2474]), the MP-OLSRv2\
    \ Routing Process will try\n   to find the Multipath Routing Tuple where:\n  \
    \ o  MR_dest_addr = destination of the datagram\n   If no matching Multipath Routing\
    \ Tuple is found and the Multipath\n   Routing Set is maintained proactively,\
    \ it indicates that there is no\n   multipath route available to the desired destination.\
    \  The datagram\n   is forwarded following the OLSRv2 Routing Process.\n   If\
    \ no matching Multipath Routing Tuple is found and the Multipath\n   Routing Set\
    \ is maintained reactively, the multipath algorithm defined\n   in Section 8.5\
    \ is invoked to calculate the Multipath Routing Tuple to\n   the destination.\
    \  If the calculation does not return any Multipath\n   Routing Tuple, the following\
    \ steps are aborted and the datagram is\n   forwarded following the OLSRv2 Routing\
    \ Process.\n   If a matching Multipath Routing Tuple is obtained, the Path Tuples\
    \ of\n   the Multipath Routing Tuple are applied to the datagrams using either\n\
    \   per-flow or per-datagram scheduling, depending on the transport layer\n  \
    \ protocol and the application used.  By default, per-flow scheduling\n   is used,\
    \ especially for the transport protocols that are sensitive to\n   reordering,\
    \ such as TCP.  The path-selection decision is made on the\n   first datagram\
    \ and all subsequent datagrams of the same flow use the\n   same path.  If the\
    \ path breaks before the flow is closed, another\n   path with the most similar\
    \ metric is used.  Per-datagram scheduling\n   is recommended if the traffic is\
    \ insensitive to reordering such as\n   unreliable transmission of media traffic\
    \ or when erasure coding is\n   applied.  In such a case, each datagram selects\
    \ its paths\n   independently.\n   By default, the traffic load should be equally\
    \ distributed in\n   multiple paths.  Other path-scheduling mechanisms (e.g.,\
    \ assigning\n   more traffic over better paths) are also possible and will not\
    \ impact\n   the interoperability of different implementations.\n   The addresses\
    \ in PT_address[1, ..., n-1] of the chosen Path Tuple are\n   thus added to the\
    \ datagram header as the source routing header.  For\n   IPv6 networks, strict\
    \ source routing is used; thus, all the\n   intermediate routers in the path are\
    \ stored in the source routing\n   header following the format defined in Section\
    \ 3 of [RFC6554] with\n   the Routing Type set to 3.\n   For IPv4 networks, loose\
    \ source routing is used with the following\n   rules:\n   o  Only the addresses\
    \ that exist in the SR-OLSR Router Set can be\n      added to the source routing\
    \ header.\n   o  If the length of the path (n) is greater than MAX_SRC_HOPS\n\
    \      (Section 5) or if adding the whole path information exceeds the\n     \
    \ MTU, only the \"key\" routers in the path are kept.  By default, the\n     \
    \ key routers are uniformly chosen in the path.  If further\n      information,\
    \ such as the capacity of the routers (e.g., battery\n      life) or the routers'\
    \ willingness in forwarding data, is\n      available, the routers with higher\
    \ capacity and willingness are\n      preferred.\n   o  The routers that are considered\
    \ not appropriate for forwarding\n      indicated by external policies should\
    \ be avoided.\n   It is not recommended to fragment the IP packet if the packet\
    \ with\n   the source routing header would exceed the minimum MTU along the\n\
    \   path.  Depending on the size of the routing domain, the MTU should be\n  \
    \ at least 1280 + 40 (for the outer IP header) + 16 * diameter of the\n   network\
    \ in number of hops (for the source routing header).  If the\n   links in the\
    \ network have different MTU sizes, by using technologies\n   like Path MTU Discovery,\
    \ the routers are able to be aware of the MTU\n   along the path.  The size of\
    \ the datagram plus the size of IP headers\n   (including the source routing header)\
    \ should not exceed the minimum\n   MTU along the path; otherwise, the source\
    \ routing should not be used.\n   If the destination of the datagrams is out of\
    \ the MP-OLSRv2 routing\n   domain, the datagram must be source routed to the\
    \ gateway between the\n   MP-OLSRv2 routing domain and the rest of the Internet.\
    \  The gateway\n   MUST remove the source routing header before forwarding the\
    \ datagram\n   to the rest of the Internet.\n"
- title: 8.5.  Multipath Calculation
  contents:
  - '8.5.  Multipath Calculation

    '
- title: 8.5.1.  Requirements of Multipath Calculation
  contents:
  - "8.5.1.  Requirements of Multipath Calculation\n   The Multipath Routing Set maintains\
    \ the information of multiple paths\n   to the destination.  The Path Tuples of\
    \ the Multipath Routing Set\n   (Section 7.2) are generated based on a multipath\
    \ algorithm.\n   For each path to a destination, the algorithm must provide:\n\
    \   o  The metric of the path to the destination,\n   o  The list of intermediate\
    \ routers on the path.\n   For IPv6 networks, as strict source routing is used,\
    \ only the routers\n   that exist in the SR-OLSRv2 Router Set are considered in\
    \ the path\n   calculation, i.e., only the source-routing-supported routers can\n\
    \   exist in the path.\n   After the calculation of multiple paths, the metric\
    \ of paths (denoted\n   c_i for path i) to the destination is compared to the\
    \ R_metric of the\n   OLSRv2 Routing Tuple ([RFC7181]) to the same destination.\
    \  If the\n   metric c_i is greater than R_metric * CUTOFF_RATIO (Section 5),\
    \ the\n   corresponding path i SHOULD NOT be used.  If less than two paths are\n\
    \   found with metrics less than R_metric * CUTOFF_RATIO, the router\n   SHOULD\
    \ fall back to OLSRv2 Routing Process without using multipath\n   routing.  This\
    \ can happen if there are too many OLSRv2-only routers\n   in the network, and\
    \ requiring multipath routing may result in\n   inferior paths.\n   By invoking\
    \ the multipath algorithm, up to NUMBER_OF_PATHS paths are\n   obtained and added\
    \ to the Multipath Routing Set by creating a\n   Multipath Routing Tuple with:\n\
    \   o  MR_dest_addr := destination of the datagram.\n   o  An MP_path_set with\
    \ calculated Path Tuples.  Each Path Tuple\n      corresponds to a path obtained\
    \ in the Multipath Dijkstra\n      Algorithm, with PT_metric := metric of the\
    \ calculated path and\n      PT_address[1, ..., n-1] := list of intermediate routers.\n"
- title: 8.5.2.  Multipath Dijkstra Algorithm
  contents:
  - "8.5.2.  Multipath Dijkstra Algorithm\n   This section introduces the Multipath\
    \ Dijkstra Algorithm as a default\n   algorithm.  It tries to obtain disjoint\
    \ paths when appropriate, but\n   it does not guarantee strict disjoint paths.\
    \  The use of other\n   algorithms is not prohibited, as long as the requirements\
    \ described\n   in Section 8.5.1 are met.  Using different multipath algorithms\
    \ will\n   not impact the interoperability.\n   The general principle of the Multipath\
    \ Dijkstra Algorithm [ADHOC11]\n   is to use the Dijkstra Algorithm for multiple\
    \ iterations and to look\n   for the shortest path P[i] to the destination d at\
    \ iteration i.\n   After each iteration, the metric of used links is increased.\n\
    \   Compared to the original Dijkstra's algorithm, the main modification\n   consists\
    \ in adding two incremental functions, named metric functions\n   fp and fe, in\
    \ order to prevent the next steps resulting in similar\n   paths:\n   o  fp(c)\
    \ is used to increase metrics of arcs belonging to the\n      previous path P[i-1]\
    \ (with i>1), where c is the value of the\n      previous metric.  This encourages\
    \ future paths to use different\n      arcs but not different vertices.\n   o\
    \  fe(c) is used to increase metrics of the arcs that lead to\n      intermediate\
    \ vertices of the previous path P[i-1] (with i>1),\n      where c is the value\
    \ of the previous metric.  The \"lead to\" means\n      that only one vertex of\
    \ the arc belongs to the previous path\n      P[i-1] while the other vertex does\
    \ not.  The \"intermediate\" means\n      that the source and destination vertices\
    \ are not considered.\n   Consider the simple example in Figure 1: a path P[i]\
    \ S--A--D is\n   obtained at step i.  For the next step, the metric of link S--A\
    \ and\n   A--D are to be increased using fp(c) because they belong to the path\n\
    \   P[i].  A--B is to be increased using fe(c) because A is an\n   intermediate\
    \ vertex of path P[i], and B is not part of P[i].  B--D is\n   unchanged.\n  \
    \                                        B\n                                 \
    \      /    \\\n                                      /      \\\n            \
    \                         /        \\\n                          S---------A-----------D\n\
    \                                 Figure 1\n   It is possible to choose a different\
    \ fp and fe to get link-disjoint\n   paths or node-disjoint paths as desired.\
    \  A recommendation for\n   configuration of fp and fe is given in Section 9.\n\
    \   To get NUMBER_OF_PATHS different paths, for each path\n   P[i] (i = 1, ...,\
    \ NUMBER_OF_PATHS):\n   1.  Run Dijkstra's algorithm to get the shortest path\
    \ P[i] for the\n       destination d.\n   2.  Apply metric function fp to the\
    \ metric of links (in both\n       directions) in P[i].\n   3.  Apply metric function\
    \ fe to the metric of links (in both\n       directions) that lead to routers\
    \ used in P[i].\n   A simple example of the Multipath Dijkstra Algorithm is illustrated\n\
    \   in Appendix A.\n"
- title: 8.6.  Multipath Routing Set Updates
  contents:
  - "8.6.  Multipath Routing Set Updates\n   The Multipath Routing Set MUST be updated\
    \ when the Local Information\n   Base, the Neighborhood Information Base, or the\
    \ Topology Information\n   Base indicate a change (including a change of any potentially\
    \ used\n   outgoing neighbor metric values) of the known symmetric links and/or\n\
    \   attached networks in the MANET, hence, changing the Topology Graph as\n  \
    \ described in Section 17.7 of [RFC7181].  How the Multipath Routing\n   Set is\
    \ updated depends on whether the set is maintained reactively or\n   proactively:\n\
    \   o  In reactive mode, all the Tuples in the Multipath Routing Set are\n   \
    \   removed.  The new arriving datagrams will be processed as\n      specified\
    \ in Section 8.4.\n   o  In proactive mode, the routes to all the destinations\
    \ are updated\n      according to Section 8.5.\n"
- title: 8.7.  Datagram Forwarding
  contents:
  - "8.7.  Datagram Forwarding\n   In IPv4 networks, datagrams are forwarded using\
    \ loose source routing\n   as specified in Section 3.1 of [RFC791].\n   In IPv6\
    \ networks, datagrams are forwarded using strict source routing\n   as specified\
    \ in Section 4.2 of [RFC6554], except the applied routers\n   are MP-OLSRv2 routers\
    \ rather than RPL routers.  The last hop of the\n   source route MUST remove the\
    \ source routing header.\n"
- title: 9.  Configuration Parameters
  contents:
  - "9.  Configuration Parameters\n   This section gives default values and guidelines\
    \ for setting\n   parameters defined in Section 5.  Network administrators may\
    \ wish to\n   change certain or all the parameters for different network scenarios.\n\
    \   As an experimental protocol, the users of this protocol are also\n   encouraged\
    \ to explore different parameter settings in various network\n   environments\
    \ and provide feedback.\n   o  NUMBER_OF_PATHS := 3.  This parameter defines the\
    \ number of\n      parallel paths used in datagram forwarding.  Setting it to\
    \ 1 makes\n      the specification identical to OLSRv2.  Setting it to too large\
    \ of\n      a value may lead to unnecessary computational overhead and\n     \
    \ inferior paths.\n   o  MAX_SRC_HOPS := 10, for IPv4 networks.  For IPv6 networks,\
    \ it MUST\n      be set to 0, i.e., no constraint on the maximum number of hops.\n\
    \   o  CUTOFF_RATIO := 1.5.  It MUST be greater than or equal to 1.\n   o  SR_TC_INTERVAL\
    \ := 10 x TC_INTERVAL.  It MUST be greater than or\n      equal to TC_INTERVAL.\
    \  It SHOULD be significantly greater than\n      TC_INTERVAL to reduce unnecessary\
    \ TC message generations.\n   o  SR_HOLD_TIME := 3 x SR_TC_INTERVAL.  It MUST\
    \ be greater than\n      SR_TC_INTERVAL and SHOULD allow for a small number of\
    \ lost\n      messages.\n   If the Multipath Dijkstra Algorithm is applied:\n\
    \   o  fp(c) := 4*c, where c is the original metric of the link.\n   o  fe(c)\
    \ := 2*c, where c is the original metric of the link.\n   The setting of metric\
    \ functions fp and fc defines the preference of\n   obtained multiple disjoint\
    \ paths.  If id is the identity function,\n   i.e., fp(c)=c, three cases are possible:\n\
    \   o  if id=fe<fp, only increase the metric of related links;\n   o  if id<fe=fp,\
    \ apply equal increase to the metric of related nodes\n      and links;\n   o\
    \  if id<fe<fp, apply greater increase to the metric of related\n      links.\n\
    \   Increasing the metric of related links or nodes means avoiding the\n   use\
    \ of such links or nodes in the next path to be calculated.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   As an extension of [RFC7181], the security considerations\
    \ and\n   security architecture illustrated in [RFC7181] are applicable to this\n\
    \   MP-OLSRv2 specification.  The implementations without security\n   mechanisms\
    \ are vulnerable to threats discussed in [RFC8116].\n   In a mixed network with\
    \ OLSRv2-only routers, a compromised router can\n   add SOURCE_ROUTE TLVs in its\
    \ TC and HELLO messages, which will make\n   other MP-OLSRv2 Routing Processes\
    \ believe that it supports source\n   routing.  This will increase the possibility\
    \ of being chosen as MPRs\n   and put into the source routing header.  The former\
    \ will make it\n   possible to manipulate the flooding of TC messages and the\
    \ latter\n   will make the datagram pass through the compromised router.\n   As\
    \ with [RFC7181], a conformant implementation of MP-OLSRv2 MUST, at\n   minimum,\
    \ implement the security mechanisms specified in [RFC7183] to\n   provide integrity\
    \ and replay protection of routing control messages.\n   The MP-OLSRv2 Routing\
    \ Process MUST drop datagrams entering or exiting\n   an OLSRv2/MP-OLSRv2 routing\
    \ domain that contain a source routing\n   header.  Compared to OLSRv2, the use\
    \ of the source routing header in\n   this specification introduces vulnerabilities\
    \ related to source\n   routing attacks, which include bypassing filtering devices,\
    \ bandwidth\n   exhaustion of certain routers, etc.  Those attacks are discussed\
    \ in\n   Section 5 of [RFC6554] and [RFC5095].  The influence is limited to\n\
    \   the OLSRv2/MP-OLSRv2 routing domain because the source routing header\n  \
    \ is used only in the current routing domain.\n   If the multiple paths are calculated\
    \ reactively, the datagrams SHOULD\n   be buffered while the paths are being calculated.\
    \  Because the path\n   calculation is local and no control message is exchanged,\
    \ the\n   buffering time should be trivial.  However, depending on the CPU\n \
    \  power and memory of the router, a maximum buffer size SHOULD be set\n   to\
    \ avoid occupying too much memory of the router.  When the buffer is\n   full,\
    \ the oldest datagrams are dropped.  A possible attack that a\n   malicious application\
    \ could launch would be one in which it initiates\n   a large amount of datagrams\
    \ to all the other routers in the network,\n   thus triggering path calculation\
    \ to all the other routers and during\n   which the datagrams are buffered.  This\
    \ might flush other legitimate\n   datagrams.  But the impact of the attack is\
    \ transient: once the path\n   calculation is finished, the datagrams are forwarded\
    \ and the buffer\n   goes back to empty.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   This section adds one new Message TLV, allocated\
    \ as a new Type\n   Extension to an existing Message TLV.\n"
- title: 11.1.  Message TLV Types
  contents:
  - "11.1.  Message TLV Types\n   This specification updates the \"Type 7 Message\
    \ TLV Type Extensions\"\n   registry [RFC7181] by adding the new Type Extension\
    \ SOURCE_ROUTE, as\n   illustrated in Table 1.\n   +-----------+--------------+------------------------+---------------+\n\
    \   |    Type   |     Name     |      Description       | Reference     |\n  \
    \ | Extension |              |                        |               |\n   +-----------+--------------+------------------------+---------------+\n\
    \   |     2     | SOURCE_ROUTE |   Indicates that the   | This          |\n  \
    \ |           |              |   originator of the    | specification |\n   |\
    \           |              |    message supports    |               |\n   |  \
    \         |              |      source-route      |               |\n   |    \
    \       |              | forwarding. No value.  |               |\n   +-----------+--------------+------------------------+---------------+\n\
    \     Table 1: SOURCE_ROUTE Type for Type 7 Message TLV Type Extensions\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC791]   Postel, J., \"Internet Protocol\"\
    , STD 5, RFC 791,\n              DOI 10.17487/RFC0791, September 1981,\n     \
    \         <https://www.rfc-editor.org/info/rfc791>.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC5444]  Clausen, T.,\
    \ Dearlove, C., Dean, J., and C. Adjih,\n              \"Generalized Mobile Ad\
    \ Hoc Network (MANET) Packet/Message\n              Format\", RFC 5444, DOI 10.17487/RFC5444,\
    \ February 2009,\n              <https://www.rfc-editor.org/info/rfc5444>.\n \
    \  [RFC6130]  Clausen, T., Dearlove, C., and J. Dean, \"Mobile Ad Hoc\n      \
    \        Network (MANET) Neighborhood Discovery Protocol (NHDP)\",\n         \
    \     RFC 6130, DOI 10.17487/RFC6130, April 2011,\n              <https://www.rfc-editor.org/info/rfc6130>.\n\
    \   [RFC6554]  Hui, J., Vasseur, JP., Culler, D., and V. Manral, \"An IPv6\n \
    \             Routing Header for Source Routes with the Routing Protocol\n   \
    \           for Low-Power and Lossy Networks (RPL)\", RFC 6554,\n            \
    \  DOI 10.17487/RFC6554, March 2012,\n              <https://www.rfc-editor.org/info/rfc6554>.\n\
    \   [RFC7181]  Clausen, T., Dearlove, C., Jacquet, P., and U. Herberg,\n     \
    \         \"The Optimized Link State Routing Protocol Version 2\",\n         \
    \     RFC 7181, DOI 10.17487/RFC7181, April 2014,\n              <https://www.rfc-editor.org/info/rfc7181>.\n\
    \   [RFC7183]  Herberg, U., Dearlove, C., and T. Clausen, \"Integrity\n      \
    \        Protection for the Neighborhood Discovery Protocol (NHDP)\n         \
    \     and Optimized Link State Routing Protocol Version 2\n              (OLSRv2)\"\
    , RFC 7183, DOI 10.17487/RFC7183, April 2014,\n              <https://www.rfc-editor.org/info/rfc7183>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [ADHOC11]  Yi, J., Adnane, A., David, S., and\
    \ B. Parrein, \"Multipath\n              optimized link state routing for mobile\
    \ ad hoc networks\",\n              Elsevier Ad Hoc Networks, Volume 9, Number\
    \ 1, pp 28-47,\n              DOI 10.1016/j.adhoc.2010.04.007, January 2011.\n\
    \   [GIIS14]   Macedo, R., Melo, R., Santos, A., and M. Nogueria,\n          \
    \    \"Experimental performance comparison of single-path and\n              multipath\
    \ routing in VANETs\", In the Global Information\n              Infrastructure\
    \ and Networking Symposium (GIIS), Volume 1,\n              Number 6, pp 15-19,\
    \ DOI 10.1109/GIIS.2014.6934283,\n              September 2014.\n   [IPv6-SRH]\
    \ Previdi, S., Ed., Filsfils, C., Raza, K., Leddy, J.,\n              Field, B.,\
    \ Voyer, D., Bernier, S., Matsushima, S., Leung,\n              I., Linkova, J.,\
    \ Aries, E., Kosugi, T., Vyncke, E.,\n              Lebrun, D., Steinberg, D.,\
    \ and R. Raszuk, \"IPv6 Segment\n              Routing Header (SRH)\", Work in\
    \ Progress,\n              draft-ietf-6man-segment-routing-header-07, July 2017.\n\
    \   [RFC2474]  Nichols, K., Blake, S., Baker, F., and D. Black,\n            \
    \  \"Definition of the Differentiated Services Field (DS\n              Field)\
    \ in the IPv4 and IPv6 Headers\", RFC 2474,\n              DOI 10.17487/RFC2474,\
    \ December 1998,\n              <https://www.rfc-editor.org/info/rfc2474>.\n \
    \  [RFC2501]  Corson, S. and J. Macker, \"Mobile Ad hoc Networking\n         \
    \     (MANET): Routing Protocol Performance Issues and\n              Evaluation\
    \ Considerations\", RFC 2501,\n              DOI 10.17487/RFC2501, January 1999,\n\
    \              <https://www.rfc-editor.org/info/rfc2501>.\n   [RFC2991]  Thaler,\
    \ D. and C. Hopps, \"Multipath Issues in Unicast and\n              Multicast\
    \ Next-Hop Selection\", RFC 2991,\n              DOI 10.17487/RFC2991, November\
    \ 2000,\n              <https://www.rfc-editor.org/info/rfc2991>.\n   [RFC5095]\
    \  Abley, J., Savola, P., and G. Neville-Neil, \"Deprecation\n              of\
    \ Type 0 Routing Headers in IPv6\", RFC 5095,\n              DOI 10.17487/RFC5095,\
    \ December 2007,\n              <https://www.rfc-editor.org/info/rfc5095>.\n \
    \  [RFC7722]  Dearlove, C. and T. Clausen, \"Multi-Topology Extension for\n  \
    \            the Optimized Link State Routing Protocol Version 2\n           \
    \   (OLSRv2)\", RFC 7722, DOI 10.17487/RFC7722, December 2015,\n             \
    \ <https://www.rfc-editor.org/info/rfc7722>.\n   [RFC7779]  Rogge, H. and E. Baccelli,\
    \ \"Directional Airtime Metric\n              Based on Packet Sequence Numbers\
    \ for Optimized Link State\n              Routing Version 2 (OLSRv2)\", RFC 7779,\n\
    \              DOI 10.17487/RFC7779, April 2016,\n              <https://www.rfc-editor.org/info/rfc7779>.\n\
    \   [RFC8116]  Clausen, T., Herberg, U., and J. Yi, \"Security Threats to\n  \
    \            the Optimized Link State Routing Protocol Version 2\n           \
    \   (OLSRv2)\", RFC 8116, DOI 10.17487/RFC8116, May 2017,\n              <https://www.rfc-editor.org/info/rfc8116>.\n\
    \   [RFC8200]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", STD 86, RFC 8200,\n              DOI 10.17487/RFC8200,\
    \ July 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n   [WCNC08]\
    \   Yi, J., Cizeron, E., Hamma, S., and B. Parrein,\n              \"Simulation\
    \ and Performance Analysis of MP-OLSR for Mobile\n              Ad hoc Networks\"\
    , In Proceedings of the IEEE Wireless\n              Communications and Networking\
    \ Conference (WCNC),\n              DOI 10.1109/WCNC.2008.395, 2008.\n   [WPMC11]\
    \   Yi, J., Parrein, B., and D. Radu, \"Multipath Routing\n              Protocol\
    \ for MANET: Application to H.264/SVC Video Content\n              Delivery\"\
    , Proceedings of the 14th International Symposium\n              on Wireless Personal\
    \ Multimedia Communications, 2011.\n"
- title: Appendix A.  Examples of Multipath Dijkstra Algorithm
  contents:
  - "Appendix A.  Examples of Multipath Dijkstra Algorithm\n   This appendix gives\
    \ two examples of the Multipath Dijkstra Algorithm.\n   A network topology is\
    \ depicted in Figure 2.\n                              .-----A-----(2)\n     \
    \                        (1)   / \\     \\\n                            /    \
    \ /   \\     \\\n                           S     (2)   (1)   D\n            \
    \                \\   /       \\   /\n                           (1) /       \
    \  \\ / (2)\n                              B----(3)----C\n                   \
    \              Figure 2\n   The capital letters are the names of routers.  An\
    \ arbitrary metric\n   with value between 1 and 3 is used.  The initial metrics\
    \ of all the\n   links are indicated in the parentheses.  The incremental functions\n\
    \   fp(c)=4c and fe(c)=2c are used in this example.  Two paths from\n   router\
    \ S to router D are demanded.\n   On the first run of the Dijkstra Algorithm,\
    \ the shortest path S->A->D\n   with metric 3 is obtained.\n   The incremental\
    \ function fp is applied to increase the metric of the\n   link S-A and A-D, and\
    \ fe is applied to increase the metric of the\n   link A-B and A-C.  Figure 3\
    \ shows the link metrics after the\n   increment.\n                          \
    \    .-----A-----(8)\n                             (4)   / \\     \\\n       \
    \                     /     /   \\     \\\n                           S     (4)\
    \   (2)   D\n                            \\   /       \\   /\n               \
    \            (1) /         \\ / (2)\n                              B----(3)----C\n\
    \                                 Figure 3\n   On the second run of the Dijkstra\
    \ Algorithm, the second path\n   S->B->C->D with metric 6 is obtained.\n   As\
    \ mentioned in Section 8.5, the Multipath Dijkstra Algorithm does\n   not guarantee\
    \ strict disjoint paths in order to avoid choosing\n   inferior paths.  For example,\
    \ given the topology in Figure 4, two\n   paths from node S to D are desired.\
    \  On the top of the figure, there\n   is a high cost path between S and D.\n\
    \   If an algorithm tries to obtain strict disjoint paths, the two paths\n   obtained\
    \ will be S--B--D and S--(high cost path)--D, which are\n   extremely unbalanced.\
    \  It is undesirable because it will cause huge\n   delay variance between the\
    \ paths.  By using the Multipath Dijkstra\n   Algorithm, which is based on the\
    \ punishing scheme, S--B--D and\n   S--B--C--D will be obtained.\n           \
    \                  --high cost path-\n                            /          \
    \       \\\n                           /                   \\\n              \
    \             S----B--------------D\n                                 \\     \
    \      /\n                                  \\---C-----/\n                   \
    \              Figure 4\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Sylvain David, Asmaa Adnane,\
    \ Eddy\n   Cizeron, Salima Hamma, Pascal Lesage, and Xavier Lecourtier for their\n\
    \   efforts in developing, implementing, and testing the specification.\n   The\
    \ authors also appreciate valuable discussions with Thomas Clausen,\n   Ulrich\
    \ Herberg, Justin Dean, Geoff Ladwig, Henning Rogge, Marcus\n   Barkowsky, and\
    \ especially Christopher Dearlove for his multiple\n   rounds of reviews during\
    \ the working group last calls.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jiazi Yi\n   Ecole Polytechnique\n   91128 Palaiseau Cedex\n\
    \   France\n   Phone: +33 (0) 1 77 57 80 85\n   Email: jiazi@jiaziyi.com\n   URI:\
    \   http://www.jiaziyi.com/\n   Benoit Parrein\n   University of Nantes\n   IRCCyN\
    \ Lab - IVC team\n   Polytech Nantes, rue Christian Pauc, BP50609\n   44306 Nantes\
    \ cedex 3\n   France\n   Phone: +33 (0) 2 40 68 30 50\n   Email: Benoit.Parrein@polytech.univ-nantes.fr\n\
    \   URI:   http://www.irccyn.ec-nantes.fr/~parrein\n"
