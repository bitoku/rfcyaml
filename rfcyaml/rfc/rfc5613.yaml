- contents:
  - '                       OSPF Link-Local Signaling

    '
  title: __initial_text__
- contents:
  - "Abstract\n   OSPF is a link-state intra-domain routing protocol.  OSPF routers\n
    \  exchange information on a link using packets that follow a well-\n   defined
    fixed format.  The format is not flexible enough to enable\n   new features that
    need to exchange arbitrary data.  This document\n   describes a backward-compatible
    technique to perform link-local\n   signaling, i.e., exchange arbitrary data on
    a link.  This document\n   replaces the experimental specification published in
    RFC 4813 to\n   bring it on the Standards Track.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n     1.1.  Requirements Notation  . . . . . . . . . . . . . .
    . . . .  2\n   2.  Proposed Solution  . . . . . . . . . . . . . . . . . . . .
    . .  3\n     2.1.  L-Bit in Options Field . . . . . . . . . . . . . . . . . .
    \ 4\n     2.2.  LLS Data Block . . . . . . . . . . . . . . . . . . . . . .  4\n
    \    2.3.  LLS TLVs . . . . . . . . . . . . . . . . . . . . . . . . .  5\n     2.4.
    \ Extended Options and Flags TLV . . . . . . . . . . . . . .  5\n     2.5.  Cryptographic
    Authentication TLV (OSPFv2 ONLY) . . . . . .  6\n     2.6.  Private TLVs . . .
    . . . . . . . . . . . . . . . . . . . .  7\n   3.  IANA Considerations  . . .
    . . . . . . . . . . . . . . . . . .  7\n   4.  Compatibility Issues . . . . .
    . . . . . . . . . . . . . . . .  9\n   5.  Security Considerations  . . . . .
    . . . . . . . . . . . . . .  9\n   6.  References . . . . . . . . . . . . . .
    . . . . . . . . . . . .  9\n     6.1.  Normative References . . . . . . . . .
    . . . . . . . . . .  9\n     6.2.  Informative References . . . . . . . . . .
    . . . . . . . . 10\n   Appendix A.  Acknowledgements  . . . . . . . . . . . .
    . . . . . . 11\n   Appendix B.  Changes from RFC 4813 . . . . . . . . . . . .
    . . . . 11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes an extension to OSPFv2 [OSPFV2]
    and OSPFv3\n   [OSPFV3] allowing additional information to be exchanged between\n
    \  routers on the same link.  OSPFv2 and OSPFv3 packet formats are fixed\n   and
    do not allow for extension.  This document proposes appending an\n   optional
    data block composed of Type/Length/Value (TLV) triplets to\n   existing OSPFv2
    and OSPFv3 packets to carry this additional\n   information.  Throughout this
    document, OSPF will be used when the\n   specification is applicable to both OSPFv2
    and OSPFv3.  Similarly,\n   OSPFv2 or OSPFv3 will be used when the text is protocol
    specific.\n   One potential way of solving this task could be introducing a new\n
    \  packet type.  However, that would mean introducing extra packets on\n   the
    network that may not be desirable and may cause backward\n   compatibility issues.
    \ This document describes how to exchange data\n   using standard OSPF packet
    types.\n"
  - contents:
    - "1.1.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [KEY].\n"
    title: 1.1.  Requirements Notation
  title: 1.  Introduction
- contents:
  - "2.  Proposed Solution\n   To perform link-local signaling (LLS), OSPF routers
    add a special\n   data block to the end of OSPF packets or right after the\n   authentication
    data block when cryptographic authentication is used.\n   The length of the LLS
    block is not included into the length of the\n   OSPF packet, but is included
    in the IPv4/IPv6 packet length.  Figure\n   1 illustrates how the LLS data block
    is attached.\n   +---------------------+ --              --  +---------------------+\n
    \  | IP Header           | ^               ^   | IPv6 Header         |\n   | Length
    = HL+X+Y+Z   | | Header Length |   | Length = HL+X+Y     |\n   |                     |
    v               v   |                     |\n   +---------------------+ --              --
    \ +---------------------+\n   | OSPF Header         | ^               ^   | OSPFv3
    Header       |\n   | Length = X          | |               |   | Length = X          |\n
    \  |.....................| | X             | X |.....................|\n   |                     |
    |               |   |                     |\n   | OSPFv2 Data         | |               |
    \  | OSPFv3 Data         |\n   |                     | v               v   |                     |\n
    \  +---------------------+ --              --  +---------------------+\n   |                     |
    ^               ^   |                     |\n   | Authentication Data | | Y             |
    Y |  LLS Data           |\n   |                     | v               v   |                     |\n
    \  +---------------------+ --              --  +---------------------+\n   |                     |
    ^\n   |  LLS Data           | | Z\n   |                     | v\n   +---------------------+
    --\n               Figure 1: LLS Data Block in OSPFv2 and OSPFv3\n   The LLS block
    MAY be attached to OSPF Hello and Database Description\n   (DD) packets.  The
    LLS block MUST NOT be attached to any other OSPF\n   packet types on generation
    and MUST be ignored on reception.\n   The data included in the LLS block attached
    to a Hello packet MAY be\n   used for dynamic signaling since Hello packets may
    be sent at any\n   time.  However, delivery of LLS data in Hello packets is not\n
    \  guaranteed.  The data sent with DD packets is guaranteed to be\n   delivered
    as part of the adjacency forming process.\n   This document does not specify how
    the data transmitted by the LLS\n   mechanism should be interpreted by OSPF routers.
    \ As routers that do\n   not understand LLS may receive these packets, changes
    made due to LLS\n   block TLV's do not affect the basic routing when interacting
    with\n   non-LLS routers.\n"
  - contents:
    - "2.1.  L-Bit in Options Field\n   A new L-bit (L stands for LLS) is introduced
      into the OSPF Options\n   field (see Figures 2a and 2b).  Routers set the L-bit
      in Hello and DD\n   packets to indicate that the packet contains an LLS data
      block.  In\n   other words, the LLS data block is only examined if the L-bit
      is set.\n             +---+---+---+---+---+---+---+---+\n             | * |
      O | DC| L |N/P| MC| E | * |\n             +---+---+---+---+---+---+---+-+-+\n
      \             Figure 2a: OSPFv2 Options Field\n   0                   1                       2\n
      \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4  5 6 7  8  9  0  1  2  3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+--+--+--+--+--+--+\n
      \  | | | | | | | | | | | | | | |L|AF|*|*|DC| R| N|MC| E|V6|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+-+--+--+--+--+--+--+\n
      \             Figure 2b: OSPFv3 Options Field\n   The L-bit MUST NOT be set
      except in Hello and DD packets that contain\n   an LLS block.\n"
    title: 2.1.  L-Bit in Options Field
  - contents:
    - "2.2.  LLS Data Block\n   The data block used for link-local signaling is formatted
      as\n   described below (see Figure 3 for illustration).\n   0                   1
      \                  2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |            Checksum           |       LLS Data Length         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   |                           LLS
      TLVs                            |\n   .                                                               .\n
      \  .                                                               .\n   .                                                               .\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                   Figure
      3: Format of LLS Data Block\n   The Checksum field contains the standard IP
      checksum for the entire\n   contents of the LLS block.  Before computing the
      checksum, the\n   checksum field is set to 0.  If the checksum is incorrect,
      the OSPF\n   packet MUST be processed, but the LLS block MUST be discarded.\n
      \  The 16-bit LLS Data Length field contains the length (in 32-bit\n   words)
      of the LLS block including the header and payload.\n   Note that if the OSPF
      packet is cryptographically authenticated, the\n   LLS data block MUST also
      be cryptographically authenticated.  In this\n   case, the regular LLS checksum
      is not calculated, but is instead set\n   to 0.\n   The rest of the block contains
      a set of Type/Length/Value (TLV)\n   triplets as described in Section 2.3.  All
      TLVs MUST be 32-bit\n   aligned (with padding if necessary).\n"
    title: 2.2.  LLS Data Block
  - contents:
    - "2.3.  LLS TLVs\n   The contents of an LLS data block are constructed using
      TLVs.  See\n   Figure 4 for the TLV format.\n   The Type field contains the
      TLV ID, which is unique for each type of\n   TLV.  The Length field contains
      the length of the Value field (in\n   bytes).  The Value field is variable and
      contains arbitrary data.\n   0                   1                   2                   3\n
      \  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |            Type               |           Length              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   .                                                               .\n
      \  .                             Value                             .\n   .                                                               .\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Figure
      4: Format of LLS TLVs\n   Note that TLVs are always padded to a 32-bit boundary,
      but padding\n   bytes are not included in the TLV Length field (though they
      are\n   included in the LLS Data Length field in the LLS block header).\n   Unrecognized
      TLV types are ignored.\n"
    title: 2.3.  LLS TLVs
  - contents:
    - "2.4.  Extended Options and Flags TLV\n   This subsection describes a TLV called
      the Extended Options and Flags\n   (EOF) TLV.  The format of the EOF-TLV is
      shown in Figure 5.\n   Bits in the Value field do not have any semantics from
      the point of\n   view of the LLS mechanism.  Bits MAY be allocated to announce
      OSPF\n   link-local capabilities.  Bits MAY also be allocated to perform\n   boolean
      link-local signaling.\n   The length of the Value field in the EOF-TLV is 4
      bytes.\n   The value of the Type field in the EOF-TLV is 1.  The EOF-TLV MUST\n
      \  only appear once in the LLS data block.\n   0                   1                   2
      \                  3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |             1                 |            4                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                  Extended Options and Flags                   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                       Figure 5: Format of the EOF-TLV\n   Currently, [OOB]
      and [RESTART] use bits in the Extended Options field\n   of the EOF-TLV.\n   The
      Extended Options and Flags bits are defined in Section 3.\n"
    title: 2.4.  Extended Options and Flags TLV
  - contents:
    - "2.5.  Cryptographic Authentication TLV (OSPFv2 ONLY)\n   This document defines
      a special TLV that is used for cryptographic\n   authentication (CA-TLV) of
      the LLS data block.  This TLV MUST only be\n   included in the LLS block when
      cryptographic authentication is\n   enabled on the corresponding interface.
      \ The message digest of the\n   LLS block MUST be calculated using the same
      key and authentication\n   algorithm as used for the OSPFv2 packet.  The cryptographic
      sequence\n   number is included in the TLV and MUST be the same as the one in
      the\n   OSPFv2 authentication data for the LLS block to be considered\n   authentic.\n
      \  The TLV is constructed as shown in Figure 6.\n   0                   1                   2
      \                  3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
      6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |              2                |         AuthLen               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                         Sequence Number                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               |\n   .                                                               .\n
      \  .                           AuthData                            .\n   .                                                               .\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n         Figure
      6: Format of Cryptographic Authentication TLV\n   The value of the Type field
      for the CA-TLV is 2.\n   The Length field in the header contains the length
      of the data\n   portion of the TLV including 4 bytes for Sequence Number and
      the\n   length of the message digest block for the whole LLS block in bytes.\n
      \  The Sequence Number field contains the cryptographic sequence number\n   that
      is used to prevent simple replay attacks.  For the LLS block to\n   be considered
      authentic, the Sequence Number in the CA-TLV MUST match\n   the Sequence Number
      in the OSPFv2 packet header Authentication field\n   (which MUST be present).
      \ In the event of Sequence Number mismatch or\n   Authentication failure, the
      whole LLS block MUST be ignored.\n   The CA-TLV MUST NOT appear more than once
      in the LLS block.  Also,\n   when present, this TLV MUST be the last TLV in
      the LLS block.  If it\n   appears more than once, only the first occurrence
      is processed and\n   any others MUST be ignored.\n   The AuthData field contains
      the message digest calculated for the LLS\n   data block up to the CA-TLV AuthData
      field (i.e., excludes the CA-TLV\n   AuthData).\n   The CA-TLV is not applicable
      to OSPFv3 and it MUST NOT be added to\n   any OSPFv3 packet.  If found on reception,
      this TLV MUST be ignored.\n"
    title: 2.5.  Cryptographic Authentication TLV (OSPFv2 ONLY)
  - contents:
    - "2.6.  Private TLVs\n   LLS type values in the range of 32768-65536 are reserved
      for private\n   use.  The first four octets of the Value field MUST be the private\n
      \  enterprise code [ENTNUM].  This allows multiple vendor private\n   extensions
      to coexist in a network.\n"
    title: 2.6.  Private TLVs
  title: 2.  Proposed Solution
- contents:
  - "3.  IANA Considerations\n   This document uses the registry that was originally
    created in\n   [RFC4813].  IANA updated the following registry to point to this\n
    \  document instead:\n   o  \"Open Shortest Path First (OSPF) Link-Local Signalling
    (LLS) -\n      Type/Length/Value Identifiers (TLV)\"\n   IANA allocated L-bit
    in the \"OSPFv2 Options Registry\" and \"OSPFv3\n   Options Registry\" as per
    Section 2.1.\n   LLS TLV types are maintained by the IANA.  Extensions to OSPF
    that\n   require a new LLS TLV type MUST be reviewed by a Designated Expert\n
    \  from the routing area.\n   The criteria for allocating LLS TLVs are:\n   o
    \ LLS should not be used for information that would be better suited\n      to
    be advertised in a link-local link state advertisement (LSA).\n   o  LLS should
    be confined to signaling between direct neighbors.\n   o  Discretion should be
    used in the volume of information signaled\n      using LLS due to the obvious
    MTU and performance implications.\n   Following the policies outlined in [IANA],
    LLS type values in the\n   range of 0-32767 are allocated through an IETF Review
    and LLS type\n   values in the range of 32768-65535 are reserved for private use.\n
    \  This document assigns the following LLS TLV types in OSPFv2/OSPFv3.\n   TLV
    Type    Name                                      Reference\n   0           Reserved\n
    \  1           Extended Options and Flags                [RFC5613]\n   2           Cryptographic
    Authentication+             [RFC5613]\n   3-32767     Reserved for assignment
    by the IANA\n   32768-65535 Private Use\n   + Cryptographic Authentication TLV
    is only defined for OSPFv2\n   IANA renamed the sub-registry from \"LLS Type 1
    Extended Options\" to\n   \"LLS Type 1 Extended Options and Flags\".\n   This
    document also assigns the following bits in the EOF-TLV outlined\n   in Section
    2.5:\n   Bit                     Name                        Reference\n   0x00000001
    \             LSDB Resynchronization (LR) [RFC4811]\n   0x00000002              Restart
    Signal (RS-bit)     [RFC4812]\n   Future allocation of Extended Options and Flags
    bits MUST be reviewed\n   by a Designated Expert from the routing area.\n"
  title: 3.  IANA Considerations
- contents:
  - "4.  Compatibility Issues\n   The modifications to OSPF packet formats are compatible
    with standard\n   OSPF since OSPF routers not supporting LLS will ignore the LLS
    data\n   block after the OSPF packet or cryptographic message digest.  As of\n
    \  this writing, there are implementations deployed with [RFC4813]-\n   compliant
    software.  Routers not implementing [RFC4813] ignore the\n   LLS data at the end
    of the OSPF packet.\n   Careful consideration should be given to carrying additional
    LLS\n   data, as it may affect the OSPF adjacency bring-up time due to\n   additional
    propagation delay and/or processing time.\n"
  title: 4.  Compatibility Issues
- contents:
  - "5.  Security Considerations\n   Security considerations inherited from OSPFv2
    are described in\n   [OSPFV2].  This technique provides the same level of security
    as the\n   basic OSPFv2 protocol by allowing LLS data to be authenticated using\n
    \  the same cryptographic authentication that OSPFv2 uses (see\n   Section 2.5
    for more details).\n   Security considerations inherited from OSPFv3 are described
    in\n   [OSPFV3] and [OSPFV3AUTH].  OSPFv3 utilizes IPsec for authentication\n
    \  and encryption.  With IPsec, the AH (Authentication Header), ESP\n   (Encapsulating
    Security Payload), or both are applied to the entire\n   OSPFv3 payload including
    the LLS block.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [IANA]        Narten, T. and H. Alvestrand,
      \"Guidelines for Writing\n                 an IANA Considerations Section in
      RFCs\", BCP 26,\n                 RFC 5226, May 2008.\n   [KEY]         Bradner,
      S., \"Key words for use in RFCs to Indicate\n                 Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n   [OSPFV2]      Moy, J., \"OSPF Version 2\",
      STD 54, RFC 2328,\n                 April 1998.\n   [OSPFV3]      Coltun, R.,
      Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n                 for IPv6\", RFC
      5340, July 2008.\n   [OSPFV3AUTH]  Gupta, M. and N. Melam, \"Authentication/Confidentiality\n
      \                for OSPFv3\", RFC 4552, June 2006.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [ENTNUM]      IANA, \"PRIVATE ENTERPRISE NUMBERS\",\n
      \                http://www.iana.org.\n   [OOB]         Nguyen, L., Roy, A.,
      and A. Zinin, \"OSPF Out-of-Band\n                 Link State Database (LSDB)
      Resynchronization\",\n                 RFC 4811, March 2007.\n   [RESTART]     Nguyen,
      L., Roy, A., and A. Zinin, \"OSPF Restart\n                 Signaling\", RFC
      4812, March 2007.\n   [RFC4813]     Friedman, B., Nguyen, L., Roy, A., Yeung,
      D., and A.\n                 Zinin, \"OSPF Link-Local Signaling\", RFC 4813,\n
      \                March 2007.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Appendix A.  Acknowledgements\n   The authors would like to acknowledge Russ
    White, Acee Lindem, and\n   Manral Vishwas for their review of this document.\n"
  title: Appendix A.  Acknowledgements
- contents:
  - "Appendix B.  Changes from RFC 4813\n   This section describes the substantive
    change from [RFC4813].\n   o  Added OSPFv3 support\n   o  Private TLVs MUST use
    private enterprise code\n   o  Clarified requirement levels at several places\n
    \  o  Changed from Experimental to Standards Track\n"
  title: Appendix B.  Changes from RFC 4813
- contents:
  - "Authors' Addresses\n   Alex Zinin\n   Alcatel-Lucent\n   Singapore\n   EMail:
    alex.zinin@alcatel-lucent.com\n   Abhay Roy\n   Cisco Systems\n   170 West Tasman
    Drive\n   San Jose, CA  95134\n   USA\n   EMail: akr@cisco.com\n   Liem Nguyen\n
    \  Cisco Systems\n   170 West Tasman Drive\n   San Jose, CA  95134\n   USA\n   EMail:
    lhnguyen@cisco.com\n   Barry Friedman\n   Google, Inc.\n   1600 Amphitheatre Parkway\n
    \  Mountain View, CA  94043\n   USA\n   EMail: barryf@google.com\n   Derek Yeung\n
    \  Cisco Systems\n   170 West Tasman Drive\n   San Jose, CA  95134\n   USA\n   EMail:
    myeung@cisco.com\n"
  title: Authors' Addresses
