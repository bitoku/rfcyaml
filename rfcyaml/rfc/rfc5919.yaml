- contents:
  - '              Signaling LDP Label Advertisement Completion

    '
  title: __initial_text__
- contents:
  - "Abstract\n   There are situations following Label Distribution Protocol (LDP)\n
    \  session establishment where it would be useful for an LDP speaker to\n   know
    when its peer has advertised all of its labels.  The LDP\n   specification provides
    no mechanism for an LDP speaker to notify a\n   peer when it has completed its
    initial label advertisements to that\n   peer.  This document specifies means
    for an LDP speaker to signal\n   completion of its initial label advertisements
    following session\n   establishment.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5919.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Applicability - Label Advertisement Mode ...................3\n   2.
    Specification Language ..........................................3\n   3. Unrecognized
    Notification Capability ............................4\n   4. Signaling Completion
    of Label Advertisement .....................4\n      4.1. Missing Expected End-of-LIB
    Notifications ..................5\n   5. Usage Guidelines ................................................6\n
    \     5.1. LDP-IGP Sync ...............................................6\n      5.2.
    LDP Graceful Restart .......................................7\n      5.3. Wildcard
    Label Request .....................................7\n   6. Security Considerations
    .........................................8\n   7. IANA Considerations .............................................8\n
    \  8. Acknowledgments .................................................8\n   9.
    References ......................................................8\n      9.1.
    Normative References .......................................8\n      9.2. Informative
    References .....................................9\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   There are situations following LDP session establishment
    where it\n   would be useful for an LDP speaker to know when its peer has\n   advertised
    all of the labels from its Label Information Base (LIB).\n   For example, when
    an LDP speaker is using LDP-IGP synchronization\n   procedures [RFC5443], it would
    be useful for the speaker to know when\n   its peer has completed advertisement
    of its IP label bindings.\n   Similarly, after an LDP session is re-established
    when LDP Graceful\n   Restart [RFC3478] is in effect, it would be helpful for
    each peer to\n   signal the other after it has advertised all its label bindings.\n
    \  The LDP specification [RFC5036] provides no mechanism for an LDP\n   speaker
    to notify a peer when it has completed its initial label\n   advertisements to
    that peer.\n   This document specifies use of a Notification message with the
    End-\n   of-LIB Status Code for an LDP speaker to signal completion of its\n   label
    advertisements following session establishment.\n   RFC 5036 implicitly assumes
    that new Status Codes will be defined\n   over the course of time.  However, it
    does not explicitly define the\n   behavior of an LDP speaker that does not understand
    the Status Code\n   in a Notification message.  To avoid backward compatibility
    issues,\n   this document specifies use of the LDP capability mechanism [RFC5561]\n
    \  at session establishment time for informing a peer that an LDP\n   speaker
    is capable of handling a Notification message that carries an\n   unrecognized
    Status Code.\n"
  - contents:
    - "1.1.  Applicability - Label Advertisement Mode\n   The mechanisms specified
      in this document are deemed useful to LDP\n   peering using the 'Downstream
      Unsolicited' label advertisement mode\n   [RFC5036].  They are not deemed useful
      to any LDP peering using the\n   'Downstream on Demand' label advertisement
      mode since the LDP speaker\n   would request particular label binding(s) from
      the peer anyway and\n   know when it has received them.\n"
    title: 1.1.  Applicability - Label Advertisement Mode
  title: 1.  Introduction
- contents:
  - "2.  Specification Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Specification Language
- contents:
  - "3.  Unrecognized Notification Capability\n   An LDP speaker MAY include a Capability
    Parameter [RFC5561] in the\n   Initialization message to inform a peer that it
    ignores Notification\n   Messages that carry a Status Type-Length-Value (TLV)
    with a non-fatal\n   Status Code unknown to it.\n   The Capability Parameter for
    the Unrecognized Notification capability\n   is a TLV with the following format:\n
    \  0                   1                   2                   3\n   0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |U|F| Unrecognized Noti (0x0603)|            Length             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |S| Reserved    |\n   +-+-+-+-+-+-+-+-+\n         Figure 1: Unrecognized Notification
    Capability Format\n   Where:\n      U- and F-bits: MUST be 1 and 0, respectively,
    as per Section 3 of\n         LDP Capabilities [RFC5561].\n      Unrecognized
    Notif: 0x0603\n      S-bit: MUST be 1 (indicates that capability is being advertised).\n
    \  Upon receiving a Notification with an unrecognized Status Code, an\n   LDP
    speaker MAY generate a console or system log message for trouble\n   shooting
    purposes.\n"
  title: 3.  Unrecognized Notification Capability
- contents:
  - "4.  Signaling Completion of Label Advertisement\n   An LDP speaker that conforms
    to this specification SHOULD signal\n   completion of its label advertisements
    to a peer by means of a\n   Notification message, if its peer has advertised the
    Unrecognized\n   Notification capability during session establishment.  The LDP\n
    \  speaker SHOULD send the Notification message (per Forwarding\n   Equivalence
    Class (FEC) Type) to a peer even if the LDP speaker has\n   zero Label bindings
    to advertise to that peer.\n   Such a Notification message MUST carry:\n      -
    A status TLV (with TLV E- and F-bits set to zero) that carries\n        an End-of-LIB
    Status Code (0x0000002F).\n      - A FEC TLV with the Typed Wildcard FEC Element
    [RFC5918] that\n        identifies the FEC type for which initial label advertisements\n
    \       have been completed.  In terms of Section 3.5.1 of RFC 5036,\n        this
    TLV is an \"Optional Parameter\" of the Notification message.\n   An LDP speaker
    MUST NOT send a Notification that carries a Status TLV\n   with the End-of-LIB
    Status Code to a peer unless the peer has\n   advertised the Unrecognized Notification
    capability during session\n   establishment.\n   This applies to any LDP peers
    discovered via either basic discovery\n   or extended discovery mechanisms (per
    Section 2.4 of [RFC5036]).\n"
  - contents:
    - "4.1.  Missing Expected End-of-LIB Notifications\n   There is no guarantee that
      an LDP speaker will receive (or send) an\n   End-of-LIB Notification from (or
      to) a peer even if the LDP speaker\n   has signaled the Unrecognized Notification
      capability (Section 3).\n   Although it is expected that an LDP speaker supporting
      the\n   Unrecognized Notification capability would support sending and\n   receiving
      an End-of-LIB Notification, it is not mandatory by\n   definition.\n   Please
      note that this is not a concern since the LDP speaker would\n   simply ignore
      the received Notification with an End-of-LIB status\n   code (or any status
      code) that is not recognized or supported, by\n   definition.\n   To deal with
      the possibility of missing End-of-LIB Notifications\n   after the LDP session
      establishment, an LDP speaker MAY time out\n   receipt of an expected End-of-LIB
      Notification.  An LDP speaker\n   SHOULD start a per-peer internal timer, called
      'EOL Notification'\n   timer (the default value of 60 seconds is RECOMMENDED,
      though the\n   value of this timer SHOULD be configurable) immediately following
      the\n   LDP session establishment.\n   This timer is reset by the subsequent
      label advertisement, and\n   stopped by the End-of-LIB Notification message.
      \ Lacking any label\n   advertisement from the peer, the timer would expire,
      causing the LDP\n   speaker to behave as if it had received the End-of-LIB notification\n
      \  from the peer.\n   If the End-of-LIB Notification message is received after
      the timer\n   expires, then the message SHOULD be ignored.\n"
    title: 4.1.  Missing Expected End-of-LIB Notifications
  title: 4.  Signaling Completion of Label Advertisement
- contents:
  - "5.  Usage Guidelines\n   The FECs known to an LDP speaker and the labels the
    speaker has bound\n   to those FECs may change over the course of time.  This
    makes it\n   difficult to determine when an LDP speaker has advertised \"all\"
    of\n   its label bindings for a given FEC type.  Ultimately, this\n   determination
    is a judgment call the LDP speaker makes.  The\n   following guidelines may be
    useful.\n   An LDP speaker is assumed to \"know\" a set of FECs.  Depending on
    a\n   variety of criteria, such as:\n      - the label distribution control mode
    in use (Independent or\n        Ordered);\n      - the set of FECs to which the
    speaker has bound local labels;\n      - configuration settings that may constrain
    which label bindings\n        the speaker may advertise to peers.\n   The speaker
    can determine the set of bindings for a given FEC type\n   that it is permitted
    to advertise to a given peer.\n   LDP-IGP Sync, LDP Graceful Restart, and the
    response to a Wildcard\n   Label Request [RFC5918] are situations that would benefit
    from End-\n   of-LIB Notification.  In these situations, after an LDP speaker\n
    \  completes its label binding advertisements to a peer, sending an End-\n   of-LIB
    Notification to the peer makes their outcome deterministic.\n   The following
    subsections further explain each of these situations\n   one by one.\n"
  - contents:
    - "5.1.  LDP-IGP Sync\n   The LDP-IGP Synchronization [RFC5443] specifies a mechanism
      by which\n   directly connected LDP speakers may delay the use of the link\n
      \  (between them) for transit IP traffic forwarding until the labels\n   required
      to support IP-over-MPLS traffic forwarding have been\n   distributed and installed.\n
      \  Without an End-of-LIB Notification, the speaker must rely on some\n   heuristic
      to determine when it has received all of its peer's label\n   bindings.  The
      heuristic chosen could cause LDP to signal the IGP too\n   soon (in which case,
      the likelihood that traffic will be dropped\n   increases) or too late (in which
      case, traffic is kept on sub-optimal\n   paths longer than necessary).\n   Following
      session establishment, with a directly connected peer that\n   has advertised
      the Unrecognized Notification capability, an LDP\n   speaker using LDP-IGP Sync
      may send the peer an End-of-LIB\n   Notification after it completes advertisement
      of its IP label\n   bindings to the peer.  Similarly, the LDP speaker may use
      the End-of-\n   LIB Notification received from a directly connected peer to
      determine\n   when the peer has completed advertisement of its label bindings
      for\n   IP prefixes.  After receiving the notification, the LDP speaker\n   should
      consider LDP to be fully operational for the link and should\n   signal the
      IGP to start advertising the link with normal cost.\n"
    title: 5.1.  LDP-IGP Sync
  - contents:
    - "5.2.  LDP Graceful Restart\n   LDP Graceful Restart [RFC3478] helps to reduce
      the loss of MPLS\n   traffic caused by the restart of a router's LDP component.
      \ It\n   defines procedures that allow routers capable of preserving MPLS\n
      \  forwarding state across the restart to continue forwarding MPLS\n   traffic
      using forwarding state installed prior to the restart for a\n   configured time
      period.\n   The current behavior without End-of-LIB Notification is as follows:\n
      \  the restarting router and its peers consider the preserved forwarding\n   state
      to be usable but stale until it is refreshed by receipt of new\n   label advertisements
      following re-establishment of new LDP sessions\n   or until the time period
      expires.  When the time period expires, any\n   remaining stale forwarding state
      is removed by the router.\n   Receiving End-of-LIB Notification from a peer
      in an LDP Graceful\n   Restart scenario enables an LDP speaker to stop using
      stale\n   forwarding information learned from that peer and to recover the\n
      \  resources it requires without having to wait until the time period\n   expiry.
      \ The time period expiry can still be used if the End-of-LIB\n   Notification
      message is not received.\n"
    title: 5.2.  LDP Graceful Restart
  - contents:
    - "5.3.  Wildcard Label Request\n   When an LDP speaker receives a Label Request
      message for a Typed\n   Wildcard FEC (e.g., a particular FEC Element Type) from
      a peer, the\n   LDP speaker determines the set of bindings (as per any local\n
      \  filtering policy) to advertise to the peer for the FEC type specified\n   by
      the request.  Assuming the peer had advertised the Unrecognized\n   Notification
      capability at session initialization time, the speaker\n   should send the peer
      an End-of-LIB Notification for the FEC type when\n   it completes advertisement
      of the permitted bindings.\n   As in the previous applications, receipt of the
      Notification\n   eliminates uncertainty as to when the peer has completed its\n
      \  advertisements of label bindings for the requested Wildcard FEC\n   Element
      Type.\n"
    title: 5.3.  Wildcard Label Request
  title: 5.  Usage Guidelines
- contents:
  - "6.  Security Considerations\n   No security considerations beyond those that
    apply to the base LDP\n   specification [RFC5036] and that are further described
    in [RFC5920]\n   apply to signaling the End-of-LIB condition as described in this\n
    \  document.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document introduces a new LDP Status Code and
    a new LDP\n   Capability.\n      IANA has assigned the 'End-of-LIB' status code
    (0x0000002F) from\n      the Status Code Name Space.  [RFC5036] partitions the
    Status Code\n      Name Space into 3 regions: IETF Consensus region, First Come
    First\n      Served region, and Private Use region.  The code point 0x0000002F\n
    \     is from the IETF Consensus range.\n      IANA has assigned the 'Unrecognized
    Notification' capability\n      (0x0603) from the TLV Type name space.  [RFC5036]
    partitions the\n      TLV Type name space into 3 regions: IETF Consensus region,
    Vendor\n      Private Use region, and Experimental Use region.  The code point\n
    \     0x0603 is from the IETF Consensus range.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgments\n      The authors would like to recognize Kamran Raza, who
    helped to\n      formulate this draft.\n      The authors would like to thank
    Ina Minei, Alia Atlas, Yakov\n      Rekhter, Loa Andersson, and Luyuan Fang for
    their valuable\n      feedback and contributions.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n
      \             \"LDP Specification\", RFC 5036, October 2007.\n   [RFC5561]  Thomas,
      B., Raza, K., Aggarwal, S., Aggarwal, R., and JL.\n              Le Roux, \"LDP
      Capabilities\", RFC 5561, July 2009.\n   [RFC5918]  Asati, R., Minei, I., and
      B. Thomas, \"Label Distribution\n              Protocol (LDP) 'Typed Wildcard'
      Forward Equivalence Class\n              (FEC)\", RFC 5918, August 2010.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC3478]  Leelanivas, M., Rekhter, Y., and
      R. Aggarwal, \"Graceful\n              Restart Mechanism for Label Distribution
      Protocol\", RFC\n              3478, February 2003.\n   [RFC5443]  Jork, M.,
      Atlas, A., and L. Fang, \"LDP IGP\n              Synchronization\", RFC 5443,
      March 2009.\n   [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and
      GMPLS\n              Networks\", RFC 5920, July 2010.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Rajiv Asati\n   Cisco Systems\n   7025-6 Kit Creek Rd.\n
    \  Research Triangle Park, NC  27709-4987\n   EMail: rajiva@cisco.com\n   Pradosh
    Mohapatra\n   Cisco Systems\n   3750 Cisco Way\n   San Jose, CA  95134\n   EMail:
    pmohapat@cisco.com\n   Emily Chen\n   Huawei Technologies\n   No. 5 Street, Shangdi
    Information, Haidian\n   Beijing, China\n   EMail: chenying220@huawei.com\n   Bob
    Thomas\n   EMail: bobthomas@alum.mit.edu\n"
  title: Authors' Addresses
