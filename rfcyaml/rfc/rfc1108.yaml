- title: __initial_text__
  contents:
  - "                       U.S. Department of Defense\n               Security Options\
    \ for the Internet Protocol\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This RFC specifies the U.S. Department of Defense Basic Security\n\
    \   Option and the top-level description of the Extended Security Option\n   for\
    \ use with the Internet Protocol.  This RFC obsoletes RFC 1038\n   \"Revised IP\
    \ Security Option\", dated January 1988.\n"
- title: 1.  DoD Security Options Defined
  contents:
  - "1.  DoD Security Options Defined\n   The following two internet protocol options\
    \ are defined for use on\n   Department of Defense (DoD) common user data networks:\n\
    \   CF  CLASS  #  TYPE  LENGTH   DESCRIPTION\n   1     0    2   130   var.   \
    \ DoD Basic Security:  Used to carry the\n   1     0    5   133   var.    DoD\
    \ Extended Security:  Used to carry\n   CF = Copy on Fragmentation\n"
- title: 2.  DoD Basic Security Option
  contents:
  - "2.  DoD Basic Security Option\n   This option identifies the U.S. classification\
    \ level at which the\n   datagram is to be protected and the authorities whose\
    \ protection\n   rules apply to each datagram.\n   This option is used by end\
    \ systems and intermediate systems of an\n   internet to:\n        a.  Transmit\
    \ from source to destination in a network standard\n        representation the\
    \ common security labels required by computer\n        security models,\n    \
    \    b.  Validate the datagram as appropriate for transmission from\n        the\
    \ source and delivery to the destination,\n        c.  Ensure that the route taken\
    \ by the datagram is protected to\n        the level required by all protection\
    \ authorities indicated on\n        the datagram.  In order to provide this facility\
    \ in a general\n        Internet environment, interior and exterior gateway protocols\n\
    \        must be augmented to include security label information in\n        support\
    \ of routing control.\n   The DoD Basic Security option must be copied on fragmentation.\
    \  This\n   option appears at most once in a datagram.  Some security systems\n\
    \   require this to be the first option if more than one option is\n   carried\
    \ in the IP header, but this is not a generic requirement\n   levied by this specification.\n\
    \   The format of the DoD Basic Security option is as follows:\n      +------------+------------+------------+-------------//----------+\n\
    \      |  10000010  |  XXXXXXXX  |  SSSSSSSS  |  AAAAAAA[1]    AAAAAAA0 |\n  \
    \    |            |            |            |         [0]             |\n    \
    \  +------------+------------+------------+-------------//----------+\n      \
    \  TYPE = 130     LENGTH   CLASSIFICATION         PROTECTION\n               \
    \                      LEVEL              AUTHORITY\n                        \
    \                                  FLAGS\n                    FIGURE 1.  DoD BASIC\
    \ SECURITY OPTION FORMAT\n"
- title: 2.1.  Type
  contents:
  - "2.1.  Type\n   The value 130 identifies this as the DoD Basic Security Option.\n"
- title: 2.2.  Length
  contents:
  - "2.2.  Length\n   The length of the option is variable.  The minimum length of\
    \ the\n   option is 3 octets, including the Type and Length fields (the\n   Protection\
    \ Authority field may be absent).  A length indication of\n   less than 3 octets\
    \ should result in error processing as described in\n   Section 2.8.1.\n"
- title: 2.3.  Classification Level
  contents:
  - "2.3.  Classification Level\n        Field Length:  One Octet\n   This field specifies\
    \ the (U.S.) classification level at which the\n   datagram must be protected.\
    \  The information in the datagram must be\n   protected at this level.  The field\
    \ is encoded as shown in Table 1\n   and the order of values in this table defines\
    \ the ordering for\n   comparison purposes.  The bit string values in this table\
    \ were chosen\n   to achieve a minimum Hamming distance of four (4) between any\
    \ two\n   valid values.  This specific assignment of classification level names\n\
    \   to values has been defined for compatibility with security devices\n   which\
    \ have already been developed and deployed.\n   \"Reserved\" values in the table\
    \ must be treated as invalid until such\n   time they are assigned to named classification\
    \ levels in a successor\n   to this document.  A datagram containing a value for\
    \ this field which\n   is either not in this table or which is listed as \"reserved\"\
    \ is in\n   error and must be processed according to the \"out-of-range\"\n  \
    \ procedures defined in section 2.8.1.\n   A classification level value from the\
    \ Basic Security Option in a\n   datagram may be checked for equality against\
    \ any of the (assigned)\n   values in Table 1 by performing a simple bit string\
    \ comparison.\n   However, because of the sparseness of the classification level\n\
    \   encodings, range checks involving a value from this field must not be\n  \
    \ performed based solely using arithmetic comparisons (as such\n   comparisons\
    \ would encompass invalid and or unassigned values within\n   the range).  The\
    \ details of how ordered comparisons are performed for\n   this field within a\
    \ system is a local matter, subject to the\n   requirements set forth in this\
    \ paragraph.\n                    Table 1.  Classification Level Encodings\n \
    \                        Value              Name\n                        00000001\
    \   -   (Reserved 4)\n                        00111101   -   Top Secret\n    \
    \                    01011010   -   Secret\n                        10010110 \
    \  -   Confidential\n                        01100110   -   (Reserved 3)\n   \
    \                     11001100   -   (Reserved 2)\n                        10101011\
    \   -   Unclassified\n                        11110001   -   (Reserved 1)\n"
- title: 2.4.  Protection Authority Flags
  contents:
  - "2.4.  Protection Authority Flags\n        Field Length:  Variable\n   This field\
    \ identifies the National Access Programs or Special Access\n   Programs which\
    \ specify protection rules for transmission and\n   processing of the information\
    \ contained in the datagram.  Note that\n   protection authority flags do NOT\
    \ represent accreditation\n   authorities, though the semantics are superficially\
    \ similar.  In\n   order to maintain architectural consistency and interoperability\n\
    \   throughout DoD common user data networks, users of these networks\n   should\
    \ submit requirements for additional Protection Authority Flags\n   to DISA DISDB,\
    \ Washington, D.C.  20305-2000, for review and approval.\n   Such review and approval\
    \ should be sought prior to design,\n   development or deployment of any system\
    \ which would make use of\n   additional facilities based on assignment of new\
    \ protection authority\n   flags.  As additional flags are approved and assigned,\
    \ they will be\n   published, along with the values defined above, in the Assigned\n\
    \   Numbers RFC edited by the Internet Assigned Numbers Authority (IANA).\n  \
    \      a.  Field Length: This field is variable in length.  The low-\n       \
    \ order bit (Bit 7) of each octet is encoded as \"0\" if it is the\n        final\
    \ octet in the field or as \"1\" if there are additional\n        octets.  Initially,\
    \ only one octet is required for this field\n        (because there are fewer\
    \ than seven authorities defined), thus\n        the final bit of the first octet\
    \ is encoded as \"0\".  However,\n        minimally compliant implementations\
    \ must be capable of\n        processing a protection authority field consisting\
    \ of at least 2\n        octets (representing up to 14 protection authorities).\n\
    \        Implementations existing prior to the issuance of this RFC, and\n   \
    \     which process fewer protection authority than specified here,\n        will\
    \ be considered minimally compliant so long as such\n        implementations process\
    \ the flags in accordance with the RFC.\n        This field must be a minimally\
    \ encoded representation, i.e., no\n        trailing all-zero octets should be\
    \ emitted.  If the length of\n        this field as indicated by this extensible\
    \ encoding is not\n        consistent with the length field for the option, the\
    \ datagram is\n        in error and the procedure described in Section 2.8.1 must\
    \ be\n        followed.  (Figure 2 illustrates the relative significance of\n\
    \        the bits within an octet).\n                        0   1   2   3   4\
    \   5   6   7\n                      +---+---+---+---+---+---+---+---+\n     \
    \     High-order  |   |   |   |   |   |   |   |   |  Low-order\n             \
    \         +---+---+---+---+---+---+---+---+\n                         Figure 2.\
    \  Significance of Bits\n        b.  Source Flags: The first seven bits (Bits\
    \ 0 through 6) in\n        each octet are flags.  Each flag is associated with\
    \ an\n        authority.  Protection Authority flags currently assigned are\n\
    \        indicated in Table 2.  The bit corresponding to an authority is\n   \
    \     \"1\" if the datagram is to be protected in accordance with the\n      \
    \  rules of that authority.  More than one flag may be present in a\n        single\
    \ instance of this option if the data contained in the\n        datagram should\
    \ be protected according to rules established by\n        multiple authorities.\
    \  Table 3 identifies a point of contact for\n        each of the authorities\
    \ listed in Table 2.  No \"unassigned\" bits\n        in this or other octets\
    \ in the Protection Authority Field shall\n        be considered valid Protection\
    \ Authority flags until such time\n        as such bits are assigned and the assignments\
    \ are published in\n        the Assigned Numbers RFC.  Thus a datagram containing\
    \ flags for\n        unassigned bits in this field for this option is in error\
    \ and\n        must be processed according to the \"out-of-range\" procedures\n\
    \        defined in section 2.8.1.\n        Two protection authority flag fields\
    \ can be compared for\n        equality (=) via simple bit string matching.  No\
    \ relative\n        ordering between two protection authority flag fields is\n\
    \        defined.  Because these flags represent protection authorities,\n   \
    \     security models such as Bell-LaPadula do not apply to\n        interpretation\
    \ of this field.  However, the symbol \"=<\" refers\n        to set inclusion\
    \ when comparing a protection authority flag\n        field to a set of such fields.\
    \  Means for effecting these tests\n        within a system are a local matter,\
    \ subject to the requirements\n        set forth in this paragraph.\n        \
    \              Table 2 - Protection Authority Bit Assignments\n              \
    \                  BIT\n                               NUMBER     AUTHORITY\n\
    \                                 0        GENSER\n                          \
    \       1        SIOP-ESI\n                                 2        SCI\n   \
    \                              3        NSA\n                                \
    \ 4        DOE\n                              5, 6        Unassigned\n       \
    \                          7        Field Termination Indicator\n            \
    \    Table 3 - Protection Authority Points of Contact\n                AUTHORITY\
    \             POINT OF CONTACT\n                GENSER                Designated\
    \ Approving Authority\n                                      per DOD 5200.28\n\
    \                SIOP-ESI              Department of Defense\n               \
    \                       Organization of the\n                                \
    \      Joint Chiefs of Staff\n                                      Attn: J6\n\
    \                                      Washington, DC  20318-6000\n          \
    \      SCI                   Director of Central Intelligence\n              \
    \                        Attn: Chairman, Information\n                       \
    \               Handling Committee, Intelligence\n                           \
    \           Community Staff\n                                      Washington,\
    \ D.C. 20505\n                NSA                   National Security Agency\n\
    \                                      9800 Savage Road\n                    \
    \                  Attn: T03\n                                      Ft. Meade,\
    \ MD 20755-6000\n                DOE                   Department of Energy\n\
    \                                      Attn:  DP343.2\n                      \
    \                Washington, DC  20545\n"
- title: 2.5.  System Security Configuration Parameters
  contents:
  - "2.5.  System Security Configuration Parameters\n   Use of the Basic Security\
    \ Option (BSO) by an end or intermediate\n   system requires that the system configuration\
    \ include the parameters\n   described below.  These parameters are critical to\
    \ secure processing\n   of the BSO, and thus must be protected from unauthorized\n\
    \   modification.  Note that compliant implementations must allow a\n   minimum\
    \ of 14 distinct Protection Authority flags (consistent with\n   the Protection\
    \ Authority field size defined in Section 2.4) to be set\n   independently in\
    \ any parameter involving Protection Authority flag\n   fields.\n        a. SYSTEM-LEVEL-MAX:\
    \ This parameter specifies the highest\n        Classification Level (see Table\
    \ 1) which may be present in the\n        classification level field of the Basic\
    \ Security Option in any\n        datagram transmitted or received by the system.\n\
    \        b. SYSTEM-LEVEL-MIN: This parameter specifies the lowest\n        Classification\
    \ Level (see Table 1) which may be present in the\n        classification level\
    \ field of the Basic Security Option in any\n        datagram transmitted by the\
    \ system.\n        c. SYSTEM-AUTHORITY-IN:  This parameter is a set, each member\
    \ of\n        which is a Protection Authority flag field.  The set enumerates\n\
    \        all of the Protection Authority flag fields which may be present\n  \
    \      in the Protection Authority field of the Basic Security Option\n      \
    \  in any datagram received by this system.  A compliant\n        implementation\
    \ must be capable of representing at least 256\n        distinct Protection Authority\
    \ flag fields (each field must be\n        capable of representing 14 distinct\
    \ Protection Authority flags)\n        in this set.  Each element of the enumerated\
    \ set may be a\n        combination of multiple protection authority flags.\n\
    \        Set elements representing multiple Protection Authorities are\n     \
    \   formed by ORing together the flags that represent each\n        authority.\
    \  Thus, for example, a set  element representing\n        datagrams to be protected\
    \ according to NSA and SCI rules might\n        be represented as \"00110000\"\
    \ while an element representing\n        protection mandated by NSA, DOE and SIOP-ESI\
    \ might be\n        represented as \"01011000\".  (These examples illustrate 8-bit\
    \ set\n        elements apropos the minimal encodings for currently defined\n\
    \        Protection Authority flags.  If additional flags are defined\n      \
    \  beyond the first byte of the Protection Authority Field, longer\n        encodings\
    \ for set elements may be required.)\n        It is essential that implementations\
    \ of the Internet Protocol\n        Basic Security Option provide a convenient\
    \ and compact way for\n        system security managers to express which combinations\
    \ of flags\n        are allowed.  The details of such an interface are outside\
    \ the\n        scope of this RFC, however, enumeration of bit patterns is NOT\
    \ a\n        recommended interface.  As an alternative, one might consider a\n\
    \        notation of the form COMB(GENSER,NSA,SCI)+COMB(SIOP-ESI,NSA,SCI)\n  \
    \      in which \"COMB\" means ANY combination of the flags referenced as\n  \
    \      parameters of the COMB function are allowed and \"+\" means \"or\".\n \
    \       d. SYSTEM-AUTHORITY-OUT:  This parameter is a set, each member\n     \
    \   of which is a Protection Authority flag field.  The set\n        enumerates\
    \ all of the Protection Authority flag fields which may\n        be present in\
    \ the Protection Authority field of the Basic\n        Security Option in any\
    \ datagram transmitted by this system.  A\n        compliant implementation must\
    \ be capable of representing at\n        least 256 distinct Protection Authority\
    \ flag fields in this set.\n        Explicit enumeration of all authorized Protection\
    \ Authority\n        field flags permits great flexibility, and in particular\
    \ does\n        not impose set inclusion restrictions on this parameter.\n   The\
    \ following configuration parameters are defined for each network\n   port present\
    \ on the system.  The term \"port\" is used here to refer\n   either to a physical\
    \ device interface (which may represent multiple\n   IP addresses) or to a single\
    \ IP address (which may be served via\n   multiple physical interfaces).  In general\
    \ the former interpretation\n   will apply and is consistent with the Trusted\
    \ Network Interpretation\n   of the Trusted Computer Systems Evaluation Criteria\
    \ (TNI) concept of\n   a \"communications channel\" or \"I/O device.\"  However,\
    \ the latter\n   interpretation also may be valid depending on local system security\n\
    \   capabilities.  Note that some combinations of port parameter values\n   are\
    \ appropriate only if the port is \"single level,\" i.e., all data\n   transmitted\
    \ or received via the port is accurately characterized by\n   exactly one Classification\
    \ Level and Protection Authority Flag field.\n        e. PORT-LEVEL-MAX: This\
    \ parameter specifies the highest\n        Classification Level (see Table 1)\
    \ which may be present in the\n        classification level field of the Basic\
    \ Security Option in any\n        datagram transmitted or received by the system\
    \ via this network\n        port.\n        f. PORT-LEVEL-MIN: This parameter specifies\
    \ the lowest\n        Classification Level (see Table 1) which may be present\
    \ in the\n        classification level field of the Basic Security Option in any\n\
    \        datagram transmitted by the system via this network port.\n        g.\
    \ PORT-AUTHORITY-IN:  This parameter is a set each member of\n        which is\
    \ a Protection Authority flag field.  The set enumerates\n        all of the Protection\
    \ Authority flag fields which may be present\n        in the Protection Authority\
    \ field of the Basic Security Option\n        in any datagram received via this\
    \ port.  A compliant\n        implementation must be capable of representing at\
    \ least 256\n        distinct Protection Authority flag fields in this set.\n\
    \        h. PORT-AUTHORITY-OUT:  This parameter is a set each member of\n    \
    \    which is a Protection Authority flag field.  The set enumerates\n       \
    \ all of the Protection Authority flag fields which may be present\n        in\
    \ the Protection Authority field of the Basic Security Option\n        in any\
    \ datagram transmitted via this port.  A compliant\n        implementation must\
    \ be capable of representing at least 256\n        distinct Protection Authority\
    \ flag fields in this set.\n        i. PORT-AUTHORITY-ERROR:  This parameter is\
    \ a single Protection\n        Authority flag field assigned to transmitted ICMP\
    \ error messages\n        (see Section 2.8).  The PORT-AUTHORITY-ERROR value is\
    \ selected\n        from the set of values which constitute PORT-AUTHORITY-OUT.\n\
    \        Means for selecting the PORT-AUTHORITY-ERROR value within a\n       \
    \ system are a local matter subject to local security policies.\n        j. PORT-IMPLICIT-LABEL:\
    \  This parameter specifies a single\n        Classification Level and a Protection\
    \ Authority flag field\n        (which may be null) to be associated with all\
    \ unlabelled\n        datagrams received via the port.  This parameter is meaningful\n\
    \        only if PORT-BSO-REQUIRED-RECEIVE = FALSE, otherwise receipt of\n   \
    \     an unlabelled datagram results in an error response.\n        k. PORT-BSO-REQUIRED-RECEIVE:\
    \  This parameter is a boolean which\n        indicates whether all datagrams\
    \ received via this network port\n        must contain a Basic Security Option.\n\
    \        l. PORT-BSO-REQUIRED-TRANSMIT:  This parameter is a boolean\n       \
    \ which indicates whether all datagrams transmitted via this\n        network\
    \ port must contain a Basic Security Option.   If this\n        parameter is set\
    \ to FALSE, then PORT-BSO-REQUIRED-RECEIVE should\n        also be set to FALSE\
    \ (to avoid communication failures resulting\n        from asymmetric labelling\
    \ constraints).\n   In every intermediate or end system, the following relationship\
    \ must\n   hold for these parameters for all network interfaces.  The symbol\n\
    \   \">=\" is interpreted relative to the linear ordering defined for\n   security\
    \ levels specified in Section 2.3 for the \"LEVEL\" parameters,\n   and as set\
    \ inclusion for the \"AUTHORITY\" parameters.\n           SYSTEM-LEVEL-MAX >=\
    \ PORT-LEVEL-MAX >=\n                   PORT-LEVEL-MIN >= SYSTEM-LEVEL-MIN\n \
    \          SYSTEM-AUTHORITY-IN >= PORT-AUTHORITY-IN\n                        \
    \    and\n           SYSTEM-AUTHORITY-OUT >= PORT-AUTHORITY-OUT\n"
- title: 2.6.  Configuration Considerations
  contents:
  - "2.6.  Configuration Considerations\n   Systems which do not maintain separation\
    \ for different security\n   classification levels of data should have only trivial\
    \ ranges for the\n   LEVEL parameters, i.e., SYSTEM-LEVEL-MAX = PORT-LEVEL-MAX\
    \ = PORT-\n   LEVEL-MIN = SYSTEM-LEVEL-MIN.\n   Systems which do maintain separation\
    \ for different security\n   classification levels of data may have non-trivial\
    \ ranges for the\n   LEVEL parameters, e.g., SYSTEM-LEVEL-MAX >= PORT-LEVEL-MAX\
    \ >= PORT-\n   LEVEL-MIN >= SYSTEM-LEVEL-MIN.\n"
- title: 2.7.  Processing the Basic Security Option
  contents:
  - "2.7.  Processing the Basic Security Option\n   For systems implementing the Basic\
    \ Security Option, the parameters\n   PORT-BSO-REQUIRED-TRANSMIT and PORT-BSO-REQUIRED-RECEIVE\
    \ are used to\n   specify the local security policy with regard to requiring the\n\
    \   presence of this option on transmitted and received datagrams,\n   respectively,\
    \ on a per-port basis.  Each datagram transmitted or\n   received by the system\
    \ must be processed in accordance with the per-\n   port and system-wide security\
    \ parameters configured for the system.\n   Systems which process only Unclassified\
    \ data may or may not be\n   configured to generate the BSO on transmitted datagrams.\
    \  Such\n   systems also may or may not require a BSO to be present on received\n\
    \   datagrams.  However, all systems must be capable of accepting\n   datagrams\
    \ containing this option, irrespective of whether the option\n   is processed\
    \ or not.\n   In general, systems which process classified data must generate\
    \ this\n   option for transmitted datagrams.  The only exception to this rule\n\
    \   arises in (dedicated or system high [DoD 5200.28]) networks where\n   traffic\
    \ may be implicitly labelled rather than requiring each\n   attached system to\
    \ generate explicit labels.  If the local security\n   policy permits receipt\
    \ of datagrams without the option, each such\n   datagram is presumed to be implicitly\
    \ labelled based on the port via\n   which the datagram is received.  A per-port\
    \ parameter (PORT-\n   IMPLICIT-LABEL) specifies the label to be associated with\
    \ such\n   datagrams upon receipt.  Note that a datagram transmitted in response\n\
    \   to receipt of an implicitly labelled datagram, may, based on local\n   policy,\
    \ require an explicit Basic Security Option.\n"
- title: 2.7.1.  Handling Unclassified Datagrams
  contents:
  - "2.7.1.  Handling Unclassified Datagrams\n   If an unmarked datagram is received\
    \ via a network port for which\n   PORT-BSO-REQUIRED = FALSE and PORT-IMPLICIT-LABEL\
    \ = UNCLASSIFIED (NO\n   FLAGS), the datagram shall be processed as though no\
    \ Protection\n   Authority Flags were set.  Thus there are two distinct, valid\n\
    \   representations for Unclassified datagrams to which no Protection\n   Authority\
    \ rules apply (an unmarked datagram as described here and a\n   datagram containing\
    \ an explicit BSO with Classification Level set to\n   Unclassified and with no\
    \ Protection Authority flags set).  Note that\n   a datagram also may contain\
    \ a Basic Security Option in which the\n   Classification Level is Unclassified\
    \ and one or more Protection\n   Authority Field Flags are set.  Such datagrams\
    \ are explicitly\n   distinct from the equivalence class noted above (datagrams\
    \ marked\n   Unclassified with no Protection Authority field flags set and\n \
    \  datagrams not containing a Basic Security Option).\n"
- title: 2.7.2.  Input Processing
  contents:
  - "2.7.2.  Input Processing\n   Upon receipt of any datagram a system compliant\
    \ with this RFC must\n   perform the following actions.  First, if PORT-BSO-REQUIRED-RECEIVE\
    \ =\n   TRUE for this port, then any received datagram must contain a Basic\n\
    \   Security Option and a missing BSO results in an ICMP error response\n   as\
    \ specified in Section 2.8.1.  A received datagram which contains a\n   Basic\
    \ Security Option must be processed as described below.  This\n   algorithm assumes\
    \ that the IP header checksum has already been\n   verified and that, in the course\
    \ of processing IP options, this\n   option has been encountered.  The value of\
    \ the Classification Level\n   field from the option will be designated \"DG-LEVEL\"\
    \ and the value of\n   the Protection Authority Flags field will be designated\
    \ \"DG-\n   AUTHORITY.\"\n   Step 1. Check that DG-LEVEL is a valid security classification\
    \ level,\n           i.e., it must be one of the (non-reserved) values from Table\n\
    \           1.  If this test fails execute the out-of-range procedure in\n   \
    \        Section 2.8.1.\n   Step 2. Check that PORT-LEVEL-MAX >= DG-LEVEL.  If\
    \ this test fails,\n           execute out-of-range procedure specified in Section\
    \ 2.8.2.\n   Step 3. Check that DG-AUTHORITY =< PORT-AUTHORITY-IN.  If this test\n\
    \           fails, execute out-of-range procedure specified in Section\n     \
    \      2.8.2.\n"
- title: 2.7.3.  Output Processing
  contents:
  - "2.7.3.  Output Processing\n   Any system which implements the Basic Security\
    \ Option must adhere to\n   a fundamental rule with regard to transmission of\
    \ datagrams, i.e., no\n   datagram shall be transmitted with a Basic Security\
    \ Option the value\n   of which is outside of the range for which the system is\
    \ configured.\n   Thus for every datagram transmitted by a system the following\
    \ must\n   hold: PORT-LEVEL-MAX >= DG-LEVEL >= PORT-LEVEL-MIN and DG-AUTHORITY\n\
    \   =< PORT-AUTHORITY-OUT.  It is a local matter as to what procedures\n   are\
    \ followed by a system which detects at attempt to transmit a\n   datagram for\
    \ which these relationships do not hold.\n   If a port is configured to allow\
    \ both labelled and unlabelled\n   datagrams (PORT-BSO-REQUIRED-TRANSMIT = FALSE)\
    \ to be transmitted, the\n   question arises as to whether a label should be affixed.\
    \  In\n   recognition of the lack of widespread implementation or use of this\n\
    \   option, especially in unclassified networks, this RFC recommends that\n  \
    \ the default be transmission of unlabelled datagrams.  If the\n   destination\
    \ requires all datagrams to be labelled on input, then it\n   will respond with\
    \ an ICMP error message (see Section 2.8.1) and the\n   originator can respond\
    \ by labelling successive packets transmitted to\n   this destination.\n   To\
    \ support this mode of operation, a system which allows transmission\n   of both\
    \ labelled and unlabelled datagrams must maintain state\n   information (a cache)\
    \ so that the system can associate the use of\n   labels with specific destinations,\
    \ e.g., in response to receipt of an\n   ICMP error message as specified in Section\
    \ 2.8.1.  This requirement\n   for maintaining a per-destination cache is very\
    \ much analogous to\n   that imposed for processing the IP source route option\
    \ or for\n   maintaining first hop routing information (RFC 1122).  This RFC does\n\
    \   not specify which protocol module must maintain the per-destination\n   cache\
    \ (e.g., IP vs.  TCP or UDP) but security engineering constraints\n   may dictate\
    \ an IP implementation in trusted systems.  This RFC also\n   does not specify\
    \ a cache maintenance algorithm, though use of a timer\n   and activity flag may\
    \ be appropriate.\n"
- title: 2.8.  Error Procedures
  contents:
  - "2.8.  Error Procedures\n   Datagrams received with errors in the Basic Security\
    \ Option or which\n   are out of range for the network port via which they are\
    \ received,\n   should not be delivered to user processes.  Local policy will\
    \ specify\n   whether logging and/or notification of a system security officer\
    \ is\n   required in response to receipt of such datagrams.  The following are\n\
    \   the least restrictive actions permitted by this protocol.  Individual\n  \
    \ end or intermediate systems, system administrators, or protection\n   authorities\
    \ may impose more stringent restrictions on responses and\n   in some instances\
    \ may not permit any response at all to a datagram\n   which is outside the security\
    \ range of a host or system.\n   In all cases, if the error is triggered by receipt\
    \ of an ICMP, the\n   ICMP is discarded and no response is permitted (consistent\
    \ with\n   general ICMP processing rules).\n"
- title: 2.8.1.Parameter Problem Response
  contents:
  - "2.8.1.Parameter Problem Response\n   If a datagram is received with no Basic\
    \ Security Option and the\n   system security configuration parameters require\
    \ the option on the\n   network port via which the datagram was received, an ICMP\
    \ Parameter\n   Problem Missing Option (Type = 12, Code = 1) message is transmitted\n\
    \   in response.  The Pointer field of the ICMP should be set to the\n   value\
    \ \"130\" to indicate the type of option missing.  A Basic Security\n   Option\
    \ is included in the response datagram with Clearance Level set\n   to PORT-LEVEL-MIN\
    \ and Protection Authority Flags set to PORT-\n   AUTHORITY-ERROR.\n   If a datagram\
    \ is received in which the Basic Security Option is\n   malformed (e.g., an invalid\
    \ Classification Level Protection Authority\n   Flag field), an ICMP Parameter\
    \ Problem (Type = 12, Code = 0) message\n   is transmitted in response.  The pointer\
    \ field is set to the\n   malformed Basic Security Option.  The Basic Security\
    \ Option is\n   included in the response datagram with Clearance Level set to\
    \ PORT-\n   LEVEL-MIN and Protection Authority Flags set to PORT-AUTHORITY-ERROR.\n"
- title: 2.8.2.  Out-Of-Range Response
  contents:
  - "2.8.2.  Out-Of-Range Response\n   If a datagram is received which is out of range\
    \ for the network port\n   on which it was received, an ICMP Destination Unreachable\n\
    \   Communication Administratively Prohibited (Type = 3, Code = 9 for net\n  \
    \ or Code = 10 for host) message is transmitted in response.  A Basic\n   Security\
    \ Option is included in the response datagram with Clearance\n   Level set to\
    \ PORT-LEVEL-MIN and Protection Authority Flags set to\n   PORT-AUTHORITY-ERROR.\n"
- title: 2.9.  Trusted Intermediary Procedure
  contents:
  - "2.9.  Trusted Intermediary Procedure\n   Certain devices in an internet may act\
    \ as intermediaries to validate\n   that communications between two hosts are\
    \ authorized.  This decision\n   is based on the knowledge of the accredited security\
    \ levels of the\n   hosts and the values in the DoD Basic Security Option.  These\
    \ devices\n   may receive IP datagrams which are in range for the intermediate\n\
    \   device, but are not within the accredited range either for the source\n  \
    \ or for the destination.  In the former case, the datagram should be\n   treated\
    \ as described above for an out-of-range option.  In the latter\n   case, an ICMP\
    \ Destination Unreachable Communication Administratively\n   Prohibited (Type\
    \ = 3, Code = 9 for net or Code = 10 for host)\n   response should be transmitted.\
    \ The security range of the network\n   interface on which the reply will be sent\
    \ determines whether a reply\n   is allowed and at what level it will be sent.\n"
- title: 3.  DoD Extended Security Option
  contents:
  - "3.  DoD Extended Security Option\n   This option permits additional security\
    \ labelling information, beyond\n   that present in the Basic Security Option,\
    \ to be supplied in an IP\n   datagram to meet the needs of registered authorities.\
    \  Note that\n   information which is not labelling data or which is meaningful\
    \ only\n   to the end systems (not intermediate systems) is not appropriate for\n\
    \   transmission in the IP layer and thus should not be transported using\n  \
    \ this option.  This option must be copied on fragmentation.  Unlike\n   the Basic\
    \ Option, this option may appear multiple times within a\n   datagram, subject\
    \ to overall IP header size constraints.\n   This option may be present only in\
    \ conjunction with the Basic\n   Security Option, thus all systems which support\
    \ Extended Security\n   Options must also support the Basic Security Option. \
    \ However, not\n   all systems which support the Basic Security Option need to\
    \ support\n   Extended Security Options and support for these options may be\n\
    \   selective, i.e., a system need not support all Extended Security\n   Options.\n\
    \   The top-level format for this option is as follows:\n             +------------+------------+------------+-------//-------+\n\
    \             |  10000101  |  000LLLLL  |  AAAAAAAA  |  add sec info  |\n    \
    \         +------------+------------+------------+-------//-------+\n        \
    \      TYPE = 133      LENGTH     ADDITIONAL      ADDITIONAL\n               \
    \                         SECURITY INFO     SECURITY\n                       \
    \                  FORMAT CODE        INFO\n                   FIGURE 3.  DoD\
    \ EXTENDED SECURITY OPTION FORMAT\n"
- title: 3.1.  Type
  contents:
  - "3.1.  Type\n   The value 133 identifies this as the DoD Extended Security Option.\n"
- title: 3.2.  Length.
  contents:
  - "3.2.  Length.\n   The length of the option, which includes the \"Type\" and \"\
    Length\"\n   fields, is variable.  The minimum length of the option is 3 octets.\n"
- title: 3.3.  Additional Security Info Format Code
  contents:
  - "3.3.  Additional Security Info Format Code\n        Length:  1 Octet\n   The\
    \ value of the Additional Security Info Format Code identifies the\n   syntax\
    \ and semantics for a specific \"Additional Security Information\"\n   field.\
    \  For each Additional Security Info Format Code, an RFC will be\n   published\
    \ to specify the syntax and to provide an algorithmic\n   description of the processing\
    \ required to determine whether a\n   datagram carrying a label specified by this\
    \ Format Code should be\n   accepted or rejected.  This specification must be\
    \ sufficiently\n   detailed to permit vendors to produce interoperable implementations,\n\
    \   e.g., it should be comparable to the specification of the Basic\n   Security\
    \ Option provided in this RFC.  However, the specification\n   need not include\
    \ a mapping from the syntax of the option to human\n   labels if such mapping\
    \ would cause distribution of the specification\n   to be restricted.\n   In order\
    \ to maintain the architectural consistency of DoD common user\n   data networks,\
    \ and to maximize interoperability, each activity should\n   submit its plans\
    \ for the definition and use of an Additional Security\n   Info Format Code to\
    \ DISA DISDB, Washington, D.C.  20305-2000 for\n   review and approval.  DISA\
    \ DISDB will forward plans to the Internet\n   Activities Board for architectural\
    \ review and, if required, a cleared\n   committee formed by the IAB will be constituted\
    \ for the review\n   process.  Once approved, the Internet Assigned Number authority\
    \ will\n   assign an Additional Security Info Format Code to the requesting\n\
    \   activity, concurrent with publication of the corresponding RFC.\n   Note:\
    \ The bit assignments for the Protection Authority flags of the\n   Basic Security\
    \ Option have no relationship to the \"Additional\n   Security Info Format Code\"\
    \ of this option.\n"
- title: 3.4.  Additional Security Information.
  contents:
  - "3.4.  Additional Security Information.\n        Length:  Variable\n   The Additional\
    \ Security Info field contains the additional security\n   labelling information\
    \ specified by the \"Additional Security Info\n   Format Code\" of the Extended\
    \ Security Option.  The syntax and\n   processing requirements for this field\
    \ are specified by the\n   associated RFC as noted above.  The minimum length\
    \ of this field is\n   zero.\n"
- title: 3.5.  System Security Configuration Parameters
  contents:
  - "3.5.  System Security Configuration Parameters\n   Use of the Extended Security\
    \ Option requires that the intermediate or\n   end system configuration accurately\
    \ reflect the security parameters\n   associated with communication via each network\
    \ port (see Section 2.5\n   as a guide).  Internal representation of the security\
    \ parameters\n   implementation dependent.  The set of parameters required to\
    \ support\n   processing of the Extended Security Option is a function of the\
    \ set\n   of Additional Security Info Format Codes supported by the system.\n\
    \   The RFC which specifies syntax and processing rules for a registered\n   Additional\
    \ Security Info Format Code will specify the additional\n   system security parameters\
    \ required for processing an Extended\n   Security Option relative to that Code.\n"
- title: 3.6.  Processing Rules
  contents:
  - "3.6.  Processing Rules\n   Any datagram containing an Extended Security Option\
    \ must also contain\n   a Basic Security Option and receipt of a datagram containing\
    \ the\n   former absent the latter constitutes an error.  If the length\n   specified\
    \ by the Length field is inconsistent with the length\n   specified by the variable\
    \ length encoding for the Additional Security\n   Info field, the datagram is\
    \ in error.  If the datagram is received in\n   which the Additional Security\
    \ Info Format Code contains a non-\n   registered value, the datagram is in error.\
    \  Finally, if the\n   Additional Security Info field contains data inconsistent\
    \ with the\n   defining RFC for the Additional Security Info Format Code, the\n\
    \   datagram is in error.  In any of these cases, an ICMP Parameter\n   Problem\
    \ response should be sent as per Section 2.8.1.  Any additional\n   error processing\
    \ rules will be specified in the defining RFC for this\n   Additional Security\
    \ Info Format Code.\n   If the additional security information contained in the\
    \ Extended\n   Security Option indicates that the datagram is within range according\n\
    \   to the security policy of the system, then the datagram should be\n   accepted\
    \ for further processing.  Otherwise, the datagram should be\n   rejected and\
    \ the procedure specified in Section 2.8.2 should be\n   followed (with the Extended\
    \ Security Option values set apropos the\n   Additional Security Info Format Code\
    \ port security parameters).\n   As with the Basic Security Option, it will not\
    \ be possible in a\n   general internet environment for intermediate systems to\
    \ provide\n   routing control for datagrams based on the labels contained in the\n\
    \   Extended Security Option until such time as interior and exterior\n   gateway\
    \ routing protocols are enhanced to process such labels.\n"
- title: References
  contents:
  - "References\n   [DoD 5200.28]  Department of Defense Directive 5200.28, \"Security\n\
    \                  Requirements for Automated Information Systems,\" 21\n    \
    \              March 1988.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   The focus of this RFC is the definition of formats\
    \ and processing\n   conventions to support security labels for data contained\
    \ in IP\n   datagrams, thus a variety of security issues must be considered\n\
    \   carefully when making use of these options.  It is not possible to\n   address\
    \ all of the security considerations which affect correct\n   implementation and\
    \ use of these options, however the following\n   paragraph highglights some of\
    \ these issues.\n   Correct implementation and operation of the software and hardware\n\
    \   which processes these options is essential to their effective use.\n   Means\
    \ for achieving confidence in such correct implementation and\n   operation are\
    \ outside of the scope of this RFC.  The options\n   themselves incorporate no\
    \ facilities to ensure the integrity of the\n   security labels in transit (other\
    \ than the IP checksum mechanism),\n   thus appropriate technology must be employed\
    \ whenever datagrams\n   containing these options transit \"hostile\" communication\n\
    \   environments.  Careful, secure management of the configuration\n   variables\
    \ associated with each system making use of these options is\n   essential if\
    \ the options are to provide the intended security\n   functionality.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Stephen Kent\n   BBN Communications\n   150 CambridgePark\
    \ Drive\n   Cambridge, MA  02140\n   Phone: (617) 873-3988\n   Email: kent@bbn.com\n"
