- title: __initial_text__
  contents:
  - " The P-Answer-State Header Extension to the Session Initiation Protocol\n   \
    \     for the Open Mobile Alliance Push to Talk over Cellular\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a private Session Initiation Protocol (SIP)\n\
    \   header (P-header) used by the Open Mobile Alliance (OMA) for Push to\n   talk\
    \ over Cellular (PoC) along with its applicability, which is\n   limited to the\
    \ OMA PoC application.  The P-Answer-State header is\n   used for indicating the\
    \ answering mode of the handset, which is\n   particular to the PoC application.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Overall Applicability ...........................................3\n  \
    \ 3. Terminology .....................................................3\n   4.\
    \ Background for the Extension ....................................4\n   5. Overview\
    \ ........................................................5\n   6. The P-Answer-State\
    \ Header .......................................6\n      6.1. Requirements ...............................................8\n\
    \      6.2. Alternatives Considered ....................................8\n  \
    \    6.3. Applicability Statement for the P-Answer-State Header ......9\n    \
    \  6.4. Usage of the P-Answer-State Header ........................10\n      \
    \     6.4.1. Procedures at the UA (Terminal) ....................11\n        \
    \   6.4.2. Procedures at the UA (PTT Server) ..................11\n          \
    \ 6.4.3. Procedures at the Proxy Server .....................14\n   7. Formal\
    \ Syntax ..................................................14\n      7.1. P-Answer-State\
    \ Header Syntax ..............................14\n      7.2. Table of the New\
    \ Header ...................................14\n   8. Example Usage Session Flows\
    \ ....................................15\n      8.1. Pre-Arranged Group Call Using\
    \ On-Demand Session ...........15\n      8.2. 1-1 Call Using Pre-Established Session\
    \ ....................21\n   9. Security Considerations ........................................28\n\
    \   10. IANA Considerations ...........................................28\n  \
    \    10.1. Registration of Header Fields ............................28\n   11.\
    \ Acknowledgements ..............................................29\n   12. References\
    \ ....................................................29\n      12.1. Normative\
    \ References .....................................29\n      12.2. Informative\
    \ References ...................................30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Open Mobile Alliance (OMA) (http://www.openmobilealliance.org)\
    \ is\n   specifying the Push to talk Over Cellular (PoC) service where SIP is\n\
    \   the protocol used to establish half-duplex media sessions across\n   different\
    \ participants.  This document describes a private extension\n   to address specific\
    \ requirements of the PoC service and may not be\n   applicable to the general\
    \ Internet.\n   The PoC service allows a SIP User Agent (UA) (PoC terminal) to\n\
    \   establish a session to one or more SIP UAs simultaneously, usually\n   initiated\
    \ by the initiating user pushing a button.\n   OMA has defined a collection of\
    \ very stringent requirements in\n   support of the PoC service.  In order to\
    \ provide the user with a\n   satisfactory experience, the initial session establishment\
    \ (from the\n   time the user presses the button to the time they get an indication\n\
    \   to speak) must be minimized.\n"
- title: 2.  Overall Applicability
  contents:
  - "2.  Overall Applicability\n   The SIP extension specified in this document makes\
    \ certain\n   assumptions regarding network topology and the existence of\n  \
    \ transitive trust.  These assumptions are generally NOT APPLICABLE in\n   the\
    \ Internet as a whole.  The mechanism specified here was designed\n   to satisfy\
    \ the requirements specified by the Open Mobile Alliance for\n   Push to talk\
    \ over Cellular for which either no general-purpose\n   solution was found, where\
    \ insufficient operational experience was\n   available to understand if a general\
    \ solution is needed, or where a\n   more general solution is not yet mature.\
    \  For more details about the\n   assumptions made about this extension, consult\
    \ the applicability\n   statement in section 6.3.\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [1].\n\
    \   The terms \"PTT Server\" (Push to talk Server), \"Unconfirmed\n   Indication\"\
    , \"Unconfirmed Response\", \"Confirmed Indication\", and\n   \"Confirmed Response\"\
    \ are introduced in this document.\n   A \"PTT Server\" as referred to here is\
    \ a SIP network server that\n   performs the network-based functions for the Push\
    \ to talk service.\n   The PTT Server can act as a SIP Proxy (as defined in [2])\
    \ or a back-\n   to-back UA (B2BUA) (as defined in [2]) based on the functions\
    \ it\n   needs to perform.  There can be one or more PTT Servers involved in a\n\
    \   SIP Push to talk session.\n   An \"Unconfirmed Indication\" as referred to\
    \ here is an indication that\n   the final target UA for the request has yet to\
    \ be contacted and an\n   intermediate SIP node is indicating that it has information\
    \ that\n   hints that the request is likely to be answered by the target UA.\n\
    \   An \"Unconfirmed Response\" is a SIP 18x or 2xx response containing an\n \
    \  \"Unconfirmed Indication\".\n   A \"Confirmed Indication\" as referred to here\
    \ is an indication that\n   the target UA has accepted the session invitation\
    \ and is ready to\n   receive media.\n   A \"Confirmed Response\" is a SIP 200\
    \ (OK) response containing a\n   \"Confirmed Indication\" and has the usual semantics\
    \ of a SIP 200 (OK)\n   response containing an answer (such as a Session Description\
    \ Protocol\n   (SDP) answer).\n"
- title: 4.  Background for the Extension
  contents:
  - "4.  Background for the Extension\n   The PoC terminal could support such hardware\
    \ capabilities as a\n   speakerphone and/or headset and software that provide\
    \ the capability\n   for the user to configure the PoC terminal to accept the\
    \ session\n   invitations immediately and play out the media as soon as it is\n\
    \   received without requiring the intervention of the called user.  This\n  \
    \ mode of operation is known as Automatic Answer mode.  The user can\n   alternatively\
    \ configure the PoC terminal to first alert the user and\n   require the user\
    \ to manually accept the session invitation before\n   media is accepted.  This\
    \ mode of operation is known as Manual Answer\n   mode.  The PoC terminal could\
    \ support both or only one of these modes\n   of operation.  The user can change\
    \ the Answer Mode (AM) configuration\n   of the PoC terminal frequently based\
    \ on their current circumstances\n   and preference (perhaps because the user\
    \ is busy, or in a public area\n   where she cannot use a speakerphone, etc.).\n\
    \   The OMA PoC Architecture [3] utilizes PTT Servers within the network\n   that\
    \ can perform such roles as a conference focus [10], a real-time\n   transport\
    \ protocol (RTP) translator, or a network policy enforcement\n   server.  A possible\
    \ optimization to minimize the delay in the\n   providing of the caller with an\
    \ indication to speak is for the PTT\n   server to perform buffering of media\
    \ packets in order to provide an\n   early or \"Unconfirmed Indication\" back\
    \ to the caller and allow the\n   caller to start speaking before the called PoC\
    \ terminal has answered.\n   An event package and mechanisms for a SIP UA to indicate\
    \ its current\n   answer mode to a PTT Server in order to enable buffering are\
    \ defined\n   in [11].  In addition, particularly when multiple domains are\n\
    \   involved in the session, more than one PTT Server could be involved\n   in\
    \ the signaling path for the session.  Also, the PTT Server that\n   performs\
    \ the buffering might not be the PTT Server that has knowledge\n   of the current\
    \ answer mode of the SIP UA that is the final\n   destination for the SIP INVITE\
    \ request.  A mechanism is defined in\n   [12] that allows a terminal that acts\
    \ as a SIP UA (or as a PTT Server\n   that acts as a SIP UA) to indicate a preference\
    \ to the final\n   destination SIP User Agent Server (UAS) to answer in a particular\n\
    \   mode.  However, a mechanism is required for a PTT Server to relay the\n  \
    \ \"Unconfirmed Indication\" in a response back towards the originating\n   SIP\
    \ User Agent Client (UAC).\n"
- title: 5.  Overview
  contents:
  - "5.  Overview\n   The purpose of this extension is to support an optimization\
    \ that\n   makes it possible for the network to provide a faster push to talk\n\
    \   experience, through an intermediate SIP user agent (PTT Server)\n   providing\
    \ a SIP 200 (OK) response before the called UA does, and a\n   PTT Server buffering\
    \ the media generated by the calling UA for replay\n   to the called UA when it\
    \ answers.  Because of the half-duplex nature\n   of the call, where media bursts\
    \ are short typically in the order of\n   10-30 seconds, the additional end-to-end\
    \ latency can be tolerated,\n   and this considerably improves the user experience.\
    \  However, the PTT\n   Server only can do this when there is a high probability\
    \ that the\n   called SIP UA is in Automatic Answer mode.  It is likely that PTT\n\
    \   Servers near the called UA have up-to-date knowledge of the answering\n  \
    \ mode of the called UA, and due to the restricted bandwidth nature of\n   the\
    \ cellular network, they can pass upstream an indication of the\n   called SIP\
    \ UA's answering mode faster than the called UA can deliver\n   an automatically\
    \ generated SIP 200 (OK) response.\n   This document proposes a new SIP header\
    \ field, the P-Answer-State\n   header field to support an \"Unconfirmed Indication\"\
    .  The new SIP\n   header field can be optionally included in a response to a\
    \ SIP INVITE\n   request, or in a sipfrag of a response included in a SIP NOTIFY\n\
    \   request sent as a result of a SIP REFER request that requests a SIP\n   INVITE\
    \ request to be sent.  The header field is used to provide an\n   indication from\
    \ a PTT Server acting as a SIP proxy or back-to-back UA\n   that it has information\
    \ that hints that the terminating UA will\n   likely answer automatically.  This\
    \ provides an \"Unconfirmed\n   Indication\" back towards the inviting SIP UA\
    \ to transmit media prior\n   to receiving a final response from the final destination\
    \ of the SIP\n   INVITE request.  No Supported or Require headers are needed because\n\
    \   the sender of the P-Answer-State header field does not depend on the\n   receiver\
    \ to understand the extension.  If the extension is not\n   understood, the header\
    \ field is simply ignored by the recipient.  The\n   extension is described below.\n\
    \   Thus, when a PTT Server forwards a SIP INVITE request and knows that\n   the\
    \ called UA is likely to be in Automatic Answer mode, it also\n   generates a\
    \ SIP 183 provisional response with a P-Answer-State header\n   field with a parameter\
    \ of \"Unconfirmed\" to signal to upstream PTT\n   Servers that they can buffer\
    \ the caller's media.\n   A PTT Server that wishes to buffer the caller's media,\
    \ upon seeing\n   the provisional response with a P-Answer-State header field\
    \ with a\n   parameter of \"Unconfirmed\", absorbs it and generates a SIP 200\
    \ (OK)\n   response for the caller's SIP UA with an appropriate answer.\n   When\
    \ the called UA generates a SIP 200 (OK) response, the PTT Server\n   that generated\
    \ the provisional response with a P-Answer-State header\n   field with a parameter\
    \ \"Unconfirmed\" adds to the SIP 200 (OK)\n   response a P-Answer-State header\
    \ field with a parameter of\n   \"Confirmed\".  The SIP 200 (OK) response is absorbed\
    \ by the PTT Server\n   that is buffering the caller's media, as it has already\
    \ generated a\n   SIP 200 (OK) response.  The buffering PTT Server then starts\
    \ playing\n   out the buffered media.\n"
- title: 6.  The P-Answer-State Header
  contents:
  - "6.  The P-Answer-State Header\n   The purpose of the P-Answer-State header field\
    \ is to provide an\n   indication from a PTT Server acting as a SIP proxy or back-to-back\
    \ UA\n   that it has information that hints that the terminating UA identified\n\
    \   in the Request-URI of the request will likely answer automatically.\n   Thus,\
    \ it enables the PTT Server to provide an \"Unconfirmed\n   Indication\" back\
    \ towards the inviting SIP UA permitting it to\n   transmit media prior to receiving\
    \ a final response from the final\n   destination of the SIP INVITE request. \
    \ If a provisional response\n   contains the P-Answer-State header field with\
    \ the value \"Unconfirmed\"\n   and does not contain an answer, then a receiving\
    \ PTT Server can send\n   a SIP 200 (OK) response containing an answer and a P-Answer-State\n\
    \   header field with the value \"Unconfirmed\" if the PTT Server is\n   willing\
    \ to perform media buffering.  If the response containing the\n   P-Answer-State\
    \ header field with the value \"Unconfirmed\" also\n   contains an answer, the\
    \ PTT Server that included the P-Answer-State\n   header field and answer in the\
    \ response is also indicating that it is\n   willing to buffer the media until\
    \ a final \"Confirmed Indication\" is\n   received.\n   The P-Answer-State header\
    \ field can be included in a provisional or\n   final response to a SIP INVITE\
    \ request or in the sipfrag of a SIP\n   NOTIFY request sent as a result of a\
    \ SIP REFER request to send a SIP\n   INVITE request.  If the P-Answer-State header\
    \ field with value\n   \"Unconfirmed\" is included in a provisional response that\
    \ contains an\n   answer, the PTT Server is leaving the decision of where to do\n\
    \   buffering to other PTT Servers upstream and will forward upstream a\n   \"\
    Confirmed indication\" in a SIP 200 (OK) response when the final\n   response\
    \ is received from the destination UA.\n   NOTE It is not intended that multiple\
    \ PTT Servers perform buffering\n   serially.  If a PTT Server includes an answer\
    \ along with P-Answer-\n   State header field with the value \"Unconfirmed\" in\
    \ a provisional\n   response, then a receiving PTT Server can determine whether\
    \ it\n   buffers the media or forwards the media and allows the downstrean PTT\n\
    \   Server that sent the \"Unconfirmed Indication\" to buffer the media.\n   It\
    \ is intended that if a PTT Server buffers media, it does so until a\n   final\
    \ \"Confirmed Indication\" is received, and therefore serial\n   buffering by\
    \ multiple PTT Servers does not take place.\n   The P-Answer-State header is only\
    \ included in a provisional response\n   when the node that sends the response\
    \ has knowledge that there is a\n   PTT Server acting as a B2BUA that understands\
    \ this extension in the\n   signaling path between itself and the originating\
    \ UAC.  This PTT\n   Server between the sending node and the originating UAC will\
    \ only\n   pass the header field on in either a SIP 200 (OK) response or in the\n\
    \   sipfrag (as defined in [4]) of a SIP NOTIFY request (as defined in\n   [5])\
    \ sent as a result of a SIP REFER request (as defined in [6]).\n   Such a situation\
    \ only occurs with specific network topologies, which\n   is another reason why\
    \ use of this header field is not relevant to the\n   general Internet.  The originating\
    \ UAC will only receive the\n   P-Answer-state header field in a SIP 200 (OK)\
    \ response or in the\n   sipfrag of a SIP NOTIFY request.\n   Provisional responses\
    \ containing the P-Answer-State header field can\n   be sent reliably using the\
    \ mechanism defined in [13], but this is not\n   required.  This is a performance\
    \ optimization, and the impact of a\n   provisional response sent unreliably (failing\
    \ to arrive) is simply\n   that buffering does not take place.  However, if the\
    \ provisional\n   responses are sent reliably and the provisional response fails\
    \ to\n   arrive, the time taken for the provisional response sender to time\n\
    \   out on the receipt of a SIP PRACK request is likely to be such that,\n   by\
    \ the time the provisional response has been resent, the \"Confirmed\n   Response\"\
    \ could have already been received.  When provisional\n   responses that contain\
    \ an answer are sent reliably, the 200 (OK)\n   response for the SIP INVITE request\
    \ cannot be sent before the SIP\n   PRACK request is received.  Therefore, sending\
    \ provisional responses\n   reliably could potentially delay the sending of the\
    \ \"Confirmed\n   Response\".\n"
- title: 6.1.  Requirements
  contents:
  - "6.1.  Requirements\n   The OMA PoC service has initial setup performance requirements\
    \ that\n   can be met by a PTT Server acting as a B2BUA spooling media from the\n\
    \   inviting PoC subscriber until one or more invited PoC subscribers\n   have\
    \ accepted the session.  The specific requirements are:\n   REQ-1:  An intermediate\
    \ server MAY spool media from the inviting SIP\n      UA until one or more invited\
    \ PoC SIP UASs has accepted the\n      invitation.\n   REQ-2:  An intermediate\
    \ server that is capable of spooling media MAY\n      accept a SIP INVITE request\
    \ from an inviting SIP UAC even if no\n      invited SIP UAS has accepted the\
    \ SIP INVITE request if it has a\n      hint that the invited SIP UAS is likely\
    \ to accept the request\n      without requiring user intervention.\n   REQ-3:\
    \  An intermediate server or proxy that is incapable of spooling\n      media\
    \ or does not wish to, but has a hint that the invited SIP UAS\n      is likely\
    \ to automatically accept the session invitation, MUST be\n      able to indicate\
    \ back to another intermediate server that can\n      spool media that it has\
    \ some hint that the invited UAS is likely\n      to automatically accept the\
    \ session invitation.\n   REQ-4:  An intermediate server that is willing to spool\
    \ media from\n      the inviting SIP UAC until one or more invited SIP UASs have\n\
    \      accepted the SIP INVITE request SHOULD indicate that it is\n      spooling\
    \ media to the inviting SIP UAC.\n"
- title: 6.2.  Alternatives Considered
  contents:
  - "6.2.  Alternatives Considered\n   In order to meet REQ-3, a PTT Server needs\
    \ to receive an indication\n   back that the invited SIP UA is likely to accept\
    \ the SIP INVITE\n   request without requiring user intervention.  In this case,\
    \ the PTT\n   Server that has a hint that the invited SIP UAC is likely to accept\n\
    \   the request can include an answer state indication in the SIP 183\n   (Session\
    \ Progress) response or SIP 200 (OK) response.\n   A number of alternatives were\
    \ considered for the PTT Server to inform\n   another PTT Server or the inviting\
    \ SIP UAC of the invited PoC SIP\n   UAS's answer mode settings.\n   One proposal\
    \ was to create a unique reason-phrase in the SIP 183\n   response and SIP 200\
    \ (OK) response.  This was rejected because the\n   reason phrases are normally\
    \ intended for human readers and not meant\n   to be parsed by servers for special\
    \ syntactic and semantic meaning.\n   Another proposal was to use a Reason header\
    \ [14] in the SIP 183\n   response and SIP 200 (OK) response.  This was rejected\
    \ because this\n   would be inconsistent with the intended use of the Reason header\
    \ and\n   its usage is not defined for these response codes and would have\n \
    \  required creating and registering a new protocol identifier.\n   Another proposal\
    \ was to use a feature-tag in the returned Contact\n   header as defined in [15].\
    \  This was rejected because it was not a\n   different feature, but is an attribute\
    \ of the session and can be\n   applied to many different features.\n   Another\
    \ proposal was to use a new SDP attribute.  The choice of an\n   SDP parameter\
    \ was rejected because the answer state applies to the\n   session and not to\
    \ a media stream.\n   The P-Answer-State header was chosen to give additional\
    \ information\n   about the state of the SIP session progress and acceptance.\
    \  Even\n   though the UAC sees that its offer has been answered and accepted,\n\
    \   the header lets the UAC know whether the invited PoC subscriber or\n   just\
    \ an intermediary has accepted the SIP INVITE request.\n"
- title: 6.3.  Applicability Statement for the P-Answer-State Header
  contents:
  - "6.3.  Applicability Statement for the P-Answer-State Header\n   The P-Answer-State\
    \ header is applicable in the following\n   circumstances:\n   o In networks where\
    \ there are UAs that engage in half-duplex\n     communication where there is\
    \ not the possibility for the invited\n     user to verbally acknowledge the answering\
    \ of the session as is\n     normal in full-duplex communication;\n   o Where\
    \ the invited UA can automatically accept the session without\n     user intervention;\n\
    \   o The network also contains intermediate network SIP servers that are\n  \
    \   trusted;\n   o The intermediate network SIP servers have knowledge of the\
    \ current\n     answer mode setting of the terminating UAS; and,\n   o The intermediate\
    \ network SIP servers have knowledge of the media\n     types and codecs likely\
    \ to be accepted by the terminating UAS; and,\n   o The intermediate network SIP\
    \ servers can provide buffering of the\n     media in order to reduce the time\
    \ for the inviting user to send\n     media.\n   o The intermediate network SIP\
    \ servers assume knowledge of the\n     network topology and the existence of\
    \ similar intermediate network\n     SIP servers in the signaling path.\n   Such\
    \ configurations are generally not applicable to the Internet as a\n   whole where\
    \ such trust relationships do not exist.\n   In addition, security issues have\
    \ only been considered for networks\n   that are trusted and use hop-by-hop security\
    \ mechanisms with\n   transitive trust.  Security issues with usage of this mechanism\
    \ in\n   the general Internet have not been evaluated.\n"
- title: 6.4.  Usage of the P-Answer-State Header
  contents:
  - "6.4.  Usage of the P-Answer-State Header\n   A UAS, B2BUA, or proxy MAY include\
    \ a P-Answer-State header field in\n   any SIP 18x or 2xx response that does not\
    \ contain an offer, sent in\n   response to an offer contained in a SIP INVITE\
    \ request as specified\n   in [7].  Typically, the P-Answer-State header field\
    \ is included in\n   either a SIP 183 Session Progress or a SIP 200 (OK) response.\
    \  A UA\n   that receives a SIP REFER request to send a SIP INVITE request MAY\n\
    \   also include a P-Answer-State header field in the sipfrag of a\n   response\
    \ included in a SIP NOTIFY request it sends as a result of the\n   implicit subscription\
    \ created by the SIP REFER request.\n   When the P-Answer-State header field contains\
    \ the parameter\n   \"Unconfirmed\", the UAS or proxy is indicating that it has\
    \ information\n   that hints that the final destination UAS for the SIP INVITE\
    \ request\n   is likely to automatically accept the session, but that this is\n\
    \   unconfirmed and it is possible that the final destination UAS will\n   first\
    \ alert the user and require manual acceptance of the session or\n   not accept\
    \ the session request.  When the P-Answer-State header field\n   contains the\
    \ parameter \"Confirmed\", the UAS or proxy is indicating\n   that the destination\
    \ UAS has accepted the session and is ready to\n   receive media.  The parameter\
    \ value of \"Confirmed\" has the usual\n   semantics of a SIP 200 (OK) response\
    \ containing an answer and is\n   included for completeness.  A parameter value\
    \ of \"Confirmed\" is only\n   included in a SIP 200 (OK) response or in the sipfrag\
    \ of a 200 (OK)\n   contained in the body of a SIP NOTIFY request.\n   A received\
    \ SIP 18x response without a P-Answer-State header field\n   SHOULD NOT be treated\
    \ as an \"Unconfirmed Response\".  A SIP 18x\n   response containing a P-Answer-State\
    \ header field containing the\n   parameter \"Confirmed\" MUST NOT be treated\
    \ as a \"Confirmed Response\"\n   because this is an invalid condition.\n   A\
    \ SIP 200 (OK) response without a P-Answer-State Header field MUST be\n   treated\
    \ as a \"Confirmed Response\".\n"
- title: 6.4.1.  Procedures at the UA (Terminal)
  contents:
  - "6.4.1.  Procedures at the UA (Terminal)\n   A UAC (terminal) that receives an\
    \ \"Unconfirmed Response\" containing\n   an answer MAY send media as specified\
    \ in [7]; however, there is no\n   guarantee that the media will be received by\
    \ the final recipient.\n   How a UAC confirms whether or not the media was received\
    \ by the final\n   destination when it has received a SIP 2xx response containing\
    \ an\n   \"Unconfirmed Indication\" is application specific and outside of the\n\
    \   scope of this document.  If the application is a conference then the\n   mechanism\
    \ specified in [7] could be used to determine that the\n   invited user joined.\
    \  Alternatively, a SIP BYE request could be\n   received or the media could be\
    \ placed on hold if the final\n   destination UAS does not accept the session.\n\
    \   A UAC (terminal) that receives, in response to a SIP REFER request, a\n  \
    \ SIP NOTIFY request containing an \"Unconfirmed Response\" in a sipfrag\n   in\
    \ the body of the SIP NOTIFY request related to a dialog for which\n   there has\
    \ been a successful offer-answer exchange according to [5]\n   MAY send media.\
    \  However, there is no guarantee that the media will\n   be received by the final\
    \ recipient that was indicated in the Refer-To\n   header in the original SIP\
    \ REFER request.  The dialog could be\n   related either because the SIP REFER\
    \ request was sent on the same\n   dialog or because the SIP REFER request contained\
    \ a Target-Dialog\n   header, as defined in [16], that identified the dialog.\n\
    \   A UAC (terminal) that receives an \"Unconfirmed Response\" that does\n   not\
    \ contain an answer MAY buffer media until it receives another\n   \"Unconfirmed\
    \ Response\" containing an answer or a \"Confirmed\n   Response\".\n   There are\
    \ no P-Answer-State procedures for a terminal acting in the\n   UAS role.\n"
- title: 6.4.2.  Procedures at the UA (PTT Server)
  contents:
  - "6.4.2.  Procedures at the UA (PTT Server)\n   A PTT Server that receives a SIP\
    \ INVITE request at the UAS part of\n   its back-to-back UA MAY include, in any\
    \ SIP 18x or 2xx response that\n   does not contain an offer, a P-Answer-State\
    \ header field with the\n   parameter \"Unconfirmed\" in the response if it has\
    \ not yet received a\n   \"Confirmed Response\" from the final destination UA,\
    \ and it has\n   information that hints that the final destination UA for the\
    \ SIP\n   INVITE request is likely to automatically accept the session.\n   A\
    \ PTT Server that receives a SIP 18x response to a SIP INVITE request\n   containing\
    \ a P-Answer-State header field with the parameter\n   \"Unconfirmed\" at the\
    \ UAC part of its back-to-back UA MAY include the\n   P-Answer-State header field\
    \ with the parameter \"Unconfirmed\" in a SIP\n   2xx response that the UAS part\
    \ of its back-to-back UA sends as a\n   result of receiving that response.  Otherwise,\
    \ a PTT Server that\n   receives a SIP 18x or 2xx response to a SIP INVITE request\
    \ containing\n   a P-Answer-State header field at the UAC part of its back-to-back\
    \ UA\n   SHOULD include the P-Answer-State header field unmodified in the SIP\n\
    \   18x or 2xx response that the UAS part of its back-to-back UA sends as\n  \
    \ a result of receiving that response.  If the response sent by the UAS\n   part\
    \ of its back-to-back UA is a SIP 18x response, then the\n   P-Answer-State header\
    \ field included in the response MUST contain a\n   parameter of \"Unconfirmed\"\
    .\n   The UAS part of the back-to-back UA of a PTT Server MAY include an\n   answer\
    \ in the \"Unconfirmed Response\" it sends even if the\n   \"Unconfirmed Response\"\
    \ received by the UAC part of the back-to-back\n   UA did not contain an answer.\n\
    \   If a PTT Server receives a \"Confirmed Response\" at the UAC part of\n   its\
    \ back-to-back UA, then the UAS part of its back-to-back UA MAY\n   include in\
    \ the forwarded response a P-Answer-State header field with\n   the parameter\
    \ \"Confirmed\".  If the UAS part of its back-to-back UA\n   previously sent an\
    \ \"Unconfirmed Response\" as part of this dialog, the\n   UAS part of its back-to-back\
    \ UA SHOULD include in the forwarded\n   \"Confirmed Response\" a P-Answer-State\
    \ header field with the parameter\n   \"Confirmed\".\n   If the UAS part of the\
    \ back-to-back UA of a PTT Server includes an\n   answer in a response along with\
    \ a P-Answer-State header field with\n   the parameter \"Unconfirmed\", then the\
    \ UAS part of its back-to-back UA\n   needs to be ready to receive media as specified\
    \ in [7].  Also, it MAY\n   buffer any media it receives until it receives a \"\
    Confirmed Response\"\n   from the final destination UA or until its buffer is\
    \ full.\n   A UAS part of the back-to-back UA of a PTT Server that receives a\
    \ SIP\n   REFER request to send a SIP INVITE request to another UA, as\n   specified\
    \ in [6], MAY generate a sipfrag of a SIP 200 (OK) response\n   containing a P-Answer-State\
    \ header field with the parameter\n   \"Unconfirmed\" prior to the UAC part of\
    \ its back-to-back UA receiving\n   a response to the SIP INVITE request, if it\
    \ has information that\n   hints that the final destination UA for the SIP INVITE\
    \ request is\n   likely to automatically accept the session.\n   If the UAC part\
    \ of a back-to-back UA of a PTT Server sent a SIP\n   INVITE request as a result\
    \ of receiving a SIP REFER Request, receives\n   a SIP 18x or 2xx response containing\
    \ a P-Answer-State header field at\n   the UAC part of its back-to-back UA, then\
    \ the UAS part of its back-\n   to-back UA SHOULD include the P-Answer-State header\
    \ field in the\n   sipfrag of the response contained in a SIP NOTIFY request.\
    \  The\n   P-Answer-State header field that is contained in the sipfrag,\n   contains\
    \ the parameters from the P-Answer-State from the original\n   response unmodified.\
    \  This SIP NOTIFY request is the SIP NOTIFY\n   request that the UAS part of\
    \ the back-to-back UA of the PTT Server\n   sends in response to the original\
    \ SIP REFER request based upon\n   receiving the SIP 18x or 2xx response.  If\
    \ the sipfrag of the\n   response sent in the SIP NOTIFY request is a SIP 18x\
    \ response, then\n   the P-Answer-State header field included in the sipfrag of\
    \ the\n   response MUST contain a parameter of \"Unconfirmed\".  If the UAC part\n\
    \   of its back-to-back UA receives a \"Confirmed Response\" that does not\n \
    \  contain a P-Answer-State header field, then the UAS part of its\n   back-to-back\
    \ UA MAY include a P-Answer-State header field with the\n   parameter \"Confirmed\"\
    \ in the sipfrag of the response contained in a\n   SIP NOTIFY request sent in\
    \ response to the SIP REFER request.\n   In the case where a PTT Server that's\
    \ UAS part of its back-to-back UA\n   previously sent a SIP NOTIFY request as\
    \ a result of the SIP REFER\n   request:\n   1) the SIP NOTIFY request contains\
    \ a P-Answer-State header field with\n      the parameter \"Unconfirmed\" in the\
    \ sipfrag of a response, and\n   2) the PTT Server subsequently receives at the\
    \ UAC part of its back-\n      to-back UA a \"Confirmed Response\" to the SIP\
    \ INVITE request.\n   Such a PTT Server SHOULD include a P-Answer-State header\
    \ field with\n   the parameter \"Confirmed\" in the sipfrag of the response included\
    \ in\n   the subsequent SIP NOTIFY request that the UAS part of its back-to-\n\
    \   back UA sends as a result of receiving the \"Confirmed Response\".\n   If\
    \ the SIP REFER request is related to an existing dialog established\n   by a\
    \ SIP INVITE request for which there has been a successful offer-\n   answer exchange,\
    \ the UAS part of its back-to-back UA MUST be ready to\n   receive media as specified\
    \ in [7].  Also, it MAY buffer any media it\n   receives until the UAC part of\
    \ its back-to-back UA receives a\n   \"Confirmed Response\" from the final destination\
    \ UA or until its\n   buffer is full.  The dialog could be related either because\
    \ the SIP\n   REFER request was sent on the same dialog or because the SIP REFER\n\
    \   request contained a Target-Dialog header, as defined in [16], that\n   identified\
    \ the dialog.\n   A PTT Server that buffers media SHOULD be prepared for the\n\
    \   possibility of not receiving a \"Confirmed Response\" and SHOULD\n   release\
    \ the session if a \"Confirmed Response\" is not received before\n   the buffer\
    \ overflows.\n"
- title: 6.4.3.  Procedures at the Proxy Server
  contents:
  - "6.4.3.  Procedures at the Proxy Server\n   SIP proxy servers do not need to understand\
    \ the semantics of the\n   P-Answer-State header field.  As part of the regular\
    \ SIP rules for\n   unknown headers, a proxy will forward unknown headers.\n \
    \  A PTT Server that acts as a proxy MAY include a P-Answer-State header\n   field\
    \ with the parameter \"Unconfirmed\" in a SIP 18x response that it\n   originates\
    \ (in a manner compliant with [2]) if it has information\n   that hints that the\
    \ final destination UA for the SIP INVITE request\n   is likely to automatically\
    \ accept the session.\n   A PTT Server that acts as a proxy MAY add a P-Answer-State\
    \ header\n   field with the parameter \"Confirmed\" to a \"Confirmed Response\"\
    .\n"
- title: 7.  Formal Syntax
  contents:
  - "7.  Formal Syntax\n   The mechanisms specified in this document is described\
    \ in both prose\n   and an augmented Backus-Naur Form (BNF) defined in [8].  Further,\n\
    \   several BNF definitions are inherited from SIP and are not repeated\n   here.\
    \  Implementers need to be familiar with the notation and\n   contents of SIP\
    \ [2] and [8] to understand this document.\n"
- title: 7.1.  P-Answer-State Header Syntax
  contents:
  - "7.1.  P-Answer-State Header Syntax\n   The syntax of the P-Answer-State header\
    \ is described as follows:\n      P-Answer-State = \"P-Answer-State\" HCOLON answer-type\n\
    \                       *(SEMI generic-param)\n      answer-type = \"Confirmed\"\
    \ / \"Unconfirmed\" / token\n"
- title: 7.2.  Table of the New Header
  contents:
  - "7.2.  Table of the New Header\n   Table 1 provides the additional table entries\
    \ for the P-Answer-State\n   header needed to extend Table 2 in SIP [2], section\
    \ 7.1 of the SIP-\n   specific event notification [5], Tables 1 and 2 in the SIP\
    \ INFO\n   method [17], Tables 1 and 2 in Reliability of provisional responses\n\
    \   in SIP [13], Tables 1 and 2 in the SIP UPDATE method [18], Tables 1\n   and\
    \ 2 in the SIP extension for Instant Messaging [19], Table 1 in the\n   SIP REFER\
    \ method [6], and Table 2 in the SIP PUBLISH method [20]:\n      Header field\
    \          where  proxy  ACK BYE CAN INV OPT REG SUB\n      _______________________________________________________________\n\
    \      P-Answer-State      18x,2xx    ar    -   -   -   o   -   -   -\n      Header\
    \ field                        NOT PRA INF UPD MSG REF PUB\n      _______________________________________________________________\n\
    \      P-Answer-State          R            -   -   -   -   -   -   -\n      Table\
    \ 1: Additional Table Entries for the P-Answer-State Header\n"
- title: 8.  Example Usage Session Flows
  contents:
  - "8.  Example Usage Session Flows\n   For simplicity, some details such as intermediate\
    \ proxies and SIP 100\n   Trying responses are not shown in the following example\
    \ flows.\n"
- title: 8.1.  Pre-Arranged Group Call Using On-Demand Session
  contents:
  - "8.1.  Pre-Arranged Group Call Using On-Demand Session\n   The following flow\
    \ shows Alice making a pre-arranged group call using\n   a Conference URI which\
    \ has Bob on the member list.  The session\n   initiation uses the on-demand session\
    \ establishment mechanism where a\n   SIP INVITE request containing an SDP offer\
    \ is sent by Alice's\n   terminal when Alice pushes her push to talk button.\n\
    \   In this example, Alice's PTT Server acts a Call Stateful SIP Proxy\n   and\
    \ Bob's PTT Server (which is aware that the current Answer Mode\n   setting of\
    \ Bob's terminal is set to Auto Answer) acts as a B2BUA.\n   For simplicity, the\
    \ invitations by the Conference Focus to the other\n   members of the group are\
    \ not shown in this example.\n      Alice's        Alice's       Conference  \
    \   Bob's          Bob's\n      Terminal      PTT Server       Focus      PTT\
    \ Server    Terminal\n         |              |              |             | \
    \             |\n         |--(1)INVITE-->|              |             |      \
    \        |\n         |              |--(2)INVITE-->|             |           \
    \   |\n         |              |              |--(3)INVITE->|              |\n\
    \         |              |              |             |--(4)INVITE-->|\n     \
    \    |              |              |<--(5)183----|              |\n         |\
    \              |<---(6)200----|             |              |\n         |<---(7)200----|\
    \              |             |              |\n         |----(8)ACK--->|     \
    \         |             |              |\n         |              |---(9)ACK---->|\
    \             |              |\n         |              |              |     \
    \        |              |\n         |=====Early Media Session====>|          \
    \   |              |\n         |              |            MEDIA           | \
    \             |\n         |              |           BUFFERING        |      \
    \        |\n         |              |              |             |<---(10)200---|\n\
    \         |              |              |             |---(11)ACK--->|\n     \
    \    |              |              |<--(12)200---|              |\n         |\
    \              |              |--(13)ACK--->|              |\n         |     \
    \         |              |             |              |\n         |          \
    \    |              |========Media Session======>|\n         |              |\
    \              |             |              |\n         |              |     \
    \         |             |              |\n          Figure 1: Pre-Arranged Group\
    \ Call Using On-Demand Session\n   1 INVITE Alice -> Alice's PTT Server\n   INVITE\
    \ sip:FriendsOfAlice@example.org SIP/2.0\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n\
    \   Max-Forwards: 70\n   To: \"Alice's Friends\" <sip:FriendsOfAlice@example.org>\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314159 INVITE\n   Contact: <sip:alice@pc33.example.org>\n   Content-Type:\
    \ application/sdp\n   Content-Length: 142\n   (SDP not shown)\n   2 INVITE Alice's\
    \ PTT Server -> Conference Focus\n   INVITE sip:FriendsOfAlice@example.org SIP/2.0\n\
    \   Via: SIP/2.0/UDP\n        AlicesPTTServer.example.org;branch=z9hG4bK77ef4c2312983.1\n\
    \   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n   Record-Route:\
    \ <sip:AlicesPTTServer.example.org>\n   Max-Forwards: 69\n   To: \"Alice's Friends\"\
    \ <sip:FriendsOfAlice@example.org>\n   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710\n   CSeq: 314159 INVITE\n   Contact: <sip:alice@pc33.example.org>\n\
    \   Content-Type: application/sdp\n   Content-Length: 142\n   (SDP not shown)\n\
    \   The Conference Focus explodes the Conference URI and Invites Bob\n   3 INVITE\
    \ Conference Focus -> Bob's PTT Server\n   INVITE sip:bob@example.com SIP/2.0\n\
    \   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>\n   From: \"Alice's\
    \ Friends\"\n   <sip:FriendsOfAlice@example.org>;tag=2178309898\n   Call-ID: e60a4c784b6716\n\
    \   CSeq: 301166605 INVITE\n   Contact: <sip:AlicesConferenceFocus.example.org>\n\
    \   Content-Type: application/sdp\n   Content-Length: 142\n   (SDP not shown)\n\
    \   4 INVITE Bob's PTT Server -> Bob\n   INVITE sip:bob@example.com SIP/2.0\n\
    \   Via: SIP/2.0/UDP\n        BobsPTTServer.example.com;branch=z9hG4bKa27bc93\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>\n   From: \"Alice's\
    \ Friends\"\n   <sip:FriendsOfAlice@example.org>;tag=781299330\n   Call-ID: 6eb4c66a847710\n\
    \   CSeq: 478209 INVITE\n   Contact: <sip:BobsPTTServer.example.com>\n   Content-Type:\
    \ application/sdp\n   Content-Length: 142\n   (SDP not shown)\n   5 183 (Session\
    \ Progress) Bob's PTT Server -> Conference Focus\n   SIP/2.0 183 Session Progress\n\
    \   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n\
    \   To: \"Bob\" <sip:bob@example.com>;tag=a6c85cf\n   From: \"Alice's Friends\"\
    \n   <sip:FriendsOfAlice@example.org>;tag=2178309898\n   Call-ID: e60a4c784b6716\n\
    \   Contact: <sip:BobsPTTServer.example.com>\n   CSeq: 301166605 INVITE\n   P-Answer-State:\
    \ Unconfirmed\n   Content-Length: 0\n   6 200 (OK) Conference Focus -> Alice's\
    \ PTT Server\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n        AlicesPTTServer.example.org;branch=z9hG4bK77ef4c2312983.1\n\
    \   Via: SIP/2.0/UDP\n        pc33.example.org;branch=z9hG4bKnashds8\n   Record-Route:\
    \ <sip:AlicesPTTServer.example.org>\n   To: \"Alice's Friends\"\n        <sip:FriendsOfAlice@example.org>;tag=c70ef99\n\
    \   From: \"Alice\"\n        <sip:alice@example.org>;tag=1928301774\n   Call-ID:\
    \ a84b4c76e66710\n   CSeq: 314159 INVITE\n   Contact: <sip:AlicesConferenceFocus.example.org>\n\
    \   P-Answer-State: Unconfirmed\n   Content-Type: application/sdp\n   Content-Length:\
    \ 131\n   (SDP not shown)\n   7 200 (OK) Alice's PTT Server -> Alice\n   SIP/2.0\
    \ 200 OK\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n   Record-Route:\
    \ <sip:AlicesPTTServer.example.org>\n   To: \"Alice's Friends\" <sip:FriendsOfAlice@example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314159 INVITE\n   Contact: <sip:AlicesConferenceFocus.example.org>\n\
    \   P-Answer-State: Unconfirmed\n   Content-Type: application/sdp\n   Content-Length:\
    \ 131\n   (SDP not shown)\n   8 ACK Alice -> Alice's PTT Server\n   ACK sip:AlicesConferenceFocus.example.org\
    \ SIP/2.0\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds9\n   Route:\
    \ <sip:AlicesPTTServer.example.org>\n   Max-Forwards: 70\n   To: \"Alice's Friends\"\
    \ <sip:FriendsOfAlice@example.org>;tag=c70ef99\n   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n\
    \   Call-ID: a84b4c76e66710\n   CSeq: 314159 ACK\n   Content-Length: 0\n   9 ACK\
    \ Alice's PTT Server -> Conference Focus\n   ACK sip:AlicesConferenceFocus.example.org\
    \ SIP/2.0\n   Via: SIP/2.0/UDP\n        AlicesPTTServer.example.org;branch=z9hG4bK77ef4c2312983.1\n\
    \   Via: SIP/2.0/UDP\n        pc33.example.org;branch=z9hG4bKnashds9\n   Max-Forwards:\
    \ 69\n   To: \"Alice's Friends\" <sip:FriendsOfAlice@example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314159 ACK\n   Content-Length: 0\n   The early half-duplex media session\
    \ between Alice and the Conference\n   Focus is now established, and the Conference\
    \ Focus buffers the media\n   it receives from Alice.\n   10 200 (OK) Bob -> Bob's\
    \ PTT Server\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n        BobsPTTServer.example.com;branch=z9hG4bKa27bc93\n\
    \   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n   From: \"Alice's Friends\"\
    \n        <sip:FriendsOfAlice@example.org>;tag=781299330\n   Call-ID: 6eb4c66a847710\n\
    \   CSeq: 478209 INVITE\n   Contact: <sip:bob@192.0.2.4>\n   Content-Type: application/sdp\n\
    \   Content-Length: 131\n   (SDP not shown)\n   11 ACK Bob's PTT Server -> Bob\n\
    \   ACK sip:bob@192.0.2.4 SIP/2.0\n   Via: SIP/2.0/UDP BobsPTTServer.example.com;branch=z9hG4bKa27bc93\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n   From:\
    \ \"Alice's Friends\"\n        <sip:FriendsOfAlice@example.org>;tag=781299330\n\
    \   Call-ID: 6eb4c66a847710\n   CSeq: 478209 ACK\n   Content-Length: 0\n   12\
    \ 200 (OK) Bob's PTT Server -> Conference Focus\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n\
    \        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n   To: \"Bob\"\
    \ <sip:bob@example.com>;tag=a6670811\n   From: \"Alice's Friends\"\n        <sip:FriendsOfAlice@example.org>;tag=2178309898\n\
    \   Call-ID: e60a4c784b6716\n   Contact: <sip:BobsPTTServer.example.com>\n   CSeq:\
    \ 301166605 INVITE\n   P-Answer-State: Confirmed\n   Content-Type: application/sdp\n\
    \   Content-Length: 131\n   (SDP not shown)\n   13 ACK Conference Focus -> Bob's\
    \ PTT Server\n   ACK sip:BobsPTTServer.example.com SIP/2.0\n   Via: SIP/2.0/UDP\n\
    \        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n   Max-Forwards:\
    \ 70\n   To: \"Bob\"\n        <sip:bob@example.com>;tag=a6670811\n   From: \"\
    Alice's Friends\"\n        <sip:FriendsOfAlice@example.org>;tag=2178309898\n \
    \  Call-ID: e60a4c784b6716\n   CSeq: 301166605 ACK\n   Content-Length: 0\n   The\
    \ media session between Alice and Bob is now established and the\n   Conference\
    \ Focus forwards the buffered media to Bob.\n"
- title: 8.2.  1-1 Call Using Pre-Established Session
  contents:
  - "8.2.  1-1 Call Using Pre-Established Session\n   The following flow shows Alice\
    \ making a 1-1 Call to Bob using a pre-\n   established session.  A pre-established\
    \ session is where a dialog is\n   established with Alice's PTT Server using a\
    \ SIP INVITE SDP offer-\n   answer exchange to pre-negotiate the codecs and other\
    \ media\n   parameters to be used for media sessions ahead of Alice initiating\
    \ a\n   communication.  When Alice initiates a communication to Bob, a SIP\n \
    \  REFER request is used to request Alice's PTT Server to send a SIP\n   INVITE\
    \ request to Bob.  In this example, Bob's terminal does not use\n   the pre-established\
    \ session mechanism.\n   In this example, Alice's PTT Server acts as a B2BUA and\
    \ also performs\n   the Conference Focus function.  Bob's PTT Server (which is\
    \ aware that\n   the current Answer Mode setting of Bob's terminal is set to Auto\n\
    \   Answer) acts as a B2BUA.\n      Alice's                Alice's           \
    \    Bob's          Bob's\n      Terminal             PTT Server /          PTT\
    \ Server     Terminal\n                        Conference Focus\n         |  \
    \                     |                  |                |\n         |-----(1)INVITE--\
    \ ----->|                  |                |\n         |<-----(2)200-----------|\
    \                  |                |\n         |-------(3)ACK--------->|    \
    \              |                |\n         |                       |        \
    \          |                |\n         |                       |            \
    \      |                |\n         |                       |                \
    \  |                |\n         |----(4)REFER---------->|                  | \
    \               |\n         |<-----(5)202-----------|                  |     \
    \           |\n         |                       |----(6)INVITE---->|         \
    \       |\n         |                       |                  |--(7)INVITE---->|\n\
    \         |                       |                  |                |\n    \
    \     |                       |<----(8)183-------|                |\n        \
    \ |<---(9)NOTIFY----------|                  |                |\n         |-----(10)200---------->|\
    \                  |                |\n         |                       |    \
    \              |                |\n         |=Early Media Session==>|        \
    \          |                |\n         |                     MEDIA          \
    \      |                |\n         |                   BUFFERING            \
    \  |                |\n         |                       |                  |<---(11)200-----|\n\
    \         |                       |                  |---(12)ACK----->|\n    \
    \     |                       |<----(13)200------|                |\n        \
    \ |                       |-----(14)ACK----->|                |\n         |  \
    \                     |===========Media Session==========>|\n         |      \
    \                 |                  |                |\n         |<---(15)NOTIFY---------|\
    \                  |                |\n         |-----(16)200---------->|    \
    \              |                |\n         |                       |        \
    \          |                |\n               Figure 2: 1-1 Call Using Pre-Established\
    \ Session\n   1 INVITE Alice -> Alice's PTT Server\n   INVITE sip:AlicesConferenceFactoryURI.example.org\
    \ SIP/2.0 Via:\n   SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8 Max-Forwards:\
    \ 70\n   To: <sip:AlicesConferenceFactoryURI.example.org> From: \"Alice\"\n  \
    \ <sip:alice@example.org>;tag=1928301774 Call-ID: a84b4c76e66710 CSeq:\n   314159\
    \ INVITE Contact: <sip:alice@pc33.example.org> Content-Type:\n   application/sdp\
    \ Content-Length: 142\n   (SDP not shown)\n   2 200 (OK) Alice's PTT Server ->\
    \ Alice\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n\
    \   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n   From: \"\
    Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n \
    \  CSeq: 314159 INVITE\n   Contact: <sip:AlicesPre-establishedSession@\n   AlicesPTTServer.example.org>\n\
    \   Content-Type: application/sdp\n   Content-Length: 131\n   (SDP not shown)\n\
    \   3 ACK Alice -> Alice's PTT Server\n   ACK sip:AlicesPre-establishedSession@AlicesPTTServer.example.org\n\
    \        SIP/2.0\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds9\n\
    \   Max-Forwards: 70\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314159 ACK\n   Content-Length: 0\n   Alice's terminal has established\
    \ a Pre-established Session with\n   Alice's PTT Server.  All the media parameters\
    \ are pre-negotiated for\n   use at communication time.\n   Alice initiates a\
    \ communication to Bob.\n   4 REFER Alice -> Alice's PTT Server\n   REFER sip:AlicesPre-establishedSession@AlicesPTTServer.example.org\n\
    \        SIP/2.0\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n\
    \   Max-Forwards: 70\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314160 REFER\n   Refer-To: \"Bob\" <sip:bob@example.com>\n   Contact:\
    \ <sip:alice@pc33.example.org>\n   5 202 (ACCEPTED) Alice's PTT Server -> Alice\n\
    \   SIP/2.0 202 ACCEPTED\n   Via: SIP/2.0/UDP pc33.example.org;branch=z9hG4bKnashds8\n\
    \   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n   From: \"\
    Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n \
    \  CSeq: 314160 REFER\n   Contact: <sip:AlicesPre-establishedSession@\n   AlicesPTTServer.example.org>\n\
    \   6 INVITE Conference Focus -> Bob's PTT Server\n   INVITE sip:bob@example.com\
    \ SIP/2.0\n   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bk4721d8\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>\n   From: \"Alice\"\
    \ <sip:Alice@example.org>;tag=2178309898\n   Referred-By: <sip:Alice@example.org>\n\
    \   Call-ID: e60a4c784b6716\n   CSeq: 301166605 INVITE\n   Contact: <sip:AlicesConferenceFocus.example.org>\n\
    \   Content-Type: application/sdp\n   Content-Length: 142\n   (SDP not shown)\n\
    \   7 INVITE Bob's PTT Server -> Bob\n   INVITE sip:bob@example.com SIP/2.0\n\
    \   Via: SIP/2.0/UDP\n        BobsPTTServer.example.com;branch=z9hG4bKa27bc93\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>\n   From: \"Alice\"\
    \ <sip:Alice@example.org>;tag=781299330\n   Referred-By: <sip:Alice@example.org>\n\
    \   Call-ID: 6eb4c66a847710\n   CSeq: 478209 INVITE\n   Contact: <sip:BobsPTTServer.example.com>\n\
    \   Content-Type: application/sdp\n   Content-Length: 142\n   (SDP not shown)\n\
    \   8 183 (Session Progress) Bob's PTT Server -> Conference Focus\n   SIP/2.0\
    \ 183 Session Progress\n   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n\
    \   To: \"Bob\" <sip:bob@example.com>;tag=a6c85cf\n   From: \"Alice\" <sip:Alice@example.org>;tag=2178309898\n\
    \   Call-ID: e60a4c784b6716\n   Contact: <sip:BobsPTTServer.example.com>\n   CSeq:\
    \ 301166605 INVITE\n   P-Answer-State: Unconfirmed\n   Content-Length: 0\n   9\
    \ NOTIFY Alice's PTT Server -> Alice\n   NOTIFY sip:alice@pc33.example.org SIP/2.0\n\
    \   Via: SIP/2.0/UDP\n        AlicesPre-establishedSession@AlicesPTTServer.example.org;\n\
    \        branch=z9hG4bKnashds8\n   Max-Forwards: 70\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314161 NOTIFY\n   Contact:\n        <sip:AlicesPre-establishedSession@AlicesPTTServer.example.org>\n\
    \   Event: refer\n   Subscription-State: Active;Expires=60\n   Content-Type: message/sipfrag;version=2.0\n\
    \   Content-Length: 99\n   SIP/2.0 183 Session Progress\n   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n\
    \   P-Answer-State: Unconfirmed\n   10 200 (OK) Alice -> Alice's PTT Server\n\
    \   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n        AlicesPre-establishedSession@AlicesPTTServer.example.org;\n\
    \        branch=z9hG4bKnashds8\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314161 NOTIFY\n   The early half-duplex media session between Alice\
    \ and the Conference\n   Focus is now established and the Conference Focus buffers\
    \ the media\n   it receives from Alice.\n   11 200 (OK) Bob -> Bob's PTT Server\n\
    \   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n        BobsPTTServer.example.com;branch=z9hG4bK927bc93\n\
    \   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n   From: \"Alice's Friends\"\
    \n        <sip:FriendsOfAlice@example.org>;tag=781299330\n   Call-ID: 6eb4c66a847710\n\
    \   CSeq: 478209 INVITE\n   Contact: <sip:bob@192.0.2.4>\n   Content-Type: application/sdp\n\
    \   Content-Length: 131\n   (SDP not shown)\n   12 ACK Bob's PTT Server -> Bob\n\
    \   ACK sip:bob@192.0.2.4 SIP/2.0\n   Via: SIP/2.0/UDP BobsPTTServer.example.com;branch=z9hG4bK927bc93\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n   From:\
    \ \"Alice\" <sip:Alice@example.org>;tag=781299330\n   Call-ID: 6eb4c66a847710\n\
    \   CSeq: 478209 ACK\n   Content-Length: 0\n   F13 200 (OK) Bob's PTT Server ->\
    \ Conference Focus\n   SIP/2.0 200 OK\n   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n\
    \   To: \"Bob\" <sip:bob@example.com>;tag=a6670811\n   From: \"Alice's Friends\"\
    \n        <sip:FriendsOfAlice@example.org>;tag=2178309898\n   Call-ID: e60a4c784b6716\n\
    \   Contact: <sip:BobsPTTServer.example.com>\n   CSeq: 301166605 INVITE\n   P-Answer-State:\
    \ Confirmed\n   Content-Type: application/sdp\n   Content-Length: 131\n   (SDP\
    \ not shown)\n   14 ACK Conference Focus -> Bob's PTT Server\n   ACK sip:BobsPTTServer.example.com\
    \ SIP/2.0\n   Via: SIP/2.0/UDP\n        AlicesConferenceFocus.example.org;branch=z9hG4bK4721d8\n\
    \   Max-Forwards: 70\n   To: \"Bob\" <sip:bob@example.com>;tag=a6670811\n   From:\
    \ \"Alice\" <sip:Alice@example.org>;tag=1928301774\n   Call-ID: e60a4c784b6716\n\
    \   CSeq: 301166605 ACK\n   Content-Length: 0\n   The media session between Alice\
    \ and Bob is now established and the\n   Conference Focus forwards the buffered\
    \ media to Bob.\n   15 NOTIFY Alice's PTT Server -> Alice\n   NOTIFY sip:alice@pc33.example.org\
    \ SIP/2.0\n   Via: SIP/2.0/UDP\n        AlicesPre-establishedSession@AlicesPTTServer.example.org;\n\
    \        branch=z9hG4bKnashds8\n   Max-Forwards: 70\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314162 NOTIFY\n   Contact: <sip:AlicesPre-establishedSession@\n   AlicesPTTServer.example.org>\n\
    \   Event: refer\n   Subscription-State: Active;Expires=60\n   Content-Type: message/sipfrag;version=2.0\n\
    \   Content-Length: 83\n   SIP/2.0 200 OK\n   To: \"Bob\" <sip:bob@example.com>;tag=d28119a\n\
    \   P-Answer-State: Confirmed\n   16 200 (OK) Alice -> Alice's PTTServer\n   SIP/2.0\
    \ 200 OK\n   Via: SIP/2.0/UDP\n        AlicesPre-establishedSession@AlicesPTTServer.example.org;\n\
    \        branch=z9hG4bKnashds8\n   To: <sip:AlicesConferenceFactoryURI.example.org>;tag=c70ef99\n\
    \   From: \"Alice\" <sip:alice@example.org>;tag=1928301774\n   Call-ID: a84b4c76e66710\n\
    \   CSeq: 314162 NOTIFY\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The information returned in the P-Answer-State\
    \ header is not viewed\n   as particularly sensitive.  Rather, it is informational\
    \ in nature,\n   providing an indication to the UAC that delivery of any media\
    \ sent as\n   a result of an answer in this response is not guaranteed.  An\n\
    \   eavesdropper cannot gain any useful information by obtaining the\n   contents\
    \ of this header.\n   End-to-end protection is not appropriate because the P-Answer-State\n\
    \   header is used and added by proxies and intermediate UAs.  As a\n   result,\
    \ a \"malicious\" proxy between the UAs or attackers on the\n   signaling path\
    \ could add or remove the header or modify the contents\n   of the header value.\
    \  This attack either denies the caller the\n   knowledge that the callee has\
    \ yet to be contacted or falsely\n   indicates that the callee has yet to be contacted\
    \ when they have\n   already answered.  The attack that falsely indicates that\
    \ the callee\n   has yet to be contacted when they have already answered attack\
    \ could\n   result in the caller deciding not to transmit media because they do\n\
    \   not wish to have their media stored by an intermediary even though in\n  \
    \ reality the callee has answered.  The attack that denies the callee\n   the\
    \ additional knowledge that the callee has yet to be contacted does\n   not appear\
    \ to be a significant concern since this is the same as the\n   situation when\
    \ a B2BUA sends a 200 (OK) before the callee has\n   answered without the use\
    \ of this extension.\n   It is therefore necessary to protect the messages between\
    \ proxies and\n   implementation SHOULD use a transport that provides integrity\
    \ and\n   confidentially between the signaling hops.  The Transport Layer\n  \
    \ Security (TLS) [9] based signaling in SIP can be used to provide this\n   protection.\n\
    \   Security issues have only been considered for networks that are\n   trusted\
    \ and use hop-by-hop security mechanisms with transitive trust.\n   Security issues\
    \ with usage of this mechanism in the general Internet\n   have not been evaluated.\n"
- title: 10.  IANA Considerations
  contents:
  - '10.  IANA Considerations

    '
- title: 10.1.  Registration of Header Fields
  contents:
  - "10.1.  Registration of Header Fields\n   This document defines a private SIP\
    \ extension header field (beginning\n   with the prefix \"P-\" ) based on the\
    \ registration procedures defined\n   in RFC 3427 [21].\n   The following row\
    \ has been added to the \"Header Fields\" section of\n   the SIP parameter registry:\n\
    \               +----------------+--------------+-----------+\n              \
    \ | Header Name    | Compact Form | Reference |\n               +----------------+--------------+-----------+\n\
    \               | P-Answer-State |              | [RFC4964] |\n              \
    \ +----------------+--------------+-----------+\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The authors would like to thank Jon Peterson, Cullen\
    \ Jennings, Jeroen\n   van Bemmel, Paul Kyzivat, Dale Worley, Dean Willis, Rohan\
    \ Mahay,\n   Christian Schmidt, Mike Hammer, and Miguel Garcia-Martin for their\n\
    \   comments that contributed to the progression of this work.  The\n   authors\
    \ would also like to thank the OMA POC Working Group members\n   for their support\
    \ of this document and, in particular, Tom Hiller for\n   presenting the concept\
    \ of the P-Answer-State header to SIPPING at\n   IETF 62.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n     \
    \    Peterson, J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n        \
    \ Session Initiation Protocol\", RFC 3261, June 2002.\n   [3]   OMA, \"Push to\
    \ talk over Cellular - Architecture\",\n         OMA-AD-PoC-V1_0_1-20061128-A,\
    \ November 2006.\n   [4]   Sparks, R., \"Internet Media Type message/sipfrag\"\
    , RFC 3420,\n         November 2002.\n   [5]   Roach, A., \"Session Initiation\
    \ Protocol (SIP)-Specific Event\n         Notification\", RFC 3265, June 2002.\n\
    \   [6]   Sparks, R., \"The Session Initiation Protocol (SIP) Refer\n        \
    \ Method\", RFC 3515, April 2003.\n   [7]   Rosenberg, J. and H. Schulzrinne,\
    \ \"An Offer/Answer Model with\n         Session Description Protocol (SDP)\"\
    , RFC 3264, June 2002.\n   [8]   Crocker, D., Ed., and P. Overell, \"Augmented\
    \ BNF for Syntax\n         Specifications: ABNF\", RFC 4234, October 2005.\n \
    \  [9]   Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS)\n  \
    \       Protocol Version 1.1\", RFC 4346, April 2006.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [10]  Rosenberg, J., \"A Framework for Conferencing\
    \ with the Session\n         Initiation Protocol (SIP)\", RFC 4353, February 2006.\n\
    \   [11]  Garcia-Martin, M., \"A Session Initiation Protocol (SIP) Event\n   \
    \      Package and Data Format for Various Settings in Support for the\n     \
    \    Push-to-Talk over Cellular (PoC) Service\", RFC 4354, January\n         2006.\n\
    \   [12]  Willis, D., Ed., and A. Allen, \"Requesting Answering Modes for\n  \
    \       the Session Initiation Protocol (SIP)\", Work in Progress, June\n    \
    \     2007.\n   [13]  Rosenberg, J. and H. Schulzrinne, \"Reliability of Provisional\n\
    \         Responses in Session Initiation Protocol (SIP)\", RFC 3262, June\n \
    \        2002.\n   [14]  Schulzrinne, H., Oran, D., and G. Camarillo, \"The Reason\
    \ Header\n         Field for the Session Initiation Protocol (SIP)\", RFC 3326,\n\
    \         December 2002.\n   [15]  Rosenberg, J., Schulzrinne, H., and P. Kyzivat,\
    \ \"Indicating\n         User Agent Capabilities in the Session Initiation Protocol\n\
    \         (SIP)\", RFC 3840, August 2004.\n   [16]  Rosenberg, J., \"Request Authorization\
    \ through Dialog\n         Identification in the Session Initiation Protocol (SIP)\"\
    , RFC\n         4538, June 2006.\n   [17]  Donovan, S., \"The SIP INFO Method\"\
    , RFC 2976, October 2000.\n   [18]  Rosenberg, J., \"The Session Initiation Protocol\
    \ (SIP) UPDATE\n         Method\", RFC 3311, October 2002.\n   [19]  Campbell,\
    \ B., Rosenberg, J., Schulzrinne, H., Huitema, C., and\n         D. Gurle, \"\
    Session Initiation Protocol (SIP) Extension for\n         Instant Messaging\"\
    , RFC 3428, December 2002.\n   [20]  Niemi, A., \"Session Initiation Protocol\
    \ (SIP) Extension for\n         Event State Publication\", RFC 3903, October 2004.\n\
    \   [21]  Mankin, A., Bradner, S., Mahy, R., Willis, D., Ott, J., and B.\n   \
    \      Rosen, \"Change Process for the Session Initiation Protocol\n         (SIP)\"\
    , BCP 67, RFC 3427, December 2002.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew Allen (editor)\n   Research in Motion (RIM)\n \
    \  102 Decker Court, Suite 100\n   Irving, Texas  75062\n   USA\n   EMail: aallen@rim.com\n\
    \   Jan Holm\n   Ericsson\n   Tellusborgsvagen 83-87\n   Stockholm  12526\n  \
    \ Sweden\n   EMail: Jan.Holm@ericsson.com\n   Tom Hallin\n   Motorola\n   1501\
    \ W Shure Drive\n   Arlington Heights, IL  60004\n   USA\n   EMail: thallin@motorola.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
