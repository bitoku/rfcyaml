- title: __initial_text__
  contents:
  - '                 Domain System Changes and Observations

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This RFC documents updates to Domain Name System specifications\n\
    \   RFC-882 [1] and RFC-883 [2], suggests some operational guidelines,\n   and\
    \ discusses some experiences and problem areas in the present\n   system.  Distribution\
    \ of this memo is unlimited.\n   This document includes all changes to the Domain\
    \ System through\n   January, 1986.  Change notices and additional discussion\
    \ are\n   available online in file [USC-ISIB.ARPA]<DOMAIN>DOMAIN.CHANGES.\n"
- title: OVERVIEW
  contents:
  - "OVERVIEW\n   This memo is divided into four major sections:\n      \"UPDATES\"\
    \ which discusses changes to the domain specification\n      which are in widespread\
    \ use and should be regarded as being part\n      of the specification.\n    \
    \  \"OPERATION GUIDELINES\" which suggests rules-of-thumb for using the\n    \
    \  domain system and configuring your database which are appropriate\n      in\
    \ most cases, but which may have rare exceptions.\n      \"EXPERIENCES\" which\
    \ discusses some unusual situations and common\n      bugs which are encountered\
    \ in the present system, and should be\n      helpful in problem determination\
    \ and tuning.\n      \"PROBLEM AREAS\" which discusses some shortcomings in the\
    \ present\n      system which may be addressed in future versions.\n   This section\
    \ discusses changes to the specification which are final,\n   and should be incorporated\
    \ in all domain system software.\n   TTL timeouts too small\n      The 16 bit\
    \ TTL field in RRs could not represent a large enough\n      time interval.  The\
    \ 16 bit field, using seconds for units, has a\n      maximum period of approximately\
    \ 18 hours.\n      All time values, including all TTLs and the MINIMUM field of\
    \ the\n      SOA RR, are expanded to 32 bits.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n   CLASS changes\n      Class 2, originally\
    \ reserved for CSNET, is obsolete.  Class 3 has\n      been assigned for use by\
    \ CHAOS.\n   CNAME usage\n      The specification allows CNAME RRs to exist with\
    \ other RRs at the\n      same node.  This creates difficulties since the other\
    \ RRs stored\n      with the CNAME at the alias might not agree with the RRs stored\
    \ at\n      the primary name.\n      If a node has a CNAME RR, it should have\
    \ no other RRs.\n   * semantics\n      The use of * to represent a single label\
    \ wildcard, along with the\n      possibility of multiple * labels, led to difficult\
    \ server\n      implementations and complicated search algorithms.  There were\n\
    \      also questions regarding whether a * based specification could\n      refer\
    \ to names that were not contained in the zone which had the *\n      specification.\n\
    \      While we might want the \"inheritability\" for some cases, it leads\n \
    \     to implementation difficulties.  The first of these is that\n      whenever\
    \ we can't find a RR in a particular zone, we have to\n      search all parent\
    \ zones to look for a suitable * result.\n      (Alternatively we could develop\
    \ some automatic method for insuring\n      consistency or insist on careful duplication\
    \ of inherited data.)\n      We also must deal with conflicts, i.e. what if a\
    \ subdomain doesn't\n      want to inherit defaults.\n      Given these difficulties,\
    \ the solution is to insist that\n      delegation of authority cancels the *\
    \ defaults.  This is quite\n      simple to implement; all you need to do is to\
    \ check for delegation\n      before looking for * RRs.\n      A second difficulty\
    \ is the restriction that * match a single\n      label.  Thus if a name server\
    \ is looking for RRs for the name\n      A.B.C.D.E.F, it must check for *.B.C.D.E.F,\
    \ *.*.C.D.E.F,\n      *.*.*.D.E.F, etc.  This check must also be careful of zone\n\
    \      boundaries and multiplies the effort to handle a query.\n      The solution\
    \ adopted is to allow a single * label in the leftmost\n      part of a name stored\
    \ in a zone, and to allow this label to match\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n      any number of unknown labels or\
    \ a single known label in the query\n      name.  However, the * match is only\
    \ taken for parts of the tree\n      which are neither delegated or explicitly\
    \ represented.\n      The algorithm for performing the search in a tree structured\n\
    \      database has the following steps:\n      1) Descend in the tree matching\
    \ labels from right to left.  If a\n      delegation is found return that;  if\
    \ the specified node is found\n      go to step 2, if the tree ends go to step\
    \ 3.\n      2) Look for RRs that answer the query.  If any are found, return\n\
    \      them as the answer.  If none are found, look for answers in a *\n     \
    \ node which has the same name as the query name except for the\n      rightmost\
    \ label.  (e.g. if you can't find an answer at F.ISI.ARPA,\n      look for a RR\
    \ at *.ISI.ARPA)\n      3) The search for a desired name has failed; look for\
    \ a node whose\n      name is * plus however much matched.  Look for answers there.\n\
    \      (e.g. If you are looking for X.Y.ISI.ARPA and the tree ends at\n      ISI.ARPA,\
    \ look at *.ISI.ARPA.  The same thing holds for\n      Y.ISI.ARPA, or any name\
    \ of the form <anything>.Z.ISI.ARPA, where Z\n      is a label that doesn't exist\
    \ under ISI.ARPA)\n      Note that this interpretation means that * matches names\
    \ that are\n      not in the tree, no matter how much of the tree is missing,\
    \ and\n      also matches one level's worth of known tree.\n   AA semantics\n\
    \      When a name server is responding to a query for a particular name\n   \
    \   and finds a CNAME, it may optionally restart the search at the\n      canonical\
    \ name.  If the server uses the restart feature, the\n      answer section of\
    \ the returned query contains one (or more)\n      CNAMEs, possibly followed by\
    \ answers for the primary name.  The\n      canonical name will usually be in\
    \ the same zone as the alias, but\n      this need not be the case.  If the server\
    \ is authoritative for one\n      of the names but not both, it is not clear whether\
    \ the AA bit\n      should be set.\n      The solution adopted is to make the\
    \ AA refer to the original query\n      name.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n   Master file format\n      The present\
    \ specification uses a somewhat awkward method for\n      representing domain\
    \ names in master files.\n      The change adopted is that all domain names in\
    \ this file will be\n      represented as either absolute or relative.  An absolute\
    \ domain\n      name ends with a \".\".  A free standing \".\" is assumed to refer\
    \ to\n      the root.  A relative domain name doesn't end with a dot, and is\n\
    \      assumed to be relative to the current origin.\n   SERIAL number size\n\
    \      If the master file changes rapidly, an infrequently updated copy\n    \
    \  may miss the wrapping of the sequence number in the SERIAL field\n      of\
    \ the SOA, or misinterpret the number of updates that have taken\n      place.\n\
    \      The SERIAL field is increased to 32 bits.\n   MD and MF replaced by MX\n\
    \      The original specification uses MD and MF RRs for mail agent\n      binding.\
    \  The problem is that a mailer making a MAILA query, which\n      asks for both\
    \ types, can't use the cache since the cache might\n      have the results for\
    \ a MD or MF query.  That is, the presence of\n      one of these types of information\
    \ in the cache doesn't imply\n      anything about the other type.  The result\
    \ was that either mailers\n      would have to always consult authoritative servers\
    \ or try to use\n      partial information; neither of these is really acceptable.\n\
    \      The change is to replace MD and MF with a new type of RR called MX\n  \
    \    which conveys similar information in a single RR type.  MX has\n      been\
    \ assigned a type code of 15 decimal.  The format of the MX RR\n      is a 16\
    \ bit preference value followed by a domain name.  A node\n      may have multiple\
    \ MX RRs, and multiple MX RRs with the same\n      preference value are allowed\
    \ at a given node.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n      The preference values denote the\
    \ relative preference that the mail\n      destination places on the mail agents,\
    \ with lower values being\n      \"better\".  A mailer is expected to at least\
    \ try the mail agent(s)\n      with the lowest preference value.  The significance\
    \ of particular\n      preference values, the units of preference, and the linearity\
    \ of\n      preference values are not defined but left open; preference values\n\
    \      should only be used to establish relative rankings.\n      For example,\
    \ the current RRs:\n                       MAIL-ORG   MD    HOST1    \n      \
    \                            MD    HOST2    \n                               \
    \   MF    HOST3    \n      might be replaced by:\n                       MAIL-ORG\
    \   MX    10 HOST1 \n                                  MX    10 HOST2 \n     \
    \                             MX    20 HOST3 \n      The values 10 and 20 have\
    \ no significance other than 10<20.  A\n      detailed discussion of the use of\
    \ MX is the subject of [3].\n   Zone transfer\n      The original specification\
    \ states that zone transfers take place\n      in breadth first order.  The intent\
    \ was to make the transfer\n      easier for the accepting name server to handle.\
    \  This now doesn't\n      work out to be very helpful, and is a severe pain for\
    \ implementers\n      using various hashing algorithms.  The new rule is that\
    \ you can\n      transmit the records in any order you choose, so long as the\
    \ SOA\n      node of the zone is transmitted first and last, and no other\n  \
    \    duplication occurs.\n   IN-ADDR domain renamed\n      The name of the IN-ADDR\
    \ domain is now IN-ADDR.ARPA.  This change\n      was made because many felt that\
    \ the use of a top-level name was\n      inappropriate to network-specific information.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - 'Domain System Changes and Observations

    '
- title: OPERATIONAL GUIDELINES
  contents:
  - "OPERATIONAL GUIDELINES\n   This section suggests rules-of-thumb for using the\
    \ domain system and\n   configuring your database which are appropriate in most\
    \ cases, but\n   which may have rare exceptions.\n   Zone delegation\n      When\
    \ a domain wishes to become independent from its parent, the\n      RRs which\
    \ mark the delegation in the parent and child zones should\n      be carefully\
    \ synchronized to minimize the possibility that\n      resolvers become confused.\n\
    \      For example, suppose that we wish to create a new zone called\n      ISI.EDU\
    \ under an existing EDU zone, and that the servers for the\n      child zone are\
    \ X.ISI.EDU and Y.GOV.\n      We might add the following to the parent zone:\n\
    \       ISI.EDU.      10000 NS  X.ISI.EDU.              \n                   \
    \  10000 NS  Y.GOV.                  \n       X.ISI.EDU.    10000 A   <address\
    \ of X.ISI.EDU.> \n       Y.GOV.        10000 A   <address of Y.GOV.>     \n \
    \     and the following to the child zone:\n       ISI.EDU.      10000 NS  X.ISI.EDU.\
    \              \n                     10000 NS  Y.GOV.                  \n   \
    \                  50000 SOA <SOA information>       \n       X.ISI.EDU.    10000\
    \ A   <address of X.ISI.EDU.> \n       Y.GOV.        10000 A   <address of Y.GOV.>\
    \     \n      Note the following:\n         In both cases, the A RR for Y.GOV\
    \ is included, even though\n         Y.GOV isn't in the EDU or ISI.EDU domains.\
    \  This RR isn't\n         authoritative, but is included to guarantee that the\
    \ address of\n         Y.GOV is passed with delegations to it.  Strictly speaking\
    \ this\n         RR need not be in either zone, but its presence is recommended.\n\
    \         The X.ISI.EDU A RR is absolutely essential.  The only time that\n  \
    \       a server should use the glue RRs is when it is returning the NS\n    \
    \     RRs and doesn't otherwise have the address of the server.  For\n       \
    \  example, if the parent server also was authoritative for GOV,\n         the\
    \ glue RR would typically not be consulted.  However, it is\n         still a\
    \ good idea for it to be present, so that the zone is\n         self-sufficient.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n         The child zone and the parent\
    \ zone have identical NS RRs for\n         the ISI.EDU domain.  This guarantees\
    \ that no matter which\n         server is asked about the ISI.EDU domain, the\
    \ same set of name\n         servers is returned.\n         The child zone and\
    \ the parent zone have A RRs for the name\n         servers in the NS RRs that\
    \ delegate the ISI.EDU domain.  This\n         guarantees that in addition to\
    \ knowing the name servers for the\n         ISI.EDU domain, the addresses of\
    \ the servers are known as well.\n         The TTLs for the NS RRs that delegate\
    \ the ISI.EDU domain and\n         the A RRs that represent the addresses of the\
    \ name servers are\n         all the same.  This guarantees that all of these\
    \ RRs will\n         timeout simultaneously.  In this example, the value 10000\
    \ has\n         no special significance, but the coincidence of the TTLs is\n\
    \         significant.\n      These guidelines haven't changed any of the flexibility\
    \ of the\n      system; the name of a name server and the domains it serves are\n\
    \      still independent.\n      It might also be the case that the organization\
    \ called ISI wanted\n      to take over management of the IN-ADDR domain for an\
    \ internal\n      network, say 128.99.0.0.  In this case, we would have additions\
    \ to\n      the parent zone, say IN-ADDR.ARPA.\n      We might add the following\
    \ to the parent zone:\n       99.128.IN-ADDR.ARPA. 2000 NS  Q.ISI.EDU.       \
    \        \n                            2000 NS  XX.MIT.EDU.              \n  \
    \     Q.ISI.EDU.           2000 A   <address of Q.ISI.EDU.>  \n       XX.MIT.EDU.\
    \          2000 A   <address of XX.MIT.EDU.> \n      and the following to the\
    \ child zone:\n       99.128.IN-ADDR.ARPA. 2000 NS  Q.ISI.EDU.               \n\
    \                            2000 NS  XX.MIT.EDU.              \n            \
    \                5000 SOA <SOA information>        \n       Q.ISI.EDU.       \
    \    2000 A   <address of Q.ISI.EDU.>  \n       XX.MIT.EDU.          2000 A  \
    \ <address of XX.MIT.EDU.> \n   SOA serials\n      The serial field of the SOA\
    \ RR for a domain is supposed to be a\n      continuously increasing (mod 2**32)\
    \ value which denotes the\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n      version of the database.  The idea\
    \ is that you can tell that a\n      zone has changed by comparing serial numbers.\
    \  When you change a\n      zone, you should increment the serial field of the\
    \ SOA.\n   All RRs with the same name, class, and type should have the same TTL.\n\
    \      The logic here is that all of them will timeout simultaneously if\n   \
    \   cached and hence the cache can be reliably used.\n   Case consistency\n  \
    \    The domain system is supposed to preserve case, but be case\n      insensitive.\
    \  However, it does nobody any good to put both RRs for\n      domain name xxx\
    \ and XXX in the data base - It merely makes caching\n      ambiguous and decreases\
    \ the efficiency of compression.  This\n      consistency should also exist in\
    \ the duplicate RRs that mark\n      delegation in the delegator and delegatee.\
    \  For example, if you\n      ask the NIC to delegate UZOO.EDU to you, your database\
    \ shouldn't\n      say uzoo.edu.\n   Inappropriate use of aliases\n      Canonical\
    \ names are preferred to aliases in all RRs.  One reason\n      is that the canonical\
    \ names are closer to the information\n      associated with a name.  A second\
    \ is that canonical names are\n      unique, and aliases are not, and hence comparisons\
    \ will work.\n      In particular, the use of aliases in PTR RRs of the IN-ADDR\
    \ domain\n      or in NS RRs that mark delegation is discouraged.\n"
- title: EXPERIENCES
  contents:
  - "EXPERIENCES\n   This section discusses some unusual situations and common bugs\
    \ which\n   are encountered in the present system, and should be helpful in\n\
    \   problem determination and tuning.  Put differently, you should try to\n  \
    \ make your code defend against these attacks, and you should expect to\n   be\
    \ the object of complaint if you make these attacks.\n   UDP addresses\n     \
    \ When you send a query to a host with multiple addresses, you might\n      expect\
    \ the response to be from the address to which you sent the\n      query.  This\
    \ isn't the case with almost all UNIX implementations.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n   UDP checksums\n      Many versions\
    \ of UNIX generate incorrect UDP checksums, and most\n      ignore the checksum\
    \ of incoming UDP datagrams.  The typical\n      symptom is that your UNIX domain\
    \ code works fine with other\n      UNIXes, but won't communicate with TOPS-20\
    \ or other systems.\n      (JEEVES, the TOPS-20 server used for 3 of the 4 root\
    \ servers,\n      ignores datagrams with bad UDP checksums.)\n   Making up data\n\
    \      There are lots of name servers which return RRs for the root\n      servers\
    \ with 99999999 or similar large values in the TTL.  For\n      example, some\
    \ return RRs that suggest that ISIF is a root server.\n      (It was months ago,\
    \ but is no longer.)\n      One of the main ideas of the domain system is that\
    \ everybody can\n      get a chunk of the name space to manage as they choose.\
    \  However,\n      you aren't supposed to lie about other parts of the name space.\n\
    \      Its OK to remember about other parts of the name space for caching\n  \
    \    or other purposes, but you are supposed to follow the TTL rules.\n      Now\
    \ it may be that you put such records in your server or whatever\n      to ensure\
    \ a server of last resort.  That's fine.  But if you\n      export these in answers\
    \ to queries, you should be shot.  These\n      entries get put in caches and\
    \ never die.\n      Suggested domain meta-rule:\n         If you must lie, lie\
    \ only to yourself.\n"
- title: PROBLEM AREAS
  contents:
  - "PROBLEM AREAS\n   This section discusses some shortcomings in the present system\
    \ which\n   may be addressed in future versions.\n   Compression and types\n \
    \     The present specification attempts to allow name servers and\n      resolvers\
    \ to cache RRs for classes they don't \"understand\" as well\n      as to allow\
    \ compression of domain names to minimize the size of\n      UDP datagrams.  These\
    \ two goals conflict in the present scheme\n      since the only way to expand\
    \ a compressed name is to know that a\n      name is expected in that position.\n\
    \      One technique for addressing this problem would be to preface\n      binary\
    \ data (i.e. anything but a domain name) with a length octet.\n"
- title: RFC 973                                                     January 1986
  contents:
  - 'RFC 973                                                     January 1986

    '
- title: Domain System Changes and Observations
  contents:
  - "Domain System Changes and Observations\n      The high order two bits of the\
    \ length octet could contain either\n      01 or 10, which are illegal for domain\
    \ names.  To compensate for\n      the additional bytes of data, we could omit\
    \ the RDATA length field\n      and terminate each RR with a binary length field\
    \ of zero.\n   Caching non-existent names\n      In the present system, a resolver\
    \ has no standard method for\n      caching the result that a name does not exist,\
    \ which seems to make\n      up a larger than expected percentage of queries.\
    \  Some resolvers\n      create \"does not exist\" RRs with TTLs to guarantee\
    \ against\n      repetitive queries for a non-existent name.\n      A standard\
    \ technique might be to return the SOA RR for the zone\n      (note that only\
    \ authoritative servers can say name does not exist)\n      in the reply, and\
    \ define the semantics to be that the requester is\n      free to assume that\
    \ the name does not exist for a period equal to\n      the MINIMUM field of the\
    \ SOA.\n   Cache conflicts\n      When a resolver is processing a reply, it may\
    \ well decide to cache\n      all RRs found in sections of the reply.  The problem\
    \ is that the\n      resolver's cache may already contain a subset of these RRs,\n\
    \      probably with different TTLs.\n      If the RRs are from authoritative\
    \ data in the answer section, then\n      the cache RRs should be replaced.  In\
    \ other cases, the correct\n      strategy isn't completely clear.  Note that\
    \ if the authoritative\n      data's TTL has changed, then the resolver doesn't\
    \ have enough\n      information to make the correct decision in all cases.\n\
    \      This issue is tricky, and deserves thought.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [1]  Mockapetris, P., \"Domain Names - Concepts and Facilities\"\
    ,\n        RFC-882, USC Information Sciences Institute, November 1983.\n   [2]\
    \  Mockapetris, P., \"Domain Names - Implementation and\n        Specification\"\
    , RFC-883, USC Information Sciences Institute,\n        November 1983.\n   [3]\
    \  Partridge, C., \"Mail Routing and the Domain System\", RFC-974,\n        CSNET-CIC,\
    \ BBN Laboratories, January 1986.\n"
