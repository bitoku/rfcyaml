- title: __initial_text__
  contents:
  - '                     On-Demand Mobility Management

    '
- title: Abstract
  contents:
  - "Abstract\n   Applications differ with respect to whether they need session\n\
    \   continuity and/or IP address reachability.  The network providing the\n  \
    \ same type of service to any mobile host and any application running\n   on the\
    \ host yields inefficiencies, as described in RFC 7333.  This\n   document defines\
    \ a new concept of enabling applications to influence\n   the network's mobility\
    \ services (session continuity and/or IP address\n   reachability) on a per-socket\
    \ basis, and suggests extensions to the\n   networking stack's API to accommodate\
    \ this concept.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8653.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Notational Conventions\n   3.\
    \  Solution\n     3.1.  High-Level Description\n     3.2.  Types of IP Addresses\n\
    \     3.3.  Granularity of Selection\n     3.4.  On-Demand Nature\n   4.  Backwards\
    \ Compatibility Considerations\n     4.1.  Applications\n     4.2.  IP Stack in\
    \ the Mobile Host\n     4.3.  Network Infrastructure\n     4.4.  Merging this\
    \ work with RFC 5014\n   5.  Security Considerations\n   6.  IANA Considerations\n\
    \   7.  References\n     7.1.  Normative References\n     7.2.  Informative References\n\
    \   Appendix A.  Conveying the Desired Address Type\n   Acknowledgements\n   Contributors\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In the context of Mobile IP [RFC5563] [RFC6275] [RFC5213]\
    \ [RFC5944],\n   the following two attributes are defined for IP service provided\
    \ to\n   mobile hosts:\n   Session Continuity\n      The ability to maintain an\
    \ ongoing transport interaction by\n      keeping the same local endpoint IP address\
    \ throughout the lifetime\n      of the IP socket despite the mobile host changing\
    \ its point of\n      attachment within the IP network topology.  The IP address\
    \ of the\n      host may change after closing the IP socket and before opening\
    \ a\n      new one, but that does not jeopardize the ability of applications\n\
    \      using these IP sockets to work flawlessly.  Session continuity is\n   \
    \   essential for mobile hosts to maintain ongoing flows without any\n      interruption.\n\
    \   IP Address Reachability\n      The ability to maintain the same IP address\
    \ for an extended period\n      of time.  The IP address stays the same across\
    \ independent\n      sessions, even in the absence of any session.  The IP address\
    \ may\n      be published in a long-term registry (e.g., DNS) and is made\n  \
    \    available for serving incoming (e.g., TCP) connections.  IP\n      address\
    \ reachability is essential for mobile hosts to use\n      specific/published\
    \ IP addresses.\n   Mobile IP is designed to provide both session continuity and\
    \ IP\n   address reachability to mobile hosts.  Architectures using these\n  \
    \ protocols (e.g., 3GPP, 3GPP2, WiMAX) ensure that any mobile host\n   attached\
    \ to a compliant network can enjoy these benefits.  Any\n   application running\
    \ on these mobile hosts is subjected to the same\n   treatment with respect to\
    \ session continuity and IP address\n   reachability.\n   Achieving session continuity\
    \ and IP address reachability with Mobile\n   IP incurs some cost.  Mobile IP\
    \ forces the mobile host's IP traffic\n   to traverse a centrally located router\
    \ (Home Agent, HA), which incurs\n   additional transmission latency and use of\
    \ additional network\n   resources, adds to the network's operating and capital\
    \ expenditures,\n   and decreases the reliability of the network due to the introduction\n\
    \   of a single point of failure [RFC7333].  Therefore, session\n   continuity\
    \ and IP address reachability SHOULD be provided only when\n   necessary.\n  \
    \ In reality, not every application may need these benefits.  IP\n   address reachability\
    \ is required for applications running as servers\n   (e.g., a web server running\
    \ on the mobile host), but a typical client\n   application (e.g., web browser)\
    \ does not necessarily require IP\n   address reachability.  Similarly, session\
    \ continuity is not required\n   for all types of applications either.  Applications\
    \ performing brief\n   communication (e.g., text messaging) can survive without\
    \ having\n   session continuity support.\n   Furthermore, when an application\
    \ needs session continuity, it may be\n   able to satisfy that need by using a\
    \ solution above the IP layer,\n   such as Multipath TCP [RFC6824], SIP mobility\
    \ [RFC3261], or an\n   application-layer mobility solution.  These higher-layer\
    \ solutions\n   are not subject to the same issues that arise with the use of\
    \ Mobile\n   IP since they can use the most direct data path between the\n   endpoints.\
    \  But, if Mobile IP is being applied to the mobile host,\n   the higher-layer\
    \ protocols are rendered useless because their\n   operation is inhibited by Mobile\
    \ IP.  Since Mobile IP ensures that\n   the IP address of the mobile host remains\
    \ fixed (despite the location\n   and movement of the mobile host), the higher-layer\
    \ protocols never\n   detect the IP-layer change and never engage in mobility\
    \ management.\n   This document proposes a solution for applications running on\
    \ mobile\n   hosts to indicate when establishing the network connection ('on\n\
    \   demand') whether they need session continuity or IP address\n   reachability.\
    \  The network protocol stack on the mobile host, in\n   conjunction with the\
    \ network infrastructure, provides the required\n   type of service.  It is for\
    \ the benefit of both the users and the\n   network operators not to engage an\
    \ extra level of service unless it\n   is absolutely necessary.  It is expected\
    \ that applications and\n   networks compliant with this specification will utilize\
    \ this solution\n   to use network resources more efficiently.\n"
- title: 2.  Notational Conventions
  contents:
  - "2.  Notational Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  Solution
  contents:
  - '3.  Solution

    '
- title: 3.1.  High-Level Description
  contents:
  - "3.1.  High-Level Description\n   Enabling applications to indicate their mobility\
    \ service requirements\n   (e.g., session continuity and/or IP address reachability)\
    \ comprises\n   the following steps:\n   1.  The application indicates to the\
    \ network stack (local to the\n       mobile host) the desired mobility service.\n\
    \   2.  The network stack assigns a source IP address based on an IP\n       prefix\
    \ with the desired services that was previously provided by\n       the network.\
    \  If such an IP prefix is not available, the network\n       stack performs the\
    \ additional steps below.\n   3.  The network stack sends a request to the network\
    \ for a new source\n       IP prefix that is associated with the desired mobility\
    \ service.\n   4.  The network responds with the suitable allocated source IP\
    \ prefix\n       (or responds with a failure indication).\n   5.  If the suitable\
    \ source IP prefix was allocated, the network stack\n       constructs a source\
    \ IP address and provides it to the\n       application.\n   This document specifies\
    \ the new address types associated with\n   mobility services and details the\
    \ interaction between the\n   applications and the network stack steps.  It uses\
    \ the socket\n   interface as an example for an API between applications and the\n\
    \   network stack.  Other steps are outside the scope of this document.\n"
- title: 3.2.  Types of IP Addresses
  contents:
  - "3.2.  Types of IP Addresses\n   Four types of IP addresses are defined with respect\
    \ to mobility\n   management:\n   Fixed IP address\n      A Fixed IP address is\
    \ an address guaranteed to be valid for a very\n      long time, regardless of\
    \ whether it is being used in any packet\n      to/from the mobile host, or whether\
    \ or not the mobile host is\n      connected to the network, or whether it moves\
    \ from one point of\n      attachment to another (with a different IP prefix)\
    \ while it is\n      connected.\n      Fixed IP addresses are required by applications\
    \ that need both\n      session continuity and IP address reachability.\n   Session-Lasting\
    \ IP address\n      A Session-Lasting IP address is an address guaranteed to be\
    \ valid\n      for the lifetime of the socket(s) for which it was requested. \
    \ It\n      is guaranteed to be valid even after the mobile host has moved\n \
    \     from one point of attachment to another (with a different IP\n      prefix).\n\
    \      Session-Lasting IP addresses are required by applications that\n      need\
    \ session continuity but do not need IP address reachability.\n   Nonpersistent\
    \ IP address\n      This type of IP address is not guaranteed to exist after a\
    \ mobile\n      host moves from one point of attachment to another; therefore,\
    \ no\n      session continuity nor IP address reachability are provided.  The\n\
    \      IP address is created from an IP prefix that is obtained from the\n   \
    \   serving IP gateway and is not maintained across gateway changes.\n      In\
    \ other words, the IP prefix may be released and replaced by a\n      new one\
    \ when the IP gateway changes due to the movement of the\n      mobile host forcing\
    \ the creation of a new source IP address with\n      the updated allocated IP\
    \ prefix.\n   Graceful-Replacement IP address\n      In some cases, the network\
    \ cannot guarantee the validity of the\n      provided IP prefix throughout the\
    \ duration of the opened socket,\n      but can provide a limited graceful period\
    \ of time in which both\n      the original IP prefix and a new one are valid.\
    \  This enables the\n      application some flexibility in the transition from\
    \ the existing\n      source IP address to the new one.\n      This gracefulness\
    \ is still better than the nonpersistence type of\n      address for applications\
    \ that can handle a change in their source\n      IP address but require that\
    \ extra flexibility.\n   Applications running as servers at a published IP address\
    \ require a\n   Fixed IP address.  Long-standing applications (e.g., an SSH session)\n\
    \   may also require this type of address.  Enterprise applications that\n   connect\
    \ to an enterprise network via virtual LAN require a Fixed IP\n   address.\n \
    \  Applications with short-lived transient sessions (e.g., web browsers)\n   can\
    \ use Session-Lasting IP addresses.\n   Applications with very short sessions,\
    \ such as DNS clients and\n   instant messengers, can use Nonpersistent IP addresses.\
    \  Even though\n   they could very well use Fixed or Session-Lasting IP addresses,\
    \ the\n   transmission latency would be minimized when a Nonpersistent IP\n  \
    \ address is used.\n   Applications that can tolerate a short interruption in\
    \ connectivity\n   can use the Graceful-Replacement IP addresses, for example,\
    \ a\n   streaming client that has buffering capabilities.\n"
- title: 3.3.  Granularity of Selection
  contents:
  - "3.3.  Granularity of Selection\n   IP address type selection is made on a per-socket\
    \ granularity.\n   Different parts of the same application may have different\
    \ needs.\n   For example, the control plane of an application may require a Fixed\n\
    \   IP address in order to stay reachable, whereas the data plane of the\n   same\
    \ application may be satisfied with a Session-Lasting IP address.\n"
- title: 3.4.  On-Demand Nature
  contents:
  - "3.4.  On-Demand Nature\n   At any point in time, a mobile host may have a combination\
    \ of IP\n   addresses configured.  Zero or more Fixed, zero or more Session-\n\
    \   Lasting, zero or more Nonpersistent, and zero or more Graceful-\n   Replacement\
    \ IP addresses may be configured by the IP stack of the\n   host.  The combination\
    \ may be a result of the host policy,\n   application demand, or a mix of the\
    \ two.\n   When an application requires a specific type of IP address, and such\n\
    \   an address is not already configured on the host, the IP stack SHALL\n   attempt\
    \ to configure one.  For example, a host may not always have a\n   Session-Lasting\
    \ IP address available.  When an application requests\n   one, the IP stack SHALL\
    \ make an attempt to configure one by issuing a\n   request to the network.  If\
    \ the operation fails, the IP stack SHALL\n   fail the associated socket request\
    \ and return an error.  If\n   successful, a Session-Lasting IP address is configured\
    \ on the mobile\n   host.  If another socket requests a Session-Lasting IP address\
    \ at a\n   later time, the same IP address may be served to that socket as well.\n\
    \   When the last socket using the same configured IP address is closed,\n   the\
    \ IP address may be released, or it may be kept for applications\n   requiring\
    \ a Session-Lasting IP address that may be launched in the\n   future.\n   In\
    \ some cases, it might be preferable for the mobile host to request\n   a new\
    \ Session-Lasting IP address for a new opening of an IP socket\n   (even though\
    \ one was already assigned to the mobile host by the\n   network and might be\
    \ in use in a different, already active IP\n   socket).  It is outside the scope\
    \ of this specification to define\n   criteria for choosing to use available addresses\
    \ or choosing to\n   request new ones.  It supports both alternatives (and any\n\
    \   combination).\n   It is outside the scope of this specification to define\
    \ how the host\n   requests a specific type of prefix and how the network indicates\
    \ the\n   type of prefix in its advertisement or in its reply to a request.\n\
    \   The following are matters of policy, which may be dictated by the\n   host\
    \ itself, the network operator, or the system architecture\n   standard:\n   *\
    \  The initial set of IP addresses configured on the host at boot\n      time\n\
    \   *  Permission to grant various types of IP addresses to a requesting\n   \
    \   application\n   *  Determination of a default address type when an application\
    \ does\n      not explicitly indicate whether it supports the required API or\
    \ is\n      a legacy application\n"
- title: 4.  Backwards Compatibility Considerations
  contents:
  - "4.  Backwards Compatibility Considerations\n   Backwards compatibility support\
    \ is REQUIRED by the following three\n   types of entities:\n   *  The applications\
    \ on the mobile host\n   *  The IP stack in the mobile host\n   *  The network\
    \ infrastructure\n"
- title: 4.1.  Applications
  contents:
  - "4.1.  Applications\n   Legacy applications that do not support the On-Demand\
    \ functionality\n   will use the legacy API and will not be able to take advantage\
    \ of the\n   On-Demand Mobility feature.\n   Applications using the new On-Demand\
    \ functionality should be aware\n   that they may be executed in legacy environments\
    \ that do not support\n   it.  Such environments may include a legacy IP stack\
    \ on the mobile\n   host, legacy network infrastructure, or both.  In either case,\
    \ the\n   API will return an error code, and the invoking application may just\n\
    \   give up and use legacy calls.\n"
- title: 4.2.  IP Stack in the Mobile Host
  contents:
  - "4.2.  IP Stack in the Mobile Host\n   New IP stacks (that implement On-Demand\
    \ functionality) MUST continue\n   to support all legacy operations.  If an application\
    \ does not use On-\n   Demand functionality, the IP stack MUST respond in a legacy\
    \ manner.\n   If the network infrastructure supports On-Demand functionality,\
    \ the\n   IP stack SHOULD follow the application request: If the application\n\
    \   requests a specific address type, the stack SHOULD forward this\n   request\
    \ to the network.  If the application does not request an\n   address type, the\
    \ IP stack MUST NOT request an address type.\n   Instead, the network will choose\
    \ the type of allocated IP prefix.\n   How the network selects the type of allocated\
    \ IP prefix is outside\n   the scope of this document.  If an IP prefix was already\
    \ allocated to\n   the host, the IP stack uses it and may not request a new one\
    \ from the\n   network.\n"
- title: 4.3.  Network Infrastructure
  contents:
  - "4.3.  Network Infrastructure\n   The network infrastructure may or may not support\
    \ the On-Demand\n   functionality.  How the IP stack on the host and the network\n\
    \   infrastructure behave in case of a compatibility issue is outside the\n  \
    \ scope of this API specification.\n"
- title: 4.4.  Merging this work with RFC 5014
  contents:
  - "4.4.  Merging this work with RFC 5014\n   [RFC5014] defines new flags that may\
    \ be used with setsockopt() to\n   influence source IP address selection for a\
    \ socket.  The list of\n   flags include the following: source home address, care-of\
    \ address,\n   temporary address, public address CGA (Cryptographically Created\n\
    \   Address), and non-CGA.  When applications require session continuity\n   service,\
    \ they SHOULD NOT set the flags specified in [RFC5014].\n   However, if an application\
    \ erroneously performs a combination of (1)\n   using setsockopt() to set a specific\
    \ option (using one of the flags\n   specified in [RFC5014]) and (2) selecting\
    \ a source IP address type,\n   the IP stack will fulfill the request specified\
    \ by (2) and ignore the\n   flags set by (1).\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The different service types (session continuity\
    \ types and address\n   reachability) associated with the allocated IP address\
    \ types may be\n   associated with different costs: the cost to the operator for\n\
    \   enabling a type of service, and the cost to applications using a\n   selected\
    \ service.  A malicious application may use these to\n   indirectly generate extra\
    \ billing of a mobile subscriber, and/or\n   impose costly services on the mobile\
    \ operator.  When expensive\n   services are limited, malicious applications may\
    \ exhaust them,\n   preventing other applications on the same mobile host from\
    \ being able\n   to use them.\n   Mobile hosts that enable such service options\
    \ should provide\n   capabilities for ensuring that only authorized applications\
    \ can use\n   the expensive (or limited) service types.\n   The ability to select\
    \ service types requires the exchange of the\n   association of source IP prefixes\
    \ and their corresponding service\n   types, between the mobile host and mobile\
    \ network.  Exposing these\n   associations may provide information to passive\
    \ attackers even if the\n   traffic that is used with these addresses is encrypted.\n\
    \   To avoid profiling an application according to the type of IP\n   address,\
    \ it is expected that prefixes provided by the mobile operator\n   are associated\
    \ with various types of addresses over time.  As a\n   result, the type of address\
    \ cannot be associated with the prefix,\n   making application profiling based\
    \ on the type of address more\n   difficult.\n   The application or the OS should\
    \ ensure that IP addresses regularly\n   change to limit IP tracking by a passive\
    \ observer.  The application\n   should regularly set the On-Demand flag.  The\
    \ application should be\n   able to ensure that Session-Lasting IP addresses are\
    \ regularly\n   changed by setting a lifetime, for example, handled by the\n \
    \  application.  In addition, the application should consider the use of\n   Graceful-Replacement\
    \ IP addresses.\n   Similarly, the OS may also associate IP addresses with a lifetime.\n\
    \   Upon receiving a request for a given type of IP address, after some\n   time,\
    \ the OS should request a new address to the network even if it\n   already has\
    \ one IP address available with the requested type.  This\n   includes any type\
    \ of IP address.  IP addresses of type Graceful-\n   Replacement or nonpersistent\
    \ should be regularly renewed by the OS.\n   The lifetime of an IP address may\
    \ be expressed in number of seconds\n   or in number of bytes sent through this\
    \ IP address.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5014]  Nordmark, E., Chakrabarti, S., and J. Laganier, \"IPv6\n      \
    \        Socket API for Source Address Selection\", RFC 5014,\n              DOI\
    \ 10.17487/RFC5014, September 2007,\n              <https://www.rfc-editor.org/info/rfc5014>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [API-EXT]  Jeon, S., Figueiredo, S., Kim, Y.,\
    \ and J. Kaippallimalil,\n              \"Use Cases and API Extension for Source\
    \ IP Address\n              Selection\", Work in Progress, Internet-Draft, draft-\n\
    \              sijeon-dmm-use-cases-api-source-07, 10 September 2017,\n      \
    \        <https://tools.ietf.org/html/draft-sijeon-dmm-use-cases-\n          \
    \    api-source-07>.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \              DOI 10.17487/RFC3261, June 2002,\n              <https://www.rfc-editor.org/info/rfc3261>.\n\
    \   [RFC5213]  Gundavelli, S., Ed., Leung, K., Devarapalli, V.,\n            \
    \  Chowdhury, K., and B. Patil, \"Proxy Mobile IPv6\",\n              RFC 5213,\
    \ DOI 10.17487/RFC5213, August 2008,\n              <https://www.rfc-editor.org/info/rfc5213>.\n\
    \   [RFC5563]  Leung, K., Dommety, G., Yegani, P., and K. Chowdhury,\n       \
    \       \"WiMAX Forum / 3GPP2 Proxy Mobile IPv4\", RFC 5563,\n              DOI\
    \ 10.17487/RFC5563, February 2010,\n              <https://www.rfc-editor.org/info/rfc5563>.\n\
    \   [RFC5944]  Perkins, C., Ed., \"IP Mobility Support for IPv4, Revised\",\n\
    \              RFC 5944, DOI 10.17487/RFC5944, November 2010,\n              <https://www.rfc-editor.org/info/rfc5944>.\n\
    \   [RFC6275]  Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n     \
    \         Support in IPv6\", RFC 6275, DOI 10.17487/RFC6275, July\n          \
    \    2011, <https://www.rfc-editor.org/info/rfc6275>.\n   [RFC6824]  Ford, A.,\
    \ Raiciu, C., Handley, M., and O. Bonaventure,\n              \"TCP Extensions\
    \ for Multipath Operation with Multiple\n              Addresses\", RFC 6824,\
    \ DOI 10.17487/RFC6824, January 2013,\n              <https://www.rfc-editor.org/info/rfc6824>.\n\
    \   [RFC7333]  Chan, H., Ed., Liu, D., Seite, P., Yokota, H., and J.\n       \
    \       Korhonen, \"Requirements for Distributed Mobility\n              Management\"\
    , RFC 7333, DOI 10.17487/RFC7333, August 2014,\n              <https://www.rfc-editor.org/info/rfc7333>.\n"
- title: Appendix A.  Conveying the Desired Address Type
  contents:
  - "Appendix A.  Conveying the Desired Address Type\n   The following are some suggestions\
    \ of possible extensions to the\n   socket API for enabling applications to convey\
    \ their session\n   continuity and address reachability requirements.\n   [RFC5014]\
    \ introduced the ability of applications to influence the\n   source address selection\
    \ with the IPV6_ADDR_PREFERENCE option at the\n   IPPROTO_IPV6 level.  This option\
    \ is used with setsockopt() and\n   getsockopt() calls to set/get address selection\
    \ preferences.\n   One alternative is to extend the definition of the\n   IPV6_ADDR_REFERENCE\
    \ option with flags that express the invoker's\n   desire.  An \"OnDemand\" field\
    \ could contain one of the following\n   values: FIXED_IP_ADDRESS, SESSION_LASTING_IP_ADDRESS,\n\
    \   NON_PERSISTENT_IP_ADDRESS, or GRACEFUL_REPLACEMENT_IP_ADDRESS.\n   Another\
    \ alternative is to define a new socket function used by the\n   invoker to convey\
    \ its desire.  This enables the implementation of two\n   behaviors of socket\
    \ functions: the existing setsockopt() is a\n   function that returns after executing,\
    \ and the new setsc() (Set\n   Service Continuity) is a function that may initiate\
    \ a request for the\n   desired service, and wait until the network responds with\
    \ the\n   allocated resources, before returning to the invoker.\n   After obtaining\
    \ an IP address with the desired behavior, the\n   application can call the bind()\
    \ socket function to associate that\n   received IP address with the socket.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank Wu-chi Feng, Alexandru Petrescu,\
    \ Jouni\n   Korhonen, Sri Gundavelli, Dave Dolson, Lorenzo Colitti, and Daniel\n\
    \   Migault for their valuable comments and suggestions on this work.\n"
- title: Contributors
  contents:
  - "Contributors\n   This document was merged with \"Use Cases and API Extension\
    \ for Source\n   IP Address Selection\" [API-EXT].  We would like to acknowledge\
    \ the\n   contribution of the following people to that document as well:\n   Sergio\
    \ Figueiredo\n   Altran Research\n   France\n   Email: sergio.figueiredo@altran.com\n\
    \   Younghan Kim\n   Soongsil University\n   Republic of Korea\n   Email: younghak@ssu.ac.kr\n\
    \   John Kaippallimalil\n   Huawei\n   United States of America\n   Email: john.kaippallimalil@huawei.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alper Yegin\n   Actility\n   Istanbul/\n   Turkey\n  \
    \ Email: alper.yegin@actility.com\n   Danny Moses\n   Intel Corporation\n   Petah\
    \ Tikva\n   Israel\n   Email: danny.moses@intel.com\n   Seil Jeon\n   Republic\
    \ of Korea\n   Suwon\n"
