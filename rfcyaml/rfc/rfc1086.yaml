- title: __initial_text__
  contents:
  - '                  ISO-TP0 bridge between TCP and X.25

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo proposes a standard for the Internet community.\
    \  Hosts on\n   the Internet that choose to implement ISO TP0 transport connectivity\n\
    \   between TCP and X.25 based hosts are expected to experiment with this\n  \
    \ proposal.  TCP port 146 is reserved for this proposal.  Distribution\n   of\
    \ this memo is unlimited and comments are highly encouraged.\n"
- title: Introduction
  contents:
  - "Introduction\n   This memo specifies a protocol that is used to bridge ISO TP0\
    \ packets\n   between X.25 and TCP networks.  This technique is useful when\n\
    \   interconnecting a DDN IP internet to an X.25 subnetwork.  This is not\n  \
    \ a \"magic bullet\" solution to the DDN/ISO interoperability problem.\n   Rather,\
    \ if one is running higher-layer ISO protocols in both networks\n   (namely ISO\
    \ TP0), then a TP0 bridge can be used to achieve\n   connectivity.\n   The protocol\
    \ itself is fairly simple as the method of operation for\n   running TP0 over\
    \ the TCP and X.25 protocols have previously been\n   defined.  A bridge offering\
    \ ISO-TP0 gateway services simply applies\n   both methods as appropriate.  The\
    \ protocol works by TP0/TCP hosts\n   \"registering\" an X.25 subaddress (and\
    \ corresponding TCP port/IP\n   address) with the bridge.  TP0/X.25 hosts use\
    \ the standard method for\n   establishing, maintaining, and releasing connections.\
    \  When a\n   connection is established, the bridge establishes the corresponding\n\
    \   TCP connection and simply shuffles TP0 packets between the two.  When\n  \
    \ a TP0/TCP host initiates a connection, it establishes a TCP\n   connection to\
    \ the bridge using port number 146 and communicates the\n   desired X.25 address.\
    \  The bridge establishes a connection to the\n   native X.25 host and simply\
    \ shuffles TP0 packets between the two.\n"
- title: 1.  Introduction and Motivation
  contents:
  - "1.  Introduction and Motivation\n   The migratory protocol described in [RFC1006]\
    \ makes possible the\n   transmission of TP0 packets between hosts on TCP/IP internets.\
    \  With\n   the addition of a small protocol converter, a TCP/IP host can be made\n\
    \   to appear in the X.25 addressing space and be able to accept and make\n  \
    \ connections using the TP0 protocol.\n   This procedure is particularly useful\
    \ in the following cases:\n      1.  A host on an IP based internet can communicate\
    \ with hosts on\n      X.25 based networks providing the hosts are running ISO\
    \ protocols.\n      This also assumes a friendly gateway willing to run the actual\
    \ TP0\n      bridge and make available to the IP host part of its X.25 address\n\
    \      space.\n      2.  A site having sparse connections to an X.25 network and\
    \ using\n      a TCP/IP based local area network for local communications.  In\n\
    \      this case all hosts on the LAN can have access to hosts on the\n      X.25\
    \ network running ISO TP0.\n   Pictorially, this memo describes interoperation\
    \ in the following\n   environment:\n          +---------------------------------+\n\
    \          |                                 |\n          |                  \
    \ +-----------------------------------+\n          |  +----+           |     +----+\
    \  |           +----+    |\n          |  |    |           |     |    |  |    \
    \       |    |    |\n          |  |    +-----------|-----+    +--------------+\
    \    |    |\n          |  |    |     TP0   |     |    |  |  TP0      |    |  \
    \  |\n          |  +----+           |     +----+  |           +----+    |\n  \
    \        | TCP Host          |  Bridge Host|         X.25 Host   |\n         \
    \ |                   |             |                     |\n          |     \
    \              |             |                     |\n          |            \
    \       |             |                     |\n          +-------------------|-------------+\
    \                     |\n            TCP/IP Network    |                     \
    \              |\n                              |                            \
    \       |\n                              +-----------------------------------+\n\
    \                                           X.25 Network\n"
- title: 2.  Definitions and Philosophy
  contents:
  - "2.  Definitions and Philosophy\n   Some modest terminology and philosophy is\
    \ introduced to aid\n   readability and stir interest.\n   The ISO Transport Service\
    \ (TS) provides a reliable, packet-stream to\n   its users [ISO8072].  The ISO\
    \ Transport Protocol (TP) implements this\n   service [ISO8073].  There are five\
    \ classes of this protocol.  The\n   class is selected on the basis of the services\
    \ offered by the\n   underlying network service.  Transport class 0 (TP0) is used\
    \ when the\n   network service offered is connection-oriented and error-detecting.\n\
    \   As should be expected, TP0 is a rather simple protocol, since the\n   underlying\
    \ network service actually provides most of the qualities\n   offered by the transport\
    \ service.\n   CCITT Recommendation X.25 [ISO8208,X.25] offers such a network\n\
    \   service.  It is beyond the scope of this memo to describe X.25 in any\n  \
    \ detail, but two observations are pertinent:  First, X.25 is offered\n   as a\
    \ wide-area network service by many commercial and (non-U.S.)\n   government carriers.\
    \  Second, the TP0/X.25 combination is very\n   popular in Europe and other communities\
    \ with a strong PTT-oriented\n   market.\n   It has been argued that the DoD Transmission\
    \ Control Protocol (TCP)\n   [MIL1778, RFC793] can also be seen as providing a\
    \ connection-oriented\n   and error-detecting network service.  This remark is\
    \ controversial in\n   the sense that the TCP is actually an end-to-end transport\
    \ protocol\n   and not a network protocol; the DoD Internet Protocol (IP) [MIL1777,\n\
    \   RFC791] is the network protocol in the DoD Protocol Suite.  However,\n   one\
    \ of the advantages of layering is that, when properly architected,\n   it enhances\
    \ flexibility.  This notion led to the development of\n   [RFC983] and its successor\
    \ [RFC1006], which described how to provide\n   the ISO transport service on top\
    \ of TCP/IP internetworks.\n"
- title: 3.  The Model
  contents:
  - "3.  The Model\n   The model is simple.  The method for transmitting TP0 packets\
    \ using\n   TCP is defined in [RFC1006].  The method for transmitting TP0 packets\n\
    \   using X.25 is defined in [ISO8878].  The TP0 bridge merely has to\n   convert\
    \ between the two forms.  As with most protocols, there are\n   three well-defined\
    \ phases of interaction:  connection establishment,\n   data transfer, and connection\
    \ release.  The method of operation for\n   the data transfer and connection release\
    \ phases are quite similar\n   when using TP0 over either network service.  Hence\
    \ the resulting\n   protocol mapping functions are quite simple.\n   The difficult\
    \ part is in managing connection establishment.  A small\n   \"registration\"\
    \ protocol is used to aid the protocol mapping function\n   for the connection\
    \ establishment phase.  The protocol performs one of\n   two operations: an X.25\
    \ address is specified for an outgoing call, or\n   an X.25 address is specified\
    \ to accept incoming calls.\n   This memo ignores the problems of authentication\
    \ and authorization.\n   These areas are presumed to be a local matter.  It is\
    \ worth pointing\n   out that running such a TP0 bridge with unrestricted access\
    \ allows\n   any TCP/IP host to lay claim to part of the TP0 bridge host's X.25\n\
    \   address space.  This address space is limited and will not support\n   many\
    \ foreign hosts registering listening addresses.\n   The protocol makes no attempt\
    \ to report errors other than those\n   transmitted by the TP0 protocol.  To attempt\
    \ such additions would\n   require other mechanism such as a new protocol layer\
    \ or equivalent.\n   The chosen model is kept as simple as possible with network\
    \ errors\n   being ignored if recoverable, and resulting in disconnection\n  \
    \ otherwise.  This actually enhances the transparency of the gateway,\n   in that\
    \ the only gateway specific functions are collected together in\n   the connection\
    \ phase.  The resultant circuit, once established, is\n   indistinguishable from\
    \ an [RFC1006] implementation.\n"
- title: 4.  The Protocol
  contents:
  - "4.  The Protocol\n   The protocol is quite simple.  A successful connection establishment\n\
    \   phase results in two network connections being established.  TP0 is\n   used\
    \ over each network connection, though one network connection is\n   provided\
    \ by X.25 and the other by the TCP.\n   During the data transfer phase, the TP0\
    \ bridge reads TPDUs (transport\n   protocol data units) from one network connection\
    \ and writes them to\n   the other network connection.  During the connection\
    \ release phase,\n   when one network indicates a disconnect, the bridge disconnects\
    \ the\n   other network connection; or in the case of simultaneous network\n \
    \  disconnects, no action is taken by the bridge.\n   As expected, the method\
    \ of operation for the connection establishment\n   phase is more complex.  Connection\
    \ establishment is driven by a\n   registration procedure which is initiated by\
    \ a TCP/IP host initiating\n   a connection with the TP0 bridge.  This procedure\
    \ takes on one of two\n   \"flavors\" depending on whether the initiating host\
    \ wishes to\n   establish a connection to a particular X.25 address or listen\
    \ for\n   connections on a particular X.25 address.\n   The initiating host initiates\
    \ the registration procedure by\n   establishing a connection to TCP port 146\
    \ on the TP0 bridge.  It then\n   sends one octet which indicates the flavor the\
    \ registration procedure\n   will take:\n          0 1 2 3 4 5 6 7\n         +-+-+-+-+-+-+-+-+\n\
    \         |   function    |\n         +-+-+-+-+-+-+-+-+\n   The value of this\
    \ octet is a binary-encoded value:\n           value   meaning\n           -----\
    \   -------\n             0     illegal\n             1     connect to a particular\
    \ X.25 host\n             2     listen for incoming X.25 connections\n       \
    \    3-255   reserved\n   The method of operation for the registration procedure\
    \ now diverges,\n   based on the function chosen.\n   FUNCTION 1: CONNECTION THROUGH\
    \ THE TP0 BRIDGE\n      The X.25 address to call is now sent by the initiating\
    \ host to the\n      TP0 bridge.  The format of an X.25 address is described in\
    \ Section\n      5 of this memo.\n      The TP0 bridge now attempts to call the\
    \ specified address.  If\n      this succeeds, the connection establishment phase\
    \ has succeeded\n      and the data transfer phase is begun.  If the call fails,\
    \ then the\n      TP0 bridge closes the TCP connection.\n   FUNCTION 2: ESTABLISHING\
    \ A LISTENING ADDRESS\n      The X.25 address, which should be a subaddress of\
    \ the TP0 bridge's\n      X.25 address, on which to listen for incoming X.25 connections\
    \ is\n      now sent by the initiating host to the TP0 bridge.\n      Next, the\
    \ initiating host sends an IP address and TCP port number\n      which will service\
    \ incoming calls for the indicated X.25 address.\n      The format of a TCP/IP\
    \ address is described in Section 6 of this\n      memo.\n      The TP0 bridge\
    \ now listens, on behalf of the initiating host, on\n      the indicated X.25\
    \ address.\n      If an incoming call is received, a TCP connection is established\n\
    \      to the corresponding TCP/IP address.  If this connection is\n      successful,\
    \ then the connection establishment phase has succeeded\n      and the data transfer\
    \ phase is begun.  If the connection fails,\n      the incoming call is refused.\n\
    \      The TCP/IP connection between the initiating host and the TP0\n      bridge\
    \ is a \"heartbeat\" connection for the registration function.\n      If this\
    \ connection closes, the TP0 bridge assumes hat the\n      listening function\
    \ has been terminated by the initiating host, and\n      consequently, the TP0\
    \ bridge no longer listens for incoming calls\n      on the indicated X.25 address.\
    \  If such a facility were not\n      present, then the indicated X.25 address\
    \ could not be recovered\n      for reuse.\n"
- title: 5.  Format of X.25 Addresses
  contents:
  - "5.  Format of X.25 Addresses\n   A standardized octet-encoding of X.25 addresses\
    \ is used by the\n   protocol described in this memo.  The encoding has a fixed-length\
    \ of\n   68 octets and contains 10 fields:\n    0                   1        \
    \           2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        address  type          | X.121 address        ...      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      ...      |      ...      |      ...      |      ...      |\n   |  \
    \    ...      |      ...      |      ...      |      ...      |\n   |      ...\
    \      |      ...      |      ...      |      ...      |\n   |      ...      |\
    \      ...      | X.121 length  | Protocol ID   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      ...      |      ...      |      ...      | PID length    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Call User Data field          |      ...      |      ...      |\n   |  \
    \    ...      |      ...      |      ...      |      ...      |\n   |      ...\
    \      |      ...      |      ...      |      ...      |\n   |      ...      |\
    \      ...      |      ...      |      ...      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | CUDF length   |  X.25 Facilities     ...      |      ...      |\n   |  \
    \    ...      |      ...      |      ...      |Facility Length|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are:\n   address type (2 octets) - a binary-encoded value in network\
    \ order\n   indicating the address type. The value 3 is used for X.25 addressing\n\
    \   of this format.\n   X.121 address (16 octets) - the ascii-encoded value of\
    \ the X.121\n   address.\n   address length (1 octet) - a binary-encoded value\
    \ in network order\n   indicating how many octets of the X.121 address are meaningful.\n\
    \   Protocol ID (4 octets) - meaningful at the remote system.\n   Protocol ID\
    \ length (1 octet) - a binary-encoded value indicating the\n   number of protocol\
    \ ID octets are meaningful.\n   User Data (16 octets) - meaningful at the remote\
    \ system.\n   User Data Length (1 octet) - a binary-encoded value indicating the\n\
    \   number of User Data octets are meaningful.\n   X.25 Facilities (6 octets)\
    \ - meaningful at the remote system.\n   X.25 Facilities length (1 octet) - a\
    \ binary-encoded value indicating\n   the number of Facility octets are meaningful.\n"
- title: 6.  Format of TCP/IP Addresses
  contents:
  - "6.  Format of TCP/IP Addresses\n   A standardized octet-encoding of TCP/IP addresses\
    \ is used by the\n   protocol described in this memo.  The encoding has a fixed-length\
    \ of\n   16 octets and contains 4 fields:\n    0                   1         \
    \          2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         address  type         |           TCP  port           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           IP address                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    reserved   |      ...      |      ...      |      ...      |\n   |  \
    \    ...      |      ...      |      ...      |      ...      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields are:\n   address type (2 octets) - a binary-encoded value in network\
    \ order.\n   The value 2 is used.\n   TCP port (2 octets) - a binary-encoded value\
    \ in network order.\n   IP address (4 octets) - a binary-encoded value in network\
    \ order.\n   reserved (16 octets) - null-value padding.\n"
- title: Comments
  contents:
  - "Comments\n   At present, the structure of the X.25 address and the internet\n\
    \   address are rather ad-hoc and specific to the UNIX operating system.\n   These\
    \ structures may change in the future as experience is gained in\n   the use of\
    \ the TP0 bridge.\n"
- title: References
  contents:
  - "References\n     [ISO8072]  Information processing systems -- Open systems\n\
    \                interconnection, \"Transport Service Definition\",\n        \
    \        International Standard, June, 1985.\n     [ISO8073]  Information processing\
    \ systems -- Open systems\n                interconnection, \"Transport Protocol\
    \ Specification\",\n                International Standard, July, 1986.\n    \
    \ [ISO8208]  Information processing systems, \"X.25 package level\n          \
    \      protocol for data terminal equipment\", Draft\n                International\
    \ Standard, July, 1985.\n     [ISO8878]  Information processing systems -- Data\
    \ communications,\n                Use of X.25 to provide the OSI connection-mode\
    \ network\n                service\", Draft International Standard, January, 1987.\n\
    \     [MIL1777]  Military Standard 1777, \"Internet Protocol\".\n     [MIL1778]\
    \  Military Standard 1778, \"Transmission Control Protocol\".\n     [RFC791] \
    \ Postel, J., \"Internet Protocol - DARPA Internet Program\n               Protocol\
    \ Specification\", RFC 791, USC/ISI,\n               September 1981.\n     [RFC793]\
    \  Postel, J., \"Transmission Control Protocol - DARPA\n               Internet\
    \ Program Protocol Specification\", RFC 793,\n               USC/ISI, September\
    \ 1981.\n     [RFC983]  Cass, D., and M. Rose, \"ISO Transport Services on Top\n\
    \               of the TCP\", RFC 983, NTRC, April 1986.\n     [RFC1006]  Rose,\
    \ M., and D. Cass, \"ISO Transport Service on Top\n                of the TCP\
    \ Version: 3\", NTRC, May 1987.\n     [X.25]  CCITT Recommendation X.25, \"Interface\
    \ Between Data\n             Terminal Equipment (DTE) and Data Circuit Terminating\n\
    \             Equipment (DCE) for Terminals Operating in the Packet\n        \
    \     Mode on Public Data Networks,\" International Telegraph\n             and\
    \ Telephone Consultative Committee Yellow book, Vol.\n             VIII.2, Geneva,\
    \ 1981.\n"
- title: 'Authors'' Addresses:'
  contents:
  - "Authors' Addresses:\n   Julian P. Onions\n   Computer Science Department\n  \
    \ Nottingham University\n   University Park\n   Nottingham, NG7 2RD\n   United\
    \ Kingdom\n   EMail: JPO@CS.NOTT.AC.UK\n   Marshall Rose\n   The Wollongong Group\n\
    \   1129 San Antonio Road\n   Palo Alto, CA 94303\n   Phone: (415) 962-7100\n\
    \   EMail: mrose@TWG.COM\n"
