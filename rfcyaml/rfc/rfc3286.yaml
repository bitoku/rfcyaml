- title: __initial_text__
  contents:
  - '   An Introduction to the Stream Control Transmission Protocol (SCTP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a high level introduction to the capabilities\n\
    \   supported by the Stream Control Transmission Protocol (SCTP).  It is\n   intended\
    \ as a guide for potential users of SCTP as a general purpose\n   transport protocol.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Stream Control Transmission Protocol (SCTP) is a new\
    \ IP transport\n   protocol, existing at an equivalent level with UDP (User Datagram\n\
    \   Protocol) and TCP (Transmission Control Protocol), which provide\n   transport\
    \ layer functions to many Internet applications.  SCTP has\n   been approved by\
    \ the IETF as a Proposed Standard [1].  The error\n   check algorithm has since\
    \ been modified [2].  Future changes and\n   updates will be reflected in the\
    \ IETF RFC index.\n   Like TCP, SCTP provides a reliable transport service, ensuring\
    \ that\n   data is transported across the network without error and in sequence.\n\
    \   Like TCP, SCTP is a session-oriented mechanism, meaning that a\n   relationship\
    \ is created between the endpoints of an SCTP association\n   prior to data being\
    \ transmitted, and this relationship is maintained\n   until all data transmission\
    \ has been successfully completed.\n   Unlike TCP, SCTP provides a number of functions\
    \ that are critical for\n   telephony signaling transport, and at the same time\
    \ can potentially\n   benefit other applications needing transport with additional\n\
    \   performance and reliability.  The original framework for the SCTP\n   definition\
    \ is described in [3].\n"
- title: 2. Basic SCTP Features
  contents:
  - "2. Basic SCTP Features\n   SCTP is a unicast protocol, and supports data exchange\
    \ between\n   exactly 2 endpoints, although these may be represented by multiple\
    \ IP\n   addresses.\n   SCTP provides reliable transmission, detecting when data\
    \ is\n   discarded, reordered, duplicated or corrupted, and retransmitting\n \
    \  damaged data as necessary.  SCTP transmission is full duplex.\n   SCTP is message\
    \ oriented and supports framing of individual message\n   boundaries.  In comparison,\
    \ TCP is byte oriented and does not\n   preserve any implicit structure within\
    \ a transmitted byte stream\n   without enhancement.\n   SCTP is rate adaptive\
    \ similar to TCP, and will scale back data\n   transfer to the prevailing load\
    \ conditions in the network.  It is\n   designed to behave cooperatively with\
    \ TCP sessions attempting to use\n   the same bandwidth.\n"
- title: 3. SCTP Multi-Streaming Feature
  contents:
  - "3. SCTP Multi-Streaming Feature\n   The name Stream Control Transmission Protocol\
    \ is derived from the\n   multi-streaming function provided by SCTP.  This feature\
    \ allows data\n   to be partitioned into multiple streams that have the property\
    \ of\n   independently sequenced delivery, so that message loss in any one\n \
    \  stream will only initially affect delivery within that stream, and\n   not\
    \ delivery in other streams.\n   In contrast, TCP assumes a single stream of data\
    \ and ensures that\n   delivery of that stream takes place with byte sequence\
    \ preservation.\n   While this is desirable for delivery of a file or record,\
    \ it causes\n   additional delay when message loss or sequence error occurs within\n\
    \   the network.  When this happens, TCP must delay delivery of data\n   until\
    \ the correct sequencing is restored, either by receipt of an\n   out-of-sequence\
    \ message, or by retransmission of a lost message.\n   For a number of applications,\
    \ the characteristic of strict sequence\n   preservation is not truly necessary.\
    \  In telephony signaling, it is\n   only necessary to maintain sequencing of\
    \ messages that affect the\n   same resource (e.g., the same call, or the same\
    \ channel).  Other\n   messages are only loosely correlated and can be delivered\
    \ without\n   having to maintain overall sequence integrity.\n   Another example\
    \ of possible use of multi-streaming is the delivery of\n   multimedia documents,\
    \ such as a web page, when done over a single\n   session.  Since multimedia documents\
    \ consist of objects of different\n   sizes and types, multi-streaming allows\
    \ transport of these components\n   to be partially ordered rather than strictly\
    \ ordered, and may result\n   in improved user perception of transport.\n   At\
    \ the same time, transport is done within a single SCTP association,\n   so that\
    \ all streams are subjected to a common flow and congestion\n   control mechanism,\
    \ reducing the overhead required at the transport\n   level.\n   SCTP accomplishes\
    \ multi-streaming by creating independence between\n   data transmission and data\
    \ delivery.  In particular, each payload\n   DATA \"chunk\" in the protocol uses\
    \ two sets of sequence numbers, a\n   Transmission Sequence Number that governs\
    \ the transmission of\n   messages and the detection of message loss, and the\
    \ Stream ID/Stream\n   Sequence Number pair, which is used to determine the sequence\
    \ of\n   delivery of received data.\n   This independence of mechanisms allows\
    \ the receiver to determine\n   immediately when a gap in the transmission sequence\
    \ occurs (e.g., due\n   to message loss), and also whether or not messages received\
    \ following\n   the gap are within an affected stream.  If a message is received\n\
    \   within the affected stream, there will be a corresponding gap in the\n   Stream\
    \ Sequence Number, while messages from other streams will not\n   show a gap.\
    \  The receiver can therefore continue to deliver messages\n   to the unaffected\
    \ streams while buffering messages in the affected\n   stream until retransmission\
    \ occurs.\n"
- title: 4. SCTP Multi-Homing Feature
  contents:
  - "4. SCTP Multi-Homing Feature\n   Another core feature of SCTP is multi-homing,\
    \ or the ability for a\n   single SCTP endpoint to support multiple IP addresses.\
    \  The benefit\n   of multi-homing is potentially greater survivability of the\
    \ session\n   in the presence of network failures.  In a conventional single-homed\n\
    \   session, the failure of a local LAN access can isolate the end\n   system,\
    \ while failures within the core network can cause temporary\n   unavailability\
    \ of transport until the IP routing protocols can\n   reconverge around the point\
    \ of failure.  Using multi-homed SCTP,\n   redundant LANs can be used to reinforce\
    \ the local access, while\n   various options are possible in the core network\
    \ to reduce the\n   dependency of failures for different addresses.  Use of addresses\n\
    \   with different prefixes can force routing to go through different\n   carriers,\
    \ for example, route-pinning techniques or even redundant\n   core networks can\
    \ also be used if there is control over the network\n   architecture and protocols.\n\
    \   In its current form, SCTP does not do load sharing, that is, multi-\n   homing\
    \ is used for redundancy purposes only.  A single address is\n   chosen as the\
    \ \"primary\" address and is used as the destination for\n   all DATA chunks for\
    \ normal transmission.  Retransmitted DATA chunks\n   use the alternate address(es)\
    \ to improve the probability of reaching\n   the remote endpoint, while continued\
    \ failure to send to the primary\n   address ultimately results in the decision\
    \ to transmit all DATA\n   chunks to the alternate until heartbeats can reestablish\
    \ the\n   reachability of the primary.\n   To support multi-homing, SCTP endpoints\
    \ exchange lists of addresses\n   during initiation of the association.  Each\
    \ endpoint must be able to\n   receive messages from any of the addresses associated\
    \ with the remote\n   endpoint; in practice, certain operating systems may utilize\n\
    \   available source addresses in round robin fashion, in which case\n   receipt\
    \ of messages from different source addresses will be the\n   normal case.  A\
    \ single port number is used across the entire address\n   list at an endpoint\
    \ for a specific session.\n   In order to reduce the potential for security issues,\
    \ it is required\n   that some response messages be sent specifically to the source\n\
    \   address in the message that caused the response.  For example, when\n   the\
    \ server receives an INIT chunk from a client to initiate an SCTP\n   association,\
    \ the server always sends the response INIT ACK chunk to\n   the source address\
    \ that was in the IP header of the INIT.\n"
- title: 5. Features of the SCTP Initiation Procedure
  contents:
  - "5. Features of the SCTP Initiation Procedure\n   The SCTP Initiation Procedure\
    \ relies on a 4-message sequence, where\n   DATA can be included on the 3rd and\
    \ 4th messages of the sequence, as\n   these messages are sent when the association\
    \ has already been\n   validated.  A \"cookie\" mechanism has been incorporated\
    \ into the\n   sequence to guard against some types of denial of service attacks.\n"
- title: 5.1 Cookie Mechanism
  contents:
  - "5.1 Cookie Mechanism\n   The \"cookie\" mechanism guards specifically against\
    \ a blind attacker\n   generating INIT chunks to try to overload the resources\
    \ of an SCTP\n   server by causing it to use up memory and resources handling\
    \ new INIT\n   requests.  Rather than allocating memory for a Transmission Control\n\
    \   Block (TCB), the server instead creates a Cookie parameter with the\n   TCB\
    \ information, together with a valid lifetime and a signature for\n   authentication,\
    \ and sends this back in the INIT ACK.  Since the INIT\n   ACK always goes back\
    \ to the source address of the INIT, the blind\n   attacker will not get the Cookie.\
    \  A valid SCTP client will get the\n   Cookie and return it in the COOKIE ECHO\
    \ chunk, where the SCTP server\n   can validate the Cookie and use it to rebuild\
    \ the TCB.  Since the\n   server creates the Cookie, only it needs to know the\
    \ format and\n   secret key, this is not exchanged with the client.\n   Otherwise,\
    \ the SCTP Initiation Procedure follows many TCP\n   conventions, so that the\
    \ endpoints exchange receiver windows, initial\n   sequence numbers, etc.  In\
    \ addition to this, the endpoints may\n   exchange address lists as discussed\
    \ above, and also mutually confirm\n   the number of streams to be opened on each\
    \ side.\n"
- title: 5.2 INIT Collision Resolution
  contents:
  - "5.2 INIT Collision Resolution\n   Multi-homing adds to the potential that messages\
    \ will be received out\n   of sequence or with different address pairs.  This\
    \ is a particular\n   concern during initiation of the association, where without\n\
    \   procedures for resolving the collision of messages, you may easily\n   end\
    \ up with multiple parallel associations between the same\n   endpoints.  To avoid\
    \ this, SCTP incorporates a number of procedures\n   to resolve parallel initiation\
    \ attempts into a single association.\n"
- title: 6. SCTP DATA Exchange Features
  contents:
  - "6. SCTP DATA Exchange Features\n   DATA chunk exchange in SCTP follows TCP's\
    \ Selective ACK procedure.\n   Receipt of DATA chunks is acknowledged by sending\
    \ SACK chunks, which\n   indicate not only the cumulative Transmission Sequence\
    \ Number (TSN)\n   range received, but also any non-cumulative TSNs, implying\
    \ gaps in\n   the received TSN sequence.  Following TCP procedures, SACKs are\
    \ sent\n   using the \"delayed ack\" method, normally one SACK per every other\n\
    \   received packet, but with an upper limit on the delay between SACKs\n   and\
    \ an increase to once per received packet when there are gaps\n   detected.\n\
    \   Flow and Congestion Control follow TCP algorithms.  The advertised\n   receive\
    \ window indicates buffer occupancy at the receiver, while a\n   per-path congestion\
    \ window is maintained to manage the packets in\n   flight.  Slow start, Congestion\
    \ avoidance, Fast recovery and Fast\n   retransmit are incorporated into the procedures\
    \ as described in RFC\n   2581, with the one change being that the endpoints must\
    \ manage the\n   conversion between bytes sent and received and TSNs sent and\n\
    \   received, since TSN is per chunk rather than per byte.\n   The application\
    \ can specify a lifetime for data to be transmitted, so\n   that if the lifetime\
    \ has expired and the data has not yet been\n   transmitted, it can be discarded\
    \ (e.g., time-sensitive signaling\n   messages).  If the data has been transmitted,\
    \ it must continue to be\n   delivered to avoid creating a hole in the TSN sequence.\n"
- title: 7. SCTP Shutdown Features
  contents:
  - "7. SCTP Shutdown Features\n   SCTP Shutdown uses a 3-message procedure to allow\
    \ graceful shutdown,\n   where each endpoint has confirmation of the DATA chunks\
    \ received by\n   the remote endpoint prior to completion of the shutdown.  An\
    \ Abort\n   procedure is also provided for error cases when an immediate shutdown\n\
    \   must take place.\n   Note that SCTP does not support the function of a \"\
    half-open\"\n   connection as can occur in TCP, when one side indicates that it\
    \ has\n   no more data to send, but the other side can continue to send data\n\
    \   indefinitely.  SCTP assumes that once the shutdown procedure begins,\n   both\
    \ sides will stop sending new data across the association, and\n   only need to\
    \ clear up acknowledgements of previously sent data.\n"
- title: 8. SCTP Message Format
  contents:
  - "8. SCTP Message Format\n   The SCTP Message includes a common header plus one\
    \ or more chunks,\n   which can be control or data.  The common header has source\
    \ and\n   destination port numbers to allow multiplexing of different SCTP\n \
    \  associations at the same address, a 32-bit verification tag that\n   guards\
    \ against insertion of an out-of-date or false message into the\n   SCTP association,\
    \ and a 32-bit checksum (this has been modified to\n   use the CRC-32c polynomial\
    \ [2]) for error detection.\n   Each chunk includes chunk type, flag field, length\
    \ and value.\n   Control chunks incorporate different flags and parameters depending\n\
    \   on the chunk type.  DATA chunks in particular incorporate flags for\n   control\
    \ of segmentation and reassembly, and parameters for the TSN,\n   Stream ID and\
    \ Stream Sequence Number, and a Payload Protocol\n   Identifier.\n   The Payload\
    \ Protocol ID has been included for future flexibility.  It\n   is envisioned\
    \ that the functions of protocol identification and port\n   number multiplexing\
    \ will not be as closely linked in the future as\n   they are in current usage.\
    \  Payload Protocol ID will allow the\n   protocol being carried by SCTP to be\
    \ identified independent of the\n   port numbers being used.\n   The SCTP message\
    \ format naturally allows support of bundling of\n   multiple DATA and control\
    \ chunks in a single message, to improve\n   transport efficiency.  Use of bundling\
    \ is controllable by the\n   application, so that bundling of initial transmission\
    \ can be\n   prohibited.  Bundling will naturally occur on retransmission of DATA\n\
    \   chunks, to further reduce any chance of congestion.\n"
- title: 9. Error Handling
  contents:
  - '9. Error Handling

    '
- title: 9.1 Retransmission
  contents:
  - "9.1 Retransmission\n   Retransmission of DATA chunks occurs from either (a) timeout\
    \ of the\n   retransmission timer; or (b) receipt of SACKs indicating the DATA\n\
    \   chunk has not been received.  To reduce the potential for congestion,\n  \
    \ the rate of retransmission of DATA chunks is limited.  The\n   retransmission\
    \ timeout (RTO) is adjusted based on estimates of the\n   round trip delay and\
    \ backs off exponentially as message loss\n   increases.\n   In an active association\
    \ with fairly constant DATA transmission,\n   SACKs are more likely to cause retransmission\
    \ than the timeout.  To\n   reduce the chance of an unnecessary retransmission,\
    \ a 4 SACK rule is\n   used, so that retransmission only occurs on receipt of\
    \ the 4th SACK\n   that indicates that the chunk is missing.  This is intended\
    \ to avoid\n   retransmits due to normal occurrences such as packets received\
    \ out of\n   sequence.\n"
- title: 9.2 Path Failure
  contents:
  - "9.2 Path Failure\n   A count is maintained of the number of retransmissions to\
    \ a\n   particular destination address without successful acknowledgement.\n \
    \  When this count exceeds a configured maximum, the address is declared\n   inactive,\
    \ notification is given to the application, and the SCTP\n   begins to use an\
    \ alternate address for the sending of DATA chunks.\n   Also, Heartbeat chunks\
    \ are sent periodically to all idle destinations\n   (i.e., alternate addresses),\
    \ and a counter is maintained on the\n   number of Heartbeats sent to an inactive\
    \ destination without receipt\n   of a corresponding Heartbeat Ack.  When this\
    \ counter exceeds a\n   configured maximum, that destination address is also declared\n\
    \   inactive.\n   Heartbeats continue to be sent to inactive destination addresses\n\
    \   until an Ack is received, at which point the address can be made\n   active\
    \ again.  The rate of sending Heartbeats is tied to the RTO\n   estimation plus\
    \ an additional delay parameter that allows Heartbeat\n   traffic to be tailored\
    \ according to the needs of the user\n   application.\n"
- title: 9.3 Endpoint Failure
  contents:
  - "9.3 Endpoint Failure\n   A count is maintained across all destination addresses\
    \ on the number\n   of retransmits or Heartbeats sent to the remote endpoint without\
    \ a\n   successful Ack.  When this exceeds a configured maximum, the endpoint\n\
    \   is declared unreachable, and the SCTP association is closed.\n"
- title: 10. API
  contents:
  - "10. API\n   The specification includes a model of the primitives exchanged\n\
    \   between the application and the SCTP layer, intended as informational\n  \
    \ material rather than a formal API statement.  A socket-based API is\n   being\
    \ defined to simplify migration of TCP or UDP applications to the\n   use of SCTP.\n"
- title: 11. Security Considerations
  contents:
  - "11. Security Considerations\n   In addition to the verification tag and cookie\
    \ mechanisms, SCTP\n   specifies the use of IPSec if strong security and integrity\n\
    \   protection is required.  The SCTP specification does not itself\n   define\
    \ any new security protocols or procedures.\n   Extensions to IPSec are under\
    \ discussion to reduce the overhead\n   required to support multi-homing.  Also,\
    \ work is in progress on the\n   use of Transport Layer Security (TLS) over SCTP\
    \ [4].\n"
- title: 12. Extensions
  contents:
  - "12. Extensions\n   The SCTP format allows new chunk types, flags and parameter\
    \ fields to\n   be defined as extensions to the protocol.  Any extensions must\
    \ be\n   based on standard agreements within the IETF, as no vendor-specific\n\
    \   extensions are supported in the protocol.\n   Chunk Type values are organized\
    \ into four ranges to allow extensions\n   to be made with a pre-defined procedure\
    \ for responding if a new Chunk\n   Type is not recognized at the remote endpoint.\
    \  Responses include:\n   whole packet discard; packet discard with reporting;\
    \ ignoring the\n   chunk; ignoring with reporting.  Similar pre-defined responses\
    \ are\n   specified for unrecognized Parameter Type values.\n   Chunk Parameter\
    \ Type values are in principle independent ranges for\n   each Chunk Type.  In\
    \ practice, the values defined in the SCTP\n   specification have been coordinated\
    \ so that a particular parameter\n   type will have the same Chunk Parameter Type\
    \ value across all Chunk\n   Types.  Further experience will determine if this\
    \ alignment needs to\n   be maintained or formalized.\n"
- title: 13. Informative References
  contents:
  - "13. Informative References\n   [1] Stewart, R., Xie, Q., Morneault, K., Sharp,\
    \ C., Schwarzbauer, H.,\n       Taylor, T., Rytina, I., Kalla, M., Zhang, L. and\
    \ V. Paxson,\n       \"Stream Control Transmission Protocol\", RFC 2960, October\
    \ 2000.\n   [2] Stewart, Sharp, et. al., \"SCTP Checksum Change\", Work in\n \
    \      Progress.\n   [3] Ong, L., Rytina, I., Garcia, M., Schwarzbauer, H., Coene,\
    \ L.,\n       Lin, H., Juhasz, I., Holdrege, M. and C. Sharp, \"Framework\n  \
    \     Architecture for Signaling Transport\", RFC 2719, October 1999.\n   [4]\
    \ Jungmeier, Rescorla and Tuexen, \"TLS Over SCTP\", Work in\n       Progress.\n"
- title: 14. Authors' Addresses
  contents:
  - "14. Authors' Addresses\n   Lyndon Ong\n   Ciena Corporation\n   10480 Ridgeview\
    \ Drive\n   Cupertino, CA 95014\n   EMail: lyong@ciena.com\n   John Yoakum\n \
    \  Emerging Opportunities\n   Nortel Networks\n   EMail: yoakum@nortelnetworks.com\n"
- title: 15.  Full Copyright Statement
  contents:
  - "15.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
