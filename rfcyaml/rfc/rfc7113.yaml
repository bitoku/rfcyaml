- title: __initial_text__
  contents:
  - '  Implementation Advice for IPv6 Router Advertisement Guard (RA-Guard)

    '
- title: Abstract
  contents:
  - "Abstract\n   The IPv6 Router Advertisement Guard (RA-Guard) mechanism is commonly\n\
    \   employed to mitigate attack vectors based on forged ICMPv6 Router\n   Advertisement\
    \ messages.  Many existing IPv6 deployments rely on\n   RA-Guard as the first\
    \ line of defense against the aforementioned\n   attack vectors.  However, some\
    \ implementations of RA-Guard have been\n   found to be prone to circumvention\
    \ by employing IPv6 Extension\n   Headers.  This document describes the evasion\
    \ techniques that affect\n   the aforementioned implementations and formally updates\
    \ RFC 6105,\n   such that the aforementioned RA-Guard evasion vectors are eliminated.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7113.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Evasion Techniques for Some RA-Guard Implementations\
    \ . . . . .  3\n     2.1.  Attack Vector Based on IPv6 Extension Headers  . .\
    \ . . . .  3\n     2.2.  Attack Vector Based on IPv6 Fragmentation  . . . . .\
    \ . . .  4\n   3.  RA-Guard Implementation Advice . . . . . . . . . . . . . .\
    \ . .  6\n   4.  Other Implications . . . . . . . . . . . . . . . . . . . . .\
    \ .  9\n   5.  Security Considerations  . . . . . . . . . . . . . . . . . . .\
    \  9\n   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 10\n\
    \   7.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n  \
    \   7.1.  Normative References . . . . . . . . . . . . . . . . . . . 10\n    \
    \ 7.2.  Informative References . . . . . . . . . . . . . . . . . . 11\n   Appendix\
    \ A.  Assessment Tools  . . . . . . . . . . . . . . . . . . 12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IPv6 Router Advertisement Guard (RA-Guard) is a mitigation\
    \ technique\n   for attack vectors based on ICMPv6 Router Advertisement [RFC4861]\n\
    \   messages.  [RFC6104] describes the problem statement of \"Rogue IPv6\n   Router\
    \ Advertisements\", and [RFC6105] specifies the \"IPv6 Router\n   Advertisement\
    \ Guard\" functionality.\n   The concept behind RA-Guard is that a Layer-2 (L2)\
    \ device filters\n   ICMPv6 Router Advertisement messages, according to a number\
    \ of\n   different criteria.  The most basic filtering criterion is that\n   Router\
    \ Advertisement messages are discarded by the L2 device unless\n   they are received\
    \ on a specified port of the L2 device.  Clearly, the\n   effectiveness of RA-Guard\
    \ relies on the ability of the L2 device to\n   identify ICMPv6 Router Advertisement\
    \ messages.\n   Some popular RA-Guard implementations have been found to be easy\
    \ to\n   circumvent by employing IPv6 Extension Headers [CPNI-IPv6].  This\n \
    \  document describes such evasion techniques and provides advice to\n   RA-Guard\
    \ implementers such that the aforementioned evasion vectors\n   can be eliminated.\n\
    \   It should be noted that the previously mentioned techniques could\n   also\
    \ be exploited to evade network monitoring tools such as NDPMon\n   [NDPMon],\
    \ ramond [ramond], and rafixd [rafixd], and could probably be\n   exploited to\
    \ perform stealth DHCPv6 [RFC3315] attacks.\n"
- title: 2.  Evasion Techniques for Some RA-Guard Implementations
  contents:
  - "2.  Evasion Techniques for Some RA-Guard Implementations\n   The following subsections\
    \ describe two different vectors that have\n   been found to be effective for\
    \ the evasion of popular implementations\n   of RA-Guard.  Section 2.1 describes\
    \ an attack vector based on the use\n   of IPv6 Extension Headers with ICMPv6\
    \ Router Advertisement messages,\n   which may be used to circumvent the RA-Guard\
    \ protection of those\n   implementations that fail to process an entire IPv6\
    \ header chain when\n   trying to identify the ICMPv6 Router Advertisement messages.\n\
    \   Section 2.2 describes an attack method based on the use of IPv6\n   fragmentation,\
    \ possibly in conjunction with the use of IPv6 Extension\n   Headers.  This later\
    \ vector has been found to be effective against\n   all existing implementations\
    \ of RA-Guard.\n"
- title: 2.1.  Attack Vector Based on IPv6 Extension Headers
  contents:
  - "2.1.  Attack Vector Based on IPv6 Extension Headers\n   While there is currently\
    \ no legitimate use for IPv6 Extension Headers\n   in ICMPv6 Router Advertisement\
    \ messages, Neighbor Discovery [RFC4861]\n   implementations allow the use of\
    \ Extension Headers with these\n   messages, by simply ignoring the received options.\
    \  Some RA-Guard\n   implementations try to identify ICMPv6 Router Advertisement\
    \ messages\n   by simply looking at the \"Next Header\" field of the fixed IPv6\n\
    \   header, rather than following the entire header chain.  As a result,\n   such\
    \ implementations fail to identify any ICMPv6 Router Advertisement\n   messages\
    \ that include any Extension Headers (for example, a Hop-by-\n   Hop Options header,\
    \ a Destination Options header, etc.), and can be\n   easily circumvented.\n \
    \  The following figure illustrates the structure of ICMPv6 Router\n   Advertisement\
    \ messages that implement this evasion technique:\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |NH=60|       |NH=58|        |                                |\n     \
    \ +-+-+-+       +-+-+-+        +                                +\n      | IPv6\
    \ Header |  Dst Opt Hdr |  ICMPv6 Router Advertisement   |\n      +          \
    \   +              +                                +\n      |             | \
    \             |                                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 2.2.  Attack Vector Based on IPv6 Fragmentation
  contents:
  - "2.2.  Attack Vector Based on IPv6 Fragmentation\n   This section presents a different\
    \ attack vector, which has been found\n   to be effective against all implementations\
    \ of RA-Guard.  The basic\n   idea behind this attack vector is that if the forged\
    \ ICMPv6 Router\n   Advertisement is fragmented into at least two fragments, the\
    \ L2\n   device implementing RA-Guard would be unable to identify the attack\n\
    \   packet and would thus fail to block it.\n   A first variant of this attack\
    \ vector would be an original ICMPv6\n   Router Advertisement message preceded\
    \ with a Destination Options\n   header, which results in two fragments.  The\
    \ following figure\n   illustrates the \"original\" attack packet, prior to fragmentation,\
    \ and\n   the two resulting fragments that are actually sent as part of the\n\
    \   attack.\n       Original Packet:\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |NH=60|       |NH=58|                           |           |\n      \
    \ +-+-+-+       +-+-+-+                           +           +\n       | IPv6\
    \ Header |          Dst Opt Hdr            | ICMPv6 RA |\n       +           \
    \  +                                 +           +\n       |             |   \
    \                              |           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       First Fragment:\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |NH=44|       |NH=60|       |NH=58|                 |\n       +-+-+-+\
    \       +-+-+-+       +-+-+-+                 +\n       | IPv6 Header |   Frag\
    \ Hdr  |      Dst Opt Hdr      |\n       +             +             +       \
    \                +\n       |             |             |                     \
    \  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Second\
    \ Fragment:\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |NH=44|       |NH=60|       |             |           |\n       +-+-+-+\
    \       +-+-+-+       +             +           +\n       | IPv6 Header |   Frag\
    \ Hdr  | Dst Opt Hdr | ICMPv6 RA |\n       +             +             +     \
    \        +           +\n       |             |             |             |   \
    \        |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \  It should be noted that the \"Hdr Ext Len\" field of the Destination\n   Options\
    \ header is present in the First Fragment (rather than the\n   second).  Therefore,\
    \ it is impossible for a device processing only\n   the second fragment to locate\
    \ the ICMPv6 header contained in that\n   fragment, since it is unknown how many\
    \ bytes should be \"skipped\" to\n   get to the next header following the Destination\
    \ Options header.\n   Thus, by leveraging the use of the Fragment Header together\
    \ with the\n   use of the Destination Options header, the attacker is able to\n\
    \   conceal the type and contents of the ICMPv6 message he is sending (an\n  \
    \ ICMPv6 Router Advertisement in this example).  Unless the L2 device\n   were\
    \ to implement IPv6 fragment reassembly, it would be impossible\n   for the device\
    \ to identify the ICMPv6 type of the message.\n      An L2 device could, however,\
    \ at least detect that an ICMPv6\n      message (of some type) is being sent,\
    \ since the \"Next Header\"\n      field of the Destination Options header contained\
    \ in the First\n      Fragment is set to \"58\" (ICMPv6).\n   This idea can be\
    \ taken further, such that it is also impossible for\n   the L2 device to detect\
    \ that the attacker is sending an ICMPv6\n   message in the first place.  This\
    \ can be achieved with an original\n   ICMPv6 Router Advertisement message preceded\
    \ with two Destination\n   Options headers that results in two fragments.  The\
    \ following figure\n   illustrates the \"original\" attack packet, prior to fragmentation,\
    \ and\n   the two resulting packets that are actually sent as part of the\n  \
    \ attack.\n    Original Packet:\n    +-+-+-+-+-+-+-+-+-+-+-+-//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |NH=60|         |NH=60|       |NH=58|       |           |\n    +-+-+-+  \
    \       +-+-+-+       +-+-+-+       +           +\n    |  IPv6 header  | Dst Opt\
    \ Hdr | Dst Opt Hdr | ICMPv6 RA |\n    +               +             +       \
    \      +           +\n    |               |             |             |      \
    \     |\n    +-+-+-+-+-+-+-+-+-+-+-+-//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    First\
    \ Fragment:\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \ |NH=44|       |NH=60|       |NH=60|                   |\n    +-+-+-+       +-+-+-+\
    \       +-+-+-+                   +\n    | IPv6 header |   Frag Hdr  |       Dst\
    \ Opt Hdr       |\n    +             +             +                         +\n\
    \    |             |             |                         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Second Fragment:\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |NH=44|       |NH=60|       |           |NH=58|       |           |\n   \
    \ +-+-+-+       +-+-+-+       +           +-+-+-+       +           +\n    | IPv6\
    \ header |   Frag Hdr  | Dst O Hdr | Dst Opt Hdr | ICMPv6 RA |\n    +        \
    \     +             +           +             +           +\n    |           \
    \  |             |           |             |           |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   In this variant, the \"Next Header\" field of the Destination Options\n  \
    \ header contained in the First Fragment is set to \"60\" (Destination\n   Options\
    \ header); thus, it is impossible for a device processing only\n   the First Fragment\
    \ to detect that an ICMPv6 message is being sent in\n   the first place.\n   The\
    \ second fragment presents the same challenges as the second\n   fragment of the\
    \ previous variant.  That is, it would be impossible\n   for a device processing\
    \ only the second fragment to locate the second\n   Destination Options header\
    \ (and hence the ICMPv6 header), since the\n   \"Hdr Ext Len\" field of the first\
    \ Destination Options header is\n   present in the First Fragment (rather than\
    \ the second).\n"
- title: 3.  RA-Guard Implementation Advice
  contents:
  - "3.  RA-Guard Implementation Advice\n   The following filtering rules must be\
    \ implemented as part of an\n   RA-Guard implementation on ports that face interfaces\
    \ that are not\n   allowed to send ICMPv6 Router Advertisement messages, such\
    \ that the\n   vulnerabilities discussed in this document are eliminated:\n  \
    \ 1.  If the IPv6 Source Address of the packet is not a link-local\n       address\
    \ (fe80::/10), RA-Guard must pass the packet.\n          RATIONALE: This prevents\
    \ RA-Guard from dedicating processing\n          cycles to filtering packets that\
    \ originate off-net and that,\n          if they are RA's, would not be accepted\
    \ by the host.  Section\n          6.1.2 of [RFC4861] requires nodes to discard\
    \ Router\n          Advertisement messages if their IPv6 Source Address is not\
    \ a\n          link-local address.\n   2.  If the Hop Limit is not 255, RA-Guard\
    \ must pass the packet.\n          RATIONALE: This prevents RA-Guard from dedicating\
    \ processing\n          cycles to filtering packets that originate off-net and\
    \ that,\n          if they are RA's, would not be accepted by the destination\n\
    \          host.  Section 6.1.2 of [RFC4861] requires nodes to discard\n     \
    \     Router Advertisement messages if their Hop Limit is not 255.\n   3.  RA-Guard\
    \ must parse the entire IPv6 header chain present in the\n       packet, to identify\
    \ whether the packet is a Router Advertisement\n       message.\n          NOTE:\
    \ RA-Guard implementations must not enforce a limit on the\n          number of\
    \ bytes they can inspect (starting from the beginning\n          of the IPv6 packet),\
    \ since this could introduce false\n          positives: legitimate packets could\
    \ be dropped simply because\n          the RA-Guard device does not parse the\
    \ entire IPv6 header\n          chain present in the packet.  An implementation\
    \ that has such\n          an implementation-specific limit must not claim compliance\n\
    \          with this specification, and must pass the packet when such\n     \
    \     implementation-specific limit is reached.\n   4.  When parsing the IPv6\
    \ header chain, if the packet is a First\n       Fragment (i.e., a packet containing\
    \ a Fragment Header with the\n       Fragment Offset set to 0) and it fails to\
    \ contain the entire IPv6\n       header chain (i.e., all the headers starting\
    \ from the IPv6 header\n       up to, and including, the upper-layer header),\
    \ RA-Guard must drop\n       the packet and should log the packet drop event in\
    \ an\n       implementation-specific manner as a security fault.\n          RATIONALE:\
    \ [RFC7112] specifies that the First Fragment (i.e.,\n          the fragment with\
    \ the Fragment Offset set to 0) must contain\n          the entire IPv6 header\
    \ chain, and allows intermediate systems\n          such as routers to drop those\
    \ packets that fail to comply with\n          this requirement.\n          NOTE:\
    \ This rule should only be applied to IPv6 fragments with\n          a Fragment\
    \ Offset of 0 (non-First Fragments can be safely\n          passed, since they\
    \ will never reassemble into a complete\n          datagram if they are part of\
    \ a Router Advertisement received\n          on a port where such packets are\
    \ not allowed).\n   5.  When parsing the IPv6 header chain, if the packet is identified\n\
    \       to be an ICMPv6 Router Advertisement message or the packet\n       contains\
    \ an unrecognized Next Header value [IANA-IP-PROTO],\n       RA-Guard must drop\
    \ the packet, and should log the packet drop\n       event in an implementation-specific\
    \ manner as a security fault.\n       RA-Guard must provide a configuration knob\
    \ that controls whether\n       packets with unrecognized Next Header values are\
    \ dropped; this\n       configuration knob must default to \"drop\".\n       \
    \   RATIONALE: By definition, Router Advertisement messages are\n          required\
    \ to originate on-link, have a link-local IPv6 Source\n          Address, and\
    \ have a Hop Limit value of 255 [RFC4861].\n          [RFC7045] requires that\
    \ nodes be configurable with respect to\n          whether packets with unrecognized\
    \ headers are forwarded, and\n          allows the default behavior to be that\
    \ such packets be\n          dropped.\n   6.  In all other cases, RA-Guard must\
    \ pass the packet as usual.\n      NOTE: For the purpose of enforcing the RA-Guard\
    \ filtering policy,\n      an Encapsulating Security Payload (ESP) header [RFC4303]\
    \ should be\n      considered to be an \"upper-layer protocol\" (that is, it should\
    \ be\n      considered the last header in the IPv6 header chain).  This means\n\
    \      that packets employing ESP would be passed by the RA-Guard device\n   \
    \   to the intended destination.  If the destination host does not\n      have\
    \ a security association with the sender of the aforementioned\n      IPv6 packet,\
    \ the packet would be dropped.  Otherwise, if the\n      packet is considered\
    \ valid by the IPsec implementation at the\n      receiving host and encapsulates\
    \ a Router Advertisement message, it\n      is up to the receiving host what to\
    \ do with such a packet.\n   If a packet is dropped due to this filtering policy,\
    \ then the packet\n   drop event should be logged in an implementation-specific\
    \ manner as a\n   security fault.  The logging mechanism should include a drop\
    \ counter\n   dedicated to RA-Guard packet drops.\n   In order to protect current\
    \ end-node IPv6 implementations, Rule #4\n   has been defined as a default rule\
    \ to drop packets that cannot be\n   positively identified as not being Router\
    \ Advertisement (RA) messages\n   (because the packet is a fragment that fails\
    \ to include the entire\n   IPv6 header chain).  This means that, at least in\
    \ theory, RA-Guard\n   could result in false-positive blocking of some legitimate\
    \ non-RA\n   packets that could not be positively identified as being non-RA.\
    \  In\n   order to reduce the likelihood of false positives, Rule #1 and Rule\n\
    \   #2 require that packets that would not pass the required validation\n   checks\
    \ for RA messages (Section 6.1.2 of [RFC4861]) be passed without\n   further inspection.\
    \  In any case, as noted in [RFC7112], IPv6 packets\n   that fail to include the\
    \ entire IPv6 header chain are virtually\n   impossible to police with state-less\
    \ filters and firewalls and,\n   hence, are unlikely to survive in real networks.\
    \  [RFC7112] requires\n   that hosts employing fragmentation include the entire\
    \ IPv6 header\n   chain in the First Fragment (the fragment with the Fragment\
    \ Offset\n   set to 0), thus eliminating the aforementioned false positives.\n\
    \   This filtering policy assumes that host implementations require that\n   the\
    \ IPv6 Source Address of ICMPv6 Router Advertisement messages be a\n   link-local\
    \ address and that they discard the packet if this check\n   fails, as required\
    \ by the current IETF specifications [RFC4861].\n   Additionally, it assumes that\
    \ hosts require the Hop Limit of Neighbor\n   Discovery messages to be 255, and\
    \ that they discard those packets\n   otherwise.\n   The aforementioned filtering\
    \ rules implicitly handle the case of\n   fragmented packets: if the RA-Guard\
    \ device fails to identify the\n   upper-layer protocol as a result of the use\
    \ of fragmentation, the\n   corresponding packets would be dropped.\n   Finally,\
    \ we note that IPv6 implementations that allow overlapping\n   fragments (i.e.,\
    \ that do not comply with [RFC5722]) might still be\n   subject of RA-based attacks.\
    \  However, a recent assessment of IPv6\n   implementations [SI6-FRAG] with respect\
    \ to their fragment reassembly\n   policy seems to indicate that most current\
    \ implementations comply\n   with [RFC5722].\n"
- title: 4.  Other Implications
  contents:
  - "4.  Other Implications\n   A similar concept to that of RA-Guard has been implemented\
    \ for\n   protecting against forged DHCPv6 messages.  Such protection can be\n\
    \   circumvented with the same techniques discussed in this document, and\n  \
    \ the countermeasures for such evasion attack are analogous to those\n   described\
    \ in Section 3 of this document.\n      [DHCPv6-Shield] specifies a mechanism\
    \ to protect against rogue\n      DHCPv6 servers, while taking into consideration\
    \ the evasion\n      techniques discussed in this document.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document describes a number of techniques\
    \ that have been found\n   to be effective to circumvent popular RA-Guard implementations\
    \ and\n   provides advice to RA-Guard implementers such that those evasion\n \
    \  vulnerabilities are eliminated.\n      As noted in Section 3, IPv6 implementations\
    \ that allow overlapping\n      fragments (i.e., that do not comply with [RFC5722])\
    \ might still be\n      subject of RA-based attacks.  However, most current\n\
    \      implementations seem to comply with [RFC5722].\n   We note that if an attacker\
    \ sends a fragmented ICMPv6 Router\n   Advertisement message on a port not allowed\
    \ to send such packets, the\n   First Fragment would be dropped, and the rest\
    \ of the fragments would\n   be passed.  This means that the victim node would\
    \ tie memory buffers\n   for the aforementioned fragments, which would never reassemble\
    \ into a\n   complete datagram.  If a large number of such packets were sent by\
    \ an\n   attacker, and the victim node failed to implement proper resource\n \
    \  management for the IPv6 fragment reassembly buffer, this could lead\n   to\
    \ a Denial of Service (DoS).  However, this does not really\n   introduce a new\
    \ attack vector, since an attacker could always perform\n   the same attack by\
    \ sending forged fragmented datagrams in which at\n   least one of the fragments\
    \ is missing.  [CPNI-IPv6] discusses some\n   resource management strategies that\
    \ could be implemented for the IPv6\n   fragment reassembly buffer.\n   We note\
    \ that the most effective and efficient mitigation for these\n   attacks would\
    \ rely on the prohibiting the use of IPv6 fragmentation\n   with Router Advertisement\
    \ messages (as specified by [RFC6980]), such\n   that the RA-Guard functionality\
    \ is easier to implement.  However,\n   since such mitigation would require an\
    \ update to existing\n   implementations, it cannot be relied upon in the short\
    \ or near term.\n   Finally, we note that RA-Guard only mitigates attack vectors\
    \ based on\n   ICMPv6 Router advertisement messages.  Protection against similar\n\
    \   attacks based on other messages (such as DCHPv6) is considered out of\n  \
    \ the scope of this document and is left for other documents (e.g.,\n   [DHCPv6-Shield]).\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The author would like to thank Ran Atkinson, who provided\
    \ very\n   detailed comments and suggested text that was incorporated into this\n\
    \   document.\n   The author would like to thank Ran Atkinson, Karl Auer, Robert\n\
    \   Downie, Washam Fan, David Farmer, Mike Heard, Marc Heuse, Nick\n   Hilliard,\
    \ Ray Hunter, Joel Jaeggli, Simon Perreault, Arturo Servin,\n   Gunter van de\
    \ Velde, James Woodyatt, and Bjoern A. Zeeb, for\n   providing valuable comments\
    \ on earlier versions of this document.\n   The author would like to thank Arturo\
    \ Servin, who presented this\n   document at IETF 81.\n   This document resulted\
    \ from the project \"Security Assessment of the\n   Internet Protocol version\
    \ 6 (IPv6)\" [CPNI-IPv6], carried out by\n   Fernando Gont on behalf of the UK\
    \ Centre for the Protection of\n   National Infrastructure (CPNI).\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC3315]        Droms, R., Bound, J., Volz, B.,\
    \ Lemon, T., Perkins,\n                    C., and M. Carney, \"Dynamic Host Configuration\n\
    \                    Protocol for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC4303]\
    \        Kent, S., \"IP Encapsulating Security Payload (ESP)\",\n            \
    \        RFC 4303, December 2005.\n   [RFC4861]        Narten, T., Nordmark, E.,\
    \ Simpson, W., and H.\n                    Soliman, \"Neighbor Discovery for IP\
    \ version 6\n                    (IPv6)\", RFC 4861, September 2007.\n   [RFC5722]\
    \        Krishnan, S., \"Handling of Overlapping IPv6\n                    Fragments\"\
    , RFC 5722, December 2009.\n   [RFC6105]        Levy-Abegnoli, E., Van de Velde,\
    \ G., Popoviciu, C.,\n                    and J. Mohacsi, \"IPv6 Router Advertisement\
    \ Guard\",\n                    RFC 6105, February 2011.\n   [RFC6980]       \
    \ Gont, F., \"Security Implications of IPv6\n                    Fragmentation\
    \ with IPv6 Neighbor Discovery\",\n                    RFC 6980, August 2013.\n\
    \   [RFC7045]        Carpenter, B. and S. Jiang, \"Transmission and\n        \
    \            Processing of IPv6 Extension Headers\", RFC 7045,\n             \
    \       December 2013.\n   [RFC7112]        Gont, F., Manral, V., and R. Bonica,\
    \ \"Implications\n                    of Oversized IPv6 Header Chains\", RFC 7112,\n\
    \                    January 2014.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CPNI-IPv6]      Gont, F., \"Security Assessment\
    \ of the Internet\n                    Protocol version 6 (IPv6)\", UK Centre\
    \ for the\n                    Protection of National Infrastructure, (available\
    \ on\n                    request).\n   [DHCPv6-Shield]  Gont, F., Liu, W., and\
    \ G. Van de Velde, \"DHCPv6-\n                    Shield: Protecting Against Rogue\
    \ DHCPv6 Servers\",\n                    Work in Progress, October 2013.\n   [IANA-IP-PROTO]\
    \  IANA, \"Assigned Internet Protocol Numbers\",\n                    <http://www.iana.org/assignments/protocol-numbers/>.\n\
    \   [NDPMon]         \"NDPMon - IPv6 Neighbor Discovery Protocol Monitor\",\n\
    \                    <http://ndpmon.sourceforge.net/>.\n   [RFC6104]        Chown,\
    \ T. and S. Venaas, \"Rogue IPv6 Router\n                    Advertisement Problem\
    \ Statement\", RFC 6104,\n                    February 2011.\n   [SI6-FRAG]  \
    \     SI6 Networks, \"IPv6 NIDS evasion and improvements in\n                \
    \    IPv6 fragmentation/reassembly\", 2012,\n                    <http://blog.si6networks.com/2012/02/\n\
    \                    ipv6-nids-evasion-and-improvements-in.html>.\n   [SI6-IPv6]\
    \       \"SI6 Networks' IPv6 toolkit\",\n                    <http://www.si6networks.com/tools/ipv6toolkit>.\n\
    \   [THC-IPV6]       \"The Hacker's Choice IPv6 Attack Toolkit\",\n          \
    \          <http://www.thc.org/thc-ipv6/>.\n   [rafixd]         \"rafixd\", <http://www.kame.net/dev/cvsweb2.cgi/kame/\n\
    \                    kame/kame/rafixd/>.\n   [ramond]         \"ramond\", <http://ramond.sourceforge.net/>.\n"
- title: Appendix A.  Assessment Tools
  contents:
  - "Appendix A.  Assessment Tools\n   [SI6-IPv6] is a publicly available set of tools\
    \ (for Linux, *BSD, and\n   Mac OS) that implements the techniques described in\
    \ this document.\n   [THC-IPV6] is a publicly available set of tools (for Linux)\
    \ that\n   implements some of the techniques described in this document.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Fernando Gont\n   Huawei Technologies\n   Evaristo Carriego\
    \ 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone: +54\
    \ 11 4650 8472\n   EMail: fgont@si6networks.com\n"
