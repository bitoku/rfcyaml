Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing multicast address allocation.
This document defines a Management Information Base (MIB) module for managing multicast address allocation in a protocol independent manner, as well as for managing specific protocols used in allocating multicast addresses.
The protocol independent objects in this MIB apply to all multicast address allocation servers (MAASs) and clients, as described in [ARCH], including those that allocate source specific multicast addresses for the local machine.
The protocol specific objects in this MIB include objects related to the Multicast Address Dynamic Client Allocation Protocol (MADCAP) [MADCAP].
Interactions with the Multicast scope Zone Announcement Protocol (MZAP)
[MZAP] are also noted where appropriate.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The purpose of this MIB module is to provide the ability to configure and monitor the status of multicast address allocation within the local domain.
Some important monitoring questions which can be answered by this MIB module include:  How full is scope
Who's using up the space?
Who allocated a given address A?
This MIB module is divided into two primary sections:  Protocol independent objects relevant to all multicast address allocation servers and clients.
Protocol specific objects related to the MADCAP client server protocol.
The protocol independent objects consist of one "capabilities" scalar and five tables.
The tables are:  The Scope Table contains information on the multicast scopes known to a multicast address allocation server.
This table allows configuring scopes, and viewing what scopes are known to the local system after being configured elsewhere.
The Scope Name Table contains the names of the multicast scopes.
This table logically extends the Scope Table with the list of scope names in various languages for each scope.
The Allocation Range Table contains the address ranges out of which the device may allocate addresses.
It also allows answering the questions "How full is scope X?" and "Are requests being met?"
The Request Table contains the requests for address allocations, and allows answering the question "Who's using up the space?"
The Address Table contains the blocks of addresses which have been allocated, and together with the Request Table, allows answering the question "Who allocated a given address A?
The MADCAP objects consist of a group of (scalar) configuration parameters, and a group of (scalar) statistics.
Definitions MALLOC MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, OBJECT IDENTITY,
; mallocMIB MODULE IDENTITY LAST UPDATED "200306090000Z"   June 9, 2003 ORGANIZATION "IETF MALLOC Working Group" CONTACT INFO " WG EMail:   malloc@catarina.usc.edu
One Microsoft Way Redmond, WA 98052 EMail:
Inc. One Network Drive Burlington, MA 01803 EMail: steve.hanna@sun.com" DESCRIPTION "
The MIB module for management of multicast address allocation.
This version of this MIB module is part of RFC 3559; see the RFC itself for full legal notices."
"200306090000Z"   June 9, 2003 DESCRIPTION "Initial version, published as RFC 3559."
"This object describes the capabilities which a client or server supports.
The startTime bit indicates that allocations with a future start time are supported.
The serverMobility bit indicates that allocations can be renewed or released from a server other than the one granting the original allocation.
The retryAfter bit indicates support for a waiting state where the client may check back at a later time to get the status of its request."
current DESCRIPTION "The (conceptual) table containing information on multicast scopes from which addresses may be allocated.
Entries in this table may be dynamically discovered via some other protocol, such as MZAP, or may be statically configured, such as in an isolated network environment.
Each scope is associated with a range of multicast addresses, and ranges for different rows must be disjoint."
An entry (conceptual row) containing the information on a particular multicast scope."
MAX ACCESS not accessible STATUS
"The type of the addresses in the multicast scope range.
Legal values correspond to the subset of address families for which multicast address allocation is supported."
MAX ACCESS not accessible STATUS
"The first address in the multicast scope range.
The type of this address is determined by the value of the mallocScopeAddressType object."
"The last address in the multicast scope range.
The type of this address is determined by the value of the mallocScopeAddressType object."
"The status of this row, by which new entries may be created, or old entries deleted from this table.
If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
{ mallocScopeEntry 5 } mallocScopeSource OBJECT TYPE SYNTAX
"The method by which this entry was learned."
"If false, the server may allocate addresses out of the entire range.
If true, the server must not allocate addresses out of the entire range, but may only allocate addresses out of a subrange learned via another method.
Creating or deleting a scope which is not divisible has the side effect of creating or deleting the corresponding entry in the mallocAllocRangeTable.
Deleting a scope which is divisible has the side effect of deleting any corresponding entries in the mallocAllocRangeTable, and the mallocRequestTable.
"The type of the address of a multicast address allocation server to which a request may be sent."
"The address of a multicast address allocation server to which a request may be sent.
The default value is an zero  length address, indicating that no server is known.
The type of this address is determined by the value of the mallocScopeServerAddressType object.
"Indicates whether the scope is a Source Specific Multicast (SSM) range.
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table containing information on multicast scope names.
Entries in this table may be dynamically discovered via some other protocol, such as MZAP, or may be statically configured, such as in an isolated network environment."
MallocScopeNameEntry MAX ACCESS not accessible STATUS
An entry (conceptual row) containing the information on a particular multicast scope name.
"The textual name associated with the multicast scope.
The value of this object should be suitable for displaying to end users, such as when allocating a multicast address in this scope.
If the scope is an IPv4 scope, and no name is specified, the default value of this object should be the string
and y replaced appropriately to describe the address and mask length associated with the scope.
"If true, indicates a preference that the name in the associated language should be used by applications if no name is available in a desired language."
"The status of this row, by which new entries may be created, or old entries deleted from this table.
If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
the Allocation Range Table   mallocAllocRangeTable
current DESCRIPTION "The (conceptual) table containing information on subranges of addresses from which the device may allocate addresses, if it is a MAAS.
If the device is a Prefix Coordinator, any ranges which the device is advertising to MAAS's will be in this table.
Note that the device may be both a MAAS and a Prefix Coordinator.
Address ranges for different rows must be disjoint, and must be contained with the address range of the corresponding row of the mallocScopeTable.
Deleting an allocation range has the side effect of deleting any entries within that range from the mallocAddressTable."
An entry (conceptual row) containing the information on a particular allocation range.
MAX ACCESS not accessible STATUS
"The first address in the allocation range.
The type of this address is determined by the value of the mallocScopeAddressType object."
"The last address in the allocation range.
The type of this address is determined by the value of the mallocScopeAddressType object."
"The status of this row, by which new entries may be created, or old entries deleted from this table.
If write access is supported, the other writable objects in this table may be modified even while the status is `active'."
"The means by which this entry was learned."
"The number of seconds remaining in the lifetime of the (sub)range out of which addresses are being allocated.
A value of 0 indicates that the range is not subject to aging.
"The maximum number of addresses which the server is willing to grant for each future request in this range.
A value of 0 means that no specific limit is enforced, as long as the server has valid addresses to allocate."
"The maximum lifetime which the server will grant for future requests in this range.
A value of 0 means that no additional limit is enforced beyond that of mallocAllocRangeLifetime.
"The number of addresses in the range which have been allocated.
This value can be used to determine the current address space utilization within the scoped range.
This should match the total number of addresses for this scope covered by entries in the mallocAddressTable."
"The number of addresses in the range which have been offered.
This number should match the sum of mallocRequestNumAddrs for all entries in the mallocRequestTable in the offered state.
and mallocAllocRangeNumTryingAddrs, this can be used to determine the address space utilization within the scoped range in the immediate future."
"The value of this object is true if the range is eligible to be advertised to other MAASs.
When the row is first created, the default value of this object is true if the scope is divisible, and is false otherwise."
{ mallocAllocRangeEntry 12 } mallocAllocRangeTotalAllocatedAddrs OBJECT TYPE SYNTAX
"The approximate number of addresses in the range which have been allocated by any MAAS, as determined by a Prefix Coordinator.
This object need only be present if mallocAllocRangeAdvertisable is true.
If the number is unknown, a value of 0 may be reported."
"The approximate number of addresses in the range for which there is potential demand among MAASs, as determined by a Prefix Coordinator.
This object need only be present if mallocAllocRangeAdvertisable is true.
If the number is unknown, a value of 0 may be reported."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent' need not allow write access to any columnar objects in the row."
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table containing information on allocation requests, whether allocated or in progress.
This table may also be used to determine which clients are responsible for high address space utilization within a given scope.
Entries in this table reflect requests dynamically received by an address allocation protocol."
MAX ACCESS not accessible STATUS
An entry (conceptual row) containing the information on a particular allocation request.
MAX ACCESS not accessible STATUS
An arbitrary value identifying this row."
The type of the first address of the scope to which the request applies.
Legal values correspond to the subset of address families for which multicast address allocation is supported."
"The first address of the scope to which the request applies.
This must match mallocScopeFirstAddress for some row in the mallocScopeTable.
The type of this address is determined by the value of the mallocRequestScopeAddressType object."
"The number of seconds remaining before the start time of the request.
A value of 0 means that the allocation is currently in effect."
"The number of seconds remaining before the end time of the request.
"The number of addresses requested.
If the addresses have been allocated, this number should match the total number of addresses for this request covered by entries in the mallocAddressTable."
"The state of the request.
A value of allocated(1) indicates that one or more entries for this request are present in the mallocAddressTable.
A value of offered(2) indicates that addresses have been offered to the client (e.g. via a MADCAP OFFER message), but the allocation has not been committed.
A value of waiting(3) indicates that the allocation is blocked while the server attempts to acquire more space from which it can allocate addresses.
A value of trying(4) means that no addresses have been offered to the client, but that an attempt to allocate is in progress."
"The address of the client that (last) requested this allocation.
The type of this address is determined by the value of the mallocRequestClientAddressType object."
The type of the address of the server to which the request was (last) sent."
"The address of the server to which the request was (last) sent.
The type of this address is determined by the value of the mallocRequestServerAddressType object."
The Lease Identifier of this request.
If the allocation mechanism in use does not use Lease Identifiers, then the value is a 0 length string."
SEQUENCE OF MallocAddressEntry MAX ACCESS
current DESCRIPTION "The (conceptual) table containing information on blocks of allocated addresses.
This table may be used to map a given multicast group address to the associated request."
MAX ACCESS not accessible STATUS
An entry (conceptual row) containing the information on a particular block of allocated addresses.
The block of addresses covered by each entry in this table must fall within a range corresponding to an entry in the mallocAllocRangeTable.
MAX ACCESS not accessible STATUS
"The type of the first address in the allocated block.
Legal values correspond to the subset of address families for which multicast address allocation is supported."
MAX ACCESS not accessible STATUS
"The first address in the allocated block.
The type of this address is determined by the value of the mallocAddressAddressType object."
The index of the request which caused this block of addresses to be allocated.
This value must match the value of mallocRequestId for some entry in the mallocRequestTable."
current DESCRIPTION "Group of objects that count various MADCAP events."
"The amount of extra time on either side of a lease which the MADCAP server allocates to allow for clock skew among clients."
{ madcapConfig 1 } madcapConfigNoResponseDelay OBJECT
"The amount of time the MADCAP client allows for receiving a response from a MADCAP server."
"The amount of time the MADCAP server will reserve an address for after sending an OFFER message in anticipation of receiving a REQUEST message."
"The amount of time the MADCAP server uses to detect duplicate messages."
current DESCRIPTION "The clock skew threshold used by the MADCAP server to generate Excessive Clock Skew errors."
"The total number of transactions for which the MADCAP server has detected an error of any type, regardless of whether the server ignored the request or generated a NAK."
"The number of valid requests for which the MADCAP server could not complete an allocation, regardless of whether NAKs were sent.
This corresponds to the Valid Request Could Not Be Completed error code in MADCAP."
"The number of invalid requests received by the MADCAP server, regardless of whether NAKs were sent.
This corresponds to the Invalid Request error code in MADCAP."
"The number of requests received by the MADCAP server with an excessive clock skew, regardless of whether NAKs were sent.
This corresponds to the Excessive Clock Skew error code in MADCAP."
"The number of requests received by the MADCAP server with an unrecognized Lease Identifier, regardless of whether NAKs were sent.
This corresponds to the Lease Identifier Not Recognized error code in MADCAP."
compliance statements mallocServerReadOnlyCompliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for multicast address allocation servers implementing the MALLOC MIB without support for read create (i.e., in read only mode).
Such a server can then be monitored but can not be configured with this MIB.
"Write access is not required."
"Write access is not required."
mallocScopeStatus MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required.
"Write access is not required."
"Write access is not required.
mallocScopeNameStorage MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
mallocAllocRangeMaxLeaseTime MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
GROUP  madcapServerGroup DESCRIPTION "This group is mandatory for servers which implement the MADCAP client server protocol."
madcapConfigExtraAllocationTime MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
Such clients can then be monitored but can not be configured with this MIB.
MODULE    this module MANDATORY GROUPS { mallocBasicGroup
, mallocClientGroup } GROUP  mallocClientScopeGroup DESCRIPTION "
This group is mandatory for clients which maintain a list of multicast scopes."
"Write access is not required."
"Write access is not required."
mallocScopeStatus MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"This group is mandatory for clients which implement the MADCAP client server protocol."
"Write access is not required."
Such devices can then be monitored but can not be configured with this MIB.
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
MIN ACCESS  read only DESCRIPTION
"Write access is not required."
Such servers can then be both monitored and configured with this MIB.
MODULE    this module MANDATORY GROUPS { mallocBasicGroup, mallocServerGroup } GROUP  madcapServerGroup DESCRIPTION "
This group is mandatory for servers which implement the MADCAP client server protocol."
Such clients can then be both monitored and configured with this MIB.
MODULE    this module MANDATORY GROUPS { mallocBasicGroup
, mallocClientGroup } GROUP  mallocClientScopeGroup DESCRIPTION "
This group is mandatory for clients which maintain a list of multicast scopes."
"This group is mandatory for clients which implement the MADCAP client server protocol."
Such devices can then be both monitored and configured with this MIB."
OBJECT GROUP OBJECTS { mallocCapabilities, mallocRequestScopeAddressType, mallocRequestScopeFirstAddress, mallocRequestStartTime, mallocRequestEndTime, mallocRequestNumAddrs, mallocRequestState, mallocAddressNumAddrs, mallocAddressRequestId } STATUS  current DESCRIPTION
"A collection of objects providing management of multicast address allocation in clients."
A collection of objects providing management of MADCAP servers."
The IANAscopeSource and IANAmallocRangeSource textual conventions are imported from the IANA MALLOC MIB.
The purpose of defining these textual conventions in a separate MIB module is to allow additional values to be defined without having to issue a new version of this document.
The Internet Assigned Numbers Authority (IANA) is responsible for the assignment of all Internet numbers, including various SNMP related numbers; it will administer the values associated with these textual conventions.
The rules for additions or changes to the IANA MALLOC MIB are outlined in the DESCRIPTION clause associated with its MODULE  IDENTITY statement.
The current versions of the IANA MALLOC MIB can be accessed from the IANA home page at: "http://www.iana.org/".
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
,mallocAllocRangeTable: Unauthorized modifications to these tables can result in denial of service by not being able to allocate and use multicast addresses, allocating too many addresses, allocating addresses that other organizations are already using, or causing applications to use a hop limit that results in extra bandwidth usage.
mallocScopeNameTable: Unauthorized modifications to this table can result in incorrect or misleading scope names being presented to users, resulting in potentially using the wrong scope for application data.
madcapConfigExtraAllocationTime,madcapConfigOfferHold: Unauthorized modifications to these objects can result in reservations lasting too long, potentially resulting in denial of service if allocation ranges are small.
madcapConfigNoResponseDelay: Unauthorized modifications can result in a client not being able to allocate multicast addresses.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control GET and/or NOTIFY access to these objects and possibly to encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
If address allocation servers are configured to allow renewal or release purely on the basis of knowledge of the Lease Identifier, then unauthorized read access to mallocRequestLeaseIdentifier can be used in a denial of service attack.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module
is properly configured for only those principals (users) with legitimate rights to have access to GET or SET (change/create/delete) objects.
