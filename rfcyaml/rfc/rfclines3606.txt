Abstract This memo defines objects used for managing ATM based interfaces, devices, and services, in addition to those defined in RFC 2515, the ATM MIB, to provide additional support for the management of ATM Switched Virtual Connections (SVCs) and ATM Permanent Virtual Connections (PVCs).
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The purpose of this memo is to provide additional capabilities, not found in the ATM MIB [RFC2515], which are needed to manage ATM interfaces.
This memo addresses the following areas:  ATM Switch Support
ATM Service Support  ATM Host Support
In addition, this memo also provides ATM trap support.
In addition to the MIB module defined in this memo, other MIB modules are necessary to manage ATM interfaces, links and cross connects.
Examples include MIB II for general system and interface management ([RFC2863]), the DS3 ([RFC2496]) or SONET MIBs ([RFC3592]) for management of SONET and DS3 physical interfaces, and, as appropriate, MIB modules for applications that make use of ATM, such as SMDS [RFC1694] and LAN Emulation [ATM Forum LANE].
These MIB modules are outside the scope of this specification.
This MIB module also requires the use of the ATM MIB module defined in [RFC2515] and ATM specific textual conventions defined in [RFC2514].
ATM Endpoint applications such as ATM LAN Emulation or Classical IP  over ATM Clients and Servers use ATM to establish SVC/PVC connections for exchanging control and data information.
The agents of these ATM applications must provide the network manager with information on the SVC/PVCs in use and which applications are using them.
The information can be made generic so as to apply to all ATM applications.
This memo defines extensions to the ATM MIB [RFC2515] in order to support this.
The current specification of this supplemental ATM2 MIB is based on SNMPv2 SMI.
The following terms are defined here and used throughout this MIB:  Virtual Path Link (VPL)
Virtual Path Connection (VPC)  Virtual Path Segment (VP Segment)  Virtual Channel Link (VCL)
Virtual Channel Connection (VCC)  Virtual Channel Segment (VC Segment).
The figures on the next page show how these terms apply in typical ATM network topologies.
Additional terms relevant to this MIB are defined and illustrated in the ATM Terminology section 3 of [RFC2515].
Virtual Path Segment (between SwitchA and SwitchC)
Examples of Virtual Path Links, Virtual Path Connection, and Virtual Path Segment
Virtual Channel Segment (between SwitchA and SwitchC)
Examples of Virtual Channel Links, Virtual Channel Connection, and Virtual Channel Segment 3.
Conventions used in the MIB 3.1.
The managed ATM objects are arranged as follows:
ATM SVC VP Cross Connect Table
This table provides the SVC VP Cross Connect (SVPC) information.
The equivalent PVC VP Cross Connect table is defined in [RFC2515].
This table also includes cross connect information for Soft PVPs.
This table contains configuration and state information of all SVC VP point to point, point to multipoint, or multipoint to multipoint VP cross connects.
This table has read only access and can be used to monitor the cross connects which connect the VPLs together in an ATM switch or network.
The atmSvcVpCrossConnectIndex is used to associate the related SVC VPLs that are cross connected together.
The atmSvcVpCrossConnectRowStatus object has read write access to allow for tear down.
The ATM SVC VP Cross Connect Table models each bi
directional Switched Virtual Circuit (SVC) VP cross connect as a set of entries in the atmSvcVpCrossConnectTable.
A point to point VPC cross connect is modeled as one entry; a point to multipoint (N leafs)
VPC cross  connect as N entries in this table; and
a multipoint to multipoint (N parties)
VPC cross connect as N(N 1)/2 entries in this table.
In the latter cases, all the N (or N(N 1)/2) entries are associated with a single VPC cross connect by having the same value of atmSvcVpCrossConnectIndex.
>> from low to high VPC traffic flow >>
<< from high to low VPC traffic flow
The terms low and high are chosen to represent numerical ordering of the two interfaces associated with a VPC cross connect.
That is, the ATM interface with the lower value of ifIndex is termed 'low', while the other ATM interface associated with the VPC cross connect is termed 'high'.
ATM SVC VC Cross Connect Table
This table provides the SVC Cross Connect (SVCC) information.
The equivalent PVC VC Cross Connect table is defined in [RFC2515].
This table also includes cross connect information for Soft PVCs.
This table is used to model a bi directional point to point, point  to multipoint or multipoint to multipoint SVC VC cross connect.
This table has read only access and is used to monitor the cross  connects which connect the VCLs together in an ATM switch or network that belong to a VC connection.
The atmSvcVcCrossConnectIndex is used to associate the related SVC VCLs that are cross connected together.
The atmSvcVcCrossConnectRowStatus object has read write access to allow for tear down.
The ATM SVC VC Cross Connect Table models each bi
directional Switched Virtual Circuit (SVC) VC cross connect as a set of entries in the atmSvcVcCrossConnectTable.
A point to point VC cross connect is modeled as one entry;
a point to multipoint (N leafs) VC cross  connect as N entries in this table; and
a multipoint to multipoint (N parties)
VPC cross connect as N(N 1)/2 entries in this table.
In the latter cases, all the N (or N(N 1)/2) entries are associated with a single VPC cross connect by having the same value of atmSvcVcCrossConnectIndex.
>> from low to high VC traffic flow >>
The terms low and high are chosen to represent numerical ordering of the two interfaces associated with a VPC cross connect.
That is, the ATM interface with the lower value of ifIndex is termed 'low', while the other ATM interface associated with the VPC cross connect is termed 'high'.
ATM Interface Signalling Statistics Table
This table provides statistical information of the signalling entity.
A signalling entity can be deployed over an ATM interface as defined in the atmInterfaceConfTable [RFC2515], a logical ATM interface defined in section 5.1.10.1 in this document, or a proprietary virtual interface as described in the atmInterfaceExtTable.
To monitor the signalling entity, a few counters are provided.
They are defined as: atmSigSSCOPConEvents atmSigSSCOPErrdPdus atmSigDetectSetupAttempts
atmSigEmitUnavailResrcs atmSigDetectCldPtyEvents atmSigEmitCldPtyEvents atmSigDetectMsgErrors atmSigEmitMsgErrors atmSigDetectClgPtyEvents atmSigEmitClgPtyEvents atmSigDetectTimerExpireds atmSigEmitTimerExpireds atmSigDetectRestarts atmSigEmitRestarts
A number of Information Elements may or may not be supported by ATM switches or ATM Services.
Hence, for trouble isolation it is important to keep track
which particular Information Elements are supported.
The corresponding group of objects must be supported by switches or services supporting SVCs, and indicate whether the following Information Elements are enabled/disabled:
1) Calling party number 2)
Calling party subaddress 3) Called party subaddress 4)
Broadband high layer information 5)
Broadband low layer information 6)
The last parameter, Preferred Carrier Pre Subscription, identifies the carrier to which intercarrier calls originated from this interface are routed when transit network selection information is not provided by the calling party.
This table extends the ATM VCL table of the ATM MIB [RFC2515] to include all other necessary signalling information as specified in the ATM Forum UNI Specifications [ATM Forum 3.0] and [ATM Forum UNI 3.1].
A user can create an entry with all signalling parameters and later use that entry to specify the signalling characteristics of SVCs.
Some of the signalling parameters, such as the AAL5 parameters information element, are reflected in the VCL and VPL tables, and this table only contains the remaining AAL5 parameters.
Signalling attributes can be grouped into following categories: 1) ATM Adaptation Layer Parameters Information in this group is captured in the ATM Signalling Descriptor Parameter Table defined in this memo.
Please refer to section 5.4.5.5 of [ATM Forum 3.0] and [ATM Forum UNI 3.1].
Broadband High Layer Information Information in this group is captured by the ATM Signalling Descriptor Parameter Table defined in this memo.
Please refer to section 5.4.5.8 of [ATM Forum 3.0] and [ATM Forum UNI 3.1].
Broadband Low Layer Information Information in this group is captured by the ATM Signalling Descriptor Parameter Table defined in this memo.
Please refer to section 5.4.5.9 of [ATM Forum 3.0] and [ATM Forum UNI 3.1].
ATM Interface Registered Address Table
This table contains a list of ATM addresses that can be used for calls to and from a given interface by a switch or service.
The ATM addresses are either registered by the endsystem via ILMI or statically configured.
This table does not expose PNNI reachability information.
This table only applies to switches and network services.
ATM VPI/VCI to Address Mapping Table
In the atmVclAddrTable, the object atmVclAddrAddr can either be an ATM Local Address or an ATM Remote Address which represent the two endpoint addresses of a VCL.
ATM Local Address identifies the local endpoint of the VCL represented by this agent.
The ATM Remote address represents the address of the ATM application at the other end of the VCL.
ATM Address to VPI/VCI Mapping Table
This table provides an alternative way to retrieve the atmVclTable.
This table can be used to retrieve the indexing to the atmVclTable by an ATM address.
The atmVplStatTable includes per VPL cell counters.
The VPL cell counters count the valid ATM cells.
The valid ATM cells include the user and OAM cells but exclude the physical layer (e.g., idle cells) and unassigned cells.
Cells coming into an ATM managed system are counted differently with the high Cell Loss Priority (CLP 0) or low Cell Loss Priority (CLP 1).
The cells are tagged, passed or discarded depending on the incoming CLP value and the policed cell rate by the "traffic policing" entity in the ATM managed system.
Refer to [ATM Forum 3.0] and [ATM Forum UNI 3.1] for a description of the traffic policing.
In the switch where the traffic policing is not supported, cells are passed or discarded depending on the bandwidth and buffering capacity of the switching fabric.
The Output Tagged Cells counter, in this case, is always zero.
In this table, cells coming into and out of the managed ATM system are counted as the total number of cells and the cells with the CLP 0.
The CLP 1 counter is derived by subtracting CLP 0 cells from the total cells.
In addition, cells that are tagged on the output are also counted.
The output CLP 1 cells equals the total cells out count minus both the CLP 0 cells and the tagged cells.
ATM VPL Logical Port Table
The ATM VPL Logical Port Table includes all ATM logical port interface configuration information.
The interface type "ATM Logical Port" (ifType 80) is defined to allow the representation of a VP Tunnel, which is a VPL used as a trunk connection (most likely between devices that are not physically adjacent), providing for multiplexing and demultiplexing of VCs on the VP.
Figure 6 illustrates such a VP Tunnel.
Note: the "ATM Logical Port" interface is more of a logical port, compared with an interface of type "ATM" which is more of a physical port that provides for the transport of many VP and VC connections between adjacent devices.
In Figure 6, a VP tunnel (denoted as VPL1 by Switch A, and as VPL2 by Switch B) is used to connect VCL1 with VCL4 and VCL2 with VCL3.
Figure 6 shows only one VP tunnel, but there can be multiple VP tunnels over the same physical interface.
A particularly useful VP tunnel scenario is tunneling across a public network that does not support signalling.
In Figure 6 above, assume Switches A and B are private switches that signal over the VP to set up connections transparently through the public network.
The public network would just transport a PVC VP between the two switches.
Because the VP Tunnel constitutes an interface between two ATM devices that are not necessarily physically adjacent, most of the management information pertaining to the interface may differ for the tunnel, including:  active VPI/VCI fields (the tunnel may be a subset of the parent interface).
maximum number of VCCs  configured VCCs  ILMI VPI/VCI values
ATM administrative address  received/transmitted cells.
How to create an ATM Logical Port interface On ATM devices supporting VP tunnels, the ATM Logical Port Interface Table can be used to create VP tunnels.
To create an ATM Logical Port interface via SNMP: Create a VPL (e.g., VPI a on an existing ATM interface which has ifIndex x) in the atmVplTable.
Set the object atmVplLogicalPortDef to isLogicalIf.
A new row in the ifTable is then created by the agent, with ifIndex y, to represent the ATM Logical Port interface.
The object atmVplLogicalPortIndex is also set to y by the agent to represent the ifIndex value of the ATM Logical Port interface.
The ifEntry values are set for the ATM Logical Port interface (ifIndex y) as discussed in RFC 2515, with the following exceptions:   ifType a new enumerated value of atmLogical(80) was added to IANAifType, specifying an "ATM Logical Port" interface.
The total bandwidth in bits per second for use by the ATM layer.
Computed from the traffic descriptor for the VPL.
ifOperStatus determined hierarchically, depending on the state of the physical atm cell layer interface beneath it, and the ILMI on the VP.
ifInOctets, ifOutOctets support of these objects is not mandatory for ATM Logical Port interfaces.
ifInErrors always zero, HEC errors are specified for the atm cell layer interface beneath it.
always zero, errors are specified for the atm cell layer interface beneath it.
The atmInterfaceConfEntry values are set and reported as discussed in [RFC2515], with the following exceptions:   atmInterfaceMaxVpcs 0.
atmInterfaceIlmiVpi VPI of the VP tunnel.
The atmInterfaceExtEntry values are set and reported as follows:
atmInterfaceConfMaxSvpcVpi VPI of the VP tunnel, although VPCs cannot be setup on a VP tunnel.
atmInterfaceCurrentMaxSvpcVpi VPI of VP tunnel, although VPCs cannot be setup on a VP tunnel.
atmInterfaceConfMaxSvccVpi VPI of the VP tunnel.
atmIntfPvcFailures Includes failures of PVCLs within the VP tunnel, but not of the PVPL itself, since those are reported on the atm(37) interface.
Enables traps for PVCL failures within the VP tunnel, but not for the PVPL itself, since the latter are generated on behalf of the atm(37) interface.
An entry is created in the ifStackTable, with values: ifStackHigherLayer y,
ifStackLowerLayer x. VCLs defined on the VP tunnel
are indexed by ifIndex y, VPI a,
The atmVclStatTable includes per VCL cell counters.
The VCL cell counters count the valid ATM cells.
The valid ATM cells include the user and OAM cells but exclude the physical layer (e.g., idle cells) and unassigned cells.
Cells coming into an ATM managed system are counted differently with the high Cell Loss Priority (CLP 0) or low Cell Loss Priority (CLP 1).
The cells are tagged, passed or discarded depending on the incoming CLP value and the policed cell rate by the "traffic policing" entity in the ATM managed system.
Refer to [ATM Forum 3.0] and [ATM Forum UNI 3.1] for the description of the traffic policing.
In a switch where the traffic policing is not supported, cells are passed or discarded depending on the bandwidth and buffering capacity of the switching fabric.
The Output Tagged Cells counter, in this case, is always zero.
In this table, cells coming into and out of the managed ATM system are counted as the total number of cells and the cells with the CLP 0.
The CLP 1 counter is derived by subtracting CLP 0 cells from the total cells.
In addition, cells that are tagged on the output are also counted.
The output CLP 1 cells equals the total cells out count minus both the CLP 0 cells and the tagged cells.
ATM VC General Information Table
This table contains the general information for each VC.
It provides an index to the atmSigDescrParamTable defined in this MIB.
This table is an extension to the atmVclTable defined in the ATM MIB [RFC2515].
ATM Interface Configuration Extension Table
The ATM Interface Configuration Extension Table contains ATM interface information that supplements the atmInterfaceConfTable defined in [RFC2515].
It includes the configuration information of the interface type (i.e., connection setup procedures) and ILMI.
A network manager can configure the interface to run a specific type of connection setup procedures (i.e., protocol and version) such as ITU T DSS2, ATM Forum UNI 3.1, PNNI 1.0 or BICI 2.0.
It can also dictate the role of the managed entity as one side of the interface.
For example, if an interface is configured to run ATM Forum UNI 3.1, the managed entity has to be told to run as either the network side or the user side of the UNI.
The objects atmIntfConfigType and atmIntfConfigSide are used for configuration and the objects atmIntfActualType and atmIntfActualSide are used for reading back the actual interface protocol and version.
The following table describes all the valid combinations of configuration of the interface type and side.
Note that the value N
/A meaning not applicable, should be set to the value other(1) when used.
When the value of the object atmIntfConfigType is configured to autoConfig(2), the interface type is determined via the ATM Forum ILMI auto configuration procedures [ATM Forum ILMI].
There is no need to set the interface side since it should be a derived value.
The PNNI and BICI interfaces are always symmetric so setting the interface side is also not necessary.
This table also includes the configured and negotiated maximum VPI value per ATM interface, and the configured and negotiated minimum VCI value per ATM interface.
[ATM Forum ILMI] Sections 8.2.3.8 through 8.2.3.10 for a detailed description.
(negotiated) Between ifA and ifB,
the maximum of the two vales for atmInterfaceConfMinSvccVci is 40, so both interfaces set their atmInterfaceCurrentMinSvccVci values to 40.
On the other hand, since ifC and ifD both are configured with atmInterfaceConfMinSvccVci values of 32, they set their atmInterfaceCurrentMinSvccVci values to 32.
Examples of configured vs. negotiated ILMI values 3.1.14.
ATM ILMI Service Registry Table
This table contains information used by the switch/service to inform ATM hosts of the location of ATM network services such as the LAN Emulation Configuration Server (LECS), the ATM Name Server (ANS), the ATMARP Server, the Multicast Address Resolution Server (MARS), and the NHRP Server (NHS).
Entries in this table are exported to adjacent devices via ILMI over either all or a few user selected ATM interfaces.
As an example, let's assume that:  An ATM switch
X has three interfaces if1, if2 and if3.
There are two ATM network services offered,
and b1.b2...bN, where a1.a2...aN is an object identifier used to identify the first service, and b1.b2...
bN is the object identifier for the other service.
The first service is available at the ATM address 'a'.
The second service is available at the ATM address 'b'.
The first service can be used by any device connecting to the switch X.
ATM topology with registered services
The table for switch X will contain three entries: one entry for the "a1.a2...aN", implicitly available to any devices on switch X. two entries for the "b1.b2...bN" (one for each interface where this service can be explicitly used).
The content of the table is: Service Identifier:   a1.a2...
bN are represented by atmIlmiSrvcRegServiceID, the ATM addresses a and b are represented by atmIlmiSrvcRegATMAddress, the values m, n, and p are arbitrary non zero integer parameters (necessary in this example to differentiate the two entries for b1.b2...bN that are both available at the ATM address 'b')
represented by atmIlmiSrvcRegAddressIndex, and the available interfaces are represented by atmIlmiSrvcRegIndex, where the special value 0 indicates any ATM interface.
When querying the ILMI service registry table, through the ILMI protocol:  the device attached to interface if1 will obtain the address a and b.  the device attached to interface if2 will obtain the address a only.
the device attached to interface if3 will obtain the address a and b. 3.1.15.
A table specifying per interface network prefix(es) supplied by the network side of the UNI during ILMI address registration.
When no network prefixes are specified for a particular interface, one or more network prefixes based on the switch address(es) may be used for ILMI address registration.
This table contains one or more ATM endsystem addresses on a per  switch basis.
These addresses are used to identify the switch.
When no ILMI network prefixes are configured for certain interfaces, network prefixes based on the switch address(es) may be used for ILMI address registration.
AAL5 per VCC Statistics Table
This table contains the AAL5 statistics for the VCCs.
ATM VP Cross Connect Extension Table
This table extends the atmVpCrossConnectTable defined in ATM MIB [RFC2515].
ATM VC Cross Connect Extension Table
This table extends the atmVcCrossConnectTable defined in ATM MIB [RFC2515].
This table contains all the PVPLs that are in trouble.
This table contains all the PVCLs that are in trouble.
Leaf Initiated Join Counter support
Two counter objects are added to count the number of leaf intiated setup requests and setup failures.
At the user side of a given ATM UNI interface there may be an address, "ifPhysAddress", to identify the interface.
In addition, there may be several other addresses which can be used to originate and receive calls.
These other addresses that are used to receive calls are listed in the "ifRcvAddrTable" defined in RFC 2863.
The registered addresses on the network side are listed in the ATM Registered Address Table.
The ATM Registered Address Table is supported by switches and network services.
It is not supported by hosts.
Configuration of VPLs, VCLs, and Cross Connects
The ATM Managed Objects needed to support the configuration of VPLs, VCLs, and Cross Connects of the Permanent VPLs and VCLs are defined in the ATM MIB [RFC2515].
Cross Connects of the Switched VPLs and VCLs are defined in this memo.
Trap Support Traps are defined to detect changes in the status of permanent VPLs and VCLs.
The current up/down status of each permanent VPL or VCL is indicated by the atmVplOperStatus or atmVclOperStatus object, respectively.
Several tables and objects and one trap are defined in order to help network managers quickly and efficiently detect changes in the status of permanent virtual links.
Through use of these tables, objects, and traps, the time consuming and resource intensive task of continuously polling each row in the entire atmVplTable and atmVclTable can be avoided.
The atmIntfPvcFailures counter and the atmIntfCurrentlyFailingPVpls and atmIntfCurrentlyFailingPVcls gauges provide a quick means of determining the status of all PVPLs and PVCLs on an interface.
The atmCurrentlyFailingPVplTable and the atmCurrentlyFailingPVclTable list all of the problematic PVPLs and PVCLs, respectively, allowing them to be quickly identified.
The atmIntfPvcFailuresTrap is generated just after a PVPL or PVCL on a particular interface leaves the 'up' operational state.
Managers can then determine which PVPLs and/or PVCLs are failing by reading the atmCurrentlyFailingPVplTable
Generation of the atmIntfPvcFailuresTrap is rate limited by suppressing all traps that would occur within atmIntfPvcNotificationInterval of a previous trap for the same interface.
Managers should continuously poll the tables and objects mentioned above for at least this amount of time in order to keep up with the state of the network.
Conformance and Compliance See the conformance and compliance statements within the information module.
Definitions ATM2 MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE, Gauge32, Counter32, Integer32
SMI TruthValue, RowStatus, TimeStamp FROM SNMPv2
TC MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
CONF SnmpAdminString FROM SNMP FRAMEWORK MIB InterfaceIndex, InterfaceIndexOrZero,
ifIndex FROM IF MIB atmMIBObjects, atmInterfaceConfEntry, atmVplEntry, atmVplVpi, atmVclEntry, atmVclVpi, atmVclVci, atmVpCrossConnectEntry,
FROM ATM MIB AtmAddr, AtmSigDescrParamIndex, AtmInterfaceType, AtmIlmiNetworkPrefix, AtmVcIdentifier, AtmVpIdentifier, AtmTrafficDescrParamIndex FROM ATM TC MIB; atm2MIB MODULE IDENTITY LAST UPDATED "200309230000Z" ORGANIZATION "IETF AToMMIB Working Group"
Ly Postal:  Pedestal Networks 6503
Dumbarton Circle Fremont, CA 94555
Michael Noto Postal:  Cisco Systems 170 W. Tasman Drive San Jose, CA 95134 1706 USA E mail:
Consultant E Mail:  ah smith@acm.org
Ethan Mickey Spiegel Postal:  Cisco Systems 170 W. Tasman Drive San Jose, CA 95134 1706
Kaj Tesink Postal:  Telcordia Technologies 331 Newman Springs Road Red Bank, NJ 07701
758 5254 E mail:  kaj@research.telcordia.com" DESCRIPTION "
This version of this MIB module is part of RFC 3606; see the RFC itself for full legal notices.
This MIB Module is a supplement to the ATM MIB defined in RFC 2515."
REVISION "200309230000Z" DESCRIPTION "Initial version of this MIB, published as RFC 3606."
ATM VPL SVC Cross Connect Table atmSvcVpCrossConnectTable
The ATM SVPC Cross Connect table.
bi directional VP cross connect between two switched VPLs is modeled as one entry in this table.
A Soft PVPC cross connect, between a soft permanent VPL and a switched VPL, is also modeled as one entry in this table."
An entry in the ATM SVPC Cross Connect table.
This entry is used to model a bi directional ATM VP cross connect between two VPLs.
A unique value to identify this SVPC cross connect.
For each VP associated with this cross connect, the agent reports this cross connect index value in the atmVplCrossConnectIdentifer attribute of the corresponding atmVplTable entries."
The term low implies that this ATM interface has the numerically lower ifIndex value than the other ATM interface identified in the same atmSvcVpCrossConnectEntry."
The VPI value cannot exceed the number supported by the atmInterfaceCurrentMaxSvpcVpi at the low ATM interface port."
The term high implies that this ATM interface has the numerically higher ifIndex value than the other ATM interface identified in the same atmSvcVpCrossConnectEntry."
The VPI value cannot exceed the number supported by the atmInterfaceCurrentMaxSvpcVpi at the high ATM interface port."
"The value of the sysUpTime object at the time this bi directional SVPC cross connect was created.
If the current state was entered prior to the last re initialization of the agent, then this object contains a zero value."
"This object is used to delete rows in the atmSvcVpCrossConnectTable."
ATM VCL SVC Cross Connect Table atmSvcVcCrossConnectTable
A bi directional VC cross connect between two switched VCLs is modeled as one entry in this table.
A Soft PVCC cross connect, between a soft permanent VCL and a switched VCL, is also modeled as one entry in this table."
An entry in the ATM SVCC Cross Connect table.
This entry is used to model a bi directional ATM VC cross connect between two VCLs.
A unique value to identify this SVCC cross connect.
For each VP associated with this cross connect, the agent reports this cross connect index value in the atmVclCrossConnectIdentifier attribute of the corresponding atmVplTable entries."
The term low implies that this ATM interface has the numerically lower ifIndex value than the other ATM interface identified in the same atmSvcVcCrossConnectEntry."
} atmSvcVcCrossConnectLowVpi OBJECT TYPE SYNTAX
The VPI value cannot exceed the number supported by the atmInterfaceCurrentMaxSvccVpi at the low ATM interface port."
The VCI value cannot exceed the number supported by the atmInterfaceCurrentMaxSvccVci at the low ATM interface port."
{ atmSvcVcCrossConnectEntry 4 } atmSvcVcCrossConnectHighIfIndex OBJECT TYPE SYNTAX
The term high implies that this ATM interface has the numerically higher ifIndex value than the other ATM interface identified in the same atmSvcVcCrossConnectEntry."
The VPI value cannot exceed the number supported by the atmInterfaceCurrentMaxSvccVpi at the high ATM interface port."
The VCI value cannot exceed the number supported by the atmInterfaceMaxVciBits at the high ATM interface port."
"The value of the sysUpTime object at the time this bi directional SVCC cross connect was created.
If the current state was entered prior to the last re initialization of the agent, then this object contains a zero value."
"This object is used to delete rows in the atmSvcVcCrossConnectTable."
ATM Interface Signalling Statistics Table
This table contains ATM interface signalling statistics, one entry per ATM signalling interface."
This list contains signalling statistics variables.
This counter counts the sum of the following errors: 1) SSCOP Connection Disconnect Counter
The abnormal occurrence of this event is characterized by the expiry of Timer NO RESPONSE.
(This event is communicated to the layer management with MAA ERROR code P.
2) SSCOP Connection Initiation Failure
This condition indicates the inability to establish an SSCOP connection.
This event occurs whenever the number of expiries of the connection control timer (Timer CC) equals or exceeds the MaxCC, or upon receipt of a connection reject message BGREJ PDU.
(This event is communicated to layer management with MAA ERROR code
3) SSCOP Connection Re Establ/Resynch
This event occurs upon receipt of a BGN PDU or RS PDU.
REFERENCE "ITU T Recommendation Q.2110, Broadband Integrated Services Digital Network (B ISDN)
This counter counts the sum of the following errors: 1) Invalid PDUs.
These are defined in SSCOP and consist of PDUs with an incorrect length (MAA ERROR code U), an undefined PDU type code, or that are not 32 bit aligned.
2) PDUs that result in MAA ERROR codes and are discarded.
See MAA ERROR codes A D, F M, and Q T defined in ITU T Q.2110."
REFERENCE "ITU T Recommendation Q.2110, Broadband Integrated Services Digital Network (B ISDN)
This counter counts the number of call setup attempts (both successful and unsuccessful) detected on this interface."
This counter counts the number of call setup attempts (both successful and unsuccessful) transmitted on this interface."
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is received (Note:
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is transmitted (Note:
"Number of Resource Unavailability detected on this interface.
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is received (Note:
These cause values apply to both UNI3.0 and UNI3.1 unless otherwise stated):
too many pending add party requests NOTE:  For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted."
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is transmitted (Note:
These cause values apply to both UNI3.0 and UNI3.1 unless otherwise stated):
too many pending add party requests NOTE:  For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted."
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is received (Note:
For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted.
Cause Value #30 'response to STATUS ENQUIRY' was not included in this memo since it did not apply to a hard failure."
For Unsuccessful Call transmitted from this interface.
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is transmitted (Note:
For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted.
Cause Value #30 'response to STATUS ENQUIRY' was not included in this memo since it did not apply to a hard failure."
The Incorrect Messages Counter reflects any sort of incorrect information in a message.
This includes: RELEASE, RELEASE COMPLETE, ADD PARTY REJECT, and STATUS messages transmitted, that contain any of the Cause values listed below.
These messages are dropped because the message was so damaged that it could not be further processed.
A list of dropped messages is compiled below: 1.
Message with invalid protocol discriminator 2.
Message with errors in the call reference I.E. Bits 5 8 of the first octet not equal to '0000' Bits 1 4 of the first octet indicating a length other than 3 octets RELEASE COMPLETE message received with a call reference that does not relate to a call active or in progress SETUP message received with call reference flag incorrectly set to 1 SETUP message received with a call reference for a call that is already active or in progress.
The following cause values are monitored by this counter
The Incorrect Messages Counter reflects any sort of incorrect information in a message.
This includes: RELEASE, RELEASE COMPLETE, ADD PARTY REJECT, and STATUS messages transmitted or received, that contain any of the Cause values listed below.
These messages are dropped because the message was so damaged that it could not be further processed.
A list of dropped messages is compiled below: 1.
Message with invalid protocol discriminator 2.
Message with errors in the call reference I.E. Bits 5 8 of the first octet not equal to '0000' Bits 1 4 of the first octet indicating a length other than 3 octets RELEASE COMPLETE message received with a call reference that does not relate to a call active or in progress SETUP message received with call reference flag incorrectly set to 1 SETUP message received with a call reference for a call that is already active or in progress.
The following cause values are monitored by this counter
{ atmSigStatEntry 12 } atmSigDetectClgPtyEvents    OBJECT TYPE SYNTAX
This counter monitors error events that occur due to the originating user doing something wrong.
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is received (Note:
This counter monitors error events that occur due to the originating user doing something wrong.
This counter is incremented when a RELEASE, RELEASE COMPLETE (only when not preceded by a RELEASE message for the same call), ADD PARTY REJECT, or STATUS message that contains one of the following cause
code values is transmitted (Note:
The Timer Expiries Counter provides a count of network timer expiries, and to some extent, host or switch timer expiries.
The conditions for incrementing this counter are: Expiry of any network timer Receipt of a RELEASE or RELEASE COMPLETE message with Cause #102, 'recovery on timer expiry'.
For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted."
The Timer Expiries Counter provides a count of network timer expiries, and to some extent, host or switch timer expiries.
The conditions for incrementing this counter are: Expiry of any network timer Receipt of a RELEASE or RELEASE COMPLETE message with Cause #102, 'recovery on timer expiry'.
For this counter, RELEASE COMPLETE messages that are a reply to a previous RELEASE message and contain the same cause value, are redundant (for counting purposes) and should not be counted."
The Restart Activity Counter provides a count of host, switch, or network restart activity.
This counter is incremented when receiving a RESTART message."
The Restart Activity Counter provides a count of host, switch, or network restart activity.
This counter is incremented when transmitting a RESTART message."
ATM Interface Signalling Support Table
This table provides information to support   the signalling process which is used to establish   ATM Switched Virtual Connections (SVCs).
This table contains ATM local interface configuration parameters, one entry per ATM signalling interface."
This list contains signalling configuration parameters and state variables.
"This object indicates whether the Calling Party Number Information Element is transferred to the called party address.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept and transfer the Calling Party Subaddress Information Element from the calling party to the called party.
Calling party subaddress information shall only be transferred to the called party if calling party number delivery is enabled (i.e., atmSigSupportClgPtyNumDel   'enabled(1)'.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept, transfer, and deliver the Called Party Subaddress Information Element from the calling party to the called party.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept, transfer, and deliver the Broadband High Layer Information Element from the calling party to the called party.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept, transfer, and deliver the Broadband Low Layer Information Element from the calling party to the called party.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept, transfer, and deliver the Broadband Repeat Indicator with two or three instances of the Broadband Low Layer Information Element for low layer information selection from the calling party to the called party.
This object's value should always be disabled(2) if the value of atmSigSupportLolyrInfo is disabled(2).
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This object indicates whether to accept, transfer, and deliver the ATM Adaptation Layer Parameters Information Element from the calling party to the called party.
The value of this object can be:
This Information Element is transferred to the called party disabled(2)
This Information Element is NOT transferred to the called party."
"This parameter identifies the carrier to which intercarrier calls originated from this interface are routed when transit network selection information is not provided by the calling party.
If a Carrier Identification Code (CIC) is used the parameter shall contain the CIC.
For three digit CICs, the first octet shall be '0' and the CIC is contained in the three following octets.
If the preferred carrier feature is not supported the value is a zero length string."
"A table contains signalling capabilities of VCLs except the Traffic Descriptor.
Traffic descriptors are described in the atmTrafficDescrParamTable."
REFERENCE "ATM User Network Interface Specification, Version 3.1 (UNI 3.1), September 1994, Section 5.4.5 Variable Length Information Elements."
Each entry in this table represents a set of signalling capabilities that can be applied to a VCL.
There is no requirement for unique entries, except that the index must be unique.
The value of this object is used by the atmVclGenSigDescrIndex object in the atmVclGenTable to identify a row in this table."
The value of this object is set to other(1) when not defined.
The SSCS type used by this entry."
When atmSigDescrParamBhliType is set to iso(2), the value of this object is a zero length string.
When atmSigDescrParamBhliType is set to user(3), the value of this object is an octet string with length ranging from 0 to 8.
When atmSigDescrParamBhliType is set to hiProfile(4), the value of this object is a length of 4 octet string containing user to user profile identifier.
When atmSigDescrParamBhliType is set to vendorSpecific(5), the value of this object is a length of 7 octet string, where the most significant 3 octets consist of a globally  administered OUI, and the least significant 4 octets are the vender administered application OUI.
The value of this object is other(1) if layer 2 protocol is not used."
The value of this object is other(1) if layer 3 protocol is not used."
"The default packet size defined in B LLI.
SNAP ID is 0 } MAX ACCESS
"The SNAP ID used for Broadband low layer protocol layer 3.
The value of this object is other(1) if atmSigDescrParamBlliLayer3 is set to other(1).
The value of this object is a zero length string if atmSigDescrParamBlliLayer3 is set to other(1).
When used, it is always 5 octets with the most significant octet as the OUI Octet 1 and the least significant octet as the PID Octet 2.
"This object is used to create and delete rows in the atmSigDescrParamTable."
ATM Interface Registered Address Table
"This table contains a list of ATM addresses that can be used for calls to and from a given interface by a switch or service.
The ATM addresses are either registered by the endsystem via ILMI or statically configured.
This table does not expose PNNI reachability information.
ILMI registered addresses cannot be deleted using this table.
This table only applies to switches and network services."
An entry in the ATM Interface Registered Address table.
An address registered for a given switch or service interface."
{ atmIfRegisteredAddrEntry 1} atmIfRegAddrAddressSource  OBJECT
The type of address source for a given ATM Address.
The value dynamic(3) is indicated when ILMI is used."
"This object indicates the organizational scope for the referenced address.
The information of the referenced address shall not be distributed outside the indicated scope.
Refer to Annex 5.3 of ATM Forum UNI
Signalling 4.0 for guidelines regarding the use of organizational scopes.
This value cannot be configured for ILMI registered addresses.
The default values for organizational scope are localNetwork(1) for ATM group addresses, and global(15) for individual addresses."
"This object is used to create and delete rows in the atmIfRegisteredAddrTable.
Rows created dynamically (e.g., ILMI  registered addresses) cannot be deleted using this object."
ATM VPI/VCI to Address Mapping Table atmVclAddrTable  OBJECT
"This table provides a mapping between the atmVclTable and the ATM called party/calling party address.
This table can be used to retrieve the calling party and called party ATM address pair for a given VCL.
Note that there can be more than one pair of calling party and called party ATM addresses for a VCL in a point to multi point call."
Each entry in this table represents a binding between a VCL and an ATM address associated with this call.
This ATM address can be either the called party address or the calling party address.
There can be more than one pair of calling/called party ATM addresses associated with the VCL entry for point to multi point calls.
Objects atmVclAddrType, and atmVclAddrRowStatus are required during row creation.
An ATM address on one end of the VCL.
For SVCs, the agent supplies the value of this object at creation time.
For PVC VCL, the manager can supply the value of this object during or after the PVC VCL creation."
The type of ATM Address represented by the object atmVclAddrAddr.
Choices are either the calling party ATM address or the called party ATM address."
"This object is used to create or destroy an entry from this table.
Note that the manager entity can only destroy the PVC VCLs."
ATM Address to VPI/VCI Mapping Table
This table provides an alternative way to access   a row in the atmVclAddrTable by using   an ATM address as an index, instead of
"This table provides an alternative way to retrieve the atmVclTable.
This table can be used to retrieve the indexing to the atmVclTable by an ATM address."
Each entry in this table represents an entry in the atmVclTable of the ATM MIB by its ATM address.
The ATM address is either the calling or called party ATM address of the call.
Entries in this table are read only.
They show up when entries are created in the atmVclAddrTable."
REFERENCE "Tesink, K., Editor, Definitions of Managed Objects for ATM Management, RFC 2515, Bell Communications Research, February, 1999.
The interface index of the ATM interface to which this VCL pertains.
This object combined with the atmAddrVclVpi and atmAddrVclVci objects serves as an index to the atmVclTable."
The VPI value of the VCL.
This object combined with the atmAddrVclAtmIfIndex and atmAddrVclVci objects serves as an index to the atmVclTable."
The VCI value of the VCL.
the atmAddrVclAtmIfIndex and atmAddrVclVpi objects serves as an index to the atmVclTable."
The type of ATM Address represented by the object atmVclAddrAddr.
Choices are either calling party address or called party address."
"This table contains all statistics counters per VPL.
It is used to monitor the usage of the VPL in terms of incoming cells and outgoing cells."
{ atm2MIBObjects 9 } atmVplStatEntry    OBJECT
"The total number of valid ATM cells received by this VPL including both CLP 0 and CLP 1 cells.
The cells are counted prior to the application of the traffic policing."
"The number of valid ATM cells received by this VPL with CLP 0.
The cells are counted prior to the application of the traffic policing."
"The total number of valid ATM cells discarded by the traffic policing entity.
This includes cells originally received with CLP 0 and CLP 1."
"The total number of valid ATM cells transmitted  by this VPL.
This includes both CLP 0 and CLP 1 cells."
ATM Logical Port Configuration Table atmVplLogicalPortTable OBJECT
An entry with information about the ATM Logical Port interface."
"Indicates whether the VPC at this VPL interface is an ATM Logical Port interface."
The ifTable index of the ATM logical port interface associated with this VPL.
The distinguished value of zero indicates that the agent has not (yet) assigned such an ifTable Index.
The zero value must be assigned by the agent if the value of atmVplLogicalPortDef is set to notLogicalIf, or if the VPL row is not active."
"This table contains all statistics counters per VCL.
It is used to monitor the usage of the VCL in terms of incoming cells and outgoing cells."
"The total number of valid ATM cells received by this VCL including both CLP 0 and CLP 1 cells.
The cells are counted prior to the application of the traffic policing."
"The number of valid ATM cells received by this VCL with CLP 0.
The cells are counted prior to the application of the traffic policing."
"The total number of valid ATM cells discarded by the traffic policing entity.
This includes cells originally received with CLP 0 and CLP 1."
"The total number of valid ATM cells transmitted  by this VCL.
This includes both CLP 0 and CLP 1 cells."
ATM AAL5 per VCC Statistics Table atmAal5VclStatTable   OBJECT
SEQUENCE OF AtmAal5VclStatEntry MAX ACCESS
"This table provides a collection of objects providing AAL5 configuration and performance statistics of a VCL."
{ atm2MIBObjects 12 } atmAal5VclStatEntry    OBJECT
"The number of AAL5 CPCS PDUs received on the AAL5 VCC at the interface identified by the ifIndex."
ATM VC General Information Table atmVclGenTable OBJECT TYPE
An entry with general information about the ATM VC."
"The value of this object identifies the row in the ATM Signalling Descriptor Parameter Table which applies to this VCL."
ATM Interface Configuration Extension Table
This table contains ATM interface configuration and monitoring information not defined in the atmInterfaceConfTable from the ATM MIB.
This includes the type of connection setup procedures, ILMI information, and information on the VPI/VCI range.
" REFERENCE "Tesink, K., Editor, Definitions of Managed Objects for ATM Management, RFC 2515, Bell Communications Research, February, 1999."
"An entry extends the atmInterfaceConfEntry defined in the ATM  MIB.
Each entry corresponds to an ATM interface."
REFERENCE "Tesink, K., Editor, Definitions of Managed Objects for ATM Management, RFC 2515, Bell Communications Research, February, 1999.
Setting this variable to a value of 'other' is not allowed.
This may reflect a manually configured value for the interface type, or may be determined by other means such as auto configuration.
A value of `autoConfig' indicates that auto configuration was requested but has not yet been completed."
"The configured role of the managed entity as one side of the ATM interface.
This value does not apply when the object atmIntfConfigType is set to `autoConfig', `atmfPnni1Dot0', or `atmfBici2Dot0'."
"The current role used by the managed entity to represent one side of the ATM interface."
Indicates which components of ILMI are administratively enabled on this interface.
If the 'ilmi' bit is not set, then no ILMI components are operational.
ILMI components other than auto  configuration that are not represented in the value have their administrative status determined according to the 'ilmi' bit.
The ILMI auto configuration component is enabled/disabled by the atmIntfConfigType object."
{ atmInterfaceExtEntry 5 } atmIntfIlmiOperStatus    OBJECT
"Indicates which components of ILMI are operational on this interface."
"Indicates the state of the ILMI Finite State Machine associated with this interface."
The amount of time S between successive transmissions of ILMI messages on this interface for the purpose of detecting establishment of ILMI connectivity."
REFERENCE "ATM Forum, Integrated Local Management Interface (ILMI) Specification, Version 4.0, af ilmi 0065.000, September 1996,
The amount of time T between successive transmissions of ILMI messages on this interface for the purpose of detecting loss of ILMI connectivity.
zero disables ILMI connectivity procedures on this interface.
REFERENCE "ATM Forum, Integrated Local Management Interface (ILMI) Specification, Version 4.0, af ilmi 0065.000, September 1996,
The number K of consecutive polls on this interface for which no ILMI response message is received before ILMI connectivity is declared lost."
REFERENCE "ATM Forum, Integrated Local Management Interface (ILMI) Specification, Version 4.0, af ilmi 0065.000, September 1996,
"Specifies whether this end of the interface is advertised in ILMI as a device of the `public' or `private' type."
The maximum VPI that the signalling stack on the ATM interface may currently allocate to switched virtual path connections.
This value is the minimum of atmInterfaceConfMaxSvpcVpi, and the atmInterfaceMaxSvpcVpi of the interface's UNI/NNI peer.
If the interface does not negotiate with its peer to determine the maximum VPI that can be allocated to SVPCs on the interface, then the value of this object must equal atmInterfaceConfMaxSvpcVpi. "
The maximum VPI that the signalling stack on the ATM interface may currently allocate to switched virtual channel connections.
This value is the minimum of atmInterfaceConfMaxSvccVpi, and the atmInterfaceConfMaxSvccVpi of the interface's UNI/NNI peer.
If the interface does not negotiate with its peer to determine the maximum VPI that can be allocated to SVCCs on the interface, then the value of this object must equal atmInterfaceConfMaxSvccVpi."
{ atmInterfaceExtEntry 15 } atmInterfaceConfMinSvccVci    OBJECT
{ atmInterfaceExtEntry 16 } atmInterfaceCurrentMinSvccVci    OBJECT
The minimum VCI that the signalling stack on the ATM interface may currently allocate to switched virtual channel connections.
This value is the maximum of atmInterfaceConfMinSvccVci, and the atmInterfaceConfMinSvccVci of the interface's UNI/NNI peer.
If the interface does not negotiate with its peer to determine the minimum VCI that can be allocated to SVCCs on the interface, then the value of this object must equal atmInterfaceConfMinSvccVci."
"This object identifies the row in the atmTrafficDescrParamTable used during ILMI auto configuration to specify the advertised signalling VCC traffic parameters for the receive direction.
The traffic descriptor resulting from ILMI auto configuration of the signalling VCC is indicated in the atmVclTable."
"This object identifies the row in the atmTrafficDescrParamTable used during ILMI auto configuration to specify the advertised signalling VCC traffic parameters for the transmit direction.
The traffic descriptor resulting from ILMI auto configuration of the signalling VCC is indicated in the atmVclTable."
"The number of times the operational status of a PVPL or PVCL on this interface has gone down."
The current number of VPLs on this interface for which there is an active row in the atmVplTable having an atmVplConnKind value of `pvc' and an atmVplOperStatus with a value other than `up'."
The current number of VCLs on this interface for which there is an active row in the atmVclTable having an atmVclConnKind value of `pvc' and an atmVclOperStatus with a value other than `up'."
"Allows the generation of traps in response to PVCL or PVPL failures on this interface."
The minimum interval between the sending of atmIntfPvcFailuresTrap notifications for this interface."
For root, this is the number of rejected setup requests and for leaf, this is the number of setup failure received."
For root, this includes both incoming setup request and root intiated setup requests."
ATM ILMI Service Registry Table atmIlmiSrvcRegTable OBJECT TYPE
"This table contains a list of all the ATM network services known by this device.
The characteristics of these services are made available through the ILMI, using the ILMI general purpose service registry MIB.
These services may be made available to all ATM interfaces (atmIlmiSrvcRegIndex   0) or to some specific ATM interfaces only (atmIlmiSrvcRegIndex   ATM interface index)."
Implementors need to be aware that if the size of the atmIlmiSrvcRegServiceID exceeds 112 sub identifiers then OIDs of column instances in this table will have more than 128 sub  identifiers and cannot be accessed using SNMPv1, SNMPv2, or SNMPv3.
The ATM interface where the service defined in this entry can be made available to an ATM device attached to this interface.
The value of 0 has a special meaning: when an ATM service is defined in an entry whose atmIlmiSrvcRegIndex is zero, the ATM service is available to ATM devices connected to any ATM interface.
When the user side of an adjacent device queries the content of the ILMI service registry MIB (using the ILMI protocol), the local network side responds with the ATM services defined in atmIlmiSrvcRegTable entries, provided that these entries are indexed by: the corresponding ifIndex value (atmIlmiSrvcRegIndex equal to the ifIndex of the interface to which the adjacent device is connected)
This is the service identifier which uniquely identifies the type of service at the address provided in the table.
The object identifiers for the LAN Emulation Configuration Server (LECS) and the ATM Name Server (ANS) are defined in the ATM Forum ILMI Service Registry MIB.
The object identifiers for the ATMARP Server, the Multicast Address Resolution Server (MARS), and the NHRP Server (NHS) are defined in RFC 2601, RFC 2602, and RFC 2603, respectively."
An arbitrary integer to differentiate multiple rows containing different ATM addresses for the same service on the same interface.
This number need NOT be the same as the corresponding ILMI atmfSrvcRegAddressIndex MIB object."
"This is the full address of the service.
The user side of the adjacent device may use this address to establish a connection with the service."
"An octet string used according to the value of atmIlmiSrvcRegServiceID."
"This object is used to create or destroy an entry from this table."
ILMI Network Prefix Table atmIlmiNetworkPrefixTable    OBJECT
A table specifying per interface network prefix(es) supplied by the network side of the UNI during ILMI address registration.
When no network prefixes are specified for a particular interface, one or more network prefixes based on the switch address(es) may be used for ILMI address registration."
Note that the index variable atmIlmiNetPrefixPrefix is a variable  length string, and as such the rule for variable length strings in section 7.7 of RFC 2578 applies.
The network prefix specified for use in ILMI address registration."
ATM Switch Address Table atmSwitchAddressTable
This table contains one or more ATM endsystem addresses on a per switch basis.
These addresses are used to identify the switch.
When no ILMI network prefixes are configured for certain interfaces, network prefixes based on the switch address(es) may be used for ILMI address registration."
An entry in the ATM Switch Address table.
An arbitrary index used to enumerate the ATM endsystem addresses for this switch."
atmSwitchAddressEntry 1 } atmSwitchAddressAddress   OBJECT TYPE SYNTAX
When no ESI or SEL field is specified, the switch may generate the ESI and SEL fields automatically to obtain a complete 20 byte ATM endsystem address."
ATM VP Cross Connect Extension Table atmVpCrossConnectXTable OBJECT TYPE
This table contains one row per VP Cross Connect represented in the atmVpCrossConnectTable."
Each entry provides an two objects that name the Cross Connect.
One is assigned by the Service User and the other by the Service Provider."
"This is a service user assigned textual representation of a VPC PVC."
"This is a system supplied textual representation of VPC PVC.
It is assigned by the service provider."
This table contains one row per VC Cross Connect represented in the atmVcCrossConnectTable."
Each entry provides an two objects that name the Cross Connect.
One is assigned by the Service User and the other by the Service Provider."
"This is a service user assigned textual representation of a VCC PVC."
"This is a system supplied textual representation of VCC PVC.
It is assigned by the service provider."
Currently Failing PVPL Table atmCurrentlyFailingPVplTable
A table indicating all VPLs for which there is an active row in the atmVplTable having an atmVplConnKind value of `pvc' and an atmVplOperStatus with a value other than `up'."
Currently Failing PVCL Table atmCurrentlyFailingPVclTable
A table indicating all VCLs for which there is an active row in the atmVclTable having an atmVclConnKind value of `pvc' and an atmVclOperStatus with a value other than `up'."
"A notification indicating that one or more PVPLs or PVCLs on this interface has failed since the last atmPvcFailuresTrap was sent.
If this trap has not been sent for the last atmIntfPvcNotificationInterval, then it will be sent on the next increment of atmIntfPvcFailures."
"The compliance statement for SNMP entities which represent ATM interfaces.
The compliance statements are used to determine if a particular group or object applies to hosts, networks/switches, or both.
The Common group is defined as applicable to all three."
This group is mandatory for systems that are supporting per VPC or per VCC counters."
MIN ACCESS   read only DESCRIPTION
"This object is mandatory for systems support ATM Logical Port interfaces."
This object is mandatory for systems that support negotiation of signalling VCC traffic parameters through ILMI."
This object is mandatory for systems that support negotiation of signalling VCC traffic parameters through ILMI."
"Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported,
MIN ACCESS   read only DESCRIPTION "Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported,
"This group is optional for systems implementing support for an ATM Switch or an ATM Network Service."
"This group is mandatory for systems implementing support for an ATM Network Service."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION "Write access is not required, and only one of the six enumerated values for the RowStatus textual convention need be supported, specifically:  active(1).
ATM Host Sig Descriptor Parameter Group GROUP
"This group is mandatory for a Host that implements ATM interfaces.
Write access is not required for this group."
OBJECT GROUP OBJECTS { atmSigSSCOPConEvents, atmSigSSCOPErrdPdus, atmSigDetectSetupAttempts, atmSigEmitSetupAttempts, atmSigDetectUnavailRoutes, atmSigEmitUnavailRoutes, atmSigDetectUnavailResrcs, atmSigEmitUnavailResrcs, atmSigDetectCldPtyEvents, atmSigEmitCldPtyEvents, atmSigDetectMsgErrors, atmSigEmitMsgErrors, atmSigDetectClgPtyEvents, atmSigEmitClgPtyEvents, atmSigDetectTimerExpireds, atmSigEmitTimerExpireds, atmSigDetectRestarts, atmSigEmitRestarts, atmSigInEstabls, atmSigOutEstabls, atmVplLogicalPortDef, atmVplLogicalPortIndex, atmInterfaceConfMaxSvpcVpi, atmInterfaceCurrentMaxSvpcVpi, atmInterfaceConfMaxSvccVpi, atmInterfaceCurrentMaxSvccVpi, atmInterfaceConfMinSvccVci, atmInterfaceCurrentMinSvccVci,
atmIntfSigVccRxTrafficDescrIndex, atmIntfSigVccTxTrafficDescrIndex, atmIntfPvcFailures, atmIntfCurrentlyFailingPVpls, atmIntfCurrentlyFailingPVcls, atmIntfPvcNotificationInterval, atmIntfPvcFailuresTrapEnable, atmIntfLeafSetupFailures, atmIntfLeafSetupRequests,
atmIntfConfigType, atmIntfActualType, atmIntfConfigSide, atmIntfActualSide, atmIntfIlmiAdminStatus, atmIntfIlmiOperStatus, atmIntfIlmiFsmState, atmIntfIlmiEstablishConPollIntvl, atmIntfIlmiCheckConPollIntvl, atmIntfIlmiConPollInactFactor, atmIntfIlmiPublicPrivateIndctr, atmCurrentlyFailingPVplTimeStamp,
A collection of objects providing information for a Switch/Service/Host that implements ATM interfaces."
A collection of objects providing information for a Switch/Service that implements ATM interfaces."
A collection of objects providing information for a Switch/Service that implements ATM signalling."
"A collection of objects providing information for a Host that implements ATM interfaces."
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
Deletion of VP cross connects 2. atmSvcVcCrossConnectTable
Deletion of VC cross connects 3.
Signalling read only statistics 4.
VCL/Address mapping table (read only
VPL statistics (read only) 10.
VP cross connect params 19.
PVPL status info (read only) 21. atmCurrentlyFailingPVclTable
PVCL status info (read only)
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
