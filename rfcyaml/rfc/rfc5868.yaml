- title: __initial_text__
  contents:
  - '       Problem Statement on the Cross-Realm Operation of Kerberos

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides background information regarding large-scale\n\
    \   Kerberos deployments in the industrial sector, with the aim of\n   identifying\
    \ issues in the current Kerberos cross-realm authentication\n   model as defined\
    \ in RFC 4120.\n   This document describes some examples of actual large-scale\n\
    \   industrial systems, and lists requirements and restrictions regarding\n  \
    \ authentication operations in such environments.  It also identifies a\n   number\
    \ of requirements derived from the industrial automation field.\n   Although they\
    \ are found in the field of industrial automation, these\n   requirements are\
    \ general enough and are applicable to the problem of\n   Kerberos cross-realm\
    \ operations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5868.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Kerberos System .................................................4\n  \
    \    2.1. Kerberos Basic Operation ...................................4\n    \
    \  2.2. Cross-Realm Operation ......................................4\n   3. Applying\
    \ Cross-Realm Kerberos in Complex Environments ...........5\n   4. Requirements\
    \ ....................................................7\n   5. Issues ..........................................................8\n\
    \      5.1. Unreliability of Authentication Chain ......................8\n  \
    \    5.2. Possibility of MITM in the Indirect Trust Model ............8\n    \
    \  5.3. Scalability of the Direct Trust Model ......................9\n      5.4.\
    \ Exposure to DoS Attacks ....................................9\n      5.5. Client's\
    \ Performance ......................................10\n      5.6. Kerberos Pre-Authentication\
    \ Problem in Roaming Scenarios ..10\n   6. Implementation Considerations ..................................11\n\
    \   7. Security Considerations ........................................11\n  \
    \ 8. Acknowledgements ...............................................11\n   9.\
    \ References .....................................................11\n      9.1.\
    \ Normative References ......................................11\n      9.2. Informative\
    \ References ....................................11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Kerberos Version 5 is a widely deployed mechanism that enables\
    \ a\n   server to authenticate a client before granting it access to a\n   certain\
    \ service.  Each client belongs to a managed domain called a\n   realm.  Kerberos\
    \ supports authentication when a client and a server\n   belong to different realms.\
    \  This is called cross-realm\n   authentication.\n   There exist several ways\
    \ for using Kerberos in large-scale\n   distributed systems.  Such infrastructures\
    \ are typically split into\n   several managed domains for geographical reasons,\
    \ and to implement\n   different management policies.  In order to ensure smooth\
    \ network\n   operations in such systems, a common authentication mechanism for\
    \ the\n   different managed domains is required.  When using the Kerberos\n  \
    \ cross-realm operation in large-scale distributed systems, some issues\n   arise.\n\
    \   As industrial automation is moving towards wider adoption of Internet\n  \
    \ standards, the Kerberos authentication protocol represents one of the\n   best\
    \ alternatives for ensuring the confidentiality and the integrity\n   of communications\
    \ in control networks while meeting performance and\n   security requirements.\
    \  However, the use of Kerberos cross-realm\n   operations in large-scale industrial\
    \ systems may introduce issues\n   that could cause performance and reliability\
    \ problems.\n   This document briefly describes the Kerberos Version 5 system\
    \ and its\n   cross-realm operation mode.  Then it describes two case-study systems\n\
    \   that Kerberos could be applied to, and describes seven requirements\n   in\
    \ those systems (in terms of both management and operations) that\n   outline\
    \ various constraints that Kerberos operations might be\n   subjected to.  Finally,\
    \ it lists six issues related to Kerberos\n   cross-realm operations when applied\
    \ to those systems.\n   Note that this document might not describe all issues\
    \ related to\n   Kerberos cross-realm operations.  New issues might be found in\
    \ the\n   future.  It also does not propose any solution to the issues\n   described\
    \ in this document.  Furthermore, publication of this\n   document does not mean\
    \ that each of the issues has to be solved by\n   the IETF members.  Detailed\
    \ analysis of the issues, problem\n   definitions, and exploration of possible\
    \ solutions may be carried out\n   as separate work items.\n   This document assumes\
    \ that the readers are familiar with the terms\n   and concepts described in \"\
    The Kerberos Network Authentication\n   Service (V5)\" ([RFC4120]).\n"
- title: 2.  Kerberos System
  contents:
  - '2.  Kerberos System

    '
- title: 2.1.  Kerberos Basic Operation
  contents:
  - "2.1.  Kerberos Basic Operation\n   Kerberos [RFC4120] is a widely deployed authentication\
    \ system.  The\n   authentication process in Kerberos involves principals and\
    \ a Key\n   Distribution Center (KDC).  The principals can be users or services.\n\
    \   Each KDC maintains a database of principals and shares a secret key\n   with\
    \ each registered principal.\n   The authentication process allows a user to acquire\
    \ the needed\n   credentials from the KDC.  These credentials allow services to\n\
    \   authenticate the users before granting them access to the resources.\n   An\
    \ important part of the credentials is called \"tickets\".  There are\n   two\
    \ kinds of tickets: the Ticket-Granting Ticket (TGT) and the\n   service ticket.\
    \  The TGT is obtained periodically from the KDC and\n   has a limited lifetime,\
    \ after which it expires and the user must\n   renew it.  The TGT is used to obtain\
    \ the other kind of tickets --\n   service tickets.  The user obtains a TGT from\
    \ the Authentication\n   Service (AS), a logical component of the KDC.  The process\
    \ of\n   obtaining a TGT is referred to as \"AS exchange\".  When a request for\n\
    \   a TGT is issued by the user, the AS responds by sending a reply\n   packet\
    \ containing the credentials, which consist of the TGT along\n   with a random\
    \ key called the \"TGS session key\".  The TGT contains\n   information encrypted\
    \ using a secret key associated with a special\n   service, referred to as the\
    \ \"TGS\" (Ticket-Granting Service).  The TGS\n   session key is encrypted using\
    \ the user's key so that the user can\n   obtain the TGS session key only if she\
    \ knows the secret key she\n   shares with the KDC.  The TGT is then used to obtain\
    \ a service ticket\n   from the TGS -- the second component of the KDC.  The process\
    \ of\n   obtaining service tickets is referred to as \"TGS exchange\".  The\n\
    \   request for a service ticket consists of a packet containing a TGT\n   and\
    \ an \"Authenticator\".  The Authenticator is encrypted using the TGS\n   session\
    \ key and contains the identity of the user as well as time\n   stamps (for protection\
    \ against replay attacks).  After decrypting the\n   TGT received from the user,\
    \ the TGS extracts the TGS session key.\n   Using that session key, it decrypts\
    \ the Authenticator and\n   authenticates the user.  Then, the TGS issues the\
    \ credentials\n   requested by the user.  These credentials consist of a service\
    \ ticket\n   and a session key that will be used to authenticate the user to the\n\
    \   desired application service.\n"
- title: 2.2.  Cross-Realm Operation
  contents:
  - "2.2.  Cross-Realm Operation\n   The Kerberos protocol provides cross-realm authentication\n\
    \   capabilities.  This allows users to obtain service tickets to access\n   services\
    \ in foreign realms.  In order to access such services, the\n   users first contact\
    \ their home KDC asking for a TGT that will be used\n   with the TGS of the foreign\
    \ realm.  If there is a direct trust\n   relationship between the home realm and\
    \ the foreign realm\n   (practically materialized in shared inter-realm keys),\
    \ the home KDC\n   delivers the requested TGT.\n   However, if the home realm\
    \ does not share inter-realm keys with the\n   foreign realm, we are in a so-called\
    \ indirect trust model situation.\n   In this situation, the home KDC will provide\
    \ a TGT that can be used\n   with an intermediary foreign realm that is likely\
    \ to be sharing\n   inter-realm keys with the target realm.  The client can use\
    \ this\n   \"intermediary TGT\" to communicate with the intermediary KDC, which\n\
    \   will iterate the actions taken by the home KDC.  If the intermediary\n   KDC\
    \ does not share inter-realm keys with the target foreign realm, it\n   will point\
    \ the user to another intermediary KDC (just as in the first\n   exchange between\
    \ the user and her home KDC).  However, in the other\n   case (when it shares\
    \ inter-realm keys with the target realm), the\n   intermediary KDC will issue\
    \ a TGT that can be used with the KDC of\n   the target realm.  After obtaining\
    \ a TGT for the desired foreign\n   realm, the client uses it to obtain service\
    \ tickets from the TGS of\n   the foreign realm.  Finally, the user accesses the\
    \ service using the\n   service ticket.\n   When the realms belong to the same\
    \ institution, a chain of trust can\n   be automatically determined by the client\
    \ or the KDC by following the\n   DNS domain hierarchy and assuming that a parent\
    \ domain shares keys\n   with all of its child sub-domains.  However, since this\
    \ assumption is\n   not always true, in many situations, the trust path might\
    \ have to be\n   specified manually.  Since the Kerberos cross-realm operations\
    \ with\n   the indirect inter-realm trust model rely on intermediary realms, the\n\
    \   success of the cross-realm operation completely depends on the realms\n  \
    \ that are part of the authentication path.\n"
- title: 3.  Applying Cross-Realm Kerberos in Complex Environments
  contents:
  - "3.  Applying Cross-Realm Kerberos in Complex Environments\n   In order to help\
    \ the reader understand requirements and restrictions\n   for cross-realm authentication\
    \ operations, this section describes the\n   scale and operations of two actual\
    \ systems that could be supported by\n   cross-realm Kerberos.  The two systems\
    \ would be most naturally\n   implemented using different trust models, which\
    \ will imply different\n   requirements for cross-realm Kerberos.\n   Hereafter,\
    \ we will consider an actual petrochemical company\n   [SHELLCHEM], and overview\
    \ two examples among its plants.\n   Petrochemical companies produce bulk petrochemicals\
    \ and deliver them\n   to large industrial customers.  The company under consideration\n\
    \   possesses 43 plants all over the world managed by operation sites in\n   35\
    \ countries.  This section shows two examples of these plants.\n   The first example\
    \ is a plant deploying a centralized system [CSPC].\n   CSPC, also referred to\
    \ as China National Offshore Oil Corporation\n   (CNOOC) and Shell Petrochemicals\
    \ Company, is operated by a joint\n   enterprise of these two companies.  This\
    \ system is one of the largest\n   of its type in the world.  It is located in\
    \ an area of 3.4 square\n   kilometers in the north coast of Daya Bay, Guangdong,\
    \ in southeast\n   China.  3,000 network segments are deployed in the system,\
    \ and 16,000\n   control devices are connected to local area networks.  These\
    \ devices\n   belong to 9 different subsystems.  A control device can have many\n\
    \   control and monitoring points.  In the plant considered in this\n   example,\
    \ there are 200,000 control points in all.  They are\n   controlled by 3 different\
    \ control centers.\n   Another example is a distributed system [NAM].  The Nederlandse\n\
    \   Aardolie Maatschappij (NAM) is operated by a partnership company of\n   two\
    \ enterprises that represent the oil company.  This system is\n   composed of\
    \ some plants that are geographically distributed within\n   the range of 863\
    \ square kilometers in the northern part of the\n   Netherlands.  26 plants, each\
    \ one called a \"cluster\", are scattered\n   in the area.  They are connected\
    \ to each other by a private ATM WAN.\n   Each cluster has approximately 500-1,000\
    \ control devices.  These\n   devices are managed by a local control center in\
    \ each cluster.  In\n   the entire system of the NAM, there are one million control\
    \ points.\n   In both examples, the end devices are basically connected to a local\n\
    \   network by a twisted-pair cable, with a low bandwidth of 32 kbps.\n   End\
    \ devices use a low clock CPU -- for example, the H8 [RNSS-H8] and\n   M16C [RNSS-M16C].\
    \  Furthermore, to reduce power consumption, the\n   clock on the CPU may be lowered.\
    \  This adjustment restricts the\n   amount of total energy in the device, thereby\
    \ reducing the risk of\n   explosions.\n   A device on the network collects data\
    \ from other devices monitoring\n   the condition of the system.  These data are\
    \ then used to make\n   decisions on how to control other devices via instructions\n\
    \   transmitted over the network.  If it takes time for data to travel\n   through\
    \ the network, normal operations cannot be ensured.  The travel\n   time of data\
    \ from a device to another device in both examples must be\n   within 1 second.\
    \  Other control system applications may have shorter\n   or longer timescales.\n\
    \   Some parts of the operations, such as control, maintenance, and\n   environmental\
    \ monitoring, can be consigned to an external\n   organization.  Also, agents\
    \ may be consigned to walk around the plant\n   and collect information about\
    \ plant operations, or to watch the plant\n   from a remote site.\n"
- title: 4.  Requirements
  contents:
  - "4.  Requirements\n   This section provides a list of requirements derived from\
    \ the\n   industrial automation use-case.  The requirements are written in a\n\
    \   generic fashion, and are addressed towards frameworks and\n   architectures\
    \ that underlie Kerberos cross-realm operations.  The aim\n   of these requirements\
    \ is to provide some foundational guidelines to\n   future developments of cross-realm\
    \ framework or architecture for\n   Kerberos.\n   Requirements R-1, R-2, R-3,\
    \ and R-4 are related to the management of\n   the divided system.  Requirements\
    \ R-5, R-6, and R-7 are related to\n   restrictions in such large-scale industrial\
    \ networks as those\n   discussed in Section 3.\n   R-1   For organizational reasons\
    \ and scalability needs, a management\n         domain typically must be partitioned\
    \ into two or more\n         sub-domains of management.  Therefore, any architecture\
    \ and\n         implementation solution to the Kerberos cross-realm problem\n\
    \         must (i) support the case of cross-realm operations across\n       \
    \  multiple management domains and (ii) support delegation of\n         management\
    \ authority from one management domain to another\n         management domain.\
    \  This must be performed without any decrease\n         in the security level\
    \ or quality of those cross-realm\n         operations and must not expose Kerberos\
    \ entities to new types\n         of attacks.\n   R-2   Any architecture and implementation\
    \ solution to the Kerberos\n         cross-realm problem must support the co-existence\
    \ of multiple\n         independent management domains on the same network.\n\
    \         Furthermore, it must allow organizations (corresponding to\n       \
    \  different management domains) to delegate the management of a\n         part\
    \ of, or the totality of, their system at any one time.\n   R-3   Any architecture\
    \ and implementation solution to the Kerberos\n         cross-realm problem must\
    \ allow the use-case in which one device\n         operationally controls another\
    \ device, but each belongs to\n         different management domains, respectively.\n\
    \   R-4   Any architecture and implementation solution to the Kerberos\n     \
    \    cross-realm problem must address the fundamental deployment\n         use-case\
    \ in which the management domain traverses geographic\n         boundaries and\
    \ network topological boundaries.  In particular,\n         it must address the\
    \ case where devices are geographically (or\n         topologically) remote, even\
    \ though they belong to the same\n         management domain.\n   R-5   Any architecture\
    \ and implementation solution to the Kerberos\n         cross-realm problem must\
    \ be aimed at reducing operational and\n         management costs as much as possible.\n\
    \   R-6   Any architecture and implementation solution to the Kerberos\n     \
    \    cross-realm problem must address the (limited) processing\n         capabilities\
    \ of devices, and implementations of solutions must\n         be considered to\
    \ aim at limiting or suppressing power\n         consumption of such devices.\n\
    \   R-7   Any architecture and implementation solution to the Kerberos\n     \
    \    cross-realm problem must address the possibility of limited\n         availability\
    \ of communications bandwidth between devices within\n         one domain, and\
    \ also across domains.\n"
- title: 5.  Issues
  contents:
  - "5.  Issues\n   This section lists issues in Kerberos cross-realm operations when\n\
    \   used in large-scale systems such as the ones described in Section 3,\n   and\
    \ taking into consideration the requirements described in\n   Section 4.\n"
- title: 5.1.  Unreliability of Authentication Chain
  contents:
  - "5.1.  Unreliability of Authentication Chain\n   When the trust relationship between\
    \ realms follows a chain or\n   hierarchical model, the cross-realm authentication\
    \ operations are not\n   dependable, since they strongly depend on intermediary\
    \ realms that\n   might not be under the same authority.  If any of the realms\
    \ in the\n   authentication path is not available, then the principals of the\
    \ end\n   realms cannot perform cross-realm operations.\n   The end-point realms\
    \ do not have full control of and responsibility\n   for the success of the cross-realm\
    \ operations, even if their own\n   respective KDCs are fully functional.  Dependability\
    \ of a system\n   decreases if the system relies on uncontrolled components. \
    \ End-point\n   realms have no way of knowing the authentication result occurring\n\
    \   within intermediary realms.\n   Satisfying requirements R-1 and R-2 will eliminate\
    \ (or considerably\n   diminish) this issue of the unreliability of the authentication\n\
    \   chain.\n"
- title: 5.2.  Possibility of MITM in the Indirect Trust Model
  contents:
  - "5.2.  Possibility of MITM in the Indirect Trust Model\n   Every KDC in the authentication\
    \ path knows the shared secret between\n   the client and the remaining KDCs in\
    \ the authentication path.  This\n   allows a malicious KDC to perform man-in-the-middle\
    \ (MITM) attacks on\n   communications between the client and any KDC in the remaining\n\
    \   authentication chain.  A malicious KDC also may learn the service\n   session\
    \ key that is used to protect the communication between the\n   client and the\
    \ actual application service.  It can then use this key\n   to perform a MITM\
    \ attack.\n   In [SPECCROSS], the authors have analyzed the cross-realm operations\n\
    \   in Kerberos and provided formal proof of the issue discussed in this\n   section.\n\
    \   Satisfying requirements R-1 and R-2 will eliminate (or considerably\n   diminish)\
    \ this issue of MITM attacks by intermediate KDCs in the\n   indirect trust model.\n"
- title: 5.3.  Scalability of the Direct Trust Model
  contents:
  - "5.3.  Scalability of the Direct Trust Model\n   In the direct trust relationship\
    \ model, the realms involved in the\n   cross-realm operations share keys, and\
    \ their respective TGS's\n   principals are registered in each other's KDC.  Each\
    \ realm must\n   maintain keys with all foreign realms that it interacts with.\
    \  This\n   can become a cumbersome task and may increase maintenance costs when\n\
    \   the number of realms increases.\n   Satisfying requirements R-1, R-2, and\
    \ R-5 will eliminate (or\n   considerably diminish) this issue of scalability\
    \ of the direct trust\n   model.\n"
- title: 5.4.  Exposure to DoS Attacks
  contents:
  - "5.4.  Exposure to DoS Attacks\n   One of the assumptions made when allowing the\
    \ cross-realm operation\n   in Kerberos is that users can communicate with KDCs\
    \ located in remote\n   realms.  This practice introduces security threats, because\
    \ KDCs are\n   open to the public network.  Administrators may think of restricting\n\
    \   the access to the KDC to the trusted realms only.  However, this\n   approach\
    \ is not scalable and does not really protect the KDC.\n   Indeed, when the remote\
    \ realms have several IP prefixes (e.g.,\n   control centers or outsourcing companies,\
    \ located worldwide), then\n   the administrator of the local KDC must collect\
    \ the list of prefixes\n   that belong to these organizations.  The filtering\
    \ rules must then\n   explicitly allow the incoming traffic from any host that\
    \ belongs to\n   one of these prefixes.  This makes the administrator's tasks\
    \ more\n   complicated and prone to human errors.  Also, the maintenance cost\n\
    \   increases.  On the other hand, when a range of external IP addresses\n   are\
    \ allowed to communicate with the KDC, then the risk of becoming\n   targets of\
    \ attacks from remote malicious users increases.\n   Satisfying requirements R-1,\
    \ R-3, R-4, and R-5 will eliminate (or\n   considerably diminish) this issue of\
    \ exposure to denial-of-service\n   (DoS) attacks.\n"
- title: 5.5.  Client's Performance
  contents:
  - "5.5.  Client's Performance\n   In Kerberos cross-realm operations, clients have\
    \ to perform TGS\n   exchanges with all of the KDCs in the trust path, including\
    \ the home\n   KDC and the target KDC.  A TGS exchange requires cryptographic\n\
    \   operations and may consume a large amount of processing time,\n   especially\
    \ when the client has limited computational capabilities.\n   As a result, the\
    \ overhead of Kerberos cross-realm exchanges may cause\n   unacceptable delays\
    \ in processing.\n   We ported the MIT Kerberos library (version 1.2.4), implemented\
    \ a\n   Kerberos client on our original board with H8 (16-bit, 20 MHz), and\n\
    \   measured the process time of each Kerberos message [KRBIMPL].  It\n   takes\
    \ 195 milliseconds to perform a TGS exchange with the on-board\n   H/W crypto\
    \ engine.  Indeed, this result seems reasonable, given the\n   requirement of\
    \ the response time for the control network.  However,\n   we did not modify the\
    \ clock speed of the H8 during our measurement.\n   The processing time must be\
    \ slower in an actual environment, because\n   H8 is used with a lowered clock\
    \ speed in such a system.  With such\n   devices, the delays can become unacceptable\
    \ when the number of\n   intermediary realms increases.\n   Satisfying requirements\
    \ R-1, R-2, R-6, and R-7 will eliminate (or\n   considerably diminish) this issue\
    \ relating to the client's\n   performance.\n"
- title: 5.6.  Kerberos Pre-Authentication Problem in Roaming Scenarios
  contents:
  - "5.6.  Kerberos Pre-Authentication Problem in Roaming Scenarios\n   In roaming\
    \ scenarios, the client needs to contact her home KDC to\n   obtain a cross-realm\
    \ TGT for the local (or visited) realm.  However,\n   the policy of the network\
    \ access providers or the gateway in the\n   local network usually does not allow\
    \ clients to communicate with\n   hosts in the Internet unless they provide valid\
    \ authentication\n   credentials.  In this manner, the client encounters a chicken-and-egg\n\
    \   problem where two resources are interdependent; the Internet\n   connection\
    \ is needed to contact the home KDC and for obtaining\n   credentials, and on\
    \ the other hand, the Internet connection is only\n   granted for clients who\
    \ have valid credentials.  As a result, the\n   Kerberos protocol cannot be used\
    \ as it is for authenticating roaming\n   clients requesting network access. \
    \ Typically, a VPN approach is\n   applied to solve this problem.  However, we\
    \ cannot always establish\n   VPNs between different sites.\n   Satisfying requirements\
    \ R-3, R-4, and R-5 will eliminate (or\n   considerably diminish) this roaming-related\
    \ issue pertaining to\n   Kerberos pre-authentication.\n"
- title: 6.  Implementation Considerations
  contents:
  - "6.  Implementation Considerations\n   This document describes issues of Kerberos\
    \ cross-realm operations.\n   There are important matters to be considered when\
    \ designing and\n   implementing solutions for these issues.  Such solutions must\
    \ not\n   introduce new problems.  Any solution should use existing components\n\
    \   or protocols as much as possible, and it should avoid introducing\n   definitions\
    \ of new components.  It should not require new changes to\n   existing deployed\
    \ clients and as much as possible should not\n   influence the client code-base.\
    \  Because a KDC is a significant\n   server in an information system based on\
    \ Kerberos, any new burden\n   placed on the KDC should be minimal.  Solutions\
    \ must take these\n   tradeoffs and requirements into consideration.  On the other\
    \ hand,\n   solutions are not required to solve all of the issues listed in this\n\
    \   document at once.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document clarifies the issues of the cross-realm\
    \ operation of\n   the Kerberos V system, which include security issues to be\n\
    \   considered.  See Sections 5.1, 5.2, 5.3, and 5.4 for further details.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors are grateful to Nobuo Okabe, Kazunori Miyazawa,\
    \ and\n   Atsushi Inoue.  They gave us lots of comments and suggestions for\n\
    \   this document from its earliest stages.  Nicolas Williams, Chaskiel\n   Grundman,\
    \ and Love Hornquist Astrand gave valuable suggestions and\n   corrections.  Thomas\
    \ Hardjono devoted much work and helped to improve\n   this document.  Finally,\
    \ the authors thank Jeffrey Hutzelman.  He\n   gave us a lot of suggestions for\
    \ completion of this document.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC4120]   Neuman, C., Yu, T., Hartman, S., and\
    \ K. Raeburn, \"The\n               Kerberos Network Authentication Service (V5)\"\
    , RFC 4120,\n               July 2005.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [CSPC]      \"CSPC Nanhai - Shell Global Solutions\"\
    ,\n               <http://www.shell.com/home/content/global_solutions/\n     \
    \          aboutshell/key_projects/nanhai/>.\n   [KRBIMPL]   \"A Prototype of\
    \ a Secure Autonomous Bootstrap Mechanism\n               for Control Networks\"\
    , Nobuo Okabe, Shoichi Sakane,\n               Masahiro Ishiyama, Atsushi Inoue\
    \ and Hiroshi Esaki,\n               SAINT, pp. 56-62, IEEE Computer Society,\
    \ 2006.\n   [NAM]       Nederlandse Aardolie Maatschappij BV,\n              \
    \ <http://www.nam.nl/>.\n   [RNSS-H8]   \"H8 Family | Renesas Electronics\",\n\
    \               <http://www.renesas.com/products/mpumcu/h8/\n               h8_landing.jsp>.\n\
    \   [RNSS-M16C] \"M16C Family (R32C/M32C/M16C) | Renesas Electronics\",\n    \
    \           <http://www.renesas.com/products/mpumcu/m16c/\n               m16c_landing.jsp>.\n\
    \   [SHELLCHEM] \"Shell Chemicals\",\n               <http://www.shell.com/home/content/chemicals>.\n\
    \   [SPECCROSS] I. Cervesato and A. Jaggard and A. Scedrov and C.\n          \
    \     Walstad, \"Specifying Kerberos 5 Cross-Realm\n               Authentication\"\
    , Fifth Workshop on Issues in the Theory\n               of Security, January\
    \ 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Shoichi Sakane\n   Yokogawa Electric Corporation\n   2-9-32\
    \ Nakacho, Musashino-shi\n   Tokyo  180-8750 Japan\n   EMail: Shouichi.Sakane@jp.yokogawa.com\n\
    \   Ken'ichi Kamada\n   Yokogawa Electric Corporation\n   2-9-32 Nakacho, Musashino-shi\n\
    \   Tokyo  180-8750 Japan\n   EMail: Ken-ichi.Kamada@jp.yokogawa.com\n   Saber\
    \ Zrelli\n   Yokogawa Electric Corporation\n   2-9-32 Nakacho, Musashino-shi\n\
    \   Tokyo  180-8750 Japan\n   EMail: Saber.Zrelli@jp.yokogawa.com\n   Masahiro\
    \ Ishiyama\n   Toshiba Corporation\n   1, Komukai Toshiba-cho, Saiwai-ku\n   Kawasaki\
    \  212-8582 Japan\n   EMail: masahiro@isl.rdc.toshiba.co.jp\n"
