Abstract Abstract Syntax Notation X (ASN.X) is an Extensible Markup Language (XML) representation for Abstract Syntax Notation One (ASN.1) specifications.
This document specifies the ASN.X representation of encoding instructions for the XML Encoding Rules (XER).
Introduction Abstract Syntax Notation X (ASN.X)
[ASN.X] is an Extensible Markup Language (XML)
[XML11] representation for Abstract Syntax Notation One (ASN.1) [X.680] specifications.
The ASN.X representation for the ASN.1 basic notation [X.680]
[X.680 1] is described elsewhere [ASN.X].
The grammar of ASN.1 permits the application of encoding instructions [X.680 1], through type prefixes and encoding control sections, that modify how abstract values are encoded by nominated encoding rules.
The generic notation for type prefixes and encoding control sections is defined by the ASN.1 basic notation; however, the notation for specific encoding instructions, i.e., the EncodingInstruction and EncodingInstructionAssignmentList productions of the notation, are defined separately for each set of encoding rules using encoding instructions.
This document specifies the ASN.X representation for EncodingInstructionAssignmentList and EncodingInstruction as they are defined for the XML Encoding Rules (XER) [X.693][X.693 1].
ASN.X is defined in terms of rules for translating from an ASN.1 specification.
This does not preclude an ASN.X module being written directly without a pre existing ASN.1 module; however, such an ASN.X module is considered valid if and only if there exists, in principle, an ASN.1 module that when translated would yield the ASN.X module.
By design, an ASN.X module is also the Robust XML Encoding Rules (RXER) [RXER] encoding of an ASN.1 value.
The ASN.1 type definitions for such values, insofar as they pertain to the ASN.1 basic notation, are provided elsewhere [ASN.X]; however, this document provides the ASN.1 type definitions for representing XER encoding instructions as abstract values.
These definitions appear in Appendix A.
The ASN.X translation of the ASN.1 module in Appendix A is presented in Appendix B.
The General Considerations of the specification for ASN.X [ASN.X] also apply here.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", and "MAY" in this document are to be interpreted as described in BCP 14, RFC 2119 [BCP14].
The key word "OPTIONAL" is exclusively used with its ASN.1 meaning.
A reference to an ASN.1 production [X.680] (e.g., Type, NamedType) is a reference to the text in an ASN.1 specification corresponding to that production.
The description of the translation of XER encoding instructions into ASN.X makes use of definitions from the XML Information Set (Infoset)
In particular, information item property names follow the Infoset convention of being shown in square brackets, e.g., [local name].
Literal values of Infoset properties are enclosed in double quotes; however, the double quotes are not part of the property values.
In the sections that follow, "information item" will be abbreviated to "item", e.g., "element information item" is abbreviated to "element item".
Element items will be referred to by their [local name] in angle brackets, e.g., "the <name> element item" means the element item with the [local name] "name".
Attribute items will be referred to by their [local name], e.g., "the name attribute item" means the attribute item with the [local name] "name".
[UNICODE] are expressed using the Unicode convention U n, where n is four to six hexadecimal digits, e.g., the space character is U 0020.
Preprocessing of ImportedTypesIdentification Interpretation of an ImportedTypesIdentification depends on a SymbolList in the Imports of a module, but a SymbolList does not have a direct translation into ASN.X.
A module containing at least one ImportedTypesIdentification must be preprocessed so that each ImportedTypesIdentification has the intended effect.
If an EncodingInstruction in an XER EncodingInstructionAssignmentList has a Targets instance that is an ImportedTypesIdentification, then each Type affected by the ImportedTypesIdentification MUST be replaced by an EncodingPrefixedType where the Type in the EncodingPrefixedType is the original Type and the EncodingPrefix contains the EncodingInstruction minus the TargetList.
The ImportedTypesIdentification SHALL be removed.
If the EncodingInstruction in the EncodingInstructionAssignmentList has no other Targets instances, then it MUST be removed from the EncodingInstructionAssignmentList.
As described in the specification for ASN.X [ASN.X], the translation of an EncodingControlSection for XER is an element item with the [local name] "XER".
The translation of the EncodingInstructionAssignmentList in such an EncodingControlSection determines the content of the <XER> element item.
An element item with the [local name] "annotation" MAY be added to the [children] of the <XER> element item.
The translation of each EncodingInstruction nested in the EncodingInstructionAssignmentList SHALL be appended to the [children] of the <XER> element item.
The translation of an EncodingInstruction for XER can appear in the translation of an EncodingInstructionAssignmentList (see the previous section) or an EncodingPrefix.
The translation for an EncodingPrefix is described by the specification for ASN.X [ASN.X].
The translation of an EncodingInstruction in an EncodingInstructionAssignmentList for XER is an element item with the [local name] "targettedInstruction".
The translation of the PositiveInstruction or NegatingInstruction in the EncodingInstruction SHALL be added to the [children] of the <targettedInstruction> element item.
The translation of the TargetList nested in the encoding instruction SHALL be appended to the [children] of the <targettedInstruction> element item.
Aside: The TargetList appears within an EncodingInstruction in an EncodingInstructionAssignmentList, but its ASN.X translation appears immediately after the translation of the EncodingInstruction, rather than within it.
Example ENCODING CONTROL XER GLOBAL DEFAULTS MODIFIED ENCODINGS ATTRIBUTE MyType <encodingControls
The translation of an EncodingInstruction for XER in an EncodingPrefix is the translation of the PositiveInstruction or NegatingInstruction in the EncodingInstruction.
Aside: The TargetList within an EncodingInstruction in an EncodingPrefix is required to be empty and has no ASN.X translation in this context.
The translation of a PositiveInstruction is the translation of the AnyAttributeInstruction, AnyElementInstruction, AttributeInstruction, Base64Instruction, DecimalInstruction, DefaultForEmptyInstruction, EmbedValuesInstruction, GlobalDefaultsInstruction, ListInstruction, NameInstruction, NamespaceInstruction, PIOrCommentInstruction, TextInstruction, UntaggedInstruction, UseNilInstruction, UseNumberInstruction, UseOrderInstruction, UseQNameInstruction, UseTypeInstruction, UseUnionInstruction or WhitespaceInstruction in the PositiveInstruction.
The translation of a NegatingInstruction that is an ElementInstruction is the translation of that ElementInstruction.
The translation of a NegatingInstruction that is not an ElementInstruction is an element item where the [local name] is the concatenation of "not " and the [local name] that would be used by the translation of the PositiveInstruction in the NegatingInstruction.
No items are added to the [attributes] or [children] of the element item resulting from the translation of a NegatingInstruction.
The translation of an AnyAttributesInstruction is an element item with the [local name] "anyAttributes".
If a NamespaceRestriction is present in the AnyAttributesInstruction, then the translation of the NamespaceRestriction SHALL be added to the [children] of the <anyAttributes> element item.
Example ANY ATTRIBUTES FROM "http://example.com"
The NamespaceRestriction production is common to the AnyAttributesInstruction production and the AnyElementInstruction production.
The translation of a NamespaceRestriction of the "FROM URIList" form is an element item with the [local name] "from".
The translation of each QuotedURIorAbsent nested in the URIList SHALL be appended to the [children] of the <from> element item.
The translation of a NamespaceRestriction of the "EXCEPT URIList" form is an element item with the [local name] "except".
The translation of each QuotedURIorAbsent nested in the URIList SHALL be appended to the [children] of the <except> element item.
The translation of a QuotedURIorAbsent that is a QuotedURI is an element item with the [local name] "namespace".
The sequence of character items for the URI in the QuotedURI is added to the [children] of the <namespace> element item.
The translation of a QuotedURIorAbsent of the "ABSENT" form is an element item with the [local name] "local".
The translation of an AnyElementInstruction is an element item with the [local name] "anyElement".
If a NamespaceRestriction is present in the AnyElementInstruction, then the translation of the NamespaceRestriction SHALL be added to the [children] of the <anyElement> element item.
The translation of an AttributeInstruction is an element item with the [local name] "attribute".
The translation of a Base64Instruction is an element item with the [local name] "base64".
The translation of a DecimalInstruction is an element item with the [local name] "decimal".
The translation of a DefaultForEmptyInstruction is an element item with the [local name] "defaultForEmpty".
The translation of the Value in the DefaultForEmptyInstruction
SHALL be added to the [children] or [attributes] of the <defaultForEmpty> element item.
Example DEFAULT FOR EMPTY AS "unspecified"
The translation of an ElementInstruction is an element item with the [local name] "element".
The translation of an EmbedValuesInstruction is an element item with the [local name] "embedValues".
The translation of a GlobalDefaultsInstruction is an element item with the [local name] "globalDefaults".
If the DefaultSetting in the GlobalDefaultsInstruction is "MODIFIED  ENCODINGS", then an element item with the [local name] "modifiedEncodings" SHALL be added to the [children] of the <globalDefaults> element item.
If the DefaultSetting in the GlobalDefaultsInstruction is a ControlNamespace, then the translation of the ControlNamespace SHALL be added to the [children] of the <globalDefaults> element item.
The translation of a ControlNamespace is an element item with the [local name] "controlNamespace".
An attribute item with the [local name] "name" SHALL be added to the [attributes] of the <controlNamespace> element item.
The [normalized value] of this attribute item is the Uniform Resource Identifier (URI) [URI] in the QuotedURI in the ControlNamespace.
If the ControlNamespace has a Prefix, then an attribute item with the [local name] "prefix" SHALL be added to the [attributes] of the <controlNamespace> element item.
The [normalized value] of this attribute item is the NCName in the QuotedNCName in the Prefix.
Example GLOBAL DEFAULTS CONTROL NAMESPACE "http://example.com" PREFIX "ex"
<controlNamespace name "http://example.com" prefix "ex"/
The translation of a ListInstruction is an element item with the [local name] "list".
The translation of a NameInstruction is an element item with the [local name] "name".
If the NewNameOrKeyword in the NameInstruction is a NewName, then an attribute item with the [local name] "
newName" SHALL be added to the [attributes] of the <name> element item.
The [normalized value] of this attribute item is the character string value of the RestrictedCharacterStringValue in the NewName.
If the NewNameOrKeyword in the NameInstruction is a Keyword, then an attribute item with the [local name] "conversion" SHALL be added to the [attributes] of the <name> element item.
The [normalized value] of this attribute item is the word in the Keyword with all letters downcased, i.e., "capitalized", "uncapitalized", "uppercased", or "lowercased".
Example NAME AS UNCAPITALIZED <name conversion "uncapitalized"/
The translation of a NamespaceInstruction is an element item with the [local name] "namespace".
If a NamespaceSpecification is present in the NamespaceInstruction, then an attribute item with the [local name] "name" SHALL be added to the [attributes] of the <namespace> element item.
The [normalized value] of this attribute item is the URI in the QuotedURI in the NamespaceSpecification.
If a Prefix is present in the NamespaceSpecification, then an attribute item with the [local name] "prefix" SHALL be added to the [attributes] of the <namespace> element item.
The [normalized value] of this attribute item is the NCName in the QuotedNCName in the Prefix.
Example NAMESPACE AS "http://example.com" PREFIX "ex"
<namespace name "http://example.com" prefix "ex"/> 5.13.
The translation of a PIOrCommentInstruction is an element item with the [local name] "piOrComment".
An attribute item with the [local name] "text" SHALL be added to the [attributes] of the <piOrComment> element item.
The [normalized value] of this attribute item is the character string value of the RestrictedCharacterStringValue in the PIOrCommentInstruction.
An attribute item with the [local name] "position" SHALL be added to the [attributes] of the <piOrComment> element item.
The [normalized value] of this attribute item is "beforeTag" if the keyword in the Position in the PIOrCommentInstruction is BEFORE TAG, "beforeValue" if the keyword in the Position is BEFORE VALUE, "afterValue" if the keyword in the Position is AFTER VALUE, or "afterTag" if the keyword in the Position is AFTER TAG.
Example PI OR COMMENT AS "<!
" BEFORE TAG <piOrComment text "&lt;!  This is a comment.
The translation of a TextInstruction is an element item with the [local name] "text".
If a TextToBeUsed is present in the TextInstruction and the NewNameOrKeyword in the TextToBeUsed is a NewName, then an attribute item with the [local name] "
newName" SHALL be added to the [attributes] of the <text> element item.
The [normalized value] of this attribute item is the character string value of the RestrictedCharacterStringValue in the NewName.
If a TextToBeUsed is present in the TextInstruction and the NewNameOrKeyword in the TextToBeUsed is a Keyword, then an attribute item with the [local name] "conversion" SHALL be added to the [attributes] of the <name> element item.
The [normalized value] of this attribute item is the word in the Keyword with all letters downcased, i.e., "capitalized", "uncapitalized", "uppercased", or "lowercased".
AS UPPERCASED <text conversion "uppercased"/
> TEXT AS "A4" <text newName "A4"/> 5.15.
The translation of an UntaggedInstruction is an element item with the [local name] "untagged".
The translation of a UseNilInstruction is an element item with the [local name] "useNil".
The translation of a UseNumberInstruction is an element item with the [local name] "useNumber".
The translation of a UseOrderInstruction is an element item with the [local name] "useOrder".
The translation of a UseQNameInstruction is an element item with the [local name] "useQName".
The translation of a UseTypeInstruction is an element item with the [local name] "useType".
The translation of a UseUnionInstruction is an element item with the [local name] "useUnion".
The translation of a WhiteSpaceInstruction is an element item with the [local name] "whiteSpace".
An attribute item with the [local name] "action" SHALL be added to the [attributes] of the <whiteSpace> element item.
The [normalized value] of this attribute item is the word in the WhiteSpaceAction in the WhiteSpaceInstruction with all letters downcased, i.e., "replace" or "collapse".
Example WHITESPACE COLLAPSE <whiteSpace action "collapse"/> 6.
The TargetList production is common to all the encoding instructions.
The translation of a TargetList is the concatenation of the translations of each Targets instance in the TargetList.
The translation of a Targets instance is an element item with the [local name] "target".
The translation of the TypeIdentification, BuiltInTypeIdentification or IdentifiersInContext in the Targets instance SHALL be added to the [children]
and/or [attributes] of the <target> element item.
Aside: A Targets instance that is an ImportedTypesIdentification will have been removed by the preprocessing described in Section 3.
The translation of a TypeIdentification of the "ALL" form is an element item with the [local name] "allTypes"; otherwise, the translation of a TypeIdentification is the translation of its ModuleAndTypeReference followed by the translation of its ComponentReference, if present, followed by the translation of its QualifyingInformationPart, if present.
The translation of a ModuleAndTypeReference is an attribute item with the [local name] "type".
The [normalized value] of this attribute item is a qualified name [XMLNS10] for the expanded name corresponding to the typereference in the ModuleAndTypeReference
(see Section 5.1 of the specification for ASN.X [ASN.X]).
The translation of a ComponentReference is an element item with the [local name] "component".
Leading and/or trailing white space character items [ASN.X]
MAY be added to the [children] of the <component> element item.
If the final ComponentId in the ComponentIdList in the ComponentReference is "ALL", then an element item with the [local name] "
allTextuallyPresent" SHALL follow the <component> element item.
If a ComponentId identifies the Type in a NamedType, then the translation of the ComponentId is a qualified name for the expanded name [XMLNS10] of the NamedType [RXEREI].
If a ComponentId identifies a Type that is not in a NamedType (i.e., the component type for a SEQUENCE OF Type or SET OF Type), then the translation of the ComponentId is the character string "item".
If a ComponentId does not identify a Type and the ComponentId is an identifier, then the translation of the ComponentId is the identifier.
The <component> element item is required to be self contained [RXER].
Aside: An element item is self contained if all namespace prefixes used by the element item and its contents are declared within the element item.
The translation of a QualifyingInformationPart is the translation of the QualifyingInformation instance in the QualifyingInformationPart.
The translation of a QualifyingInformation instance of the "identifier" form is an element item with the [local name] "identifier".
An attribute item with the [local name] "name" SHALL be added to the [attributes] of the <identifier> element item.
If the ModuleTypeAndReference and ComponentReference (if present) in the TypeIdentification identify a BIT STRING, ENUMERATED, or INTEGER type where the associated BitStringType, EnumeratedType, or IntegerType (respectively) is subject to an RXER VALUES encoding instruction, then the [normalized value] of the attribute item is the replacement name [RXEREI] for the identifier; otherwise, the [normalized value] is the identifier.
The translation of a QualifyingInformation instance of the "ALL" form is an element item with the [local name] "allIdentifiers".
ALL <target type "MyType"> <component> a / item / b </component
The translation of a BuiltInTypeIdentification is the translation of its BuiltInTypeName followed by the translation of its BuiltInTypeQualifyingInformationPart, if present.
If the BuiltInTypeName is "BIT STRING", "BOOLEAN", "CHARACTER STRING", "EMBEDDED PDV", "EXTERNAL", "GeneralizedTime", "INTEGER", "NULL", "ObjectDescriptor", "OBJECT IDENTIFIER", "OCTET STRING", "REAL", "RELATIVE OID", or "UTCTime",
then the translation of the BuiltInTypeName is an attribute item with the [local name] "type".
The [normalized value] of this attribute item is a qualified name with the namespace name being "urn:
U 002D), e.g., BIT STRING becomes BIT STRING.
If the BuiltInTypeName is a RestrictedCharacterStringType, then the translation of the BuiltInTypeName is an attribute item with the [local name] "type".
The [normalized value] of this attribute item is a qualified name with the namespace name being "urn:
ietf:params:xml:ns:asnx" and the local part being the RestrictedCharacterStringType, i.e., BMPString, GeneralString, GraphicString, IA5String, ISO646String, NumericString, PrintableString, TeletexString, T61String, UniversalString, UTF8String, VideotexString, or VisibleString.
If the BuiltInTypeName is "CHOICE", then the translation of the BuiltInTypeName is an element item with the [local name] "choice".
If the BuiltInTypeName is "ENUMERATED", then the translation of the BuiltInTypeName is an element item with the [local name] "enumerated".
If the BuiltInTypeName is "INSTANCE OF", then the translation of the BuiltInTypeName is an element item with the [local name] "instanceOf".
If the BuiltInTypeName is "SEQUENCE", then the translation of the BuiltInTypeName is an element item with the [local name] "sequence".
If the BuiltInTypeName is "SEQUENCE OF", then the translation of the BuiltInTypeName is an element item with the [local name] "sequenceOf".
If the BuiltInTypeName is "SET", then the translation of the BuiltInTypeName is an element item with the [local name] "set".
If the BuiltInTypeName is "SET OF", then the translation of the BuiltInTypeName is an element item with the [local name] "setOf".
The translation of a BuiltInTypeQualifyingInformationPart is the translation of the BuiltInTypeQualifyingInformation instance in the BuiltInTypeQualifyingInformationPart.
The translation of a BuiltInTypeQualifyingInformation instance of the "identifier" form is an element item with the [local name] "identifier".
An attribute item with the [local name] "name" SHALL be added to the [attributes] of the <identifier> element item.
The [normalized value] of this attribute item is the identifier in the BuiltInTypeQualifyingInformation instance.
The translation of a BuiltInTypeQualifyingInformation instance of the "ALL" form is an element item with the [local name] "allIdentifiers".
The translation of an IdentifiersInContext instance is an element item with the [local name] "components".
If the IdentifierList in the IdentifiersInContext instance is not of the "ALL" or "COMPONENTS" form, then for each identifier in the IdentifierList, an element item with the same [local name] (i.e., "attribute", "element", "component", "group", "item", "member", or "simpleContent") as the translation of the NamedType corresponding to the identifier SHALL be appended to the [children] of the <components> element item.
An attribute item with the [local name] "name" SHALL be added to the [attributes] of each <attribute>, <element>, <component>, <group>, <item>, <member>, or <simpleContent> element item.
The [normalized value] of each of these attribute items is a qualified name for the expanded name [XMLNS10] of the NamedType [RXEREI] corresponding to the identifier.
If the IdentifierList in the IdentifiersInContext instance is of the "ALL" form, then an element item with the [local name] "allTextuallyPresent" SHALL be appended to the [children] of the <components> element item.
If the IdentifierList in the IdentifiersInContext instance is of the "COMPONENTS" form, then an element item with the [local name] "allFirstLevel" SHALL be appended to the [children] of the <components> element item.
An element item with the [local name] "in" SHALL be appended to the [children] of the <components> element item.
The translation of the TypeIdentification in the IdentifiersInContext instance SHALL be added to the [children]
and/or [attributes] of the <in> element item.
NAME AS "field"][RXER:ATTRIBUTE] BOOLEAN } field, fieldAtt IN MyType <target>
The ASN.X translation of an XER encoding instruction is semantically equivalent to the original XER encoding instruction.
The security considerations that apply to an application built from an original ASN.1 specification with XER encoding instructions apply equally to an application built from the ASN.X translation of the ASN.1 specification.
See the main specification for ASN.X [ASN.X] for security considerations related to ASN.X modules.
Appendix A.  ASN.1 for XER Encoding Instruction Notation
XER EncodingInstructionNotation { iso(1) identified organization(3)
this ASN.1 module is part of RFC 4914; see the RFC itself   for full legal notices.
Regarding this ASN.1 module or any portion of it, the author   makes no guarantees and is not responsible for any damage   resulting from its use.
The author grants irrevocable permission   to anyone to use, modify, and distribute it in any way that does   not diminish the rights of anyone else to use, modify, and   distribute it, provided that redistributed derivative works do   not contain misleading author or version information.
Derivative works need not be licensed under similar terms.
DEFINITIONS RXER INSTRUCTIONS AUTOMATIC TAGS EXTENSIBILITY IMPLIED ::
IMPORTS AnyURI, NCName FROM AdditionalBasicDefinitions {
} Annotation, Value FROM AbstractSyntaxNotation X { iso(1) identified organization(3) dod(6)
notation(1) } TargetList FROM TargetListNotation { iso(1) identified organization(3)
SEQUENCE { annotation    Annotation OPTIONAL,
[SINGULAR INSERTIONS] CHOICE { modifiedEncodings
} } XER ControlNamespace ::
[GROUP] XER NamespaceSpecification OPTIONAL } XER NamespaceSpecification ::
[HOLLOW INSERTIONS] SEQUENCE { name
ENCODING CONTROL RXER SCHEMA IDENTITY
"urn:ietf:params:xml:ns:asnx" PREFIX "asnx" END Appendix B.  ASN.1 for Target List Notation
module(0) target list notation(4) }
this ASN.1 module is part of RFC 4914; see the RFC itself   for full legal notices.
Regarding this ASN.1 module or any portion of it, the author   makes no guarantees and is not responsible for any damage   resulting from its use.
The author grants irrevocable permission   to anyone to use, modify, and distribute it in any way that does   not diminish the rights of anyone else to use, modify, and   distribute it, provided that redistributed derivative works do   not contain misleading author or version information.
Derivative works need not be licensed under similar terms.
IMPORTS Markup, NCName, QName FROM AdditionalBasicDefinitions {
[SINGULAR INSERTIONS] CHOICE { specificType
[ATTRIBUTE] QName } ENCODING CONTROL RXER SCHEMA IDENTITY
oid:1.3.6.1.4.1.21472.1.0.4" TARGET NAMESPACE "urn:ietf:params:xml:ns:asnx" PREFIX "tln" END Appendix C.  ASN.X for XER Encoding Instruction Notation
This appendix is non normative.
XER EncodingInstructionNotation" identifier "1.3.6.1.4.1.21472.1.0.3" schemaIdentity "urn:oid:1.3.6.1.4.1.21472.1.0.3" targetNamespace "urn:ietf:params:xml:ns:asnx" targetPrefix "asnx" extensibilityImplied "true"
This version of this ASN.X module is part of RFC 4914; see the RFC itself for full legal notices.
Regarding this ASN.X module or any portion of it, the author makes no guarantees and is not responsible for any damage resulting from its use.
The author grants irrevocable permission to anyone to use, modify, and distribute it in any way that does not diminish the rights of anyone else to use, modify, and distribute it, provided that redistributed derivative works do not contain misleading author or version information.
Derivative works need not be licensed under similar terms.
</annotation> <import name "AbstractSyntaxNotation X" identifier "1.3.6.1.4.1.21472.1.0.1" schemaIdentity "urn:oid:1.3.6.1.4.1.21472.1.0.1" namespace "urn:ietf:params:xml:
> <import name "TargetListNotation" identifier "1.3.6.1.4.1.21472.1.0.4" schemaIdentity "urn:
> <element name "annotation" type "asnx:Annotation"/>
<group name "instructions" type "asnx:
<namedType name "XER TargettedEncodingInstructions"> <type>
<sequenceOf minSize "1"> <element name "targettedInstruction" type "asnx:
> <namedType name "XER TargettedEncodingInstruction"> <type>
<sequence> <group name "instruction" type "
> <namedType name "XER EncodingInstruction"> <type> <constrained type "asnx:
> <withComponents partial "true"> <element name "globalDefaults" use "absent"/
<namedType name "XER GeneralEncodingInstruction"> <type>
<choice insertions "singular"> <element name "anyAttributes" type "
> <element name "not attribute" type "
> <element name "list" type "
> <element name "not list" type "
> <element name "not piOrComment" type "
<element name "text" type "asnx:
> <element name "not text" type "
> <element name "not useQName" type "
<element name "useType" type "asnx:
> <namedType name "XER SimpleInstruction"> <type> <
<namedType name "XER NegatingInstruction" type "asnx:
<namedType name "XER WildcardInstruction"> <type>
<group name "namespaceRestriction" type "asnx:
> <namedType name "XER NamespaceRestriction"> <type> <choice insertions "none"> <element name "from" type "asnx:
> <element name "except" type "asnx:
<namedType name "XER URIList"> <type>
<sequenceOf minSize "1"> <group name "uriOrAbsent" type "asnx:
> <namedType name "XER QuotedURIorAbsent"> <type> <choice insertions "singular"
> <element name "namespace" type "
> <namedType name "XER DefaultForEmptyInstruction"> <type>
> <namedType name "XER GlobalDefaultsInstruction"> <type>
<group name "defaultSetting"> <type> <choice insertions "singular"
> <element name "modifiedEncodings" type "asnx:
> <namedType name "XER ControlNamespace"> <type>
<attribute name "name" type "asnx:
<optional> <attribute name "prefix" type "
> <namedType name "XER NameInstruction"> <type>
<group name "newNameOrKeyword" type "
<namedType name "XER NewNameOrKeyword"> <type>
<choice insertions "none"> <attribute name "newName" type "asnx:UTF8String"/>
<attribute name "conversion" type "asnx:XER Conversion"/
> <namedType name "XER Conversion"> <type> <enumerated> <enumeration name "capitalized" number "0"/
> <enumeration name "uncapitalized" number "1"/
> <namedType name "XER NamespaceInstruction"> <type>
> <optional> <group name "namespace" type "asnx:
> <namedType name "XER NamespaceSpecification"> <type>
<sequence insertions "hollow"> <attribute name "name" type "asnx:
<optional> <attribute name "prefix" type "
> <namedType name "XER PIOrCommentInstruction"> <type>
<attribute name "text" type "asnx:UTF8String"/>
> <namedType name "XER Position"> <type> <enumerated> <enumeration name "beforeTag" number "
<enumeration name "afterValue" number "2"/>
<enumeration name "afterTag" number "3"/
> <namedType name "XER TextInstruction"> <type>
> <namedType name "XER WhiteSpaceInstruction"> <type>
<attribute name "action" type "asnx:
> <namedType name "XER WhiteSpaceAction"> <type> <enumerated> <enumeration name "replace" number "
Appendix D.  ASN.X for Target List Notation
This appendix is non normative.
" name "TargetListNotation" identifier "1.3.6.1.4.1.21472.1.0.4" schemaIdentity "urn:
asnx" targetPrefix "tln" extensibilityImplied "true"> <annotation>
This version of this ASN.X module is part of RFC 4914; see the RFC itself for full legal notices.
Regarding this ASN.X module or any portion of it, the author makes no guarantees and is not responsible for any damage resulting from its use.
The author grants irrevocable permission to anyone to use, modify, and distribute it in any way that does not diminish the rights of anyone else to use, modify, and distribute it, provided that redistributed derivative works do not contain misleading author or version information.
Derivative works need not be licensed under similar terms.
</annotation> <namedType name "TargetList"> <type>
<sequenceOf minSize "1"> <element name "target" type "tln:Targets"/
> <namedType name "Targets"> <type>
<element name "allTypes" type "asnx:
> <group name "identifiedTypes" type "tln:QualifiedTypeIdentification"/
> <element name "components" type "tln:IdentifiersInContext"/
> <namedType name "QualifiedTypeIdentification"> <annotation> TypeIdentification and BuiltInTypeIdentification </annotation> <type>
<sequence insertions "hollow"> <group name "types"> <type>
<choice insertions "singular"> <group name "specificType" type "tln:
<element name "choice" type "asnx:
<element name "enumerated" type "asnx:
> <namedType name "SpecificTypeIdentification"> <type>
<sequence insertions "hollow"> <attribute name "type" type "asnx:QName"/
<optional> <element name "component" type "asnx:Markup"/
</optional> <optional> <element name "allTextuallyPresent" type
> <namedType name "QualifyingInformationPart"> <type
> <choice insertions "none"> <element name "allIdentifiers" type "asnx:
<attribute name "name" type "
> <namedType name "IdentifiersInContext"> <type>
<element name "allTypes" type "asnx:
> <namedType name "IdentifierList"> <type>
<sequenceOf minSize "1"> <group name "identifiedComponent" type "tln:IdentifiedComponent"/
<choice insertions "singular"> <element name "component" type "tln:GenericIdentifiedComponent"/
> <element name "element" type "tln:GenericIdentifiedComponent"/
> <element name "attribute" type "tln:GenericIdentifiedComponent"/
> <element name "group" type "tln:GenericIdentifiedComponent"/
> <element name "member" type "tln:GenericIdentifiedComponent"/
> <element name "item" type "tln:GenericIdentifiedComponent"/
<attribute name "name" type "asnx:QName"/
