- contents:
  - '                       The IMAP ENABLE Extension

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   Most IMAP extensions are used by the client when it wants to and
    the\n   server supports it.  However, a few extensions require the server to\n
    \  know whether a client supports that extension.  The ENABLE extension\n   allows
    an IMAP client to say which extensions it supports.\n"
  title: Abstract
- contents:
  - "1.  Overview\n   Several IMAP extensions allow the server to return unsolicited\n
    \  responses specific to these extensions in certain circumstances.\n   However,
    servers cannot send those unsolicited responses until they\n   know that the clients
    support such extensions and thus won't choke on\n   the extension response data.\n
    \  Up until now, extensions have typically stated that a server cannot\n   send
    the unsolicited responses until after the client has used a\n   command with the
    extension data (i.e., at that point the server knows\n   the client is aware of
    the extension).  CONDSTORE ([RFC4551]),\n   ANNOTATE ([ANNOTATE]), and some extensions
    under consideration at the\n   moment use various commands to enable server extensions.
    \ For\n   example, CONDSTORE uses a SELECT or FETCH parameter, and ANNOTATE\n
    \  uses a side effect of FETCH.\n   The ENABLE extension provides an explicit
    indication from the client\n   that it supports particular extensions.  This is
    done using a new\n   ENABLE command.\n   An IMAP server that supports ENABLE advertises
    this by including the\n   word ENABLE in its capability list.\n   Most IMAP extensions
    do not require the client to enable the\n   extension in any way.\n"
  title: 1.  Overview
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   Formal syntax is defined by [RFC5234] and [RFC3501].\n   Example
    lines prefaced by \"C:\" are sent by the client and ones\n   prefaced by \"S:\"
    by the server.  The five characters [...] means that\n   something has been elided.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - '3.  Protocol Changes

    '
  - contents:
    - "3.1.  The ENABLE Command\n   Arguments: capability names\n   Result:    OK:
      Relevant capabilities enabled\n              BAD: No arguments, or syntax error
      in an argument\n   The ENABLE command takes a list of capability names, and
      requests the\n   server to enable the named extensions.  Once enabled using
      ENABLE,\n   each extension remains active until the IMAP connection is closed.\n
      \  For each argument, the server does the following:\n   - If the argument is
      not an extension known to the server, the server\n     MUST ignore the argument.\n
      \  - If the argument is an extension known to the server, and it is not\n     specifically
      permitted to be enabled using ENABLE, the server MUST\n     ignore the argument.
      \ (Note that knowing about an extension doesn't\n     necessarily imply supporting
      that extension.)\n   - If the argument is an extension that is supported by
      the server and\n     that needs to be enabled, the server MUST enable the extension
      for\n     the duration of the connection.  At present, this applies only to\n
      \    CONDSTORE ([RFC4551]).  Note that once an extension is enabled,\n     there
      is no way to disable it.\n   If the ENABLE command is successful, the server
      MUST send an untagged\n   ENABLED response (see Section 3.2).\n   Clients SHOULD
      only include extensions that need to be enabled by the\n   server.  At the time
      of publication, CONDSTORE is the only such\n   extension (i.e., ENABLE CONDSTORE
      is an additional \"CONDSTORE\n   enabling command\" as defined in [RFC4551]).
      \ Future RFCs may add to\n   this list.\n   The ENABLE command is only valid
      in the authenticated state (see\n   [RFC3501]), before any mailbox is selected.
      \ Clients MUST NOT issue\n   ENABLE once they SELECT/EXAMINE a mailbox; however,
      server\n   implementations don't have to check that no mailbox is selected or\n
      \  was previously selected during the duration of a connection.\n   The ENABLE
      command can be issued multiple times in a session.  It is\n   additive; i.e.,
      \"ENABLE a b\", followed by \"ENABLE c\" is the same as a\n   single command
      \"ENABLE a b c\".  When multiple ENABLE commands are\n   issued, each corresponding
      ENABLED response SHOULD only contain\n   extensions enabled by the corresponding
      ENABLE command.\n   There are no limitations on pipelining ENABLE.  For example,
      it is\n   possible to send ENABLE and then immediately SELECT, or a LOGIN\n
      \  immediately followed by ENABLE.\n   The server MUST NOT change the CAPABILITY
      list as a result of\n   executing ENABLE; i.e., a CAPABILITY command issued
      right after an\n   ENABLE command MUST list the same capabilities as a CAPABILITY\n
      \  command issued before the ENABLE command.  This is demonstrated in\n   the
      following example:\n      C: t1 CAPABILITY\n      S: * CAPABILITY IMAP4rev1
      ID LITERAL+ ENABLE X-GOOD-IDEA\n      S: t1 OK foo\n      C: t2 ENABLE CONDSTORE
      X-GOOD-IDEA\n      S: * ENABLED X-GOOD-IDEA\n      S: t2 OK foo\n      C: t3
      CAPABILITY\n      S: * CAPABILITY IMAP4rev1 ID LITERAL+ ENABLE X-GOOD-IDEA\n
      \     S: t3 OK foo again\n   In the following example, the client enables CONDSTORE:\n
      \     C: a1 ENABLE CONDSTORE\n      S: * ENABLED CONDSTORE\n      S: a1 OK Conditional
      Store enabled\n"
    title: 3.1.  The ENABLE Command
  - contents:
    - "3.2.  The ENABLED Response\n   Contents:   capability listing\n   The ENABLED
      response occurs as a result of an ENABLE command.  The\n   capability listing
      contains a space-separated listing of capability\n   names that the server supports
      and that were successfully enabled.\n   The ENABLED response may contain no
      capabilities, which means that no\n   extensions listed by the client were successfully
      enabled.\n"
    title: 3.2.  The ENABLED Response
  - contents:
    - "3.3.  Note to Designers of Extensions That May Use the ENABLE Command\n   Designers
      of IMAP extensions are discouraged from creating extensions\n   that require
      ENABLE unless there is no good alternative design.\n   Specifically, extensions
      that cause potentially incompatible behavior\n   changes to deployed server
      responses (and thus benefit from ENABLE)\n   have a higher complexity cost than
      extensions that do not.\n"
    title: 3.3.  Note to Designers of Extensions That May Use the ENABLE Command
  title: 3.  Protocol Changes
- contents:
  - "4.  Formal Syntax\n   The following syntax specification uses the Augmented Backus-Naur\n
    \  Form (ABNF) notation as specified in [RFC5234] including the core\n   rules
    in Appendix B.1.  [RFC3501] defines the non-terminals\n   \"capability\" and \"command-any\".\n
    \  Except as noted otherwise, all alphabetic characters are\n   case-insensitive.
    \ The use of upper or lower case characters to\n   define token strings is for
    editorial clarity only.  Implementations\n   MUST accept these strings in a case-insensitive
    fashion.\n      capability    =/ \"ENABLE\"\n      command-any   =/ \"ENABLE\"
    1*(SP capability)\n      response-data =/ \"*\" SP enable-data CRLF\n      enable-data
    \  = \"ENABLED\" *(SP capability)\n"
  title: 4.  Formal Syntax
- contents:
  - "5.  Security Considerations\n   It is believed that this extension doesn't add
    any security\n   considerations that are not already present in the base IMAP
    protocol\n   [RFC3501].\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   The IANA has added ENABLE to the IMAP4 Capabilities
    Registry.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgments\n   The editors would like to thank Randy Gellens, Chris
    Newman, Peter\n   Coates, Dave Cridland, Mark Crispin, Ned Freed, Dan Karp, Cyrus\n
    \  Daboo, Ken Murchison, and Eric Burger for comments and corrections.\n   However,
    this doesn't necessarily mean that they endorse this\n   extension, agree with
    all details, or are responsible for errors\n   introduced by the editors.\n"
  title: 7.  Acknowledgments
- contents:
  - "8.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n              4rev1\",
    RFC 3501, March 2003.\n   [RFC5234]  Crocker, D., Ed., and P. Overell, \"Augmented
    BNF for\n              Syntax Specifications: ABNF\", STD 68, RFC 5234, January\n
    \             2008.\n   [RFC4551]  Melnikov, A. and S. Hole, \"IMAP Extension
    for Conditional\n              STORE Operation or Quick Flag Changes Resynchronization\",\n
    \             RFC 4551, June 2006.\n"
  title: 8.  Normative References
- contents:
  - "9.  Informative References\n   [ANNOTATE] Daboo, C. and R. Gellens, \"IMAP ANNOTATE
    Extension\", Work\n              in Progress, August 2006.\n"
  title: 9.  Informative References
- contents:
  - "Editors' Addresses\n   Arnt Gulbrandsen\n   Oryx Mail Systems GmbH\n   Schweppermannstr.
    8\n   D-81671 Muenchen\n   Germany\n   Fax: +49 89 4502 9758\n   EMail: arnt@oryx.com\n
    \  Alexey Melnikov\n   Isode Ltd\n   5 Castle Business Village\n   36 Station
    Road\n   Hampton, Middlesex  TW12 2BX\n   UK\n   EMail: Alexey.Melnikov@isode.com\n"
  title: Editors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
