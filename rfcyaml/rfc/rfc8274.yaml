- title: __initial_text__
  contents:
  - '       Incident Object Description Exchange Format Usage Guidance

    '
- title: Abstract
  contents:
  - "Abstract\n   The Incident Object Description Exchange Format (IODEF) v2 (RFC\
    \ 7970)\n   defines a data representation that provides a framework for sharing\n\
    \   information about computer security incidents commonly exchanged by\n   Computer\
    \ Security Incident Response Teams (CSIRTs).  Since the IODEF\n   model includes\
    \ a wealth of available options that can be used to\n   describe a security incident\
    \ or issue, it can be challenging for\n   security practitioners to develop tools\
    \ that leverage IODEF for\n   incident sharing.  This document provides guidelines\
    \ for IODEF\n   implementers.  It addresses how common security indicators can\
    \ be\n   represented in IODEF and provides use cases of how IODEF is being\n \
    \  used.  This document aims to make IODEF's adoption by vendors easier\n   and\
    \ to encourage faster and wider adoption of the model by CSIRTs\n   around the\
    \ world.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8274.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Implementation and Use Strategy . . . . . . . . . . . .\
    \ . . .   3\n     3.1.  Minimal IODEF Document  . . . . . . . . . . . . . . .\
    \ . .   3\n     3.2.  Information Represented . . . . . . . . . . . . . . . .\
    \ .   4\n     3.3.  IODEF Classes . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n   4.  IODEF Usage Considerations  . . . . . . . . . . . . . . . . .  \
    \ 6\n     4.1.  External References . . . . . . . . . . . . . . . . . . .   6\n\
    \     4.2.  Extensions  . . . . . . . . . . . . . . . . . . . . . . .   6\n  \
    \   4.3.  Indicator Predicate Logic . . . . . . . . . . . . . . . .   7\n    \
    \ 4.4.  Disclosure Level  . . . . . . . . . . . . . . . . . . . .   7\n   5. \
    \ IODEF Uses  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     5.1.\
    \  Implementations . . . . . . . . . . . . . . . . . . . . .   8\n     5.2.  Inter-vendor\
    \ and Service Provider Exercise  . . . . . . .   8\n     5.3.  Use Cases . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  12\n   6.  IANA Considerations .\
    \ . . . . . . . . . . . . . . . . . . . .  12\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  12\n   8.  References  . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  13\n     8.1.  Normative References  .\
    \ . . . . . . . . . . . . . . . . .  13\n     8.2.  Informative References  .\
    \ . . . . . . . . . . . . . . . .  13\n   Appendix A.  Indicator Predicate Logic\
    \ Examples . . . . . . . . .  14\n   Appendix B.  Inter-vendor and Service Provider\
    \ Exercise Examples   16\n     B.1.  Malware Delivery URL  . . . . . . . . . .\
    \ . . . . . . . .  16\n     B.2.  DDoS  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  17\n     B.3.  Spear Phishing  . . . . . . . . . . . . . . .\
    \ . . . . . .  20\n     B.4.  Malware . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  24\n     B.5.  IoT Malware . . . . . . . . . . . . . . . . . . .\
    \ . . . .  30\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Incident Object Description Exchange Format (IODEF)\
    \ v2 [RFC7970]\n   defines a data representation that provides a framework for\
    \ sharing\n   computer security incident information commonly exchanged by Computer\n\
    \   Security Incident Response Teams (CSIRTs).  The IODEF data model\n   consists\
    \ of multiple classes and data types that are defined in the\n   IODEF XML schema.\n\
    \   The IODEF schema was designed to describe all the possible fields\n   needed\
    \ in a security incident exchange.  Thus, IODEF contains a\n   plethora of data\
    \ constructs that could make it hard for IODEF\n   implementers to decide which\
    \ are important.  Additionally, in the\n   IODEF schema, there exist multiple\
    \ fields and classes that do not\n   necessarily need to be used in every possible\
    \ data exchange.\n   Moreover, some IODEF classes are useful only in rare circumstances.\n\
    \   This document tries to address these concerns.  It also presents how\n   common\
    \ security indicators can be represented in IODEF, it points out\n   the most\
    \ important IODEF classes for an implementer and describes\n   other ones that\
    \ are not as important, and it presents some common\n   pitfalls for IODEF implementers\
    \ and how to address them.  The end\n   goal of this document is to make IODEF's\
    \ use by vendors easier and to\n   encourage wider adoption of the model by CSIRTs\
    \ around the world.\n   Section 3 discusses the recommended classes and how an\
    \ IODEF\n   implementer should choose the classes to implement.  Section 4\n \
    \  presents common considerations a practitioner will come across and\n   how\
    \ to address them.  Section 5 goes over some common uses of IODEF.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The terminology used in this document is defined in [RFC7970].\n"
- title: 3.  Implementation and Use Strategy
  contents:
  - "3.  Implementation and Use Strategy\n   It is important for IODEF implementers\
    \ to distinguish how the IODEF\n   classes will be used in incident information\
    \ exchanges.  It is also\n   important to understand the most common IODEF classes\
    \ that describe\n   common security incidents or indicators.  This section describes\
    \ the\n   most important classes and factors an IODEF practitioner should take\n\
    \   into consideration before using IODEF or designing an implementation.\n"
- title: 3.1.  Minimal IODEF Document
  contents:
  - "3.1.  Minimal IODEF Document\n   An IODEF document must include at least an Incident\
    \ class, an\n   xml:lang attribute that defines the supported language, and the\
    \ IODEF\n   version attribute.  An Incident must contain a purpose attribute and\n\
    \   three mandatory-to-implement elements.  These elements are\n   GenerationTime\
    \ class (which describes the time of the incident), an\n   IncidentID class, and\
    \ at least one Contact class.  The structure of\n   the minimal IODEF-Document\
    \ class is shown in Figure 1.\n"
- title: +---------------+            +--------------+
  contents:
  - '+---------------+            +--------------+

    '
- title: '|IODEF-Document |            | Incident     |'
  contents:
  - '|IODEF-Document |            | Incident     |

    '
- title: +---------------+            +--------------+           +--------------+
  contents:
  - '+---------------+            +--------------+           +--------------+

    '
- title: '|STRING version |<>--{1..*}--| ENUM purpose |<>---------| IncidentID   |'
  contents:
  - '|STRING version |<>--{1..*}--| ENUM purpose |<>---------| IncidentID   |

    '
- title: '|ENUM xml:lang  |            |              |           +--------------+'
  contents:
  - '|ENUM xml:lang  |            |              |           +--------------+

    '
- title: '|               |            |              |           | STRING name  |'
  contents:
  - '|               |            |              |           | STRING name  |

    '
- title: +---------------+            |              |           +--------------+
  contents:
  - "+---------------+            |              |           +--------------+\n  \
    \                           |              |\n                             | \
    \             |<>---------[GenerationTime]\n                             |   \
    \           |\n                             |              |           +--------------+\n\
    \                             |              |<>-{1..*}--[ Contact      |\n  \
    \                           +--------------+           +--------------+\n    \
    \                                                    | ENUM role    |\n      \
    \                                                  | ENUM type    |\n        \
    \                                                +--------------+\n          \
    \        Figure 1: Minimal IODEF-Document Class\n   The IncidentID class must\
    \ contain at least a name attribute.\n   In turn, the Contact class requires the\
    \ type and role attributes, but\n   no elements are required by the IODEF v2 specification.\n\
    \   Nevertheless, at least one of the elements in the Contact class, such\n  \
    \ as an Email class, should be implemented so that the IODEF document\n   is useful.\n\
    \   Section 7.1 of [RFC7970] presents a minimal IODEF document with only\n   the\
    \ mandatory classes and attributes.  Implementers can also refer to\n   Section\
    \ 7 of [RFC7970] and Appendix B of this document for examples\n   of documents\
    \ that are IODEF v2.\n"
- title: 3.2.  Information Represented
  contents:
  - "3.2.  Information Represented\n   There is no need for a practitioner to use\
    \ or implement IODEF classes\n   and fields other than the minimal ones (see Section\
    \ 3.1) and the ones\n   necessary for her use cases.  The implementer should carefully\
    \ look\n   into the schema and decide which classes to implement (or not).\n \
    \  For example, if we have Distributed Denial of Service (DDoS) as a\n   potential\
    \ use case, then the Flow class and its included information\n   are the most\
    \ important classes to use.  The Flow class describes\n   information related\
    \ to the attacker and victim hosts, which could\n   help automated filtering or\
    \ sinkhole operations.\n   Another potential use case is malware command and control\
    \ (C2).\n   After modern malware infects a device, it usually proceeds to connect\n\
    \   to one or more C2 servers to receive instructions from its master and\n  \
    \ potentially exfiltrate information.  To protect against such\n   activity, it\
    \ is important to interrupt the C2 communication by\n   filtering the activity.\
    \  IODEF can describe C2 activities using the\n   Flow and the ServiceName classes.\n\
    \   For use cases where indicators need to be described, the\n   IndicatorData\
    \ class will be implemented instead of the EventData\n   class.\n   In summary,\
    \ an implementer should identify the use cases and find the\n   classes that are\
    \ necessary to support in IODEF v2.  Implementing and\n   parsing all IODEF classes\
    \ can be cumbersome, in some occasions, and\n   unnecessary.  Other external schemata\
    \ can also be used in IODEF to\n   describe incidents or indicators.  External\
    \ schemata should be parsed\n   accordingly only if the implementer's IODEF use\
    \ cases require\n   external schema information.  But even when an IODEF implementation\n\
    \   cannot parse an external schema, the IODEF report can still be\n   valuable\
    \ to an incident response team.  The information can also be\n   useful when shared\
    \ further with content consumers that are able to\n   parse this information.\n\
    \   IODEF supports multiple language translations of free-form, ML_STRING\n  \
    \ text in all classes [RFC7970].  That way, text in Description\n   elements can\
    \ be translated to different languages by using a\n   translation identifier in\
    \ the class.  Implementers should be able to\n   parse iodef:MLStringType classes\
    \ and extract only the information\n   relevant to languages of interest.\n"
- title: 3.3.  IODEF Classes
  contents:
  - "3.3.  IODEF Classes\n   [RFC7970] contains classes that can describe attack Methods,\
    \ Events,\n   Incidents, Indicators, how they were discovered, and the Assessment\n\
    \   of the repercussions for the victim.  It is important for IODEF users\n  \
    \ to know the distinction between these classes in order to decide\n   which ones\
    \ fulfill their use cases.\n   An IndicatorData class depicts a threat indicator\
    \ or observable that\n   describe a threat that resulted in an attempted attack.\
    \  For example,\n   we could see an attack happening (described in the IndicatorData),\n\
    \   but it might have been prevented and not have resulted in an incident\n  \
    \ or security event.  On the other hand, an EventData class usually\n   describes\
    \ a security event and can be considered a report of\n   something that took place.\n\
    \   Classes like Discovery, Assessment, Method, and RecoveryTime are used\n  \
    \ in conjunction with EventData as they relate to the incident report\n   described\
    \ in the EventData.  The RelatedActivity class can reference\n   an incident,\
    \ an indicator, or other related threat activity.\n   While deciding what classes\
    \ are important for the needed use cases,\n   IODEF users should carefully evaluate\
    \ the necessary classes and how\n   these are used in order to avoid unnecessary\
    \ work.  For example, if\n   we want to only describe indicators in IODEF, the\
    \ implementation of\n   Method or Assessment might not be important.\n"
- title: 4.  IODEF Usage Considerations
  contents:
  - "4.  IODEF Usage Considerations\n   Implementers need to consider some common,\
    \ standardized options for\n   their IODEF use strategy.\n"
- title: 4.1.  External References
  contents:
  - "4.1.  External References\n   The IODEF format includes the Reference class used\
    \ for externally\n   defined information, such as a vulnerability, Intrusion Detection\n\
    \   System (IDS) alert, malware sample, advisory, or attack technique.\n   To\
    \ facilitate the exchange of information, the Reference class was\n   extended\
    \ to the enumeration reference format [RFC7495].  The\n   enumeration reference\
    \ format specifies a means to use external\n   enumeration specifications (e.g.,\
    \ Common Vulnerabilities and\n   Exposures (CVE)) that could define an enumeration\
    \ format, specific\n   enumeration values, or both.  As external enumerations\
    \ can vary\n   greatly, implementers should only support the ones expected to\n\
    \   describe their specific use cases.\n"
- title: 4.2.  Extensions
  contents:
  - "4.2.  Extensions\n   The IODEF data model [RFC7970] is extensible.  Many attributes\
    \ with\n   enumerated values can be extended using the \"ext-*\" prefix.\n   Additional\
    \ classes can also be defined by using the AdditionalData\n   and RecordItem classes.\
    \  An extension to the AdditionalData class for\n   reporting phishing emails\
    \ is defined in [RFC5901].  Information about\n   extending IODEF class attributes\
    \ and enumerated values can be found\n   in Section 5 of [RFC7970].\n   Additionally,\
    \ IODEF can import existing schemata by using an\n   extension framework defined\
    \ in [RFC7203].  The framework enables\n   IODEF users to embed XML data inside\
    \ an IODEF document using external\n   schemata or structures defined by external\
    \ specifications.  Examples\n   include CVE, Common Vulnerability Reporting Framework\
    \ (CVRF), and\n   Open Vulnerability and Assessment Language (OVAL).  [RFC7203]\n\
    \   enhances the IODEF capabilities without further extending the data\n   model.\n\
    \   IODEF implementers should not use their own IODEF extensions unless\n   data\
    \ cannot be represented using existing standards or unless\n   importing them\
    \ in an IODEF document as defined in [RFC7203] is not a\n   suitable option.\n"
- title: 4.3.  Indicator Predicate Logic
  contents:
  - "4.3.  Indicator Predicate Logic\n   An IODEF document [RFC7970] can describe\
    \ incident reports and\n   indicators.  The Indicator class can include references\
    \ to other\n   indicators, observables, and more classes that contain details\
    \ about\n   the indicator.  When describing security indicators, it is often\n\
    \   common to need to group them together in order to form a group of\n   indicators\
    \ that constitute a security threat.  For example, a botnet\n   might have multiple\
    \ command and control servers.  For that reason,\n   IODEF v2 introduced the IndicatorExpression\
    \ class, which is used to\n   add the indicator predicate logic when grouping\
    \ more than one\n   indicator or observable.\n   Implementations must be able\
    \ to parse and apply the Boolean logic\n   offered by an IndicatorExpression in\
    \ order to evaluate the existence\n   of an indicator.  As explained in Section\
    \ 3.29.5 of [RFC7970], the\n   IndicatorExpression element operator defines the\
    \ operator applied to\n   all the child elements of the IndicatorExpression. \
    \ If no operator is\n   defined, \"and\" should be assumed.  IndicatorExpressions\
    \ can also be\n   nested together.  Child IndicatorExpressions should be treated\
    \ as\n   child elements of their parent, and they should be evaluated first\n\
    \   before being evaluated with the operator of their parent.\n   Users can refer\
    \ to Appendix A for example uses of the\n   IndicatorExpressions in an IODEF v2.\n"
- title: 4.4.  Disclosure Level
  contents:
  - "4.4.  Disclosure Level\n   Access to information in IODEF documents should be\
    \ tightly locked\n   since the content may be confidential.  IODEF has a common\
    \ attribute,\n   called \"restriction\", which indicates the disclosure guideline\
    \ to\n   which the sender expects the recipient to adhere to for the\n   information\
    \ represented in the class and its children.  That way, the\n   sender can express\
    \ the level of disclosure for each component of an\n   IODEF document.  Appropriate\
    \ external measures could be implemented\n   based on the restriction level. \
    \ One example is when Real-time Inter-\n   network Defense (RID) [RFC6545] is\
    \ used to transfer the IODEF\n   documents, it can provide policy guidelines for\
    \ handling IODEF\n   documents by using the RIDPolicy class.\n   The enforcement\
    \ of the disclosure guidelines is out of scope for\n   IODEF.  The recipient of\
    \ the IODEF document needs to follow the\n   guidelines, but these guidelines\
    \ themselves do not provide any\n   enforcement measures.  For that purpose, implementers\
    \ should consider\n   appropriate privacy control measures, technical or operational,\
    \ for\n   their implementation.\n"
- title: 5.  IODEF Uses
  contents:
  - "5.  IODEF Uses\n   IODEF is currently used by various organizations in order\
    \ to\n   represent security incidents and share incident and threat\n   information\
    \ between security operations organizations.\n"
- title: 5.1.  Implementations
  contents:
  - "5.1.  Implementations\n   In order to use IODEF, tools like IODEF parsers are\
    \ necessary.\n   [RFC8134] describes a set of IODEF implementations and uses by\n\
    \   various vendors and Computer Emergency Readiness Team (CERT)\n   organizations.\
    \  The document does not specify any particular\n   mandatory-to-implement (MTI)\
    \ IODEF classes but provides a list of\n   real-world uses.  Perl and Python modules\
    \ (XML::IODEF, Iodef::Pb,\n   iodeflib) are some examples.  Moreover, implementers\
    \ are encouraged\n   to refer to Section 7 of [RFC8134] for practical IODEF usage\n\
    \   guidelines.  On the other hand, [IODEF_IMP] includes various vendor\n   incident\
    \ reporting products that can consume and export in IODEF\n   format.\n"
- title: 5.2.  Inter-vendor and Service Provider Exercise
  contents:
  - "5.2.  Inter-vendor and Service Provider Exercise\n   As an interoperability exercise,\
    \ a limited number of vendors\n   organized and executed exchanges of threat indicators\
    \ in IODEF in\n   2013.  The transport protocol used was RID.  The threat information\n\
    \   shared included indicators from DDoS attacks as well as malware\n   incidents\
    \ and spear phishing that targets specific individuals after\n   harvesting information\
    \ about them.  The results served as proof-of-\n   concept (PoC) about how seemingly\
    \ competing entities could use IODEF\n   to exchange sanitized security information.\
    \  As this was a PoC\n   exercise, only example information (no real threats)\
    \ was shared as\n   part of the exchanges.\n         ____________            \
    \                 ____________\n         | Vendor X  |                       \
    \     | Vendor Y  |\n         | RID Agent |_______-------------________| RID Agent\
    \ |\n         |___________|       | Internet  |        |___________|\n       \
    \                      -------------\n                      ---- RID Report message\
    \ --->\n                      -- carrying IODEF example ->\n                 \
    \     --------- over TLS -------->\n                      <----- RID Ack message\
    \ -----\n                      <--- in case of failure ----\n                \
    \      Figure 2: PoC Peering Topology\n   Figure 2 shows how RID interactions\
    \ took place during the PoC.\n   Participating organizations were running RID\
    \ Agent software on\n   premises.  The RID Agents formed peering relationships\
    \ with other\n   participating organizations.  When Entity X had a new incident\
    \ to\n   exchange, it would package it in IODEF and send it to Entity Y over\n\
    \   Transport Layer Security (TLS) in a RID Report message.  In case\n   there\
    \ was an issue with the message, Entity Y would send a RID\n   Acknowledgement\
    \ message back to Entity X, which included an\n   application-level message to\
    \ describe the issue.  Interoperability\n   between RID Agents implementing [RFC6545]\
    \ and [RFC6546] was also\n   confirmed.\n   The first use case included sharing\
    \ of malware data related to an\n   Incident between CSIRTs.  After Entity X detected\
    \ an incident, Entity\n   X would put data about malware found during the incident\
    \ in a backend\n   system.  Entity X then decided to share the incident information\
    \ with\n   Entity Y about the malware discovered.  This could be a human\n   decision\
    \ or part of an automated process.\n   Below are the steps followed for the malware\
    \ information exchange\n   that was taking place:\n   (1)  Entity X has a sharing\
    \ agreement with Entity Y and has already\n        been configured with the IP\
    \ address of Entity Y's RID Agent.\n   (2)  Entity X's RID Agent connects to Entity\
    \ Y's RID Agent, and\n        mutual authentication occurs using PKI digital certificates.\n\
    \   (3)  Entity X pushes out a RID Report message, which contains\n        information\
    \ about N pieces of discovered malware.  IODEF is used\n        in RID to describe\
    \ the\n        (a)  hash of malware files;\n        (b)  registry settings changed\
    \ by the malware; and\n        (c)  C2 information for the malware.\n   (4)  Entity\
    \ Y receives a RID Report message and sends a RID\n        Acknowledgement message.\n\
    \   (5)  Entity Y stores the data in a format that makes it possible for\n   \
    \     the backend to know which source the data came from.\n   Another use case\
    \ was sharing a DDoS attack as explained in the\n   following scenario: Entity\
    \ X, a Critical Infrastructure and Key\n   Resource (CIKR) company, detects that\
    \ their internet connection is\n   saturated with an abnormal amount of traffic.\
    \  Further investigation\n   determines that this is an actual DDoS attack.  Entity\
    \ X's CSIRT\n   contacts their ISP, Entity Y, and shares information with them\
    \ about\n   the attack traffic characteristics.  Entity X's ISP is being\n   overwhelmed\
    \ by the amount of traffic, so it shares attack signatures\n   and IP addresses\
    \ of the most prolific hosts with its adjacent ISPs.\n   Below are the steps followed\
    \ for a DDoS information exchange:\n   (1)  Entity X has a sharing agreement with\
    \ Entity Y and has already\n        been configured with the IP address of Entity\
    \ Y's RID Agent.\n   (2)  Entity X's RID Agent connects to Entity Y's RID Agent,\
    \ and\n        mutual authentication occurs using PKI digital certificates.\n\
    \   (3)  Entity X pushes out a RID Report message, which contains\n        information\
    \ about the DDoS attack.  IODEF is used in RID to\n        describe the following:\n\
    \        (a)  Start and Detect dates and times;\n        (b)  IP addresses of\
    \ nodes sending DDoS traffic;\n        (c)  sharing and use restrictions;\n  \
    \      (d)  traffic characteristics (protocols and ports);\n        (e)  HTTP\
    \ user agents used; and\n        (f)  IP addresses of C2 for a botnet.\n   (4)\
    \  Entity Y receives a RID Report message and sends a RID\n        Acknowledgement\
    \ message.\n   (5)  Entity Y stores the data in a format that makes it possible\
    \ for\n        the backend to know which source the data came from.\n   (6)  Entity\
    \ Y shares information with other ISP entities it has an\n        established\
    \ relationship with.\n   One more use case was sharing spear-phishing email information\
    \ as\n   explained in the following scenario: the board members of several\n \
    \  defense contractors receive a targeted email inviting them to attend\n   a\
    \ conference in San Francisco.  The board members are asked to\n   provide their\
    \ personally identifiable information such as their home\n   address, phone number,\
    \ corporate email, etc., in an attached document\n   that came with the email.\
    \  The board members are also asked to click\n   on a URL that would allow them\
    \ to reach the sign-up page for the\n   conference.  One of the recipients believes\
    \ the email to be a\n   phishing attempt and forwards the email to their corporate\
    \ CSIRT for\n   analysis.  The CSIRT identifies the email as an attempted spear-\n\
    \   phishing incident and distributes the indicators to their sharing\n   partners.\n\
    \   Below are the steps followed for a spear-phishing information\n   exchange\
    \ between CSIRTs that were part of this PoC.\n   (1)  Entity X has a sharing agreement\
    \ with Entity Y and has already\n        been configured with the IP address of\
    \ Entity Y's RID Agent.\n   (2)  Entity X's RID Agent connects to Entity Y's RID\
    \ Agent, and\n        mutual authentication occurs using PKI digital certificates.\n\
    \   (3)  Entity X pushes out a RID Report message that contains\n        information\
    \ about the spear-phishing email.  IODEF is used in\n        RID to describe the\
    \ following:\n        (a)  attachment details (file Name, hash, size, malware\
    \ family);\n        (b)  target description (IP, domain, NSLookup);\n        (c)\
    \  email information (From, Subject, header information, date/\n             time,\
    \ digital signature); and\n        (d)  confidence score.\n   (4)  Entity Y receives\
    \ a RID Report message and sends a RID\n        Acknowledgement message.\n   (5)\
    \  Entity Y stores the data in a format that makes it possible for\n        the\
    \ backend to know which source the data came from.\n   Appendix B includes some\
    \ of the IODEF example information that was\n   exchanged by the organizations'\
    \ RID Agents as part of this PoC.\n"
- title: 5.3.  Use Cases
  contents:
  - "5.3.  Use Cases\n   Other use cases of IODEF, aside from the ones described above,\
    \ could\n   be as follows:\n   (1)  ISP notifying a national CERT or organization\
    \ when it identifies\n        and acts upon an incident, and CERTs notifying ISPs\
    \ when they\n        are aware of incidents.\n   (2)  Suspected phishing emails\
    \ could be shared amongst organizations\n        and national agencies.  Automation\
    \ could validate web content\n        that the suspicious emails are pointing\
    \ to.  Identified\n        malicious content linked in a phishing email could\
    \ then be\n        shared using IODEF.  Phishing campaigns could thus be subverted\n\
    \        much faster by automating information sharing using IODEF.\n   (3)  When\
    \ finding a certificate that should be revoked, a third party\n        would forward\
    \ an automated IODEF message to the Certification\n        Authority (CA) with\
    \ the full context of the certificate, and the\n        CA could act accordingly\
    \ after checking its validity.\n        Alternatively, in the event of a compromise\
    \ of the private key\n        of a certificate, a third party could alert the\
    \ certificate\n        owner about the compromise using IODEF.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   This memo does not require any IANA actions.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not incur any new security\
    \ issues, because it only\n   talks about the usage of IODEFv2 defined in RFC\
    \ 7970.  Nevertheless,\n   readers of this document should refer to the Security\
    \ Considerations\n   section of [RFC7970].\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC5901]  Cain, P. and D. Jevans, \"Extensions\
    \ to the IODEF-Document\n              Class for Reporting Phishing\", RFC 5901,\n\
    \              DOI 10.17487/RFC5901, July 2010,\n              <https://www.rfc-editor.org/info/rfc5901>.\n\
    \   [RFC6545]  Moriarty, K., \"Real-time Inter-network Defense (RID)\",\n    \
    \          RFC 6545, DOI 10.17487/RFC6545, April 2012,\n              <https://www.rfc-editor.org/info/rfc6545>.\n\
    \   [RFC7203]  Takahashi, T., Landfield, K., and Y. Kadobayashi, \"An\n      \
    \        Incident Object Description Exchange Format (IODEF)\n              Extension\
    \ for Structured Cybersecurity Information\",\n              RFC 7203, DOI 10.17487/RFC7203,\
    \ April 2014,\n              <https://www.rfc-editor.org/info/rfc7203>.\n   [RFC7495]\
    \  Montville, A. and D. Black, \"Enumeration Reference Format\n              for\
    \ the Incident Object Description Exchange Format\n              (IODEF)\", RFC\
    \ 7495, DOI 10.17487/RFC7495, March 2015,\n              <https://www.rfc-editor.org/info/rfc7495>.\n\
    \   [RFC7970]  Danyliw, R., \"The Incident Object Description Exchange\n     \
    \         Format Version 2\", RFC 7970, DOI 10.17487/RFC7970,\n              November\
    \ 2016, <https://www.rfc-editor.org/info/rfc7970>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [IODEF_IMP]\n              \"Implementations\
    \ on Incident Object Description Exchange\n              Format\", <http://siis.realmv6.org/implementations/>.\n\
    \   [RFC6546]  Trammell, B., \"Transport of Real-time Inter-network\n        \
    \      Defense (RID) Messages over HTTP/TLS\", RFC 6546,\n              DOI 10.17487/RFC6546,\
    \ April 2012,\n              <https://www.rfc-editor.org/info/rfc6546>.\n   [RFC8134]\
    \  Inacio, C. and D. Miyamoto, \"Management Incident\n              Lightweight\
    \ Exchange (MILE) Implementation Report\",\n              RFC 8134, DOI 10.17487/RFC8134,\
    \ May 2017,\n              <https://www.rfc-editor.org/info/rfc8134>.\n"
- title: Appendix A.  Indicator Predicate Logic Examples
  contents:
  - "Appendix A.  Indicator Predicate Logic Examples\n   In the following example,\
    \ the EventData class evaluates as a Flow of\n   one System with source address\
    \ 192.0.2.104 OR 192.0.2.106 AND target\n   address 198.51.100.1.\n   <!-- ...XML\
    \ code omitted... -->\n    <IndicatorData>\n      <Indicator>\n        <IndicatorID\
    \ name=\"csirt.example.com\" version=\"1\">\n        G90823490\n        </IndicatorID>\n\
    \        <Description>C2 domains</Description>\n        <IndicatorExpression operator=\"\
    and\">\n          <IndicatorExpression operator=\"or\">\n            <Observable>\n\
    \              <System category=\"source\" spoofed=\"no\">\n                <Node>\n\
    \                  <Address category=\"ipv4-addr\">\n                    192.0.2.104\n\
    \                  </Address>\n                </Node>\n              </System>\n\
    \            </Observable>\n            <Observable>\n              <System category=\"\
    source\" spoofed=\"no\">\n                <Node>\n                  <Address category=\"\
    ipv4-addr\">\n                    192.0.2.106\n                  </Address>\n\
    \                </Node>\n              </System>\n            </Observable>\n\
    \          </IndicatorExpression>\n          <Observable>\n            <System\
    \ category=\"target\" spoofed=\"no\">\n              <Node>\n                <Address\
    \ category=\"ipv4-addr\">\n                  198.51.100.1\n                </Address>\n\
    \              </Node>\n            </System>\n          </Observable>\n     \
    \   </IndicatorExpression>\n      </Indicator>\n    </IndicatorData>\n   <!--\
    \ ...XML code omitted... -->\n   Similarly, the FileData Class can be an observable\
    \ in an\n   IndicatorExpression.  The hash values of two files can be used to\n\
    \   match against an indicator using Boolean \"or\" logic.  In the\n   following\
    \ example, the indicator consists of either of the two files\n   with two different\
    \ hashes.\n   <!-- ...XML code omitted... -->\n    <IndicatorData>\n      <Indicator>\n\
    \        <IndicatorID name=\"csirt.example.com\" version=\"1\">\n        A4399IWQ\n\
    \        </IndicatorID>\n        <Description>File hash watchlist</Description>\n\
    \        <IndicatorExpression operator=\"or\">\n            <Observable>\n   \
    \           <FileData>\n                <File>\n                  <FileName>dummy.txt</FileName>\n\
    \                  <HashData scope=\"file-contents\">\n                    <Hash>\n\
    \                     <ds:DigestMethod Algorithm=\n                     \"http://www.w3.org/2001/04/xmlenc#sha256\"\
    />\n                     <ds:DigestValue>\n                      141accec23e7e5157de60853cb1e01bc38042d\n\
    \                      08f9086040815300b7fe75c184\n                     </ds:DigestValue>\n\
    \                    </Hash>\n                  </HashData>\n                </File>\n\
    \              </FileData>\n            </Observable>\n            <Observable>\n\
    \              <FileData>\n                <File>\n                  <FileName>dummy2.txt</FileName>\n\
    \                  <HashData scope=\"file-contents\">\n                    <Hash>\n\
    \                     <ds:DigestMethod Algorithm=\n                     \"http://www.w3.org/2001/04/xmlenc#sha256\"\
    />\n                     <ds:DigestValue>\n                      141accec23e7e5157de60853cb1e01bc38042d\n\
    \                      08f9086040815300b7fe75c184\n                     </ds:DigestValue>\n\
    \                    </Hash>\n                  </HashData>\n                </File>\n\
    \              </FileData>\n            </Observable>\n        </IndicatorExpression>\n\
    \      </Indicator>\n    </IndicatorData>\n   <!-- ...XML code omitted... -->\n"
- title: Appendix B.  Inter-vendor and Service Provider Exercise Examples
  contents:
  - "Appendix B.  Inter-vendor and Service Provider Exercise Examples\n   Below, some\
    \ of the IODEF example information that was exchanged by\n   the vendors as part\
    \ of this proof-of-concept, inter-vendor and\n   service provider exercise.\n"
- title: B.1.  Malware Delivery URL
  contents:
  - "B.1.  Malware Delivery URL\n   This example indicates malware and a related URL\
    \ for file delivery.\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <IODEF-Document\
    \ version=\"2.00\"\n                  xmlns=\"urn:ietf:params:xml:ns:iodef-2.0\"\
    \n                  xmlns:iodef=\"urn:ietf:params:xml:ns:iodef-2.0\"\n       \
    \           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <iodef:Incident\
    \ purpose=\"reporting\">\n      <iodef:IncidentID name=\"csirt.example.com\">\n\
    \        189801\n      </iodef:IncidentID>\n      <iodef:ReportTime>2012-12-05T12:20:00+00:00</iodef:ReportTime>\n\
    \      <iodef:GenerationTime>2012-12-05T12:20:00+00:00\n      </iodef:GenerationTime>\n\
    \      <iodef:Description>Malware and related indicators\n      </iodef:Description>\n\
    \      <iodef:Assessment occurrence=\"potential\">\n        <iodef:SystemImpact\
    \ severity=\"medium\" type=\"breach-privacy\">\n          <iodef:Description>Malware\
    \ with C2\n          </iodef:Description>\n        </iodef:SystemImpact>\n   \
    \   </iodef:Assessment>\n      <iodef:Contact role=\"creator\" type=\"organization\"\
    >\n        <iodef:ContactName>example.com CSIRT\n        </iodef:ContactName>\n\
    \        <iodef:Email>\n          <iodef:EmailTo>contact@csirt.example.com\n \
    \         </iodef:EmailTo>\n        </iodef:Email>\n      </iodef:Contact>\n \
    \     <iodef:EventData>\n        <iodef:Flow>\n          <iodef:System category=\"\
    source\">\n            <iodef:Node>\n              <iodef:Address category=\"\
    ipv4-addr\">192.0.2.200\n              </iodef:Address>\n                    \
    \      <iodef:Address category=\"site-uri\">\n                /log-bin/lunch_install.php?aff_id=1&amp;lunch_id=1&amp;\n\
    \                maddr=&amp;action=install\n              </iodef:Address>\n \
    \           </iodef:Node>\n            <iodef:NodeRole category=\"www\"/>\n  \
    \        </iodef:System>\n        </iodef:Flow>\n      </iodef:EventData>\n  \
    \  </iodef:Incident>\n  </IODEF-Document>\n"
- title: B.2.  DDoS
  contents:
  - "B.2.  DDoS\n   The DDoS test exchanged information that described a DDoS, including\n\
    \   protocols and ports, bad IP addresses, and HTTP user agent fields.\n   The\
    \ IODEF version used for the data representation was based on\n   [RFC7970].\n\
    \ <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <IODEF-Document version=\"2.00\"\
    \n                 xmlns=\"urn:ietf:params:xml:ns:iodef-2.0\"\n              \
    \   xmlns:iodef=\"urn:ietf:params:xml:ns:iodef-2.0\"\n                 xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\">\n   <iodef:Incident purpose=\"reporting\"\
    \ restriction=\"default\">\n     <iodef:IncidentID name=\"csirt.example.com\"\
    >\n       189701\n     </iodef:IncidentID>\n     <iodef:DetectTime>2013-02-05T01:15:45+00:00</iodef:DetectTime>\n\
    \     <iodef:StartTime>2013-02-05T00:34:45+00:00</iodef:StartTime>\n     <iodef:ReportTime>2013-02-05T01:34:45+00:00</iodef:ReportTime>\n\
    \     <iodef:GenerationTime>2013-02-05T01:15:45+00:00\n     </iodef:GenerationTime>\n\
    \     <iodef:Description>DDoS Traffic Seen</iodef:Description>\n     <iodef:Assessment\
    \ occurrence=\"actual\">\n       <iodef:SystemImpact severity=\"medium\" type=\"\
    availability-system\">\n         <iodef:Description>DDoS Traffic\n         </iodef:Description>\n\
    \       </iodef:SystemImpact>\n       <iodef:Confidence rating=\"high\"/>\n  \
    \   </iodef:Assessment>\n     <iodef:Contact role=\"creator\" type=\"organization\"\
    >\n       <iodef:ContactName>Dummy Test</iodef:ContactName>\n       <iodef:Email>\n\
    \         <iodef:EmailTo>contact@dummytest.com\n         </iodef:EmailTo>\n  \
    \     </iodef:Email>\n     </iodef:Contact>\n     <iodef:EventData>\n       <iodef:Description>\n\
    \         Dummy Test sharing with ISP1\n       </iodef:Description>\n       <iodef:Method>\n\
    \         <iodef:Reference>\n           <iodef:URL>\n             http://blog.spiderlabs.com/2011/01/loic-ddos-\n\
    \             analysis-and-detection.html\n           </iodef:URL>\n         \
    \  <iodef:URL>\n             http://en.wikipedia.org/wiki/Low_Orbit_Ion_Cannon\n\
    \           </iodef:URL>\n           <iodef:Description>\n             Low Orbit\
    \ Ion Cannon User Agent\n           </iodef:Description>\n         </iodef:Reference>\n\
    \       </iodef:Method>\n       <iodef:Flow>\n         <iodef:System category=\"\
    source\" spoofed=\"no\">\n           <iodef:Node>\n             <iodef:Address\
    \ category=\"ipv4-addr\">\n               192.0.2.104\n             </iodef:Address>\n\
    \           </iodef:Node>\n           <iodef:Service ip-protocol=\"6\">\n    \
    \         <iodef:Port>1337</iodef:Port>\n           </iodef:Service>\n       \
    \  </iodef:System>\n         <iodef:System category=\"source\" spoofed=\"no\"\
    >\n           <iodef:Node>\n             <iodef:Address category=\"ipv4-addr\"\
    >\n               192.0.2.106\n             </iodef:Address>\n           </iodef:Node>\n\
    \           <iodef:Service ip-protocol=\"6\">\n             <iodef:Port>1337</iodef:Port>\n\
    \           </iodef:Service>\n         </iodef:System>\n         <iodef:System\
    \ category=\"source\" spoofed=\"yes\">\n           <iodef:Node>\n            \
    \ <iodef:Address category=\"ipv4-net\">\n               198.51.100.0/24\n    \
    \         </iodef:Address>\n           </iodef:Node>\n           <iodef:Service\
    \ ip-protocol=\"6\">\n             <iodef:Port>1337</iodef:Port>\n           </iodef:Service>\n\
    \         </iodef:System>\n         <iodef:System category=\"source\" spoofed=\"\
    yes\">\n           <iodef:Node>\n             <iodef:Address category=\"ipv6-addr\"\
    >\n               2001:db8:dead:beef::1\n             </iodef:Address>\n     \
    \      </iodef:Node>\n           <iodef:Service ip-protocol=\"6\">\n         \
    \    <iodef:Port>1337</iodef:Port>\n           </iodef:Service>\n         </iodef:System>\n\
    \         <iodef:System category=\"target\">\n           <iodef:Node>\n      \
    \       <iodef:Address category=\"ipv4-addr\">\n               203.0.113.1\n \
    \            </iodef:Address>\n           </iodef:Node>\n           <iodef:Service\
    \ ip-protocol=\"6\">\n             <iodef:Port>80</iodef:Port>\n           </iodef:Service>\n\
    \         </iodef:System>\n         <iodef:System category=\"sensor\">\n     \
    \      <iodef:Node>\n           </iodef:Node>\n           <iodef:Description>\n\
    \             Information provided in Flow class instance is from\n          \
    \   Inspection of traffic from network tap\n           </iodef:Description>\n\
    \         </iodef:System>\n       </iodef:Flow>\n       <iodef:Expectation action=\"\
    other\"/>\n     </iodef:EventData>\n     <iodef:IndicatorData>\n       <iodef:Indicator>\n\
    \         <iodef:IndicatorID name=\"csirt.example.com\" version=\"1\">\n     \
    \      G83345941\n         </iodef:IndicatorID>\n         <iodef:Description>\n\
    \           User-Agent string\n         </iodef:Description>\n         <iodef:Observable>\n\
    \           <iodef:BulkObservable type=\"http-user-agent\">\n             <iodef:BulkObservableList>\n\
    \               user-agent=\"Mozilla/5.0 (Macintosh; U;\n               Intel\
    \ Mac OS X 10.5; en-US; rv:1.9.2.12)\n               Gecko/20101026 Firefox/3.6.12\"\
    >\n             </iodef:BulkObservableList>\n           </iodef:BulkObservable>\n\
    \         </iodef:Observable>\n       </iodef:Indicator>\n     </iodef:IndicatorData>\n\
    \   </iodef:Incident>\n </IODEF-Document>\n"
- title: B.3.  Spear Phishing
  contents:
  - "B.3.  Spear Phishing\n   The spear-phishing test exchanged information that described\
    \ a spear-\n   phishing email, including DNS records and addresses about the sender,\n\
    \   malicious attached file information, and email data.  The IODEF\n   version\
    \ used for the data representation was based on [RFC7970].\n <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n <IODEF-Document version=\"2.00\"\n              \
    \   xmlns=\"urn:ietf:params:xml:ns:iodef-2.0\"\n                 xmlns:iodef=\"\
    urn:ietf:params:xml:ns:iodef-2.0\"\n                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
    \n                 xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n   <iodef:Incident\
    \ purpose=\"reporting\">\n     <iodef:IncidentID name=\"csirt.example.com\">\n\
    \       189601\n     </iodef:IncidentID>\n     <iodef:DetectTime>2013-01-04T08:06:12+00:00</iodef:DetectTime>\n\
    \     <iodef:StartTime>2013-01-04T08:01:34+00:00</iodef:StartTime>\n     <iodef:EndTime>2013-01-04T08:31:27+00:00</iodef:EndTime>\n\
    \     <iodef:ReportTime>2013-01-04T09:15:45+00:00</iodef:ReportTime>\n     <iodef:GenerationTime>2013-01-04T09:15:45+00:00\n\
    \     </iodef:GenerationTime>\n     <iodef:Description>\n       Zeus Spear Phishing\
    \ E-mail with Malware Attachment\n     </iodef:Description>\n     <iodef:Assessment\
    \ occurrence=\"potential\">\n       <iodef:SystemImpact severity=\"medium\" type=\"\
    takeover-system\">\n         <iodef:Description>\n           Malware with Command\
    \ and Control Server and System Changes\n         </iodef:Description>\n     \
    \  </iodef:SystemImpact>\n     </iodef:Assessment>\n     <iodef:Contact role=\"\
    creator\" type=\"organization\">\n       <iodef:ContactName>example.com CSIRT</iodef:ContactName>\n\
    \       <iodef:Email>\n         <iodef:EmailTo>contact@csirt.example.com</iodef:EmailTo>\n\
    \         </iodef:Email>\n     </iodef:Contact>\n     <iodef:EventData>\n    \
    \   <iodef:Description>\n         Targeting Defense Contractors,\n         specifically\
    \ board members attending Dummy Con\n       </iodef:Description>\n       <iodef:Method>\n\
    \         <iodef:Reference observable-id=\"ref-1234\">\n           <iodef:Description>Zeus</iodef:Description>\n\
    \         </iodef:Reference>\n       </iodef:Method>\n       <iodef:Flow>\n  \
    \       <iodef:System category=\"source\">\n           <iodef:Node>\n        \
    \     <iodef:Address category=\"site-uri\">\n               http://www.zeusevil.example.com\n\
    \             </iodef:Address>\n             <iodef:Address category=\"ipv4-addr\"\
    >\n               192.0.2.166\n             </iodef:Address>\n             <iodef:Address\
    \ category=\"asn\">\n               65535\n             </iodef:Address>\n   \
    \          <iodef:Address category=\"ext-value\"\n                           \
    \ ext-category=\"as-name\">\n               EXAMPLE-AS - University of Example\n\
    \             </iodef:Address>\n             <iodef:Address category=\"ext-value\"\
    \n                            ext-category=\"as-prefix\">\n               192.0.2.0/24\n\
    \             </iodef:Address>\n           </iodef:Node>\n           <iodef:NodeRole\
    \ category=\"malware-distribution\"/>\n         </iodef:System>\n       </iodef:Flow>\n\
    \       <iodef:Flow>\n         <iodef:System category=\"source\">\n          \
    \ <iodef:Node>\n             <iodef:DomainData>\n               <Name>mail1.evildave.example.com</Name>\n\
    \             </iodef:DomainData>\n             <iodef:Address category=\"ipv4-addr\"\
    >\n               198.51.100.6\n             </iodef:Address>\n             <iodef:Address\
    \ category=\"asn\">\n               65534\n             </iodef:Address>\n   \
    \          <iodef:Address category=\"ext-value\"\n                           \
    \ ext-category=\"as-name\">\n               EXAMPLE-AS - University of Example\n\
    \             </iodef:Address>\n             <iodef:DomainData>\n            \
    \   <iodef:Name>evildave.example.com</iodef:Name>\n               <iodef:DateDomainWasChecked>2013-01-04T09:10:24+00:00\n\
    \               </iodef:DateDomainWasChecked>\n               <!-- <iodef:RelatedDNS\
    \ RecordType=\"MX\"> -->\n               <iodef:RelatedDNS dtype=\"string\">\n\
    \                 evildave.example.com MX preference = 10, mail exchanger\n  \
    \               = mail1.evildave.example.com\n               </iodef:RelatedDNS>\n\
    \               <iodef:RelatedDNS dtype=\"string\">\n                 mail1.evildave.example.com\n\
    \                 internet address = 198.51.100.6\n               </iodef:RelatedDNS>\n\
    \               <iodef:RelatedDNS dtype=\"string\">\n                 zuesevil.example.com.\
    \ IN TXT \\\"v=spf1 a mx -all\\\"\n               </iodef:RelatedDNS>\n      \
    \       </iodef:DomainData>\n           </iodef:Node>\n           <iodef:NodeRole\
    \ category=\"mail\">\n             <iodef:Description>\n               Sending\
    \ phishing mails\n             </iodef:Description>\n           </iodef:NodeRole>\n\
    \           <iodef:Service>\n             <iodef:EmailData>\n               <iodef:EmailFrom>\n\
    \                 emaildave@evildave.example.com\n               </iodef:EmailFrom>\n\
    \               <iodef:EmailSubject>\n                 Join us at Dummy Con\n\
    \               </iodef:EmailSubject>\n               <iodef:EmailX-Mailer>\n\
    \                 StormRider 4.0\n               </iodef:EmailX-Mailer>\n    \
    \         </iodef:EmailData>\n           </iodef:Service>\n         </iodef:System>\n\
    \         <iodef:System category=\"target\">\n           <iodef:Node>\n      \
    \       <iodef:Address category=\"ipv4-addr\">\n               203.0.113.2\n \
    \            </iodef:Address>\n           </iodef:Node>\n         </iodef:System>\n\
    \       </iodef:Flow>\n       <iodef:Expectation action=\"other\"/>\n       <iodef:Record>\n\
    \         <iodef:RecordData>\n           <iodef:FileData observable-id=\"fd-1234\"\
    >\n             <iodef:File>\n               <iodef:FileName>\n              \
    \   Dummy Con Sign Up Sheet.txt\n               </iodef:FileName>\n          \
    \     <iodef:FileSize>\n                 152\n               </iodef:FileSize>\n\
    \               <iodef:HashData scope=\"file-contents\">\n                 <iodef:Hash>\n\
    \                   <ds:DigestMethod Algorithm=\n                   \"http://www.w3.org/2001/04/xmlenc#sha256\"\
    />\n                   <ds:DigestValue>\n                     141accec23e7e5157de60853cb1e01bc38042d\n\
    \                     08f9086040815300b7fe75c184\n                   </ds:DigestValue>\n\
    \                 </iodef:Hash>\n               </iodef:HashData>\n          \
    \   </iodef:File>\n           </iodef:FileData>\n         </iodef:RecordData>\n\
    \         <iodef:RecordData>\n           <iodef:CertificateData>\n           \
    \  <iodef:Certificate>\n               <ds:X509Data>\n                 <ds:X509IssuerSerial>\n\
    \                   <ds:X509IssuerName>FakeCA\n                   </ds:X509IssuerName>\n\
    \                   <ds:X509SerialNumber>\n                     57482937101\n\
    \                   </ds:X509SerialNumber>\n                 </ds:X509IssuerSerial>\n\
    \                 <ds:X509SubjectName>EvilDaveExample\n                 </ds:X509SubjectName>\n\
    \               </ds:X509Data>\n             </iodef:Certificate>\n          \
    \ </iodef:CertificateData>\n         </iodef:RecordData>\n       </iodef:Record>\n\
    \     </iodef:EventData>\n   </iodef:Incident>\n </IODEF-Document>\n"
- title: B.4.  Malware
  contents:
  - "B.4.  Malware\n   In this test, malware information was exchanged using RID and\
    \ IODEF.\n   The information included file hashes, registry setting changes, and\n\
    \   the C2 servers the malware uses.\n"
- title: <?xml version="1.0" encoding="UTF-8"?>
  contents:
  - '<?xml version="1.0" encoding="UTF-8"?>

    '
- title: <IODEF-Document version="2.00"
  contents:
  - "<IODEF-Document version=\"2.00\"\n                xmlns=\"urn:ietf:params:xml:ns:iodef-2.0\"\
    \n                xmlns:iodef=\"urn:ietf:params:xml:ns:iodef-2.0\"\n         \
    \       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n            \
    \    xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">\n  <iodef:Incident purpose=\"\
    reporting\">\n    <iodef:IncidentID name=\"csirt.example.com\">\n      189234\n\
    \    </iodef:IncidentID>\n    <iodef:ReportTime>2013-03-07T16:14:56.757+05:30</iodef:ReportTime>\n\
    \    <iodef:GenerationTime>2013-03-07T16:14:56.757+05:30\n    </iodef:GenerationTime>\n\
    \    <iodef:Description>\n      Malware and related indicators identified\n  \
    \  </iodef:Description>\n    <iodef:Assessment occurrence=\"potential\">\n   \
    \   <iodef:SystemImpact severity=\"medium\" type=\"breach-proprietary\">\n   \
    \     <iodef:Description>\n          Malware with Command and Control Server and\
    \ System Changes\n        </iodef:Description>\n      </iodef:SystemImpact>\n\
    \    </iodef:Assessment>\n    <iodef:Contact role=\"creator\" type=\"organization\"\
    >\n      <iodef:ContactName>example.com CSIRT</iodef:ContactName>\n      <iodef:Email>\n\
    \        <iodef:EmailTo>contact@csirt.example.com</iodef:EmailTo>\n      </iodef:Email>\n\
    \    </iodef:Contact>\n    <iodef:EventData>\n      <iodef:Method>\n        <iodef:Reference>\n\
    \          <iodef:URL>\n            http://www.threatexpert.example.com/report.aspx?\n\
    \            md5=e2710ceb088dacdcb03678db250742b7\n          </iodef:URL>\n  \
    \        <iodef:Description>Zeus</iodef:Description>\n        </iodef:Reference>\n\
    \      </iodef:Method>\n      <iodef:Flow>\n        <iodef:System category=\"\
    source\">\n          <iodef:Node>\n            <iodef:Address category=\"ipv4-addr\"\
    \n                           observable-id=\"addr-c2-91011-001\">\n          \
    \    203.0.113.200\n            </iodef:Address>\n            <iodef:Address category=\"\
    site-uri\"\n                           observable-id=\"addr-c2-91011-002\">\n\
    \              http://zeus.556677889900.example.com/log-bin/\n              lunch_install.php?aff_id=1&amp;\n\
    \              lunch_id=1&amp;maddr=&amp;\n              action=install\n    \
    \        </iodef:Address>\n          </iodef:Node>\n          <iodef:NodeRole\
    \ category=\"c2-server\"/>\n        </iodef:System>\n      </iodef:Flow>\n   \
    \   <iodef:Record>\n        <iodef:RecordData>\n          <iodef:FileData observable-id=\"\
    file-91011-001\">\n            <iodef:File>\n              <iodef:HashData scope=\"\
    file-contents\">\n                <iodef:Hash>\n                  <ds:DigestMethod\
    \ Algorithm=\n                          \"http://www.w3.org/2001/04/xmlenc#sha1\"\
    />\n                  <ds:DigestValue>\n                    MHg2NzUxQTI1MzQ4M0E2N0Q4NkUwRjg0NzYwRjYxRjEwQkJDQzJF\n\
    \                    REZG\n                  </ds:DigestValue>\n             \
    \   </iodef:Hash>\n              </iodef:HashData>\n            </iodef:File>\n\
    \            <iodef:File>\n              <iodef:HashData scope=\"file-contents\"\
    >\n                <iodef:Hash>\n                  <ds:DigestMethod Algorithm=\n\
    \                          \"http://www.w3.org/2001/04/xmlenc#md5\"/>\n      \
    \            <ds:DigestValue>\n                    MHgyRTg4ODA5ODBENjI0NDdFOTc5MEFGQTg5NTEzRjBBNA==\n\
    \                  </ds:DigestValue>\n                </iodef:Hash>\n        \
    \      </iodef:HashData>\n            </iodef:File>\n          </iodef:FileData>\n\
    \          <iodef:WindowsRegistryKeysModified observable-id=\n          \"regkey-91011-001\"\
    >\n            <iodef:Key registryaction=\"add-value\">\n              <iodef:KeyName>\n\
    \                HKLM\\Software\\Microsoft\\Windows\\\n                CurrentVersion\\\
    Run\\tamg\n              </iodef:KeyName>\n              <iodef:Value>\n     \
    \           ?\\?\\?%System%\\wins\\mc.exe\\?\\??\n              </iodef:Value>\n\
    \            </iodef:Key>\n            <iodef:Key registryaction=\"modify-value\"\
    >\n              <iodef:KeyName>HKLM\\Software\\Microsoft\\\n                Windows\\\
    CurrentVersion\\Run\\dqo\n              </iodef:KeyName>\n              <iodef:Value>\"\
    \\\"\\\"%Windir%\\Resources\\\n                Themes\\Luna\\km.exe\\?\\?\"\n\
    \              </iodef:Value>\n            </iodef:Key>\n          </iodef:WindowsRegistryKeysModified>\n\
    \        </iodef:RecordData>\n      </iodef:Record>\n    </iodef:EventData>\n\
    \    <iodef:EventData>\n      <iodef:Method>\n        <iodef:Reference>\n    \
    \      <iodef:URL>\n            http://www.threatexpert.example.com/report.aspx?\n\
    \            md5=c3c528c939f9b176c883ae0ce5df0001\n          </iodef:URL>\n  \
    \        <iodef:Description>Cridex</iodef:Description>\n        </iodef:Reference>\n\
    \      </iodef:Method>\n      <iodef:Flow>\n        <iodef:System category=\"\
    source\">\n          <iodef:Node>\n            <iodef:Address category=\"ipv4-addr\"\
    \n                           observable-id=\"addr-c2-91011-003\">\n          \
    \    203.0.113.100\n            </iodef:Address>\n          </iodef:Node>\n  \
    \        <iodef:NodeRole category=\"c2-server\"/>\n          <iodef:Service ip-protocol=\"\
    6\">\n            <iodef:Port>8080</iodef:Port>\n          </iodef:Service>\n\
    \        </iodef:System>\n      </iodef:Flow>\n      <iodef:Record>\n        <iodef:RecordData>\n\
    \          <iodef:FileData observable-id=\"file-91011-002\">\n            <iodef:File>\n\
    \              <iodef:HashData scope=\"file-contents\">\n                <iodef:Hash>\n\
    \                  <ds:DigestMethod Algorithm=\n                          \"http://www.w3.org/2001/04/xmlenc#sha1\"\
    />\n                  <ds:DigestValue>\n                    MHg3MjYzRkUwRDNBMDk1RDU5QzhFMEM4OTVBOUM\n\
    \                    1ODVFMzQzRTcxNDFD\n                  </ds:DigestValue>\n\
    \                </iodef:Hash>\n              </iodef:HashData>\n            </iodef:File>\n\
    \          </iodef:FileData>\n          <iodef:FileData observable-id=\"file-91011-003\"\
    >\n            <iodef:File>\n              <iodef:HashData scope=\"file-contents\"\
    >\n                <iodef:Hash>\n                  <ds:DigestMethod Algorithm=\n\
    \                          \"http://www.w3.org/2001/04/xmlenc#md5\"/>\n      \
    \            <ds:DigestValue>\n                    MHg0M0NEODUwRkNEQURFNDMzMEE1QkVBNkYxNkVFOTcxQw==\n\
    \                  </ds:DigestValue>\n                </iodef:Hash>\n        \
    \      </iodef:HashData>\n            </iodef:File>\n          </iodef:FileData>\n\
    \          <iodef:WindowsRegistryKeysModified observable-id=\n               \
    \   \"regkey-91011-002\">\n            <iodef:Key registryaction=\"add-value\"\
    >\n              <iodef:KeyName>\n                HKLM\\Software\\Microsoft\\\
    Windows\\\n                CurrentVersion\\Run\\KB00121600.exe\n             \
    \ </iodef:KeyName>\n              <iodef:Value>\n                \\?\\?%AppData%\\\
    KB00121600.exe\\?\\?\n              </iodef:Value>\n            </iodef:Key>\n\
    \          </iodef:WindowsRegistryKeysModified>\n        </iodef:RecordData>\n\
    \      </iodef:Record>\n    </iodef:EventData>\n    <iodef:IndicatorData>\n  \
    \    <iodef:Indicator>\n        <iodef:IndicatorID name=\"csirt.example.com\"\
    \ version=\"1\">\n          ind-91011\n        </iodef:IndicatorID>\n        <iodef:Description>\n\
    \          evil c2 server, file hash, and registry key\n        </iodef:Description>\n\
    \        <iodef:IndicatorExpression operator=\"or\">\n          <iodef:IndicatorExpression\
    \ operator=\"or\">\n            <iodef:Observable>\n              <iodef:Address\
    \ category=\"site-uri\"\n                             observable-id=\"addr-qrst\"\
    >\n                http://foo.example.com:12345/evil/cc.php\n              </iodef:Address>\n\
    \            </iodef:Observable>\n            <iodef:Observable>\n           \
    \   <iodef:Address category=\"ipv4-addr\"\n                             observable-id=\"\
    addr-stuv\">\n                192.0.2.1\n              </iodef:Address>\n    \
    \        </iodef:Observable>\n            <iodef:Observable>\n              <iodef:Address\
    \ category=\"ipv4-addr\"\n                             observable-id=\"addr-tuvw\"\
    >\n                198.51.100.1\n              </iodef:Address>\n            </iodef:Observable>\n\
    \            <iodef:Observable>\n              <iodef:Address category=\"ipv6-addr\"\
    \n                             observable-id=\"addr-uvwx\">\n                2001:db8:dead:beef::1\n\
    \              </iodef:Address>\n            </iodef:Observable>\n           \
    \ <iodef:ObservableReference uid-ref=\"addr-c2-91011-001\"/>\n            <iodef:ObservableReference\
    \ uid-ref=\"addr-c2-91011-002\"/>\n            <iodef:ObservableReference uid-ref=\"\
    addr-c2-91011-003\"/>\n          </iodef:IndicatorExpression>\n          <iodef:IndicatorExpression\
    \ operator=\"and\">\n            <iodef:Observable>\n              <iodef:FileData\
    \ observable-id=\"file-91011-000\">\n                <iodef:File>\n          \
    \        <iodef:HashData scope=\"file-contents\">\n                    <iodef:Hash>\n\
    \                      <ds:DigestMethod Algorithm=\n                         \
    \    \"http://www.w3.org/2001/04/xmlenc#sha256\"/>\n                      <ds:DigestValue>\n\
    \                        141accec23e7e5157de60853cb1e01bc38042d08f\n         \
    \               9086040815300b7fe75c184\n                      </ds:DigestValue>\n\
    \                    </iodef:Hash>\n                  </iodef:HashData>\n    \
    \            </iodef:File>\n              </iodef:FileData>\n            </iodef:Observable>\n\
    \            <iodef:Observable>\n              <iodef:WindowsRegistryKeysModified\
    \ observable-id=\n                      \"regkey-91011-000\">\n              \
    \  <iodef:Key registryaction=\"add-key\"\n                           observable-id=\"\
    regkey-vwxy\">\n                  <iodef:KeyName>\n                    HKLM\\\
    SYSTEM\\CurrentControlSet\\\n                    Services\\.Net CLR\n        \
    \          </iodef:KeyName>\n                </iodef:Key>\n                <iodef:Key\
    \ registryaction=\"add-key\"\n                           observable-id=\"regkey-wxyz\"\
    >\n                  <iodef:KeyName>\n                    HKLM\\SYSTEM\\CurrentControlSet\\\
    \n                    Services\\.Net CLR\\Parameters\n                  </iodef:KeyName>\n\
    \                  <iodef:Value>\n                    \\\"\\\"%AppData%\\KB00121600.exe\\\
    \"\\\"\n                  </iodef:Value>\n                </iodef:Key>\n     \
    \           <iodef:Key registryaction=\"add-value\"\n                        \
    \   observable-id=\"regkey-xyza\">\n                  <iodef:KeyName>\n      \
    \              HKLM\\SYSTEM\\CurrentControlSet\\Services\\\n                 \
    \   .Net CLR\\Parameters\\ServiceDll\n                  </iodef:KeyName>\n   \
    \               <iodef:Value>C:\\bad.exe</iodef:Value>\n                </iodef:Key>\n\
    \                <iodef:Key registryaction=\"modify-value\"\n                \
    \           observable-id=\"regkey-zabc\">\n                  <iodef:KeyName>\n\
    \                    HKLM\\SYSTEM\\CurrentControlSet\\\n                    Services\\\
    .Net CLR\\Parameters\\Bar\n                  </iodef:KeyName>\n              \
    \    <iodef:Value>Baz</iodef:Value>\n                </iodef:Key>\n          \
    \    </iodef:WindowsRegistryKeysModified>\n            </iodef:Observable>\n \
    \         </iodef:IndicatorExpression>\n          <iodef:IndicatorExpression operator=\"\
    or\">\n            <iodef:IndicatorExpression operator=\"and\">\n            \
    \  <iodef:ObservableReference uid-ref=\"file-91011-001\"/>\n              <iodef:ObservableReference\
    \ uid-ref=\"regkey-91011-001\"/>\n            </iodef:IndicatorExpression>\n \
    \           <iodef:IndicatorExpression operator=\"and\">\n              <iodef:IndicatorExpression\
    \ operator=\"or\">\n                <iodef:ObservableReference uid-ref=\"file-91011-002\"\
    />\n                <iodef:ObservableReference uid-ref=\"file-91011-003\"/>\n\
    \              </iodef:IndicatorExpression>\n              <iodef:ObservableReference\
    \ uid-ref=\"regkey-91011-002\"/>\n            </iodef:IndicatorExpression>\n \
    \         </iodef:IndicatorExpression>\n        </iodef:IndicatorExpression>\n\
    \      </iodef:Indicator>\n    </iodef:IndicatorData>\n  </iodef:Incident>\n"
- title: </IODEF-Document>
  contents:
  - '</IODEF-Document>

    '
- title: B.5.  IoT Malware
  contents:
  - "B.5.  IoT Malware\n   The Internet of Things (IoT) malware test exchanged information\
    \ that\n   described a bad IP address of IoT malware and its scanned ports.\n\
    \   This example information is extracted from alert messages of a\n   darknet\
    \ monitoring system referred to in [RFC8134].  The IODEF\n   version used for\
    \ the data representation was based on [RFC7970].\n  <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n  <IODEF-Document version=\"2.00\"\n                  xmlns=\"urn:ietf:params:xml:ns:iodef-2.0\"\
    \n                  xmlns:iodef=\"urn:ietf:params:xml:ns:iodef-2.0\"\n       \
    \           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <iodef:Incident\
    \ purpose=\"reporting\">\n      <iodef:IncidentID name=\"csirt.example.com\">\n\
    \        189802\n      </iodef:IncidentID>\n      <iodef:ReportTime>2017-03-01T01:15:00+09:00</iodef:ReportTime>\n\
    \      <iodef:GenerationTime>2017-03-01T01:15:00+09:00\n      </iodef:GenerationTime>\n\
    \      <iodef:Description>IoT Malware and related indicators\n      </iodef:Description>\n\
    \      <iodef:Assessment occurrence=\"potential\">\n        <iodef:SystemImpact\
    \ severity=\"medium\" type=\"takeover-system\">\n          <iodef:Description>IoT\
    \ Malware is scanning other hosts\n          </iodef:Description>\n        </iodef:SystemImpact>\n\
    \      </iodef:Assessment>\n      <iodef:Contact role=\"creator\" type=\"organization\"\
    >\n        <iodef:ContactName>example.com CSIRT\n        </iodef:ContactName>\n\
    \        <iodef:Email>\n          <iodef:EmailTo>contact@csirt.example.com\n \
    \         </iodef:EmailTo>\n        </iodef:Email>\n      </iodef:Contact>\n \
    \     <iodef:EventData>\n        <iodef:Discovery source=\"nidps\">\n        \
    \  <iodef:Description>\n            Detected by darknet monitoring\n         \
    \ </iodef:Description>\n        </iodef:Discovery>\n        <iodef:Flow>\n   \
    \       <iodef:System category=\"source\">\n            <iodef:Node>\n       \
    \       <iodef:Address category=\"ipv4-addr\">\n                192.0.2.210\n\
    \              </iodef:Address>\n            </iodef:Node>\n            <iodef:NodeRole\
    \ category=\"camera\"/>\n            <iodef:Service ip-protocol=\"6\">\n     \
    \         <iodef:Port>23</iodef:Port>\n            </iodef:Service>\n        \
    \    <iodef:OperatingSystem>\n              <iodef:Description>\n            \
    \    Example Surveillance Camera OS 2.1.1\n              </iodef:Description>\n\
    \            </iodef:OperatingSystem>\n          </iodef:System>\n        </iodef:Flow>\n\
    \        <iodef:EventData>\n          <iodef:Flow>\n            <iodef:System\
    \ category=\"target\">\n              <iodef:Node>\n                <iodef:Address\
    \ category=\"ipv4-addr\">\n                  198.51.100.1\n                </iodef:Address>\n\
    \              </iodef:Node>\n              <iodef:NodeRole category=\"honeypot\"\
    />\n              <iodef:Service ip-protocol=\"6\">\n                <iodef:Port>23</iodef:Port>\n\
    \              </iodef:Service>\n            </iodef:System>\n          </iodef:Flow>\n\
    \        </iodef:EventData>\n        <iodef:EventData>\n          <iodef:Flow>\n\
    \            <iodef:System category=\"target\">\n              <iodef:Node>\n\
    \                <iodef:Address category=\"ipv4-addr\">\n                  198.51.100.94\n\
    \                </iodef:Address>\n              </iodef:Node>\n             \
    \ <iodef:NodeRole category=\"honeypot\"/>\n              <iodef:Service ip-protocol=\"\
    6\">\n                <iodef:Port>23</iodef:Port>\n              </iodef:Service>\n\
    \            </iodef:System>\n          </iodef:Flow>\n        </iodef:EventData>\n\
    \        <iodef:EventData>\n          <iodef:Flow>\n            <iodef:System\
    \ category=\"target\">\n              <iodef:Node>\n                <iodef:Address\
    \ category=\"ipv4-addr\">\n                  198.51.100.237\n                </iodef:Address>\n\
    \              </iodef:Node>\n              <iodef:NodeRole category=\"honeypot\"\
    />\n              <iodef:Service ip-protocol=\"6\">\n                <iodef:Port>2323</iodef:Port>\n\
    \              </iodef:Service>\n            </iodef:System>\n          </iodef:Flow>\n\
    \        </iodef:EventData>\n      </iodef:EventData>\n    </iodef:Incident>\n\
    \  </IODEF-Document>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Panos Kampanakis\n   Cisco Systems\n   Email: pkampana@cisco.com\n\
    \   Mio Suzuki\n   NICT\n   4-2-1, Nukui-Kitamachi\n   Koganei, Tokyo  184-8795\n\
    \   Japan\n   Email: mio@nict.go.jp\n"
