- title: __initial_text__
  contents:
  - "            Microsoft Windows 2000 Kerberos Change Password\n               \
    \        and Set Password Protocols\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies Microsoft's Windows 2000 Kerberos change password\n\
    \   and set password protocols.  The Windows 2000 Kerberos change\n   password\
    \ protocol interoperates with the original Kerberos change\n   password protocol.\
    \  Change password is a request reply protocol that\n   includes a KRB_PRIV message\
    \ that contains the new password for the\n   user.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   Microsoft's Windows 2000 Kerberos change password protocol\n\
    \   interoperates with the original Kerberos change password protocol.\n   Change\
    \ password is a request reply protocol that includes a KRB_PRIV\n   message that\
    \ contains the new password for the user.  The original\n   change password protocol\
    \ does not allow an administrator to set a\n   password for a new user.  This\
    \ functionality is useful in some\n   environments, and this proposal extends\
    \ the change password protocol\n   to allow password setting.  The changes are:\
    \ adding new fields to the\n   request message to indicate the principal which\
    \ is having its\n   password set, not requiring the initial flag in the service\
    \ ticket,\n   using a new protocol version number, and adding three new result\n\
    \   codes.\n"
- title: 2.  The Protocol
  contents:
  - "2.  The Protocol\n   The service accepts requests on UDP port 464 and TCP port\
    \ 464 as\n   well.  The protocol consists of a single request message followed\
    \ by\n   a single reply message.  For UDP transport, each message must be\n  \
    \ fully contained in a single UDP packet.\n   For TCP transport, there is a 4\
    \ octet header in network byte order\n   that precedes the message and specifies\
    \ the length of the message.\n   Request Message\n     0                   1 \
    \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         message length        |    protocol version number    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          AP_REQ length        |         AP_REQ data           /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    /                        KRB-PRIV message                       /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   All 16 bit fields are in big-endian order.\n   message length field: contains\
    \ the number of bytes in the message\n   including this field.\n   protocol version\
    \ number: contains the hex constant 0xff80 (big-endian\n   integer).\n   AP-REQ\
    \ length: length of AP-REQ data, in bytes.  If the length is\n   zero, then the\
    \ last field contains a KRB-ERROR message instead of a\n   KRB-PRIV message.\n\
    \   AP-REQ data: (see [1]) The AP-REQ message must be for the service\n   principal\
    \ kadmin/changepw@REALM, where REALM is the REALM of the user\n   who wishes to\
    \ change/set his password.  The authenticator in the AP-\n   REQ must include\
    \ a subsession key.  (NOTE: The subsession key must be\n   pseudo-randomly generated\
    \ and must never be reused for multiple\n   authenticators.)  To enable setting\
    \ of passwords, it is not required\n   that the initial flag be set in the Kerberos\
    \ service ticket.\n   KRB-PRIV message (see [1]) This user-data field in the KRB-PRIV\n\
    \   message is encrypted using the subkey from the authenticator in the\n   AP-REQ\
    \ data.  The usec and seq-number fields of the KRB_PRIV message\n   are present\
    \ and have the same value as the seq-number field in the\n   authenticator from\
    \ the AP_REQ message (the seq-number in the\n   authenticator will be present).\
    \  The server ignores the optional\n   r-address field in the KRB_PRIV message,\
    \ if it is present.\n   The user-data component of the message consists of the\
    \ following\n   ASN.1 structure encoded as an OCTET STRING:\n      ChangePasswdData\
    \ ::=  SEQUENCE {\n                          newpasswd[0]   OCTET STRING,\n  \
    \                        targname[1]    PrincipalName OPTIONAL,\n            \
    \              targrealm[2]   Realm OPTIONAL\n                          }\n  \
    \ The server must verify the AP-REQ message, check whether the client\n   principal\
    \ in the ticket is authorized to set/change the password\n   (either for that\
    \ principal, or for the principal in the targname\n   field if present), and decrypt\
    \ the new password.  The server also\n   checks whether the initial flag is required\
    \ for this request,\n   replying with status 0x0007 if it is not set and should\
    \ be.  An\n   authorization failure is cause to respond with status 0x0005.  For\n\
    \   forward compatibility, the server should be prepared to ignore fields\n  \
    \ after targrealm in the structure that it does not understand.\n   The newpasswd\
    \ field contains the cleartext password, and the server\n   will apply any local\
    \ policy checks including password policy checks.\n   The server then generates\
    \ the appropriate keytypes from the password\n   and stores them in the KDC database.\
    \  If all goes well, status 0x0000\n   is returned to the client in the reply\
    \ message (see below).\n   Reply Message\n     0                   1         \
    \          2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         message length        |    protocol version number    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          AP_REP length        |         AP-REP data           /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    /                         KRB-PRIV message                      /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   All 16 bit fields are in big-endian order.\n   message length field: contains\
    \ the number of bytes in the message\n   including this field.\n   protocol version\
    \ number: contains the hex constant 0x0001 (big-endian\n   integer). (The reply\
    \ message has the same format as the original\n   change password protocol.)\n\
    \   AP-REP length: length of AP-REP data, in bytes.  If the length is\n   zero,\
    \ then the last field contains a KRB-ERROR message instead of a\n   KRB-PRIV message.\n\
    \   AP-REP data: the AP-REP is the response to the AP-REQ in the request\n   packet.\n\
    \   KRB-PRIV message: This KRB-PRIV message must be encrypted with the\n   subsession\
    \ key from the authenticator in the AP-REQ data.\n   The server will respond with\
    \ a KRB-PRIV message unless it cannot\n   decode the client AP-REQ or KRB-PRIV\
    \ message, in which case it will\n   respond with a KRB-ERROR message.  NOTE:\
    \ Unlike change password\n   version 1, the KRB-ERROR message will be sent back\
    \ without any\n   encapsulation.\n   The user-data component of the KRB-PRIV message,\
    \ or e-data component\n   of the KRB-ERROR message, consists of the following\
    \ data.\n     0                   1                   2                   3\n\
    \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |          result code          |        result string          /\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   result code (16 bits) (result codes 0-4 are from the original change\n   password\
    \ protocol):\n      The result code must have one of the following values\n  \
    \    (big-endian integer):\n      KRB5_KPASSWD_SUCCESS             0 request succeeds\
    \ (This value\n                                         is not allowed in a KRB-ERROR\n\
    \                                         message)\n      KRB5_KPASSWD_MALFORMED\
    \           1 request fails due to being\n                                   \
    \      malformed\n      KRB5_KPASSWD_HARDERROR           2 request fails due to\
    \ \"hard\"\n                                         error in processing the\n\
    \                                         request (for example, there\n      \
    \                                   is a resource or other\n                 \
    \                        problem causing the request\n                       \
    \                  to fail)\n      KRB5_KPASSWD_AUTHERROR           3 request\
    \ fails due to an error\n                                         in authentication\
    \ processing\n      KRB5_KPASSWD_SOFTERROR           4 request fails due to a\n\
    \                                         \"soft\" error in processing\n     \
    \                                    the request\n      KRB5_KPASSWD_ACCESSDENIED\
    \        5 requestor not authorized\n      KRB5_KPASSWD_BAD_VERSION         6\
    \ protocol version unsupported\n      KRB5_KPASSWD_INITIAL_FLAG_NEEDED 7 initial\
    \ flag required\n      0xFFFF is returned if the request fails for some other\
    \ reason.\n      Although only a few non-zero result codes are specified here,\
    \ the\n      client should accept any non-zero result code as indicating\n   \
    \   failure.\n   result string:\n      This field contains information which might\
    \ be useful to the user,\n      such as feedback about policy failures.  The string\
    \ is encoded in\n      UTF-8.  It may be omitted if the server does not wish to\
    \ include\n      it.  If it is present, the client will display the string to\
    \ the\n      user.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   Password policies should be enforced to make sure\
    \ that users do not\n   pick passwords (for change password) that are vulnerable\
    \ to brute\n   force password guessing attacks.  An administrator who is authorized\n\
    \   to set other principal's passwords is highly trusted and must also\n   carefully\
    \ protect his/her own credentials.\n"
- title: 4.  References
  contents:
  - "4.  References\n   [1]   Kohl, J. and C. Neuman, \"The Kerberos Network Authentication\n\
    \         Service (V5)\", RFC 1510, September 1993.\n"
- title: 5. Authors' Addresses
  contents:
  - "5. Authors' Addresses\n   Mike Swift\n   University of Washington\n   Seattle,\
    \ WA\n   EMail: mikesw@cs.washington.edu\n   Jonathan Trostle\n   Cisco Systems\n\
    \   170 W. Tasman Dr.\n   San Jose, CA 95134\n   EMail: john3725@world.std.com\n\
    \   John Brezak\n   Microsoft\n   1 Microsoft Way\n   Redmond, WA 98052\n   EMail:\
    \ jbrezak@microsoft.com\n"
- title: 6.  Full Copyright Statement
  contents:
  - "6.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
