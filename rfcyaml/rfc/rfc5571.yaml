- contents:
  - "              Softwire Hub and Spoke Deployment Framework\n          with Layer
    Two Tunneling Protocol Version 2 (L2TPv2)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes the framework of the Softwire \"Hub and
    Spoke\"\n   solution with the Layer Two Tunneling Protocol version 2 (L2TPv2).\n
    \  The implementation details specified in this document should be\n   followed
    to achieve interoperability among different vendor\n   implementations.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \     1.1. Abbreviations ..............................................5\n      1.2.
    Requirements Language ......................................5\n      1.3. Considerations
    .............................................6\n   2. Applicability of L2TPv2
    for Softwire Requirements ...............6\n      2.1. Traditional Network Address
    Translation (NAT and NAPT) .....6\n      2.2. Scalability ................................................7\n
    \     2.3. Routing ....................................................7\n      2.4.
    Multicast ..................................................7\n      2.5. Authentication,
    Authorization, and Accounting (AAA) ........7\n      2.6. Privacy, Integrity,
    and Replay Protection ..................7\n      2.7. Operations and Management
    ..................................8\n      2.8. Encapsulations .............................................8\n
    \  3. Deployment Scenarios ............................................8\n      3.1.
    IPv6-over-IPv4 Softwires with L2TPv2 .......................9\n           3.1.1.
    Host CPE as Softwire Initiator ......................9\n           3.1.2. Router
    CPE as Softwire Initiator ...................10\n           3.1.3. Host behind
    CPE as Softwire Initiator ..............11\n           3.1.4. Router behind CPE
    as Softwire Initiator ............12\n      3.2. IPv4-over-IPv6 Softwires with
    L2TPv2 ......................14\n           3.2.1. Host CPE as Softwire Initiator
    .....................14\n           3.2.2. Router CPE as Softwire Initiator ...................15\n
    \          3.2.3. Host behind CPE as Softwire Initiator ..............16\n           3.2.4.
    Router behind CPE as Softwire Initiator ............16\n   4. References to Standardization
    Documents ........................17\n      4.1. L2TPv2 ....................................................18\n
    \     4.2. Securing the Softwire Transport ...........................18\n      4.3.
    Authentication, Authorization, and Accounting .............18\n      4.4. MIB
    .......................................................18\n      4.5. Softwire
    Payload Related ..................................19\n           4.5.1. For IPv6
    Payloads ..................................19\n           4.5.2. For IPv4 Payloads
    ..................................19\n   5. Softwire Establishment .........................................20\n
    \     5.1. L2TPv2 Tunnel Setup .......................................22\n           5.1.1.
    Tunnel Establishment ...............................22\n                  5.1.1.1.
    AVPs Required for Softwires ...............25\n                  5.1.1.2. AVPs
    Optional for Softwires ...............25\n                  5.1.1.3. AVPs Not
    Relevant for Softwires ...........26\n           5.1.2. Tunnel Maintenance .................................26\n
    \          5.1.3. Tunnel Teardown ....................................27\n           5.1.4.
    Additional L2TPv2 Considerations ...................27\n      5.2. PPP Connection
    ............................................27\n           5.2.1. MTU ................................................27\n
    \          5.2.2. LCP ................................................27\n           5.2.3.
    Authentication .....................................28\n           5.2.4. IPCP
    ...............................................28\n                  5.2.4.1.
    IPV6CP ....................................28\n                  5.2.4.2. IPv4CP
    ....................................28\n      5.3. Global IPv6 Address Assignment
    to Endpoints ...............28\n      5.4. DHCP ......................................................29\n
    \          5.4.1. DHCPv6 .............................................29\n           5.4.2.
    DHCPv4 .............................................29\n   6. Considerations about
    the Address Provisioning Model ............30\n      6.1. Softwire Endpoints'
    Addresses .............................30\n           6.1.1. IPv6 ...............................................30\n
    \          6.1.2. IPv4 ...............................................31\n      6.2.
    Delegated Prefixes ........................................31\n           6.2.1.
    IPv6 Prefixes ......................................31\n           6.2.2. IPv4
    Prefixes ......................................31\n      6.3. Possible Address
    Provisioning Scenarios ...................31\n           6.3.1. Scenarios for
    IPv6 .................................32\n           6.3.2. Scenarios for IPv4
    .................................32\n   7. Considerations about Address Stability
    .........................32\n   8. Considerations about RADIUS Integration ........................33\n
    \     8.1. Softwire Endpoints ........................................33\n           8.1.1.
    IPv6 Softwires .....................................33\n           8.1.2. IPv4
    Softwires .....................................33\n      8.2. Delegated Prefixes
    ........................................34\n           8.2.1. IPv6 Prefixes ......................................34\n
    \          8.2.2. IPv4 Prefixes ......................................34\n   9.
    Considerations for Maintenance and Statistics ..................34\n      9.1.
    RADIUS Accounting .........................................35\n      9.2. MIBs
    ......................................................35\n   10. Security Considerations
    .......................................35\n   11. Acknowledgements ..............................................36\n
    \  12. References ....................................................37\n      12.1.
    Normative References .....................................37\n      12.2. Informative
    References ...................................38\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Softwires Working Group has selected Layer Two Tunneling
    Protocol\n   version 2 (L2TPv2) as the phase 1 protocol to be deployed in the\n
    \  Softwire \"Hub and Spoke\" solution space.  This document describes the\n   framework
    for the L2TPv2 \"Hub and Spoke\" solution, and the\n   implementation details
    specified in this document should be followed\n   to achieve interoperability
    among different vendor implementations.\n   In the \"Hub and Spoke\" solution
    space, a Softwire is established to\n   provide the home network with IPv4 connectivity
    across an IPv6-only\n   access network, or IPv6 connectivity across an IPv4-only
    access\n   network.  When L2TPv2 is used in the Softwire context, the voluntary\n
    \  tunneling model applies.  The Softwire Initiator (SI) at the home\n   network
    takes the role of the L2TP Access Concentrator (LAC) client\n   (initiating both
    the L2TP tunnel/session and the PPP link) while the\n   Softwire Concentrator
    (SC) at the ISP takes the role of the L2TP\n   Network Server (LNS).  The terms
    voluntary tunneling and compulsory\n   tunneling are defined in Section 1.1 of
    [RFC3193].  Since the L2TPv2\n   compulsory tunneling model does not apply to
    Softwires, it SHOULD NOT\n   be requested or honored.  This document identifies
    all the voluntary\n   tunneling related L2TPv2 attributes that apply to Softwires
    and\n   specifies the handling mechanism for such attributes in order to\n   avoid
    ambiguities in implementations.  This document also identifies\n   the set of
    L2TPv2 attributes specific to the compulsory tunneling\n   model that does not
    apply to Softwires and specifies the mechanism to\n   ignore or nullify their
    effect within the Softwire context.\n   The SI and SC MUST follow the L2TPv2 operations
    described in\n   [RFC2661] when performing Softwire establishment, teardown, and\n
    \  Operations, Administration, and Management (OAM).  With L2TPv2, a\n   Softwire
    consists of an L2TPv2 Control Connection (also referred to\n   as Control Channel),
    a single L2TPv2 Session, and the PPP link\n   negotiated over the Session.  To
    establish the Softwire, the SI first\n   initiates an L2TPv2 Control Channel to
    the SC, which accepts the\n   request and terminates the Control Channel.  L2TPv2
    supports an\n   optional mutual Control Channel authentication that allows both
    SI\n   and SC to validate each other's identity at the initial phase of\n   hand-shaking
    before proceeding with Control Channel establishment.\n   After the L2TPv2 Control
    Channel is established between the SI and\n   SC, the SI initiates an L2TPv2 Session
    to the SC.  Then the PPP/IP\n   link is negotiated over the L2TPv2 Session between
    the SI and SC.\n   After the PPP/IP link is established, it acts as the Softwire
    between\n   the SI and SC for tunneling IP traffic of one Address Family (AF)\n
    \  across the access network of another Address Family.\n   During the life of
    the Softwire, both SI and SC send L2TPv2 keepalive\n   HELLO messages to monitor
    the health of the Softwire and the peer\n   L2TP Control Connection Endpoint (LCCE),
    and to potentially refresh\n   the NAT/NAPT (Network Address Translation / Network
    Address Port\n   Translation) entry at the CPE or at the other end of the access
    link.\n   Optionally, Link Control Protocol (LCP) ECHO messages can be used as\n
    \  keepalives for the same purposes.  In the event of keepalive timeout\n   or
    administrative shutdown of the Softwire, either the SI or the SC\n   MAY tear
    down the Softwire by tearing down the L2TPv2 Control Channel\n   and Session as
    specified in [RFC2661].\n"
  - contents:
    - "1.1.  Abbreviations\n   AF     Address Family, IPv4 or IPv6.\n   CPE    Customer
      Premises Equipment.\n   LCCE   L2TP Control Connection Endpoint, an L2TP node
      that exists at\n          either end of an L2TP Control Connection.  (See [RFC3931].)\n
      \  LNS    L2TP Network Server, a node that acts as one side of an L2TP\n          tunnel
      (Control Connection) endpoint.  The LNS is the logical\n          termination
      point of a PPP session that is being tunneled from\n          the remote system
      by the peer LCCE.  (See [RFC2661].)\n   SC     Softwire Concentrator, the node
      terminating the Softwire in\n          the service provider network.  (See [RFC4925].)\n
      \  SI     Softwire Initiator, the node initiating the Softwire within\n          the
      customer network.  (See [RFC4925].)\n   SPH    Softwire Payload Header, the
      IP headers being carried within a\n          Softwire.  (See [RFC4925].)\n   STH
      \   Softwire Transport Header, the outermost IP header of a\n          Softwire.
      \ (See [RFC4925].)\n   SW     Softwire, a shared-state \"tunnel\" created between
      the SC and\n          SI.  (See [RFC4925].)\n"
    title: 1.1.  Abbreviations
  - contents:
    - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 1.2.  Requirements Language
  - contents:
    - "1.3.  Considerations\n   Some sections of this document contain considerations
      that are not\n   required for interoperability and correct operation of Softwire\n
      \  implementations.  These sections' titles are marked beginning with\n   \"Considerations\".\n"
    title: 1.3.  Considerations
  title: 1.  Introduction
- contents:
  - "2.  Applicability of L2TPv2 for Softwire Requirements\n   A list of Softwire
    \"Hub and Spoke\" requirements has been identified\n   by the Softwire Problem
    Statement [RFC4925].  The following sub-\n   sections describe how L2TPv2 fulfills
    each of them.\n"
  - contents:
    - "2.1.  Traditional Network Address Translation (NAT and NAPT)\n   A \"Hub and
      Spoke\" Softwire must be able to traverse Network Address\n   Translation (NAT)
      and Network Address Port Translation (NAPT, also\n   referred to as Port Address
      Translation or PAT) devices [RFC3022] in\n   case the scenario in question involves
      a non-upgradable, preexisting\n   IPv4 home gateway performing NAT/NAPT or some
      carrier equipment at\n   the other end of the access link performing NAT/NAPT.
      \ The L2TPv2\n   Softwire (i.e., Control Channel and Session) is capable of
      NAT/NAPT\n   traversal since L2TPv2 can run over UDP.\n   Since L2TPv2 does
      not detect NAT/NAPT along the path, L2TPv2 does not\n   offer the option of
      disabling UDP.  The UDP encapsulation is present\n   regardless of NAT/NAPT
      presence.  Both NAT/NAPT \"autodetect\" and UDP\n   \"bypass\" are optional
      requirements in Section 2.3 of [RFC4925].\n   As mentioned in Section 8.1 of
      [RFC2661] and Section 4 of [RFC3193],\n   an L2TP Start-Control-Connection-Reply
      (SCCRP) responder (SC) can\n   chose a different IP address and/or UDP port
      than those from the\n   initiator's Start-Control-Connection-Request (SCCRQ)
      (SI).  This may\n   or may not traverse a NAT/NAPT depending on the NAT/NAPT's
      Filtering\n   Behavior (see Section 5 of [RFC4787]).  Specifically, any IP address\n
      \  and port combination will work with Endpoint-Independent Filtering,\n   but
      changing the IP address and port will not work through Address-\n   Dependent
      or Address-and-Port-Dependent Filtering.  Given this,\n   responding from a
      different IP address and/or UDP port is NOT\n   RECOMMENDED.\n"
    title: 2.1.  Traditional Network Address Translation (NAT and NAPT)
  - contents:
    - "2.2.  Scalability\n   In the \"Hub and Spoke\" model, a carrier must be able
      to scale the\n   solution to millions of Softwire Initiators by adding more
      hubs\n   (i.e., Softwire Concentrators).  L2TPv2 is a widely deployed protocol\n
      \  in broadband services, and its scalability has been proven in\n   multiple
      large-scale IPv4 Virtual Private Network deployments, which\n   scale up to
      millions of subscribers each.\n"
    title: 2.2.  Scalability
  - contents:
    - "2.3.  Routing\n   There are no dynamic routing protocols between the SC and
      SI.  A\n   default route from the SI to the SC is used.\n"
    title: 2.3.  Routing
  - contents:
    - "2.4.  Multicast\n   Multicast protocols simply run transparently over L2TPv2
      Softwires\n   together with other regular IP traffic.\n"
    title: 2.4.  Multicast
  - contents:
    - "2.5.  Authentication, Authorization, and Accounting (AAA)\n   L2TPv2 supports
      optional mutual Control Channel authentication and\n   leverages the optional
      mutual PPP per-session authentication.  L2TPv2\n   is well integrated with AAA
      solutions (such as RADIUS) for both\n   authentication and authorization.  Most
      L2TPv2 implementations\n   available in the market support the logging of authentication
      and\n   authorization events.\n   L2TPv2 integration with RADIUS accounting
      (RADIUS Accounting\n   extension for tunnel [RFC2867]) allows the collection
      and reporting\n   of L2TPv2 Softwire usage statistics.\n"
    title: 2.5.  Authentication, Authorization, and Accounting (AAA)
  - contents:
    - "2.6.  Privacy, Integrity, and Replay Protection\n   Since L2TPv2 runs over
      IP/UDP in the Softwire context, IPsec\n   Encapsulating Security Payload (ESP)
      can be used in conjunction to\n   provide per-packet authentication, integrity,
      replay protection, and\n   confidentiality for both L2TPv2 control and data
      traffic [RFC3193]\n   and [RFC3948].\n   For Softwire deployments in which full
      payload security is not\n   required, the L2TPv2 built-in Control Channel authentication
      and the\n   inherited PPP authentication and PPP Encryption Control Protocol
      can\n   be considered.\n"
    title: 2.6.  Privacy, Integrity, and Replay Protection
  - contents:
    - "2.7.  Operations and Management\n   L2TPv2 supports an optional in-band keepalive
      mechanism that injects\n   HELLO control messages after a specified period of
      time has elapsed\n   since the last data or control message was received on
      a tunnel (see\n   Section 5.5 of [RFC2661]).  If the HELLO control message is
      not\n   reliably delivered, then the Control Channel and its Session will be\n
      \  torn down.  In the Softwire context, the L2TPv2 keepalive is used to\n   monitor
      the connectivity status between the SI and SC and/or as a\n   refresh mechanism
      for any NAT/NAPT translation entry along the access\n   link.\n   LCP ECHO offers
      a similar mechanism to monitor the connectivity\n   status, as described in
      [RFC1661].  Softwire implementations SHOULD\n   use L2TPv2 Hello keepalives,
      and in addition MAY use PPP LCP Echo\n   messages to ensure Dead End Detection
      and/or to refresh NAT/NAPT\n   translation entries.  The combination of these
      two mechanisms can be\n   used as an optimization.\n   The L2TPv2 MIB [RFC3371]
      supports the complete suite of management\n   operations such as configuration
      of Control Channel and Session,\n   polling of Control Channel and Session status
      and their traffic\n   statistics and notifications of Control Channel and Session
      UP/DOWN\n   events.\n"
    title: 2.7.  Operations and Management
  - contents:
    - "2.8.  Encapsulations\n   L2TPv2 supports the following encapsulations:\n   o
      \ IPv6/PPP/L2TPv2/UDP/IPv4\n   o  IPv4/PPP/L2TPv2/UDP/IPv6\n   o  IPv4/PPP/L2TPv2/UDP/IPv4\n
      \  o  IPv6/PPP/L2TPv2/UDP/IPv6\n   Note that UDP bypass is not supported by
      L2TPv2 since L2TPv2 does not\n   support \"autodetect\" of NAT/NAPT.\n"
    title: 2.8.  Encapsulations
  title: 2.  Applicability of L2TPv2 for Softwire Requirements
- contents:
  - "3.  Deployment Scenarios\n   For the \"Hub and Spoke\" problem space, four scenarios
    have been\n   identified.  In each of these four scenarios, different home\n   equipment
    plays the role of the Softwire Initiator.  This section\n   elaborates each scenario
    with L2TPv2 as the Softwire protocol and\n   other possible protocols involved
    to complete the solution.  This\n   section examines the four scenarios for both
    IPv6-over-IPv4\n   (Section 3.1) and IPv4-over-IPv6 (Section 3.2) encapsulations.\n"
  - contents:
    - "3.1.  IPv6-over-IPv4 Softwires with L2TPv2\n   The following sub-sections cover
      IPv6 connectivity (SPH) across an\n   IPv4-only access network (STH) using a
      Softwire.\n"
    - contents:
      - "3.1.1.  Host CPE as Softwire Initiator\n   The Softwire Initiator (SI) is
        the host CPE (directly connected to a\n   modem), which is dual-stack.  There
        is no other gateway device.  The\n   IPv4 traffic SHOULD NOT traverse the
        Softwire.  See Figure 1.\n             IPv6 or dual-stack      IPv4-only      dual-stack\n
        \           |------------------||-----------------||----------|\n      I                    SC
        \                         SI\n      N                  +-----+                   +----------+\n
        \     T                  |     |                   |  v4/v6   |\n      E  <==[
        IPv6  ]....|v4/v6|....[IPv4-only]....| host CPE |\n      R     [network]    |
        \    |    [ network ]    |          |\n      N                  | LNS |                   |LAC
        Client|\n      E                  +-----+                   +----------+\n
        \     T                          _ _ _ _ _ _ _ _ _\n                               ()_
        _ _ _ _ _ _ _ _() <-- IPv6 traffic\n                             PPP o L2TPv2
        o UDP o IPv4          (SPH)\n                                      Softwire\n
        \                              <------------------>\n                    IPV6CP:
        capable of /64 Intf-Id assignment or\n                                 uniqueness
        check\n                               |------------------>/64 prefix\n                                        RA\n
        \                              |------------------>DNS, etc.\n                                      DHCPv6\n
        \                Figure 1: Host CPE as Softwire Initiator\n   In this scenario,
        after the L2TPv2 Control Channel and Session\n   establishment and PPP LCP
        negotiation (and optionally PPP\n   Authentication) are successful, the IPv6
        Control Protocol (IPV6CP)\n   negotiates IPv6-over-PPP, which also provides
        the capability for the\n   ISP to assign the 64-bit Interface-Identifier to
        the host CPE or\n   perform uniqueness validation for the two interface identifiers
        at\n   the two PPP ends [RFC5072].  After IPv6-over-PPP is up, IPv6\n   Stateless
        Address Autoconfiguration / Neighbor Discovery runs over\n   the IPv6-over-PPP
        link, and the LNS can inform the host CPE of a\n   prefix to use for stateless
        address autoconfiguration through a\n   Router Advertisement (RA) while other
        non-address configuration\n   options (such as DNS [RFC3646] or other servers'
        addresses that might\n   be available) can be conveyed to the host CPE via
        DHCPv6.\n"
      title: 3.1.1.  Host CPE as Softwire Initiator
    - contents:
      - "3.1.2.  Router CPE as Softwire Initiator\n   The Softwire Initiator (SI)
        is the router CPE, which is a dual-stack\n   device.  The IPv4 traffic SHOULD
        NOT traverse the Softwire.  See\n   Figure 2.\n          IPv6 or dual-stack
        \     IPv4-only           dual-stack\n         |------------------||-----------------||---------------------|\n
        \  I                    SC                          SI\n   N                  +-----+
        \                  +----------+\n   T                  |     |                   |
        \ v4/v6   |    +-----+\n   E  <==[ IPv6  ]....|v4/v6|....[IPv4-only]....|
        \  CPE    |----|v4/v6|\n   R     [network]    |     |    [ network ]    |
        \         |    | host|\n   N                  | LNS |                   |LAC
        Client|    +-----+\n   E                  +-----+                   +----------+\n
        \  T                          _ _ _ _ _ _ _ _ _\n                            ()_
        _ _ _ _ _ _ _ _() <-------- IPv6 traffic\n                          PPP o
        L2TPv2 o UDP o IPv4                (SPH)\n                                   Softwire\n
        \                           <------------------>\n                    IPV6CP:
        capable of /64 Intf-Id assignment or\n                                uniqueness
        check\n                            |------------------>/64 prefix\n                                     RA\n
        \                           |------------------>/48 prefix,\n                                   DHCPv6
        \      DNS, etc.\n                                                     |------->/64
        prefix\n                                                         RA\n                                                     |------->
        DNS, etc.\n                                                     DHCPv4/v6\n
        \               Figure 2: Router CPE as Softwire Initiator\n   In this scenario,
        after the L2TPv2 Control Channel and Session\n   establishment and PPP LCP
        negotiation (and optionally PPP\n   Authentication) are successful, IPV6CP
        negotiates IPv6-over-PPP,\n   which also provides the capability for the ISP
        to assign the 64-bit\n   Interface-Identifier to the router CPE or perform
        uniqueness\n   validation for the two interface identifiers at the two PPP
        ends\n   [RFC5072].  After IPv6-over-PPP is up, IPv6 Stateless Address\n   Autoconfiguration
        / Neighbor Discovery runs over the IPv6-over-PPP\n   link, and the LNS can
        inform the router CPE of a prefix to use for\n   stateless address autoconfiguration
        through a Router Advertisement\n   (RA).  DHCPv6 can be used to perform IPv6
        Prefix Delegation (e.g.,\n   delegating a prefix to be used within the home
        network [RFC3633]) and\n   convey other non-address configuration options
        (such as DNS\n   [RFC3646]) to the router CPE.\n"
      title: 3.1.2.  Router CPE as Softwire Initiator
    - contents:
      - "3.1.3.  Host behind CPE as Softwire Initiator\n   The CPE is IPv4-only.  The
        Softwire Initiator (SI) is a dual-stack\n   host (behind the IPv4-only CPE),
        which acts as an IPv6 host CPE.  The\n   IPv4 traffic SHOULD NOT traverse
        the Softwire.  See Figure 3.\n          IPv6 or dual-stack            IPv4-only
        \          dual-stack\n         |------------------||----------------------------||----------|\n
        \   I                   SC                                    SI\n    N                 +-----+
        \                             +----------+\n    T                 |     |
        \                  +-------+  |   v4/v6  |\n    E <==[ IPv6  ]....|v4/v6|....[IPv4-only]....|v4-only|--|
        \  host   |\n    R    [network]    |     |    [ network ]    |  CPE  |  |
        \         |\n    N                 | LNS |                   +-------+  |LAC
        Client|\n    E                 +-----+                              +----------+\n
        \   T                         _ _ _ _ _ _ _ _ _ _ _ _ _ _\n                            ()_
        _ _ _ _ _ _ _ _ _ _ _ _ _() <--  IPv6\n                               PPP
        o L2TPv2 o UDP o IPv4        traffic\n                                        Softwire
        \                (SPH)\n                            <------------------------------>\n
        \                    IPV6CP: capable of /64 Intf-Id assignment or\n                                   uniqueness
        check\n                            |------------------------------>/64 prefix\n
        \                                          RA\n                            |------------------------------>DNS,
        etc.\n                                         DHCPv6\n              Figure
        3: Host behind CPE as Softwire Initiator\n   In this scenario, after the L2TPv2
        Control Channel and Session\n   establishment and PPP LCP negotiation (and
        optionally PPP\n   Authentication) are successful, IPV6CP negotiates IPv6-over-PPP,\n
        \  which also provides the capability for the ISP to assign the 64-bit\n   Interface-Identifier
        to the host or perform uniqueness validation for\n   the two interface identifiers
        at the two PPP ends [RFC5072].  After\n   IPv6-over-PPP is up, IPv6 Stateless
        Address Autoconfiguration /\n   Neighbor Discovery runs over the IPv6-over-PPP
        link, and the LNS can\n   inform the host of a prefix to use for stateless
        address\n   autoconfiguration through a Router Advertisement (RA) while other\n
        \  non-address configuration options (such as DNS [RFC3646]) can be\n   conveyed
        to the host via DHCPv6.\n"
      title: 3.1.3.  Host behind CPE as Softwire Initiator
    - contents:
      - "3.1.4.  Router behind CPE as Softwire Initiator\n   The CPE is IPv4-only.
        \ The Softwire Initiator (SI) is a dual-stack\n   device (behind the IPv4-only
        CPE) acting as an IPv6 CPE router inside\n   the home network.  The IPv4 traffic
        SHOULD NOT traverse the Softwire.\n   See Figure 4.\n         IPv6 or dual-stack
        \          IPv4-only          dual-stack\n        |------------------||-------------------------||-------------|\n
        \  I                   SC                                 SI\n   N                 +-----+
        \                          +----------+\n   T                 |     |               +-------+
        \  |  v4/v6   |\n   E <==[ IPv6  ]....|v4/v6|..[IPv4-only]..|v4-only|---|
        \ router  |\n   R    [network]    |     |  [ network ]  |  CPE  | | |          |\n
        \  N                 | LNS |               +-------+ | |LAC Client|\n   E
        \                +-----+                         | +----------+\n   T                                                 |\n
        \                                                    ---------+-----+\n                                                              |v4/v6|\n
        \                                                             | host|\n                             _
        _ _ _ _ _ _ _ _ _ _ _ _        +-----+\n                           ()_ _ _
        _ _ _ _ _ _ _ _ _ _() <--  IPv6\n                              PPP o L2TPv2
        o UDP o IPv4      traffic\n                                       Softwire
        \              (SPH)\n                           <--------------------------->\n
        \                 IPV6CP: capable of /64 Intf-Id assignment or\n                                 uniqueness
        check\n                           |--------------------------->/64 prefix\n
        \                                        RA\n                           |--------------------------->/48
        prefix,\n                                       DHCPv6           DNS, etc.\n
        \                                                          |----> /64\n                                                             RA
        \  prefix\n                                                           |---->
        DNS,\n                                                           DHCPv6 etc.\n
        \            Figure 4: Router behind CPE as Softwire Initiator\n   In this
        scenario, after the L2TPv2 Control Channel and Session\n   establishment and
        PPP LCP negotiation (and optionally PPP\n   Authentication) are successful,
        IPV6CP negotiates IPv6-over-PPP,\n   which also provides the capability for
        the ISP to assign the 64-bit\n   Interface-Identifier to the v4/v6 router
        or perform uniqueness\n   validation for the two interface identifiers at
        the two PPP ends\n   [RFC5072].  After IPv6-over-PPP is up, IPv6 Stateless
        Address\n   Autoconfiguration / Neighbor Discovery runs over the IPv6-over-PPP\n
        \  link, and the LNS can inform the v4/v6 router of a prefix to use for\n
        \  stateless address autoconfiguration through a Router Advertisement\n   (RA).
        \ DHCPv6 can be used to perform IPv6 Prefix Delegation (e.g.,\n   delegating
        a prefix to be used within the home network [RFC3633]) and\n   convey other
        non-address configuration options (such as DNS\n   [RFC3646]) to the v4/v6
        router.\n"
      title: 3.1.4.  Router behind CPE as Softwire Initiator
    title: 3.1.  IPv6-over-IPv4 Softwires with L2TPv2
  - contents:
    - "3.2.  IPv4-over-IPv6 Softwires with L2TPv2\n   The following sub-sections cover
      IPv4 connectivity (SPH) across an\n   IPv6-only access network (STH) using a
      Softwire.\n"
    - contents:
      - "3.2.1.  Host CPE as Softwire Initiator\n   The Softwire Initiator (SI) is
        the host CPE (directly connected to a\n   modem), which is dual-stack.  There
        is no other gateway device.  The\n   IPv6 traffic SHOULD NOT traverse the
        Softwire.  See Figure 5.\n             IPv4 or dual-stack      IPv6-only      dual-stack\n
        \           |------------------||-----------------||----------|\n       I
        \                  SC                          SI\n       N                 +-----+
        \                  +----------+\n       T                 |     |                   |
        \ v4/v6   |\n       E <==[ IPv4  ]....|v4/v6|....[IPv6-only]....| host CPE
        |\n       R    [network]    |     |    [ network ]    |          |\n       N
        \                | LNS |                   |LAC Client|\n       E                 +-----+
        \                  +----------+\n       T                         _ _ _ _
        _ _ _ _ _\n                               ()_ _ _ _ _ _ _ _ _() <-- IPv4 traffic\n
        \                            PPP o L2TPv2 o UDP o IPv6          (SPH)\n                                      Softwire\n
        \                              <------------------>\n                       IPCP:
        capable of global IP assignment\n                                    and DNS,
        etc.\n                 Figure 5: Host CPE as Softwire Initiator\n   In this
        scenario, after the L2TPv2 Control Channel and Session\n   establishment and
        PPP LCP negotiation (and optionally PPP\n   Authentication) are successful,
        the IP Control Protocol (IPCP)\n   negotiates IPv4-over-PPP, which also provides
        the capability for the\n   ISP to assign a global IPv4 address to the host
        CPE.  A global IPv4\n   address can also be assigned via DHCP.  Other configuration
        options\n   (such as DNS) can be conveyed to the host CPE via IPCP [RFC1877]
        or\n   DHCP [RFC2132].\n"
      title: 3.2.1.  Host CPE as Softwire Initiator
    - contents:
      - "3.2.2.  Router CPE as Softwire Initiator\n   The Softwire Initiator (SI)
        is the router CPE, which is a dual-stack\n   device.  The IPv6 traffic SHOULD
        NOT traverse the Softwire.  See\n   Figure 6.\n         IPv4 or dual-stack
        \     IPv6-only        dual-stack Home\n        |------------------||-----------------||-------------------|\n
        \  I                   SC                          SI\n   N                 +-----+
        \                  +----------+\n   T                 |     |                   |
        \ v4/v6   |  +-----+\n   E <==[ IPv4  ]....|v4/v6|....[IPv6-only]....|   CPE
        \   |--|v4/v6|\n   R    [network]    |     |    [ network ]    |          |
        \ | host|\n   N                 | LNS |                   |LAC Client|  +-----+\n
        \  E                 +-----+                   +----------+\n   T                         _
        _ _ _ _ _ _ _ _\n                           ()_ _ _ _ _ _ _ _ _() <---------
        IPv4 traffic\n                         PPP o L2TPv2 o UDP o IPv6                 (SPH)\n
        \                                 Softwire\n                           <------------------>\n
        \                  IPCP: capable of global IP assignment\n                               and
        DNS, etc.\n                           |------------------>\n                         DHCPv4:
        prefix, mask, PD\n                                                             private/\n
        \                                                   |------> global\n                                                      DHCP
        \  IP, DNS,\n                                                             etc.\n
        \               Figure 6: Router CPE as Softwire Initiator\n   In this scenario,
        after the L2TPv2 Control Channel and Session\n   establishment and PPP LCP
        negotiation (and optionally PPP\n   Authentication) are successful, IPCP negotiates
        IPv4-over-PPP, which\n   also provides the capability for the ISP to assign
        a global IPv4\n   address to the router CPE.  A global IPv4 address can also
        be\n   assigned via DHCP.  Other configuration options (such as DNS) can be\n
        \  conveyed to the router CPE via IPCP [RFC1877] or DHCP [RFC2132].  For\n
        \  IPv4 Prefix Delegation for the home network, DHCP [SUBNET-ALL] can be\n
        \  used.\n"
      title: 3.2.2.  Router CPE as Softwire Initiator
    - contents:
      - "3.2.3.  Host behind CPE as Softwire Initiator\n   The CPE is IPv6-only.  The
        Softwire Initiator (SI) is a dual-stack\n   host (behind the IPv6 CPE), which
        acts as an IPv4 host CPE.  The IPv6\n   traffic SHOULD NOT traverse the Softwire.
        \ See Figure 7.\n          IPv4 or dual-stack            IPv6-only           dual-stack\n
        \        |------------------||----------------------------||----------|\n
        \   I                   SC                                      SI\n    N
        \                +-----+                              +----------+\n    T
        \                |     |                   +-------+  |   v4/v6  |\n    E
        <==[ IPv4  ]....|v4/v6|....[IPv6-only]....|v6-only|--|   host   |\n    R    [network]
        \   |     |    [ network ]    |  CPE  |  |          |\n    N                 |
        LNS |                   +-------+  |LAC Client|\n    E                 +-----+
        \                             +----------+\n    T                         _
        _ _ _ _ _ _ _ _ _ _ _ _ _\n                            ()_ _ _ _ _ _ _ _ _
        _ _ _ _ _() <--  IPv4\n                               PPP o L2TPv2 o UDP o
        IPv6        traffic\n                                        Softwire                 (SPH)\n
        \                           <------------------------------>\n                        IPCP:
        capable of global IP assignment\n                                    and DNS,
        etc.\n              Figure 7: Host behind CPE as Softwire Initiator\n   In
        this scenario, after the L2TPv2 Control Channel and Session\n   establishment
        and PPP LCP negotiation (and optionally PPP\n   Authentication) are successful,
        IPCP negotiates IPv4-over-PPP, which\n   also provides the capability for
        the ISP to assign a global IPv4\n   address to the host.  A global IPv4 address
        can also be assigned via\n   DHCP.  Other configuration options (such as DNS)
        can be conveyed to\n   the host CPE via IPCP [RFC1877] or DHCP [RFC2132].\n"
      title: 3.2.3.  Host behind CPE as Softwire Initiator
    - contents:
      - "3.2.4.  Router behind CPE as Softwire Initiator\n   The CPE is IPv6-only.
        \ The Softwire Initiator (SI) is a dual-stack\n   device (behind the IPv6-only
        CPE) acting as an IPv4 CPE router inside\n   the home network.  The IPv6 traffic
        SHOULD NOT traverse the Softwire.\n   See Figure 8.\n         IPv4 or dual-stack
        \         IPv6-only           dual-stack\n        |------------------||-------------------------||------------|\n
        \  I                   SC                                 SI\n   N                 +-----+
        \                          +----------+\n   T                 |     |               +-------+
        \  |  v4/v6   |\n   E <==[ IPv4  ]....|v4/v6|..[IPv6-only]..|v6-only|---|
        \ router  |\n   R    [network]    |     |  [ network ]  |  CPE  | | |          |\n
        \  N                 | LNS |               +-------+ | |LAC Client|\n   E
        \                +-----+                         | +----------+\n   T                                                 |\n
        \                                                    --------+-----+\n                                                             |v4/v6|\n
        \                                                            | host|\n                             _
        _ _ _ _ _ _ _ _ _ _ _ _       +-----+\n                           ()_ _ _
        _ _ _ _ _ _ _ _ _ _() <---  IPv4\n                             PPP o L2TPv2
        o UDP o IPv4        traffic\n                                      Softwire
        \                (SPH)\n                           <--------------------------->\n
        \                  IPCP: assigns global IP address and DNS, etc.\n                           |--------------------------->\n
        \                             DHCPv4: prefix, mask, PD\n                                                                private/\n
        \                                                        |----> global\n                                                          DHCP
        \ IP, DNS,\n                                                                etc.\n
        \            Figure 8: Router behind CPE as Softwire Initiator\n   In this
        scenario, after the L2TPv2 Control Channel and Session\n   establishment and
        PPP LCP negotiation (and optionally PPP\n   Authentication) are successful,
        IPCP negotiates IPv4-over-PPP, which\n   also provides the capability for
        the ISP to assign a global IPv4\n   address to the v4/v6 router.  A global
        IPv4 address can also be\n   assigned via DHCP.  Other configuration options
        (such as DNS) can be\n   conveyed to the v4/v6 router via IPCP [RFC1877] or
        DHCP [RFC2132].\n   For IPv4 Prefix Delegation for the home network, DHCP
        [SUBNET-ALL]\n   can be used.\n"
      title: 3.2.4.  Router behind CPE as Softwire Initiator
    title: 3.2.  IPv4-over-IPv6 Softwires with L2TPv2
  title: 3.  Deployment Scenarios
- contents:
  - "4.  References to Standardization Documents\n   This section lists and groups
    documents from the Internet\n   standardization describing technologies used to
    design the framework\n   of the Softwire \"Hub and Spoke\" solution.  This emphasizes
    the\n   motivation of Softwire to reuse as many existing standards as\n   possible.
    \ This list contains both Standards Track (Proposed\n   Standard, Draft Standard,
    and Standard) and Informational documents.\n   The list of documents and their
    status should only be only used for\n   description purposes.\n"
  - contents:
    - "4.1.  L2TPv2\n   RFC 2661   \"Layer Two Tunneling Protocol 'L2TP'\" [RFC2661].\n
      \             *  For both IPv4 and IPv6 payloads (SPH), support is\n                 complete.\n
      \             *  For both IPv4 and IPv6 transports (STH), support is\n                 complete.\n"
    title: 4.1.  L2TPv2
  - contents:
    - "4.2.  Securing the Softwire Transport\n   RFC 3193   \"Securing L2TP using
      IPsec\" [RFC3193].\n   RFC 3948   \"UDP Encapsulation of IPsec ESP Packets\"
      [RFC3948].\n              *  IPsec supports both IPv4 and IPv6 transports.\n"
    title: 4.2.  Securing the Softwire Transport
  - contents:
    - "4.3.  Authentication, Authorization, and Accounting\n   RFC 2865   \"Remote
      Authentication Dial In User Service (RADIUS)\"\n              [RFC2865].\n              *
      \ Updated by [RFC2868], [RFC3575], and [RFC5080].\n   RFC 2867   \"RADIUS Accounting
      Modifications for Tunnel Protocol\n              Support\" [RFC2867].\n   RFC
      2868   \"RADIUS Attributes for Tunnel Protocol Support\" [RFC2868].\n   RFC
      3162   \"RADIUS and IPv6\" [RFC3162].\n"
    title: 4.3.  Authentication, Authorization, and Accounting
  - contents:
    - "4.4.  MIB\n   RFC 1471   \"The Definitions of Managed Objects for the Link
      Control\n              Protocol of the Point-to-Point Protocol\" [RFC1471].\n
      \  RFC 1473   \"The Definitions of Managed Objects for the IP Network\n              Control
      Protocol of the Point-to-Point Protocol\"\n              [RFC1473].\n   RFC
      3371   \"Layer Two Tunneling Protocol \"L2TP\" Management\n              Information
      Base\" [RFC3371].\n   RFC 4087   \"IP Tunnel MIB\" [RFC4087].\n              *
      \ Both IPv4 and IPv6 transports are supported.\n"
    title: 4.4.  MIB
  - contents:
    - '4.5.  Softwire Payload Related

      '
    - contents:
      - "4.5.1.  For IPv6 Payloads\n   RFC 4861   \"Neighbor Discovery for IP version
        6 (IPv6)\" [RFC4861].\n   RFC 4862   \"IPv6 Stateless Address Autoconfiguration\"
        [RFC4862].\n   RFC 5072   \"IP Version 6 over PPP\" [RFC5072].\n   RFC 3315
        \  \"Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\"\n              [RFC3315].\n
        \  RFC 3633   \"IPv6 Prefix Options for Dynamic Host Configuration\n              Protocol
        (DHCP) version 6\" [RFC3633].\n   RFC 3646   \"DNS Configuration options for
        Dynamic Host Configuration\n              Protocol for IPv6 (DHCPv6)\" [RFC3646].\n
        \  RFC 3736   \"Stateless Dynamic Host Configuration Protocol (DHCP)\n              Service
        for IPv6\" [RFC3736].\n"
      title: 4.5.1.  For IPv6 Payloads
    - contents:
      - "4.5.2.  For IPv4 Payloads\n   RFC 1332   \"The PPP Internet Protocol Control
        Protocol (IPCP)\"\n              [RFC1332].\n   RFC 1661   \"The Point-to-Point
        Protocol (PPP)\" [RFC1661].\n   RFC 1877   \"PPP Internet Protocol Control
        Protocol Extensions for\n              Name Server Addresses\" [RFC1877].\n
        \  RFC 2131   \"Dynamic Host Configuration Protocol\" [RFC2131].\n   RFC 2132
        \  \"DHCP Options and BOOTP Vendor Extensions\" [RFC2132].\n   DHCP Subnet
        Allocation  \"Subnet Allocation Option\".\n              *  Work in progress,
        see [SUBNET-ALL].\n"
      title: 4.5.2.  For IPv4 Payloads
    title: 4.5.  Softwire Payload Related
  title: 4.  References to Standardization Documents
- contents:
  - "5.  Softwire Establishment\n   A Softwire is established in three distinct steps,
    potentially\n   preceded by an optional IPsec-related step 0 (see Figure 9).  First,\n
    \  an L2TPv2 tunnel with a single session is established from the SI to\n   the
    SC.  Second, a PPP session is established over the L2TPv2 session\n   and the
    SI obtains an address.  Third, the SI optionally gets other\n   information through
    DHCP such as a delegated prefix and DNS servers.\n      SC                                 SI\n
    \      |                                 |\n       |<-------------IKEv1------------->|
    Step 0\n       |                                 | IPsec SA establishment\n       |
    \                                | (optional)\n       |                                 |\n
    \      |<-------------L2TPv2------------>| Step 1\n       |                                 |
    L2TPv2 Tunnel establishment\n       |                                 |\n       |<--------------PPP-------------->|
    Step 2\n       |<-----Endpoint Configuration---->| PPP and Endpoint\n       |
    \                                | configuration\n       |                                 |\n
    \      |<------Router Configuration----->| Step 3\n       |                                 |
    Additional configuration\n       |                                 | (optional)\n
    \           Figure 9: Steps for the Establishment of a Softwire\n   Figure 10
    depicts details of each of these steps required to\n   establish a Softwire.\n
    \        SC                                 SI\n          |                                 |\n
    \         |                                 | Step 0\n          |<------------IKEv1-------------->|
    = IKEv1 (Optional)\n          |                                 |\n          |
    \                                | Step 1\n          |<------------SCCRQ---------------|
    -\n          |-------------SCCRP-------------->| |\n          |<------------SCCCN---------------|
    |\n          |<------------ICRQ----------------| | L2TPv2\n          |-------------ICRP--------------->|
    |\n          |<------------ICCN----------------| -\n          |                                 |\n
    \         |                                 | Step 2\n          |<-----Configuration-Request------|
    -\n          |------Configuration-Request----->| | PPP\n          |--------Configuration-Ack------->|
    | LCP\n          |<-------Configuration-Ack--------| -\n          |                                 |\n
    \         |-----------Challenge------------>| - PPP Authentication\n          |<----------Response--------------|
    | (Optional - CHAP)\n          |------------Success------------->| -\n          |
    \                                |\n          |<-----Configuration-Request------|
    -\n          |------Configuration-Request----->| | PPP NCP\n          |--------Configuration-Ack------->|
    | (IPV6CP or IPCP)\n          |<-------Configuration-Ack--------| -\n          |
    \                                |\n          |<------Router-Solicitation-------|
    - Neighbor Discovery\n          |-------Router-Advertisement----->| | (IPv6 only)\n
    \         |                                 | -\n          |                                 |\n
    \         |                                 | Step3\n          |                                 |
    DHCP (Optional)\n          |<-----------SOLICIT--------------| -\n          |-----------ADVERTISE------------>|
    | DHCPv6\n          |<---------- REQUEST--------------| | (IPv6 SW, Optional)\n
    \         |-------------REPLY-------------->| -\n          |                                 |
    or\n          |<---------DHCPDISCOVER-----------| -\n          |-----------DHCPOFFER------------>|
    | DHCPv4\n          |<---------DHCPREQUEST------------| | (IPv4 SW, Optional)\n
    \         |------------DHCPACK------------->| -\n       Figure 10: Detailed Steps
    in the Establishment of a Softwire\n   The IPsec-related negotiations in step
    0 are optional.  The L2TPv2\n   negotiations in step 1 are described in Section
    5.1.  The PPP Network\n   Control Protocol (NCP) negotiations in step 2 use IPV6CP
    for IPv6-\n   over-IPv4 Softwires, and IPCP for IPv4-over-IPv6 Softwires (see\n
    \  Section 5.2.4).  The optional DHCP negotiations in step 3 use DHCPv6\n   for
    IPv6-over-IPv4 Softwires, and DHCPv4 for IPv4-over-IPv6 Softwires\n   (see Section
    5.4).  Additionally, for IPv6-over-IPv4 Softwires, the\n   DHCPv6 exchange for
    non-address configuration (such as DNS) can use\n   Stateless DHCPv6, the two-message
    exchange with Information-Request\n   and Reply messages (see Section 1.2 of [RFC3315]
    and [RFC3736]).\n"
  - contents:
    - "5.1.  L2TPv2 Tunnel Setup\n   L2TPv2 [RFC2661] was originally designed to provide
      private network\n   access to end users connected to a public network.  In the
      L2TPv2\n   incoming call model, the end user makes a connection to an L2TP\n
      \  Access Concentrator (LAC).  The LAC then initiates an L2TPv2 tunnel\n   to
      an L2TP Network Server (LNS).  The LNS then transfers end-user\n   traffic between
      the L2TPv2 tunnel and the private network.\n   In the Softwire \"Hub and Spoke\"
      model, the Softwire Initiator (SI)\n   assumes the role of the LAC Client and
      the Softwire Concentrator (SC)\n   assumes the role of the LNS.\n   In the Softwire
      model, an L2TPv2 packet MUST be carried over UDP.\n   The underlying version
      of the IP protocol may be IPv4 or IPv6,\n   depending on the Softwire scenario.\n
      \  In the following sections, the term \"Tunnel\" follows the definition\n   from
      Section 1.2 of [RFC2661], namely: \"The Tunnel consists of a\n   Control Connection
      and zero or more L2TP Sessions\".\n"
    - contents:
      - "5.1.1.  Tunnel Establishment\n   Figure 11 describes the messages exchanged
        and Attribute Value Pairs\n   (AVPs) used to establish a tunnel between an
        SI (LAC) and an SC\n   (LNS).  The messages and AVPs described here are only
        a subset of\n   those defined in [RFC2661].  This is because Softwires use
        only a\n   subset of the L2TPv2 functionality.  The subset of L2TP Control\n
        \  Connection Management AVPs that is applicable to Softwires is grouped\n
        \  into Required AVPs and Optional AVPs on a per-control-message basis\n   (see
        Figure 11).  For each control message, Required AVPs include all\n   the \"MUST
        be present\" AVPs from [RFC2661] for that control message,\n   and Optional
        AVPs include the \"MAY be present\" AVPs from [RFC2661]\n   that are used
        in the Softwire context on that control message.  Note\n   that in the Softwire
        environment, the SI always initiates the tunnel.\n   L2TPv2 AVPs SHOULD NOT
        be hidden.\n                        SC                       SI\n                         |<--------SCCRQ---------|\n
        \                         Required AVPs:\n                             Message
        Type\n                             Protocol Version\n                             Host
        Name\n                             Framing Capabilities\n                             Assigned
        Tunnel ID\n                          Optional AVPs:\n                             Receive
        Window Size\n                             Challenge\n                             Firmware
        Revision\n                             Vendor Name\n                         |---------SCCRP-------->|\n
        \                         Required AVPs:\n                             Message
        Type\n                             Protocol Version\n                             Framing
        Capabilities\n                             Host Name\n                             Assigned
        Tunnel ID\n                          Optional AVPs:\n                             Firmware
        Revision\n                             Vendor Name\n                             Receive
        Window Size\n                             Challenge\n                             Challenge
        Response\n                         |<--------SCCCN---------|\n                          Required
        AVPs:\n                             Message Type\n                          Optional
        AVPs:\n                             Challenge Response\n                Figure
        11: Control Connection Establishment\n   In L2TPv2, generally, the tunnel
        between an LAC and LNS may carry the\n   data of multiple users.  Each of
        these users is represented by an\n   L2TPv2 session within the tunnel.  In
        the Softwire environment, the\n   tunnel carries the information of a single
        user.  Consequently, there\n   is only one L2TPv2 session per tunnel.  Figure
        12 describes the\n   messages exchanged and the AVPs used to establish a session
        between\n   an SI (LAC) and an SC (LNS).  The messages and AVPs described
        here\n   are only a subset of those defined in [RFC2661].  This is because\n
        \  Softwires use only a subset of the L2TPv2 functionality.  The subset\n
        \  of L2TP Call Management (i.e., Session Management) AVPs that is\n   applicable
        to Softwires is grouped into Required AVPs and Optional\n   AVPs on a per-control-message
        basis (see Figure 12).  For each\n   control message, Required AVPs include
        all the \"MUST be present\" AVPs\n   from [RFC2661] for that control message,
        and Optional AVPs include\n   the \"MAY be present\" AVPs from [RFC2661] that
        are used in the\n   Softwire context on that control message.  Note that in
        the Softwire\n   environment, the SI always initiates the session.  An L2TPv2
        session\n   setup for a Softwire uses only the incoming call model.  No outgoing\n
        \  or analog calls (sessions) are permitted.  L2TPv2 AVPs SHOULD NOT be\n
        \  hidden.\n                         SC                      SI\n                          |<--------ICRQ---------|\n
        \                          Required AVPs:\n                              Message
        Type\n                              Assigned Session ID\n                              Call
        Serial Number\n                          |---------ICRP-------->|\n                           Required
        AVPs:\n                              Message Type\n                              Assigned
        Session ID\n                          |<--------ICCN---------|\n                           Required
        AVPs:\n                              Message Type\n                              (Tx)
        Connect Speed\n                              Framing Type\n                     Figure
        12: Session Establishment\n   The following sub-sections (5.1.1.1 through
        5.1.1.3) describe in more\n   detail the Control Connection and Session establishment
        AVPs (see\n   message flows in Figures 11 and 12, respectively) that are required,\n
        \  optional and not relevant for the L2TPv2 Tunnel establishment of a\n   Softwire.
        \ Specific L2TPv2 protocol messages and flows that are not\n   explicitly
        described in these sections are handled as defined in\n   [RFC2661].\n   The
        mechanism for hiding AVP Attribute values is used, as described\n   in Section
        4.3 of [RFC2661], to hide sensitive control message data\n   such as usernames,
        user passwords, or IDs, instead of sending the AVP\n   contents in the clear.
        \ Since AVPs used in L2TP messages for the\n   Softwire establishment do not
        transport such sensitive data, L2TPv2\n   AVPs SHOULD NOT be hidden.\n"
      - contents:
        - "5.1.1.1.  AVPs Required for Softwires\n   This section prescribes specific
          values for AVPs that are required\n   (by [RFC2661]) to be present in one
          or more of the messages used for\n   the Softwire establishment, as they
          are used in the Softwire context.\n   It combines all the Required AVPs
          from all the control messages in\n   Section 5.1.1, and provides Softwire-specific
          use guidance.\n   Host Name AVP\n      This AVP is required in SCCRQ and
          SCCRP messages.  This AVP MAY be\n      used to authenticate users, in which
          case it would contain a user\n      identification.  If this AVP is not
          used to authenticate users, it\n      may be used for logging purposes.\n
          \  Framing Capabilities AVP\n      Both the synchronous (S) and asynchronous
          (A) bits SHOULD be set\n      to 1.  This AVP SHOULD be ignored by the receiver.\n
          \  Framing Type AVP\n      The synchronous bit SHOULD be set to 1 and the
          asynchronous bit to\n      0.  This AVP SHOULD be ignored by the receiver.\n
          \  (Tx) Connect Speed AVP\n      (Tx) Connect Speed is a required AVP but
          is not meaningful in the\n      Softwire context.  Its value SHOULD be set
          to 0 and ignored by the\n      receiver.\n   Message Type AVP, Protocol
          Version AVP, Assigned Tunnel ID AVP, Call\n   Serial Number AVP, and Assigned
          Session ID AVP\n      As defined in [RFC2661].\n"
        title: 5.1.1.1.  AVPs Required for Softwires
      - contents:
        - "5.1.1.2.  AVPs Optional for Softwires\n   This section prescribes specific
          values for AVPs that are Optional\n   (not required by [RFC2661]) but used
          in the Softwire context.  It\n   combines all the Optional AVPs from all
          the control messages in\n   Section 5.1.1, and provides Softwire-specific
          use guidance.\n   Challenge AVP and Challenge Response AVP\n      These
          AVPs are not required, but are necessary to implement tunnel\n      authentication.
          \ Since tunnel authentication happens at the\n      beginning of L2TPv2
          tunnel creation, it can be helpful in\n      preventing denial-of-service
          (DoS) attacks.  See Section 5.1.1 of\n      [RFC2661].\n      The usage
          of these AVPs in L2TP messages is OPTIONAL, but SHOULD\n      be implemented
          in the SC.\n   Receive Window Size AVP, Firmware Revision AVP, and Vendor
          Name AVP\n      As defined in [RFC2661].\n"
        title: 5.1.1.2.  AVPs Optional for Softwires
      - contents:
        - "5.1.1.3.  AVPs Not Relevant for Softwires\n   L2TPv2 specifies numerous
          AVPs that, while allowed for a given\n   message, are irrelevant to Softwires.
          \ They can be irrelevant to\n   Softwires because they do not apply to the
          Softwire establishment\n   flow (e.g., they are only used in the Outgoing
          Call establishment\n   message exchange, while Softwires only use the Incoming
          Call message\n   flow), or because they are Optional AVPs that are not used.
          \ L2TPv2\n   AVPs that are relevant to Softwires were covered in Sections
          5.1.1,\n   5.1.1.1, and 5.1.1.2.  Softwire implementations SHOULD NOT send
          AVPs\n   that are not relevant to Softwires.  However, they SHOULD ignore
          them\n   when they are received.  This will simplify the creation of Softwire\n
          \  applications that build upon existing L2TPv2 implementations.\n"
        title: 5.1.1.3.  AVPs Not Relevant for Softwires
      title: 5.1.1.  Tunnel Establishment
    - contents:
      - "5.1.2.  Tunnel Maintenance\n   Periodically, the SI/SC MUST transmit a message
        to the peer to detect\n   tunnel or peer failure and maintain NAT/NAPT contexts.
        \ The L2TPv2\n   HELLO message provides a simple, low-overhead method of doing
        this.\n   The default values specified in [RFC2661] for L2TPv2 HELLO messages\n
        \  could result in a dead-end detection time of 83 seconds.  Although\n   these
        retransmission timers and counters SHOULD be configurable (see\n   Section
        5.8 of [RFC2661]), these values may not be adapted for all\n   situations,
        where a quicker dead-end detection is required, or where\n   NAT/NAPT context
        needs to be refreshed more frequently.  In such\n   cases, the SI/SC MAY use,
        in combination with L2TPv2 HELLO, LCP ECHO\n   messages (Echo-Request and
        Echo-Reply codes) described in [RFC1661].\n   When used, LCP ECHO messages
        SHOULD have a re-emission timer lower\n   than the value for L2TPv2 HELLO
        messages.  The default value\n   recommended in Section 6.5 of [RFC2661] for
        the HELLO message\n   retransmission interval is 60 seconds.  When used, a
        set of suggested\n   values (included here only for guidance) for the LCP
        ECHO message\n   request interval is a default of 30 seconds, a minimum of
        10 seconds,\n   and a maximum of the lesser of the configured L2TPv2 HELLO\n
        \  retransmission interval and 60 seconds.\n"
      title: 5.1.2.  Tunnel Maintenance
    - contents:
      - "5.1.3.  Tunnel Teardown\n   Either the SI or SC can tear down the session
        and tunnel.  This is\n   done as specified in Section 5.7 of [RFC2661], by
        sending a StopCCN\n   control message.  There is no action specific to Softwires
        in this\n   case.\n"
      title: 5.1.3.  Tunnel Teardown
    - contents:
      - "5.1.4.  Additional L2TPv2 Considerations\n   In the Softwire \"Hub and Spoke\"
        framework, L2TPv2 is layered on top\n   of UDP, as part of an IP-in-IP tunnel;
        Section 8.1 of [RFC2661]\n   describes L2TP over UDP/IP.  Therefore, the UDP
        guidelines specified\n   in [RFC5405] apply, as they pertain to the UDP tunneling
        scenarios\n   carrying IP-based traffic.  Section 3.1.3 of [RFC5405] specifies
        that\n   for this case, specific congestion control mechanisms for the tunnel\n
        \  are not necessary.  Additionally, Section 3.2 of [RFC5405] provides\n   message
        size guidelines for the encapsulating (outer) datagrams,\n   including the
        recommendation to implement Path MTU Discovery (PMTUD).\n"
      title: 5.1.4.  Additional L2TPv2 Considerations
    title: 5.1.  L2TPv2 Tunnel Setup
  - contents:
    - "5.2.  PPP Connection\n   This section describes the PPP negotiations between
      the SI and SC in\n   the Softwire context.\n"
    - contents:
      - "5.2.1.  MTU\n   The MTU of the PPP link presented to the SPH SHOULD be the
        link MTU\n   minus the size of the IP, UDP, L2TPv2, and PPP headers together.
        \ On\n   an IPv4 link with an MTU equal to 1500 bytes, this could typically\n
        \  mean a PPP MTU of 1460 bytes.  When the link is managed by IPsec,\n   this
        MTU SHOULD be lowered to take into account the ESP encapsulation\n   (see
        [SW-SEC]).  The value for the MTU may also vary according to the\n   size
        of the L2TP header, as defined by the leading bits of the L2TP\n   message
        header (see [RFC2661]).  Additionally, see [RFC4623] for a\n   detailed discussion
        of fragmentation issues.\n"
      title: 5.2.1.  MTU
    - contents:
      - "5.2.2.  LCP\n   Once the L2TPv2 session is established, the SI and SC initiate
        the\n   PPP connection by negotiating LCP as described in [RFC1661].  The\n
        \  Address-and-Control-Field-Compression configuration option (ACFC)\n   [RFC1661]
        MAY be rejected.\n"
      title: 5.2.2.  LCP
    - contents:
      - "5.2.3.  Authentication\n   After completing LCP negotiation, the SI and SC
        MAY optionally\n   perform authentication.  If authentication is chosen, Challenge\n
        \  Handshake Authentication Protocol (CHAP) [RFC1994] authentication\n   MUST
        be supported by both the Softwire Initiator and Softwire\n   Concentrator.
        \ Other authentication methods such as Microsoft CHAP\n   version 1 (MS-CHAPv1)
        [RFC2433] and Extensible Authentication\n   Protocol (EAP) [RFC3748] MAY be
        supported.\n   A detailed discussion of Softwire security is contained in
        [SW-SEC].\n"
      title: 5.2.3.  Authentication
    - contents:
      - "5.2.4.  IPCP\n   The only Network Control Protocol (NCP) negotiated in the
        Softwire\n   context is IPV6CP (see Section 5.2.4.1) for IPv6 as SPH, and
        IPCP\n   (see Section 5.2.4.2) for IPv4 as SPH.\n"
      - contents:
        - "5.2.4.1.  IPV6CP\n   In the IPv6-over-IPv4 scenarios (see Section 3.1),
          after the optional\n   authentication phase, the Softwire Initiator MUST
          negotiate IPV6CP as\n   defined in [RFC5072].  IPV6CP provides a way to
          negotiate a unique\n   64-bit Interface-Identifier to be used for the address\n
          \  autoconfiguration at the local end of the link.\n"
        title: 5.2.4.1.  IPV6CP
      - contents:
        - "5.2.4.2.  IPv4CP\n   In the IPv4-over-IPv6 scenarios (see Section 3.2),
          a Softwire\n   Initiator MUST negotiate IPCP [RFC1332].  The SI uses IPCP
          to obtain\n   an IPv4 address from the SC.  IPCP MAY also be used to obtain
          DNS\n   information as described in [RFC1877].\n"
        title: 5.2.4.2.  IPv4CP
      title: 5.2.4.  IPCP
    title: 5.2.  PPP Connection
  - contents:
    - "5.3.  Global IPv6 Address Assignment to Endpoints\n   In several scenarios
      defined in Section 3.1, global IPv6 addresses\n   are expected to be allocated
      to Softwire endpoints (in addition to\n   the Link-Local addresses autoconfigured
      using the IPV6CP negotiated\n   interface identifier).  The Softwire Initiator
      assigns global IPv6\n   addresses using the IPV6CP negotiated interface identifier
      and using\n   Stateless Address Autoconfiguration [RFC4862], and/or using Privacy\n
      \  Extensions for Stateless Address Autoconfiguration [RFC4941], (as\n   described
      in Section 5 of [RFC5072]), and/or using DHCPv6 [RFC3315].\n   The Softwire
      Initiator of an IPv6 Softwire MUST send a Router\n   Solicitation message to
      the Softwire Concentrator after IPV6CP is\n   completed.  The Softwire Concentrator
      MUST answer with a Router\n   Advertisement.  This message MUST contain the
      global IPv6 prefix of\n   the PPP link if Neighbor Discovery is used to configure
      addresses of\n   Softwire endpoints.\n   If DHCPv6 is available for address
      delegation, the M bits of the\n   Router Advertisement SHOULD be set.  The Softwire
      Initiator MUST then\n   send a DHCPv6 Request to configure the address of the
      Softwire\n   endpoint.\n   Duplicate Address Detection ([RFC4861]) MUST be performed
      on the\n   Softwire in both cases.\n"
    title: 5.3.  Global IPv6 Address Assignment to Endpoints
  - contents:
    - "5.4.  DHCP\n   The Softwire Initiator MAY use DHCP to get additional information\n
      \  such as delegated prefix and DNS servers.\n"
    - contents:
      - "5.4.1.  DHCPv6\n   In the scenarios in Section 3.1, if the SI supports DHCPv6,
        it SHOULD\n   send a Solicit message to verify if more information is available.\n
        \  If an SI establishing an IPv6 Softwire acts as a router (i.e., in the\n
        \  scenarios in Sections 3.1.2 and 3.1.4) it MUST include the Identity\n   Association
        for Prefix Delegation (IA_PD) option [RFC3633] in the\n   DHCPv6 Solicit message
        [RFC3315] in order to request an IPv6 prefix.\n   When delegating an IPv6
        prefix to the SI by returning a DHCPv6\n   Advertise message with the IA_PD
        and IP_PD Prefix options [RFC3633],\n   the SC SHOULD inject a route for this
        prefix in the IPv6 routing\n   table in order to forward the traffic to the
        relevant Softwire.\n   Configuration of DNS MUST be done as specified in [RFC3646]
        and\n   transmitted according to [RFC3315] and [RFC3736].  In general, all\n
        \  DHCPv6 options MUST be transmitted according to [RFC3315] and\n   [RFC3736].\n"
      title: 5.4.1.  DHCPv6
    - contents:
      - "5.4.2.  DHCPv4\n   An SI establishing an IPv4 Softwire MAY send a DHCP request\n
        \  containing the Subnet Allocation option [SUBNET-ALL].  This practice\n
        \  is not common, but it may be used to connect IPv4 subnets using\n   Softwires,
        as defined in Sections 3.2.2 and 3.2.4.\n   One Subnet-Request suboption MUST
        be configured with the 'h' bit set\n   to '1', as the SI is expected to perform
        the DHCP server function.\n   The 'i' bit of the Subnet-Request suboption
        SHOULD be set to '0' the\n   first time a prefix is requested and to '1' on
        subsequent requests,\n   if a prefix has been allocated.  The Prefix length
        suboption SHOULD\n   be 0 by default.  If the SI is configured to support
        only specific\n   prefix lengths, it SHOULD specify the longest (smallest)
        prefix\n   length it supports.\n   If the SI was previously assigned a prefix
        from that same SC, it\n   SHOULD include the Subnet-Information suboption
        with the prefix it\n   was previously assigned.  The 'c' and 's' bits of the
        suboption\n   SHOULD be set to '0'.\n   In the scenarios in Section 3.2, when
        delegating an IPv4 prefix to\n   the SI, the SC SHOULD inject a route for
        this prefix in the IPv4\n   routing table in order to forward the traffic
        to the relevant\n   Softwire.\n"
      title: 5.4.2.  DHCPv4
    title: 5.4.  DHCP
  title: 5.  Softwire Establishment
- contents:
  - "6.  Considerations about the Address Provisioning Model\n   This section describes
    how a Softwire Concentrator may manage\n   delegated addresses for Softwire endpoints
    and for subnets behind the\n   Softwire Initiator.  One common practice is to
    aggregate endpoints'\n   addresses and delegated prefixes into one prefix routed
    to the SC.\n   The main benefit is to ease the routing scheme by isolating on
    the SC\n   succeeding route injections (when delegating new prefixes for SI).\n"
  - contents:
    - '6.1.  Softwire Endpoints'' Addresses

      '
    - contents:
      - "6.1.1.  IPv6\n   A Softwire Concentrator should provide globally routable
        addresses to\n   Softwire endpoints.  Other types of addresses such as Unique
        Local\n   Addresses (ULAs) [RFC4193] may be used to address Softwire endpoints\n
        \  in a private network with no global connectivity.  A single /64\n   should
        be assigned to the Softwire to address both Softwire\n   endpoints.\n   Global
        addresses or ULAs must be assigned to endpoints when the\n   scenario \"Host
        CPE as Softwire Initiator\" (described in\n   Section 3.1.1) is considered
        to be deployed.  For other scenarios,\n   link-local addresses may also be
        used.\n"
      title: 6.1.1.  IPv6
    - contents:
      - "6.1.2.  IPv4\n   A Softwire Concentrator may provide either globally routable
        or\n   private IPv4 addresses.  When using IPv4 private addresses [RFC1918]\n
        \  on the endpoints, it is not recommended to delegate an IPv4 private\n   prefix
        to the SI, as it can lead to a nested-NAT situation.\n   The endpoints of
        the PPP link use host addresses (i.e., /32),\n   negotiated using IPCP.\n"
      title: 6.1.2.  IPv4
    title: 6.1.  Softwire Endpoints' Addresses
  - contents:
    - '6.2.  Delegated Prefixes

      '
    - contents:
      - "6.2.1.  IPv6 Prefixes\n   Delegated IPv6 prefixes should be of global scope
        if the IPv6\n   addresses assigned to endpoints are global.  Using ULAs is
        not\n   recommended when the subnet is connected to the global IPv6 Internet.\n
        \  When using IPv6 ULAs on the endpoints, the delegated IPv6 prefix may\n
        \  be either of global or ULA scope.\n   Delegated IPv6 prefixes are between
        /48 and /64 in length.  When an\n   SI receives a prefix shorter than 64,
        it can assign different /64\n   prefixes to each of its interfaces.  An SI
        receiving a single /64 is\n   expected to perform bridging if more than one
        interface is available\n   (e.g., wired and wireless).\n"
      title: 6.2.1.  IPv6 Prefixes
    - contents:
      - "6.2.2.  IPv4 Prefixes\n   Delegated IPv4 prefixes should be routable within
        the address space\n   used by assigned IPv4 addresses.  Delegate non-routable
        IPv4 prefixes\n   (i.e., private IPv4 prefix over public IPv4 addresses or
        another\n   class of private IPv4 addresses) is not recommended as a practice
        for\n   provisioning and address translation should be considered in these\n
        \  cases.  The prefix length is between /8 and /30.\n"
      title: 6.2.2.  IPv4 Prefixes
    title: 6.2.  Delegated Prefixes
  - contents:
    - "6.3.  Possible Address Provisioning Scenarios\n   This section summarizes the
      different scenarios for address\n   provisioning with the considerations given
      in the previous sections.\n"
    - contents:
      - "6.3.1.  Scenarios for IPv6\n   This table describes the possible combination
        of IPv6 address scope\n   for endpoints and delegated prefixes.\n   +------------------+-----------------------+------------------------+\n
        \  | Endpoint IPv6    | Delegated Global IPv6 | Delegated ULA IPv6     |\n
        \  | Address          | Prefix                | Prefix                 |\n
        \  +------------------+-----------------------+------------------------+\n
        \  | Link Local       | Possible              | Possible               |\n
        \  |                  |                       |                        |\n
        \  | ULA              | Possible              | Possible               |\n
        \  |                  |                       |                        |\n
        \  | Global           | Possible              | Possible, but Not      |\n
        \  |                  |                       | Recommended            |\n
        \  +------------------+-----------------------+------------------------+\n
        \                       Table 1: Scenarios for IPv6\n"
      title: 6.3.1.  Scenarios for IPv6
    - contents:
      - "6.3.2.  Scenarios for IPv4\n   This table describes the possible combination
        of IPv4 address scope\n   for endpoints and delegated prefixes.\n   +-------------+-----------------+-----------------------------------+\n
        \  | Endpoint    | Delegated       | Delegated Private IPv4 Prefix     |\n
        \  | IPv4        | Public IPv4     |                                   |\n
        \  | Address     | Prefix          |                                   |\n
        \  +-------------+-----------------+-----------------------------------+\n
        \  | Private     | Possible        | Possible, but Not Recommended     |\n
        \  | IPv4        |                 | when using NAT (cf.               |\n
        \  |             |                 | Section 6.1.2)                    |\n
        \  |             |                 |                                   |\n
        \  | Public IPv4 | Possible        | Possible, but NAT usage is        |\n
        \  |             |                 | recommended (cf. Section 6.2.2)   |\n
        \  +-------------+-----------------+-----------------------------------+\n
        \                       Table 2: Scenarios for IPv4\n"
      title: 6.3.2.  Scenarios for IPv4
    title: 6.3.  Possible Address Provisioning Scenarios
  title: 6.  Considerations about the Address Provisioning Model
- contents:
  - "7.  Considerations about Address Stability\n   A Softwire can provide stable
    addresses even if the underlying\n   addressing scheme changes, by opposition
    to automatic tunneling.  A\n   Softwire Concentrator should always provide the
    same address and\n   prefix to a reconnecting user.  However, if the goal of the
    Softwire\n   service is to provide a temporary address for a roaming user, it
    may\n   be provisioned to provide only a temporary address.\n   The address and
    prefix are expected to change when reconnecting to a\n   different Softwire Concentrator.
    \ However, an organization providing\n   a Softwire service may provide the same
    address and prefix across\n   different Softwire Concentrators at the cost of
    a more fragmented\n   routing table.  The routing fragmentation issue may be limited
    if the\n   prefixes are aggregated in a location topologically close to the SC.\n
    \  This would be the case, for example, if several SCs are put in\n   parallel
    for load-balancing purpose.\n"
  title: 7.  Considerations about Address Stability
- contents:
  - "8.  Considerations about RADIUS Integration\n   The Softwire Concentrator is
    expected to act as a client to a AAA\n   server, for example, a RADIUS server.
    \ During the PPP authentication\n   phase, the RADIUS server may return additional
    information in the\n   form of attributes in the Access-Accept message.\n   The
    Softwire Concentrator may include the Tunnel-Type and Tunnel-\n   Medium-Type
    attributes [RFC2868] in the Access-Request messages to\n   provide a hint of the
    type of Softwire being configured.\n"
  - contents:
    - '8.1.  Softwire Endpoints

      '
    - contents:
      - "8.1.1.  IPv6 Softwires\n   If the RADIUS server includes a Framed-Interface-Id
        attribute\n   [RFC3162], the Softwire Concentrator must send it to the Softwire\n
        \  Initiator in the Interface-Identifier field of its IPV6CP\n   Configuration
        Request message.\n   If the Framed-IPv6-Prefix attribute [RFC3162] is included,
        that\n   prefix must be used in the router advertisements sent to the SI.
        \ If\n   Framed-IPv6-Prefix is not present but Framed-IPv6-Pool is, the SC\n
        \  must choose a prefix from that pool to send RAs.\n"
      title: 8.1.1.  IPv6 Softwires
    - contents:
      - "8.1.2.  IPv4 Softwires\n   If the Framed-IP-Address attribute [RFC2865] is
        present, the Softwire\n   Concentrator must provide that address to the Softwire
        Initiator\n   during IPCP address negotiation.  That is, when the Softwire\n
        \  Initiator requests an IP address from the Softwire Concentrator, the\n
        \  address provided should be the Framed-IP-Address.\n"
      title: 8.1.2.  IPv4 Softwires
    title: 8.1.  Softwire Endpoints
  - contents:
    - '8.2.  Delegated Prefixes

      '
    - contents:
      - "8.2.1.  IPv6 Prefixes\n   If the attribute Delegated-IPv6-Prefix [RFC4818]
        is present in the\n   RADIUS Access-Accept message, it must be used by the
        Softwire\n   Concentrator for the delegation of the IPv6 prefix.  Since the
        prefix\n   delegation is performed by DHCPv6 and the attribute is linked to
        a\n   username, the SC must associate the DHCP Unique Identifier (DUID) of\n
        \  a DHCPv6 request to the tunnel it came from and its user.\n   Interaction
        between RADIUS, PPP, and DHCPv6 server may follow the\n   mechanism proposed
        in [RELAY-RAD].  In this case, during the Softwire\n   authentication phase,
        PPP collects the RADIUS attributes for the user\n   such as Delegated-IPv6-Prefix.
        \ A specific DHCPv6 relay is assigned\n   to the Softwire.  The DHCPv6 relay
        fills in these attributes in the\n   Relay agent RADIUS Attribute Option (RRAO)
        DHCPv6 option, before\n   forwarding the DHCPv6 requests to the DHCPv6 server.\n"
      title: 8.2.1.  IPv6 Prefixes
    - contents:
      - "8.2.2.  IPv4 Prefixes\n   RADIUS does not define an attribute for the delegated
        IPv4 Prefix.\n   Attributes indicating an IPv4 prefix and its length (for
        instance the\n   combination of the Framed-IP-Address and Framed-IP-Netmask
        attributes\n   [RFC2865]) may be used by the Softwire Concentrator to delegate
        an\n   IPv4 prefix to the Softwire Initiator.  The Softwire Concentrator\n
        \  must add a corresponding route with the Softwire Initiator as next-\n   hop.\n
        \  As this practice had been used, the inclusion of the Framed-IP-\n   Netmask
        attribute along with the Framed-IP-Address attribute tells\n   the Softwire
        Concentrator to delegate an IPv4 prefix to the Softwire\n   Initiator (e.g.,
        in the IPv4-over-IPv6 scenarios where the Softwire\n   Initiator is a router,
        see Sections 3.2.2 and 3.2.4), as the SC\n   should forward packets destined
        to any IPv4 address in the prefix to\n   the SI.\n"
      title: 8.2.2.  IPv4 Prefixes
    title: 8.2.  Delegated Prefixes
  title: 8.  Considerations about RADIUS Integration
- contents:
  - "9.  Considerations for Maintenance and Statistics\n   Existing protocol mechanics
    for conveying adjunct or accessory\n   information for logging purposes, including
    L2TPv2 and RADIUS\n   methods, can include informational text that the behavior
    is\n   according to the Softwire \"Hub and Spoke\" framework (following the\n
    \  implementation details specified in this document).\n"
  - contents:
    - "9.1.  RADIUS Accounting\n   RADIUS Accounting for L2TP and PPP are documented
      (see Section 4.3).\n   When deploying Softwire solutions, operators may experience\n
      \  difficulties to differentiate the address family of the traffic\n   reported
      in accounting information from RADIUS.  This problem and\n   some potential
      solutions are described in [SW-ACCT].\n"
    title: 9.1.  RADIUS Accounting
  - contents:
    - "9.2.  MIBs\n   MIB support for L2TPv2 and PPP are documented (see Section 4.4).\n
      \  Also, see [RFC4293].\n"
    title: 9.2.  MIBs
  title: 9.  Considerations for Maintenance and Statistics
- contents:
  - "10.  Security Considerations\n   One design goal of the \"Hub and Spoke\" problem
    is to very strongly\n   consider the reuse of already deployed protocols (see
    [RFC4925]).\n   Another design goal is a solution with very high scaling properties.\n
    \  L2TPv2 [RFC2661] is the phase 1 protocol used in the Softwire \"Hub\n   and
    Spoke\" solution space, and the L2TPv2 security considerations\n   apply to this
    document (see Section 9 of [RFC2661]).\n   The L2TPv2 Softwire solution adds the
    following considerations:\n   o  L2TP Tunnel Authentication (see Sections 5.1.1
    and 9.1 of\n      [RFC2661]) provides authentication at tunnel setup.  It may
    be\n      used to limit DoS attacks by authenticating the tunnel before L2TP\n
    \     and PPP resources are allocated.\n   o  In a Softwire environment, L2TPv2
    AVPs do not transport sensitive\n      data, and thus the L2TPv2 AVP hiding mechanism
    is not used (see\n      Section 5.1.1).\n   o  PPP CHAP [RFC1994] provides basic
    user authentication.  Other\n      authentication protocols may additionally be
    supported (see\n      Section 5.2.3).\n   L2TPv2 can also be secured with IPsec
    to provide privacy, integrity,\n   and replay protection.  Currently, there are
    two different solutions\n   for security L2TPv2 with IPsec:\n   o  Securing L2TPv2
    using IPsec \"version 2\" (IKEv1) is specified in\n      [RFC3193], [RFC3947],
    and [RFC3948].  When L2TPv2 is used in the\n      Softwire context, the voluntary
    tunneling model applies.\n      [RFC3193] describes the interaction between IPsec
    and L2TPv2, and\n      is deployed.  [RFC3193] MUST be supported, given that deployed\n
    \     technology must be very strongly considered [RFC4925] for this\n      'time-to-market'
    solution.\n   o  [SW-SEC] also specifies a new (incompatible) solution for securing\n
    \     L2TPv2 with IPsec \"version 3\" (IKEv2).  Section 3.5 of [SW-SEC]\n      describes
    the advantages of using IKEv2, and this solution needs\n      to be considered
    for future phases.\n   Additional discussion of Softwire security is contained
    in [SW-SEC].\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Acknowledgements\n   The authors would like to acknowledge the following
    contributors who\n   provided helpful input on this document: Florent Parent,
    Jordi Palet\n   Martinez, Ole Troan, Shin Miyakawa, Carl Williams, Mark Townsley,\n
    \  Francis Dupont, Ralph Droms, Hemant Singh, and Alain Durand.\n   The authors
    would also like to acknowledge the participants in the\n   Softwires interim meetings
    held in Hong Kong, China, and Barcelona,\n   Spain.  The minutes for the interim
    meeting at the China University -\n   Hong Kong (February 23-24, 2006) are at\n
    \  <http://www.ietf.org/proceedings/06mar/isoftwire.html>.  The minutes\n   for
    the interim meeting at Polytechnic University of Catalonia -\n   Barcelona (September
    14-15, 2006) are reachable at\n   <http://www.ietf.org/proceedings/06nov/isoftwire.html>.
    \ The\n   Softwires auxiliary page at <http://bgp.nu/~dward/softwires/>\n   contains
    additional meeting information.\n   During and after the IETF Last Call, useful
    comments and discussion\n   were provided by Jari Arkko, David Black, Lars Eggert,
    Pasi Eronen,\n   and Dan Romascanu.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [RFC1332]     McGregor, G., \"The PPP Internet
      Protocol Control\n                 Protocol (IPCP)\", RFC 1332, May 1992.\n
      \  [RFC1661]     Simpson, W., \"The Point-to-Point Protocol (PPP)\",\n                 STD
      51, RFC 1661, July 1994.\n   [RFC1918]     Rekhter, Y., Moskowitz, R., Karrenberg,
      D., Groot, G.,\n                 and E. Lear, \"Address Allocation for Private\n
      \                Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC1994]
      \    Simpson, W., \"PPP Challenge Handshake Authentication\n                 Protocol
      (CHAP)\", RFC 1994, August 1996.\n   [RFC2119]     Bradner, S., \"Key words
      for use in RFCs to Indicate\n                 Requirement Levels\", BCP 14,
      RFC 2119, March 1997.\n   [RFC2661]     Townsley, W., Valencia, A., Rubens,
      A., Pall, G., Zorn,\n                 G., and B. Palter, \"Layer Two Tunneling
      Protocol\n                 \"L2TP\"\", RFC 2661, August 1999.\n   [RFC2865]
      \    Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n                 \"Remote
      Authentication Dial In User Service (RADIUS)\",\n                 RFC 2865,
      June 2000.\n   [RFC3162]     Aboba, B., Zorn, G., and D. Mitton, \"RADIUS and
      IPv6\",\n                 RFC 3162, August 2001.\n   [RFC3193]     Patel, B.,
      Aboba, B., Dixon, W., Zorn, G., and S.\n                 Booth, \"Securing L2TP
      using IPsec\", RFC 3193,\n                 November 2001.\n   [RFC3315]     Droms,
      R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n                 and M. Carney,
      \"Dynamic Host Configuration Protocol for\n                 IPv6 (DHCPv6)\",
      RFC 3315, July 2003.\n   [RFC3371]     Caves, E., Calhoun, P., and R. Wheeler,
      \"Layer Two\n                 Tunneling Protocol \"L2TP\" Management Information
      Base\",\n                 RFC 3371, August 2002.\n   [RFC3633]     Troan, O.
      and R. Droms, \"IPv6 Prefix Options for\n                 Dynamic Host Configuration
      Protocol (DHCP) version 6\",\n                 RFC 3633, December 2003.\n   [RFC3736]
      \    Droms, R., \"Stateless Dynamic Host Configuration\n                 Protocol
      (DHCP) Service for IPv6\", RFC 3736,\n                 April 2004.\n   [RFC3947]
      \    Kivinen, T., Swander, B., Huttunen, A., and V. Volpe,\n                 \"Negotiation
      of NAT-Traversal in the IKE\", RFC 3947,\n                 January 2005.\n   [RFC3948]
      \    Huttunen, A., Swander, B., Volpe, V., DiBurro, L., and\n                 M.
      Stenberg, \"UDP Encapsulation of IPsec ESP Packets\",\n                 RFC
      3948, January 2005.\n   [RFC4818]     Salowey, J. and R. Droms, \"RADIUS Delegated-IPv6-Prefix\n
      \                Attribute\", RFC 4818, April 2007.\n   [RFC4862]     Thomson,
      S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n                 Address Autoconfiguration\",
      RFC 4862, September 2007.\n   [RFC5072]     S.Varada, Haskins, D., and E. Allen,
      \"IP Version 6 over\n                 PPP\", RFC 5072, September 2007.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [RELAY-RAD]   Lau, W., \"DHCPv6 Relay agent
      RADIUS Attribute Option\",\n                 Work in Progress, February 2006.\n
      \  [RFC1471]     Kastenholz, F., \"The Definitions of Managed Objects for\n
      \                the Link Control Protocol of the Point-to-Point\n                 Protocol\",
      RFC 1471, June 1993.\n   [RFC1473]     Kastenholz, F., \"The Definitions of
      Managed Objects for\n                 the IP Network Control Protocol of the
      Point-to-Point\n                 Protocol\", RFC 1473, June 1993.\n   [RFC1877]
      \    Cobb, S. and F. Baker, \"PPP Internet Protocol Control\n                 Protocol
      Extensions for Name Server Addresses\",\n                 RFC 1877, December
      1995.\n   [RFC2131]     Droms, R., \"Dynamic Host Configuration Protocol\",\n
      \                RFC 2131, March 1997.\n   [RFC2132]     Alexander, S. and R.
      Droms, \"DHCP Options and BOOTP\n                 Vendor Extensions\", RFC 2132,
      March 1997.\n   [RFC2433]     Zorn, G. and S. Cobb, \"Microsoft PPP CHAP Extensions\",\n
      \                RFC 2433, October 1998.\n   [RFC2867]     Zorn, G., Aboba,
      B., and D. Mitton, \"RADIUS Accounting\n                 Modifications for Tunnel
      Protocol Support\", RFC 2867,\n                 June 2000.\n   [RFC2868]     Zorn,
      G., Leifer, D., Rubens, A., Shriver, J.,\n                 Holdrege, M., and
      I. Goyret, \"RADIUS Attributes for\n                 Tunnel Protocol Support\",
      RFC 2868, June 2000.\n   [RFC3022]     Srisuresh, P. and K. Egevang, \"Traditional
      IP Network\n                 Address Translator (Traditional NAT)\", RFC 3022,\n
      \                January 2001.\n   [RFC3575]     Aboba, B., \"IANA Considerations
      for RADIUS (Remote\n                 Authentication Dial In User Service)\",
      RFC 3575,\n                 July 2003.\n   [RFC3646]     Droms, R., \"DNS Configuration
      options for Dynamic Host\n                 Configuration Protocol for IPv6 (DHCPv6)\",
      RFC 3646,\n                 December 2003.\n   [RFC3748]     Aboba, B., Blunk,
      L., Vollbrecht, J., Carlson, J., and\n                 H. Levkowetz, \"Extensible
      Authentication Protocol\n                 (EAP)\", RFC 3748, June 2004.\n   [RFC3931]
      \    Lau, J., Townsley, M., and I. Goyret, \"Layer Two\n                 Tunneling
      Protocol - Version 3 (L2TPv3)\", RFC 3931,\n                 March 2005.\n   [RFC4087]
      \    Thaler, D., \"IP Tunnel MIB\", RFC 4087, June 2005.\n   [RFC4193]     Hinden,
      R. and B. Haberman, \"Unique Local IPv6 Unicast\n                 Addresses\",
      RFC 4193, October 2005.\n   [RFC4293]     Routhier, S., \"Management Information
      Base for the\n                 Internet Protocol (IP)\", RFC 4293, April 2006.\n
      \  [RFC4623]     Malis, A. and M. Townsley, \"Pseudowire Emulation Edge-\n                 to-Edge
      (PWE3) Fragmentation and Reassembly\", RFC 4623,\n                 August 2006.\n
      \  [RFC4787]     Audet, F. and C. Jennings, \"Network Address Translation\n
      \                (NAT) Behavioral Requirements for Unicast UDP\",\n                 BCP
      127, RFC 4787, January 2007.\n   [RFC4861]     Narten, T., Nordmark, E., Simpson,
      W., and H. Soliman,\n                 \"Neighbor Discovery for IP version 6
      (IPv6)\", RFC 4861,\n                 September 2007.\n   [RFC4925]     Li,
      X., Dawkins, S., Ward, D., and A. Durand, \"Softwire\n                 Problem
      Statement\", RFC 4925, July 2007.\n   [RFC4941]     Narten, T., Draves, R.,
      and S. Krishnan, \"Privacy\n                 Extensions for Stateless Address
      Autoconfiguration in\n                 IPv6\", RFC 4941, September 2007.\n   [RFC5080]
      \    Nelson, D. and A. DeKok, \"Common Remote Authentication\n                 Dial
      In User Service (RADIUS) Implementation Issues and\n                 Suggested
      Fixes\", RFC 5080, December 2007.\n   [RFC5405]     Eggert, L. and G. Fairhurst,
      \"Unicast UDP Usage\n                 Guidelines for Application Designers\",
      BCP 145,\n                 RFC 5405, November 2008.\n   [SUBNET-ALL]  Johnson,
      R., Kumarasamy, J., Kinnear, K., and M. Stapp,\n                 \"Subnet Allocation
      Option\", Work in Progress,\n                 March 2009.\n   [SW-ACCT]     Stevant,
      B., Toutain, L., Dupont, F., and D. Binet,\n                 \"Accounting on
      Softwires\", Work in Progress,\n                 April 2009.\n   [SW-SEC]      Yamamoto,
      S., Williams, C., Parent, F., and H. Yokota,\n                 \"Softwire Security
      Analysis and Requirements\", Work\n                 in Progress, May 2009.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Authors' Addresses\n   Bill Storer\n   Cisco Systems\n   170 W Tasman Dr\n   San
    Jose, CA  95134\n   USA\n   EMail: bstorer@cisco.com\n   Carlos Pignataro (editor)\n
    \  Cisco Systems\n   7200 Kit Creek Road\n   PO Box 14987\n   Research Triangle
    Park, NC  27709\n   USA\n   EMail: cpignata@cisco.com\n   Maria Alice Dos Santos\n
    \  Cisco Systems\n   170 W Tasman Dr\n   San Jose, CA  95134\n   USA\n   EMail:
    mariados@cisco.com\n   Bruno Stevant (editor)\n   TELECOM Bretagne\n   2 rue de
    la Chataigneraie CS17607\n   Cesson Sevigne,   35576\n   France\n   EMail: bruno.stevant@telecom-bretagne.eu\n
    \  Laurent Toutain\n   TELECOM Bretagne\n   2 rue de la Chataigneraie CS17607\n
    \  Cesson Sevigne,   35576\n   France\n   EMail: laurent.toutain@telecom-bretagne.eu\n
    \  Jean-Francois Tremblay\n   Videotron Ltd.\n   612 Saint-Jacques\n   Montreal,
    QC  H3C 4M8\n   Canada\n   EMail: jf@jftremblay.com\n"
  title: Authors' Addresses
