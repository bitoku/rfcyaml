- title: __initial_text__
  contents:
  - '         IP Payload Compression Using ITU-T V.44 Packet Method

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a compression method based on the data\n\
    \   compression algorithm described in International Telecommunication\n   Union\
    \ (ITU-T) Recommendation V.44.  Recommendation V.44 is a modem\n   standard but\
    \ Annex B, Clause B.1, of the recommendation describes the\n   implementation\
    \ of V.44 in packet networks (e.g., V.44 Packet Method).\n   This document defines\
    \ the application of V.44 Packet Method to the\n   Internet Protocol (IP) Payload\
    \ Compression Protocol (RFC 2393).  RFC\n   2393 defines a method for applying\
    \ lossless compression to the\n   payload portion of IP datagrams.\n   V.44 Packet\
    \ Method is based upon the LZJH data compression algorithm.\n   Throughout the\
    \ remainder of this document the terms V.44 Packet\n   Method and LZJH are synonymous.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n    1. Introduction...................................................2\n\
    \       1.1 General....................................................2\n   \
    \    1.2 Background of LZJH Data Compression........................2\n      \
    \ 1.3 Intellectual Property Rights...............................3\n       1.4\
    \ Specification of Requirements..............................4\n    2. Compression\
    \ Process............................................4\n       2.1 Encoder Dictionary.........................................4\n\
    \       2.2 Encoder Output.............................................4\n   \
    \    2.3 Padding....................................................4\n    3.\
    \ Decompression Process..........................................5\n       3.1\
    \ Compressed Datagram........................................5\n       3.2 Original\
    \ Uncompressed Datagram.............................5\n    4. IPComp Association\
    \ (IPCA) Parameters...........................5\n       4.1 Transform ID...............................................5\n\
    \       4.2 Security Association Attributes............................5\n   \
    \    4.3 Manual configuration.......................................5\n      \
    \ 4.4 Minimum packet size threshold..............................6\n       4.5\
    \ Compressibility test.......................................6\n    5. Security\
    \ Considerations........................................6\n    6. IANA Considerations............................................6\n\
    \    7. Acknowledgements...............................................6\n   \
    \ 8. References.....................................................6\n    9.\
    \ Authors' Addresses.............................................7\n   10. Full\
    \ Copyright Statement.......................................8\n"
- title: 1. Introduction
  contents:
  - '1. Introduction

    '
- title: 1.1 General
  contents:
  - "1.1 General\n   This document specifies the application of LZJH data compression,\
    \ a\n   lossless data compression algorithm, to IP datagram payloads.  LZJH\n\
    \   data compression is to be used in conjunction with the IP Payload\n   Compression\
    \ Protocol (IPComp) [RFC2393].  This document is written\n   with the assumption\
    \ that the reader has an understanding of the\n   IPComp protocol.\n"
- title: 1.2 Background of LZJH Data Compression
  contents:
  - "1.2 Background of LZJH Data Compression\n   LZJH is similar to the algorithm\
    \ described in [LZ78] although it also\n   has aspects which are similar to the\
    \ algorithm described in [LZ77].\n   As such, it provides the execution speed\
    \ and low memory requirements\n   of [LZ78] with compression ratios that are better\
    \ than [LZ77].\n   Originally developed for the satellite industry to compress\
    \ IP\n   datagrams independently, it is ideal for the IPComp application.  The\n\
    \   LZJH algorithm was modified to compress a continuous stream of data\n   for\
    \ a modem environment and this modified version is the basis for\n   Recommendation\
    \ V.44.  LZJH is an adaptive, general purpose, lossless\n   data compression algorithm.\
    \  It was selected by the ITU-T as the\n   basis for Recommendation V.44 based\
    \ on its performance across a wide\n   variety of data types, particularly web\
    \ HTML's, and based on its\n   compression ratio characteristics, per MIP and\
    \ memory utilized (as\n   compared to other candidate algorithms).  Its encoder\
    \ is extremely\n   efficient and can encode a two character string with 3 bits\
    \ the\n   second time that string is encountered in the data.\n   A typical [LZ78]\
    \ compression algorithm, such as V.42bis, is not\n   suitable for an IPComp application\
    \ since it takes too long to build\n   up its dictionary, resulting in poor compression\
    \ ratios on IP\n   datagrams that are compressed independently.  It also requires\
    \ too\n   many cycles to reset an [LZ78] dictionary between datagrams which\n\
    \   adversely affects execution times.\n   Similarly, a typical [LZ77] compression\
    \ algorithm suffers in the\n   IPComp application due to poor execution times.\
    \  Hash tables, that\n   help improve execution times when compressing continuous\
    \ data, may\n   cause deterioration of execution times in an IPComp application\
    \ since\n   they must be reset to an initial state between each datagram.\n  \
    \ LZJH not only has superior execution times when encoding or decoding\n   packet\
    \ data, but the reset of the dictionary between IP datagrams is\n   trivial. \
    \ The encoder requires only the initialization of a 256 word\n   array and a handful\
    \ of variables while the decoder requires only the\n   initialization of a handful\
    \ of variables.\n   The LZJH algorithm uses a dictionary of 1525 entries, a total\
    \ of only\n   16K of dictionary memory, for the IPComp application.  During the\n\
    \   encode process unmatched characters are encoded as ordinals and\n   matched\
    \ redundant strings of characters are encoded as codewords or\n   string-extension\
    \ lengths that represent the redundant strings.\n   During the decode process\
    \ the ordinals, codewords, and string-\n   extension lengths are interpreted to\
    \ re-create exactly the original\n   datagram payload.\n   The details of LZJH\
    \ data compression can be found in [V44].\n"
- title: 1.3 Intellectual Property Rights
  contents:
  - "1.3 Intellectual Property Rights\n   The IETF has been notified of intellectual\
    \ property rights claimed in\n   regard to some or all of the specifications contained\
    \ in this\n   document.  For more information, consult the online list of claimed\n\
    \   rights.\n"
- title: 1.4 Specification of Requirements
  contents:
  - "1.4 Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2. Compression Process
  contents:
  - "2. Compression Process\n   The compression of datagrams is performed by a function\
    \ called the\n   Encoder.\n"
- title: 2.1 Encoder Dictionary
  contents:
  - "2.1 Encoder Dictionary\n   The transmitting entity MUST reset the encoder dictionary\
    \ prior to\n   processing each datagram's payload, as specified in clause 7.5.1\
    \ of\n   [V44].  This ensures that each datagram's payload can be correctly\n\
    \   decompressed independently of any other, as is required in an\n   environment\
    \ where datagrams may be lost or received out of order.\n   The transmitting entity\
    \ MUST flush unprocessed encoder data after the\n   last byte of the datagram\
    \ has been passed into the encoder such that\n   the compressed datagram can be\
    \ transmitted as a unit.  The flush\n   ensures that all data is processed and\
    \ included in the output, i.e.,\n   the compressed datagram is complete and no\
    \ data from the current\n   datagram will be processed with the next datagram.\n"
- title: 2.2 Encoder Output
  contents:
  - "2.2 Encoder Output\n   The input to the payload compression algorithm is an IP\
    \ datagram\n   payload.  The output of the algorithm is a new (and hopefully\n\
    \   smaller) payload.  The output payload contains the input payload's\n   data\
    \ in either compressed or uncompressed format.  The input and\n   output payloads\
    \ are each an integral number of bytes in length.\n   If the uncompressed form\
    \ is used, the output payload is identical to\n   the input payload and the IPComp\
    \ header is omitted.  If the\n   compressed form is used, the output payload is\
    \ prepended with the\n   IPComp header and encoded as defined in clause 6.3 of\
    \ [V44].\n"
- title: 2.3 Padding
  contents:
  - "2.3 Padding\n   A datagram payload compressed using LZJH always ends with a FLUSH\n\
    \   codeword in the last one or two compressed data bytes.  The FLUSH\n   codeword\
    \ may start in the 2nd to the last compressed data byte and\n   end in the last\
    \ compressed data byte or be totally within the last\n   data byte.  The FLUSH\
    \ codeword is used to signal the end of the\n   compressed data and differentiate\
    \ compressed data from padding.  Any\n   bits or bytes beyond the FLUSH codeword\
    \ within the compressed payload\n   are to be considered padding.\n   The size\
    \ of a compressed payload MUST be in whole octet units.\n"
- title: 3. Decompression Process
  contents:
  - "3. Decompression Process\n   The decompression of datagrams is performed by a\
    \ function called the\n   Decoder.\n"
- title: 3.1 Compressed Datagram
  contents:
  - "3.1 Compressed Datagram\n   If the received datagram is compressed, the receiver\
    \ MUST reset the\n   decoder dictionary prior to processing the datagram.  This\
    \ ensures\n   that each datagram can be decoded independently of any other datagram\n\
    \   in the event datagrams are lost or received out of order.  Beginning\n   with\
    \ the decoder dictionary in the initial state, as specified in\n   clause 7.5.2\
    \ of [V44], the receiver decodes the payload data field of\n   the datagram according\
    \ to the procedure specified in clause 6.4 of\n   [V44].\n"
- title: 3.2 Original Uncompressed Datagram
  contents:
  - "3.2 Original Uncompressed Datagram\n   If the received datagram is not compressed,\
    \ the receiver does not\n   perform compression decoding and passes the payload\
    \ data field of the\n   datagram unaltered to the next protocol layer.\n"
- title: 4. IPComp Association (IPCA) Parameters
  contents:
  - "4. IPComp Association (IPCA) Parameters\n   IKE [RFC2409] MAY be used to negotiate\
    \ the use of the LZJH\n   compression algorithm to establish an IPCA, as defined\
    \ in [RFC2393].\n"
- title: 4.1 Transform ID
  contents:
  - "4.1 Transform ID\n   The value of the LZJH Transform ID is IPCOMP_LZJH.  This\
    \ value is\n   used to negotiate the use of the LZJH data compression algorithm\n\
    \   using IKE.\n"
- title: 4.2 Security Association Attributes
  contents:
  - "4.2 Security Association Attributes\n   There are no other parameters required\
    \ for the negotiation of the\n   LZJH compression algorithm using IKE.\n"
- title: 4.3 Manual configuration
  contents:
  - "4.3 Manual configuration\n   The CPI value IPCOMP_LZJH is used for manually configured\
    \ IPComp\n   Compression Associations.\n"
- title: 4.4 Minimum packet size threshold
  contents:
  - "4.4 Minimum packet size threshold\n   As stated in [RFC2393], small packets may\
    \ not compress well.\n   Informal tests using the LZJH algorithm on internet web\
    \ pages and e-\n   mail files show that the average payload size that typically\
    \ produces\n   expanded data is approximately 50 bytes.  Thus, implementations\
    \ may\n   prefer not to attempt to compress payloads of approximately 50 bytes\n\
    \   or smaller.\n"
- title: 4.5 Compressibility test
  contents:
  - "4.5 Compressibility test\n   The LZJH algorithm, as described in [V44], is easily\
    \ modified to\n   incorporate an adaptive compressibility test, as referenced\
    \ in\n   [RFC2393].  Annex B of [V44] specifies the mechanism for including\n\
    \   such a test in LZJH.\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   This document does not add any further security\
    \ considerations to\n   those discussed in [RFC2393].\n"
- title: 6. IANA Considerations
  contents:
  - "6. IANA Considerations\n   This document does not introduce any new name spaces.\
    \  The value of\n   IPCOMP_LZJH is assigned from the IPsec IPCOMP transform identifier\n\
    \   space defined in [RFC2407].  IANA has assigned a value of 4 for this\n   purpose.\n"
- title: 7. Acknowledgements
  contents:
  - "7. Acknowledgements\n   This document is modeled upon [RFC2395].\n"
- title: 8. References
  contents:
  - "8. References\n   [LZ77]    Lempel, A., and Ziv, J., \"A Universal Algorithm\
    \ for\n             Sequential Data Compression\", IEEE Transactions On\n    \
    \         Information Theory, Vol. IT-23, No. 3, May 1977.\n   [LZ78]    Lempel,\
    \ A., and Ziv, J., \"Compression of Individual\n             Sequences via Variable\
    \ Rate Coding\", IEEE Transactions On\n             Information Theory, Vol. IT-24,\
    \ No. 5, Sep 1978.\n   [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2393]\
    \ Shacham, A., \"IP Payload Compression Protocol (IPComp)\",\n             RFC\
    \ 2393, December 1998.\n   [RFC2395] Friend, R. and R. Monsour, \"IP Payload Compression\
    \ Using\n             LZS\", RFC 2395, December 1998.\n   [RFC2407] Piper, D.,\
    \ \"The Internet IP Security Domain of\n             Interpretation for ISAKMP\"\
    , RFC 2407, November, 1998.\n   [RFC2409] Harkins, D. and D. Carrel, \"The Internet\
    \ Key Exchange\", RFC\n             2409, November 1998.\n   [V44]     ITU Telecommunication\
    \ Standardization Sector (ITU-T)\n             Recommendation V.44 \"Data Compression\
    \ Procedures\", November\n             2000.\n"
- title: 9. Authors' Addresses
  contents:
  - "9. Authors' Addresses\n   Jeff Heath\n   Hughes Network Systems\n   10450 Pacific\
    \ Center Ct.\n   San Diego, CA  92121\n   Phone: 858-452-4826\n   Fax:   858-597-8979\n\
    \   EMail: jheath@hns.com\n   John Border\n   Hughes Network Systems\n   11717\
    \ Exploration Lane\n   Germantown, MD  20876\n   Phone: 301-601-4099\n   Fax:\
    \   301-601-4275\n   EMail: border@hns.com\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2001). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
