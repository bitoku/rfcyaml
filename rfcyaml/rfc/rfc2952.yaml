- title: __initial_text__
  contents:
  - '             Telnet Encryption: DES 64 bit Cipher Feedback

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how to use the DES encryption algorithm\
    \ in\n   cipher feedback mode with the telnet encryption option.\n"
- title: 1.  Command Names and Codes
  contents:
  - "1.  Command Names and Codes\n   Encryption Type\n      DES_CFB64        1\n \
    \  Suboption Commands\n      CFB64_IV         1\n      CFB64_IV_OK      2\n  \
    \    CFB64_IV_BAD     3\n"
- title: 2.  Command Meanings
  contents:
  - "2.  Command Meanings\n   IAC SB ENCRYPT IS DES_CFB64 CFB64_IV <initial vector>\
    \ IAC SE\n     The sender of this command generates a random 8 byte initial\n\
    \     vector, and sends it to the other side of the connection using the\n   \
    \  CFB64_IV command.  The initial vector is sent in clear text.  Only\n     the\
    \ side of the connection that is WILL ENCRYPT may send the\n     CFB64_IV command.\n\
    \   IAC SB ENCRYPT REPLY DES_CFB64 CFB64_IV_OK IAC SE\n   IAC SB ENCRYPT REPLY\
    \ DES_CFB64 CFB64_IV_BAD IAC SE\n     The sender of these commands either accepts\
    \ or rejects the initial\n     vector received in a CFB64_IV command.  Only the\
    \ side of the\n     connection that is DO ENCRYPT may send the CFB64_IV_OK and\n\
    \     CFB64_IV_BAD commands.  The CFB64_IV_OK command MUST be sent for\n     backwards\
    \ compatibility with existing implementations; there really\n     isn't any reason\
    \ why a sender would need to send the CFB64_IV_BAD\n     command except in the\
    \ case of a protocol violation where the IV\n     sent was not of the correct\
    \ length (i.e., 8 bytes).\n"
- title: 3.  Implementation Rules
  contents:
  - "3.  Implementation Rules\n   Once a CFB64_IV_OK command has been received, the\
    \ WILL ENCRYPT side\n   of the connection should do keyid negotiation using the\
    \ ENC_KEYID\n   command.  Once the keyid negotiation has successfully identified\
    \ a\n   common keyid, then START and END commands may be sent by the side of\n\
    \   the connection that is WILL ENCRYPT.  Data will be encrypted using\n   the\
    \ DES 64 bit Cipher Feedback algorithm.\n   If encryption (decryption) is turned\
    \ off and back on again, and the\n   same keyid is used when re-starting the encryption\
    \ (decryption), the\n   intervening clear text must not change the state of the\
    \ encryption\n   (decryption) machine.\n   If a START command is sent (received)\
    \ with a different keyid, the\n   encryption (decryption) machine must be re-initialized\
    \ immediately\n   following the end of the START command with the new key and\
    \ the\n   initial vector sent (received) in the last CFB64_IV command.\n   If\
    \ a new CFB64_IV command is sent (received), and encryption\n   (decryption) is\
    \ enabled, the encryption (decryption) machine must be\n   re-initialized immediately\
    \ following the end of the CFB64_IV command\n   with the new initial vector, and\
    \ the keyid sent (received) in the\n   last START command.\n   If encryption (decryption)\
    \ is not enabled when a CFB64_IV command is\n   sent (received), the encryption\
    \ (decryption) machine must be re-\n   initialized after the next START command,\
    \ with the keyid sent\n   (received) in that START command, and the initial vector\
    \ sent\n   (received) in this CFB64_IV command.\n"
- title: 4.  Algorithm
  contents:
  - "4.  Algorithm\n   Given that V[i] is the initial 64 bit vector, V[n] is the nth\
    \ 64 bit\n   vector, D[n] is the nth chunk of 64 bits of data to encrypt\n   (decrypt),\
    \ and O[n] is the nth chunk of 64 bits of encrypted\n   (decrypted) data, then:\n\
    \      V[0] = DES(V[i], key)\n      O[n] = D[n] <exclusive or> V[n]\n      V[n+1]\
    \ = DES(O[n], key)\n"
- title: 5.  Integration with the AUTHENTICATION telnet option
  contents:
  - "5.  Integration with the AUTHENTICATION telnet option\n   As noted in the telnet\
    \ ENCRYPTION option specifications, a keyid\n   value of zero indicates the default\
    \ encryption key, as might be\n   derived from the telnet AUTHENTICATION option.\
    \  If the default\n   encryption key negotiated as a result of the telnet AUTHENTICATION\n\
    \   option contains less than 8 bytes, then the DES_CFB64 option must not\n  \
    \ be offered or used as a valid telnet encryption option.  If the\n   encryption\
    \ key negotiated as a result of the telnet AUTHENTICATION\n   option is greater\
    \ than 16 bytes the first 8 bytes of the key should\n   be used as keyid 0 for\
    \ data sent from the telnet client to the telnet\n   server, and the second 8\
    \ bytes of the key should be used as keyid 0\n   for data sent by the telnet server\
    \ to the telnet client.  Otherwise,\n   the first 8 bytes of the encryption key\
    \ is used as keyid zero for the\n   telnet ENCRYPTION option in both directions\
    \ (with the client as WILL\n   ENCRYPT and the server as WILL ENCRYPT).\n   In\
    \ all cases, if the key negotiated by the telnet AUTHENTICATION\n   option was\
    \ not a DES key, the key used by the DES_CFB64 must have its\n   parity corrected\
    \ after it is determined using the above algorithm.\n   Note that the above algorithm\
    \ assumes that it is safe to use a non-\n   DES key (or part of a non-DES key)\
    \ as a DES key.  This is not\n   necessarily true of all cipher systems, but we\
    \ specify this behaviour\n   as the default since it is true for most authentication\
    \ systems in\n   popular use today, and for compatibility with existing\n   implementations.\
    \  New telnet AUTHENTICATION mechanisms may specify\n   alternative methods for\
    \ determining the keys to be used for this\n   cipher suite in their specification,\
    \ if the session key negotiated by\n   that authentication mechanism is not a\
    \ DES key and and where this\n   algorithm may not be safely used.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Encryption using Cipher Feedback does not ensure\
    \ data integrity; the\n   active attacker has a limited ability to modify text,\
    \ if he can\n   predict the clear-text that was being transmitted.  The limitations\n\
    \   faced by the attacker (that only 8 bytes can be modified at a time,\n   and\
    \ the following 8-byte block of data will be corrupted, thus making\n   detection\
    \ likely) are significant, but it is possible that an active\n   attacker still\
    \ might be able to exploit this weakness.\n   The tradeoff here is that adding\
    \ a message authentication code (MAC)\n   will significantly increase the number\
    \ of bytes needed to send a\n   single character in the telnet protocol, which\
    \ will impact\n   performance on slow (i.e. dialup) links.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   This document was originally written by Dave Borman of\
    \ Cray Research\n   with the assistance of the IETF Telnet Working Group.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Theodore Ts'o, Editor\n   VA Linux Systems\n   43 Pleasant\
    \ St.\n   Medford, MA 02155\n   Phone: (781) 391-3464\n   EMail: tytso@mit.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
