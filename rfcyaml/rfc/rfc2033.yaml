- title: __initial_text__
  contents:
  - '                      Local Mail Transfer Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   SMTP [SMTP] [HOST-REQ] and its service extensions [ESMTP] provide\
    \ a\n   mechanism for transferring mail reliably and efficiently.  The design\n\
    \   of the SMTP protocol effectively requires the server to manage a mail\n  \
    \ delivery queue.\n   In some limited circumstances, outside the area of mail\
    \ exchange\n   between independent hosts on public networks, it is desirable to\n\
    \   implement a system where a mail receiver does not manage a queue.\n   This\
    \ document describes the LMTP protocol for transporting mail into\n   such systems.\n\
    \   Although LMTP is an alternative protocol to ESMTP, it uses (with a\n   few\
    \ changes) the syntax and semantics of ESMTP.  This design permits\n   LMTP to\
    \ utilize the extensions defined for ESMTP.  LMTP should be\n   used only by specific\
    \ prior arrangement and configuration, and it\n   MUST NOT be used on TCP port\
    \ 25.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Abstract ................................................\
    \    1\n   2.   Conventions Used in this Document .......................    2\n\
    \   3.   Introduction and Overview ...............................    2\n   4.\
    \   The LMTP protocol .......................................    3\n   4.1. The\
    \ LHLO, HELO and EHLO commands ........................    4\n   4.2. The DATA\
    \ command ........................................    4\n   4.3. The BDAT command\
    \ ........................................    5\n   5.   Implementation requirements\
    \ .............................    6\n   6.   Acknowledgments .........................................\
    \    6\n   7.   References ..............................................    7\n\
    \   8.   Security Considerations .................................    7\n   9.\
    \   Author's Address ........................................    7\n"
- title: 2.  Conventions Used in this Document
  contents:
  - "2.  Conventions Used in this Document\n   In examples, \"C:\" and \"S:\" indicate\
    \ lines sent by the client and\n   server respectively.\n"
- title: 3.  Introduction and Overview
  contents:
  - "3.  Introduction and Overview\n   The design of the SMTP protocol effectively\
    \ requires the server to\n   manage a mail delivery queue.  This is because a\
    \ single mail\n   transaction may specify multiple recipients and the final \"\
    .\" of the\n   DATA command may return only one reply code, to indicate the status\n\
    \   of the entire transaction.  If, for example, a server is given a\n   transaction\
    \ for two recipients, delivery to the first succeeds, and\n   delivery to the\
    \ second encounters a temporary failure condition,\n   there is no mechanism to\
    \ inform the client of the situation.  The\n   server must queue the message and\
    \ later attempt to deliver it to the\n   second recipient.\n   This queuing requirement\
    \ is beneficial in the situation for which\n   SMTP was originally designed: store-and-forward\
    \ relay of mail between\n   networked hosts.  In some limited situations, it is\
    \ desirable to have\n   a server which does not manage a queue, instead relying\
    \ on the client\n   to perform queue management.  As an example, consider a hypothetical\n\
    \   host with a mail system designed as follows:\n                    TCP port\
    \ 25 +-----------------+\n         ---------------------->|                 |\
    \  #########\n                                |      Queue      |<># Mail  #\n\
    \         TCP port 25            |     Manager     |  # Queue #\n         <----------------------|\
    \                 |  #########\n                                +-----------------+\n\
    \                            Local *  ^ Local    * Local\n                   \
    \           IPC *  | IPC      * IPC\n                                  *  |  \
    \        *\n                                  *  |          *\n              \
    \                    *  |          *\n                                  V  | \
    \         V\n                  Non-SMTP    +----------+     +----------+\n   \
    \               Protocol    | Gateway  |     |  Local   |  #########\n       \
    \       <==============>| Delivery |     | Delivery |>># Mail  #\n           \
    \                   |  Agent   |     |  Agent   |  # Spool #\n               \
    \               +----------+     +----------+  #########\n   The host's mail system\
    \ has three independent, communicating\n   subsystems.  The first is a queue manager,\
    \ which acts as a\n   traditional SMTP agent, transferring messages to and from\
    \ other hosts\n   over TCP and managing a mail queue in persistent storage.  The\
    \ other\n   two are agents which handle delivery for addresses in domains for\n\
    \   which the host takes responsibility.  One agent performs gatewaying\n   to\
    \ and from some other mail system.  The other agent delivers the\n   message into\
    \ a persistent mail spool.\n   It would be desirable to use SMTP over a local\
    \ inter-process\n   communication channel to transfer messages from the queue\
    \ manager to\n   the delivery agents.  It would, however, significantly increase\
    \ the\n   complexity of the delivery agents to require them to manage their own\n\
    \   mail queues.\n   The common practice of invoking a delivery agent with the\
    \ envelope\n   address(es) as command-line arguments, then having the delivery\
    \ agent\n   communicate status with an exit code has three serious problems: the\n\
    \   agent can only return one exit code to be applied to all recipients,\n   it\
    \ is difficult to extend the interface to deal with ESMTP extensions\n   such\
    \ as DSN [DSN] and ENHANCEDSTATUSCODES [ENHANCEDSTATUSCODES], and\n   exits performed\
    \ by system libraries due to temporary conditions\n   frequently get interpreted\
    \ as permanent errors.\n   The LMTP protocol causes the server to return, after\
    \ the final \".\" of\n   the DATA command, one reply for each recipient.  Therefore,\
    \ if the\n   queue manager is configured to use LMTP instead of SMTP when\n  \
    \ transferring messages to the delivery agents, then the delivery\n   agents may\
    \ attempt delivery to each recipient after the final \".\" and\n   individually\
    \ report the status for each recipient.  Connections which\n   should use the\
    \ LMTP protocol are drawn in the diagram above using\n   asterisks.\n   Note that\
    \ it is not beneficial to use the LMTP protocol when\n   transferring messages\
    \ to the queue manager, either from the network\n   or from a delivery agent.\
    \  The queue manager does implement a mail\n   queue, so it may store the message\
    \ and take responsibility for later\n   delivering it.\n"
- title: 4.  The LMTP protocol
  contents:
  - "4.  The LMTP protocol\n   The LMTP protocol is identical to the SMTP protocol\
    \ SMTP [SMTP]\n   [HOST-REQ] with its service extensions [ESMTP], except as modified\
    \ by\n   this document.\n   A \"successful\" RCPT command is defined as an RCPT\
    \ command which\n   returns a Positive Completion reply code.\n   A \"Positive\
    \ Completion reply code\" is defined in Appendix E of STD\n   10, RFC 821 [SMTP]\
    \ as a reply code which \"2\" as the first digit.\n"
- title: 4.1.  The LHLO, HELO and EHLO commands
  contents:
  - "4.1.  The LHLO, HELO and EHLO commands\n   The HELO and EHLO commands of ESMTP\
    \ are replaced by the LHLO command.\n   This permits a misconfiguration where\
    \ both parties are not using the\n   same protocol to be detected.\n   The LHLO\
    \ command has identical semantics to the EHLO command of ESMTP\n   [ESMTP].\n\
    \   The HELO and EHLO commands of ESMTP are not present in LMTP.  A LMTP\n   server\
    \ MUST NOT return a Postive Completion reply code to these\n   commands.  The\
    \ 500 reply code is recommended.\n"
- title: 4.2.  The DATA command
  contents:
  - "4.2.  The DATA command\n   In the LMTP protocol, there is one additional restriction\
    \ placed on\n   the DATA command, and one change to how replies to the final \"\
    .\" are\n   sent.\n   The additional restriction is that when there have been\
    \ no successful\n   RCPT commands in the mail transaction, the DATA command MUST\
    \ fail\n   with a 503 reply code.\n   The change is that after the final \".\"\
    , the server returns one reply\n   for each previously successful RCPT command\
    \ in the mail transaction,\n   in the order that the RCPT commands were issued.\
    \  Even if there were\n   multiple successful RCPT commands giving the same forward-path,\
    \ there\n   must be one reply for each successful RCPT command.\n   When one of\
    \ these replies to the final \".\" is a Positive Completion\n   reply, the server\
    \ is accepting responsibility for delivering or\n   relying the message to the\
    \ corresponding recipient.  It must take\n   this responsibility seriously, i.e.,\
    \ it MUST NOT lose the message for\n   frivolous reasons, e.g., because the host\
    \ later crashes or because of\n   a predictable resource shortage.\n   A multiline\
    \ reply is still considered a single reply and corresponds\n   to a single RCPT\
    \ command.\n   EXAMPLE:\n   S: 220 foo.edu LMTP server ready\n   C: LHLO foo.edu\n\
    \   S: 250-foo.edu\n   S: 250-PIPELINING\n   S: 250 SIZE\n   C: MAIL FROM:<chris@bar.com>\n\
    \   S: 250 OK\n   C: RCPT TO:<pat@foo.edu>\n   S: 250 OK\n   C: RCPT TO:<jones@foo.edu>\n\
    \   S: 550 No such user here\n   C: RCPT TO:<green@foo.edu>\n   S: 250 OK\n  \
    \ C: DATA\n   S: 354 Start mail input; end with <CRLF>.<CRLF>\n   C: Blah blah\
    \ blah...\n   C: ...etc. etc. etc.\n   C: .\n   S: 250 OK\n   S: 452 <green@foo.edu>\
    \ is temporarily over quota\n   C: QUIT\n   S: 221 foo.edu closing connection\n"
- title: 'NOTE: in the above example, the domain names of both the client and'
  contents:
  - "NOTE: in the above example, the domain names of both the client and\n   server\
    \ are identical.  This is because in the example the client and\n   server are\
    \ different subsystems of the same mail domain.\n"
- title: 4.3.  The BDAT command
  contents:
  - "4.3.  The BDAT command\n   If the server supports the ESMTP CHUNKING extension\
    \ [BINARYMIME], a\n   BDAT command containing the LAST parameter returns one reply\
    \ for each\n   previously successful RCPT command in the mail transaction, in\
    \ the\n   order that the RCPT commands were issued.  Even if there were\n   multiple\
    \ successful RCPT commands giving the same forward-path, there\n   must be one\
    \ reply for each successful RCPT command.  If there were no\n   previously successful\
    \ RCPT commands in the mail transaction, then the\n   BDAT LAST command returns\
    \ zero replies.\n   When one of these replies to the BDAT LAST command is a Positive\n\
    \   Completion reply, the server is accepting responsibility for\n   delivering\
    \ or relaying the message to the corresponding recipient.\n   It must take this\
    \ responsibility seriously, i.e., it MUST NOT lose\n   the message for frivolous\
    \ reasons, e.g., because the host later\n   crashes or because of a predictable\
    \ resource shortage.\n   A multiline reply is still considered a single reply\
    \ and corresponds\n   to a single RCPT command.\n   The behavior of BDAT commands\
    \ without the LAST parameter is not\n   changed; they still return exactly one\
    \ reply.\n"
- title: 5.  Implementation requirements
  contents:
  - "5.  Implementation requirements\n   As LMTP is a different protocol than SMTP,\
    \ it MUST NOT be used on the\n   TCP service port 25.\n   A server implementation\
    \ MUST implement the PIPELINING [PIPELINING]\n   and ENHANCEDSTATUSCODES [ENHANCEDSTATUSCODES]\
    \ ESMTP extensions.  A\n   server implementation SHOULD implement the 8BITMIME\
    \ [8BITMIME]\n   extension.\n   Use of LMTP can aggravate the situation described\
    \ in [DUP-MSGS].  To\n   avoid this synchronization problem, the following requirements\
    \ are\n   made of implementations:\n   A server implementation which is capable\
    \ of quickly accepting\n   responsibility for delivering or relaying a message\
    \ to multiple\n   recipients and which is capable of sending any necessary notification\n\
    \   messages SHOULD NOT implement the LMTP protocol.\n   The LMTP protocol SHOULD\
    \ NOT be used over wide area networks.\n   The server SHOULD send each reply as\
    \ soon as possible.  If it is\n   going to spend a nontrivial amount of time handling\
    \ delivery for the\n   next recipient, it SHOULD flush any outgoing LMTP buffer,\
    \ so the\n   reply may be quickly received by the client.\n   The client SHOULD\
    \ process the replies as they come in, instead of\n   waiting for all of the replies\
    \ to arrive before processing any of\n   them.  If the connection closes after\
    \ replies for some, but not all,\n   recipients have arrived, the client MUST\
    \ process the replies that\n   arrived and treat the rest as temporary failures.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This work is a refinement of the MULT extension, which\
    \ was invented\n   by Jeff Michaud and was used in implementing gateways to the\
    \ Mail-11\n   mail system.\n   Many thanks to Matt Thomas for assisting me in\
    \ understanding the\n   semantics of the Mail-11 MULT extension.\n"
- title: 7.  References
  contents:
  - "7.  References\n   [8BITMIME] Klensin, J., et. al, \"SMTP Service Extension for\
    \ 8bit-MIME\n       transport\", RFC 1652, July 1994.\n   [BINARYMIME] Vaudreuil,\
    \ G., \"SMTP Service Extensions for Transmission\n       of Large and Binary MIME\
    \ Messages\", RFC 1830, August 1995.\n   [DSN] Moore, K., Vaudreuil, G., \"An\
    \ Extensible Message Format for\n       Delivery Status Notifications\", RFC 1894,\
    \ January 1996.\n   [DUP-MSGS] Partridge, C., \"Duplicate messages and SMTP\"\
    , RFC 1047,\n       February 1988.\n   [ENHANCEDSTATUSCODES] Freed, N., \"SMTP\
    \ Service Extension for\n       Returning Enhanced Error Codes\", RFC 2034, October\
    \ 1996.\n   [ESMTP] Rose, M., Stefferud, E., Crocker, C., Klensin, J., Freed,\
    \ N.,\n       \"SMTP Service Extensions\", RFC 1869, November 1995.\n   [HOST-REQ]\
    \ Braden, R., \"Requirements for Internet hosts - application\n       and support\"\
    , STD 3, RFC 1123 section 5, October 1989.\n   [PIPELINING] Freed, N., Cargille,\
    \ A, \"SMTP Service Extension for\n       Command Pipelining\", RFC 1854, October\
    \ 1995.\n   [SMTP] Postel, J., \"Simple Mail Transfer Protocol\", STD 10, RFC\
    \ 821,\n       August 1982.\n   There are no known security issues with the issues\
    \ in this memo.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   John G. Myers\n   Carnegie-Mellon University\n   5000\
    \ Forbes Ave.\n   Pittsburgh PA, 15213-3890\n   EMail: jgm+@cmu.edu\n"
