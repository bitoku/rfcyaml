- title: __initial_text__
  contents:
  - '                   Opportunistic Wireless Encryption

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo specifies an extension to IEEE Std 802.11 to provide for\n\
    \   opportunistic (unauthenticated) encryption to the wireless media.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8110.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Notation  . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   2.  Background  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n   3.  802.11 Network Access . . . . . . . . . . . . . . . . . . .\
    \ .   4\n   4.  Opportunistic Wireless Encryption . . . . . . . . . . . . . .\
    \   5\n     4.1.  Cryptography  . . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n     4.2.  OWE Discovery . . . . . . . . . . . . . . . . . . . . . .   6\n\
    \     4.3.  OWE Association . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \   4.4.  OWE Post-Association  . . . . . . . . . . . . . . . . . .   8\n    \
    \ 4.5.  OWE PMK Caching . . . . . . . . . . . . . . . . . . . . .  10\n   5. \
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10\n   6.  Implementation\
    \ Considerations . . . . . . . . . . . . . . . .  10\n   7.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  11\n   8.  References  . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  11\n     8.1.  Normative References  .\
    \ . . . . . . . . . . . . . . . . .  11\n     8.2.  Informative References  .\
    \ . . . . . . . . . . . . . . . .  12\n   Authors' Addresses  . . . . . . . .\
    \ . . . . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo describes Opportunistic Wireless Encryption (OWE)\
    \ -- a mode\n   of opportunistic security [RFC7435] for IEEE Std 802.11 that provides\n\
    \   encryption of the wireless medium but no authentication.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1.2.  Notation
  contents:
  - "1.2.  Notation\n   This memo uses the following notation:\n   y = F(X)\n    \
    \   An element-to-scalar mapping function.  For an elliptic curve\n       group,\
    \ it takes a point on the curve and returns the\n       x-coordinate; for a finite\
    \ field element, it is the identity\n       function, just returning the element\
    \ itself.\n   Z = DH(x,Y)\n       For an elliptic curve, DH(x,Y) is the multiplication\
    \ of point Y\n       by the scalar value x, creating a point on the curve Z; for\n\
    \       finite field cryptography, DH(x,Y) is an exponentiation of\n       element\
    \ Y to the power of x (implied modulo a field defining\n       prime, p) resulting\
    \ in an element Z.\n   a = len(b)\n       Indicates the length in bits of the\
    \ string b.\n"
- title: 2.  Background
  contents:
  - "2.  Background\n   Internet access has become an expected service at many locations\
    \ --\n   for example, coffee shops, airports, and hotels.  In many cases, this\n\
    \   is offered over \"Open\" (unencrypted) wireless networks, because\n   distributing\
    \ a passphrase (or using other authentication solutions)\n   is not convenient\
    \ or realistic.  Ideally, users would always use a\n   VPN when using an untrusted\
    \ network, but often they don't.  This\n   leaves their traffic vulnerable to\
    \ sniffing attacks, for example,\n   from someone in the adjacent hotel room running\
    \ Wireshark, pervasive\n   monitors, etc.\n   In addition, many businesses (for\
    \ example, coffee shops and bars)\n   offer free Wi-Fi as an inducement to customers\
    \ to enter and remain in\n   the premises.  Many customers will use the availability\
    \ of free Wi-Fi\n   as a deciding factor in which business to patronize.  Since\
    \ these\n   businesses are not Internet service providers, they are often\n  \
    \ unwilling and/or unqualified to perform complex configuration on\n   their network.\
    \  In addition, customers are generally unwilling to do\n   complicated provisioning\
    \ on their devices just to obtain free Wi-Fi.\n   This leads to a popular deployment\
    \ technique -- a network protected\n   using a shared and public Pre-Shared Key\
    \ (PSK) that is printed on a\n   sandwich board at the entrance, on a chalkboard\
    \ on the wall, or on a\n   menu.  The PSK is used in a cryptographic handshake,\
    \ defined in\n   [IEEE802.11], called the \"4-way handshake\" to prove knowledge\
    \ of the\n   PSK and derive traffic encryption keys for bulk wireless data.\n\
    \   The belief is that this protects the wireless medium from passive\n   sniffing\
    \ and simple attacks.  That belief is erroneous.  Since the\n   PSK is known by\
    \ everyone, it is possible for a passive attacker to\n   observe the 4-way handshake\
    \ and compute the traffic encryption keys\n   used by a client and access point\
    \ (AP).  If the attacker is too late\n   to observe this exchange, he can issue\
    \ a forged \"deauthenticate\"\n   frame that will cause the client and/or AP to\
    \ reset the 802.11 state\n   machine and cause them to go through the 4-way handshake\
    \ again,\n   thereby allowing the passive attacker to determine the traffic keys.\n\
    \   With OWE, the client and AP perform a Diffie-Hellman key exchange\n   during\
    \ the access procedure and use the resulting pairwise secret\n   with the 4-way\
    \ handshake instead of using a shared and public PSK in\n   the 4-way handshake.\n\
    \   OWE requires no special configuration or user interaction but\n   provides\
    \ a higher level of security than a common, shared, and public\n   PSK.  OWE not\
    \ only provides more security to the end user, it is also\n   easier to use both\
    \ for the provider and the end user because there\n   are no public keys to maintain,\
    \ share, or manage.\n"
- title: 3.  802.11 Network Access
  contents:
  - "3.  802.11 Network Access\n   Wi-Fi access points (APs) advertise their presence\
    \ through frames\n   called \"beacons\".  These frames inform clients within earshot\
    \ of the\n   SSID (Service Set Identifier) the AP is advertising, the AP's Media\n\
    \   Access Control (MAC) address (known as its \"BSSID\" (Basic Service Set\n\
    \   Identifier)), security policy governing access, the symmetric ciphers\n  \
    \ it uses for unicast and broadcast frames, QoS information, as well as\n   support\
    \ for other optional features of [IEEE802.11].  Wi-Fi clients\n   can actively\
    \ discover APs by issuing \"probe requests\", which are\n   queries for APs that\
    \ respond with \"probe responses\".  A probe\n   response carries essentially\
    \ the same information as a beacon.\n   After an AP is discovered by a client,\
    \ actively through probing or\n   passively through beacons, the client initiates\
    \ a two-step method to\n   gain network access.  The first step is \"802.11 authentication\"\
    .  For\n   most methods of access, this is an empty exchange known as \"Open\n\
    \   Authentication\" -- basically, the client says, \"authenticate me\", and\n\
    \   the AP responds, \"ok, you're authenticated\".  After 802.11\n   authentication\
    \ is 802.11 association, in which the client requests\n   network access from\
    \ an AP (the SSID, a selection of the type of\n   subsequent authentication to\
    \ be made, any pairwise and group ciphers,\n   etc.) using an 802.11 association\
    \ request.  The AP acknowledges the\n   request with an 802.11 association response.\n\
    \   If the network is Open (no authentication and no encryption), the\n   client\
    \ has network access immediately after completion of 802.11\n   association. \
    \ If the network enforces PSK authentication, the 4-way\n   handshake is initiated\
    \ by the AP using the PSK to authenticate the\n   client and derive traffic encryption\
    \ keys.\n   To add an opportunistic encryption mode of access to [IEEE802.11],\
    \ it\n   is necessary to perform a Diffie-Hellman key exchange during 802.11\n\
    \   authentication and use the resulting pairwise secret with the 4-way\n   handshake.\n"
- title: 4.  Opportunistic Wireless Encryption
  contents:
  - '4.  Opportunistic Wireless Encryption

    '
- title: 4.1.  Cryptography
  contents:
  - "4.1.  Cryptography\n   Performing a Diffie-Hellman key exchange requires agreement\
    \ on a\n   domain parameter set in which to perform the exchange.  OWE uses a\n\
    \   registry (see [IKE-IANA]) to map an integer into a complete domain\n   parameter\
    \ set.  OWE supports both Elliptic Curve Cryptography (ECC)\n   and Finite Field\
    \ Cryptography (FFC).\n   OWE uses a hash algorithm for generation of a secret\
    \ and a secret\n   identifier.  The particular hash algorithm depends on the group\n\
    \   chosen for the Diffie-Hellman.  For ECC, the hash algorithm depends\n   on\
    \ the size of the prime defining the curve p:\n   o  SHA-256: when len(p) <= 256\n\
    \   o  SHA-384: when 256 < len(p) <= 384\n   o  SHA-512: when 384 < len(p)\n \
    \  For FFC, the hash algorithm depends on the prime, p, defining the\n   finite\
    \ field:\n   o  SHA-256: when len(p) <= 2048\n   o  SHA-384: when 2048 < len(p)\
    \ <= 3072\n   o  SHA-512: when 3072 < len(p)\n"
- title: 4.2.  OWE Discovery
  contents:
  - "4.2.  OWE Discovery\n   An access point advertises support for OWE using an Authentication\n\
    \   and Key Management (AKM) suite selector for OWE.  This AKM is\n   illustrated\
    \ in Table 1 and is added to the Robust Security Network\n   (RSN) element, defined\
    \ in [IEEE802.11], in all beacons and probe\n   response frames the AP issues.\n\
    \   +----------+--------+-------------------+-------------+-------------+\n  \
    \ |   OUI    | Suite  |   Authentication  |     Key     |     Key     |\n   |\
    \          |  Type  |        Type       |  Management |  derivation |\n   |  \
    \        |        |                   |     Type    |     type    |\n   +----------+--------+-------------------+-------------+-------------+\n\
    \   | 00-0F-AC |   18   |   Opportunistic   |     This    |  [RFC5869]  |\n  \
    \ |          |        |      Wireless     |   document  |             |\n   |\
    \          |        |     Encryption    |             |             |\n   +----------+--------+-------------------+-------------+-------------+\n\
    \                             Table 1: OWE AKM\n   Once a client discovers an\
    \ OWE-compliant AP, it performs \"Open\n   System\" 802.11 authentication as defined\
    \ in [IEEE802.11], and it then\n   proceeds to 802.11 association.\n"
- title: 4.3.  OWE Association
  contents:
  - "4.3.  OWE Association\n   Information is added to 802.11 association requests\
    \ and responses\n   using TLVs that [IEEE802.11] calls \"elements\".  Each element\
    \ has an\n   \"Element ID\" (including any Element ID extension), a length, and\
    \ a\n   value field that is element specific.  These elements are appended to\n\
    \   each other to construct 802.11 association requests and responses.\n   OWE\
    \ adds the Diffie-Hellman Parameter element (see Figure 1) to\n   802.11 association\
    \ requests and responses.  The client adds her\n   public key in the 802.11 association\
    \ request, and the AP adds his\n   public key in the 802.11 association response.\n\
    \      +------------+----------+------------+------------------------+\n     \
    \ | Element ID |  Length  | Element ID |   element-specific     |\n      |   \
    \         |          |  Extension |         data           |\n      +------------+----------+------------+---------+--------------+\n\
    \      |    255     | variable |     32     | group   |  public key  |\n     \
    \ +------------+----------+------------+---------+--------------+\n          \
    \    Figure 1: The Diffie-Hellman Parameter Element\n   where:\n   o  group is\
    \ an unsigned two-octet integer defined in [IKE-IANA], in\n      little-endian\
    \ format, that identifies a domain parameter set;\n   o  public key is an octet\
    \ string representing the Diffie-Hellman\n      public key; and,\n   o  Element\
    \ ID, Length, and Element ID Extension are all single-octet\n      integers.\n\
    \   The encoding of the public key depends on its type.  FFC elements\n   SHALL\
    \ be encoded per the integer-to-octet-string conversion technique\n   of [RFC6090].\
    \  For ECC elements, the encoding depends on the\n   definition of the curve,\
    \ either that in [RFC6090] or [RFC7748].  If\n   the public key is from a curve\
    \ defined in [RFC6090], compact\n   representation SHALL be used.\n   A client\
    \ wishing to do OWE MUST indicate the OWE AKM in the RSN\n   element portion of\
    \ the 802.11 association request and MUST include a\n   Diffie-Hellman Parameter\
    \ element to its 802.11 association request.\n   An AP agreeing to do OWE MUST\
    \ include the OWE AKM in the RSN element\n   portion of the 802.11 association\
    \ response.  If \"PMK caching\" (see\n   Section 4.5) is not performed, it MUST\
    \ also include a Diffie-Hellman\n   Parameter element.  If \"PMK caching\" is\
    \ not being performed, a client\n   MUST discard any 802.11 association response\
    \ that indicates the OWE\n   AKM in the RSN element but does not have not a Diffie-Hellman\n\
    \   Parameter element.\n   For interoperability purposes, a compliant implementation\
    \ MUST\n   support group nineteen (19), a 256-bit elliptic curve group.  If the\n\
    \   AP does not support the group indicated in the received 802.11\n   association\
    \ request, it MUST respond with an 802.11 association\n   response with a status\
    \ code of seventy-seven (77) indicating an\n   unsupported finite cyclic group.\
    \  A client that receives an 802.11\n   association response with a status code\
    \ of seventy-seven SHOULD retry\n   OWE with a different supported group and,\
    \ due to the unsecured nature\n   of 802.11 association, MAY request association\
    \ again using the group\n   that resulted in failure.  This failure SHOULD be\
    \ logged, and if the\n   client abandons association due to the failure to agree\
    \ on any group,\n   notification of this fact SHOULD be provided to the user.\n\
    \   Received Diffie-Hellman Parameter elements are checked for validity\n   upon\
    \ receipt.  For ECC, a validity check depends on the curve\n   definition, either\
    \ that in [RFC6090] or [RFC7748].  For FFC, elements\n   are checked that they\
    \ are between one (1) and one (1) less than the\n   prime, p, exclusive (i.e.,\
    \ 1 < element < p-1).  Invalid received\n   Diffie-Hellman keys MUST result in\
    \ unsuccessful association, a\n   failure of OWE, and a reset of the 802.11 state\
    \ machine.  Due to the\n   unsecured nature of 802.11 association, a client SHOULD\
    \ retry OWE a\n   number of times (this memo does not specify the number of times).\n\
    \   This failure should be logged, and if the client abandons association\n  \
    \ due to the (repeated) receipt of invalid elements, notification of\n   this\
    \ fact should be provided to the user.\n"
- title: 4.4.  OWE Post-Association
  contents:
  - "4.4.  OWE Post-Association\n   Once the client and AP have finished 802.11 association,\
    \ they then\n   complete the Diffie-Hellman key exchange and create a Pairwise\
    \ Master\n   Key (PMK) and its associated identifier, PMKID [IEEE802.11].  Given\
    \ a\n   private key x and the peer's (AP's if client, client's if AP) public\n\
    \   key Y, the following are generated:\n      z = F(DH(x, Y))\n      prk = HKDF-extract(C\
    \ | A | group, z)\n      PMK = HKDF-expand(prk, \"OWE Key Generation\", n)\n \
    \  where HKDF-expand() and HKDF-extract() are defined in [RFC5869]; \"C |\n  \
    \ A | group\" is a concatenation of the client's Diffie-Hellman public\n   key,\
    \ the AP's Diffie-Hellman public key (from the 802.11 association\n   request\
    \ and response, respectively), and the two-octet group from the\n   Diffie-Hellman\
    \ Parameter element (in little-endian format) and is\n   passed as the salt to\
    \ the HMAC-based Extract-and-Expand Key\n   Derivation Function (HKDF) using the\
    \ hash algorithm defined in\n   Section 4.1; and n is the bit length of the digest\
    \ produced by that\n   hash algorithm. z and prk SHOULD be irretrievably deleted\
    \ once the\n   PMK has been generated.\n   The PMKID is generated by hashing the\
    \ two Diffie-Hellman public keys\n   (the data, as sent and received, from the\
    \ \"public key\" portion of the\n   Diffie-Hellman Parameter element in the 802.11\
    \ association request\n   and response) and returning the leftmost 128 bits:\n\
    \      PMKID = Truncate-128(Hash(C | A))\n   where C is the client's Diffie-Hellman\
    \ public key from the 802.11\n   association request, A is the AP's Diffie-Hellman\
    \ public key from the\n   802.11 association response, and Hash is the hash algorithm\
    \ defined\n   in Section 4.1.\n   +---------+--------------+----------+-------+------------+----------+\n\
    \   |   Hash  |  Integrity   | KCK_bits |  Size |  Key-wrap  | KEK_bits |\n  \
    \ |         |  Algorithm   |          |   of  | Algorithm  |          |\n   |\
    \         |              |          |  MIC  |            |          |\n   +---------+--------------+----------+-------+------------+----------+\n\
    \   | SHA-256 | HMAC-SHA-256 |   128    |   16  |  NIST AES  |   128    |\n  \
    \ |         |              |          |       |  Key-wrap  |          |\n   |\
    \ SHA-384 | HMAC-SHA-384 |   192    |   24  |  NIST AES  |   256    |\n   |  \
    \       |              |          |       |  Key-wrap  |          |\n   | SHA-512\
    \ | HMAC-SHA-521 |   256    |   32  |  NIST AES  |   256    |\n   |         |\
    \              |          |       |  Key-wrap  |          |\n   +---------+--------------+----------+-------+------------+----------+\n\
    \                Table 2: Integrity and Key Wrap Algorithms\n   Upon completion\
    \ of 802.11 association, the AP initiates the 4-way\n   handshake to the client\
    \ using the PMK generated above.  The 4-way\n   handshake generates a Key-Encrypting\
    \ Key (KEK), a Key-Confirmation\n   Key (KCK), and a Message Integrity Code (MIC)\
    \ to use for protection\n   of the frames that define the 4-way handshake.  The\
    \ algorithms and\n   key lengths used in the 4-way handshake depend on the hash\
    \ algorithm\n   selected in Section 4.1 and are listed in Table 2.\n   The result\
    \ of the 4-way handshake is encryption keys to protect bulk\n   unicast data and\
    \ broadcast data.  If the 4-way handshake fails, this\n   information SHOULD be\
    \ presented to the user.\n"
- title: 4.5.  OWE PMK Caching
  contents:
  - "4.5.  OWE PMK Caching\n   [IEEE802.11] defines \"PMK caching\" where a client\
    \ and access point\n   can cache a PMK for a certain period of time and reuse\
    \ it with the\n   4-way handshake after subsequent associations to bypass potentially\n\
    \   expensive authentication.  A client indicates its desire to do \"PMK\n   caching\"\
    \ by including the identifying PMKID in its 802.11 association\n   request.  If\
    \ an AP has cached the PMK identified by that PMKID, it\n   includes the PMKID\
    \ in its 802.11 association response; otherwise, it\n   ignores the PMKID and\
    \ proceeds with normal 802.11 association.  OWE\n   supports the notion of \"\
    PMK caching\".\n   Since \"PMK caching\" is indicated in the same frame as the\
    \ Diffie-\n   Hellman Parameter element is passed, a client wishing to do \"PMK\n\
    \   caching\" MUST include both in her 802.11 association request.  If the\n \
    \  AP has the PMK identified by the PMKID and wishes to perform \"PMK\n   caching\"\
    , he will include the PMKID in his 802.11 association\n   response but does not\
    \ include a Diffie-Hellman Parameter element.  If\n   the AP does not have the\
    \ PMK identified by the PMKID, it ignores the\n   PMKID and proceeds with normal\
    \ OWE 802.11 association by including a\n   Diffie-Hellman Parameter element.\n\
    \   When attempting \"PMK caching\", a client SHALL ignore any Diffie-\n   Hellman\
    \ Parameter element in an 802.11 association response whose\n   PMKID matches\
    \ that of the client-issued 802.11 association request.\n   If the 802.11 association\
    \ response does not include a PMKID, or if\n   the PMKID does not match that of\
    \ the client-issued 802.11 association\n   request, the client SHALL proceed with\
    \ normal OWE association.\n   The client SHALL ignore a PMKID in any 802.11 association\
    \ response\n   frame for which it did not include a PMKID in the corresponding\n\
    \   802.11 association request frame.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 6.  Implementation Considerations
  contents:
  - "6.  Implementation Considerations\n   OWE is a replacement for 802.11 \"Open\"\
    \ authentication.  Therefore,\n   when OWE-compliant access points are discovered,\
    \ the presentation of\n   the available SSID to users should not include special\
    \ security\n   symbols such as a \"lock icon\".  To a user, an OWE SSID is the\
    \ same as\n   \"Open\"; it simply provides more security behind the scenes.\n\
    \   When OWE is initially deployed as a replacement for an existing\n   network\
    \ that uses \"Open\" authentication or a shared and public PSK,\n   it will be\
    \ necessary to create an additional Basic Service Set\n   Identifier (BSSID) or\
    \ a new Extended Service Set (ESS) with a\n   separate Service Set Identifier\
    \ (SSID) for OWE so two distinct 802.11\n   networks can exist on the same access\
    \ point (see [IEEE802.11]).  This\n   arrangement should remain until the majority\
    \ of users have switched\n   over to OWE.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Opportunistic encryption does not provide authentication.\
    \  The client\n   will have no authenticated identity for the access point, and\
    \ vice\n   versa.  They will share pairwise traffic encryption keys and have a\n\
    \   cryptographic assurance that a frame claimed to be from the peer is\n   actually\
    \ from the peer and was not modified in flight.\n   OWE only secures data sent\
    \ over the wireless medium and does not\n   provide security for end-to-end traffic.\
    \  Users should still use\n   application-level security to achieve security end-to-end.\n\
    \   OWE is susceptible to an active attack in which an adversary\n   impersonates\
    \ an access point and induces a client to connect to it\n   via OWE while it makes\
    \ a connection to the legitimate access point.\n   In this particular attack,\
    \ the adversary is able to inspect, modify,\n   and forge any data between the\
    \ client and legitimate access point.\n   OWE is not a replacement for any authentication\
    \ protocol specified in\n   [IEEE802.11] and is not intended to be used when an\
    \ alternative that\n   provides real authentication is available.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [IEEE802.11]\n              IEEE, \"IEEE Standard\
    \ for Information technology--\n              Telecommunications and information\
    \ exchange between\n              systems Local and metropolitan area networks--Specific\n\
    \              requirements - Part 11: Wireless LAN Medium Access Control\n  \
    \            (MAC) and Physical Layer (PHY) Specifications\", IEEE Std\n     \
    \         802.11, DOI 10.1109/IEEESTD.2016.7786995.\n   [IKE-IANA] IANA, \"Transform\
    \ Type 4 - Diffie-Hellman Group Transform\n              IDs\", <http://www.iana.org/assignments/ikev2-parameters/>.\n\
    \   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC5869]\
    \  Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand\n             \
    \ Key Derivation Function (HKDF)\", RFC 5869,\n              DOI 10.17487/RFC5869,\
    \ May 2010,\n              <http://www.rfc-editor.org/info/rfc5869>.\n   [RFC6090]\
    \  McGrew, D., Igoe, K., and M. Salter, \"Fundamental Elliptic\n             \
    \ Curve Cryptography Algorithms\", RFC 6090,\n              DOI 10.17487/RFC6090,\
    \ February 2011,\n              <http://www.rfc-editor.org/info/rfc6090>.\n  \
    \ [RFC7748]  Langley, A., Hamburg, M., and S. Turner, \"Elliptic Curves\n    \
    \          for Security\", RFC 7748, DOI 10.17487/RFC7748, January\n         \
    \     2016, <http://www.rfc-editor.org/info/rfc7748>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC7435]  Dukhovni, V., \"Opportunistic Security:\
    \ Some Protection\n              Most of the Time\", RFC 7435, DOI 10.17487/RFC7435,\n\
    \              December 2014, <http://www.rfc-editor.org/info/rfc7435>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dan Harkins (editor)\n   HP Enterprise\n   3333 Scott\
    \ Boulevard\n   Santa Clara, California  95054\n   United States of America\n\
    \   Phone: +1 415 555 1212\n   Email: dharkins@arubanetworks.com\n   Warren Kumari\
    \ (editor)\n   Google\n   1600 Amphitheatre Parkway\n   Mountain View, California\
    \  94043\n   United States of America\n   Phone: +1 408 555 1212\n   Email: warren@kumari.net\n"
