- title: __initial_text__
  contents:
  - "               Connectionless Network Protocol (ISO 8473)\n              End\
    \ System to Intermediate System (ISO 9542)\n                      Management Information\
    \ Base\n                           Table of Contents\n   1. Status of this Memo\
    \ ..................................    1\n   2. Historical Perspective................................\
    \    2\n   3. Objects ..............................................    3\n  \
    \ 3.1 Format of Definitions ...............................    3\n   4. Object\
    \ Definitions ...................................    4\n   4.1 The CLNP Group\
    \ ......................................    5\n   4.1.1 The CLNP Interfaces table\
    \ .........................   14\n   4.1.2 The CLNP Routing table ............................\
    \   16\n   4.1.3 The CLNP Address Translation Tables ...............   22\n  \
    \ 4.2 The CLNP Error Group ................................   30\n   4.3 The ESIS\
    \ Group ......................................   47\n   5. Definitions ..........................................\
    \   50\n   6. Identification of OBJECT instances for use with  the\n      SNMP\
    \ .................................................   66\n   6.1 clnpAddrTable\
    \ Object Type Names .....................   67\n   6.2 clnpRoutingTable Object\
    \ Type Names ..................   67\n   6.3 clnpNetToMediaTable Object Type Names\
    \ ...............   68\n   6.4 clnpMediaToNetTable Object Type Names ...............\
    \   68\n   7. References ...........................................   69\n  \
    \ 8. Security Considerations...............................   70\n   9. Author's\
    \ Address......................................   70\n"
- title: 1.  Status of this Memo
  contents:
  - "1.  Status of this Memo\n   This memo defines an experimental portion of the\
    \ Management\n   Information Base (MIB) for use with network management protocols\
    \ in\n   TCP/IP-based internets.\n   This memo does not specify a standard for\
    \ the Internet community.\n   However, after experimentation, if sufficient consensus\
    \ is reached in\n   the Internet community, then a subsequent revision of this\
    \ document\n   may be placed in the Internet-standard MIB.\n   Distribution of\
    \ this memo is unlimited.\n"
- title: 2.  Historical Perspective
  contents:
  - "2.  Historical Perspective\n   As reported in RFC 1052, IAB Recommendations for\
    \ the Development of\n   Internet Network Management Standards [1], a two-prong\
    \ strategy for\n   network management of TCP/IP-based internets was undertaken.\
    \  In the\n   short-term, the Simple Network Management Protocol (SNMP), defined\
    \ in\n   RFC 1067, was to be used to manage nodes in the Internet community.\n\
    \   In the long-term, the use of the OSI network management framework was\n  \
    \ to be examined.  Two documents were produced to define the management\n   information:\
    \ RFC 1065, which defined the Structure of Management\n   Information (SMI), and\
    \ RFC 1066, which defined the Management\n   Information Base (MIB).  Both of\
    \ these documents were designed so as\n   to be compatible with both the SNMP\
    \ and the OSI network management\n   framework.\n   This strategy was quite successful\
    \ in the short-term: Internet-based\n   network management technology was fielded,\
    \ by both the research and\n   commercial communities, within a few months.  As\
    \ a result of this,\n   portions of the Internet community became network manageable\
    \ in a\n   timely fashion.\n   As reported in RFC 1109, Report of the Second Ad\
    \ Hoc Network\n   Management Review Group [2], the requirements of the SNMP and\
    \ the OSI\n   network management frameworks were more different than anticipated.\n\
    \   As such, the requirement for compatibility between the SMI/MIB and\n   both\
    \ frameworks was suspended.  This action permitted the operational\n   network\
    \ management framework, based on the SNMP, to respond to new\n   operational needs\
    \ in the Internet community by producing MIB-II.\n   In May of 1990, the core\
    \ documents were elevated to \"Standard\n   Protocols\" with \"Recommended\" status.\
    \  As such, the Internet-\n   standard network management framework consists of:\
    \ Structure and\n   Identification of Management Information for TCP/IP-based\
    \ internets,\n   RFC 1155 [3], which describes how managed objects contained in\
    \ the\n   MIB are defined; Management Information Base for Network Management\n\
    \   of TCP/IP-based internets, which describes the managed objects\n   contained\
    \ in the MIB, RFC 1156 [4]; and, the Simple Network\n   Management Protocol, RFC\
    \ 1157 [5], which defines the protocol used to\n   manage these objects.\n   Consistent\
    \ with the IAB directive to produce simple, workable systems\n   in the short-term,\
    \ the list of managed objects defined in the\n   Internet-standard MIB was derived\
    \ by taking only those elements which\n   are considered essential.  However,\
    \ the SMI defined three\n   extensibility mechanisms: one, the addition of new\
    \ standard objects\n   through the definitions of new versions of the MIB; two,\
    \ the addition\n   of widely-available but non-standard objects through the experimental\n\
    \   subtree; and three, the addition of private objects through the\n   enterprises\
    \ subtree.  Such additional objects can not only be used\n   for vendor-specific\
    \ elements, but also for experimentation as\n   required to further the knowledge\
    \ of which other objects are\n   essential.\n   Since the publication of the Internet-standard\
    \ MIB, experience has\n   lead to a new document, termed MIB-II [6], being defined.\n\
    \   This memo defines extensions to the MIB using the second method.  It\n   contains\
    \ definitions of managed objects used for experimentation.\n   After experimentation,\
    \ if sufficient consensus is reached in the\n   Internet community, then a subsequent\
    \ revision of this memo may be\n   placed in the Internet-standard MIB.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   This SMI\
    \ specifies the use of the basic encoding rules of ASN.1 [8],\n   subject to the\
    \ additional requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   The next section contains the specification of\
    \ all object types\n   contained in the MIB.  Following the conventions of the\
    \ companion\n   memo, the object types are defined using the following fields:\n\
    \          OBJECT:\n          -------\n               A textual name, termed the\
    \ OBJECT DESCRIPTOR, for the\n               object type, along with its corresponding\
    \ OBJECT\n               IDENTIFIER.\n          Syntax:\n               The abstract\
    \ syntax for the object type, presented using\n               ASN.1.  This must\
    \ resolve to an instance of the ASN.1\n               type ObjectSyntax defined\
    \ in the SMI.\n          Definition:\n               A textual description of\
    \ the semantics of the object\n               type.  Implementations should ensure\
    \ that their\n               interpretation of the object type fulfills this\n\
    \               definition since this MIB is intended for use in multi-\n    \
    \           vendor environments.  As such it is vital that object\n          \
    \     types have consistent meaning across all machines.\n          Access:\n\
    \               A keyword, one of read-only, read-write, write-only, or\n    \
    \           not-accessible.  Note that this designation specifies the\n      \
    \         minimum level of support required.  As a local matter,\n           \
    \    implementations may support other access types (e.g., an\n              \
    \ implementation may elect to permitting writing a variable\n               marked\
    \ herein as read-only).  Further, protocol-specific\n               \"views\"\
    \ (e.g., those implied by an SNMP community) may\n               make further\
    \ restrictions on access to a variable.\n          Status:\n               A keyword,\
    \ one of mandatory, optional, obsolete, or\n               deprecated.  Use of\
    \ deprecated implies mandatory status.\n"
- title: 4.  Object Definitions
  contents:
  - "4.  Object Definitions\n               CLNS-MIB DEFINITIONS ::= BEGIN\n     \
    \          IMPORTS\n                       experimental,  OBJECT-TYPE, Counter\n\
    \                               FROM RFC1155-SMI;\n               -- new type\
    \ of NetworkAddress\n               ClnpAddress ::=\n                   [APPLICATION\
    \ 5]\n                       IMPLICIT OCTET STRING (SIZE (1..21))\n          \
    \     clns    OBJECT IDENTIFIER ::=   { experimental 1 }\n               clnp\
    \    OBJECT IDENTIFIER ::=   { clns 1 }\n               error   OBJECT IDENTIFIER\
    \ ::=   { clns 2 }\n               echo    OBJECT IDENTIFIER ::=   { clns 3 }\n\
    \               es-is   OBJECT IDENTIFIER ::=   { clns 4 }\n               END\n\
    \   These objects can be used when the ISO Connectionless-mode Network\n   Protocol\
    \ [9] and End System to Intermediate System [10] protocols are\n   present. No\
    \ assumptions are made as to what underlying protocol is\n   being used to carry\
    \ the SNMP.\n   This memo uses the string encoding of [11] to textually describe\
    \ OSI\n   addresses.\n   The ASN.1 type ClnpAddress is used to denote an OSI address.\
    \  This\n   consists of a string of octets.  The first octet of the string\n \
    \  contains a binary value in the range of 0..20, and indicates the the\n   length\
    \ in octets of the NSAP.  Following the first octet, is the\n   NSAP, expressed\
    \ in concrete binary notation, starting with the most\n   significant octet. \
    \ A zero- length NSAP is used as a \"special\"\n   address meaning \"the default\
    \ NSAP\" (analogous to the IP address of\n   0.0.0.0).  Such an NSAP is encoded\
    \ as a single octet, containing the\n   value 0.\n   All other NSAPs are encoded\
    \ in at least 2 octets.\n"
- title: 4.1.  The CLNP Group
  contents:
  - "4.1.  The CLNP Group\n   Implementation is experimental and is recommended for\
    \ all systems\n   that support a CLNP.\n          OBJECT:\n          -------\n\
    \               clnpForwarding { clnp 1 }\n          Syntax:\n               INTEGER\
    \ {\n                    is(1),   -- entity is an intermediate system\n      \
    \              es(2),   -- entity is an end system and does not\n            \
    \                    forward PDUs\n               }\n          Definition:\n \
    \              The indication of whether this entity is active as an\n       \
    \        intermediate or end system. Only intermediate systems\n             \
    \  will forward PDUs onward that are not addressed to them.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpDefaultLifeTime { clnp\
    \ 2 }\n          Syntax:\n               INTEGER\n          Definition:\n    \
    \           The default value inserted into the Lifetime field of the\n      \
    \         CLNP PDU header of PDUs sourced by this entity.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpInReceives { clnp 3 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The total number of input PDUs received from all\n               connected\
    \ network interfaces running CLNP, including\n               errors.\n       \
    \   Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpInHdrErrors { clnp 4\
    \ }\n          Syntax:\n               Counter\n          Definition:\n      \
    \         The number of input PDUs discarded due to errors in the\n          \
    \     CLNP header, including bad checksums, version mismatch,\n              \
    \ lifetime exceeded, errors discovered in processing\n               options,\
    \ etc.\n          Access:\n               read-only.\n          Status:\n    \
    \           mandatory.\n          OBJECT:\n          -------\n               clnpInAddrErrors\
    \ { clnp 5 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of input PDUs discarded because the NSAP\n        \
    \       address in the CLNP header's destination field was not a\n           \
    \    valid NSAP to be received at this entity. This count\n               includes\
    \ addresses not understood.  For end systems, this\n               is a count\
    \ of PDUs which arrived with a destination NSAP\n               which was not\
    \ local.\n          Access:\n               read-only.\n          Status:\n  \
    \             mandatory.\n          OBJECT:\n          -------\n             \
    \  clnpForwPDUs { clnp 6 }\n          Syntax:\n               Counter\n      \
    \    Definition:\n               The number of input PDUs for which this entity\
    \ was not\n               the final destination and which an attempt was made\
    \ to\n               forward them onward.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInUnknownNLPs { clnp 7 }\n          Syntax:\n            \
    \   Counter\n          Definition:\n               The number of locally-addressed\
    \ PDUs successfully\n               received but discarded because the network\
    \ layer protocol\n               was unknown or unsupported (e.g., not CLNP or\
    \ ES-IS).\n          Access:\n               read-only.\n          Status:\n \
    \              mandatory.\n          OBJECT:\n          -------\n            \
    \   clnpInUnknownULPs { clnp 8 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of locally-addressed PDUs successfully\n\
    \               received but discarded because the upper layer protocol\n    \
    \           was unknown or unsupported (e.g., not TP4).\n          Access:\n \
    \              read-only.\n          Status:\n               mandatory.\n    \
    \      OBJECT:\n          -------\n               clnpInDiscards { clnp 9 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of input CLNP PDUs for which no problems were\n             \
    \  encountered to prevent their continued processing, but\n               were\
    \ discarded (e.g., for lack of buffer space). Note that\n               this counter\
    \ does not include any PDUs discarded while\n               awaiting re-assembly.\n\
    \          Access:\n               read-only.\n          Status:\n           \
    \    mandatory.\n          OBJECT:\n          -------\n               clnpInDelivers\
    \ { clnp 10 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The total number of input PDUs successfully delivered to\n   \
    \            the CLNS transport user.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutRequests { clnp 11 }\n          Syntax:\n             \
    \  Counter\n          Definition:\n               The total number of CLNP PDUs\
    \ which local CLNS user\n               protocols supplied to CLNP for transmission\
    \ requests.\n               This counter does not include any PDUs counted in\n\
    \               clnpForwPDUs.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutDiscards { clnp 12 }\n          Syntax:\n             \
    \  Counter\n          Definition:\n               The number of output CLNP PDUs\
    \ for which no other problem\n               was encountered to prevent their\
    \ transmission but were\n               discarded (e.g., for lack of buffer space).\
    \ Note this\n               counter includes PDUs counted in clnpForwPDUs.\n \
    \         Access:\n               read-only.\n          Status:\n            \
    \   mandatory.\n          OBJECT:\n          -------\n               clnpOutNoRoutes\
    \ { clnp 13 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of CLNP PDUs discarded because no route could\n   \
    \            be found to transmit them to their destination. This\n          \
    \     counter includes any PDUs counted in clnpForwPDUs.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpReasmTimeout { clnp 14\
    \ }\n          Syntax:\n               INTEGER\n          Definition:\n      \
    \         The maximum number of seconds which received segments are\n        \
    \       held while they are awaiting reassembly at this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpReasmReqds { clnp 15 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of CLNP segments received which needed to be\n              \
    \ reassembled at this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpReasmOKs { clnp 16 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of CLNP PDUs successfully re-assembled\
    \ at this\n               entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpReasmFails { clnp 17 }\n          Syntax:\n              \
    \ Counter\n          Definition:\n               The number of failures detected\
    \ by the CLNP reassembly\n               algorithm (for any reason: timed out,\
    \ buffer size, etc).\n          Access:\n               read-only.\n         \
    \ Status:\n               mandatory.\n          OBJECT:\n          -------\n \
    \              clnpSegOKs { clnp 18 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of CLNP PDUs that have been\
    \ successfully\n               segmented at this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpSegFails { clnp 19 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of CLNP PDUs that have been discarded because\n             \
    \  they needed to be fragmented at this entity but could\n               not.\n\
    \          Access:\n               read-only.\n          Status:\n           \
    \    mandatory.\n          OBJECT:\n          -------\n               clnpSegCreates\
    \ { clnp 20 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of CLNP PDU segments that have been generated\n   \
    \            as a result of segmentation at this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpInOpts { clnp 25 }\n  \
    \        Syntax:\n               Counter\n          Definition:\n            \
    \   The number of CLNP PDU segments that have been input with\n              \
    \ options at this entity.\n          Access:\n               read-only.\n    \
    \      Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutOpts { clnp 26 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of CLNP PDU segments that have\
    \ been generated\n               with options by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n"
- title: 4.1.1.  The CLNP Interfaces table
  contents:
  - "4.1.1.  The CLNP Interfaces table\n   The CLNP Interfaces table contains information\
    \ on the entity's\n   interfaces which are running the CLNP.\n          OBJECT:\n\
    \          -------\n               clnpAddrTable { clnp 21 }\n          Syntax:\n\
    \               SEQUENCE OF ClnpAddrEntry\n          Definition:\n           \
    \    The table of addressing information relevant to this\n               entity's\
    \ CLNP addresses.\n          Access:\n               not-accessible.\n       \
    \   Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpAddrEntry { clnpAddrTable 1 }\n          Syntax:\n       \
    \        ClnpAddrEntry :: = SEQUENCE {\n                    clnpAdEntAddr\n  \
    \                      ClnpAddress,\n                    clnpAdEntIfIndex\n  \
    \                      INTEGER,\n                    clnpAdEntReasmMaxSize\n \
    \                       INTEGER (0..65535)\n               }\n          Definition:\n\
    \               The addressing information for one of this entity's CLNP\n   \
    \            addresses.\n          Access:\n               not-accessible.\n \
    \         Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpAdEntAddr { clnpAddrEntry 1 }\n          Syntax:\n       \
    \        ClnpAddress\n          Definition:\n               The CLNP address to\
    \ which this entry's addressing\n               information pertains.\n      \
    \    Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpAdEntIfIndex { clnpAddrEntry\
    \ 2 }\n          Syntax:\n               INTEGER\n          Definition:\n    \
    \           The index value which uniquely identifies the interface\n        \
    \       to which this entry is applicable. The interface\n               identified\
    \ by a particular value of this index is the\n               same interface as\
    \ identified by the same value of\n               ifIndex.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpAdEntReasmMaxSize { clnpAddrEntry\
    \ 3 }\n          Syntax:\n               INTEGER (0..65535)\n          Definition:\n\
    \               The size of the largest CLNP PDU which this entity can\n     \
    \          re-assemble from incoming CLNP segmented PDUs received on\n       \
    \        this interface.\n          Access:\n               read-only.\n     \
    \     Status:\n               mandatory.\n"
- title: 4.1.2.  The CLNP Routing table
  contents:
  - "4.1.2.  The CLNP Routing table\n   The CLNP Routing table contains an entry for\
    \ each route known to the\n   entity.\n          OBJECT:\n          -------\n\
    \               clnpRoutingTable { clnp 22 }\n          Syntax:\n            \
    \   SEQUENCE OF ClnpRouteEntry\n          Definition:\n               This entity's\
    \ CLNP routing table.\n          Access:\n               not-accessible.\n   \
    \       Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpRouteEntry { clnpRoutingTable 1 }\n          Syntax:\n   \
    \            ClnpRouteEntry ::= SEQUENCE {\n                    clnpRouteDest\n\
    \                        ClnpAddress,\n                    clnpRouteIfIndex\n\
    \                        INTEGER,\n                    clnpRouteMetric1\n    \
    \                    INTEGER,\n                    clnpRouteMetric2\n        \
    \                INTEGER,\n                    clnpRouteMetric3\n            \
    \            INTEGER,\n                    clnpRouteMetric4\n                \
    \        INTEGER,\n                    clnpRouteNextHop\n                    \
    \    ClnpAddress,\n                    clnpRouteType\n                       \
    \ INTEGER,\n                    clnpRouteProto\n                        INTEGER,\n\
    \                    clnpRouteAge\n                        INTEGER\n         \
    \      }\n          Definition:\n               A route to a particular destination.\n\
    \          Access:\n               not-accessible.\n          Status:\n      \
    \         mandatory.\n          OBJECT:\n          -------\n               clnpRouteDest\
    \ { clnpRouteEntry 1 }\n          Syntax:\n               ClnpAddress\n      \
    \    Definition:\n               The destination CLNP address of this route.\n\
    \          Access:\n               read-write.\n          Status:\n          \
    \     mandatory.\n          OBJECT:\n          -------\n               clnpRouteIfIndex\
    \ { clnpRouteEntry 2 }\n          Syntax:\n               INTEGER\n          Definition:\n\
    \               The index value which uniquely identifies the local\n        \
    \       interface through which the next hop of this route should\n          \
    \     be reached. The interface identified by a particular\n               value\
    \ of this index is the same as identified by the same\n               value of\
    \ ifIndex.\n          Access:\n               read-write.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpRouteMetric1 { clnpRouteEntry 3 }\n          Syntax:\n              \
    \ INTEGER\n          Definition:\n               The primary routing metric for\
    \ this route. The semantics\n               of this metric are determined by the\
    \ routing-protocol\n               specified in the route's clnpRouteProto value.\
    \ If this\n               metric is not used, its value should be set to -1.\n\
    \          Access:\n               read-write.\n          Status:\n          \
    \     mandatory.\n          OBJECT:\n          -------\n               clnpRouteMetric2\
    \ { clnpRouteEntry 4 }\n          Syntax:\n               INTEGER\n          Definition:\n\
    \               An alternate routing metric for this route.  The\n           \
    \    semantics of this metric are determined by the routing-\n               protocol\
    \ specified in the route's clnpRouteProto value.\n               If this metric\
    \ is not used, its value should be set to\n               -1.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpRouteMetric3 { clnpRouteEntry\
    \ 5 }\n          Syntax:\n               INTEGER\n          Definition:\n    \
    \           An alternate routing metric for this route.  The\n               semantics\
    \ of this metric are determined by the routing-\n               protocol specified\
    \ in the route's clnpRouteProto value.\n               If this metric is not used,\
    \ its value should be set to\n               -1.\n          Access:\n        \
    \       read-write.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpRouteMetric4 { clnpRouteEntry 6 }\n   \
    \       Syntax:\n               INTEGER\n          Definition:\n             \
    \  An alternate routing metric for this route.  The\n               semantics\
    \ of this metric are determined by the routing-\n               protocol specified\
    \ in the route's clnpRouteProto value.\n               If this metric is not used,\
    \ its value should be set to\n               -1.\n          Access:\n        \
    \       read-write.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpRouteNextHop { clnpRouteEntry 7 }\n   \
    \       Syntax:\n               ClnpAddress\n          Definition:\n         \
    \      The CLNP address of the next hop of this route.\n          Access:\n  \
    \             read-write.\n          Status:\n               mandatory.\n    \
    \      OBJECT:\n          -------\n               clnpRouteType { clnpRouteEntry\
    \ 8 }\n          Syntax:\n               INTEGER {\n                    other(1),\
    \      -- none of the following\n                    invalid(2),    -- an invalidated\
    \ route\n                                   -- route to directly\n           \
    \         direct(3),     -- connected (sub-)network\n                        \
    \           -- route to a non-local\n                    remote(4)      -- host/network/sub-network\n\
    \               }\n          Definition:\n               The type of route.\n\
    \          Setting this object to the value invalid(2) has the effect of\n   \
    \       invaliding the corresponding entry in the clnpRoutingTable.\n        \
    \  That is, it effectively dissasociates the destination\n          identified\
    \ with said entry from the route identified with said\n          entry.  It is\
    \ an implementation-specific matter as to whether\n          the agent removes\
    \ an invalidated entry from the table.\n          Accordingly, management stations\
    \ must be prepared to receive\n          tabular information from agents that\
    \ corresponds to entries\n          not currently in use.  Proper interpretation\
    \ of such entries\n          requires examination of the relevant clnpRouteType\
    \ object.\n          Access:\n               read-write.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpRouteProto { clnpRouteEntry 9 }\n          Syntax:\n               INTEGER\
    \ {\n                    other(1),     -- none of the following\n            \
    \                      -- non-protocol information\n                         \
    \         --   e.g., manually\n                    local(2),     --   configured\
    \ entries\n                                  -- set via a network\n          \
    \          netmgmt(3),   --   management protocol\n                          \
    \        -- similar to ipRouteProto\n                                  -- but\
    \ omits several IP-specific\n                                  -- protocols\n\
    \                    is-is(9),\n                    ciscoIgrp(11),\n         \
    \           bbnSpfIgp(12),\n                    ospf(13),\n                  \
    \  bgp(14)\n               }\n          Definition:\n               The routing\
    \ mechanism via which this route was learned.\n               Inclusion of values\
    \ for gateway routing protocols is not\n               intended to imply that\
    \ hosts should support those\n               protocols.\n          Access:\n \
    \              read-write.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpRouteAge { clnpRouteEntry\
    \ 10 }\n          Syntax:\n               INTEGER\n          Definition:\n   \
    \            The number of seconds since this route was last updated\n       \
    \        or otherwise determined to be correct.   Note that no\n             \
    \  semantics of \"too old\" can be implied except through\n               knowledge\
    \ of the routing protocol by which the route was\n               learned.\n  \
    \        Access:\n               read-write.\n          Status:\n            \
    \   mandatory.\n"
- title: 4.1.3.  The CLNP Address Translation Tables
  contents:
  - "4.1.3.  The CLNP Address Translation Tables\n   The Address Translation tables\
    \ contain the CLNP address to physical\n   address equivalences. Some interfaces\
    \ do not use translation tables\n   for determining address equivalences; if all\
    \ interfaces are of this\n   type, then the Address Translation table is empty,\
    \ i.e., has zero\n   entries.\n          OBJECT:\n          -------\n        \
    \       clnpNetToMediaTable { clnp 23 }\n          Syntax:\n               SEQUENCE\
    \ OF ClnpNetToMediaEntry\n          Definition:\n               The CLNP Address\
    \ Translation table used for mapping from\n               CLNP addresses to physical\
    \ addresses.\n          Access:\n                not-accessible\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpNetToMediaEntry { clnpNetToMediaTable 1 }\n          Syntax:\n      \
    \         ClnpNetToMediaEntry ::= SEQUENCE {\n                    clnpNetToMediaIfIndex\n\
    \                        INTEGER,\n                    clnpNetToMediaPhysAddress\n\
    \                        OCTET STRING,\n                    clnpNetToMediaNetAddress\n\
    \                        ClnpAddress,\n                    clnpNetToMediaType\n\
    \                        INTEGER,\n                    clnpNetToMediaAge\n   \
    \                     INTEGER,\n                    clnpNetToMediaHoldTime\n \
    \                       INTEGER\n               }\n          Definition:\n   \
    \            Each entry contains one CLNP address to \"physical\"\n          \
    \     address equivalence.\n          Access:\n               not-accessible.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpNetToMediaIfIndex { clnpNetToMediaEntry 1 }\n          Syntax:\n\
    \               INTEGER\n          Definition:\n               The interface on\
    \ which this entry's equivalence is\n               effective.  The interface\
    \ identified by a particular\n               value of this index is the same interface\
    \ as identified\n               by the same value of ifIndex.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpNetToMediaPhysAddress\
    \ { clnpNetToMediaEntry 2 }\n          Syntax:\n               OCTET STRING\n\
    \          Definition:\n               The media-dependent \"physical\" address.\n\
    \          Access:\n               read-write.\n          Status:\n          \
    \     mandatory.\n          OBJECT:\n          -------\n               clnpNetToMediaNetAddress\
    \ { clnpNetToMediaEntry 3 }\n          Syntax:\n               ClnpAddress\n \
    \         Definition:\n               The CLNP address corresponding to the media-dependent\n\
    \               \"physical\" address.\n          Access:\n               read-write.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpNetToMediaType { clnpNetToMediaEntry 4 }\n          Syntax:\n\
    \               INTEGER {\n                    other(1),       -- none of the\
    \ following\n                    invalid(2),     -- an invalidated mapping\n \
    \                   dynamic(3),\n                    static(4)\n             \
    \  }\n          Definition:\n               The type of mapping.\n          Setting\
    \ this object to the value invalid(2) has the effect of\n          invalidating\
    \ the corresponding entry in the\n          clnpNetToMediaTable.  That is, it\
    \ effectively dissassociates\n          the interface identified with said entry\
    \ from the mapping\n          identified with said entry.  It is an implementation-specific\n\
    \          matter as to whether the agent removes an invalidated entry\n     \
    \     from the table.  Accordingly, management stations must be\n          prepared\
    \ to receive tabular information from agents that\n          corresponds to entries\
    \ not currently in use.  Proper\n          interpretation of such entries requires\
    \ examination of the\n          relevant clnpNetToMediaType object.\n        \
    \  Access:\n               read-write.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpNetToMediaAge { clnpNetToMediaEntry\
    \ 5 }\n          Syntax:\n               INTEGER\n          Definition:\n    \
    \           The number of seconds since this entry was last updated\n        \
    \       or otherwise determined to be correct. Note that no\n               semantics\
    \ of \"too old\" can be implied except through\n               knowledge of the\
    \ type of entry.\n          Access:\n               read-write.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpNetToMediaHoldTime { clnpNetToMediaEntry 6 }\n          Syntax:\n   \
    \            INTEGER\n          Definition:\n               The time in seconds\
    \ this entry will be valid. Static\n               entries should always report\
    \ this field as -1.\n          Access:\n               read-write.\n         \
    \ Status:\n               mandatory.\n          OBJECT:\n          -------\n \
    \              clnpMediaToNetTable { clnp 24 }\n          Syntax:\n          \
    \     SEQUENCE OF ClnpMediaToNetEntry\n          Definition:\n               The\
    \ CLNP Address Translation table used for mapping from\n               physical\
    \ addresses to CLNP addresses.\n          Access:\n               not-accessible.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpMediaToNetEntry { clnpMediaToNetTable 1 }\n          Syntax:\n\
    \               ClnpMediaToNetEntry ::= SEQUENCE {\n                    clnpMediaToNetIfIndex\n\
    \                        INTEGER,\n                    clnpMediaToNetNetAddress\n\
    \                        ClnpAddress,\n                    clnpMediaToNetPhysAddress\n\
    \                        OCTET STRING,\n                    clnpMediaToNetType\n\
    \                        INTEGER,\n                    clnpMediaToNetAge\n   \
    \                     INTEGER,\n                    clnpMediaToNetHoldTime\n \
    \                       INTEGER\n               }\n          Definition:\n   \
    \            Each entry contains on ClnpAddress to \"physical\" address\n    \
    \           equivalence.\n          Access:\n               not-accessible.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpMediaToNetIfIndex { clnpMediaToNetEntry 1 }\n          Syntax:\n\
    \               INTEGER\n          Definition:\n               The interface on\
    \ which this entry's equivalence is\n               effective.  The interface\
    \ identified by a particular\n               value of this index is the same interface\
    \ as identified\n               by the same value of ifIndex.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpMediaToNetAddress { clnpMediaToNetEntry\
    \ 2 }\n          Syntax:\n               ClnpAddress\n          Definition:\n\
    \               The ClnpAddress corresponding to the media-dependent\n       \
    \        \"physical\" address.\n          Access:\n               read-write.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpMediaToNetPhysAddress { clnpMediaToNetEntry 3 }\n        \
    \  Syntax:\n               OCTET STRING\n          Definition:\n             \
    \  The media-dependent \"physical\" address.\n          Access:\n            \
    \   read-write.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpMediaToNetType { clnpMediaToNetEntry 4\
    \ }\n          Syntax:\n               INTEGER {\n                    other(1),\
    \       -- none of the following\n                    invalid(2),     -- an invalidated\
    \ mapping\n                    dynamic(3),\n                    static(4)\n  \
    \             }\n          Definition:\n               The type of mapping.\n\
    \          Setting this object to the value invalid(2) has the effect of\n   \
    \       invalidating the corresponding entry in the\n          clnpMediaToNetTable.\
    \  That is, it effectively dissassociates\n          the interface identified\
    \ with said entry from the mapping\n          identified with said entry.  It\
    \ is an implementation-specific\n          matter as to whether the agent removes\
    \ an invalidated entry\n          from the table.  Accordingly, management stations\
    \ must be\n          prepared to receive tabular information from agents that\n\
    \          corresponds to entries not currently in use.  Proper\n          interpretation\
    \ of such entries requires examination of the\n          relevant clnpMediaToNetType\
    \ object.\n          Access:\n               read-write.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpMediaToNetAge { clnpMediaToNetEntry 5 }\n          Syntax:\n        \
    \       INTEGER\n          Definition:\n               The number of seconds since\
    \ this entry was last updated\n               or otherwise determined to be correct.\
    \ Note that no\n               semantics of \"too old\" can be implied except\
    \ through\n               knowledge of the type of entry.\n          Access:\n\
    \               read-write.\n          Status:\n               mandatory.\n  \
    \        OBJECT:\n          -------\n               clnpMediaToNetHoldTime { clnpMediaToNetEntry\
    \ 6 }\n          Syntax:\n               INTEGER\n          Definition:\n    \
    \           The time in seconds this entry will be valid. Static\n           \
    \    entries should always report this field as -1.\n          Access:\n     \
    \          read-write.\n          Status:\n               mandatory.\n"
- title: 4.2.  The CLNP Error Group
  contents:
  - "4.2.  The CLNP Error Group\n   This group records the CLNP Error protocol and\
    \ is recommended for all\n   systems which support CLNP.\n          OBJECT:\n\
    \          -------\n               clnpInErrors { error 1 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of CLNP\
    \ Error PDUs received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrors { error 2 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of CLNP Error PDUs sent by this\
    \ entity.\n          Access:\n               read-only.\n          Status:\n \
    \              mandatory.\n          OBJECT:\n          -------\n            \
    \   clnpInErrUnspecs { error 3 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of unspecified CLNP Error PDUs\
    \ received by\n               this entity.\n          Access:\n              \
    \ read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpInErrProcs { error 4 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of protocol\
    \ procedure CLNP Error PDUs received\n               by this entity.\n       \
    \   Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpInErrCksums { error\
    \ 5 }\n          Syntax:\n               Counter\n          Definition:\n    \
    \           The number of checksum CLNP Error PDUs received by this\n        \
    \       entity.\n          Access:\n               read-only.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpInErrCongests { error 6 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of congestion drop CLNP Error\
    \ PDUs received by\n               this entity.\n          Access:\n         \
    \      read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpInErrHdrs { error 7 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of header\
    \ syntax CLNP Error PDUs received by\n               this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpInErrSegs { error 8 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of segmentation disallowed CLNP Error PDUs\n               received\
    \ by this entity.\n          Access:\n               read-only.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpInErrIncomps { error 9 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of incomplete PDU CLNP Error\
    \ PDUs received by\n               this entity.\n          Access:\n         \
    \      read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpInErrDups { error 10 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of duplicate\
    \ option CLNP Error PDUs received\n               by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpInErrUnreachDsts { error\
    \ 11 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of unreachable destination CLNP Error PDUs\n         \
    \      received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInErrUnknownDsts { error 12 }\n          Syntax:\n       \
    \        Counter\n          Definition:\n               The number of unknown\
    \ destination CLNP Error PDUs\n               received by this entity.\n     \
    \     Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpInErrSRUnspecs { error\
    \ 13 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of unspecified source route CLNP Error PDUs\n        \
    \       received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInErrSRSyntaxes { error 14 }\n          Syntax:\n        \
    \       Counter\n          Definition:\n               The number of source route\
    \ syntax CLNP Error PDUs\n               received by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpInErrSRUnkAddrs { error\
    \ 15 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of source route unknown address CLNP Error\n         \
    \      PDUs received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInErrSRBadPaths { error 16 }\n          Syntax:\n        \
    \       Counter\n          Definition:\n               The number of source route\
    \ bad path CLNP Error PDUs\n               received by this entity.\n        \
    \  Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpInErrHops { error 17\
    \ }\n          Syntax:\n               Counter\n          Definition:\n      \
    \         The number of hop count exceeded CLNP Error PDUs received\n        \
    \       by this entity.\n          Access:\n               read-only.\n      \
    \    Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInErrHopReassms { error 18 }\n          Syntax:\n        \
    \       Counter\n          Definition:\n               The number of hop count\
    \ exceeded while reassembling CLNP\n               Error PDUs received by this\
    \ entity.\n          Access:\n               read-only.\n          Status:\n \
    \              mandatory.\n          OBJECT:\n          -------\n            \
    \   clnpInErrUnsOptions { error 19 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of unsupported option CLNP Error\
    \ PDUs received\n               by this entity.\n          Access:\n         \
    \      read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpInErrUnsVersions { error 20 }\n       \
    \   Syntax:\n               Counter\n          Definition:\n               The\
    \ number of version mismatch CLNP Error PDUs received\n               by this\
    \ entity.\n          Access:\n               read-only.\n          Status:\n \
    \              mandatory.\n          OBJECT:\n          -------\n            \
    \   clnpInErrUnsSecurities { error 21 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of unsupported security option\
    \ CLNP Error PDUs\n               received by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpInErrUnsSRs { error 22\
    \ }\n          Syntax:\n               Counter\n          Definition:\n      \
    \         The number of unsupported source route option CLNP Error\n         \
    \      PDUs received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpInErrUnsRRs { error 23 }\n          Syntax:\n            \
    \   Counter\n          Definition:\n               The number of unsupported record\
    \ route option CLNP Error\n               PDUs received by this entity.\n    \
    \      Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpInErrInterferences {\
    \ error 24 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of reassembly interference CLNP Error PDUs\n      \
    \         received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrUnspecs { error 25 }\n          Syntax:\n          \
    \     Counter\n          Definition:\n               The number of unspecified\
    \ CLNP Error PDUs sent by this\n               entity.\n          Access:\n  \
    \             read-only.\n          Status:\n               mandatory.\n     \
    \     OBJECT:\n          -------\n               clnpOutErrProcs { error 26 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of protocol procedure CLNP Error PDUs sent by\n             \
    \  this entity.\n          Access:\n               read-only.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpOutErrCksums { error 27 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of checksum CLNP Error PDUs\
    \ sent by this\n               entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrCongests { error 28 }\n          Syntax:\n         \
    \      Counter\n          Definition:\n               The number of congestion\
    \ drop CLNP Error PDUs sent by\n               this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpOutErrHdrs { error 29 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of header syntax CLNP Error PDUs sent by this\n             \
    \  entity.\n          Access:\n               read-only.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpOutErrSegs { error 30 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of segmentation disallowed CLNP\
    \ Error PDUs\n               sent by this entity.\n          Access:\n       \
    \        read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpOutErrIncomps { error 31 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of incomplete\
    \ PDU CLNP Error PDUs sent by this\n               entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpOutErrDups { error 32 }\n\
    \          Syntax:\n               Counter\n          Definition:\n          \
    \     The number of duplicate option CLNP Error PDUs sent by\n               this\
    \ entity.\n          Access:\n               read-only.\n          Status:\n \
    \              mandatory.\n          OBJECT:\n          -------\n            \
    \   clnpOutErrUnreachDsts { error 33 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of unreachable destination CLNP\
    \ Error PDUs\n               sent by this entity.\n          Access:\n       \
    \        read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               clnpOutErrUnknownDsts { error 34 }\n      \
    \    Syntax:\n               Counter\n          Definition:\n               The\
    \ number of unknown destination CLNP Error PDUs sent by\n               this entity.\n\
    \          Access:\n               read-only.\n          Status:\n           \
    \    mandatory.\n          OBJECT:\n          -------\n               clnpOutErrSRUnspecs\
    \ { error 35 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of unspecified source route CLNP Error PDUs\n     \
    \          sent by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrSRSyntaxes { error 36 }\n          Syntax:\n       \
    \        Counter\n          Definition:\n               The number of source route\
    \ syntax CLNP Error PDUs sent by\n               this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpOutErrSRUnkAddrs { error\
    \ 37 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of source route unknown address CLNP Error\n         \
    \      PDUs sent by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrSRBadPaths { error 38 }\n          Syntax:\n       \
    \        Counter\n          Definition:\n               The number of source route\
    \ bad path CLNP Error PDUs sent\n               by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpOutErrHopss { error 39\
    \ }\n          Syntax:\n               Counter\n          Definition:\n      \
    \         The number of hop count exceeded CLNP Error PDUs sent by\n         \
    \      this entity.\n          Access:\n               read-only.\n          Status:\n\
    \               mandatory.\n          OBJECT:\n          -------\n           \
    \    clnpOutErrHopReassms { error 40 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of hop count exceeded while\
    \ reassembling CLNP\n               Error PDUs sent by this entity.\n        \
    \  Access:\n               read-only.\n          Status:\n               mandatory.\n\
    \          OBJECT:\n          -------\n               clnpOutErrUnsOptions { error\
    \ 41 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of unsupported option CLNP Error PDUs sent by\n      \
    \         this entity.\n          Access:\n               read-only.\n       \
    \   Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrUnsVersions { error 42 }\n          Syntax:\n      \
    \         Counter\n          Definition:\n               The number of version\
    \ mismatch CLNP Error PDUs sent by\n               this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               clnpOutErrUnsSecurities { error\
    \ 43 }\n          Syntax:\n               Counter\n          Definition:\n   \
    \            The number of unsupported security option CLNP Error PDUs\n     \
    \          sent by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrUnsSRs { error 44 }\n          Syntax:\n           \
    \    Counter\n          Definition:\n               The number of unsupported\
    \ source route option CLNP Error\n               PDUs sent by this entity.\n \
    \         Access:\n               read-only.\n          Status:\n            \
    \   mandatory.\n          OBJECT:\n          -------\n               clnpOutErrUnsRRs\
    \ { error 45 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of unsupported record route option CLNP Error\n   \
    \            PDUs sent by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               clnpOutErrInterferences { error 46 }\n          Syntax:\n    \
    \           Counter\n          Definition:\n               The number of reassembly\
    \ interference CLNP Error PDUs\n               sent by this entity.\n        \
    \  Access:\n               read-only.\n          Status:\n               mandatory.\n"
- title: 4.3.  The ESIS Group
  contents:
  - "4.3.  The ESIS Group\n   The ESIS group contains information about the End System\
    \ Intermediate\n   System protocol used to maintain neighbor reachibility information.\n\
    \   Both ESs and ISs are expected to implement this group if they running\n  \
    \ a CLNP.\n          OBJECT:\n          -------\n               esisESHin { es-is\
    \ 1 }\n          Syntax:\n               Counter\n          Definition:\n    \
    \           The number of ESH PDUs received by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               esisESHout { es-is 2 }\n  \
    \        Syntax:\n               Counter\n          Definition:\n            \
    \   The number of ESH PDUs sent by this entity.\n          Access:\n         \
    \      read-only.\n          Status:\n               mandatory.\n          OBJECT:\n\
    \          -------\n               esisISHin { es-is 3 }\n          Syntax:\n\
    \               Counter\n          Definition:\n               The number of ISH\
    \ PDUs received by this entity.\n          Access:\n               read-only.\n\
    \          Status:\n               mandatory.\n          OBJECT:\n          -------\n\
    \               esisISHout { es-is 4 }\n          Syntax:\n               Counter\n\
    \          Definition:\n               The number of ISH PDUs sent by this entity.\n\
    \          Access:\n               read-only.\n          Status:\n           \
    \    mandatory.\n          OBJECT:\n          -------\n               esisRDUin\
    \ { es-is 5 }\n          Syntax:\n               Counter\n          Definition:\n\
    \               The number of RDU PDUs received by this entity.\n          Access:\n\
    \               read-only.\n          Status:\n               mandatory.\n   \
    \       OBJECT:\n          -------\n               esisRDUout { es-is 6 }\n  \
    \        Syntax:\n               Counter\n          Definition:\n            \
    \   The number of RDU PDUs sent by this entity.\n          Access:\n         \
    \      read-only.\n          Status:\n               mandatory.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n               CLNS-MIB DEFINITIONS ::= BEGIN\n            \
    \   IMPORTS\n                       experimental, OBJECT-TYPE, Counter\n     \
    \                          FROM RFC1155-SMI;\n               -- new type of NetworkAddress\n\
    \               ClnpAddress ::=\n                   [APPLICATION 5]\n        \
    \               IMPLICIT OCTET STRING (SIZE (1..21))\n               clns    OBJECT\
    \ IDENTIFIER ::=   { experimental 1 }\n               clnp    OBJECT IDENTIFIER\
    \ ::=   { clns 1 }\n               error   OBJECT IDENTIFIER ::=   { clns 2 }\n\
    \               echo    OBJECT IDENTIFIER ::=   { clns 3 }\n               es-is\
    \   OBJECT IDENTIFIER ::=   { clns 4 }\n               -- the General CLNP group\n\
    \               clnpForwarding OBJECT-TYPE\n                       SYNTAX  INTEGER\
    \ {\n                                   is(1),  -- entity is an\n            \
    \                               -- intermediate system\n                     \
    \              es(2)   -- entity is an end system\n                          \
    \                 -- and does not forward pdus\n                             \
    \  }\n                       ACCESS  read-write\n                       STATUS\
    \  mandatory\n                       ::= { clnp 1 }\n               clnpDefaultLifeTime\
    \ OBJECT-TYPE\n                       SYNTAX  INTEGER\n                      \
    \ ACCESS  read-write\n                       STATUS  mandatory\n             \
    \          ::= { clnp 2 }\n               clnpInReceives OBJECT-TYPE\n       \
    \                SYNTAX  Counter\n                       ACCESS  read-only\n \
    \                      STATUS  mandatory\n                       ::= { clnp 3\
    \ }\n               clnpInHdrErrors OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 4 }\n               clnpInAddrErrors\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { clnp 5 }\n               clnpForwPDUs OBJECT-TYPE\n          \
    \             SYNTAX  Counter\n                       ACCESS  read-only\n    \
    \                   STATUS  mandatory\n                       ::= { clnp 6 }\n\
    \               clnpInUnknownNLPs OBJECT-TYPE\n                       SYNTAX \
    \ Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 7 }\n               clnpInUnknownULPs\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { clnp 8 }\n               clnpInDiscards OBJECT-TYPE\n        \
    \               SYNTAX  Counter\n                       ACCESS  read-only\n  \
    \                     STATUS  mandatory\n                       ::= { clnp 9 }\n\
    \               clnpInDelivers OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { clnp 10 }\n               clnpOutRequests OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { clnp 11\
    \ }\n               clnpOutDiscards OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 12 }\n               clnpOutNoRoutes\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { clnp 13 }\n               clnpReasmTimeout OBJECT-TYPE\n     \
    \                  SYNTAX  INTEGER\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { clnp 14\
    \ }\n               clnpReasmReqds  OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 15 }\n               clnpReasmOKs\
    \    OBJECT-TYPE\n                       SYNTAX  Counter\n                   \
    \    ACCESS  read-only\n                       STATUS  mandatory\n           \
    \            ::= { clnp 16 }\n               clnpReasmFails  OBJECT-TYPE\n   \
    \                    SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { clnp 17\
    \ }\n               clnpSegOKs      OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 18 }\n               clnpSegFails\
    \    OBJECT-TYPE\n                       SYNTAX  Counter\n                   \
    \    ACCESS  read-only\n                       STATUS  mandatory\n           \
    \            ::= { clnp 19 }\n               clnpSegCreates  OBJECT-TYPE\n   \
    \                    SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { clnp 20\
    \ }\n               clnpInOpts      OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { clnp 25 }\n               clnpOutOpts\
    \     OBJECT-TYPE\n                       SYNTAX  Counter\n                  \
    \     ACCESS  read-only\n                       STATUS  mandatory\n          \
    \             ::= { clnp 26 }\n               -- the CLNP Interface table\n  \
    \             clnpAddrTable   OBJECT-TYPE\n                       SYNTAX  SEQUENCE\
    \ OF ClnpAddrEntry\n                       ACCESS  not-accessible\n          \
    \             STATUS  mandatory\n                       ::= { clnp 21 }\n    \
    \           clnpAddrEntry   OBJECT-TYPE\n                       SYNTAX  ClnpAddrEntry\n\
    \                       ACCESS  not-accessible\n                       STATUS\
    \  mandatory\n               --      INDEX   { clnpAdEntAddr }\n             \
    \          ::= { clnpAddrTable 1 }\n               ClnpAddrEntry ::= SEQUENCE\
    \ {\n                   clnpAdEntAddr\n                       ClnpAddress,\n \
    \                  clnpAdEntIfIndex\n                       INTEGER,\n       \
    \            clnpAdEntReasmMaxSize\n                       INTEGER (0..65535)\n\
    \               }\n               clnpAdEntAddr OBJECT-TYPE\n                \
    \       SYNTAX  ClnpAddress\n                       ACCESS  read-only\n      \
    \                 STATUS  mandatory\n                       ::=  { clnpAddrEntry\
    \ 1 }\n               clnpAdEntIfIndex OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::=  { clnpAddrEntry 2 }\n              \
    \ clnpAdEntReasmMaxSize OBJECT-TYPE\n                       SYNTAX  INTEGER (0..65535)\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { clnpAddrEntry 3 }\n               -- the CLNP Routing\
    \ table\n               clnpRoutingTable OBJECT-TYPE\n                       SYNTAX\
    \  SEQUENCE OF ClnpRouteEntry\n                       ACCESS  not-accessible\n\
    \                       STATUS  mandatory\n                       ::= { clnp 22\
    \ }\n               clnpRouteEntry OBJECT-TYPE\n                       SYNTAX\
    \  ClnpRouteEntry\n                       ACCESS  not-accessible\n           \
    \            STATUS  mandatory\n               --      INDEX   { clnpRouteDest\
    \ }\n                       ::= { clnpRoutingTable 1 }\n               ClnpRouteEntry\
    \ ::= SEQUENCE {\n                   clnpRouteDest\n                       ClnpAddress,\n\
    \                   clnpRouteIfIndex\n                       INTEGER,\n      \
    \             clnpRouteMetric1\n                       INTEGER,\n            \
    \       clnpRouteMetric2\n                       INTEGER,\n                  \
    \ clnpRouteMetric3\n                       INTEGER,\n                   clnpRouteMetric4\n\
    \                       INTEGER,\n                   clnpRouteNextHop\n      \
    \                 ClnpAddress,\n                   clnpRouteType\n           \
    \            INTEGER,\n                   clnpRouteProto\n                   \
    \    INTEGER,\n                   clnpRouteAge\n                       INTEGER\n\
    \               }\n               clnpRouteDest OBJECT-TYPE\n                \
    \       SYNTAX  ClnpAddress\n                       ACCESS  read-write\n     \
    \                  STATUS  mandatory\n                       ::= { clnpRouteEntry\
    \ 1 }\n               clnpRouteIfIndex  OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpRouteEntry 2 }\n       \
    \        clnpRouteMetric1 OBJECT-TYPE\n                       SYNTAX  INTEGER\n\
    \                       ACCESS  read-write\n                       STATUS  mandatory\n\
    \                       ::= { clnpRouteEntry 3 }\n               clnpRouteMetric2\
    \ OBJECT-TYPE\n                       SYNTAX  INTEGER\n                      \
    \ ACCESS  read-write\n                       STATUS  mandatory\n             \
    \          ::= { clnpRouteEntry 4 }\n               clnpRouteMetric3 OBJECT-TYPE\n\
    \                       SYNTAX  INTEGER\n                       ACCESS  read-write\n\
    \                       STATUS  mandatory\n                       ::= { clnpRouteEntry\
    \ 5 }\n               clnpRouteMetric4 OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpRouteEntry 6 }\n       \
    \        clnpRouteNextHop OBJECT-TYPE\n                       SYNTAX  ClnpAddress\n\
    \                       ACCESS  read-write\n                       STATUS  mandatory\n\
    \                       ::= { clnpRouteEntry 7 }\n               clnpRouteType\
    \ OBJECT-TYPE\n                       SYNTAX  INTEGER {\n                    \
    \               other(1),      -- none of the\n                              \
    \                    -- following\n                                   invalid(2),\
    \    -- an invalidated\n                                                  -- route\n\
    \                                                  -- route to directly\n    \
    \                               direct(3),     -- connected\n                \
    \                                  -- (sub-)network\n                        \
    \                          -- route to a\n                                   \
    \               -- non-local\n                                   remote(4)   \
    \   -- host/network\n                                                  -- /sub-network\n\
    \                           }\n                       ACCESS  read-write\n   \
    \                    STATUS  mandatory\n                       ::= { clnpRouteEntry\
    \ 8 }\n               clnpRouteProto OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER {\n                                   other(1),     -- none of the\n\
    \                                                 -- following\n             \
    \                                    -- non-protocol\n                       \
    \                          -- information\n                                  \
    \               --   e.g., manually\n                                   local(2),\
    \     --   configured entries\n                                              \
    \   -- set via a network\n                                   netmgmt(3),   --\
    \   management\n                                                 --   protocol\n\
    \                                                 -- similar to\n            \
    \                                     -- ipRouteProto\n                      \
    \                           -- but omits several\n                           \
    \                      -- IP-specific\n                                      \
    \           -- protocols\n                                   is-is(9),\n     \
    \                              ciscoIgrp(11),\n                              \
    \     bbnSpfIgp(12),\n                                   ospf(13),\n         \
    \                          bgp(14)\n                           }\n           \
    \            ACCESS  read-only\n                       STATUS  mandatory\n   \
    \                    ::= { clnpRouteEntry 9 }\n               clnpRouteAge OBJECT-TYPE\n\
    \                       SYNTAX  INTEGER\n                       ACCESS  read-write\n\
    \                       STATUS  mandatory\n                       ::= { clnpRouteEntry\
    \ 10 }\n               -- the CLNP Address Translation tables\n              \
    \ clnpNetToMediaTable OBJECT-TYPE\n                       SYNTAX  SEQUENCE OF\
    \ ClnpNetToMediaEntry\n                       ACCESS  not-accessible\n       \
    \                STATUS  mandatory\n                       ::= { clnp 23 }\n \
    \              clnpNetToMediaEntry OBJECT-TYPE\n                       SYNTAX\
    \  ClnpNetToMediaEntry\n                       ACCESS  not-accessible\n      \
    \                 STATUS  mandatory\n               --      INDEX   { clnpNetToMediaIfIndex,\n\
    \               --                clnpNetToMediaNetAddress }\n               \
    \        ::= { clnpNetToMediaTable 1 }\n               ClnpNetToMediaEntry ::=\
    \ SEQUENCE {\n                   clnpNetToMediaIfIndex\n                     \
    \  INTEGER,\n                   clnpNetToMediaPhysAddress\n                  \
    \     OCTET STRING,\n                   clnpNetToMediaNetAddress\n           \
    \            ClnpAddress,\n                   clnpNetToMediaType\n           \
    \            INTEGER,\n                   clnpNetToMediaAge\n                \
    \       INTEGER,\n                   clnpNetToMediaHoldTime\n                \
    \       INTEGER\n               }\n               clnpNetToMediaIfIndex OBJECT-TYPE\n\
    \                       SYNTAX  INTEGER\n                       ACCESS  read-write\n\
    \                       STATUS  mandatory\n                       ::= { clnpNetToMediaEntry\
    \ 1 }\n               clnpNetToMediaPhysAddress OBJECT-TYPE\n                \
    \       SYNTAX  OCTET STRING\n                       ACCESS  read-write\n    \
    \                   STATUS  mandatory\n                       ::= { clnpNetToMediaEntry\
    \ 2 }\n               clnpNetToMediaNetAddress OBJECT-TYPE\n                 \
    \      SYNTAX  ClnpAddress\n                       ACCESS  read-write\n      \
    \                 STATUS  mandatory\n                       ::= { clnpNetToMediaEntry\
    \ 3 }\n               clnpNetToMediaType OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER {\n                                   other(1),       -- none of the\n\
    \                                                   -- following\n           \
    \                        invalid(2),     -- an invalidated\n                 \
    \                                  -- mapping\n                              \
    \     dynamic(3),\n                                   static(4)\n            \
    \               }\n                       ACCESS  read-write\n               \
    \        STATUS  mandatory\n                       ::= { clnpNetToMediaEntry 4\
    \ }\n               clnpNetToMediaAge OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpNetToMediaEntry 5 }\n  \
    \             clnpNetToMediaHoldTime OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpNetToMediaEntry 6 }\n  \
    \             clnpMediaToNetTable OBJECT-TYPE\n                       SYNTAX \
    \ SEQUENCE OF ClnpMediaToNetEntry\n                       ACCESS  not-accessible\n\
    \                       STATUS  mandatory\n                       ::= { clnp 24\
    \ }\n               clnpMediaToNetEntry OBJECT-TYPE\n                       SYNTAX\
    \  ClnpMediaToNetEntry\n                       ACCESS  not-accessible\n      \
    \                 STATUS  mandatory\n               --      INDEX   { clnpMediaToNetIfIndex,\n\
    \               --                clnpMediaToNetPhysAddress }\n              \
    \         ::= { clnpMediaToNetTable 1 }\n               ClnpMediaToNetEntry ::=\
    \ SEQUENCE {\n                   clnpMediaToNetIfIndex\n                     \
    \  INTEGER,\n                   clnpMediaToNetNetAddress\n                   \
    \    ClnpAddress,\n                   clnpMediaToNetPhysAddress\n            \
    \           OCTET STRING,\n                   clnpMediaToNetType\n           \
    \            INTEGER,\n                   clnpMediaToNetAge\n                \
    \       INTEGER,\n                   clnpMediaToNetHoldTime\n                \
    \       INTEGER\n               }\n               clnpMediaToNetIfIndex OBJECT-TYPE\n\
    \                       SYNTAX  INTEGER\n                       ACCESS  read-write\n\
    \                       STATUS  mandatory\n                       ::= { clnpMediaToNetEntry\
    \ 1 }\n               clnpMediaToNetNetAddress OBJECT-TYPE\n                 \
    \      SYNTAX  ClnpAddress\n                       ACCESS  read-write\n      \
    \                 STATUS  mandatory\n                       ::= { clnpMediaToNetEntry\
    \ 2 }\n               clnpMediaToNetPhysAddress OBJECT-TYPE\n                \
    \       SYNTAX  OCTET STRING\n                       ACCESS  read-write\n    \
    \                   STATUS  mandatory\n                       ::= { clnpMediaToNetEntry\
    \ 3 }\n               clnpMediaToNetType OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER {\n                                   other(1),       -- none of the\n\
    \                                                   -- following\n           \
    \                        invalid(2),     -- an invalidated\n                 \
    \                                  -- mapping\n                              \
    \     dynamic(3),\n                                   static(4)\n            \
    \               }\n                       ACCESS  read-write\n               \
    \        STATUS  mandatory\n                       ::= { clnpMediaToNetEntry 4\
    \ }\n               clnpMediaToNetAge OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpMediaToNetEntry 5 }\n  \
    \             clnpMediaToNetHoldTime OBJECT-TYPE\n                       SYNTAX\
    \  INTEGER\n                       ACCESS  read-write\n                      \
    \ STATUS  mandatory\n                       ::= { clnpMediaToNetEntry 6 }\n  \
    \             -- the CLNP Error Group\n               clnpInErrors    OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 1 }\n               clnpOutErrors   OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 2 }\n               clnpInErrUnspecs\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 3 }\n               clnpInErrProcs  OBJECT-TYPE\n      \
    \                 SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 4 }\n               clnpInErrCksums OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 5 }\n               clnpInErrCongests\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 6 }\n               clnpInErrHdrs   OBJECT-TYPE\n      \
    \                 SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 7 }\n               clnpInErrSegs   OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 8 }\n               clnpInErrIncomps\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 9 }\n               clnpInErrDups   OBJECT-TYPE\n      \
    \                 SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 10 }\n               clnpInErrUnreachDsts OBJECT-TYPE\n                    \
    \   SYNTAX  Counter\n                       ACCESS  read-only\n              \
    \         STATUS  mandatory\n                       ::= { error 11 }\n       \
    \        clnpInErrUnknownDsts OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { error 12 }\n               clnpInErrSRUnspecs OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 13 }\n               clnpInErrSRSyntaxes OBJECT-TYPE\n                     \
    \  SYNTAX  Counter\n                       ACCESS  read-only\n               \
    \        STATUS  mandatory\n                       ::= { error 14 }\n        \
    \       clnpInErrSRUnkAddrs OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { error 15 }\n               clnpInErrSRBadPaths OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 16 }\n               clnpInErrHops   OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 17 }\n               clnpInErrHopReassms\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 18 }\n               clnpInErrUnsOptions OBJECT-TYPE\n \
    \                      SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 19 }\n               clnpInErrUnsVersions OBJECT-TYPE\n                    \
    \   SYNTAX  Counter\n                       ACCESS  read-only\n              \
    \         STATUS  mandatory\n                       ::= { error 20 }\n       \
    \        clnpInErrUnsSecurities OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { error 21 }\n               clnpInErrUnsSRs OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 22 }\n               clnpInErrUnsRRs OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 23 }\n               clnpInErrInterferences\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 24 }\n               clnpOutErrUnspecs OBJECT-TYPE\n   \
    \                    SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 25 }\n               clnpOutErrProcs OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 26 }\n               clnpOutErrCksums\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 27 }\n               clnpOutErrCongests OBJECT-TYPE\n  \
    \                     SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 28 }\n               clnpOutErrHdrs OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 29 }\n               clnpOutErrSegs\
    \  OBJECT-TYPE\n                       SYNTAX  Counter\n                     \
    \  ACCESS  read-only\n                       STATUS  mandatory\n             \
    \          ::= { error 30 }\n               clnpOutErrIncomps OBJECT-TYPE\n  \
    \                     SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 31 }\n               clnpOutErrDups  OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 32 }\n               clnpOutErrUnreachDsts\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 33 }\n               clnpOutErrUnknownDsts OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 34 }\n               clnpOutErrSRUnspecs OBJECT-TYPE\n                     \
    \  SYNTAX  Counter\n                       ACCESS  read-only\n               \
    \        STATUS  mandatory\n                       ::= { error 35 }\n        \
    \       clnpOutErrSRSyntaxes OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { error 36 }\n               clnpOutErrSRUnkAddrs\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 37 }\n               clnpOutErrSRBadPaths OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 38 }\n               clnpOutErrHops  OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 39 }\n               clnpOutErrHopReassms\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 40 }\n               clnpOutErrUnsOptions OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 41 }\n               clnpOutErrUnsVersions OBJECT-TYPE\n                   \
    \    SYNTAX  Counter\n                       ACCESS  read-only\n             \
    \          STATUS  mandatory\n                       ::= { error 42 }\n      \
    \         clnpOutErrUnsSecurities OBJECT-TYPE\n                       SYNTAX \
    \ Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { error 43 }\n               clnpOutErrUnsSRs\
    \ OBJECT-TYPE\n                       SYNTAX  Counter\n                      \
    \ ACCESS  read-only\n                       STATUS  mandatory\n              \
    \         ::= { error 44 }\n               clnpOutErrUnsRRs        OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { error\
    \ 45 }\n               clnpOutErrInterferences OBJECT-TYPE\n                 \
    \      SYNTAX  Counter\n                       ACCESS  read-only\n           \
    \            STATUS  mandatory\n                       ::= { error 46 }\n    \
    \           -- the CLNP Echo Group\n               -- the ES-IS Group\n      \
    \         esisESHins      OBJECT-TYPE\n                       SYNTAX  Counter\n\
    \                       ACCESS  read-only\n                       STATUS  mandatory\n\
    \                       ::= { es-is 1 }\n               esisESHouts     OBJECT-TYPE\n\
    \                       SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { es-is\
    \ 2 }\n               esisISHins      OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { es-is 3 }\n               esisISHouts\
    \     OBJECT-TYPE\n                       SYNTAX  Counter\n                  \
    \     ACCESS  read-only\n                       STATUS  mandatory\n          \
    \             ::= { es-is 4 }\n               esisRDUins      OBJECT-TYPE\n  \
    \                     SYNTAX  Counter\n                       ACCESS  read-only\n\
    \                       STATUS  mandatory\n                       ::= { es-is\
    \ 5 }\n               esisRDUouts     OBJECT-TYPE\n                       SYNTAX\
    \  Counter\n                       ACCESS  read-only\n                       STATUS\
    \  mandatory\n                       ::= { es-is 6 }\n               END\n"
- title: 6.  Identification of OBJECT instances for use with the SNMP
  contents:
  - "6.  Identification of OBJECT instances for use with the SNMP\n   The names for\
    \ all object types in the MIB are defined explicitly\n   either in the Internet-standard\
    \ MIB or in other documents which\n   conform to the naming conventions of the\
    \ SMI.  The SMI requires that\n   conformant management protocols define mechanisms\
    \ for identifying\n   individual instances of those object types for a particular\
    \ network\n   element.\n   Each instance of any object type defined in the MIB\
    \ is identified in\n   SNMP operations by a unique name called its \"variable\
    \ name.\" In\n   general, the name of an SNMP variable is an OBJECT IDENTIFIER\
    \ of the\n   form x.y, where x is the name of a non-aggregate object type defined\n\
    \   in the MIB and y is an OBJECT IDENTIFIER fragment that, in a way\n   specific\
    \ to the named object type, identifies the desired instance.\n   This naming strategy\
    \ admits the fullest exploitation of the semantics\n   of the powerful SNMP get-next\
    \ operator, because it assigns names for\n   related variables so as to be contiguous\
    \ in the lexicographical\n   ordering of all variable names known in the MIB.\n\
    \   The type-specific naming of object instances is defined below for a\n   number\
    \ of classes of object types.  Instances of an object type to\n   which none of\
    \ the following naming conventions are applicable are\n   named by OBJECT IDENTIFIERs\
    \ of the form x.0, where x is the name of\n   said object type in the MIB definition.\n\
    \   For example, suppose one wanted to identify an instance of the\n   variable\
    \ sysDescr in the Internet-standard MIB.  The object class for\n   sysDescr is:\n\
    \      iso org dod internet mgmt mib system sysDescr\n       1   3   6     1 \
    \     2    1    1       1\n   Hence, the object type, x, would be 1.3.6.1.2.1.1.1\
    \ to which is\n   appended an instance sub-identifier of 0.  That is, 1.3.6.1.2.1.1.1.0\n\
    \   identifies the one and only instance of sysDescr.\n"
- title: 6.1.  clnpAddrTable Object Type Names
  contents:
  - "6.1.  clnpAddrTable Object Type Names\n   The name of an CLNP-addressable network\
    \ element, x, is the OBJECT\n   IDENTIFIER of the form z such that z is the value\
    \ (in which each\n   octet of the ClnpAddress type is expressed as a sub-identifier\
    \ of the\n   OBJECT IDENTIFIER) of that instance of the clnpAdEntAddr object type\n\
    \   associated with x.\n   For each object type, t, for which the defined name,\
    \ n, has a prefix\n   of clnpAddrEntry, an instance, i, of t is named by an OBJECT\n\
    \   IDENTIFIER of the form n.y, where y is the name of the CLNP-\n   addressable\
    \ network element about which i represents information.\n   For example, suppose\
    \ one wanted to find the maximum reassembly size\n   of an entry in the CLNP interface\
    \ table associated with an CLNP\n   address of NS+0504030201.  Accordingly, clnpAdEntNetMask.5.5.4.3.2.1\n\
    \   would identify the desired instance.\n"
- title: 6.2.  clnpRoutingTable Object Type Names
  contents:
  - "6.2.  clnpRoutingTable Object Type Names\n   The name of an CLNP route, x, is\
    \ the OBJECT IDENTIFIER of the form z\n   such that z is the value (in which each\
    \ octet of the ClnpAddress type\n   is expressed as a sub-identifier of the OBJECT\
    \ IDENTIFIER) of that\n   instance of the clnpRouteDest object type associated\
    \ with x.\n   For each object type, t, for which the defined name, n, has a prefix\n\
    \   of clnpRoutingEntry, an instance, i, of t is named by an OBJECT\n   IDENTIFIER\
    \ of the form n.y, where y is the name of the CLNP route\n   about which i represents\
    \ information.\n   For example, suppose one wanted to find the next hop of an\
    \ entry in\n   the CLNP routing table associated  with the destination of\n  \
    \ NS+0504030201.  Accordingly, clnpRouteNextHop.5.5.4.3.2.1 would\n   identify\
    \ the desired instance.\n   At the option of the agent, multiple routes to the\
    \ same destination\n   may be visible.  To realize this, the agent, while required\
    \ to return\n   a single entry for an CLNP route, x, of the form n.y, may also\
    \ return\n   information about other routes to the same destination using the\
    \ form\n   n.y.v, where v is a implementation-dependent small, non-negative\n\
    \   integer.\n"
- title: 6.3.  clnpNetToMediaTable Object Type Names
  contents:
  - "6.3.  clnpNetToMediaTable Object Type Names\n   The name of a cached CLNP address,\
    \ x, is an OBJECT IDENTIFIER of the\n   form s.z, such that s is the value of\
    \ that instance of the\n   clnpNetToMediaIfIndex object type associated with the\
    \ entry and z is\n   the value of the CLNP address of the clnpNetToMediaNetAddress\
    \ object\n   type associated with x, in which each octet of the ClnpAddress type\n\
    \   is expressed as a sub-identifier of the OBJECT IDENTIFIER.\n   For each object\
    \ type, t, for which the defined name, n, has a prefix\n   of clnpNetToMediaEntry,\
    \ an instance, i, of t is named by an OBJECT\n   IDENTIFIER of the form n.y, where\
    \ y is the name of the cached CLNP\n   address about which i represents information.\n\
    \   For example, suppose one wanted to find the media address of an entry\n  \
    \ in the address translation table associated with a CLNP address of\n   NS+0504030201\
    \ and interface 3.  Accordingly,\n   clnpNetToMediaPhysAddress.3.5.5.4.3.2.1 would\
    \ identify the desired\n   instance.\n"
- title: 6.4.  clnpMediaToNetTable Object Type Names
  contents:
  - "6.4.  clnpMediaToNetTable Object Type Names\n   The name of a cached media address,\
    \ x, is an OBJECT IDENTIFIER of the\n   form s.z, such that s is the value of\
    \ that instance of the\n   clnpMediaToNetIfIndex object type associated with the\
    \ entry and z is\n   the value of the media address of the clnpMediaToNetMediaAddress\n\
    \   object type associated with x, in which each octet of the media\n   address\
    \ is expressed as a sub- identifier of the OBJECT IDENTIFIER.\n   For each object\
    \ type, t, for which the defined name, n, has a prefix\n   of clnpMediaToNetEntry,\
    \ an instance, i, of t is named by an OBJECT\n   IDENTIFIER of the form n.y, where\
    \ y is the name of the cached media\n   address about which i represents information.\n\
    \   For example, suppose one wanted to find the CLNP address of an entry\n   in\
    \ the address translation table associated with a media address of\n   08:00:20:00:38:ba\
    \ and interface 3.  Accordingly,\n   clnpMediaToNetNetAddress.3.8.0.32.0.56.186\
    \ would identify the desired\n   instance.\n"
- title: 7.  References
  contents:
  - "7.  References\n  [1]  Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, IAB, April 1988.\n\
    \  [2]  Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n  \
    \     Group\", RFC 1109, NRI, August 1989.\n  [3]  Rose, M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ Internets\", RFC 1155,\n       Performance Systems International and Hughes\
    \ LAN Systems, May\n       1990.\n  [4]  McCloghrie, K., and M. Rose, \"Management\
    \ Information Base for\n       Network Management of TCP/IP-based Internets\"\
    , RFC 1156, Hughes\n       LAN Systems and Performance Systems International,\
    \ May 1990.\n  [5]  Case, J., M. Fedor, M. Schoffstall, and J. Davin, The Simple\n\
    \       Network Management Protocol\", RFC 1157, University of Tennessee\n   \
    \    at Knoxville, Performance Systems International, Performance\n       Systems\
    \ International, and the MIT Laboratory for Computer\n       Science, May 1990.\n\
    \  [6]  Rose, M., \"Management Information Base for Network Management of\n  \
    \     TCP/IP-based internets: MIB-II\", RFC 1158, Performance Systems\n      \
    \ International, May 1990.\n  [7]  Information processing systems - Open Systems\
    \ Interconnection,\n       \"Specification of Abstract Syntax Notation One (ASN.1)\"\
    ,\n       International Organization for Standardization, International\n    \
    \   Standard 8824, December 1987.\n  [8]  Information processing systems - Open\
    \ Systems Interconnection,\n       \"Specification of Basic Encoding Rules for\
    \ Abstract Notation One\n       (ASN.1)\", International Organization for Standardization,\n\
    \       International Standard 8825, December 1987.\n  [9]  Information processing\
    \ systems - Data Communications - \"Protocol\n       for providing the Connectionless-mode\
    \ Network Service and\n       Provision of Underlying Service\", International\
    \ Organization for\n       Standardization\", International Standard 8473, May\
    \ 1987.\n [10] \"End System to Intermediate System Routing Exchange Protocol for\n\
    \       Use in Conjunction with the Protocol for the Provision of the\n      \
    \ Connectionless-mode Network Service (ISO 8473)\", International\n       Draft\
    \ Proposal 9542.\n [11]  Kille, S., \"A String Encoding of Presentation Address\"\
    , Research\n       Note RN/89/14, Department of Computer Science, University College\n\
    \       London, February 1989.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: '9.  Author''s Address:'
  contents:
  - "9.  Author's Address:\n   Greg Satz\n   cisco Systems, Inc.\n   1350 Willow Road\n\
    \   Menlo Park, CA 94025\n   Phone: (415) 326-1941\n   Email: Satz@CISCO.COM\n"
