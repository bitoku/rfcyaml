- contents:
  - '          Updates to MPLS Transport Profile Linear Protection

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document contains a number of updates to the Protection State\n
    \  Coordination (PSC) logic defined in RFC 6378, \"MPLS Transport Profile\n   (MPLS-TP)
    Linear Protection\".  These updates provide some rules and\n   recommendations
    around the use of TLVs in PSC, address some issues\n   raised in an ITU-T liaison
    statement, and clarify PSC's behavior in a\n   case not well explained in RFC
    6378.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7324.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   3\n   2.  Message Formatting and Error Handling . . . . . . . . . . .
    .   3\n     2.1.  PSC TLV Format  . . . . . . . . . . . . . . . . . . . . .   3\n
    \    2.2.  Error Handling  . . . . . . . . . . . . . . . . . . . . .   4\n       2.2.1.
    \ Malformed Messages  . . . . . . . . . . . . . . . . .   4\n       2.2.2.  Well-Formed
    but Unknown or Unexpected TLV . . . . . .   4\n   3.  Incorrect Local Status after
    Failure  . . . . . . . . . . . .   5\n   4.  Handling a Capabilities Mismatch
    \ . . . . . . . . . . . . . .   5\n     4.1.  Protection Type Mismatch  . . .
    . . . . . . . . . . . . .   5\n     4.2.  R Mismatch  . . . . . . . . . . . .
    . . . . . . . . . . .   6\n     4.3.  Unsupported Modes . . . . . . . . . . .
    . . . . . . . . .   6\n   5.  Reversion Deadlock Due to a Race Condition  . .
    . . . . . . .   7\n   6.  Clarifying PSC's Behavior in the Face of Multiple Inputs
    \ . .   8\n   7.  Security Considerations . . . . . . . . . . . . . . . . . .
    .  10\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  10\n
    \  9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  10\n   10.
    References  . . . . . . . . . . . . . . . . . . . . . . . . .  10\n     10.1.
    \ Normative References . . . . . . . . . . . . . . . . . .  10\n     10.2.  Informative
    References . . . . . . . . . . . . . . . . .  10\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document contains a number of updates to PSC [RFC6378].
    \ One\n   provides some rules and recommendations around the use of TLVs in\n
    \  PSC.  Three of the updates address issues #2, #7, and #8 as\n   identified
    in the ITU's liaison statement \"Recommendation ITU-T\n   G.8131/Y.1382 revision
    - Linear protection switching for MPLS-TP\n   networks\" [LIAISON].  Another clears
    up a behavior that was not well\n   explained in RFC 6378.  These updates are
    not changes to the\n   protocol's packet format or to PSC's design; they are corrections
    and\n   clarifications to specific aspects of the protocol's procedures.\n   This
    document does not introduce backward compatibility issues with\n   implementations
    of RFC 6378.\n   It should be noted that [RFC7271] contains protocol mechanisms
    for an\n   alternate mode of operating MPLS-TP PSC.  Those modes are built on\n
    \  the message structures and procedures of [RFC6378], and so, while\n   this
    document does not update [RFC7271], it has an impact on that\n   work through
    its update to [RFC6378].\n   This document assumes familiarity with RFC 6378 and
    its terms,\n   conventions, and acronyms.  Any term used in this document but
    not\n   defined herein can be found in RFC 6378.  In particular, this\n   document
    shares the acronyms defined in Section 2.1 of RFC 6378.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119 [RFC2119].\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Message Formatting and Error Handling\n   This section covers message formatting
    as well as some recommended\n   error checking.\n"
  - contents:
    - "2.1.  PSC TLV Format\n   [RFC6378] provides the capability to carry TLVs in
      the PSC messages.\n   All fields are encoded in network byte order.  Each TLV
      contains\n   three fields, as follows:\n       0                   1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |             Type              |            Length             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |                             Value                             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Type field (T):\n   A two-octet field that encodes a type value.  The type
      values are\n   recorded in the IANA registry \"MPLS PSC TLV Registry\".\n   Length
      field (L):\n   A two-octet field that encodes the length in octets of the Value\n
      \  field.  The value of this field MUST be a multiple of 4.\n   Value field
      (V):\n   The payload of the TLV.  The length of this field (which is the value\n
      \  of the Length field) MUST be a multiple of 4 octets, and so this\n   field
      may contain explicit padding.  The length of each single TLV is\n   the sum
      of the lengths of its three fields: the length of the value\n   field + 4.  The
      overall TLV Length field in the PSC message contains\n   the total length of
      all TLVs in octets.\n"
    title: 2.1.  PSC TLV Format
  - contents:
    - "2.2.  Error Handling\n   It is recommended to implement error and bounds checking
      to ensure\n   that received messages, if improperly formatted, are handled in
      such\n   a way to minimize the impact of this formatting on the behavior of\n
      \  the network and its devices.  This section covers two such areas --\n   malformed
      messages and well-formed but unexpected TLVs.\n   This text is not intended
      to limit the error or bounds checking a\n   device performs.  The recommendations
      herein should be taken as a\n   starting point.\n"
    - contents:
      - "2.2.1.  Malformed Messages\n   An implementation SHOULD:\n   o  Ensure any
        fields prior to TLV Length are consistent with RFC\n      6378, particularly
        Section 4.2 of that document.\n   o  Ensure the overall length of the message
        matches the value in the\n      TLV Length + 12.\n   o  Check that the sum
        of the lengths of all TLVs matches the value in\n      the TLV Length.\n   If
        an implementation receives a message that fails any malformed\n   message
        checks, it MUST drop the message and SHOULD alert the\n   operator to the
        malformed message.  The method(s) used to alert the\n   operator are outside
        the scope of this document but may include\n   things like syslog or console
        messages.\n"
      title: 2.2.1.  Malformed Messages
    - contents:
      - "2.2.2.  Well-Formed but Unknown or Unexpected TLV\n   If a message is deemed
        to be properly formed, an implementation\n   SHOULD check all TLVs to ensure
        that it knows what to do with them.\n   A well-formed but unknown or unexpected
        TLV value MUST be ignored,\n   and the rest of the message processed as if
        the ignored TLV did not\n   exist.  An implementation detecting a malformed
        TLV SHOULD alert the\n   operator as described in Section 2.2.1.\n"
      title: 2.2.2.  Well-Formed but Unknown or Unexpected TLV
    title: 2.2.  Error Handling
  title: 2.  Message Formatting and Error Handling
- contents:
  - "3.  Incorrect Local Status after Failure\n   Issue #2 in the liaison statement
    identifies a case where a strict\n   reading of RFC 6378 leaves a node reporting
    an inaccurate status:\n   A node can end up sending incorrect status -- NR(0,1)
    -- despite the\n   failure of the protection LSP (P-LSP).  This is clearly not
    correct,\n   as a node should not be sending NR if it has a local failure.  To\n
    \  address this issue, the fourth bullet in Section 4.3.3.3 of RFC 6378\n   is
    replaced with the following three bullets:\n   o  If the current state is due
    to a local or remote Manual Switch, a\n      local Signal Fail indication on the
    protection path SHALL cause\n      the LER to enter local Unavailable state and
    begin transmission of\n      an SF(0,0) message.\n   o  If the LER is in local
    Protecting Administrative state due to a\n      local Forced Switch, a local Signal
    Fail indication on the\n      protection path SHALL be ignored.\n   o  If the
    LER is in remote Protecting Administrative state due to a\n      remote Forced
    Switch, a local Signal Fail indication on the\n      protection path SHALL cause
    the LER to remain in remote Protecting\n      administrative state and transmit
    an SF(0,1) message.\n"
  title: 3.  Incorrect Local Status after Failure
- contents:
  - "4.  Handling a Capabilities Mismatch\n   PSC has no explicit facility to negotiate
    any properties of the\n   protection domain.  It does, however, have the ability
    to signal two\n   properties of that domain, via the Protection Type (PT) and
    Revertive\n   (R) bits.  RFC 6378 specifies that if these bits do not match an\n
    \  operator \"SHALL [be notified]\" (PT, Section 4.2.3) or \"SHOULD be\n   notified\"
    (R, Section 4.2.4).  However, there is no text that\n   specifies the behavior
    of the end nodes of a protection domain in\n   case of a mismatch.  This section
    provides that text, as requested by\n   issue #7 in the liaison statement.\n"
  - contents:
    - "4.1.  Protection Type Mismatch\n   The behavior of the protection domain depends
      on the exact Protection\n   Type (PT) mismatch.  Section 4.2.3 of RFC 6378 specifies
      three\n   protection types -- bidirectional switching using a permanent bridge,\n
      \  bidirectional switching using a selector bridge, and unidirectional\n   switching
      using a permanent bridge.  They are abbreviated here as BP,\n   BS, and UP.\n
      \  There are three possible mismatches: {BP, UP}, {BP, BS}, and\n   {UP, BS}.
      \ The priority is:\n   UP > BS > BP\n   In other words:\n   o  If the PT mismatch
      is {BP, UP}, the node transmitting BP MUST\n      switch to UP mode if it is
      supported.\n   o  If the PT mismatch is {BP, BS}, the node transmitting BP MUST\n
      \     switch to BS mode if it is supported.\n   o  If the PT mismatch is {UP,
      BS}, the node transmitting BS MUST\n      switch to UP mode if it is supported.\n
      \  If a node does not support a mode to which it is required to switch,\n   then
      that node MUST behave as in Section 4.3.\n"
    title: 4.1.  Protection Type Mismatch
  - contents:
    - "4.2.  R Mismatch\n   The R bit indicates whether the protection domain is in
      revertive or\n   non-revertive behavior.  If the R bits do not match, the node\n
      \  indicating non-revertive MUST switch to Revertive if it is supported.\n   If
      it is not supported, a node must behave as in Section 4.3.\n"
    title: 4.2.  R Mismatch
  - contents:
    - "4.3.  Unsupported Modes\n   An implementation may not support all three PT
      modes and/or both R\n   modes, and thus a pair of nodes may be unable to converge
      on a common\n   mode.  This creates a permanent mismatch, resolvable only by
      operator\n   intervention.  An implementation SHOULD alert the operator to an\n
      \  irreconcilable mismatch.\n   It is desirable to allow the protection domain
      to function in a non-\n   failure mode even if there is a mismatch, as the mismatches
      of PT or\n   R have to do with how nodes recover from a failure.  An\n   implementation
      SHOULD allow traffic to be sent on the Working LSP as\n   long as there is no
      failure (e.g., NR state) regardless of any PT or\n   R mismatch.\n   If there
      is a trigger that would cause the protection LSP to be used,\n   such as SF
      or MS, a node MUST NOT use the protection LSP to carry\n   traffic.\n"
    title: 4.3.  Unsupported Modes
  title: 4.  Handling a Capabilities Mismatch
- contents:
  - "5.  Reversion Deadlock Due to a Race Condition\n   Issue #8 in the liaison statement
    identifies a deadlock case where\n   each node can end up sending NR(0,1) when
    it should instead be in the\n   process of recovering from the failure (i.e.,
    entering into WTR or\n   DNR, as appropriate for the protection domain).  The
    root of the\n   issue is that a pair of nodes can simultaneously enter WTR state,\n
    \  receive an out-of-date SF-W indication, transition into a remotely\n   triggered
    WTR, and remain in remotely triggered WTR waiting for the\n   other end to trigger
    a change in status.\n   In the case identified in issue #8, each node can end
    up sending\n   NR(0,1), which is an indication that the transmitting node has
    no\n   local failure, but is instead reacting to the remote SF-W.  If a node\n
    \  that receives NR(0,1) is in fact not indicating a local error, the\n   correct
    behavior for the receiving node is to take the received\n   NR(0,1) as an indication
    that there is no error in the protection\n   domain, and recovery procedures (WTR
    or DNR) should begin.\n   This is addressed by adding the following text as the
    penultimate\n   bullet in Section 4.3.3.4 of RFC 6378:\n   o  If a node is in
    Protecting Failure state due to a remote SF-W and\n      receives NR(0,1), this
    SHALL cause the node to begin recovery\n      procedures.  If the LER is configured
    for revertive behavior, it\n      enters into Wait-to-Restore state, starts the
    WTR timer, and\n      begins transmitting WTR(0,1).  If the LER is configured
    for non-\n      revertive behavior, it enters into Do-Not-Revert state and begins\n
    \     transmitting a DNR(0,1) message.\n   Additionally, the penultimate bullet
    in Section 4.3.3.3 is changed\n   from\n   o  A remote NR(0,0) message SHALL be
    ignored if in local Protecting\n      administrative state.\n   to\n   o  A remote
    No Request message SHALL be ignored if in local\n      Protecting administrative
    state.\n   This indicates that a remote NR triggers the same behavior regardless\n
    \  of the value of FPath and Path.  This change does not directly\n   address
    issue #8, but it fixes a similar issue -- if a node receives\n   NR while in Remote
    administrative state, the value of FPath and Path\n   have no bearing on the node's
    reaction to this NR.\n"
  title: 5.  Reversion Deadlock Due to a Race Condition
- contents:
  - "6.  Clarifying PSC's Behavior in the Face of Multiple Inputs\n   RFC 6378 describes
    the PSC state machine.  Figure 1 in Section 3 of\n   RFC 6378 shows two inputs
    into the PSC Control logic -- Local Request\n   logic and Remote PSC Request.
    \ When there is only one input into the\n   PSC Control logic -- a local request
    or a remote request but not both\n   -- the PSC Control logic decides what that
    input signifies and then\n   takes one or more actions, as necessary.  This is
    what the PSC State\n   Machine in Section 4.3 of RFC 6378 describes.\n   RFC 6378
    does not sufficiently describe the behavior in the face of\n   multiple inputs
    into the PSC Control Logic (one Local Request and one\n   Remote Request).  This
    section clarifies the expected behavior.\n   There are two cases to think about
    when considering dual inputs into\n   the PSC Control logic.  The first is when
    the same request is\n   presented from both local and remote sources.  One example
    of this\n   case is a Forced Switch (FS) configured on both ends of an LSP.  This\n
    \  will result in the PSC Control logic receiving both a local FS and\n   remove
    FS.  For convenience, this scenario is written as [L(FS),\n   R(FS)] -- that is,
    Local(Forced Switch) and Remote(Forced Switch).\n   The second case, which is
    handled in exactly the same way as the\n   first, is when the two inputs into
    the PSC Control logic describe\n   different events.  There are a number of variations
    on this case.\n   One example is when there is a Lockout of Protection from the
    Local\n   request logic and a Signal Fail on the Working path from the Remote\n
    \  PSC Request.  This is shortened to [L(LO), R(SF-W)].\n   In both cases, the
    question is not how the PSC Control logic decides\n   which of these is the one
    it acts upon.  Section 4.3.2 of RFC 6378\n   lists the priority order and prioritizes
    the local input over the\n   remote input in case both inputs are of the same
    priority.  So, in\n   the first example it is the local SF that drives the PSC
    Control\n   logic, and in the second example it is the local Lockout that drives\n
    \  the PSC Control logic.\n   The point that this section clears up is around
    what happens when the\n   highest-priority input goes away.  Consider the first
    case.\n   Initially, the PSC Control logic has [L(FS), R(FS)], and L(FS) is\n
    \  driving PSC's behavior.  When L(FS) is removed, but R(FS) remains,\n   what
    does PSC do?  A strict reading of the Finite State Machine (FSM)\n   would suggest
    that PSC transition from PA:F:L into N, and at some\n   future time (perhaps after
    the remote request refreshes), PSC would\n   transition from N to PA:F:R.  This
    is an unreasonable behavior, as\n   there is no sensible justification for a node
    behaving as if things\n   were normal (i.e., N state) when it is clear that they
    are not.\n   The second case is similar.  If a node starts with [L(LO), R(SF-W)]\n
    \  and the local lockout is removed, a strict reading of the state\n   machine
    would suggest that the node transition from UA:LO:L to N, and\n   then at some
    future time presumably notice the R(SF-W) and transition\n   from N to PF:W:R.
    \ As with the first case, this is clearly not a\n   useful behavior.\n   In both
    cases, the request that was driving PSC's behavior was\n   removed.  What should
    happen is that the PSC Control logic should,\n   upon removal of an input, immediately
    reevaluate all other inputs to\n   decide on the next course of action.  This
    requires an implementation\n   to store the most recent local and remote inputs
    regardless of their\n   eventual use as triggers for the PSC Control Logic.\n
    \  There is also a third case.  Consider a node with [L(FS), R(LO)].  At\n   some
    point in time, the remote node replaces its Lockout request with\n   a Signal
    Fail on Working, so that the inputs into the PSC Control\n   logic on the receiving
    node go to [L(FS), R(SF-W)].  Similar to the\n   first two cases, the node should
    immediately reevaluate both its\n   local and remote inputs to determine the highest
    priority among them\n   and act on that input accordingly.  That is in fact what
    happens, as\n   defined in Section 4.3.3 of RFC 6378:\n      When a LER is in
    a remote state, i.e., state transition in\n      reaction to a PSC message received
    from the far-end LER, and\n      receives a new PSC message from the far-end LER
    that indicates a\n      contradictory state, e.g., in remote Unavailable state
    receiving a\n      remote FS(1,1) message, then the PSC Control logic SHALL\n
    \     reevaluate all inputs (both the local input and the remote\n      message)
    as if the LER is in the Normal state.\n   This section extends that paragraph
    to handle the first two cases.\n   The essence of the quoted paragraph is that
    when faced with multiple\n   inputs, PSC must reevaluate any changes as if it
    were in Normal\n   state.  So, the quoted paragraph is replaced with the following
    text:\n      The PSC Control logic may simultaneously have Local and Remote\n
    \     requests, and the highest priority of these requests ultimately\n      drives
    the behavior of the PSC Control logic.  When this highest-\n      priority request
    is removed or is replaced with another input,\n      then the PSC Control logic
    SHALL immediately reevaluate all inputs\n      (both the local input and the remote
    message), transitioning into\n      a new state only upon reevaluation of all
    inputs.\n"
  title: 6.  Clarifying PSC's Behavior in the Face of Multiple Inputs
- contents:
  - "7.  Security Considerations\n   These changes and clarifications raise no new
    security concerns.  RFC\n   6941 [RFC6941] provides the baseline security discussion
    for MPLS-TP,\n   and PSC (as described in both RFC 6378 and this document) falls
    under\n   that umbrella.  Additionally, Section 2.2 clarifies how to react to\n
    \  malformed or unexpected messages.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   IANA has marked the value 0 in the \"MPLS PSC TLV
    Registry\" as\n   \"Reserved, not to be allocated\" and updated the references
    to show\n   [RFC6378] and this document (RFC 7324).  Note that this document\n
    \  provides documentation of an action already taken by IANA but not\n   recorded
    in RFC 6378.\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Acknowledgements\n   The author of this document thanks Taesik Cheung, Alessandro\n
    \  D'Alessandro, Annamaria Fulignoli, Sagar Soni, George Swallow, and\n   Yaacov
    Weingarten for their contributions and review, and Adrian\n   Farrel for the text
    of Section 2.\n"
  title: 9.  Acknowledgements
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC6378]  Weingarten, Y., Bryant, S., Osborne, E., Sprecher, N.,
      and\n              A. Fulignoli, \"MPLS Transport Profile (MPLS-TP) Linear\n
      \             Protection\", RFC 6378, October 2011.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [LIAISON]  ITU-T SG15, \"Liaison Statement:
      Recommendation ITU-T\n              G.8131/Y.1382 revision - Linear protection
      switching for\n              MPLS-TP networks\", <https://datatracker.ietf.org/\n
      \             liaison/1205/>.\n   [RFC6941]  Fang, L., Niven-Jenkins, B., Mansfield,
      S., and R.\n              Graveman, \"MPLS Transport Profile (MPLS-TP) Security\n
      \             Framework\", RFC 6941, April 2013.\n   [RFC7271]  Ryoo, J., Gray,
      E., van Helvoort, H., D'Alessandro, A.,\n              Cheung, T., and E. Osborne,
      \"MPLS Transport Profile (MPLS-\n              TP) Linear Protection to Match
      the Operational\n              Expectations of Synchronous Digital Hierarchy,
      Optical\n              Transport Network, and Ethernet Transport Network\n              Operators\",
      RFC 7271, June 2014.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Author's Address\n   Eric Osborne\n   EMail: eric.osborne@notcom.com\n"
  title: Author's Address
