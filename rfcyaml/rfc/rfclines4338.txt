Abstract This document specifies the way of encapsulating IPv6, IPv4, and Address Resolution Protocol (ARP) packets over Fibre Channel.
This document also specifies the method of forming IPv6 link local addresses and statelessly autoconfigured IPv6 addresses on Fibre Channel networks, and a mechanism to perform IPv4 address resolution over Fibre Channel networks.
This document obsoletes RFC 2625 and RFC 3831.
Introduction Fibre Channel (FC) is a high speed serial interface technology that supports several Upper Layer Protocols including Small Computer System Interface (SCSI), IPv6 [IPv6], and IPv4 [IPv4].
[RFC 2625] defined how to encapsulate
IPv4 and Address Resolution Protocol (ARP) packets over Fibre Channel for a subset of Fibre Channel devices.
This specification enables the support of IPv4 for a broader category of Fibre Channel devices.
In addition, this specification simplifies [RFC 2625] by removing unused options and clarifying current implementations.
This document obsoletes [RFC 2625].
Specific [RFC 2625] limitations that this document aims to resolve are the following:  N Port Name format restriction.
[RFC 2625] restricts the use of IPv4 to Fibre Channel devices having the format 0x1
N Port Name, but many current implementations use other N Port Name formats.
Use of Fibre Channel Address Resolution Protocol (FARP).
[RFC 2625] requires the support of FARP to map N Port Names to N Port IDs, but many current implementations use other methods, such as the Fibre Channel Name Server.
Missing support for IPv4 multicast.
[RFC 2625] does not specify how to transmit IPv4 packets with a multicast destination address over Fibre Channel.
[RFC 3831] defines how to encapsulate IPv6 over Fibre Channel and a method of forming IPv6 link local addresses [AARCH] and statelessly autoconfigured IPv6 addresses on Fibre Channel networks.
[RFC 3831] also describes the content of the Source/Target Link layer Address option used in Neighbor Discovery [DISC] when the messages are transmitted on a Fibre Channel network.
This document obsoletes [RFC 3831].
Warning to readers familiar with Fibre Channel: both Fibre Channel and IETF standards use the same byte transmission order.
However, the bit numbering is different.
See Appendix C for guidance.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [KEYWORDS].
Summary of Fibre Channel 2.1.
Overview Fibre Channel (FC) is a gigabit speed network technology primarily used for storage networking.
Fibre Channel is standardized in the T11 Technical Committee of the InterNational Committee for Information Technology Standards (INCITS), an American National Standard Institute (ANSI) accredited standards committee.
Fibre Channel devices are called Nodes.
Each Node has one or more Ports that connect to Ports of other devices.
Fibre Channel may be implemented using any combination of the following three topologies:  a point to point link between two Ports;  a set of Ports interconnected by a switching network called a Fabric, as defined in [FC FS];  a set of Ports interconnected with a loop topology, as defined in [FC AL 2].
A Node Port that does not operate in a loop topology is called an N Port.
A Node Port that operates in a loop topology using the loop specific protocols is designated as an NL Port.
Nx Port is used to indicate a Node Port that is capable of operating in either mode.
A Fabric Port that does not operate in a loop topology is called an F Port.
A Fabric Port that operates in a loop topology using the loop specific protocols is designated as an FL Port.
Fx Port is used to indicate a Fabric Port that is capable of operating in either mode.
A Fibre Channel network, built with any combination of the FC topologies described above, is a multiaccess network with broadcast capabilities.
From an IPv6 point of view, a Fibre Channel network is an IPv6 Link [IPv6].
Nx Ports are what [IPv6] calls Interfaces.
From an IPv4 point of view, a Fibre Channel network is an IPv4 Local Network [IPv4].
Nx Ports are what [IPv4] calls Local Network Interfaces.
Identifiers and Login Fibre Channel entities are identified by non volatile 64 bit Name Identifiers.
[FC FS] defines several formats of Name Identifiers.
The value of the most significant 4 bits defines the format of a Name Identifier.
These Name Identifiers are referred to in a more concise manner as follows:
an Nx Port's Name Identifier is called N Port Name;  an Fx Port's Name Identifier is called F Port Name;  a Node's Name Identifier is called Node Name;  a Fabric's Name Identifier is called Fabric Name.
An Nx Port connected to a Fibre Channel network is associated with two identifiers, its non volatile N Port Name and a volatile 24 bit address called N Port ID.
The N Port Name is used to identify the Nx Port, and the N Port ID is used for communications among Nx Ports.
Each Nx Port acquires an N Port ID from the Fabric by performing a process called Fabric Login, or FLOGI.
The FLOGI process is used also to negotiate several communications parameters between the Nx Port and the Fabric, such as the receive data field size, which determines the maximum size of the Fibre Channel frames that may be transferred between the Nx Port and the Fabric.
Before effective communication may take place between two Nx Ports, they must complete a process called Port Login, or PLOGI.
The PLOGI process provides each Nx Port with the other Nx Port's N Port Name, and negotiates several communication parameters, such as the receive data field size, which determines the maximum size of the Fibre Channel frames that may be transferred between the two Nx Ports.
Both Fabric Login and Port Login may be explicit (i.e., performed using specific FC control messages called Extended Link Services, or ELSes) or implicit (i.e., in which the parameters are specified by configuration or other methods).
FC Levels and Frame Format [FC FS] describes the Fibre Channel protocol using 5 different levels.
The FC 2 and FC 4 levels are relevant for this specification.
The FC 2 level defines the FC frame format, the transport services, and the control functions necessary for information transfer.
The FC 4 level supports Upper Level Protocols, such as IPv6, IPv4, and SCSI.
The Fibre Channel frame format is shown in figure 1.
Figure 1: Fibre Channel Frame Format
The Start of Frame (SOF) and End of Frame (EOF) are special FC transmission words that act as frame delimiters.
The Cyclic Redundancy Check (CRC) is 4 octets long and is used to verify the integrity of a frame.
The FC Header is 24 octets long and contains several fields associated with the identification and control of the Data Field.
The Data Field is of variable size, ranging from 0 to 2112 octets, and includes the user data in the Frame Payload field and Optional Headers.
The currently defined Optional Headers are the following:  ESP Header;  Network Header;  Association Header;
The value of the SOF field determines the FC Class of service associated with the frame.
Five Classes of service are specified in [FC FS].
They are distinguished primarily by the method of flow control between the communicating Nx Ports and by the level of data integrity provided.
A given Fabric or Nx Port may support one or more of the following Classes of service:  Class 1:
Dedicated physical connection with delivery confirmation;  Class 2: Frame multiplexed service with delivery confirmation;  Class 3: Datagram service;  Class 4:
Fractional bandwidth;  Class 6: Reliable multicast via dedicated connections.
Classes 3 and 2 are commonly used for storage networking applications; Classes 1 and 6 are typically used for specialized applications in avionics.
Class 3 is recommended for IPv6, IPv4, and ARP (see section 4.3).
Sequences and Exchanges An application level payload such as an IPv6 or IPv4 packet is called an Information Unit at the FC 4 level of Fibre Channel.
Each FC 4 Information Unit is mapped to an FC Sequence by the FC 2 level.
An FC Sequence consists of one or more FC frames related by the value of the Sequence ID (SEQ ID) field of the FC Header.
The architectural maximum data that may be carried by an FC frame is 2112 octets.
The maximum usable frame size depends on the Fabric and Nx Port implementations and is negotiated during the Login process.
Whenever an Information Unit to be transmitted exceeds this value, the FC 2 level segments it into multiple FC frames, sent as a single Sequence.
The receiving Nx Port reassembles the Sequence of frames and delivers a reassembled Information Unit to the FC 4 level.
The Sequence Count (SEQ CNT) field of the FC Header may be used to ensure frame ordering.
Multiple Sequences may be grouped together as belonging to the same FC Exchange.
The Exchange is a mechanism used by two Nx Ports to identify and manage an operation between them.
The Exchange is opened when the operation is started between the two Nx Ports, and closed when the operation ends.
FC frames belonging to the same Exchange are related by the value of the Exchange ID fields in the FC Header.
An Originator Exchange ID (OX ID) and a Responder Exchange ID (RX ID) uniquely identify the Exchange between a pair of Nx Ports.
This specification requires an IP capable Nx Port to have the following properties:
The format of its N Port Name MUST be one of 0x1, 0x2, 0x5, 0xC, 0xD, 0xE, 0xF (see section 5.1);
It MUST support Class 3;
It MUST support continuously increasing SEQ CNT [FC FS];  It MUST be able to transmit and receive an FC 4 Information Unit
at least 1304 octets long (see section 4.1);  It SHOULD support a receive data field size for Device Data FC frames of at least 1024 octets (see section 10).
IPv6, IPv4, and ARP Encapsulation 4.1.
FC Sequence Format for IPv6 and IPv4 Packets
An IPv6 or IPv4 packet is mapped to an Information Unit at the FC 4 level of Fibre Channel, which in turn is mapped to an FC Sequence by the FC 2 level [FC FS].
An FC Information Unit containing an IP packet MUST carry the FC Network Header [FC FS] and the Logical Link Control/SubNetwork Access Protocol (LLC/SNAP)
header [IEEE LLC], resulting in the FC Information Unit format shown in figure 2.
FC Information Unit Mapping an IP Packet
In order to support the minimum IPv6 MTU (i.e., 1280 octets), an Nx Port supporting IP MUST be able to transmit and receive an FC 4 Information Unit
at least 1304 octets long (i.e., 1280   8   16).
The FC ESP Header [FC FS]
MAY be used to secure the FC frames composing an IP FC Sequence.
Other FC Optional Headers MUST NOT be used in an IP FC Sequence.
An IP FC Sequence often consists of more than one frame, all frames having the same TYPE (see section 4.4).
The first frame of the Sequence MUST include the FC Network Header and the LLC/SNAP header.
The other frames MUST NOT include them, as shown in figure 3.
First Frame of an IP FC Sequence  //
FC Network Header   LLC/SNAP header
Subsequent Frames of an IP FC Sequence  //
Optional Headers in an IP FC Sequence 4.2.
FC Sequence Format for ARP Packets
An ARP packet is mapped to an Information Unit at the FC 4 level of Fibre Channel, which in turn is mapped to an FC Sequence by the FC 2 level.
An FC Information Unit containing an ARP packet MUST carry the FC Network Header [FC FS] and the LLC/SNAP header [IEEE LLC], resulting in the FC Information Unit format shown in figure 4.
FC Information Unit Mapping an ARP Packet
Given the limited size of an ARP packet (see section 7),
an FC Sequence carrying an ARP packet MUST be mapped to a single FC frame that MUST include the FC Network Header and the LLC/SNAP header.
The FC ESP Header [FC FS]
MAY be used to secure an FC frame carrying an ARP packet.
Other FC Optional Headers MUST NOT be used in an FC frame carrying an ARP packet.
This specification uses FC Class 3.
The following types of packets MUST be mapped in Class 3 FC frames:  multicast IPv6 packets;  multicast/broadcast IPv4 packets;  Control Protocol packets (e.g., ARP packets;
IPv6 packets carrying ICMPv6 [ICMPv6], Neighbor Discovery [DISC], or Multicast Listener Discovery [MLDv2] messages; IPv4 packets carrying ICMP [ICMPv4] or IGMP [IGMPv3] messages; IPv6 and IPv4 Routing Protocols packets).
Other IPv6 and IPv4 packets (i.e., unicast IP packets carrying data traffic) SHOULD be mapped in Class 3 FC frames as well.
Support for reception of IPv4 or IPv6 packets mapped in FC frames of any Class other than Class 3 is OPTIONAL; receivers MAY ignore them.
The fields of the Fibre Channel Header are shown in figure 5.
The D ID and S ID fields contain, respectively, the destination N Port ID and the source N Port ID. 0
FC Header Format To encapsulate IPv6 and IPv4 over Fibre Channel, the following code points apply.
0x05 (IP over Fibre Channel);  CS CTL/Prio: 0x00 is the default, see [FC FS] for other values;  DF CTL: 0x20 (Network Header) for the first FC frame of an IPv6 or IPv4 Sequence, 0x00 for the following FC frames.
If the FC ESP Header is used, then 0x60 for the first FC frame of an IPv6 or IPv4 Sequence, 0x40
for the following FC frames;  F CTL, SEQ ID, SEQ CNT, OX ID, RX ID: see section 11, section 12, and [FC FS] for additional requirements;
Parameter: if Relative Offset [FC FS] is not used, the content of this field MUST be ignored by the receiver, and SHOULD be set to zero by the sender.
If Relative Offset is used, see [FC FS].
To encapsulate ARP over Fibre Channel, the following code points apply.
0x05 (IP over Fibre Channel);  CS CTL/Prio: 0x00 is the default, see [FC FS] for other values;  DF CTL: 0x20 (Network Header).
If the FC ESP Header is used, then 0x60;  F CTL, SEQ ID, SEQ CNT, OX ID, RX ID: see section 11, section 12, and [FC FS] for additional requirements;  Parameter: SHOULD be set to zero.
The fields of the FC Network Header are shown in figure 6.
For use with IPv6, IPv4, and ARP, the N Port Names formats MUST be one of 0x1, 0x2, 0x5, 0xC, 0xD, 0xE, 0xF [FC FS].
Figure 6: FC Network Header Format 4.6.
The fields of the LLC/SNAP header [IEEE LLC] are shown in figure 7. 0
To encapsulate IPv6, IPv4, and ARP over Fibre Channel, the following code points MUST be used:  DSAP:
PID:  0x86DD for IPv6, 0x0800
for IPv4, 0x0806 for ARP.
Bit and Byte Ordering IPv6, IPv4, and
ARP packets are mapped to the FC 4 level using the big endian byte ordering that corresponds to the standard network byte order or canonical form.
The default MTU size for IPv6 packets over Fibre Channel is 65280 octets.
Large IPv6 packets are mapped to a Sequence of FC frames (see section 2.4).
This size may be reduced by a Router Advertisement [DISC] containing an MTU option that specifies a smaller MTU, or by manual configuration of each Nx Port.
However, as required by [IPv6], the MTU MUST NOT be lower than 1280 octets.
If a Router Advertisement received on an Nx Port has an MTU option specifying an MTU larger than 65280, or larger than a manually configured value, that MTU option MAY be logged to system management but MUST be otherwise ignored.
As the default MTU size far exceeds the message sizes typically used in the Internet, an IPv6 over FC implementation SHOULD implement Path MTU Discovery [PMTUD6], or at least maintain different MTU values for on link and off link destinations.
For correct operation of IPv6 in a routed environment, it is critically important to configure an appropriate MTU option in Router Advertisements.
For correct operation of IPv6 when mixed media (e.g., Ethernet and Fibre Channel) are bridged together, the smallest MTU of all the media must be advertised by routers in an MTU option.
If there are no routers present, this MTU must be manually configured in each node that is connected to a medium with a default MTU larger than the smallest MTU.
The default MTU size for IPv4 packets over Fibre Channel is 65280 octets.
Large IPv4 packets are mapped to a Sequence of FC frames (see section 2.4).
This size may be reduced by manual configuration of each Nx Port or by the Path MTU Discovery technique [PMTUD4].
IPv6 Stateless Address Autoconfiguration 5.1.
IPv6 Interface Identifier and Address Prefix
The IPv6 Interface ID [AARCH] for an Nx Port is based on the EUI 64 address [EUI64] derived from the Nx Port's N Port Name.
The IPv6 Interface Identifier is obtained by complementing the Universal/Local (U/L) bit of the OUI field of the derived EUI 64 address.
The U/L bit has no function in Fibre Channel; however, it has to be properly handled when a Name Identifier is converted to an EUI 64 address.
[FC FS] specifies a method to map format 0x1
(IEEE 48 bit address), 0x2 (IEEE Extended), or 0x5 (IEEE Registered)
FC Name Identifiers in EUI 64 addresses.
This allows the usage of these Name Identifiers to support IPv6.
[FC FS] also defines EUI 64 mapped FC Name Identifiers (formats 0xC, 0xD, 0xE, and 0xF) that are derived from an EUI 64 address.
It is possible to reverse this address mapping to obtain the original EUI 64 address in order to support IPv6.
IPv6 stateless address autoconfiguration MUST be performed as specified in [ACONF].
An IPv6 Address Prefix used for stateless address autoconfiguration of an Nx Port
MUST have a length of 64 bits.
Generating an Interface ID from a Format 1 N Port Name
The Name Identifier format 0x1 is shown in figure 8. 0
The EUI 64 address derived from this Name Identifier has the format shown in figure 9 [FC FS].
EUI 64 Address from a Format 0x1 Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
Therefore, the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format shown in figure 10. 0
IPv6 Interface ID from a Format 0x1 Name Identifier
As an example, the FC Name Identifier 0x10 00
34 63 46 AB CD EF generates the IPv6 Interface Identifier 3463:461A:
Generating an Interface ID from a Format 2 N Port Name
The Name Identifier format 0x2 is shown in figure 11. 0
The EUI 64 address derived from this Name Identifier has the format shown in figure 12 [FC FS].
EUI 64 Address from a Format 0x2 Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
Therefore, the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format shown in figure 13. 0
IPv6 Interface ID from a Format 0x2 Name Identifier
As an example, the FC Name Identifier 0x27 89 34
63 46 AB CD EF generates the IPv6 Interface Identifier 3463:462A:
Generating an Interface ID from a Format 5 N Port Name
The Name Identifier format 0x5 is shown in figure 14. 0
The EUI 64 address derived from this Name Identifier has the format shown in figure 15 [FC FS].
EUI 64 Address from a Format 0x5
The IPv6 Interface Identifier is obtained from this EUI 64 address complementing the U/L bit in the OUI field.
Therefore, the OUI in the IPv6
Interface ID is exactly as in the FC Name Identifier.
The resulting IPv6 Interface Identifier has local scope [AARCH] and the format shown in figure 16. 0
IPv6 Interface ID from a Format 0x5
As an example, the FC Name Identifier 0x53
34 6A BC DE F7 89 generates the IPv6 Interface Identifier 3463:465A:
Generating an Interface ID from an EUI 64 Mapped N Port Name
The EUI 64 mapped Name Identifiers formats (formats 0xC through 0xF) are derived from an EUI 64 address by compressing the OUI field of such addresses.
The compression is performed by removing the Universal/Local and Individual/Group bits from the OUI, and by putting bits 0 to 5 of the OUI in the first octet of the Name Identifier, and bits 8 to 23 of the OUI in the second and third octet of the Name Identifier, as shown in figure 17. 0
The EUI 64 address used to generate the Name Identifier shown in figure 17 has the format shown in figure 18. 0
EUI 64 Address from an EUI 64 Mapped Name Identifier
The IPv6 Interface Identifier is obtained from this EUI 64 address by complementing the U/L bit in the OUI field.
The resulting IPv6 Interface Identifier has global scope [AARCH] and the format shown in figure 19. 0
IPv6 Interface ID from an EUI 64 Mapped Name Identifier
As an example, the FC Name Identifier 0xCD 63 46 AB 01
25 78 9A generates the IPv6 Interface Identifier 3663:46AB:0125:789A. 6.
The IPv6 link local address [AARCH] for an Nx Port is formed by appending the Interface Identifier (as defined in section 5) to the prefix FE80::/64.
The resulting address is shown in figure 20.
IPv6 Link local Address Format 7.
The Address Resolution Protocol defined in [ARP] is designed to be a general purpose protocol, to accommodate many network technologies and many Upper Layer Protocols.
[RFC 2625] chose to use for Fibre Channel the same ARP packet format used for Ethernet networks.
In order to do that, [RFC 2625] restricted the use of IPv4 to Nx Ports having N Port Name format 0x1.
Although this may have been a reasonable choice at that time, today there are Nx Ports with an N Port Name format other than 0x1 in widespread use.
This specification accommodates Nx Ports with N Port Names of a format different from 0x1 by defining a Fibre Channel specific version of the ARP protocol (FC ARP), carrying both N Port Name and N Port ID as Hardware (HW) Address.
IANA has registered the number 18 (decimal) to identify Fibre Channel as ARP HW type.
The FC ARP packet format is shown in figure 21.
The length of the FC ARP packet is 40 octets. 0
The following code points MUST be used with FC ARP:  HW Type:   0x0012
(Length in octets of the HW Address);  Proto Len: 4  (Length in octets of the Protocol Address);
for ARP Request, 0x0002 for ARP Reply [ARP];  HW Address of Sender: the HW Address (see section 8) of the Requester in an ARP Request, or the HW Address of the Responder in an ARP Reply;  Protocol Address of Sender: the IPv4 address of the Requester in an ARP Request, or that of the Responder in an ARP Reply;  HW Address of Target: set to zero in an ARP Request, and to the HW Address (see section 8) of the Requester in an ARP Reply;  Protocol Address of Target: the IPv4 address of the Responder in an ARP Request, or that of the Requester in an ARP Reply.
The Link layer Address used in the Source/Target Link layer Address option (see section 9.2) and the Hardware Address used in FC ARP (see section 7) have the same format, shown in figure 22. 0
Address/HW Address Format Reserved fields MUST be set to zero when transmitting, and MUST be ignored when receiving.
Address Mapping for Unicast 9.1.
An Nx Port has two kinds of Fibre Channel
a non volatile 64 bit address, called N Port Name;  a volatile 24 bit address, called N Port ID.
The N Port Name is used to uniquely identify the Nx Port, and the N Port ID is used to route frames to the Nx Port.
Both FC addresses are required to resolve an IPv6 or IPv4 unicast address.
The fact that the N Port ID is volatile implies that an Nx Port MUST validate the mapping between its N Port Name and N Port ID when certain Fibre Channel events occur (see Appendix B).
The procedure for mapping IPv6 unicast addresses into Fibre Channel link layer addresses uses the Neighbor Discovery Protocol [DISC].
The Source/Target Link layer Address option has the format shown in figure 23 when the link layer is Fibre Channel. 0
2 for Target Link layer address.
the Nx Port's Link layer Address (see section 8).
The procedure for mapping IPv4 unicast addresses into Fibre Channel link layer addresses uses the FC ARP protocol, as specified in section 7 and [ARP].
A source Nx Port that has to send IPv4 packets to a destination
Nx Port, known by its IPv4 address, MUST perform the following steps: 1)
Nx Port first consults its local mapping tables for a mapping <destination IPv4 address
, N Port Name, N Port ID>. 2)
If such a mapping is found, and a valid Port Login is in place with the destination Nx Port, then the source Nx Port sends the IPv4 packets to the destination Nx Port using the retrieved N Port ID as D ID.
If such a mapping is not found, or a valid Port Login is not in place with the destination
Nx Port, then the source Nx Port sends a broadcast FC ARP Request (see section 10) to its connected FC network.
When a broadcast FC ARP Request is received by the Nx Port with the matching IPv4 address, that Nx Port caches the information carried in the FC ARP Request in its local mapping tables and generates a unicast FC ARP Reply.
If a valid Port Login to the Nx Port that sent the broadcast
FC ARP Request does not exist, the Nx Port MUST perform such a Port Login, and then use it for the unicast reply.
The N Port ID to which the Port Login is directed is taken from the N Port ID field of the Sender HW Address field in the received FC ARP packet.
If no Nx Port has the matching IPv4 address, no unicast FC ARP Reply is returned.
Address Mapping for Multicast IPv6 multicast packets,
IPv4 multicast/broadcast packets, and ARP broadcast packets MUST be mapped to FC Sequences addressed to the broadcast N Port ID 0xFFFFFF, sent in FC Class 3 in a unidirectional Exchange (see section 12).
Appendix A specifies how to transmit a Class 3 broadcast FC Sequence over various Fibre Channel topologies.
The Destination N Port Name field of the FC Network Header MUST be set to the value:  for broadcast ARP and IPv4 packets: 0x10 00 FF FF FF FF FF FF;  for multicast IPv6 packets: 0x10 00
XX YY ZZ QQ, where XX YY ZZ QQ are the 4 least significant octets of the multicast destination IPv6 address;  for multicast IPv4 packets: 0x10 00
01 00 5E XX YY ZZ, where the 23 least significant bits of XX YY ZZ are the 23 least significant bits of the multicast destination IPv4 address and the most significant bit of XX YY ZZ is set to zero.
An Nx Port supporting IPv6 or IPv4 MUST be able to map a received broadcast Class 3 Device Data FC frame to an implicit Port Login context in order to handle IPv6 multicast packets, IPv4 multicast or broadcast packets, and ARP broadcast packets.
The receive data field size of this implicit Port Login MUST be the same across all the Nx Ports connected to the same Fabric, otherwise FC broadcast transmission does not work.
In order to reduce the need for FC Sequence segmentation, the receive data field size of this implicit Port Login SHOULD be 1024 octets.
This receive data field size requirement applies to broadcast Device Data FC frames, not to ELSes.
Receiving an FC Sequence carrying an IPv6 multicast packet, an IPv4 multicast/broadcast packet, or an FC ARP broadcast packet triggers some additional processing by the Nx Port when that IPv6, IPv4, or FC ARP packet requires a unicast reply.
In this case, if a valid Port Login to the Nx Port that sent the multicast or broadcast packet does not exist, the Nx Port MUST perform such a Port Login, and then use it for the unicast reply.
In the case of Neighbor Discovery messages [DISC], the N Port ID to which the Port Login is directed is taken from the N Port ID field of the Source Link layer Address in the received Neighbor Discovery message.
In the case of FC ARP messages, the N Port ID to which the Port Login is directed is taken from the N Port ID field of the Sender HW Address field in the received FC ARP packet.
As an example, if a received broadcast FC Sequence carries an IPv6 multicast unsolicited Router Advertisement [DISC], the receiving Nx Port processes it simply by passing the carried IPv6 packet to the IPv6 layer.
Instead, if a received broadcast FC Sequence carries an IPv6 multicast solicitation message [DISC] requiring a unicast reply, and no valid Port Login exists with the Nx Port sender of the multicast packet, then a Port Login MUST be performed in order to send the unicast reply message.
If a received broadcast FC Sequence carries an IPv6 multicast solicitation message [DISC] requiring a multicast reply, the reply is sent to the broadcast N Port ID 0xFFFFFF.
Sequence Management FC Sequences carrying IPv6, IPv4, or ARP packets are REQUIRED to be non streamed [FC FS].
In order to avoid missing FC frame aliasing by Sequence ID reuse, an Nx Port supporting IPv6 or IPv4 is REQUIRED to use continuously increasing SEQ CNT [FC FS].
Each Exchange MUST start by setting SEQ CNT to zero in the first frame; every frame transmitted after that MUST increment the previous SEQ CNT by one.
The Continue Sequence Condition field in the F CTL field of the FC Header MUST be set to zero [FC FS].
To transmit IPv6, IPv4, or ARP packets to another Nx Port or to a multicast/broadcast address, an Nx Port MUST use dedicated unidirectional Exchanges (i.e., Exchanges dedicated to IPv6, IPv4, or ARP packet transmission and that do not transfer Sequence Initiative).
As such, the Sequence Initiative bit in the F CTL field of the FC Header MUST be set to zero [FC FS].
The RX ID field of the FC Header MUST be set to 0xFFFF.
Unicast FC Sequences carrying unicast Control Protocol packets (e.g., ARP packets;
IPv6 packets carrying ICMPv6 [ICMPv6], Neighbor Discovery [DISC], or Multicast Listener Discovery [MLDv2] messages; IPv4 packets carrying ICMP [ICMPv4] or IGMP [IGMPv3] messages) SHOULD be sent in short lived unidirectional Exchanges (i.e., Exchanges containing only one Sequence, in which both the First Sequence and Last Sequence bits in the F CTL field of the FC Header are set to one [FC FS]).
Unicast FC Sequences carrying other IPv6 and IPv4 packets (i.e., unicast IP packets carrying data traffic) MUST be sent in a long lived unidirectional Exchange (i.e., an Exchange containing one or more Sequences).
IP multicast packets MUST NOT be carried in unicast FC Sequences (see section 10).
Broadcast FC Sequences carrying multicast or broadcast Control Protocol packets (e.g., ARP packets; IPv6 packets carrying ICMPv6 [ICMPv6], Neighbor Discovery [DISC], or Multicast Listener Discovery [MLDv2] messages; IPv4 packets carrying ICMP [ICMPv4] or IGMP [IGMPv3] messages) MUST be sent in short lived unidirectional Exchanges.
Broadcast FC Sequences carrying other IPv6 or IPv4 multicast traffic (i.e., multicast IP packets carrying data traffic)
MAY be sent in long lived unidirectional Exchanges to enable a more efficient multicast distribution.
Reasons to terminate a long lived Exchange include the termination of Port Login and the completion of the IP communication.
A long lived Exchange MAY be terminated by setting the Last Sequence bit in the F CTL field of the FC Header to one, or via the ABTS (Abort Sequence) protocol [FC FS].
A long lived Exchange SHOULD NOT be terminated by transmitting the LOGO ELS, since this may terminate active Exchanges on other FC 4s [FC FS].
The IPv4 encapsulation defined in this document, along with Exchange and Sequence management, are as defined in [RFC 2625].
Implementations following this specification are expected to interoperate with implementations compliant to [RFC 2625] for IPv4 packet transmission and reception.
The main difference between this document and [RFC 2625] is in the address resolution procedure.
[RFC 2625] uses the Ethernet format of the ARP protocol and requires all Nx Ports to have a format 0x1
This specification defines a Fibre Channel format for the ARP protocol that supports all commonly used N Port Names.
In addition, this specification does not use FARP [RFC 2625].
An Nx Port following this specification, and not having a format 0x1
N Port Name, is able to interoperate with an [RFC 2625] implementation by manually configuring the mapping <destination IPv4 address, N Port Name, N Port ID> on the involved Nx Ports.
Through this manual configuration, the ARP protocol does not need to be performed.
However, IPv4 communication is not possible if the [RFC 2625] implementation strictly enforces the requirement for Nx Ports to use N Port Names of format 0x1.
An Nx Port following this specification, and having a format 0x1
N Port Name, is able to interoperate with an [RFC 2625] implementation by manually configuring the mapping <destination IPv4 address, N Port Name, N Port ID> on the involved Nx Ports, or by performing the IPv4 address resolution in compatibility mode, as described below:
When IPv4 address resolution is attempted, the Nx Port MUST send two ARP Requests, the first one according to the FC ARP format and the second one according to the Ethernet ARP format.
If only an Ethernet ARP Reply is received, it provides the N Port Name of the Nx Port having the destination IPv4 address.
The N Port ID associated with the N Port Name received in an Ethernet ARP Reply may be retrieved from the S ID field of the received ARP Reply, or by querying the Fibre Channel Name Server;  The Nx Port MUST respond to a received Ethernet ARP Request with an Ethernet ARP Reply;  The Nx Port MAY respond to FARP Requests [RFC 2625].
The reception of a particular format of ARP message does not imply that the sending Nx Port will continue to use the same format later.
Support of compatibility mode is REQUIRED by each implementation.
The use of compatibility mode MUST be administratively configurable.
Security Considerations IPv6, IPv4, and ARP do not introduce any additional security concerns beyond those that already exist within the Fibre Channel protocols.
Zoning techniques based on FC Name Server masking (soft zoning) do not work with IPv6 and IPv4, because IPv6 and IPv4 over Fibre Channel do not use the FC Name Server.
The FC ESP Header [FC FS] may be used to secure the FC frames composing FC Sequences carrying IPv6, IPv4, and ARP packets.
All the techniques defined to secure IP traffic at the IP layer may be used in a Fibre Channel environment.
The directory of ARP parameters has been updated to reference this document for hardware type 18.
A.  Transmission of a Broadcast FC Sequence over FC Topologies (Informative) A.1.
No particular mechanisms are required for this case.
The Nx Port connected at the other side of the cable receives the broadcast FC Sequence having D ID 0xFFFFFF.
An NL Port attached to a private loop must transmit a Class 3 broadcast FC Sequence by using the OPN(fr) primitive signal [FC AL 2].
The source NL Port first sends an Open Broadcast Replicate (OPN(fr)) primitive signal, forcing all the NL Ports in the loop (except itself) to replicate the frames that they receive while examining the FC Header's D ID field.
The source NL Port then removes the OPN(fr) signal when it returns to it.
The source NL Port then sends the Class 3 broadcast FC Sequence having D ID 0xFFFFFF.
An NL Port attached to a public loop must not use the OPN(fr) primitive signal.
Rather, it must send the Class 3 broadcast FC Sequence having D ID 0xFFFFFF to the FL Port at AL PA
The Fabric propagates the broadcast to all other FC Ports [FC FS], including the FL Port that the broadcast arrives on.
This includes all F Ports, and other FL Ports.
Each FL Port propagates the broadcast by using the primitive signal OPN(fr), in order to prepare the loop to receive the broadcast sequence.
An N Port connected to an F Port
must transmit the Class 3 broadcast FC Sequence having D ID 0xFFFFFF to the F Port.
The Fabric propagates the broadcast to all other FC Ports [FC FS].
B.  Validation of the <N Port Name
At all times, the <N Port Name,
> mapping must be valid before use.
After an FC link interruption occurs, the N Port ID of an Nx Port may change, as well as the N Port IDs of all other Nx Ports that have previously performed Port Login with this Nx Port.
Because of this, address validation is required after a Loop Initialization Primitive Sequence (LIP) in a loop topology [FC AL 2] or after Not Operational Primitive Sequence / Offline Primitive Sequence (NOS/OLS) in a point to point topology [FC FS].
N Port IDs do not change as a result of Link Reset (LR) [FC FS]; thus, address validation is not required in this case.
FC Layer Address Validation in a Point to Point Topology
No validation is required after Link Reset (LR).
In a point to point topology, NOS/OLS causes implicit Logout of each N Port and after an NOS/OLS each N Port must again perform a Port Login [FC FS].
FC Layer Address Validation in a Private Loop Topology
After a LIP [FC AL 2], an NL Port must not transmit any data to another NL Port until the address of the other port has been validated.
The validation consists of completing the Address Discovery procedure with the ADISC ELS [FC FS].
If the three FC addresses (N Port ID, N Port Name, Node Name) of a logged remote NL Port exactly match the values prior to the LIP, then any active Exchange with that NL Port may continue.
If any of the three FC addresses has changed, then the remote NL Port must be logged out.
If an NL Port's N Port ID changes after a LIP, then all active logged in NL Ports must be logged out.
FC Layer Address Validation in a Public Loop Topology
A Fabric Address Notification (FAN)
ELS may be sent by the Fabric to all known previously logged in NL Ports following an initialization event.
Therefore, after a LIP [FC AL 2], NL Ports may wait for this notification to arrive, or they may perform an FLOGI.
If the F Port Name and Fabric Name contained in the FAN ELS or FLOGI response exactly match the values before the LIP and if the AL PA [FC AL 2] obtained by the NL Port is the same as the one before the LIP, then the port may resume all Exchanges.
If not, then FLOGI must be performed with the Fabric and all logged in Nx Ports must be logged out.
A public loop NL Port must perform the private loop validation as specified in section B.3 to any NL Port on the local loop that has an N Port ID of the form 0x00 00
XX (i.e., to any private loop NL Port).
FC Layer Address Validation in a Fabric Topology
No validation is required after Link Reset (LR).
After NOS/OLS, an N Port must perform FLOGI.
If, after FLOGI, the N Port's N Port ID, the F Port Name, and the Fabric Name are the same as before the NOS/OLS, then the N Port may resume all Exchanges.
If not, all logged in Nx Ports must be logged out [FC FS].
C.  Fibre Channel Bit and Byte
Both Fibre Channel and IETF standards use the same byte transmission order.
However, the bit numbering is different.
Fibre Channel bit numbering can be observed if the data structure heading shown in figure 24 is cut and pasted at the top of the figures present in this document.
Fibre Channel Bit Numbering D.
Nx Ports with N Port Name format 0x2, 0x5, 0xC, 0xD, 0xE, and 0xF are supported, in addition to format 0x1
;  An IP capable Nx Port MUST support Class 3;  An IP capable Nx Port MUST support continuously increasing SEQ CNT;  An IP capable Nx Port SHOULD support a receive data field size for Device Data FC frames of at least 1024 octets;
The FC ESP Header MAY be used;  FC Classes of services other than 3 are not recommended;  Defined a new FC ARP format;  Removed support for FARP because some FC implementations do not tolerate receiving broadcast ELSes;  Added support for IPv4 multicast;  Clarified the usage of the CS CTL and Parameter fields of the FC Header;  Clarified the usage of FC Classes of service;  Clarified the usage of FC Sequences and Exchanges.
E.  Changes from RFC 3831  Clarified the usage of the CS CTL and Parameter fields of the FC Header;  Clarified the usage of FC Classes of service;  Clarified and updated the mapping of IPv6 multicast on Fibre Channel;  Clarified the usage of FC Sequences and Exchanges;  Clarified and updated the format of the Neighbor Discovery Link layer option for Fibre Channel.
