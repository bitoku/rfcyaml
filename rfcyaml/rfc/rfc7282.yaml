- title: __initial_text__
  contents:
  - '                  On Consensus and Humming in the IETF

    '
- title: Abstract
  contents:
  - "Abstract\n   The IETF has had a long tradition of doing its technical work through\n\
    \   a consensus process, taking into account the different views among\n   IETF\
    \ participants and coming to (at least rough) consensus on\n   technical matters.\
    \  In particular, the IETF is supposed not to be run\n   by a \"majority rule\"\
    \ philosophy.  This is why we engage in rituals\n   like \"humming\" instead of\
    \ voting.  However, more and more of our\n   actions are now indistinguishable\
    \ from voting, and quite often we are\n   letting the majority win the day without\
    \ consideration of minority\n   concerns.  This document explains some features\
    \ of rough consensus,\n   what is not rough consensus, how we have gotten away\
    \ from it, how we\n   might think about it differently, and the things we can\
    \ do in order\n   to really achieve rough consensus.\n   Note: This document is\
    \ quite consciously being put forward as\n   Informational.  It does not propose\
    \ to change any IETF processes and\n   is therefore not a BCP.  It is simply a\
    \ collection of principles,\n   hopefully around which the IETF can come to (at\
    \ least rough)\n   consensus.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7282.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Lack of disagreement is more important than agreement\
    \ . . . .   4\n   3.  Rough consensus is achieved when all issues are addressed,\n\
    \       but not necessarily accommodated  . . . . . . . . . . . . . .   7\n  \
    \ 4.  Humming should be the start of a conversation, not the end  .  10\n   5.\
    \  Consensus is the path, not the destination  . . . . . . . . .  13\n   6.  One\
    \ hundred people for and five people against might not be\n       rough consensus\
    \ . . . . . . . . . . . . . . . . . . . . . . .  14\n   7.  Five people for and\
    \ one hundred people against might still be\n       rough consensus . . . . .\
    \ . . . . . . . . . . . . . . . . . .  16\n   8.  Conclusion  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  18\n   9.  Security Considerations . . .\
    \ . . . . . . . . . . . . . . . .  18\n   10. Informative References  . . . .\
    \ . . . . . . . . . . . . . . .  18\n   Appendix A.  Acknowledgements . . . .\
    \ . . . . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Almost every IETF participant knows the aphorism from Dave\
    \ Clark's\n   1992 plenary presentation [Clark] regarding how we make decisions\
    \ in\n   the IETF:\n      We reject: kings, presidents and voting.\n      We believe\
    \ in: rough consensus and running code.\n   That is, our credo is that we don't\
    \ let a single individual dictate\n   decisions (a king or president), nor should\
    \ decisions be made by a\n   vote, nor do we want decisions to be made in a vacuum\
    \ without\n   practical experience.  Instead, we strive to make our decisions\
    \ by\n   the consent of all participants, though allowing for some dissent\n \
    \  (rough consensus), and to have the actual products of engineering\n   (running\
    \ code) trump theoretical designs.\n   Having full consensus, or unanimity, would\
    \ be ideal, but we don't\n   require it: Requiring full consensus allows a single\
    \ intransigent\n   person who simply keeps saying \"No!\" to stop the process\
    \ cold.  We\n   only require rough consensus: If the chair of a working group\n\
    \   determines that a technical issue brought forward by an objector has\n   been\
    \ truly considered by the working group, and the working group has\n   made an\
    \ informed decision that the objection has been answered or is\n   not enough\
    \ of a technical problem to prevent moving forward, the\n   chair can declare\
    \ that there is rough consensus to go forward, the\n   objection notwithstanding.\n\
    \   To reinforce that we do not vote, we have also adopted the tradition\n   of\
    \ \"humming\": When, for example, we have face-to-face meetings and\n   the chair\
    \ of the working group wants to get a \"sense of the room\",\n   instead of a\
    \ show of hands, sometimes the chair will ask for each\n   side to hum on a particular\
    \ question, either \"for\" or \"against\".\n   However, in recent years we have\
    \ seen participants (and even some\n   folks in IETF leadership) who do not understand\
    \ some of the\n   subtleties of consensus-based decision making.  Participants\
    \ ask,\n   \"Why don't we just vote?  Why are we bothering with this 'humming'\n\
    \   thing?\"  Or even more concerning, \"We've already hummed/voted, so why\n\
    \   isn't the discussion concluded?\"  Chairs, many of whom have little\n   experience\
    \ in leading large volunteer groups like those in the IETF,\n   let alone experience\
    \ in how to gather consensus, are faced with\n   factious working groups with\
    \ polarized viewpoints and long-running\n   unresolved issues that return again\
    \ and again to the agenda.  More\n   and more frequently, people walk away from\
    \ working groups, thinking\n   that \"consensus\" has created a document with\
    \ horrible compromises to\n   satisfy everyone's pet peeve instead of doing \"\
    the right thing\".\n   None of these things are indicators of a rough consensus\
    \ process\n   being used, and the fact that we are seeing them is likely due to\n\
    \   some basic misperceptions.\n   This document explains some features of rough\
    \ consensus, explains\n   what is not rough consensus, discusses some new ways\
    \ to think about\n   rough consensus, and suggests ways that we might achieve\
    \ rough\n   consensus and judge it in the IETF.  Though this document describes\n\
    \   some behaviors of working groups and chairs, it does so in broad\n   brushstrokes\
    \ and it does not prescribe specific procedures.  Rather,\n   this document is\
    \ intended to foster understanding of the underlying\n   principles of IETF consensus\
    \ processes.  While it may be of general\n   interest to anyone interested in\
    \ the IETF consensus processes, the\n   primary audience for this document is\
    \ those who have experience\n   working in the IETF and are trying to understand\
    \ and participate in\n   the consensus-building process, and it is particularly\
    \ aimed at\n   generating thought and discussion among those who might lead a\n\
    \   consensus discussion.  Although most of the examples in this document\n  \
    \ talk about working group chairs, these principles apply to any person\n   who\
    \ is trying to lead a group to rough consensus, whether a chair, a\n   design\
    \ team leader, a document editor, an area director, or any\n   community member\
    \ who is facilitating a discussion or trying to assess\n   consensus.\n   While\
    \ the community has come to rough consensus that the principles\n   expressed\
    \ in this document are (at least approximately) right, many\n   of our current\
    \ practices are not consistent with these principles.\n   Again, this document\
    \ is primarily intended to generate thought and\n   discussion, not dictate practices.\
    \  If the IETF does commit itself to\n   these principles, practices may change\
    \ in the future.\n"
- title: 2.  Lack of disagreement is more important than agreement
  contents:
  - "2.  Lack of disagreement is more important than agreement\n   A working group\
    \ comes to a technical question of whether to use\n   format A or format B for\
    \ a particular data structure.  The chair\n   notices that a number of experienced\
    \ people think format A is a good\n   choice.  The chair asks on the mailing list,\
    \ \"Is everyone OK with\n   format A?\"  Inevitably, a number of people object\
    \ to format A for one\n   or another technical reason.  The chair then says, \"\
    It sounds like we\n   don't have consensus to use format A.  Is everyone OK with\
    \ format B?\"\n   This time even more people object to format B, on different\
    \ technical\n   grounds.  The chair, not having agreement on either format A or\n\
    \   format B, is left perplexed, thinking the working group has\n   deadlocked.\n\
    \   The problem that the chair got themselves into was thinking that what\n  \
    \ they were searching for was agreement.  \"After all\", thinks the\n   chair,\
    \ \"consensus is a matter of getting everyone to agree, so asking\n   whether\
    \ everyone agrees is what the chair ought to do.  And if lots\n   of people disagree,\
    \ there's no consensus.\"  But _determining_\n   consensus and _coming to_ consensus\
    \ are different things than\n   _having_ consensus.\n   The distinction might\
    \ be a bit subtle, but it's important.\n   Engineering always involves a set of\
    \ tradeoffs.  It is almost certain\n   that any time engineering choices need\
    \ to be made, there will be\n   options that appeal to some people, but are not\
    \ appealing to some\n   others.  In determining consensus, the key is to separate\
    \ those\n   choices that are simply unappealing from those that are truly\n  \
    \ problematic.  If at the end of the discussion some people have not\n   gotten\
    \ the choice that they prefer, but they have become convinced\n   that the chosen\
    \ solution is acceptable, albeit less appealing, they\n   have still come to consensus.\
    \  Consensus doesn't require that\n   everyone is happy and agrees that the chosen\
    \ solution is the best\n   one.  Consensus is when everyone is sufficiently satisfied\
    \ with the\n   chosen solution, such that they no longer have specific objections\
    \ to\n   it.\n   So, in the case of a working group decision, after the initial\n\
    \   discussion of the pros and cons of the available choices, it is most\n   important\
    \ to ask not just for objections to a particular proposal,\n   but for the nature\
    \ of those objections.  A chair who asks, \"Is\n   everyone OK with choice A?\"\
    \ is going to get objections.  But a chair\n   who asks, \"Can anyone not live\
    \ with choice A?\" is more likely to only\n   hear from folks who think that choice\
    \ A is impossible to engineer\n   given some constraints.  Following up with,\
    \ \"What are the reasons you\n   object to choice A?\" is also essential.  Then,\
    \ the purported failings\n   of the choice can be examined by the working group.\
    \  The objector\n   might convince the rest of the group that the objections are\
    \ valid\n   and the working group might choose a different path.  Conversely,\
    \ the\n   working group might convince the objector that the concerns can be\n\
    \   addressed, or that the choice is simply unappealing (i.e., something\n   the\
    \ objector can \"live with\") and not a show-stopper.  In any event,\n   closure\
    \ is much more likely to be achieved quickly by asking for and\n   trying to accommodate\
    \ the objections rather than asking for\n   agreement.\n   The above discussion\
    \ does not mean that sorting out disagreements is\n   the only thing that needs\
    \ to be done for successful consensus.  An\n   engineering solution that has no\
    \ objections, but also has no base of\n   support and is met with complete apathy,\
    \ is not a solution that has\n   any useful sort of consensus.  Consensus does\
    \ require the active\n   engagement and eventual support of those who are working\
    \ on the\n   solution.  However, finding mere \"agreement\" among participants\
    \ is\n   not enough.  People might very well agree that a solution is\n   sufficient\
    \ and have no objection to it, but if they also don't\n   actively think it's\
    \ a good and correct outcome, it's absurd to\n   declare that the group has consensus.\n\
    \   There is also an important point to be made about reaching consensus\n   and\
    \ \"compromising\": Unfortunately, the word \"compromise\" gets used in\n   two\
    \ different ways, and though one sort of compromising to come to\n   consensus\
    \ is good (and important), the other sort of compromising in\n   order to achieve\
    \ consensus can actually be harmful.  As mentioned\n   earlier, engineering always\
    \ involves balancing tradeoffs, and\n   figuring out whether one engineering decision\
    \ makes more sense on\n   balance compared to another involves making engineering\n\
    \   \"compromises\": We might have to compromise processor speed for lower\n \
    \  power consumption, or compromise throughput for congestion\n   resistance.\
    \  Those sorts of compromises are among engineering\n   choices, and they are\
    \ expected and essential.  We always want to be\n   weighing tradeoffs and collectively\
    \ choosing the set that best meets\n   the full set of requirements.\n   However,\
    \ there is another sense of \"compromise\" that involves\n   compromising between\
    \ people, not engineering principles.  For\n   example, a minority of a group\
    \ might object to a particular proposal,\n   and even after discussion still think\
    \ the proposal is deeply\n   problematic, but decide that they don't have the\
    \ energy to argue\n   against it and say, \"Forget it, do what you want\".  That\
    \ surely can\n   be called a compromise, but a chair might mistakenly take this\
    \ to\n   mean that they agree, and have therefore come to consensus.  But\n  \
    \ really all that they've done is capitulated; they've simply given up\n   by\
    \ trying to appease the others.  That's not coming to consensus;\n   there still\
    \ exists an outstanding unaddressed objection.  Again, if\n   the objection is\
    \ only that the choice is not ideal but is otherwise\n   acceptable, such a compromise\
    \ is fine.  But conceding when there is a\n   real outstanding technical objection\
    \ is not coming to consensus.\n   Even worse is the \"horse-trading\" sort of\
    \ compromise: \"I object to\n   your proposal for such-and-so reasons.  You object\
    \ to my proposal for\n   this-and-that reason.  Neither of us agree.  If you stop\
    \ objecting to\n   my proposal, I'll stop objecting to your proposal and we'll\
    \ put them\n   both in.\"  That again results in an \"agreement\" of sorts, but\
    \ instead\n   of just one outstanding unaddressed issue, this sort of compromise\n\
    \   results in two, again ignoring them for the sake of expedience.\n   These\
    \ sorts of \"capitulation\" or \"horse-trading\" compromises have no\n   place\
    \ in consensus decision making.  In each case, a chair who looks\n   for \"agreement\"\
    \ might find it in these examples because it appears\n   that people have \"agreed\"\
    .  But answering technical disagreements is\n   what is needed to achieve consensus,\
    \ sometimes even when the people\n   who stated the disagreements no longer wish\
    \ to discuss them.\n   Coming to consensus is when everyone (including the person\
    \ making the\n   objection) comes to the conclusion that either the objections\
    \ are\n   valid, and therefore make a change to address the objection, or that\n\
    \   the objection was not really a matter of importance, but merely a\n   matter\
    \ of taste.  Of course, coming to full consensus like that does\n   not always\
    \ happen.  That's why in the IETF, we talk about \"rough\n   consensus\".\n"
- title: 3.  Rough consensus is achieved when all issues are addressed, but not
  contents:
  - "3.  Rough consensus is achieved when all issues are addressed, but not\n    necessarily\
    \ accommodated\n   The preceding discussion gives an example where the working\
    \ group\n   comes to consensus on a point: Either the objector is satisfied with\n\
    \   the answer to the objection, or the working group is satisfied that\n   the\
    \ objection is valid and changes course.  But that doesn't happen\n   all of the\
    \ time, and it's certainly not the problematic case.  Again,\n   engineering is\
    \ always a set of tradeoffs.  Often, a working group\n   will encounter an objection\
    \ where everyone understands the issue and\n   acknowledges that it is a real\
    \ shortcoming in the proposed solution,\n   but the vast majority of the working\
    \ group believes that\n   accommodating the objection is not worth the tradeoff\
    \ of fixing the\n   problem.\n   So, an objector might say, \"The proposal to\
    \ go with protocol X is\n   much more complicated than going with protocol Y.\
    \  Protocol Y is a\n   much more elegant and clean solution, which I can code\
    \ much more\n   easily, and protocol X is a hack.\"  The working group might consider\n\
    \   this input, and someone might respond, \"But we have a great deal of\n   code\
    \ already written that is similar to protocol X.  While I agree\n   that protocol\
    \ Y is more elegant, the risks to interoperability with\n   an untested solution\
    \ are not worth it compared to the advantages of\n   going with the well-understood\
    \ protocol X.\"  If the chair finds, in\n   their technical judgement, that the\
    \ issue has truly been considered,\n   and that the vast majority of the working\
    \ group has come to the\n   conclusion that the tradeoff is worth making, even\
    \ in the face of\n   continued objection from the person(s) who raised the issue,\
    \ the\n   chair can declare that the group has come to rough consensus.  (And\n\
    \   even though this is framed in terms of a \"vast majority\", even that\n  \
    \ is not necessarily true.  This point is discussed in more detail in\n   Sections\
    \ 6 and 7.)\n   Note that this portrays rough consensus as a fallback.  In one\
    \ sense,\n   it is: As a working group does its work and makes its choices, it\n\
    \   behaves as if it is striving toward full consensus and tries to get\n   all\
    \ issues addressed to the satisfaction of everyone in the group,\n   even those\
    \ who originally held objections.  It treats rough consensus\n   as a sort of\
    \ \"exception processing\", to deal with cases where the\n   person objecting\
    \ still feels strongly that their objection is valid\n   and must be accommodated.\
    \  But it is certainly true that, more often\n   than not in the IETF, at least\
    \ someone in the group will be\n   unsatisfied with a particular decision.  In\
    \ that sense, rough\n   consensus might be closer to the norm than the exception.\
    \  However,\n   when a participant says, \"That's not my favorite solution, but\
    \ I can\n   live with it; I'm satisfied that we've made a reasonable choice\"\
    ,\n   that participant is not in the \"rough\" part of a rough consensus; the\n\
    \   group actually reached consensus if that person is satisfied with the\n  \
    \ outcome.  It's when the chair has to declare that an unsatisfied\n   person\
    \ still has an open issue, but that the group has truly answered\n   the objection,\
    \ that the consensus is only rough.\n   Now, a conclusion of having only rough\
    \ consensus relies heavily on\n   the good judgement of the consensus caller.\
    \  The group must truly\n   consider and weigh an issue before the objection can\
    \ be dismissed as\n   being \"in the rough\".  (\"In the rough\" is terminology\
    \ from golf.\n   \"The rough\" is the term for the longer grass at the side of\
    \ the\n   fairway, and if your ball has landed in the rough you are off course\n\
    \   and away from the normal direction of play.  The phrase gets used\n   quite\
    \ a bit in the IETF as a play on words to complement \"rough\n   consensus\" meaning\
    \ that you are \"in the rough\" if you find yourself\n   not agreeing with the\
    \ rough consensus.)  The chair of a working group\n   who is about to find that\
    \ there is only rough consensus is going to\n   have to decide that not only has\
    \ the working group taken the\n   objection seriously, but that it has fully examined\
    \ the ramifications\n   of not making a change to accommodate it, and that the\
    \ outcome does\n   not constitute a failure to meet the technical requirements\
    \ of the\n   work.  In order to do this, the chair will need to have a good idea\n\
    \   of the purpose and architecture of the work being done, perhaps\n   referring\
    \ to the charter of the working group or a previously\n   published requirements\
    \ document, or even consulting with other\n   experts on the topic, and then the\
    \ chair will use their own technical\n   judgement to make sure that the solution\
    \ meets those requirements.\n   It is possible that the chair can come to the\
    \ wrong conclusion, and\n   the chair's conclusion is always appealable should\
    \ that occur, but\n   the chair must use their judgement in these cases.  What\
    \ can't happen\n   is that the chair bases their decision solely on hearing a\
    \ large\n   number of voices simply saying, \"The objection isn't valid.\"  That\n\
    \   would simply be to take a vote.  A valid justification needs to me\n   made.\n\
    \   It is important to recognize that this view of rough consensus is a\n   change\
    \ from the way it sometimes has been characterized in the IETF.\n   RFC 1603 [RFC1603]\
    \ described rough consensus as the \"dominant view\"\n   of the group:\n     \
    \ Working groups make decisions through a \"rough consensus\" process.\n     \
    \ IETF consensus does not require that all participants agree\n      although\
    \ this is, of course, preferred.  In general the dominant\n      view of the working\
    \ group shall prevail.  (However, it must be\n      noted that \"dominance\" is\
    \ not to be determined on the basis of\n      volume or persistence, but rather\
    \ a more general sense of\n      agreement.)  Consensus can be determined by balloting,\
    \ humming, or\n      any other means on which the WG agrees (by rough consensus,\
    \ of\n      course).\n   The above says that consensus can be \"determined\" by\
    \ balloting and\n   humming, and there are certainly IETF folks who have thought\
    \ of rough\n   consensus as being primarily about the percentage of people who\
    \ agree\n   with a decision.  Indeed, RFC 2418 [RFC2418] adds on to the above\n\
    \   text by stating, \"Note that 51% of the working group does not qualify\n \
    \  as 'rough consensus' and 99% is better than rough.\"  This document\n   actually\
    \ disagrees with the idea that simply balloting or otherwise\n   looking at percentages\
    \ can \"determine\" consensus.  While counting\n   heads might give a good guess\
    \ as to what the rough consensus will be,\n   doing so can allow important minority\
    \ views to get lost in the noise.\n   One of the strengths of a consensus model\
    \ is that minority views are\n   addressed, and using a rough consensus model\
    \ should not take away\n   from that.  That is why this document talks a great\
    \ deal about\n   looking at open issues rather than just counting the number of\
    \ people\n   who do or do not support any given issue.  Doing so has some\n  \
    \ interesting and surprising implications that are discussed in\n   subsequent\
    \ sections.\n   Any finding of rough consensus needs, at some level, to provide\
    \ a\n   reasoned explanation to the person(s) raising the issue of why their\n\
    \   concern is not going to be accommodated.  A good outcome is for the\n   objector\
    \ to understand the decision taken and accept the outcome,\n   even though their\
    \ particular issue is not being accommodated in the\n   final product.\n   Remember,\
    \ if the objector feels that the issue is so essential that\n   it must be attended\
    \ to, they always have the option to file an\n   appeal.  A technical error is\
    \ always a valid basis for an appeal.\n   The chair in making the consensus call\
    \ (or whoever is responsible to\n   hear an appeal) may determine that the issue\
    \ was addressed and\n   understood, but they also have the freedom and the responsibility\
    \ to\n   say, \"The group did not take this technical issue into proper\n   account\"\
    \ when appropriate.  Simply having a large majority of people\n   agreeing to\
    \ dismiss an objection is not enough to claim there is\n   rough consensus; the\
    \ group must have honestly considered the\n   objection and evaluated that other\
    \ issues weighed sufficiently\n   against it.  Failure to do that reasoning and\
    \ evaluating means that\n   there is no true consensus.\n"
- title: 4.  Humming should be the start of a conversation, not the end
  contents:
  - "4.  Humming should be the start of a conversation, not the end\n   We don't vote\
    \ in the IETF.  In some ways, we can't vote: Since the\n   IETF is not a membership\
    \ organization, it's nearly impossible to\n   figure out who would get a vote\
    \ for any given question.  We can't\n   know who the \"members\" of any given\
    \ working group would be at any one\n   time, and we certainly can't know who\
    \ all of the \"members\" of the\n   IETF would be: That's why we refer to \"participants\"\
    \ in the IETF; the\n   IETF doesn't really have \"members\".  Indeed, we often\
    \ recruit\n   additional implementers and other experts into working groups in\n\
    \   order to ensure that broader views are brought into the discussion.\n   So,\
    \ voting is simply not practical.  We've also decided that coming\n   to consensus\
    \ (albeit sometimes rough consensus) is an important thing\n   to do.  Final decisions\
    \ are supposed to be taken on the mailing list,\n   which reinforces the idea\
    \ that we come to consensus by looking at the\n   open issues and not counting\
    \ heads.  We do, on occasion, take\n   informal polls to get a sense of the direction\
    \ of the discussion, but\n   we try not to treat a poll as a vote that decides\
    \ the issue.  When we\n   do discuss things face-to-face, we don't want to vote\
    \ there either;\n   we want to show that we are coming to consensus.  So, sometimes,\
    \ to\n   reinforce the notion that we're not voting, instead of a show of\n  \
    \ hands, we often \"hum\".\n   However, more and more we see people who think\
    \ that a hum is a sort\n   of anonymous vote, with some chairs calling every question\
    \ they have\n   for the working group by asking for a hum and judging the result\
    \ by\n   the loudest hum, even saying things like, \"There were lots of hums\n\
    \   for choice 1 and very few hums for choice 2, so it sounds like we\n   have\
    \ rough consensus for choice 1.\"  This misses some really\n   important points\
    \ of using humming and is almost certainly mis-\n   assessing the consensus. \
    \ Hums should not be used as votes.\n   So, why should we engage in this strange\
    \ practice of humming?  What\n   are good reasons to \"take a hum\"?  One reason\
    \ is pragmatic.  Quite\n   often, a chair is faced with a room full of people\
    \ who seem to be\n   diametrically opposed on some choice facing the group.  In\
    \ order to\n   find a starting place for the conversation, it can be useful for\
    \ the\n   chair to ask for a hum to see if one of the choices already has a\n\
    \   stronger base of support than the other (or any significant base of\n   support\
    \ at all, for that matter).  Sometimes the hum can tell a chair\n   that the room\
    \ isn't all that contentious after all, that it's just a\n   few voices who were\
    \ being especially vociferous during the initial\n   discussion.\n   Sometimes,\
    \ the hum will make it clear that choice \"foo\" has a\n   significant amount\
    \ more support than choice \"bar\", and it is\n   therefore likely easier to start\
    \ the discussion by saying, \"OK, 'foo'\n   seems to have quite a bit of support.\
    \  Let's have the people that\n   think 'foo' is a bad idea come up and tell us\
    \ why it is problematic.\"\n   At that point, the group can start going through\
    \ the issues and see\n   if any of them are showstoppers.  It could always turn\
    \ out that one\n   of the objections is instantly recognized by the entire group\
    \ as a\n   fatal flaw in \"foo\" and the group will then turn to a discussion\
    \ of\n   the merits (and demerits) of \"bar\" instead.  All that the hum does\
    \ is\n   give the chair a starting point: The hum indicated that there were\n\
    \   less objections to \"foo\" than to \"bar\" at the beginning of the\n   discussion,\
    \ so starting with the objections to \"foo\" might shorten\n   the discussion.\n\
    \   Another good reason for us to hum is because it actually gives the\n   chair\
    \ the opportunity to take the temperature of the room.  A smaller\n   bunch of\
    \ loud hums for choice A and a larger number of non-committal\n   hums for choice\
    \ B might indicate that some people believe that there\n   are serious problems\
    \ with choice B, albeit the more popular by sheer\n   number of people.  The chair\
    \ might decide that starting with choice A\n   and getting objections to it is\
    \ the easier path forward and more\n   likely to result in consensus in the end.\
    \  Remember, coming to\n   consensus is a matter of eliminating disagreements,\
    \ so the chair\n   wants to choose the path that gets to the least objections\
    \ fastest.\n   A bunch of people who are not strongly committed to B might have\
    \ no\n   real technical objection to A, even though it is not their first\n  \
    \ preference.  There is always a chance that this could be misleading,\n   or\
    \ even abused, because some people are more willing to hum loudly\n   than others\
    \ (just by dint of personality), or that one of the quieter\n   hums actually\
    \ turns out to be a show-stopper that makes the original\n   choice impossible.\
    \  However, keep in mind that taking the hum in this\n   case is to figure out\
    \ how to start the conversation.  The chair could\n   always be surprised because\
    \ the hum turns out to be unanimous and no\n   further discussion is needed. \
    \ Otherwise, the hum begins the\n   discussion, it doesn't end it.\n   But couldn't\
    \ all of the above could have been done with a show of\n   hands instead of a\
    \ hum?  Absolutely.  Indeed, on a mailing list there\n   is no way to use humming\
    \ and so a different kind of polling would be\n   needed.  Even in face-to-face\
    \ situations, sometimes we do use a show\n   of hands.  But there are more symbolic\
    \ reasons for using a hum\n   instead of a show of hands when face-to-face: Of\
    \ course, a chair\n   could get the temperature of the room by doing a show of\
    \ hands too,\n   and knowing who specifically feels one way or another can help\
    \ a good\n   chair guide the subsequent conversation.  However, a show of hands\n\
    \   might leave the impression that the number of people matters in some\n   formal\
    \ way.  A chair and a working group with a solid understanding\n   of how consensus\
    \ works can certainly do a show of hands and achieve\n   exactly the same result\
    \ as a hum.  But with less experienced folks, a\n   show of hands can end up reinforcing\
    \ the mistaken notion that a vote\n   is taking place.  A chair can always take\
    \ the hum and then later ask\n   for specific folks to identify themselves to\
    \ elicit more discussion.\n   The advantage of the hum is that it makes it perfectly\
    \ clear that the\n   chair is simply figuring out the direction of the conversation.\n\
    \   This also points to another misuse of any kind of informal polling:\n   If\
    \ the chair is already convinced that the group has come to\n   consensus, there\
    \ isn't much reason to take a poll.  In fact, taking a\n   poll can serve to discourage\
    \ those who might be in the minority from\n   voicing their concerns to the group\
    \ in the face of a large majority\n   who wants to move forward.  Often, the right\
    \ thing for the chair to\n   do if they already sense consensus is to say, \"\
    It sounds to me like\n   we have consensus for choice A.  Does anybody have any\
    \ concerns about\n   or objections to going with A?\"  This allows folks to bring\
    \ up issues\n   to the group that the chair might have mistakenly missed without\n\
    \   having them feel that the majority has \"already spoken\".\n   The reverse\
    \ situation can also have similar advantages and\n   disadvantages: Sometimes\
    \ a chair (say, of a birds-of-a-feather\n   session, or a working group discussing\
    \ a new proposed document) might\n   want to make sure that there really is a\
    \ good base of support to go\n   forward with a proposal, and takes a hum.  This\
    \ can let the chair see\n   if there are more than a handful of active people\
    \ who are really\n   interested in the new work.  However, this has pitfalls as\
    \ well:\n   Someone may be dissuaded from raising what could be an essential\n\
    \   concern if they feel that the group is overwhelmingly in favor of\n   going\
    \ forward, or conversely some folks may decide to \"hum along with\n   the crowd\"\
    \ even though they're not committed to the outcome.  Indeed,\n   the formulation,\
    \ or even the order, of questions asked during a hum\n   can have huge effects\
    \ on the outcome: Asking simply, \"Who supports\n   going forward with this proposal?\"\
    , and asking it first, can itself\n   cause more people to hum in the affirmative\
    \ than would for\n   differently formulated questions, or asking the same question\
    \ after\n   some more \"negatively\" framed questions.  Any sort of polling,\n\
    \   whether hums or even a show of hands, must be done with caution and\n   should\
    \ almost always be used to prompt discussion and questions, not\n   to conclude\
    \ the matter.\n   There are times where the result of a hum is a pretty even split.\
    \  In\n   practical terms, that means it doesn't matter where the chair starts\n\
    \   the discussion.  And in fact, we've had working groups where a coin\n   flip\
    \ decided which proposal to start with.  That doesn't mean that\n   the coin flip\
    \ determined the outcome; if a fatal technical flaw was\n   found in the solution\
    \ that won the coin flip, it is still incumbent\n   upon the group to address\
    \ the issue raised or abandon that solution\n   and find another.  Rough consensus\
    \ on the technical points, in the\n   end, is always required.  Any way to find\
    \ a place to start, be it the\n   hum or the coin flip, is only getting to the\
    \ beginning of the\n   discussion, not the end.\n"
- title: 5.  Consensus is the path, not the destination
  contents:
  - "5.  Consensus is the path, not the destination\n   We don't try to reach consensus\
    \ in the IETF as an end in itself.  We\n   use consensus-building as a tool to\
    \ get to the best technical (and\n   sometimes procedural) outcome when we make\
    \ decisions.  Experience has\n   shown us that traditional voting leads to gaming\
    \ of the system,\n   \"compromises\" of the wrong sort as described earlier, important\n\
    \   minority views being ignored, and, in the end, worse technical\n   outcomes.\n\
    \   Coming to consensus by looking for objections, tracking open issues,\n   and\
    \ using hums as the start of discussions and not the end can all\n   take some\
    \ patience.  Indeed, sometimes objection-based or issue-based\n   decision making\
    \ can be extremely difficult because there can be large\n   factions who have\
    \ diametrically opposed views.  And there is no doubt\n   that we do see some\
    \ amount of political compromise (that is, the\n   undesirable kind of compromise)\
    \ from time to time in the IETF.\n   However, accepting these things has its price.\
    \  When we decide that a\n   discussion is too factious and opt to simply go with\
    \ a majority, it\n   creates more polarized arguments in the future: Instead of\
    \ working\n   toward the best technical outcome that most everyone can accept,\n\
    \   people are much quicker to run to opposing sides and dig in to their\n   positions.\
    \  And when we allow real technical issues to drop because\n   proponents have\
    \ simply capitulated or have \"horse-traded\" to allow\n   other technical problems\
    \ to remain, the end product is weaker.\n   Though the IETF can never be perfectly\
    \ principled with regard to\n   rough consensus, failing to be vigilant about\
    \ sticking to the\n   principles makes it increasingly hard to stick to them in\
    \ the future,\n   and ends us up with worse technical output.\n   Again, coming\
    \ to consensus is not the goal in itself.  Coming to\n   consensus is what we\
    \ do during our processes to arrive at the best\n   solution.  In particular,\
    \ \"declaring\" consensus is not an end goal.\n   Attempts to declare consensus\
    \ at the end of a discussion just for the\n   sake of being able to say that there\
    \ is consensus often get us back\n   into the voting mentality that we're trying\
    \ to avoid.\n   We often hear chairs say that they are making a \"consensus call\"\
    .\n   Sometimes, they simply mean they are making a call _of_ the\n   consensus;\
    \ that is, they are declaring the consensus that has, in\n   their view, been\
    \ reached when the discussion has reached an end.\n   That's a fine thing and\
    \ what chairs are supposed to do: They are\n   \"calling\" the consensus.  Sometimes,\
    \ when a chair says that they are\n   making a \"consensus call\", the chair is\
    \ actually making a call _for\n   discussion_ of a particular point in order to\
    \ reach consensus.\n   Although it's a bit odd to call that a \"consensus call\"\
    \ (as opposed\n   to a \"call for discussion\" or the like), it is fine for a\
    \ chair to\n   occasionally identify a particular point of contention and get\
    \ the\n   group to focus discussion on it in order to reach consensus.  But\n\
    \   more and more often, we hear chairs say that they are making a\n   \"consensus\
    \ call\" at the end of a discussion, where the chair will\n   pose the classic\
    \ \"Who is in favor of choice A?  Who is in favor of\n   choice B?\" questions\
    \ to the working group.  That's not really a\n   \"consensus call\", and has the\
    \ same potential problems as the \"hum\" at\n   the end of a discussion: It can\
    \ be tantamount to asking for a vote.\n   Even talk of \"confirming consensus\"\
    \ has this problem: It implies that\n   you can confirm that there is consensus\
    \ by counting people, not\n   issues.  The important thing for a chair to do is\
    \ to \"call consensus\"\n   in the sense of declaring the consensus; others can\
    \ always object and\n   say that the chair has gotten the consensus wrong and\
    \ ask for\n   reconsideration.  However, the chair ought to be looking for\n \
    \  consensus throughout the discussion, not asking for it at the end.\n   There\
    \ are some times where chairs will ask a question or take a poll\n   toward the\
    \ end of a discussion in order to figure out the state of\n   consensus, but this\
    \ must be done with extreme caution.  This is\n   discussed in the next section.\n"
- title: 6.  One hundred people for and five people against might not be rough
  contents:
  - "6.  One hundred people for and five people against might not be rough\n    consensus\n\
    \   Section 3 discussed the idea of consensus being achieved when\n   objections\
    \ had been addressed (that is, properly considered, and\n   accommodated if necessary).\
    \  Because of this, using rough consensus\n   avoids a major pitfall of a straight\
    \ vote: If there is a minority of\n   folks who have a valid technical objection,\
    \ that objection must be\n   dealt with before consensus can be declared.  This\
    \ also reveals one\n   of the great strengths of using consensus over voting:\
    \ It isn't\n   possible to use \"vote stuffing\" (simply recruiting a large number\
    \ of\n   people to support a particular side, even people who have never\n   participated\
    \ in a working group or the IETF at all) to change the\n   outcome of a consensus\
    \ call.  As long as the chair is looking for\n   outstanding technical objections\
    \ and not counting heads, vote\n   stuffing shouldn't affect the outcome of the\
    \ consensus call.\n   So, in a large working group with over 100 active participants\
    \ and\n   broad agreement to go forward with a particular protocol, if a few\n\
    \   participants say, \"This protocol is going to cause congestion on the\n  \
    \ network, and it has no mechanism to back off when congestion occurs;\n   we\
    \ object to going forward without such a mechanism in place\", and\n   the objection\
    \ is met with silence on the mailing list, there is no\n   consensus.  Even if\
    \ the working group chair makes a working group\n   \"last call\" on the document,\
    \ and 100 people actively reply and say,\n   \"This document is ready to go forward\"\
    , if the open issue hasn't been\n   addressed, there's still no consensus, not\
    \ even rough consensus.\n   It's the existence of the unaddressed open issue,\
    \ not the number of\n   people, which is determinative in judging consensus. \
    \ As discussed\n   earlier, you can have rough consensus with issues that have\
    \ been\n   purposely dismissed, but not ones that have been ignored.\n   This\
    \ brings us back to when a poll could be used (cautiously) at the\n   end of a\
    \ discussion.  Let's say a discussion has been ongoing for\n   some time, and\
    \ a particular objection seems to be holding up the\n   decision.  A diligent\
    \ chair who's been carefully listening to the\n   discussion might think, \"I\
    \ have heard person X make this objection,\n   and I've heard responses from many\
    \ other folks that really address\n   the issue.  I think we have rough consensus.\
    \  But the objection keeps\n   coming up.  Maybe it's just the one person getting\
    \ up again and again\n   with the same argument, but maybe we don't have rough\
    \ consensus.  I'm\n   not sure.\"  At this point, the chair might ask for a hum.\
    \  If only a\n   single hum objecting can be heard, even a loud one, in the face\
    \ of\n   everyone else humming that the objection has been answered, the chair\n\
    \   has pretty good reason to believe that they heard the single\n   objection\
    \ all along and it really has been addressed.  However, to\n   say immediately\
    \ after the hum, \"It sounds like we have rough\n   consensus\" and nothing else\
    \ is at best being slipshod: What the chair\n   really needs to say at that point\
    \ is, \"I believe the only objection\n   we've heard is A (coming from person\
    \ X), and I've heard answers from\n   the group that fully address that issue.\
    \  So, unless I hear a\n   different objection than the one I've just described,\
    \ I find that\n   there is rough consensus to move on.\"  That leaves the door\
    \ open for\n   someone to tell the chair that the objection was really on different\n\
    \   grounds and they misevaluated, but it makes it clear that the chair\n   has\
    \ found rough consensus due to the discussion, not due to the hum.\n   Again,\
    \ it's not the hum that ends things, it's that the issues have\n   been addressed.\
    \  If the small minority (even one person) still has an\n   issue that hasn't\
    \ been addressed, rough consensus still hasn't been\n   achieved.\n   Even if\
    \ no particular person is still standing up for an issue, that\n   doesn't mean\
    \ an issue can be ignored.  As discussed earlier, simple\n   capitulation on an\
    \ issue is not coming to consensus.  But even in a\n   case where someone who\
    \ is not an active participant, who might not\n   care much about the fate of\
    \ the work, raises a substantive issue and\n   subsequently disappears, the issue\
    \ needs to be addressed before the\n   chair can claim that rough consensus exists.\n"
- title: 7.  Five people for and one hundred people against might still be rough
  contents:
  - "7.  Five people for and one hundred people against might still be rough\n   \
    \ consensus\n   This one is the real mind-bender for most people, and certainly\
    \ the\n   most controversial.  Say there is a very small working group, one\n\
    \   with half a dozen truly active participants who are experts in the\n   field;\
    \ everybody else is just following along but not contributing to\n   the discussion.\
    \  The active folks come up with a protocol document\n   that they all agree is\
    \ the right way forward, and people inside and\n   outside the working group agree\
    \ that the protocol is likely to get\n   widespread adoption; it is a good solution\
    \ to a real problem, even if\n   the non-experts don't have the ability to fully\
    \ judge the details.\n   However, one of the active members has an objection to\
    \ a particular\n   section: The protocol currently uses a well-known algorithm\
    \ to\n   address an issue, but the objector has a very elegant algorithm to\n\
    \   address the issue, one which works especially well on their\n   particular\
    \ piece of hardware.  There is some discussion, and all of\n   the other contributors\
    \ say, \"Yes, that is elegant, but what we're\n   using now is well-understood,\
    \ widely implemented, and it works\n   perfectly acceptably, even on the objector's\
    \ hardware.  There is\n   always some inherent risk to go with a new, albeit more\
    \ elegant,\n   algorithm.  We should stick to the one we've got.\"  The chair\
    \ follows\n   the conversation and says, \"It sounds like the issue has been\n\
    \   addressed and there's consensus to stick with the current solution.\"\n  \
    \ The objector is not satisfied, maybe even saying, \"But this is silly.\n   You've\
    \ seen that my algorithm works.  We should go with that.\"  The\n   chair makes\
    \ the judgement that the consensus is rough, in that there\n   is still an objector,\
    \ but the issue has been addressed and the risk\n   argument has won the day.\
    \  The chair makes a working group last call.\n   Then, the worst-case scenario\
    \ happens.  The objector, still unhappy\n   that their preferred solution was\
    \ not chosen, recruits one hundred\n   people, maybe a few who were silent participants\
    \ in the working group\n   already, but mostly people who work at the same company\
    \ as the\n   objector and who never participated before.  The objector gets them\n\
    \   all to post a message to the list saying, \"I believe we should go\n   with\
    \ the new elegant algorithm in section Z instead of the current\n   one.  It is\
    \ more elegant, and works better on our hardware.\"  The\n   chair sees these\
    \ dozens of messages coming in and posts a query to\n   each of them: \"We discussed\
    \ this on the list, and we seemed to have\n   consensus that, given the inherent\
    \ risk of a new algorithm, and the\n   widespread deployment of this current one,\
    \ it's better to stick with\n   the current one.  Do you have further information\
    \ that indicates\n   something different?\"  And in reply the chair gets utter\
    \ silence.\n   These posters to the list (say, some of whom were from the company\n\
    \   sales and marketing department) thought that they were simply voting\n   and\
    \ have no answer to give.  At that point, it is within bounds for\n   the chair\
    \ to say, \"We have objections, but the objections have been\n   sufficiently\
    \ answered, and the objectors seem uninterested in\n   participating in the discussion.\
    \  Albeit rough in the extreme, there\n   is rough consensus to go with the current\
    \ solution.\"\n   Though the above example uses the most extreme form of recruiting\n\
    \   sheer numbers of people (i.e., from the sales and marketing\n   department),\
    \ the same principle should hold true no matter how new or\n   how credible the\
    \ objectors seem: The chair is trying to discover\n   whether objections have\
    \ been addressed or if there are still open\n   issues.  If, instead of a bunch\
    \ of sales and marketing people, the\n   new people to the conversation are developers\
    \ or others who are\n   directly involved in creating the technology, or even\
    \ folks who have\n   been participating the entire time whose knowledge of the\
    \ technology\n   is not in question at all, the principle is still the same: If\
    \ the\n   objection has been addressed, and the new voices are not giving\n  \
    \ informed responses to that point, they can still justifiably be\n   called \"\
    in the rough\".  Of course, the more involved and knowledgable\n   the objectors\
    \ are, the more difficult it will be for the consensus\n   caller to make the\
    \ call, but a call of rough consensus is reasonable.\n   The chair in this case\
    \ needs to understand what the responses mean;\n   only sufficiently well-informed\
    \ responses that justify the position\n   taken can really \"count\".\n   There\
    \ is no doubt that this is the degenerate case and a clear\n   indication of something\
    \ pathological.  But, this is precisely what\n   rough consensus is ideally suited\
    \ to guard against: vote stuffing.\n   In the presence of an objection, the chair\
    \ can use their technical\n   judgement to decide that the objection has been\
    \ answered by the group\n   and that rough consensus overrides the objection.\
    \  Now, the case\n   described here is probably the hardest call for the chair\
    \ to make\n   (how many of us are willing to make the call that the vast majority\n\
    \   of people in the room are simply stonewalling, not trying to come to\n   consensus?),\
    \ and, if appealed, it would be incredibly difficult for\n   the appeals body\
    \ to sort out.  Indeed, it is likely that if a working\n   group got this dysfunctional,\
    \ it would put the whole concept of\n   coming to rough consensus at risk.  But\
    \ still, the correct outcome in\n   this case is to look at the very weak signal\
    \ against the huge\n   background noise in order to find the rough consensus.\n"
- title: 8.  Conclusion
  contents:
  - "8.  Conclusion\n   Although this document talks quite a bit about the things\
    \ chairs,\n   working groups, and other IETF participants might do to achieve\
    \ rough\n   consensus, this document is not really about process and procedures.\n\
    \   It describes a way of thinking about how we make our decisions.\n   Sometimes,\
    \ a show of hands can be useful; sometimes, it can be quite\n   damaging and result\
    \ in terrible decisions.  Sometimes, using a device\n   like a \"hum\" can avoid\
    \ those pitfalls; sometimes, it is just a poorly\n   disguised vote.  The point\
    \ of this document is to get all of us to\n   think about how we are coming to\
    \ decisions in the IETF so that we\n   avoid the dangers of \"majority rule\"\
    \ and actually get to rough\n   consensus decisions with the best technical outcomes.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   \"He who defends with love will be secure.\"\
    \ -- Lao Tzu\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [Clark]    Clark, D., \"A Cloudy Crystal Ball\
    \ - Visions of the\n              Future\", Proceedings of the Twenty-Fourth Internet\n\
    \              Engineering Task Force, pages 539-543, July 1992,\n           \
    \   <http://www.ietf.org/proceedings/24.pdf>.\n   [RFC1603]  Huizer, E. and D.\
    \ Crocker, \"IETF Working Group Guidelines\n              and Procedures\", RFC\
    \ 1603, March 1994.\n   [RFC2418]  Bradner, S., \"IETF Working Group Guidelines\
    \ and\n              Procedures\", BCP 25, RFC 2418, September 1998.\n   [Sheeran]\
    \  Sheeran, M., \"Beyond Majority Rule: Voteless Decisions in\n              the\
    \ Religious Society of Friends\", ISBN 978-0941308045,\n              December\
    \ 1983.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   This document is the result of conversations\
    \ with many IETF\n   participants, too many to name individually.  I greatly appreciate\n\
    \   all of the discussions and guidance.  I do want to extend special\n   thanks\
    \ to Peter Saint-Andre, who sat me down and pushed me to start\n   writing, and\
    \ to Melinda Shore for pointing me to \"Beyond Majority\n   Rule\" [Sheeran],\
    \ which inspired some of the thinking in this\n   document.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Pete Resnick\n   Qualcomm Technologies, Inc.\n   5775 Morehouse\
    \ Drive\n   San Diego, CA  92121\n   US\n   Phone: +1 858 651 4478\n   EMail:\
    \ presnick@qti.qualcomm.com\n"
