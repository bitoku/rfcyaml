- title: __initial_text__
  contents:
  - '           Internet Message Access Protocol - Obsolete Syntax

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes obsolete syntax which may be encountered\
    \ by\n   IMAP4 implementations which deal with older versions of the Internet\n\
    \   Mail Access Protocol.  IMAP4 implementations MAY implement this\n   syntax\
    \ in order to maximize interoperability with older\n   implementations.\n   This\
    \ document repeats information from earlier documents, most\n   notably RFC 1176\
    \ and RFC 1730.\n"
- title: Obsolete Commands and Fetch Data Items
  contents:
  - "Obsolete Commands and Fetch Data Items\n   The following commands are OBSOLETE.\
    \  It is NOT required to support\n   any of these commands or fetch data items\
    \ in new server\n   implementations.  These commands are documented here for the\
    \ benefit\n   of implementors who may wish to support them for compatibility with\n\
    \   old client implementations.\n   The section headings of these commands are\
    \ intended to correspond\n   with where they would be located in the main document\
    \ if they were\n   not obsoleted.\n"
- title: 6.3.OBS.1.      FIND ALL.MAILBOXES Command
  contents:
  - "6.3.OBS.1.      FIND ALL.MAILBOXES Command\n   Arguments:  mailbox name with\
    \ possible wildcards\n   Data:       untagged responses: MAILBOX\n   Result: \
    \    OK - find completed\n               NO - find failure: can't list that name\n\
    \               BAD - command unknown or arguments invalid\n      The FIND ALL.MAILBOXES\
    \ command returns a subset of names from the\n      complete set of all names\
    \ available to the user.  It returns zero\n      or more untagged MAILBOX replies.\
    \  The mailbox argument to FIND\n      ALL.MAILBOXES is similar to that for LIST\
    \ with an empty reference,\n      except that the characters \"%\" and \"?\" match\
    \ a single character.\n   Example:    C: A002 FIND ALL.MAILBOXES *\n         \
    \      S: * MAILBOX blurdybloop\n               S: * MAILBOX INBOX\n         \
    \      S: A002 OK FIND ALL.MAILBOXES completed\n"
- title: 6.3.OBS.2.      FIND MAILBOXES Command
  contents:
  - "6.3.OBS.2.      FIND MAILBOXES Command\n   Arguments:  mailbox name with possible\
    \ wildcards\n   Data:       untagged responses: MAILBOX\n   Result:     OK - find\
    \ completed\n               NO - find failure: can't list that name\n        \
    \       BAD - command unknown or arguments invalid\n      The FIND MAILBOXES command\
    \ returns a subset of names from the set\n      of names that the user has declared\
    \ as being \"active\" or\n      \"subscribed\".  It returns zero or more untagged\
    \ MAILBOX replies.\n      The mailbox argument to FIND MAILBOXES is similar to\
    \ that for LSUB\n      with an empty reference, except that the characters \"\
    %\" and \"?\"\n      match a single character.\n   Example:    C: A002 FIND MAILBOXES\
    \ *\n               S: * MAILBOX blurdybloop\n               S: * MAILBOX INBOX\n\
    \               S: A002 OK FIND MAILBOXES completed\n"
- title: 6.3.OBS.3.      SUBSCRIBE MAILBOX Command
  contents:
  - "6.3.OBS.3.      SUBSCRIBE MAILBOX Command\n   Arguments:  mailbox name\n   Data:\
    \       no specific data for this command\n   Result:     OK - subscribe completed\n\
    \               NO - subscribe failure: can't subscribe to that name\n       \
    \        BAD - command unknown or arguments invalid\n      The SUBSCRIBE MAILBOX\
    \ command is identical in effect to the\n      SUBSCRIBE command.  A server which\
    \ implements this command must be\n      able to distinguish between a SUBSCRIBE\
    \ MAILBOX command and a\n      SUBSCRIBE command with a mailbox name argument\
    \ of \"MAILBOX\".\n   Example:    C: A002 SUBSCRIBE MAILBOX #news.comp.mail.mime\n\
    \               S: A002 OK SUBSCRIBE MAILBOX to #news.comp.mail.mime\n       \
    \        completed\n               C: A003 SUBSCRIBE MAILBOX\n               S:\
    \ A003 OK SUBSCRIBE to MAILBOX completed\n"
- title: 6.3.OBS.4.      UNSUBSCRIBE MAILBOX Command
  contents:
  - "6.3.OBS.4.      UNSUBSCRIBE MAILBOX Command\n   Arguments:  mailbox name\n  \
    \ Data:       no specific data for this command\n   Result:     OK - unsubscribe\
    \ completed\n               NO - unsubscribe failure: can't unsubscribe that name\n\
    \               BAD - command unknown or arguments invalid\n      The UNSUBSCRIBE\
    \ MAILBOX command is identical in effect to the\n      UNSUBSCRIBE command.  A\
    \ server which implements this command must\n      be able to distinguish between\
    \ a UNSUBSCRIBE MAILBOX command and\n      an UNSUBSCRIBE command with a mailbox\
    \ name argument of \"MAILBOX\".\n   Example:    C: A002 UNSUBSCRIBE MAILBOX #news.comp.mail.mime\n\
    \               S: A002 OK UNSUBSCRIBE MAILBOX from #news.comp.mail.mime\n   \
    \            completed\n               C: A003 UNSUBSCRIBE MAILBOX\n         \
    \      S: A003 OK UNSUBSCRIBE from MAILBOX completed\n"
- title: 6.4.OBS.1       PARTIAL Command
  contents:
  - "6.4.OBS.1       PARTIAL Command\n   Arguments:  message sequence number\n   \
    \            message data item name\n               position of first octet\n\
    \               number of octets\n   Data:       untagged responses: FETCH\n \
    \  Result:     OK - partial completed\n               NO - partial error: can't\
    \ fetch that data\n               BAD - command unknown or arguments invalid\n\
    \      The PARTIAL command is equivalent to the associated FETCH command,\n  \
    \    with the added functionality that only the specified number of\n      octets,\
    \ beginning at the specified starting octet, are returned.\n      Only a single\
    \ message can be fetched at a time.  The first octet\n      of a message, and\
    \ hence the minimum for the starting octet, is\n      octet 1.\n      The following\
    \ FETCH items are valid data for PARTIAL: RFC822,\n      RFC822.HEADER, RFC822.TEXT,\
    \ BODY[<section>], as well as any .PEEK\n      forms of these.\n      Any partial\
    \ fetch that attempts to read beyond the end of the text\n      is truncated as\
    \ appropriate.  If the starting octet is beyond the\n      end of the text, an\
    \ empty string is returned.\n      The data are returned with the FETCH response.\
    \  There is no\n      indication of the range of the partial data in this response.\
    \  It\n      is not possible to stream multiple PARTIAL commands of the same\n\
    \      data item without processing and synchronizing at each step, since\n  \
    \    streamed commands may be executed out of order.\n      There is no requirement\
    \ that partial fetches follow any sequence.\n      For example, if a partial fetch\
    \ of octets 1 through 10000 breaks\n      in an awkward place for BASE64 decoding,\
    \ it is permitted to\n      continue with a partial fetch of 9987 through 19987,\
    \ etc.\n      The handling of the \\Seen flag is the same as in the associated\n\
    \      FETCH command.\n   Example:    C: A005 PARTIAL 4 RFC822 1 1024\n      \
    \         S: * 1 FETCH (RFC822 {1024}\n               S: Return-Path: <gray@cac.washington.edu>\n\
    \               S: ...\n               S: .........  FLAGS (\\Seen))\n       \
    \        S: A005 OK PARTIAL completed\n"
- title: 6.4.5.OBS.1     Obsolete FETCH Data Items
  contents:
  - "6.4.5.OBS.1     Obsolete FETCH Data Items\n   The following FETCH data items\
    \ are obsolete:\n      BODY[<...>0]   A body part number of 0 is the [RFC-822]\
    \ header of\n                     the message.  BODY[0] is functionally equivalent\
    \ to\n                     BODY[HEADER], differing in the syntax of the\n    \
    \                 resulting untagged FETCH data (BODY[0] is\n                \
    \     returned).\n      RFC822.HEADER.LINES <header_list>\n                  \
    \   Functionally equivalent to BODY.PEEK[HEADER.LINES\n                     <header_list>],\
    \ differing in the syntax of the\n                     resulting untagged FETCH\
    \ data (RFC822.HEADER is\n                     returned).\n      RFC822.HEADER.LINES.NOT\
    \ <header_list>\n                     Functionally equivalent to\n           \
    \          BODY.PEEK[HEADER.LINES.NOT <header_list>],\n                     differing\
    \ in the syntax of the resulting untagged\n                     FETCH data (RFC822.HEADER\
    \ is returned).\n      RFC822.PEEK    Functionally equivalent to BODY.PEEK[],\
    \ except for\n                     the syntax of the resulting untagged FETCH\
    \ data\n                     (RFC822 is returned).\n      RFC822.TEXT.PEEK\n \
    \                    Functionally equivalent to BODY.PEEK[TEXT], except\n    \
    \                 for the syntax of the resulting untagged FETCH data\n      \
    \               (RFC822.TEXT is returned).\n"
- title: Obsolete Responses
  contents:
  - "Obsolete Responses\n   The following responses are OBSOLETE.  Except as noted\
    \ below, these\n   responses MUST NOT be transmitted by new server implementations.\n\
    \   Client implementations SHOULD accept these responses.\n   The section headings\
    \ of these responses are intended to correspond\n   with where they would be located\
    \ in the main document if they were\n   not obsoleted.\n"
- title: 7.2.OBS.1.      MAILBOX Response
  contents:
  - "7.2.OBS.1.      MAILBOX Response\n   Data:       name\n      The MAILBOX response\
    \ MUST NOT be transmitted by server\n      implementations except in response\
    \ to the obsolete FIND MAILBOXES\n      and FIND ALL.MAILBOXES commands.  Client\
    \ implementations that do\n      not use these commands MAY ignore this response.\
    \  It is documented\n      here for the benefit of implementors who may wish to\
    \ support it\n      for compatibility with old client implementations.\n     \
    \ This response occurs as a result of the FIND MAILBOXES and FIND\n      ALL.MAILBOXES\
    \ commands.  It returns a single name that matches the\n      FIND specification.\
    \  There are no attributes or hierarchy\n      delimiter.\n   Example:    S: *\
    \ MAILBOX blurdybloop\n"
- title: 7.3.OBS.1.      COPY Response
  contents:
  - "7.3.OBS.1.      COPY Response\n   Data:       none\n      The COPY response MUST\
    \ NOT be transmitted by new server\n      implementations.  Client implementations\
    \ MUST ignore the COPY\n      response.  It is documented here for the benefit\
    \ of client\n      implementors who may encounter this response from old server\n\
    \      implementations.\n      In some experimental versions of this protocol,\
    \ this response was\n      returned in response to a COPY command to indicate\
    \ on a\n      per-message basis that the message was copied successfully.\n  \
    \ Example:    S: * 44 COPY\n"
- title: 7.3.OBS.2.      STORE Response
  contents:
  - "7.3.OBS.2.      STORE Response\n   Data:       message data\n      The STORE\
    \ response MUST NOT be transmitted by new server\n      implementations.  Client\
    \ implementations MUST treat the STORE\n      response as equivalent to the FETCH\
    \ response.  It is documented\n      here for the benefit of client implementors\
    \ who may encounter this\n      response from old server implementations.\n  \
    \    In some experimental versions of this protocol, this response was\n     \
    \ returned instead of FETCH in response to a STORE command to report\n      the\
    \ new value of the flags.\n   Example:    S: * 69 STORE (FLAGS (\\Deleted))\n"
- title: Formal Syntax of Obsolete Commands and Responses
  contents:
  - "Formal Syntax of Obsolete Commands and Responses\n   Each obsolete syntax rule\
    \ that is suffixed with \"_old\" is added to\n   the corresponding name in the\
    \ formal syntax.  For example,\n   command_auth_old adds the FIND command to command_auth.\n\
    \   command_auth_old ::= find\n   command_select_old\n                   ::= partial\n\
    \   date_year_old   ::= 2digit\n                       ;; (year - 1900)\n   date_time_old\
    \   ::= <\"> date_day_fixed \"-\" date_month \"-\" date_year\n               \
    \        SPACE time \"-\" zone_name <\">\n   find            ::= \"FIND\" SPACE\
    \ [\"ALL.\"] \"MAILBOXES\" SPACE\n                       list_mailbox\n   fetch_att_old\
    \   ::= \"RFC822.HEADER.LINES\" [\".NOT\"] SPACE header_list /\n             \
    \          fetch_text_old\n   fetch_text_old  ::= \"BODY\" [\".PEEK\"] section_old\
    \ /\n                       \"RFC822\" [\".HEADER\" / \".TEXT\" [\".PEEK\"]]\n\
    \   msg_data_old    ::= \"COPY\" / (\"STORE\" SPACE msg_att)\n   partial     \
    \    ::= \"PARTIAL\" SPACE nz_number SPACE fetch_text_old SPACE\n            \
    \           number SPACE number\n   section_old     ::= \"[\" (number [\".\" number])\
    \ \"]\"\n   subscribe_old   ::= \"SUBSCRIBE\" SPACE \"MAILBOX\" SPACE mailbox\n\
    \   unsubscribe_old ::= \"UNSUBSCRIBE\" SPACE \"MAILBOX\" SPACE mailbox\n   zone_name\
    \       ::= \"UT\" / \"GMT\" / \"Z\" /                ;; +0000\n             \
    \          \"AST\" / \"EDT\" /                     ;; -0400\n                \
    \       \"EST\" / \"CDT\" /                     ;; -0500\n                   \
    \    \"CST\" / \"MDT\" /                     ;; -0600\n                      \
    \ \"MST\" / \"PDT\" /                     ;; -0700\n                       \"\
    PST\" / \"YDT\" /                     ;; -0800\n                       \"YST\"\
    \ / \"HDT\" /                     ;; -0900\n                       \"HST\" / \"\
    BDT\" /                     ;; -1000\n                       \"BST\" /       \
    \                      ;; -1100\n                       \"A\" / \"B\" / \"C\"\
    \ / \"D\" / \"E\" / \"F\" / ;; +1 to +6\n                       \"G\" / \"H\"\
    \ / \"I\" / \"K\" / \"L\" / \"M\" / ;; +7 to +12\n                       \"N\"\
    \ / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / ;; -1 to -6\n                    \
    \   \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\"   ;; -7 to -12\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mark R. Crispin\n   Networks and Distributed Computing\n\
    \   University of Washington\n   4545 15th Aveneue NE\n   Seattle, WA  98105-4527\n\
    \   Phone: (206) 543-5762\n   EMail: MRC@CAC.Washington.EDU\n"
