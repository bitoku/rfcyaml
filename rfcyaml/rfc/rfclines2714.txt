Abstract CORBA [CORBA] is the Common Object Request Broker Architecture defined by the Object Management Group.
This document defines the schema for representing CORBA object references in an LDAP directory [LDAPv3].
This document assumes that the reader has a general understanding of CORBA.
Traditionally, LDAP directories have been used to store data.
Users and programmers think of the directory as a hierarchy of directory entries, each containing a set of attributes.
You look up an entry from the directory and extract the attribute(s) of interest.
For example, you can look up a person's telephone number from the directory.
Alternatively, you can search the directory for entries with a particular set of attributes.
For example, you can search for all persons in the directory with the surname "Smith".
CORBA applications require access to CORBA objects.
Traditionally, CORBA applications have used the COS Naming service for storage and retrieval of CORBA object references.
When deployed in environments with a directory, CORBA applications should be able to use the directory as a repository for CORBA object references.
The directory provides a centrally administered, and possibly replicated, service for use by CORBA applications distributed across the network.
For example, an application server may use the directory for "registering" CORBA objects representing the services that it manages, so that a client can later search the directory to locate those services as it needs.
The motivation for this document is to define a common way for applications to store and retrieve CORBA object references from the directory.
Using this common schema, any CORBA application that needs to read or store CORBA object references in the directory can do so in an interoperable way.
Note that this schema is defined for storing CORBA "object references," not CORBA objects in general.
There might be other ways to store CORBA objects in an LDAP directory but they are not covered by this schema.
The following attribute types are defined in this document: corbaIor corbaRepositoryId 3.1 corbaIor
the string representation of the interoperable object reference (IOR) for a CORBA object.
An IOR is an opaque handle for the object which contains the information necessary to locate the object, even if the object is in another ORB.
This attribute's syntax is 'IA5 String' and its case is insignificant.
( 1.3.6.1.4.1.42.2.27.4.1.14 NAME 'corbaIor' DESC 'Stringified interoperable object reference of a CORBA object' EQUALITY caseIgnoreIA5Match SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 SINGLE VALUE )
Each CORBA interface has a unique "repository id" (also called "type id") that identifies the interface.
A CORBA object has one or more repository ids, one for each interface that it implements.
The format of a repository id can be any string, but the OMG specifies four standard formats: a.
For example, the repository id for the "NamingContext" in OMG's COS Naming module is:  "IDL:omg.org/CosNaming
HashCode[:SUID] This format is used by RMI IIOP remote objects [RMI IIOP].
ClassName" is the fully qualified name of the class (for example, "java.lang.
HashCode" is the object's hash code (that is, that obtained by invoking the "hashCode()" method).
"SUID" is the "stream unique identifier", which is a 64 bit number that uniquely identifies the serialization version of the class; SUID is optional in the repository
This format is used for DCE/CORBA interoperability [CORBA DCE].
"UUID" represents a DCE UUID.
"local" This format is defined by the local Object Request Broker (ORB).
The corbaRepositoryId attribute is a multivalued attribute; each value records a single repository
id of an interface implemented by the CORBA object.
This attribute need not contain a complete list of the interfaces implemented by the CORBA object.
This attribute's syntax is 'Directory String' and its case is significant.
The values of this attribute are encoded using UTF 8.
Some values may require translation from their native representation in order to be correctly encoded using UTF 8.
( 1.3.6.1.4.1.42.2.27.4.1.15 NAME 'corbaRepositoryId' DESC 'Repository ids of interfaces implemented by a CORBA object' EQUALITY caseExactMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 ) 4.
The following object classes are defined in this document:
This structural object class represents a container for a CORBA object.
( 1.3.6.1.4.1.42.2.27.4.2.10 NAME 'corbaContainer' DESC 'Container for a CORBA object' SUP top STRUCTURAL
MUST ( cn ) )
4.2 corbaObject This abstract object class is the root class for representing a CORBA object.
Security Considerations Obtaining a reference to an object and storing it in the directory may make a handle to the object available to a wider audience.
This may have security implications.
( 1.3.6.1.4.1.42.2.27.4.1.14 NAME 'corbaIor' DESC 'Stringified interoperable object reference of a CORBA object' EQUALITY caseIgnoreIA5Match SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 SINGLE VALUE )
( 2.5.4.13 NAME 'description' EQUALITY
caseIgnoreMatch SUBSTR caseIgnoreSubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )
MUST ( cn ) )
corbaObjectReference' DESC 'CORBA interoperable object reference' SUP corbaObject AUXILIARY MUST ( corbaIor ) )
Matching rule from ISO X.520
( 2.5.13.5 NAME 'caseExactMatch' SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
