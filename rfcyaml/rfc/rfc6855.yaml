- contents:
  - '                         IMAP Support for UTF-8

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This specification extends the Internet Message Access Protocol\n
    \  (IMAP) to support UTF-8 encoded international characters in user\n   names,
    mail addresses, and message headers.  This specification\n   replaces RFC 5738.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6855.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  Conventions Used in This Document  . . . . . . . . . .
    . . . .  2\n   3.  \"UTF8=ACCEPT\" IMAP Capability and UTF-8 in IMAP\n       Quoted-Strings
    . . . . . . . . . . . . . . . . . . . . . . . .  3\n   4.  IMAP UTF8 \"APPEND\"
    Data Extension  . . . . . . . . . . . . . .  4\n   5.  \"LOGIN\" Command and UTF-8
    \ . . . . . . . . . . . . . . . . . .  5\n   6.  \"UTF8=ONLY\" Capability . .
    . . . . . . . . . . . . . . . . . .  5\n   7.  Dealing with Legacy Clients  .
    . . . . . . . . . . . . . . . .  6\n   8.  Issues with UTF-8 Header Mailstore
    . . . . . . . . . . . . . .  7\n   9.  IANA Considerations  . . . . . . . . .
    . . . . . . . . . . . .  8\n   10. Security Considerations  . . . . . . . . .
    . . . . . . . . . .  8\n   11. References . . . . . . . . . . . . . . . . . .
    . . . . . . . .  9\n     11.1.  Normative References  . . . . . . . . . . . .
    . . . . . .  9\n     11.2.  Informative References  . . . . . . . . . . . . .
    . . . . 10\n   Appendix A.  Design Rationale  . . . . . . . . . . . . . . . .
    . . 11\n   Appendix B.  Acknowledgments . . . . . . . . . . . . . . . . . . .
    11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This specification forms part of the Email Address\n   Internationalization
    protocols described in the Email Address\n   Internationalization Framework document
    [RFC6530].  It extends IMAP\n   [RFC3501] to permit UTF-8 [RFC3629] in headers,
    as described in\n   \"Internationalized Email Headers\" [RFC6532].  It also adds
    a\n   mechanism to support mailbox names using the UTF-8 charset.  This\n   specification
    creates two new IMAP capabilities to allow servers to\n   advertise these new
    extensions.\n   This specification assumes that the IMAP server will be operating
    in\n   a fully internationalized environment, i.e., one in which all clients\n
    \  accessing the server will be able to accept non-ASCII message header\n   fields
    and other information, as specified in Section 3.  At least\n   during a transition
    period, that assumption will not be realistic for\n   many environments; the issues
    involved are discussed in Section 7\n   below.\n   This specification replaces
    an earlier, experimental approach to the\n   same problem [RFC5738].\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"SHOULD\", \"SHOULD NOT\", and \"MAY\"\n   in this document are to be interpreted
    as defined in \"Key words for\n   use in RFCs to Indicate Requirement Levels\"
    [RFC2119].\n   The formal syntax uses the Augmented Backus-Naur Form (ABNF)\n
    \  [RFC5234] notation.  In addition, rules from IMAP [RFC3501], UTF-8\n   [RFC3629],
    Extensions to IMAP ABNF [RFC4466], and IMAP \"LIST\" command\n   extensions [RFC5258]
    are also referenced.  This document assumes that\n   the reader will have a reasonably
    good understanding of these RFCs.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  \"UTF8=ACCEPT\" IMAP Capability and UTF-8 in IMAP Quoted-Strings\n   The
    \"UTF8=ACCEPT\" capability indicates that the server supports the\n   ability
    to open mailboxes containing internationalized messages with\n   the \"SELECT\"
    and \"EXAMINE\" commands, and the server can provide UTF-8\n   responses to the
    \"LIST\" and \"LSUB\" commands.  This capability also\n   affects other IMAP extensions
    that can return mailbox names or their\n   prefixes, such as NAMESPACE [RFC2342]
    and ACL [RFC4314].\n   The \"UTF8=ONLY\" capability, described in Section 6, implies
    the\n   \"UTF8=ACCEPT\" capability.  A server is said to support \"UTF8=ACCEPT\"\n
    \  if it advertises either \"UTF8=ACCEPT\" or \"UTF8=ONLY\".\n   A client MUST
    use the \"ENABLE\" command [RFC5161] with the\n   \"UTF8=ACCEPT\" option (defined
    in Section 4 below) to indicate to the\n   server that the client accepts UTF-8
    in quoted-strings and supports\n   the \"UTF8=ACCEPT\" extension.  The \"ENABLE
    UTF8=ACCEPT\" command is\n   only valid in the authenticated state.\n   The IMAP
    base specification [RFC3501] forbids the use of 8-bit\n   characters in atoms
    or quoted-strings.  Thus, a UTF-8 string can only\n   be sent as a literal.  This
    can be inconvenient from a coding\n   standpoint, and unless the server offers
    IMAP non-synchronizing\n   literals [RFC2088], this requires an extra round trip
    for each UTF-8\n   string sent by the client.  When the IMAP server supports\n
    \  \"UTF8=ACCEPT\", it supports UTF-8 in quoted-strings with the following\n   syntax:\n
    \           quoted        =/ DQUOTE *uQUOTED-CHAR DQUOTE\n                   ;
    QUOTED-CHAR is not modified, as it will affect\n                   ; other RFC
    3501 ABNF non-terminals.\n            uQUOTED-CHAR  = QUOTED-CHAR / UTF8-2 / UTF8-3
    / UTF8-4\n            UTF8-2        =   <Defined in Section 4 of RFC 3629>\n            UTF8-3
    \       =   <Defined in Section 4 of RFC 3629>\n            UTF8-4        =   <Defined
    in Section 4 of RFC 3629>\n   When this extended quoting mechanism is used by
    the client, the\n   server MUST reject, with a \"BAD\" response, any octet sequences
    with\n   the high bit set that fail to comply with the formal syntax\n   requirements
    of UTF-8 [RFC3629].  The IMAP server MUST NOT send UTF-8\n   in quoted-strings
    to the client unless the client has indicated\n   support for that syntax by using
    the \"ENABLE UTF8=ACCEPT\" command.\n   If the server supports \"UTF8=ACCEPT\",
    the client MAY use extended\n   quoted syntax with any IMAP argument that permits
    a string (including\n   astring and nstring).  However, if characters outside
    the US-ASCII\n   repertoire are used in an inappropriate place, the results would
    be\n   the same as if other syntactically valid but semantically invalid\n   characters
    were used.  Specific cases where UTF-8 characters are\n   permitted or not permitted
    are described in the following paragraphs.\n   All IMAP servers that support \"UTF8=ACCEPT\"
    SHOULD accept UTF-8 in\n   mailbox names, and those that also support the Mailbox
    International\n   Naming Convention described in RFC 3501, Section 5.1.3, MUST
    accept\n   UTF8-quoted mailbox names and convert them to the appropriate\n   internal
    format.  Mailbox names MUST comply with the Net-Unicode\n   Definition ([RFC5198],
    Section 2) with the specific exception that\n   they MUST NOT contain control
    characters (U+0000-U+001F and U+0080-U+\n   009F), a delete character (U+007F),
    a line separator (U+2028), or a\n   paragraph separator (U+2029).\n   Once an
    IMAP client has enabled UTF-8 support with the \"ENABLE\n   UTF8=ACCEPT\" command,
    it MUST NOT issue a \"SEARCH\" command that\n   contains a charset specification.
    \ If an IMAP server receives such a\n   \"SEARCH\" command in that situation,
    it SHOULD reject the command with\n   a \"BAD\" response (due to the conflicting
    charset labels).\n"
  title: 3.  "UTF8=ACCEPT" IMAP Capability and UTF-8 in IMAP Quoted-Strings
- contents:
  - "4.  IMAP UTF8 \"APPEND\" Data Extension\n   If the server supports \"UTF8=ACCEPT\",
    then the server accepts UTF-8\n   headers in the \"APPEND\" command message argument.
    \ A client that\n   sends a message with UTF-8 headers to the server MUST send
    them using\n   the \"UTF8\" data extension to the \"APPEND\" command.  If the
    server\n   also advertises the \"CATENATE\" capability [RFC4469], the client can\n
    \  use the same data extension to include such a message in a catenated\n   message
    part.  The ABNF for the \"APPEND\" data extension and\n   \"CATENATE\" extension
    follows:\n        utf8-literal   = \"UTF8\" SP \"(\" literal8 \")\"\n        literal8
    \      = <Defined in RFC 4466>\n        append-data    =/ utf8-literal\n        cat-part
    \      =/ utf8-literal\n   If an IMAP server supports \"UTF8=ACCEPT\" and the
    IMAP client has not\n   issued the \"ENABLE UTF8=ACCEPT\" command, the server
    MUST reject, with\n   a \"NO\" response, an \"APPEND\" command that includes any
    8-bit\n   character in message header fields.\n"
  title: 4.  IMAP UTF8 "APPEND" Data Extension
- contents:
  - "5.  \"LOGIN\" Command and UTF-8\n   This specification does not extend the IMAP
    \"LOGIN\" command [RFC3501]\n   to support UTF-8 usernames and passwords.  Whenever
    a client needs to\n   use UTF-8 usernames or passwords, it MUST use the IMAP \"AUTHENTICATE\"\n
    \  command, which is already capable of passing UTF-8 usernames and\n   credentials.\n
    \  Although using the IMAP \"AUTHENTICATE\" command in this way makes it\n   syntactically
    legal to have a UTF-8 username or password, there is no\n   guarantee that the
    user provisioning system utilized by the IMAP\n   server will allow such identities.
    \ This is an implementation\n   decision and may depend on what identity system
    the IMAP server is\n   configured to use.\n"
  title: 5.  "LOGIN" Command and UTF-8
- contents:
  - "6.  \"UTF8=ONLY\" Capability\n   The \"UTF8=ONLY\" capability indicates that
    the server supports\n   \"UTF8=ACCEPT\" (see Section 4) and that it requires support
    for UTF-8\n   from clients.  In particular, this means that the server will send\n
    \  UTF-8 in quoted-strings, and it will not accept the older\n   international
    mailbox name convention (modified UTF-7 [RFC3501]).\n   Because these are incompatible
    changes to IMAP, explicit server\n   announcement and client confirmation is necessary:
    clients MUST use\n   the \"ENABLE UTF8=ACCEPT\" command before using this server.
    \ A server\n   that advertises \"UTF8=ONLY\" will reject, with a \"NO [CANNOT]\"\n
    \  response [RFC5530], any command that might require UTF-8 support and\n   is
    not preceded by an \"ENABLE UTF8=ACCEPT\" command.\n   IMAP clients that find
    support for a server that announces\n   \"UTF8=ONLY\" problematic are encouraged
    to at least detect the\n   announcement and provide an informative error message
    to the\n   end-user.\n   Because the \"UTF8=ONLY\" server capability includes
    support for\n   \"UTF8=ACCEPT\", the capability string will include, at most,
    one of\n   those and never both.  For the client, \"ENABLE UTF8=ACCEPT\" is always\n
    \  used -- never \"ENABLE UTF8=ONLY\".\n"
  title: 6.  "UTF8=ONLY" Capability
- contents:
  - "7.   Dealing with Legacy Clients\n   In most situations, it will be difficult
    or impossible for the\n   implementer or operator of an IMAP (or POP) server to
    know whether\n   all of the clients that might access it, or the associated mail
    store\n   more generally, will be able to support the facilities defined in\n
    \  this document.  In almost all cases, servers that conform to this\n   specification
    will have to be prepared to deal with clients that do\n   not enable the relevant
    capabilities.  Unfortunately, there is no\n   completely satisfactory way to do
    so other than for systems that wish\n   to receive email that requires SMTPUTF8
    capabilities to be sure that\n   all components of those systems -- including
    IMAP and other clients\n   selected by users -- are upgraded appropriately.\n
    \  When a message that requires SMTPUTF8 is encountered and the client\n   does
    not enable UTF-8 capability, choices available to the server\n   include hiding
    the problematic message(s), creating in-band or\n   out-of-band notifications
    or error messages, or somehow trying to\n   create a surrogate of the message
    with the intention of providing\n   useful information to that client about what
    has occurred.  Such\n   surrogate messages cannot be actual substitutes for the
    original\n   message: they will almost always be impossible to reply to (either
    at\n   all or without loss of information) and the new header fields or\n   specialized
    constructs for server-client communications may go beyond\n   the requirements
    of current email specifications (e.g., [RFC5322]).\n   Consequently, such messages
    may confuse some legacy mail user agents\n   (including IMAP clients) or not provide
    expected information to\n   users.  There are also trade-offs in constructing
    surrogates of the\n   original message between accepting complexity and additional\n
    \  computation costs in order to try to preserve as much information as\n   possible
    (for example, in \"Post-Delivery Message Downgrading for\n   Internationalized
    Email Messages\" [RFC6857]) and trying to minimize\n   those costs while still
    providing useful information (for example, in\n   \"Simplified POP and IMAP Downgrading
    for Internationalized Email\"\n   [RFC6858]).\n   Implementations that choose
    to perform downgrading SHOULD use one of\n   the standardized algorithms provided
    in RFC 6857 or RFC 6858.\n   Getting downgrade algorithms right, and minimizing
    the risk of\n   operational problems and harm to the email system, is tricky and\n
    \  requires careful engineering.  These two algorithms are well\n   understood
    and carefully designed.\n   Because such messages are really surrogates of the
    original ones, not\n   really \"downgraded\" ones (although that terminology is
    often used for\n   convenience), they inevitably have relationships to the originals\n
    \  that the IMAP specification [RFC3501] did not anticipate.  This\n   brings
    up two concerns in particular: First, digital signatures\n   computed over and
    intended for the original message will often not be\n   applicable to the surrogate
    message, and will often fail signature\n   verification.  (It will be possible
    for some digital signatures to be\n   verified, if they cover only parts of the
    original message that are\n   not affected in the creation of the surrogate.)
    \ Second, servers that\n   may be accessed by the same user with different clients
    or methods\n   (e.g., POP or webmail systems in addition to IMAP or IMAP clients\n
    \  with different capabilities) will need to exert extreme care to be\n   sure
    that UIDVALIDITY [RFC3501] behaves as the user would expect.\n   Those issues
    may be especially sensitive if the server caches the\n   surrogate message or
    computes and stores it when the message arrives\n   with the intent of making
    either form available depending on client\n   capabilities.  Additionally, in
    order to cope with the case when a\n   server compliant with this extension returns
    the same UIDVALIDITY to\n   both legacy and \"UTF8=ACCEPT\"-aware clients, a client
    upgraded from\n   being non-\"UTF8=ACCEPT\"-aware MUST discard its cache of messages\n
    \  downloaded from the server.\n   The best (or \"least bad\") approach for any
    given environment will\n   depend on local conditions, local assumptions about
    user behavior,\n   the degree of control the server operator has over client usage
    and\n   upgrading, the options that are actually available, and so on.  It is\n
    \  impossible, at least at the time of publication of this\n   specification,
    to give good advice that will apply to all situations,\n   or even particular
    profiles of situations, other than \"upgrade legacy\n   clients as soon as possible\".\n"
  title: 7.   Dealing with Legacy Clients
- contents:
  - "8.  Issues with UTF-8 Header Mailstore\n   When an IMAP server uses a mailbox
    format that supports UTF-8 headers\n   and it permits selection or examination
    of that mailbox without\n   issuing \"ENABLE UTF8=ACCEPT\" first, it is the responsibility
    of the\n   server to comply with the IMAP base specification [RFC3501] and the\n
    \  Internet Message Format [RFC5322] with respect to all header\n   information
    transmitted over the wire.  The issue of handling\n   messages containing non-ASCII
    characters in legacy environments is\n   discussed in Section 7.\n"
  title: 8.  Issues with UTF-8 Header Mailstore
- contents:
  - "9.  IANA Considerations\n   This document redefines two capabilities (\"UTF8=ACCEPT\"
    and\n   \"UTF8=ONLY\") in the \"IMAP 4 Capabilities\" registry [RFC3501].  Three\n
    \  other capabilities that were described in the experimental\n   predecessor
    to this document (\"UTF8=ALL\", \"UTF8=APPEND\", \"UTF8=USER\")\n   are now OBSOLETE.
    \ IANA has updated the registry as follows:\n    OLD:\n      +--------------+-----------------+\n
    \     | UTF8=ACCEPT  |  [RFC5738]      |\n      | UTF8=ALL     |  [RFC5738]      |\n
    \     | UTF8=APPEND  |  [RFC5738]      |\n      | UTF8=ONLY    |  [RFC5738]      |\n
    \     | UTF8=USER    |  [RFC5738]      |\n      +--------------+-----------------+\n
    \   NEW:\n      +------------------------+---------------------+\n      | UTF8=ACCEPT
    \           |  [RFC6855]          |\n      | UTF8=ALL (OBSOLETE)    |  [RFC5738]
    [RFC6855]|\n      | UTF8=APPEND (OBSOLETE) |  [RFC5738] [RFC6855]|\n      | UTF8=ONLY
    \             |  [RFC6855]          |\n      | UTF8=USER (OBSOLETE)   |  [RFC5738]
    [RFC6855]|\n      +------------------------+---------------------+\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Security Considerations\n   The security considerations of UTF-8 [RFC3629]
    and SASLprep [RFC4013]\n   apply to this specification, particularly with respect
    to use of\n   UTF-8 in usernames and passwords.  Otherwise, this is not believed
    to\n   alter the security considerations of IMAP.\n   Special considerations,
    some of them with security implications,\n   occur if a server that conforms to
    this specification is accessed by\n   a client that does not, as well as in some
    more complex situations in\n   which a given message is accessed by multiple clients
    that might use\n   different protocols and/or support different capabilities.
    \ Those\n   issues are discussed in Section 7.\n"
  title: 10.  Security Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n
      \             4rev1\", RFC 3501, March 2003.\n   [RFC3629]  Yergeau, F., \"UTF-8,
      a transformation format of ISO\n              10646\", STD 63, RFC 3629, November
      2003.\n   [RFC4013]  Zeilenga, K., \"SASLprep: Stringprep Profile for User Names\n
      \             and Passwords\", RFC 4013, February 2005.\n   [RFC4466]  Melnikov,
      A. and C. Daboo, \"Collected Extensions to IMAP4\n              ABNF\", RFC
      4466, April 2006.\n   [RFC4469]  Resnick, P., \"Internet Message Access Protocol
      (IMAP)\n              CATENATE Extension\", RFC 4469, April 2006.\n   [RFC5161]
      \ Gulbrandsen, A. and A. Melnikov, \"The IMAP ENABLE\n              Extension\",
      RFC 5161, March 2008.\n   [RFC5198]  Klensin, J. and M. Padlipsky, \"Unicode
      Format for Network\n              Interchange\", RFC 5198, March 2008.\n   [RFC5234]
      \ Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234, January 2008.\n   [RFC5258]  Leiba, B. and A. Melnikov,
      \"Internet Message Access\n              Protocol version 4 - LIST Command Extensions\",
      RFC 5258,\n              June 2008.\n   [RFC5322]  Resnick, P., Ed., \"Internet
      Message Format\", RFC 5322,\n              October 2008.\n   [RFC6530]  Klensin,
      J. and Y. Ko, \"Overview and Framework for\n              Internationalized
      Email\", RFC 6530, February 2012.\n   [RFC6532]  Yang, A., Steele, S., and N.
      Freed, \"Internationalized\n              Email Headers\", RFC 6532, February
      2012.\n   [RFC6857]  Fujiwara, K., \"Post-Delivery Message Downgrading for\n
      \             Internationalized Email Messages\", RFC 6857, March 2013.\n   [RFC6858]
      \ Gulbrandsen, A., \"Simplified POP and IMAP Downgrading for\n              Internationalized
      Email\", RFC 6858, March 2013.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC2088]  Myers, J., \"IMAP4 non-synchronizing
      literals\", RFC 2088,\n              January 1997.\n   [RFC2342]  Gahrns, M.
      and C. Newman, \"IMAP4 Namespace\", RFC 2342,\n              May 1998.\n   [RFC4314]
      \ Melnikov, A., \"IMAP4 Access Control List (ACL) Extension\",\n              RFC
      4314, December 2005.\n   [RFC5530]  Gulbrandsen, A., \"IMAP Response Codes\",
      RFC 5530,\n              May 2009.\n   [RFC5738]  Resnick, P. and C. Newman,
      \"IMAP Support for UTF-8\",\n              RFC 5738, March 2010.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Appendix A.  Design Rationale\n   This non-normative section discusses the reasons
    behind some of the\n   design choices in this specification.\n   The \"UTF8=ONLY\"
    mechanism simplifies diagnosis of interoperability\n   problems when legacy support
    goes away.  In the situation where\n   backwards compatibility is not working
    anyway, the non-conforming\n   \"just-send-UTF-8 IMAP\" has the advantage that
    it might work with some\n   legacy clients.  However, the difficulty of diagnosing\n
    \  interoperability problems caused by a \"just-send-UTF-8 IMAP\"\n   mechanism
    is the reason the \"UTF8=ONLY\" capability mechanism was\n   chosen.\n"
  title: Appendix A.  Design Rationale
- contents:
  - "Appendix B.  Acknowledgments\n   The authors wish to thank the participants of
    the EAI working group\n   for their contributions to this document, with particular
    thanks to\n   Harald Alvestrand, David Black, Randall Gellens, Arnt Gulbrandsen,\n
    \  Kari Hurtta, John Klensin, Xiaodong Lee, Charles Lindsey, Alexey\n   Melnikov,
    Subramanian Moonesamy, Shawn Steele, Daniel Taharlev, and\n   Joseph Yee for their
    specific contributions to the discussion.\n"
  title: Appendix B.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Pete Resnick (editor)\n   Qualcomm Incorporated\n   5775
    Morehouse Drive\n   San Diego, CA  92121-1714\n   USA\n   Phone: +1 858 651 4478\n
    \  EMail: presnick@qti.qualcomm.com\n   Chris Newman (editor)\n   Oracle\n   800
    Royal Oaks\n   Monrovia, CA 91016\n   USA\n   Phone:\n   EMail: chris.newman@oracle.com\n
    \  Sean Shen (editor)\n   CNNIC\n   No.4 South 4th Zhongguancun Street\n   Beijing,
    100190\n   China\n   Phone: +86 10-58813038\n   EMail: shenshuo@cnnic.cn\n"
  title: Authors' Addresses
