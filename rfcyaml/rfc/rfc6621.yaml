- title: __initial_text__
  contents:
  - '                    Simplified Multicast Forwarding

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a Simplified Multicast Forwarding (SMF)\n\
    \   mechanism that provides basic Internet Protocol (IP) multicast\n   forwarding\
    \ suitable for limited wireless mesh and mobile ad hoc\n   network (MANET) use.\
    \  It is mainly applicable in situations where\n   efficient flooding represents\
    \ an acceptable engineering design trade-\n   off.  It defines techniques for\
    \ multicast duplicate packet detection\n   (DPD), to be applied in the forwarding\
    \ process, for both IPv4 and\n   IPv6 protocol use.  This document also specifies\
    \ optional mechanisms\n   for using reduced relay sets to achieve more efficient\
    \ multicast data\n   distribution within a mesh topology as compared to Classic\
    \ Flooding.\n   Interactions with other protocols, such as use of information\n\
    \   provided by concurrently running unicast routing protocols or\n   interaction\
    \ with other multicast protocols, as well as multiple\n   deployment approaches\
    \ are also described.  Distributed algorithms for\n   selecting reduced relay\
    \ sets and related discussion are provided in\n   the appendices.  Basic issues\
    \ relating to the operation of multicast\n   MANET border routers are discussed,\
    \ but ongoing work remains in this\n   area and is beyond the scope of this document.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6621.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Scope ..........................................4\n\
    \   2. Terminology .....................................................4\n  \
    \ 3. Applicability Statement .........................................5\n   4.\
    \ Overview and Functioning ........................................6\n   5. SMF\
    \ Packet Processing and Forwarding ............................8\n   6. SMF Duplicate\
    \ Packet Detection .................................10\n      6.1. IPv6 Duplicate\
    \ Packet Detection ...........................11\n           6.1.1. IPv6 SMF_DPD\
    \ Option Header .........................12\n           6.1.2. IPv6 Identification-Based\
    \ DPD ......................14\n           6.1.3. IPv6 Hash-Based DPD ................................16\n\
    \      6.2. IPv4 Duplicate Packet Detection ...........................17\n  \
    \         6.2.1. IPv4 Identification-Based DPD ......................18\n    \
    \       6.2.2. IPv4 Hash-Based DPD ................................19\n   7. Relay\
    \ Set Selection ............................................20\n      7.1. Non-Reduced\
    \ Relay Set Forwarding ..........................20\n      7.2. Reduced Relay\
    \ Set Forwarding ..............................20\n   8. SMF Neighborhood Discovery\
    \ Requirements ........................23\n      8.1. SMF Relay Algorithm TLV\
    \ Types .............................24\n           8.1.1. SMF Message TLV Type\
    \ ...............................24\n           8.1.2. SMF Address Block TLV Type\
    \ .........................25\n   9. SMF Border Gateway Considerations ..............................26\n\
    \      9.1. Forwarded Multicast Groups ................................27\n  \
    \    9.2. Multicast Group Scoping ...................................28\n    \
    \  9.3. Interface with Exterior Multicast Routing Protocols .......29\n      9.4.\
    \ Multiple Border Routers ...................................29\n   10. Security\
    \ Considerations .......................................31\n   11. IANA Considerations\
    \ ...........................................32\n      11.1. IPv6 SMF_DPD Header\
    \ Extension Option Type ................33\n      11.2. TaggerId Types (TidTy)\
    \ ...................................33\n      11.3. Well-Known Multicast Address\
    \ .............................34\n      11.4. SMF TLVs .................................................34\n\
    \           11.4.1. Expert Review for Created Type Extension\n               \
    \    Registries ........................................34\n           11.4.2.\
    \ SMF Message TLV Type (SMF_TYPE) ...................34\n           11.4.3. SMF\
    \ Address Block TLV Type (SMF_NBR_TYPE) .........35\n           11.4.4. SMF Relay\
    \ Algorithm ID Registry ...................35\n   12. Acknowledgments ...............................................36\n\
    \   13. References ....................................................37\n  \
    \    13.1. Normative References .....................................37\n    \
    \  13.2. Informative References ...................................38\n   Appendix\
    \ A.  Essential Connecting Dominating Set (E-CDS)\n                Algorithm ............................................40\n\
    \     A.1.  E-CDS Relay Set Selection Overview ........................40\n  \
    \   A.2.  E-CDS Forwarding Rules ....................................41\n    \
    \ A.3.  E-CDS Neighborhood Discovery Requirements .................41\n     A.4.\
    \  E-CDS Selection Algorithm .................................44\n   Appendix\
    \ B.  Source-Based Multipoint Relay (S-MPR) Algorithm ......46\n     B.1.  S-MPR\
    \ Relay Set Selection Overview ........................46\n     B.2.  S-MPR Forwarding\
    \ Rules ....................................47\n     B.3.  S-MPR Neighborhood\
    \ Discovery Requirements .................48\n     B.4.  S-MPR Selection Algorithm\
    \ .................................50\n   Appendix C.  Multipoint Relay Connected\
    \ Dominating Set\n                (MPR-CDS) Algorithm ..................................52\n\
    \     C.1.  MPR-CDS Relay Set Selection Overview ......................52\n  \
    \   C.2.  MPR-CDS Forwarding Rules ..................................53\n    \
    \ C.3.  MPR-CDS Neighborhood Discovery Requirements ...............53\n     C.4.\
    \  MPR-CDS Selection Algorithm ...............................54\n"
- title: 1.  Introduction and Scope
  contents:
  - "1.  Introduction and Scope\n   Unicast routing protocols, designed for MANET\
    \ and wireless mesh use,\n   often apply distributed algorithms to flood routing\
    \ control plane\n   messages within a MANET routing domain.  For example, algorithms\n\
    \   specified within [RFC3626] and [RFC3684] provide distributed methods\n   of\
    \ dynamically electing reduced relay sets that attempt to\n   efficiently flood\
    \ routing control messages while maintaining a\n   connected set under dynamic\
    \ topological conditions.\n   Simplified Multicast Forwarding (SMF) extends the\
    \ efficient flooding\n   concept to the data forwarding plane, providing an appropriate\n\
    \   multicast forwarding capability for use cases where localized,\n   efficient\
    \ flooding is considered an effective design approach.  The\n   baseline design\
    \ is intended to provide a basic, best-effort multicast\n   forwarding capability\
    \ that is constrained to operate within a single\n   MANET routing domain.\n \
    \  An SMF routing domain is an instance of an SMF routing protocol with\n   common\
    \ policies, under a single network administration authority.\n   The main design\
    \ goals of this document are to:\n   o  adapt efficient relay sets in MANET environments\
    \ [RFC2501], and\n   o  define the needed IPv4 and IPv6 multicast duplicate packet\n\
    \      detection (DPD) mechanisms to support multi-hop packet forwarding.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n   The terms introduced in [RFC5444], including \"packet\"\
    , \"message\",\n   \"TLV Block\", \"TLV\", and \"address\", are to be interpreted\
    \ as described\n   therein.\n   The following abbreviations are used throughout\
    \ this document:\n   +--------------+----------------------------------------------------+\n\
    \   | Abbreviation | Definition                                         |\n  \
    \ +--------------+----------------------------------------------------+\n   |\
    \ MANET        | Mobile Ad Hoc Network                              |\n   | SMF\
    \          | Simplified Multicast Forwarding                    |\n   | CF   \
    \        | Classic Flooding                                   |\n   | CDS    \
    \      | Connected Dominating Set                           |\n   | MPR      \
    \    | Multipoint Relay                                   |\n   | S-MPR      \
    \  | Source-based MPR                                   |\n   | MPR-CDS      |\
    \ MPR-based CDS                                      |\n   | E-CDS        | Essential\
    \ CDS                                      |\n   | NHDP         | Neighborhood\
    \ Discovery Protocol                    |\n   | DPD          | Duplicate Packet\
    \ Detection                         |\n   | I-DPD        | Identification-based\
    \ DPD                           |\n   | H-DPD        | Hash-based DPD        \
    \                             |\n   | HAV          | Hash assist value       \
    \                           |\n   | FIB          | Forwarding Information Base\
    \                        |\n   | TLV          | type-length-value encoding   \
    \                      |\n   | DoS          | Denial of Service              \
    \                    |\n   | SMF Router   | A MANET Router implementing the protocol\
    \ specified |\n   |              | in this document                          \
    \         |\n   | SMF Routing  | A MANET Routing Domain wherein the protocol \
    \       |\n   | Domain       | specified in this document is operating       \
    \     |\n   +--------------+----------------------------------------------------+\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   Within dynamic wireless routing topologies, maintaining\
    \ traditional\n   forwarding trees to support a multicast routing protocol is\
    \ often not\n   as effective as in wired networks due to the reduced reliability\
    \ and\n   increased dynamics of mesh topologies [MGL04][GM99].  A basic packet\n\
    \   forwarding service reaching all connected routers running the SMF\n   protocol\
    \ within a MANET routing domain may provide a useful group\n   communication paradigm\
    \ for various classes of applications, for\n   example, multimedia streaming,\
    \ interactive group-based messaging and\n   applications, peer-to-peer middleware\
    \ multicasting, and multi-hop\n   mobile discovery or registration services. \
    \ SMF is likely only\n   appropriate for deployment in limited dynamic MANET routing\
    \ domains\n   (further defined as administratively scoped multicast forwarding\n\
    \   domains in Section 9.2) so that the flooding process can be\n   contained.\n\
    \   A design goal is that hosts may also participate in multicast traffic\n  \
    \ transmission and reception with standard IP network-layer semantics\n   (e.g.,\
    \ special or unnecessary encapsulation of IP packets should be\n   avoided in\
    \ this case).  SMF deployments are able to connect and\n   interoperate with existing\
    \ standard multicast protocols operating\n   within more conventional Internet\
    \ infrastructures.  To this end, a\n   multicast border router or proxy mechanism\
    \ MUST be used when deployed\n   alongside more fixed-infrastructure IP multicast\
    \ routing such\n   Protocol Independent Multicast (PIM) variants [RFC3973][RFC4601].\n\
    \   Experimental SMF implementations and deployments have demonstrated\n   gateway\
    \ functionality at MANET border routers operating with existing\n   external IP\
    \ multicast routing protocols [CDHM07][DHS08][DHG09].  SMF\n   may be extended\
    \ or combined with other mechanisms to provide\n   increased reliability and group-specific\
    \ filtering; the details for\n   this are out of the scope of this document.\n\
    \   This document does not presently support forwarding of packets with\n   directed\
    \ broadcast addresses as a destination [RFC2644].\n"
- title: 4.  Overview and Functioning
  contents:
  - "4.  Overview and Functioning\n   Figure 1 provides an overview of the logical\
    \ SMF router architecture,\n   consisting of \"Neighborhood Discovery\", \"Relay\
    \ Set Selection\", and\n   \"Forwarding Process\" components.  Typically, relay\
    \ set selection (or\n   self-election) occurs based on dynamic input from a neighborhood\n\
    \   discovery process.  SMF supports the case where neighborhood\n   discovery\
    \ and/or relay set selection information is obtained from a\n   coexistent process\
    \ (e.g., a lower-layer mechanism or a unicast\n   routing protocol using relay\
    \ sets).  In some algorithm designs, the\n   forwarding decision for a packet\
    \ can also depend on previous hop or\n   incoming interface information.  The\
    \ asterisks (*) in Figure 1 mark\n   the primitives and relationships needed by\
    \ relay set algorithms\n   requiring previous-hop packet-forwarding knowledge.\n\
    \                ______________                _____________\n               |\
    \              |              |             |\n               | Neighborhood |\
    \              |  Relay Set  |\n               |  Discovery   |------------->|\
    \  Selection  |\n               |              |   neighbor   |             |\n\
    \               |______________|     info     |_____________|\n              \
    \        \\                              /\n                       \\        \
    \                    /\n                neighbor\\                          /forwarding\n\
    \                  info*  \\      ____________      /  status\n              \
    \            \\    |            |    /\n                           `-->| Forwarding\
    \ |<--'\n                               |  Process   |\n             ~~~~~~~~~~~~~~~~~>|____________|~~~~~~~~~~~~~~~~~>\n\
    \             incoming packet,                 forwarded packets\n           \
    \  interface id*, and\n             previous hop*\n                     Figure\
    \ 1: SMF Router Architecture\n   Certain IP multicast packets, defined in Sections\
    \ 9.2 and 5, are\n   \"non-forwardable\".  These multicast packets MUST be ignored\
    \ by the\n   SMF forwarding engine.  The SMF forwarding engine MAY also work with\n\
    \   policies and management interfaces to allow additional filtering\n   control\
    \ over which multicast packets are considered for potential SMF\n   forwarding.\
    \  This interface would allow more refined dynamic\n   forwarding control once\
    \ such techniques are matured for MANET\n   operation.  At present, further discussion\
    \ of dynamic control is left\n   to future work.\n   Interoperable SMF implementations\
    \ MUST use compatible DPD approaches\n   and be able to process the header options\
    \ defined in this document\n   for IPv6 operation.\n   Classic Flooding (CF) is\
    \ defined as the simplest case of SMF\n   multicast forwarding.  With CF, all\
    \ SMF routers forward each received\n   multicast packet exactly once.  In this\
    \ case, the need for any relay\n   set selection or neighborhood topology information\
    \ is eliminated, at\n   the expense of additional network overhead incurred from\
    \ unnecessary\n   packet retransmissions.  With CF, the SMF DPD functionality\
    \ is still\n   required.  While SMF supports CF as a mode of operation, the use\
    \ of\n   more efficient relay set modes is RECOMMENDED in order to reduce\n  \
    \ contention and congestion caused by unnecessary packet\n   retransmissions [NTSC99].\n\
    \   An efficient reduced relay set is constructed by selecting and\n   updating,\
    \ as needed, a subset of all possible routers in a MANET\n   routing domain to\
    \ act as SMF forwarders.  Known distributed relay set\n   selection algorithms\
    \ have demonstrated the ability to provide and\n   maintain a dynamic connected\
    \ set for forwarding multicast IP packets\n   [MDC04].  A few such relay set selection\
    \ algorithms are described in\n   the appendices of this document, and the basic\
    \ designs borrow\n   directly from previously documented IETF work.  SMF relay\
    \ set\n   configuration is extensible, and additional relay set algorithms\n \
    \  beyond those specified here can be accommodated in future work.\n   Determining\
    \ and maintaining an optimized set of relays generally\n   requires dynamic neighborhood\
    \ topology information.  Neighborhood\n   topology discovery functions MAY be\
    \ provided by a MANET unicast\n   routing protocol or by using the MANET Neighborhood\
    \ Discovery\n   Protocol (NHDP) [RFC6130], operating concurrently with SMF.  This\n\
    \   specification also allows alternative lower-layer interfaces (e.g.,\n   radio\
    \ router interfaces) to provide the necessary neighborhood\n   information to\
    \ aid in supporting more effective relay set selection.\n   An SMF implementation\
    \ SHOULD provide the ability for multicast\n   forwarding state to be dynamically\
    \ managed per operating network\n   interface.  The relay state maintenance options\
    \ and interactions are\n   outlined in Section 7.  This document states specific\
    \ requirements\n   for neighborhood discovery with respect to the forwarding process\
    \ and\n   the relay set selection algorithms described herein.  For determining\n\
    \   dynamic relay sets in the absence of other control protocols, SMF\n   relies\
    \ on NHDP to assist in IP-layer 2-hop neighborhood discovery and\n   maintenance\
    \ for relay set selection.  \"SMF_TYPE\" and \"SMF_NBR_TYPE\"\n   Message and\
    \ Address Block TLV structures (per [RFC5444]) are defined\n   by this document\
    \ for use with NHDP to carry SMF-specific information.\n   It is RECOMMENDED that\
    \ all routers performing SMF operation in\n   conjunction with NHDP include these\
    \ TLV types in any NHDP HELLO\n   messages generated.  This capability allows\
    \ for routers participating\n   in SMF to be explicitly identified along with\
    \ their respective\n   dynamic relay set algorithm configuration.\n"
- title: 5.  SMF Packet Processing and Forwarding
  contents:
  - "5.  SMF Packet Processing and Forwarding\n   The SMF packet processing and forwarding\
    \ actions are conducted with\n   the following packet handling activities:\n \
    \  1.  Processing of outbound, locally generated multicast packets.\n   2.  Reception\
    \ and processing of inbound packets on specific network\n       interfaces.\n\
    \   The purpose of intercepting outbound, locally generated multicast\n   packets\
    \ is to apply any added packet marking needed to satisfy the\n   DPD requirements\
    \ so that proper forwarding may be conducted.  Note\n   that for some system configurations,\
    \ the interception of outbound\n   packets for this purpose is not necessary.\n\
    \   Inbound multicast packets are received by the SMF implementation and\n   processed\
    \ for possible forwarding.  SMF implementations MUST be\n   capable of forwarding\
    \ IP multicast packets with destination addresses\n   that are not router-local\
    \ and link-local for IPv6, as defined in\n   [RFC4291], and that are not within\
    \ the local network control block as\n   defined by [RFC5771].\n   This will support\
    \ generic multi-hop multicast application needs or\n   distribute designated multicast\
    \ traffic ingressing the SMF routing\n   domain via border routers.  The multicast\
    \ addresses to be forwarded\n   should be maintained by an a priori list or a\
    \ dynamic forwarding\n   information base (FIB) that MAY interact with future\
    \ MANET dynamic\n   group membership extensions or management functions.\n   The\
    \ SL-MANET-ROUTERS multicast group is defined to contain all\n   routers within\
    \ an SMF routing domain, so that packets transmitted to\n   the multicast address\
    \ associated with the group will be attempted to\n   be delivered to all connected\
    \ routers running SMF.  Due to the mobile\n   nature of a MANET, routers running\
    \ SMF may not be topologically\n   connected at particular times.  For IPv6, SL-MANET-ROUTERS\
    \ is\n   specified to be \"site-local\".  Minimally, SMF MUST forward, as\n  \
    \ instructed by the relay set selection algorithm, unique (non-\n   duplicate)\
    \ packets received for SL-MANET-ROUTERS when the Time to\n   Live (TTL) / hop\
    \ limit or hop limit value in the IP header is greater\n   than 1.  SMF MUST forward\
    \ all additional global-scope multicast\n   addresses specified within the dynamic\
    \ FIB or configured list as\n   well.  In all cases, the following rules MUST\
    \ be observed for SMF\n   multicast forwarding:\n   1.  Any IP packets not addressed\
    \ to an IP multicast address MUST NOT\n       be forwarded by the SMF forwarding\
    \ engine.\n   2.  IP multicast packets with TTL/hop limit <= 1 MUST NOT be\n \
    \      forwarded.\n   3.  Link local IP multicast packets MUST NOT be forwarded.\n\
    \   4.  Incoming IP multicast packets with an IP source address matching\n   \
    \    one of those of the local SMF router interface(s) MUST NOT be\n       forwarded.\n\
    \   5.  Received frames with the Media Access Control (MAC) source\n       address\
    \ matching any MAC address of the router's interfaces MUST\n       NOT be forwarded.\n\
    \   6.  Received packets for which SMF cannot reasonably ensure temporal\n   \
    \    DPD uniqueness MUST NOT be forwarded.\n   7.  Prior to being forwarded, the\
    \ TTL/hop limit of the forwarded\n       packet MUST be decremented by one.\n\
    \   Note that rule #4 is important because over some types of wireless\n   interfaces,\
    \ the originating SMF router may receive retransmissions of\n   its own packets\
    \ when they are forwarded by adjacent routers.  This\n   rule avoids unnecessary\
    \ retransmission of locally generated packets\n   even when other forwarding decision\
    \ rules would apply.\n   An additional processing rule also needs to be considered\
    \ based upon\n   a potential security threat.  As discussed in Section 10, there\
    \ is a\n   potential DoS attack that can be conducted by remotely \"previewing\"\
    \n   (e.g., via a directional receive antenna) packets that an SMF router\n  \
    \ would be forwarding and conducting a \"pre-play\" attack by\n   transmitting\
    \ the packet before the SMF router would otherwise receive\n   it, but with a\
    \ reduced TTL/hop limit field value.  This form of\n   attack can cause an SMF\
    \ router to create a DPD entry that would block\n   the proper forwarding of the\
    \ valid packet (with correct TTL/hop\n   limit) through the SMF routing domain.\
    \  A RECOMMENDED approach to\n   prevent this attack, when it is a concern, would\
    \ be to cache temporal\n   packet TTL/hop limit values along with the per-packet\
    \ DPD state (hash\n   value(s) and/or identifier as described in Section 6). \
    \ Then, if a\n   subsequent matching (with respect to DPD) packet arrives with\
    \ a\n   larger TTL/hop limit value than the packet that was previously\n   forwarded,\
    \ SMF should forward the new packet and update the TTL/hop\n   limit value cached\
    \ with corresponding DPD state to the new, larger\n   TTL/hop limit value.  There\
    \ may be temporal cases where SMF would\n   unnecessarily forward some duplicate\
    \ packets using this approach, but\n   those cases are expected to be minimal\
    \ and acceptable when compared\n   with the potential threat of denied service.\n\
    \   Once the SMF multicast forwarding rules have been applied, an SMF\n   implementation\
    \ MUST make a forwarding decision dependent upon the\n   relay set selection algorithm\
    \ in use.  If the SMF implementation is\n   using Classic Flooding (CF), the forwarding\
    \ decision is implicit once\n   DPD uniqueness is determined.  Otherwise, a forwarding\
    \ decision\n   depends upon the current interface-specific relay set state.  The\n\
    \   descriptions of the relay set selection algorithms in the appendices\n   to\
    \ this document specify the respective heuristics for multicast\n   packet forwarding\
    \ and specific DPD or other processing required to\n   achieve correct SMF behavior\
    \ in each case.  For example, one class of\n   forwarding is based upon relay\
    \ set selection status and the packet's\n   previous hop, while other classes\
    \ designate the local SMF router as a\n   forwarder for all neighboring routers.\n"
- title: 6.  SMF Duplicate Packet Detection
  contents:
  - "6.  SMF Duplicate Packet Detection\n   Duplicate packet detection (DPD) is often\
    \ a requirement in MANET or\n   wireless mesh packet forwarding mechanisms because\
    \ packets may be\n   transmitted out via the same physical interface as the one\
    \ over which\n   they were received.  Routers may also receive multiple copies\
    \ of the\n   same packets from different neighbors or interfaces.  SMF operation\n\
    \   requires DPD, and implementations MUST provide mechanisms to detect\n   and\
    \ reduce the likelihood of forwarding duplicate multicast packets\n   using temporal\
    \ packet identification.  It is RECOMMENDED this be\n   implemented by keeping\
    \ a history of recently processed multicast\n   packets for comparison with incoming\
    \ packets.  A DPD packet cache\n   history SHOULD be kept long enough so as to\
    \ span the maximum network\n   traversal lifetime, MAX_PACKET_LIFETIME, of multicast\
    \ packets being\n   forwarded within an SMF routing domain.  The DPD mechanism\
    \ SHOULD\n   avoid keeping unnecessary state for packet flows such as those that\n\
    \   are locally generated or link-local destinations that would not be\n   considered\
    \ for forwarding, as presented in Section 5.\n   For both IPv4 and IPv6, this\
    \ document describes two basic multicast\n   duplicate packet detection mechanisms:\
    \ header content identification-\n   based (I-DPD) and hash-based (H-DPD) duplicate\
    \ packet detection.\n   I-DPD is a mechanism using specific packet headers, and\
    \ option\n   headers in the case of IPv6, in combination with flow state to\n\
    \   estimate the temporal uniqueness of a packet.  H-DPD uses hashing\n   over\
    \ header fields and payload of a multicast packet to provide an\n   estimation\
    \ of temporal uniqueness.\n   Trade-offs of the two approaches to DPD merit different\n\
    \   considerations dependent upon the specific SMF deployment scenario.\n   Because\
    \ of the potential addition of a hop-by-hop option header with\n   IPv6, all SMF\
    \ routers in the same SMF deployments MUST be configured\n   so as to use a common\
    \ mechanism and DPD algorithm.  The main\n   difference between IPv4 and IPv6\
    \ SMF DPD specifications is the\n   avoidance of any additional header options\
    \ for IPv4.\n   For each network interface, SMF implementations MUST maintain\
    \ DPD\n   packet state as needed to support the forwarding heuristics of the\n\
    \   relay set algorithm used.  In general, this involves keeping track of\n  \
    \ previously forwarded packets so that duplicates are not forwarded,\n   but some\
    \ relay techniques have additional considerations, such as\n   those discussed\
    \ in Appendix B.2.\n   Additional details of I-DPD and H-DPD processing and maintenance\
    \ for\n   different classes of packets are described in the following\n   subsections.\n"
- title: 6.1.  IPv6 Duplicate Packet Detection
  contents:
  - "6.1.  IPv6 Duplicate Packet Detection\n   This section describes the mechanisms\
    \ and options for SMF IPv6 DPD.\n   The base IPv6 packet header does not provide\
    \ an explicit packet\n   identification header field that can be exploited for\
    \ I-DPD.  The\n   following options are therefore described to support IPv6 DPD:\n\
    \   1.  a hop-by-hop SMF_DPD option header, defined in this document\n       (Section\
    \ 6.1.1),\n   2.  the use of IPv6 fragment header fields for I-DPD, if one is\n\
    \       present (Section 6.1.2),\n   3.  the use of IPsec sequencing for I-DPD\
    \ when a non-fragmented,\n       IPsec header is detected (Section 6.1.2), and\n\
    \   4.  an H-DPD approach assisted, as needed, by the SMF_DPD option\n       header\
    \ (Section 6.1.3).\n   SMF MUST provide a DPD marking module that can insert the\
    \ hop-by-hop\n   IPv6 header option, defined in Section 6.1.1.  This module MUST\
    \ be\n   invoked after any source-based fragmentation that may occur with\n  \
    \ IPv6, so as to ensure that all fragments are suitably marked.  SMF\n   IPv6\
    \ DPD is presently specified to allow either a packet hash or\n   header identification\
    \ method for DPD.  An SMF implementation MUST be\n   configured to operate either\
    \ in I-DPD or H-DPD mode and perform the\n   corresponding tasks, outlined in\
    \ Sections 6.1.2 and 6.1.3.\n"
- title: 6.1.1.  IPv6 SMF_DPD Option Header
  contents:
  - "6.1.1.  IPv6 SMF_DPD Option Header\n   This section defines an IPv6 Hop-by-Hop\
    \ Option [RFC2460], SMF_DPD, to\n   serve the purpose of unique packet identification\
    \ for IPv6 I-DPD.\n   Additionally, the SMF_DPD option header provides a mechanism\
    \ to\n   guarantee non-collision of hash values for different packets when\n \
    \  H-DPD is used.\n   If this is the only hop-by-hop option present, the optional\
    \ TaggerId\n   field (see below) is not included, and the size of the DPD packet\n\
    \   identifier (sequence number) or hash token is 24 bits or less, this\n   will\
    \ result in the addition of 8 bytes to the IPv6 packet header\n   including the\
    \ \"Next Header\", \"Header Extension Length\", SMF_DPD\n   option fields, and\
    \ padding.\n       0                   1                   2                 \
    \  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \                  ...              |0|0|0|  01000  | Opt. Data Len |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |H|  DPD Identifier Option Fields or Hash Assist Value  ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \              Figure 2: IPv6 SMF_DPD Hop-by-Hop Option Header\n   \"Option Type\"\
    \ = 00001000.  The highest order three bits are 000\n   because this specification\
    \ requires that routers not recognizing this\n   option type skip over this option\
    \ and continue processing the header\n   and that the option must not change en\
    \ route [RFC2460].\n   \"Opt. Data Len\" = Length of option content (i.e., 1 +\
    \ (<IdType> ?\n   (<IdLen> + 1): 0) + Length(DPD ID)).\n   \"H-bit\" = a hash\
    \ indicator bit value identifying DPD marking type. 0\n   == sequence-based approach\
    \ with optional TaggerId and a tuple-based\n   sequence number. 1 == indicates\
    \ a hash assist value (HAV) field\n   follows to aid in avoiding hash-based DPD\
    \ collisions.\n   When the \"H-bit\" is cleared (zero value), the SMF_DPD format\
    \ to\n   support I-DPD operation is specified as shown in Figure 3 and defines\n\
    \   the extension header in accordance with [RFC2460].\n        0            \
    \       1                   2                   3\n        0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                      ...              |0|0|0|  01000  | Opt. Data Len |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |0|TidTy| TidLen|             TaggerId (optional) ...           |\n      \
    \ +-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |\
    \                               |            Identifier  ...\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Figure 3: IPv6 SMF_DPD Option Header in I-DPD mode\n   \"TidTy\"\
    \ = a 3-bit field indicating the presence and type of the\n   optional TaggerId\
    \ field.\n   \"TidLen\" = a 4-bit field indicating the length (in octets) of the\n\
    \   following TaggerId field.\n   \"TaggerId\" = a field, is used to differentiate\
    \ multiple ingressing\n   border gateways that may commonly apply the SMF_DPD\
    \ option header to\n   packets from a particular source.  Table 1 lists the TaggerId\
    \ types\n   used in this document:\n   +---------+---------------------------------------------------------+\n\
    \   | Name    | Purpose                                                 |\n  \
    \ +---------+---------------------------------------------------------+\n   |\
    \ NULL    | Indicates no TaggerId field is present. \"TidLen\" MUST   |\n   |\
    \         | also be set to ZERO.                                    |\n   | DEFAULT\
    \ | A TaggerId of non-specific context is present. \"TidLen  |\n   |         |\
    \ + 1\" defines the length of the TaggerId field in bytes. |\n   | IPv4    | A\
    \ TaggerId representing an IPv4 address is present. The |\n   |         | \"TidLen\"\
    \ MUST be set to 3.                              |\n   | IPv6    | A TaggerId\
    \ representing an IPv6 address is present. The |\n   |         | \"TidLen\" MUST\
    \ be set to 15.                             |\n   +---------+---------------------------------------------------------+\n\
    \                          Table 1: TaggerId Types\n   This format allows a quick\
    \ check of the \"TidTy\" field to determine if\n   a TaggerId field is present.\
    \  If \"TidTy\" is NULL, then the length of\n   the DPD packet <Identifier> field\
    \ corresponds to (<Opt. Data Len> -\n   1).  If the <TidTy> is non-NULL, then\
    \ the length of the TaggerId\n   field is equal to (<TidLen> - 1), and the remainder\
    \ of the option\n   data comprises the DPD packet <Identifier> field.  When the\
    \ TaggerId\n   field is present, the <Identifier> field can be considered a unique\n\
    \   packet identifier in the context of the <TaggerId:srcAddr:dstAddr>\n   tuple.\
    \  When the TaggerId field is not present, then it is assumed\n   that the source\
    \ applied the SMF_DPD option and the <Identifier> can\n   be considered unique\
    \ in the context of the IPv6 packet header\n   <srcAddr:dstAddr> tuple.  IPv6\
    \ I-DPD operation details are in\n   Section 6.1.2.\n   When the \"H-bit\" in\
    \ the SMF_DPD option data is set, the data content\n   value is interpreted as\
    \ a hash assist value (HAV) used to facilitate\n   H-DPD operation.  In this case,\
    \ the source or ingressing gateways\n   apply the SMF_DPD with an HAV only when\
    \ required to differentiate the\n   hash value of a new packet with respect to\
    \ hash values in the DPD\n   cache.  This situation can be detected locally on\
    \ the router by\n   running the hash algorithm and checking the DPD cache, prior\
    \ to\n   ingressing a previously unmarked packet or a locally sourced packet.\n\
    \   This helps to guarantee the uniqueness of generated hash values when\n   H-DPD\
    \ is used.  Additionally, this avoids the added overhead of\n   applying the SMF_DPD\
    \ option header to every packet.  For many hash\n   algorithms, it is expected\
    \ that only sparse use of the SMF_DPD option\n   may be required.  The format\
    \ of the SMF_DPD option header for H-DPD\n   operation is given in Figure 4.\n\
    \       0                   1                   2                   3\n      \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     ...              |0|0|0| OptType | Opt. Data Len |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |1|\
    \    Hash Assist Value (HAV) ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \            Figure 4: IPv6 SMF_DPD Option Header in H-DPD Mode\n   The SMF_DPD\
    \ option should be applied with an HAV to produce a unique\n   hash digest for\
    \ packets within the context of the IPv6 packet header\n   <srcAddr>.  The size\
    \ of the HAV field is implied by \"Opt. Data Len\".\n   The appropriate size of\
    \ the field depends upon the collision\n   properties of the specific hash algorithm\
    \ used.  More details on IPv6\n   H-DPD operation are provided in Section 6.1.3.\n"
- title: 6.1.2.  IPv6 Identification-Based DPD
  contents:
  - "6.1.2.  IPv6 Identification-Based DPD\n   Table 2 summarizes the IPv6 I-DPD processing\
    \ and forwarding decision\n   approach.  Within the table, '*' indicates an ignore\
    \ field condition.\n   +-------------+-----------+-----------+-----------------------------+\n\
    \   | IPv6        | IPv6      | IPv6      | SMF IPv6 I-DPD Mode Action  |\n  \
    \ | Fragment    | IPsec     | I-DPD     |                             |\n   |\
    \ Header      | Header    | Header    |                             |\n   +-------------+-----------+-----------+-----------------------------+\n\
    \   | Present     | *         | Not       | Use Fragment Header I-DPD   |\n  \
    \ |             |           | Present   | Check and Process for       |\n   |\
    \             |           |           | Forwarding                  |\n   | Not\
    \ Present | Present   | Not       | Use IPsec Header I-DPD      |\n   |      \
    \       |           | Present   | Check and Process for       |\n   |        \
    \     |           |           | Forwarding                  |\n   | Present  \
    \   | *         | Present   | Invalid; do not forward.    |\n   | Not Present\
    \ | Present   | Present   | Invalid; do not forward.    |\n   | Not Present |\
    \ Not       | Not       | Add I-DPD Header, and       |\n   |             | Present\
    \   | Present   | Process for Forwarding      |\n   | Not Present | Not      \
    \ | Present   | Use I-DPD Header Check and  |\n   |             | Present   |\
    \           | Process for Forwarding      |\n   +-------------+-----------+-----------+-----------------------------+\n\
    \                   Table 2: IPv6 I-DPD Processing Rules\n   1.  If a received\
    \ IPv6 multicast packet is an IPv6 fragment, SMF MUST\n       use the fragment\
    \ extension header fields for packet\n       identification.  This identifier\
    \ can be considered unique in the\n       context of the <srcAddr:dstAddr> of\
    \ the IP packet.\n   2.  If the packet is an unfragmented IPv6 IPsec packet, SMF\
    \ MUST use\n       IPsec fields for packet identification.  The IPsec header\n\
    \       <sequence> field can be considered a unique identifier in the\n      \
    \ context of the <IPsecType:srcAddr:dstAddr:SPI> where \"IPsecType\"\n       is\
    \ either Authentication Header (AH) or Encapsulating Security\n       Payload\
    \ (ESP) [RFC4302].\n   3.  For unfragmented, non-IPsec IPv6 packets, the use of\
    \ the SMF_DPD\n       option header is necessary to support I-DPD operation. \
    \ The\n       SMF_DPD option header is applied in the context of the <srcAddr>\n\
    \       of the IP packet.  Hosts or ingressing SMF gateways are\n       responsible\
    \ for applying this option to support DPD.  Table 3\n       summarizes these packet\
    \ identification types:\n   +-----------+---------------------------------+---------------------+\n\
    \   | IPv6      | Packet DPD ID Context           | Packet DPD ID       |\n  \
    \ | Packet    |                                 |                     |\n   |\
    \ Type      |                                 |                     |\n   +-----------+---------------------------------+---------------------+\n\
    \   | Fragment  | <srcAddr:dstAddr>               | <fragmentOffset:id> |\n  \
    \ | IPsec     | <IPsecType:srcAddr:dstAddr:SPI> | <sequence>          |\n   |\
    \ Packet    |                                 |                     |\n   | Regular\
    \   | <[TaggerId:]srcAddr:dstAddr>    | <SMF_DPD option     |\n   | Packet   \
    \ |                                 | header id>          |\n   +-----------+---------------------------------+---------------------+\n\
    \              Table 3: IPv6 I-DPD Packet Identification Types\n   \"IPsecType\"\
    \ is either Authentication Header (AH) or Encapsulating\n   Security Payload (ESP).\n\
    \   The \"TaggerId\" is an optional field of the IPv6 SMF_DPD option\n   header.\n"
- title: 6.1.3.  IPv6 Hash-Based DPD
  contents:
  - "6.1.3.  IPv6 Hash-Based DPD\n   A default hash-based DPD approach (H-DPD) for\
    \ use by SMF is specified\n   as follows.  An SHA-1 [RFC3174] hash of the non-mutable\
    \ header\n   fields, options fields, and data content of the IPv6 multicast packet\n\
    \   is used to produce a 160-bit digest.  The approach for calculating\n   this\
    \ hash value SHOULD follow the same guidelines described for\n   calculating the\
    \ Integrity Check Value (ICV) described in [RFC4302]\n   with respect to non-mutable\
    \ fields.  This approach should have a\n   reasonably low probability of digest\
    \ collision when packet headers\n   and content are varying.  SHA-1 is being applied\
    \ in SMF only to\n   provide a low probability of collision and is not being used\
    \ for\n   cryptographic or authentication purposes.  A history of the packet\n\
    \   hash values SHOULD be maintained within the context of the IPv6\n   packet\
    \ header <srcAddr>.  SMF ingress points (i.e., source hosts or\n   gateways) use\
    \ this history to confirm that new packets are unique\n   with respect to their\
    \ hash value.  The hash assist value (HAV) field\n   described in Section 6.1.1\
    \ is provided as a differentiating field\n   when a digest collision would otherwise\
    \ occur.  Note that the HAV is\n   an immutable option field, and SMF MUST process\
    \ any included HAV\n   values (see Section 6.1.1) in its hash calculation.\n \
    \  If a packet results in a digest collision (i.e., by checking the\n   H-DPD\
    \ digest history) within the DPD cache kept by SMF forwarders,\n   the packet\
    \ SHOULD be silently dropped.  If a digest collision is\n   detected at an SMF\
    \ ingress point, the H-DPD option header is\n   constructed with a randomly generated\
    \ HAV.  An HAV is recalculated as\n   needed to produce a non-colliding hash value\
    \ prior to forwarding.\n   The multicast packet is then forwarded with the added\
    \ IPv6 SMF_DPD\n   option header.  A common hash approach MUST be used by SMF\
    \ routers\n   for the applied HAV to consistently avoid hash collision and thus\n\
    \   inadvertent packet drops.\n   The SHA-1 indexing and IPv6 HAV approaches are\
    \ specified at present\n   for consistency and robustness to suit experimental\
    \ uses.  Future\n   approaches and experimentation may discover design trade-offs\
    \ in hash\n   robustness and efficiency worth considering.  Enhancements MAY\n\
    \   include reducing the maximum payload length that is processed,\n   determining\
    \ shorter indexes, or applying more efficient hashing\n   algorithms.  Use of\
    \ the HAV functionality may allow for application\n   of \"lighter-weight\" hashing\
    \ techniques that might not have been\n   initially considered otherwise due to\
    \ poor collision properties.\n   Such techniques could reduce packet-processing\
    \ overhead and memory\n   requirements.\n"
- title: 6.2.  IPv4 Duplicate Packet Detection
  contents:
  - "6.2.  IPv4 Duplicate Packet Detection\n   This section describes the mechanisms\
    \ and options for IPv4 DPD.  The\n   following areas are described to support\
    \ IPv4 DPD:\n   1.  the use of IPv4 fragment header fields for I-DPD when they\
    \ exist\n       (Section 6.2.1),\n   2.  the use of IPsec sequencing for I-DPD\
    \ when a non-fragmented IPv4\n       IPsec packet is detected (Section 6.2.1),\
    \ and\n   3.  an H-DPD approach(Section 6.2.2) when neither of the above cases\n\
    \       can be applied.\n   Although the IPv4 datagram has a 16-bit Identification\
    \ (ID) field as\n   specified in [RFC0791], it cannot be relied upon for DPD purposes\
    \ due\n   to common computer operating system implementation practices and the\n\
    \   reasons described in the updated specification of the IPv4 ID Field\n   [IPV4-ID-UPDATE].\
    \  An SMF IPv4 DPD marking option like the IPv6\n   SMF_DPD option header is not\
    \ specified since IPv4 header options are\n   not as tractable for hosts as they\
    \ are for IPv6.  However, when IPsec\n   is applied or IPv4 packets have been\
    \ fragmented, the I-DPD approach\n   can be applied reliably using the corresponding\
    \ packet identifier\n   fields described in Section 6.2.1.  For the general IPv4\
    \ case (non-\n   IPsec and non-fragmented packets), the H-DPD approach of\n  \
    \ Section 6.2.2 is RECOMMENDED.\n   Since IPv4 SMF does not specify an option\
    \ header, the\n   interoperability constraints are looser than in the IPv6 version,\
    \ and\n   forwarders may operate with mixed H-DPD and I-DPD modes as long as\n\
    \   they consistently perform the appropriate DPD routines outlined in\n   the\
    \ following sections.  However, it is RECOMMENDED that a deployment\n   be configured\
    \ with a common mode for operational consistency.\n"
- title: 6.2.1.  IPv4 Identification-Based DPD
  contents:
  - "6.2.1.  IPv4 Identification-Based DPD\n   Table 4 summarizes the IPv4 I-DPD processing\
    \ approach once a packet\n   has passed the basic forwardable criteria described\
    \ in Section 5.  To\n   summarize, for IPv4, I-DPD is applicable only for packets\
    \ that have\n   been fragmented or have IPsec applied.  In Table 4, '*' indicates\
    \ an\n   ignore field condition.  DF, MF, and Fragment offset correspond to\n\
    \   related fields and flags defined in [RFC0791].\n   +------+------+----------+---------+--------------------------------+\n\
    \   | DF   | MF   | Fragment | IPsec   | IPv4 I-DPD Action              |\n  \
    \ | flag | flag | offset   |         |                                |\n   +------+------+----------+---------+--------------------------------+\n\
    \   | 1    | 1    | *        | *       | Invalid; do not forward.       |\n  \
    \ | 1    | 0    | nonzero  | *       | Invalid; do not forward.       |\n   |\
    \ *    | 0    | zero     | not     | Use H-DPD check instead        |\n   |  \
    \    |      |          | Present |                                |\n   | *  \
    \  | 0    | zero     | Present | IPsec enhanced Tuple I-DPD     |\n   |      |\
    \      |          |         | Check and Process for          |\n   |      |  \
    \    |          |         | Forwarding                     |\n   | 0    | 0  \
    \  | nonzero  | *       | Extended Fragment Offset Tuple |\n   |      |      |\
    \          |         | I-DPD Check and Process for    |\n   |      |      |  \
    \        |         | Forwarding                     |\n   | 0    | 1    | zero\
    \ or  | *       | Extended Fragment Offset Tuple |\n   |      |      | nonzero\
    \  |         | I-DPD Check and Process for    |\n   |      |      |          |\
    \         | Forwarding                     |\n   +------+------+----------+---------+--------------------------------+\n\
    \                   Table 4: IPv4 I-DPD Processing Rules\n   For performance reasons,\
    \ IPv4 network fragmentation and reassembly of\n   multicast packets within wireless\
    \ MANET networks should be minimized,\n   yet SMF provides the forwarding of fragments\
    \ when they occur.  If the\n   IPv4 multicast packet is a fragment, SMF MUST use\
    \ the fragmentation\n   header fields for packet identification.  This identification\
    \ can be\n   considered temporally unique in the context of the <protocol:srcAddr:\n\
    \   dstAddr> of the IPv4 packet.  If the packet is an unfragmented IPv4\n   IPsec\
    \ packet, SMF MUST use IPsec fields for packet identification.\n   The IPsec header\
    \ <sequence> field can be considered a unique\n   identifier in the context of\
    \ the <IPsecType:srcAddr:dstAddr:SPI>\n   where \"IPsecType\" is either AH or\
    \ ESP [RFC4302].  Table 5 summarizes\n   these packet identification types:\n\
    \   +-----------+---------------------------------+---------------------+\n  \
    \ | IPv4      | Packet Identification Context   | Packet Identifier   |\n   |\
    \ Packet    |                                 |                     |\n   | Type\
    \      |                                 |                     |\n   +-----------+---------------------------------+---------------------+\n\
    \   | Fragment  | <protocol:srcAddr:dstAddr>      | <fragmentOffset:id> |\n  \
    \ | IPsec     | <IPsecType:srcAddr:dstAddr:SPI> | <sequence>          |\n   |\
    \ Packet    |                                 |                     |\n   +-----------+---------------------------------+---------------------+\n\
    \              Table 5: IPv4 I-DPD Packet Identification Types\n   \"IPsecType\"\
    \ is either Authentication Header (AH) or Encapsulating\n   Security Payload (ESP).\n"
- title: 6.2.2.  IPv4 Hash-Based DPD
  contents:
  - "6.2.2.  IPv4 Hash-Based DPD\n   The hashing technique here is similar to that\
    \ specified for IPv6 in\n   Section 6.1.3, but the H-DPD header option with HAV\
    \ is not\n   considered.  To ensure consistent IPv4 H-DPD operation among SMF\n\
    \   routers, a default hashing approach is specified.  A common DPD\n   hashing\
    \ algorithm for an SMF routing area is RECOMMENDED because\n   colliding hash\
    \ values for different packets result in \"false\n   positive\" duplicate packet\
    \ detection, and there is small probability\n   that valid packets may be dropped\
    \ based on the hashing technique\n   used.  Since the \"hash assist value\" approach\
    \ is not available for\n   IPv4, use of a common hashing approach minimizes the\
    \ probability of\n   hash collision packet drops over multiple hops of forwarding.\n\
    \   SMF MUST perform a SHA-1 [RFC3174] hash of the immutable header\n   fields,\
    \ option fields, and data content of the IPv4 multicast packet\n   resulting in\
    \ a 160-bit digest.  The approach for calculating the hash\n   value SHOULD follow\
    \ the same guidelines described for calculating the\n   Integrity Check Value\
    \ (ICV) described in [RFC4302] with respect to\n   non-mutable fields.  A history\
    \ of the packet hash values SHOULD be\n   maintained in the context of <protocol:srcAddr:dstAddr>.\
    \  The context\n   for IPv4 is more specific than that of IPv6 since the SMF_DPD\
    \ HAV\n   cannot be employed to mitigate hash collisions.  A RECOMMENDED\n   implementation\
    \ detail for IPv4 H-DPD is to concatenate the 16-bit\n   IPv4 ID value with the\
    \ computed hash value as an extended DPD hash\n   value that may provide reduced\
    \ hash collisions in the cases where the\n   IPv4 ID field is being set by host\
    \ operating systems or gateways.\n   When this approach is taken, the use of the\
    \ supplemental \"internal\n   hash\" technique as described in Section 10 is RECOMMENDED\
    \ as a\n   security measure.\n   The SHA-1 hash is specified at present for consistency\
    \ and\n   robustness.  Future approaches and experimentation may discover\n  \
    \ design trade-offs in hash robustness and efficiency worth considering\n   for\
    \ future revisions of SMF.  This MAY include reducing the packet\n   payload length\
    \ that is processed, determining shorter indexes, or\n   applying a more efficient\
    \ hashing algorithm.\n"
- title: 7.  Relay Set Selection
  contents:
  - "7.  Relay Set Selection\n   SMF is flexible in its support of different reduced\
    \ relay set\n   mechanisms for efficient flooding, the constraints imposed herein\n\
    \   being detailed in this section.\n"
- title: 7.1.  Non-Reduced Relay Set Forwarding
  contents:
  - "7.1.  Non-Reduced Relay Set Forwarding\n   SMF implementations MUST support CF\
    \ as a basic forwarding mechanism\n   when reduced relay set information is not\
    \ available or not selected\n   for operation.  In CF mode, each router transmits\
    \ a packet once that\n   has passed the SMF forwarding rules.  The DPD techniques\
    \ described in\n   Section 6 are critical to proper operation and prevention of\n\
    \   duplicate packet retransmissions by the same relays.\n"
- title: 7.2.  Reduced Relay Set Forwarding
  contents:
  - "7.2.  Reduced Relay Set Forwarding\n   MANET reduced relay sets are often achieved\
    \ by distributed algorithms\n   that can dynamically calculate a topological connected\
    \ dominating set\n   (CDS).\n   A goal of SMF is to apply reduced relay sets for\
    \ more efficient\n   multicast dissemination within dynamic topologies.  To accomplish\n\
    \   this, an SMF implementation MUST support the ability to modify its\n   multicast\
    \ packet forwarding rules based upon relay set state received\n   dynamically\
    \ during operation.  In this way, SMF operates effectively\n   as neighbor adjacencies\
    \ or multicast forwarding policies within the\n   topology change.\n   In early\
    \ SMF experimental prototyping, the relay set information was\n   derived from\
    \ coexistent unicast routing control plane traffic\n   flooding processes [MDC04].\
    \  From this experience, extra pruning\n   considerations were sometimes required\
    \ when utilizing a relay set\n   from a separate routing protocol process.  As\
    \ an example, relay sets\n   formed for the unicast control plane flooding MAY\
    \ include additional\n   redundancy that may not be desired for multicast forwarding\
    \ use\n   (e.g., biconnected relay set).\n   Here is a recommended criteria list\
    \ for SMF relay set selection\n   algorithm candidates:\n   1.  Robustness to\
    \ topological dynamics and mobility\n   2.  Localized election or coordination\
    \ of any relay sets\n   3.  Reasonable minimization of CDS relay set size given\
    \ the above\n       constraints\n   4.  Heuristic support for preference or election\
    \ metrics\n   Some relay set algorithms meeting these criteria are described in\
    \ the\n   appendices of this document.  Additional relay set selection\n   algorithms\
    \ may be specified in separate specifications in the future.\n   Each appendix\
    \ subsection in this document can serve as a template for\n   specifying additional\
    \ relay algorithms.\n   Figure 5 depicts an information flow diagram of possible\
    \ relay set\n   control options.  The SMF Relay Set State represents the information\n\
    \   base that is used by SMF in the forwarding decision process.  The\n   diagram\
    \ demonstrates that the SMF Relay Set State may be determined\n   by three fundamentally\
    \ different methods:\n   o  Independent operation with NHDP [RFC6130] input providing\
    \ dynamic\n      network neighborhood adjacency information, used by a particular\n\
    \      relay set selection algorithm.\n   o  Slave operation with an existing\
    \ unicast MANET routing protocol,\n      capable of providing CDS election information\
    \ for use by SMF.\n   o  Cross-layer operation that may involve L2 triggers or\
    \ information\n      describing neighbors or links.\n   Other heuristics to influence\
    \ and control election can come from\n   network management or other interfaces\
    \ as shown on the right of\n   Figure 5.  CF mode simplifies the control and does\
    \ not require other\n   input but relies solely on DPD.\n                    \
    \   Possible L2 Trigger/Information\n                                      |\n\
    \                                      |\n    ______________              ______v_____\
    \         __________________\n   |    MANET     |            |            |  \
    \     |                  |\n   | Neighborhood |            | Relay Set  |    \
    \   | Other Heuristics |\n   |  Discovery   |----------->| Selection  |<------|(Preference,\
    \ etc.)|\n   |   Protocol   | neighbor   | Algorithm  |       |  Net Management\
    \  |\n   |______________|   info     |____________|       |__________________|\n\
    \          \\                              /\n           \\                  \
    \          /\n    neighbor\\                          / Dynamic Relay\n      info*\
    \  \\      ____________      /    Set Status\n              \\    |    SMF   \
    \  |    / (State, {neighbor info})\n               `-->| Relay Set  |<--'\n  \
    \                 |   State    |\n                -->|____________|\n        \
    \       /\n              /\n    ______________\n   |  Coexistent  |\n   |    MANET\
    \     |\n   |   Unicast    |\n   |   Process    |\n   |______________|\n     \
    \        Figure 5: SMF Reduced Relay Set Information Flow\n   Following is further\
    \ discussion of the three styles of SMF operation\n   with reduced relay sets\
    \ as illustrated in Figure 5:\n   1.  Independent operation: In this case, SMF\
    \ operates independently\n       from any unicast routing protocols.  To support\
    \ reduced relay\n       sets, SMF MUST perform its own relay set selection using\n\
    \       information gathered from signaling.  It is RECOMMENDED that an\n    \
    \   associated NHDP process be used for this signaling.  NHDP\n       messaging\
    \ SHOULD be appended with additional [RFC5444] type-\n       length-value (TLV)\
    \ content as to support SMF-specific\n       requirements as discussed in [RFC6130]\
    \ and to support specific\n       relay set operation as described in the appendices\
    \ of this\n       document or future specifications.  Unicast routing protocols\
    \ may\n       coexist, even using the same NHDP process, but signaling that\n\
    \       supports reduced relay set selection for SMF is independent of\n     \
    \  these protocols.\n   2.  Operation with CDS-aware unicast routing protocol:\
    \ In this case,\n       a coexistent unicast routing protocol provides dynamic\
    \ relay set\n       state based upon its own control plane CDS or neighborhood\n\
    \       discovery information.\n   3.  Cross-layer operation: In this case, SMF\
    \ operates using\n       neighborhood status and triggers from a cross-layer information\n\
    \       base for dynamic relay set selection and maintenance (e.g.,\n       lower-link\
    \ layer).\n"
- title: 8.  SMF Neighborhood Discovery Requirements
  contents:
  - "8.  SMF Neighborhood Discovery Requirements\n   This section defines the requirements\
    \ for use of the MANET\n   Neighborhood Discovery Protocol (NHDP) [RFC6130] to\
    \ support SMF\n   operation.  Note that basic CF forwarding requires no neighborhood\n\
    \   topology knowledge since in this configured mode, every SMF router\n   relays\
    \ all traffic.  Supporting more reduced SMF relay set operation\n   requires the\
    \ discovery and maintenance of dynamic neighborhood\n   topology information.\
    \  NHDP can be used to provide this necessary\n   information; however, there\
    \ are SMF-specific requirements for NHDP\n   use.  This is the case for both \"\
    independent\" SMF operation where\n   NHDP is being used specifically to support\
    \ SMF or when one NHDP\n   instance is used for both SMF and a coexistent MANET\
    \ unicast routing\n   protocol.\n   NHDP HELLO messages and the resultant neighborhood\
    \ information base\n   are described separately within the NHDP specification.\
    \  To\n   summarize, NHDP provides the following basic functions:\n   1.  1-hop\
    \ neighbor link sensing and bidirectionality checks of\n       neighbor links,\n\
    \   2.  2-hop neighborhood discovery including collection of 2-hop\n       neighbors\
    \ and connectivity information,\n   3.  Collection and maintenance of the above\
    \ information across\n       multiple interfaces, and\n   4.  A method for signaling\
    \ SMF information throughout the 2-hop\n       neighborhood through the use of\
    \ TLV extensions.\n   Appendices A-C of this document describe CDS-based relay\
    \ set\n   selection algorithms that can achieve efficient SMF operation, even\n\
    \   in dynamic, mobile networks and each of the algorithms has been\n   initially\
    \ experimented with in a working SMF prototype [MDDA07].\n   When using these\
    \ algorithms in conjunction with NHDP, a method\n   verifying neighbor SMF operation\
    \ is required in order to ensure\n   correct relay set selection.  NHDP, along\
    \ with SMF operation\n   verification, provides the necessary information required\
    \ by these\n   algorithms to conduct relay set selection.  Verification of SMF\n\
    \   operation may be done administratively or through the use of the SMF\n   relay\
    \ algorithms TLVs defined in the following subsections.  Use of\n   the SMF relay\
    \ algorithm TLVs is RECOMMENDED when using NHDP for SMF\n   neighborhood discovery.\n\
    \   Section 8.1 specifies SMF-specific TLV types, supporting general SMF\n   operation\
    \ or supporting the algorithms described in the appendices.\n   The appendices\
    \ describing several relay set algorithms also specify\n   any additional requirements\
    \ for use with NHDP and reference the\n   applicable TLV types as needed.\n"
- title: 8.1.  SMF Relay Algorithm TLV Types
  contents:
  - "8.1.  SMF Relay Algorithm TLV Types\n   This section specifies TLV types to be\
    \ used within NHDP messages to\n   identify the CDS relay set selection algorithm(s)\
    \ in use.  Two TLV\n   types are defined: one Message TLV type and one Address\
    \ Block TLV\n   type.\n"
- title: 8.1.1.  SMF Message TLV Type
  contents:
  - "8.1.1.  SMF Message TLV Type\n   The Message TLV type denoted SMF_TYPE is used\
    \ to identify the\n   existence of an SMF instance operating in conjunction with\
    \ NHDP.\n   This Message TLV type makes use of the extended type field as defined\n\
    \   by [RFC5444] to convey the CDS relay set selection algorithm\n   currently\
    \ in use by the SMF message originator.  When NHDP is used to\n   support SMF\
    \ operation, the SMF_TYPE TLV, containing the extended type\n   field with the\
    \ appropriate value, SHOULD be included in NHDP_HELLO\n   messages (HELLO messages\
    \ as defined in [RFC6130]).  This allows SMF\n   routers to learn when neighbors\
    \ are configured to use NHDP for\n   information exchange including algorithm\
    \ type and related algorithm\n   information.  This information can be used to\
    \ take action, such as\n   ignoring neighbor information using incompatible algorithms.\
    \  It is\n   possible that SMF neighbors MAY be configured differently and still\n\
    \   operate cooperatively, but these cases will vary dependent upon the\n   algorithm\
    \ types designated.\n   This document defines a Message TLV type as specified\
    \ in Table 6\n   conforming to [RFC5444].  The TLV extended type field is used\
    \ to\n   contain the sender's \"Relay Algorithm Type\".  The interpretation of\n\
    \   the \"value\" content of these TLVs is defined per \"Relay Algorithm\n   Type\"\
    \ and may contain algorithm-specific information.\n          +---------------+----------------+--------------------+\n\
    \          |               | TLV Syntax     | Field Values       |\n         \
    \ +---------------+----------------+--------------------+\n          | type  \
    \        | <tlv-type>     | SMF_TYPE           |\n          | extended type |\
    \ <tlv-type-ext> | <relayAlgorithmId> |\n          | length        | <length>\
    \       | variable           |\n          | value         | <value>        | variable\
    \           |\n          +---------------+----------------+--------------------+\n\
    \                       Table 6: SMF Type Message TLV\n   In Table 6, <relayAlgorithmId>\
    \ is an 8-bit field containing a number\n   0-255 representing the \"Relay Algorithm\
    \ Type\" of the originator\n   address of the corresponding NHDP message.\n  \
    \ Values for the <relayAlgorithmId> are defined in Table 7.  The table\n   provides\
    \ value assignments, future IANA assignment spaces, and an\n   experimental space.\
    \  The experimental space use MUST NOT assume\n   uniqueness; thus, it SHOULD\
    \ NOT be used for general interoperable\n   deployment prior to official IANA\
    \ assignment.\n   +-------------+--------------------+--------------------------------+\n\
    \   |  Type Value |    Extended Type   |            Algorithm           |\n  \
    \ |             |        Value       |                                |\n   +-------------+--------------------+--------------------------------+\n\
    \   |   SMF_TYPE  |          0         |               CF               |\n  \
    \ |   SMF_TYPE  |          1         |              S-MPR             |\n   |\
    \   SMF_TYPE  |          2         |              E-CDS             |\n   |  \
    \ SMF_TYPE  |          3         |             MPR-CDS            |\n   |   SMF_TYPE\
    \  |        4-127       |  Future Assignment STD action  |\n   |   SMF_TYPE  |\
    \       128-239      |     No STD action required     |\n   |   SMF_TYPE  |  \
    \     240-255      |       Experimental Space       |\n   +-------------+--------------------+--------------------------------+\n\
    \                 Table 7: SMF Relay Algorithm Type Values\n   Acceptable <length>\
    \ and <value> fields of an SMF_TYPE TLV are\n   dependent on the extended type\
    \ value (i.e., relay algorithm type).\n   The appropriate algorithm type, as conveyed\
    \ in the <tlv-type-ext>\n   field, defines the meaning and format of its TLV <value>\
    \ field.  For\n   the algorithms defined by this document, see the appropriate\
    \ appendix\n   for the <value> field format.\n"
- title: 8.1.2.  SMF Address Block TLV Type
  contents:
  - "8.1.2.  SMF Address Block TLV Type\n   An Address Block TLV type, denoted SMF_NBR_TYPE\
    \ (i.e., SMF neighbor\n   relay algorithm) is specified in Table 8.  This TLV\
    \ enables CDS relay\n   algorithm operation and configuration to be shared among\
    \ 2-hop\n   neighborhoods.  Some relay algorithms require 2-hop neighbor\n   configuration\
    \ in order to correctly select relay sets.  It is also\n   useful when mixed relay\
    \ algorithm operation is possible.  Some\n   examples of mixed use are outlined\
    \ in the appendices.\n   The message SMF_TYPE TLV and Address Block SMF_NBR_TYPE\
    \ TLV types\n   share a common format.\n          +---------------+----------------+--------------------+\n\
    \          |               | TLV syntax     | Field Values       |\n         \
    \ +---------------+----------------+--------------------+\n          | type  \
    \        | <tlv-type>     | SMF_NBR_TYPE       |\n          | extended type |\
    \ <tlv-type-ext> | <relayAlgorithmId> |\n          | length        | <length>\
    \       | variable           |\n          | value         | <value>        | variable\
    \           |\n          +---------------+----------------+--------------------+\n\
    \                    Table 8: SMF Type Address Block TLV\n   <relayAlgorithmId>\
    \ in Table 8 is an 8-bit unsigned integer field\n   containing a number 0-255\
    \ representing the \"Relay Algorithm Type\"\n   value that corresponds to any\
    \ associated address in the address\n   block.  Note that \"Relay Algorithm Type\"\
    \ values for 2-hop neighbors\n   can be conveyed in a single TLV or multiple value\
    \ TLVs as described\n   in [RFC5444].  It is expected that SMF routers using NHDP\
    \ construct\n   address blocks with SMF_NBR_TYPE TLVs to advertise \"Relay Algorithm\n\
    \   Type\" and to advertise neighbor algorithm values received in SMF_TYPE\n \
    \  TLVs from those neighbors.\n   Again, values for the <relayAlgorithmId> are\
    \ defined in Table 7.\n   The interpretation of the \"value\" field of SMF_NBR_TYPE\
    \ TLVs is\n   defined per \"Relay Algorithm Type\" and may contain algorithm-specific\n\
    \   information.  See the appropriate appendix for definitions of value\n   fields\
    \ for the algorithms defined by this document.\n"
- title: 9.  SMF Border Gateway Considerations
  contents:
  - "9.  SMF Border Gateway Considerations\n   It is expected that SMF will be used\
    \ to provide simple forwarding of\n   multicast traffic within a MANET or mesh\
    \ routing topology.  A border\n   router gateway approach should be used to allow\
    \ interconnection of\n   SMF routing domains with networks using other multicast\
    \ routing\n   protocols, such as PIM.  It is important to note that there are\
    \ many\n   scenario-specific issues that should be addressed when discussing\n\
    \   border multicast routers.  At the present time, experimental\n   deployments\
    \ of SMF and PIM border router approaches have been\n   demonstrated [DHS08].\
    \  Some of the functionality border routers may\n   need to address includes the\
    \ following:\n   1.  Determination of which multicast group traffic transits the\n\
    \       border router whether entering or exiting the attached SMF\n       routing\
    \ domain.\n   2.  Enforcement of TTL/hop limit threshold or other scoping policies.\n\
    \   3.  Any marking or labeling to enable DPD on ingressing packets.\n   4.  Interface\
    \ with exterior multicast routing protocols.\n   5.  Possible operation with multiple\
    \ border routers (presently beyond\n       the scope of this document).\n   6.\
    \  Provisions for participating non-SMF devices (routers or hosts).\n   Each of\
    \ these areas is discussed in more detail in the following\n   subsections.  Note\
    \ the behavior of SMF border routers is the same as\n   that of non-border SMF\
    \ routers when forwarding packets on interfaces\n   within the SMF routing domain.\
    \  Packets that are passed outbound to\n   interfaces operating fixed-infrastructure\
    \ multicast routing protocols\n   SHOULD be evaluated for duplicate packet status\
    \ since present\n   standard multicast forwarding mechanisms do not usually perform\
    \ this\n   function.\n"
- title: 9.1.  Forwarded Multicast Groups
  contents:
  - "9.1.  Forwarded Multicast Groups\n   Mechanisms for dynamically determining groups\
    \ for forwarding into a\n   MANET SMF routing domain is an evolving technology\
    \ area.  Ideally,\n   only traffic for which there is active group membership\
    \ should be\n   injected into the SMF domain.  This can be accomplished by providing\n\
    \   an IPv4 Internet Group Membership Protocol (IGMP) or IPv6 Multicast\n   Listener\
    \ Discovery (MLD) proxy protocol so that MANET SMF routers can\n   inform attached\
    \ border routers (and hence multicast networks) of\n   their current group membership\
    \ status.  For specific systems and\n   services, it may be possible to statically\
    \ configure group membership\n   joins in border routers, but it is RECOMMENDED\
    \ that some form of\n   IGMP/MLD proxy or other explicit, dynamic control of membership\
    \ be\n   provided.  Specification of such an IGMP/MLD proxy protocol is beyond\n\
    \   the scope of this document.\n   For outbound traffic, SMF border routers perform\
    \ duplicate packet\n   detection and forward non-duplicate traffic that meets\
    \ TTL/hop limit\n   and scoping criteria to interfaces external to the SMF routing\n\
    \   domain.  Appropriate IP multicast routing (e.g., PIM-based solutions)\n  \
    \ on those interfaces can make further forwarding decisions with\n   respect to\
    \ the multicast packet.  Note that the presence of multiple\n   border routers\
    \ associated with a MANET routing domain raises\n   additional issues.  This is\
    \ further discussed in Section 9.4 but\n   further work is expected to be needed\
    \ here.\n"
- title: 9.2.  Multicast Group Scoping
  contents:
  - "9.2.  Multicast Group Scoping\n   Multicast scoping is used by network administrators\
    \ to control the\n   network routing domains reachable by multicast packets. \
    \ This is\n   usually done by configuring external interfaces of border routers\
    \ in\n   the border of a routing domain to not forward multicast packets that\n\
    \   must be kept within the SMF routing domain.  This is commonly done\n   based\
    \ on TTL/hop limit of messages or by using administratively\n   scoped group addresses.\
    \  These schemes are known respectively as:\n   1.  TTL scoping.\n   2.  Administrative\
    \ scoping.\n   For IPv4, network administrators can configure border routers with\n\
    \   the appropriate TTL/hop limit thresholds or administratively scoped\n   multicast\
    \ groups for the router interfaces as with any traditional\n   multicast router.\
    \  However, for the case of TTL/hop limit scoping, it\n   SHOULD be taken into\
    \ account that the packet could traverse multiple\n   hops within the MANET SMF\
    \ routing domain before reaching the border\n   router.  Thus, TTL thresholds\
    \ SHOULD be selected carefully.\n   For IPv6, multicast address spaces include\
    \ information about the\n   scope of the group.  Thus, border routers of an SMF\
    \ routing domain\n   know if they must forward a packet based on the IPv6 multicast\
    \ group\n   address.  For the case of IPv6, it is RECOMMENDED that a MANET SMF\n\
    \   routing domain be designated a site-scoped multicast domain.  Thus,\n   all\
    \ IPv6 site-scoped multicast packets in the range FF05::/16 SHOULD\n   be kept\
    \ within the MANET SMF routing domain by border routers.  IPv6\n   packets in\
    \ any other wider range scopes (i.e., FF08::/16, FF0B::/16,\n   and FF0E::16)\
    \ MAY traverse border routers unless other restrictions\n   different from the\
    \ scope applies.\n   Given that scoping of multicast packets is performed at the\
    \ border\n   routers and given that existing scoping mechanisms are not designed\n\
    \   to work with mobile routers, it is assumed that non-border routers\n   running\
    \ SMF will not stop forwarding multicast data packets of an\n   appropriate site\
    \ scoping.  That is, it is assumed that an SMF routing\n   domain is a site-scoped\
    \ multicast area.\n"
- title: 9.3.  Interface with Exterior Multicast Routing Protocols
  contents:
  - "9.3.  Interface with Exterior Multicast Routing Protocols\n   The traditional\
    \ operation of multicast routing protocols is tightly\n   integrated with the\
    \ group membership function.  Leaf routers are\n   configured to periodically\
    \ gather group membership information, while\n   intermediate routers conspire\
    \ to create multicast trees connecting\n   routers with directly connected multicast\
    \ sources and routers with\n   active multicast receivers.  In the concrete case\
    \ of SMF, border\n   routers can be considered leaf routers.  Mechanisms for multicast\n\
    \   sources and receivers to interoperate with border routers over the\n   multi-hop\
    \ MANET SMF routing domain as if they were directly connected\n   to the router\
    \ need to be defined.  The following issues need to be\n   addressed:\n   1. \
    \ A mechanism by which border routers gather membership information\n   2.  A\
    \ mechanism by which multicast sources are known by the border\n       router\n\
    \   3.  A mechanism for exchange of exterior routing protocol messages\n     \
    \  across the SMF routing domain if the SMF routing domain is to\n       provide\
    \ transit connectivity for multicast traffic.\n   It is beyond the scope of this\
    \ document to address implementation\n   solutions to these issues.  As described\
    \ in Section 9.1, IGMP/MLD\n   proxy mechanisms can address some of these issues.\
    \  Similarly,\n   exterior routing protocol messages could be tunneled or conveyed\n\
    \   across an SMF routing domain but doing this robustly in a distributed\n  \
    \ wireless environment likely requires additional considerations\n   outside the\
    \ scope of this document.\n   The need for the border router to receive traffic\
    \ from recognized\n   multicast sources within the SMF routing domain is important\
    \ to\n   achieve interoperability with some existing routing protocols.  For\n\
    \   instance, PIM-S requires routers with locally attached multicast\n   sources\
    \ to register them to the Rendezvous Point (RP) so that routers\n   can join the\
    \ multicast tree.  In addition, if those sources are not\n   advertised to other\
    \ autonomous systems (ASes) using Multicast Source\n   Discovery Protocol (MSDP),\
    \ receivers in those external networks are\n   not able to join the multicast\
    \ tree for that source.\n"
- title: 9.4.  Multiple Border Routers
  contents:
  - "9.4.  Multiple Border Routers\n   An SMF routing domain might be deployed with\
    \ multiple participating\n   routers having connectivity to external, fixed-infrastructure\n\
    \   networks.  Allowing multiple routers to forward multicast traffic to/\n  \
    \ from the SMF routing domain can be beneficial since it can increase\n   reliability\
    \ and provide better service.  For example, if the SMF\n   routing domain were\
    \ to fragment with different SMF routers\n   maintaining connectivity to different\
    \ border routers, multicast\n   service could still continue successfully.  But,\
    \ the case of multiple\n   border routers connecting an SMF routing domain to\
    \ external networks\n   presents several challenges for SMF:\n   1.  Handling\
    \ duplicate unmarked IPv4 or IPv6 (without IPsec\n       encapsulation or DPD\
    \ option) packets possibly injected by\n       multiple border routers.\n   2.\
    \  Handling of duplicate traffic injected by multiple border routers\n       by\
    \ source-based relay algorithms.\n   3.  Determining which border router(s) will\
    \ forward outbound\n       multicast traffic.\n   4.  Additional challenges with\
    \ interfaces to exterior multicast\n       routing protocols.\n   When multiple\
    \ border routers are present, they may be alternatively\n   (due to route changes)\
    \ or simultaneously injecting common traffic\n   into the SMF routing domain that\
    \ has not been previously marked for\n   IPv6 SMF_DPD.  Different border routers\
    \ would not be able to\n   implicitly synchronize sequencing of injected traffic\
    \ since they may\n   not receive exactly the same messages due to packet losses.\
    \  For IPv6\n   I-DPD operation, the optional TaggerId field described for the\n\
    \   SMF_DPD option header can be used to mitigate this issue.  When\n   multiple\
    \ border routers are injecting a flow into an SMF routing\n   domain, there are\
    \ two forwarding policies that SMF routers running\n   I-DPD may implement:\n\
    \   1.  Redundantly forward the multicast flows (identified by <srcAddr:\n   \
    \    dstAddr>) from each border router, performing DPD processing on a\n     \
    \  <TaggerID:dstAddr> or <TaggerID:srcAddr:dstAddr> basis, or\n   2.  Use some\
    \ basis to select the flow of one tagger (border router)\n       over the others\
    \ and forward packets for applicable flows\n       (identified by <sourceAddress:dstAddr>)\
    \ only for the selected\n       TaggerId until timeout or some other criteria\
    \ to favor another\n       tagger occurs.\n   It is RECOMMENDED that the first\
    \ approach be used in the case of\n   I-DPD operation.  Additional specification\
    \ may be required to\n   describe an interoperable forwarding policy based on\
    \ this second\n   option.  Note that the implementation of the second option requires\n\
    \   that per-flow (i.e., <srcAddr::dstAddr>) state be maintained for the\n   selected\
    \ TaggerId.\n   The deployment of H-DPD operation may alleviate DPD resolution\
    \ when\n   ingressing traffic comes from multiple border routers.  Non-colliding\n\
    \   hash indexes (those not requiring the H-DPD options header in IPv6)\n   should\
    \ be resolved effectively.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Gratuitous use of option headers can cause problems\
    \ in routers.\n   Other IP routers external to an SMF routing domain that might\
    \ receive\n   forwarded multicast SHOULD ignore SMF-specific IPv6 header options\n\
    \   when encountered.  The header option types are encoded appropriately\n   to\
    \ allow for this behavior.\n   This section briefly discusses several SMF denial-of-service\
    \ (DoS)\n   attack scenarios and provides some initial recommended mitigation\n\
    \   strategies.\n   A potential denial-of-service attack against SMF forwarding\
    \ is\n   possible when a malicious router has a form of wormhole access to\n \
    \  non-adjacent parts of a network topology.  In the wireless ad hoc\n   case,\
    \ a directional antenna is one way to provide such a wormhole\n   physically.\
    \  If such a router can preview forwarded packets in a non-\n   adjacent part\
    \ of the network and forward modified versions to another\n   part of the network,\
    \ it can perform the following attack.  The\n   malicious router could reduce\
    \ the TTL/hop limit or hop limit of the\n   packet and transmit it to the SMF\
    \ router causing it to forward the\n   packet with a limited TTL/hop limit (or\
    \ even drop it) and make a DPD\n   entry that could block or limit the subsequent\
    \ forwarding of later-\n   arriving valid packets with correct TTL/hop limit values.\
    \  This would\n   be a relatively low-cost, high-payoff attack that would be hard\
    \ to\n   detect and thus attractive to potential attackers.  An approach of\n\
    \   caching TTL/hop limit information with DPD state and taking\n   appropriate\
    \ forwarding actions is identified in Section 5 to mitigate\n   this form of attack.\n\
    \   Sequence-based packet identifiers are predictable and thus provide an\n  \
    \ opportunity for a DoS attack against forwarding.  Forwarding\n   protocols that\
    \ use DPD techniques, such as SMF, may be vulnerable to\n   DoS attacks based\
    \ on spoofing packets with apparently valid packet\n   identifier fields.  In\
    \ wireless environments, where SMF will most\n   likely be used, the opportunity\
    \ for such attacks may be more\n   prevalent than in wired networks.  In the case\
    \ of IPv4 packets,\n   fragmented IP packets, or packets with IPsec headers applied,\
    \ the DPD\n   \"identifier portions\" of potential future packets that might be\n\
    \   forwarded is highly predictable and easily subject to DoS attacks\n   against\
    \ forwarding.  A RECOMMENDED technique to counter this concern\n   is for SMF\
    \ implementations to generate an \"internal\" hash value that\n   is concatenated\
    \ with the explicit I-DPD packet identifier to form a\n   unique identifier that\
    \ is a function of the packet content as well as\n   the visible identifier. \
    \ SMF implementations could seed their hash\n   generation with a random value\
    \ to make it unlikely that an external\n   observer could guess how to spoof packets\
    \ used in a denial-of-service\n   attack against forwarding.  Since the hash computation\
    \ and state is\n   kept completely internal to SMF routers, the cryptographic\
    \ properties\n   of this hashing would not need to be extensive and thus possibly\
    \ of\n   low complexity.  Experimental implementations may determine that even\n\
    \   a lightweight hash of only portions of packets may suffice to serve\n   this\
    \ purpose.\n   While H-DPD is not as readily susceptible to this form of DoS attack,\n\
    \   it is possible that a sophisticated adversary could use side\n   information\
    \ to construct spoofing packets to mislead forwarders using\n   a well-known hash\
    \ algorithm.  Thus, similarly, a separate \"internal\"\n   hash value could be\
    \ concatenated with the well-known hash value to\n   alleviate this security concern.\n\
    \   The support of forwarding IPsec packets without further modification\n   for\
    \ both IPv4 and IPv6 is supported by this specification.\n   Authentication mechanisms\
    \ to identify the source of IPv6 option\n   headers should be considered to reduce\
    \ vulnerability to a variety of\n   attacks.\n   Furthermore, when the MANET Neighborhood\
    \ Discovery Protocol [RFC6130]\n   is used, the security considerations described\
    \ in [RFC6130] also\n   apply.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   This document defines one IPv6 Hop-by-Hop Option,\
    \ a type for which\n   has been allocated from the IPv6 \"Destination Options\
    \ and Hop-by-Hop\n   Options\" registry of [RFC2780].\n   This document creates\
    \ one registry called \"TaggerId Types\" for\n   recording TaggerId types, (TidTy),\
    \ as a sub-registry in the \"IPv6\n   Parameters\" registry.\n   This document\
    \ registers one well-known multicast address from each of\n   the IPv4 and IPv6\
    \ multicast address spaces.\n   This document defines one Message TLV, a type\
    \ for which has been\n   allocated from the \"Message TLV Types\" registry of\
    \ [RFC5444].\n   Finally, this document defines one Address Block TLV, a type\
    \ for\n   which has been allocated from the \"Address Block TLV Types\" registry\n\
    \   of [RFC5444].\n"
- title: 11.1.  IPv6 SMF_DPD Header Extension Option Type
  contents:
  - "11.1.  IPv6 SMF_DPD Header Extension Option Type\n   IANA has allocated an IPv6\
    \ Option Type from the IPv6 \"Destination\n   Options and Hop-by-Hop Options\"\
    \ registry of [RFC2780], as specified\n   in Table 9.\n   +-----------+-------------------------+-------------+---------------+\n\
    \   | Hex Value |       Binary Value      | Description | Reference     |\n  \
    \ |           |    act | chg | rest     |             |               |\n   +-----------+-------------------------+-------------+---------------+\n\
    \   |     8     |     00 |  0  | 01000    | SMF_DPD     | This Document |\n  \
    \ +-----------+-------------------------+-------------+---------------+\n    \
    \               Table 9: IPv6 Option Type Allocation\n"
- title: 11.2.  TaggerId Types (TidTy)
  contents:
  - "11.2.  TaggerId Types (TidTy)\n   A portion of the option data content in the\
    \ SMF_DPD is the Tagger\n   Identifier Type (TidTy), which provides a context\
    \ for the optionally\n   included TaggerId.\n   IANA has created a registry for\
    \ recording TaggerId Types (TidTy),\n   with initial assignments and allocation\
    \ policies, as specified in\n   Table 10.\n   +------+----------+------------------------------------+------------+\n\
    \   | Type | Mnemonic | Description                        | Reference  |\n  \
    \ +------+----------+------------------------------------+------------+\n   |\
    \   0  |   NULL   | No TaggerId field is present       | This       |\n   |  \
    \    |          |                                    | document   |\n   |   1\
    \  |  DEFAULT | A TaggerId of non-specific context | This       |\n   |      |\
    \          | is present                         | document   |\n   |   2  |  \
    \ IPv4   | A TaggerId representing an IPv4    | This       |\n   |      |    \
    \      | address is present                 | document   |\n   |   3  |   IPv6\
    \   | A TaggerId representing an IPv6    | This       |\n   |      |         \
    \ | address is present                 | document   |\n   |  4-7 |          |\
    \ Unassigned                         |            |\n   +------+----------+------------------------------------+------------+\n\
    \                         Table 10: TaggerId Types\n   For allocation of unassigned\
    \ values 4-7, IETF Review [RFC5226] is\n   required.\n"
- title: 11.3.  Well-Known Multicast Address
  contents:
  - "11.3.  Well-Known Multicast Address\n   IANA has allocated an IPv4 multicast\
    \ address \"SL-MANET-ROUTERS\"\n   (224.0.1.186) from the \"Internetwork Control\
    \ Block (224.0.1.0-\n   224.0.1.255 (224.0.1/24))\" sub-registry of the \"IPv4\
    \ Multicast\n   Address\" registry.\n   IANA has allocated an IPv6 multicast address\
    \ \"SL-MANET-ROUTERS\" from\n   the \"Site-Local Scope Multicast Addresses\" sub-sub-registry\
    \ of the\n   \"Fixed Scope Multicast Addresses\" sub-registry of the \"INTERNET\n\
    \   PROTOCOL VERSION 6 MULTICAST ADDRESSES\" registry.\n"
- title: 11.4.  SMF TLVs
  contents:
  - '11.4.  SMF TLVs

    '
- title: 11.4.1.  Expert Review for Created Type Extension Registries
  contents:
  - "11.4.1.  Expert Review for Created Type Extension Registries\n   Creation of\
    \ Address Block TLV Types and Message TLV Types in\n   registries of [RFC5444],\
    \ and hence in the HELLO-message-specific\n   registries of [RFC6130], entails\
    \ creation of corresponding Type\n   Extension registries for each such type.\
    \  For such Type Extension\n   registries, where an Expert Review is required,\
    \ the designated expert\n   SHOULD take the same general recommendations into\
    \ consideration as\n   those specified by [RFC5444].\n"
- title: 11.4.2.  SMF Message TLV Type (SMF_TYPE)
  contents:
  - "11.4.2.  SMF Message TLV Type (SMF_TYPE)\n   This document defines one Message\
    \ TLV Type, \"SMF_TYPE\", which has\n   been allocated from the \"HELLO Message-Type-specific\
    \ Message TLV\n   Types\" registry, defined in [RFC6130].\n   This created a new\
    \ Type Extension registry, with initial assignments\n   as specified in Table\
    \ 11.\n   +----------+------+-----------+--------------------+----------------+\n\
    \   |   Name   | Type |    Type   | Description        | Allocation     |\n  \
    \ |          |      | Extension |                    | Policy         |\n   +----------+------+-----------+--------------------+----------------+\n\
    \   | SMF_TYPE |  128 |   0-255   | Specifies relay    | Section 11.4.4 |\n  \
    \ |          |      |           | algorithm          |                |\n   |\
    \          |      |           | supported by the   |                |\n   |  \
    \        |      |           | SMF router,        |                |\n   |    \
    \      |      |           | originating the    |                |\n   |      \
    \    |      |           | HELLO message,     |                |\n   |        \
    \  |      |           | according to       |                |\n   |          |\
    \      |           | Section 11.4.4.    |                |\n   +----------+------+-----------+--------------------+----------------+\n\
    \          Table 11: SMF_TYPE Message TLV Type Extension Registry\n"
- title: 11.4.3.  SMF Address Block TLV Type (SMF_NBR_TYPE)
  contents:
  - "11.4.3.  SMF Address Block TLV Type (SMF_NBR_TYPE)\n   This document defines\
    \ one Address Block TLV Type, \"SMF_NBR_TYPE\",\n   which has been allocated from\
    \ the \"HELLO Message-Type-specific\n   Address Block TLV Types\" registry, defined\
    \ in [RFC6130].\n   This has created a new Type Extension registry, with initial\n\
    \   assignments as specified in Table 12.\n   +--------------+--------+-----------+-----------------+-------------+\n\
    \   |     Name     |  Type  |    Type   | Description     | Allocation  |\n  \
    \ |              |        | Extension |                 | Policy      |\n   +--------------+--------+-----------+-----------------+-------------+\n\
    \   | SMF_NBR_TYPE |   128  |   0-255   | Specifies relay | Section     |\n  \
    \ |              |        |           | algorithm       | 11.4.4      |\n   |\
    \              |        |           | supported by    |             |\n   |  \
    \            |        |           | the SMF router  |             |\n   |    \
    \          |        |           | corresponding   |             |\n   |      \
    \        |        |           | to the          |             |\n   |        \
    \      |        |           | advertised      |             |\n   |          \
    \    |        |           | address,        |             |\n   |            \
    \  |        |           | according to    |             |\n   |              |\
    \        |           | Section 11.4.4. |             |\n   +--------------+--------+-----------+-----------------+-------------+\n\
    \     Table 12: SMF_NBR_TYPE Address Block TLV Type Extension Registry\n"
- title: 11.4.4.  SMF Relay Algorithm ID Registry
  contents:
  - "11.4.4.  SMF Relay Algorithm ID Registry\n   Types for the Type Extension Registries\
    \ for the SMF_TYPE Message TLV\n   and the SMF_NBR_TYPE Address Block TLV are\
    \ unified in this single SMF\n   Relay Algorithm ID Registry, defined in this\
    \ section.\n   IANA has created a registry for recording Relay Algorithm\n   Identifiers,\
    \ with initial assignments and allocation policies as\n   specified in Table 13.\n\
    \          +---------+---------+-------------+-------------------+\n         \
    \ | Value   | Name    | Description | Allocation Policy |\n          +---------+---------+-------------+-------------------+\n\
    \          | 0       | CF      | Section 4   |                   |\n         \
    \ | 1       | S-MPR   | Appendix B  |                   |\n          | 2     \
    \  | E-CDS   | Appendix A  |                   |\n          | 3       | MPR-CDS\
    \ | Appendix C  |                   |\n          | 4-127   |         | Unassigned\
    \  | Expert Review     |\n          | 128-255 |         | Unassigned  | Experimental\
    \ Use  |\n          +---------+---------+-------------+-------------------+\n\
    \                 Table 13: Relay Set Algorithm Type Values\n   A specification\
    \ requesting an allocation from the 4-127 range from\n   the SMF Relay Algorithm\
    \ ID Registry MUST specify the interpretation\n   of the <value> field (if any).\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n   Many of the concepts and mechanisms used and adopted\
    \ by SMF resulted\n   over several years of discussion and related work within\
    \ the MANET\n   working group since the late 1990s.  There are obviously many\n\
    \   contributors to past discussions and related draft documents within\n   the\
    \ working group that have influenced the development of SMF\n   concepts, and\
    \ they deserve acknowledgment.  In particular, this\n   document is largely a\
    \ direct product of the earlier SMF design team\n   within the IETF MANET working\
    \ group and borrows text and\n   implementation ideas from the related individuals\
    \ and activities.\n   Some of the direct contributors who have been involved in\
    \ design,\n   content editing, prototype implementation, major commenting, and\
    \ core\n   discussions are listed below in alphabetical order.  We appreciate\n\
    \   all the input and feedback from the many community members and early\n   implementation\
    \ users we have heard from that are not on this list as\n   well.\n      Brian\
    \ Adamson\n      Teco Boot\n      Ian Chakeres\n      Thomas Clausen\n      Justin\
    \ Dean\n      Brian Haberman\n      Ulrich Herberg\n      Charles Perkins\n  \
    \    Pedro Ruiz\n      Fred Templin\n      Maoyu Wang\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [MPR-CDS]  Adjih, C., Jacquet, P., and L. Viennot,\
    \ \"Computing\n              Connected Dominating Sets with Multipoint Relays\"\
    , Ad Hoc\n              and Sensor Wireless Networks, January 2005.\n   [RFC0791]\
    \  Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n              September\
    \ 1981.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2460]\
    \  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6)\
    \ Specification\", RFC 2460, December 1998.\n   [RFC2644]  Senie, D., \"Changing\
    \ the Default for Directed Broadcasts\n              in Routers\", BCP 34, RFC\
    \ 2644, August 1999.\n   [RFC2780]  Bradner, S. and V. Paxson, \"IANA Allocation\
    \ Guidelines For\n              Values In the Internet Protocol and Related Headers\"\
    ,\n              BCP 37, RFC 2780, March 2000.\n   [RFC3174]  Eastlake, D. and\
    \ P. Jones, \"US Secure Hash Algorithm 1\n              (SHA1)\", RFC 3174, September\
    \ 2001.\n   [RFC3626]  Clausen, T. and P. Jacquet, \"Optimized Link State Routing\n\
    \              Protocol (OLSR)\", RFC 3626, October 2003.\n   [RFC4291]  Hinden,\
    \ R. and S. Deering, \"IP Version 6 Addressing\n              Architecture\",\
    \ RFC 4291, February 2006.\n   [RFC4302]  Kent, S., \"IP Authentication Header\"\
    , RFC 4302,\n              December 2005.\n   [RFC5226]  Narten, T. and H. Alvestrand,\
    \ \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\"\
    , BCP 26, RFC 5226,\n              May 2008.\n   [RFC5444]  Clausen, T., Dearlove,\
    \ C., Dean, J., and C. Adjih,\n              \"Generalized Mobile Ad Hoc Network\
    \ (MANET) Packet/Message\n              Format\", RFC 5444, February 2009.\n \
    \  [RFC5614]  Ogier, R. and P. Spagnolo, \"Mobile Ad Hoc Network (MANET)\n   \
    \           Extension of OSPF Using Connected Dominating Set (CDS)\n         \
    \     Flooding\", RFC 5614, August 2009.\n   [RFC5771]  Cotton, M., Vegoda, L.,\
    \ and D. Meyer, \"IANA Guidelines for\n              IPv4 Multicast Address Assignments\"\
    , BCP 51, RFC 5771,\n              March 2010.\n   [RFC6130]  Clausen, T., Dearlove,\
    \ C., and J. Dean, \"Mobile Ad Hoc\n              Network (MANET) Neighborhood\
    \ Discovery Protocol (NHDP)\",\n              RFC 6130, April 2011.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [CDHM07]   Chakeres, I., Danilov, C., Henderson,\
    \ T., and J. Macker,\n              \"Connecting MANET Multicast\", IEEE MILCOM\n\
    \              2007 Proceedings, 2007.\n   [DHG09]    Danilov, C., Henderson,\
    \ T., Goff, T., Kim, J., Macker, J.,\n              Weston, J., Neogi, N., Ortiz,\
    \ A., and D. Uhlig,\n              \"Experiment and field demonstration of a 802.11-based\n\
    \              ground-UAV mobile ad-hoc network\", Proceedings of the 28th\n \
    \             IEEE conference on Military Communications, 2009.\n   [DHS08]  \
    \  Danilov, C., Henderson, T., Spagnolo, T., Goff, T., and J.\n              Kim,\
    \ \"MANET Multicast with Multiple Gateways\", IEEE MILCOM\n              2008\
    \ Proceedings, 2008.\n   [GM99]     Garcia-Luna-Aceves, JJ. and E. Madruga, \"\
    The Core-Assisted\n              Mesh Protocol\", Selected Areas in Communications,\
    \ IEEE\n              Journal,  Volume 17, Issue 8, August 1999.\n   [IPV4-ID-UPDATE]\n\
    \              Touch, J., \"Updated Specification of the IPv4 ID Field\",\n  \
    \            Work in Progress, September 2011.\n   [JLMV02]   Jacquet, P., Laouiti,\
    \ V., Minet, P., and L. Viennot,\n              \"Performance of Multipoint Relaying\
    \ in Ad Hoc Mobile\n              Routing Protocols\", Networking , 2002.\n  \
    \ [MDC04]    Macker, J., Dean, J., and W. Chao, \"Simplified Multicast\n     \
    \         Forwarding in Mobile Ad hoc Networks\", IEEE MILCOM 2004\n         \
    \     Proceedings, 2004.\n   [MDDA07]   Macker, J., Downard, I., Dean, J., and\
    \ R. Adamson,\n              \"Evaluation of Distributed Cover Set Algorithms\
    \ in Mobile\n              Ad hoc Network for Simplified Multicast Forwarding\"\
    , ACM\n              SIGMOBILE Mobile Computing and Communications\n         \
    \     Review, Volume 11, Issue 3, July 2007.\n   [MGL04]    Mohapatra, P., Gui,\
    \ C., and J. Li, \"Group Communications\n              in Mobile Ad hoc Networks\"\
    , IEEE Computer, Vol. 37, No. 2,\n              February 2004.\n   [NTSC99]  \
    \ Ni, S., Tseng, Y., Chen, Y., and J. Sheu, \"The Broadcast\n              Storm\
    \ Problem in a Mobile Ad Hoc Network\", Proceedings of\n              ACM Mobicom\
    \ 99, 1999.\n   [RFC2501]  Corson, M. and J. Macker, \"Mobile Ad hoc Networking\n\
    \              (MANET): Routing Protocol Performance Issues and\n            \
    \  Evaluation Considerations\", RFC 2501, January 1999.\n   [RFC3684]  Ogier,\
    \ R., Templin, F., and M. Lewis, \"Topology\n              Dissemination Based\
    \ on Reverse-Path Forwarding (TBRPF)\",\n              RFC 3684, February 2004.\n\
    \   [RFC3973]  Adams, A., Nicholas, J., and W. Siadak, \"Protocol\n          \
    \    Independent Multicast - Dense Mode (PIM-DM): Protocol\n              Specification\
    \ (Revised)\", RFC 3973, January 2005.\n   [RFC4601]  Fenner, B., Handley, M.,\
    \ Holbrook, H., and I. Kouvelas,\n              \"Protocol Independent Multicast\
    \ - Sparse Mode (PIM-SM):\n              Protocol Specification (Revised)\", RFC\
    \ 4601, August 2006.\n"
- title: Appendix A.  Essential Connecting Dominating Set (E-CDS) Algorithm
  contents:
  - "Appendix A.  Essential Connecting Dominating Set (E-CDS) Algorithm\n   The \"\
    Essential Connected Dominating Set\" (E-CDS) algorithm [RFC5614]\n   forms a single\
    \ CDS mesh for the SMF operating region.  It allows\n   routers to use 2-hop neighborhood\
    \ topology information to dynamically\n   perform relay self-election to form\
    \ a CDS.  Its packet-forwarding\n   rules are not dependent upon previous hop\
    \ knowledge.  Additionally,\n   E-CDS SMF forwarders can be easily mixed without\
    \ problems with CF SMF\n   forwarders, even those not participating in NHDP. \
    \ Another benefit is\n   that packets opportunistically received from non-symmetric\
    \ neighbors\n   may be forwarded without compromising flooding efficiency or\n\
    \   correctness.  Furthermore, multicast sources not participating in\n   NHDP\
    \ may freely inject their traffic, and any neighboring E-CDS\n   relays will properly\
    \ forward the traffic.  The E-CDS-based relay set\n   selection algorithm is based\
    \ upon [RFC5614].  E-CDS was originally\n   discussed in the context of forming\
    \ partial adjacencies and efficient\n   flooding for MANET OSPF extensions work,\
    \ and the core algorithm is\n   applied here for SMF.\n   It is RECOMMENDED that\
    \ the SMF_TYPE:E-CDS Message TLV be included in\n   NHDP_HELLO messages that are\
    \ generated by routers conducting E-CDS\n   SMF operation.  It is also RECOMMENDED\
    \ that the SMF_NBR_TYPE:E-CDS\n   Address Block TLV be used to advertise neighbor\
    \ routers that are also\n   conducting E-CDS SMF operation.\n"
- title: A.1.  E-CDS Relay Set Selection Overview
  contents:
  - "A.1.  E-CDS Relay Set Selection Overview\n   The E-CDS relay set selection requires\
    \ 2-hop neighborhood information\n   collected through NHDP or another process.\
    \  Relay routers, in E-CDS\n   SMF selection, are \"self-elected\" using a Router\
    \ Identifier (Router\n   ID) and an optional nodal metric, referred to here as\
    \ Router Priority\n   for all 1-hop and 2-hop neighbors.  To ensure proper relay\
    \ set self-\n   election, the Router ID and Router Priority MUST be consistent\
    \ among\n   participating routers.  It is RECOMMENDED that NHDP be used to share\n\
    \   Router ID and Router Priority through the use of SMF_TYPE:E-CDS TLVs\n   as\
    \ described in this appendix.  The Router ID is a logical\n   identification that\
    \ MUST be consistent across interoperating SMF\n   neighborhoods, and it is RECOMMENDED\
    \ to be chosen as the numerically\n   largest address contained in a router's\
    \ \"Neighbor Address List\" as\n   defined in NHDP.  The E-CDS self-election process\
    \ can be summarized\n   as follows:\n   1.  If an SMF router has a higher ordinal\
    \ (Router Priority, Router\n       ID) than all of its symmetric neighbors, it\
    \ elects itself to act\n       as a forwarder for all received multicast packets.\n\
    \   2.  Else, if there does not exist a path from the neighbor with\n       largest\
    \ (Router Priority, Router ID) to any other neighbor, via\n       neighbors with\
    \ larger values of (Router Priority, Router ID),\n       then it elects itself\
    \ to the relay set.\n   The basic form of E-CDS described and applied within this\n\
    \   specification does not provide for redundant relay set selection\n   (e.g.,\
    \ bi-connected), but such capability is supported by the basic\n   E-CDS design.\n"
- title: A.2.  E-CDS Forwarding Rules
  contents:
  - "A.2.  E-CDS Forwarding Rules\n   With E-CDS, any SMF router that has selected\
    \ itself as a relay\n   performs DPD and forwards all non-duplicative multicast\
    \ traffic\n   allowed by the present forwarding policy.  Packet previous-hop\n\
    \   knowledge is not needed for forwarding decisions when using E-CDS.\n   1.\
    \  Upon packet reception, DPD is performed.  Note E-CDS requires a\n       single\
    \ duplicate table for the set of interfaces associated with\n       the relay\
    \ set selection.\n   2.  If the packet is a duplicate, no further action is taken.\n\
    \   3.  If the packet is non-duplicative:\n       A.  A DPD entry is made for\
    \ the packet identifier.\n       B.  The packet is forwarded out to all interfaces\
    \ associated with\n           the relay set selection.\n   As previously mentioned,\
    \ even packets sourced (or relayed) by routers\n   not participating in NHDP and/or\
    \ the E-CDS relay set selection may be\n   forwarded by E-CDS forwarders without\
    \ problem.  A particular\n   deployment MAY choose to not forward packets from\
    \ previous hop\n   routers that have been not explicitly identified via NHDP or\
    \ other\n   means as operating as part of a different relay set algorithm (e.g.,\n\
    \   S-MPR) to allow coexistent deployments to operate correctly.  Also,\n   E-CDS\
    \ relay set selection may be configured to be influenced by\n   statically configured\
    \ CF relays that are identified via NHDP or other\n   means.\n"
- title: A.3.  E-CDS Neighborhood Discovery Requirements
  contents:
  - "A.3.  E-CDS Neighborhood Discovery Requirements\n   It is possible to perform\
    \ E-CDS relay set selection without\n   modification of NHDP, basing the self-election\
    \ process exclusively on\n   the \"Neighbor Address List\" of participating SMF\
    \ routers, for\n   example, by setting the Router Priority to a default value\
    \ and\n   selecting the Router ID as the numerically largest address contained\n\
    \   in the \"Neighbor Address List\".  However, steps MUST be taken to\n   ensure\
    \ that all NHDP-enabled routers not using SMF_TYPE:E-CDS full\n   type Message\
    \ TLVs are, in fact, running SMF E-CDS with the same\n   methods for selecting\
    \ Router Priority and Router ID; otherwise,\n   incorrect forwarding may occur.\
    \  Note that SMF routers with higher\n   Router Priority values will be favored\
    \ as relays over routers with\n   lower Router Priority.  Thus, preferred relays\
    \ MAY be\n   administratively configured to be selected when possible.\n   Additionally,\
    \ other metrics (e.g., nodal degree, energy capacity,\n   etc.) may also be taken\
    \ into account in constructing a Router\n   Priority value.  When using Router\
    \ Priority with multiple interfaces,\n   all interfaces on a router MUST use and\
    \ advertise a common Router\n   Priority value.  A router's Router Priority value\
    \ may be\n   administratively or algorithmically selected.  The method of\n  \
    \ selection does not need to be the same among different routers.\n   E-CDS relay\
    \ set selection may be configured to be influenced by\n   statically configured\
    \ CF relays that are identified via NHDP or other\n   means.  Nodes advertising\
    \ CF through NHDP may be considered E-CDS SMF\n   routers with maximal Router\
    \ Priority.\n   To share a router's Router Priority with its 1-hop neighbors,\
    \ the\n   SMF_TYPE:E-CDS Message TLV's <value> field is defined as shown in\n\
    \   Table 14.\n              +----------------+---------+-----------------+\n\
    \              | Length (bytes) | Value   | Router Priority |\n              +----------------+---------+-----------------+\n\
    \              | 0              | N/A     | 64              |\n              |\
    \ 1              | <value> | 0-127           |\n              +----------------+---------+-----------------+\n\
    \                    Table 14: E-CDS Message TLV Values\n   Where <value> is a\
    \ one-octet-long bit field that is defined as:\n   bit 0: the leftmost bit is\
    \ reserved and SHOULD be set to 0.\n   bits 1-7: contain the unsigned Router Priority\
    \ value, 0-127, which is\n   associated with the \"Neighbor Address List\".\n\
    \   Combinations of value field lengths and values other than specified\n   here\
    \ are NOT permitted and SHOULD be ignored.  Figure 6 shows an\n   example SMF_TYPE:E-CDS\
    \ Message TLV.\n       0                   1                   2             \
    \      3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     ...              |   SMF_TYPE    |1|0|0|1|0|0|   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     E-CDS     |0|0|0|0|0|0|0|1|R|  priority   |     ...       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                    Figure 6: E-CDS Message TLV Example\n   To convey Router\
    \ Priority values among 2-hop neighborhoods, the\n   SMF_NBR_TYPE:E-CDS Address\
    \ Block TLV's <value> field is used.  Multi-\n   index and multivalue TLV layouts\
    \ as defined in [RFC5444] are\n   supported.  SMF_NBR_TYPE:E-CDS value fields\
    \ are defined thus:\n   +---------------+--------+----------+-------------------------------+\n\
    \   | Length(bytes) | # Addr | Value    | Router Priority               |\n  \
    \ +---------------+--------+----------+-------------------------------+\n   |\
    \ 0             | Any    | N/A      | 64                            |\n   | 1\
    \             | Any    | <value>  | <value> is for all addresses  |\n   | N  \
    \           | N      | <value>* | Each address gets its own     |\n   |      \
    \         |        |          | <value>                       |\n   +---------------+--------+----------+-------------------------------+\n\
    \                 Table 15: E-CDS Address Block TLV Values\n   Where <value> is\
    \ a one-byte bit field that is defined as:\n   bit 0: the leftmost bit is reserved\
    \ and SHOULD be set to 0.\n   bits 1-7: contain the unsigned Router Priority value,\
    \ 0-127, which is\n   associated with the appropriate address(es).\n   Combinations\
    \ of value field lengths and # of addresses other than\n   specified here are\
    \ NOT permitted and SHOULD be ignored.  A default\n   technique of using nodal\
    \ degree (i.e., count of 1-hop neighbors) is\n   RECOMMENDED for the value field\
    \ of these TLV types.  Below are two\n   example SMF_NBR_TYPE:E-CDS Address Block\
    \ TLVs.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       \
    \              ...              | SMF_NBR_TYPE  |1|0|0|1|0|0|   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     E-CDS     |0|0|0|0|0|0|0|1|R|  priority   |     ...       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \          Figure 7: E-CDS Address Block TLV Example 1\n   The single value example\
    \ TLV, depicted in Figure 7, specifies that\n   all address(es) contained in the\
    \ address block are running SMF using\n   the E-CDS algorithm and all address(es)\
    \ share the value field and\n   therefore the same Router Priority.\n       0\
    \                   1                   2                   3\n       0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     ...              | SMF_NBR_TYPE  |1|0|1|1|0|1|   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     E-CDS     |  index-start  |   index-end   |    length     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |R|  priority0  |R|  priority1  |      ...      |R|  priorityN  |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \          Figure 8: E-CDS Address Block TLV Example 2\n   The example multivalued\
    \ TLV, depicted in Figure 8, specifies that\n   address(es) contained in the address\
    \ block from index-start to index-\n   end inclusive are running SMF using the\
    \ E-CDS algorithm.  Each\n   address is associated with its own value byte and\
    \ therefore its own\n   Router Priority.\n"
- title: A.4.  E-CDS Selection Algorithm
  contents:
  - "A.4.  E-CDS Selection Algorithm\n   This section describes an algorithm for E-CDS\
    \ relay selection (self-\n   election).  The algorithm described uses 2-hop information.\
    \  Note\n   that it is possible to extend this algorithm to use k-hop information\n\
    \   with added computational complexity and mechanisms for sharing k-hop\n   topology\
    \ information that are not described in this document or\n   within the NHDP specification.\
    \  It should also be noted that this\n   algorithm does not impose the hop limit\
    \ bound described in [RFC5614]\n   when performing the path search that is used\
    \ for relay selection.\n   However, the algorithm below could be easily augmented\
    \ to accommodate\n   this additional criterion.  It is not expected that the hop\
    \ limit\n   bound will provide significant benefit to the algorithm defined in\n\
    \   this appendix.\n   The tuple of Router Priority and Router ID is used in E-CDS\
    \ relay set\n   selection.  Precedence is given to the Router Priority portion,\
    \ and\n   the Router ID value is used as a tiebreaker.  The evaluation of this\n\
    \   tuple is referred to as \"RtrPri(n)\" in the description below where\n   \"\
    n\" references a specific router.  Note that it is possible that the\n   Router\
    \ Priority portion may be optional and the evaluation of\n   \"RtrPri()\" be solely\
    \ based upon the unique Router ID.  Since there\n   MUST NOT be any duplicate\
    \ Router ID values among SMF routers, a\n   comparison of \"RtrPri(n)\" between\
    \ any two routers will always be an\n   inequality.  The use of nodal degree for\
    \ calculating Router Priority\n   is RECOMMENDED as default, and the largest IP\
    \ address in the\n   \"Neighbor Address List\" as advertised by NHDP MUST be used\
    \ as the\n   Router ID.  NHDP provides all interface addresses throughout the\n\
    \   2-hop neighborhood through HELLO messages, so explicitly conveying a\n   Router\
    \ ID is not necessary.  The following steps describe a basic\n   algorithm for\
    \ conducting E-CDS relay selection for a router \"n0\":\n   1.  Initialize the\
    \ set \"N1\" with tuples (\"Router Priority\", \"Router\n       ID\", \"Neighbor\
    \ Address List\") for each 1-hop neighbor of \"n0\".\n   2.  If \"N1\" has less\
    \ than 2 tuples, then \"n0\" does not elect itself\n       as a relay, and no\
    \ further steps are taken.\n   3.  Initialize the set \"N2\" with tuples (\"Router\
    \ Priority\", \"Router\n       ID\", \"2-hop address\") for each \"2-hop address\"\
    \ of \"n0\", where\n       \"2-hop address\" is defined in NHDP.\n   4.  If \"\
    RtrPri(n0)\" is greater than that of all tuples in the union\n       of \"N1\"\
    \ and \"N2\", then \"n0\" selects itself as a relay, and no\n       further steps\
    \ are taken.\n   5.  Initialize all tuples in the union of \"N1\" and \"N2\" as\n\
    \       \"unvisited\".\n   6.  Find the tuple \"n1_Max\" that has the largest\
    \ \"RtrPri()\" of all\n       tuples in \"N1\".\n   7.  Initialize queue \"Q\"\
    \ to contain \"n1_Max\", marking \"n1_Max\" as\n       \"visited\".\n   8.  While\
    \ router queue \"Q\" is not empty, remove router \"x\" from the\n       head of\
    \ \"Q\", and for each 1-hop neighbor \"n\" of router \"x\"\n       (excluding\
    \ \"n0\") that is not marked \"visited\".\n       A.  Mark router \"n\" as \"\
    visited\".\n       B.  If \"RtrPri(n)\" is greater than \"RtrPri(n0)\", append\
    \ \"n\" to\n           \"Q\".\n   9.  If any tuple in \"N1\" remains \"unvisited\"\
    , then \"n0\" selects\n       itself as a relay.  Otherwise, \"n0\" does not act\
    \ as a relay.\n   Note these steps are re-evaluated upon neighborhood status changes.\n\
    \   Steps 5 through 8 of this procedure describe an approach to a path\n   search.\
    \  The purpose of this path search is to determine if paths\n   exist from the\
    \ 1-hop neighbor with maximum \"RtrPri()\" to all other\n   1-hop neighbors without\
    \ traversing an intermediate router with a\n   \"RtrPri()\" value less than \"\
    RtrPri(n0)\".  These steps comprise a\n   breadth-first traversal that evaluates\
    \ only paths that meet that\n   criteria.  If all 1-hop neighbors of \"n0\" are\
    \ \"visited\" during this\n   traversal, then the path search has succeeded, and\
    \ router \"n0\" does\n   not need to provide relay.  It can be assumed that other\
    \ routers will\n   provide relay operation to ensure SMF connectivity.\n   It\
    \ is possible to extend this algorithm to consider neighboring SMF\n   routers\
    \ that are known to be statically configured for CF (always\n   relaying).  The\
    \ modification to the above algorithm is to process\n   such routers as having\
    \ a maximum possible Router Priority value.  It\n   is expected that routers configured\
    \ for CF and participating in NHDP\n   would indicate this with use of the SMF_TYPE:CF\
    \ and SMF_NBR_TYPE:CF\n   TLV types in their NHDP_HELLO message and address blocks,\n\
    \   respectively.\n"
- title: Appendix B.  Source-Based Multipoint Relay (S-MPR) Algorithm
  contents:
  - "Appendix B.  Source-Based Multipoint Relay (S-MPR) Algorithm\n   The source-based\
    \ multipoint relay (S-MPR) set selection algorithm\n   enables individual routers,\
    \ using 2-hop topology information, to\n   select relays from their set of neighboring\
    \ routers.  Relays are\n   selected so that forwarding to the router's complete\
    \ 2-hop neighbor\n   set is covered.  This distributed relay set selection technique\
    \ has\n   been shown to approximate a minimal connected dominating set (MCDS)\n\
    \   in [JLMV02].  Individual routers must collect 2-hop neighborhood\n   information\
    \ from neighbors, determine an appropriate current relay\n   set, and inform selected\
    \ neighbors of their relay status.  Note that\n   since each router picks its\
    \ neighboring relays independently, S-MPR\n   forwarders depend upon previous\
    \ hop information (e.g., source MAC\n   address) to operate correctly.  The Optimized\
    \ Link State Routing\n   (OLSR) protocol has used this algorithm and protocol\
    \ for relay of\n   link state updates and other control information [RFC3626],\
    \ and it\n   has been demonstrated operationally in dynamic network environments.\n\
    \   It is RECOMMENDED that the SMF_TYPE:S-MPR Message TLV be included in\n   NHDP_HELLO\
    \ messages that are generated by routers conducting S-MPR\n   SMF operation. \
    \ It is also RECOMMENDED that the SMF_NBR_TYPE:S-MPR\n   Address Block TLV be\
    \ used to specify which neighbor routers are\n   conducting S-MPR SMF operation.\n"
- title: B.1.  S-MPR Relay Set Selection Overview
  contents:
  - "B.1.  S-MPR Relay Set Selection Overview\n   The S-MPR algorithm uses bi-directional\
    \ 1-hop and 2-hop neighborhood\n   information collected via NHDP to select, from\
    \ a router's 1-hop\n   neighbors, a set of relays that will cover the router's\
    \ entire 2-hop\n   neighbor set upon forwarding.  The algorithm described uses\
    \ a\n   \"greedy\" heuristic of first picking the 1-hop neighbor who will cover\n\
    \   the most 2-hop neighbors.  Then, excluding those 2-hop neighbors that\n  \
    \ have been covered, additional relays from its 1-hop neighbor set are\n   iteratively\
    \ selected until the entire 2-hop neighborhood is covered.\n   Note that 1-hop\
    \ neighbors also identified as 2-hop neighbors are\n   considered as 1-hop neighbors\
    \ only.\n   NHDP HELLO messages supporting S-MPR forwarding operation SHOULD use\n\
    \   the TLVs defined in Section 8.1 using the S-MPR extended type.  The\n   value\
    \ field of an Address Block TLV that has a full type value of\n   SMF_NBR_TYPE:S-MPR\
    \ is defined in Table 17 such that signaling of MPR\n   selections to 1-hop neighbors\
    \ is possible.  The value field of a\n   message block TLV that has a full type\
    \ value of SMF_TYPE:S-MPR is\n   defined in Table 16 such that signaling of Router\
    \ Priority (described\n   as \"WILLINGNESS\" in [RFC3626]) to 1-hop neighbors\
    \ is possible.  It is\n   important to note that S-MPR forwarding is dependent\
    \ upon the\n   previous hop of an incoming packet.  An S-MPR router MUST forward\n\
    \   packets only for neighbors that have explicitly selected it as a\n   multipoint\
    \ relay (i.e., its \"selectors\").  There are also some\n   additional requirements\
    \ for duplicate packet detection to support\n   S-MPR SMF operation that are described\
    \ below.\n   For multiple interface operation, MPR selection SHOULD be conducted\n\
    \   on a per-interface basis.  However, it is possible to economize MPR\n   selection\
    \ among multiple interfaces by selecting common MPRs to the\n   extent possible.\n"
- title: B.2.  S-MPR Forwarding Rules
  contents:
  - "B.2.  S-MPR Forwarding Rules\n   An S-MPR SMF router MUST only forward packets\
    \ for neighbors that have\n   explicitly selected it as an MPR.  The source-based\
    \ forwarding\n   technique also stipulates some additional duplicate packet detection\n\
    \   operations.  For multiple network interfaces, independent DPD state\n   MUST\
    \ be maintained for each separate interface.  The following\n   provides the procedure\
    \ for S-MPR packet forwarding given the arrival\n   of a packet on a given interface,\
    \ denoted <srcIface>.  There are\n   three possible actions, depending upon the\
    \ previous-hop transmitter:\n   1.  If the previous-hop transmitter has selected\
    \ the current router\n       as an MPR,\n       A.  The packet identifier is checked\
    \ against the DPD state for\n           each possible outbound interface, including\
    \ the <srcIface>.\n       B.  If the packet is not a duplicate for an outbound\
    \ interface,\n           the packet is forwarded on that interface and a DPD entry\
    \ is\n           made for the given packet identifier for the interface.\n   \
    \    C.  If the packet is a duplicate, no action is taken for that\n         \
    \  interface.\n   2.  Else, if the previous-hop transmitter is a 1-hop symmetric\n\
    \       neighbor, a DPD entry is added for that packet for the\n       <srcIface>,\
    \ but the packet is not forwarded.\n   3.  Otherwise, no action is taken.\n  \
    \ Action number two in the list above is non-intuitive but important to\n   ensure\
    \ correctness of S-MPR SMF operation.  The selection of source-\n   based relays\
    \ does not result in a common set among neighboring\n   routers, so relays MUST\
    \ mark, in their DPD state, packets received\n   from non-selector, symmetric,\
    \ 1-hop neighbors (for a given interface)\n   and not forward subsequent duplicates\
    \ of that packet if received on\n   that interface.  Deviation here can result\
    \ in unnecessary, repeated\n   packet forwarding throughout the network or incomplete\
    \ flooding.\n   Nodes not participating in neighborhood discovery and relay set\n\
    \   selection will not be able to source multicast packets into the area\n   and\
    \ have SMF forward them, unlike E-CDS or MPR-CDS where forwarding\n   may occur\
    \ dependent on topology.  Correct S-MPR relay behavior will\n   occur with the\
    \ introduction of repeaters (non-NHDP/SMF participants\n   that relay multicast\
    \ packets using duplicate detection and CF), but\n   the repeaters will not efficiently\
    \ contribute to S-MPR forwarding as\n   these routers will not be identified as\
    \ neighbors (symmetric or\n   otherwise) in the S-MPR forwarding process.  NHDP/SMF\
    \ participants\n   MUST NOT forward packets that are not selected by the algorithm,\
    \ as\n   this can disrupt network-wide S-MPR flooding, resulting in incomplete\n\
    \   or inefficient flooding.  The result is that non-S-MPR SMF routers\n   will\
    \ be unable to source multicast packets and have them forwarded by\n   other S-MPR\
    \ SMF routers.\n"
- title: B.3.  S-MPR Neighborhood Discovery Requirements
  contents:
  - "B.3.  S-MPR Neighborhood Discovery Requirements\n   Nodes may optionally signal\
    \ a Router Priority value to their 1-hop\n   neighbors by using the SMF_TYPE:S-MPR\
    \ message block TLV value field.\n   If the value field is omitted, a default\
    \ Router Priority value of 64\n   is to be assumed.  This is summarized here:\n\
    \               +---------------+---------+-----------------+\n              \
    \ | Length(bytes) | Value   | Router Priority |\n               +---------------+---------+-----------------+\n\
    \               | 0             | N/A     | 64              |\n              \
    \ | 1             | <value> | 0-127           |\n               +---------------+---------+-----------------+\n\
    \                    Table 16: S-MPR Message TLV Values\n   Where <value> is a\
    \ one-octet-long bit field defined as:\n   bit 0: the leftmost bit is reserved\
    \ and SHOULD be set to 0.\n   bits 1-7: contain the Router Priority value, 0-127,\
    \ which is\n   associated with the \"Neighbor Address List\".\n   Router Priority\
    \ values for S-MPR are interpreted in the same fashion\n   as \"WILLINGNESS\"\
    \ ([RFC3626]), with the value 0 indicating a router\n   will NEVER forward and\
    \ value 127 indicating a router will ALWAYS\n   forward.  Values 1-126 indicate\
    \ how likely a S-MPR SMF router will be\n   selected as an MPR by a neighboring\
    \ SMF router, with higher values\n   increasing the likelihood.  Combinations\
    \ of value field lengths and\n   values other than those specified here are NOT\
    \ permitted and SHOULD\n   be ignored.  Below is an example SMF_TYPE:S-MPR Message\
    \ TLV.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       \
    \              ...              |   SMF_TYPE    |1|0|0|1|0|0|   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     S-MPR     |0|0|0|0|0|0|0|1|R|  priority   |     ...       |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \              Figure 9: S-MPR Message TLV Example\n   S-MPR election operation\
    \ requires 2-hop neighbor knowledge as\n   provided by NHDP [RFC6130] or from\
    \ external sources.  MPRs are\n   dynamically selected by each router, and selections\
    \ MUST be\n   advertised and dynamically updated within NHDP or an equivalent\n\
    \   protocol or mechanism.  For NHDP use, the SMF_NBR_TYPE:S-MPR Address\n   Block\
    \ TLV value field is defined as such:\n   +---------------+--------+----------+-------------------------------+\n\
    \   | Length(bytes) | # Addr | Value    | Meaning                       |\n  \
    \ +---------------+--------+----------+-------------------------------+\n   |\
    \ 0             | Any    | N/A      | NOT MPRs                      |\n   | 1\
    \             | Any    | <value>  | <value> is for all addresses  |\n   | N  \
    \           | N      | <value>* | Each address gets its own     |\n   |      \
    \         |        |          | <value>                       |\n   +---------------+--------+----------+-------------------------------+\n\
    \                 Table 17: S-MPR Address Block TLV Values\n   Where <value>,\
    \ if present, is a one-octet bit field defined as:\n   bit 0: The leftmost bit\
    \ is the M bit that, when set, indicates MPR\n   selection of the relevant interface,\
    \ represented by the associated\n   address(es), by the originator router of the\
    \ NHDP HELLO message.\n   When unset, it indicates the originator router of the\
    \ NHDP HELLO\n   message has not selected the relevant interfaces, represented\
    \ by the\n   associated address(es), as its MPR.\n   bits 1-7: These bits are\
    \ reserved and SHOULD be set to 0.\n   Combinations of value field lengths and\
    \ number of addresses other\n   than specified here are NOT permitted and SHOULD\
    \ be ignored.  All\n   bits, excepting the leftmost bit, are RESERVED and SHOULD\
    \ be set to\n   0.\n       0                   1                   2         \
    \          3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     ...              | SMF_NBR_TYPE  |1|1|0|1|0|0|   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     S-MPR     |  start-index  |0|0|0|0|0|0|0|1|M|  reserved   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 10: S-MPR Address Block TLV Example\n   The single index\
    \ TLV example, depicted in Figure 10, indicates that\n   the address specified\
    \ by the <start-index> field is running SMF using\n   S-MPR and has been selected\
    \ by the originator of the NHDP HELLO\n   message as an MPR forwarder if the M\
    \ bit is set.  Multivalued TLVs\n   may also be used to specify MPR selection\
    \ status of multiple\n   addresses using only one TLV.  See Figure 8 for a similar\
    \ example on\n   how this may be done.\n"
- title: B.4.  S-MPR Selection Algorithm
  contents:
  - "B.4.  S-MPR Selection Algorithm\n   This section describes a basic algorithm\
    \ for the S-MPR selection\n   process.  Note that the selection is with respect\
    \ to a specific\n   interface of the router performing selection, and other router\n\
    \   interfaces referenced are reachable from this reference router\n   interface.\
    \  This is consistent with the S-MPR forwarding rules\n   described above.  When\
    \ multiple interfaces per router are used, it is\n   possible to enhance the overall\
    \ selection process across multiple\n   interfaces such that common routers are\
    \ selected as MPRs for each\n   interface to avoid unnecessary inefficiencies\
    \ in flooding.  The\n   following steps describe a basic algorithm for conducting\
    \ S-MPR\n   selection for a router interface \"n0\":\n   1.  Initialize the set\
    \ \"MPR\" to empty.\n   2.  Initialize the set \"N1\" to include all 1-hop neighbors\
    \ of \"n0\".\n   3.  Initialize the set \"N2\" to include all 2-hop neighbors,\
    \ excluding\n       \"n0\" and any routers in \"N1\".  Nodes that are only reachable\
    \ via\n       \"N1\" routers with router priority values of NEVER are also\n \
    \      excluded.\n   4.  For each interface \"y\" in \"N1\", initialize a set\
    \ \"N2(y)\" to\n       include any interfaces in \"N2\" that are 1-hop neighbors\
    \ of \"y\".\n   5.  For each interface \"x\" in \"N1\" with a router priority\
    \ value of\n       \"ALWAYS\" (or using the CF relay algorithm), select \"x\"\
    \ as an MPR:\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"\
    N1\".\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"\
    N2\".\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\n\
    \           \"N2(x)\" from \"N2(y)\".\n   6.  For each interface \"z\" in \"N2\"\
    , initialize the set \"N1(z)\" to\n       include any interfaces in \"N1\" that\
    \ are 1-hop neighbors of \"z\".\n   7.  For each interface \"x\" in \"N2\" where\
    \ \"N1(x)\" has only one member,\n       select \"x\" as an MPR:\n       A.  Add\
    \ \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\n       B.  For each\
    \ interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\" and\n           delete\
    \ \"N1(z)\".\n       C.  For each interface \"y\" in \"N1\", remove any interfaces\
    \ in\n           \"N2(x)\" from \"N2(y)\".\n   8.  While \"N2\" is not empty,\
    \ select the interface \"x\" in \"N1\" with\n       the largest router priority\
    \ that has the number of members in\n       \"N_2(x)\" as an MPR:\n       A. \
    \ Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\n       B.  For each\
    \ interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\n       C.  For each\
    \ interface \"y\" in \"N1\", remove any interfaces in\n           \"N2(x)\" from\
    \ \"N2(y)\".\n   After the set of routers \"MPR\" is selected, router \"n_0\"\
    \ must signal\n   its selections to its neighbors.  With NHDP, this is done by\
    \ using\n   the MPR Address Block TLV to mark selected neighbor addresses in\n\
    \   NHDP_HELLO messages.  Neighbors MUST record their MPR selection\n   status\
    \ and the previous hop address (e.g., link or MAC layer) of the\n   selector.\
    \  Note these steps are re-evaluated upon neighborhood status\n   changes.\n"
- title: Appendix C.  Multipoint Relay Connected Dominating Set (MPR-CDS)
  contents:
  - "Appendix C.  Multipoint Relay Connected Dominating Set (MPR-CDS)\n          \
    \   Algorithm\n   The MPR-CDS algorithm is an extension to the basic S-MPR election\n\
    \   algorithm that results in a shared (non-source-specific) SMF CDS.\n   Thus,\
    \ its forwarding rules are not dependent upon previous hop\n   information, similar\
    \ to E-CDS.  An overview of the MPR-CDS selection\n   algorithm is provided in\
    \ [MPR-CDS].\n   It is RECOMMENDED that the SMF_TYPE Message TLV be included in\n\
    \   NHDP_HELLO messages that are generated by routers conducting MPR-CDS\n   SMF\
    \ operation.\n"
- title: C.1.  MPR-CDS Relay Set Selection Overview
  contents:
  - "C.1.  MPR-CDS Relay Set Selection Overview\n   The MPR-CDS relay set selection\
    \ process is based upon the MPR\n   selection process of the S-MPR algorithm with\
    \ the added refinement of\n   a distributed technique for subsequently down-selecting\
    \ to a common\n   reduced, shared relay set.  A router ordering (or \"prioritization\"\
    )\n   metric is used as part of this down-selection process; like the E-CDS\n\
    \   algorithm, this metric can be based upon router address(es) or some\n   other\
    \ unique router identifier (e.g., Router ID based on largest\n   address contained\
    \ within the \"Neighbor Address List\") as well as an\n   additional Router Priority\
    \ measure, if desired.  The process for MPR-\n   CDS relay selection is as follows:\n\
    \   1.  First, MPR selection per the S-MPR algorithm is conducted, with\n    \
    \   selectors informing their MPRs (via NHDP) of their selection.\n   2.  Then,\
    \ the following rules are used on a distributed basis by\n       selected routers\
    \ to possibly deselect themselves and thus jointly\n       establish a common\
    \ set of shared SMF relays:\n       A.  If a selected router has a larger \"RtrPri()\"\
    \ than all of its\n           1-hop symmetric neighbors, then it acts as a relay\
    \ for all\n           multicast traffic, regardless of the previous hop.\n   \
    \    B.  Else, if the 1-hop symmetric neighbor with the largest\n           \"\
    RtrPri()\" value has selected the router, then it also acts\n           as a relay\
    \ for all multicast traffic, regardless of the\n           previous hop.\n   \
    \    C.  Otherwise, it deselects itself as a relay and does not\n           forward\
    \ any traffic unless changes occur that require re-\n           evaluation of\
    \ the above steps.\n   This technique shares many of the desirable properties\
    \ of the E-CDS\n   technique with regards to compatibility with multicast sources\
    \ not\n   participating in NHDP and the opportunity for statically configured\n\
    \   CF routers to be present, regardless of their participation in NHDP.\n"
- title: C.2.  MPR-CDS Forwarding Rules
  contents:
  - "C.2.  MPR-CDS Forwarding Rules\n   The forwarding rules for MPR-CDS are similar\
    \ to those for E-CDS.  Any\n   SMF router that has selected itself as a relay\
    \ performs DPD and\n   forwards all non-duplicative multicast traffic allowed\
    \ by the present\n   forwarding policy.  Packet previous hop knowledge is not\
    \ needed for\n   forwarding decisions when using MPR-CDS.\n   1.  Upon packet\
    \ reception, DPD is performed.  Note that MPR-CDS\n       requires one duplicate\
    \ table for the set of interfaces associated\n       with the relay set selection.\n\
    \   2.  If the packet is a duplicate, no further action is taken.\n   3.  If the\
    \ packet is non-duplicative:\n       A.  A DPD entry is added for the packet identifier\n\
    \       B.  The packet is forwarded out to all interfaces associated with\n  \
    \         the relay set selection.\n   As previously mentioned, even packets sourced\
    \ (or relayed) by routers\n   not participating in NHDP and/or the MPR-CDS relay\
    \ set selection may\n   be forwarded by MPR-CDS forwarders without problem.  A\
    \ particular\n   deployment MAY choose to not forward packets from sources or\
    \ relays\n   that have been explicitly identified via NHDP or other means as\n\
    \   operating as part of a different relay set algorithm (e.g., S-MPR) to\n  \
    \ allow coexistent deployments to operate correctly.\n"
- title: C.3.  MPR-CDS Neighborhood Discovery Requirements
  contents:
  - "C.3.  MPR-CDS Neighborhood Discovery Requirements\n   The neighborhood discovery\
    \ requirements for MPR-CDS have commonality\n   with both the S-MPR and E-CDS\
    \ algorithms.  MPR-CDS selection\n   operation requires 2-hop neighbor knowledge\
    \ as provided by NHDP\n   [RFC6130] or from external sources.  Unlike S-MPR operation,\
    \ there is\n   no need for associating link-layer address information with 1-hop\n\
    \   neighbors since MPR-CDS forwarding is independent of the previous hop\n  \
    \ similar to E-CDS forwarding.\n   To advertise an optional Router Priority value\
    \ or \"WILLINGNESS\", an\n   originating router may use the Message TLV of type\
    \ SMF_TYPE:MPR-CDS,\n   which shares a common <value> format with both SMF_TYPE:E-CDS\n\
    \   (Table 14) and SMF_TYPE:S-MPR (Table 16).\n   MPR-CDS only requires 1-hop\
    \ knowledge of Router Priority for correct\n   operation.  In the S-MPR phase\
    \ of MPR-CDS selection, MPRs are\n   dynamically determined by each router, and\
    \ selections MUST be\n   advertised and dynamically updated using NHDP or an equivalent\n\
    \   protocol or mechanism.  The <value> field of the SMF_NBR_TYPE:MPR-CDS\n  \
    \ type TLV shares a common format with SMF_NBR_TYPE:S-MPR (Table 17) to\n   convey\
    \ MPR selection.\n"
- title: C.4.  MPR-CDS Selection Algorithm
  contents:
  - "C.4.  MPR-CDS Selection Algorithm\n   This section describes an algorithm for\
    \ the MPR-CDS selection\n   process.  Note that the selection described is with\
    \ respect to a\n   specific interface of the router performing selection, and\
    \ other\n   router interfaces referenced are reachable from this reference router\n\
    \   interface.  An ordered tuple of Router Priority and Router ID is used\n  \
    \ in MPR-CDS relay set selection.  The Router ID value should be set to\n   the\
    \ largest advertised address of a given router; this information is\n   provided\
    \ to one-hop neighbors via NHDP by default.  Precedence is\n   given to the Router\
    \ Priority portion, and the Router ID value is used\n   as a tiebreaker.  The\
    \ evaluation of this tuple is referred to as\n   \"RtrPri(n)\" in the description\
    \ below where \"n\" references a specific\n   router.  Note that it is possible\
    \ that the Router Priority portion\n   may be optional and the evaluation of \"\
    RtrPri()\" be solely based upon\n   the unique Router ID.  Since there MUST NOT\
    \ be any duplicate address\n   values among SMF routers, a comparison of \"RtrPri(n)\"\
    \ between any two\n   routers will always be an inequality.  The following steps,\
    \ repeated\n   upon any changes detected within the 1-hop and 2-hop neighborhood,\n\
    \   describe a basic algorithm for conducting MPR-CDS selection for a\n   router\
    \ interface \"n0\":\n   1.  Perform steps 1-8 of Appendix B.4 to select MPRs from\
    \ the set of\n       1-hop neighbors of \"n0\" and notify/update neighbors of\n\
    \       selections.\n   2.  Upon being selected as an MPR (or any change in the\
    \ set of\n       routers selecting \"n0\" as an MPR):\n       A.  If no neighbors\
    \ have selected \"n0\" as an MPR, \"n0\" does not\n           act as a relay,\
    \ and no further steps are taken until a change\n           in neighborhood topology\
    \ or selection status occurs.\n       B.  Determine the router \"n1_max\" that\
    \ has the maximum \"RtrPri()\"\n           of all 1-hop neighbors.\n       C.\
    \  If \"RtrPri(n0)\" is greater than \"RtrPri(n1_max)\", then \"n0\"\n       \
    \    selects itself as a relay for all multicast packets.\n       D.  Else, if\
    \ \"n1_max\" has selected \"n0\" as an MPR, then \"0\"\n           selects itself\
    \ as a relay for all multicast packets.\n       E.  Otherwise, \"n0\" does not\
    \ act as a relay.\n   It is possible to extend this algorithm to consider neighboring\
    \ SMF\n   routers that are known to be statically configured for CF (always\n\
    \   relaying).  The modification to the above algorithm is to process\n   such\
    \ routers as having a maximum possible Router Priority value.\n   This is the\
    \ same as the case for participating routers that have been\n   configured with\
    \ a S-MPR \"WILLINGNESS\" value of \"WILL_ALWAYS\".  It is\n   expected that routers\
    \ configured for CF and participating in NHDP\n   would indicate their status\
    \ with use of the SMF_TYPE TLV type in\n   their NHDP_HELLO message TLV block.\
    \  It is important to note,\n   however, that CF routers will not select MPR routers\
    \ and therefore\n   cannot guarantee connectedness.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Joseph Macker (editor)\n   NRL\n   Washington, DC  20375\n\
    \   USA\n   EMail: macker@itd.nrl.navy.mil\n"
