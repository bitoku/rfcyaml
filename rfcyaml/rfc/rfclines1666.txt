This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing the configuration, monitoring and control of Physical Units (PUs) and Logical Units (LUs) in an SNA environment.
PUs and LUs are two types of Network Addressable Units (NAUs) in the logical structure of an SNA network.
NAUs are the origination or destination points for SNA data streams.
This memo identifies managed objects for PU Type 1.0, 2.0 and Type 2.1 and LU Type 0, 1, 2, 3, 4, 7.
The generic objects defined here can also be used to manage LU 6.2 and any LU LU session.
The SNA terms and overall architecture are documented in [1].
The SNMPv2 Network Management Framework
Network Management Framework consists of four major components.
[3] defines MIB II, the core set of managed objects for the Internet suite of protocols.
RFC 1445 [4] which defines the administrative and other architectural aspects of the framework.
[5] which defines the protocol used for network access to managed objects.
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Object Definitions Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1) defined in the SMI (RFC 1442 [2]).
In particular, each object type is named by an OBJECT IDENTIFIER, an administratively assigned name.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the descriptor, to refer to the object type.
This document identifies the proposed set of objects for managing the configuration, monitoring and control of Physical Units (PUs) and Logical Units (LUs) in an SNA environment.
In this document, the name "Node" is used to describe SNA Node Type 1.0, 2.0 and Type 2.1 and the name "LU" is used to describe Logical Unit of Type 0, 1, 2, 3, 4, 7 and 6.2.
Note however that only objects common to all PU and LU types are covered here and
LU 6.2 specific objects are not included in this MIB module.
Creation/deletion of table entries associating Node instances with link instances via the RowStatus object in the snaNodeLinkAdminTable    Activation/Deactivation of Nodes via the AdminState object in the snaNodeAdminTable    Deactivation of sessions via the AdminState object in the snaLuSessnTable    Monitoring and modification of parameters related to Nodes, LUs, and Node/link associations    Monitoring of session operational parameters
PU2.0  operational statistics    Session operational statistics
Node state change   Node activation failure
LU state change   LU session BIND failure
Applying MIB II to managing SNA NAUs
This section identifies how MIB II objects, specifically the MIB II system group will be used in SNMP based management of SNA NAUs.
The MIB II system group applies to the SNMP Agent.
The following object is from the MIB II system group: sysUpTime:  clock in the SNMP Agent/proxy Agent; expressed in TimeTicks (1/100s of a seconds).
This MIB module uses the TimeStamp TEXTUAL CONVENTION which is defined in the SNMPv2 Textual Conventions (RFC 1443 [6]) as "the value of MIB II's sysUpTime object when a specific occurrence happens.
" The specific occurrences related to SNA NAU management are defined in this MIB module.
snaLu   objects related to LU definition, monitoring and control.
snaMgtTools  objects related to specific management tools well known in SNA environment.
These groups are described below in more detail.
The objects related to PUs and LUs are organized into two types of tables: the Admin and Oper tables.
The "Admin" table contains parameters which are used by a Management Station to affect the operation of the SNA service.
Some parameters are used to initialize and configure the SNA service at the next startup, while others can take effect immediately.
A Management Station can dynamically define SNA resources (PUs, LUs) by creating new entries in the Admin table.
It uses a special object, AdminState, to control the desired state of a defined PU or LU Session resource.
Note that this MIB does not allow the manipulation of an LU's operational state.
The "Oper" table is an extension (augment) of the corresponding Admin table.
It contains objects which correspond to the values of parameters currently used by the SNA system.
snaNode group The snaNode group consists of the following tables: 1)
This table contains objects which describe the configuration parameters of an SNA Node.
Link specific configuration objects are contained in a separate MIB module (e.g., the SNA DLC MIB module) corresponding to link type.
Entries in this table can be created, modified and deleted by either an Agent or a Management Station.
The snaNodeAdminRowStatus object describes the status of an entry and is used to change the status of that entry.
The snaNodeAdminState object describes the desired operational state of a Node and is used to change the operational state of a Node.
How an Agent or a Management Station obtains the initial value of each object at creation time is an implementation specific issue not addressed in this memo.
For each entry in the snaNodeAdminTable, there is a corresponding entry in the snaNodeOperTable.
While the objects in this table describe the desired or configured operational values of the SNA Node, the actual runtime values are contained in snaNodeOperTable.
Each row contains runtime and operational state variables for a Node.
It is an extension of snaNodeAdminTable and as such uses the same index.
The rows in this table are created by an Agent as soon as the entry in the Admin Table become 'active'.
The entries in this table cannot be modified by a Management Station.
3) snaPu20StatsTable Each row contains statistics variables (counters) for a PU 2.0.
The entries in this table are indexed by snaNodeAdminIndex.
The rows in this table are created by an Agent as soon as the corresponding entry in the snaNodeAdminTable becomes 'active'.
This table contains all references to link  specific tables.
If a Node is configured with multiple links, then it will have multiple entries in this table.
The entries in this table can be generated initially, after startup of SNA service, by the Agent which uses information from Node configuration file.
Subsequent modifications of parameters, creation of new Node link entries and deletion of entries is possible.
The modifications to this table can be saved in the Node configuration file for the next startup (i.e., restart or next initialization) of SNA service, but the mechanism for this function is not defined in this memo.
Each entry contains the configuration information that associates a Node instance to one link instance.
The entries are indexed by snaNodeAdminIndex and snaNodeLinkAdminIndex.
This table contains all references to link  specific tables for operational parameters.
If the Node is configured for multiple links, then it will have multiple entries in this table.
This table augments the snaNodeLinkAdminTable.
Two traps are defined for Nodes.
The snaNodeStateChangeTrap indicates that the operational state of a Node has changed.
The snaNodeActFailTrap indicates the failure of ACTPU received from host.
The snaLu group consists of the following tables: 1
) snaLuAdminTable Table containing LU configuration information.
The rows in this table can be created and deleted by a Management Station.
Only objects which are common to all types of LUs are included in this table.
The entries are indexed by Node and LU indices.
Table containing dynamic runtime information and control variables relating to LUs.
Only objects which are common to all types of LUs are included in this table.
This table augments the snaLuAdminTable.
This is a table containing objects which describe the operational state of LU LU sessions.
Only objects which are common to all types of LU LU sessions are included in this table.
When a session's snaLuSessnOperState value changes to entry in the session table is created by the Agent.
When the snaLuSessionOperState value changes to will be removed from the session table by the Agent.
Entries are indexed by Node, local LU, remote LU and session indices.
Table containing dynamic statistics information relating to LU LU sessions.
The entries in this table augment the entries in the snaLuSessnTable and cannot be created by a Management Station.
Two traps are defined for LUs.
The snaLuStateChangeTrap indicates that the operational state of an LU has changed.
The snaLuSessnBindFailTrap indicates the failure of a BIND request.
This is an optional group.
The snaMgtTools group consists of the following table:
Each row contains Response Time Monitor (RTM) variables for an LU.
The table is indexed by Node and LU indices.
Entries correspond to LU 2 entries in the snaLuAdminTable.
A Management Station can read collection of RTM statistics for a given LU.
3.2.4.  Conformance statement Compliance of the SNMPv2 management entity to the SNANAU MIB is defined in terms of following conformance units called groups.
Unconditionally mandatory groups: snaNodeGroup, snaLuGroup,
snaPu20Group mandatory only for those entities which implement PU type 2.0.
The snaMgtToolsRtmGroup mandatory only for those entities which implement LU type 2 and RTM.
Refinement of requirements for objects access:
an Agent which does not implement row creation for snaNodeAdminTable snaNodeLinkAdminTable and snaLuAdminTable must at least support object modification requests (i.e., read write access instead of read create).
This section describes the mechanism used for row creation in the Admin tables and also presents critical state transitions for PUs, LUs and Sessions.
The row creation mechanism for the Admin tables in this MIB module is based on the use of the RowStatus object.
Restriction of some operations for specific tables are described in each table.
In particular, before accepting the 'destroy' value for an entry, an Agent has to verify the operational state of the corresponding entry in the Oper table.
The following state diagram models the state transitions for Nodes.
When a row is created by a Management Station, an Agent creates the Oper table entry for that Node with the OperState equal to 'inactive'.
An Agent cannot accept any operations for that Node until the RowStatus is set to 'active'.
I stopping I or inactive
The following state diagram models state transitions for Sessions.
When a session goes to the 'unbound' state [1], the corresponding entry will be removed from the Session table by the Agent.
This MIB module contains objects necessary   for management of the following SNA devices: PU types 1.0, 2.0, 2.1   and LU types 0, 1, 2, 3, 4, 7.
It also contains generic objects   which can be used to manage LU 6.2.
Naming conventions in this document:   The following names are used in object descriptors according to   SNA conventions.
The name 'PU' or 'Node' is used to describe Node type 1.0, 2.0 or   2.1.
The name 'LU' is used to describe Logical Unit of type 0,1,2,3,   4,7 or 6.2.
IMPORTS DisplayString, RowStatus, TimeStamp, InstancePointer FROM SNMPv2 TC Counter32,
Integer32, OBJECT TYPE, MODULE IDENTITY, NOTIFICATION TYPE FROM SNMPv2
SMI MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2 CONF;
Avenue Lachine, Que  H8T 3H7 Canada
Bellcore 331 Newman Springs Road Red Bank, NJ 07701
Novell 890 Ross Drive Sunnyvale, CA 94089
This is the MIB module for objects used to manage SNA devices."
It contains Managed Objects related to any type of Node and   some specific objects for Node Type 2.0.
The following table contains generic Node configuration   parameters.
"This table contains objects which describe the configuration parameters for an SNA Node.
Link specific configuration objects are contained in a separate MIB module (e.g., SNA DLC MIB) corresponding to the link type.
The table snaNodeAdminLinkTable contains objects which identify the relationship between node instances and link instances.
The entries (i.e., rows) in this table can be created by either an Agent or a Management Station.
The Management Station can do this through setting the appropriate value in the snaNodeAdminRowStatus.
The snaNodeAdminRowStatus object describes the status of an entry and is used to change the status of an entry.
The entry is deleted by an Agent based on the value of the snaNodeAdminRowStatus.
The snaNodeAdminState object describes the desired operational state of a Node and is used to change the operational state of a Node.
For example, such information may be obtained from a configuration file.
How an Agent or a Management Station obtains the initial value of each object at creation time is an implementation specific issue.
For each entry in this table, there is a corresponding entry in the snaNodeOperTable.
While the objects in this table describe the desired or configured operational values of the SNA Node, the actual runtime values are contained in snaNodeOperTable."
{ snaNode 1 } snaNodeAdminEntry OBJECT TYPE SYNTAX
"An entry contains the configuration parameters for one SNA Node instance.
The objects in the entry have read create access.
An entry can be created, modified or deleted.
The object snaNodeAdminRowStatus is used (i.e., set) to create or delete a row entry.
snaNodeAdminHostDescription DisplayString, snaNodeAdminStopMethod INTEGER, snaNodeAdminState INTEGER, snaNodeAdminRowStatus RowStatus
current DESCRIPTION "Index used to uniquely identify each Node instance.
If an Agent creates the entry, then it will assign this number otherwise a Management Station generates a random number when it reserves the entry for creation."
"The value indicates the desired name of the Node for use during Node activation.
In Type 2.1 networks, this is a fully qualified name, meaning that the Node name is preceded by the NetId (if present) with a period as the delimiter.
A write operation to this object will not change the operational value reflected in snaNodeOperName until the Node has been re activated (e.g., after the next initialization of the SNA services)."
INTEGER { other(1), pu10(2), pu20(3), t21len(4), endNode(5), networkNode(6) }
"The value indicates the type of SNA Node.
A write operation to this object will not change the operational value reflected in snaNodeOperType until the Node has been re activated (e.g., after the next initialization of the SNA services)."
, format1(2), format3(3) } MAX ACCESS  read create STATUS
"The value indicates the type of XID format used for this Node.
Note that there is no format type 2.
A write operation to this object will not change the operational value reflected in snaNodeOperAdminXidFormat until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"The value indicates the block number for this Node instance.
It is the first 3 hexadecimal digits of the SNA Node id.
A write operation to this object will not change the operational value reflected in snaNodeOperBlockNum until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"The value indicates the ID number for this Node instance.
This is the last 5 hexadecimal digits of the SNA Node id.
A write operation to this object will not change the operational value reflected in snaNodeOperIdNum until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"The value indicates how the Node should be activated for the first time.
The values have the following meanings: other (1)  may be used for proprietary methods not listed in this enumeration, startup (2) at SNA services' initialization time (this is the default), demand (3) only when LU is requested by application, or onlyMS (4) by a Management Station only.
A  write operation to this object may immediately change the operational value reflected in snaNodeOperEnablingMethod depending on the Agent implementation.
If the Agent implementation accepts immediate changes, then the behavior of the Node changes immediately and not only after the next system startup of the SNA services.
An immediate change may only apply when the current value 'demand (3)' is changed to 'onlyMS (4)' and vice versa."
"The value indicates the desired default method used to deactivate LUs for this Node For LU6.2s, 'unbind(1)' is the only valid value.
terminate the LU LU session by sending an SNA UNBIND request.
termself(2) terminate the LU LU session by sending an SNA TERM SELF (Terminate Self) request on the SSCP LU session.
The SSCP will inform the remote session LU partner to send an UNBIND request to terminate the session.
terminate the LU LU session by sending an SNA RSHUTD (Request ShutDown) request to the remote session LU partner.
The remote LU will then send an UNBIND request to terminate the session.
terminate the LU LU session by sending either an SNA LUSTAT (LU Status) request on the LU LU session or an SNA NOTIFY request on the SSCP LU session indicating that the LU has been powered off.
Sending both is also acceptable.
The result should be that the remote session LU partner will send an UNBIND to terminate the session.
The default behavior indicated by the value of this object may be overridden for an LU instance.
The override is performed by setting the snaLuAdminTerm object instance in the snaLuAdminTable to the desired value.
A write operation to this object may immediately change the operational value reflected in snaNodeOperLuTermDefault depending on the Agent implementation."
"The maximum number of LUs that may be activated for this Node.
For PU2.1, this object refers to the number of dependent LUs.
A write operation to this object will not change the operational value reflected in snaNodeOperMaxLu until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"The value identifies the remote host associated with this Node.
Id's may not be unique across hosts, the host description is required to uniquely identify the SSCP.
This object is only applicable to PU2.0 type Nodes.
If the remote host is unknown, then the value is the null string.
A write operation to this object may immediately change the operational value reflected in snaNodeOperHostDescription depending on the Agent implementation."
"The value indicates the desired method to be used by the Agent to stop a Node (i.e., change the Node's operational state to inactive(1) ).
The values have the following meaning: other (1) used for proprietary methods not listed in this enumeration.
normal(2) deactivate only when there is no more activity on this Node
(i.e., all data flows have been completed and all sessions have been terminated).
immed(3)  deactivate immediately regardless of current activities on this Node.
Wait for deactivation responses (from remote Node) before changing the Node state to inactive.
deactivate immediately regardless of current activities on this Node.
Do not wait for deactivation responses (from remote Node) before changing the Node state to inactive.
A write operation to this object may immediately change the operational value reflected in snaNodeOperStopMethod depending on the Agent implementation."
{ snaNodeAdminEntry 11 } snaNodeAdminState OBJECT
INTEGER { inactive (1), active (2) } MAX ACCESS  read create
"The value indicates the desired operational state of the SNA Node.
This object is used by the Management Station to activate or deactivate the Node.
If the current value in snaNodeOperState is 'active (2)', then setting this object to 'inactive (1)' will initiate the Node shutdown process using the method indicated by snaNodeOperStopMethod.
If the current value in snaNodeOperState is 'inactive (1)', then setting this object to 'active (2)' will initiate the Node's activation.
A Management Station can always set this object to 'active (2)' irrespective of the value in the snaOperEnablingMethod."
RowStatus MAX ACCESS  read create
"This object is used by a Management Station to create or delete the row entry in the snaNodeAdminTable following the RowStatus textual convention.
Upon successful creation of the row, an Agent automatically creates a corresponding entry in the snaNodeOperTable with snaNodeOperState equal to 'inactive (1)'.
Row deletion can be Management Station or Agent initiated: (a)
The Management Station can set the value to 'destroy (6)' only when the value of snaNodeOperState of this Node instance is 'inactive (1)'.
The Agent will then delete the rows corresponding to this Node instance from the snaNodeAdminTable and the snaNodeOperTable.
The Agent detects that a row is in the 'notReady (3)' state for greater than a default period of 5 minutes.
(c) All rows with the snaNodeAdminRowStatus object's value of 'notReady (3)' will be removed upon the next initialization of the SNA services."
read only STATUS  current DESCRIPTION
"The value indicates the timestamp (e.g., the Agent's sysUpTime value) of the last change made to any object in the snaNodeAdminTable, including row deletions/additions (e.g., changes to snaNodeAdminRowStatus values).
This object can be used to reduce frequent retrievals of the snaNodeAdminTable by a Management Station.
It is expected that a Management Station will periodically poll this object and compare its current value with the previous one.
A difference indicates that some Node configuration information has been changed.
Only then will the Management Station retrieve the entire table."
SEQUENCE OF SnaNodeOperEntry MAX ACCESS
"This table contains the dynamic parameters which have read only access.
These objects reflect the actual status of the Node.
The entries in this table cannot be created or modified by a Management Station.
This table augments the snaNodeAdminTable."
"The entry contains parameters which describe the state of one Node.
The entries are created by the Agent.
They have read only access."
snaNodeOperHostSscpId OCTET STRING, snaNodeOperStartTime TimeStamp, snaNodeOperLastStateChange TimeStamp, snaNodeOperActFailures Counter32, snaNodeOperActFailureReason INTEGER
MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the current name of the Node.
In Type 2.1 networks, this is a fully qualified name, meaning that the Node name is preceded by the NetId (if present) with a period as the delimiter."
INTEGER { other(1), pu10(2), pu20(3)
, t21LEN(4), endNode(5), networkNode(6) }
read only STATUS  current DESCRIPTION
"The value identifies the current type of the Node."
INTEGER  { format0 (1), format1 (2), format3 (3)
} MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the type of XID format currently used for this Node.
} snaNodeOperBlockNum OBJECT TYPE SYNTAX DisplayString (SIZE(3))
MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the block number for this Node instance.
MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the ID number for this Node instance.
This is the last 5 hexadecimal digits of the SNA Node id."
read only STATUS  current DESCRIPTION
"The value indicates how the Node is activated for the first time.
The values have the following meanings: other (1)   not at boot time
, LU activation or by a Management Station; startup (2) at SNA services' initialization time (this is the default), demand (3)  only when LU is requested by application, onlyMS (4) by a network Management Station only."
INTEGER { unbind (1), termself (2), rshutd (3), poweroff (4) } MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the default method used to deactivate LUs for this Node.
For LU6.2s, 'unbind(1)' is the only valid value.
terminate the LU LU session by sending an SNA UNBIND request.
termself(2) terminate the LU LU session by sending an SNA TERM SELF (Terminate Self) request on the SSCP LU session.
The SSCP will inform the remote session LU partner to send an UNBIND request to terminate the session.
terminate the LU LU session by sending an SNA RSHUTD (Request ShutDown) request to the remote session LU partner.
The remote LU will then send an UNBIND request to terminate the session.
terminate the LU LU session by sending either an SNA LUSTAT (LU Status) request on the LU LU session or an SNA NOTIFY request on the SSCP LU session indicating that the LU has been powered off.
Sending both is also acceptable.
The result should be that the remote session LU partner will send an UNBIND to terminate the session.
This object describes the default behavior for this Node; however, it is possible that for a specific LU the behavior indicated by the snaLuOperTerm object is different."
read only STATUS  current DESCRIPTION
"This value identifies the current, maximum number of LUs that are activated for this Node.
For PU2.1, this object refers to the number of dependent LUs."
MAX ACCESS  read only STATUS  current DESCRIPTION
"This value identifies the remote host currently associated with this Node.
Id's may not be unique across hosts, the host description is required to uniquely identify the SSCP."
"This value identifies the current Node shutdown method to be used by the Agent to stop the Node.
When the Agent changes the Node's state to 'inactive (1)', the Agent must use the shutdown method indicated by this object.
The values have the following meaning: other (1) proprietary method not listed in this enumeration
normal(2) deactivate only when there is no more activity on this Node
(i.e., all data flows have been completed and all sessions have been terminated).
immed(3)  deactivate immediately regardless of current activities on this Node.
Wait for deactivation responses (from remote Node) before changing the Node state to inactive.
deactivate immediately regardless of current activities on this Node.
Do not wait for deactivation responses (from remote Node) before changing the Node state to inactive.
Note that a write operation to snaNodeAdminOperStopMethod may immediately change the value of snaNodeOperStopMethod depending on the Agent implementation."
read only STATUS  current DESCRIPTION
"The current state of the Node.
The values have the following meanings: inactive (1), a row representing the Node has been created in the AdminTable and,
the Node is ready for activation  or
an active Node has been stopped  or  a waiting Node has returned to the inactive state.
waiting (3), a request to have the Node activated has been issued, and the Node is pending activation.
active (2), the Node is ready and operating.
stopping (4), the request to stop the Node has been issued while the StopMethod normal or immediate is used."
MAX ACCESS  read only STATUS  current DESCRIPTION
"This value identifies the current SSCP Id associated with the Node.
This object is only applicable to PU 2.0s.
If the Node is not a PU 2.0 type, then this object contains a zero length string."
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
"This value identifies the number of failed Node activation attempts."
"The value indicates the reason for the activation failure.
The value 'other (1)' indicates a reason not listed in the enumeration.
This object will be sent in the trap snaNodeActFailTrap."
read only STATUS  current DESCRIPTION
"The timestamp (e.g., the Agent's sysUpTime value) at the last change made to any object in the snaNodeOperTable, including row deletions/additions made as a result of changes to the snaNodeAdminRowStatus object.
This object can be used to reduce frequent retrievals of the snaNodeOperTable by a Management Station.
It is expected that a Management Station will periodically poll this object and compare its current value with the previous one.
A difference indicates that some Node operational information has been changed.
Only then will the Management Station retrieve the entire table."
"This table contains the dynamic parameters which have read only access.
The entries in this table correspond to PU 2.0 entries in the snaNodeOperTable and cannot be created by a Management Station."
"The entry contains parameters which describe the statistics for one PU 2.0.
They have read only access.
The counters represent traffic for all kinds of sessions: LU LU, SSCP PU, SSCP LU.
Each Node of PU Type 2.0 from the snaNodeAdminTable has one entry in this table and the index used here has the same value as snaNodeAdminIndex of that PU.
The entry is created by the Agent.
SEQUENCE { snaPu20StatsSentBytes Counter32, snaPu20StatsReceivedBytes Counter32, snaPu20StatsSentPius Counter32, snaPu20StatsReceivedPius Counter32, snaPu20StatsSentNegativeResps Counter32, snaPu20StatsReceivedNegativeResps Counter32, snaPu20StatsActLus Gauge32, snaPu20StatsInActLus Gauge32, snaPu20StatsBindLus Gauge32 } snaPu20StatsSentBytes OBJECT TYPE SYNTAX
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
"The number of LUs on this PU which have received and responded to ACTLU from the host.
read only STATUS  current DESCRIPTION
"The number of LUs on this PU which have not received an ACTLU from the host.
This is possible if the number of configured LUs exceeds that on the host."
read only STATUS  current DESCRIPTION
It is used for configuration purposes.
"This table contains the references to link specific tables.
If a Node is configured for multiple links, then the Node will have multiple entries in this table.
The entries in this table can be generated initially, after initialization of SNA service, by the Agent which uses information from Node configuration file.
Subsequent modifications of parameters, creation of new Nodes link entries and deletion of entries is possible.
The modification to this table can be saved in the Node configuration file for the next initialization of SNA service, but the mechanism for this function is not defined here."
"Entry contains the configuration information that associates a Node instance to one link instance.
The objects in the entry have read create access.
Entry can be created, modified or deleted.
The object snaNodeLinkAdminRowStatus is used (set) to create or delete an entry.
The object snaNodeLinkAdminSpecific can be set later, after the entry has been created.
"This value is used to index the instances of objects.
If an Agent creates the entry, then it will assign this number otherwise a Management Station generates a random number when it reserves the entry for creation."
"This value points to the row in the table containing information on the link instance.
(e.g., the sdlcLSAdminTable of the SNA DLC MIB module)."
"This value identifies the maximum number of octets that can be exchanged by this Node in one Path Information Unit (PIU)."
RowStatus MAX ACCESS  read create
"This object is used by a Management Station to create or delete the row entry in the snaNodeLinkAdminTable.
To activate a row, a Management Station sets the value to 'active (1)' or 'notReady (3)'.
Upon successful creation of the row, the Agent automatically creates a corresponding entry in the snaNodeLinkOperTable.
Row deletion can be Management Station or Agent initiated: (a)
The Management Station can set the value to 'destroy (6)' only when the value of snaNodeLinkOperState of this Link instance is 'inactive (1)'.
The Agent will then delete the row corresponding to this Link instance from snaNodeLinkOperTable and from snaNodeLinkAdminTable.
The Agent detects that a row is in the 'notReady (3)' state for greater than a default period of 5 minutes.
The Agent will not include a row with RowStatus  'notReady (3)', after SNA system re initialization (e.g., reboot)."
read only STATUS  current DESCRIPTION
"The timestamp (e.g., the Agent's sysUpTime value) at the last change made to any object in the snaNodeLinkAdminTable, including row deletions/additions (i.e., changes to the snaNodeLinkAdminRowStatus object).
This object can be used to reduce frequent retrievals of the snaNodeLinkAdminTable by a Management Station.
It is expected that a Management Station will periodically poll this object and compare its current value with the previous one.
A difference indicates that some Node operational information has been changed.
Only then will the Management Station retrieve the entire table."
It provides the current status.
"This table contains all references to link specific tables for operational parameters.
If a Node is configured for multiple links, then the Node will have multiple entries in this table.
This table augments the snaNodeLinkAdminTable."
{ snaNode 8 } snaNodeLinkOperEntry OBJECT TYPE SYNTAX
"Entry contains all current parameters for one Node link.
The objects in the entry have read only access."
"This value points to the row in the table containing information on the link instance.
(e.g., the sdlcLSOperTable of the SNA DLC MIB module)."
read only STATUS  current DESCRIPTION
"Maximum number of octets that can be exchanged by this Node in one Path Information Unit (PIU)."
read only STATUS  current DESCRIPTION
"The timestamp of the last change made to any object in the snaNodeLinkOperTable, including row deletions/additions.
This object can be used to reduce frequent retrievals of the snaNodeLinkOperTable by a Management Station.
It is expected that a Management Station will periodically poll this object and compare its current value with the previous one.
A difference indicates that some Node operational information has been changed.
Only then will the Management Station retrieve the entire table."
, snaNodeOperState } STATUS  current DESCRIPTION
"This trap indicates that the operational state (i.e., value of the snaNodeOperState object) of a Node has changed.
The following variables are returned: snaNodeOperName current name of the Node, with the instance identifying the Node; and, snaNodeOperState current state after the change."
TYPE OBJECTS  { snaNodeOperName, snaNodeOperState,
snaNodeOperActFailureReason } STATUS  current DESCRIPTION
"This trap indicates a Node activation failure.
The value of snaNodeOperState indicates the current state after the activation attempt.
The value of snaNodeOperActFailureReason indicates the failure reason."
The following table contains LU configuration parameters.
SEQUENCE OF SnaLuAdminEntry MAX ACCESS
"This table contains LU configuration information.
The rows in this table can be created and deleted by a Management Station.
Only objects which are common to all types of LUs are included in this table."
"Contains configuration variables for an LU.
snaLuAdminLocalAddress OCTET STRING, snaLuAdminDisplayModel INTEGER, snaLuAdminTerm INTEGER, snaLuAdminRowStatus RowStatus } snaLuAdminLuIndex OBJECT
"This value identifies the unique index for an LU instance within a Node."
"This value identifies the user configurable name for this LU.
If a name is not assigned to the LU, then this object contains a zero length string.
A write operation to this object will not change the operational value reflected in snaLuOperName until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"This value identifies the SNA LU name used in exchange of SNA data.
A write operation to this object will not change the operational value reflected in snaLuOperSnaName until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"This value identifies the LU type.
A write operation to this object will not change the operational value reflected in snaLuOperAdminType until the Node has been re activated (e.g., after the next initialization of the SNA services)."
"This value identifies whether the LU is dependent or independent.
A write operation to this object will not change the operational value reflected in snaLuOperDepType until the Node has been re activated (e.g., after the next initialization of the SNA services)."
The local address for this LU is a byte with a value ranging from 0 to 254.For dependent LUs, this value ranges from 1 to 254 and for independent LUs this value is always 0.
A write operation to this object will not change the operational value reflected in snaLuOperLocalAddress until the Node has been re activated (e.g., after the next initialization of the SNA services)."
INTEGER { invalid(1), model2A(2), model2B(3), model3A(4), model3B(5), model4A(6), model4B(7), model5A(8), model5B(9), dynamic(10) } MAX ACCESS  read create
"The value of this object identifies the  model type and screen size of the terminal connected to the host.
This is only valid for LU Type 2.
The values have the following meaning: model2A(2
(24 rows x 80 cols) with base attributes model2B(3)
(24 rows x 80 cols) with extended attributes model3A(4) Model 3 (32 rows x 80 cols) with base attributes model3B(5
) Model 3 (32 rows x 80 cols) with extended attributes model4A(6)
(43 rows x 80 cols) with base attributes model4B(7) Model 4
(43 rows x 80 cols) with extended attributes model5A(8)
(27 rows x 132 cols) with base attributes model5B(9)
(27 rows x 132 cols) with extended attributes dynamic(10)
Screen size determine with BIND and Read Partition Query.
In case this LU is not Type 2, then this object should contain the invalid(1) value."
INTEGER { unbind (1), termself (2), rshutd (3), poweroff (4) } MAX ACCESS  read create
"This value identifies the desired method for deactivation of this LU.
This value overrides the default method (snaNodeOperLuTermDefault) for this Node.
For LU 6.2, only the value 'unbind (1)' applies.
terminate the LU LU session by sending an SNA UNBIND request.
termself(2) terminate the LU LU session by sending an SNA TERM SELF (Terminate Self) request on the SSCP LU session.
The SSCP will inform the remote session LU partner to send an UNBIND request to terminate the session.
terminate the LU LU session by sending an SNA RSHUTD (Request ShutDown) request to the remote session LU partner.
The remote LU will then send an UNBIND request to terminate the session.
terminate the LU LU session by sending either an SNA LUSTAT (LU Status) request on the LU LU session or an SNA NOTIFY request on the SSCP LU session indicating that the LU has been powered off.
Sending both is also acceptable.
The result should be that the remote session LU partner will send an UNBIND to terminate the session.
A write operation to this object may immediately change the operational value reflected in snaLuOperTerm depending on the Agent implementation."
"This object is used by a Management Station to create or delete the row entry in the snaLuAdminTable.
To activate a row, the Management Station sets the value to 'active (1)' or 'notReady (3)'.
Upon successful creation of the row, the Agent automatically creates a corresponding entry in the snaLuOperTable with snaLuOperState equal to 'inactive (1)'.
Row deletion can be Management Station or Agent initiated: (a)
The Management Station can set the value to 'destroy (6)' only when the value of snaLuOperState of this LU instance is 'inactive (1)'.
The Agent will then delete the row corresponding to this LU instance from snaLuAdminTable and from snaLuOperTable.
The Agent detects that a row is in the 'notReady (3)' state for greater than a default period of 5 minutes.
The Agent will not create a row with RowStatus equal to 'notReady (3)', after SNA system re initialization (e.g., reboot)."
The following table contains LU state dynamic parameters.
SEQUENCE OF SnaLuOperEntry MAX ACCESS
"This table contains dynamic runtime information and control variables relating to LUs.
Only objects which are common to all types of LUs are included in this table.
This table augments the snaLuAdminTable."
{ snaLu 2 } snaLuOperEntry OBJECT TYPE SYNTAX
"Contains objects reflecting current information for an LU.
Each entry is created by the Agent.
All entries have read only access.
MAX ACCESS  read only STATUS  current DESCRIPTION "User configurable name for this LU.
If a name is not assigned, then this object contains a zero length string."
MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the current SNA LU name."
"The value identifies the current LU type."
read only STATUS  current DESCRIPTION
"The value identifies whether the LU is currently dependent or independent.
A write operation to this object will not change the operational value reflected in snaLuOperDepType until the Node has been re activated (e.g., after the next initialization of the SNA services)."
MAX ACCESS  read only STATUS  current DESCRIPTION
"The local address for this LU is a byte with a value ranging from 0 to 254.
For dependent LUs, this value ranges from 1 to 254; for independent LUs this value is always 0.
A write operation to this object will not change the operational value reflected in snaLuOperLocalAddress until the Node has been re activated (e.g., after the next initialization of the SNA services)."
, model4A(6), model4B(7), model5A(8), model5B(9), dynamic(10)
read only STATUS  current DESCRIPTION
"The screen model type of the terminal connected to the host.
If this LU is not Type 2, then this object should contain the 'invalid(1)' value."
INTEGER { unbind (1), termself (2), rshutd (3), poweroff (4) } MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the current method for deactivation of this LU.
This value overrides the default method (snaNodeOperLuTermDefault) for this Node.
For LU 6.2, only the value 'unbind (1)' applies.
terminate the LU LU session by sending an SNA UNBIND request.
termself(2) terminate the LU LU session by sending an SNA TERM SELF (Terminate Self) request on the SSCP LU session.
The SSCP will inform the remote session LU partner to send an UNBIND request to terminate the session.
terminate the LU LU session by sending an SNA RSHUTD (Request ShutDown) request to the remote session LU partner.
The remote LU will then send an UNBIND request to terminate the session.
terminate the LU LU session by sending either an SNA LUSTAT (LU Status) request on the LU LU session or an SNA NOTIFY request on the SSCP LU session indicating that the LU has been powered off.
Sending both is also acceptable.
The result should be that the remote session LU partner will send an UNBIND to terminate the session."
"The value identifies the current operational state of this LU.
It has different meanings for dependent and independent LUs.
For dependent LUs the values indicate the following: inactive
(1) LU didn't receive ACTLU, or it received DACTLU, or received ACTLU and sent negative response.
active (2) LU received ACTLU and acknowledged positively.
For independent LUs the values indicate the following: active (2)
the LU is defined and is able to send and receive BIND.
the LU has a session count equal to 0."
read only STATUS  current DESCRIPTION
"The number of currently active LU LU sessions of this LU.
For the independent LU, if this object has value 0, it indicates that LU is inactive."
"This is a table containing objects which describe the operational state of LU sessions.
Only objects which are common to all types of LU sessions are included in this table.
When a session's snaLuSessnOperState value changes to 'pendingBind (2)', then the corresponding entry in the session table is created by the Agent.
When the session's snaLuSessnOperState value changes to 'unbound (1)',
then the session will be removed from the session table by the Agent."
"An entry contains dynamic parameters for an LU LU session.
The indices identify the Node, local LU, and remote LU for this session.
read only STATUS  current DESCRIPTION
"This value may be used to identify information about the session partner LU in a table of information about remote LUs.
Such a table is not defined in this document.
If a table of remote LU information is not implemented, or if the table is implemented but it does not contain information about the partner LU for a particular session (as for dependent LU LU sessions) then this object will have a value of zero."
read only STATUS  current DESCRIPTION
"This value identifies the unique index of the session.
It is recommended that an Agent should not reuse the index of a deactivated session for a significant period of time (e.g., one week).
MAX ACCESS  read only STATUS  current DESCRIPTION
"The name of the local application using this LU.
If the local application is unknown, then this object contains a zero length string."
MAX ACCESS  read only STATUS  current DESCRIPTION "For dependent LUs which are indicated by the snaLuOperDepType object containing the value 'dependent (1)', this object contains the Primary LU (PLU) name.
For independent LUs, this object contains the fully qualified remote LU name of this 6.2 session.
A fully qualified name is an SNA NAU entity name preceded by the NetId and a period as the delimiter."
MAX ACCESS  read only STATUS  current DESCRIPTION
"The maximum RU size used on this session for sending RUs."
MAX ACCESS  read only STATUS  current DESCRIPTION
"The maximum RU size used on this session for receiving RUs."
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
"The size of the receive pacing window on this session."
read only STATUS  current DESCRIPTION
"The timestamp (e.g., the Agent's sysUpTime value) when this session becomes active."
"The value indicates the desired operational state of the session.
This object is used to change the operational state of the session.
A Management Station can only change the operational state of the session to 'unbound (1)'.
Session deactivation: If a session is in the operational state 'bound (3)' then setting the value of this object to 'unbound (1)' will initiate the session shutdown.
If a session is in the operational state 'pendingBind (2)' then setting the value of this object to 'unbound (1)' will initiate the session shutdown.
If a session is in the operational state 'pendingUnbind (4)' for an abnormally long period of time (e.g., three minutes) then setting the value of this object to 'unbound (1)' will change the session operational state to 'unbound (1)'.
Note: for dependent LUs, deactivating the session is the same as deactivating the LU."
INTEGER { unbound (1), pendingBind (2), bound (3), pendingUnbind (4) }
read only STATUS  current DESCRIPTION
"The value indicates the current operational state of the session. '
session has been  unbound; in this state it will be removed from the session table by the Agent. '
pendingBind (2)' this state has different meanings for dependent and independent LUs; for dependent LU waiting for BIND from the host, for independent LU waiting for BIND response.
When a session enters this state, the corresponding entry in the session table is created by the Agent. '
bound (3)' session has been successfully bound. '
pendingUnbind (4)' session enters this state when an UNBIND is sent and before the rsp(UNBIND) is received."
MAX ACCESS  read only STATUS  current DESCRIPTION
"The value identifies the sense code when there is a BIND failure.
It is taken from the negative BIND response or UNBIND request.
This is displayed as 8 hexadecimal digits."
"The value identifies the SNA RU that terminated the session.
If the session is not in the unbound state, this object has a value of  'other (1)'.
MAX ACCESS  read only STATUS  current DESCRIPTION
"If the session is in the unbound state, and it was terminated by an UNBIND, then this object contains the UNBIND type value (byte 1 of the UNBIND RU); otherwise the string is null."
read only STATUS  current DESCRIPTION
"This value identifies the link over which the session passes.
It is an index into snaNodeLinkAdminTable.
If the index value is not known, the value of this object shall be zero."
SEQUENCE OF SnaLuSessnStatsEntry MAX ACCESS
"This table contains dynamic statistics information relating to LU sessions.
The entries in this table augment the entries in the snaLuSessnTable and cannot be created by a Management Station."
"Contains statistics information for an LU session.
Each entry is created by the Agent.
Objects in this table have read only access.
Each session from snaLuSessnTable has one entry in this table."
snaLuSessnStatsSentNegativeResps Counter32, snaLuSessnStatsReceivedNegativeResps Counter32 } snaLuSessnStatsSentBytes OBJECT TYPE SYNTAX
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
read only STATUS  current DESCRIPTION
"This trap indicates that the operational state (i.e., snaLuOperState value) of the LU has changed.
The value of snaLuOperName indicates the name of the LU.
The value of snaLuOperSnaName indicates the SNA name of LU.
The value of snaLuOperState indicates the current state after change."
"This trap indicates the failure of a BIND.
The value of snaLuSessnLocalApplName indicates the local application name.
The value of snaLuSessnPartnerName indicates the partner name.
The value of snaLuSessnOperState indicates the current state after change.
The value of snaLuSessnBindFailureReason indicates the failure reason.
The Agent should not generate more than 1 trap of this type per minute to minimize the level of management traffic on the network."
Currently this group contains only one table.
The following table contains Response Time Monitoring (RTM)   configuration information and statistics for LU Type 2s.
RTM supports the capability to measure and report end user   response times for dependent LUs.
When the RTM state of an LU   is 'on', response times for each LU transaction are monitored.
A set of ranges is defined (e.g., Range 1 includes the number of   transactions with response times less than 1 second) using the   "boundary" definitions (e.g., boundary #2 is defined as 3 seconds).
A set of counters (one per range) identifies
the number of transactions within each response time range.
"This table contains Response Time Monitoring (RTM) information relating to an LU (Type 2).
Each entry corresponds to an LU 2 entry in snaLuAdminTable."
"Contains RTM information for an LU (Type 2).
Each entry is created by the Agent.
snaLuRtmOverFlows Counter32, snaLuRtmObjPercent Integer32, snaLuRtmObjRange INTEGER,
"The value identifies the PU 2.0 with which this LU is associated."
"The value uniquely identifies an LU in a PU 2.0."
INTEGER { off(1), on(2) } MAX ACCESS  read only STATUS  current DESCRIPTION
"The value indicates the current RTM state of an LU."
read only STATUS  current DESCRIPTION
"The timestamp (e.g., the Agent's sysUpTime value) when this session's RTM state (e.g., snaLuRtmState) changes value."
} MAX ACCESS  read only STATUS  current DESCRIPTION
"The value indicates the mode of measurement for this RTM request.
The values have following meaning: firstChar(1) time to first character on screen kb(2) time to keyboard usable by operator cdeb(3) time to Change Direction/End Bracket."
read only STATUS  current DESCRIPTION
"This object contains the value of the first boundary in units of 1/10th of a second."
read only STATUS  current DESCRIPTION
"This object contains the value of the second boundary in units of 1/10th of a second."
read only STATUS  current DESCRIPTION
"This object contains the value of the third boundary in units of 1/10th of a second."
read only STATUS  current DESCRIPTION
"This object contains the value of the fourth boundary in units of 1/10th of a second."
read only STATUS  current DESCRIPTION
"This value indicates the number of transactions which fall in the range specified by the first boundary."
read only STATUS  current DESCRIPTION
"This value indicates the number of transactions which fall in the range specified by the second boundary."
read only STATUS  current DESCRIPTION
"This value indicates the number of transactions which fall in the range specified by the third boundary."
read only STATUS  current DESCRIPTION
"This value indicates the number of transactions which fall in the range specified by the fourth boundary."
read only STATUS  current DESCRIPTION
"This value indicates the number of transactions which exceed the highest range specified by the boundaries."
read only STATUS  current DESCRIPTION
"This value indicates the desired percentage of transactions which should be under a designated boundary range indicated by snaLuRtmObjRange."
"This value indicates the designated boundary range to which the snaLuRtmObject refers.
The values have the following meanings: other(1)   not specified range1(2)  less than boundary
1 range2(3)  between boundary 1 and 2
range3(4)  between boundary 2 and 3 range4(5)  between boundary 3 and 4 range5(6)  greater than boundary 4."
read only STATUS  current DESCRIPTION
"This value indicates the total number of transactions executed since the RTM monitoring began (i.e., snaLuRtmState changed to 'on(2)') for this LU."
read only STATUS  current DESCRIPTION
"This value indicates the response time for the last transaction in units of 1/10th of a second."
read only STATUS  current DESCRIPTION
"This value indicates the average response time for all transactions in units of 1/10th of a second."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for the SNMPv2 entities which implement the snanau MIB."
The snaPu20Group is mandatory only for those entities which implement PU type 2.0" GROUP  snaMgtToolsRtmGroup DESCRIPTION "The snaMgtToolsGroup is mandatory only for those entities which implement LU type 2 and RTM."
Refinement of requirements for objects access.
"An Agent is required to implement read write access to this object.
MIN ACCESS  read write DESCRIPTION
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object."
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object."
"An Agent is required to implement read write access to this object."
"An Agent is required to implement read write access to this object."
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
snaNodeLinkAdminMaxPiu MIN ACCESS  read write DESCRIPTION
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
snaLuAdminType MIN ACCESS  read write DESCRIPTION
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
MIN ACCESS  read write DESCRIPTION
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object.
"An Agent is required to implement read write access to this object."
{ snaNodeAdminName, snaNodeAdminType, snaNodeAdminXidFormat, snaNodeAdminBlockNum, snaNodeAdminIdNum, snaNodeAdminEnablingMethod, snaNodeAdminLuTermDefault, snaNodeAdminMaxLu, snaNodeAdminHostDescription, snaNodeAdminStopMethod, snaNodeAdminState, snaNodeAdminRowStatus, snaNodeAdminTableLastChange, snaNodeOperName, snaNodeOperType, snaNodeOperXidFormat, snaNodeOperBlockNum, snaNodeOperIdNum, snaNodeOperEnablingMethod, snaNodeOperLuTermDefault, snaNodeOperMaxLu, snaNodeOperHostDescription, snaNodeOperStopMethod, snaNodeOperState, snaNodeOperHostSscpId, snaNodeOperStartTime, snaNodeOperLastStateChange, snaNodeOperActFailures, snaNodeOperActFailureReason, snaNodeOperTableLastChange, snaNodeLinkAdminSpecific, snaNodeLinkAdminMaxPiu, snaNodeLinkAdminRowStatus, snaNodeLinkAdminTableLastChange, snaNodeLinkOperSpecific, snaNodeLinkOperMaxPiu, snaNodeLinkOperTableLastChange } STATUS  current DESCRIPTION
"A collection of objects providing the instrumentation of SNA nodes."
, snaLuOperSessnCount } STATUS  current DESCRIPTION
{ snaPu20StatsSentBytes, snaPu20StatsReceivedBytes, snaPu20StatsSentPius, snaPu20StatsReceivedPius, snaPu20StatsSentNegativeResps, snaPu20StatsReceivedNegativeResps, snaPu20StatsActLus, snaPu20StatsInActLus, snaPu20StatsBindLus } STATUS  current DESCRIPTION
OBJECTS  { snaLuRtmState, snaLuRtmStateTime, snaLuRtmDef, snaLuRtmBoundary1, snaLuRtmBoundary2, snaLuRtmBoundary3, snaLuRtmBoundary4, snaLuRtmCounter1, snaLuRtmCounter2, snaLuRtmCounter3, snaLuRtmCounter4, snaLuRtmOverFlows, snaLuRtmObjPercent, snaLuRtmObjRange, snaLuRtmNumTrans,
Security Considerations Security issues are not discussed in this memo.
