- title: __initial_text__
  contents:
  - "                  An Architecture for Media Recording\n                 Using\
    \ the Session Initiation Protocol\n"
- title: Abstract
  contents:
  - "Abstract\n   Session recording is a critical requirement in many communications\n\
    \   environments such as call centers and financial trading.  In some of\n   these\
    \ environments, all calls must be recorded for regulatory,\n   compliance, and\
    \ consumer protection reasons.  Recording of a session\n   is typically performed\
    \ by sending a copy of a media stream to a\n   recording device.  This document\
    \ describes architectures for\n   deploying session recording solutions in an\
    \ environment that is based\n   on the Session Initiation Protocol (SIP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7245.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Definitions . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Session Recording Architecture  . . . . . . . . . . . .\
    \ . . .   5\n     3.1.  Location of the SRC . . . . . . . . . . . . . . . . .\
    \ . .   5\n       3.1.1.  B2BUA Acts as a SRC . . . . . . . . . . . . . . . .\
    \ .   5\n       3.1.2.  Endpoint Acts as SRC  . . . . . . . . . . . . . . . .\
    \   6\n       3.1.3.  A SIP Proxy Cannot Be a SRC . . . . . . . . . . . . .  \
    \ 7\n       3.1.4.  Interaction with MEDIACTRL  . . . . . . . . . . . . .   7\n\
    \       3.1.5.  Interaction with Conference Focus . . . . . . . . . .   9\n  \
    \   3.2.  Establishing the Recording Session  . . . . . . . . . . .  10\n    \
    \   3.2.1.  SRC-Initiated Recording . . . . . . . . . . . . . . .  11\n      \
    \ 3.2.2.  SRS-Initiated Recording . . . . . . . . . . . . . . .  11\n       3.2.3.\
    \  Pause/Resume Recording Session  . . . . . . . . . . .  12\n       3.2.4.  Media\
    \ Stream Mixing . . . . . . . . . . . . . . . . .  12\n       3.2.5.  Media Transcoding\
    \ . . . . . . . . . . . . . . . . . .  12\n       3.2.6.  Lossless Recording \
    \ . . . . . . . . . . . . . . . . .  12\n     3.3.  Recording Metadata  . . .\
    \ . . . . . . . . . . . . . . . .  13\n       3.3.1.  Contents of Recording Metadata\
    \  . . . . . . . . . . .  13\n       3.3.2.  Mechanisms for Delivery of Metadata\
    \ to SRS  . . . . .  13\n     3.4.  Notifications to the Recorded User Agents\
    \ . . . . . . . .  13\n     3.5.  Preventing the Recording of a SIP Session .\
    \ . . . . . . .  13\n   4.  IANA Considerations . . . . . . . . . . . . . . .\
    \ . . . . . .  13\n   5.  Security Considerations . . . . . . . . . . . . . .\
    \ . . . . .  14\n   6.  Acknowledgements  . . . . . . . . . . . . . . . . . .\
    \ . . . .  15\n   7.  Informative References  . . . . . . . . . . . . . . . .\
    \ . . .  15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Session recording is a critical requirement in many communications\n\
    \   environments such as call centers and financial trading.  In some of\n   these\
    \ environments, all calls must be recorded for regulatory,\n   compliance, and\
    \ consumer protection reasons.  Recording of a session\n   is typically performed\
    \ by sending a copy of a media stream to a\n   recording device.  This document\
    \ describes architectures for\n   deploying session recording solutions as defined\
    \ in \"Use Cases and\n   Requirements for SIP-Based Media Recording (SIPREC)\"\
    \ [RFC6341].\n   This document focuses on how sessions are established between\
    \ a\n   Session Recording Client (SRC) and the Session Recording Server (SRS)\n\
    \   for the purpose of conveying the Replicated Media and Recording\n   Metadata\
    \ (e.g., identity of the parties involved) relating to the\n   Communication Session.\n\
    \   Once the Replicated Media and Recording Metadata have been received\n   by\
    \ the SRS, they will typically be archived for retrieval at a later\n   time.\
    \  The procedures relating to the archiving and retrieval of this\n   information\
    \ are outside the scope of this document.\n   This document only considers active\
    \ recording, where the SRC\n   purposefully streams media to a SRS.  Passive recording,\
    \ where a\n   recording device detects media directly from the network (e.g.,\
    \ using\n   port-mirroring techniques), is outside the scope of this document.\n\
    \   In addition, lawful intercept is outside the scope of this document,\n   which\
    \ takes account of the IETF policy on wiretapping [RFC2804].\n   The Recording\
    \ Session that is established between the SRC and the SRS\n   uses the normal\
    \ procedures for establishing INVITE-initiated dialogs\n   as specified in [RFC3261]\
    \ and uses the Session Description Protocol\n   (SDP) for describing the media\
    \ to be used during the session as\n   specified in [RFC4566].  However, it is\
    \ intended that some extensions\n   to SIP (e.g., Headers, Option Tags, etc.)\
    \ will be defined to support\n   the requirements for media recording.  The Replicated\
    \ Media is\n   required to be sent in real-time to the SRS and is not buffered\
    \ by\n   the SRC to allow for real-time analysis of the media by the SRS.\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   The first four definitions are quoted from RFC 6341.\n  \
    \ Session Recording Server (SRS):  A Session Recording Server (SRS) is\n     \
    \ a SIP User Agent (UA) that is a specialized media server or\n      collector\
    \ that acts as the sink of the recorded media.  An SRS is\n      typically implemented\
    \ as a multi-port device that is capable of\n      receiving media from multiple\
    \ sources simultaneously.  An SRS is\n      the sink of the recorded session metadata.\n\
    \   Session Recording Client (SRC):  A Session Recording Client (SRC) is\n   \
    \   a SIP User Agent (UA) that acts as the source of the recorded\n      media,\
    \ sending it to the SRS.  An SRC is a logical function.  Its\n      capabilities\
    \ may be implemented across one or more physical\n      devices.  In practice,\
    \ an SRC could be a personal device (such as\n      a SIP phone), a SIP Media\
    \ Gateway (MG), a Session Border\n      Controller (SBC), or a SIP Media Server\
    \ (MS) integrated with an\n      Application Server (AS).  This specification\
    \ defines the term\n      \"SRC\" such that all such SIP entities can be generically\
    \ addressed\n      under one definition.  The SRC provides metadata to the SRS.\n\
    \   Communication Session (CS):  A session created between two or more\n     \
    \ SIP User Agents (UAs) that is the subject of recording.\n   Recording Session\
    \ (RS):  The SIP session created between an SRC and\n      SRS for the purpose\
    \ of recording a CS.\n   The following terms are defined by this document.\n \
    \  Recording-aware User Agent (UA):  A SIP User Agent that is aware of\n     \
    \ SIP extensions associated with the CS.  Such extensions may be\n      used to\
    \ notify the recording-aware UA that a session is being\n      recorded, or by\
    \ a recording-aware UA to express preferences as to\n      whether a recording\
    \ should be started, paused, resumed, or\n      stopped.\n   Recording-unaware\
    \ User Agent (UA):  A SIP User Agent that is unaware\n      of SIP extensions\
    \ associated with the CS.  Such a recording-\n      unaware UA will be notified\
    \ that a session is being recorded or\n      will express preferences as to whether\
    \ a recording should be\n      started, paused, resumed, or stopped via some other\
    \ means that is\n      out of scope for the SIP media recording architecture.\n\
    \   Recording Metadata:  The metadata describing the CS that is required\n   \
    \   by the SRS.  This will include, for example, the identities of\n      users\
    \ that participate in the CS and dialog state.  Typically,\n      this metadata\
    \ is archived with the Replicated Media at the SRS.\n      The recording metadata\
    \ is delivered in real-time to the SRS.\n   Replicated Media:  A copy of the media\
    \ that is associated with the\n      CS, was created by the SRC, and was sent\
    \ to the SRS.  It may\n      contain all the media associated with the CS (e.g.,\
    \ audio and\n      video) or just a subset (e.g., audio).  Replicated Media is\
    \ part\n      of the Recording Session.\n"
- title: 3.  Session Recording Architecture
  contents:
  - '3.  Session Recording Architecture

    '
- title: 3.1.  Location of the SRC
  contents:
  - "3.1.  Location of the SRC\n   This section contains some example session recording\
    \ architectures\n   showing how the SRC is a logical function that can be located\
    \ in or\n   split between various physical components.\n"
- title: 3.1.1.  B2BUA Acts as a SRC
  contents:
  - "3.1.1.  B2BUA Acts as a SRC\n   A SIP Back-to-Back User Agent (B2BUA) that has\
    \ access to the media to\n   be recorded may act as an SRC.  The B2BUA may already\
    \ be aware that a\n   session needs to be recorded before the initial establishment\
    \ of the\n   CS, or the decision to record the session may occur after the session\n\
    \   has been established.\n   If the SRC makes the decision to initiate the RS,\
    \ then it will do so\n   by sending a SIP INVITE request to the SRS.\n   If the\
    \ SRS makes the decision to initiate the Recording Session, then\n   it will initiate\
    \ the establishment of a SIP RS by sending an INVITE\n   to the SRC.\n   The RS\
    \ INVITE contains information that identifies the session as\n   being established\
    \ for the purposes of recording and prevents the\n   session from being accidentally\
    \ rerouted to a UA that is not an SRS\n   if the RS was initiated by the SRC or\
    \ vice versa.\n   The B2BUA/SRC is responsible for notifying the UAs involved\
    \ in the CS\n   that the session is being recorded.\n   The B2BUA/SRC is responsible\
    \ for complying with requests from\n   recording aware UAs or through some configured\
    \ policies indicating\n   that the CS should not be recorded.\n              \
    \                                +-----------+\n                          (Recording\
    \ Session) |  Session  |\n                             +------SIP------>| Recording\
    \ |\n                             |                |  Server   |\n           \
    \                  |  +--RTP/RTCP-->|  (SRS)    |\n                          \
    \   |  |             +-----------+\n                             V  V        \
    \           ^\n                        +-------------+             |\n       \
    \                 |             |             |\n                        |   \
    \          |-- Metadata -+\n                        |             |\n        \
    \                |    B2BUA    |\n                        |             |\n  \
    \                      |   Session   |\n     +--------+         |  Recording \
    \ |         +---------+\n     |        |<- SIP ->|   Client    |<- SIP ->|   \
    \      |\n     |  UA-A  |         |   (SRC)     |         |  UA-B   |\n     |\
    \        |<- RTP/->|             |<- RTP/->|         |\n     +--------+   RTCP\
    \  |             |   RTCP  +---------+\n                        +-------------+\n\
    \     |____________________________________________________|\n               \
    \     (Communication Session)\n           Figure 1: B2BUA Acts as the Session\
    \ Recording Client\n"
- title: 3.1.2.  Endpoint Acts as SRC
  contents:
  - "3.1.2.  Endpoint Acts as SRC\n   A SIP endpoint / UA may act as a SRC.  In that\
    \ case, the endpoint\n   sends the Replicated Media to the SRS.\n   If the endpoint\
    \ makes the decision to initiate the Recording Session,\n   then it will initiate\
    \ the establishment of a SIP Session by sending\n   an INVITE to the SRS.\n  \
    \ If the SRS makes the decision to initiate the Recording Session, then\n   it\
    \ will initiate the establishment of a SIP Session by sending an\n   INVITE to\
    \ the endpoint.  The actual decision mechanism is out of\n   scope for the SIP\
    \ media recording architecture.\n          (Recording Session) +-----------+\n\
    \         +----------SIP------>|           |\n         |  +----RTP/RTCP---->|\
    \  Session  |\n         |  |                 | Recording |\n         |  |    \
    \             |  Server   |\n         |  | +-- Metadata -->|   (SRS)   |\n   \
    \      |  | |               |           |\n         |  | |               +-----------+\n\
    \         |  | |\n         |  | |\n         |  | |\n         |  | |\n        \
    \ V  V |  (Communication Session)\n      +--+------+                     +---------+\n\
    \      |         |<-------SIP--------->|         |\n      |  UA-A   |        \
    \             |  UA-B   |\n      |  (SRC)  |<-----RTP/RTCP------>|         |\n\
    \      +---------+                     +---------+\n        Figure 2: SIP Endpoint\
    \ Acts as the Session Recording Client\n"
- title: 3.1.3.  A SIP Proxy Cannot Be a SRC
  contents:
  - "3.1.3.  A SIP Proxy Cannot Be a SRC\n   A SIP Proxy is unable to act as an SRC\
    \ because it does not have\n   access to the media and therefore has no way of\
    \ enabling the delivery\n   of the Replicated Media to the SRS.\n"
- title: 3.1.4.  Interaction with MEDIACTRL
  contents:
  - "3.1.4.  Interaction with MEDIACTRL\n   The MEDIACTRL architecture [RFC5567] describes\
    \ an architecture in\n   which an Application Server (AS) controls a Media Server\
    \ (MS), which\n   may be used for purposes such as conferencing and recording\
    \ media\n   streams.  In the architecture described in [RFC5567], the AS\n   typically\
    \ uses SIP Third Party Call Control (3PCC) to instruct the\n   SIP UAs to direct\
    \ their media to the Media Server.\n   The SRC or the SRS described in this document\
    \ may be architected\n   according to [RFC5567]; therefore, when further decomposed,\
    \ they may\n   be made up of an AS that uses a MEDIACTRL interface to control\
    \ an MS.\n   As shown in Figure 3, when the SRS is architected according to\n\
    \   [RFC5567], the MS acts as a sink of the recording media, and the AS\n   acts\
    \ as a sink of the metadata and the termination point for RS SIP\n   signaling.\
    \  As shown in Figure 4, when the SRC is architected\n   according to [RFC5567],\
    \ the MS acts as a source of recording media,\n   and the AS acts as a source\
    \ of the metadata and the termination point\n   for RS SIP signaling.\n      \
    \                               Session Recording Server (SRS)\n             \
    \                 +----------------------------------------+\n               \
    \               |                                        |\n          (Recording\
    \ Session) |  +-----------+          +------------+ |\n          +------------SIP----|->|\
    \           |          |            | |\n          |                   |  | MEDIACTRL\
    \ |MEDIACTRL |   Media    | |\n          |                   |  |Application|<-------->|\
    \   Server   | |\n          |    +-----Metadata--->|  Server   |          |  (Recorder)|\
    \ |\n          |    |              |  |           |          |            | |\n\
    \          |    |              |  +-----------+          +------------+ |\n  \
    \        |    |              |                              ^         |\n    \
    \      |    |              +------------------------------|---------+\n      \
    \    |    |  +--------------- RTP/RTCP -----------------+\n          |    |  |\n\
    \          V    |  V\n        +---+------+                          +---------+\n\
    \        |          |<-------SIP-------------->|         |\n        |   UA-A \
    \  | (Communication Session)  |  UA-B   |\n        |   (SRC)  |<-------RTP/RTCP--------->|\
    \         |\n        +----------+                          +---------+\n     \
    \  Figure 3: Example of Session Recording Server using MEDIACTRL\n           \
    \                                         +----------+\n                 (Recording\
    \ Session)                | Session  |\n           +-----------SIP------------------------->|Recording\
    \ |\n           | +----------Metadata------------------->|  Server  |\n      \
    \     | |                                      |   (SRS)  |\n           V | UA-A\
    \ Session Recording Client (SRC)  +----------+\n    +----------------------------------------+\
    \         ^\n    |                                        |         |\n    | \
    \ +-----------+          +------------+ |         |\n    |  |           | Control\
    \  |            |<-RTP/RTCP-+    +---------+\n    |  |    UA     | Protocol |\
    \   Media    | |              |         |\n    |  |Application|<-------->|  Server\
    \    | |<----SIP----->|  UA-B   |\n    |  |  Server   |          |           \
    \ |<-----RTP------>|         |\n    |  |           |          |            | |\
    \              +---------+\n    |  +-----------+          +------------+ |\n \
    \   |                                        |\n    +----------------------------------------+\n\
    \        Figure 4: Example of Session Recording Client Decomposition\n"
- title: 3.1.5.  Interaction with Conference Focus
  contents:
  - "3.1.5.  Interaction with Conference Focus\n   In the case of a centralized conference,\
    \ a combination of the\n   conference focus and mixer [RFC4353] may act as a SRC\
    \ and therefore\n   provide the SRS with the Replicated Media and associated recording\n\
    \   metadata.  In this arrangement, the SRC is able to provide media and\n   metadata\
    \ relating to each of the participants, including, for\n   example, any side conversations\
    \ where the media passes through the\n   mixer.\n   The conference focus can either\
    \ provide mixed Replicated Media or\n   separate streams per conference participant\
    \ (as depicted in\n   Figure 5).\n   The conference focus may also act as a recording-aware\
    \ UA in the case\n   when one of the participants acts as a SRC.\n   In an alternative\
    \ arrangement, a SIP endpoint that is a conference\n   participant can act as\
    \ an SRC.  The SRC will in this case have access\n   to the media and metadata\
    \ relating to that particular participant and\n   may be able to obtain additional\
    \ metadata from the conference focus.\n   The SRC may, for example, use the conference\
    \ event package as\n   described in [RFC4575] to obtain information about other\
    \ participants\n   that it provides to the SRS within the recording metadata.\n\
    \   The SRC may be involved in the conference from the very beginning or\n   may\
    \ join at some later point of time.\n                                User 1\n\
    \                            +-----------+\n                            |    \
    \       |\n                            |           |\n                       \
    \     |Participant|\n                            |     1     |\n             \
    \               |           |\n                            +-----------+\n   \
    \                             ^ ^SIP\n                            RTP | |Dialog\n\
    \                                | |1\n       User 2                   V V   \
    \    Recording\n    +-----------+           +-----------+  Session     *************\n\
    \    |           |           |           |<------------>*           *\n    | \
    \          |<-- RTP -->|           |<-RTP/RTCP 1->*           *\n    |Participant|<--------->|\
    \ Focus/SRC |<-RTP/RTCP 2->*    SRS    *\n    |     2     |  SIP      |      \
    \     |<-RTP/RTCP 3->*           *\n    |           |  Dialog   |           |\
    \              *           *\n    +-----------+  2        +-----------+      \
    \        *************\n                                 ^ ^\n               \
    \                  | |SIP\n                             RTP | |Dialog\n      \
    \                           | |3\n                                 V V\n     \
    \                       +-----------+\n                            |         \
    \  |\n                            |           |\n                            |Participant|\n\
    \                            |    3      |\n                            |    \
    \       |\n                            +-----------+\n                       \
    \        User 3\n                Figure 5: Conference Focus Acting as an SRC\n"
- title: 3.2.  Establishing the Recording Session
  contents:
  - "3.2.  Establishing the Recording Session\n   The SRC or the SRS may initiate\
    \ the Recording Session.\n   It should be noted that the Recording Session is\
    \ independent from the\n   CS that is being recorded at both the SIP dialog level\
    \ and at the\n   session level.\n   Concerning media negotiation, regular SIP/SDP\
    \ capabilities should be\n   used, and existing transcoding capabilities and media\
    \ encryption\n   should not be precluded.\n"
- title: 3.2.1.  SRC-Initiated Recording
  contents:
  - "3.2.1.  SRC-Initiated Recording\n   When the SRC initiates the Recording Session\
    \ for the purpose of\n   conveying media to the SRS, it performs the following\
    \ actions:\n   o  Is provisioned with a Unified Resource Identifier (URI) for\
    \ the\n      SRS; the URI is resolved through normal [RFC3263] procedures.\n \
    \  o  Initiates the dialog by sending an INVITE request to the SRS.  The\n   \
    \   dialog is established according to the normal procedures for\n      establishing\
    \ an INVITE-initiated dialog as specified in [RFC3261].\n   o  Includes in the\
    \ INVITE an indication that the session is\n      established for the purpose\
    \ of recording the associated media.\n   o  Includes an SDP attribute of \"a=sendonly\"\
    \ for each media line if\n      the Replicated Media is to be started immediately,\
    \ or includes\n      \"a=inactive\" if it is not ready to transmit the media.\n\
    \   o  Replicates the media streams that are to be recorded and transmits\n  \
    \    the media to the SRS.\n   The Recording Session may replicate all media associated\
    \ with the CS\n   or only a subset.\n"
- title: 3.2.2.  SRS-Initiated Recording
  contents:
  - "3.2.2.  SRS-Initiated Recording\n   When the SRS initiates the media Recording\
    \ Session with the SRC, it\n   performs the following actions:\n   o  Is provisioned\
    \ with a Unified Resource Identifier (URI) for the\n      SRC; the URI is resolved\
    \ through normal [RFC3263] procedures.\n   o  Sends an INVITE request to the SRC.\n\
    \   o  Includes in the INVITE an indication that the session is\n      established\
    \ for the purpose of recording the associated media.\n   o  Identifies the sessions\
    \ that are to be recorded.  The actual\n      mechanism of the identification\
    \ depends on SRC policy.\n   o  Includes an SDP attribute of \"a=recvonly\" for\
    \ each media line if\n      the Recording Session is to be started immediately,\
    \ or includes\n      \"a=inactive\" if it is not ready to receive the media.\n\
    \   If the SRS does not have prior knowledge of what media streams are\n   available\
    \ to be recorded, it can make use of an offerless INVITE,\n   which allows the\
    \ SRC to make the initial SDP offer.\n"
- title: 3.2.3.  Pause/Resume Recording Session
  contents:
  - "3.2.3.  Pause/Resume Recording Session\n   The SRS or the SRC may pause the recording\
    \ by changing the SDP\n   direction attribute to \"inactive\" and resume the recording\
    \ by\n   changing the direction back to \"recvonly\" or \"sendonly\".\n"
- title: 3.2.4.  Media Stream Mixing
  contents:
  - "3.2.4.  Media Stream Mixing\n   In a basic session involving only audio, there\
    \ are typically two\n   audio/RTP streams between the two UAs involved in transporting\
    \ media\n   in each direction.  When recording this media, the two streams may\
    \ be\n   mixed or not mixed at the SRC before being transmitted to the SRS.\n\
    \   In the case when they are not mixed, two separate streams are sent to\n  \
    \ the SRS, and the SDP offer sent to the SRS must describe two separate\n   media\
    \ streams.  In the mixed case, a single mixed media stream is\n   sent to the\
    \ SRS.\n"
- title: 3.2.5.  Media Transcoding
  contents:
  - "3.2.5.  Media Transcoding\n   The CS and the RS are negotiated separately using\
    \ the standard SDP\n   offer/answer exchange which may result in the SRC having\
    \ to perform\n   media transcoding between the two sessions.  If the SRC is not\n\
    \   capable of performing media transcoding it may limit the media\n   formats\
    \ in the offer to the SRS depending on what media is negotiated\n   on the CS\
    \ or may limit what it includes in the offer on the CS if it\n   has prior knowledge\
    \ of the media formats supported by the SRS.\n   However typically the SRS will\
    \ be a more capable device which can\n   provide a wide range of media format\
    \ options to the SRC and may also\n   be able to make use of a media transcoder\
    \ as detailed in [RFC5369].\n"
- title: 3.2.6.  Lossless Recording
  contents:
  - "3.2.6.  Lossless Recording\n   Session recording may be a regulatory requirement\
    \ in certain\n   communication environments.  Such environments may impose a\n\
    \   requirement generally known as \"lossless recording\".  An overall\n   solution\
    \ for lossless recording may involve multiple layers of\n   solutions.  Individual\
    \ aspects of the solutions may range from\n   administering networks for appropriate\
    \ QoS, reliable transmission of\n   recorded media, and perhaps certain SIPREC\
    \ protocol-level\n   capabilities in SRC and SRS.\n"
- title: 3.3.  Recording Metadata
  contents:
  - '3.3.  Recording Metadata

    '
- title: 3.3.1.  Contents of Recording Metadata
  contents:
  - "3.3.1.  Contents of Recording Metadata\n   The metadata model is defined in [REC-METADATA].\n"
- title: 3.3.2.  Mechanisms for Delivery of Metadata to SRS
  contents:
  - "3.3.2.  Mechanisms for Delivery of Metadata to SRS\n   The SRS obtains session\
    \ recording metadata from the SRC.  The\n   metadata is transported via SIP-based\
    \ mechanisms as specified in\n   [REC-PROTOCOL]\n   It is also possible that metadata\
    \ is transported via non-SIP-based\n   mechanisms, but these are considered out\
    \ of scope.\n   It is also possible to have an RS session without the metadata;\
    \ in\n   that case, the SRS will be receiving the metadata by some other means\n\
    \   or not at all.\n"
- title: 3.4.  Notifications to the Recorded User Agents
  contents:
  - "3.4.  Notifications to the Recorded User Agents\n   Typically, a user that is\
    \ involved in a session that is to be\n   recorded is notified by an announcement\
    \ at the beginning of the\n   session or may receive some warning tones within\
    \ the media.  However,\n   SIPREC enables an indication that the call is being\
    \ recorded to be\n   included in the SIP requests and responses associated with\
    \ that CS.\n   The SRC provides the notification to all SIP UAs for which it is\n\
    \   replicating received media for the purpose of recording.  If the SRC\n   is\
    \ acting as a SIP endpoint, as described in Section 3.1.2, then it\n   also provides\
    \ a notification to the local user.\n"
- title: 3.5.  Preventing the Recording of a SIP Session
  contents:
  - "3.5.  Preventing the Recording of a SIP Session\n   During the initial session\
    \ establishment or during an established\n   session, a recording-aware UA may\
    \ provide an indication of its\n   preference with regard to recording the media\
    \ in the CS.  The\n   mechanisms for this are specified in [REC-PROTOCOL]\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This document has no actions for IANA.  This document\
    \ mentions\n   SIP/SDP extensions.  The associated IANA considerations are addressed\n\
    \   in [REC-PROTOCOL], which defines them.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The Recording Session is fundamentally a standard\
    \ SIP dialog and\n   media session and therefore makes use of existing SIP security\n\
    \   mechanisms for securing the Recording Session and Recording Metadata.\n  \
    \ The intended use of this architecture is only for the case where the\n   users\
    \ are aware that they are being recorded, and the architecture\n   provides the\
    \ means for the SRC to notify users that they are being\n   recorded.\n   This\
    \ architectural solution is not intended to support lawful\n   intercept, which\
    \ in contrast requires that users are not informed.\n   It is the responsibility\
    \ of the SRS to protect the Replicated Media\n   and Recording Metadata once it\
    \ has been received and archived.  The\n   stored content must be protected using\
    \ a cipher at least as strong\n   (or stronger) than the original content; however,\
    \ the mechanism for\n   protecting the storage and retrieval from the SRS is out\
    \ of scope of\n   this work.  The keys used to store the data must also be securely\n\
    \   maintained by the SRS and should only be released, securely, to\n   authorized\
    \ parties.  How to secure these keys, properly authorize a\n   receiving party,\
    \ or securely distribute the keying material is also\n   out of scope of this\
    \ work.\n   Protection of the RS should not be weaker than protection of the CS\n\
    \   and may need to be stronger because the media is retransmitted\n   (allowing\
    \ more possibility for interception).  This applies to both\n   the signaling\
    \ and media paths.\n   It is essential that the SRC will authenticate the SRS\
    \ because the\n   client must be certain that it is recording on the right recording\n\
    \   system.  It is less important that the SRS authenticate the SRC, but\n   implementations\
    \ must have the ability to perform mutual\n   authentication.\n   In some environments,\
    \ it is desirable to not decrypt and re-encrypt\n   the media.  This means the\
    \ same media encryption key is negotiated\n   and used within the CS and RS. \
    \ If for any reason the media are\n   decrypted on the CS and are re-encrypted\
    \ on the RS, a new key must be\n   used.\n   The retrieval mechanism for media\
    \ recorded by this protocol is out of\n   scope.  Implementations of retrieval\
    \ mechanisms should consider the\n   security implications carefully, as the retriever\
    \ is not usually a\n   party to the call that was recorded.  Retrievers should\
    \ be\n   authenticated carefully.  The cryptosuites on the retrieval should be\n\
    \   no less strong than those used on the RS and may need to be stronger.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Thanks to John Elwell, Brian Rosen, Alan Johnson, Cullen\
    \ Jennings,\n   Hadriel Kaplan, Henry Lum, Paul Kyzivat, Parthasarathi R., Ram\
    \ Mohan\n   R., Charles Eckel, Friso Feenstra, and Dave Higton for their\n   significant\
    \ contributions and assistance with this document and\n   working group.  Also,\
    \ thanks to all the members of the SIPREC WG\n   mailing list for providing valuable\
    \ input to this work.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \              June 2002.\n   [RFC3263]  Rosenberg, J. and H. Schulzrinne, \"\
    Session Initiation\n              Protocol (SIP): Locating SIP Servers\", RFC\
    \ 3263, June\n              2002.\n   [RFC4566]  Handley, M., Jacobson, V., and\
    \ C. Perkins, \"SDP: Session\n              Description Protocol\", RFC 4566,\
    \ July 2006.\n   [RFC6341]  Rehor, K., Portman, L., Hutton, A., and R. Jain, \"\
    Use\n              Cases and Requirements for SIP-Based Media Recording\n    \
    \          (SIPREC)\", RFC 6341, August 2011.\n   [REC-METADATA]\n           \
    \   Ravindranath, R., Ravindran, P., and P. Kyzivat, \"Session\n             \
    \ Initiation Protocol (SIP) Recording Metadata\", Work in\n              Progress,\
    \ February 2014.\n   [REC-PROTOCOL]\n              Portman, L., Lum, H., Eckel,\
    \ C., Johnston, A., and A.\n              Hutton, \"Session Recording Protocol\"\
    , Work in Progress,\n              February 2014.\n   [RFC4353]  Rosenberg, J.,\
    \ \"A Framework for Conferencing with the\n              Session Initiation Protocol\
    \ (SIP)\", RFC 4353, February\n              2006.\n   [RFC4575]  Rosenberg, J.,\
    \ Schulzrinne, H., and O. Levin, \"A Session\n              Initiation Protocol\
    \ (SIP) Event Package for Conference\n              State\", RFC 4575, August\
    \ 2006.\n   [RFC5567]  Melanchuk, T., \"An Architectural Framework for Media\n\
    \              Server Control\", RFC 5567, June 2009.\n   [RFC5369]  Camarillo,\
    \ G., \"Framework for Transcoding with the Session\n              Initiation Protocol\
    \ (SIP)\", RFC 5369, October 2008.\n   [RFC2804]  IAB and IESG, \"IETF Policy\
    \ on Wiretapping\", RFC 2804, May\n              2000.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew Hutton (editor)\n   Unify\n   Hofmannstrasse 51\n\
    \   81359 Munich\n   Germany\n   EMail: andrew.hutton@unify.com\n   Leon Portman\
    \ (editor)\n   NICE Systems\n   8 Hapnina\n   Ra'anana  43017\n   Israel\n   EMail:\
    \ leon.portman@gmail.com\n   Rajnish Jain\n   IPC Systems\n   777 Commerce Drive\n\
    \   Fairfield, CT  06825\n   USA\n   EMail: rajnish.jain@outlook.com\n   Ken Rehor\n\
    \   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA  95134-1706\n\
    \   USA\n   EMail: krehor@cisco.com\n"
