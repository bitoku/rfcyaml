- contents:
  - "       Internet X.509 Public Key Infrastructure -- HTTP Transfer\n             for
    the Certificate Management Protocol (CMP)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes how to layer the Certificate Management\n
    \  Protocol (CMP) over HTTP.  It is the \"CMPtrans\" document referenced\n   in
    RFC 4210; therefore, this document updates the reference given\n   therein.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6712.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Conventions Used in This Document ...............................3\n   3.
    HTTP-Based Protocol .............................................3\n      3.1.
    HTTP Versions ..............................................4\n      3.2. Persistent
    Connections .....................................4\n      3.3. General Form ...............................................4\n
    \     3.4. Media Type .................................................4\n      3.5.
    Communication Workflow .....................................5\n      3.6. HTTP
    Request-URI ...........................................5\n      3.7. Pushing of
    Announcements ...................................5\n      3.8. HTTP Considerations
    ........................................6\n   4. Implementation Considerations
    ...................................7\n   5. Security Considerations .........................................7\n
    \  6. IANA Considerations .............................................8\n   7.
    Acknowledgments .................................................8\n   8. References
    ......................................................9\n      8.1. Normative
    References .......................................9\n      8.2. Informative References
    .....................................9\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Certificate Management Protocol (CMP) [RFC4210] requires
    a well-\n   defined transfer mechanism to enable End Entities (EEs), Registration\n
    \  Authorities (RAs), and Certification Authorities (CAs) to pass\n   PKIMessage
    sequences between them.\n   The first version of the CMP specification [RFC2510]
    included a brief\n   description of a simple transfer protocol layer on top of
    TCP.  Its\n   features were simple transfer-level error handling and a mechanism
    to\n   poll for outstanding PKI messages.  Additionally, it was mentioned\n   that
    PKI messages could also be conveyed using file-, E-mail-, and\n   HTTP-based transfer,
    but those were not specified in detail.\n   The current version of the CMP specification
    [RFC4210] incorporated\n   its own polling mechanism, and thus the need for a
    transfer protocol\n   providing this functionality vanished.  The remaining features
    CMP\n   requires from its transfer protocols are connection and error\n   handling.\n
    \  Before this document was published as an RFC, the draft version\n   underwent
    drastic changes during the long-lasting work process.  The\n   so-called \"Direct
    TCP-Based Management Protocol\" specified in\n   [RFC2510] was enhanced, and at
    some point a version existed where\n   this protocol was again transferred over
    HTTP.  As both approaches\n   proved to be needless and cumbersome, implementers
    preferred to use\n   plain HTTP transfer following [RFC1945] or [RFC2616].  This
    document\n   now reflects that by exclusively describing HTTP as the transfer\n
    \  protocol for CMP.\n   The usage of HTTP for transferring CMP messages exclusively
    uses the\n   POST method for requests, effectively tunneling CMP over HTTP.  While\n
    \  this is generally considered bad practice and should not be emulated,\n   there
    are good reasons to do so for transferring CMP.  HTTP is used\n   as it is generally
    easy to implement and it is able to traverse\n   network borders utilizing ubiquitous
    proxies.  Most importantly, HTTP\n   is already commonly used in existing CMP
    implementations.  Other HTTP\n   request methods, such as GET, are not used because
    PKI management\n   operations can only be triggered using CMP's PKI messages,
    which need\n   to be transferred using a POST request.\n   With its status codes,
    HTTP provides needed error reporting\n   capabilities.  General problems on the
    server side, as well as those\n   directly caused by the respective request, can
    be reported to the\n   client.\n   As CMP implements a transaction ID, identifying
    transactions spanning\n   over more than just a single request/response pair,
    the statelessness\n   of HTTP is not blocking its usage as the transfer protocol
    for CMP\n   messages.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  HTTP-Based Protocol\n   For direct interaction between two entities, where
    a reliable\n   transport protocol like TCP is available, HTTP SHOULD be utilized
    for\n   conveying CMP messages.\n"
  - contents:
    - "3.1.  HTTP Versions\n   Implementations MUST support HTTP/1.0 [RFC1945] and
      SHOULD support\n   HTTP/1.1 [RFC2616].\n"
    title: 3.1.  HTTP Versions
  - contents:
    - "3.2.  Persistent Connections\n   HTTP persistent connections [RFC2616] allow
      multiple interactions to\n   take place on the same HTTP connection.  However,
      neither HTTP nor\n   the protocol specified in this document are designed to
      correlate\n   messages on the same connection in any meaningful way; persistent\n
      \  connections are only a performance optimization.  In particular,\n   intermediaries
      can do things like mix connections from different\n   clients into one \"upstream\"
      connection, terminate persistent\n   connections, and forward requests as non-persistent
      requests, etc.\n   As such, implementations MUST NOT infer that requests on
      the same\n   connection come from the same client (e.g., for correlating PKI\n
      \  messages with ongoing transactions); every message is to be evaluated\n   in
      isolation.\n"
    title: 3.2.  Persistent Connections
  - contents:
    - "3.3.  General Form\n   A DER-encoded [ITU.X690.1994] PKIMessage [RFC4210] is
      sent as the\n   entity-body of an HTTP POST request.  If this HTTP request is\n
      \  successful, the server returns the CMP response in the body of the\n   HTTP
      response.  The HTTP response status code in this case MUST be\n   200; other
      \"Successful 2xx\" codes MUST NOT be used for this purpose.\n   HTTP responses
      to pushed CMP Announcement messages (i.e., CA\n   Certificate Announcement,
      Certificate Announcement, Revocation\n   Announcement, and Certificate Revocation
      List (CRL) Announcement)\n   utilize the status codes 201 and 202 to identify
      whether the received\n   information was processed.\n   While \"Redirection
      3xx\" status codes MAY be supported by\n   implementations, clients should only
      be enabled to automatically\n   follow them after careful consideration of possible
      security\n   implications.  As described in Section 5, \"301 Moved Permanently\"\n
      \  could be misused for permanent denial of service.\n   All applicable \"Client
      Error 4xx\" or \"Server Error 5xx\" status codes\n   MAY be used to inform the
      client about errors.\n"
    title: 3.3.  General Form
  - contents:
    - "3.4.  Media Type\n   The Internet Media Type \"application/pkixcmp\" MUST be
      set in the HTTP\n   Content-Type header field when conveying a PKIMessage.\n"
    title: 3.4.  Media Type
  - contents:
    - "3.5.  Communication Workflow\n   In CMP, most communication is initiated by
      the EEs where every CMP\n   request triggers a CMP response message from the
      CA or RA.\n   The CMP Announcement messages described in Section 3.7 are an\n
      \  exception.  Their creation may be triggered by certain events or done\n   on
      a regular basis by a CA.  The recipient of the Announcement only\n   replies
      with an HTTP status code acknowledging the receipt or\n   indicating an error,
      but not with a CMP response.\n   If the receipt of an HTTP request is not confirmed
      by receiving an\n   HTTP response, it MUST be assumed that the transferred CMP
      message\n   was not successfully delivered to its destination.\n"
    title: 3.5.  Communication Workflow
  - contents:
    - "3.6.  HTTP Request-URI\n   The Request-URI is formed as specified in [RFC3986].\n
      \  A server implementation MUST handle Request-URI paths, with or\n   without
      a trailing slash, as identical.\n   An example of a Request-Line and a Host
      header field in an HTTP/1.1\n   header, sending a CMP request to a server, located
      in the \"/cmp\" path\n   of the host \"example.com\", would be\n      POST /cmp
      HTTP/1.1\n      Host: example.com\n   or in the absoluteURI form\n      POST
      http://example.com/cmp/ HTTP/1.1\n      Host: example.com\n"
    title: 3.6.  HTTP Request-URI
  - contents:
    - "3.7.  Pushing of Announcements\n   A CMP server may create event-triggered
      announcements or generate\n   them on a regular basis.  It MAY utilize HTTP
      transfer to convey them\n   to a suitable recipient.  In this use case, the
      CMP server acts as an\n   HTTP client, and the recipient needs to utilize an
      HTTP server.  As\n   no request messages are specified for those announcements,
      they can\n   only be pushed to the recipient.\n   If an EE wants to poll for
      a potential CA Key Update Announcement or\n   the current CRL, a PKI Information
      Request using a General Message as\n   described in Appendix E.5 of [RFC4210]
      can be used.\n   When pushing Announcement messages, PKIMessage structures are
      sent as\n   the entity-body of an HTTP POST request.\n   Suitable recipients
      for CMP announcements might, for example, be\n   repositories storing the announced
      information, such as directory\n   services.  Those services listen for incoming
      messages, utilizing the\n   same HTTP Request-URI scheme as defined in Section
      3.6.\n   The following PKIMessages are announcements that may be pushed by a\n
      \  CA.  The prefixed numbers reflect ASN.1 numbering of the respective\n   element.\n
      \     [15] CA Key Update Announcement\n      [16] Certificate Announcement\n
      \     [17] Revocation Announcement\n      [18] CRL Announcement\n   CMP Announcement
      messages do not require any CMP response.  However,\n   the recipient MUST acknowledge
      receipt with an HTTP response having\n   an appropriate status code and an empty
      body.  When not receiving\n   such a response, it MUST be assumed that the delivery
      was not\n   successful.  If applicable, the sending side MAY try sending the\n
      \  Announcement again after waiting for an appropriate time span.\n   If the
      announced issue was successfully stored in a database or was\n   already present,
      the answer MUST be an HTTP response with a \"201\n   Created\" status code and
      an empty message body.\n   In case the announced information was only accepted
      for further\n   processing, the status code of the returned HTTP response MAY
      also be\n   \"202 Accepted\".  After an appropriate delay, the sender may then
      try\n   to send the Announcement again and may repeat this until it receives\n
      \  a confirmation that it has been successfully processed.  The\n   appropriate
      duration of the delay and the option to increase it\n   between consecutive
      attempts should be carefully considered.\n   A receiver MUST answer with a suitable
      4xx or 5xx HTTP error code\n   when a problem occurs.\n"
    title: 3.7.  Pushing of Announcements
  - contents:
    - "3.8.  HTTP Considerations\n   While all defined features of the HTTP protocol
      are available to\n   implementations, they SHOULD keep the protocol utilization
      as simple\n   as possible.  For example, there is no benefit in using chunked\n
      \  Transfer-Encoding, as the length of an ASN.1 sequence is known when\n   starting
      to send it.\n   There is no need for the clients to send an \"Expect\" request-header\n
      \  field with the \"100-continue\" expectation and wait for a \"100\n   Continue\"
      status as described in Section 8.2.3 of [RFC2616].  The CMP\n   payload sent
      by a client is relatively small, so having extra\n   messages exchanged is inefficient,
      as the server will only seldom\n   reject a message without evaluating the body.\n"
    title: 3.8.  HTTP Considerations
  title: 3.  HTTP-Based Protocol
- contents:
  - "4.  Implementation Considerations\n   Implementors should be aware that implementations
    might exist that\n   use a different approach for transferring CMP over HTTP,
    because this\n   document has been under development for more than a decade.  Further,\n
    \  implementations based on earlier drafts of this document might use an\n   unregistered
    \"application/pkixcmp-poll\" MIME type.\n"
  title: 4.  Implementation Considerations
- contents:
  - "5.  Security Considerations\n   The following aspects need to be considered by
    implementers and\n   users:\n   1.  There is the risk for denial-of-service attacks
    through resource\n       consumption by opening many connections to an HTTP server.\n
    \      Therefore, idle connections should be terminated after an\n       appropriate
    timeout; this may also depend on the available free\n       resources.  After
    sending a CMP Error Message, the server should\n       close the connection, even
    if the CMP transaction is not yet\n       fully completed.\n   2.  Without being
    encapsulated in effective security protocols, such\n       as Transport Layer
    Security (TLS) [RFC5246], there is no\n       integrity protection at the HTTP
    protocol level.  Therefore,\n       information from the HTTP protocol should
    not be used to change\n       state of the transaction.\n   3.  Client users should
    be aware that storing the target location of\n       an HTTP response with the
    \"301 Moved Permanently\" status code\n       could be exploited by a man-in-the-middle
    attacker trying to\n       block them permanently from contacting the correct
    server.\n   4.  If no measures to authenticate and protect the HTTP responses
    to\n       pushed Announcement messages are in place, their information\n       regarding
    the Announcement's processing state may not be trusted.\n       In that case,
    the overall design of the PKI system must not\n       depend on the Announcements
    being reliably received and processed\n       by their destination.\n   5.  CMP
    provides inbuilt integrity protection and authentication.\n       The information
    communicated unencrypted in CMP messages does not\n       contain sensitive information
    endangering the security of the PKI\n       when intercepted.  However, it might
    be possible for an\n       eavesdropper to utilize the available information to
    gather\n       confidential technical or business critical information.\n       Therefore,
    users of the HTTP transfer for CMP might want to\n       consider using HTTP over
    TLS according to [RFC2818] or virtual\n       private networks created, for example,
    by utilizing Internet\n       Protocol Security according to [RFC4301].  Compliant\n
    \      implementations MUST support TLS with the option to authenticate\n       both
    server and client.\n"
  title: 5.  Security Considerations
- contents:
  - "6.  IANA Considerations\n   The IANA has already registered the MIME media type
    \"application/\n   pkixcmp\" for identifying CMP sequences due to an request made
    in\n   connection with [RFC2510].\n   No further action by the IANA is necessary
    for this document or any\n   anticipated updates.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgments\n   Amit Kapoor and Ronald Tschlaer were the original authors
    of this\n   document, and their version focused on the so-called \"TCP-Based\n
    \  Management Protocol\", which has been removed from this document.\n   Their
    contact data, as originally stated by them, is as follows:\n      Amit Kapoor\n
    \     Certicom\n      25801 Industrial Blvd\n      Hayward, CA\n      US\n      Email:
    amit@trustpoint.com\n      Ronald Tschalaer\n      Certicom\n      25801 Industrial
    Blvd\n      Hayward, CA\n      US\n      Email: ronald@trustpoint.com\n   The
    authors gratefully acknowledge the contributions of various\n   members of the
    IETF PKIX working group and the ICSA CA-talk mailing\n   list (a list solely devoted
    to discussing CMP interoperability\n   efforts).\n   By providing ideas, giving
    hints, and doing invaluable review work,\n   the following alphabetically listed
    individuals have significantly\n   contributed to this document:\n      Tomas
    Gustavsson, Primekey\n      Peter Gutmann, University of Auckland\n      Wolf-Dietrich
    Moeller, Nokia Siemens Networks\n"
  title: 7.  Acknowledgments
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [ITU.X690.1994]\n              International
      Telecommunications Union, \"Information\n              Technology - ASN.1 encoding
      rules: Specification of Basic\n              Encoding Rules (BER), Canonical
      Encoding Rules (CER) and\n              Distinguished Encoding Rules (DER)\",
      ITU-T Recommendation\n              X.690, 1994.\n   [RFC1945]  Berners-Lee,
      T., Fielding, R., and H. Frystyk, \"Hypertext\n              Transfer Protocol
      -- HTTP/1.0\", RFC 1945, May 1996.\n   [RFC2119]  Bradner, S., \"Key words for
      use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC2510]  Adams, C. and S. Farrell, \"Internet X.509 Public
      Key\n              Infrastructure Certificate Management Protocols\", RFC\n
      \             2510, March 1999.\n   [RFC2616]  Fielding, R., Gettys, J., Mogul,
      J., Frystyk, H.,\n              Masinter, L., Leach, P., and T. Berners-Lee,
      \"Hypertext\n              Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999.\n
      \  [RFC3986]  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource
      Identifier (URI): Generic Syntax\", STD 66, RFC\n              3986, January
      2005.\n   [RFC4210]  Adams, C., Farrell, S., Kause, T., and T. Mononen,\n              \"Internet
      X.509 Public Key Infrastructure Certificate\n              Management Protocol
      (CMP)\", RFC 4210, September 2005.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC2818]  Rescorla, E., \"HTTP Over TLS\",
      RFC 2818, May 2000.\n   [RFC4301]  Kent, S. and K. Seo, \"Security Architecture
      for the\n              Internet Protocol\", RFC 4301, December 2005.\n   [RFC5246]
      \ Dierks, T. and E. Rescorla, \"The Transport Layer Security\n              (TLS)
      Protocol Version 1.2\", RFC 5246, August 2008.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Authors' Addresses\n   Tomi Kause\n   SSH Communications Security\n   Takomotie
    8\n   Helsinki  00380\n   Finland\n   EMail: toka@ssh.com\n   Martin Peylo\n   Nokia
    Siemens Networks\n   Linnoitustie 6\n   Espoo  02600\n   Finland\n   EMail: martin.peylo@nsn.com\n"
  title: Authors' Addresses
