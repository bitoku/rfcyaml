Captive Portal Identification Using DHCP or Router Advertisements (RAs)
In many environments offering short term or temporary Internet access (such as coffee shops), it is common to start new connections in a captive portal mode.
This highly restricts what the customer can do until the customer has authenticated.
This document describes a DHCP option (and a Router Advertisement (RA) extension) to inform clients that they are behind some sort of captive portal device and that they will need to authenticate to get Internet access.
It is not a full solution to address all of the issues that clients may have with captive portals; it is designed to be used in larger solutions.
The method of authenticating to and interacting with the captive portal is out of scope for this document.
In many environments, users need to connect to a captive portal device and agree to an Acceptable Use Policy (AUP) and/or provide billing information before they can access the Internet.
It is anticipated that the IETF will work on a more fully featured protocol at some point, to ease interaction with captive portals.
Regardless of how that protocol operates, it is expected that this document will provide needed functionality because the client will need to know when it is behind a captive portal and how to contact it.
In order to present users with the payment or AUP pages, the captive  portal device has to intercept the user's connections and redirect the user to the captive portal, using methods that are very similar to man in the middle (MITM) attacks.
As increasing focus is placed on security, and end nodes adopt a more secure stance, these interception techniques will become less effective and/or more intrusive.
This document describes a DHCP ([RFC2131]) option (Captive Portal) and an IPv6 Router Advertisement (RA) ([RFC4861]) extension that inform clients that they are behind a captive portal device and how to contact it.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The Captive Portal DHCP/RA option informs the client that it is behind a captive portal and provides the URI to access an authentication page.
This is primarily intended to improve the user experience by getting them to the captive portal faster; for the foreseeable future, captive portals will still need to implement the interception techniques to serve legacy clients, and clients will need to perform probing to detect captive portals.
In order to support multiple "classes" of clients (e.g., IPv4 only, IPv6 only with DHCPv6 ([RFC3315]), IPv6 only with RA), the captive portal can provide the URI via multiple methods (IPv4 DHCP, IPv6 DHCP, IPv6 RA).
The captive portal operator should ensure that the URIs handed out are equivalent to reduce the chance of operational problems.
The maximum length of the URI that can be carried in IPv4 DHCP is 255 bytes, so URIs longer than 255 bytes should not be used in IPv6 DHCP or IPv6 RA.
In order to avoid having to perform DNS interception, the URI SHOULD contain an address literal.
If the captive portal allows the client to perform DNS requests to resolve the name, it is then acceptable for the URI to contain a DNS name.
The URI parameter is not null terminated.
The format of the IPv4 Captive Portal DHCP option is shown below.
The Captive Portal DHCPv4 option (160) (one octet).
The length, in octets of the URI.
The contact URI for the captive portal that the user should connect to (encoded following the rules in [RFC3986]).
The format of the IPv6 Captive Portal DHCP option is shown below.
The Captive Portal DHCPv6 option (103) (two octets).
option len: The length, in octets of the URI.
The contact URI for the captive portal that the user should connect to (encoded following the rules in [RFC3986]).
See Section 5.7 of [RFC7227] for more examples of DHCP options with URIs.
The Captive Portal IPv6 RA Option
The format of the Captive Portal Router Advertisement option is shown below.
The length of the option (including the Type and Length fields) in units of 8 bytes.
The contact URI for the captive portal that the user should connect to.
For the reasons described above, the implementer might want to use an IP address literal instead of a DNS name.
This should be padded with NULL (0x0) to make the total option length (including the Type and Length fields) a multiple of 8 bytes.
This document defines two DHCP Captive Portal options, one for IPv4 and one for IPv6.
An option code (160) has been assigned from the "BOOTP Vendor Extensions and DHCP Options" registry (http://www.iana.org/assignments/bootp dhcp parameters), as specified in [RFC2939].
Also, an option code (103) has been assigned from the "Option Codes" registry under DHCPv6 parameters (http://www.iana.org/assignments/dhcpv6 parameters).
IANA also has assigned an IPv6 RA Option Type code (37) from the "IPv6 Neighbor Discovery Option Formats" registry under ICMPv6 parameters (http://www.iana.org/assignments/icmpv6 parameters).
An attacker with the ability to inject DHCP messages could include this option and so force users to contact an address of his choosing.
As an attacker with this capability could simply list himself as the default gateway (and so intercept all the victim's traffic), this does not provide the attacker with significantly more capabilities, but because this document removes the need for interception, the attacker may have an easier time performing the attack.
As the operating systems and application that make use of this information know that they are connecting to a captive portal device (as opposed to intercepted connections), they can render the page in a sandboxed environment and take other precautions, such as clearly labeling the page as untrusted.
The means of sandboxing and how the user interface presents this information are not covered in this document   by their nature, those are implementation specific and best left to the application and user interface designers.
Devices and systems that automatically connect to an open network could potentially be tracked using the techniques described in this document (forcing the user to continually authenticate, or exposing their browser fingerprint).
However, similar tracking can already be performed with the standard captive portal mechanisms, so this technique does not give the attackers more capabilities.
Captive portals are increasingly hijacking TLS connections to force browsers to talk to the portal.
Providing the portal's URI via a DHCP or RA option is a cleaner technique and reduces user expectations of being hijacked; this may improve security by making users more reluctant to accept TLS hijacking, which can be performed from beyond the network associated with the captive portal.
By simplifying the interaction with the captive portal systems and doing away with the need for interception, we think that users will be less likely to disable useful security safeguards like DNSSEC validation, VPNs, etc.
In addition, because the system knows that it is behind a captive portal, it can know not to send cookies, credentials, etc.
By handing out a URI that is protected with TLS, the captive portal operator can attempt to reassure the user that the captive portal is not malicious.
