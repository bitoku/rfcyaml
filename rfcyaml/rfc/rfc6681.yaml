- contents:
  - '       Raptor Forward Error Correction (FEC) Schemes for FECFRAME

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes Fully-Specified Forward Error Correction\n
    \  (FEC) Schemes for the Raptor and RaptorQ codes and their application\n   to
    reliable delivery of media streams in the context of the FEC\n   Framework.  The
    Raptor and RaptorQ codes are systematic codes, where\n   a number of repair symbols
    are generated from a set of source symbols\n   and sent in one or more repair
    flows in addition to the source\n   symbols that are sent to the receiver(s) within
    a source flow.  The\n   Raptor and RaptorQ codes offer close to optimal protection
    against\n   arbitrary packet losses at a low computational complexity.  Six FEC\n
    \  Schemes are defined: two for the protection of arbitrary packet\n   flows,
    two that are optimized for small source blocks, and two for\n   the protection
    of a single flow that already contains a sequence\n   number.  Repair data may
    be sent over arbitrary datagram transport\n   (e.g., UDP) or using RTP.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by\n   the Internet Engineering Steering Group (IESG).
    \ Further\n   information on Internet Standards is available in Section 2 of\n
    \  RFC 5741.\n   Information about the current status of this document, any\n
    \  errata, and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6681.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Document Outline ................................................5\n   3.
    Requirements Notation ...........................................5\n   4. Definitions
    and Abbreviations ...................................5\n      4.1. Definitions
    ................................................6\n      4.2. Abbreviations ..............................................6\n
    \  5. General Procedures for Raptor FEC Schemes .......................6\n   6.
    Raptor FEC Schemes for Arbitrary Packet Flows ...................8\n      6.1.
    Introduction ...............................................8\n      6.2. Formats
    and Codes ..........................................8\n           6.2.1. FEC Framework
    Configuration Information .............8\n           6.2.2. Source FEC Payload
    ID ...............................9\n           6.2.3. Repair FEC Payload ID ..............................10\n
    \     6.3. Procedures ................................................11\n           6.3.1.
    Source Symbol Construction .........................11\n           6.3.2. Repair
    Packet Construction .........................12\n      6.4. FEC Code Specification
    ....................................12\n   7. Optimized Raptor FEC Scheme for
    Arbitrary Packet Flows .........12\n      7.1. Introduction ..............................................12\n
    \     7.2. Formats and Codes .........................................13\n           7.2.1.
    FEC Framework Configuration Information ............13\n           7.2.2. Source
    FEC Payload ID ..............................13\n           7.2.3. Repair FEC
    Payload ID ..............................13\n      7.3. Procedures ................................................13\n
    \          7.3.1. Source Symbol Construction .........................13\n           7.3.2.
    Repair Packet Construction .........................14\n      7.4. FEC Code Specification
    ....................................14\n   8. Raptor FEC Scheme for a Single Sequenced
    Flow ..................15\n      8.1. Formats and Codes .........................................15\n
    \          8.1.1. FEC Framework Configuration Information ............15\n           8.1.2.
    Source FEC Payload ID ..............................15\n           8.1.3. Repair
    FEC Payload ID ..............................15\n      8.2. Procedures ................................................16\n
    \          8.2.1. Source Symbol Construction .........................16\n           8.2.2.
    Derivation of Source FEC Packet\n                  Identification Information
    .........................17\n           8.2.3. Repair Packet Construction .........................18\n
    \          8.2.4. Procedures for RTP Source Flows ....................18\n      8.3.
    FEC Code Specification ....................................18\n   9. Security
    Considerations ........................................18\n   10. Session Description
    Protocol (SDP) Signaling ..................19\n   11. Congestion Control Considerations
    .............................19\n   12. IANA Considerations ...........................................19\n
    \     12.1. Registration of FEC Scheme IDs ...........................19\n   13.
    Acknowledgements ..............................................20\n   14. References
    ....................................................21\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The \"Forward Error Correction (FEC) Framework\" [RFC6363]
    describes a\n   general framework for the use of Forward Error Correction in\n
    \  association with arbitrary packet flows.  Modeled after the FEC\n   Building
    Block developed by the IETF Reliable Multicast Transport\n   working group [RFC5052],
    the FEC Framework defines the concept of FEC\n   Schemes that provide specific
    Forward Error Correction Schemes.  This\n   document describes six FEC Schemes
    that make use of the Raptor and\n   RaptorQ FEC codes as defined in [RFC5053]
    and [RFC6330].\n   The FEC protection mechanism is independent of the type of
    source\n   data that can be an arbitrary sequence of packets, for example audio\n
    \  or video data.  In general, the operation of the protection mechanism\n   is
    as follows:\n   o  The sender determines a set of source packets (a source block)
    to\n      be protected together based on the FEC Framework Configuration\n      Information.\n
    \  o  The sender arranges the source packets into a set of source\n      symbols,
    each of which is the same size.\n   o  The sender applies the Raptor/RaptorQ protection
    operation on the\n      source symbols to generate the required number of repair
    symbols.\n   o  The sender packetizes the repair symbols and sends the repair\n
    \     packet(s) and the source packets to the receiver(s).  Per the FEC\n      Framework
    requirements, the sender MUST transmit the source and\n      repair packets in
    different source and repair flows, or in the\n      case Real-time Transport Protocol
    (RTP) transport is used for\n      repair packets, in different RTP streams.\n
    \  o  At the receiver side, if all of the source packets are\n      successfully
    received, there is no need for FEC recovery and the\n      repair packets are
    discarded.  However, if there are missing\n      source packets, the repair packets
    can be used to recover the\n      missing information.\n   The operation of the
    FEC mechanism requires that the receiver is able\n   to identify the relationships
    between received source packets and\n   repair packets, in particular, which source
    packets are missing.  In\n   many cases, data already exists in the source packets
    that can be\n   used to refer to source packets and to identify which packets
    are\n   missing.  In this case, we assume it is possible to derive a\n   \"sequence
    number\" directly or indirectly from the source packets, and\n   this sequence
    number can be used within the FEC Scheme.  This case is\n   referred to as a \"single
    sequenced flow\".  In this case, the FEC\n   Source Payload ID defined in [RFC6363]
    is empty and the source\n   packets are not modified by the application of FEC,
    with obvious\n   backwards compatibility advantages.\n   Otherwise, it is necessary
    to add data to the source packets for FEC\n   purposes in the form of a non-empty
    FEC Source Payload ID.  This is\n   referred to as the \"arbitrary packet flow\"
    case.  This document\n   defines six FEC Schemes, two for the case of a single
    sequenced flow\n   and four for the case of arbitrary packet flows.\n"
  title: 1.  Introduction
- contents:
  - "2.  Document Outline\n   This document is organized as follows:\n   o  Section
    5 defines general procedures applicable to the use of the\n      Raptor and RaptorQ
    codes in the context of the FEC Framework.\n   o  Section 6 defines a FEC Scheme
    for the case of arbitrary source\n      flows and follows the format defined for
    FEC Schemes in [RFC6363].\n      When used with Raptor codes, this scheme is equivalent
    to that\n      defined in 3GPP TS 26.346, \"Multimedia Broadcast/Multicast Service\n
    \     (MBMS); Protocols and codecs\" [MBMSTS].\n   o  Section 7 defines a FEC
    Scheme similar to that defined in Section\n      6 but with optimizations for
    the case where only limited source\n      block sizes are required.  When used
    with Raptor codes, this\n      scheme is equivalent to that defined in ETSI TS
    102.034, \"Digital\n      Video Broadcasting (DVB); Transport of MPEG-2 Based
    DVB Services\n      over IP Based Networks\" [DVBTS] for arbitrary packet flows.\n
    \  o  Section 8 defines a FEC Scheme for the case of a single flow,\n      which
    is already provided with a source packet sequence number.\n      When used with
    Raptor codes, this scheme is equivalent to that\n      defined in [DVBTS] for
    the case of a single sequenced flow.\n"
  title: 2.  Document Outline
- contents:
  - "3.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 3.  Requirements Notation
- contents:
  - "4.  Definitions and Abbreviations\n   The definitions, notations, and abbreviations
    commonly used in this\n   document are summarized in this section.\n"
  - contents:
    - "4.1.  Definitions\n   The FEC-specific terminology used in this document is
      defined in\n   [RFC6363].  In this document, as in [RFC6363], the first letter
      of\n   each FEC-specific term is capitalized along with the new terms\n   defined
      here:\n   Symbol:  A unit of data.  Its size, in octets, is referred to as the\n
      \     symbol size.\n   FEC Framework Configuration Information:  Information
      that controls\n      the operation of the FEC Framework.  Each FEC Framework
      instance\n      has its own configuration information.\n"
    title: 4.1.  Definitions
  - contents:
    - "4.2.  Abbreviations\n   This document uses abbreviations that apply to the
      FEC Framework in\n   general as defined in [RFC6363].  In addition, this document
      uses the\n   following abbreviations\n   FSSI:  FEC-Scheme-Specific Information.\n
      \  ADU:  Application Data Unit\n   ADUI:  Application Data Unit Information.\n
      \  SPI:  Source Packet Information.\n   MSBL:  Maximum Source Block Length\n"
    title: 4.2.  Abbreviations
  title: 4.  Definitions and Abbreviations
- contents:
  - "5.  General Procedures for Raptor FEC Schemes\n   This section specifies general
    procedures that apply to all Raptor\n   and RaptorQ FEC Schemes, specifically
    the construction of source\n   symbols from a set of source transport payloads.\n
    \  For any field defined in this document, the octets are ordered in\n   network
    byte order.\n   As described in [RFC6363], for each Application Data Unit (ADU)
    in a\n   source block, the FEC Scheme is provided with:\n   o  A description of
    the source data flow with which the ADU is\n      associated and an integer identifier
    associated with that flow.\n   o  The ADU itself.\n   o  The length of the ADU.\n
    \  For each ADU, we define the Application Data Unit Information (ADUI)\n   as
    follows:\n   Let\n   o  n be the number of ADUs in the source block.\n   o  T
    be the source symbol size in octets.  Note: this information is\n      provided
    by the FEC Scheme as defined below.\n   o  i the index to the (i+1)-th ADU to
    be added to the source block,\n      0 <= i < n.\n   o  f[i] denote the integer
    identifier associated with the source data\n      flow from which the i-th ADU
    was taken.\n   o  F[i] denote a single octet representing the value of f[i].\n
    \  o  l[i] be a length indication associated with the i-th ADU -- the\n      nature
    of the length indication is defined by the FEC Scheme.\n   o  L[i] denote two
    octets representing the value of l[i] in network\n      byte order (high order
    octet first) of the i-th ADU.\n   o  R[i] denote the number of octets in the (i+1)-th
    ADU.\n   o  s[i] be the smallest integer such that s[i]*T >= (l[i]+3).  Note:\n
    \     s[i] is the length of SPI[i] in units of symbols of size T octets.\n   o
    \ P[i] denote s[i]*T-(l[i]+3) zero octets.  Note: P[i] are padding\n      octets
    to align the start of each UDP packet with the start of a\n      symbol.\n   o
    \ ADUI[i] be the concatenation of F[i], L[i], R[i], and P[i].\n   Then, a source
    data block is constructed by concatenating ADUI[i] for\n   i = 0, 1, 2, ... n-1.
    \ The source data block size, S, is then given\n   by sum {s[i]*T, i=0, ..., n-1}.
    \ Symbols are allocated integer\n   encoding symbol IDs (ESI) consecutively starting
    from zero within the\n   source block.  Each ADU is associated with the ESI of
    the first\n   symbol containing SPI for that packet.  Thus, the encoding symbol
    ID\n   value associated with the j-th source packet, ESI[j], is given by\n   ESI[j]
    = 0, for j=0 and ESI[j] = sum{s[i], i=0,...,(j-1)}, for\n   0 < j < n.\n   Source
    blocks are identified by integer Source Block Numbers.  This\n   specification
    does not specify how Source Block Numbers are allocated\n   to the source blocks.
    \ The Source FEC Packet Identification\n   Information consists of the identity
    of the source block and the\n   encoding symbol ID associated with the packet.\n"
  title: 5.  General Procedures for Raptor FEC Schemes
- contents:
  - '6.  Raptor FEC Schemes for Arbitrary Packet Flows

    '
  - contents:
    - "6.1.  Introduction\n   This section specifies a FEC Scheme for the application
      of the Raptor\n   and RaptorQ codes to arbitrary packet flows.  This scheme
      is\n   recommended in scenarios where maximal generality is required.\n   When
      used with the Raptor codes specified in [RFC5053], this scheme\n   is equivalent
      to that specified in [MBMSTS].\n"
    title: 6.1.  Introduction
  - contents:
    - '6.2.  Formats and Codes

      '
    - contents:
      - '6.2.1.  FEC Framework Configuration Information

        '
      - contents:
        - "6.2.1.1.  FEC Scheme ID\n   The value of the FEC Scheme ID for the Fully-Specified
          FEC scheme\n   defined in this section is 1 when [RFC5053] is used and 2
          when\n   [RFC6330] is used, as assigned by IANA.\n"
        title: 6.2.1.1.  FEC Scheme ID
      - contents:
        - "6.2.1.2.  Scheme-Specific Elements\n   The scheme-specific elements of
          the FEC Framework Configuration\n   information for this scheme are as follows:\n
          \  MSBL: The maximum source block length.  A non-negative integer less\n
          \     than 8192 for FEC Scheme 1 and less than 56403 for FEC Scheme 2,\n
          \     in units of symbols.  The field type is unsigned integer.\n   T: The
          encoding symbol size.  A non-negative integer less than 65536,\n      in
          units of octets.  The field type is unsigned integer.\n   P: The payload
          ID format indicator.  The P bit shall be set to zero\n      to indicate
          payload ID format A or to one to indicate payload ID\n      format B.  The
          field type is unsigned integer.\n   An encoding format for the encoding
          symbol size, MSBL and payload ID\n   format indicator is defined below.\n
          \                          1                   2                   3\n       0
          1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \     |       Symbol Size (T)         |          MSBL                 |\n
          \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \     |P|  Reserved   |\n      +-+-+-+-+-+-+-+-+\n                 Figure
          1: FEC-Scheme-Specific Information\n   The P bit shall be set to zero to
          indicate Payload ID format A or to\n   one to indicate Payload ID format
          B.  The last octet of FEC-Scheme-\n   Specific Information SHOULD be omitted,
          indicating that Payload ID\n   format A is in use.  The payload ID format
          indicator defines which of\n   the Source FEC Payload ID and Repair FEC
          Payload ID formats defined\n   below shall be used.  Payload ID format B
          SHALL NOT be used for FEC\n   Scheme 1.  The two formats enable different
          use cases.  Format A is\n   appropriate in case the stream has many typically
          smaller source\n   blocks, and format B is applicable if the stream has
          fewer large\n   source blocks, each with many encoding symbols.\n"
        title: 6.2.1.2.  Scheme-Specific Elements
      title: 6.2.1.  FEC Framework Configuration Information
    - contents:
      - "6.2.2.  Source FEC Payload ID\n   This scheme makes use of an Explicit Source
        FEC Payload ID, which is\n   appended to the end of the source packets.  Two
        formats are defined\n   for the Source FEC Payload ID, format A and format
        B.  The format\n   that is used is signaled as part of the FEC Framework Configuration\n
        \  Information.\n   The Source FEC Payload ID for format A is provided in
        Figure 2.\n                           1                   2                   3\n
        \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 2: Source FEC Payload ID - Format A\n   Source Block
        Number (SBN), (16 bits): Identifier for the source block\n      that the source
        data within the packet relates.  The field type is\n      unsigned integer.\n
        \  Encoding Symbol ID (ESI), (16 bits): The starting symbol index of the\n
        \     source packet in the source block.  The field type is unsigned\n      integer.\n
        \  The Source FEC Payload ID for format B is provided in Figure 3.\n                           1
        \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |      SBN      |            Encoding Symbol ID (ESI)           |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 3: Source FEC Payload ID - Format B\n   Source Block
        Number (SBN), (8 bits): Identifier for the source block\n      that the source
        data within the packet relates.  The field type is\n      unsigned integer.\n
        \  Encoding Symbol ID (ESI), (24 bits): The starting symbol index of the\n
        \     source packet in the source block.  The field type is unsigned\n      integer.\n"
      title: 6.2.2.  Source FEC Payload ID
    - contents:
      - "6.2.3.  Repair FEC Payload ID\n   Two formats for the Repair FEC Payload
        ID, format A and format B, are\n   defined below.\n   The Repair FEC Payload
        ID for format A is provided in Figure 4.\n                           1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |   Source Block Number (SBN)   |   Encoding Symbol ID (ESI)    |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |   Source Block Length (SBL)   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 4: Repair FEC Payload ID - Format A\n   Source Block
        Number (SBN), (16 bits): Identifier for the source block\n      that the repair
        symbols within the packet relate.  For format A,\n      it is of size 16 bits.
        \ The field type is unsigned integer.\n   Encoding Symbol ID (ESI), (16 bits):
        Identifier for the encoding\n      symbols within the packet.  The field type
        is unsigned integer.\n   Source Block Length (SBL), (16 bits): The number
        of source symbols in\n      the source block.  The field type is unsigned
        integer.\n   The Repair FEC Payload ID for format B is provided in Figure
        5.\n                           1                   2                   3\n
        \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |      SBN      |            Encoding Symbol ID (ESI)           |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |   Source Block Length (SBL)   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 5: Repair FEC Payload ID - Format B\n   Source Block
        Number (SBN), (8 bits): Identifier for the source block\n      that the repair
        symbols within the packet relate.  For format B,\n      it is of size 8 bits.
        \ The field type is unsigned integer.\n   Encoding Symbol ID (ESI), (24 bits):
        Identifier for the encoding\n      symbols within the packet.  The field type
        is unsigned integer.\n   Source Block Length (SBL), (16 bits): The number
        of source symbols in\n      the source block.  The field type is unsigned
        integer.\n   The interpretation of the Source Block Number, encoding symbol
        ID,\n   and Source Block Length is defined by the FEC Code Specification in\n
        \  [RFC5053] for FEC Scheme 1 and [RFC6330] for FEC Scheme 2.\n"
      title: 6.2.3.  Repair FEC Payload ID
    title: 6.2.  Formats and Codes
  - contents:
    - '6.3.  Procedures

      '
    - contents:
      - "6.3.1.  Source Symbol Construction\n   FEC Scheme 1 and FEC Scheme 2 use
        the procedures defined in Section 5\n   to construct a set of source symbols
        to which the FEC Code can be\n   applied.  The sender MUST allocate Source
        Block Numbers to source\n   blocks sequentially, wrapping around to zero after
        Source Block\n   Number 65535 (format A) or 255 (format B).\n   During the
        construction of the source block:\n   o  the length indication, l[i], included
        in the Source Packet\n      Information for each packet shall be the transport
        payload length,\n      i.e., the length of the ADU.\n   o  the value of s[i]
        in the construction of the Source Packet\n      Information for each packet
        shall be the smallest integer such\n      that s[i]*T >= (l[i]+3).\n"
      title: 6.3.1.  Source Symbol Construction
    - contents:
      - "6.3.2.  Repair Packet Construction\n   For FEC Scheme 1 [RFC5053], the ESI
        value placed into a repair packet\n   is calculated as specified in Section
        5.3.2 of [RFC5053].\n   For FEC Scheme 2 [RFC6330], the ESI value placed into
        a repair packet\n   is calculated as specified in Section 4.4.2 of [RFC6330].\n
        \  In both cases, K is identical to SBL.\n"
      title: 6.3.2.  Repair Packet Construction
    title: 6.3.  Procedures
  - contents:
    - "6.4.  FEC Code Specification\n   The FEC encoder defined in [RFC5053] SHALL
      be used for FEC Scheme 1\n   and the FEC encoder defined in [RFC6330] SHALL
      be used for FEC Scheme\n   2.  For both FEC Scheme 1 and FEC Scheme 2, the source
      symbols passed\n   to the FEC encoder SHALL consist of the source symbols constructed\n
      \  according to Section 6.3.1.  Thus, the value of the parameter K used\n   by
      the FEC encoder (equal to the Source Block Length) may vary\n   amongst the
      blocks of the stream but SHALL NOT exceed the Maximum\n   Source Block Length
      signaled in the FEC-Scheme-Specific Information.\n   The symbol size, T, to
      be used for source block construction and the\n   repair symbol construction
      is equal to the encoding symbol size\n   signaled in the FEC-Scheme-Specific
      Information.\n"
    title: 6.4.  FEC Code Specification
  title: 6.  Raptor FEC Schemes for Arbitrary Packet Flows
- contents:
  - '7.  Optimized Raptor FEC Scheme for Arbitrary Packet Flows

    '
  - contents:
    - "7.1.  Introduction\n   This section specifies a slightly modified version of
      the FEC Scheme\n   specified in Section 6 that is applicable to scenarios in
      which only\n   relatively small block sizes will be used.  These modifications
      admit\n   substantial optimizations to both sender and receiver\n   implementations.\n
      \  In outline, the modifications are:\n   o  All source blocks within a stream
      are encoded using the same\n      source block size.  Code shortening is used
      to encode blocks of\n      different sizes.  This is achieved by padding every
      block to the\n      required size using zero symbols before encoding.  The zero\n
      \     symbols are then discarded after decoding.  The source block size\n      to
      be used for a stream is signaled in the Maximum Source Block\n      Length (MSBL)
      field of the scheme-specific information.  The\n      extended source block
      is constructed by adding zero or more\n      padding symbols such that the total
      number of symbols, MSBL, is\n      one of the values listed in Section 7.4.
      \ Each padding symbol\n      consists of T octets where the value of each octet
      is zero.  MSBL\n      MUST be selected as the smallest value of the possible
      values in\n      Section 7.4 that is greater than or equal to K.\n   o  The
      possible choices of the MSBL for a stream is restricted to a\n      small specified
      set.  This allows explicit operation sequences for\n      encoding and decoding
      the restricted set of source block lengths\n      to be pre-calculated and embedded
      in software or hardware.\n   When used with the Raptor codes specified in [RFC5053],
      this scheme\n   is equivalent to that specified in [DVBTS] for arbitrary packet\n
      \  flows.\n"
    title: 7.1.  Introduction
  - contents:
    - '7.2.  Formats and Codes

      '
    - contents:
      - '7.2.1.  FEC Framework Configuration Information

        '
      - contents:
        - "7.2.1.1.  FEC Scheme ID\n   The value of the FEC Scheme ID for the Fully-Specified
          FEC scheme\n   defined in this section is 3 when [RFC5053] is used and 4
          when\n   [RFC6330] is used, as assigned by IANA.\n"
        title: 7.2.1.1.  FEC Scheme ID
      - contents:
        - "7.2.1.2.  FEC-Scheme-Specific Information\n   The elements for FEC Scheme
          3 are the same as specified for FEC\n   Scheme 1, and the elements specified
          for FEC Scheme 4 are the same as\n   specified for FEC 2, as specified in
          Section 6.2.1.2, except that the\n   MSBL value is as defined in Section
          7.4.\n"
        title: 7.2.1.2.  FEC-Scheme-Specific Information
      title: 7.2.1.  FEC Framework Configuration Information
    - contents:
      - "7.2.2.  Source FEC Payload ID\n   The elements for FEC Scheme 3 are the same
        as specified for FEC\n   Scheme 1, and the elements specified for FEC Scheme
        4 are the same as\n   specified for FEC 2, as specified in Section 6.2.2.\n"
      title: 7.2.2.  Source FEC Payload ID
    - contents:
      - "7.2.3.  Repair FEC Payload ID\n   The elements for FEC Scheme 3 are the same
        as specified for FEC\n   Scheme 1, and the elements specified for FEC Scheme
        4 are the same as\n   specified for FEC 2, as specified in Section 6.2.3.\n"
      title: 7.2.3.  Repair FEC Payload ID
    title: 7.2.  Formats and Codes
  - contents:
    - '7.3.  Procedures

      '
    - contents:
      - "7.3.1.  Source Symbol Construction\n   See Section 6.3.1.\n"
      title: 7.3.1.  Source Symbol Construction
    - contents:
      - "7.3.2.  Repair Packet Construction\n   The number of repair symbols contained
        within a repair packet is\n   computed from the packet length.  The ESI value
        placed into a repair\n   packet is calculated as X + MSBL - SBL, where X would
        be the ESI\n   value of the repair packet if the ESI were calculated as specified
        in\n   Section 5.3.2 of [RFC5053] for FEC Scheme 3 and as specified in\n   Section
        4.4.2 of [RFC6330] for FEC Scheme 4, where K=SBL.  The value\n   of SBL SHALL
        be, at most, the value of MSBL.\n"
      title: 7.3.2.  Repair Packet Construction
    title: 7.3.  Procedures
  - contents:
    - "7.4.  FEC Code Specification\n   The FEC encoder defined in [RFC5053] SHALL
      be used for FEC Scheme 3\n   and the FEC encoder defined in [RFC6330] SHALL
      be used for FEC Scheme\n   4.  The source symbols passed to the FEC encoder
      SHALL consist of the\n   source symbols constructed according to Section 6.3.1
      extended with\n   zero or more padding symbols.  The extension SHALL be such
      that the\n   total number of symbols in the source block is equal to the MSBL\n
      \  signaled in the FEC-Scheme-Specific Information.  Thus, the value of\n   the
      parameter K used by the FEC encoder is equal to the MSBL for all\n   blocks
      of the stream.  Padding symbols shall consist entirely of\n   octets set to
      the value zero.  The symbol size, T, to be used for the\n   source block construction
      and the repair symbol construction, is\n   equal to the encoding symbol size
      signaled in the FEC-Scheme-Specific\n   Information.\n   For FEC Scheme 3, the
      parameter T SHALL be set such that the number\n   of source symbols in any source
      block is, at most, 8192.  The MSBL\n   parameter, and hence the number of symbols
      used in the FEC Encoding\n   and Decoding operations, SHALL be set to one of
      the following values:\n      101, 120, 148, 164, 212, 237, 297, 371, 450, 560,
      680, 842, 1031,\n      1139, 1281\n   For FEC Scheme 4, the parameter T SHALL
      be set such that the number\n   of source symbols in any source block is less
      than 56403.  The MSBL\n   parameter SHALL be set to one of the supported values
      for K' defined\n   in Section 5.6 of [RFC6330].\n"
    title: 7.4.  FEC Code Specification
  title: 7.  Optimized Raptor FEC Scheme for Arbitrary Packet Flows
- contents:
  - '8.  Raptor FEC Scheme for a Single Sequenced Flow

    '
  - contents:
    - '8.1.  Formats and Codes

      '
    - contents:
      - '8.1.1.  FEC Framework Configuration Information

        '
      - contents:
        - "8.1.1.1.  FEC Scheme ID\n   The value of the FEC Scheme ID for the Fully-Specified
          FEC scheme\n   defined in this section is 5 when [RFC5053] is used and 6
          when\n   [RFC6330] is used, as assigned by IANA.\n"
        title: 8.1.1.1.  FEC Scheme ID
      - contents:
        - "8.1.1.2.  Scheme-Specific Elements\n   The elements for FEC Scheme 5 are
          the same as specified for FEC\n   Scheme 1, and the elements specified for
          FEC Scheme 6 are the same as\n   specified for FEC 2, as specified in Section
          6.2.1.2.\n"
        title: 8.1.1.2.  Scheme-Specific Elements
      title: 8.1.1.  FEC Framework Configuration Information
    - contents:
      - "8.1.2.  Source FEC Payload ID\n   The Source FEC Payload ID field is not
        used by this FEC Scheme.\n   Source packets are not modified by this FEC Scheme.\n"
      title: 8.1.2.  Source FEC Payload ID
    - contents:
      - "8.1.3.  Repair FEC Payload ID\n   Two formats for the Repair FEC Payload
        ID are defined, format A and\n   format B.\n                           1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |    Initial Sequence Number    |      Source Block Length      |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |      Encoding Symbol ID       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 6: Repair FEC Payload ID - Format A\n   Initial Sequence
        Number (Flow i ISN), (16 bits): This field specifies\n      the lowest 16
        bits of the sequence number of the first packet to\n      be included in this
        sub-block.  If the sequence numbers are\n      shorter than 16 bits, then
        the received Sequence Number SHALL be\n      logically padded with zero bits
        to become 16 bits in length,\n      respectively.  The field type is unsigned
        integer.\n   Source Block Length (SBL), (16 bits): This field specifies the
        length\n      of the source block in symbols.  The field type is unsigned\n
        \     integer.\n   Encoding Symbol ID (ESI), (16 bits): This field indicates
        which\n      repair symbols are contained within this repair packet.  The
        ESI\n      provided is the ESI of the first repair symbol in the packet.  The\n
        \     field type is unsigned integer.\n                           1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |    Initial Sequence Number    |      Source Block Length      |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                 Encoding Symbol ID            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 7: Repair FEC Payload ID - Format B\n   Initial Sequence
        Number (Flow i ISN), (16 bits): This field specifies\n      the lowest 16
        bits of the sequence number in the first packet to\n      be included in this
        sub-block.  If the sequence numbers are\n      shorter than 16 bits, then
        the received Sequence Number SHALL be\n      logically padded with zero bits
        to become 16 bits in length,\n      respectively.  The field type is unsigned
        integer.\n   Source Block Length (SBL), (16 bits): This field specifies the
        length\n      of the source block in symbols.  The field type is unsigned\n
        \     integer.\n   Encoding Symbol ID (ESI); (24 bits): This field indicates
        which\n      repair symbols are contained within this repair packet.  The
        ESI\n      provided is the ESI of the first repair symbol in the packet.  The\n
        \     field type is unsigned integer.\n"
      title: 8.1.3.  Repair FEC Payload ID
    title: 8.1.  Formats and Codes
  - contents:
    - '8.2.  Procedures

      '
    - contents:
      - "8.2.1.  Source Symbol Construction\n   FEC Scheme 5 and FEC Scheme 6 use
        the procedures defined in Section 5\n   to construct a set of source symbols
        to which the FEC code can be\n   applied.\n   During the construction of the
        source block:\n   o  the length indication, l[i], included in the Source Packet\n
        \     Information for each packet shall be dependent on the protocol\n      carried
        within the transport payload.  Rules for RTP are specified\n      below.\n
        \  o  the value of s[i] in the construction of the Source Packet\n      Information
        for each packet shall be the smallest integer such\n      that s[i]*T >= (l[i]+3)\n"
      title: 8.2.1.  Source Symbol Construction
    - contents:
      - "8.2.2.  Derivation of Source FEC Packet Identification Information\n   The
        Source FEC Packet Identification Information for a source packet\n   is derived
        from the sequence number of the packet and information\n   received in any
        repair FEC packet belonging to this source block.\n   Source blocks are identified
        by the sequence number of the first\n   source packet in the block.  This
        information is signaled in all\n   repair FEC packets associated with the
        source block in the Initial\n   Sequence Number field.\n   The length of the
        Source Packet Information (in octets) for source\n   packets within a source
        block is equal to the length of the payload\n   containing encoding symbols
        of the repair packets (i.e., not\n   including the Repair FEC Payload ID)
        for that block, which MUST be\n   the same for all repair packets.  The Application
        Data Unit\n   Information Length (ADUIL) in symbols is equal to this length
        divided\n   by the encoding symbol size (which is signaled in the FEC Framework\n
        \  Configuration Information).  The set of source packets included in\n   the
        source block is determined by the Initial Sequence Number (ISN)\n   and Source
        Block Length (SBL) as follows:\n   Let,\n   o  I be the Initial Sequence Number
        of the source block\n   o  LP be the Source Packet Information Length in symbols\n
        \  o  LB be the Source Block Length in symbols\n   Then, source packets with
        sequence numbers from I to I +(LB/LP)-1\n   inclusive are included in the
        source block.  The Source Block Length,\n   LB, MUST be chosen such that it
        is at least as large as the largest\n   Source Packet Information Length LP.\n
        \  Note that if no FEC repair packets are received, then no FEC decoding\n
        \  is possible, and it is unnecessary for the receiver to identify the\n   Source
        FEC Packet Identification Information for the source packets.\n   The encoding
        symbol ID for a packet is derived from the following\n   information:\n   o
        \ The sequence number, Ns, of the packet\n   o  The Source Packet Information
        Length for the source block, LP\n   o  The Initial Sequence Number of the
        source block, I\n   Then, the encoding symbol ID for the packet with sequence
        number Ns\n   is determined by the following formula:\n      ESI = ( Ns -
        I ) * LP\n   Note that all repair packets associated to a given source block
        MUST\n   contain the same Source Block Length and Initial Sequence Number.\n
        \  Note also that the source packet flow processed by the FEC encoder\n   MUST
        have consecutive sequence numbers.  In case the incoming source\n   packet
        flow has a gap in the sequence numbers, then implementors\n   SHOULD insert
        an ADU in the source block that complies to the format\n   of the source packet
        flow, but is ignored at the application with\n   high probability.  For additional
        guidelines, refer to [RFC6363],\n   Section 10.2, paragraph 5.\n"
      title: 8.2.2.  Derivation of Source FEC Packet Identification Information
    - contents:
      - "8.2.3.  Repair Packet Construction\n   See Section 7.3.2\n"
      title: 8.2.3.  Repair Packet Construction
    - contents:
      - "8.2.4.  Procedures for RTP Source Flows\n   In the specific case of RTP source
        packet flows, the RTP Sequence\n   Number field SHALL be used as the sequence
        number in the procedures\n   described above.  The length indication included
        in the Application\n   Data Unit Information SHALL be the RTP payload length
        plus the length\n   of the contributing sources (CSRCs), if any, the RTP Header\n
        \  Extension, if present, and the RTP padding octets, if any.  Note that\n
        \  this length is always equal to the UDP payload length of the packet\n   minus
        12.\n"
      title: 8.2.4.  Procedures for RTP Source Flows
    title: 8.2.  Procedures
  - contents:
    - "8.3.  FEC Code Specification\n   The elements for FEC Scheme 5 are the same
      as specified for FEC\n   Scheme 3, and the elements specified for FEC Scheme
      6 are the same as\n   specified for FEC 4, as specified in Section 7.4.\n"
    title: 8.3.  FEC Code Specification
  title: 8.  Raptor FEC Scheme for a Single Sequenced Flow
- contents:
  - "9.  Security Considerations\n   For the general security considerations related
    to the use of FEC,\n   refer to [RFC6363].  Also consider relevant security considerations\n
    \  in [RFC5053] and [RFC6330].  No security vulnerabilities specific to\n   this
    document have been identified.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Session Description Protocol (SDP) Signaling\n   This section provides an
    SDP [RFC4566] example.  The syntax follows\n   the definition in [RFC6364].  Assume
    we have one source video stream\n   (mid:S1) and one FEC repair stream (mid:R1).
    \ We form one FEC group\n   with the \"a=group:FEC-FR S1 R1\" line.  The source
    and repair streams\n   are sent to the same port on different multicast groups.
    \ The repair\n   window is set to 200 ms.\n        v=0\n        o=ali 1122334455
    1122334466 IN IP4 fec.example.com\n        s=Raptor FEC Example\n        t=0 0\n
    \       a=group:FEC-FR S1 R1\n        m=video 30000 RTP/AVP 100\n        c=IN
    IP4 233.252.0.1/127\n        a=rtpmap:100 MP2T/90000\n        a=fec-source-flow:
    id=0\n        a=mid:S1\n        m=application 30000 UDP/FEC\n        c=IN IP4
    233.252.0.2/127\n        a=fec-repair-flow: encoding-id=6; fssi=Kmax:8192,T:128,P:A\n
    \       a=repair-window:200ms\n        a=mid:R1\n"
  title: 10.  Session Description Protocol (SDP) Signaling
- contents:
  - "11.  Congestion Control Considerations\n   For the general congestion control
    considerations related to the use\n   of FEC, refer to [RFC6363].\n"
  title: 11.  Congestion Control Considerations
- contents:
  - '12.  IANA Considerations

    '
  - contents:
    - "12.1.  Registration of FEC Scheme IDs\n   The value of FEC Scheme IDs is subject
      to IANA registration.  For\n   general guidelines on IANA considerations as
      they apply to this\n   document, refer to [RFC6363].\n   This document registers
      six values in the \"FEC Framework (FECFRAME)\n   FEC Encoding IDs\" registry
      (http://www.iana.org/assignments/\n   rmt-fec-parameters/) as provided in Table
      1.  Each value refers to a\n   Fully-Specified FEC scheme.\n   +----------+---------------------+----------------------------------+\n
      \  | FEC      | FEC Scheme          | Reference                        |\n   |
      Encoding | Description         |                                  |\n   | ID
      \      |                     |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 1        | Raptor FEC Scheme   | Section 6 in this document using |\n   |
      \         | for Arbitrary       | [RFC5053]                        |\n   |          |
      Packet Flows        |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 2        | RaptorQ FEC Scheme  | Section 6 in this document using |\n   |
      \         | for Arbitrary       | [RFC6330].                       |\n   |          |
      Packet Flows        |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 3        | Raptor FEC Scheme   | Section 7 in this document using |\n   |
      \         | Optimized for       | Raptor [RFC5053].                |\n   |          |
      Arbitrary Packet    |                                  |\n   |          | Flows
      \              |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 4        | RaptorQ FEC Scheme  | Section 7 in this document       |\n   |
      \         | Optimized for       | using RaptorQ [RFC6330].         |\n   |          |
      Arbitrary Packet    |                                  |\n   |          | Flows
      \              |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 5        | Raptor FEC Scheme   | Section 8 in this document using |\n   |
      \         | for a Single        | Raptor [RFC5053].                |\n   |          |
      Sequence Flow       |                                  |\n   +----------+---------------------+----------------------------------+\n
      \  | 6        | RaptorQ FEC Scheme  | Section 8 in this document using |\n   |
      \         | for a Single        | RaptorQ [RFC6330].               |\n   |          |
      Sequence Flow       |                                  |\n   +----------+---------------------+----------------------------------+\n
      \           Table 1: FEC Framework (FECFRAME) FEC Encoding IDs\n"
    title: 12.1.  Registration of FEC Scheme IDs
  title: 12.  IANA Considerations
- contents:
  - "13.  Acknowledgements\n   Thanks are due to Ali C. Begen and David Harrington
    for thorough\n   review of earlier draft versions of this document.\n"
  title: 13.  Acknowledgements
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC6363]  Watson, M., Begen, A., and V. Roca,
      \"Forward Error\n              Correction (FEC) Framework\", RFC 6363, October
      2011.\n   [RFC5053]  Luby, M., Shokrollahi, A., Watson, M., and T. Stockhammer,\n
      \             \"Raptor Forward Error Correction Scheme for Object\n              Delivery\",
      RFC 5053, October 2007.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
      to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [RFC6330]  Luby, M., Shokrollahi, A., Watson, M., Stockhammer, T.,\n              and
      L. Minder, \"RaptorQ Forward Error Correction Scheme\n              for Object
      Delivery\", RFC 6330, August 2011.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [RFC5052]  Watson, M., Luby, M., and L. Vicisano,
      \"Forward Error\n              Correction (FEC) Building Block\", RFC 5052,
      August 2007.\n   [RFC4566]  Handley, M., Jacobson, V., and C. Perkins, \"SDP:
      Session\n              Description Protocol\", RFC 4566, July 2006.\n   [RFC6364]
      \ Begen, A., \"Session Description Protocol Elements for the\n              Forward
      Error Correction (FEC) Framework\", RFC 6364,\n              October 2011.\n
      \  [DVBTS]    ETSI, \"Digital Video Broadcasting (DVB); Transport of\n              MPEG-2
      Based DVB Services over IP Based Networks\", ETSI TS\n              102 034,
      March 2009.\n   [MBMSTS]   3GPP, \"Multimedia Broadcast/Multicast Service (MBMS);\n
      \             Protocols and codecs\", 3GPP TS 26.346, April 2005.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Mark Watson\n   Netflix\n   100 Winchester Circle\n   Los
    Gatos, CA 95032\n   United States\n   EMail:  watsonm@netflix.com\n   Thomas Stockhammer\n
    \  Nomor Research\n   Brecherspitzstrasse 8\n   Munich 81541\n   Germany\n   EMail:
    \ stockhammer@nomor.de\n   Michael Luby\n   Qualcomm Research Berkeley\n   2030
    Addison Street\n   Berkeley, CA 94704\n   United States\n   EMail:  luby@qualcomm.com\n"
  title: Authors' Addresses
