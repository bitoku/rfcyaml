- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                     D. Kutscher, Ed.
  contents:
  - "Internet Research Task Force (IRTF)                     D. Kutscher, Ed.\n  \
    \      Information-Centric Networking (ICN) Research Challenges\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes research challenges for Information-Centric\n\
    \   Networking (ICN), an approach to evolve the Internet infrastructure\n   to\
    \ directly support information distribution by introducing uniquely\n   named\
    \ data as a core Internet principle.  Data becomes independent\n   from location,\
    \ application, storage, and means of transportation,\n   enabling or enhancing\
    \ a number of desirable features, such as\n   security, user mobility, multicast,\
    \ and in-network caching.\n   Mechanisms for realizing these benefits is the subject\
    \ of ongoing\n   research in the IRTF and elsewhere.  This document describes\
    \ current\n   research challenges in ICN, including naming, security, routing,\n\
    \   system scalability, mobility management, wireless networking,\n   transport\
    \ services, in-network caching, and network management.\n   This document is a\
    \ product of the IRTF Information-Centric Networking\n   Research Group (ICNRG).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Information-\n   Centric Networking Research Group of the Internet Research\
    \ Task Force\n   (IRTF).  Documents approved for publication by the IRSG are not\
    \ a\n   candidate for any level of Internet Standard; see Section 2 of RFC\n \
    \  7841.\n   Information about the current status of this document, any errata,\n\
    \   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7927.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \   2. Problems with Host-Centric Communications .......................4\n  \
    \ 3. ICN Terminology and Concepts ....................................6\n    \
    \  3.1. Terminology ................................................6\n      3.2.\
    \ Concepts ...................................................6\n   4. ICN Research\
    \ Challenges .........................................8\n      4.1. Naming, Data\
    \ Integrity, and Data Origin Authentication .....8\n      4.2. Security ..................................................10\n\
    \           4.2.1. Data Integrity and Origin Authentication ...........10\n  \
    \         4.2.2. Binding NDOs to Real-World Identities ..............11\n    \
    \       4.2.3. Access Control and Authorization ...................12\n      \
    \     4.2.4. Encryption .........................................13\n        \
    \   4.2.5. Traffic Aggregation and Filtering ..................13\n          \
    \ 4.2.6. State Overloading ..................................13\n           4.2.7.\
    \ Delivering Data Objects from Replicas ..............14\n           4.2.8. Cryptographic\
    \ Robustness ...........................14\n           4.2.9. Routing and Forwarding\
    \ Information Bases ...........15\n      4.3. Routing and Resolution System Scalability\
    \ .................15\n           4.3.1. Route-By-Name Routing ..............................15\n\
    \           4.3.2. Lookup-By-Name Routing .............................16\n  \
    \         4.3.3. Hybrid Routing .....................................17\n    \
    \  4.4. Mobility Management .......................................18\n      4.5.\
    \ Wireless Networking .......................................20\n      4.6. Rate\
    \ and Congestion Control ...............................22\n      4.7. In-Network\
    \ Caching ........................................24\n           4.7.1. Cache\
    \ Placement ....................................24\n           4.7.2. Content\
    \ Placement: Content-to-Cache Distribution ...25\n           4.7.3. Request-to-Cache\
    \ Routing ...........................26\n           4.7.4. Staleness Detection\
    \ of Cached NDOs .................26\n           4.7.5. Cache Sharing by Multiple\
    \ Applications .............27\n      4.8. Network Management ........................................27\n\
    \      4.9. ICN Applications ..........................................29\n  \
    \         4.9.1. Web Applications ...................................30\n    \
    \       4.9.2. Video Streaming and Download .......................30\n      \
    \     4.9.3. Internet of Things .................................31\n   5. Security\
    \ Considerations ........................................32\n   6. Informative\
    \ References .........................................32\n   Acknowledgments ...................................................37\n\
    \   Authors' Addresses ................................................37\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Information-Centric Networking (ICN) is an approach to evolve\
    \ the\n   Internet infrastructure to directly support accessing Named Data\n \
    \  Objects (NDOs) as a first-order network service.  Data objects become\n   independent\
    \ of location, application, storage, and means of\n   transportation, allowing\
    \ for inexpensive and ubiquitous in-network\n   caching and replication.  The\
    \ expected benefits are improved\n   efficiency and security, better scalability\
    \ with respect to\n   information/bandwidth demand, and better robustness in challenging\n\
    \   communication scenarios.\n   ICN concepts can be deployed by retooling the\
    \ protocol stack: name-\n   based data access can be implemented on top of the\
    \ existing IP\n   infrastructure, e.g., by allowing for named data structures,\n\
    \   ubiquitous caching, and corresponding transport services, or it can\n   be\
    \ seen as a packet-level internetworking technology that would cause\n   fundamental\
    \ changes to Internet routing and forwarding.  In summary,\n   ICN can evolve\
    \ the Internet architecture towards a network model\n   based on named data with\
    \ different properties and different services.\n   This document presents the\
    \ ICN research challenges that need to be\n   addressed in order to achieve these\
    \ goals.  These research challenges\n   are seen from a technical perspective,\
    \ although business\n   relationships between Internet players will also influence\n\
    \   developments in this area.  We leave business challenges for a\n   separate\
    \ document, however.  The objective of this memo is to\n   document the technical\
    \ challenges and corresponding current\n   approaches and to expose requirements\
    \ that should be addressed by\n   future research work.\n   This document has\
    \ been reviewed, commented on, and discussed\n   extensively for nearly two years\
    \ by the vast majority of ICNRG\n   members, which certainly exceeds 100 individuals.\
    \  It is the\n   consensus of ICNRG that the research challenges described in\
    \ this\n   document should be published in the IRTF stream of the RFC series.\n\
    \   This document does not constitute a standard.\n"
- title: 2.  Problems with Host-Centric Communications
  contents:
  - "2.  Problems with Host-Centric Communications\n   The best current practice to\
    \ manage the above-mentioned growth in\n   terms of data volume and number of\
    \ devices is to increase\n   infrastructure investment, employ application-layer\
    \ overlays that\n   cache content such as Content Distribution Networks (CDNs)\
    \ and Peer-\n   to-Peer (P2P) applications, provide location-independent access\
    \ to\n   data, and optimize its delivery.  In principle, such platforms\n   provide\
    \ a service model of accessing named data objects (NDOs) (e.g.,\n   replicated\
    \ web resources in data centers) instead of a host-to-host\n   packet delivery\
    \ service model.\n   However, since this functionality resides in overlays only,\
    \ the full\n   potential of content distribution platforms cannot be leveraged\
    \ as\n   the network is not aware of data requests and data transmissions.\n \
    \  This has the following impact:\n   o  Data traffic typically follows sub-optimal\
    \ paths as it is\n      effectively routed, depending on the overlay topology\
    \ instead of\n      the Internet-layer topology.\n   o  Network capabilities,\
    \ such as multicast and broadcast, are largely\n      underutilized or not employed\
    \ at all.  As a result, request and\n      delivery for the same object have to\
    \ be made multiple times.\n   o  Overlays typically require significant infrastructure\
    \ support,\n      e.g., authentication portals, content storage, and applications\n\
    \      servers, making it often impossible to establish local, direct\n      communication.\n\
    \   o  The forwarding layer cannot cooperate with transport-layer\n      functions,\
    \ so sometimes useful functionality such as local\n      retransmission and local\
    \ rate control have to be implemented with\n      TCP proxies or other intermediaries.\n\
    \   o  Provenance validation uses host authentication today.  As such,\n     \
    \ even if there are locally cached copies available, it is normally\n      not\
    \ easily possible to validate their authenticity.\n   o  Many applications follow\
    \ their own approach to caching,\n      replication, transport, and authenticity\
    \ validation (if at all),\n      although they all share similar models for accessing\
    \ named data\n      objects in the network.\n   Host-centric communication systems\
    \ restrict applications to data\n   transfer between end-hosts only.  Naming data\
    \ directly provides a\n   powerful \"hook\" for applications to exploit and natively\
    \ support\n   multi-party communication, e.g., multi-source/multi-destination\n\
    \   communication and a ubiquitous information ecosystem that is not\n   restricted\
    \ to end-host addresses.\n"
- title: 3.  ICN Terminology and Concepts
  contents:
  - '3.  ICN Terminology and Concepts

    '
- title: 3.1.  Terminology
  contents:
  - "3.1.  Terminology\n   Information-Centric Networking (ICN):  A concept for communicating\
    \ in\n      a network that provides accessing named data objects as a first\n\
    \      order service.  See Section 3.2 for details.\n   Named Data Object (NDO):\
    \  Addressable data unit in an information-\n      centric network that can represent\
    \ a collection of bytes or a\n      piece of information.  In ICN, each data object\
    \ has a name bound\n      to it, and there are typically mechanisms to secure\
    \ (and validate)\n      this binding.  Different ICN approaches have different\
    \ concepts\n      for how to map NDOs to individual units of transport, e.g.,\
    \ chunks\n      and segments.  Sometimes smaller units may be represented by NDOs\n\
    \      themselves.  Within the context of this document, an NDO is any\n     \
    \ named data object that can be requested from the network, and we\n      do not\
    \ consider sub-units below the NDO level.  In this document,\n      we often use\
    \ the terms \"NDO\" and \"data object\" interchangeably.\n   Requestor:  Entity\
    \ in an ICN network that is sending a request for a\n      named data object to\
    \ the network.\n   Publisher:  Entity in an ICN network that publishes an NDO\
    \ to the\n      network, so that corresponding requests can reach the publisher.\n\
    \      The publisher does not need to be identical to the actual creator,\n  \
    \    for example, a publisher could provide the service of hosting NDOs\n    \
    \  on behalf of the actual creators/owners.\n"
- title: 3.2.  Concepts
  contents:
  - "3.2.  Concepts\n   Fundamentally, ICN provides access to named data as a first-order\n\
    \   network service, i.e., the network is able to serve requests to named\n  \
    \ data natively.  That means network nodes can receive requests for\n   named\
    \ data and act as necessary, for example, by forwarding the\n   request to a suitable\
    \ next hop.  Consequently, the network processes\n   requests for named data objects\
    \ (and corresponding responses)\n   natively.  Every network node on a path is\
    \ enabled to perform\n   forwarding decisions, cache objects, etc.  This enables\
    \ the network\n   to forward such requests on optimal paths, employing the best\n\
    \   transmission technologies at every node, e.g., broadcast/multicast\n   transmission\
    \ in wireless networks to avoid duplicate transmission of\n   both requests and\
    \ responses.\n   In ICN, there is a set of common concepts and node requirements\n\
    \   beyond this basic service model.  Naming data objects is a key\n   concept.\
    \  In general, ICN names represent neither network nodes nor\n   interfaces --\
    \ they represent NDOs independently of their location.\n   Names do play a key\
    \ role in forwarding decisions and are used for\n   matching requests to responses:\
    \ in order to provide better support\n   for accessing copies of NDOs regardless\
    \ of their location, it is\n   important to be able to validate that a response\
    \ actually delivers\n   the bits that correspond to an original request for named\
    \ data.\n   Name-content binding validation is a fundamental security service\
    \ in\n   ICN, and this is often achieved by establishing a verifiable binding\n\
    \   between the object name and the actual object or an identity that has\n  \
    \ created the object.  ICN can support other security services, such as\n   provenance\
    \ validation and encryption, depending on the details of\n   naming schemes, object\
    \ models, and assumptions on infrastructure\n   support.  Security services such\
    \ as name-content binding validation\n   are available to any node, i.e., not\
    \ just the actual requestors.\n   This is an important feature for enabling ingress\
    \ gateways to check\n   object authenticity to prevent denial-of-service attacks.\n\
    \   Based on these fundamental properties, it is possible to leverage\n   network\
    \ storage ubiquitously: every ICN node can cache data objects\n   and respond\
    \ to requests for such objects -- it is not required to\n   validate the authenticity\
    \ of the node itself since name-content\n   bindings can be validated.  Ubiquitous\
    \ in-network storage can be used\n   for different purposes: it can enable sharing,\
    \ i.e., the same object\n   copy can be delivered to multiple users/nodes as in\
    \ today's proxy\n   caches and CDNs.  It can also be used to make communication\
    \ more\n   robust (and perform better) by enabling the network to answer\n   requests\
    \ from local caches (instead of from origin servers).  In case\n   of disruption\
    \ (message not delivered), a node can resend the request,\n   and it could be\
    \ answered by an on-path cache, i.e., on the other side\n   of the disrupted link.\
    \  The network itself would be able to send\n   local retransmissions, which enables\
    \ shorter round-trip times and the\n   offloading of origin servers and other\
    \ parts of the network.\n   ICN potentially retrieves segments of NDOs from multiple\
    \ data\n   sources, so only a requestor can determine the completion of a\n  \
    \ retrieval process, i.e., the retrieval of NDOs or individual segments\n   is\
    \ typically controlled by a requestor.  For this reason, ICN\n   transport protocols\
    \ are typically based on a receiver-driven\n   mechanism: requestors can control\
    \ message sending rates by regulating\n   the request sending rate (assuming that\
    \ every response message has to\n   be triggered by a request message).  Retransmission\
    \ would be achieved\n   by resending requests, e.g., after a timeout.  Because\
    \ objects can be\n   replicated, object transmission and transport sessions would\
    \ not\n   necessarily have end-to-end semantics: requests can be answered by\n\
    \   caches, and a node can select one or multiple next-hop destinations\n   for\
    \ a particular request depending on configuration, observed\n   performance, or\
    \ other criteria.\n   This receiver-driven communication model potentially enables\
    \ new\n   interconnection and business models: a request for named data can be\n\
    \   linked to an interest of a requestor (or requesting network) in data\n   from\
    \ another peer, which could suggest modeling peering agreements\n   and charging\
    \ accordingly.\n"
- title: 4.  ICN Research Challenges
  contents:
  - '4.  ICN Research Challenges

    '
- title: 4.1.  Naming, Data Integrity, and Data Origin Authentication
  contents:
  - "4.1.  Naming, Data Integrity, and Data Origin Authentication\n   Naming data\
    \ objects is as important for ICN as naming hosts is for\n   today's Internet.\
    \  Fundamentally, ICN requires unique names for\n   individual NDOs, since names\
    \ are used for identifying objects\n   independently of their location or container.\
    \  In addition, since\n   NDOs can be cached anywhere, the origin cannot be trusted\
    \ anymore,\n   hence the importance of establishing a verifiable binding between\
    \ the\n   object and its name (name-data binding validation) so that a\n   requestor\
    \ can be sure that the received bits do correspond to the NDO\n   originally requested\
    \ (data integrity).  Data origin authentication is\n   a different security service\
    \ that can be related to naming, i.e.,\n   verifying that an NDO has indeed been\
    \ published by a publisher (that\n   could be identified by a name prefix).\n\
    \   The above functions are fundamentally required for the information-\n   centric\
    \ network to work reliably; otherwise, neither network elements\n   nor requestors\
    \ can trust object authenticity.  Lack of this trust\n   enables several attacks,\
    \ including DoS attacks, by injecting spoofed\n   content into the network.  There\
    \ are different ways to use names and\n   cryptography to achieve the desired\
    \ functions [ICNNAMING]\n   [ICNSURVEY], and there are different ways to manage\
    \ namespaces\n   correspondingly.\n   Two types of naming schemes have been proposed\
    \ in the ICN literature:\n   hierarchical and flat namespaces.  For example, a\
    \ hierarchical scheme\n   may have a structure similar to current URIs, where\
    \ the hierarchy is\n   rooted in a publisher prefix.  Such hierarchy enables aggregation\
    \ of\n   routing information, improving scalability of the routing system.  In\n\
    \   some cases, names are human readable, which makes it possible for\n   users\
    \ to manually type in names, reuse, and, to some extent, map the\n   name to the\
    \ user intent.\n   The second general class of naming schemes enables verifying\
    \ the\n   object's name-data integrity without requiring a Public Key\n   Infrastructure\
    \ (PKI) or other third party to first establish trust in\n   the key.  This is\
    \ achieved, e.g., by binding the hash of the NDO\n   content to the object's name.\
    \  For instance, this can be done by\n   directly embedding the hash of the content\
    \ in the name.  Another\n   option is an indirect binding, which embeds the public\
    \ key of the\n   publisher in the name and signs the hash of the content with\
    \ the\n   corresponding private key.  The resulting names are typically non-\n\
    \   hierarchical, or flat, although the publisher field could be employed\n  \
    \ to create a structure that could facilitate route aggregation.\n   There are\
    \ several design trade-offs for ICN naming that affect\n   routing and security.\
    \  Hash-based names are not human readable nor\n   hierarchical.  They can, however,\
    \ provide some structure for\n   aggregation, for instance, a name part corresponding\
    \ to a publisher.\n   In hash-based names with indirect binding, the key of the\
    \ publisher\n   is bound to the name of NDO, so when a user receives, e.g., the\n\
    \   triplet, namely (data, key, signature), the receiving entity can\n   verify\
    \ that the NDO has been generated by the possessor of the\n   private/public key\
    \ pair and that the NDO has not been changed in\n   transit (data integrity).\
    \  This can be done by cryptographically\n   hashing the received key and the\
    \ name of the NDO, and comparing it\n   with the received hashed key.  Then, the\
    \ key can be used to verify\n   the signature.\n   Data origin authentication\
    \ can be achieved by validating signatures\n   based on public key cryptography\
    \ about an NDO's name and content.  In\n   order to ascertain data integrity and\
    \ origin authenticity with such\n   an approach, a PKI-like system is required\
    \ that would allow linking\n   the corresponding public key to a trust chain.\n\
    \   Research challenges specific to naming include:\n   o  Naming static data\
    \ objects can be performed by using content\n      hashes as part of object names,\
    \ so that publishers can calculate\n      the hash over existing data objects\
    \ and requestors, and any ICN\n      node can validate the name-content binding\
    \ by recalculating the\n      hash and comparing it to the name (component). \
    \ [RFC6920]\n      specifies a concrete naming format for this.\n   o  Naming\
    \ dynamic objects refers to use cases where the name has to\n      be generated\
    \ before the object is created.  For example, this\n      could be the case for\
    \ live streaming, when a publisher wants to\n      make the stream available by\
    \ registering stream chunk names in the\n      network.  One approach to this\
    \ can be hash-based names with\n      indirect binding as described above.\n \
    \  o  Requestor privacy protection can be a challenge in ICN as a direct\n   \
    \   consequence of the accessing-named-data-objects paradigm: if the\n      network\
    \ can \"see\" requests and responses, it can also log request\n      history for\
    \ network segments or individual users, which can be\n      undesirable, especially\
    \ since names are typically expected to be\n      long-lived.  That is, even if\
    \ the name itself does not reveal much\n      information, the assumption is that\
    \ the name can be used to\n      retrieve the corresponding data objects in the\
    \ future.\n   o  Updating and versioning NDOs can be challenging because it can\n\
    \      contradict fundamental ICN assumptions: if an NDO can be\n      replicated\
    \ and stored in in-network storage for later retrieval,\n      names have to be\
    \ long-lived and the name-content binding must not\n      change; updating an\
    \ object (i.e., changing the content without\n      generating a new name) is\
    \ not possible.  Versioning is one\n      possible solution but requires a naming\
    \ scheme that supports it\n      (and a way for requestors to learn about newer\
    \ and older\n      versions).\n   o  Managing accessibility can also be a challenge.\
    \  In ICN, the\n      general assumption is to enable ubiquitous access to NDOs,\
    \ but\n      there can be relevant use cases where access to objects should be\n\
    \      restricted, for example, to a specific user group.  There are\n      different\
    \ approaches for this, such as object encryption\n      (requiring key distribution\
    \ and related mechanisms) or the concept\n      of scopes, e.g., based on names\
    \ that can only be used/resolved\n      under some constraints.\n"
- title: 4.2.  Security
  contents:
  - "4.2.  Security\n   Security is an active research field in ICN.  This section\
    \ provides\n   an overview of important security features and corresponding\n\
    \   challenges that are related to shifting to information-centric\n   communications.\
    \  Some challenges are well understood, and there are\n   (sometimes multiple\
    \ different) approaches to address them, whereas\n   other challenges are active\
    \ research and engineering topics.\n"
- title: 4.2.1.  Data Integrity and Origin Authentication
  contents:
  - "4.2.1.  Data Integrity and Origin Authentication\n   As mentioned in Section\
    \ 4.1, data integrity verification is an\n   important ICN feature, since NDOs\
    \ are retrieved not only from an\n   original copy holder but also from any caching\
    \ point.  Hence, the\n   communication channel endpoints to retrieve NDOs are\
    \ not trustable\n   anymore, and solutions widely used today such as Transport\
    \ Layer\n   Security (TLS) [RFC5246] cannot be used as a general solution.  Since\n\
    \   data objects can be maliciously modified, ICN should provide\n   receivers\
    \ with a security mechanism to verify the integrity of the\n   data object, and\
    \ there are different ways to achieve this.\n   An efficient approach for static\
    \ NDOs is providing a name-content-\n   binding by hashing an NDO and using the\
    \ hash as a part of the\n   object's name.  [RFC6920] provides a mechanism and\
    \ a format for\n   representing a digest algorithm and the actual digest in a\
    \ name\n   (amongst other information).\n   For dynamic objects where it is desirable\
    \ to refer to an NDO by name\n   before the object has been created, public key\
    \ cryptography is often\n   applied, i.e., every NDO would be authenticated by\
    \ means of a\n   signature performed by the data object publisher so that any\
    \ data\n   object consumer can verify the validity of the data object based on\n\
    \   the signature.  However, in order to verify the signature of an\n   object,\
    \ the consumer must know the public key of the entity that\n   signed the object.\n\
    \   Data origin authentication, i.e., verifying that an NDO has indeed\n   been\
    \ published by a publisher, requires a secure binding of an NDO\n   name to a\
    \ publisher identity -- this is also typically implemented\n   using public key\
    \ cryptography, i.e., by requiring a receiver to\n   verify digital signatures\
    \ that are part of received messages.\n   One research challenge is then to support\
    \ a mechanism to distribute\n   the publisher's public keys to the consumers of\
    \ data objects.  There\n   are two main approaches to achieve this: one is based\
    \ on an external\n   third-party authority such as hierarchical Public Key Infrastructure\n\
    \   (PKI) (see [RFC5280] for a description of hierarchical PKI), and the\n   other\
    \ is to adapt a hash-based scheme with indirect binding.  The\n   former, as the\
    \ name implies, depends on an external third party\n   authority to distribute\
    \ the public key of the publisher for the\n   consumers.  In a hash-based scheme\
    \ with indirect binding, the public\n   key (or a hash of it) would be used as\
    \ part of the name -- which is\n   sufficient to validate the data integrity.\n\
    \   In cases where information about the origin of a data object is not\n   available\
    \ by other means, the object itself would have to incorporate\n   the necessary\
    \ information to determine the object publisher, for\n   example, with a certificate,\
    \ that can be validated through the PKI.\n   Once the certificate is authenticated,\
    \ its public key can be used to\n   authenticate the signed data object itself.\n"
- title: 4.2.2.  Binding NDOs to Real-World Identities
  contents:
  - "4.2.2.  Binding NDOs to Real-World Identities\n   In addition to validating NDO\
    \ authenticity, it is still important to\n   bind real-world identities, e.g.,\
    \ a publisher identity, to objects,\n   so that a requestor can verify that a\
    \ received object was actually\n   published by a certain source.\n   With hash-based\
    \ names, real-world identity bindings are not\n   intrinsically established: the\
    \ name provides the hash of the NDO or\n   of the public key that was used to\
    \ sign the NDO.  There needs to be\n   another binding to a real-world identity\
    \ if that feature is\n   requested.\n   If the object name directly provides the\
    \ publisher name and if that\n   name is protected by a certificate that links\
    \ to a PKI-like trust\n   chain, the object name itself can provide an intrinsic\
    \ binding to a\n   real-world identity.\n   Binding between NDOs and real-world\
    \ identities is essential, but\n   there is no universal way to achieve it as\
    \ it is all intrinsic to a\n   particular ICN approach.\n"
- title: 4.2.3.  Access Control and Authorization
  contents:
  - "4.2.3.  Access Control and Authorization\n   Access control and authorization\
    \ is a challenge in ICN, because of\n   the lack of user-to-server authentication\
    \ in the fundamental\n   communication model based on named data.\n   All ICN\
    \ entities are capable of delivering NDOs on demand due to\n   their in-network\
    \ caching function.  In such an environment,\n   traditional access control schemes\
    \ based on Access Control List (ACL)\n   are ill-suited since widely distributed\
    \ ICN entities have to maintain\n   an identical control policy over NDOs for\
    \ each consumer, which is\n   prohibited due to computational overhead and privacy\
    \ issues.  There\n   are two complementary approaches to address the issues:\n\
    \   1.  Separated approach: access control service from a third party\n      \
    \ that is independent from ICN entities.  Due to the clear\n       separation,\
    \ ICN entities are free from computational overhead to\n       determine the accessibility\
    \ of NDOs by consumers; also, consumers\n       can secure their privacy through\
    \ the independent authorization\n       entity [ACCESS-CTL-DEL].  Relevant challenges\
    \ to this approach\n       include reducing the authorization delay (when communicating\
    \ to\n       the access control provider) and currency and consistency of\n  \
    \     access control information (when access control lists are\n       distributed).\n\
    \   2.  Integrated approach: access control service from ICN entities.\n     \
    \  This mechanism is often based on content encryption and key\n       distribution\
    \ [ENCRYPTION-AC].  As mentioned previously, this\n       approach suffers from\
    \ prohibitive overhead for ICN entities due\n       to the process of key verification.\
    \  While key distribution is\n       challenging per se, this approach is beneficial\
    \ in a way that\n       NDOs can be retrieved without the help of an external\
    \ access\n       control provider.  Challenges to this approach include:\n   \
    \    1.  applying an access control mechanism for dynamic NDOs in in-\n      \
    \     network caches in a timely manner;\n       2.  providing consumers with\
    \ the different levels of\n           accessibility to individual NDOs in a scalable\
    \ manner; and\n       3.  managing key revocation and similar PKI management functions.\n"
- title: 4.2.4.  Encryption
  contents:
  - "4.2.4.  Encryption\n   In ICN, NDOs can be encrypted to implement access control\
    \ (only\n   consumers in possession of corresponding decryption keys can access\n\
    \   the content) or privacy (same approach).  Distributing and managing\n   the\
    \ corresponding keys as well as providing usable interfaces to\n   applications\
    \ and human users are challenges and the subject of\n   ongoing work.\n   In principle,\
    \ the challenges are similar to those of broadcast/media\n   distribution, and\
    \ similar approaches (combing symmetric with public\n   key cryptography) are\
    \ being investigated [NDN-CTL-SHARING].\n"
- title: 4.2.5.  Traffic Aggregation and Filtering
  contents:
  - "4.2.5.  Traffic Aggregation and Filtering\n   One request message to retrieve\
    \ a data object can actually aggregate\n   requests coming from several consumers.\
    \  This aggregation of requests\n   reduces the overall traffic but makes per-requestor\
    \ filtering harder.\n   The challenge in this case is to provide a mechanism that\
    \ allows\n   request aggregation and per-requestor filtering.  A possible solution\n\
    \   is to indicate the set of requestors in the aggregated request such\n   that\
    \ the response can indicate the subset of requestors allowed to\n   access the\
    \ data object.  However, this solution requires\n   collaboration from other nodes\
    \ in the network and is not suitable for\n   caching.  Another possible solution\
    \ is to encrypt data objects and\n   ensure that only authorized consumers can\
    \ decrypt them.  This\n   solution does not preclude caching and does not require\
    \ collaboration\n   from the network.  However, it implies a mechanism to generate\
    \ group\n   keys (e.g., different private keys can be used to decrypt the same\n\
    \   encrypted data object) [CHAUM].\n"
- title: 4.2.6.  State Overloading
  contents:
  - "4.2.6.  State Overloading\n   ICN solutions that implement state on intermediate\
    \ routers for\n   request routing or forwarding (e.g., Content-Centric Networking\
    \ (CCN)\n   [CCN]) are subject to denial-of-service attacks from overloading or\n\
    \   superseding the internal state of a router (e.g., \"interest flooding\"\n\
    \   [BACKSCATTER]).  Additionally, stateful forwarding can enable attack\n   vectors\
    \ such as resource exhaustion or complexity attacks to the\n   routing infrastructure.\
    \  The challenge is then to provision routers\n   and construct internal state\
    \ in a way that alleviates sensibility to\n   such attacks.  The problem becomes\
    \ even harder if the protocol does\n   not provide information about the origin\
    \ of messages.  Without\n   origin, it is a particular challenge to distinguish\
    \ between regular\n   (intense) use and misuse of the infrastructure.\n"
- title: 4.2.7.  Delivering Data Objects from Replicas
  contents:
  - "4.2.7.  Delivering Data Objects from Replicas\n   A common capability of ICN\
    \ solutions is data replication and in-\n   network storage.  Delivering replicated\
    \ data objects from caches\n   decouples content consumption from data sources,\
    \ which leads to a\n   loss of control on (1) content access and (2) content dissemination.\n\
    \   In a widely distributed, decentralized environment like the Internet,\n  \
    \ this raises several challenges.\n   One group of challenges is related to content\
    \ management.  Without\n   access control, a content provider loses the means\
    \ to count and\n   survey content consumption, to limit access scopes, to control\
    \ or\n   know about the number of copies of its data in the network, or to\n \
    \  withdraw earlier publications reliably.  Any non-cooperative or\n   desynchronized\
    \ data cache may hinder an effective content management\n   policy.\n   Another\
    \ group of challenges arises from potential traffic\n   amplifications in the\
    \ decoupled environment.  ICN solutions that\n   attempt to retrieve content from\
    \ several replicas in parallel, or\n   decorrelated network routing states, but\
    \ also distributed attackers\n   may simultaneously initiate the transmission\
    \ of content from multiple\n   replicas towards the same destination (e.g., \"\
    initiated overloads\" or\n   \"blockades\" [BACKSCATTER]).  Methods for mitigating\
    \ such threats need\n   rigorous forwarding checks that require alignment with\
    \ caching\n   procedures (e.g., on-path or off-path).\n"
- title: 4.2.8.  Cryptographic Robustness
  contents:
  - "4.2.8.  Cryptographic Robustness\n   Content producers sign their content to\
    \ ensure the integrity of data\n   and to allow for data object authentication.\
    \  This is a fundamental\n   requirement in ICN due to distributed caching.  Publishers,\
    \ who\n   massively sign content, which is long-lived, offer time and data to\n\
    \   an attacker for comprising cryptographic credentials.  Signing a\n   large\
    \ amount of data eases common attacks that try to breach the key\n   of the publisher.\
    \  Based on this observation, the following research\n   challenges emerge:\n\
    \   o  To which extent does the content publication model conflict with\n    \
    \  the cryptographic limitations?\n   o  How can we achieve transparent re-signing\
    \ without introducing\n      additional cryptographic weaknesses or key management\
    \ overhead?\n   In general, ICN implementations should be designed considering\
    \ the\n   guidelines provided by [RFC7696], especially regarding cryptographic\n\
    \   algorithm agility, for example, [RFC6920] specifies a naming scheme\n   for\
    \ hash-based names that was designed to support algorithm agility.\n"
- title: 4.2.9.  Routing and Forwarding Information Bases
  contents:
  - "4.2.9.  Routing and Forwarding Information Bases\n   In information-centric networks,\
    \ one attack vector is to increase the\n   size of routing and forwarding information\
    \ bases at ICN nodes, i.e.,\n   attacking routing scalability in networks that\
    \ rely on routing by\n   name.  This is an intrinsic ICN security issue: possible\
    \ mitigation\n   approaches include combining routing information authenticity\n\
    \   validation with filtering (e.g., maximum de-aggregation level\n   whenever\
    \ applicable, blacklists, etc.,).\n"
- title: 4.3.  Routing and Resolution System Scalability
  contents:
  - "4.3.  Routing and Resolution System Scalability\n   ICN routing is a process\
    \ that finds an NDO based on its name\n   initially provided by a requestor. \
    \ ICN routing may comprise three\n   steps: (1) name resolution, (2) discovery,\
    \ and (3) delivery.  The\n   name resolution step translates the name of the requested\
    \ NDO into\n   its locator.  The discovery step routes the request to the data\n\
    \   object based on its name or locator.  The last step (delivery) routes\n  \
    \ the data object back to the requestor.  Depending on how these steps\n   are\
    \ combined, ICN routing schemes can be categorized as Route-By-Name\n   Routing\
    \ (RBNR), Lookup-By-Name Routing (LBNR), and Hybrid Routing\n   (HR) as discussed\
    \ in the following subsections.\n"
- title: 4.3.1.  Route-By-Name Routing
  contents:
  - "4.3.1.  Route-By-Name Routing\n   RBNR omits the first name resolution step as\
    \ the name of the NDO is\n   directly used to route the request to the data object.\
    \  Therefore,\n   routing information for each data object has to be maintained\
    \ in the\n   routing table.  Since the number of data objects is very large\n\
    \   (estimated as 10^11 back in 2007 [DONA], but this may be\n   significantly\
    \ larger than that, e.g., 10^15 to 10^22), the size of\n   routing tables becomes\
    \ a concern, as it can be proportional to the\n   number of data objects unless\
    \ an aggregation mechanism is introduced.\n   On the other hand, RBNR reduces\
    \ overall latency and simplifies the\n   routing process due to the omission of\
    \ the resolution process.  For\n   the delivery step, RBNR needs another identifier\
    \ (ID) of either host\n   or location to forward the requested data object back\
    \ to the\n   requestor.  Otherwise, an additional routing mechanism has to be\n\
    \   introduced, such as breadcrumbs routing [BREADCRUMBS], in which each\n   request\
    \ leaves behind a trail of breadcrumbs along its forwarding\n   path, and then\
    \ the response is forwarded back to the requestor\n   consuming the trail.\n \
    \  Challenges specific to RBNR include:\n   o  How can we aggregate the names\
    \ of data objects to reduce the\n      number of routing entries?\n   o  How does\
    \ a user learn the name that is designed for aggregation by\n      the provider?\
    \  For example, although we name our contribution as\n      \"ICN research challenges\"\
    , the IRTF (provider) may want to change\n      the name to \"/IETF/IRTF/ICN/Research\
    \ challenges\" for aggregation.\n      In this case, how does a user learn the\
    \ name \"/IETF/IRTF/ICN/\n      Research challenges\" to retrieve the contribution\
    \ initially named\n      \"ICN research challenges\" without any resolution process?\n\
    \   o  Without introducing the name aggregation scheme, can we still\n      achieve\
    \ scalable routing by taking advantage of topological\n      structure and distributed\
    \ copies?  For example, would employing\n      compact routing [COMPACT], random\
    \ walk [RANDOM], or greedy routing\n      [GREEDY] work at the Internet scale?\n\
    \   o  How can we incorporate copies of a data object in in-network\n      caches\
    \ in this routing scheme?\n   o  Breadcrumbs routing implies a symmetric path\
    \ for ICN request and\n      response delivery.  Some network configurations and\
    \ link types\n      prohibit symmetric path forwarding, so it would be challenging\
    \ to\n      interconnect such networks to an infrastructure based on\n      breadcrumbs\
    \ routing.  For example, certain forwarding strategies\n      in Delay-Tolerant\
    \ Networking (DTN) [RFC4838] are employing\n      opportunistic forwarding where\
    \ responses cannot be assumed to\n      travel the same path as requests.\n"
- title: 4.3.2.  Lookup-By-Name Routing
  contents:
  - "4.3.2.  Lookup-By-Name Routing\n   LBNR uses the first name resolution step to\
    \ translate the name of the\n   requesting data object into its locator.  Then,\
    \ the second discovery\n   step is carried out based on the locator.  Since IP\
    \ addresses could\n   be used as locators, the discovery step can depend on the\
    \ current IP\n   infrastructure.  The delivery step can be implemented similarly\
    \ to IP\n   routing.  The locator of the requestor is included in the request\n\
    \   message, and then the requested data object is delivered to the\n   requestor\
    \ based on the locator.  An instantiation of LBNR is [MDHT].\n   Challenges specific\
    \ to LBNR include:\n   o  How can we build a scalable resolution system that provides:\n\
    \      *  Fast lookup: Mapping the name of a data object to its locators\n   \
    \      (copies as well).\n      *  Fast update: The location of a data object\
    \ is expected to\n         change frequently.  Also, multiple data objects may\
    \ change\n         their locations at the same time, e.g., data objects in a\n\
    \         laptop.\n   o  How can we incorporate copies of a data object in in-network\n\
    \      caches in this routing scheme?\n"
- title: 4.3.3.  Hybrid Routing
  contents:
  - "4.3.3.  Hybrid Routing\n   HR combines RBNR and LBNR to benefit from their advantages.\
    \  Within a\n   single administrative domain, e.g., an ISP, where scalability\
    \ issues\n   can be addressed with network planning, RBNR can be adopted to reduce\n\
    \   overall latency by omitting the resolution process.  On the other\n   hand,\
    \ LBNR can be used to route between domains that have their own\n   prefix (locator).\n\
    \   For instance, a request message initially includes the name of the\n   NDO\
    \ for the operation of RBNR and is forwarded to a cached copy of\n   the NDO or\
    \ the original server.  When the request message fails to\n   find a routing entry\
    \ in the router, a name resolution step kicks in\n   to translate the name into\
    \ its locator before forwarding the request\n   message based on the retrieved\
    \ locator.\n   Challenges specific to HR are:\n   o  How can we design a scalable\
    \ mapping system that, given the name\n      of the NDO, should return a destination\
    \ domain locator so that a\n      user request can be encapsulated and forwarded\
    \ to the domain?\n   o  How can the mapping information be secured to prevent\
    \ a malicious\n      router from hijacking the request message by chaining its\
    \ locator?\n   o  How can the bind between the name and the content of the NDO\
    \ be\n      maintained for the verification of its origin and integrity when\n\
    \      the name changes due to the retrieved locator?\n"
- title: 4.4.  Mobility Management
  contents:
  - "4.4.  Mobility Management\n   Mobility management has been an active field in\
    \ host-centric\n   communications for more than two decades.  In IETF in particular,\n\
    \   starting with [RFC2002], a multitude of enhancements to IP have been\n   standardized\
    \ aiming to \"allow transparent routing of IP datagrams to\n   mobile nodes in\
    \ the Internet\" [RFC5944].  In a nutshell, mobility\n   management for IP networks\
    \ is locator-oriented and relies on the\n   concept of a mobility anchor as a\
    \ foundation for providing always-on\n   connectivity to mobile nodes (see [MMIN]).\
    \  Other standards\n   organizations, such as 3GPP, have followed similar anchor-based\n\
    \   approaches.  Traffic to and from the mobile node must flow through\n   the\
    \ mobility anchor, typically using a set of tunnels, enabling the\n   mobile node\
    \ to remain reachable while changing its point of\n   attachment to the network.\n\
    \   Needless to say, an IP network that supports node mobility is more\n   complex\
    \ than one that does not, as specialized network entities must\n   be introduced\
    \ in the network architecture.  This is reflected in the\n   control plane as\
    \ well, which carries mobility-related signaling\n   messages, establishes and\
    \ tears down tunnels, and so on.  While\n   mobile connectivity was an afterthought\
    \ in IP, in ICN, this is\n   considered a primary deployment environment.  Most,\
    \ if not all, ICN\n   proposals consider mobility from the very beginning, although\
    \ at\n   varying levels of architectural and protocol detail.  That said, no\n\
    \   solution has so far come forward with a definite answer on how to\n   handle\
    \ mobility in ICN using native primitives.  In fact, we observe\n   that mobility\
    \ appears to be addressed on an ICN proposal-specific\n   basis.  That is, there\
    \ is no single paradigm solution, akin to\n   tunneling through a mobility anchor\
    \ in host-centric networking, that\n   can be applied across different ICN proposals.\
    \  For instance,\n   although widely deployed mobile network architectures typically\
    \ come\n   with their own network entities and associated protocols, they follow\n\
    \   the same line of design with respect to managing mobility.  This\n   design\
    \ thinking, which calls for incorporating mobility anchors,\n   permeates in the\
    \ ICN literature too.\n   However, employing mobility anchors and tunneling is\
    \ probably not the\n   best way forward in ICN research for mobile networking.\n\
    \   Fundamentally, this approach is anything but information-centric and\n   location-independent.\
    \  In addition, as argued in [SEEN], current\n   mobility management schemes anchor\
    \ information retrieval not only at\n   a specific network gateway (e.g., home\
    \ agent in Mobile IP) but also\n   at a specific correspondent node due to the\
    \ end-to-end nature of\n   host-centric communication.  However, once a change\
    \ in the point of\n   attachment occurs, information retrieval from the original\n\
    \   \"correspondent node\" may no longer be optimal.  This was shown in\n   [MANI],\
    \ for example, where a simple mechanism that triggers the\n   discovery of new\
    \ retrieval providers for the same data object,\n   following a change in the\
    \ point of attachment, clearly outperforms a\n   tunnel-based approach like Mobile\
    \ IP in terms of object download\n   times.  The challenge here is how to capitalize\
    \ on location\n   information while facilitating the use of ICN primitives, which\n\
    \   natively support multicast and anycast.\n   ICN naming and name resolution,\
    \ as well as the security features that\n   come along, should natively support\
    \ mobility.  For example, CCN [CCN]\n   does not have the restriction of spanning\
    \ tree routing, so it is able\n   to take advantage of multiple interfaces or\
    \ adapt to the changes\n   produced by rapid mobility (i.e., there is no need\
    \ to bind a layer 3\n   address with a layer 2 address).  In fact, client mobility\
    \ can be\n   simplified by allowing requests for new content to normally flow\
    \ from\n   different interfaces or through newly connected points of attachment\n\
    \   to the network.  However, when the node moving is the (only) content\n   source,\
    \ it appears that more complex network support might be\n   necessary, including\
    \ forwarding updates and cache rebuilding.  A case\n   in point is a conversation\
    \ network service, such as a voice or video\n   call between two parties.  The\
    \ requirements in this case are more\n   stringent when support for seamless mobility\
    \ is required, especially\n   when compared to content dissemination that is amenable\
    \ to buffering.\n   Another parameter that needs to be paid attention to is the\
    \ impact of\n   using different wireless access interfaces based on different\n\
    \   technologies, where the performance and link conditions can vary\n   widely\
    \ depending of numerous factors.\n   In host-centric networking, mobility management\
    \ mechanisms ensure\n   optimal handovers and (ideally) seamless transition from\
    \ one point of\n   attachment to another.  In ICN, however, the traditional meaning\
    \ of\n   \"point of attachment\" no longer applies as communication is not\n \
    \  restrained by location-based access to data objects.  Therefore, a\n   \"seamless\
    \ transition\" in ICN ensures that content reception continues\n   without any\
    \ perceptible change from the point of view of the ICN\n   application receiving\
    \ that content.  Moreover, this transition needs\n   to be executed in parallel\
    \ with ICN content identification and\n   delivery mechanisms, enabling scenarios\
    \ such as preparation of the\n   content delivery process at the target connectivity\
    \ point prior to\n   the handover (to reduce link switch disturbances).  Finally,\
    \ these\n   mobility aspects can also be tightly coupled with network management\n\
    \   aspects, in respect to policy enforcement, link control, and other\n   parameters\
    \ necessary for establishing the node's link to the network.\n   In summary, the\
    \ following research challenges for ICN mobility\n   management can be derived:\n\
    \   o  How can mobility management take full advantage of native ICN\n      primitives?\n\
    \   o  How do we avoid the need for mobility anchors in a network that by\n  \
    \    design supports multicast, anycast, and location-independent\n      information\
    \ retrieval?\n   o  How can content retrieval mechanisms interface with specific\
    \ link\n      operations, such as identifying which links are available for\n\
    \      certain content?\n   o  How can mobility be offered as a service that is\
    \ only activated\n      when the specific user/content/conditions require it?\n\
    \   o  How can mobility management be coordinated between the node and\n     \
    \ the network for optimization and policing procedures?\n   o  How do we ensure\
    \ that managing mobility does not introduce\n      scalability issues in ICN?\n\
    \   o  How will the name resolution process be affected by rapid\n      topological\
    \ changes when the content source itself is mobile?\n"
- title: 4.5.  Wireless Networking
  contents:
  - "4.5.  Wireless Networking\n   Today, all layer 2 (L2) wireless network radio\
    \ access technologies\n   are developed with a clear assumption in mind: the waist\
    \ of the\n   protocol stack is IP, and it will be so for the foreseeable future.\n\
    \   By fixing the protocol stack waist, engineers can answer a large set\n   of\
    \ questions, including how to handle conversational traffic (e.g.,\n   voice calls)\
    \ vs. web traffic, how to support multicast, and so on, in\n   a rather straightforward\
    \ manner.  Broadcast, on the other hand, which\n   is inherent in wireless communication,\
    \ is not fully taken advantage\n   of.  On the contrary, researchers are often\
    \ more concerned about\n   introducing mechanisms that ensure that \"broadcast\
    \ storms\" do not\n   take down a network.  The question of how can broadcast\
    \ better serve\n   ICN needs has yet to be thoroughly investigated.\n   Wireless\
    \ networking is often intertwined with mobility, but this is\n   not always the\
    \ case.  In fact, empirical measurements often indicate\n   that many users tend\
    \ to connect (and remain connected) to a single\n   Wi-Fi access point for considerable\
    \ amounts of time.  A case in\n   point, which is frequently cited in different\
    \ variations in the ICN\n   literature, is access to a document repository during\
    \ a meeting.  For\n   instance, in a typical IETF working group meeting, a scribe\
    \ takes\n   notes, which are uploaded to a centralized repository (see Figure\
    \ 1).\n   Subsequently, each meeting participant obtains a copy of the document\n\
    \   on their own devices for local use, annotation, and sharing with\n   colleagues\
    \ that are not present at the meeting.  Note that in this\n   example, there is\
    \ no node mobility and that it is not important\n   whether the document with\
    \ the notes is uploaded in one go at the end\n   of the session or in a streaming-like\
    \ fashion as is typical today\n   with online (cloud-based) document processing.\n\
    \           +---------------------+\n           | Document Repository |\n    \
    \       +---------------------+\n                     ||\n                 (Internet)\n\
    \                     ||\n             +--------------+\n             | Access\
    \ Point |\n             +--------------+\n            /  |             \\\n  \
    \         /   |              \\\n          /    |               \\\n     Scribe\
    \   Participant 1 ... Participant N\n                Figure 1: Document Sharing\
    \ During a Meeting\n   In this scenario, we observe that the same data object\
    \ bits\n   (corresponding to the meeting notes) need to traverse the wireless\n\
    \   medium at least N+1 times, where N is the number of meeting\n   participants\
    \ obtaining a copy of the notes.  In effect, a broadcast\n   medium is shoehorned\
    \ into N+1 virtual unicast channels.  One could\n   argue that wireless local\
    \ connectivity is inexpensive, but this is\n   not the critical factor in this\
    \ example.  The actual information\n   exchange wastes N times the available network\
    \ capacity, no matter\n   what the spectral efficiency (or the economics) underlying\
    \ the\n   wireless technology is.  This waste is a direct result of extending\n\
    \   the remote access paradigm from wired to wireless communication,\n   irrespective\
    \ of the special characteristics of the latter.\n   It goes without saying that\
    \ an ICN approach that does not take into\n   consideration the wireless nature\
    \ of an interface will waste the same\n   amount of resources as a host-centric\
    \ paradigm.  In-network caching\n   at the wireless access point could reduce\
    \ the amount of data carried\n   over the backhaul link, but, if there is no change\
    \ in the use of the\n   wireless medium, the NDO will still be carried over the\
    \ wireless\n   ether N+1 times.  Intelligent caching strategies, replica placement\n\
    \   cooperation, and so on simply cannot alleviate this.  On the other\n   hand,\
    \ promiscuous interface operation and opportunistic caching would\n   maximize\
    \ wireless network capacity utilization in this example.\n   Arguably, if one\
    \ designs a future wireless access technology with an\n   information-centric\
    \ \"layer 3\" in mind, many of the design choices\n   that are obvious in an all-IP\
    \ architecture may no longer be valid.\n   Although this is clearly outside the\
    \ scope of this document, a few\n   research challenges that the wider community\
    \ may be interested in\n   include:\n   o  Can we use wireless resources more\
    \ frugally with the information-\n      centric paradigm than what is possible\
    \ today in all-IP wireless\n      networks?\n   o  In the context of wireless\
    \ access, how can we leverage the\n      broadcast nature of the medium in an\
    \ information-centric network?\n   o  Would a wireless-oriented ICN protocol stack\
    \ deliver significant\n      performance gains?  How different would it be from\
    \ a wired-\n      oriented ICN protocol stack?\n   o  Is it possible that by changing\
    \ the network paradigm to ICN we\n      can, in practice, increase the spectral\
    \ efficiency (bits/s/Hz) of\n      a wireless network beyond what would be possible\
    \ with today's\n      host-centric approaches?  What would be the impact of doing\
    \ so\n      with respect to energy consumption?\n   o  Can promiscuous wireless\
    \ interface operation coupled with\n      opportunistic caching increase ICN performance,\
    \ and if so, by how\n      much?\n   o  How can a conversational service be supported\
    \ at least as\n      efficiently as today's state-of-the-art wireless networks\
    \ deliver?\n   o  What are the benefits of combining ICN with network coding in\n\
    \      wireless networks?\n   o  How can Multiple-Input Multiple-Output (MIMO)\
    \ and Coordinated\n      Multipoint Transmission (CoMP) be natively combined with\
    \ ICN\n      primitives in future cellular networks?\n"
- title: 4.6.  Rate and Congestion Control
  contents:
  - "4.6.  Rate and Congestion Control\n   ICN's receiver-driven communication model\
    \ as described above creates\n   new opportunities for transport protocol design,\
    \ as it does not rely\n   solely on end-to-end communication from a sender to\
    \ a requestor.  A\n   requested data object can be accessible in multiple different\
    \ network\n   locations.  A node can thus decide how to utilize multiple sources,\n\
    \   e.g., by sending parallel requests for the same NDO or by switching\n   sources\
    \ (or next hops) in a suitable schedule for a series of\n   requests.\n   In this\
    \ model, the requestor would control the data rate by\n   regulating its request\
    \ sending rate and next by performing source/\n   next-hop selections.  Specific\
    \ challenges depend on the specific ICN\n   approach, but general challenges for\
    \ receiver-driven transport\n   protocols (or mechanisms, since dedicated protocols\
    \ might not be\n   required) include flow and congestion control, fairness, network\n\
    \   utilization, stability (of data rates under stable conditions), etc.\n   [HRICP]\
    \ and [CONTUG] describe request rate control protocols and\n   corresponding design\
    \ challenges.\n   As mentioned above, the ICN communication paradigm does not\
    \ depend\n   strictly on end-to-end flows, as contents might be received from\
    \ in-\n   network caches.  The traditional concept of a flow is then somewhat\n\
    \   not valid as sub-flows, or flowlets, might be formed on the fly, when\n  \
    \ fractions of an NDO are transmitted from in-network caches.  For a\n   transport-layer\
    \ protocol, this is challenging, as any measurement\n   related to this flow as\
    \ traditionally done by transport protocols\n   such as TCP, can often prove misleading.\
    \  For example, false Round-\n   Trip Time (RTT) measurements will lead to largely\
    \ variable average\n   and smoothed RTT values, which in turn will trigger false\
    \ timeout\n   expirations.\n   Furthermore, out-of-order delivery is expected\
    \ to be common in a\n   scenario where parts of a data object are retrieved from\
    \ in-network\n   caches rather than from the origin server.  Several techniques\
    \ for\n   dealing with out-of-order delivery have been proposed in the past for\n\
    \   TCP, some of which could potentially be modified and reused in the\n   context\
    \ of ICN.  Further research is needed in this direction though\n   to choose the\
    \ right technique and adjust it according to the\n   requirements of the ICN architecture\
    \ and transport protocol in use.\n   ICN offers routers the possibility to aggregate\
    \ requests and can use\n   several paths, meaning that there is no such thing\
    \ as a (dedicated)\n   end-to-end communication path, e.g., a router that receives\
    \ two\n   requests for the same content at the same time only sends one request\n\
    \   to its neighbor.  The aggregation of requests has a general impact on\n  \
    \ transport protocol design and offers new options for employing per-\n   node\
    \ forwarding strategies and for rethinking in-network resource\n   sharing [RESOURCE-POOL].\n\
    \   Achieving fairness for requestors can be one challenge as it is not\n   possible\
    \ to identify the number of requestors behind one particular\n   request.  A second\
    \ problem related to request aggregation is the\n   management of request retransmissions.\
    \  Generally, it is assumed that\n   a router will not transmit a request if it\
    \ transmitted an identical\n   request recently, and because there is no information\
    \ about the\n   requestor, the router cannot distinguish the initial request from\
    \ a\n   client from a retransmission from the same client.  In such a\n   situation,\
    \ routers can adapt their timers to use the best of the\n   communication paths.\n"
- title: 4.7.  In-Network Caching
  contents:
  - "4.7.  In-Network Caching\n   Explicitly named data objects allow for caching\
    \ at virtually any\n   network element, including routers, proxy caches, and end-user\n\
    \   devices.  Therefore, in-network caching can improve network\n   performance\
    \ by fetching content from nodes that are geographically\n   placed closer to\
    \ the end user.  Several issues that need further\n   investigation have been\
    \ identified with respect to in-network\n   caching.  In this section, we list\
    \ important challenges that relate\n   to the properties of the new ubiquitous\
    \ caching system.\n"
- title: 4.7.1.  Cache Placement
  contents:
  - "4.7.1.  Cache Placement\n   The declining cost of fast memory gives the opportunity\
    \ to deploy\n   caches in network routers and to take advantage of cached NDOs.\
    \  We\n   identify two approaches to in-network caching, namely, on-path and\n\
    \   off-path caching.  Both approaches have to consider the issue of\n   cache\
    \ location.  Off-path caching is similar to traditional proxy-\n   caching or\
    \ CDN server placement.  Retrieval of contents from off-path\n   caches requires\
    \ redirection of requests and, therefore, is closely\n   related to the Request-to-Cache\
    \ Routing problem discussed below.\n   Off-path caches have to be placed in strategic\
    \ points within a\n   network in order to reduce the redirection delays and the\
    \ number of\n   detour hops to retrieve cached contents.  Previous research on\
    \ proxy-\n   caching and CDN deployment is helpful in this case.\n   On the other\
    \ hand, on-path caching requires less network intervention\n   and fits more neatly\
    \ in ICN.  However, on-path caching requires line-\n   speed operation, which\
    \ places more constraints on the design and\n   operation of in-network caching\
    \ elements.  Furthermore, the gain of\n   such a system of on-path in-network\
    \ caches relies on opportunistic\n   cache hits and has therefore been considered\
    \ of limited benefit,\n   given the huge amount of contents hosted in the Internet.\
    \  For this\n   reason, network operators might initially consider only a limited\n\
    \   number of network elements to be upgraded to in-network caching\n   elements.\
    \  The decision on which nodes should be equipped with caches\n   is an open issue\
    \ and might be based, among others, on topological\n   criteria or traffic characteristics.\
    \  These challenges relate to both\n   the Content Placement problem and the Request-to-Cache\
    \ Routing\n   problem discussed below.\n   In most cases, however, the driver\
    \ for the implementation,\n   deployment, and operation of in-network caches will\
    \ be its cost.\n   Operating caches at line speed inevitably requires faster memory,\n\
    \   which increases the implementation cost.  Based on the capital to be\n   invested,\
    \ ISPs will need to make strategic decisions on the cache\n   placement, which\
    \ can be driven by several factors, such as avoidance\n   of inter-domain/expensive\
    \ links, centrality of nodes, size of domain\n   and the corresponding spatial\
    \ locality of users, and traffic patterns\n   in a specific part of the network\
    \ (e.g., university vs. business vs.\n   fashion district of a city).\n"
- title: '4.7.2.  Content Placement: Content-to-Cache Distribution'
  contents:
  - "4.7.2.  Content Placement: Content-to-Cache Distribution\n   Given a number of\
    \ on-path or off-path in-network caching elements,\n   content-to-cache distribution\
    \ will affect both the dynamics of the\n   system, in terms of request redirections\
    \ (mainly in case of off-path\n   caches) and the gain of the system in terms\
    \ of cache hits.  A\n   straightforward approach to content placement is on-path\
    \ placement of\n   contents as they travel from source to destination.  This approach\n\
    \   reduces the computation and communication overhead of placing content\n  \
    \ within the network but, on the other hand, might reduce the chances\n   of hitting\
    \ cached contents.  This relates to the Request-to-Cache\n   Routing problem discussed\
    \ next.\n   Furthermore, the number of replicas held in the system brings up\n\
    \   resource management issues in terms of cache allocation.  For\n   example,\
    \ continuously replicating data objects in all network\n   elements results in\
    \ redundant copies of the same objects.  The issue\n   of redundant replication\
    \ has been investigated in the past for\n   hierarchical web caches.  However,\
    \ in hierarchical web-caching,\n   overlay systems coordination between the data\
    \ and the control plane\n   can guarantee increased performance in terms of cache\
    \ hits.  Line-\n   speed, on-path, in-network caching poses different requirements;\n\
    \   therefore, new techniques need to be investigated.  In this\n   direction,\
    \ reducing the redundancy of cached copies is a study item.\n   However, the issue\
    \ of coordinated content placement in on-path caches\n   remains open.\n   The\
    \ Content-to-Cache Allocation problem relates also to the\n   characteristics\
    \ of the content to be cached.  Popular content might\n   need to be placed where\
    \ it is going to be requested next.\n   Furthermore, issues of \"expected content\
    \ popularity\" or temporal\n   locality need to be taken into account in designing\
    \ in-network\n   caching algorithms in order for some contents to be given priority\n\
    \   (e.g., popular content vs. one-timers).  The criteria as to which\n   contents\
    \ should be given priority in in-network content caches\n   relates also to the\
    \ business relationships between content providers\n   and network operators.\
    \  Business model issues will drive some of\n   these decisions on content-to-cache\
    \ distribution, but such issues are\n   outside the scope of this note and are\
    \ not discussed here further.\n"
- title: 4.7.3.  Request-to-Cache Routing
  contents:
  - "4.7.3.  Request-to-Cache Routing\n   In order to take advantage of cached contents,\
    \ requests have to be\n   forwarded to the nodes that cache the corresponding\
    \ contents.  This\n   challenge relates to name-based routing, discussed earlier.\
    \  Requests\n   should ideally follow the path to the cached NDO.  However,\n\
    \   instructions as to which content is cached where cannot be broadcast\n   throughout\
    \ the network.  Therefore, the knowledge of an NDO location\n   at the time of\
    \ the request either might not exist or might not be\n   accurate (i.e., contents\
    \ might have been removed by the time a\n   request is redirected to a specific\
    \ node).\n   Coordination between the data and the control planes to update\n\
    \   information of cached contents has been considered, but in this case,\n  \
    \ scalability issues arise.  We therefore have two options.  We either\n   have\
    \ to rely on opportunistic caching, where requests are forwarded\n   to a server\
    \ and in case the NDO is found on the path, then the\n   content is fetched from\
    \ this node instead of the origin server, or we\n   employ cache-aware routing\
    \ techniques.  Cache-aware routing can\n   involve either both the control and\
    \ the data plane or only one of\n   them.  Furthermore, cache-aware routing can\
    \ be done in a domain-wide\n   scale or can involve more than one individual Autonomous\
    \ System (AS).\n   In the latter case, business relationships between ASes might\
    \ need to\n   be exploited in order to build a scalable model.\n"
- title: 4.7.4.  Staleness Detection of Cached NDOs
  contents:
  - "4.7.4.  Staleness Detection of Cached NDOs\n   Due to the largely distributed\
    \ copies of NDOs in in-network caches,\n   ICN should be able to provide a staleness\
    \ verification algorithm that\n   provides synchronization of NDOs located at\
    \ their providers and in-\n   network caching points.  Two types of approaches\
    \ can be considered\n   for this problem, namely direct and indirect approaches.\n\
    \   In the direct approach, each cache looks up certain information in\n   the\
    \ NDO's name, e.g., the timestamp, that directly indicates its\n   staleness.\
    \  This approach is applicable to some NDOs that come from\n   machine-to-machine\
    \ and Internet of Things scenarios, whose base\n   operation relies on obtaining\
    \ the latest version of that NDO (i.e., a\n   soil sensor in a farm providing\
    \ different continuous parameters that\n   are sent to a display or greenhouse\
    \ regulation system) [FRESHNESS].\n   In the indirect approach, each cache consults\
    \ the publisher of the\n   cached NDO about its staleness before serving it. \
    \ This approach\n   assumes that the NDO includes the publisher information, which\
    \ can be\n   used to reach the publisher.  It is suitable for the NDO whose\n\
    \   expiration time is difficult to be set in advance, e.g., a web page\n   that\
    \ contains the main text (which stays the same ever after) and the\n   interactive\
    \ sections such as comments or ads (which are updated\n   irregularly).\n   It\
    \ is often argued that ignoring stale NDOs in caches and simply\n   providing\
    \ new names for updated NDOs might be sufficient rather than\n   using a staleness\
    \ verification algorithm to manage them.  However,\n   notifying the new names\
    \ of updated NDOs to users is not a trivial\n   task.  Unless the update is informed\
    \ to all users at the same time,\n   some users would use the old name although\
    \ they intended to retrieve\n   the updated NDO.\n   One research challenge is\
    \ how to design consistency and coherence\n   models for caching NDOs along with\
    \ their revision handling and\n   updating protocols in a scalable manner.\n"
- title: 4.7.5.  Cache Sharing by Multiple Applications
  contents:
  - "4.7.5.  Cache Sharing by Multiple Applications\n   When ICN is deployed as a\
    \ general, application-independent network\n   and cache infrastructure, multiple\
    \ consumers and producers\n   (representing different applications) would communicate\
    \ over the same\n   infrastructure.  With universal naming schemes or sufficiently\
    \ unique\n   hash-based identifiers, different application could also share\n\
    \   identical NDOs in a transparent way.\n   Depending on the naming, data integrity,\
    \ and data origin\n   authentication approaches, there may be technical and business\n\
    \   challenges to share caches across different applications, for\n   example,\
    \ content protection, avoiding cache poisoning, ensuring\n   performance isolation,\
    \ etc.  As ICN research matures, these\n   challenges should be addressed more\
    \ specifically in a dedicated\n   document.\n"
- title: 4.8.  Network Management
  contents:
  - "4.8.  Network Management\n   Managing networks has been a core craft in the IP-based\
    \ host-centric\n   paradigm ever since the technology was introduced in production\n\
    \   networks.  However, at the onset of IP, management was considered\n   primarily\
    \ as an add-on.  Essential tools that are used daily by\n   networkers, such as\
    \ ping and traceroute, did not become widely\n   available until more than a decade\
    \ or so after IP was first\n   introduced.  Management protocols, such as SNMP,\
    \ also became\n   available much later than the original introduction of IP, and\
    \ many\n   still consider them insufficient despite the years of experience we\n\
    \   have running host-centric networks.  Today, when new networks are\n   deployed,\
    \ network management is considered a key aspect for any\n   operator, a major\
    \ challenge that is directly reflected in higher\n   operational cost if not done\
    \ well.  If we want ICN to be deployed in\n   infrastructure networks, development\
    \ of management tools and\n   mechanisms must go hand in hand with the rest of\
    \ the architecture\n   design.\n   Although defining an FCAPS (Fault, Configuration,\
    \ Accounting,\n   Performance, and Security) [ISOIEC-7498-4] management model\
    \ for ICN\n   is clearly outside the scope of this document, there is a need for\n\
    \   creating basic tools early on while ICN is still in the design and\n   experimentation\
    \ phases that can evolve over time and help network\n   operations centers (NOCs)\
    \ to define policies, validate that they are\n   indeed used in practice, be notified\
    \ early on about failures, and\n   determine and resolve configuration problems.\
    \  Authentication,\n   Authorization, and Accounting (AAA) as well as performance\n\
    \   management, from a NOC perspective, will also need to be considered.\n   Given\
    \ the expectations for a large number of nodes and unprecedented\n   traffic volumes,\
    \ automating tasks or even better employing self-\n   management mechanisms are\
    \ preferred.  The main challenge here is that\n   all tools we have at our disposal\
    \ today are node-centric, are end-to-\n   end oriented, or assume a packet-stream\
    \ communication environment.\n   Rethinking reachability and operational availability,\
    \ for example,\n   can yield significant insights into how information-centric\
    \ networks\n   will be managed in the future.\n   With respect to network management,\
    \ we see three different aspects.\n   First, any operator needs to manage all\
    \ resources available in the\n   network, which can range from node connectivity\
    \ to network bandwidth\n   availability to in-network storage to multi-access\
    \ support.  In ICN,\n   users will also bring into the network significant resources\
    \ in terms\n   of network coverage extension, storage, and processing capabilities.\n\
    \   Delay Tolerant Networking (DTN) characteristics should also be\n   considered\
    \ to the degree that this is possible (e.g., content\n   dissemination through\
    \ data mules).  Second, given that nodes and\n   links are not at the center of\
    \ an information-centric network,\n   network management should capitalize on\
    \ native ICN mechanisms.  For\n   example, in-network storage and name resolution\
    \ can be used for\n   monitoring, while native publish/subscribe functionality\
    \ can be used\n   for triggering notifications.  Finally, management is also at\
    \ the\n   core of network-controlling capabilities by allowing operating\n   actions\
    \ to be mediated and decided, triggering and activating\n   networking procedures\
    \ in an optimized way.  For example, monitoring\n   aspects can be conjugated\
    \ with different management actions in a\n   coordinated way, allowing network\
    \ operations to flow in a concerted\n   manner.\n   However, the considerations\
    \ on leveraging intrinsic ICN mechanisms\n   and capabilities to support management\
    \ operations go beyond a simple\n   mapping exercise.  In fact, it not only raises\
    \ a series of challenges\n   on its own, but also opens up new possibilities for\
    \ both ICN and\n   \"network management\" as a concept.  For instance, naming\
    \ mechanisms\n   are central to ICN-intrinsic operations, which are used to identify\n\
    \   and reach content under different aspects (e.g., hierarchically\n   structured\
    \ vs. \"flattish\" names).  In this way, ICN is decoupled from\n   host-centric\
    \ aspects on which traditional network management schemes\n   rely.  As such,\
    \ questions are raised that can directly be translated\n   into challenges for\
    \ network management capability, such as, for\n   example, how to address a node\
    \ or a network segment in an ICN naming\n   paradigm, how to identify which node\
    \ is connected \"where\", how to be\n   aware of the node capabilities (i.e.,\
    \ high or low-powered machine-to-\n   machine (M2M) node), and if there is a host-centric\
    \ protocol running\n   where the management process can also leverage.\n   But,\
    \ on the other hand, these same inherent ICN characteristics also\n   allow us\
    \ to look into network management through a new perspective.\n   By centering\
    \ its operations around NDOs, one can conceive new\n   management operations addressing,\
    \ for example, per-content management\n   or access control, as well as analyzing\
    \ performance per NDO instead\n   of per link or node.  Moreover, such considerations\
    \ can also be used\n   to manage operational aspects of ICN mechanisms themselves.\
    \  For\n   example, [NDN-MGMT] reutilizes inherent content-centric capabilities\n\
    \   of CCN to manage optimal link connectivity for nodes, in concert with\n  \
    \ a network optimization process.  Conversely, how these content-\n   centric\
    \ aspects can otherwise influence and impact management in\n   other areas (e.g.,\
    \ security and resilience) is also important, as\n   exemplified in [CCN-ACCESS],\
    \ where access control mechanisms are\n   integrated into a prototype of the [PURSUIT]\
    \ architecture.\n   The set of core research challenges for ICN management includes:\n\
    \   o  Management and control of NDO reception at the requestor\n   o  Coordination\
    \ of management information exchange and control\n      between ICN nodes and\
    \ ICN network control points\n   o  Identification of management and controlling\
    \ actions and items\n      through information naming\n   o  Relationship between\
    \ NDOs and host entities identification, i.e.,\n      how to identify a particular\
    \ link, interface, or flow that needs\n      to be managed\n"
- title: 4.9.  ICN Applications
  contents:
  - "4.9.  ICN Applications\n   ICN can be applied to different application domains\
    \ and is expected\n   to provide benefits for application developers by providing\
    \ a more\n   suitable interface for application developers (in addition to the\n\
    \   other ICN benefits described above).  [RFC7476] provides an overview\n   of\
    \ relevant application domains at large.  This section discusses\n   opportunities\
    \ and challenges for selected application types.\n"
- title: 4.9.1.  Web Applications
  contents:
  - "4.9.1.  Web Applications\n   Intuitively, the ICN request/response communication\
    \ style seems to be\n   directly mappable to web communication over HTTP.  NDO\
    \ names could be\n   the equivalent of URIs in today's web, proprietary and transparent\n\
    \   caching could be obsoleted by ICN in-network caching, and developers\n   could\
    \ directly use an ICN request/response API to build applications.\n   Research\
    \ efforts such as [ICN2014-WEB-NDN] have analyzed real-world\n   web applications\
    \ and ways to implement them in ICN.  The most\n   significant insight is that\
    \ REST-style (Representational State\n   Transfer) web communication relies heavily\
    \ on transmitting user/\n   application context information in HTTP GET requests,\
    \ which would\n   have to be mapped to corresponding ICN messages.  The challenge\
    \ in\n   ICN would be how to exactly achieve that mapping.  This could be done\n\
    \   to some degree by extending name formats or by extending message\n   structure\
    \ to include cookies and similar context information.  The\n   design decisions\
    \ would need to consider overhead in routers (for\n   example, if larger GET/Interest\
    \ messages would have to be stored in\n   corresponding tables on routers).\n\
    \   Other challenges include the ability to return different results\n   based\
    \ on requestor-specific processing in the presence of immutable\n   objects (and\
    \ name-object bindings) in ICN and the ability for\n   efficient bidirectional\
    \ communication, which would require some\n   mechanism to name and reach requestor\
    \ applications.\n"
- title: 4.9.2.  Video Streaming and Download
  contents:
  - "4.9.2.  Video Streaming and Download\n   One of ICN's prime application areas\
    \ is video streaming and download\n   where accessing named data, object-level\
    \ security, and in-network\n   storage can fulfill requirements for both video\
    \ streaming and\n   download.  The applicability and benefits of ICN to video\
    \ has been\n   demonstrated by several prototype developments\n   [ICN2014-AHLGREN-VIDEO-DEMO].\n\
    \   [VIDEO-STREAMING] discusses the opportunities and challenges of\n   implementing\
    \ today's video services such as DASH-based (Dynamic\n   Adaptive Streaming over\
    \ HTTP) streaming and download over ICN,\n   considering performance requirements,\
    \ relationship to peer-to-peer\n   live streaming, IPTV, and Digital Rights Management\
    \ (DRM).\n   In addition to just porting today's video application from a host-\n\
    \   centric paradigm to ICN, there are also promising opportunities to\n   leverage\
    \ the ICN network services for redesigning and thus\n   significantly enhancing\
    \ video access and distribution\n   [ICNRG-2015-01-WESTPHAL].  For example, ICN\
    \ store and forward could\n   be leveraged for rate adaptation to achieve maximum\
    \ throughput and\n   optimal Quality of Experience (QoE) in scenarios with varying\
    \ link\n   properties, if capacity information is fed back to rate selection\n\
    \   algorithms at senders.  Other optimizations such as more aggressive\n   prefetching\
    \ could be performed in the network by leveraging\n   visibility of chunk NDO\
    \ names and NDO metadata in the network.\n   Moreover, multi-source rate adaptation\
    \ in combination with network\n   coding could enable better QoE, for example,\
    \ in multi-interface/\n   access scenarios where multiple paths from client to\
    \ upstream caches\n   exist [RFC7476].\n"
- title: 4.9.3.  Internet of Things
  contents:
  - "4.9.3.  Internet of Things\n   The essence of ICN lies in the name-based routing\
    \ that enables users\n   to retrieve NDOs by the names regardless of their locations.\
    \  By\n   definition, ICN is well suited for IoT applications, where users\n \
    \  consume data generated from IoTs without maintaining secure\n   connections\
    \ to them.  The basic request/response style APIs of ICN\n   enable developers\
    \ to build IoT applications in a simple and fast\n   manner.\n   Ongoing efforts\
    \ such as [ICN-FOR-IOT], [ICN-ARCH], and\n   [ICN2014-NDNWILD] have addressed\
    \ the requirements and challenges of\n   ICN for IoT.  For instance, many IoT\
    \ applications depend on a PUSH\n   model where data transmission is initiated\
    \ by the publisher, so they\n   can support various real-time applications (emergency\
    \ alarm, etc.).\n   However, ICN does not support the PUSH model in a native manner\
    \ due\n   to its inherent receiver-driven data transmission mechanism.  The\n\
    \   challenge would be how to efficiently support the PUSH model in ICN,\n   so\
    \ it provides publish/subscribe-style APIs for IoT application\n   developers.\
    \  This could be done by introducing other types of\n   identifiers such as a\
    \ device identifier or by extending the current\n   request/response communication\
    \ style, which may result in heavy\n   overhead in ICN routers.\n   Moreover,\
    \ key characteristics of the ICN underlying operation also\n   impact important\
    \ aspects of IoT, such as the caching in content\n   storage of network forwarding\
    \ entities.  This allows the\n   simplification of ICN-based IoT application development.\
    \  Since the\n   network is able to act on named content, generic names provide\
    \ a way\n   to address content independently of the underlying device (and\n \
    \  access) technology, and bandwidth consumption is optimized due to the\n   availability\
    \ of cached content.  However, these aspects raise\n   challenges themselves concerning\
    \ the freshness of the information\n   received from the cache in contrast to\
    \ the last value generated by a\n   sensor, as well as pushing content to specific\
    \ nodes (e.g., for\n   controlling them), which requires individual addressing\
    \ for\n   identification.  In addition, due to the heterogeneous nature of IoT\n\
    \   nodes, their processing capabilities might not be able to handle the\n   necessary\
    \ content signing verification procedures.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document does not impact the security of\
    \ the Internet.  Security\n   questions related to ICN are discussed in Section\
    \ 4.2.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [ACCESS-CTL-DEL]\n              Fotiou, N., Marias,\
    \ G., and G. Polyzos, \"Access control\n              enforcement delegation for\
    \ information-centric networking\n              architectures\", Proceedings of\
    \ the second edition of the\n              ICN workshop on Information-centric\
    \ networking (ICN\n              '12) Helsinki, Finland, DOI 10.1145/2342488.2342507,\
    \ 2012.\n   [BACKSCATTER]\n              Waehlisch, M., Schmidt, TC., and M. Vahlenkamp,\n\
    \              \"Backscatter from the Data Plane - Threats to Stability\n    \
    \          and Security in Information-Centric Network\n              Infrastructure\"\
    , Computer Networks Vol 57, No. 16, pp.\n              3192-3206, DOI 10.1016/j.comnet.2013.07.009,\
    \ November\n              2013.\n   [BREADCRUMBS]\n              Rosensweig, E.\
    \ and J. Kurose, \"Breadcrumbs: Efficient,\n              Best-Effort Content\
    \ Location in Cache Networks\",\n              In Proceedings of the IEEE INFOCOM\
    \ 2009,\n              DOI 10.1109/INFCOM.2009.5062201, April 2009.\n   [CCN]\
    \      Jacobson, V., Smetters, D., Thornton, J., Plass, M.,\n              Briggs,\
    \ N., and R. Braynard, \"Networking Named Content\",\n              CoNEXT 2009,\
    \ DOI 10.1145/1658939.1658941, December 2009.\n   [CCN-ACCESS]\n             \
    \ Fotiou, N., Marias, G., and G. Polyzos, \"Access control\n              enforcement\
    \ delegation for information-centric networking\n              architectures\"\
    , In Proceedings of the second edition of\n              the ICN workshop on Information-centric\
    \ networking (ICN\n              '12), ACM, New York, NY, USA, 85-90,\n      \
    \        DOI 10.1145/2342488.2342507, 2012.\n   [CHAUM]    Chaum, D. and E. van\
    \ Heijst, \"Group signatures\",\n              In Proceedings of EUROCRYPT, DOI\
    \ 10.1007/3-540-46416-6_22,\n              1991.\n   [COMPACT]  Cowen, L., \"\
    Compact routing with minimum stretch\",\n              In Journal of Algorithms,\
    \ vol. 38, pp. 170-183,\n              DOI 10.1006/jagm.2000.1134, 2001.\n   [CONTUG]\
    \   Arianfar, S., Nikander, P., Eggert, L., Ott, J., and W.\n              Wong,\
    \ \"ConTug: A Receiver-Driven Transport Protocol for\n              Content-Centric\
    \ Networks\", Technical Report Aalto\n              University Comnet, 2011.\n\
    \   [DONA]     Koponen, T., Ermolinskiy, A., Chawla, M., Kim, K., gon\n      \
    \        Chun, B., and S. Shenker, \"A Data-Oriented (and Beyond)\n          \
    \    Network Architecture\", In Proceedings of SIGCOMM 2007,\n              DOI\
    \ 10.1145/1282427.1282402, August 2007.\n   [ENCRYPTION-AC]\n              Kurihara,\
    \ J., Uzun, E., and C. Wood, \"An Encryption-Based\n              Access Control\
    \ Framework for Content-Centric Networking\",\n              IFIP Networking 2015,\
    \ Toulouse, France,\n              DOI 10.1109/IFIPNetworking.2015.7145300, September\
    \ 2015.\n   [FRESHNESS]\n              Quevedo, J., Corujo, D., and R. Aguiar,\
    \ \"Consumer Driven\n              Information Freshness Approach for Content\
    \ Centric\n              Networking\", IEEE INFOCOM Workshop on Name-Oriented\n\
    \              Mobility Toronto, Canada,\n              DOI 10.1109/INFCOMW.2014.6849279,\
    \ May 2014.\n   [GREEDY]   Papadopoulos, F., Krioukov, D., Boguna, M., and A.\
    \ Vahdat,\n              \"Greedy forwarding in dynamic scale-free networks embedded\n\
    \              in hyperbolic metric spaces\", In Proceedings of the IEEE\n   \
    \           INFOCOM, San Diego, USA, DOI 10.1109/INFCOM.2010.5462131,\n      \
    \        2010.\n   [HRICP]    Carofiglio, G., Gallo, M., and L. Muscariello, \"\
    Joint hop-\n              by-hop and receiver-driven interest control protocol\
    \ for\n              content-centric networks\", In Proceedings of ACM SIGCOMM\n\
    \              ICN 2012, DOI 10.1145/2342488.2342497, 2012.\n   [ICN-ARCH] Zhang,\
    \ Y., Raychadhuri, D., Grieco, L., Baccelli, E.,\n              Burke, J., Ravindran,\
    \ R., Ed., and G. Wang, \"ICN based\n              Architecture for IoT - Requirements\
    \ and Challenges\", Work\n              in Progress, draft-zhang-iot-icn-challenges-02,\
    \ August\n              2015.\n   [ICN-FOR-IOT]\n              Lindgren, A., Ben\
    \ Abdesslem, F., Ahlgren, B., Schelen, O.,\n              and A. Malik, \"Applicability\
    \ and Tradeoffs of Information-\n              Centric Networking for Efficient\
    \ IoT\", Work in Progress,\n              draft-lindgren-icnrg-efficientiot-03,\
    \ July 2015.\n   [ICN2014-AHLGREN-VIDEO-DEMO]\n              Ahlgren, B., Jonasson,\
    \ A., and B. Ohlman, \"Demo Overview:\n              HTTP Live Streaming over\
    \ NetInf Transport\", ACM SIGCOMM\n              Information-Centric Networking\
    \ Conference Paris, France,\n              DOI 10.1145/2660129.2660136, September\
    \ 2014.\n   [ICN2014-NDNWILD]\n              Baccelli, E., Mehlis, C., Hahm, O.,\
    \ Schmidt, T., and M.\n              Waehlisch, \"Information Centric Networking\
    \ in the IoT:\n              Experiments with NDN in the Wild\", ACM SIGCOMM\n\
    \              Information-Centric Networking Conference Paris, France,\n    \
    \          DOI 10.1145/2660129.2660144, September 2014.\n   [ICN2014-WEB-NDN]\n\
    \              Moiseenko, I., Stapp, M., and D. Oran, \"Communication\n      \
    \        Patterns for Web Interaction in Named Data Networking\",\n          \
    \    ACM SIGCOMM Information-Centric Networking\n              Conference Paris,\
    \ France, DOI 10.1145/2660129.2660152,\n              September 2014.\n   [ICNNAMING]\n\
    \              Ghodsi, A., Koponen, T., Rajahalme, J., Sarolahti, P., and\n  \
    \            S. Shenker, \"Naming in Content-Oriented Architectures\",\n     \
    \         In Proceedings ACM SIGCOMM Workshop on Information-Centric\n       \
    \       Networking (ICN), DOI 10.1145/2018584.2018586, 2011.\n   [ICNRG-2015-01-WESTPHAL]\n\
    \              Westphal, C., \"Video over ICN\", IRTF ICNRG\n              Meeting\
    \ Cambridge, Massachusetts, USA, January 2015,\n              <http://www.ietf.org/proceedings/interim/2015/01/13/icnrg/\n\
    \              slides/slides-interim-2015-icnrg-1-0.pptx>.\n   [ICNSURVEY]\n \
    \             Ahlgren, B., Dannewitz, C., Imbrenda, C., Kutscher, D.,\n      \
    \        and B. Ohlman, \"A Survey of Information-Centric\n              Networking\"\
    , In Communications Magazine, IEEE, vol. 50,\n              no. 7, pp. 26-36,\
    \ DOI 10.1109/MCOM.2012.6231276, 2012.\n   [ISOIEC-7498-4]\n              ISO,\
    \ \"Information Processing Systems -- Open Systems\n              Interconnection\
    \ -- Basic Reference Model -- Part 4:\n              Management Framework\", November\
    \ 1989,\n              <http://standards.iso.org/ittf/PubliclyAvailableStandards/\n\
    \              s014258_ISO_IEC_7498-4_1989(E).zip>.\n   [MANI]     Pentikousis,\
    \ K. and T. Rautio, \"A multiaccess Network of\n              Information\", WoWMoM\
    \ 2010 IEEE,\n              DOI 10.1109/WOWMOM.2010.5534922, June 2010.\n   [MDHT]\
    \     D'Ambrosio, M., Dannewitz, C., Karl, H., and V.\n              Vercellone,\
    \ \"MDHT: A hierarchical name resolution service\n              for information-centric\
    \ networks\", ACM SIGCOMM workshop on\n              Information-centric networking\
    \ Toronto, Canada,\n              DOI 10.1145/2018584.2018587, August 2011.\n\
    \   [MMIN]     Pentikousis, K. and P. Bertin, \"Mobility management in\n     \
    \         infrastructure networks\", Internet Computing, IEEE vol.\n         \
    \     17, no. 5, pp. 74-79, DOI 10.1109/MIC.2013.98, October\n              2013.\n\
    \   [NDN-CTL-SHARING]\n              Yu, Y., \"Controlled Sharing of Sensitive\
    \ Content\", IRTF\n              ICNRG Meeting San Francisco, USA, October 2015,\n\
    \              <https://www.ietf.org/proceedings/interim/2015/10/03/\n       \
    \       icnrg/slides/slides-interim-2015-icnrg-4-8.pdf>.\n   [NDN-MGMT] Corujo,\
    \ D., Aguiar, R., Vidal, I., and J. Garcia-Reinoso,\n              \"A named data\
    \ networking flexible framework for management\n              communications\"\
    , Communications Magazine, IEEE vol. 50,\n              no. 12, pp. 36-43, DOI\
    \ 10.1109/MCOM.2012.6384449, December\n              2012.\n   [PURSUIT]  Fotiou\
    \ et al., N., \"Developing Information Networking\n              Further: From\
    \ PSIRP to PURSUIT\", In Proceedings of Proc.\n              BROADNETS. ICST,\
    \ DOI 10.1007/978-3-642-30376-0_1, 2010.\n   [RANDOM]   Gkantsidis, C., Mihail,\
    \ M., and A. Saberi, \"Random walks\n              in peer-to-peer networks: algorithms\
    \ and evaluation\",\n              In Perform. Eval., vol. 63, pp. 241-263,\n\
    \              DOI 10.1016/j.peva.2005.01.002, 2006.\n   [RESOURCE-POOL]\n   \
    \           Psaras, I., Saino, L., and G. Pavlou, \"Revisiting Resource\n    \
    \          Pooling: The case of In-Network Resource Sharing\", ACM\n         \
    \     HotNets Los Angeles, USA, DOI 10.1145/2670518.2673875,\n              October\
    \ 2014.\n   [RFC2002]  Perkins, C., Ed., \"IP Mobility Support\", RFC 2002,\n\
    \              DOI 10.17487/RFC2002, October 1996,\n              <http://www.rfc-editor.org/info/rfc2002>.\n\
    \   [RFC4838]  Cerf, V., Burleigh, S., Hooke, A., Torgerson, L., Durst,\n    \
    \          R., Scott, K., Fall, K., and H. Weiss, \"Delay-Tolerant\n         \
    \     Networking Architecture\", RFC 4838, DOI 10.17487/RFC4838,\n           \
    \   April 2007, <http://www.rfc-editor.org/info/rfc4838>.\n   [RFC5246]  Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.2\", RFC 5246,\n              DOI 10.17487/RFC5246, August 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5246>.\n   [RFC5280]  Cooper,\
    \ D., Santesson, S., Farrell, S., Boeyen, S.,\n              Housley, R., and\
    \ W. Polk, \"Internet X.509 Public Key\n              Infrastructure Certificate\
    \ and Certificate Revocation List\n              (CRL) Profile\", RFC 5280, DOI\
    \ 10.17487/RFC5280, May 2008,\n              <http://www.rfc-editor.org/info/rfc5280>.\n\
    \   [RFC5944]  Perkins, C., Ed., \"IP Mobility Support for IPv4, Revised\",\n\
    \              RFC 5944, DOI 10.17487/RFC5944, November 2010,\n              <http://www.rfc-editor.org/info/rfc5944>.\n\
    \   [RFC6920]  Farrell, S., Kutscher, D., Dannewitz, C., Ohlman, B.,\n       \
    \       Keranen, A., and P. Hallam-Baker, \"Naming Things with\n             \
    \ Hashes\", RFC 6920, DOI 10.17487/RFC6920, April 2013,\n              <http://www.rfc-editor.org/info/rfc6920>.\n\
    \   [RFC7476]  Pentikousis, K., Ed., Ohlman, B., Corujo, D., Boggia, G.,\n   \
    \           Tyson, G., Davies, E., Molinaro, A., and S. Eum,\n              \"\
    Information-Centric Networking: Baseline Scenarios\",\n              RFC 7476,\
    \ DOI 10.17487/RFC7476, March 2015,\n              <http://www.rfc-editor.org/info/rfc7476>.\n\
    \   [RFC7696]  Housley, R., \"Guidelines for Cryptographic Algorithm\n       \
    \       Agility and Selecting Mandatory-to-Implement Algorithms\",\n         \
    \     BCP 201, RFC 7696, DOI 10.17487/RFC7696, November 2015,\n              <http://www.rfc-editor.org/info/rfc7696>.\n\
    \   [SEEN]     Pentikousis, K., \"In search of energy-efficient mobile\n     \
    \         networking\", Communications Magazine, IEEE vol. 48 no. 1,\n       \
    \       pp. 95-103, DOI 10.1109/MCOM.2010.5394036, January 2010.\n   [VIDEO-STREAMING]\n\
    \              Westphal, C., Ed., Lederer, S., Posch, D., Timmerer, C.,\n    \
    \          Azgin, A., Liu, S., Mueller, C., Detti, A., Corujo, D.,\n         \
    \     Wang, J., Montpetit, M., Murray, N., Azgin, A., and S.\n              Liu,\
    \ \"Adaptive Video Streaming over ICN\", Work in\n              Progress, draft-irtf-icnrg-videostreaming-08,\
    \ April 2016.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Georgios Karagiannis for\
    \ providing\n   suggestions on QoS research challenges, Dimitri Papadimitriou\
    \ for\n   feedback on the routing section, and Joerg Ott and Stephen Farrell\n\
    \   for reviewing the whole document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Dirk Kutscher (editor)\n   NEC\n   Kurfuersten-Anlage\
    \ 36\n   Heidelberg\n   Germany\n   Email: kutscher@neclab.eu\n   Suyong Eum\n\
    \   Osaka University, School of Information Science and Technology\n   1-5 Yamadaoka,\
    \ Suita\n   Osaka  565-0871\n   Japan\n   Phone: +81-6-6879-4571\n   Email: suyong@ist.osaka-u.ac.jp\n\
    \   Kostas Pentikousis\n   Travelping\n   Koernerstr. 7-10\n   Berlin  10785\n\
    \   Germany\n   Email: k.pentikousis@travelping.com\n   Ioannis Psaras\n   University\
    \ College London, Dept. of E.E.  Eng.\n   Torrington Place\n   London  WC1E 7JE\n\
    \   United Kingdom\n   Email: i.psaras@ucl.ac.uk\n   Daniel Corujo\n   Universidade\
    \ de Aveiro\n   Instituto de Telecomunicacoes, Campus Universitario de Santiago\n\
    \   Aveiro  P-3810-193\n   Portugal\n   Email: dcorujo@av.it.pt\n   Damien Saucez\n\
    \   INRIA\n   2004 route des Lucioles - BP 93\n   Sophia Antipolis  06902 Cedex\n\
    \   France\n   Email: damien.saucez@inria.fr\n   Thomas C. Schmidt\n   HAW Hamburg\n\
    \   Berliner Tor 7\n   Hamburg  20099\n   Germany\n   Email: t.schmidt@haw-hamburg.de\n\
    \   Matthias Waehlisch\n   FU Berlin\n   Takustr. 9\n   Berlin  14195\n   Germany\n\
    \   Email: waehlisch@ieee.org\n"
