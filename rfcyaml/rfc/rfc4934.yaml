- title: __initial_text__
  contents:
  - '       Extensible Provisioning Protocol (EPP) Transport over TCP

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how an Extensible Provisioning Protocol\
    \ (EPP)\n   session is mapped onto a single Transmission Control Protocol (TCP)\n\
    \   connection.  This mapping requires use of the Transport Layer\n   Security\
    \ (TLS) protocol to protect information exchanged between an\n   EPP client and\
    \ an EPP server.  This document obsoletes RFC 3734.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . . . 2\n   2.  Session Management  . . . . . . . . . . . . . . . . . .\
    \ . . . . 2\n   3.  Message Exchange  . . . . . . . . . . . . . . . . . . . .\
    \ . . . 2\n   4.  Data Unit Format  . . . . . . . . . . . . . . . . . . . . .\
    \ . . 5\n   5.  Transport Considerations  . . . . . . . . . . . . . . . . . .\
    \ . 5\n   6.  Internationalization Considerations . . . . . . . . . . . . . .\
    \ 6\n   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6\n\
    \   8.  Security Considerations . . . . . . . . . . . . . . . . . . . . 6\n  \
    \ 9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 7\n   10.\
    \ References  . . . . . . . . . . . . . . . . . . . . . . . . . . 8\n     10.1.\
    \ Normative References  . . . . . . . . . . . . . . . . . . . 8\n     10.2. Informative\
    \ References  . . . . . . . . . . . . . . . . . . 8\n   Appendix A.  Changes from\
    \ RFC 3734  . . . . . . . . . . . . . . . . 9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes how the Extensible Provisioning\
    \ Protocol\n   (EPP) is mapped onto a single client-server TCP connection.  Security\n\
    \   services beyond those defined in EPP are provided by the Transport\n   Layer\
    \ Security (TLS) Protocol [RFC2246].  EPP is described in\n   [RFC4930].  TCP\
    \ is described in [RFC0793].  This document obsoletes\n   RFC 3734 [RFC3734].\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Session Management
  contents:
  - "2.  Session Management\n   Mapping EPP session management facilities onto the\
    \ TCP service is\n   straightforward.  An EPP session first requires creation\
    \ of a TCP\n   connection between two peers, one that initiates the connection\n\
    \   request and one that responds to the connection request.  The\n   initiating\
    \ peer is called the \"client\", and the responding peer is\n   called the \"\
    server\".  An EPP server MUST listen for TCP connection\n   requests on a standard\
    \ TCP port assigned by IANA.\n   The client MUST issue an active OPEN call, specifying\
    \ the TCP port\n   number on which the server is listening for EPP connection\
    \ attempts.\n   The EPP server MUST return an EPP <greeting> to the client after\
    \ the\n   TCP session has been established.\n   An EPP session is normally ended\
    \ by the client issuing an EPP\n   <logout> command.  A server receiving an EPP\
    \ <logout> command MUST\n   end the EPP session and close the TCP connection with\
    \ a CLOSE call.\n   A client MAY end an EPP session by issuing a CLOSE call.\n\
    \   A server MAY limit the life span of an established TCP connection.\n   EPP\
    \ sessions that are inactive for more than a server-defined period\n   MAY be\
    \ ended by a server issuing a CLOSE call.  A server MAY also\n   close TCP connections\
    \ that have been open and active for longer than\n   a server-defined period.\n"
- title: 3.  Message Exchange
  contents:
  - "3.  Message Exchange\n   With the exception of the EPP server greeting, EPP messages\
    \ are\n   initiated by the EPP client in the form of EPP commands.  An EPP\n \
    \  server MUST return an EPP response to an EPP command on the same TCP\n   connection\
    \ that carried the command.  If the TCP connection is closed\n   after a server\
    \ receives and successfully processes a command but\n   before the response can\
    \ be returned to the client, the server MAY\n   attempt to undo the effects of\
    \ the command to ensure a consistent\n   state between the client and the server.\
    \  EPP commands are\n   idempotent, so processing a command more than once produces\
    \ the same\n   net effect on the repository as successfully processing the command\n\
    \   once.\n   An EPP client streams EPP commands to an EPP server on an established\n\
    \   TCP connection.  A client MUST NOT distribute commands from a single\n   EPP\
    \ session over multiple TCP connections.  A client MAY establish\n   multiple\
    \ TCP connections to support multiple EPP sessions with each\n   session mapped\
    \ to a single connection.  A server SHOULD limit a\n   client to a maximum number\
    \ of TCP connections based on server\n   capabilities and operational load.\n\
    \   EPP describes client-server interaction as a command-response\n   exchange\
    \ where the client sends one command to the server and the\n   server returns\
    \ one response to the client.  A client might be able to\n   realize a slight\
    \ performance gain by pipelining (sending more than\n   one command before a response\
    \ for the first command is received)\n   commands with TCP transport, but this\
    \ feature does not change the\n   basic single command, single response operating\
    \ mode of the core\n   protocol.\n   Each EPP data unit MUST contain a single\
    \ EPP message.  Commands MUST\n   be processed independently and in the same order\
    \ as sent from the\n   client.\n   A server SHOULD impose a limit on the amount\
    \ of time required for a\n   client to issue a well-formed EPP command.  A server\
    \ SHOULD end an\n   EPP session and close an open TCP connection if a well-formed\
    \ command\n   is not received within the time limit.\n   A general state machine\
    \ for an EPP server is described in Section 2\n   of [RFC4930].  General client-server\
    \ message exchange using TCP\n   transport is illustrated in Figure 1.\n     \
    \                  Client                  Server\n                  |       \
    \                              |\n                  |                Connect \
    \             |\n                  | >>------------------------------->> |\n \
    \                 |                                     |\n                  |\
    \             Send Greeting           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |             Send <login>            |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |             Send Response           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |             Send Command            |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |             Send Response           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |            Send Command X           |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |    Send Command Y                   |\n                  | >>---------------+\
    \                  |\n                  |                  |                 \
    \ |\n                  |                  |                  |\n             \
    \     |            Send Response X          |\n                  | <<---------------(---------------<<\
    \ |\n                  |                  |                  |\n             \
    \     |                  |                  |\n                  |           \
    \       +--------------->> |\n                  |                            \
    \         |\n                  |            Send Response Y          |\n     \
    \             | <<-------------------------------<< |\n                  |   \
    \                                  |\n                  |             Send <logout>\
    \           |\n                  | >>------------------------------->> |\n   \
    \               |                                     |\n                  | \
    \    Send Response & Disconnect      |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \  Figure 1: TCP Client-Server Message Exchange\n"
- title: 4.  Data Unit Format
  contents:
  - "4.  Data Unit Format\n   The EPP data unit contains two fields: a 32-bit header\
    \ that describes\n   the total length of the data unit, and the EPP XML instance.\
    \  The\n   length of the EPP XML instance is determined by subtracting four\n\
    \   octets from the total length of the data unit.  A receiver must\n   successfully\
    \ read that many octets to retrieve the complete EPP XML\n   instance before processing\
    \ the EPP message.\n   EPP Data Unit Format (one tick mark represents one bit\
    \ position):\n       0                   1                   2               \
    \    3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   \
    \   |                           Total Length                        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         EPP XML Instance                      |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Total\
    \ Length (32 bits): The total length of the EPP data unit\n   measured in octets\
    \ in network (big endian) byte order.  The octets\n   contained in this field\
    \ MUST be included in the total length\n   calculation.\n   EPP XML Instance (variable\
    \ length): The EPP XML instance carried in\n   the data unit.\n"
- title: 5.  Transport Considerations
  contents:
  - "5.  Transport Considerations\n   Section 2.1 of the EPP core protocol specification\
    \ [RFC4930]\n   describes considerations to be addressed by protocol transport\n\
    \   mappings.  This mapping addresses each of the considerations using a\n   combination\
    \ of features described in this document and features\n   provided by TCP as follows:\n\
    \   -  TCP includes features to provide reliability, flow control,\n      ordered\
    \ delivery, and congestion control.  Section 1.5 of RFC 793\n      [RFC0793] describes\
    \ these features in detail; congestion control\n      principles are described\
    \ further in RFC 2581 [RFC2581] and RFC\n      2914 [RFC2914].  TCP is a connection-oriented\
    \ protocol, and\n      Section 2 of this mapping describes how EPP sessions are\
    \ mapped to\n      TCP connections.\n   -  Sections 2 and 3 of this mapping describe\
    \ how the stateful nature\n      of EPP is preserved through managed sessions\
    \ and controlled\n      message exchanges.\n   -  Section 3 of this mapping notes\
    \ that command pipelining is\n      possible with TCP, though batch-oriented processing\
    \ (combining\n      multiple EPP commands in a single data unit) is not permitted.\n\
    \   -  Section 4 of this mapping describes features to frame data units\n    \
    \  by explicitly specifying the number of octets used to represent a\n      data\
    \ unit.\n"
- title: 6.  Internationalization Considerations
  contents:
  - "6.  Internationalization Considerations\n   This mapping does not introduce or\
    \ present any internationalization\n   or localization issues.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   System port number 700 has been assigned by the IANA\
    \ for mapping EPP\n   onto TCP.\n   User port number 3121 (which was used for\
    \ development and test\n   purposes) has been reclaimed by the IANA.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   EPP as-is provides only simple client authentication\
    \ services using\n   identifiers and plain text passwords.  A passive attack is\
    \ sufficient\n   to recover client identifiers and passwords, allowing trivial\
    \ command\n   forgery.  Protection against most other common attacks MUST be\n\
    \   provided by other layered protocols.\n   When layered over TCP, the Transport\
    \ Layer Security (TLS) Protocol\n   version 1.0 [RFC2246] or its successors (such\
    \ as TLS 1.1 [RFC4346]),\n   using the latest version supported by both parties,\
    \ MUST be used to\n   provide integrity, confidentiality, and mutual strong client-server\n\
    \   authentication.  Implementations of TLS often contain a weak\n   cryptographic\
    \ mode that SHOULD NOT be used to protect EPP.  Clients\n   and servers desiring\
    \ high security SHOULD instead use TLS with\n   cryptographic algorithms that\
    \ are less susceptible to compromise.\n   Mutual client and server authentication\
    \ using the TLS Handshake\n   Protocol is REQUIRED.  Signatures on the complete\
    \ certification path\n   for both client machine and server machine MUST be validated\
    \ as part\n   of the TLS handshake.  Information included in the client and server\n\
    \   certificates, such as validity periods and machine names, MUST also\n   be\
    \ validated.  A complete description of the issues associated with\n   certification\
    \ path validation can be found in RFC 3280 [RFC3280].\n   EPP service MUST NOT\
    \ be granted until successful completion of a TLS\n   handshake and certificate\
    \ validation, ensuring that both the client\n   machine and the server machine\
    \ have been authenticated and\n   cryptographic protections are in place.\n  \
    \ Authentication using the TLS Handshake Protocol confirms the identity\n   of\
    \ the client and server machines.  EPP uses an additional client\n   identifier\
    \ and password to identify and authenticate the client's\n   user identity to\
    \ the server, supplementing the machine authentication\n   provided by TLS.  The\
    \ identity described in the client certificate\n   and the identity described\
    \ in the EPP client identifier can differ,\n   as a server can assign multiple\
    \ user identities for use from any\n   particular client machine.  Acceptable\
    \ certificate identities MUST be\n   negotiated between client operators and server\
    \ operators using an\n   out-of-band mechanism.  Presented certificate identities\
    \ MUST match\n   negotiated identities before EPP service is granted.\n   There\
    \ is a risk of login credential compromise if a client does not\n   properly identify\
    \ a server before attempting to establish an EPP\n   session.  Before sending\
    \ login credentials to the server, a client\n   needs to confirm that the server\
    \ certificate received in the TLS\n   handshake is an expected certificate for\
    \ the server.  A client also\n   needs to confirm that the greeting received from\
    \ the server contains\n   expected identification information.  After establishing\
    \ a TLS\n   session and receiving an EPP greeting on a protected TCP connection,\n\
    \   clients MUST compare the certificate subject and/or subjectAltName to\n  \
    \ expected server identification information and abort processing if a\n   mismatch\
    \ is detected.  If certificate validation is successful, the\n   client then needs\
    \ to ensure that the information contained in the\n   received certificate and\
    \ greeting is consistent and appropriate.  As\n   described above, both checks\
    \ typically require an out-of-band\n   exchange of information between client\
    \ and server to identify\n   expected values before in-band connections are attempted.\n\
    \   EPP TCP servers are vulnerable to common TCP denial-of-service\n   attacks\
    \ including TCP SYN flooding.  Servers SHOULD take steps to\n   minimize the impact\
    \ of a denial-of-service attack using combinations\n   of easily implemented solutions,\
    \ such as deployment of firewall\n   technology and border router filters to restrict\
    \ inbound server\n   access to known, trusted clients.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This document was originally written as an individual\
    \ submission\n   Internet-Draft.  The PROVREG working group later adopted it as\
    \ a\n   working group document and provided many invaluable comments and\n   suggested\
    \ improvements.  The author wishes to acknowledge the efforts\n   of WG chairs\
    \ Edward Lewis and Jaap Akkerhuis for their process and\n   editorial contributions.\n\
    \   Specific suggestions that have been incorporated into this document\n   were\
    \ provided by Chris Bason, Randy Bush, Patrik Faltstrom, Ned\n   Freed, James\
    \ Gould, Dan Manley, and John Immordino.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC0793]  Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n              RFC 793, September 1981.\n   [RFC2119]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2246]  Dierks, T. and C. Allen, \"The\
    \ TLS Protocol Version 1.0\",\n              RFC 2246, January 1999.\n   [RFC4930]\
    \  Hollenbeck, S., \"Extensible Provisioning Protocol (EPP)\",\n             \
    \ RFC 4930, May 2007.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC2581]  Allman, M., Paxson, V., and W. Stevens,\
    \ \"TCP Congestion\n              Control\", RFC 2581, April 1999.\n   [RFC2914]\
    \  Floyd, S., \"Congestion Control Principles\", BCP 41,\n              RFC 2914,\
    \ September 2000.\n   [RFC3280]  Housley, R., Polk, W., Ford, W., and D. Solo,\
    \ \"Internet\n              X.509 Public Key Infrastructure Certificate and\n\
    \              Certificate Revocation List (CRL) Profile\", RFC 3280,\n      \
    \        April 2002.\n   [RFC3734]  Hollenbeck, S., \"Extensible Provisioning\
    \ Protocol (EPP)\n              Transport Over TCP\", RFC 3734, March 2004.\n\
    \   [RFC4346]  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n  \
    \            (TLS) Protocol Version 1.1\", RFC 4346, April 2006.\n"
- title: Appendix A.  Changes from RFC 3734
  contents:
  - "Appendix A.  Changes from RFC 3734\n   1.  Minor reformatting as a result of\
    \ converting I-D source format\n       from nroff to XML.\n   2.  Updated Security\
    \ Considerations to include strong authentication\n       among the list of needed\
    \ security services.  Removed paragraph\n       describing replay attacks because\
    \ it's not specific to TCP.  New\n       text has been added to RFC 4930 to describe\
    \ this issue.\n   3.  Modified description of TCP operation as a result of IESG\n\
    \       evaluation.\n   4.  Moved RFCs 2581 and 2914 from the normative reference\
    \ section to\n       the informative reference section.\n   5.  Added informative\
    \ references to RFCs 3280 and 4346 and\n       descriptive text for each as a\
    \ result of IESG evaluation.\n   6.  Revised security considerations as a result\
    \ of IESG evaluation.\n   7.  Updated EPP references.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Scott Hollenbeck\n   VeriSign, Inc.\n   21345 Ridgetop Circle\n\
    \   Dulles, VA  20166-6503\n   US\n   EMail: shollenbeck@verisign.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
