- contents:
  - "                      Management Information Base\n                  for Telephony
    Routing over IP (TRIP)\n"
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  module for use with network management protocols in the Internet\n   community.
    \ In particular, it describes a set of managed objects that\n   are used to manage
    Telephony Routing over IP (TRIP) devices.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  The Internet-Standard Management Framework . . . .
    . . . . . .  2\n   2.  Introduction . . . . . . . . . . . . . . . . . . . . .
    . . . .  2\n   3.  Conventions used in this document. . . . . . . . . . . . .
    . .  2\n   4.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .
    \ 2\n   5.  Structure of TRIP MIB. . . . . . . . . . . . . . . . . . . . .  2\n
    \      5.1.  Textual Conventions. . . . . . . . . . . . . . . . . . .  3\n   6.
    \ Definitions. . . . . . . . . . . . . . . . . . . . . . . . . .  4\n       6.1.
    \ TRIP Textual Conventions . . . . . . . . . . . . . . . .  4\n       6.2.  TRIP
    MIB . . . . . . . . . . . . . . . . . . . . . . . .  7\n   7.  Security Considerations.
    . . . . . . . . . . . . . . . . . . . 48\n   8.  References . . . . . . . . .
    . . . . . . . . . . . . . . . . . 50\n       8.1.  Normative References . . .
    . . . . . . . . . . . . . . . 50\n       8.2.  Informative References . . . .
    . . . . . . . . . . . . . 51\n   9.  Acknowledgments. . . . . . . . . . . . .
    . . . . . . . . . . . 51\n   10. Authors' Addresses . . . . . . . . . . . . .
    . . . . . . . . . 52\n   11. Full Copyright Statement . . . . . . . . . . . .
    . . . . . . . 53\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB module objects are\n   generally accessed through the Simple Network
    Management Protocol\n   (SNMP).  Objects in this MIB module are defined using
    the mechanisms\n   defined in the Structure of Management Information (SMI).  This
    memo\n   specifies a MIB module that is compliant to the SMIv2, which is\n   described
    in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579],\n   and STD 58, RFC
    2580 [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Introduction\n   This memo defines a portion of the Management Information
    Base (MIB)\n   for use with network management protocols in the Internet community.\n
    \  In particular, it describes a set of managed objects that are used\n   to schedule
    management operations periodically or at specified dates\n   and times.  Since
    TRIP [RFC3219] is modeled after the Border Gateway\n   Protocol (BGP-4) [RFC1771],
    the managed objects for TRIP are also\n   modeled after RFC1657 - Definitions
    of Managed Objects for the\n   Fourth Version of the Border Gateway Protocol (BGP-4)
    using SMIv2\n   [RFC1657].\n"
  title: 2.  Introduction
- contents:
  - "3.  Conventions used in this document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in\n   this document are to be interpreted as described
    in BCP 14, RFC 2119\n   [RFC2119].\n"
  title: 3.  Conventions used in this document
- contents:
  - "4.  Overview\n   This MIB module provides managed objects for TRIP devices defined
    in\n   Telephony Routing over IP [RFC3219].  TRIP is an inter-domain\n   application-layer
    control protocol that exchanges information\n   between TRIP location servers
    (LS) to provide efficient IP telephony\n   routing.\n"
  title: 4.  Overview
- contents:
  - "5.  Structure of TRIP MIB\n   This MIB module utilizes the framework described
    in RFC 2788\n   [RFC2788] for management of multiple instances of TRIP from a
    single\n   entity.  The Network Services Monitoring MIB module applTable will\n
    \  be populated with entries corresponding to each TRIP Location Server\n   in
    the system.  Each TRIP Location Server will then have an\n   applIndex associated
    with it.  The value assigned to applIndex will\n   represent the distinct instance
    of TRIP.\n   The TRIP MIB module contains the following groups of objects with\n
    \  each group as part of the management of a singular TRIP entity.  Each\n   group
    covers a section of functionality of TRIP:\n   o  The tripConfigGroup contains
    the common configuration objects\n      applicable to all TRIP applications referenced
    by the applIndex.\n   o  The tripPeerTableConfigGroup contains the configuration
    objects\n      applicable to all TRIP peers of the Location Server referenced
    by\n      the applIndex.\n   o  The tripRouteGroup contains the configuration
    objects related to\n      the routes of all TRIBs of this Location Server.\n   o
    \ The tripItadTopologyGroup contains information about the topology\n      of
    the TRIP ITADs concerning this Location Server.\n   o  The tripPeerTableStatsGroup
    contains the statistical objects\n      applicable to all TRIP peers of the Location
    Server referenced by\n      the applIndex.\n   o  The tripNotificationGroup contains
    notifications that the TRIP\n      application can generate.\n   o  The tripNotifObjectGroup
    contains the objects needed by one or\n      more of the notifications.\n"
  - contents:
    - "5.1.  Textual Conventions\n   The data types TripItad and TripId are used as
      textual conventions\n   in this document.  A TRIP ITAD (IP Telephony Administrative
      Domain)\n   is described in [RFC3219].  A TRIP ID is used as a distinct\n   identifier
      for a TRIP Location Server.  A TripAppProtocol is used to\n   identify an application
      protocol.  A TripAddressFamily is used to\n   define an address family.  TripCommunityId
      is used as a distinct\n   identifier for a TRIP community.  TripProtocolVersion
      depicts the\n   version number of the TRIP protocol.  TripSendReceiveMode describes\n
      \  the operational mode of the TRIP application.\n"
    title: 5.1.  Textual Conventions
  title: 5.  Structure of TRIP MIB
- contents:
  - '6.  Definitions

    '
  - contents:
    - '6.1.  TRIP Textual Conventions

      '
    - 'TRIP-TC-MIB DEFINITIONS ::= BEGIN

      '
    - "IMPORTS\n    MODULE-IDENTITY,\n    Unsigned32,\n    Integer32,\n    mib-2\n
      \       FROM SNMPv2-SMI            -- [RFC2578]\n    TEXTUAL-CONVENTION\n        FROM
      SNMPv2-TC;            -- [RFC2579]\n"
    - "tripTC MODULE-IDENTITY\n    LAST-UPDATED   \"200409020000Z\" -- Sep 02, 2004\n
      \   ORGANIZATION   \"IETF IPTel Working Group.\n        Mailing list: iptel@lists.bell-labs.com\"\n
      \   CONTACT-INFO\n       \"Co-editor  David Zinman\n        postal:    265 Ridley
      Blvd.\n                   Toronto ON, M5M 4N8\n                   Canada\n        email:
      \    dzinman@rogers.com\n        phone:     +1 416 433 4298\n        Co-editor:
      David Walker\n                   Sedna Wireless Inc.\n        postal:    495
      March Road, Suite 500\n                   Ottawa, ON K2K 3G1\n                   Canada\n
      \       email:     david.walker@sedna-wireless.com\n        phone:     +1 613
      878 8142\n        Co-editor   Jianping Jiang\n                    Syndesis Limited\n
      \       postal:     30 Fulton Way\n                    Richmond Hill, ON L4B
      1J5\n                    Canada\n        email:      jjiang@syndesis.com\n        phone:
      \     +1 905 886-7818 x2515\n        \"\n    DESCRIPTION\n        \"Initial
      version of TRIP (Telephony Routing Over IP)\n        MIB Textual Conventions
      module used by other\n        TRIP-related MIB Modules.\n        Copyright (C)
      The Internet Society (2004). This version of\n        this MIB module is part
      of RFC 3872, see the RFC itself\n        for full legal notices.\"\n    REVISION
      \     \"200409020000Z\" -- Sep 02, 2004\n    DESCRIPTION\n        \"The initial
      version, Published as RFC 3872.\"\n    ::= { mib-2 115 }\n"
    - '--

      '
    - '-- Textual Conventions

      '
    - '--

      '
    - "TripItad ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n       \"The
      values for identifying the IP Telephony\n       Administrative Domain (ITAD).\"\n
      \   SYNTAX Unsigned32 (0..4294967295)\n"
    - "TripId ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n       \"The
      TRIP Identifier uniquely identifies a LS within its\n       ITAD. It is a 4
      octet unsigned integer that may, but not\n       necessarily, represent the
      IPv4 address of a Location\n       Server.  Where bytes 1-4 of the Unsigned32
      represent\n       1-4 bytes of the IPv4 address in network-byte order. For\n
      \      an IPv6 network, TripId will not represent the IPv6\n       address.\"\n
      \   SYNTAX Unsigned32 (0..4294967295)\n"
    - "TripAddressFamily ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n
      \       \"A type of address for a TRIP route. Address families\n        defined
      within this MIB module are:\n        Code              Address Family\n        1
      \                Decimal Routing Numbers\n        2                 PentaDecimal
      Routing Numbers\n        3                 E.164 Numbers\n        255               An
      other type of address family\"\n    SYNTAX INTEGER\n        { decimal(1), pentadecimal(2),
      e164(3), other(255) }\n"
    - "TripAppProtocol ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n
      \       \"The application protocol used for communication with TRIP\n        Location
      Servers. Protocols defined in this MIB Module\n        are:\n        Code              Protocol\n
      \       1                 SIP\n        2                 H.323-H.225.0-Q.931\n
      \       3                 H.323-H.225.0-RAS\n        4                 H.323-H.225.0-Annex-G\n
      \       255               An other type of application protocol\"\n    SYNTAX
      INTEGER\n        { sip(1), q931(2), ras(3), annexG(4), other(255) }\n"
    - "TripCommunityId ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n
      \      \"The range of legal values for a TRIP Community\n       Identifier.\"\n
      \   SYNTAX Unsigned32 (0..4294967295)\n"
    - "TripProtocolVersion ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n
      \      \"The version number of the TRIP protocol.\"\n    SYNTAX Integer32 (1..255)\n"
    - "TripSendReceiveMode ::= TEXTUAL-CONVENTION\n    STATUS current\n    DESCRIPTION\n
      \      \"The operational mode of the TRIP application. Possible\n       values
      are:\n          1 - Send Receive mode\n          2 - Send only mode\n          3
      - Receive Only mode\"\n    SYNTAX INTEGER { sendReceive(1), sendOnly(2), receiveOnly(3)
      }\n"
    - 'END

      '
    title: 6.1.  TRIP Textual Conventions
  - contents:
    - '6.2.  TRIP MIB

      '
    - "TRIP-MIB DEFINITIONS ::= BEGIN\n    IMPORTS\n        MODULE-IDENTITY,\n        OBJECT-TYPE,\n
      \       NOTIFICATION-TYPE,\n        Unsigned32,\n        Integer32,\n        Counter32,\n
      \       mib-2\n            FROM SNMPv2-SMI           -- [RFC2578]\n        DateAndTime,\n
      \       TimeInterval,\n        TruthValue,\n        TimeStamp,\n        StorageType,\n
      \       RowStatus\n            FROM SNMPv2-TC            -- [RFC2579]\n        OBJECT-GROUP,\n
      \       MODULE-COMPLIANCE,\n        NOTIFICATION-GROUP\n            FROM SNMPv2-CONF
      \         -- [RFC2580]\n        InetAddressType,\n        InetAddress,\n        InetPortNumber\n
      \           FROM INET-ADDRESS-MIB     -- [RFC3291]\n        applIndex,\n        applRFC2788Group\n
      \           FROM NETWORK-SERVICES-MIB -- [RFC2788]\n        TripItad,\n        TripId,\n
      \       TripAppProtocol,\n        TripAddressFamily,\n        TripCommunityId,\n
      \       TripProtocolVersion,\n        TripSendReceiveMode\n            FROM
      TRIP-TC-MIB;          -- [RFC3872]\n    tripMIB MODULE-IDENTITY\n       LAST-UPDATED
      \"200409020000Z\" -- Sep 02, 2004\n           ORGANIZATION \"IETF IPTel Working
      Group.\n            Mailing list: iptel@lists.bell-labs.com\"\n       CONTACT-INFO\n
      \          \"Co-editor  David Zinman\n            postal:    265 Ridley Blvd.\n
      \                      Toronto ON, M5M 4N8\n                       Canada\n
      \           email:     dzinman@rogers.com\n            phone:     +1 416 433
      4298\n        Co-editor: David Walker\n                   Sedna Wireless Inc.\n
      \       postal:    495 March Road, Suite 500\n                   Ottawa, ON
      K2K 3G1\n                   Canada\n        email:     david.walker@sedna-wireless.com\n
      \       phone:     +1 613 878 8142\n        Co-editor   Jianping Jiang\n                    Syndesis
      Limited\n        postal:     30 Fulton Way\n                    Richmond Hill,
      ON L4B 1J5\n                    Canada\n        email:      jjiang@syndesis.com\n
      \       phone:      +1 905 886-7818 x2515\n            \"\n        DESCRIPTION\n
      \           \"The MIB module describing Telephony Routing over IP\n            (TRIP).
      TRIP is a policy driven inter-administrative\n            domain protocol for
      advertising the reachability of\n            telephony destinations between
      location servers (LS), and\n            for advertising attributes of the routes
      to those\n            destinations.\n            Copyright (C) The Internet
      Society (2004). This version of\n            this MIB module is part of RFC
      3872, see the RFC itself\n            for full legal notices.\"\n        REVISION
      \     \"200409020000Z\" -- Sep 02, 2004\n        DESCRIPTION\n            \"The
      initial version, Published as RFC 3872.\"\n    ::= { mib-2 116 }\n        tripMIBNotifications
      OBJECT IDENTIFIER ::= { tripMIB 0 }\n        tripMIBObjects       OBJECT IDENTIFIER
      ::= { tripMIB 1 }\n        tripMIBConformance   OBJECT IDENTIFIER ::= { tripMIB
      2 }\n        tripMIBNotifObjects  OBJECT IDENTIFIER ::= { tripMIB 3 }\n        tripMIBCompliances
      \   OBJECT IDENTIFIER ::=\n                                        { tripMIBConformance
      1 }\n        tripMIBGroups        OBJECT IDENTIFIER ::=\n                                        {
      tripMIBConformance 2 }\n   --\n   -- tripCfgTable\n   --\n    tripCfgTable OBJECT-TYPE\n
      \       SYNTAX     SEQUENCE OF TripCfgEntry\n        MAX-ACCESS not-accessible\n
      \       STATUS     current\n        DESCRIPTION\n            \"This table contains
      the common configuration objects\n             applicable to all TRIP applications
      referenced by the\n             applIndex.  Each row represents those objects
      for a\n             particular TRIP LS present in this system. The\n             instances
      of TRIP LS's are uniquely identified by the\n             applIndex. The objects
      in this table SHOULD be\n             nonVolatile and survive a reboot.\"\n
      \       ::= { tripMIBObjects 1 }\n    tripCfgEntry OBJECT-TYPE\n        SYNTAX
      \    TripCfgEntry\n        MAX-ACCESS not-accessible\n        STATUS     current\n
      \       DESCRIPTION\n            \"A row of common configuration.\"\n        INDEX
      { applIndex }\n        ::= { tripCfgTable 1 }\n    TripCfgEntry ::=\n        SEQUENCE
      {\n           tripCfgProtocolVersion               TripProtocolVersion,\n           tripCfgItad
      \                         TripItad,\n           tripCfgIdentifier                    TripId,\n
      \          tripCfgAdminStatus                   INTEGER,\n           tripCfgOperStatus
      \                   INTEGER,\n           tripCfgAddrIAddrType                 InetAddressType,\n
      \          tripCfgAddr                          InetAddress,\n           tripCfgPort
      \                         InetPortNumber,\n           tripCfgMinItadOriginationInterval
      \   Unsigned32,\n           tripCfgMinRouteAdvertisementInterval Unsigned32,\n
      \          tripCfgMaxPurgeTime                  Unsigned32,\n           tripCfgDisableTime
      \                  Unsigned32,\n           tripCfgSendReceiveMode               TripSendReceiveMode,\n
      \          tripCfgStorage                       StorageType\n       }\n    tripCfgProtocolVersion
      \   OBJECT-TYPE\n        SYNTAX     TripProtocolVersion\n        MAX-ACCESS
      read-only\n        STATUS     current\n        DESCRIPTION\n            \"This
      object will reflect the version of TRIP\n            supported by this system.
      \ It follows the same\n            format as TRIP version information contained\n
      \           in the TRIP messages generated by this TRIP entity.\"\n        REFERENCE\n
      \           \"RFC 3219, section 4.2.\"\n        ::= { tripCfgEntry 1 }\n    tripCfgItad
      \  OBJECT-TYPE\n        SYNTAX      TripItad\n        MAX-ACCESS  read-write\n
      \       STATUS      current\n        DESCRIPTION\n            \"The Internet
      Telephony Administrative domain (ITAD)\n            of this LS.\"\n        ::=
      { tripCfgEntry 2 }\n    tripCfgIdentifier   OBJECT-TYPE\n        SYNTAX      TripId\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The object that identifies this TRIP Client.\"\n        ::= {
      tripCfgEntry 3 }\n    tripCfgAdminStatus OBJECT-TYPE\n        SYNTAX      INTEGER
      {\n                        up(1),\n                        down(2)\n                    }\n
      \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
      \           \"The desired TRIP state.\n             up(1)  : Set the application
      to normal operation.\n             down(2): Set the application to a state where
      it will\n                      not process TRIP messages.\n             Setting
      this object should be reflected in\n             tripCfgOperStatus. If an unknown
      error occurs\n             tripCfgOperStatus will return unknown(0).\"\n        ::=
      { tripCfgEntry 4 }\n    tripCfgOperStatus OBJECT-TYPE\n        SYNTAX      INTEGER
      {\n                        unknown(0),\n                        up(1),\n                        down(2),\n
      \                       faulty(3)\n                    }\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
      current operational state of the TRIP protocol.\n             unknown(0): The
      operating status of the application is\n                         unknown.\n
      \            up(1):      The application is operating normally, and\n                         is
      ready to process (receive and issue) TRIP\n                         requests
      and responses.\n             down(2):    The application is currently not processing\n
      \                        TRIP messages. This occurs if the TRIP\n                         application
      is in an initialization state or\n                         if tripCfgAdminStatus
      is set to down(2).\n             faulty(3):  The application is not operating
      normally due\n                         to a fault in the system.\n            If
      tripCfgAdminStatus is down(2) then tripOperStatus SHOULD\n            be down(2).
      If tripAdminStatus is changed to up(1) then\n            tripOperStatus SHOULD
      change to up(1) if there is no\n            fault that prevents the TRIP protocol
      from moving to the\n            up(1) state.\"\n        ::= { tripCfgEntry 5
      }\n    tripCfgAddrIAddrType OBJECT-TYPE\n        SYNTAX      InetAddressType\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The type of Inet Address of the tripAddr.\"\n        REFERENCE\n
      \           \"RFC 3291, section 3.\"\n        ::= { tripCfgEntry 6 }\n    tripCfgAddr
      OBJECT-TYPE\n        SYNTAX      InetAddress\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"The network
      address of the local LS that the peer\n            connects to. The type of
      address depends on the object\n            tripCfgAddrIAddrType. The type of
      this address is\n            determined by the value of the\n            tripCfgAddrIAddrType
      object.\"\n        REFERENCE\n            \"RFC 3291, section 3.\"\n        ::=
      { tripCfgEntry 7 }\n    tripCfgPort OBJECT-TYPE\n        SYNTAX      InetPortNumber\n
      \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
      \           \"The local tcp/udp port on the local LS that the peer\n            connects
      to.\"\n        ::= { tripCfgEntry 8 }\n    tripCfgMinItadOriginationInterval
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
      \           \"The minimum amount of time that MUST elapse between\n            advertisement
      of the update message that reports changes\n            within the LS's own
      ITAD.\"\n        DEFVAL { 30 }\n        ::= { tripCfgEntry 9 }\n    tripCfgMinRouteAdvertisementInterval
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies minimal interval between successive\n            advertisements
      to a particular destination from an LS.\"\n        DEFVAL { 30 }\n        ::=
      { tripCfgEntry 10 }\n    tripCfgMaxPurgeTime OBJECT-TYPE\n        SYNTAX      Unsigned32
      (1..2147483647)\n        UNITS       \"Seconds\"\n        MAX-ACCESS  read-write\n
      \       STATUS      current\n        DESCRIPTION\n            \"Indicates the
      interval that the LS MUST maintain routes\n            marked as withdrawn in
      its database.\"\n        DEFVAL { 10 }\n        ::= { tripCfgEntry 11 }\n    tripCfgDisableTime
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
      \           \"Indicates the interval that the TRIP module of the\n            LS
      MUST be disabled while routes originated by this\n            LS with high sequence
      numbers can be removed.\"\n        DEFVAL { 180 }\n        ::= { tripCfgEntry
      12 }\n    tripCfgSendReceiveMode OBJECT-TYPE\n        SYNTAX TripSendReceiveMode\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The operational mode of the TRIP entity running on this\n            system.\"\n
      \       ::= { tripCfgEntry 13 }\n    tripCfgStorage OBJECT-TYPE\n        SYNTAX
      \      StorageType\n        MAX-ACCESS   read-write\n        STATUS       current\n
      \       DESCRIPTION\n           \"The storage type for this conceptual row.
      Conceptual rows\n           having the value 'permanent' need not allow write-access\n
      \          to any columnar objects in the row.\"\n        DEFVAL { nonVolatile
      }\n        ::= { tripCfgEntry 14 }\n --\n -- TripRouteTypeTable\n --\n    tripRouteTypeTable
      OBJECT-TYPE\n        SYNTAX      SEQUENCE OF TripRouteTypeEntry\n        MAX-ACCESS
      \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"The
      TRIP peer Route Type table contains one entry per\n            supported protocol
      - address family pair.  The objects in\n            this table are volatile
      and are refreshed after a reboot.\"\n        ::= { tripMIBObjects 2 }\n    tripRouteTypeEntry
      OBJECT-TYPE\n        SYNTAX      TripRouteTypeEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"An entry containing
      information about the route type\n            that a particular TRIP entity
      supports. Each entry\n            represents information about either the local
      or a remote\n            LS peer.  The object tripRouteTypePeer is used to\n
      \           distinguish this.  In the case of a local LS, the\n            address/port
      information will reflect the values\n            configured in tripCfgTable.
      \ In the case of a remote\n            peer, the address/port information will
      reflect the\n            values of an entry in the tripPeerTable.\n            Implementation
      need to be aware that if the size of\n            tripRouteTypeAddr exceeds
      111 sub-IDs, then OIDs of column\n            instances in this table will have
      more than 128 sub-IDs\n            and cannot be accessed using SNMPv1, SNMPv2c,
      or snmpv3.\"\n        INDEX { applIndex,\n                tripRouteTypeAddrInetType,\n
      \               tripRouteTypeAddr,\n                tripRouteTypePort,\n                tripRouteTypeProtocolId,\n
      \               tripRouteTypeAddrFamilyId }\n          ::= { tripRouteTypeTable
      1 }\n    TripRouteTypeEntry ::= SEQUENCE {\n        tripRouteTypeAddrInetType
      \      InetAddressType,\n        tripRouteTypeAddr               InetAddress,\n
      \       tripRouteTypePort               InetPortNumber,\n        tripRouteTypeProtocolId
      \        TripAppProtocol,\n        tripRouteTypeAddrFamilyId       TripAddressFamily,\n
      \       tripRouteTypePeer               INTEGER\n    }\n    tripRouteTypeAddrInetType
      OBJECT-TYPE\n        SYNTAX      InetAddressType\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The type of
      Inet Address of the tripRouteTypeAddr.\"\n        REFERENCE\n            \"RFC
      3291, section 3.\"\n        ::= { tripRouteTypeEntry 1 }\n    tripRouteTypeAddr
      OBJECT-TYPE\n        SYNTAX      InetAddress\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The network
      address of this entry's TRIP peer LS. The\n            type of this address
      is determined by the value of the\n            tripRouteTypeAddrInetType object.\"\n
      \       REFERENCE\n            \"RFC 3291, section 3.\"\n        ::= { tripRouteTypeEntry
      2 }\n    tripRouteTypePort OBJECT-TYPE\n        SYNTAX      InetPortNumber\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"The port for the TCP connection between this and\n            an
      associated TRIP peer.\"\n        ::= { tripRouteTypeEntry 3 }\n    tripRouteTypeProtocolId
      OBJECT-TYPE\n        SYNTAX      TripAppProtocol\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The object identifier
      of a protocol that the associated\n            peer is using.\"\n        ::=
      { tripRouteTypeEntry 4 }\n    tripRouteTypeAddrFamilyId OBJECT-TYPE\n        SYNTAX
      \     TripAddressFamily\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"The object identifier of an
      address family that the\n            associated peer belongs to.\"\n        ::=
      { tripRouteTypeEntry 5 }\n    tripRouteTypePeer OBJECT-TYPE\n        SYNTAX
      \     INTEGER { local(1), remote(2) }\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"This object identifies whether
      this entry is\n            associated with a 'local' or 'remote' LS peer.\"\n
      \       ::= { tripRouteTypeEntry 6 }\n --\n -- tripSupportedCommunityTable\n
      --\n    tripSupportedCommunityTable   OBJECT-TYPE\n        SYNTAX      SEQUENCE
      OF TripSupportedCommunityEntry\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"The list of TRIP communities
      that this LS supports. A\n            TRIP community is a group of destinations
      that share\n            common properties.\n            The TRIP Supported Communities
      entry is used to group\n            destinations so that the routing decision
      can be based\n            on the identity of the group.\"\n        REFERENCE\n
      \           \"RFC 3219, section 5.9\"\n        ::= { tripMIBObjects 3 }\n    tripSupportedCommunityEntry
      OBJECT-TYPE\n        SYNTAX      TripSupportedCommunityEntry\n        MAX-ACCESS
      \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"Entry
      containing information about a community. A TRIP\n            community is a
      group of destinations that share some\n            common property. This attribute
      is used so that routing\n            decisions can be based on the identity
      of the group.\"\n        INDEX { applIndex, tripSupportedCommunityId }\n        ::=
      { tripSupportedCommunityTable 1 }\n    TripSupportedCommunityEntry ::= SEQUENCE
      {\n        tripSupportedCommunityId         TripCommunityId,\n        tripSupportedCommunityItad
      \      TripItad,\n        tripSupportedCommunityStorage    StorageType,\n        tripSupportedCommunityRowStatus
      \ RowStatus\n    }\n    tripSupportedCommunityId OBJECT-TYPE\n        SYNTAX
      \     TripCommunityId\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
      \       DESCRIPTION\n            \"The identifier of the supported Community.\"\n
      \       ::= { tripSupportedCommunityEntry 1 }\n    tripSupportedCommunityItad
      OBJECT-TYPE\n        SYNTAX      TripItad\n        MAX-ACCESS  read-create\n
      \       STATUS      current\n        DESCRIPTION\n            \"The ITAD of
      the community.\"\n        ::= { tripSupportedCommunityEntry 2 }\n   tripSupportedCommunityStorage
      OBJECT-TYPE\n       SYNTAX       StorageType\n       MAX-ACCESS   read-create\n
      \      STATUS       current\n       DESCRIPTION\n          \"The storage type
      for this conceptual row.  Conceptual\n          rows having the value 'permanent'
      need not allow write-\n          access to any columnar objects in the row.
      It is not a\n          requirement that this storage be non volatile.\"\n       DEFVAL
      { nonVolatile }\n       ::= { tripSupportedCommunityEntry 3 }\n    tripSupportedCommunityRowStatus
      OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS  read-create\n
      \       STATUS      current\n        DESCRIPTION\n            \"The row status
      of the entry. This object is REQUIRED\n            to create or delete rows
      by a manager. A value for\n            tripSupportedCommunityItad MUST be set
      for row creation\n            to be successful. If the instance already exists
      for a\n            particular applIndex, the row create operation will\n            fail.\n
      \           The value of this object has no effect on whether\n            other
      objects in this conceptual row can be modified.\"\n        ::= { tripSupportedCommunityEntry
      4 }\n --\n -- TripPeerTable\n --\n    tripPeerTable   OBJECT-TYPE\n        SYNTAX
      \     SEQUENCE OF TripPeerEntry\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"The TRIP peer table. This
      table contains one entry per\n            TRIP peer, and information about the
      connection with\n            the peer.\"\n        ::= { tripMIBObjects 4 }\n
      \   tripPeerEntry OBJECT-TYPE\n        SYNTAX      TripPeerEntry\n        MAX-ACCESS
      \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"Entry
      containing information about the connection with\n            a TRIP peer.\n
      \           Implementation need to be aware that if the size of\n            tripPeerRemoteAddr
      exceeds 113 sub-IDs, then OIDs of\n            column instances in this table
      will have more than 128\n            sub-IDs and cannot be accessed using SNMPv1,
      SNMPv2c, or\n            snmpv3.\"\n        INDEX { applIndex,\n                tripPeerRemoteAddrInetType,\n
      \               tripPeerRemoteAddr,\n                tripPeerRemotePort }\n
      \         ::= {tripPeerTable 1}\n    TripPeerEntry ::= SEQUENCE {\n        tripPeerRemoteAddrInetType
      \           InetAddressType,\n        tripPeerRemoteAddr                    InetAddress,\n
      \       tripPeerRemotePort                    InetPortNumber,\n        tripPeerIdentifier
      \                   TripId,\n        tripPeerState                         INTEGER,\n
      \       tripPeerAdminStatus                   INTEGER,\n        tripPeerNegotiatedVersion
      \            TripProtocolVersion,\n        tripPeerSendReceiveMode               TripSendReceiveMode,\n
      \       tripPeerRemoteItad                    TripItad,\n        tripPeerConnectRetryInterval
      \         Unsigned32,\n        tripPeerMaxRetryInterval              Unsigned32,\n
      \       tripPeerHoldTime                      Unsigned32,\n        tripPeerKeepAlive
      \                    Unsigned32,\n        tripPeerHoldTimeConfigured            Unsigned32,\n
      \       tripPeerKeepAliveConfigured           Unsigned32,\n        tripPeerMaxPurgeTime
      \                 Unsigned32,\n        tripPeerDisableTime                   Unsigned32,\n
      \       tripPeerLearned                       TruthValue,\n        tripPeerStorage
      \                      StorageType,\n        tripPeerRowStatus                     RowStatus\n
      \   }\n    tripPeerRemoteAddrInetType OBJECT-TYPE\n        SYNTAX      InetAddressType\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"The type of Inet Address of the tripPeerRemoteAddr.\"\n        REFERENCE\n
      \           \"RFC 3291, section 3.\"\n        ::= { tripPeerEntry 1 }\n    tripPeerRemoteAddr
      OBJECT-TYPE\n        SYNTAX      InetAddress\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The IP address
      of this entry's TRIP peer LS. The type of\n            this address is determined
      by the value of the\n            tripPeerRemoteAddrInetType object.\"\n        REFERENCE\n
      \           \"RFC 3291, section 3.\"\n        ::= { tripPeerEntry 2 }\n    tripPeerRemotePort
      OBJECT-TYPE\n        SYNTAX      InetPortNumber\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The remote port
      for the TCP connection between the\n            TRIP peers.\"\n        ::= {
      tripPeerEntry 3 }\n    tripPeerIdentifier OBJECT-TYPE\n        SYNTAX      TripId\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"TRIP identifier of the peer.\"\n        ::= { tripPeerEntry 4
      }\n    tripPeerState OBJECT-TYPE\n        SYNTAX      INTEGER {\n                        idle(1),\n
      \                       connect(2),\n                        active(3),\n                        openSent(4),\n
      \                       openConfirm(5),\n                        established(6)\n
      \                   }\n        MAX-ACCESS  read-only\n        STATUS      current\n
      \       DESCRIPTION\n            \"TRIP Peer Finite State Machine state.\n            idle(1)
      \      : The initial state. Local LS refuses all\n                            incoming
      connections. No application\n                            resources are allocated
      to processing\n                            information about the remote peer.\n
      \           connect(2)    : Local LS waiting for a transport\n                            protocol
      connection to be completed to\n                            the peer, and is
      listening for inbound\n                            transport connections from
      the peer.\n            active(3)     : Local LS is listening for an inbound\n
      \                           connection from the peer, but is not in\n                            the
      process of initiating a connection\n                            to the remote
      peer.\n            openSent(4)   : Local LS has sent an OPEN message to its\n
      \                           peer and is waiting for an OPEN message\n                            from
      the remote peer.\n            openConfirm(5): Local LS has sent an OPEN message
      to the\n                            remote peer, received an OPEN message from\n
      \                           the remote peer, and sent a KEEPALIVE\n                            message
      in response to the OPEN. The local\n                            LS is now waiting
      for a KEEPALIVE message\n                            or a NOTIFICATION message
      in response to\n                            its OPEN message.\n            established(6):
      LS can exchange UPDATE, NOTIFICATION, and\n                            KEEPALIVE
      messages with its peer.\"\n        ::= { tripPeerEntry 5 }\n    tripPeerAdminStatus
      OBJECT-TYPE\n        SYNTAX      INTEGER {\n                        up(1),\n
      \                       down(2)\n                    }\n        MAX-ACCESS  read-create\n
      \       STATUS      current\n        DESCRIPTION\n            \"This object
      is used to affect the TRIP connection\n            state.\n            up(1)
      \  : Allow a connection with the peer LS.\n            down(2) : disconnect
      the connection from the peer LS and\n                      do not allow any
      further connections to this\n                      peer.\n            If this
      value is set to down(2) then tripPeerState will\n            have the value
      of idle(1).\"\n        DEFVAL      { up }\n        ::= { tripPeerEntry 6 }\n
      \   tripPeerNegotiatedVersion OBJECT-TYPE\n        SYNTAX      TripProtocolVersion\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The negotiated version of TRIP running between this\n            local
      entity and this peer.\"\n        ::= { tripPeerEntry 7 }\n    tripPeerSendReceiveMode
      OBJECT-TYPE\n        SYNTAX      TripSendReceiveMode\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"The operational
      mode of this peer.\"\n        ::= { tripPeerEntry 8 }\n    tripPeerRemoteItad
      OBJECT-TYPE\n        SYNTAX      TripItad\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"The Internet Telephony Administrative
      domain of\n            this peer.\"\n        ::= { tripPeerEntry 9 }\n    tripPeerConnectRetryInterval
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (0..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies the initial amount of time that will elapse\n            between
      connection retry. This value SHOULD double\n            after each attempt up
      to the value of\n            tripPeerMaxRetryInterval. This value MUST always
      be less\n            than or equal to the value of tripPeerMaxRetryInterval.\n
      \           Attempts to set this value higher than the max retry\n            will
      not be allowed.\"\n        DEFVAL      { 120 }\n        ::= { tripPeerEntry
      10 }\n    tripPeerMaxRetryInterval OBJECT-TYPE\n        SYNTAX      Unsigned32
      (0..2147483647)\n        UNITS       \"Seconds\"\n        MAX-ACCESS  read-create\n
      \       STATUS      current\n        DESCRIPTION\n            \"Specifies the
      maximum amount of time that will elapse\n            between connection retries.
      Once the value of\n            tripPeerConnectRetryInterval has reached this
      value, no\n            more retries will be attempted. Attempts to set this\n
      \           value lower than the retry interval SHOULD not be\n            allowed.\"\n
      \       DEFVAL      { 360 }\n        ::= { tripPeerEntry 11 }\n    tripPeerHoldTime
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The time interval in seconds for the hold timer that\n            is
      established with the peer. The value of this object\n            is the smaller
      of the values in\n            tripPeerHoldTimeConfigured and the hold time received\n
      \           in the open message.\"\n        ::= { tripPeerEntry 12 }\n    tripPeerKeepAlive
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies the amount of time that MUST elapse between\n            keep
      alive messages. This value is negotiated with the\n            remote when a
      connection is established.\"\n        ::= { tripPeerEntry 13 }\n    tripPeerHoldTimeConfigured
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (0 | 3..65535)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies the maximum time that MAY elapse between the\n            receipt
      of successive keepalive or update message. A value\n            of 0 means that
      keepalive or update messages will not be\n            sent.\"\n        DEFVAL
      { 240 }\n        ::= { tripPeerEntry 14 }\n    tripPeerKeepAliveConfigured OBJECT-TYPE\n
      \       SYNTAX      Unsigned32 (1..2147483647)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies the amount of time that MUST elapse between\n            keep
      alive messages.\"\n        DEFVAL { 30 }\n        ::= { tripPeerEntry 15 }\n
      \   tripPeerMaxPurgeTime OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..65535)\n
      \       UNITS       \"Seconds\"\n        MAX-ACCESS  read-create\n        STATUS
      \     current\n        DESCRIPTION\n            \"Indicates the interval that
      the LS MUST maintain routes\n            marked as withdrawn in its database.\"\n
      \       DEFVAL { 10 }\n        ::= { tripPeerEntry 16 }\n    tripPeerDisableTime
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..65535)\n        UNITS       \"Seconds\"\n
      \       MAX-ACCESS  read-create\n        STATUS      current\n        DESCRIPTION\n
      \           \"Indicate the interval that the TRIP module of the remote\n            peer
      LS MUST be disabled while routes originated by the\n            local LS with
      high sequence numbers can be removed.\"\n        DEFVAL { 180 }\n        ::=
      { tripPeerEntry 17 }\n    tripPeerLearned OBJECT-TYPE\n        SYNTAX      TruthValue\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"Indicates whether this entry was learned or\n            configured.\"\n
      \       DEFVAL { false }\n        ::= { tripPeerEntry 18 }\n    tripPeerStorage
      OBJECT-TYPE\n        SYNTAX       StorageType\n        MAX-ACCESS   read-create\n
      \       STATUS       current\n        DESCRIPTION\n           \"The storage
      type for this conceptual row.  Conceptual\n           rows having the value
      'permanent' need not allow write-\n           access to any columnar objects
      in the row. It is not a\n           requirement that this storage be non volatile.\"\n
      \       DEFVAL { nonVolatile }\n        ::= { tripPeerEntry 19 }\n    tripPeerRowStatus
      OBJECT-TYPE\n        SYNTAX      RowStatus\n        MAX-ACCESS  read-create\n
      \       STATUS      current\n        DESCRIPTION\n            \"The row status
      of the entry. This object is REQUIRED to\n            create or delete rows
      remotely by a manager. If the\n            instance already exists for a particular
      applIndex, the\n            row create operation will fail.\n            The
      value of this object has no effect on whether\n            other objects in
      this conceptual row can be modified.\n            Entries in this table can
      be learned by the TRIP\n            application, or provisioned through this
      table.\"\n        ::= { tripPeerEntry 20 }\n --\n -- TripPeerStatisticsTable\n
      --\n    tripPeerStatisticsTable   OBJECT-TYPE\n        SYNTAX      SEQUENCE
      OF TripPeerStatisticsEntry\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"The TRIP peer stats table.
      This table contains one\n            entry per remote TRIP peer, and statistics
      related to the\n            connection with the remote peer. The objects in
      this\n            table are volatile.\"\n        ::= { tripMIBObjects 5 }\n
      \   tripPeerStatisticsEntry OBJECT-TYPE\n        SYNTAX      TripPeerStatisticsEntry\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"Entry containing information about the connection with\n            a
      TRIP peer.\"\n        AUGMENTS { tripPeerEntry }\n          ::= { tripPeerStatisticsTable
      1 }\n    TripPeerStatisticsEntry ::= SEQUENCE {\n        tripPeerInUpdates                   Counter32,\n
      \       tripPeerOutUpdates                  Counter32,\n        tripPeerInTotalMessages
      \            Counter32,\n        tripPeerOutTotalMessages            Counter32,\n
      \       tripPeerFsmEstablishedTransitions   Counter32,\n        tripPeerFsmEstablishedTime
      \         DateAndTime,\n        tripPeerInUpdateElapsedTime         TimeInterval,\n
      \       tripPeerStateChangeTime             TimeStamp\n    }\n     tripPeerInUpdates
      OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"The number of
      TRIP update messages received from this\n            remote peer since the last
      restart of this location\n            server.\"\n        ::= { tripPeerStatisticsEntry
      1 }\n    tripPeerOutUpdates OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
      number of TRIP update messages sent to this remote\n            peer since the
      last restart of this LS.\"\n        ::= { tripPeerStatisticsEntry 2 }\n    tripPeerInTotalMessages
      OBJECT-TYPE\n        SYNTAX      Counter32\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"The total number
      of TRIP messages received from the\n            remote peer on this connection
      since the last restart\n            of this LS.\"\n        ::= { tripPeerStatisticsEntry
      3 }\n    tripPeerOutTotalMessages OBJECT-TYPE\n        SYNTAX      Counter32\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The total number of outgoing TRIP messages sent to the\n            remote
      peer since the last restart of this LS.\"\n        ::= { tripPeerStatisticsEntry
      4 }\n    tripPeerFsmEstablishedTransitions OBJECT-TYPE\n        SYNTAX      Counter32\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"The number of times the remote peer has transitioned\n            into
      the established state since the last restart of this\n            LS.\"\n        ::=
      { tripPeerStatisticsEntry 5 }\n    tripPeerFsmEstablishedTime OBJECT-TYPE\n
      \       SYNTAX      DateAndTime\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"Indicates the time and date
      that this remote peer entered\n            the 'established' state.\"\n        ::=
      { tripPeerStatisticsEntry 6 }\n    tripPeerInUpdateElapsedTime OBJECT-TYPE\n
      \       SYNTAX      TimeInterval\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"Elapsed time in hundredths
      of seconds since the last\n            TRIP update message was received from
      this remote peer.\"\n        ::= { tripPeerStatisticsEntry 7 }\n    tripPeerStateChangeTime
      OBJECT-TYPE\n        SYNTAX       TimeStamp\n        MAX-ACCESS   read-only\n
      \       STATUS       current\n        DESCRIPTION\n            \"The value of
      sysUpTime when the last state change of\n            tripPeerState took place.\"\n
      \       ::= { tripPeerStatisticsEntry 8 }\n -- TRIP Received Route Table.  This
      table contains\n -- all routes from all sources. Each entry consists\n -- of
      a route and its associated path attributes.\n    tripRouteTable OBJECT-TYPE\n
      \       SYNTAX      SEQUENCE OF TripRouteEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The TRIP route
      table containing information about\n            reachable routes that are to
      be added to service by the\n            receiving LS. The objects in this table
      are volatile\n            and are refreshed when this LS rediscovers its route\n
      \           table.\"\n        ::= { tripMIBObjects 6 }\n    tripRouteEntry OBJECT-TYPE\n
      \       SYNTAX      TripRouteEntry\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"Information about a route
      to a called destination.\"\n        INDEX { applIndex,\n                tripRouteAppProtocol,\n
      \               tripRouteAddressFamily,\n                tripRouteAddress,\n
      \               tripRoutePeer\n                }\n        ::= { tripRouteTable
      1 }\n    TripRouteEntry ::= SEQUENCE {\n        tripRouteAppProtocol                 TripAppProtocol,\n
      \       tripRouteAddressFamily               TripAddressFamily,\n        tripRouteAddress
      \                    OCTET STRING,\n        tripRoutePeer                        TripId,\n
      \       tripRouteTRIBMask                    BITS,\n        tripRouteAddressSequenceNumber
      \      Unsigned32,\n        tripRouteAddressOriginatorId         TripId,\n        tripRouteNextHopServerIAddrType
      \     InetAddressType,\n        tripRouteNextHopServer               InetAddress,\n
      \       tripRouteNextHopServerPort           InetPortNumber,\n        tripRouteNextHopServerItad
      \          TripItad,\n        tripRouteMultiExitDisc               Unsigned32,\n
      \       tripRouteLocalPref                   Unsigned32,\n        tripRouteAdvertisementPath
      \          OCTET STRING,\n        tripRouteRoutedPath                  OCTET
      STRING,\n        tripRouteAtomicAggregate             TruthValue,\n        tripRouteUnknown
      \                    OCTET STRING,\n        tripRouteWithdrawn                   TruthValue,\n
      \       tripRouteConverted                   TruthValue,\n        tripRouteReceivedTime
      \               TimeStamp\n        }\n    tripRouteAppProtocol OBJECT-TYPE\n
      \       SYNTAX      TripAppProtocol\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"The protocol for which this
      entry of the routing table\n            is maintained.\"\n        ::= { tripRouteEntry
      1 }\n    tripRouteAddressFamily OBJECT-TYPE\n        SYNTAX      TripAddressFamily\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"Specifies the type of address for the destination\n            route.\"\n
      \       ::= { tripRouteEntry 2 }\n    tripRouteAddress OBJECT-TYPE\n        SYNTAX
      \     OCTET STRING (SIZE(1..105))\n        MAX-ACCESS  not-accessible\n        STATUS
      \     current\n        DESCRIPTION\n            \"This is the address (prefix)
      of the family type given\n            by Address Family of the destination.
      It is the prefix\n            of addresses reachable from this gateway via the
      next\n            hop server. The SIZE value of 105 has been assigned due\n
      \           to the sub identifier of object types length limitation\n            as
      defined in SMIv2.\"\n        REFERENCE\n            \"RFC 3219, section 5.1.1.1.\"\n
      \       ::= { tripRouteEntry 3 }\n    tripRoutePeer OBJECT-TYPE\n        SYNTAX
      \     TripId\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
      \       DESCRIPTION\n            \"The identifier of the peer where the route
      information\n            was learned.\"\n        ::= { tripRouteEntry 4 }\n
      \    tripRouteTRIBMask OBJECT-TYPE\n        SYNTAX      BITS {\n                     adjTribIns(0),\n
      \                    extTrib(1),\n                     locTrib(2),\n                     adjTribOut(3)\n
      \                    }\n        MAX-ACCESS  read-only\n        STATUS      current\n
      \       DESCRIPTION\n            \"Indicates which Telephony Routing Information
      Base (TRIB)\n            this entry belongs to. This is\n            a bit-map
      of possible types. If the bit has a value of\n            1, then the entry
      is a member of the corresponding TRIB\n            type. If the bit has a value
      of 0 then the entry is not\n            a member of the TRIP type. The various
      bit positions\n            are:\n            0    adjTribIns     The entry is
      of type adj-TRIBs-ins,\n                                stores routing information
      that has\n                                been learned from inbound UPDATE\n
      \                               messages.\n            1    extTrib        The
      entry is of type ext-TRIB, the\n                                best route for
      a given destination.\n            2    locTrib        The entry is of type loc-TRIB
      contains\n                                the local TRIP routing information\n
      \                               that the LS has selected.\n            3    adjTribOut
      \    The entry is of type adj-TRIBs-out,\n                                stores
      the information that the local\n                                LS has selected
      for advertisement to\n                                its external peers.\"\n
      \       REFERENCE\n            \"RFC 3291, section 3.5.\"\n        ::= { tripRouteEntry
      5 }\n    tripRouteAddressSequenceNumber OBJECT-TYPE\n        SYNTAX      Unsigned32
      (1..2147483647)\n        MAX-ACCESS  read-only\n        STATUS      current\n
      \       DESCRIPTION\n            \"Indicates the version of the destination
      route\n            originated by the LS identified by\n            tripRouteAddressOriginatorId
      intra-domain attribute.\"\n        ::= { tripRouteEntry 6 }\n    tripRouteAddressOriginatorId
      OBJECT-TYPE\n        SYNTAX      TripId\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"This is an intra-domain attribute
      indicating the\n            internal LS that originated the route into the ITAD.\"\n
      \       ::= { tripRouteEntry 7 }\n    tripRouteNextHopServerIAddrType OBJECT-TYPE\n
      \       SYNTAX      InetAddressType\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"The type of Inet Address of
      the tripRouteNextHopServer.\"\n        REFERENCE\n            \"RFC 3291, section
      3.\"\n        ::= { tripRouteEntry 8 }\n    tripRouteNextHopServer OBJECT-TYPE\n
      \       SYNTAX      InetAddress\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"Indicates the next hop that
      messages of a given protocol\n            destined for tripRouteAddress SHOULD
      be sent to. The type\n            of this address is determined by the value
      of the\n            tripRouteNextHopServerIAddrType object.\"\n        ::= {
      tripRouteEntry 9 }\n    tripRouteNextHopServerPort OBJECT-TYPE\n        SYNTAX
      \     InetPortNumber\n        MAX-ACCESS  read-only\n        STATUS      current\n
      \       DESCRIPTION\n            \"The port of the next hop server that this
      route\n            will use.\"\n        ::= { tripRouteEntry 10 }\n    tripRouteNextHopServerItad
      OBJECT-TYPE\n        SYNTAX      TripItad\n        MAX-ACCESS  read-only\n        STATUS
      \     current\n        DESCRIPTION\n            \"Indicates the domain of the
      next hop.\"\n        ::= { tripRouteEntry 11 }\n    tripRouteMultiExitDisc OBJECT-TYPE\n
      \       SYNTAX      Unsigned32 (0..4294967295)\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"The Multiple
      Exit Discriminator allows an LS to\n            discriminate between, and indicate
      preference for,\n            otherwise similar routes to a neighbouring domain.\n
      \           A higher value represents a more preferred routing\n            object.\"\n
      \       REFERENCE\n            \"RFC 3219, section 5.8\"\n        ::= { tripRouteEntry
      12 }\n    tripRouteLocalPref OBJECT-TYPE\n        SYNTAX      Unsigned32 (0..4294967295)\n
      \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"Indicated the local LS's degree of preference for an\n            advertised
      route destination.\"\n        REFERENCE\n            \"RFC 3219, section 4.3.4.7\"\n
      \       ::= { tripRouteEntry 13 }\n    tripRouteAdvertisementPath OBJECT-TYPE\n
      \       SYNTAX      OCTET STRING (SIZE(4..252))\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"Identifies the
      sequence of domains through which this\n            advertisement has passed.\n
      \           This object is probably best represented as sequence of\n            TripItads.
      For SMI compatibility, though, it is\n            represented as an OCTET STRING.
      This object is a sequence\n            of ITADs where each set of 4 octets corresponds
      to a TRIP\n            ITAD in network byte order.\"\n        REFERENCE\n            \"RFC
      3219, section 4.3.4.4\"\n        ::= { tripRouteEntry 14 }\n    tripRouteRoutedPath
      OBJECT-TYPE\n        SYNTAX      OCTET STRING (SIZE(4..252))\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"Identifies
      the ITADs through which messages sent using\n            this route would pass.
      These are a subset of\n            tripRouteAdvertisementPath.\n            This
      object is probably best represented as sequence of\n            TripItads. For
      SMI compatibility, though, it is\n            represented as OCTET STRING.  This
      object is a sequence\n            of ITADs where each set of 4 octets corresponds
      to a TRIP\n            ITAD in network byte order.\"\n        REFERENCE\n            \"RFC
      3219, section 4.3.4.5\"\n        ::= { tripRouteEntry 15 }\n    tripRouteAtomicAggregate
      OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-only\n
      \       STATUS      current\n        DESCRIPTION\n            \"Indicates that
      a route MAY traverse domains not listed\n            in tripRouteRoutedPath.
      If an LS selects the less\n            specific route from a set of overlapping
      routes, then\n            this value returns TRUE.\"\n        REFERENCE\n            \"RFC
      3219, section 4.3.4.6\"\n        ::= { tripRouteEntry 16 }\n    tripRouteUnknown
      OBJECT-TYPE\n        SYNTAX      OCTET STRING (SIZE(0..255))\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"This
      object contains one or more attributes that were not\n            understood,
      and because they were transitive, were dropped\n            during aggregation.
      They take the format of a triple\n            <attribute type, attribute length,
      attribute value>, of\n            variable length. If no attributes were dropped,
      this\n            returns an OCTET STRING of size 0.\"\n        REFERENCE\n
      \           \"RFC 3219, sections 4.3.1, 4.3.2.3\"\n        ::= { tripRouteEntry
      17 }\n    tripRouteWithdrawn OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"Indicates
      if this route is to be removed from service\n            by the receiving LS.\"\n
      \       ::= { tripRouteEntry 18 }\n    tripRouteConverted OBJECT-TYPE\n        SYNTAX
      TruthValue\n        MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
      \           \"Indicates if this route has been converted to a\n            different
      application protocol than it had originally.\"\n        ::= { tripRouteEntry
      19 }\n    tripRouteReceivedTime OBJECT-TYPE\n        SYNTAX       TimeStamp\n
      \       MAX-ACCESS   read-only\n        STATUS       current\n        DESCRIPTION\n
      \         \"The value of sysUpTime when this route was received.\"\n        ::=
      { tripRouteEntry 20 }\n --\n -- TRIP Received Route Community Table.\n --\n
      \   tripRouteCommunityTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF TripRouteCommunityEntry\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"A table containing a list of TRIP communities associated\n            with
      a route. Each instance of tripRouteTypeEntry that has\n            the tripRouteTypePeer
      object set to remote(2) has an\n            instance in the tripRouteTable as
      a parent. The objects\n            in this table are volatile and are refreshed
      after a\n            reboot.\"\n        REFERENCE\n            \"RFC 3219, section
      5.9.\"\n        ::= { tripMIBObjects 7 }\n    tripRouteCommunityEntry OBJECT-TYPE\n
      \       SYNTAX      TripRouteCommunityEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"Information
      about communities associated with a route.\n            An entry with a tripRouteAddress
      of 00 and a\n            tripRoutePeer of 0 refers to the local LS.\"\n        INDEX
      { applIndex,\n                tripRouteAppProtocol,\n                tripRouteAddressFamily,\n
      \               tripRouteAddress,\n                tripRoutePeer,\n                tripRouteCommunityId\n
      \             }\n        ::= { tripRouteCommunityTable 1 }\n    TripRouteCommunityEntry
      ::= SEQUENCE {\n         tripRouteCommunityId    TripCommunityId,\n         tripRouteCommunityItad
      \ TripItad\n         }\n    tripRouteCommunityId OBJECT-TYPE\n        SYNTAX
      \     TripCommunityId\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
      \       DESCRIPTION\n            \"The community identifier.\"\n        ::=
      { tripRouteCommunityEntry 1 }\n    tripRouteCommunityItad OBJECT-TYPE\n        SYNTAX
      \     TripItad\n        MAX-ACCESS  read-only\n        STATUS      current\n
      \       DESCRIPTION\n            \"The ITAD associated with this community.\"\n
      \       ::= { tripRouteCommunityEntry 2 }\n --\n -- tripItadTopologyTable\n
      --\n    tripItadTopologyTable OBJECT-TYPE\n        SYNTAX      SEQUENCE OF TripItadTopologyEntry\n
      \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
      \           \"The sequence of link connections between peers within an\n            ITAD.
      The objects in this table are volatile and are\n            refreshed after
      a reboot.\"\n        ::= { tripMIBObjects 8 }\n    tripItadTopologyEntry OBJECT-TYPE\n
      \       SYNTAX      TripItadTopologyEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"Information
      about a peer of the LS identified by\n            tripItadTopologyOrigId.\"\n
      \       INDEX { applIndex, tripItadTopologyOrigId }\n        ::= { tripItadTopologyTable
      1 }\n    TripItadTopologyEntry ::= SEQUENCE {\n                tripItadTopologyOrigId
      \   TripId,\n                tripItadTopologySeqNum    Unsigned32\n            }\n
      \   tripItadTopologyOrigId OBJECT-TYPE\n        SYNTAX      TripId\n        MAX-ACCESS
      \ not-accessible\n        STATUS      current\n        DESCRIPTION\n            \"Indicates
      the internal LS that originated the ITAD\n            topology information into
      the ITAD.\"\n        ::= { tripItadTopologyEntry 1 }\n    tripItadTopologySeqNum
      OBJECT-TYPE\n        SYNTAX      Unsigned32 (1..2147483647)\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"Indicates
      the version of the ITAD topology originated\n            by the LS identified
      by tripItadTopologyOrigId.\"\n        ::= { tripItadTopologyEntry 2 }\n --\n
      -- tripItadTopologyIdTable\n --\n    tripItadTopologyIdTable OBJECT-TYPE\n        SYNTAX
      \     SEQUENCE OF TripItadTopologyIdEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"The list of
      other LS's within the ITAD domain that the\n            LS identified by tripItadTopologyOrigId
      is currently\n            peering. Each instance of tripItadTopologyIdEntry
      has an\n            instance in the tripItadTopologyTable as a parent. The\n
      \           objects in this table are volatile and are refreshed\n            after
      a reboot.\"\n        ::= { tripMIBObjects 9 }\n    tripItadTopologyIdEntry OBJECT-TYPE\n
      \       SYNTAX      TripItadTopologyIdEntry\n        MAX-ACCESS  not-accessible\n
      \       STATUS      current\n        DESCRIPTION\n            \"Information
      about a peer to the LS identified by\n            tripItadTopologyOrigId.\"\n
      \       INDEX { applIndex,\n                tripItadTopologyOrigId,\n                tripItadTopologyId
      }\n        ::= { tripItadTopologyIdTable 1 }\n    TripItadTopologyIdEntry ::=
      SEQUENCE {\n                tripItadTopologyId            TripId\n            }\n
      \   tripItadTopologyId OBJECT-TYPE\n        SYNTAX      TripId\n        MAX-ACCESS
      \ read-only\n        STATUS      current\n        DESCRIPTION\n            \"The
      index into this entry. Indicates the other location\n            servers within
      the ITAD domain that this LS identified\n            by tripItadTopologyOrigId
      is currently peering.\"\n        ::= { tripItadTopologyIdEntry 1 }\n --\n --
      Notification objects\n --\n    tripNotifApplIndex    OBJECT-TYPE\n        SYNTAX
      \    Integer32 (1..2147483647)\n        MAX-ACCESS accessible-for-notify\n        STATUS
      \    current\n        DESCRIPTION\n             \"This object contains the application
      Index. It is used\n             to bind this notification with a specific instance
      of\n             TRIP entity.\"\n        REFERENCE\n            \"RFC 2788,
      section 3.\"\n        ::= { tripMIBNotifObjects 1 }\n    tripNotifPeerAddrInetType
      OBJECT-TYPE\n        SYNTAX      InetAddressType\n        MAX-ACCESS  accessible-for-notify\n
      \       STATUS      current\n        DESCRIPTION\n            \"The type of
      Inet Address of the tripNotifPeerAddr.\"\n        REFERENCE\n            \"RFC
      3291, section 3.\"\n        ::= { tripMIBNotifObjects 2 }\n    tripNotifPeerAddr
      OBJECT-TYPE\n        SYNTAX      InetAddress\n        MAX-ACCESS  accessible-for-notify\n
      \       STATUS      current\n        DESCRIPTION\n            \"The IP address
      of this entry's TRIP peer LS. This object\n            contains the value of
      tripPeerRemoteAddr. The type of this\n            address is determined by the
      value of the\n            tripNotifPeerAddrInetType object.\"\n        REFERENCE\n
      \           \"RFC 3291, section 3.\"\n        ::= { tripMIBNotifObjects 3 }\n
      \   tripNotifPeerErrCode OBJECT-TYPE\n        SYNTAX      INTEGER {\n                        messageHeader(1),\n
      \                       openMessage(2),\n                        updateMessage(3),\n
      \                       holdTimerExpired(4),\n                        finiteStateMachine(5),\n
      \                       cease(6),\n                        tripNotification(7)\n
      \                   }\n        MAX-ACCESS  accessible-for-notify\n        STATUS
      \     current\n        DESCRIPTION\n            \"Notification message of TRIP
      error. The meaning of this\n            value is applicable to the following
      functions:\n            messageHeader(1)\n             - All errors detected
      while processing the TRIP message\n               header.\n            openMessage(2)\n
      \            - All errors detected while processing the OPEN message.\n            updateMessage(3)\n
      \            - All errors detected while processing the UPDATE\n               message.\n
      \           holdTimerExpired(4)\n             - A notification generated when
      the hold timer expires.\n            finiteStateMachine(5)\n             - All
      errors detected by the TRIP Finite State Machine.\n            cease(6)\n             -
      Any fatal error condition that the rest of the values\n               do not
      cover.\n            tripNotification(7)\n             - Any error encountered
      while sending a notification\n               message.\"\n       ::= { tripMIBNotifObjects
      4 }\n    tripNotifPeerErrSubcode OBJECT-TYPE\n        SYNTAX      Unsigned32
      (1..2147483647)\n        MAX-ACCESS  accessible-for-notify\n        STATUS      current\n
      \       DESCRIPTION\n            \"The sub error code associated with error
      code. The\n            meaning of this value is dependent on the value of\n
      \           tripNotifPeerErrCode.\n            Message Header (1) Error Subcodes:\n
      \           1 - Bad Message Length.\n            2 - Bad Message Type.\n            OPEN
      Message (2) Error Subcodes:\n            1 - Unsupported Version Number.\n            2
      - Bad Peer ITAD.\n            3 - Bad TRIP Identifier.\n            4 - Unsupported
      Optional Parameter.\n            5 - Unacceptable Hold Time.\n            6
      - Unsupported Capability.\n            7 - Capability Mismatch.\n            UPDATE
      Message (3) Error Subcodes:\n            1 - Malformed Attribute List.\n            2
      - Unrecognized Well-known Attribute.\n            3 - Missing Well-known Mandatory
      Attribute.\n            4 - Attribute Flags Error.\n            5 - Attribute
      Length Error.\n            6 - Invalid Attribute.\"\n       ::= { tripMIBNotifObjects
      5 }\n --\n -- Notifications\n --\n    tripConnectionEstablished NOTIFICATION-TYPE\n
      \       OBJECTS { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n
      \                 tripNotifPeerAddr\n                }\n        STATUS  current\n
      \       DESCRIPTION\n            \"The TRIP Connection Established event is
      generated when\n            the TRIP finite state machine enters the ESTABLISHED\n
      \           state.\"\n        ::= { tripMIBNotifications 1 }\n    tripConnectionDropped
      NOTIFICATION-TYPE\n        OBJECTS { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n
      \                 tripNotifPeerAddr\n                }\n        STATUS  current\n
      \       DESCRIPTION\n            \"The TRIP Connection Dropped event is generated
      when the\n            TRIP finite state machine leaves the ESTABLISHED state.\"\n
      \       ::= { tripMIBNotifications 2 }\n    tripFSM NOTIFICATION-TYPE\n        OBJECTS
      { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n                  tripNotifPeerAddr,\n
      \                 tripNotifPeerErrCode,\n                  tripNotifPeerErrSubcode,\n
      \                 tripPeerState\n                }\n        STATUS  current\n
      \       DESCRIPTION\n            \"The trip FSM Event is generated when any
      error is\n            detected by the TRIP Finite State Machine.\"\n        ::=
      { tripMIBNotifications 3 }\n    tripOpenMessageError NOTIFICATION-TYPE\n        OBJECTS
      { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n                  tripNotifPeerAddr,\n
      \                 tripNotifPeerErrCode,\n                  tripNotifPeerErrSubcode,\n
      \                 tripPeerState\n                }\n        STATUS  current\n
      \       DESCRIPTION\n            \"Errors detected while processing the OPEN
      message.\"\n        ::= { tripMIBNotifications 4 }\n    tripUpdateMessageError
      NOTIFICATION-TYPE\n        OBJECTS { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n
      \                 tripNotifPeerAddr,\n                  tripNotifPeerErrCode,\n
      \                 tripNotifPeerErrSubcode,\n                  tripPeerState\n
      \               }\n        STATUS  current\n        DESCRIPTION\n            \"Errors
      detected while processing the UPDATE message.\"\n        ::= { tripMIBNotifications
      5 }\n    tripHoldTimerExpired NOTIFICATION-TYPE\n        OBJECTS { tripNotifApplIndex,\n
      \                 tripNotifPeerAddrInetType,\n                  tripNotifPeerAddr,\n
      \                 tripNotifPeerErrCode,\n                  tripNotifPeerErrSubcode,\n
      \                 tripPeerState\n                }\n        STATUS  current\n
      \       DESCRIPTION\n            \"The system does not receive successive messages
      within\n            the period specified by the negotiated Hold Time.\"\n        ::=
      { tripMIBNotifications 6 }\n    tripConnectionCollision NOTIFICATION-TYPE\n
      \       OBJECTS { tripNotifApplIndex }\n        STATUS  current\n        DESCRIPTION\n
      \           \"A pair of LSs tried to simultaneously to establish a\n            transport
      connection to each other.\"\n        ::= { tripMIBNotifications 7 }\n    tripCease
      NOTIFICATION-TYPE\n        OBJECTS { tripNotifApplIndex,\n                  tripNotifPeerAddrInetType,\n
      \                 tripNotifPeerAddr,\n                  tripNotifPeerErrCode,\n
      \                 tripNotifPeerErrSubcode,\n                  tripPeerState\n
      \               }\n        STATUS  current\n        DESCRIPTION\n            \"A
      TRIP peer MAY choose at any given time to close its TRIP\n            connection
      by sending this notification message. However,\n            the Cease notification
      message MUST NOT be used when a\n            fatal error occurs.\"\n        ::=
      { tripMIBNotifications 8 }\n    tripNotificationErr NOTIFICATION-TYPE\n        OBJECTS
      { tripNotifApplIndex }\n        STATUS  current\n        DESCRIPTION\n            \"Generated
      if there is an error detected in a TRIP\n            notification message sent
      with another cause. Note that\n            the TRIP notification referred to
      in this object is not\n            an SNMP notification, it is a specific message
      described\n            in the TRIP specification.\"\n        REFERENCE\n            \"RFC
      3219, section  6.4.\"\n        ::= { tripMIBNotifications 9 }\n    --\n    --
      Compliance Statements\n    --\n    tripMIBFullCompliance MODULE-COMPLIANCE\n
      \       STATUS     current\n        DESCRIPTION\n             \"The compliance
      statement for TRIP entities that\n             implement this MIB module in
      read-write mode, such\n             that it can be used for both monitoring
      and configuring\n             the TRIP entity.\n             There is one INDEX
      object that cannot be represented in\n             the form of OBJECT clauses
      in SMIv2, but for which there\n             is a compliance requirement, expressed
      in OBJECT clause\n             form in this description:\n             -- OBJECT
      \     tripRouteTypeAddrInetType\n             -- SYNTAX      InetAddressType
      (ipv4(1), ipv6(2),\n             --                              ipv4z(3), ipv6z(4))\n
      \            -- DESCRIPTION\n             --     This MIB requires support for
      global and\n             --     non-global ipv4 and ipv6 addresses.\n             --\n
      \            -- OBJECT      tripRouteTypeAddr\n             -- SYNTAX      InetAddress
      (SIZE (4 | 8 | 16 | 20))\n             -- DESCRIPTION\n             --     This
      MIB requires support for global and\n             --     non-global IPv4 and
      IPv6 addresses.\n             --\n             \"\n        MODULE -- this module\n
      \            MANDATORY-GROUPS { tripConfigGroup,\n                                tripPeerTableConfigGroup,\n
      \                               tripRouteGroup,\n                                tripItadTopologyGroup,\n
      \                               tripPeerTableStatsGroup }\n        GROUP tripNotificationGroup\n
      \       DESCRIPTION\n            \"This group is OPTIONAL. A TRIP entity can
      choose not to\n            send any notifications. If this group is implemented,\n
      \           the tripNotifObjectGroup MUST also be implemented.\"\n        GROUP
      tripNotifObjectGroup\n        DESCRIPTION\n            \"This group is OPTIONAL.
      A TRIP entity can choose not to\n            send any notifications. If this
      group is implemented,\n            the tripNotificationGroup MUST also be implemented.\"\n
      \       OBJECT       tripSupportedCommunityRowStatus\n        SYNTAX       RowStatus
      { active(1) }\n        WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }\n
      \       DESCRIPTION\n           \"Support for createAndWait and notInService
      is not\n           required.\"\n        OBJECT       tripPeerRowStatus\n        SYNTAX
      \      RowStatus { active(1) }\n        WRITE-SYNTAX RowStatus { createAndGo(4),
      destroy(6) }\n        DESCRIPTION\n           \"Support for createAndWait and
      notInService is not\n           required.\"\n        MODULE NETWORK-SERVICES-MIB\n
      \            MANDATORY-GROUPS { applRFC2788Group }\n        ::= { tripMIBCompliances
      1 }\n    tripMIBReadOnlyCompliance MODULE-COMPLIANCE\n        STATUS     current\n
      \       DESCRIPTION\n             \"The compliance statement for TRIP entities
      that\n             implement this MIB module in read only mode. Such TRIP\n
      \            entities can then only be monitored, but not be\n             configured
      via this MIB module.\n             In read-only mode, the manager will not be
      able to add,\n             remove or modify rows to any table, however the TRIP\n
      \            application may modify, remove or add rows to a table.\n             There
      is one INDEX object that cannot be represented in\n             the form of
      OBJECT clauses in SMIv2, but for which there\n             is a compliance requirement,
      expressed in OBJECT clause\n             form in this description:\n             --
      OBJECT      tripRouteTypeAddrInetType\n             -- SYNTAX      InetAddressType
      (ipv4(1), ipv6(2),\n             --                              ipv4z(3), ipv6z(4))\n
      \            -- DESCRIPTION\n             --     This MIB requires support for
      global and\n             --     non-global ipv4 and ipv6 addresses.\n             --\n
      \            -- OBJECT      tripRouteTypeAddr\n             -- SYNTAX      InetAddress
      (SIZE (4 | 8 | 16 | 20))\n             -- DESCRIPTION\n             --     This
      MIB requires support for global and\n             --     non-global IPv4 and
      IPv6 addresses.\n             --\n             \"\n        MODULE -- this module\n
      \            MANDATORY-GROUPS { tripConfigGroup,\n                                tripPeerTableConfigGroup,\n
      \                               tripRouteGroup,\n                                tripItadTopologyGroup,\n
      \                               tripPeerTableStatsGroup }\n        GROUP tripNotificationGroup\n
      \       DESCRIPTION\n            \"This group is OPTIONAL. A TRIP entity can
      choose not to\n            send any notifications. If this group is implemented,\n
      \           the tripNotifObjectGroup MUST also be implemented.\"\n        GROUP
      tripNotifObjectGroup\n        DESCRIPTION\n            \"This group is OPTIONAL.
      A TRIP entity can choose not to\n            send any notifications. If this
      group is implemented,\n            the tripNotificationGroup MUST also be implemented.\"\n
      \       OBJECT       tripCfgItad\n        MIN-ACCESS   read-only\n        DESCRIPTION\n
      \          \"Write access is not required.\"\n        OBJECT       tripCfgAdminStatus\n
      \       MIN-ACCESS   not-accessible\n        DESCRIPTION\n           \"Object
      is not needed when implemented in read-only mode.\"\n        OBJECT       tripCfgPort\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT       tripCfgMinItadOriginationInterval\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT       tripCfgMinRouteAdvertisementInterval\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT       tripCfgMaxPurgeTime\n        MIN-ACCESS
      \  read-only\n        DESCRIPTION\n           \"Write access is not required.\"\n
      \       OBJECT       tripCfgDisableTime\n        MIN-ACCESS   read-only\n        DESCRIPTION\n
      \          \"Write access is not required.\"\n        OBJECT       tripCfgStorage\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT       tripSupportedCommunityItad\n        MIN-ACCESS
      \  read-only\n        DESCRIPTION\n           \"Write access is not required.\"\n
      \       OBJECT       tripSupportedCommunityStorage\n        MIN-ACCESS   read-only\n
      \       DESCRIPTION\n           \"Write access is not required.\"\n        OBJECT
      \     tripSupportedCommunityRowStatus\n        SYNTAX      RowStatus { active(1)
      }\n        MIN-ACCESS  read-only\n        DESCRIPTION\n           \"Write access
      is not required, and active is the only\n           status that needs to be
      supported.\"\n        OBJECT       tripPeerAdminStatus\n        MIN-ACCESS   not-accessible\n
      \       DESCRIPTION\n           \"Object is not needed when implemented in read-only
      mode.\"\n        OBJECT       tripPeerConnectRetryInterval\n        MIN-ACCESS
      \  read-only\n        DESCRIPTION\n           \"Write access is not required.\"\n
      \       OBJECT       tripPeerMaxRetryInterval\n        MIN-ACCESS   read-only\n
      \       DESCRIPTION\n           \"Write access is not required.\"\n        OBJECT
      \      tripPeerHoldTimeConfigured\n        MIN-ACCESS   read-only\n        DESCRIPTION\n
      \          \"Write access is not required.\"\n        OBJECT       tripPeerKeepAliveConfigured\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT       tripPeerMaxPurgeTime\n        MIN-ACCESS
      \  read-only\n        DESCRIPTION\n           \"Write access is not required.\"\n
      \       OBJECT       tripPeerDisableTime\n        MIN-ACCESS   read-only\n        DESCRIPTION\n
      \          \"Write access is not required.\"\n        OBJECT       tripPeerStorage\n
      \       MIN-ACCESS   read-only\n        DESCRIPTION\n           \"Write access
      is not required.\"\n        OBJECT      tripPeerRowStatus\n        SYNTAX      RowStatus
      { active(1) }\n        MIN-ACCESS  read-only\n        DESCRIPTION\n           \"Write
      access is not required, and active is the only\n           status that needs
      to be supported.\"\n        MODULE NETWORK-SERVICES-MIB\n             MANDATORY-GROUPS
      { applRFC2788Group }\n        ::= { tripMIBCompliances 2 }\n --\n -- Object
      and event conformance groups\n --\n    tripConfigGroup OBJECT-GROUP\n        OBJECTS
      {\n            tripCfgProtocolVersion,\n            tripCfgItad,\n            tripCfgIdentifier,\n
      \           tripCfgOperStatus,\n            tripCfgAdminStatus,\n            tripCfgAddrIAddrType,\n
      \           tripCfgAddr,\n            tripCfgPort,\n            tripCfgMinItadOriginationInterval,\n
      \           tripCfgMinRouteAdvertisementInterval,\n            tripCfgMaxPurgeTime,\n
      \           tripCfgDisableTime,\n            tripCfgSendReceiveMode,\n            tripCfgStorage,\n
      \           tripSupportedCommunityItad,\n            tripSupportedCommunityStorage,\n
      \           tripRouteTypePeer,\n            tripSupportedCommunityRowStatus\n
      \       }\n        STATUS current\n        DESCRIPTION\n            \"The global
      objects for configuring trip.\"\n        ::= { tripMIBGroups 1 }\n    tripPeerTableConfigGroup
      OBJECT-GROUP\n        OBJECTS {\n            tripPeerIdentifier,\n            tripPeerState,\n
      \           tripPeerAdminStatus,\n            tripPeerNegotiatedVersion,\n            tripPeerSendReceiveMode,\n
      \           tripPeerRemoteItad,\n            tripPeerConnectRetryInterval,\n
      \           tripPeerMaxRetryInterval,\n            tripPeerHoldTime,\n            tripPeerKeepAlive,\n
      \           tripPeerHoldTimeConfigured,\n            tripPeerKeepAliveConfigured,\n
      \           tripPeerMaxPurgeTime,\n            tripPeerDisableTime,\n            tripPeerLearned,\n
      \           tripPeerStorage,\n            tripPeerRowStatus\n            }\n
      \       STATUS current\n        DESCRIPTION\n            \"The global objects
      for configuring the TRIP peer\n            table.\"\n        ::= { tripMIBGroups
      2 }\n    tripPeerTableStatsGroup OBJECT-GROUP\n        OBJECTS {\n            tripPeerInUpdates,\n
      \           tripPeerOutUpdates,\n            tripPeerInTotalMessages,\n            tripPeerOutTotalMessages,\n
      \           tripPeerFsmEstablishedTransitions,\n            tripPeerFsmEstablishedTime,\n
      \           tripPeerInUpdateElapsedTime,\n            tripPeerStateChangeTime\n
      \           }\n        STATUS current\n        DESCRIPTION\n            \"The
      global statistics the TRIP peer table.\"\n        ::= { tripMIBGroups 3 }\n
      \   tripRouteGroup OBJECT-GROUP\n        OBJECTS {\n            tripRouteTRIBMask,\n
      \           tripRouteAddressSequenceNumber,\n            tripRouteAddressOriginatorId,\n
      \           tripRouteNextHopServerIAddrType,\n            tripRouteNextHopServer,\n
      \           tripRouteNextHopServerPort,\n            tripRouteNextHopServerItad,\n
      \           tripRouteMultiExitDisc,\n            tripRouteLocalPref,\n            tripRouteAdvertisementPath,\n
      \           tripRouteRoutedPath,\n            tripRouteAtomicAggregate,\n            tripRouteUnknown,\n
      \           tripRouteWithdrawn,\n            tripRouteConverted,\n            tripRouteReceivedTime,\n
      \           tripRouteCommunityItad\n            }\n        STATUS current\n
      \       DESCRIPTION\n            \"The global objects for configuring route
      attribute.\"\n        ::= { tripMIBGroups 4 }\n    tripItadTopologyGroup OBJECT-GROUP\n
      \       OBJECTS {\n            tripItadTopologySeqNum,\n            tripItadTopologyId\n
      \           }\n        STATUS current\n        DESCRIPTION\n            \"The
      objects that define the TRIP ITAD topology.\"\n        ::= { tripMIBGroups 5
      }\n    tripNotificationGroup NOTIFICATION-GROUP\n        NOTIFICATIONS {\n            tripConnectionEstablished,\n
      \           tripConnectionDropped,\n            tripFSM,\n            tripOpenMessageError,\n
      \           tripUpdateMessageError,\n            tripHoldTimerExpired,\n            tripConnectionCollision,\n
      \           tripCease,\n            tripNotificationErr\n        }\n        STATUS
      \ current\n        DESCRIPTION\n             \"A collection of notifications
      defined for TRIP.\"\n        ::= { tripMIBGroups 6 }\n    tripNotifObjectGroup
      OBJECT-GROUP\n        OBJECTS {\n            tripNotifApplIndex,\n            tripNotifPeerAddrInetType,\n
      \           tripNotifPeerAddr,\n            tripNotifPeerErrCode,\n            tripNotifPeerErrSubcode\n
      \           }\n        STATUS current\n        DESCRIPTION\n            \"The
      collection of objects that specify information for\n            TRIP notifications.\"\n
      \       ::= { tripMIBGroups 7 }\n"
    - 'END

      '
    title: 6.2.  TRIP MIB
  title: 6.  Definitions
- contents:
  - "7.  Security Considerations\n   The managed objects in this MIB module contain
    sensitive information\n   since, collectively, they allow tracing and influencing
    of\n   connections in TRIP devices and provide information of their\n   connection
    characteristics.  As such, improper manipulation of the\n   objects represented
    by this MIB module MAY result in denial of\n   service to a large number of available
    routes.\n   There are a number of management objects defined in this MIB module\n
    \  that have a MAX-ACCESS clause of read-write and/or read-create.  Such\n   objects
    MAY be considered sensitive or vulnerable in some network\n   environments.  The
    support for SET operations in a non-secure\n   environment without proper protection
    can have a negative effect on\n   network operations.  These objects include:\n
    \     tripCfgItad:\n      Improper setting of tripCfgItad value can make all peer\n
    \     connections drop and not be re-established.\n      tripCfgAdminStatus:\n
    \     Improper setting of tripCfgAdminStatus from up to down will cause\n      the
    TRIP Location Server stop processing TRIP messages.\n      tripCfgPort:\n      Improper
    setting of tripCfgPort can cause the failure of a peer\n      establishing a connection.\n
    \     tripCfgMinItadOriginationInterval,\n      tripCfgMinRouteAdvertisementInterval:\n
    \     Improper configuration of these values MAY adversely affect local\n      and
    global convergence of the routes advertised by this TRIP\n      Location Server.\n
    \     tripPeerAdminStatus:\n      Improper setting of tripPeerAdminStatus from
    up to down can cause\n      significant disruption of the connectivity to the
    destination via\n      the applicable remote TRIP Location Server peer.\n      tripPeerConnectRetryInterval,tripPeerMaxRetryInterval:\n
    \     Improper configuration of these values can cause connections to be\n      disrupted
    for extremely long time periods when otherwise they\n      would be restored in
    a relatively short period of time.\n      tripPeerHoldTimeConfigured, tripPeerKeepAliveConfigured:\n
    \     Improper configuration of these value can make TRIP peer sessions\n      more
    fragile and less resilient to denial of service attacks.\n   There are a number
    of managed objects in this MIB module that contain\n   sensitive information regarding
    the operation of a network.  For\n   example, a TRIP Location Server peer's local
    and remote addresses\n   might be sensitive for ISPs who want to keep interface
    addresses on\n   TRIP Location Server confidential so as to prevent TRIP Location\n
    \  Server addresses used for a denial of service attack or address\n   spoofing.\n
    \  Therefore, it is thus important to control even GET access to these\n   objects
    and possibly to even encrypt the values of these object when\n   sending them
    over the network via SNMP.  Not all versions of SNMP\n   provide features for
    such a secure environment.\n   SNMPv1 by itself is not a secure environment.  Even
    if the network\n   itself is secure (for example by using IPSec), even then, there
    is no\n   control as to who on the secure network is allowed to access and\n   GET/SET
    (read/change/create/delete) the objects in this MIB module.\n   It is RECOMMENDED
    that the implementers consider the security\n   features as provided by the SNMPv3
    framework (see [RFC3410], section\n   8), including full support for the SNMPv3
    cryptographic mechanisms\n   (for authentication and privacy).\n   Further, deployment
    of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED
    to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module is properly configured to give access to\n   the objects only
    to those principals (users) that have legitimate\n   rights to indeed GET or SET
    (change/create/delete) them.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in
      RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2579] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Textual\n
      \            Conventions for SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]
      McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n             \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580, April\n             1999.\n   [RFC2788]
      Freed, N. and S. Kille, \"Network Services Monitoring MIB\",\n             RFC
      2788, March 2000.\n   [RFC3219] Rosenberg, J., Salama, H., and M. Squire, \"Telephony\n
      \            Routing over IP (TRIP)\", RFC 3219, January 2002.\n   [RFC3291]
      Daniele, M., Haberman, B., Routhier, S., and J.\n             Schoenwaelder,
      \"Textual Conventions for Internet Network\n             Addresses\", RFC 3291,
      May 2002.\n   [RFC2578] McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \            \"Structure of Management Information Version 2 (SMIv2)\",\n             STD
      58, RFC 2578, April 1999.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC1657] Willis, S., Burruss, J., and J.
      Chu, Ed., \"Definitions of\n             Managed Objects for the Fourth Version
      of the Border\n             Gateway Protocol (BGP-4) using SMIv2\", RFC 1657,
      July 1994.\n   [RFC1771] Rekhter, Y. and T. Li, \"Border Gateway Protocol 4
      (BGP-4)\",\n             RFC 1771, March 1995.\n   [RFC3410] Case, J., Mundy,
      R., Partain, D., and B. Stewart,\n             \"Introduction and Applicability
      Statements for Internet-\n             Standard Management Framework\", RFC
      3410, December 2002.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "9.  Acknowledgments\n   The authors wish to thank Bert Wijnen, Dan Romascanu,
    and Jonathan\n   Rosenberg for their insightful comments and suggestions.\n   Thanks
    to Kevin Lingle for his invaluable comments, help with MIB\n   things and great
    ideas.\n"
  title: 9.  Acknowledgments
- contents:
  - "10.  Authors' Addresses\n   David Zinman\n   Editor\n   265 Ridley Blvd\n   Toronto
    ON  M5M 4N8\n   Canada\n   Phone: +1 416 433 4298\n   EMail: dzinman@rogers.com\n
    \  David Walker\n   Sedna Wireless Inc.\n   495 March Road, Suite 500\n   Ottawa,
    ON K2K 3G1\n   Canada\n   Phone: +1 613 878 8142\n   EMail: david.walker@sedna-wireless.com\n
    \  Jianping Jiang\n   Syndesis Limited\n   30 Fulton Way\n   Richmond Hill, ON
    L4B 1J5\n   Canada\n   Phone: +1 905 886-7818 x2515\n   EMail: jjiang@syndesis.com\n"
  title: 10.  Authors' Addresses
- contents:
  - "11. Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n
    \  This document is subject to the rights, licenses and restrictions\n   contained
    in BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n   REPRESENTS OR IS
    SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK
    FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED
    TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: 11. Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the IETF's procedures with respect
    to rights in IETF Documents can\n   be found in BCP 78 and BCP 79.\n   Copies
    of IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use of\n   such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
