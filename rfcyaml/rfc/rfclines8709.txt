Abstract This document describes the use of the Ed25519 and Ed448 digital signature algorithms in the Secure Shell (SSH) protocol.
Accordingly, this RFC updates RFC 4253.
[RFC4251] is a secure remote login protocol.
It provides for an extensible variety of public key algorithms for identifying servers and users to one another.
[RFC8032] is a digital signature system.
6.5 [OpenSSH 6.5] introduced support for using Ed25519 for server and user authentication and was then followed by other SSH implementations.
This document describes the method implemented by OpenSSH and others and formalizes the use of the name "ssh ed25519".
Additionally, this document describes the use of Ed448 and formalizes the use of the name "ssh ed448".
Conventions Used in This Document
The descriptions of key and signature formats use the notation introduced in [RFC4251], Section 3 and the string data type from [RFC4251], Section 5.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
This document describes a public key algorithm for use with SSH, as per [RFC4253], Section 6.6.
The name of the algorithm is "ssh  ed25519".
This algorithm only supports signing and not encryption.
Additionally, this document describes another public key algorithm.
The name of the algorithm is "ssh ed448".
This algorithm only supports signing and not encryption.
Standard implementations of SSH SHOULD implement these signature algorithms.
key format has the following encoding: string  "ssh ed25519
Here, 'key' is the 32 octet public key described in [RFC8032], Section 5.1.5.
The "ssh ed448" key format has the following encoding: string  "ssh ed448" string  key Here, 'key' is the 57 octet public key described in [RFC8032], Section 5.2.5. 5.
Signature Algorithm Signatures are generated according to the procedure in Sections 5.1.6 and 5.2.6 of [RFC8032].
key format has the following encoding: string  "ssh ed25519
" string  signature Here, 'signature' is the 64 octet signature produced in accordance with [RFC8032], Section 5.1.6.
The "ssh ed448" key format has the following encoding: string  "ssh ed448" string  signature Here, 'signature' is the 114 octet signature produced in accordance with [RFC8032], Section 5.2.6. 7.
Verification Algorithm Ed25519 signatures are verified according to the procedure in [RFC8032], Section 5.1.7.
Ed448 signatures are verified according to the procedure in [RFC8032], Section 5.2.7.
SSHFP DNS Resource Records Usage and generation of the SSHFP DNS resource record is described in [RFC4255].
The generation of SSHFP resource records for "ssh  ed25519
" keys is described in [RFC7479].
This section illustrates the generation of SSHFP resource records for "ssh ed448" keys, and this document also specifies the corresponding Ed448 code point to "SSHFP RR Types for public key algorithms" in the "DNS SSHFP Resource Record Parameters" IANA registry [IANA SSHFP].
The generation of SSHFP resource records for "ssh ed448" keys is described as follows.
The encoding of Ed448 public keys is described in [ED448].
In brief, an Ed448 public key is a 57 octet value representing a 455 bit y coordinate of an elliptic curve point, and a sign bit indicating the corresponding x coordinate.
The SSHFP Resource Record for the Ed448 public key with SHA 256 fingerprint would, for example, be: example.com.
IN SSHFP 6 2 ( a87f1b687ac0e57d2a081a2f2826723
The '2' here indicates SHA 256
This document augments the Public Key Algorithm Names in [RFC4250], Section 4.11.3.
The security considerations in [RFC4251], Section 9 apply to all SSH implementations, including those using Ed25519 and Ed448.
The security considerations in [RFC8032], Section 8 and [RFC7479], Section 3 apply to all uses of Ed25519 and Ed448, including those in SSH.
