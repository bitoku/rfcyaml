- title: __initial_text__
  contents:
  - '                IP Encapsulating Security Payload (ESP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: ABSTRACT
  contents:
  - "ABSTRACT\n   This document describes the IP Encapsulating Security Payload (ESP).\n\
    \   ESP is a mechanism for providing integrity and confidentiality to IP\n   datagrams.\
    \  In some circumstances it can also provide authentication\n   to IP datagrams.\
    \  The mechanism works with both IPv4 and IPv6.\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   ESP is a mechanism for providing integrity and confidentiality\
    \ to IP\n   datagrams.  It may also provide authentication, depending on which\n\
    \   algorithm and algorithm mode are used.  Non-repudiation and\n   protection\
    \ from traffic analysis are not provided by ESP.  The IP\n   Authentication Header\
    \ (AH) might provide non-repudiation if used with\n   certain authentication algorithms\
    \ [Atk95b].  The IP Authentication\n   Header may be used in conjunction with\
    \ ESP to provide authentication.\n   Users desiring integrity and authentication\
    \ without confidentiality\n   should use the IP Authentication Header (AH) instead\
    \ of ESP.  This\n   document assumes that the reader is familiar with the related\n\
    \   document \"IP Security Architecture\", which defines the overall\n   Internet-layer\
    \ security architecture for IPv4 and IPv6 and provides\n   important background\
    \ for this specification [Atk95a].\n"
- title: 1.1 Overview
  contents:
  - "1.1 Overview\n   The IP Encapsulating Security Payload (ESP) seeks to provide\n\
    \   confidentiality and integrity by encrypting data to be protected and\n   placing\
    \ the encrypted data in the data portion of the IP\n   Encapsulating Security\
    \ Payload.  Depending on the user's security\n   requirements, this mechanism\
    \ may be used to encrypt either a\n   transport-layer segment (e.g., TCP, UDP,\
    \ ICMP, IGMP) or an entire IP\n   datagram.  Encapsulating the protected data\
    \ is necessary to provide\n   confidentiality for the entire original datagram.\n\
    \   Use of this specification will increase the IP protocol processing\n   costs\
    \ in participating systems and will also increase the\n   communications latency.\
    \  The increased latency is primarily due to\n   the encryption and decryption\
    \ required for each IP datagram\n   containing an Encapsulating Security Payload.\n\
    \   In Tunnel-mode ESP, the original IP datagram is placed in the\n   encrypted\
    \ portion of the Encapsulating Security Payload and that\n   entire ESP frame\
    \ is placed within a datagram having unencrypted IP\n   headers.  The information\
    \ in the unencrypted IP headers is used to\n   route the secure datagram from\
    \ origin to destination. An unencrypted\n   IP Routing Header might be included\
    \ between the IP Header and the\n   Encapsulating Security Payload.\n   In Transport-mode\
    \ ESP, the ESP header is inserted into the IP\n   datagram immediately prior to\
    \ the transport-layer protocol header\n   (e.g., TCP, UDP, or ICMP). In this mode\
    \ bandwidth is conserved\n   because there are no encrypted IP headers or IP options.\n\
    \   In the case of IP, an IP Authentication Header may be present as a\n   header\
    \ of an unencrypted IP packet, as a header after the IP header\n   and before\
    \ the ESP header in a Transport-mode ESP packet, and also as\n   a header within\
    \ the encrypted portion of a Tunnel-mode ESP packet.\n   When AH is present both\
    \ in the cleartext IP header and also inside a\n   Tunnel-mode ESP header of a\
    \ single packet, the unencrypted IPv6\n   Authentication Header is primarily used\
    \ to provide protection for the\n   contents of the unencrypted IP headers and\
    \ the encrypted\n   Authentication Header is used to provide authentication only\
    \ for the\n   encrypted IP packet.  This is discussed in more detail later in\
    \ this\n   document.\n   The Encapsulating Security Payload is structured a bit\
    \ differently\n   than other IP payloads. The first component of the ESP payload\n\
    \   consist of the unencrypted field(s) of the payload.  The second\n   component\
    \ consists of encrypted data.  The field(s) of the\n   unencrypted ESP header\
    \ inform the intended receiver how to properly\n   decrypt and process the encrypted\
    \ data.  The encrypted data component\n   includes protected fields for the security\
    \ protocol and also the\n   encrypted encapsulated IP datagram.\n   The concept\
    \ of a \"Security Association\" is fundamental to ESP.  It is\n   described in\
    \ detail in the companion document \"Security Architecture\n   for the Internet\
    \ Protocol\" which is incorporated here by reference\n   [Atk95a].  Implementors\
    \ should read that document before reading this\n   one.\n"
- title: 1.2 Requirements Terminology
  contents:
  - "1.2 Requirements Terminology\n   In this document, the words that are used to\
    \ define the significance\n   of each particular requirement are usually capitalised.\
    \  These words\n   are:\n   - MUST\n      This word or the adjective \"REQUIRED\"\
    \ means that the item is an\n      absolute requirement of the specification.\n\
    \   - SHOULD\n      This word or the adjective \"RECOMMENDED\" means that there\
    \ might\n      exist valid reasons in particular circumstances to ignore this\n\
    \      item, but the full implications should be understood and the case\n   \
    \   carefully weighed before taking a different course.\n   - MAY\n      This\
    \ word or the adjective \"OPTIONAL\" means that this item is\n      truly optional.\
    \  One vendor might choose to include the item\n      because a particular marketplace\
    \ requires it or because it\n      enhances the product, for example; another\
    \ vendor may omit the\n      same item.\n"
- title: 2. KEY MANAGEMENT
  contents:
  - "2. KEY MANAGEMENT\n   Key management is an important part of the IP security\
    \ architecture.\n   However, a specific key management protocol is not included\
    \ in this\n   specification because of a long history in the public literature\
    \ of\n   subtle flaws in key management algorithms and protocols.  IP tries to\n\
    \   decouple the key management mechanisms from the security protocol\n   mechanisms.\
    \  The only coupling between the key management protocol\n   and the security\
    \ protocol is with the Security Parameter Index (SPI),\n   which is described\
    \ in more detail below.  This decoupling permits\n   several different key management\
    \ mechanisms to be used.  More\n   importantly, it permits the key management\
    \ protocol to be changed or\n   corrected without unduly impacting the security\
    \ protocol\n   implementations. Thus, a key management protocol for IP is not\n\
    \   specified within this memo.  The IP Security Architecture describes\n   key\
    \ management in more detail and specifies the key management\n   requirements\
    \ for IP.  Those key management requirements are\n   incorporated here by reference\
    \ [Atk95a].\n   The key management mechanism is used to negotiate a number of\n\
    \   parameters for each security association, including not only the keys\n  \
    \ but other information (e.g., the cryptographic algorithms and modes,\n   security\
    \ classification level, if any) used by the communicating\n   parties.  The key\
    \ management protocol implementation usually creates\n   and maintains a logical\
    \ table containing the several parameters for\n   each current security association.\
    \ An ESP implementation normally\n   needs to read that security parameter table\
    \ to determine how to\n   process each datagram containing an ESP (e.g., which\
    \ algorithm/mode\n   and key to use).\n"
- title: 3. ENCAPSULATING SECURITY PAYLOAD SYNTAX
  contents:
  - "3. ENCAPSULATING SECURITY PAYLOAD SYNTAX\n   The Encapsulating Security Payload\
    \ (ESP) may appear anywhere after\n   the IP header and before the final transport-layer\
    \ protocol.  The\n   Internet Assigned Numbers Authority has assigned Protocol\
    \ Number 50\n   to ESP [STD-2].  The header immediately preceding an ESP header\
    \ will\n   always contain the value 50 in its Next Header (IPv6) or Protocol\n\
    \   (IPv4) field.  ESP consists of an unencrypted header followed by\n   encrypted\
    \ data.  The encrypted data includes both the protected ESP\n   header fields\
    \ and the protected user data, which is either an entire\n   IP datagram or an\
    \ upper-layer protocol frame (e.g., TCP or UDP).  A\n   high-level diagram of\
    \ a secure IP datagram follows.\n  |<--        Unencrypted              -->|<----\
    \    Encrypted   ------>|\n  +-------------+--------------------+------------+---------------------+\n\
    \  | IP Header   | Other IP Headers   | ESP Header | encrypted data      |\n \
    \ +-------------+--------------------+------------+---------------------+\n  \
    \ A more detailed diagram of the ESP Header follows below.\n  +-------------+--------------------+------------+---------------------+\n\
    \  |             Security Association Identifier (SPI), 32 bits          |\n \
    \ +=============+====================+============+=====================+\n  |\
    \             Opaque Transform Data, variable length                  |\n  +-------------+--------------------+------------+---------------------+\n\
    \   Encryption and authentication algorithms, and the precise format of\n   the\
    \ Opaque Transform Data associated with them are known as\n   \"transforms\".\
    \  The ESP format is designed to support new transforms\n   in the future to support\
    \ new or additional cryptographic algorithms.\n   The transforms are specified\
    \ by themselves rather than in the main\n   body of this specification.  The mandatory\
    \ transform for use with IP\n   is defined in a separate document [KMS95].  Other\
    \ optional transforms\n   exist in other separate specifications and additional\
    \ transforms\n   might be defined in the future.\n"
- title: 3.1 Fields of the Encapsulating Security Payload
  contents:
  - "3.1 Fields of the Encapsulating Security Payload\n   The SPI is a 32-bit pseudo-random\
    \ value identifying the security\n   association for this datagram.  If no security\
    \ association has been\n   established, the value of the SPI field shall be 0x00000000.\
    \   An SPI\n   is similar to the SAID used in other security protocols.  The name\n\
    \   has been changed because the semantics used here are not exactly the\n   same\
    \ as those used in other security protocols.\n   The set of SPI values in the\
    \ range 0x00000001 though 0x000000FF are\n   reserved to the Internet Assigned\
    \ Numbers Authority (IANA) for future\n   use.  A reserved SPI value will not\
    \ normally be assigned by IANA\n   unless the use of that particular assigned\
    \ SPI value is openly\n   specified in an RFC.\n   The SPI is the only mandatory\
    \ transform-independent field.\n   Particular transforms may have other fields\
    \ unique to the transform.\n   Transforms are not specified in this document.\n"
- title: 3.2 Security Labeling with ESP
  contents:
  - "3.2 Security Labeling with ESP\n   The encrypted IP datagram need not and does\
    \ not normally contain any\n   explicit Security Label because the SPI indicates\
    \ the sensitivity\n   level.  This is an improvement over the current practices\
    \ with IPv4\n   where an explicit Sensitivity Label is normally used with\n  \
    \ Compartmented Mode Workstations and other systems requiring Security\n   Labels\
    \ [Ken91] [DIA].  In some situations, users MAY choose to carry\n   explicit labels\
    \ (for example, IPSO labels as defined by RFC-1108\n   might be used with IPv4)\
    \ in addition to using the implicit labels\n   provided by ESP.  Explicit label\
    \ options could be defined for use\n   with IPv6 (e.g., using the IPv6 End-to-End\
    \ Options Header or the IPv6\n   Hop-by-Hop Options Header).  Implementations\
    \ MAY support explicit\n   labels in addition to implicit labels, but implementations\
    \ are not\n   required to support explicit labels.  Implementations of ESP in\n\
    \   systems claiming to provide multi-level security MUST support\n   implicit\
    \ labels.\n"
- title: 4. ENCAPSULATING SECURITY PROTOCOL PROCESSING
  contents:
  - "4. ENCAPSULATING SECURITY PROTOCOL PROCESSING\n   This section describes the\
    \ steps taken when ESP is in use between two\n   communicating parties.  Multicast\
    \ is different from unicast only in\n   the area of key management (See the definition\
    \ of the SPI, above, for\n   more detail on this).  There are two modes of use\
    \ for ESP.  The first\n   mode, which is called \"Tunnel-mode\", encapsulates\
    \ an entire IP\n   datagram inside ESP.  The second mode, which is called \"Transport-\n\
    \   Mode\", encapsulates a transport-layer (e.g., UDP, TCP) frame inside\n   ESP.\
    \  The term \"Transport-mode\" must not be misconstrued as\n   restricting its\
    \ use to TCP and UDP. For example, an ICMP message MAY\n   be sent either using\
    \ the \"Transport-mode\" or the \"Tunnel-mode\"\n   depending upon circumstance.\
    \  ESP processing occurs prior to IP\n   fragmentation on output and after IP\
    \ reassembly on input.  This\n   section describes protocol processing for each\
    \ of these two modes.\n"
- title: 4.1 ESP in Tunnel-mode
  contents:
  - "4.1 ESP in Tunnel-mode\n   In Tunnel-mode ESP, the ESP header follows all of\
    \ the end-to-end\n   headers (e.g., Authentication Header, if present in cleartext)\
    \ and\n   immediately precedes an tunnelled IP datagram.\n   The sender takes\
    \ the original IP datagram, encapsulates it into the\n   ESP, uses at least the\
    \ sending userid and Destination Address as data\n   to locate the correct Security\
    \ Association, and then applies the\n   appropriate encryption transform.  If\
    \ host-oriented keying is in use,\n   then all sending userids on a given system\
    \ will have the same\n   Security Association for a given Destination Address.\
    \  If no key has\n   been established, then the key management mechanism is used\
    \ to\n   establish an encryption key for this communications session prior to\n\
    \   the use of ESP.  The (now encrypted) ESP is then encapsulated in a\n   cleartext\
    \ IP datagram as the last payload.  If strict red/black\n   separation is being\
    \ enforced, then the addressing and other\n   information in the cleartext IP\
    \ headers and optional payloads MAY be\n   different from the values contained\
    \ in the (now encrypted and\n   encapsulated) original datagram.\n   The receiver\
    \ strips off the cleartext IP header and cleartext\n   optional IP payloads (if\
    \ any) and discards them.  It then uses the\n   combination of Destination Address\
    \ and SPI value to locate the\n   correct session key to use for this packet.\
    \  It then decrypts the ESP\n   using the session key that was just located for\
    \ this packet.\n   If no valid Security Association exists for this session (for\n\
    \   example, the receiver has no key), the receiver MUST discard the\n   encrypted\
    \ ESP and the failure MUST be recorded in the system log or\n   audit log.  This\
    \ system log or audit log entry SHOULD include the SPI\n   value, date/time, cleartext\
    \ Sending Address, cleartext Destination\n   Address, and the cleartext Flow ID.\
    \  The log entry MAY also include\n   other identifying data.  The receiver might\
    \ not wish to react by\n   immediately informing the sender of this failure because\
    \ of the\n   strong potential for easy-to-exploit denial of service attacks.\n\
    \   If decryption succeeds, the original IP datagram is then removed from\n  \
    \ the (now decrypted) ESP.  This original IP datagram is then processed\n   as\
    \ per the normal IP protocol specification.  In the case of system\n   claiming\
    \ to provide multilevel security (for example, a B1 or\n   Compartmented Mode\
    \ Workstation) additional appropriate mandatory\n   access controls MUST be applied\
    \ based on the security level of the\n   receiving process and the security level\
    \ associated with this\n   Security Association.  If those mandatory access controls\
    \ fail, then\n   the packet SHOULD be discarded and the failure SHOULD be logged\
    \ using\n   implementation-specific procedures.\n"
- title: 4.2 ESP in Transport-mode
  contents:
  - "4.2 ESP in Transport-mode\n   In Transport-mode ESP, the ESP header follows the\
    \ end-to-end headers\n   (e.g., Authentication Header) and immediately precedes\
    \ a transport-\n   layer (e.g., UDP, TCP, ICMP) header.\n   The sender takes the\
    \ original transport-layer (e.g., UDP, TCP, ICMP)\n   frame, encapsulates it into\
    \ the ESP, uses at least the sending userid\n   and Destination Address to locate\
    \ the appropriate Security\n   Association, and then applies the appropriate encryption\
    \ transform.\n   If host-oriented keying is in use, then all sending userids on\
    \ a\n   given system will have the same Security Association for a given\n   Destination\
    \ Address. If no key has been established, then the key\n   management mechanism\
    \ is used to establish a encryption key for this\n   communications session prior\
    \ to the encryption.  The (now encrypted)\n   ESP is then encapsulated as the\
    \ last payload of a cleartext IP\n   datagram.\n   The receiver processes the\
    \ cleartext IP header and cleartext optional\n   IP headers (if any) and temporarily\
    \ stores pertinent information\n   (e.g., source and destination addresses, Flow\
    \ ID, Routing Header).\n   It then decrypts the ESP using the session key that\
    \ has been\n   established for this traffic, using the combination of the\n  \
    \ destination address and the packet's Security Association Identifier\n   (SPI)\
    \ to locate the correct key.\n   If no key exists for this session or the attempt\
    \ to decrypt fails,\n   the encrypted ESP MUST be discarded and the failure MUST\
    \ be recorded\n   in the system log or audit log.  If such a failure occurs, the\n\
    \   recorded log data SHOULD include the SPI value, date/time received,\n   clear-text\
    \ Sending Address, clear-text Destination Address, and the\n   Flow ID.  The log\
    \ data MAY also include other information about the\n   failed packet.  If decryption\
    \ does not work properly for some reason,\n   then the resulting data will not\
    \ be parsable by the implementation's\n   protocol engine.  Hence, failed decryption\
    \ is generally detectable.\n   If decryption succeeds, the original transport-layer\
    \ (e.g., UDP, TCP,\n   ICMP) frame is removed from the (now decrypted) ESP.  The\
    \ information\n   from the cleartext IP header and the now decrypted transport-layer\n\
    \   header is jointly used to determine which application the data should\n  \
    \ be sent to.  The data is then sent along to the appropriate\n   application\
    \ as normally per IP protocol specification.  In the case\n   of a system claiming\
    \ to provide multilevel security (for example, a\n   B1 or Compartmented Mode\
    \ Workstation), additional Mandatory Access\n   Controls MUST be applied based\
    \ on the security level of the receiving\n   process and the security level of\
    \ the received packet's Security\n   Association.\n"
- title: 4.3. Authentication
  contents:
  - "4.3. Authentication\n   Some transforms provide authentication as well as confidentiality\
    \ and\n   integrity.  When such a transform is not used, then the\n   Authentication\
    \ Header might be used in conjunction with the\n   Encapsulating Security Payload.\
    \  There are two different approaches\n   to using the Authentication Header with\
    \ ESP, depending on which data\n   is to be authenticated.  The location of the\
    \ Authentication Header\n   makes it clear which set of data is being authenticated.\n\
    \   In the first usage, the entire received datagram is authenticated,\n   including\
    \ both the encrypted and unencrypted portions, while only the\n   data sent after\
    \ the ESP Header is confidential.  In this usage, the\n   sender first applies\
    \ ESP to the data being protected.  Then the other\n   plaintext IP headers are\
    \ prepended to the ESP header and its now\n   encrypted data. Finally, the IP\
    \ Authentication Header is calculated\n   over the resulting datagram according\
    \ to the normal method.  Upon\n   receipt, the receiver first verifies the authenticity\
    \ of the entire\n   datagram using the normal IP Authentication Header process.\
    \  Then if\n   authentication succeeds, decryption using the normal IP ESP process\n\
    \   occurs.  If decryption is successful, then the resulting data is\n   passed\
    \ up to the upper layer.\n   If the authentication process were to be applied\
    \ only to the data\n   protected by Tunnel-mode ESP, then the IP Authentication\
    \ Header would\n   be placed normally within that protected datagram.  However,\
    \ if one\n   were using Transport-mode ESP, then the IP Authentication Header\n\
    \   would be placed before the ESP header and would be calculated across\n   the\
    \ entire IP datagram.\n   If the Authentication Header is encapsulated within\
    \ a Tunnel-mode ESP\n   header, and both headers have specific security classification\
    \ levels\n   associated with them, and the two security classification levels\
    \ are\n   not identical, then an error has occurred.  That error SHOULD be\n \
    \  recorded in the system log or audit log using the procedures\n   described\
    \ previously.  It is not necessarily an error for an\n   Authentication Header\
    \ located outside of the ESP header to have a\n   different security classification\
    \ level than the ESP header's\n   classification level.  This might be valid because\
    \ the cleartext IP\n   headers might have a different classification level after\
    \ the data\n   has been encrypted using ESP.\n"
- title: 5. CONFORMANCE REQUIREMENTS
  contents:
  - "5. CONFORMANCE REQUIREMENTS\n   Implementations that claim conformance or compliance\
    \ with this\n   specification MUST fully implement the header described here,\
    \ MUST\n   support manual key distribution with this header, MUST comply with\n\
    \   all requirements of the \"Security Architecture for the Internet\n   Protocol\"\
    \ [Atk95a], and MUST support the use of DES CBC as specified\n   in the companion\
    \ document entitled \"The ESP DES-CBC Transform\"\n   [KMS95].  Implementors MAY\
    \ also implement other ESP transforms.\n   Implementers should consult the most\
    \ recent version of the \"IAB\n   Official Standards\" RFC for further guidance\
    \ on the status of this\n   document.\n"
- title: 6. SECURITY CONSIDERATIONS
  contents:
  - "6. SECURITY CONSIDERATIONS\n   This entire document discusses a security mechanism\
    \ for use with IP.\n   This mechanism is not a panacea, but it does provide an\
    \ important\n   component useful in creating a secure internetwork.\n   Cryptographic\
    \ transforms for ESP which use a block-chaining algorithm\n   and lack a strong\
    \ integrity mechanism are vulnerable to a cut-and-\n   paste attack described\
    \ by Bellovin and should not be used unless the\n   Authentication Header is always\
    \ present with packets using that ESP\n   transform [Bel95].\n   Users need to\
    \ understand that the quality of the security provided by\n   this specification\
    \ depends completely on the strength of whichever\n   encryption algorithm has\
    \ been implemented, the correctness of that\n   algorithm's implementation, upon\
    \ the security of the key management\n   mechanism and its implementation, the\
    \ strength of the key [CN94]\n   [Sch94, p233] and upon the correctness of the\
    \ ESP and IP\n   implementations in all of the participating systems.\n   If any\
    \ of these assumptions do not hold, then little or no real\n   security will be\
    \ provided to the user.  Use of high assurance\n   development techniques is recommended\
    \ for the IP Encapsulating\n   Security Payload.\n   Users seeking protection\
    \ from traffic analysis might consider the use\n   of appropriate link encryption.\
    \  Description and specification of\n   link encryption is outside the scope of\
    \ this note.\n   If user-oriented keying is not in use, then the algorithm in\
    \ use\n   should not be an algorithm vulnerable to any kind of Chosen Plaintext\n\
    \   attack.  Chosen Plaintext attacks on DES are described in [BS93] and\n   [Mat94].\
    \ Use of user-oriented keying is recommended in order to\n   preclude any sort\
    \ of Chosen Plaintext attack and to generally make\n   cryptanalysis more difficult.\
    \  Implementations SHOULD support user-\n   oriented keying as is described in\
    \ the IP Security Architecture\n   [Atk95a].\n"
- title: ACKNOWLEDGEMENTS
  contents:
  - "ACKNOWLEDGEMENTS\n   This document benefited greatly from work done by Bill Simpson,\
    \ Perry\n   Metzger, and Phil Karn to make general the approach originally\n \
    \  defined by the author for SIP, SIPP, and finally IPv6.\n   Many of the concepts\
    \ here are derived from or were influenced by the\n   US Government's SP3 security\
    \ protocol specification, the ISO/IEC's\n   NLSP specification, or from the proposed\
    \ swIPe security protocol\n   [SDNS89, ISO92a, IB93, IBK93, ISO92b].  The use\
    \ of DES for\n   confidentiality is closely modeled on the work done for the SNMPv2\n\
    \   [GM93].  Steve Bellovin, Steve Deering, Dave Mihelcic, and Hilarie\n   Orman\
    \ provided solid critiques of early versions of this memo.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [Atk95a] Atkinson, R., \"Security Architecture for the Internet\n\
    \            Protocol\", RFC 1825, NRL, August 1995.\n   [Atk95b] Atkinson, R.,\
    \ \"IP Authentication Header\", RFC 1826, NRL,\n            August 1995.\n   [Bel89]\
    \  Steven M. Bellovin, \"Security Problems in the TCP/IP\n            Protocol\
    \ Suite\", ACM Computer Communications Review, Vol. 19,\n            No. 2, March\
    \ 1989.\n   [Bel95]  Steven M. Bellovin, Presentation at IP Security Working\n\
    \            Group Meeting, Proceedings of the 32nd Internet Engineering\n   \
    \         Task Force, March 1995, Internet Engineering Task Force,\n         \
    \   Danvers, MA.\n   [BS93]   Eli Biham and Adi Shamir, \"Differential Cryptanalysis\
    \ of the\n            Data Encryption Standard\", Springer-Verlag, New York, NY,\n\
    \            1993.\n   [CN94]   John M. Carroll & Sri Nudiati, \"On Weak Keys\
    \ and Weak Data:\n            Foiling the Two Nemeses\", Cryptologia, Vol. 18,\
    \ No. 23,\n            July 1994. pp. 253-280\n   [CERT95] Computer Emergency\
    \ Response Team (CERT), \"IP Spoofing Attacks\n            and Hijacked Terminal\
    \ Connections\", CA-95:01, January 1995.\n            Available via anonymous\
    \ ftp from info.cert.org.\n   [DIA]    US Defense Intelligence Agency (DIA), \"\
    Compartmented Mode\n            Workstation Specification\", Technical Report\n\
    \            DDS-2600-6243-87.\n   [GM93]   Galvin J., and K. McCloghrie, \"Security\
    \ Protocols for\n            version 2 of the Simple Network Management Protocol\n\
    \            (SNMPv2)\", RFC 1446, Trusted Information Systems, Hughes LAN\n \
    \           Systems, April 1993.\n   [Hin94]  Bob Hinden (Editor), Internet Protocol\
    \ version 6 (IPv6)\n            Specification, Work in Progress, October 1994.\n\
    \   [IB93]   John Ioannidis & Matt Blaze, \"Architecture and Implementation\n\
    \            of Network-layer Security Under Unix\", Proceedings of the USENIX\n\
    \            Security Symposium, Santa Clara, CA, October 1993.\n   [IBK93]  John\
    \ Ioannidis, Matt Blaze, & Phil Karn, \"swIPe:\n            Network-Layer Security\
    \ for IP\", presentation at the Spring\n            1993 IETF Meeting, Columbus,\
    \ Ohio.\n   [ISO92a] ISO/IEC JTC1/SC6, Network Layer Security Protocol, ISO-IEC\n\
    \            DIS 11577, International Standards Organisation, Geneva,\n      \
    \      Switzerland, 29 November 1992.\n   [ISO92b] ISO/IEC JTC1/SC6, Network Layer\
    \ Security Protocol, ISO-IEC\n            DIS 11577, Section 13.4.1, page 33,\
    \ International Standards\n            Organisation, Geneva, Switzerland, 29 November\
    \ 1992.\n   [Ken91]  Kent, S., \"US DoD Security Options for the Internet\n  \
    \          Protocol\", RFC 1108, BBN Communications, November 1991.\n   [KMS95]\
    \  Karn, P., Metzger, P., and W. Simpson, \"The ESP DES-CBC\n            Transform\"\
    , RFC 1829, Qualcomm, Inc., Piermont, Daydreamer,\n            August 1995.\n\
    \   [Mat94]  Matsui, M., \"Linear Cryptanalysis method for DES Cipher\",\n   \
    \         Proceedings of Eurocrypt '93, Berlin, Springer-Verlag, 1994.\n   [NIST77]\
    \ US National Bureau of Standards, \"Data Encryption Standard\",\n           \
    \ Federal Information Processing Standard (FIPS) Publication\n            46,\
    \ January 1977.\n   [NIST80] US National Bureau of Standards, \"DES Modes of Operation\"\
    \n            Federal Information Processing Standard (FIPS) Publication\n   \
    \         81, December 1980.\n   [NIST81] US National Bureau of Standards, \"\
    Guidelines for Implementing\n            and Using the Data Encryption Standard\"\
    , Federal Information\n            Processing Standard (FIPS) Publication 74,\
    \ April 1981.\n   [NIST88] US National Bureau of Standards, \"Data Encryption\
    \ Standard\",\n            Federal Information Processing Standard (FIPS) Publication\n\
    \            46-1, January 1988.\n   [STD-2]  Reynolds, J., and J. Postel, \"\
    Assigned Numbers\", STD 2,\n            RFC 1700, USC/Information Sciences Institute,\
    \ October 1994.\n   [Sch94]  Bruce Schneier, Applied Cryptography, John Wiley\
    \ & Sons,\n            New York, NY, 1994.  ISBN 0-471-59756-2\n   [SDNS89] SDNS\
    \ Secure Data Network System, Security Protocol 3, SP3,\n            Document\
    \ SDN.301, Revision 1.5, 15 May 1989, as published\n            in NIST Publication\
    \ NIST-IR-90-4250, February 1990.\n"
- title: DISCLAIMER
  contents:
  - "DISCLAIMER\n   The views and specification here are those of the author and are\
    \ not\n   necessarily those of his employer.  The Naval Research Laboratory has\n\
    \   not passed judgement on the merits, if any, of this work.  The author\n  \
    \ and his employer specifically disclaim responsibility for any\n   problems arising\
    \ from correct or incorrect implementation or use of\n   this specification.\n"
- title: AUTHOR'S ADDRESS
  contents:
  - "AUTHOR'S ADDRESS\n   Randall Atkinson\n   Information Technology Division\n \
    \  Naval Research Laboratory\n   Washington, DC 20375-5320\n   USA\n   Phone:\
    \  (202) 404-7090\n   Fax:    (202) 404-7942\n   EMail:  atkinson@itd.nrl.navy.mil\n"
