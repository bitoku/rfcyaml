- title: __initial_text__
  contents:
  - '         Internet Printing Protocol/1.0: Encoding and Transport

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document defines an Experimental protocol for the Internet\n\
    \   community.  The IESG expects that a revised version of this protocol\n   will\
    \ be published as Proposed Standard protocol.  The Proposed\n   Standard, when\
    \ published, is expected to change from the protocol\n   defined in this memo.\
    \  In particular, it is expected that the\n   standards-track version of the protocol\
    \ will incorporate strong\n   authentication and privacy features, and that an\
    \ \"ipp:\" URL type will\n   be defined which supports those security measures.\
    \  Other changes to\n   the protocol are also possible.  Implementors are warned\
    \ that future\n   versions of this protocol may not interoperate with the version\
    \ of\n   IPP defined in this document, or if they do interoperate, that some\n\
    \   protocol features may not be available.\n   The IESG encourages experimentation\
    \ with this protocol, especially in\n   combination with Transport Layer Security\
    \ (TLS) [RFC 2246], to help\n   determine how TLS may effectively be used as a\
    \ security layer for\n   IPP.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document is one of a set of documents, which together describe\n\
    \   all aspects of a new Internet Printing Protocol (IPP). IPP is an\n   application\
    \ level protocol that can be used for distributed printing\n   using Internet\
    \ tools and technologies. This document defines the\n   rules for encoding IPP\
    \ operations and IPP attributes into a new\n   Internet mime media type called\
    \ \"application/ipp\".  This document\n   also defines the rules for transporting\
    \ over HTTP a message body\n   whose Content-Type is \"application/ipp\".\n  \
    \ The full set of IPP documents includes:\n      Design Goals for an Internet\
    \ Printing Protocol [RFC2567]\n      Rationale for the Structure and Model and\
    \ Protocol for the\n      Internet Printing Protocol [RFC2568]\n      Internet\
    \ Printing Protocol/1.0: Model and Semantics [RFC2566]\n      Internet Printing\
    \ Protocol/1.0: Encoding and Transport (this\n      document)\n      Internet\
    \ Printing Protocol/1.0: Implementer's Guide [ipp-iig]\n      Mapping between\
    \ LPD and IPP Protocols [RFC2569]\n   The document, \"Design Goals for an Internet\
    \ Printing Protocol\", takes\n   a broad look at distributed printing functionality,\
    \ and it enumerates\n   real-life scenarios that help to clarify the features\
    \ that need to be\n   included in a printing protocol for the Internet. It identifies\n\
    \   requirements for three types of users: end users, operators, and\n   administrators.\
    \ It calls out a subset of end user requirements that\n   are satisfied in IPP/1.0.\
    \ Operator and administrator requirements are\n   out of scope for version 1.0.\n\
    \   The document, \"Rationale for the Structure and Model and Protocol for\n \
    \  the Internet Printing Protocol\", describes IPP from a high level\n   view,\
    \ defines a roadmap for the various documents that form the suite\n   of IPP specifications,\
    \ and gives background and rationale for the\n   IETF working group's major decisions.\n\
    \   The document, \"Internet Printing Protocol/1.0: Model and Semantics\",\n \
    \  describes a simplified model with abstract objects, their attributes,\n   and\
    \ their operations that are independent of encoding and transport.\n   It introduces\
    \ a Printer and a Job object. The Job object optionally\n   supports multiple\
    \ documents per Job. It also addresses security,\n   internationalization, and\
    \ directory issues.\n   This document \"Internet Printing Protocol/1.0: Implementer's\
    \ Guide\",\n   gives advice to implementers of IPP clients and IPP objects.\n\
    \   The document \"Mapping between LPD and IPP Protocols\" gives some\n   advice\
    \ to implementers of gateways between IPP and LPD (Line Printer\n   Daemon) implementations.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction.....................................................4\n\
    \   2. Conformance Terminology..........................................4\n  \
    \ 3. Encoding of  the Operation Layer.................................4\n    \
    \  3.1  Picture of the Encoding.....................................5\n      3.2\
    \  Syntax of Encoding..........................................7\n      3.3  Version-number..............................................9\n\
    \      3.4  Operation-id................................................9\n  \
    \    3.5  Status-code.................................................9\n    \
    \  3.6  Request-id..................................................9\n      3.7\
    \  Tags.......................................................10\n         3.7.1\
    \ Delimiter Tags.........................................10\n         3.7.2 Value\
    \ Tags.............................................11\n      3.8  Name-Length................................................13\n\
    \      3.9  (Attribute) Name...........................................13\n  \
    \    3.10 Value Length...............................................16\n    \
    \  3.11 (Attribute) Value..........................................16\n      3.12\
    \ Data.......................................................18\n   4. Encoding\
    \ of Transport Layer.....................................18\n   5. Security Considerations.........................................19\n\
    \      5.1  Using IPP with SSL3........................................19\n  \
    \ 6. References......................................................20\n   7.\
    \ Authors' Addresses..............................................22\n   8. Other\
    \ Participants:.............................................24\n   9. Appendix\
    \ A: Protocol Examples...................................25\n      9.1  Print-Job\
    \ Request..........................................25\n      9.2  Print-Job Response\
    \ (successful)............................26\n      9.3  Print-Job Response (failure)...............................27\n\
    \      9.4  Print-Job Response (success with attributes ignored).......28\n  \
    \    9.5  Print-URI Request..........................................30\n    \
    \  9.6  Create-Job Request.........................................31\n      9.7\
    \  Get-Jobs Request...........................................31\n      9.8  Get-Jobs\
    \ Response..........................................32\n   10. Appendix C: Registration\
    \ of MIME Media Type Information for\n       \"application/ipp\"..............................................35\n\
    \   11. Full Copyright Statement.......................................37\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document contains the rules for encoding IPP operations\
    \ and\n   describes two layers: the transport layer and the operation layer.\n\
    \   The transport layer consists of an  HTTP/1.1 request or response. RFC\n  \
    \ 2068 [RFC2068] describes HTTP/1.1. This document specifies the HTTP\n   headers\
    \ that an IPP implementation supports.\n   The operation layer consists of  a\
    \ message body in an HTTP request or\n   response.  The document \"Internet Printing\
    \ Protocol/1.0: Model and\n   Semantics\" [RFC2566] defines the semantics of such\
    \ a message body and\n   the supported values. This document specifies the encoding\
    \ of an IPP\n   operation. The aforementioned document [RFC2566] is henceforth\n\
    \   referred to as the \"IPP model document\"\n"
- title: 2. Conformance Terminology
  contents:
  - "2. Conformance Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\", \"MAY\", and  \"OPTIONAL\"\
    \ in this document are to be\n   interpreted as described in RFC 2119 [RFC2119].\n"
- title: 3. Encoding of  the Operation Layer
  contents:
  - "3. Encoding of  the Operation Layer\n   The operation layer MUST contain a single\
    \ operation request or\n   operation response.  Each request or response consists\
    \ of a sequence\n   of values and attribute groups. Attribute groups consist of\
    \ a\n   sequence of attributes each of which is a name and value.  Names and\n\
    \   values are ultimately sequences of octets\n   The encoding consists of octets\
    \ as the most primitive type. There are\n   several types built from octets, but\
    \ three important types are\n   integers, character strings and octet strings,\
    \ on which most other\n   data types are built. Every character string in this\
    \ encoding MUST be\n   a sequence of characters where the characters are associated\
    \ with\n   some charset and some natural language. A character string MUST be\
    \ in\n   \"reading order\" with the first character in the value (according to\n\
    \   reading order) being the first character in the encoding. A character\n  \
    \ string whose associated charset is US-ASCII whose associated natural\n   language\
    \ is US English is henceforth called a US-ASCII-STRING. A\n   character string\
    \ whose associated charset and natural language are\n   specified in a request\
    \ or response as described in the model document\n   is henceforth called a LOCALIZED-STRING.\
    \ An octet string MUST be in\n   \"IPP model document order\" with the first octet\
    \ in the value\n   (according to the IPP model document order) being the first\
    \ octet in\n   the encoding Every integer in this encoding MUST be encoded as\
    \ a\n   signed integer using two's-complement binary encoding with big-endian\n\
    \   format (also known as \"network order\" and \"most significant byte\n   first\"\
    ). The number of octets for an integer MUST be 1, 2 or 4,\n   depending on usage\
    \ in the protocol.  Such one-octet integers,\n   henceforth called SIGNED-BYTE,\
    \ are used for the version-number and\n   tag fields. Such two-byte integers,\
    \ henceforth called SIGNED-SHORT\n   are used for the operation-id, status-code\
    \ and length fields. Four\n   byte integers, henceforth called SIGNED-INTEGER,\
    \ are used for values\n   fields and the sequence number.\n   The following two\
    \ sections present the operation layer in two ways\n      - informally through\
    \ pictures and description\n      - formally through Augmented Backus-Naur Form\
    \ (ABNF), as specified\n        by RFC 2234 [RFC2234]\n"
- title: 3.1 Picture of the Encoding
  contents:
  - "3.1 Picture of the Encoding\n   The encoding for an operation request or response\
    \ consists of:\n  -----------------------------------------------\n  |       \
    \           version-number             |   2 bytes  - required\n  -----------------------------------------------\n\
    \  |               operation-id (request)        |\n  |                      or\
    \                     |   2 bytes  - required\n  |               status-code (response)\
    \        |\n  -----------------------------------------------\n  |           \
    \        request-id                |   4 bytes  - required\n  -----------------------------------------------------------\n\
    \  |               xxx-attributes-tag            |   1 byte  |\n  -----------------------------------------------\
    \           |-0 or more\n  |             xxx-attribute-sequence          |   n\
    \ bytes |\n  -----------------------------------------------------------\n  |\
    \              end-of-attributes-tag          |   1 byte   - required\n  -----------------------------------------------\n\
    \  |                     data                    |   q bytes  - optional\n  -----------------------------------------------\n\
    \   The xxx-attributes-tag and xxx-attribute-sequence represents four\n   different\
    \ values of \"xxx\", namely, operation, job, printer and\n   unsupported. The\
    \ xxx-attributes-tag and an xxx-attribute-sequence\n   represent attribute groups\
    \ in the model document. The xxx-\n   attributes-tag identifies the attribute\
    \ group and the xxx-attribute-\n   sequence contains the attributes.\n   The expected\
    \ sequence of  xxx-attributes-tag and xxx-attribute-\n   sequence is specified\
    \ in the IPP model document for each operation\n   request and operation response.\n\
    \   A request or response SHOULD contain each xxx-attributes-tag defined\n   for\
    \ that request or response even if there are no attributes except\n   for the\
    \ unsupported-attributes-tag which SHOULD be present only if\n   the unsupported-attribute-sequence\
    \ is non-empty. A receiver of a\n   request MUST be able to process as equivalent\
    \ empty attribute groups:\n     a) an xxx-attributes-tag with an empty xxx-attribute-sequence,\n\
    \     b) an expected but missing xxx-attributes-tag.\n   The data is omitted from\
    \ some operations, but the end-of-attributes-\n   tag is present even when the\
    \ data is omitted. Note, the xxx-\n   attributes-tags and end-of-attributes-tag\
    \ are called 'delimiter-\n   tags'. Note: the xxx-attribute-sequence, shown above\
    \ may consist of 0\n   bytes, according to the rule below.\n   An xxx-attributes-sequence\
    \ consists of zero or more compound-\n   attributes.\n  -----------------------------------------------\n\
    \  |              compound-attribute             |   s bytes - 0 or more\n  -----------------------------------------------\n\
    \   A compound-attribute consists of an attribute with a single value\n   followed\
    \ by zero or more additional values.\n   Note: a 'compound-attribute' represents\
    \ a single attribute in the\n   model document.  The 'additional value' syntax\
    \ is for attributes with\n   2 or more values.\n   Each attribute consists of:\n\
    \  -----------------------------------------------\n  |                   value-tag\
    \                 |   1 byte\n  -----------------------------------------------\n\
    \  |               name-length  (value is u)     |   2 bytes\n  -----------------------------------------------\n\
    \  |                     name                    |   u bytes\n  -----------------------------------------------\n\
    \  |              value-length  (value is v)     |   2 bytes\n  -----------------------------------------------\n\
    \  |                     value                   |   v bytes\n  -----------------------------------------------\n\
    \   An additional value consists of:\n  -----------------------------------------------------------\n\
    \  |                   value-tag                 |   1 byte  |\n  -----------------------------------------------\
    \           |\n  |            name-length  (value is 0x0000)   |   2 bytes |\n\
    \  -----------------------------------------------           |-0 or more\n  |\
    \              value-length (value is w)      |   2 bytes |\n  -----------------------------------------------\
    \           |\n  |                     value                   |   w bytes |\n\
    \  -----------------------------------------------------------\n   Note: an additional\
    \ value is like an attribute whose name-length is 0.\n   From the standpoint of\
    \ a parsing loop, the encoding consists of:\n  -----------------------------------------------\n\
    \  |                  version-number             |   2 bytes  - required\n  -----------------------------------------------\n\
    \  |               operation-id (request)        |\n  |                      or\
    \                     |   2 bytes  - required\n  |               status-code (response)\
    \        |\n  -----------------------------------------------\n  |           \
    \        request-id                |   4 bytes  - required\n  -----------------------------------------------------------\n\
    \  |        tag (delimiter-tag or value-tag)     |   1 byte  |\n  -----------------------------------------------\
    \           |-0 or more\n  |           empty or rest of attribute        |   x\
    \ bytes |\n  -----------------------------------------------------------\n  |\
    \              end-of-attributes-tag          |   2 bytes  - required\n  -----------------------------------------------\n\
    \  |                     data                    |   y bytes  - optional\n  -----------------------------------------------\n\
    \   The value of the tag determines whether the bytes following the\n   tag are:\n\
    \      - attributes\n      - data\n      - the remainder of a single attribute\
    \ where the tag specifies the\n        type of the value.\n"
- title: 3.2 Syntax of Encoding
  contents:
  - "3.2 Syntax of Encoding\n   The syntax below is ABNF [RFC2234] except 'strings\
    \ of literals' MUST\n   be case sensitive. For example 'a' means lower case  'a'\
    \ and not\n   upper case 'A'.   In addition, SIGNED-BYTE and SIGNED-SHORT fields\n\
    \   are represented as '%x' values which show their range of values.\n  ipp-message\
    \ = ipp-request / ipp-response\n  ipp-request = version-number operation-id request-id\n\
    \           *(xxx-attributes-tag  xxx-attribute-sequence)\n           end-of-attributes-tag\
    \ data\n  ipp-response = version-number status-code request-id\n           *(xxx-attributes-tag\
    \ xxx-attribute-sequence)\n           end-of-attributes-tag data\n  xxx-attribute-sequence\
    \ = *compound-attribute\n  xxx-attributes-tag = operation-attributes-tag / job-attributes-tag\
    \ /\n        printer-attributes-tag / unsupported-attributes-tag\n  version-number\
    \ = major-version-number minor-version-number\n  major-version-number = SIGNED-BYTE\
    \  ; initially %d1\n  minor-version-number = SIGNED-BYTE  ; initially %d0\n  operation-id\
    \ = SIGNED-SHORT    ; mapping from model defined below\n  status-code = SIGNED-SHORT\
    \  ; mapping from model defined below\n  request-id = SIGNED-INTEGER ; whose value\
    \ is > 0\n  compound-attribute = attribute *additional-values\n  attribute = value-tag\
    \ name-length name value-length value\n  additional-values = value-tag zero-name-length\
    \ value-length value\n  name-length = SIGNED-SHORT    ; number of octets of 'name'\n\
    \  name = LALPHA *( LALPHA / DIGIT / \"-\" / \"_\" / \".\" )\n  value-length =\
    \ SIGNED-SHORT  ; number of octets of 'value'\n  value = OCTET-STRING\n  data\
    \ = OCTET-STRING\n  zero-name-length = %x00.00           ; name-length of 0\n\
    \  operation-attributes-tag =  %x01             ; tag of 1\n  job-attributes-tag\
    \   =  %x02                 ; tag of 2\n  printer-attributes-tag =  %x04     \
    \          ; tag of 4\n  unsupported-attributes-tag =  %x05          ; tag of\
    \ 5\n  end-of-attributes-tag = %x03                 ; tag of 3\n  value-tag =\
    \ %x10-FF\n  SIGNED-BYTE = BYTE\n  SIGNED-SHORT = 2BYTE\n  SIGNED-INTEGER = 4BYTE\n\
    \  DIGIT = %x30-39    ;  \"0\" to \"9\"\n  LALPHA = %x61-7A   ;  \"a\" to \"z\"\
    \n  BYTE = %x00-FF\n  OCTET-STRING = *BYTE\n   The syntax allows an xxx-attributes-tag\
    \ to be present when the xxx-\n   attribute-sequence that follows is empty. The\
    \ syntax is defined this\n   way to allow for the response of Get-Jobs where no\
    \ attributes are\n   returned for some job-objects.  Although it is RECOMMENDED\
    \ that the\n   sender not send an xxx-attributes-tag if there are no attributes\n\
    \   (except in the Get-Jobs response just mentioned), the receiver MUST\n   be\
    \ able to decode such syntax.\n"
- title: 3.3 Version-number
  contents:
  - "3.3 Version-number\n   The version-number MUST consist of a major and minor version-number,\n\
    \   each of which MUST be represented by a SIGNED-BYTE. The protocol\n   described\
    \ in this document MUST have a major version-number of 1\n   (0x01) and a minor\
    \ version-number of  0 (0x00).  The ABNF for these\n   two bytes MUST be %x01.00.\n"
- title: 3.4 Operation-id
  contents:
  - "3.4 Operation-id\n   Operation-ids are defined as enums in the model document.\
    \ An\n   operation-ids enum value MUST be encoded as a SIGNED-SHORT.\n   Note:\
    \ the values 0x4000 to 0xFFFF are reserved for private\n   extensions.\n"
- title: 3.5 Status-code
  contents:
  - "3.5 Status-code\n   Status-codes are defined as enums in the model document.\
    \ A status-\n   code enum value MUST be encoded as a SIGNED-SHORT.\n   The status-code\
    \ is an operation attribute in the model document. In\n   the protocol, the status-code\
    \ is in a special position, outside of\n   the operation attributes.\n   If an\
    \ IPP status-code is returned, then the HTTP Status-Code MUST be\n   200 (successful-ok).\
    \  With any other HTTP Status-Code value, the HTTP\n   response MUST NOT contain\
    \ an IPP message-body, and thus no IPP\n   status-code is returned.\n"
- title: 3.6 Request-id
  contents:
  - "3.6 Request-id\n   The request-id allows a client to match a response with a\
    \ request.\n   This mechanism is unnecessary in HTTP, but may be useful when\n\
    \   application/ipp entity bodies are used in another context.\n   The request-id\
    \ in a response MUST be the value of the request-id\n   received in the corresponding\
    \ request.  A client can set the\n   request-id in each request to a unique value\
    \ or a constant value,\n   such as 1, depending on what the client does with the\
    \ request-id\n   returned in the response. The value of the request-id MUST be\
    \ greater\n   than zero.\n"
- title: 3.7 Tags
  contents:
  - "3.7 Tags\n   There are two kinds of tags:\n      - delimiter tags: delimit major\
    \ sections of the protocol, namely\n        attributes and data\n      - value\
    \ tags: specify the type of each attribute value\n"
- title: 3.7.1 Delimiter Tags
  contents:
  - "3.7.1 Delimiter Tags\n   The following table specifies the values for the delimiter\
    \ tags:\n      Tag Value (Hex)   Delimiter\n      0x00              reserved\n\
    \      0x01              operation-attributes-tag\n      0x02              job-attributes-tag\n\
    \      0x03              end-of-attributes-tag\n      0x04              printer-attributes-tag\n\
    \      0x05              unsupported-attributes-tag\n      0x06-0x0e         reserved\
    \ for future delimiters\n      0x0F              reserved for future chunking-end-of-attributes-\n\
    \                         tag\n   When an xxx-attributes-tag occurs in the protocol,\
    \ it MUST mean that\n   zero or more following attributes up to the next delimiter\
    \ tag are\n   attributes belonging to group xxx as defined in the model document,\n\
    \   where xxx is operation, job, printer, unsupported.\n   Doing substitution\
    \ for xxx in the above paragraph, this means the\n   following. When an operation-attributes-tag\
    \ occurs in the protocol,\n   it MUST mean that the zero or more following attributes\
    \ up to the\n   next delimiter tag are operation attributes as defined in the\
    \ model\n   document.  When an job-attributes-tag occurs in the protocol, it MUST\n\
    \   mean that the zero or more following attributes up to the next\n   delimiter\
    \ tag are job attributes or job template attributes as\n   defined in the model\
    \ document.  When a printer-attributes-tag occurs\n   in the protocol, it MUST\
    \ mean that the zero or more following\n   attributes up to the next delimiter\
    \ tag are printer attributes as\n   defined in the model document. When an unsupported-attributes-tag\n\
    \   occurs in the protocol, it MUST mean that the zero or more following\n   attributes\
    \ up to the next delimiter tag are unsupported attributes as\n   defined in the\
    \ model document.\n   The operation-attributes-tag and end-of-attributes-tag MUST\
    \ each\n   occur exactly once in an operation. The operation-attributes-tag MUST\n\
    \   be the first tag delimiter, and the end-of-attributes-tag MUST be the\n  \
    \ last tag delimiter. If the operation has a document-content group,\n   the document\
    \ data in that group MUST follow the end-of-attributes-\n   tag.\n   Each of the\
    \  other three  xxx-attributes-tags defined above is\n   OPTIONAL in an operation\
    \ and each MUST occur at most once in an\n   operation, except for job-attributes-tag\
    \ in a Get-Jobs response which\n   may occur zero or more times.\n   The order\
    \ and presence of delimiter tags for each operation request\n   and each operation\
    \ response MUST be that defined in the model\n   document. For further details,\
    \ see section 3.9 \"(Attribute) Name\" and\n   section 9 \"Appendix A: Protocol\
    \ Examples\".\n   A Printer MUST treat the reserved delimiter tags differently\
    \ from\n   reserved value tags so that the Printer knows that there is an entire\n\
    \   attribute group that it doesn't understand as opposed to a single\n   value\
    \ that it doesn't understand.\n"
- title: 3.7.2 Value Tags
  contents:
  - "3.7.2 Value Tags\n   The remaining tables show values for the value-tag, which\
    \ is the\n   first octet of  an attribute. The value-tag specifies the type of\
    \ the\n   value of the attribute. The following table specifies the \"out-of-\n\
    \   band\" values for the value-tag.\n      Tag Value (Hex) Meaning\n      0x10\
    \            unsupported\n      0x11            reserved for future 'default'\n\
    \      0x12            unknown\n      0x13            no-value\n      Tag Value\
    \ (Hex) Meaning\n      0x14-0x1F       reserved for future \"out-of-band\" values.\n\
    \   The \"unsupported\" value MUST be used in the attribute-sequence of an\n \
    \  error response for those attributes which the printer does not\n   support.\
    \  The \"default\" value is reserved for future use of setting\n   value back\
    \ to their default value. The \"unknown\" value is used for\n   the value of a\
    \ supported attribute when its value is temporarily\n   unknown.  The \"no-value\"\
    \ value is used for a supported attribute to\n   which\n   no value has been assigned,\
    \ e.g. \"job-k-octets-supported\" has no\n   value if an implementation supports\
    \ this attribute, but an\n   administrator has not configured the printer to have\
    \ a limit.\n   The following table specifies the integer values for the value-tag:\n\
    \      Tag Value (Hex)  Meaning\n      0x20             reserved\n      0x21 \
    \            integer\n      0x22             boolean\n      0x23             enum\n\
    \      0x24-0x2F        reserved for future integer types\n   NOTE: 0x20 is reserved\
    \ for \"generic integer\" if it should ever be\n   needed.\n   The following table\
    \ specifies the octetString values for the value-\n   tag:\n      Tag Value (Hex)\
    \  Meaning\n      0x30             octetString with an  unspecified format\n \
    \     0x31             dateTime\n      0x32             resolution\n      0x33\
    \             rangeOfInteger\n      0x34             reserved for collection (in\
    \ the future)\n      0x35             textWithLanguage\n      0x36           \
    \  nameWithLanguage\n      0x37-0x3F        reserved for future octetString types\n\
    \   The following table specifies the character-string values for the\n   value-tag:\n\
    \      Tag Value (Hex)  Meaning\n      0x40             reserved\n      0x41 \
    \            textWithoutLanguage\n      0x42             nameWithoutLanguage\n\
    \      0x43             reserved\n      0x44             keyword\n      0x45 \
    \            uri\n      0x46             uriScheme\n      0x47             charset\n\
    \      0x48             naturalLanguage\n      Tag Value (Hex)  Meaning\n    \
    \  0x49             mimeMediaType\n      0x4A-0x5F        reserved for future\
    \ character string types\n   NOTE: 0x40 is reserved for \"generic character-string\"\
    \ if it should\n   ever be needed.\n   NOTE:  an attribute value always has a\
    \ type, which is explicitly\n   specified by its tag; one such tag value is \"\
    nameWithoutLanguage\".\n   An attribute's name has an implicit type, which is\
    \ keyword.\n   The values 0x60-0xFF are reserved for future types. There are no\n\
    \   values allocated for private extensions. A new type MUST be\n   registered\
    \ via the type 2 registration process [RFC2566].\n   The tag 0x7F is reserved\
    \ for extending types beyond the 255 values\n   available with a single byte.\
    \ A tag value of 0x7F MUST signify that\n   the first 4 bytes of the value field\
    \ are interpreted as the tag\n   value.  Note, this future extension doesn't affect\
    \ parsers that  are\n   unaware of this special tag. The tag is like any other\
    \ unknown tag,\n   and the value length specifies the length of a value which\
    \ contains a\n   value that the parser treats atomically.  All these 4 byte tag\
    \ values\n   are currently unallocated except that the values 0x40000000-\n  \
    \ 0x7FFFFFFF are reserved for experimental use.\n"
- title: 3.8 Name-Length
  contents:
  - "3.8 Name-Length\n   The name-length field MUST consist of a SIGNED-SHORT. This\
    \ field MUST\n   specify the number of octets in the name field which follows\
    \ the\n   name-length field, excluding the two bytes of the name-length field.\n\
    \   If a name-length field has a value of zero, the following name field\n   MUST\
    \ be empty, and the following value MUST be treated as an\n   additional value\
    \ for the preceding attribute. Within an attribute-\n   sequence, if two attributes\
    \ have the same name, the first occurrence\n   MUST be ignored. The zero-length\
    \ name is the only mechanism for\n   multi-valued attributes.\n"
- title: 3.9 (Attribute) Name
  contents:
  - "3.9 (Attribute) Name\n   Some operation elements are called parameters in the\
    \ model document\n   [RFC2566]. They MUST be encoded in a special position and\
    \ they MUST\n   NOT appear as an operation attributes.  These parameters are:\n\
    \      - \"version-number\": The parameter  named \"version-number\" in the\n\
    \        IPP model document MUST become the \"version-number\" field in the\n\
    \        operation layer request or response.\n      - \"operation-id\": The parameter\
    \ named \"operation-id\" in the IPP\n        model document MUST become the \"\
    operation-id\" field in the\n        operation layer request.\n      - \"status-code\"\
    : The parameter named \"status-code\" in the IPP\n        model document MUST\
    \ become the \"status-code\" field in the\n        operation layer response.\n\
    \      - \"request-id\": The parameter named \"request-id\" in the IPP model\n\
    \        document MUST become the \"request-id\" field in the operation\n    \
    \    layer request or response.\n   All Printer and Job objects are identified\
    \ by a Uniform Resource\n   Identifier (URI) [RFC2396] so that they can be persistently\
    \ and\n   unambiguously referenced.  The notion of a URI is a useful concept,\n\
    \   however, until the notion of URI is more stable (i.e.,  defined more\n   completely\
    \ and deployed more widely), it is expected that the URIs\n   used for IPP objects\
    \ will actually be URLs [RFC1738]  [RFC1808].\n   Since every URL is a specialized\
    \ form of a URI, even though the more\n   generic term URI is used throughout\
    \ the rest of this document, its\n   usage is intended to cover the more specific\
    \ notion of URL as well.\n   Some operation elements are encoded twice, once as\
    \ the request-URI on\n   the HTTP Request-Line and a second time as a REQUIRED\
    \ operation\n   attribute in the application/ipp entity.  These attributes are\
    \ the\n   target URI for the operation:\n      - \"printer-uri\": When the target\
    \ is a printer and the transport is\n        HTTP or HTTPS (for SSL3 [ssl]), the\
    \ target printer-uri defined\n        in each operation in the IPP model document\
    \ MUST be an operation\n        attribute called \"printer-uri\" and it MUST also\
    \ be specified\n        outside of  the operation layer as the request-URI on\
    \ the\n        Request-Line at the HTTP level.\n      - \"job-uri\": When the\
    \ target is a job and the transport is HTTP or\n        HTTPS (for SSL3), the\
    \ target job-uri of each operation in the\n        IPP model document MUST be\
    \ an operation attribute called \"job-\n        uri\" and it MUST also be specified\
    \ outside of  the operation\n        layer as the request-URI on the Request-Line\
    \ at the HTTP level.\n   Note: The target URI is included twice in an operation\
    \ referencing\n   the same IPP object, but the two URIs NEED NOT be literally\n\
    \   identical. One can be a relative URI and the other can be an absolute\n  \
    \ URI.  HTTP/1.1 allows clients to generate and send a relative URI\n   rather\
    \ than an absolute URI.  A relative URI identifies a resource\n   with the scope\
    \ of the HTTP server, but does not include scheme, host\n   or port.  The following\
    \ statements characterize how URLs should be\n   used in the mapping of IPP onto\
    \ HTTP/1.1:\n      1. Although potentially redundant, a client MUST supply the\
    \ target\n         of the operation both as an operation attribute and as a URI\
    \ at\n         the HTTP layer.  The rationale for this decision is to maintain\n\
    \         a consistent set of rules for mapping application/ipp to\n         possibly\
    \ many communication layers, even where URLs are not\n         used as the addressing\
    \ mechanism in the transport layer.\n      2. Even though these two URLs might\
    \ not be literally identical\n         (one being relative and the other being\
    \ absolute), they MUST\n         both reference the same IPP object.\n      3.\
    \ The URI in the HTTP layer is either relative or absolute and is\n         used\
    \ by the HTTP server to route the HTTP request to the\n         correct resource\
    \ relative to that HTTP server.  The HTTP server\n         need not be aware of\
    \ the URI within the operation request.\n      4. Once the HTTP server resource\
    \ begins to process the HTTP\n         request, it might get the reference to\
    \ the appropriate IPP\n         Printer object from either the HTTP URI (using\
    \ to the context\n         of the HTTP server for relative URLs) or from the URI\
    \ within\n         the operation request; the choice is up to the implementation.\n\
    \      5. HTTP URIs can be relative or absolute, but the target URI in\n     \
    \    the operation MUST be an absolute URI.\n   The model document arranges the\
    \ remaining attributes into groups for\n   each operation request and response.\
    \ Each such group MUST be\n   represented in the protocol by an xxx-attribute-sequence\
    \ preceded by\n   the appropriate xxx-attributes-tag (See the table below and\
    \ section 9\n   \"Appendix A:  Protocol Examples\"). In addition, the order of\
    \ these\n   xxx-attributes-tags and xxx-attribute-sequences in the protocol MUST\n\
    \   be the same as in the model document, but the order of attributes\n   within\
    \ each xxx-attribute-sequence MUST be unspecified. The table\n   below maps the\
    \ model document group name to xxx-attributes-sequence:\n   Model Document Group\
    \           xxx-attributes-sequence\n   Operation Attributes           operations-attributes-sequence\n\
    \   Job Template Attributes        job-attributes-sequence\n   Job Object Attributes\
    \          job-attributes-sequence\n   Unsupported Attributes         unsupported-attributes-sequence\n\
    \   Requested Attributes           job-attributes-sequence\n   Get-Job-Attributes)\n\
    \   Requested Attributes           printer-attributes-sequence\n   Get-Printer-Attributes)\n\
    \   Document Content               in a special position as described\n      \
    \                            above\n   If an operation contains attributes from\
    \ more than one job object\n   (e.g.  Get-Jobs response), the attributes from\
    \ each job object MUST\n   be in a separate job-attribute-sequence, such that\
    \ the attributes\n   from the ith job object are in the ith job-attribute-sequence.\
    \ See\n   Section 9 \"Appendix A: Protocol Examples\" for table showing the\n\
    \   application of the rules above.\n"
- title: 3.10 Value Length
  contents:
  - "3.10 Value Length\n   Each attribute value MUST be preceded by a SIGNED-SHORT,\
    \ which MUST\n   specify the number of octets in the value which follows this\
    \ length,\n   exclusive of the two bytes specifying the length.\n   For any of\
    \ the types represented by binary signed integers, the\n   sender MUST encode\
    \ the value in exactly four octets.\n   For any of the types represented by character-strings,\
    \ the sender\n   MUST encode the value with all the characters of the string and\n\
    \   without any padding characters.\n   If a value-tag contains an \"out-of-band\"\
    \ value, such as\n   \"unsupported\", the value-length MUST be 0 and the value\
    \ empty. The\n   value has no meaning when the value-tag has an \"out-of-band\"\
    \ value.\n   If a client receives a response with a nonzero value-length in this\n\
    \   case, it MUST ignore the value field. If a printer receives a request\n  \
    \ with a nonzero value-length in this case, it MUST reject the request.\n"
- title: 3.11 (Attribute) Value
  contents:
  - "3.11 (Attribute) Value\n   The syntax types and most of the details of their\
    \ representation are\n   defined in the IPP model document. The table below augments\
    \ the\n   information in the model document, and defines the syntax types from\n\
    \   the model document in terms of the 5 basic types defined in section 3\n  \
    \ \"Encoding of the Operation Layer\". The 5 types are US-ASCII-STRING,\n   LOCALIZED-STRING,\
    \ SIGNED-INTEGER, SIGNED-SHORT, SIGNED-BYTE, and\n   OCTET-STRING.\n"
- title: Syntax of Attribute  Encoding
  contents:
  - 'Syntax of Attribute  Encoding

    '
- title: Value
  contents:
  - 'Value

    '
- title: textWithoutLanguage, LOCALIZED-STRING.
  contents:
  - 'textWithoutLanguage, LOCALIZED-STRING.

    '
- title: nameWithoutLanguage
  contents:
  - 'nameWithoutLanguage

    '
- title: 'textWithLanguage     OCTET_STRING consisting of 4 fields:'
  contents:
  - "textWithLanguage     OCTET_STRING consisting of 4 fields:\n                 \
    \      a) a SIGNED-SHORT which is the number of octets\n                     \
    \     in the following field\n                       b) a value of type natural-language,\n\
    \                       c) a SIGNED-SHORT which is the number of octets\n    \
    \                      in the following field,\n                       d) a value\
    \ of type textWithoutLanguage.\n                      The length of a textWithLanguage\
    \ value MUST be 4\n                      + the value of field a + the value of\
    \ field c.\n"
- title: 'nameWithLanguage     OCTET_STRING consisting of 4 fields:'
  contents:
  - "nameWithLanguage     OCTET_STRING consisting of 4 fields:\n                 \
    \      a) a SIGNED-SHORT which is the number of octets\n                     \
    \     in the following field\n                       b) a value of type natural-language,\n\
    \                       c) a SIGNED-SHORT which is the number of octets\n    \
    \                      in the following field\n                       d) a value\
    \ of type nameWithoutLanguage.\n                      The length of a nameWithLanguage\
    \ value MUST be 4\n                      + the value of field a + the value of\
    \ field c.\n"
- title: charset,             US-ASCII-STRING.
  contents:
  - 'charset,             US-ASCII-STRING.

    '
- title: naturalLanguage,
  contents:
  - 'naturalLanguage,

    '
- title: mimeMediaType,
  contents:
  - 'mimeMediaType,

    '
- title: keyword, uri, and
  contents:
  - 'keyword, uri, and

    '
- title: uriScheme
  contents:
  - 'uriScheme

    '
- title: boolean              SIGNED-BYTE  where 0x00 is 'false' and 0x01 is
  contents:
  - "boolean              SIGNED-BYTE  where 0x00 is 'false' and 0x01 is\n       \
    \               'true'.\n"
- title: Syntax of Attribute  Encoding
  contents:
  - 'Syntax of Attribute  Encoding

    '
- title: Value
  contents:
  - 'Value

    '
- title: integer and enum     a SIGNED-INTEGER.
  contents:
  - 'integer and enum     a SIGNED-INTEGER.

    '
- title: dateTime             OCTET-STRING consisting of eleven octets whose
  contents:
  - "dateTime             OCTET-STRING consisting of eleven octets whose\n       \
    \               contents are defined by \"DateAndTime\" in RFC\n             \
    \         2579 [RFC2579].\n"
- title: resolution           OCTET_STRING consisting of nine octets of  2
  contents:
  - "resolution           OCTET_STRING consisting of nine octets of  2\n         \
    \             SIGNED-INTEGERs followed by a SIGNED-BYTE. The\n               \
    \       first SIGNED-INTEGER contains the value of cross\n                   \
    \   feed direction resolution. The second SIGNED-\n                      INTEGER\
    \ contains the value of feed direction\n                      resolution. The\
    \ SIGNED-BYTE contains the units\n                      value.\n"
- title: rangeOfInteger       Eight octets consisting of 2 SIGNED-INTEGERs.
  contents:
  - "rangeOfInteger       Eight octets consisting of 2 SIGNED-INTEGERs.\n        \
    \              The first SIGNED-INTEGER contains the lower\n                 \
    \     bound and the second SIGNED-INTEGER contains the\n                     \
    \ upper  bound.\n"
- title: 1setOf  X            Encoding according to the rules for an attribute
  contents:
  - "1setOf  X            Encoding according to the rules for an attribute\n     \
    \                 with more than 1 value.  Each value X is encoded\n         \
    \             according to the rules for encoding its type.\n"
- title: octetString          OCTET-STRING
  contents:
  - "octetString          OCTET-STRING\n   The type of the value in the model document\
    \ determines the encoding\n   in the value and the value of the value-tag.\n"
- title: 3.12 Data
  contents:
  - "3.12 Data\n   The data part MUST include any data required by the operation\n"
- title: 4. Encoding of Transport Layer
  contents:
  - "4. Encoding of Transport Layer\n   HTTP/1.1 [RFC2068] is the transport layer\
    \ for this protocol.\n   The operation layer has been designed with the assumption\
    \ that the\n   transport layer contains the following information:\n      - the\
    \ URI of the target job or printer operation\n      - the total length of the\
    \ data in the operation layer, either as a\n        single length or as a sequence\
    \ of chunks each with a length.\n   It is REQUIRED that a printer implementation\
    \ support HTTP over the\n   IANA assigned Well Known Port 631 (the IPP default\
    \ port), though a\n   printer implementation may support HTTP over some other\
    \ port as well.\n   In addition, a printer may have to support another port for\
    \ privacy\n   (See Section 5 \"Security Considerations\").\n   Note: even though\
    \ port 631 is the IPP default, port 80 remains the\n   default for an HTTP URI.\
    \  Thus a URI for a printer using port 631\n   MUST contain an explicit port,\
    \ e.g. \"http://forest:631/pinetree\".  An\n   HTTP URI for IPP with no explicit\
    \ port implicitly reference port 80,\n   which is consistent with the rules for\
    \ HTTP/1.1. Each HTTP operation\n   MUST use the POST method where the request-URI\
    \ is the object target\n   of the operation, and where the \"Content-Type\" of\
    \ the message-body in\n   each request and response MUST be \"application/ipp\"\
    . The message-body\n   MUST contain the operation layer and MUST have the syntax\
    \ described\n   in section 3.2 \"Syntax of Encoding\". A client implementation\
    \ MUST\n   adhere to the rules for a client described for HTTP1.1 [RFC2068]. A\n\
    \   printer (server) implementation MUST adhere the rules for an origin\n   server\
    \ described for HTTP1.1 [RFC2068].\n   An IPP server sends a response for each\
    \ request that it receives.  If\n   an IPP server detects an error, it MAY send\
    \ a response before it has\n   read the entire request.  If the HTTP layer of\
    \ the IPP server\n   completes processing the HTTP headers successfully, it MAY\
    \ send an\n   intermediate response, such as \"100 Continue\", with no IPP data\n\
    \   before sending the IPP response.  A client MUST expect such a variety\n  \
    \ of responses from an IPP server. For further information on HTTP/1.1,\n   consult\
    \ the HTTP documents [RFC2068].\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   The IPP Model document defines an IPP implementation\
    \ with \"privacy\"\n   as one that implements Secure Socket Layer Version 3 (SSL3).\
    \  Note:\n   SSL3 is not an IETF standards track specification. SSL3 meets the\n\
    \   requirements for IPP security with regards to features such as mutual\n  \
    \ authentication and privacy (via encryption). The IPP Model document\n   also\
    \ outlines IPP-specific security considerations and should be the\n   primary\
    \ reference for security implications with regards to the IPP\n   protocol itself.\n\
    \   The IPP Model document defines an IPP implementation with\n   \"authentication\"\
    \ as one that implements the standard way for\n   transporting IPP messages within\
    \ HTTP 1.1. These include the security\n   considerations outlined in the HTTP\
    \ 1.1 standard document [RFC2068]\n   and Digest Access Authentication extension\
    \ [RFC2069].\n   The current HTTP infrastructure supports HTTP over TCP port 80.\
    \ IPP\n   server implementations MUST offer IPP services using HTTP over the\n\
    \   IANA assigned Well Known Port 631 (the IPP default port). IPP server\n   implementations\
    \ may support other ports, in addition to this port.\n   See further discussion\
    \ of IPP security concepts in the model document\n   [RFC2566].\n"
- title: 5.1 Using IPP with SSL3
  contents:
  - "5.1 Using IPP with SSL3\n   An assumption is that the URI for a secure IPP Printer\
    \ object has\n   been found by means outside the IPP printing protocol, via a\n\
    \   directory service, web site or other means.\n   IPP provides a transparent\
    \ connection to SSL by calling the\n   corresponding URL (a https URI connects\
    \ by default to port 443).\n   However, the following functions can be provided\
    \ to ease the\n   integration of IPP with SSL during implementation:\n      connect\
    \ (URI), returns a status\n         \"connect\" makes an https call and returns\
    \ the immediate status\n         of the connection as returned by SSL to the user.\
    \ The status\n         values are explained in section 5.4.2 of the SSL document\n\
    \         [ssl].\n         A session-id may also be retained to later resume a\
    \ session.\n         The SSL handshake protocol may also require the cipher\n\
    \         specifications supported by the client, key length of the\n        \
    \ ciphers, compression methods, certificates, etc. These should\n         be sent\
    \ to the server and hence should be available to the IPP\n         client (although\
    \ as part of administration features).\n      disconnect (session)\n         to\
    \ disconnect a particular session.\n         The session-id available from the\
    \ \"connect\" could be used.\n      resume (session)\n         to reconnect using\
    \ a previous session-id.\n   The availability of this information as administration\
    \ features are\n   left for implementers, and need not be specified at this time.\n"
- title: 6. References
  contents:
  - "6. References\n   [RFC2278] Freed, N. and J. Postel, \"IANA Charset Registration\n\
    \             Procedures\", BCP 19, RFC 2278, January 1998.\n   [dpa]     ISO/IEC\
    \ 10175 Document Printing Application (DPA), June\n             1996.\n   [iana]\
    \    IANA Registry of Coded Character Sets:\n             ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets.\n\
    \   [ipp-iig] Hastings, Tom, et al., \"Internet Printing Protocol/1.0:\n     \
    \        Implementer's Guide\", Work in Progress.\n   [RFC2569] Herriot, R., Hastings,\
    \ T., Jacobs, N. and J. Martin,\n             \"Mapping between LPD and IPP Protocols\"\
    , RFC 2569, April\n             1999.\n   [RFC2566] deBry, R., Hastings, T., Herriot,\
    \ R., Isaacson, S. and P.\n             Powell, \"Internet Printing Protocol/1.0:\
    \ Model and\n             Semantics\", RFC 2566, April 1999.\n   [RFC2565] Herriot,\
    \ R., Butler, S., Moore, P., Tuner, R., \"Internet\n             Printing Protocol/1.0:\
    \ Encoding and Transport\", RFC 2565,\n             April 1999.\n   [RFC2568]\
    \ Zilles, S., \"Rationale for the Structure and Model and\n             Protocol\
    \ for the Internet Printing Protocol\", RFC 2568,\n             April 1999.\n\
    \   [RFC2567] Wright, D., \"Design Goals for an Internet Printing\n          \
    \   Protocol\", RFC 2567, April 1999.\n   [RFC822]  Crocker, D., \"Standard for\
    \ the Format of ARPA Internet Text\n             Messages\", STD 11, RFC 822,\
    \ August 1982.\n   [RFC1123] Braden, R., \"Requirements for Internet Hosts - Application\n\
    \             and Support\", STD 3, RFC 1123, October 1989.\n   [RFC1179] McLaughlin,\
    \ L. III, (editor), \"Line Printer Daemon\n             Protocol\" RFC 1179, August\
    \ 1990.\n   [RFC2223] Postel, J. and J. Reynolds, \"Instructions to RFC Authors\"\
    ,\n             RFC 2223, October 1997.\n   [RFC1738] Berners-Lee, T., Masinter,\
    \ L. and M. McCahill, \"Uniform\n             Resource Locators (URL)\", RFC 1738,\
    \ December 1994.\n   [RFC1759] Smith, R., Wright, F., Hastings, T., Zilles, S.\
    \ and J.\n             Gyllenskog, \"Printer MIB\", RFC 1759, March 1995.\n  \
    \ [RFC1766] Alvestrand, H., \" Tags for the Identification of\n             Languages\"\
    , RFC 1766, March 1995.\n   [RFC1808] Fielding, R., \"Relative Uniform Resource\
    \ Locators\", RFC\n             1808, June 1995.\n   [RFC2579] McCloghrie, K.,\
    \ Perkins, D. and J. Schoenwaelder, \"Textual\n             Conventions for SMIv2\"\
    , STD 58, RFC 2579, April 1999.\n   [RFC2046] Freed, N. and N. Borenstein, Multipurpose\
    \ Internet Mail\n             Extensions (MIME) Part Two: Media Types\", RFC 2046,\n\
    \             November 1996.\n   [RFC2048] Freed, N., Klensin J. and J. Postel.\
    \  Multipurpose Internet\n             Mail Extension (MIME) Part Four: Registration\
    \ Procedures\",\n             BCP 13, RFC 2048, November 1996.\n   [RFC2068] Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H. and T.\n             Berners-Lee, \"\
    Hypertext Transfer Protocol -- HTTP/1.1\", RFC\n             2068, January 1997.\n\
    \   [RFC2069] Franks, J., Hallam-Baker, P., Hostetler, J., Leach, P.,\n      \
    \       Luotonen, A., Sink, E. and L. Stewart, \"An Extension to\n           \
    \  HTTP: Digest Access Authentication\", RFC 2069, January\n             1997.\n\
    \   [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n         \
    \    Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2184] Freed,\
    \ N. and K. Moore, \"MIME Parameter Value and Encoded\n             Word Extensions:\
    \ Character Sets, Languages, and\n             Continuations\", RFC 2184, August\
    \ 1997.\n   [RFC2234] Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \             Specifications: ABNF\", RFC 2234. November 1997.\n   [RFC2396] Berners-Lee,\
    \ T., Fielding, R. and L. Masinter, \"Uniform\n             Resource Identifiers\
    \ (URI): Generic Syntax\", RFC 2396,\n             August 1998.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Robert Herriot (Editor)\n   Xerox Corporation\n   3400\
    \ Hillview Ave., Bldg #1\n   Palo Alto, CA 94304\n   Phone: 650-813-7696\n   Fax:\
    \  650-813-6860\n   EMail: rherriot@pahv.xerox.com\n   Sylvan Butler\n   Hewlett-Packard\n\
    \   11311 Chinden Blvd.\n   Boise, ID 83714\n   Phone: 208-396-6000\n   Fax: 208-396-3457\n\
    \   EMail: sbutler@boi.hp.com\n   Paul Moore\n   Microsoft\n   One Microsoft Way\n\
    \   Redmond, WA 98053\n   Phone: 425-936-0908\n   Fax: 425-93MS-FAX\n   EMail:\
    \ paulmo@microsoft.com\n   Randy Turner\n   Sharp Laboratories\n   5750 NW Pacific\
    \ Rim Blvd\n   Camas, WA 98607\n   Phone: 360-817-8456\n   Fax: 360-817-8436\n\
    \   EMail: rturner@sharplabs.com\n   IPP Mailing List:  ipp@pwg.org\n   IPP Mailing\
    \ List Subscription:  ipp-request@pwg.org\n   IPP Web Page:  http://www.pwg.org/ipp/\n"
- title: '8. Other Participants:'
  contents:
  - "8. Other Participants:\n   Chuck Adams - Tektronix          Harry Lewis - IBM\n\
    \   Ron Bergman - Dataproducts       Tony Liao - Vivid Image\n   Keith Carter\
    \ - IBM               David Manchala - Xerox\n   Angelo Caruso - Xerox       \
    \     Carl-Uno Manros - Xerox\n   Jeff Copeland - QMS              Jay Martin\
    \ - Underscore\n   Roger deBry - IBM                Larry Masinter - Xerox\n \
    \  Lee Farrell - Canon              Ira McDonald - High North Inc.\n   Sue Gleeson\
    \ - Digital            Bob Pentecost - Hewlett-Packard\n   Charles Gordon - Osicom\
    \          Patrick Powell - Astart\n                                    Technologies\n\
    \   Brian Grimshaw - Apple           Jeff Rackowitz - Intermec\n   Jerry Hadsell\
    \ - IBM              Xavier Riley - Xerox\n   Richard Hart - Digital         \
    \  Gary Roberts - Ricoh\n   Tom Hastings - Xerox             Stuart Rowley - Kyocera\n\
    \   Stephen Holmstead                Richard Schneider - Epson\n   Zhi-Hong Huang\
    \ - Zenographics    Shigern Ueda - Canon\n   Scott Isaacson - Novell         \
    \ Bob Von Andel - Allegro Software\n   Rich Lomicka - Digital           William\
    \ Wagner - Digital Products\n   David Kellerman - Northlake      Jasper Wong -\
    \ Xionics\n   Software\n   Robert Kline - TrueSpectra       Don Wright - Lexmark\n\
    \   Dave Kuntz - Hewlett-Packard     Rick Yardumian - Xerox\n   Takami Kurono\
    \ - Brother          Lloyd Young - Lexmark\n   Rich Landau - Digital         \
    \   Peter Zehler - Xerox\n   Greg LeClair - Epson             Frank Zhao - Panasonic\n\
    \                                    Steve Zilles - Adobe\n"
- title: '9. Appendix A: Protocol Examples'
  contents:
  - '9. Appendix A: Protocol Examples

    '
- title: 9.1 Print-Job Request
  contents:
  - "9.1 Print-Job Request\n   The following is an example of a Print-Job request\
    \ with job-name,\n   copies, and sides specified. The \"ipp-attribute-fidelity\"\
    \ attribute\n   is set to 'true' so that the print request will fail if the \"\
    copies\"\n   or the \"sides\" attribute are not supported or their values are\
    \ not\n   supported.\n Octets          Symbolic Value                Protocol\
    \ field\n 0x0100          1.0                           version-number\n 0x0002\
    \          Print-Job                     operation-id\n 0x00000001      1    \
    \                         request-id\n 0x01            start operation-attributes\
    \    operation-attributes-tag\n 0x47            charset type                 \
    \ value-tag\n 0x0012                                        name-length\n attributes-\
    \     attributes-charset            name\n charset\n 0x0008                  \
    \                      value-length\n us-ascii        US-ASCII               \
    \       value\n 0x48            natural-language type         value-tag\n 0x001B\
    \                                        name-length\n attributes-     attributes-natural-language\
    \   name\n natural-\n language\n 0x0005                                      \
    \  value-length\n en-us           en-US                         value\n 0x45 \
    \           uri type                      value-tag\n 0x000B                 \
    \                       name-length\n printer-uri     printer-uri            \
    \       name\n 0x001A                                        value-length\n http://forest:\
    \  printer pinetree              value\n 631/pinetree\n 0x42            nameWithoutLanguage\
    \ type      value-tag\n 0x0008                                        name-length\n\
    \ job-name        job-name                      name\n 0x0006                \
    \                        value-length\n foobar          foobar               \
    \         value\n 0x22            boolean type                  value-tag\n 0x16\
    \                                          name-length\n ipp-attribute-  ipp-attribute-fidelity\
    \        name\n fidelity\n 0x01                                          value-length\n\
    \ 0x01            true                          value\n 0x02            start\
    \ job-attributes          job-attributes-tag\n 0x21            integer type  \
    \                value-tag\n 0x0006                                        name-length\n\
    \ copies          copies                        name\n 0x0004                \
    \                        value-length\n 0x00000014      20                   \
    \         value\n 0x44            keyword type                  value-tag\n 0x0005\
    \                                        name-length\n sides           sides \
    \                        name\n 0x0013                                       \
    \ value-length\n two-sided-      two-sided-long-edge           value\n long-edge\n\
    \ 0x03            end-of-attributes             end-of-attributes-tag\n %!PS...\
    \         <PostScript>                  data\n"
- title: 9.2 Print-Job Response (successful)
  contents:
  - "9.2 Print-Job Response (successful)\n   Here is an example of a successful Print-Job\
    \ response to the previous\n   Print-Job request.  The printer supported the \"\
    copies\" and \"sides\"\n   attributes and their supplied values.  The status code\
    \ returned is '\n   successful-ok'.\n Octets            Symbolic Value       \
    \       Protocol field\n 0x0100            1.0                         version-number\n\
    \ 0x0000            successful-ok               status-code\n 0x00000001     \
    \   1                           request-id\n 0x01              start operation-attributes\
    \  operation-attributes-tag\n 0x47              charset type                value-tag\n\
    \ 0x0012                                        name-length\n attributes-    \
    \   attributes-charset          name\n charset\n 0x0008                      \
    \                  value-length\n us-ascii          US-ASCII                 \
    \   value\n 0x48              natural-language type       value-tag\n 0x001B \
    \                                       name-length\n attributes-       attributes-natural-\
    \         name\n natural-language  language\n 0x0005                         \
    \               value-length\n en-us             en-US                       value\n\
    \ 0x41              textWithoutLanguage type    value-tag\n 0x000E           \
    \                             name-length\n status-message    status-message \
    \             name\n 0x000D                                        value-length\n\
    \ successful-ok     successful-ok               value\n 0x02              start\
    \ job-attributes        job-attributes-tag\n 0x21              integer       \
    \              value-tag\n 0x0006                                        name-length\n\
    \ Octets            Symbolic Value              Protocol field\n job-id      \
    \      job-id                      name\n 0x0004                             \
    \           value-length\n 147               147                         value\n\
    \ 0x45              uri type                    value-tag\n 0x0007           \
    \                             name-length\n job-uri           job-uri        \
    \             name\n 0x001E                                        value-length\n\
    \ http://forest:63  job 123 on pinetree         value\n 1/pinetree/123\n 0x42\
    \              nameWithoutLanguage type    value-tag\n 0x0009                \
    \                        name-length\n job-state         job-state           \
    \        name\n 0x0004                                        value-length\n 0x0003\
    \            pending                     value\n 0x03              end-of-attributes\
    \           end-of-attributes-tag\n"
- title: 9.3 Print-Job Response (failure)
  contents:
  - "9.3 Print-Job Response (failure)\n   Here is an example of an unsuccessful Print-Job\
    \ response to the\n   previous Print-Job request. It fails because, in this case,\
    \ the\n   printer does not support the \"sides\" attribute and because the value\n\
    \   '20' for the \"copies\" attribute is not supported. Therefore, no job\n  \
    \ is created, and neither a \"job-id\" nor a \"job-uri\" operation\n   attribute\
    \ is returned. The error code returned is 'client-error-\n   attributes-or-values-not-supported'\
    \ (0x040B).\n Octets        Symbolic Value                Protocol field\n 0x0100\
    \        1.0                           version-number\n 0x040B        client-error-attributes-or-\
    \   status-code\n               values-not-supported\n 0x00000001    1       \
    \                      request-id\n 0x01          start operation-attributes \
    \   operation-attribute tag\n 0x47          charset type                  value-tag\n\
    \ 0x0012                                      name-length\n attributes-   attributes-charset\
    \            name\n charset\n 0x0008                                      value-length\n\
    \ us-ascii      US-ASCII                      value\n 0x48          natural-language\
    \ type         value-tag\n 0x001B                                      name-length\n\
    \ attributes-   attributes-natural-language   name\n natural-\n language\n 0x0005\
    \                                      value-length\n Octets            Symbolic\
    \ Value              Protocol field\n en-us         en-US                    \
    \     value\n 0x41          textWithoutLanguage type      value-tag\n 0x000E \
    \                                     name-length\n status-       status-message\
    \                name\n message\n 0x002F                                     \
    \ value-length\n client-error- client-error-attributes-or-   value\n attributes-\
    \   values-not-supported\n or-values-\n not-supported\n 0x05          start unsupported-attributes\
    \  unsupported-attributes tag\n 0x21          integer type                  value-tag\n\
    \ 0x0006                                      name-length\n copies        copies\
    \                        name\n 0x0004                                      value-length\n\
    \ 0x00000014    20                            value\n 0x10          unsupported\
    \  (type)           value-tag\n 0x0005                                      name-length\n\
    \ sides         sides                         name\n 0x0000                  \
    \                    value-length\n 0x03          end-of-attributes          \
    \   end-of-attributes-tag\n"
- title: 9.4 Print-Job Response (success with attributes ignored)
  contents:
  - "9.4 Print-Job Response (success with attributes ignored)\n   Here is an example\
    \ of a successful Print-Job response to a Print-Job\n   request like the previous\
    \ Print-Job request, except that the value of\n   'ipp-attribute-fidelity' is\
    \ false. The print request succeeds, even\n   though, in this case, the printer\
    \ supports neither the \"sides\"\n   attribute nor the value '20' for the \"copies\"\
    \ attribute. Therefore, a\n   job is created, and both a \"job-id\" and a \"job-uri\"\
    \ operation\n   attribute are returned. The unsupported attributes are also returned\n\
    \   in an Unsupported Attributes Group. The error code returned is '\n   successful-ok-ignored-or-substituted-attributes'\
    \ (0x0001).\n Octets            Symbolic Value              Protocol field\n 0x0100\
    \            1.0                         version-number\n 0x0001            successful-ok-ignored-or-\
    \   status-code\n                   substituted-attributes\n 0x00000001      \
    \  1                           request-id\n 0x01              start operation-attributes\
    \  operation-attributes-tag\n 0x47              charset type                value-tag\n\
    \ 0x0012                                        name-length\n attributes-    \
    \   attributes-charset          name\n charset\n 0x0008                      \
    \                  value-length\n Octets            Symbolic Value           \
    \   Protocol field\n us-ascii          US-ASCII                    value\n 0x48\
    \              natural-language type       value-tag\n 0x001B                \
    \                        name-length\n attributes-       attributes-natural- \
    \        name\n natural-language  language\n 0x0005                          \
    \              value-length\n en-us             en-US                       value\n\
    \ 0x41              textWithoutLanguage type    value-tag\n 0x000E           \
    \                             name-length\n status-message    status-message \
    \             name\n 0x002F                                        value-length\n\
    \ successful-ok-    successful-ok-ignored-or-   value\n ignored-or-       substituted-attributes\n\
    \ substituted-\n attributes\n 0x05              start unsupported-          unsupported-attributes\n\
    \                   attributes                  tag\n 0x21              integer\
    \ type                value-tag\n 0x0006                                     \
    \   name-length\n copies            copies                      name\n 0x0004\
    \                                        value-length\n 0x00000014        20 \
    \                         value\n 0x10              unsupported  (type)      \
    \   value-tag\n 0x0005                                        name-length\n sides\
    \             sides                       name\n 0x0000                      \
    \                  value-length\n 0x02              start job-attributes     \
    \   job-attributes-tag\n 0x21              integer                     value-tag\n\
    \ 0x0006                                        name-length\n job-id         \
    \   job-id                      name\n 0x0004                                \
    \        value-length\n 147               147                         value\n\
    \ 0x45              uri type                    value-tag\n 0x0007           \
    \                             name-length\n job-uri           job-uri        \
    \             name\n 0x001E                                        value-length\n\
    \ http://forest:63  job 123 on pinetree         value\n 1/pinetree/123\n 0x42\
    \              nameWithoutLanguage type    value-tag\n 0x0009                \
    \                        name-length\n job-state         job-state           \
    \        name\n 0x0004                                        value-length\n 0x0003\
    \            pending                     value\n 0x03              end-of-attributes\
    \           end-of-attributes-tag\n"
- title: 9.5 Print-URI Request
  contents:
  - "9.5 Print-URI Request\n   The following is an example of Print-URI request with\
    \ copies and\n   job-name parameters:\n Octets         Symbolic Value        \
    \       Protocol field\n 0x0100         1.0                          version-number\n\
    \ Octets         Symbolic Value               Protocol field\n 0x0003        \
    \ Print-URI                    operation-id\n 0x00000001     1               \
    \             request-id\n 0x01           start operation-attributes   operation-attributes-tag\n\
    \ 0x47           charset type                 value-tag\n 0x0012             \
    \                         name-length\n attributes-    attributes-charset    \
    \       name\n charset\n 0x0008                                      value-length\n\
    \ us-ascii       US-ASCII                     value\n 0x48           natural-language\
    \ type        value-tag\n 0x001B                                      name-length\n\
    \ attributes-    attributes-natural-language  name\n natural-\n language\n 0x0005\
    \                                      value-length\n en-us          en-US   \
    \                     value\n 0x45           uri type                     value-tag\n\
    \ 0x000B                                      name-length\n printer-uri    printer-uri\
    \                  name\n 0x001A                                      value-length\n\
    \ http://forest  printer pinetree             value\n :631/pinetree\n 0x45   \
    \        uri type                     value-tag\n 0x000C                     \
    \                 name-length\n document-uri   document-uri                 name\n\
    \ 0x11                                        value-length\n ftp://foo.com  ftp://foo.com/foo\
    \            value\n /foo\n 0x42           nameWithoutLanguage type     value-tag\n\
    \ 0x0008                                      name-length\n job-name       job-name\
    \                     name\n 0x0006                                      value-length\n\
    \ foobar         foobar                       value\n 0x02           start job-attributes\
    \         job-attributes-tag\n 0x21           integer type                 value-tag\n\
    \ 0x0006                                      name-length\n copies         copies\
    \                       name\n 0x0004                                      value-length\n\
    \ 0x00000001     1                            value\n 0x03           end-of-attributes\
    \            end-of-attributes-tag\n"
- title: 9.6 Create-Job Request
  contents:
  - "9.6 Create-Job Request\n   The following is an example of Create-Job request\
    \ with no parameters\n   and no attributes:\n Octets         Symbolic Value  \
    \            Protocol field\n 0x0100         1.0                         version-number\n\
    \ 0x0005         Create-Job                  operation-id\n 0x00000001     1 \
    \                          request-id\n 0x01           start operation-attributes\
    \  operation-attributes-tag\n 0x47           charset type                value-tag\n\
    \ 0x0012                                     name-length\n Octets         Symbolic\
    \ Value              Protocol field\n attributes-    attributes-charset      \
    \    name\n charset\n 0x0008                                     value-length\n\
    \ us-ascii       US-ASCII                    value\n 0x48           natural-language\
    \ type       value-tag\n 0x001B                                     name-length\n\
    \ attributes-    attributes-natural-language name\n natural-\n language\n 0x0005\
    \                                     value-length\n en-us          en-US    \
    \                   value\n 0x45           uri type                    value-tag\n\
    \ 0x000B                                     name-length\n printer-uri    printer-uri\
    \                 name\n 0x001A                                     value-length\n\
    \ http://forest: printer pinetree            value\n 631/pinetree\n 0x03     \
    \      end-of-attributes           end-of-attributes-tag\n"
- title: 9.7 Get-Jobs Request
  contents:
  - "9.7 Get-Jobs Request\n   The following is an example of Get-Jobs request with\
    \ parameters but\n   no attributes:\n Octets           Symbolic Value        \
    \       Protocol field\n 0x0100           1.0                          version-number\n\
    \ 0x000A           Get-Jobs                     operation-id\n 0x00000123    \
    \   0x123                        request-id\n 0x01             start operation-attributes\
    \   operation-attributes-tag\n 0x47             charset type                 value-tag\n\
    \ Octets           Symbolic Value               Protocol field\n 0x0012      \
    \                                  name-length\n attributes-      attributes-charset\
    \           name\n charset\n 0x0008                                        value-length\n\
    \ us-ascii         US-ASCII                     value\n 0x48             natural-language\
    \ type        value-tag\n 0x001B                                        name-length\n\
    \ attributes-      attributes-natural-language  name\n natural-\n language\n 0x0005\
    \                                        value-length\n en-us            en-US\
    \                        value\n 0x45             uri type                   \
    \  value-tag\n 0x000B                                        name-length\n printer-uri\
    \      printer-uri                  name\n 0x001A                            \
    \            value-length\n http://forest:6  printer pinetree             value\n\
    \ 31/pinetree\n 0x21             integer type                 value-tag\n 0x0005\
    \                                        name-length\n limit            limit\
    \                        name\n 0x0004                                       \
    \ value-length\n 0x00000032       50                           value\n 0x44  \
    \           keyword type                 value-tag\n 0x0014                  \
    \                      name-length\n requested-       requested-attributes   \
    \      name\n attributes\n 0x0006                                        value-length\n\
    \ job-id           job-id                       value\n 0x44             keyword\
    \ type                 value-tag\n 0x0000           additional value         \
    \    name-length\n 0x0008                                        value-length\n\
    \ job-name         job-name                     value\n 0x44             keyword\
    \ type                 value-tag\n 0x0000           additional value         \
    \    name-length\n 0x000F                                        value-length\n\
    \ document-format  document-format              value\n 0x03             end-of-attributes\
    \            end-of-attributes-tag\n"
- title: 9.8 Get-Jobs Response
  contents:
  - "9.8 Get-Jobs Response\n   The following is an of Get-Jobs response from previous\
    \ request with 3\n   jobs. The Printer returns no information about the second\
    \ job\n   (because of security reasons):\n Octets           Symbolic Value   \
    \             Protocol field\n 0x0100           1.0                          \
    \ version-number\n 0x0000           successful-ok                 status-code\n\
    \ 0x00000123       0x123                         request-id (echoed\n        \
    \                                        back)\n 0x01             start operation-attributes\
    \    operation-attribute-tag\n 0x47             charset type                 \
    \ value-tag\n 0x0012                                         name-length\n attributes-\
    \      attributes-charset            name\n charset\n 0x000A                 \
    \                        value-length\n ISO-8859-1       ISO-8859-1          \
    \          value\n 0x48             natural-language type         value-tag\n\
    \ 0x001B                                         name-length\n attributes-   \
    \   attributes-natural-language   name\n natural-\n language\n 0x0005        \
    \                                 value-length\n en-us            en-US      \
    \                   value\n 0x41             textWithoutLanguage type      value-tag\n\
    \ 0x000E                                         name-length\n status-message\
    \   status-message                name\n 0x000D                              \
    \           value-length\n successful-ok    successful-ok                 value\n\
    \ 0x02             start job-attributes (1st     job-attributes-tag\n        \
    \          object)\n 0x21             integer type                  value-tag\n\
    \ 0x0006                                         name-length\n job-id        \
    \   job-id                        name\n 0x0004                              \
    \           value-length\n 147              147                           value\n\
    \ 0x36             nameWithLanguage              value-tag\n 0x0008          \
    \                               name-length\n job-name         job-name      \
    \                name\n 0x000C                                         value-length\n\
    \ 0x0005                                         sub-value-length\n fr-ca    \
    \        fr-CA                         value\n 0x0003                        \
    \                 sub-value-length\n fou              fou                    \
    \       name\n 0x02             start job-attributes (2nd     job-attributes-tag\n\
    \                  object)\n 0x02             start job-attributes (3rd     job-attributes-tag\n\
    \                  object)\n 0x21             integer type                  value-tag\n\
    \ 0x0006                                         name-length\n job-id        \
    \   job-id                        name\n 0x0004                              \
    \           value-length\n Octets           Symbolic Value                Protocol\
    \ field\n 148              148                           value\n 0x36        \
    \     nameWithLanguage              value-tag\n 0x0008                       \
    \                  name-length\n job-name         job-name                   \
    \   name\n 0x0012                                         value-length\n 0x0005\
    \                                         sub-value-length\n de-CH           \
    \ de-CH                         value\n 0x0009                               \
    \          sub-value-length\n isch guet        isch guet                     name\n\
    \ 0x03             end-of-attributes             end-of-attributes-tag\n"
- title: '10. Appendix C: Registration of MIME Media Type Information for'
  contents:
  - "10. Appendix C: Registration of MIME Media Type Information for\n    \"application/ipp\"\
    \n   This appendix contains the information that IANA requires for\n   registering\
    \ a MIME media type.  The information following this\n   paragraph will be forwarded\
    \ to IANA to register application/ipp whose\n   contents are defined in Section\
    \ 3 \"Encoding of the Operation Layer\"\n   in this document:\n   MIME type name:\
    \ application\n   MIME subtype name: ipp\n   A Content-Type of \"application/ipp\"\
    \ indicates an Internet Printing\n   Protocol message body (request or response).\
    \ Currently there is one\n   version: IPP/1.0, whose syntax is described in Section\
    \ 3 \"Encoding of\n   the Operation Layer\" of [RFC2565], and whose semantics\
    \ are described\n   in [RFC2566].\n   Required parameters:  none\n   Optional\
    \ parameters:  none\n   Encoding considerations:\n   IPP/1.0 protocol requests/responses\
    \ MAY contain long lines and ALWAYS\n   contain binary data (for example attribute\
    \ value lengths).\n   Security considerations:\n   IPP/1.0 protocol requests/responses\
    \ do not introduce any security\n   risks not already inherent in the underlying\
    \ transport protocols.\n   Protocol mixed-version interworking rules in [RFC2566]\
    \ as well as\n   protocol encoding rules in [RFC2565] are complete and unambiguous.\n\
    \   Interoperability considerations:\n   IPP/1.0 requests (generated by clients)\
    \ and responses (generated by\n   servers) MUST comply with all conformance requirements\
    \ imposed by the\n   normative specifications [RFC2566] and [RFC2565]. Protocol\
    \ encoding\n   rules specified in [RFC2565] are comprehensive, so that\n   interoperability\
    \ between conforming implementations is guaranteed\n   (although support for specific\
    \ optional features is not ensured).\n   Both the \"charset\" and \"natural-language\"\
    \ of all IPP/1.0 attribute\n   values which are a LOCALIZED-STRING  are explicit\
    \ within IPP protocol\n   requests/responses (without recourse to any external\
    \ information in\n   HTTP, SMTP, or other message transport headers).\n   Published\
    \ specification:\n   [RFC2566] Isaacson, S., deBry, R., Hastings, T., Herriot,\
    \ R. and P.\n             Powell, \"Internet Printing Protocol/1.0: Model and\n\
    \             Semantics\" RFC 2566, April 1999.\n   [RFC2565] Herriot, R., Butler,\
    \ S., Moore, P., Tuner, R., \"Internet\n             Printing Protocol/1.0: Encoding\
    \ and Transport\", RFC 2565,\n             April 1999.\n   Applications which\
    \ use this media type:\n   Internet Printing Protocol (IPP) print clients and\
    \ print servers,\n   communicating using HTTP/1.1 (see [RFC2565]), SMTP/ESMTP,\
    \ FTP, or\n   other transport protocol. Messages of type \"application/ipp\" are\n\
    \   self-contained and transport-independent, including \"charset\" and\n   \"\
    natural-language\" context for any LOCALIZED-STRING value.\n   Person & email\
    \ address to contact for further information:\n   Scott A. Isaacson\n   Novell,\
    \ Inc.\n   122 E 1700 S\n   Provo, UT 84606\n   Phone: 801-861-7366\n   Fax: 801-861-4025\n\
    \   Email: sisaacson@novell.com\n   or\n   Robert Herriot (Editor)\n   Xerox Corporation\n\
    \   3400 Hillview Ave., Bldg #1\n   Palo Alto, CA 94304\n   Phone: 650-813-7696\n\
    \   Fax:  650-813-6860\n   EMail: rherriot@pahv.xerox.com\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
