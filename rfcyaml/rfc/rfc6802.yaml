- title: __initial_text__
  contents:
  - ''
- title: Ericsson Two-Way Active Measurement Protocol (TWAMP) Value-Added Octets
  contents:
  - 'Ericsson Two-Way Active Measurement Protocol (TWAMP) Value-Added Octets

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo describes an extension to the Two-Way Active Measurement\n\
    \   Protocol (TWAMP).  Specifically, it extends the TWAMP-Test protocol,\n   which\
    \ identifies and manages packet trains, in order to measure\n   capacity metrics\
    \ like the available path capacity, tight section\n   capacity, and UDP delivery\
    \ rate in the forward and reverse path\n   directions.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It has been approved for\
    \ publication by the Internet\n   Engineering Steering Group (IESG).  Not all\
    \ documents approved by the\n   IESG are a candidate for any level of Internet\
    \ Standard; see Section\n   2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6802.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Requirements Language ......................................3\n  \
    \ 2. Purpose and Scope ...............................................3\n   3.\
    \ Capacity Measurement Principles .................................4\n   4. TWAMP-Control\
    \ Extensions ........................................5\n      4.1. Additional\
    \ Considerations ..................................6\n   5. Extended TWAMP-Test\
    \ .............................................6\n      5.1. Sender Behavior ............................................6\n\
    \           5.1.1. Packet Timings ......................................7\n  \
    \         5.1.2. Session-Sender Packet Format ........................7\n    \
    \  5.2. Reflector Behavior ........................................12\n      \
    \     5.2.1. Session-Reflector Packet Format ....................13\n      5.3.\
    \ Additional Considerations .................................13\n   6. Experiments\
    \ ....................................................14\n   7. Security Considerations\
    \ ........................................14\n   8. Acknowledgements ...............................................14\n\
    \   9. References .....................................................15\n  \
    \    9.1. Normative References ......................................15\n    \
    \  9.2. Informative References ....................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The notion of embedding a number of meaningful fields in\
    \ the padding\n   octets has been established as a viable methodology for carrying\n\
    \   additional information within the TWAMP-Test protocol running between\n  \
    \ a Session-Sender and a Session-Reflector [RFC5357] [RFC6038].\n   This memo\
    \ describes an optional extension to the Two-Way Active\n   Measurement Protocol\
    \ (TWAMP) [RFC5357].  It is called the Ericsson\n   TWAMP Value-Added Octets feature.\
    \  This memo defines version 1.\n   This feature enables the controller host to\
    \ measure capacity metrics\n   like the IP-type-P available path capacity (APC)\
    \ [RFC5136], IP-layer\n   tight section capacity (TSC) [Y1540], and UDP delivery\
    \ rate on both\n   forward and reverse paths using a single TWAMP test session.\
    \  The\n   actual method to calculate the APC, TSC, or the UDP delivery rate\n\
    \   from packet-level performance data is not discussed in this memo.\n   The\
    \ Valued-Added Octets feature consists of new behaviors for the\n   Session-Sender\
    \ and Session-Reflector and a set of value-added octets\n   of information that\
    \ are placed at the beginning of the Packet Padding\n   [RFC5357] or immediately\
    \ after the Server Octets in the Packet\n   Padding (to be reflected) [RFC6038]\
    \ by the Session-Sender and are\n   reflected or returned by the Session-Reflector.\
    \  The length of the\n   value-added octets in version 1 is 10 octets.  The Valued-Added\n\
    \   Octets feature does not change the basic roles and functions of the\n   TWAMP\
    \ hosts, which are still responsible to include timestamp(s) and\n   sequence\
    \ number(s) in the test packets.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 2.  Purpose and Scope
  contents:
  - "2.  Purpose and Scope\n   The purpose of this memo is to describe the Ericsson\
    \ TWAMP Valued-\n   Added Octets feature (version 1) for TWAMP [RFC5357].\n  \
    \ The scope of the memo is limited to specifications of the following\n   enhancements:\n\
    \   o  The definition of a structure for embedding a sequence of value-\n    \
    \  added fields at the beginning of the Packet Padding [RFC5357] or\n      Packet\
    \ Padding (to be reflected) [RFC6038] in the TWAMP-Test\n      packets\n   o \
    \ The definition of new Session-Sender and Session-Reflector\n      behaviors\n\
    \   The motivation for this feature is to enable the measurement of\n   capacity\
    \ metrics on both the forward and reverse paths using a single\n   TWAMP test\
    \ session.  Multiple TWAMP test sessions between a\n   controller and a responder\
    \ with different Diffserv Code Points\n   (DSCPs) may also be used to evaluate\
    \ the QoS impacts on the capacity\n   metrics.\n   This memo captures the prototype\
    \ presented and demonstrated at IETF\n   80.  It may be used as a reference for\
    \ future work or may be used\n   during benchmark analysis to compare the accuracy\
    \ or performance of\n   the available path capacity estimates under various condition\
    \ or use\n   cases.\n   This memo does not extend the standard modes of operation\
    \ through\n   assignment of a new value in the Modes field (see Section 3.1 of\n\
    \   [RFC4656] for the format of the Server Greeting message).  This memo\n   does\
    \ not define a vendor-specific or experimental mode since the\n   Modes field\
    \ as currently defined does not explicitly reserve a value\n   or range of values\
    \ for this purpose.\n   This memo assumes the TWAMP controller is capable to send\
    \ test\n   packets with value-added padding octets and the TWAMP responder is\n\
    \   configured to interpret the value-added padding octets embedded in\n   each\
    \ TWAMP-Test packet.  Bootstrapping such behavior at the TWAMP\n   responder is\
    \ implementation specific.  By default, the feature MUST\n   be disabled on the\
    \ TWAMP host.  The Value-Added Octets feature MUST\n   be deployed in an environment\
    \ where both controller and responder are\n   managed by the same administrative\
    \ entity and such entity has\n   established an agreement to operate the Value-Added\
    \ Octets feature\n   between the pair of hosts or between specific UDP endpoints\
    \ between\n   the pair of hosts.  See Sections 4 and 5.3 for additional\n   considerations.\n\
    \   The Value-Added Octets Version 1 feature is intended to work in\n   conjunction\
    \ with any TWAMP modes.  When the Server and Control-Client\n   are configured\
    \ or have agreed to use the Value-Added Octets Version 1\n   feature, then the\
    \ Control-Client, the Server, the Session-Sender, and\n   the Session-Reflector\
    \ must all conform to the requirements of that\n   feature, as identified below.\n"
- title: 3.  Capacity Measurement Principles
  contents:
  - "3.  Capacity Measurement Principles\n   Most capacity estimation methods for\
    \ APC [RRBNC] [PDM] [ENHJMMB]\n   [SBW] and for UDP delivery rate need to send\
    \ and receive packets in\n   groups, called \"packet trains\" or simply \"trains\"\
    .  Each train is\n   sent at a specific transmission rate in a given direction.\
    \  These\n   trains must be identified within each bidirectional test session\n\
    \   stream.\n   The first measurement principle is to send multiple trains within\
    \ a\n   test session stream from one IP node to another IP node in order to\n\
    \   estimate the APC, TSC, or UDP delivery rate in the forward direction.\n  \
    \ Each train consists of a group of test packets that are separated\n   from each\
    \ other by a packet interval, as shown in the figure below.\n   The packet interval\
    \ is measured using either the first bit or the\n   last bit of two consecutive\
    \ packets.\n         tt                      tt                      tt\n   |<---------->|\
    \          |<---------->|          |<---------->|\n   |            |         \
    \ |            |          |            |\n   +------------+          +------------+\
    \          +------------+\n   |  Packet 1  |          |  Packet 2  |         \
    \ |  Packet 3  |\n   +------------+          +------------+          +------------+\n\
    \   |                       |                       |\n   |<--------------------->|<--------------------->|\n\
    \       packet interval 1       packet interval 2\n   The test packet size and\
    \ interval between consecutive packets for\n   each train sent by the Session-Sender\
    \ and reflected by the Session-\n   Reflector MUST be calculated and determined\
    \ by the controller or an\n   application or entity communicating with the controller.\
    \  The packet\n   size and interval MAY vary within a train and/or between trains.\n\
    \   Determination of the packet size and interval is implementation\n   specific.\n\
    \   The transmission time tt to send one packet (i.e., determined by the\n   interface\
    \ speed and the IP packet size) is also shown in the figure\n   above.  Observe\
    \ that the packet interval MUST be larger than or equal\n   to tt.\n   At the\
    \ Session-Reflector, each received test packet within a forward\n   train is time\
    \ stamped.  This provides a second set of packet interval\n   values.  Methods\
    \ for measuring the APC, TSC, and UDP delivery rate\n   use the packet intervals\
    \ obtained from both endpoints in the\n   estimation process.  The method of measuring\
    \ the UDP delivery rate\n   may also require the rate of packet loss.  The estimation\
    \ process\n   itself, as well as any requirements on software or hardware, is\n\
    \   implementation specific.\n   The second measurement principle is referred\
    \ to as \"self-induced\n   congestion\".  According to this principle, in order\
    \ to measure APC,\n   TSC, and UDP delivery rates, some trains MUST cause momentary\n\
    \   congestion on the network path.  In essence, this means that some\n   trains\
    \ MUST be sent at a higher rate than what is available on the\n   network path.\n\
    \   In order to fulfill the above measurement principles and to measure\n   the\
    \ APC, TSC, and UDP delivery rates in the reverse direction, the\n   test packets\
    \ at the Session-Reflector MUST be regrouped into trains\n   and then transmitted\
    \ back to the Session-Sender with a provided\n   packet interval.\n"
- title: 4.  TWAMP-Control Extensions
  contents:
  - "4.  TWAMP-Control Extensions\n   TWAMP connection establishment follows the procedure\
    \ defined in\n   Section 3.1 of [RFC4656] and Section 3.1 of [RFC5357].  The TWAMP-\n\
    \   Control protocol [RFC5357] uses the Modes field to identify and\n   select\
    \ specific communication capabilities.  According to the\n   standard specifications,\
    \ the Value-Added Octets feature requires one\n   new bit position (and value)\
    \ to identify the ability of the\n   Server/Session-Reflector to read and act\
    \ upon the new fields in the\n   value-added octets.  Such bit position (and value)\
    \ is not defined in\n   this memo.  Bootstrapping the TWAMP Value-Added Octets\
    \ Version 1\n   feature is implementation specific.\n   Both the Reflect Octets\
    \ mode and Symmetrical Size mode MAY be\n   selected to ensure the reflection\
    \ of the value-added padding octets\n   by the Session-Reflector and symmetrical\
    \ size TWAMP-Test packets in\n   the forward and reverse directions of transmission.\n"
- title: 4.1.  Additional Considerations
  contents:
  - "4.1.  Additional Considerations\n   In the TWAMP control architecture, the TWAMP\
    \ reflector (server)\n   signals the modes it wishes to operate and the TWAMP\
    \ controller\n   (control-client) selects the mode or modes supported by the\n\
    \   responder.  This feature is designed to retain backward compatibility\n  \
    \ with the original TWAMP-Control and TWAMP-Test protocols.  As an\n   alternative,\
    \ the user may opt for TWAMP Light architecture, which\n   does not require the\
    \ TWAMP-Control protocol.\n   The methods to determine if the Value-Added Octets\
    \ feature is\n   supported on a TWAMP reflector is implementation specific.  When\
    \ the\n   Value-Added Octets feature is not supported on a TWAMP reflector, the\n\
    \   TWAMP controller MUST NOT select the Value-Added Octets feature and\n   MUST\
    \ NOT include any value-added octets in the test packets.  If the\n   TWAMP controller\
    \ inadvertently sends value-added octets in the test\n   packets to a TWAMP responder\
    \ that does not support such feature, the\n   TWAMP responder shall treat the\
    \ value-added octets as regular padding\n   octets and return the test packets\
    \ as quickly as possible to the\n   Session-Sender as defined in [RFC5357].\n"
- title: 5.  Extended TWAMP-Test
  contents:
  - "5.  Extended TWAMP-Test\n   The forward and reverse APC, TSC, and UDP delivery\
    \ rate measurement\n   characteristics depend on the size and packet intervals\
    \ of the test\n   packets.  This memo allows variable packet sizes and packet\
    \ intervals\n   between trains and even between packets in the same train.  The\n\
    \   functionality is described below.\n   The TWAMP-Test protocol carrying the\
    \ value-added padding octets is\n   identical to TWAMP [RFC5357] except for the\
    \ definition of the first\n   10 octets in the Packet Padding that the Session-Sender\
    \ expects to be\n   reflected.  The new octets define fields for Value-Added Octets\n\
    \   Version, Flags, Last Sequence Number in Train, and Desired Reverse\n   Packet\
    \ Interval.  Each of these fields are described in detail below.\n   The Session-Sender\
    \ and Session-Reflector behaviors are also modified.\n"
- title: 5.1.  Sender Behavior
  contents:
  - "5.1.  Sender Behavior\n   This section describes the extensions to the behavior\
    \ of the TWAMP\n   Session-Sender.\n"
- title: 5.1.1.  Packet Timings
  contents:
  - "5.1.1.  Packet Timings\n   The Send Schedule is not utilized in TWAMP, and this\
    \ is unchanged in\n   this memo.\n"
- title: 5.1.2.  Session-Sender Packet Format
  contents:
  - "5.1.2.  Session-Sender Packet Format\n   The Session-Sender packet format follows\
    \ the same procedure and\n   guidelines as defined in TWAMP [RFC5357] and TWAMP\
    \ Reflect Octets and\n   Symmetrical Size Features [RFC6038].\n   This feature\
    \ allows the Session-Sender to set the first few octets in\n   the TWAMP-Test\
    \ Packet Padding with information to communicate value-\n   added padding version\
    \ number, flag bits, sequence number of the last\n   packet in a train, and desired\
    \ reverse packet interval (or per-packet\n   waiting time) for the reverse path\
    \ direction of transmission.\n   The Valued-Added Octets feature must be placed\
    \ immediately after the\n   TWAMP header or immediately after any new field that\
    \ could be added\n   to the TWAMP header or added to the beginning of the padding\
    \ octets\n   in the future.  Therefore, the placement of the first bit from the\n\
    \   valued-added octets depends on the mode(s) being selected.\n   A version number\
    \ and a sequence of flag bits are defined at the very\n   beginning of the value-added\
    \ padding octets.  The version number\n   identifies the version of the value-added\
    \ padding octets and meaning\n   of the flag bits and corresponding fields.  Each\
    \ flag bit indicates\n   if a specific field is used in the valued-added padding\
    \ octets.  The\n   version number and flag bits provide an effective method for\n\
    \   extracting information at Session-Reflector and Session-Sender.  This\n  \
    \ document defines version 1 with two flag bits: L and I.\n   The format of the\
    \ test packet depends on the TWAMP modes.  The Value-\n   Added Octets Version\
    \ 1 feature is intended to work with any TWAMP\n   modes.\n   The Session-Sender\
    \ SHALL use the following TWAMP-Test packet format\n   when the Value-Added Octets\
    \ Version 1 feature is selected in\n   conjunction with the Unauthenticated mode:\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                        Sequence Number                        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          Timestamp                            |\n    |\
    \                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         Error Estimate        |  Ver  |L|I|     Reserved      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                      Last Seqno In Train                      |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                Desired Reverse Packet Interval                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                   Additional Packet Padding                   |\n    .\
    \                                                               .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Session-Sender SHALL use the following TWAMP-Test packet format\n   when\
    \ the Value-Added Octets Version 1 feature is selected in\n   conjunction with\
    \ the Unauthenticated mode, Symmetrical Size mode, and\n   Reflect Octets mode:\n\
    \     0                   1                   2                   3\n     0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                        Sequence Number                        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          Timestamp                            |\n    |\
    \                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         Error Estimate        |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n    |                                     \
    \                          |\n    |                                          \
    \                     |\n    |                         MBZ (27 octets)       \
    \                |\n    |                                                    \
    \           |\n    |                                                         \
    \      |\n    |                                                              \
    \ |\n    |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \   |               |  Ver  |L|I|      Reserved     |    Last...    |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |               Seqno in Train                  |   Desired...  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         Reverse Packet Interval               | Additional... |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                       Packet Padding                          |\n    .\
    \                                                               .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The Session-Sender SHALL use the following TWAMP-Test packet format\n   when\
    \ the Value-Added Octets Version 1 feature is selected in\n   conjunction with\
    \ the Unauthenticated mode, Symmetrical Size mode, and\n   Reflect Octets mode\
    \ with a non-zero value in the Server Octets field:\n     0                  \
    \ 1                   2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                        Sequence Number                        |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                          Timestamp                            |\n    |\
    \                                                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |         Error Estimate        |                               |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                               |\n    |                                     \
    \                          |\n    |                                          \
    \                     |\n    |                         MBZ (27 octets)       \
    \                |\n    |                                                    \
    \           |\n    |                                                         \
    \      |\n    |                                                              \
    \ |\n    |               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n \
    \   |               |         Server Octets         |  Ver  |L|I|...|\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Reserved    |               Last Seqno in...                |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Train       |             Desired Reverse Packet...         |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |   Interval    |         Additional Packet Padding             |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    |                                                               |\n    .\
    \                                                               .\n    .     \
    \                                                          .\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   In the mode using Reflect Octets illustrated above, the value-added\n   padding\
    \ octets are embedded in the Packet Padding (to be reflected).\n   The Version\
    \ (Ver) field MUST be encoded in the first 4 bits.  It\n   identifies the version\
    \ number of the value-added padding octets and\n   meaning of the flag bits and\
    \ the corresponding fields.  This memo\n   defines version 1 with two flag bits:\
    \ L and I.  When the Value-Added\n   Octets Version 1 feature is selected, the\
    \ Session-Sender MUST set the\n   Ver field to 1.\n   The 2 bits after the Version\
    \ field are used for flags: L and I.\n   The Last Seqno in Train bit (L) is the\
    \ first flag.  When the Value-\n   Added Octets Version 1 feature is selected,\
    \ the Session-Sender MAY\n   set the Last Seqno in Train bit L to 1.\n   The Desired\
    \ Reverse Packet Interval bit (I) is the second flag.  When\n   the Value-Added\
    \ Octets Version 1 feature is selected, the Session-\n   Sender MAY set the Desired\
    \ Reverse Packet Interval bit I to 1.\n   The Reserved field is reserved for future\
    \ use.  All 10 bits of the\n   Reserved field MUST be transmitted as zero by the\
    \ Session-Sender.\n   If the Last Seqno in Train bit is set to 1, then the Last\
    \ Seqno in\n   Train field MUST contain an unsigned 32-bit integer generated by\
    \ the\n   Session-Sender.  It MUST indicate the expected sequence number of the\n\
    \   last packet in the train.  It SHOULD be used by the Session-Sender\n   and\
    \ Session-Reflector to identify the train to which a test packet\n   belongs.\
    \  The packets belonging to a train are determined by\n   observing the test packet\
    \ Sequence Number in relation to the Last\n   Seqno in Train. The Last Seqno in\
    \ Train MUST be higher or equal to\n   Sequence Number of the packet.  It must\
    \ also be higher than the Last\n   Seqno in Train for the previous train.  If\
    \ the L bit is set to 0, the\n   Session-Sender shall set all the bits in the\
    \ Last Seqno in Train\n   field to zero.\n   If the Desired Reverse Packet Interval\
    \ bit is set to 1, then the\n   Desired Reverse Packet Interval field MUST contain\
    \ an unsigned 32 bit\n   integer generated by the Session-Sender.  It MUST indicate\
    \ the\n   desired packet interval (or the waiting time) that the Session-\n  \
    \ Reflector SHOULD use when transmitting the reflected test packets\n   towards\
    \ the Session-Sender.  The value 0 means the Session-Reflector\n   SHOULD return\
    \ the test packet to the Session-Sender as quickly as\n   possible.  The format\
    \ of this field MUST be a fractional part of a\n   second as defined in the One-Way\
    \ Active Measurement Protocol (OWAMP)\n   [RFC4656].  If the I bit is set to 0,\
    \ the Session-Sender shall set\n   all the bits in the Desired Reverse Packet\
    \ Interval field to zero.\n   The values of the above fields are usually provided\
    \ by a measurement\n   method, tool, or algorithm.  This measurement algorithm\
    \ is outside\n   the scope of this specification.\n"
- title: 5.2.  Reflector Behavior
  contents:
  - "5.2.  Reflector Behavior\n   The TWAMP Session-Reflector follows the procedures\
    \ and guidelines in\n   Section 4.2 of [RFC5357], with some changes and additional\
    \ functions.\n   When the Value-Added Octets Version 1 feature is selected, the\n\
    \   behavior of the Session-Reflector SHALL be as follows:\n   o  The Session-Reflector\
    \ MUST read the Version field.  If Ver = 1,\n      the Session-Reflector MUST\
    \ read the L and I flag bits.\n   o  If L=1 and I=1, the Session-Reflector MUST\
    \ read and extract the\n      information from the Last Seqno in Train field and\
    \ the Desired\n      Reverse Packet Interval field in the value-added padding\
    \ octets.\n      -  The Last Seqno in Train MUST be compared to Sequence Number\
    \ in\n         the same packet in order to determine when a complete train has\n\
    \         been collected.  The Session-Reflector SHOULD buffer the\n         packets\
    \ belonging to the current train (or store the packet-\n         level performance\
    \ data).  After the last packet of the train\n         has been received, the\
    \ Session-Reflector SHOULD transmit the\n         packets belonging to a reverse\
    \ train with a waiting time\n         (packet interval) for each packet indicated\
    \ in the Desired\n         Reverse Packet Interval field.  If the Desired Reverse\
    \ Packet\n         Interval field is set to zero, then the Session-Reflector\n\
    \         SHOULD transmit the packet as quickly as possible.  The last\n     \
    \    packet within a train has Sender Sequence Number = Last Seqno\n         in\
    \ Train.\n      -  The Last Seqno in Train of a packet MUST also be compared to\n\
    \         the Last Seqno in Train of the previous packet in order to\n       \
    \  determine if a new train needs to be collected.  In case of\n         packet\
    \ loss, the Session-Reflector MUST transmit the incomplete\n         train when\
    \ it receives a packet with a Last Seqno in Train\n         belonging to another\
    \ train (e.g., next train) of the test\n         session or after a timeout. \
    \ The timeout MAY be the REFWAIT\n         timer specified in section 4.2 of [RFC5357].\n\
    \      -  Packets arriving out-of-order within a train MUST be buffered\n    \
    \     at the Session-Reflector if the train is not yet transmitted to\n      \
    \   the Session-Sender.  If the train is already transmitted, the\n         test\
    \ packet SHOULD be returned to the Session-Sender as quickly\n         as possible.\
    \  The Session-Reflector MUST NOT reorder the test\n         packets if they happen\
    \ to arrive out-of-sequence.\n      -  Duplicate packets within a train MUST be\
    \ buffered at the\n         Session-Reflector if the train is not yet transmitted\
    \ to the\n         Session-Sender.  If the train is already transmitted, the\n\
    \         duplicate test packet SHOULD be returned to the Session-Sender\n   \
    \      as quickly as possible.  The Session-Reflector MUST NOT discard\n     \
    \    duplicate test packets.\n   For any other combinations of the Version field\
    \ and the L and I\n   flags, the Session-Reflector SHOULD return the test packet\
    \ to the\n   Session-Sender as quickly as possible.\n   The Session-Reflector\
    \ MUST implement the changes described above when\n   the Value-Added Octets Version\
    \ 1 feature is selected.\n"
- title: 5.2.1  Session-Reflector Packet Format
  contents:
  - "5.2.1  Session-Reflector Packet Format\n   The Session-Reflector packet format\
    \ follows the same procedure and\n   guidelines as defined in TWAMP [RFC5357]\
    \ and TWAMP Reflect Octets and\n   Symmetrical Size Features [RFC6038], with the\
    \ following changes:\n   o  The Session-Reflector MUST reuse (reflect) the value-added\
    \ padding\n      octets (10 octets) provided in the Sender's Packet Padding.\n\
    \   o  The Session-Reflector MAY reuse the rest of the padding octets in\n   \
    \   the Sender's Packet Padding.\n   The truncation process [RFC5357] is recommended\
    \ when the Symmetrical\n   mode is not used.  The Session-Reflector MUST truncate\
    \ exactly 27\n   octets of padding in Unauthenticated mode and exactly 56 octets\
    \ in\n   Authenticated and Encrypted modes.\n"
- title: 5.3.  Additional Considerations
  contents:
  - "5.3.  Additional Considerations\n   The Session-Reflector supporting the Value-Added\
    \ Octets feature\n   should revert back to the standard Session-Reflector behavior\
    \ if it\n   cannot interpret the value-added padding octets in a given test\n\
    \   packet.  Section 5.2 also describes such behavior.  For instance, the\n  \
    \ test packet is returned as quickly as possible to the Session-Sender\n   when\
    \ the Last Seqno in the Train is not what is expected.\n   Capacity measurements\
    \ introduce an additional consideration when the\n   test sessions operate in\
    \ TWAMP Light.  When the Session-Reflector\n   does not have knowledge of the\
    \ session state, the measurement system\n   may be restricted to estimating or\
    \ calculating the capacity metrics\n   in the forward path direction of transmission\
    \ only.  Capacity\n   measurements in the reverse path direction is best handled\
    \ with a\n   Session-Reflector supporting knowledge of the session state and being\n\
    \   capable of identifying the test packets belonging to a specific test\n   session.\
    \  A method for creating a session state from the initial test\n   packet may\
    \ be implemented on the TWAMP Light Session-Reflector.  This\n   is outside the\
    \ scope of this specification.\n"
- title: 6.  Experiments
  contents:
  - "6.  Experiments\n   This memo describes the protocol used in the current working\n\
    \   prototype implementation of the Value-Added Octets feature in the\n   Ericsson\
    \ lab.  The prototype has been tested in real network\n   environments.  The conclusion\
    \ from these tests is that the Value-\n   Added Octets feature is able to enable\
    \ estimation of capacity metrics\n   such as available path capacity in both the\
    \ forward and reverse\n   directions of the network path.\n   During the experiments\
    \ with the protocol described in this memo, we\n   have identified a need for\
    \ the controller and responder to use the\n   same maximum train length.  The\
    \ reflector must be able to buffer the\n   whole train received from the controller.\
    \  In order to reduce the\n   risk for buffer overrun, the maximum train length\
    \ should be\n   negotiated.  This can be resolved through configuration, introduction\n\
    \   of a new field in the value-added octets, or a new maximum train\n   length\
    \ field in the Request-TW-Session message.\n   The Sender Discriminator (SD) field,\
    \ which was proposed in an early\n   draft of this document, was removed because\
    \ of complications with\n   different Session-Reflector implementations.  A Session-Reflector\
    \ may\n   not be able to easily identify the SD field or associate it with a\n\
    \   specific Session-Sender, which may skew the test results.\n   The flags defined\
    \ in the value-added octets now indicate the usage of\n   fields and not the presence\
    \ of fields.  This modification was needed\n   to simplify the responder implementation\
    \ in the working prototype.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The value-added padding octets permit DoS attacks\
    \ on the responder\n   host communicating with core TWAMP [RFC5357].  For instance,\
    \ a DoS\n   condition could arise when the Last Seqno in Train is too large to\n\
    \   handle, potentially causing undesirable processing delay or discard\n   of\
    \ the TWAMP-Test packets.  The responder host MUST provide a\n   mechanism to\
    \ protect or limit the use of its local memory, buffer\n   space, or maximum transmission\
    \ time for a train.\n   The security considerations that apply to any active measurement\
    \ of\n   live networks are relevant here as well.  See [RFC4656] and\n   [RFC5357].\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors thank Svante Ekelin for providing direction\
    \ and comments\n   on this document.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4656]   Shalunov, S., Teitelbaum, B., Karp, A., Boote, J., and\
    \ M.\n               Zekauskas, \"A One-way Active Measurement Protocol\n    \
    \           (OWAMP)\", RFC 4656, September 2006.\n   [RFC5136]   Chimento, P.\
    \ and J. Ishac, \"Defining Network Capacity\",\n               RFC 5136, February\
    \ 2008.\n   [RFC5357]   Hedayat, K., Krzanowski, R., Morton, A., Yum, K., and\
    \ J.\n               Babiarz, \"A Two-Way Active Measurement Protocol (TWAMP)\"\
    ,\n               RFC 5357, October 2008.\n   [RFC6038]   Morton, A. and L. Ciavattone,\
    \ \"Two-Way Active Measurement\n               Protocol (TWAMP) Reflect Octets\
    \ and Symmetrical Size\n               Features\", RFC 6038, October 2010.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [ENHJMMB]   Ekelin, S., Nilsson, M., Hartikainen,\
    \ E., Johnsson, A.,\n               Mangs, J., Melander, B., and M. Bjorkman,\
    \ \"Real-Time\n               Measurement of End-to-End Available Bandwidth Using\n\
    \               Kalman Filtering\", Proceedings to the IEEE/IFIP Network\n   \
    \            Operations and Management Symposium, 2006.\n   [PDM]       Dovrolis,\
    \ C., Ramanathan, P., and D. Moore, \"Packet-\n               Dispersion Techniques\
    \ and a Capacity-Estimation\n               Methodology\", IEEE/ACM Transactions\
    \ on Networking,\n               December 2004.\n   [RRBNC]     Ribeiro, V., Riedi,\
    \ R., Baraniuk, R., Navratil, J., and\n               L. Cottrel, \"pathChirp:\
    \ Efficient Available Bandwidth\n               Estimation for Network Paths\"\
    , Passive and Active\n               Monitoring Workshop, 2003.\n   [SBW]    \
    \   Sommers, J., Barford, P., and W. Willinger, \"Laboratory-\n              \
    \ based Calibration of Available Bandwidth Estimation\n               Tools\"\
    , Microprocessors and Microsystems, 2007.\n   [Y1540]     International Telecommunications\
    \ Union, \"Internet\n               protocol data communication service - IP packet\
    \ transfer\n               and availability performance parameters\", ITU-T\n\
    \               Recommendation Y.1540, 2011.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Steve Baillargeon\n   Ericsson\n   3500 Carling Avenue\n\
    \   Ottawa, Ontario K2H 8E9\n   Canada\n   EMail: steve.baillargeon@ericsson.com\n\
    \   Christofer Flinta\n   Ericsson\n   Farogatan 6\n   Stockholm, 164 80\n   Sweden\n\
    \   EMail: christofer.flinta@ericsson.com\n   Andreas Johnsson\n   Ericsson\n\
    \   Farogatan 6\n   Stockholm, 164 80\n   Sweden\n   EMail: andreas.a.johnsson@ericsson.com\n"
