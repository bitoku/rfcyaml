- contents:
  - '                   Marking SIP Messages to Be Logged

    '
  title: __initial_text__
- contents:
  - "Abstract\n   SIP networks use signaling monitoring tools to diagnose user-reported\n
    \  problems and to perform regression testing if network or user agent\n   (UA)
    software is upgraded.  As networks grow and become\n   interconnected, including
    connection via transit networks, it becomes\n   impractical to predict the path
    that SIP signaling will take between\n   user agents and therefore impractical
    to monitor SIP signaling end to\n   end.\n   This document describes an indicator
    for the SIP protocol that can be\n   used to mark signaling as being of interest
    to logging.  Such marking\n   will typically be applied as part of network testing
    controlled by\n   the network operator and is not used in normal user agent signaling.\n
    \  Operators of all networks on the signaling path can agree to carry\n   such
    marking end to end, including the originating and terminating\n   SIP user agents,
    even if a session originates and terminates in\n   different networks.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8497.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Requirements Language . . . . . . . . . . . . . . . . .
    . . .   4\n   3.  \"Log Me\" Marking Protocol Aspects . . . . . . . . . . . .
    . .   4\n     3.1.  Session-ID \"logme\" Parameter  . . . . . . . . . . . . .
    .   4\n     3.2.  Starting and Stopping Logging . . . . . . . . . . . . . .   5\n
    \    3.3.  Identifying Test Cases  . . . . . . . . . . . . . . . . .   6\n     3.4.
    \ Passing the Marker  . . . . . . . . . . . . . . . . . . .   6\n       3.4.1.
    \ To/From a User Device . . . . . . . . . . . . . . . .   6\n       3.4.2.  To/From
    an External Network . . . . . . . . . . . . .   6\n       3.4.3.  Across a Non-supporting
    SIP Intermediary  . . . . . .   6\n     3.5.  Logging Multiple Simultaneous Dialogs
    . . . . . . . . . .   6\n     3.6.  Format of Logged Signaling  . . . . . . .
    . . . . . . . .   7\n     3.7.  Marking-Related Dialogs . . . . . . . . . . .
    . . . . . .   7\n     3.8.  Forked Requests . . . . . . . . . . . . . . . . .
    . . . .  13\n   4.  SIP Entity Behavior . . . . . . . . . . . . . . . . . . .
    . .  13\n     4.1.  Scope of Marking  . . . . . . . . . . . . . . . . . . . .
    \ 13\n     4.2.  Endpoints . . . . . . . . . . . . . . . . . . . . . . . .  13\n
    \    4.3.  SIP Intermediaries Acting on Behalf of Endpoints  . . . .  15\n     4.4.
    \ B2BUAs  . . . . . . . . . . . . . . . . . . . . . . . . .  16\n     4.5.  \"Log
    Me\" Marker Processing by SIP Intermediaries  . . . .  17\n       4.5.1.  Stateless
    Processing  . . . . . . . . . . . . . . . .  17\n       4.5.2.  Stateful Processing
    . . . . . . . . . . . . . . . . .  17\n         4.5.2.1.  \"Log Me\" Marking Not
    Supported by Originating UA   18\n         4.5.2.2.  \"Log Me\" Marking Not Supported
    by Terminating UA   21\n         4.5.2.3.  \"Log Me\" Marking Removed by Originating
    Network .  23\n         4.5.2.4.  \"Log Me\" Marking Removed by Supporting\n                   Terminating
    Network . . . . . . . . . . . . . . .  26\n         4.5.2.5.  \"Log Me\" Marking
    Passed by Non-supporting\n                   Terminating Network . . . . . . .
    . . . . . . . .  28\n   5.  Errors  . . . . . . . . . . . . . . . . . . . . .
    . . . . . .  31\n     5.1.  Error Cases . . . . . . . . . . . . . . . . . . .
    . . . .  31\n       5.1.1.  Missing \"Log Me\" Marker Error Case  . . . . . .
    . . .  31\n       5.1.2.  \"Log Me\" Marker Appears Mid-dialog Error Case . .
    . .  35\n     5.2.  Non-error Cases . . . . . . . . . . . . . . . . . . . . .
    \ 36\n       5.2.1.  Missing \"Log Me\" Marker Non-error Case  . . . . . . .  36\n
    \      5.2.2.  \"Log Me\" Marker Appears Mid-dialog Non-error Case . .  37\n       5.2.3.
    \ Combining Dialogs Non-error Case  . . . . . . . . . .  37\n     5.3.  Error
    Handling  . . . . . . . . . . . . . . . . . . . . .  38\n   6.  Augmented BNF
    for the \"logme\" Parameter . . . . . . . . . . .  38\n   7.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  39\n     7.1.  \"Log Me\" Authorization
    \ . . . . . . . . . . . . . . . . .  39\n     7.2.  \"Log Me\" Marker Removal
    . . . . . . . . . . . . . . . . .  39\n     7.3.  Denial-of-Service Attacks .
    . . . . . . . . . . . . . . .  39\n     7.4.  Data Protection . . . . . . . .
    . . . . . . . . . . . . .  40\n   8.  Privacy Considerations  . . . . . . . .
    . . . . . . . . . . .  40\n     8.1.  Personal Identifiers  . . . . . . . . .
    . . . . . . . . .  40\n     8.2.  Data Stored at SIP Intermediaries . . . . .
    . . . . . . .  41\n     8.3.  Data Visible at Network Elements  . . . . . . .
    . . . . .  41\n     8.4.  Preventing Fingerprinting . . . . . . . . . . . . .
    . . .  41\n     8.5.  Retaining Logs  . . . . . . . . . . . . . . . . . . . .
    .  42\n     8.6.  User Control of Logging . . . . . . . . . . . . . . . . .  42\n
    \    8.7.  Recommended Defaults  . . . . . . . . . . . . . . . . . .  42\n   9.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .  43\n     9.1.
    \ Registration of the \"logme\" Parameter . . . . . . . . . .  43\n   10. References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  43\n     10.1.  Normative
    References . . . . . . . . . . . . . . . . . .  43\n     10.2.  Informative References
    . . . . . . . . . . . . . . . . .  45\n   Acknowledgments . . . . . . . . . .
    . . . . . . . . . . . . . . .  46\n   Authors' Addresses  . . . . . . . . . .
    . . . . . . . . . . . . .  46\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   When users experience problems with setting up sessions
    using SIP,\n   enterprise or service provider network operators often have to\n
    \  identify the root cause by examining the SIP signaling.  Also, when\n   network
    or user agent (UA) software or hardware is upgraded,\n   regression testing is
    needed.  Such diagnostics apply to a small\n   proportion of network traffic and
    can apply end to end, even if\n   signaling crosses several networks possibly
    belonging to several\n   different network operators.  It may not be possible
    to predict the\n   path through those networks in advance, therefore, a mechanism
    is\n   needed to mark a session as being of interest so that SIP entities\n   along
    the signaling path can provide diagnostic logging.  [RFC8123]\n   illustrates
    this motivating scenario.  This document describes a\n   solution that meets the
    requirements for such \"log me\" marking of SIP\n   signaling also defined in
    [RFC8123].\n   This document also defines a new header field parameter, \"logme\",
    for\n   the Session-ID header field [RFC7989].  Implementations of this\n   document
    MUST implement [RFC7989].\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
    RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
    as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
    in all\n   capitals, as shown here.\n"
  title: 2.  Requirements Language
- contents:
  - '3.  "Log Me" Marking Protocol Aspects

    '
  - contents:
    - "3.1.  Session-ID \"logme\" Parameter\n   Logging for diagnostic purposes is
      most effective when it is applied\n   end to end in a communication session.
      \ This ability requires a \"log\n   me\" marker to be passed through SIP intermediaries.
      \ The Session-ID\n   header field defined in [RFC7989] was chosen to carry the
      \"log me\"\n   marker as a \"logme\" parameter since the session identifier
      is\n   typically passed through SIP Back-to-Back User Agents (B2BUAs)\n   (described
      in [RFC7092]) or other intermediaries, as per the Session-\n   ID requirement
      REQ3 in [RFC7206].  The \"logme\" parameter shown in\n   Figure 1 does not introduce
      any device-specific or user-specific\n   information and MUST be passed unchanged
      with the Session-ID header\n   field.  There is an exception, however, for the
      cases specified in\n   Section 3.4.2 where the \"log me\" marker may be removed
      at a network\n   boundary.\n       Alice              Proxy            Registrar\n
      \      u1.example.com     p1.example.com   r1.example.com\n         |                  |
      \                 |\n         |(1) INVITE        |                  |\n         |
      Session-ID: ab30317f1a784dc48ff824d0d3715d86;\n         |  remote=47755a9de7794ba387653f2099600ef2;logme\n
      \        |----------------->|                  |\n         |                  |
      \                 |\n                   Figure 1: \"Log Me\" Marking Using the\n
      \                \"logme\" Session-ID Header Field Parameter\n"
    title: 3.1.  Session-ID "logme" Parameter
  - contents:
    - "3.2.  Starting and Stopping Logging\n   If a dialog is to be \"log me\" marked,
      then marking MUST start with\n   the SIP request that initiates that dialog
      (dialog-initiating\n   requests are described in Section 12.1 of [RFC3261]).
      \ For the most\n   effective testing and troubleshooting, marking continues
      for the\n   lifetime of the dialog, applies to each request and response in
      the\n   dialog, and applies uninterrupted end to end (including user\n   devices).
      \ The \"log me\" marking mechanism described in this document\n   allows for
      parts of the signaling path to not be marked, e.g, because\n   an endpoint does
      not support the \"log me\" marking mechanism (see\n   Section 4.5.2) or because
      an endpoint or intermediary deliberately\n   removes the \"log me\" marker (see
      Section 4.5.2.4).  Also, marking\n   errors can terminate marking before the
      dialog ends (see\n   Section 5.3).\n   A UA or intermediary adds a \"log me\"
      marker in an unmarked request or\n   response in two cases: first, because it
      is configured to add the\n   marking to a dialog-creating request, or second,
      because it has\n   received a dialog-creating request that is being \"log me\"
      marked\n   causing it to maintain state to ensure that all requests and\n   responses
      in the dialog are similarly \"log me\" marked.  Once the \"log\n   me\" marking
      is started for a dialog, all subsequent requests and\n   responses in this dialog
      are \"log me\" marked.  Marking is stopped\n   when this dialog and its related
      dialogs end.  It is considered an\n   error (see Section 5.1.2) if \"log me\"
      marking is started in a mid-\n   dialog request or response.\n   For the first
      case, \"log me\" marking trigger condition configurations\n   that define whether
      a UA or intermediary can initiate \"log me\"\n   marking for a given dialog
      are out of scope of this document.  As an\n   example of trigger condition configurations,
      the UA or intermediary\n   could be configured to add a \"log me\" marker for
      all dialogs\n   initiated during a specific time period (e.g., 9:00 am - 10:00
      am\n   every day) or for specific dialogs that have a particular \"User-\n   Agent\"
      header field value.  They could also be configured to add a\n   \"log me\" marker
      for a specific set of called party numbers for which\n   users are experiencing
      call setup failures.\n   For the second case of a UA or intermediary detecting
      that a dialog-\n   initiating request is being \"log me\" marked, the scope
      of such\n   marking extends to the lifetime of the dialog.  In addition, as\n
      \  discussed in Section 3.7, \"log me\" marked dialogs that create related\n
      \  dialogs (e.g., REFER) may transfer the marking to the related\n   dialogs.
      \ In such cases, the entire \"session\", identified by the\n   Session-ID header
      field, is \"log me\" marked.\n"
    title: 3.2.  Starting and Stopping Logging
  - contents:
    - "3.3.  Identifying Test Cases\n   The local Universally Unique Identifier (UUID)
      portion of the\n   Session-ID header field value [RFC7989] in the initial SIP
      request of\n   a dialog is used as a random test case identifier (described
      in REQ 5\n   in [RFC8123]).  This provides the ability to collate all logged
      SIP\n   requests and responses to the initial SIP request in a dialog or\n   standalone
      transaction.\n"
    title: 3.3.  Identifying Test Cases
  - contents:
    - '3.4.  Passing the Marker

      '
    - contents:
      - "3.4.1.  To/From a User Device\n   When a user device inserts the \"log me\"
        marker, the marker MUST be\n   passed unchanged in the Session-ID header field
        across an edge proxy\n   or a B2BUA adjacent to the user device.\n"
      title: 3.4.1.  To/From a User Device
    - contents:
      - "3.4.2.  To/From an External Network\n   An external network is a peer network
        connected at a network boundary\n   as defined in [RFC8123].\n   External
        networks may be connected directly or via a peering network,\n   and such
        networks often have specific connection agreements.  Whether\n   \"log me\"
        marking is removed depends on the policy applied at the\n   network-to-network
        interface.  Troubleshooting and testing will be\n   easier if peer networks
        endeavor to make agreements to pass \"log me\"\n   marking unchanged.  However,
        since a \"log me\" marker may cause a SIP\n   entity to log the SIP header
        and body of a request or response, the\n   \"log me\" marker MUST be removed
        at a network boundary if no agreement\n   exists between peer networks.\n"
      title: 3.4.2.  To/From an External Network
    - contents:
      - "3.4.3.  Across a Non-supporting SIP Intermediary\n   \"Log me\" marking is
        most effective if passed end to end.  However,\n   intermediaries that do
        not comply with this document might pass the\n   \"log me\" marker unchanged
        or even drop it entirely.\n"
      title: 3.4.3.  Across a Non-supporting SIP Intermediary
    title: 3.4.  Passing the Marker
  - contents:
    - "3.5.  Logging Multiple Simultaneous Dialogs\n   Multiple SIP dialogs can be
      simultaneously logged by an originating\n   UA, terminating UA, and SIP entities
      on the signaling path.  These\n   dialogs are differentiated by their test case
      identifier (the local\n   UUID portion of the Session-ID header field value
      at the originating\n   device).\n"
    title: 3.5.  Logging Multiple Simultaneous Dialogs
  - contents:
    - "3.6.  Format of Logged Signaling\n   The entire SIP message (SIP request line,
      response line, header\n   fields, and message body) SHOULD be logged since troubleshooting\n
      \  might be difficult if information is missing.  Logging SHOULD use\n   common
      standard formats such as SIP Common Log Format (CLF) defined\n   in [RFC6873]
      and Libpcap as defined in \"vnd.tcpdump.pcap\" in the\n   Media Types registry
      [MEDIA-TYPES].  If SIP CLF is used, the entire\n   message is logged using Vendor-ID
      = 00000000 and Tag = 02 in the\n   <OptionalFields> portion of the SIP CLF record
      (see Section 4.4 of\n   [RFC6873]).  Header fields SHOULD be logged in the form
      in which they\n   appear in the message; they SHOULD NOT be converted between
      long and\n   compact forms described in Section 7.3.3 of [RFC3261].\n"
    title: 3.6.  Format of Logged Signaling
  - contents:
    - "3.7.  Marking Related Dialogs\n   \"Log me\" marking is done per dialog; typically,
      it begins at dialog\n   creation and ends when the dialog ends.  However, dialogs
      related to\n   a \"log me\" marked dialog MAY also be \"log me\" marked for
      call control\n   features such as call forward, transfer, park, and join.  As\n
      \  described in Section 6 of [RFC7989], related dialogs can occur when\n   an
      endpoint receives a 3xx message, a REFER that directs the endpoint\n   to a
      different peer, an INVITE request with Replaces that also\n   potentially results
      in communicating with a new peer, or an INVITE\n   with a Join header field
      as described in [RFC3911].  An example is\n   the call transfer feature described
      in Section 6.1 of [RFC5589].  The\n   logged signaling for related dialogs can
      be correlated using Session-\n   ID header field values as described in Section
      10.9 of [RFC7989].\n   In the example shown in Figure 2, Alice has reported
      problems making\n   call transfers.  Her terminal is placed in debug mode in
      preparation\n   for \"log me\" marked signaling from the network administrator,\n
      \  Bob. Bob's terminal is configured to \"log me\" mark and log signaling\n
      \  for calls originated during the troubleshooting session (e.g., for a\n   duration
      of 15 minutes).  Bob, who is troubleshooting the problem,\n   arranges to make
      a call that Alice can attempt to transfer.  Bob\n   calls Alice, which creates
      initial dialog1, and then Alice transfers\n   the call to connect Bob to Carol.
      \ Logged signaling is correlated\n   using the test case identifier, which is
      the local UUID\n   ab30317f1a784dc48ff824d0d3715d86 in the Session-ID header
      field of\n   INVITE request F1.  Logging by Alice's terminal begins when it\n
      \  receives and echoes the \"log me\" marker in INVITE F1 and ends when\n   the
      last request or response in the dialog is sent or received (200\n   OK F7 of
      dialog1).  Also during dialog1, Alice's terminal logs\n   related REFER dialog2,
      which it initiates and terminates as part of\n   the call transfer.  Alice's
      terminal inserts a \"log me\" marker in the\n   REFER request and 200 OK responses
      to NOTIFY requests in dialog2.\n   Both dialog1 and dialog2 have the same test
      case identifier.\n   Logging by Bob's terminal begins when it sends INVITE F1,
      which\n   includes the \"log me\" marker, and ends when dialog3, initiated by\n
      \  Bob, ends.  Logging by Carol's terminal begins when it receives the\n   INVITE
      F5 with the \"log me\" marker and ends when dialog3 ends.\n   dialog3 is not
      logged by Alice's terminal; however, the test case\n   identifier ab30317f1a784dc48ff824d0d3715d86
      is also the test case\n   identifier (local-uuid) in INVITE F5.  Also, the test
      case identifier\n   of dialog2, which is logged by Alice's terminal, can be
      linked to\n   dialog1 and dialog3 because the remote-uuid component of dialog2
      is\n   the test case identifier ab30317f1a784dc48ff824d0d3715d86.\n                 Alice
      \                Bob                  Carol\n               Transferor           Transferee
      \            Transfer\n                    |                    |                  Target\n
      \                   |          INVITE F1 |                    |\n            dialog1
      |<-------------------|                    |\n                    |          200
      OK F2 |                    |\n            dialog1 |------------------->|                    |\n
      \                   |            ACK     |                    |\n            dialog1
      |<-------------------|                    |\n                    |  INVITE (hold)
      \    |                    |\n            dialog1 |------------------->|                    |\n
      \                   |  200 OK            |                    |\n            dialog1
      |<-------------------|                    |\n                    |  ACK               |
      \                   |\n            dialog1 |------------------->|                    |\n
      \                   |  REFER F3 (Target-Dialog:1)             |\n            dialog2
      |------------------->|                    |\n                    |  200 OK            |
      \                   |\n            dialog2 |<-------------------|                    |\n
      \                   | NOTIFY (100 Trying) F4                  |\n            dialog2
      |<-------------------|                    |\n                    |            200
      OK  |                    |\n            dialog2 |------------------->|                    |\n
      \                   |                    |  INVITE F5         |\n            dialog3
      |                    |------------------->|\n                    |                    |
      \ 200 OK            |\n            dialog3 |                    |<-------------------|\n
      \                   |                    |  ACK               |\n            dialog3
      |                    |------------------->|\n                    |  NOTIFY (200
      OK) F6|                    |\n            dialog2 |<-------------------|                    |\n
      \                   |            200 OK  |                    |\n            dialog2
      |------------------->|                    |\n                    |  BYE               |
      \                   |\n            dialog1 |------------------->|                    |\n
      \                   |  200 OK F7         |                    |\n            dialog1
      |<-------------------|                    |\n                    |                    |
      \            BYE    |\n            dialog3 |                    |<-------------------|\n
      \                   |                    |             200 OK |\n            dialog3
      |                    |------------------->|\n        Figure 2: \"Log Me\" Marking
      Related Dialogs in Call Transfer\n   F1:   Bob's UA inserts the \"logme\" parameter
      in the Session-ID header\n         field of the INVITE request that creates
      dialog1.\n   F3:   Alice's UA inserts the \"logme\" parameter in the Session-ID\n
      \        header field of the REFER request that creates dialog2, which\n         is
      related to dialog1.\n   F5:   Bob's UA inserts the \"logme\" parameter in the
      Session-ID header\n         field of the INVITE request that creates dialog3,
      which is\n         related to dialog1.\n          F1 INVITE Transferee -> Transferor\n
      \         INVITE sips:transferor@atlanta.example.com SIP/2.0\n          Via:
      SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432\n          Max-Forwards: 70\n
      \         To: <sips:transferor@atlanta.example.com>\n          From: <sips:transferee@biloxi.example.com>;tag=7553452\n
      \         Call-ID: 090459243588173445\n          Session-ID: ab30317f1a784dc48ff824d0d3715d86\n
      \            ;remote=00000000000000000000000000000000;logme\n          CSeq:
      29887 INVITE\n          Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY\n
      \         Supported: replaces, gruu, tdialog\n          Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n
      \         Content-Type: application/sdp\n          Content-Length: ...\n          F2
      200 OK Transferor -> Transferee\n          SIP/2.0 200 OK\n          Via: SIP/2.0/TLS
      [2001:db8::1];branch=z9hG4bKnas432\n          To: <sips:transferor@atlanta.example.com>;tag=31kdl4i3k\n
      \         From: <sips:transferee@biloxi.example.com>;tag=7553452\n          Call-ID:
      090459243588173445\n          Session-ID: 47755a9de7794ba387653f2099600ef2\n
      \            ;remote=ab30317f1a784dc48ff824d0d3715d86;logme\n          CSeq:
      29887 INVITE\n          Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY\n
      \         Supported: replaces, gruu, tdialog\n          Contact: <sips:4889445d8kjtk3@atlanta.example.com;gr=723jd2d>\n
      \         Content-Type: application/sdp\n          Content-Length: ...\n          F3
      REFER Transferor -> Transferee\n          REFER sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha
      SIP/2.0\n          Via: SIP/2.0/TLS pc33.atlanta.example.com;branch=z9hG4bKna9\n
      \         Max-Forwards: 70\n          To: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n
      \         From: <sips:transferor@atlanta.example.com>;tag=1928301774\n          Call-ID:
      a84b4c76e66710\n          Session-ID: 47755a9de7794ba387653f2099600ef2\n             ;remote=ab30317f1a784dc48ff824d0d3715d86;logme\n
      \         CSeq: 314159 REFER\n          Allow: INVITE, ACK, CANCEL, OPTIONS,
      BYE, REFER, NOTIFY\n          Supported: gruu, replaces, tdialog\n          Require:
      tdialog\n          Refer-To: <sips:transfertarget@chicago.example.com>\n          Target-Dialog:
      090459243588173445;local-tag=7553452\n           ;remote-tag=31kdl4i3k\n          Contact:
      <sips:4889445d8kjtk3@atlanta.example.com;gr=723jd2d>\n          Content-Length:
      0\n          F4 NOTIFY Transferee -> Transferor\n          NOTIFY sips:4889445d8kjtk3@atlanta.example.com\n
      \            ;gr=723jd2d SIP/2.0\n          Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432\n
      \         Max-Forwards: 70\n          To: <sips:transferor@atlanta.example.com>;tag=1928301774\n
      \         From: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n           ;tag=a6c85cf\n
      \         Call-ID: a84b4c76e66710\n          Session-ID: ab30317f1a784dc48ff824d0d3715d86\n
      \            ;remote=47755a9de7794ba387653f2099600ef2;logme\n          CSeq:
      73 NOTIFY\n          Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n
      \         Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY\n          Supported:
      replaces, tdialog\n          Event: refer\n          Subscription-State: active;expires=60\n
      \         Content-Type: message/sipfrag\n          Content-Length: ...\n          F5
      INVITE Transferee -> Transfer Target\n          INVITE sips:transfertarget@chicago.example.com
      SIP/2.0\n          Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas41234\n          Max-Forwards:
      70\n          To: <sips:transfertarget@chicago.example.com>\n          From:
      <sips:transferee@biloxi.example.com>;tag=j3kso3iqhq\n          Call-ID: 90422f3sd23m4g56832034\n
      \         Session-ID: ab30317f1a784dc48ff824d0d3715d86\n             ;remote=00000000000000000000000000000000;logme\n
      \         CSeq: 521 REFER\n          Allow: INVITE, ACK, CANCEL, OPTIONS, BYE,
      REFER, NOTIFY\n          Supported: replaces, gruu, tdialog\n          Contact:
      <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n          Content-Type:
      application/sdp\n          Content-Length: ...\n          F6 NOTIFY Transferee
      -> Transferor\n          NOTIFY sips:4889445d8kjtk3@atlanta.example.com\n             ;gr=723jd2d
      SIP/2.0\n          Via: SIP/2.0/TLS [2001:db8::1];branch=z9hG4bKnas432\n          Max-Forwards:
      70\n          To: <sips:transferor@atlanta.example.com>;tag=1928301774\n          From:
      <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n           ;tag=a6c85cf\n
      \         Call-ID: a84b4c76e66710\n          Session-ID: ab30317f1a784dc48ff824d0d3715d86\n
      \            ;remote=47755a9de7794ba387653f2099600ef2;logme\n          CSeq:
      74 NOTIFY\n          Contact: <sips:3ld812adkjw@biloxi.example.com;gr=3413kj2ha>\n
      \         Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY\n          Supported:
      replaces, tdialog\n          Event: refer\n          Subscription-State: terminated;reason=noresource\n
      \         Content-Type: message/sipfrag\n          Content-Length: ...\n"
    title: 3.7.  Marking Related Dialogs
  - contents:
    - "3.8.  Forked Requests\n   A SIP intermediary is required to copy the \"log
      me\" marker into\n   forked requests.  SIP request forking is discussed in Sections
      4 and\n   16.6 of [RFC3261].\n"
    title: 3.8.  Forked Requests
  title: 3.  "Log Me" Marking Protocol Aspects
- contents:
  - '4.  SIP Entity Behavior

    '
  - contents:
    - "4.1.  Scope of Marking\n   \"Log me\" marking is intended to be limited, in
      time period and number\n   of dialogs marked, to the minimum needed to troubleshoot
      a particular\n   problem or perform a particular test.\n   o  SIP entities MUST
      be configured to \"log me\" mark only dialogs\n      needed for the current
      testing purpose, e.g., troubleshooting or\n      regression testing.  The mechanisms
      in this section ensure that\n      \"log me\" marking begins at dialog creation
      and, other than cases\n      of marking related dialogs or premature ending,
      ends when the\n      dialog being \"log me\" marked ends.\n   o  If a dialog
      is to be marked, the only way to initiate \"log me\"\n      marking is at the
      dialog-creating request (e.g., SIP INVITE) sent\n      by an originating endpoint
      or an intermediary that marks on behalf\n      of the originating endpoint.
      \ Marking that appears mid-dialog is\n      an error as described in Section
      5.1.2.  The final terminating\n      endpoint, or intermediary that marks on
      behalf of the terminating\n      endpoint, cannot initiate marking, but it takes
      action as defined\n      in Sections 4.2 and 4.3 if it receives an incoming
      \"log me\"\n      marker.\n   Note that the error cases described in Section
      5.1 cause SIP entities\n   to stop \"log me\" marking, and the requirements
      in Section 7 also\n   place requirements on SIP entities, including allowing
      SIP entities\n   to not log signaling based on local policies (see Section 8.6).\n"
    title: 4.1.  Scope of Marking
  - contents:
    - "4.2.  Endpoints\n   A common scenario is to have both originating and terminating\n
      \  endpoints support \"log me\" marking with the originating endpoint\n   configured
      to initiate \"log me\" marking.  In this simplest use case,\n   the originating
      UA inserts a \"log me\" marker in the dialog-creating\n   SIP request and all
      subsequent SIP requests within that dialog.  The\n   \"log me\" marker is passed
      through the SIP intermediaries and arrives\n   at the terminating UA, which
      echoes the \"log me\" marker in the\n   corresponding responses.  If the terminating
      UA sends an in-dialog\n   request on a dialog that is being \"log me\" marked,
      it inserts a \"log\n   me\" marker and the originating UA echoes the \"log me\"
      marker in\n   responses.  The terminating UA logs the \"log me\" marked SIP
      requests\n   and responses if it is allowed as per policy defined in the\n   terminating
      network.  This basic use case suggests the following\n   rules for originating
      and terminating UAs.\n   For originating UAs:\n   o  The originating UA configured
      for \"log me\" marking MUST insert a\n      \"log me\" marker into the dialog-creating
      SIP request and\n      subsequent in-dialog SIP requests.\n   o  The originating
      UA itself logs marked requests and responses.\n   o  The originating UA echoes,
      in responses, the \"log me\" marker\n      received in in-dialog requests from
      the terminating side.\n   o  The originating UA logs the SIP responses that
      it sends in\n      response to received \"log me\" marked in-dialog requests.\n
      \  o  The originating UA MAY also apply these rules to any subsequent\n      related
      SIP dialogs as described in Section 3.7.\n   For terminating UAs:\n   o  The
      terminating UA detects that a dialog is of interest to logging\n      by the
      existence of a \"log me\" marker in an incoming dialog-\n      creating SIP
      request.\n   o  The terminating UA itself logs marked requests and corresponding\n
      \     marked responses if allowed as per policy.\n   o  The terminating UA MUST
      echo a \"log me\" marker in responses to a\n      SIP request that included
      a \"log me\" marker.\n   o  If the terminating UA has detected that a dialog
      is being \"log me\"\n      marked, it MUST insert a \"log me\" marker in any
      in-dialog SIP\n      requests that it sends.\n   o  The terminating UA itself
      logs any in-dialog SIP requests that it\n      sends if allowed as per policy.\n
      \  o  The terminating UA MAY also apply these rules to any subsequent\n      related
      SIP dialogs as described in Section 3.7.\n"
    title: 4.2.  Endpoints
  - contents:
    - "4.3.  SIP Intermediaries Acting on Behalf of Endpoints\n   A network operator
      may know that some of the UAs connected to the\n   network do not support \"log
      me\" marking.  Subject to the\n   authorizations in Section 7.1, a SIP intermediary
      close to the UA\n   (e.g., edge proxy, B2BUA) on the originating and/or terminating
      sides\n   inserts the \"log me\" marker instead in order to test sessions\n
      \  involving such UAs.\n   The originating and terminating SIP intermediaries
      are not identified\n   by protocol means but are designated and explicitly configured
      by the\n   network administrator to \"log me\" mark on behalf of endpoints.
      \ The\n   intermediaries that are known to be closest to the terminals can be\n
      \  configured to \"log me\" mark on behalf of terminals that do not\n   support
      \"log me\" marking.  The originating SIP intermediary is the\n   first one to
      be traversed by a SIP request sent by the originating\n   endpoint.  Similarly,
      the terminating SIP intermediary is the last\n   intermediary traversed before
      the terminating endpoint is reached.\n   The SIP intermediary at the originating
      side is configured to insert\n   the \"log me\" marker on behalf of the originating
      endpoint.  If the\n   terminating UA does not echo the \"log me\" marker in
      responses to a\n   marked request, then the SIP intermediary closest to the
      terminating\n   UA, if configured to mark on behalf of the terminating UA, inserts
      a\n   \"log me\" marker in responses to the request.  Likewise, if the\n   terminating
      UA sends an in-dialog request, the SIP intermediary at\n   the terminating side
      inserts a \"log me\" marker and the SIP\n   intermediary at the originating
      side echoes the \"log me\" marker in\n   responses to that request.  Originating
      and terminating\n   intermediaries that are configured for \"log me\" marking
      on behalf of\n   the endpoint must also mark dialog-creating requests that contain\n
      \  Target-Dialog [RFC4538], Join [RFC3911], and Replaces [RFC3891]\n   header
      fields and corresponding responses.  The SIP intermediaries at\n   the originating
      and terminating sides log the \"log me\" marked SIP\n   requests and responses
      if it is allowed as per policy defined in the\n   originating and terminating
      networks.  This scenario suggests the\n   following rules when a SIP intermediary
      is configured to initiate or\n   handle \"log me\" marking on behalf of a UA.\n
      \  For the originating SIP intermediary:\n   o  The originating SIP intermediary
      configured for \"log me\" marking\n      MUST insert a \"log me\" marker into
      the dialog-creating SIP request\n      and subsequent in-dialog SIP requests.\n
      \  o  The originating SIP intermediary itself logs marked requests and\n      responses.\n
      \  o  The originating SIP intermediary detects the \"log me\" marker\n      received
      in in-dialog requests and echoes the \"log me\" marker in\n      the corresponding
      SIP responses.\n   o  The originating SIP intermediary logs the SIP responses
      that it\n      sends in response to \"log me\" marked in-dialog requests.\n
      \  o  The originating SIP intermediary MAY also apply these rules to any\n      subsequent
      related SIP dialogs as described in Section 3.7.\n   For the terminating SIP
      intermediary:\n   o  The terminating SIP intermediary detects that a dialog
      is of\n      interest to logging by the existence of a \"log me\" marker in
      an\n      incoming dialog-creating SIP request.\n   o  The terminating SIP intermediary
      itself logs marked requests and\n      corresponding responses if allowed as
      per policy.\n   o  The terminating SIP intermediary MUST echo a \"log me\" marker
      in\n      responses to a SIP request that included a \"log me\" marker.\n   o
      \ If the terminating SIP intermediary has detected that a dialog is\n      being
      \"log me\" marked, it MUST insert a \"log me\" marker in any\n      in-dialog
      SIP requests from the terminating UA.\n   o  The terminating SIP intermediary
      itself logs any in-dialog SIP\n      requests that it sends if allowed as per
      policy.\n   o  The terminating SIP intermediary MAY also apply these rules to
      any\n      subsequent related SIP dialogs as described in Section 3.7.\n"
    title: 4.3.  SIP Intermediaries Acting on Behalf of Endpoints
  - contents:
    - "4.4.  B2BUAs\n   B2BUA \"log me\" behavior is specified based on its different
      signaling\n   plane roles described in [RFC7092].\n   A Proxy-B2BUA SHOULD copy
      \"log me\" marking in requests and responses\n   from its terminating side to
      the originating side without needing\n   explicit configuration to do so.\n
      \  A dialog on one \"side\" of the B2BUA may or may not be coupled to a\n   related
      dialog on the other \"side\" for \"log me\" purposes.  To allow\n   end-to-end
      troubleshooting of user problems and regression testing, a\n   signaling-only
      and SDP-modifying signaling-only B2BUA [RFC7092]\n   SHOULD couple related dialogs
      for \"log me\" marking purposes and pass\n   on the received \"log me\" parameter
      from the originating side to the\n   terminating side and vice versa.  For example,
      a SIP B2BUA handling\n   an end-to-end session between an external caller and
      an agent in a\n   contact center environment can couple the dialog between itself
      and\n   an agent with the dialog between itself and the external caller.  It\n
      \  can pass on the \"log me\" marking from the originating side to the\n   terminating
      side to enable end-to-end logging of specific sessions of\n   interest.\n   For
      dialogs that are being \"log me\" marked, all B2BUAs MUST \"log me\"\n   mark
      in-dialog SIP requests that they generate on their own, without\n   needing
      explicit configuration to do so.  This rule applies to both\n   the originating
      and terminating sides of a B2BUA.\n"
    title: 4.4.  B2BUAs
  - contents:
    - '4.5.  "Log Me" Marker Processing by SIP Intermediaries

      '
    - contents:
      - "4.5.1.  Stateless Processing\n   Typically, \"log me\" marking will be done
        by an originating UA and\n   echoed by a terminating UA.  SIP intermediaries
        on the signaling path\n   between these UAs that do not perform the tasks
        described in Sections\n   4.3 or 4.4 MUST simply log any request or response
        that contains a\n   \"log me\" marker in a stateless manner, if it is allowed
        per local\n   policy.\n"
      title: 4.5.1.  Stateless Processing
    - contents:
      - "4.5.2.  Stateful Processing\n   The originating and terminating SIP intermediaries
        that \"log me\" mark\n   on behalf of endpoints and SIP intermediaries that
        remove \"log me\"\n   marking at the network boundary must maintain state
        to enable \"log\n   me\" marking.  Applicable scenarios are as follows:\n
        \  o  The originating UA does not support \"log me\" marking.  This\n      scenario
        was described in Section 4.3 and requires support by the\n      originating
        SIP intermediary.  \"Log me\" marker processing is\n      illustrated in Section
        4.5.2.1.\n   o  The terminating UA does not support \"log me\" marking.  This\n
        \     scenario was described in Section 4.3 and requires support by the\n
        \     terminating SIP intermediary.  \"Log me\" marker processing is\n      illustrated
        in Section 4.5.2.2.\n   o  The originating network ensures that it does not
        pass marking\n      outside its boundaries in order to not impact any external\n
        \     networks.  The originating network removes \"log me\" marking from\n
        \     SIP requests and responses before forwarding them from its network\n
        \     boundary to external networks, but it adds marking back to any\n      incoming
        SIP requests and responses belonging to any \"log me\"\n      marked dialog.
        \ This scenario requires support by the SIP\n      intermediary at the originating
        network boundary.  \"Log me\" marker\n      processing is illustrated in Section
        4.5.2.3.\n   o  The terminating network ensures that it does not allow \"log
        me\"\n      marking from external networks to pass through its boundary to
        its\n      internal entities.  The terminating network removes \"log me\"\n
        \     marking from SIP requests and responses before forwarding them\n      internally,
        but it adds marking back to any outgoing SIP requests\n      and responses
        belonging to any \"log me\" marked dialog.  This\n      scenario requires
        support by the SIP intermediary at the\n      terminating network boundary.
        \ \"Log me\" marker processing is\n      illustrated in Section 4.5.2.4.\n
        \  o  The terminating network does not support \"log me\" marking and does\n
        \     not echo marking that it receives.  The originating network adds\n      marking
        back to any incoming SIP requests and responses belonging\n      to the \"log
        me\" marked dialog.  This scenario requires support by\n      the SIP intermediary
        at the originating network boundary and \"log\n      me\" marker processing
        is illustrated in Section 4.5.2.5.\n   SIP intermediary behavior in these
        scenarios is illustrated using\n   [RFC3665] example call flow \"Session Establishment
        Through Two\n   Proxies\".\n"
      - contents:
        - "4.5.2.1.  \"Log Me\" Marking Not Supported by Originating UA\n   Alice's
          UA does not support \"log me\" marking; hence, Proxy 1, which\n   is the
          SIP intermediary closest to Alice, is configured to act on\n   behalf of
          Alice's UA to \"log me\" mark specific dialogs of interest\n   that are
          created by Alice for troubleshooting purposes.\n   In Figure 3, Proxy 1
          in the originating network maintains state of\n   which dialogs are being
          logged in order to \"log me\" mark all SIP\n   requests and responses that
          it receives from Alice's UA before\n   forwarding them to Proxy 2.\n        [
          NETWORK A           ]          [ NETWORK B          ]\n        Alice           Proxy
          1          Proxy 2            Bob\n          |                |                |
          \               |\n          |   INVITE F1    |                |                |\n
          \         |  (no logme)    |                |                |\n          |--------------->|
          \               |                |\n          |                |   INVITE
          F2    |                |\n          |                |    (logme)     |
          \               |\n          |                |--------------->|                |\n
          \         |                |                |                |\n          |
          \               |                |                |\n          |   100  F3
          \     |                |   INVITE F4    |\n          |   (logme)      |
          \               |     (logme)    |\n          |<---------------|     100
          \ F5    |--------------->|\n          |                |    (logme)     |
          \               |\n          |                |<---------------|                |\n
          \         |                |                |     180 F6     |\n          |
          \               |                |     (logme)    |\n          |                |
          \   180 F7      |<---------------|\n          |                |    (logme)
          \    |                |\n          |     180 F8     |<---------------|                |\n
          \         |     (logme)    |                |                |\n          |<---------------|
          \               |     200 F9     |\n          |                |                |
          \    (logme)    |\n          |                |    200 F10     |<---------------|\n
          \         |                |    (logme)     |                |\n          |
          \    200 F11    |<---------------|                |\n          |     (logme)
          \   |                |                |\n          |<---------------|                |
          \               |\n          |     ACK F12    |                |                |\n
          \         |  (no logme)    |                |                |\n          |--------------->|
          \               |                |\n          |                |                |
          \               |\n          |                |    ACK F13     |                |\n
          \         |                |    (logme)     |                |\n          |
          \               |--------------->|                |\n          |                |
          \               |                |\n          |                |                |
          \    ACK F14    |\n          |                |                |     (logme)
          \   |\n          |                |                |--------------->|\n
          \         |                Both Way RTP Media                |\n          |<================================================>|\n
          \         |                |                |     BYE F15    |\n          |
          \               |                |     (logme)    |\n          |                |
          \   BYE F16     |<---------------|\n          |                |    (logme)
          \    |                |\n          |     BYE F17    |<---------------|                |\n
          \         |     (logme)    |                |                |\n          |<---------------|
          \               |                |\n          |     200 F18    |                |
          \               |\n          |  (no logme)    |                |                |\n
          \         |--------------->|                |                |\n          |
          \               |     200 F19    |                |\n          |                |
          \   (logme)     |                |\n          |                |--------------->|
          \               |\n          |                |                |                |\n
          \         |                |                |     200 F20    |\n          |
          \               |                |     (logme)    |\n          |                |
          \               |--------------->|\n          |                |                |
          \               |\n      Figure 3: The Originating UA Does Not Support \"Log
          Me\" Marking\n   F1:   Alice's UA does not insert a \"log me\" marker in
          the dialog-\n         creating INVITE request F1.  Nevertheless, Proxy 1
          is\n         configured to initiate logging on behalf of Alice.  Proxy 1\n
          \        logs INVITE request F1 and maintains state that this dialog is\n
          \        being logged.\n   F2:   Proxy 1 inserts a \"log me\" marker in
          INVITE request F2 before\n         forwarding it to Proxy 2.  Proxy 1 logs
          this request.\n   F3:   Proxy 1 inserts a \"log me\" marker in 100 response
          F3 before\n         forwarding it to Alice's UA since this is a response
          sent on a\n         dialog that is being \"log me\" marked.  Proxy 1 logs
          this\n         response.\n   F4:   \"Bob's UA detects the \"log me\" marker
          and logs the INVITE\n         request F4 if allowed as per policy.\n   F6:
          \  Bob's UA echoes the \"log me\" marker in INVITE request F4 into\n         180
          response F6.  It logs this response if allowed as per\n         policy.\n
          \  F7 and F8:  Proxy 1 logs the received \"180\" response F7 and passes\n
          \        the \"log me\" marker to Alice's UA in F8.\n   F12:  Proxy 1 receives
          ACK with no \"log me\" marker.  It doesn't\n         consider this an error
          since it is configured to \"log me\" mark\n         on behalf of Alice's
          UA.\n   F13:  Proxy 1 inserts a \"log me\" marker in ACK request F13 before\n
          \        forwarding it to Proxy 2.  Proxy 1 logs this request.\n   F15:
          \ Bob's UA inserts a \"log me\" marker in the in-dialog BYE request\n         and
          this \"log me\" marker is carried back to Alice's UA in F16\n         and
          F17.  Bob's UA logs this request if allowed as per policy.\n   F18:  Alice's
          UA does not echo the \"log me\" marker from BYE request\n         F17 into
          200 response F18.\n   F19:  Proxy 1 inserts a \"log me\" marker in 200 response
          F19 before\n         forwarding it to Proxy 2.  Proxy 1 logs this response.\n"
        title: 4.5.2.1.  "Log Me" Marking Not Supported by Originating UA
      - contents:
        - "4.5.2.2.  \"Log Me\" Marking Not Supported by Terminating UA\n   In Figure
          4, Bob's UA does not support \"log me\" marking, so Proxy 2\n   in the terminating
          network maintains state to ensure \"log me\" marking\n   of SIP requests
          and responses from Bob's UA.\n       [ NETWORK A           ]          [
          NETWORK B          ]\n       Alice           Proxy 1          Proxy 2            Bob\n
          \        |                |                |                |\n         |
          \  INVITE F1    |                |                |\n         |    (log
          me)    |                |                |\n         |--------------->|
          \               |                |\n         |                |    INVITE
          F2   |                |\n         |                |     (log me)   |                |\n
          \        |                |--------------->|                |\n         |
          \               |                |                |\n         |                |
          \               |                |\n         |     100  F3    |                |
          \               |\n         |     (log me)   |                |                |\n
          \        |<---------------|                |                |\n         |
          \               |                |   INVITE F4    |\n         |                |
          \               |    (log me)    |\n         |                |     100
          \ F5    |--------------->|\n         |                |     (log me)   |
          \               |\n         |                |<---------------|                |\n
          \        |                |                |     180 F6     |\n         |
          \               |                |   (no log me)  |\n         |                |
          \               |<---------------|\n         |                |                |
          \               |\n         |                |                |                |\n
          \        |                |    180 F7      |                |\n         |
          \               |   (log me)     |                |\n         |                |<---------------|
          \               |\n         |                |                |                |\n
          \        |                |                |                |\n         |
          \    180 F8     |                |                |\n         |     (log
          me)   |                |                |\n         |<---------------|                |
          \    200 F9     |\n         |                |                |    (no log
          me) |\n         |                |    200 F10     |<---------------|\n         |
          \               |    (log me)    |                |\n         |     200
          F11    |<---------------|                |\n         |     (log me)   |
          \               |                |\n         |<---------------|                |
          \               |\n         |     ACK F12    |                |                |\n
          \        |    (log me)    |                |                |\n         |--------------->|
          \               |                |\n         |                |    ACK F13
          \    |                |\n         |                |    (log me)    |                |\n
          \        |                |--------------->|     ACK F14    |\n         |
          \               |                |    (log me)    |\n         |                |
          \               |--------------->|\n         |                Both Way RTP
          Media                |\n         |<================================================>|\n
          \        |                |                |     BYE F15    |\n         |
          \               |                |   (no log me)  |\n         |                |
          \   BYE F16     |<---------------|\n         |                |   (log me)
          \    |                |\n         |     BYE F17    |<---------------|                |\n
          \        |    (log me)    |                |                |\n         |<---------------|
          \               |                |\n         |     200 F18    |                |
          \               |\n         |    (log me)    |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |     200 F19    |                |\n         |                |
          \   (log me)    |                |\n         |                |--------------->|
          \    200 F20    |\n         |                |                |    (log
          me)    |\n         |                |                |--------------->|\n
          \        |                |                |                |\n      Figure
          4: The Terminating UA Does Not Support \"Log Me\" Marking.\n   F1:   Alice's
          UA inserts a \"log me\" marker in the dialog-creating\n         INVITE request
          F1.\n   F2:   INVITE F2 is \"log me\" marked; therefore, Proxy 2 maintains\n
          \        state that this dialog is to be logged.  Proxy 2 logs the\n         request
          and responses of this dialog if allowed per policy.\n   F5:   Proxy 2 inserts
          a \"log me\" marker in the 100 response it sends\n         to Proxy 1.\n
          \  F6:   Bob's UA does not support \"log me\" marking; therefore, the 180\n
          \        response to the INVITE request doesn't have a \"log me\" marker.\n
          \  F7:   Proxy 2 inserts a \"log me\" marker in the 180 response on behalf\n
          \        of Bob's UA before forwarding it.  The same applies to response\n
          \        F10 and the BYE request in F16.\n"
        title: 4.5.2.2.  "Log Me" Marking Not Supported by Terminating UA
      - contents:
        - "4.5.2.3.  \"Log Me\" Marking Removed by Originating Network\n   If network
          A in Figure 5 is performing testing independently of\n   network B, then
          network A removes \"log me\" marking from SIP requests\n   and responses
          forwarded to network B to prevent triggering unintended\n   logging in network
          B.  Proxy 1 removes \"log me\" marking from requests\n   and responses that
          it forwards to Proxy 2 and maintains state of\n   which dialogs are being
          \"log me\" marked in order to \"log me\" mark\n   requests and responses
          that it forwards from Proxy 2 to Alice's UA.\n   For troubleshooting purposes,
          Proxy 1 MAY also log the requests and\n   responses sent to or received
          from Proxy 2 even though it removed\n   \"log me\" marker prior to forwarding
          the messages to Proxy 2.\n          [ NETWORK A           ]          [ NETWORK
          B          ]\n        Alice           Proxy 1          Proxy 2            Bob\n
          \         |                |                |                |\n          |
          \  INVITE F1    |                |                |\n          |   (logme)
          \     |                |                |\n          |--------------->|
          \               |                |\n          |                |   INVITE
          F2    |                |\n          |                |  (no logme)    |
          \               |\n          |                |--------------->|                |\n
          \         |                |                |                |\n          |
          \               |                |                |\n          |     100
          \ F3    |                |                |\n          |     (logme)    |
          \               |   INVITE F4    |\n          |                |                |
          \ (no logme)    |\n          |<---------------|     100  F5    |--------------->|\n
          \         |                |  (no logme)    |                |\n          |
          \               |<---------------|                |\n          |                |
          \               |     180 F6     |\n          |                |                |
          \ (no logme)    |\n          |                |    180 F7      |<---------------|\n
          \         |                |  (no logme)    |                |\n          |
          \    180 F8     |<---------------|                |\n          |     (logme)
          \   |                |                |\n          |<---------------|                |
          \    200 F9     |\n          |                |                |  (no logme)
          \   |\n          |                |    200 F10     |<---------------|\n
          \         |                |  (no logme)    |                |\n          |
          \    200 F11    |<---------------|                |\n          |     (logme)
          \   |                |                |\n          |<---------------|                |
          \               |\n          |     ACK F12    |                |                |\n
          \         |     (logme)    |                |                |\n          |--------------->|
          \               |                |\n          |                |                |
          \               |\n          |                |    ACK F13     |                |\n
          \         |                |  (no logme)    |                |\n          |
          \               |--------------->|                |\n          |                |
          \               |                |\n          |                |                |
          \    ACK F14    |\n          |                |                |   (no logme)
          \  |\n          |                |                |--------------->|\n          |
          \               Both Way RTP Media                |\n          |<================================================>|\n
          \         |                |                |     BYE F15    |\n          |
          \               |                |   (no logme)   |\n          |                |
          \   BYE F16     |<---------------|\n          |                |  (no logme)
          \   |                |\n          |     BYE F17    |<---------------|                |\n
          \         |     (logme)    |                |                |\n          |<---------------|
          \               |                |\n          |     200 F18    |                |
          \               |\n          |    (logme)     |                |                |\n
          \         |--------------->|                |                |\n          |
          \               |     200 F19    |                |\n          |                |
          \  (no logme)   |                |\n          |                |--------------->|
          \               |\n          |                |                |                |\n
          \         |                |                |     200 F20    |\n          |
          \               |                |   (no logme)   |\n          |                |
          \               |--------------->|\n          |                |                |
          \               |\n      Figure 5: The Originating Network Removes \"Log
          Me\" Marking from\n                Outgoing SIP Messages at its Network
          Edge.\n   F1:   Alice's UA inserts a \"log me\" marker in the dialog-creating\n
          \        INVITE request, and Proxy 1 therefore maintains state that this\n
          \        dialog is to be logged.\n   F2:   Proxy 1 removes \"log me\" marking
          from INVITE request before\n         forwarding it to Proxy 2.  Proxy 1
          logs INVITE request F2.\n   F3:   Proxy 1 inserts a \"log me\" marker in
          the 100 response sent to\n         Alice's UA.  Proxy 1 logs this response.\n
          \  F8:   Proxy 1 inserts a \"log me\" marker in the 180 response before\n
          \        forwarding it to Alice's UA.  Proxy 1 logs this response.  The\n
          \        same applies to responses F11 and F17.\n   F13:  Proxy 1 removes
          \"log me\" marking from the ACK request.  Proxy 1\n         logs this request
          before forwarding it to Proxy 2.\n   F19:  Proxy 1 removes \"log me\" marking
          from the 200 response of the\n         BYE request.  Proxy 1 logs this response
          before forwarding it\n         to Proxy 2.\n"
        title: 4.5.2.3.  "Log Me" Marking Removed by Originating Network
      - contents:
        - "4.5.2.4.  \"Log Me\" Marking Removed by Supporting Terminating Network\n
          \  In Figure 6, Proxy 2 removes \"log me\" marking from all SIP requests\n
          \  and responses entering network B.  However, Proxy 2 supports\n   maintaining
          the marking state of the dialog and \"log me\" marks\n   requests and responses
          that it sends towards Proxy 1.  For\n   troubleshooting purposes, Proxy
          2 MAY also log the requests and\n   responses received from or sent to Bob
          even though it removed the\n   \"log me\" marker prior to forwarding the
          messages to Bob.  This\n   scenario might be used for troubleshooting a
          signaling path between\n   two enterprise or carrier networks, or across
          a transit network, with\n   minimal logging (i.e., only at the network boundaries).\n
          \      [ NETWORK A           ]          [ NETWORK B          ]\n       Alice
          \          Proxy 1          Proxy 2            Bob\n         |                |
          \               |                |\n         |   INVITE F1    |                |
          \               |\n         |   (log me)     |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |    INVITE F2   |                |\n         |                |
          \   (log me)    |                |\n         |                |--------------->|
          \               |\n         |                |                |                |\n
          \        |                |                |                |\n         |
          \    100  F3    |                |                |\n         |    (log
          me)    |                |                |\n         |<---------------|
          \               |                |\n         |                |                |
          \  INVITE F4    |\n         |                |                |   (no log
          me)  |\n         |                |     100  F5    |--------------->|\n
          \        |                |    (log me)    |                |\n         |
          \               |<---------------|                |\n         |                |
          \               |     180 F6     |\n         |                |                |
          \  (no log me)  |\n         |                |                |<---------------|\n
          \        |                |    180 F7      |                |\n         |
          \               |   (log me)     |                |\n         |                |<---------------|
          \               |\n         |                |                |                |\n
          \        |                |                |                |\n         |
          \    180 F8     |                |                |\n         |    (log
          me)    |                |                |\n         |<---------------|
          \               |     200 F9     |\n         |                |                |
          \  (no log me)  |\n         |                |    200 F10     |<---------------|\n
          \        |                |   (log me)     |                |\n         |
          \    200 F11    |<---------------|                |\n         |    (log
          me)    |                |                |\n         |<---------------|
          \               |                |\n         |     ACK F12    |                |
          \               |\n         |    (log me)    |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |    ACK F13     |                |\n         |                |
          \  (log me)     |                |\n         |                |--------------->|
          \    ACK F14    |\n         |                |                |   (no log
          me)  |\n         |                |                |--------------->|\n
          \        |                Both Way RTP Media                |\n         |<================================================>|\n
          \        |                |                |     BYE F15    |\n         |
          \               |                |   (no log me)  |\n         |                |
          \   BYE F16     |<---------------|\n         |                |   (log me)
          \    |                |\n         |     BYE F17    |<---------------|                |\n
          \        |    (log me)    |                |                |\n         |<---------------|
          \               |                |\n         |     200 F18    |                |
          \               |\n         |    (log me)    |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |     200 F19    |                |\n         |                |
          \   (log me)    |                |\n         |                |--------------->|
          \    200 F20    |\n         |                |                |   (no log
          me)  |\n         |                |                |--------------->|\n
          \        |                |                |                |\n      Figure
          6: The terminating network removes \"log me\" marking from\n                incoming
          SIP messages at its network edge.\n   F1:   Alice's UA inserts a \"log me\"
          marker in the dialog-creating\n         INVITE request F1.  Proxy 1 detects
          the \"log me\" marker, logs\n         the request, and maintains state that
          this dialog is to be\n         logged.\n   F2:   Proxy 2 removes the \"log
          me\" marker in the INVITE request F2\n         before forwarding it as F4.
          \ The same applies to responses F13\n         and F19.\n   F6:   Proxy 2
          inserts a \"log me\" marker in the 180 response to the\n         INVITE
          request and logs the request before forwarding it as F7.\n         The same
          applies to response F9 and the BYE request in F15.\n"
        title: 4.5.2.4.  "Log Me" Marking Removed by Supporting Terminating Network
      - contents:
        - "4.5.2.5.  \"Log Me\" Marking Passed by Non-supporting Terminating Network\n
          \  In Figure 6, Proxy 2 is not \"log me\" aware and therefore passes\n   marking
          in all SIP requests and responses entering network B\n   according to the
          rules in Sections 16.6 and 16.7 of [RFC3261].  Proxy\n   2 does not log
          requests and responses in the dialog.  Proxy 1\n   supports maintaining
          the marking state of the dialog.  When Proxy 1\n   observes that requests
          and responses received from Proxy 2 are not\n   marked, it adds the marking.\n
          \  For troubleshooting purposes, Proxy 1 MAY also log the requests and\n
          \  responses received from or sent to Proxy 2 even though Proxy 2 didn't\n
          \  add \"log me\" to messages sent to Proxy 1.\n       [ NETWORK A           ]
          \         [ NETWORK B          ]\n       Alice           Proxy 1          Proxy
          2            Bob\n         |                |                |                |\n
          \        |   INVITE F1    |                |                |\n         |
          \  (log me)     |                |                |\n         |--------------->|
          \               |                |\n         |                |    INVITE
          F2   |                |\n         |                |   (log me)     |                |\n
          \        |                |--------------->|                |\n         |
          \               |                |                |\n         |                |
          \               |                |\n         |     100  F3    |                |
          \               |\n         |   (log me)     |                |                |\n
          \        |<---------------|                |                |\n         |
          \               |                |   INVITE F4    |\n         |                |
          \               |   (log me)     |\n         |                |     100
          \ F5    |--------------->|\n         |                |   (no log me)  |
          \               |\n         |                |<---------------|                |\n
          \        |                |                |     180 F6     |\n         |
          \               |                |  (no log me)   |\n         |                |
          \               |<---------------|\n         |                |    180 F7
          \     |                |\n         |                |   (no log me)  |                |\n
          \        |                |<---------------|                |\n         |
          \               |                |                |\n         |                |
          \               |                |\n         |     180 F8     |                |
          \               |\n         |   (log me)     |                |                |\n
          \        |<---------------|                |     200 F9     |\n         |
          \               |                |   (no log me)  |\n         |                |
          \   200 F10     |<---------------|\n         |                |  (no log
          me)   |                |\n         |     200 F11    |<---------------|                |\n
          \        |   (log me)     |                |                |\n         |<---------------|
          \               |                |\n         |     ACK F12    |                |
          \               |\n         |   (log me)     |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |    ACK F13     |                |\n         |                |
          \  (log me)     |                |\n         |                |--------------->|
          \    ACK F14    |\n         |                |                |    (log
          me)    |\n         |                |                |--------------->|\n
          \        |                Both Way RTP Media                |\n         |<================================================>|\n
          \        |                |                |     BYE F15    |\n         |
          \               |                |  (no log me)   |\n         |                |
          \   BYE F16     |<---------------|\n         |                |   (no log
          me)  |                |\n         |     BYE F17    |<---------------|                |\n
          \        |   (log me)     |                |                |\n         |<---------------|
          \               |                |\n         |     200 F18    |                |
          \               |\n         |   (log me)     |                |                |\n
          \        |--------------->|                |                |\n         |
          \               |     200 F19    |                |\n         |                |
          \   (log me)    |                |\n         |                |--------------->|
          \    200 F20    |\n         |                |                |    (log
          me)    |\n         |                |                |--------------->|\n
          \        |                |                |                |\n      Figure
          7: The Terminating Network Removes \"Log Me\" Marking from\n                Incoming
          SIP Messages at its Network Edge.\n   F1:   Alice's UA inserts a \"log me\"
          marker in the dialog-creating\n         INVITE request F1.  Proxy 1 detects
          the \"log me\" marker, logs\n         the request, and maintains state that
          this dialog is to be\n         logged.\n   F2:   Proxy 2 passes the \"log
          me\" marker in the INVITE request F2\n         before forwarding it as F4.
          \ The same applies to request F13\n         and response F19.\n   F6:   Bob's
          UA does not support \"log me\" marking and does not echo\n         the \"log
          me\" marker in response F6.  The same applies to\n         response F9 and
          the BYE request F15.\n   F7:   Proxy 1 inserts a \"log me\" marker in the
          180 response of the\n         INVITE request before forwarding it as F8.
          \ The same applies to\n         response F10 and the BYE request F16.\n"
        title: 4.5.2.5.  "Log Me" Marking Passed by Non-supporting Terminating Network
      title: 4.5.2.  Stateful Processing
    title: 4.5.  "Log Me" Marker Processing by SIP Intermediaries
  title: 4.  SIP Entity Behavior
- contents:
  - '5.  Errors

    '
  - contents:
    - "5.1.  Error Cases\n   The following error cases are possible for \"log me\"
      marking:\n   1.  A \"log me\" marker is unexpectedly missing from a dialog that
      is\n       being logged.\n   2.  A \"log me\" marker unexpectedly appears in
      a dialog that is not\n       being logged.\n   3.  A \"log me\" marker unexpectedly
      disappears and then reappears in a\n       dialog being logged.  This is treated
      in the same way as case 1.\n   4.  A \"log me\" marker is unexpectedly missing
      from a retransmission\n       in a dialog being logged.  This is treated in
      the same way as\n       case 1.\n   These cases apply to any request or response
      sent by any entity and\n   in any direction in a dialog being \"log me\" marked.
      \ Detection of\n   these error cases is described in this section.\n"
    - contents:
      - "5.1.1.  Missing \"Log Me\" Marker Error Case\n   Since \"log me\" marking
        is per-dialog, if a dialog is being marked and\n   marking is missing from
        a request or response then this is an error.\n   However, detecting such errors
        is not as simple as checking for\n   missing markers because of cases such
        as non-supporting terminals\n   where it is normal that marking is not done.\n
        \  Detecting errors must be evaluated separately for each neighbor.  It\n
        \  is an error if a particular neighbor has previously sent \"log me\" in\n
        \  the dialog and then stops, independently of what has been happening\n   with
        other neighbors.\n   UAs and intermediaries that are stateless with respect
        to \"log me\"\n   marking are not able detect such errors.  User agents and\n
        \  intermediaries that are stateful with respect to \"log me\" marking are\n
        \  able to detect that a marker is missing from a dialog that has\n   previously
        been \"log me\" marked.  Error cases are illustrated in this\n   section,
        and non-error cases in Section 5.2.1.\n   The following figures illustrate
        missing \"log me\" marker errors.\n   Figure 8 shows an error detected at
        Proxy 1, where an expected \"log\n   me\" marker is missing.\n       [ NETWORK
        A           ]          [ NETWORK B          ]\n       Alice           Proxy
        1          Proxy 2            Bob\n         |                |                |
        \               |\n         |   INVITE F1    |                |                |\n
        \        |    (log me)    |  INVITE F2     |                |\n         |--------------->|
        \  (log me)     |  INVITE F3     |\n         |                |--------------->|
        \  (log me)     |\n         |                |                |--------------->|\n
        \        |                |                |                |\n         |
        \               |                |   200 F4       |\n         |                |
        \    200 F5     |   (log me)     |\n         |     200 F6     |    (log me)
        \   |<---------------|\n         |    (log me)    |<---------------|                |\n
        \        |<---------------|                |                |\n         |
        \               |                |                |\n         |     ACK F7
        \    |                |                |\n         |  (no log me)   |                |
        \               |\n         |--------------->|                |                |\n
        \        |                |     ACK F8     |                |\n         |
        \               |  (no log me)   |                |\n         |                |--------------->|
        \               |\n         |                |                |     ACK F9
        \    |\n         |                |                |  (no log me)   |\n         |
        \               |                |--------------->|\n               Figure
        8: Error Case: Missing \"Log Me\" Marker\n   F1:   Proxy 1 detects the \"log
        me\" marker and maintains state that\n         this dialog is to be logged.\n
        \  F7:   Proxy 1 detects that the expected \"log me\" marker is missing,\n
        \        considers it to be an error, and stops \"log me\" marking in\n         subsequent
        requests and responses in this dialog.\n   Figure 9 shows an error detected
        at both Proxy 2 and Bob's UA.\n       [ NETWORK A           ]          [ NETWORK
        B          ]\n       Alice           Proxy 1          Proxy 2            Bob\n
        \        |   INVITE F1    |                |                |\n         |
        \  (log me)     |                |                |\n         |--------------->|
        \               |                |\n         |                |    INVITE
        F2   |                |\n         |                |   (log me)     |                |\n
        \        |                |--------------->|                |\n         |
        \               |                |                |\n         |                |
        \               |                |\n         |     100  F3    |                |
        \               |\n         |   (log me)     |                |                |\n
        \        |<---------------|                |                |\n         |
        \               |                |   INVITE F4    |\n         |                |
        \               |   (log me)     |\n         |                |     100  F5
        \   |--------------->|\n         |                |   (log me)     |                |\n
        \        |                |<---------------|                |\n         |
        \               |                |     180 F6     |\n         |                |
        \               |     (log me)   |\n         |                |                |<---------------|\n
        \        |                |    180 F7      |                |\n         |
        \               |   (log me)     |                |\n         |                |<---------------|
        \               |\n         |                |                |                |\n
        \        |                |                |                |\n         |
        \    180 F8     |                |                |\n         |   (log me)
        \    |                |                |\n         |<---------------|                |
        \    200 F9     |\n         |                |                |    (log me)
        \   |\n         |                |    200 F10     |<---------------|\n         |
        \               |   (log me)     |                |\n         |     200 F11
        \   |<---------------|                |\n         |   (log me)     |                |
        \               |\n         |<---------------|                |                |\n
        \        |     ACK F12    |                |                |\n         |
        \ (no log me)   |                |                |\n         |--------------->|
        \               |                |\n         |                |    ACK F13
        \    |                |\n         |                | (no log me)    |                |\n
        \        |                |--------------->|     ACK F14    |\n         |
        \               |                |   (no log me)  |\n         |                |
        \               |--------------->|\n               Figure 9: Error Case: Missing
        \"Log Me\" Marker\n   F2:   Proxy 2 detects the \"log me\" marker and maintains
        state that\n         this dialog is to be logged.\n   F4:   Bob's UA detects
        the \"log me\" marker and maintains state that\n         this dialog is to
        be logged.\n   F12:  Proxy 1 detects that the expected \"log me\" marker is
        missing,\n         considers it to be an error, and stops \"log me\" marking
        in\n         subsequent requests and responses in this dialog.  Hence, it\n
        \        does not insert a \"log me\" marker in F13.\n   F13:  Proxy 2 detects
        that the expected \"log me\" marker is missing,\n         considers it to
        be an error, and stops \"log me\" marking in\n         subsequent requests
        and responses in this dialog.\n   F14:  Proxy 2 does not insert a \"log me\"
        marker because it has\n         stopped \"log me\" marking due to an error
        observed in F13.\n         Bob's UA detects that the expected \"log me\" marker
        is missing,\n         considers it to be an error, and stops \"log me\" marking
        in\n         subsequent requests and responses in this dialog.\n"
      title: 5.1.1.  Missing "Log Me" Marker Error Case
    - contents:
      - "5.1.2.  \"Log Me\" Marker Appears Mid-dialog Error Case\n   SIP endpoints,
        intermediaries acting on behalf of endpoints, and\n   B2BUAs that can perform
        \"log me\" marking are stateful.  Such entities\n   will expect a \"log me\"
        marker only for dialogs where the initial\n   dialog-creating request was
        \"log me\" marked, either by themselves or\n   by an upstream entity.  \"Log
        me\" marking that subsequently begins\n   mid-dialog is an error.\n   Figure
        10 illustrates a \"log me\" marking error observed in the middle\n   of a
        dialog.  Alice's UA supports \"log me\" marking but the call is\n   not initially
        marked for logging, i.e., INVITE F1 is not \"log me\"\n   marked.  But Alice's
        UA starts to \"log me\" mark at the ACK request\n   F7.  Proxy 1 supports
        \"log me\" marking at the originating network\n   boundary and therefore detects
        the error, does not log signaling, and\n   removes the \"log me\" marker before
        forwarding the ACK request F8.\n          [ NETWORK A           ]          [
        NETWORK B          ]\n          Alice           Proxy 1          Proxy 2            Bob\n
        \           |                |                |                |\n            |
        \  INVITE F1    |                |                |\n            |  (no log
        me)   |    INVITE F2   |                |\n            |--------------->|
        \  (no log me)  |    INVITE F3   |\n            |                |--------------->|
        \  (no log me)  |\n            |                |                |--------------->|\n
        \           |                |                |                |\n            |
        \               |                |    200 F4      |\n            |                |
        \   200 F5      |  (no log me)   |\n            |    200 F6      |  (no log
        me)   |<---------------|\n            |  (no log me)   |<---------------|
        \               |\n            |<---------------|                |                |\n
        \           |                |                |                |\n            |
        \   ACK F7      |                |                |\n            |   (log
        me)     |                |                |\n            |--------------->|
        \               |                |\n            |                |    ACK
        F8      |                |\n            |                |  (no log me)   |
        \               |\n            |                |--------------->|                |\n
        \           |                |                |    ACK F9      |\n            |
        \               |                |   (log me)     |\n            |                |
        \               |--------------->|\n         Figure 10: Error Case: \"Log
        Me\" Marker Begins Mid-dialog\n"
      title: 5.1.2.  "Log Me" Marker Appears Mid-dialog Error Case
    title: 5.1.  Error Cases
  - contents:
    - '5.2.  Non-error Cases

      '
    - contents:
      - "5.2.1.  Missing \"Log Me\" Marker Non-error Case\n   The following figure
        illustrates a non-error case.\n   Figure 11 shows Proxy 2 receiving a response
        with no \"log me\" marker\n   that is not an error case.  Proxy 2 is configured
        by network B to\n   perform \"log me\" marking on behalf of Bob's UA, which
        does not\n   support \"log me\" marking.  Proxy 2 does not therefore expect\n
        \  responses from Bob to include a \"log me\" marker.\n       [ NETWORK A
        \          ]          [ NETWORK B          ]\n       Alice           Proxy
        1          Proxy 2            Bob\n         |                |                |
        \               |\n         |   INVITE F1    |                |                |\n
        \        |   (log me)     |                |                |\n         |--------------->|
        \               |                |\n         |                |    INVITE
        F2   |                |\n         |                |   (log me)     |                |\n
        \        |                |--------------->|                |\n         |
        \               |                |                |\n         |                |
        \               |                |\n         |     100  F3    |                |
        \               |\n         |   (log me)     |                |                |\n
        \        |<---------------|                |                |\n         |
        \               |                |   INVITE F4    |\n         |                |
        \               |   (log me)     |\n         |                |     100  F5
        \   |--------------->|\n         |                |   (log me)     |                |\n
        \        |                |<---------------|                |\n         |
        \               |                |     180 F6     |\n         |                |
        \               |   (no log me)  |\n         |                |                |<---------------|\n
        \        |                |    180 F7      |                |\n         |
        \               |   (log me)     |                |\n         |                |<---------------|
        \               |\n         |     180  F8    |                |                |\n
        \        |    (log me)    |                |                |\n         |<---------------|
        \               |                |\n            Figure 11: Non-error Case:
        Missing \"Log Me\" Marker\n   F2:   Proxy 2 detects the \"log me\" marker
        and maintains state that\n         this dialog is to be logged.  Proxy 2 inserts
        \"log me\" markers\n         on behalf of Bob's user agent, such as in F7.\n
        \  F6:   Proxy 2 detects that the \"log me\" marker is missing from the\n
        \        response but considers \"log me\" marking to be ongoing as a\n         marker
        was not expected.\n   F7:   Proxy 2 continues to \"log me\" mark requests
        and responses on\n         behalf of Bob's UA.\n"
      title: 5.2.1.  Missing "Log Me" Marker Non-error Case
    - contents:
      - "5.2.2.  \"Log Me\" Marker Appears Mid-dialog Non-error Case\n   A SIP intermediary
        that can perform \"log me\" marking on behalf of an\n   endpoint MAY optionally
        mark a request or response towards a\n   non-supporting endpoint, such as
        the 100 response F3 in Figure 3.  In\n   this case, the endpoint will receive
        a \"log me\" marker mid-dialog,\n   and this is not considered an error.\n
        \  Another use case is a network in which some (but not all) endpoints\n   support
        \"log me\" marking and that wants to avoid treating endpoints\n   differently
        by always managing \"log me\" marking at a SIP\n   intermediary.  In this
        case, the endpoint that supports \"log me\" is\n   not configured to mark
        a dialog; instead, the SIP intermediary is\n   configured to perform \"log
        me\" marking on behalf of that endpoint.\n   This case still requires authorization
        as described in Section 7.1.\n   This SIP intermediary MAY optionally mark
        a request or response\n   towards the endpoint, such as the 100 response F3
        in Figure 3.  The\n   endpoint will receive a \"log me\" marker mid-dialog,
        which is not\n   considered an error.\n"
      title: 5.2.2.  "Log Me" Marker Appears Mid-dialog Non-error Case
    - contents:
      - "5.2.3.  Combining Dialogs Non-error Case\n   When troubleshooting call flows
        that involve the SIP Join header\n   field specified in [RFC3911], the ideal
        scenario is to have \"log me\"\n   marking enabled on all UAs and intermediaries
        participating in the\n   end-to-end session.  If the ideal scenario is not
        feasible, the\n   following rules apply:\n   o  If an endpoint or an intermediary
        that is \"log me\" aware and is\n      already \"log me\" marking a dialog
        receives a SIP INVITE with a\n      Join header field and without a \"log
        me\" marker, it MUST NOT \"log\n      me\" mark responses and requests exchanged
        within the new dialog\n      established as a result of processing the SIP
        INVITE.\n   o  If an endpoint or an intermediary that is \"log me\" aware
        and is\n      not \"log me\" marking a dialog receives a SIP INVITE with a
        Join\n      header field and with a \"log me\" marker, it MUST \"log me\"
        mark\n      responses and requests exchanged within the new dialog established\n
        \     as a result of processing the SIP INVITE as per Section 4 of this\n
        \     document.\n"
      title: 5.2.3.  Combining Dialogs Non-error Case
    title: 5.2.  Non-error Cases
  - contents:
    - "5.3.  Error Handling\n   The two error types that SIP entities must handle
      are defined in\n   Section 5.1: a missing marker error and an error of \"log
      me\" marking\n   that begins mid-dialog.  Section 5.2 gives exceptions that
      have\n   marking that begins mid-dialog or a missing marker but are not\n   errors.\n
      \  If a missing marker error is detected by a UA, SIP intermediary, or\n   B2BUA,
      it SHOULD consider this to be an error condition in the \"log\n   me\" functionality.
      \ It MUST NOT mark subsequent requests and\n   responses, and it MUST stop logging
      messages in the same dialog.  Any\n   previously logged messages SHOULD be retained,
      for the time period\n   defined in Section 8.5, and not deleted.\n   If a \"log
      me\" marking that begins mid-dialog error is detected by a\n   UA, SIP intermediary,
      or B2BUA, it SHOULD consider this to be an\n   error condition in the \"log
      me\" functionality.  It MUST NOT forward\n   the \"log me\" marker, and it MUST
      NOT log the message.  It MUST NOT\n   mark subsequent requests and responses,
      and it MUST NOT log\n   subsequent messages in the same dialog.\n   \"Log me\"
      marking errors can be detected and handled only by\n   supporting UAs or B2BUAs.
      \ A SIP proxy as defined in [RFC3261] cannot\n   detect or handle marking errors
      and will simply forward any \"log me\"\n   marker it receives.\n"
    title: 5.3.  Error Handling
  title: 5.  Errors
- contents:
  - "6.  Augmented BNF for the \"logme\" Parameter\n   ABNF is described in [RFC5234].
    \ This document introduces a new\n   \"logme\" parameter for the Session-ID header
    field defined in\n   Section 5 of [RFC7989].\n          sess-id-param       =/
    logme-param\n          logme-param         = \"logme\"\n            Figure 12:
    Augmented BNF for the \"logme\" Parameter\n"
  title: 6.  Augmented BNF for the "logme" Parameter
- contents:
  - '7.  Security Considerations

    '
  - contents:
    - "7.1.  \"Log Me\" Authorization\n   \"Log me\" marking MUST be disabled by default
      both at the endpoints\n   and intermediaries and MUST be enabled only by authorized
      users.  For\n   example, an end user or network administrator must give permission\n
      \  for a terminal that supports \"log me\" marking in order to initiate\n   marking.
      \ Similarly, a network administrator must enable a\n   configuration at the
      SIP intermediary to perform \"log me\" marking on\n   behalf of a terminal that
      does not support \"log me\" marking.  The\n   permission MUST be limited to
      only specific calls of interest that\n   are originated in a given time duration.\n
      \  Activating a debug mode affects the operation of a terminal;\n   therefore,
      the debugging configuration MUST be supplied by an\n   authorized party to an
      authorized terminal through a secure\n   communication channel.\n"
    title: 7.1.  "Log Me" Authorization
  - contents:
    - "7.2.  \"Log Me\" Marker Removal\n   The \"log me\" marker is not sensitive
      information, though it will\n   sometimes be inserted because a particular device
      is experiencing\n   problems.\n   The presence of a \"log me\" marker will cause
      some SIP entities to log\n   signaling messages.  Therefore, this marker MUST
      be removed at the\n   earliest opportunity if it has been incorrectly inserted,
      such as\n   appearing mid-dialog in a dialog that was not being logged or outside\n
      \  the configured start and stop of logging.\n   If SIP requests and responses
      are exchanged with an external network\n   with which there is no agreement
      to pass \"log me\" marking, then the\n   \"log me\" marking is removed as mandated
      in Section 3.4.2.  This\n   behavior applies to incoming and outgoing requests
      and responses.\n"
    title: 7.2.  "Log Me" Marker Removal
  - contents:
    - "7.3.  Denial-of-Service Attacks\n   Maliciously configuring a large number
      of terminals to simultaneously\n   mark dialogs with a \"log me\" marker will
      cause high processor load on\n   SIP entities that are logging signaling.  Since
      \"log me\" marking is\n   for the small number of dialogs subject to troubleshooting
      or\n   regression testing, the number of dialogs that can be simultaneously\n
      \  logged can be statically limited without adversely affecting the\n   usefulness
      of \"log me\" marking.  Also, the SIP intermediary closest\n   to the terminal
      and SIP intermediary at network edge (e.g., Session\n   Border Controllers)
      can be configured to screen-out \"log me\" markers\n   when troubleshooting
      or regression testing is not in progress.\n"
    title: 7.3.  Denial-of-Service Attacks
  - contents:
    - "7.4.  Data Protection\n   A SIP entity that has logged information MUST protect
      the logs.\n   Storage of the log files are subject to the security considerations\n
      \  specified in [RFC6872].\n"
    title: 7.4.  Data Protection
  title: 7.  Security Considerations
- contents:
  - "8.  Privacy Considerations\n   Logging includes all SIP header fields.  The SIP
    privacy mechanisms\n   defined in [RFC3323] can be used to ensure that logs do
    not divulge\n   personal identity information in the core SIP header fields specified\n
    \  in [RFC3261].\n   Privacy mechanisms might also need to be applied to header
    fields\n   defined by SIP extensions and for managing the confidentiality of the\n
    \  Request-URI and SIP header fields and bodies.\n"
  - contents:
    - "8.1.  Personal Identifiers\n   \"Log me\" marking is defined for the SIP protocol,
      and SIP has header\n   fields such as From, Contact, and P-Asserted-Identity
      that can carry\n   personal identifiers.  Different protocol interactions can
      be\n   correlated using the Session-ID and Call-ID header fields, but such\n
      \  correlation is limited to a single end-to-end session.\n   In order to protect
      user privacy during logging, privacy settings can\n   be enabled or requested
      by the terminal used by the end user.\n   [RFC3323] suggests two mechanisms:\n
      \  o  By using the value \"anonymous\" in the From header field\n   o  By requesting
      header-level and session-level privacy from SIP\n      intermediaries using
      the Privacy header\n   Endpoints that support Globally Routable User Agent URIs
      (GRUUs) can\n   use a temporary GRUU (see Section 3.1.2 of [RFC5627]) assigned
      by the\n   Registrar in order to protect user privacy as discussed in\n   Section
      10.3 of [RFC5627].\n   Intermediaries that perform \"log me\" marking on behalf
      of the\n   endpoints (see Section 4.3) may also be configured to apply privacy\n
      \  (as defined in Section 3.3 of [RFC3323]) on messages that belong to a\n   dialog
      that is \"log me\" marked.\n   Complete anonymization (e.g., the Request-URI
      and the \"username\"\n   field in the \"o=\" parameter of an SDP body) may not
      be possible in\n   all circumstances; therefore, administrators of the originating
      and\n   terminating networks should consider how privacy will be ensured when\n
      \  providing consent for \"log me\" marking.\n   \"Log me\" marking is typically
      used for troubleshooting and regression\n   testing; in some cases, a service-provider-owned
      device with a dummy\n   account can be used instead of a customer device.  In
      such cases, no\n   personal identifiers are included in the logged signaling
      messages.\n"
    title: 8.1.  Personal Identifiers
  - contents:
    - "8.2.  Data Stored at SIP Intermediaries\n   SIP endpoints and intermediaries
      that honor the \"log me\" request\n   store all the SIP messages that are exchanged
      within a given dialog.\n   SIP messages can contain the personal identifiers
      listed in\n   Section 8.1 and additionally a user identity, calling party number,\n
      \  IP address, hostname, and other user-related or device-related items.\n   The
      SIP message bodies describe the kind of session being set up by\n   the identified
      end user and device.\n   \"Log me\" marking does not introduce any additional
      user or device\n   data to SIP but might indicate that a specific user is experiencing
      a\n   problem.\n   If the SIP SDP parameters [SDP-PARAMETERS] contain sensitive
      security\n   information (e.g., encryption keys) such as \"crypto\" [RFC4568],
      3GPP-\n   Integrity-Key, or 3GPP-SRTP-Config [RFC6064] attributes, then the\n
      \  attribute value MUST be masked with a dummy value prior to storing\n   the
      message in a log file.  For example, the attribute value can be\n   replaced
      with a string of special characters like \"X\", \"*\", and \"#\"\n   as shown
      in the example below.\n   a=crypto:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n
      \   XXXXXXXXXXXXX\n"
    title: 8.2.  Data Stored at SIP Intermediaries
  - contents:
    - "8.3.  Data Visible at Network Elements\n   SIP messages that are logged due
      to \"log me\" requests are stored only\n   by the SIP initiators, intermediaries,
      and recipients.  Enablers as\n   defined in Section 3.1 of [RFC6973], such as
      firewalls and DNS\n   servers, do not log messages due to the \"log me\" marking.\n"
    title: 8.3.  Data Visible at Network Elements
  - contents:
    - "8.4.  Preventing Fingerprinting\n   \"Log me\" functionality is typically used
      to troubleshoot a given\n   problem and, hence, can be used as a method to identify
      users and\n   devices that are experiencing issues.  The best way to prevent\n
      \  fingerprinting of users is to enable or request SIP privacy for the\n   logged
      dialog.\n"
    title: 8.4.  Preventing Fingerprinting
  - contents:
    - "8.5.  Retaining Logs\n   The lifetime of \"log me\" marking is equivalent to
      the lifetime of the\n   dialog that initiated the \"log me\" request.  When
      \"log me\" is\n   extended to related dialogs, the lifetime is extended until
      there is\n   no remaining related dialog for the end-to-end session.\n   \"Log
      me\" automatically expires at the end of the dialog, and there is\n   no explicit
      mechanism to turn off logging within a dialog.\n   The scope of \"log me\" marking
      is limited, i.e., a user or the network\n   administrator has to enable it on
      a per-session basis or for a\n   specific time period.  This minimizes the risk
      of exposing user data\n   for an indefinite time.\n   The retention time period
      for logged messages SHOULD be the minimum\n   needed for each particular troubleshooting
      or testing case.  The\n   retention period is configured based on the data-retention
      policies\n   of service providers and enterprises.\n"
    title: 8.5.  Retaining Logs
  - contents:
    - "8.6.  User Control of Logging\n   Consent to turn on \"log me\" marking for
      a given session MUST be\n   provided by the end user or by the network administrator.
      \ It is\n   handled outside of the protocol through user interface or application\n
      \  programming interfaces at the endpoint, call control elements, and\n   network
      management systems.\n   Originating and terminating endpoints that are \"log
      me\" aware and\n   have a user interface MUST indicate (using text, icon, etc.)
      to the\n   user that a session is being logged.\n   SIP entities across the
      communication path MAY be configured to pass\n   through the \"log me\" marking
      but not honor the request, i.e., not log\n   the data based on local policies.\n"
    title: 8.6.  User Control of Logging
  - contents:
    - "8.7.  Recommended Defaults\n   The recommended defaults for \"log me\" marking
      are:\n   o  Turn on SIP privacy as described in Section 8 or use a device that\n
      \     is service provider owned with a dummy user identity for test\n      calls.\n
      \  o  Use the local UUID portion of the Session-ID header field value at\n      the
      originating device as the test case identifier as described in\n      Section
      3.3.\n"
    title: 8.7.  Recommended Defaults
  title: 8.  Privacy Considerations
- contents:
  - '9.  IANA Considerations

    '
  - contents:
    - "9.1.  Registration of the \"logme\" Parameter\n   The following parameter has
      been added to the \"Header Field\n   Parameters and Parameter Values\" section
      of the \"Session Initiation\n   Protocol (SIP) Parameters\" registry:\n   +-------------+---------------+-------------------------+-----------+\n
      \  | Header      | Parameter     | Predefined Values       | Reference |\n   |
      Field       | Name          |                         |           |\n   +-------------+---------------+-------------------------+-----------+\n
      \  | Session-ID  | logme         | No (no values are       | [RFC8497] |\n   |
      \            |               | allowed)                |           |\n   +-------------+---------------+-------------------------+-----------+\n
      \                                 Table 1\n"
    title: 9.1.  Registration of the "logme" Parameter
  title: 9.  IANA Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [MEDIA-TYPES]\n              IANA, \"Media
      Types\",\n              <https://www.iana.org/assignments/media-types/>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3261]  Rosenberg,
      J., Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J.,
      Sparks, R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation
      Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261, June 2002,\n              <https://www.rfc-editor.org/info/rfc3261>.\n
      \  [RFC3323]  Peterson, J., \"A Privacy Mechanism for the Session\n              Initiation
      Protocol (SIP)\", RFC 3323,\n              DOI 10.17487/RFC3323, November 2002,\n
      \             <https://www.rfc-editor.org/info/rfc3323>.\n   [RFC3891]  Mahy,
      R., Biggs, B., and R. Dean, \"The Session Initiation\n              Protocol
      (SIP) \"Replaces\" Header\", RFC 3891,\n              DOI 10.17487/RFC3891,
      September 2004,\n              <https://www.rfc-editor.org/info/rfc3891>.\n
      \  [RFC3911]  Mahy, R. and D. Petrie, \"The Session Initiation Protocol\n              (SIP)
      \"Join\" Header\", RFC 3911, DOI 10.17487/RFC3911,\n              October 2004,
      <https://www.rfc-editor.org/info/rfc3911>.\n   [RFC4538]  Rosenberg, J., \"Request
      Authorization through Dialog\n              Identification in the Session Initiation
      Protocol (SIP)\",\n              RFC 4538, DOI 10.17487/RFC4538, June 2006,\n
      \             <https://www.rfc-editor.org/info/rfc4538>.\n   [RFC4568]  Andreasen,
      F., Baugher, M., and D. Wing, \"Session\n              Description Protocol
      (SDP) Security Descriptions for Media\n              Streams\", RFC 4568, DOI
      10.17487/RFC4568, July 2006,\n              <https://www.rfc-editor.org/info/rfc4568>.\n
      \  [RFC5627]  Rosenberg, J., \"Obtaining and Using Globally Routable User\n
      \             Agent URIs (GRUUs) in the Session Initiation Protocol\n              (SIP)\",
      RFC 5627, DOI 10.17487/RFC5627, October 2009,\n              <https://www.rfc-editor.org/info/rfc5627>.\n
      \  [RFC6064]  Westerlund, M. and P. Frojdh, \"SDP and RTSP Extensions\n              Defined
      for 3GPP Packet-Switched Streaming Service and\n              Multimedia Broadcast/Multicast
      Service\", RFC 6064,\n              DOI 10.17487/RFC6064, January 2011,\n              <https://www.rfc-editor.org/info/rfc6064>.\n
      \  [RFC6872]  Gurbani, V., Ed., Burger, E., Ed., Anjali, T., Abdelnur,\n              H.,
      and O. Festor, \"The Common Log Format (CLF) for the\n              Session
      Initiation Protocol (SIP): Framework and\n              Information Model\",
      RFC 6872, DOI 10.17487/RFC6872,\n              February 2013, <https://www.rfc-editor.org/info/rfc6872>.\n
      \  [RFC6873]  Salgueiro, G., Gurbani, V., and A. Roach, \"Format for the\n              Session
      Initiation Protocol (SIP) Common Log Format\n              (CLF)\", RFC 6873,
      DOI 10.17487/RFC6873, February 2013,\n              <https://www.rfc-editor.org/info/rfc6873>.\n
      \  [RFC7989]  Jones, P., Salgueiro, G., Pearce, C., and P. Giralt, \"End-\n
      \             to-End Session Identification in IP-Based Multimedia\n              Communication
      Networks\", RFC 7989, DOI 10.17487/RFC7989,\n              October 2016, <https://www.rfc-editor.org/info/rfc7989>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [SDP-PARAMETERS]\n              IANA,
      \"Session Description Protocol (SDP) Parameters\",\n              <https://www.iana.org/assignments/sdp-parameters/>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3665]  Johnston, A., Donovan, S., Sparks,
      R., Cunningham, C., and\n              K. Summers, \"Session Initiation Protocol
      (SIP) Basic Call\n              Flow Examples\", BCP 75, RFC 3665, DOI 10.17487/RFC3665,\n
      \             December 2003, <https://www.rfc-editor.org/info/rfc3665>.\n   [RFC5234]
      \ Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n
      \             <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC5589]  Sparks,
      R., Johnston, A., Ed., and D. Petrie, \"Session\n              Initiation Protocol
      (SIP) Call Control - Transfer\",\n              BCP 149, RFC 5589, DOI 10.17487/RFC5589,
      June 2009,\n              <https://www.rfc-editor.org/info/rfc5589>.\n   [RFC6973]
      \ Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n              Morris,
      J., Hansen, M., and R. Smith, \"Privacy\n              Considerations for Internet
      Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July 2013,\n              <https://www.rfc-editor.org/info/rfc6973>.\n
      \  [RFC7092]  Kaplan, H. and V. Pascual, \"A Taxonomy of Session\n              Initiation
      Protocol (SIP) Back-to-Back User Agents\",\n              RFC 7092, DOI 10.17487/RFC7092,
      December 2013,\n              <https://www.rfc-editor.org/info/rfc7092>.\n   [RFC7206]
      \ Jones, P., Salgueiro, G., Polk, J., Liess, L., and H.\n              Kaplan,
      \"Requirements for an End-to-End Session\n              Identification in IP-Based
      Multimedia Communication\n              Networks\", RFC 7206, DOI 10.17487/RFC7206,
      May 2014,\n              <https://www.rfc-editor.org/info/rfc7206>.\n   [RFC8123]
      \ Dawes, P. and C. Arunachalam, \"Requirements for Marking\n              SIP
      Messages to be Logged\", RFC 8123,\n              DOI 10.17487/RFC8123, March
      2017,\n              <https://www.rfc-editor.org/info/rfc8123>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgments\n   The authors wish to thank Paul Giralt, Paul Kyzivat, Jorgen
    Axell,\n   Christer Holmberg, Vijay Gurbani, Ben Campbell, Gonzalo Salgueiro,\n
    \  Francesca Palombini, Adam Roach, Mirja Kuhlewind, Benjamin Kaduk,\n   Eric
    Rescorla, Alissa Cooper, Warren Kumari, and Alexey Melnikov for\n   their constructive
    review comments and guidance while developing this\n   document.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Peter Dawes\n   Vodafone Group\n   The Connection\n   Newbury,
    Berkshire  RG14 2FN\n   United Kingdom\n   Phone: +44 7717 275009\n   Email: peter.dawes@vodafone.com\n
    \  Chidambaram Arunachalam\n   Cisco Systems\n   7200-12 Kit Creek Road\n   Research
    Triangle Park, NC  27709\n   United States of America\n   Email: carunach@cisco.com\n"
  title: Authors' Addresses
