- title: __initial_text__
  contents:
  - '      Network Endpoint Assessment (NEA): Overview and Requirements

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the problem statement, scope, and protocol\n\
    \   requirements between the components of the NEA (Network Endpoint\n   Assessment)\
    \ reference model.  NEA provides owners of networks (e.g.,\n   an enterprise offering\
    \ remote access) a mechanism to evaluate the\n   posture of a system.  This may\
    \ take place during the request for\n   network access and/or subsequently at\
    \ any time while connected to the\n   network.  The learned posture information\
    \ can then be applied to a\n   variety of compliance-oriented decisions.  The\
    \ posture information is\n   frequently useful for detecting systems that are\
    \ lacking or have\n   out-of-date security protection mechanisms such as: anti-virus\
    \ and\n   host-based firewall software.  In order to provide context for the\n\
    \   requirements, a reference model and terminology are introduced.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements Language ......................................4\n  \
    \ 2. Terminology .....................................................5\n   3.\
    \ Applicability ...................................................7\n      3.1.\
    \ Scope ......................................................7\n      3.2. Applicability\
    \ of Environments ..............................8\n   4. Problem Statement ...............................................9\n\
    \   5. Reference Model ................................................10\n  \
    \    5.1. NEA Client and Server .....................................12\n    \
    \       5.1.1. NEA Client .........................................12\n      \
    \            5.1.1.1. Posture Collector .........................12\n        \
    \          5.1.1.2. Posture Broker Client .....................14\n          \
    \        5.1.1.3. Posture Transport Client ..................15\n           5.1.2.\
    \ NEA Server .........................................15\n                  5.1.2.1.\
    \ Posture Validator .........................15\n                  5.1.2.2. Posture\
    \ Broker Server .....................17\n                  5.1.2.3. Posture Transport\
    \ Server ..................18\n      5.2. Protocols .................................................18\n\
    \           5.2.1. Posture Attribute Protocol (PA) ....................18\n  \
    \         5.2.2. Posture Broker Protocol (PB) .......................19\n    \
    \       5.2.3. Posture Transport Protocol (PT) ....................19\n      5.3.\
    \ Attributes ................................................20\n           5.3.1.\
    \ Attributes Normally Sent by NEA Client: ............21\n           5.3.2. Attributes\
    \ Normally Sent by NEA Server: ............21\n   6. Use Cases ......................................................22\n\
    \      6.1. Initial Assessment ........................................22\n  \
    \         6.1.1. Triggered by Network Connection or Service\n                \
    \  Request ............................................22\n                  6.1.1.1.\
    \ Example ...................................23\n                  6.1.1.2. Possible\
    \ Flows and Protocol Usage .........23\n                  6.1.1.3. Impact on Requirements\
    \ ....................25\n           6.1.2. Triggered by Endpoint ..............................25\n\
    \                  6.1.2.1. Example ...................................25\n  \
    \                6.1.2.2. Possible Flows and Protocol Usage .........26\n    \
    \              6.1.2.3. Impact on Requirements ....................28\n      6.2.\
    \ Posture Reassessment ......................................28\n           6.2.1.\
    \ Triggered by NEA Client ............................28\n                  6.2.1.1.\
    \ Example ...................................28\n                  6.2.1.2. Possible\
    \ Flows & Protocol Usage ...........29\n                  6.2.1.3. Impact on Requirements\
    \ ....................30\n           6.2.2. Triggered by NEA Server ............................30\n\
    \                  6.2.2.1. Example ...................................30\n  \
    \                6.2.2.2. Possible Flows and Protocol Usage .........31\n    \
    \              6.2.2.3. Impact on Requirements ....................33\n   7. Requirements\
    \ ...................................................34\n      7.1. Common Protocol\
    \ Requirements ..............................34\n      7.2. Posture Attribute\
    \ (PA) Protocol Requirements ..............35\n      7.3. Posture Broker (PB)\
    \ Protocol Requirements .................36\n      7.4. Posture Transport (PT)\
    \ Protocol Requirements ..............38\n   8. Security Considerations ........................................38\n\
    \      8.1. Trust .....................................................39\n  \
    \         8.1.1. Endpoint ...........................................40\n    \
    \       8.1.2. Network Communications .............................41\n      \
    \     8.1.3. NEA Server .........................................42\n      8.2.\
    \ Protection Mechanisms at Multiple Layers ..................43\n      8.3. Relevant\
    \ Classes of Attack ................................43\n           8.3.1. Man-in-the-Middle\
    \ (MITM) ...........................44\n           8.3.2. Message Modification\
    \ ...............................45\n           8.3.3. Message Replay or Attribute\
    \ Theft ..................45\n           8.3.4. Other Types of Attack ..............................46\n\
    \   9. Privacy Considerations .........................................46\n  \
    \    9.1. Implementer Considerations ................................47\n    \
    \  9.2. Minimizing Attribute Disclosure ...........................49\n   10.\
    \ References ....................................................50\n      10.1.\
    \ Normative References .....................................50\n      10.2. Informative\
    \ References ...................................50\n   11. Acknowledgments ...............................................51\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Endpoints connected to a network may be exposed to a wide\
    \ variety of\n   threats.  Some protection against these threats can be provided\
    \ by\n   ensuring that endpoints conform to security policies.  Therefore, the\n\
    \   intent of NEA is to assess these endpoints to determine their\n   compliance\
    \ with security policies so that corrective measures can be\n   provided before\
    \ they are exposed to those threats.  For example, if a\n   system is determined\
    \ to be out of compliance because it is lacking\n   proper defensive mechanisms\
    \ such as host-based firewalls, anti-virus\n   software, or the absence of critical\
    \ security patches, the NEA\n   protocols provide a mechanism to detect this fact\
    \ and indicate\n   appropriate remediation actions to be taken.  Note that an\
    \ endpoint\n   that is deemed compliant may still be vulnerable to threats that\
    \ may\n   exist on the network.\n   NEA typically involves the use of special\
    \ client software running on\n   the requesting endpoint that observes and reports\
    \ on the\n   configuration of the system to the network infrastructure.  The\n\
    \   infrastructure has corresponding validation software that is capable\n   of\
    \ comparing the endpoint's configuration information with network\n   compliance\
    \ policies and providing the result to appropriate\n   authorization entities\
    \ that make decisions about network and\n   application access.  Some endpoints\
    \ may be incapable of running the\n   NEA Client software (e.g., printer) or be\
    \ unwilling to share\n   information about their configuration.  This situation\
    \ is outside the\n   scope of NEA and is subject to local policies.\n   The result\
    \ of an endpoint assessment may influence an access decision\n   that is provisioned\
    \ to the enforcement mechanisms on the network\n   and/or endpoint requesting\
    \ access.  While the NEA Working Group\n   recognizes there may be a link between\
    \ an assessment and the\n   enforcement of a resulting access decision, the mechanisms\
    \ and\n   protocols for enforcement are not in scope for this specification.\n\
    \   Architectures, similar to NEA, have existed in the industry for some\n   time\
    \ and are present in shipping products, but do not offer adequate\n   interoperability.\
    \  Some examples of such architectures include:\n   Trusted Computing Group's\
    \ Trusted Network Connect [TNC], Microsoft's\n   Network Access Protection [NAP],\
    \ and Cisco's Cisco Network Admission\n   Control [CNAC].  These technologies\
    \ assess the software and/or\n   hardware configuration of endpoint devices for\
    \ the purposes of\n   monitoring or enforcing compliance to an organization's\
    \ policy.\n   The NEA Working Group is developing standard protocols that can\
    \ be\n   used to communicate compliance information between a NEA Client and a\n\
    \   NEA Server.  This document provides the context for NEA including:\n   terminology,\
    \ applicability, problem statement, reference model, and\n   use cases.  It then\
    \ identifies requirements for the protocols used to\n   communicate between a\
    \ NEA Client and NEA server.  Finally, this\n   document discusses some potential\
    \ security and privacy considerations\n   with the use of NEA.  The majority of\
    \ this specification provides\n   informative text describing the context of NEA.\n"
- title: 1.1.  Requirements Language
  contents:
  - "1.1.  Requirements Language\n   Use of each capitalized word within a sentence\
    \ or phrase carries the\n   following meaning during the NEA WG's protocol selection\
    \ process:\n   MUST - indicates an absolute requirement\n   MUST NOT - indicates\
    \ something absolutely prohibited\n   SHOULD - indicates a strong recommendation\
    \ of a desired result\n   SHOULD NOT - indicates a strong recommendation against\
    \ a result\n   MAY - indicates a willingness to allow an optional outcome\n  \
    \ Lower case use of \"MUST\", \"MUST NOT\", \"SHOULD\", \"SHOULD NOT\", and\n\
    \   \"MAY\" carry their normal meaning and are not subject to these\n   definitions.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This section defines a set of terms used throughout this\
    \ document.\n   In some cases these terms have been used in other contexts with\n\
    \   different meanings so this section attempts to describe each term's\n   meaning\
    \ with respect to the NEA WG activities.\n   Assessment - The process of collecting\
    \ posture for a set of\n      capabilities on the endpoint (e.g., host-based firewall)\
    \ such that\n      the appropriate validators may evaluate the posture against\n\
    \      compliance policy.\n   Assertion Attributes - Attributes that include reusable\
    \ information\n      about the success of a prior assessment of the endpoint.\
    \  This\n      could be used to optimize subsequent assessments by avoiding a\n\
    \      full posture reassessment.  For example, this classification of\n     \
    \ attribute might be issued specifically to a particular endpoint,\n      dated\
    \ and signed by the NEA Server allowing that endpoint to reuse\n      it for a\
    \ time period to assert compliance to a set of policies.\n      The NEA Server\
    \ might accept this in lieu of obtaining posture\n      information.\n   Attribute\
    \ - Data element including any requisite meta-data describing\n      an observed,\
    \ expected, or the operational status of an endpoint\n      feature (e.g., anti-virus\
    \ software is currently in use).\n      Attributes are exchanged as part of the\
    \ NEA protocols (see section\n      5.2).  NEA recognizes a variety of usage scenarios\
    \ where the use\n      of an attribute in a particular type of message could indicate:\n\
    \         o previously assessed status (Assertion Attributes),\n         o observed\
    \ configuration or property (Posture Attributes),\n         o request for configuration\
    \ or property information (Request\n           Attributes),\n         o assessment\
    \ decision (Result Attributes), or\n         o repair instructions (Remediation\
    \ Attributes).\n      The NEA WG will standardize a subset of the attribute namespace\n\
    \      known as standard attributes.  Those attributes not standardized\n    \
    \  are referred to in this specification as vendor-specific.\n   Dialog - Sequence\
    \ of request/response messages exchanged.\n   Endpoint - Any computing device\
    \ that can be connected to a network.\n      Such devices normally are associated\
    \ with a particular link layer\n      address before joining the network and potentially\
    \ an IP address\n      once on the network.  This includes: laptops, desktops,\
    \ servers,\n      cell phones, or any device that may have an IP address.\n  \
    \ Message - Self contained unit of communication between the NEA Client\n    \
    \  and Server.  For example, a posture attribute message might carry\n      a\
    \ set of attributes describing the configuration of the anti-virus\n      software\
    \ on an endpoint.\n   Owner - the role of an entity who is the legal, rightful\
    \ possessor of\n      an asset (e.g., endpoint).  The owner is entitled to maintain\n\
    \      control over the policies enforced on the device even if the asset\n  \
    \    is not within the owner's possession.  The owner may permit user\n      override\
    \ or augmentation of control policies or may choose to not\n      assert any policies\
    \ limiting use of asset.\n   Posture - Configuration and/or status of hardware\
    \ or software on an\n      endpoint as it pertains to an organization's security\
    \ policy.\n   Posture Attributes - Attributes describing the configuration or\n\
    \      status (posture) of a feature of the endpoint.  For example, a\n      Posture\
    \ Attribute might describe the version of the operating\n      system installed\
    \ on the system.\n   Request Attributes - Attributes sent by a NEA Server identifying\
    \ the\n      posture information requested from the NEA Client.  For example,\
    \ a\n      Request Attribute might be an attribute included in a request\n   \
    \   message from the NEA Server that is asking for the version\n      information\
    \ for the operating system on the endpoint.\n   Remediation Attributes - Attributes\
    \ containing the remediation\n      instructions for how to bring an endpoint\
    \ into compliance with one\n      or more policies.  The NEA WG will not define\
    \ standard remediation\n      attributes, but this specification does describe\
    \ where they are\n      used within the reference model and protocols.\n   Result\
    \ Attributes - Attributes describing whether the endpoint is in\n      compliance\
    \ with NEA policy.  The Result Attribute is created by\n      the NEA Server normally\
    \ at the conclusion of the assessment to\n      indicate whether or not the endpoint\
    \ was considered compliant.\n      More than one of these attributes may be used\
    \ allowing for more\n      granular feature level decisions to be communicated\
    \ in addition to\n      an overall, global assessment decision.\n   Session -\
    \ Stateful connection capable of carrying multiple message\n      exchanges associated\
    \ with (an) assessment(s) of a particular\n      endpoint.  This document defines\
    \ the term session at a conceptual\n      level and does not describe the properties\
    \ of the session or\n      specify requirements for the NEA protocols to manage\
    \ these\n      sessions.\n   User - Role of a person that is making use of the\
    \ services of an\n      endpoint.  The user may not own the endpoint so he or\
    \ she might\n      need to operate within the acceptable use constraints defined\
    \ by\n      the endpoint's owner.  For example, an enterprise employee might\n\
    \      be a user of a computer provided by the enterprise (owner) for\n      business\
    \ purposes.\n"
- title: 3.  Applicability
  contents:
  - "3.  Applicability\n   This section discusses the scope of the technologies being\n\
    \   standardized and the network environments where it is envisioned that\n  \
    \ the NEA technologies might be applicable.\n"
- title: 3.1.  Scope
  contents:
  - "3.1.  Scope\n   The priority of the NEA Working Group is to develop standard\n\
    \   protocols at the higher layers in the reference model (see section\n   5):\
    \ the Posture Attribute protocol (PA) and the Posture Broker\n   protocol (PB).\
    \  PA and PB will be designed to be carried over a\n   variety of lower layer\
    \ transport (PT) protocols.  The NEA WG will\n   identify standard PT protocol(s)\
    \ that are mandatory to implement.  PT\n   protocols may be defined in other WGs\
    \ because the requirements may\n   not be specific to NEA.  When used with a standard\
    \ PT protocol (e.g.,\n   Extensible Authentication Protocol (EAP), Transport Layer\
    \ Security\n   (TLS) [TLS]), the PA and PB protocols will allow interoperability\n\
    \   between a NEA Client from one vendor and a NEA Server from another.\n   This\
    \ specification will not focus on the other interfaces between the\n   functional\
    \ components of the NEA reference model nor requirements on\n   their internals.\
    \  Any discussion of these aspects is included to\n   provide context for understanding\
    \ the model and resulting\n   requirements.\n   Some tangent areas not shown in\
    \ the reference model that are also out\n   of scope for the NEA working group,\
    \ and thus this specification,\n   include:\n      o Standardizing the protocols\
    \ and mechanisms for enforcing\n        restricted network access,\n      o Developing\
    \ standard protocols for remediation of non-compliant\n        endpoints,\n  \
    \    o Specifying protocols used to communicate with remote portions of\n    \
    \    the NEA Client or Server (e.g., remote collectors or validators\n       \
    \ of posture),\n      o Supporting a NEA Client providing posture for other endpoints\n\
    \        (e.g., a NEA Client on an Intrusion Detection System (IDS)\n        providing\
    \ posture for an endpoint without a NEA Client),\n      o Defining the set of\
    \ events or situations that might trigger a\n        NEA Client or NEA Server\
    \ to request an assessment,\n      o Detecting or handling lying endpoints (see\
    \ section 8.1.1 for\n        more information).\n"
- title: 3.2.  Applicability of Environments
  contents:
  - "3.2.  Applicability of Environments\n   Because the NEA model is based on NEA-oriented\
    \ software being present\n   on the endpoint and in the network infrastructure,\
    \ and due to the\n   nature of the information being exposed, the use of NEA technologies\n\
    \   may not apply in a variety of situations possible on the Internet.\n   Therefore,\
    \ this section discusses some of the scenarios where NEA is\n   most likely to\
    \ be applicable and some where it may not be.\n   Ultimately, the use of NEA within\
    \ a deployment is not restricted to\n   just these scenarios.  The decision of\
    \ whether to use NEA\n   technologies lies in the hands of the deployer (e.g.,\
    \ network\n   provider) based upon the expected relationship they have with the\n\
    \   owners and users of potential endpoints.\n   NEA technologies are largely\
    \ focused on scenarios where the owner of\n   the endpoint is the same as the\
    \ owner of the network.  This is a very\n   common model for enterprises that\
    \ provide equipment to employees to\n   perform their duties.  These employees\
    \ are likely bound under an\n   employment contract that outlines what level of\
    \ visibility the\n   employer expects to have into the employee's use of company\
    \ assets\n   and possibly activities during work hours.  This contract may\n \
    \  establish the expectation that the endpoint needs to conform to\n   policies\
    \ set forth by the enterprise.\n   Some other environments may be in a similar\
    \ situation and thus find\n   NEA technologies to be beneficial.  For example,\
    \ environments where\n   the endpoint is owned by a party (possibly even the user)\
    \ that has\n   explicitly expressed a desire to conform to the policies established\n\
    \   by a network or service provider in exchange for being able to access\n  \
    \ its resources.  An example of this might be an independent contractor\n   with\
    \ a personal laptop, working for a company imposing NEA assessment\n   policies\
    \ on its employees, who may wish a similar level of access and\n   is willing\
    \ to conform to the company's policies.  NEA technologies\n   may be applicable\
    \ to this situation.\n   Conversely, some environments where NEA is not expected\
    \ to be\n   applicable would be environments where the endpoint is owned by a\n\
    \   user that has not agreed to conform to a network provider's policies.\n  \
    \ An example might include when the above contractor visits any public\n   area\
    \ like the local coffee shop that offers Internet access.  This\n   coffee shop\
    \ would not be expected to be able to use NEA technologies\n   to assess the posture\
    \ of the contractor's laptop.  Because of the\n   potentially invasive nature\
    \ of NEA technology, such an assessment\n   could amount to an invasion of privacy\
    \ of the contractor.\n   It is more difficult to determine whether NEA is applicable\
    \ in other\n   environments, so the NEA WG will consider them to be out of scope\
    \ for\n   consideration and specification.  In order for an environment to be\n\
    \   considered applicable for NEA, the owner or user of an endpoint must\n   have\
    \ established a clear expectation that it will comply with the\n   policies of\
    \ the owner and operator of the network.  Such an\n   expectation likely includes\
    \ a willingness to disclose appropriate\n   information necessary for the network\
    \ to perform compliance checks.\n"
- title: 4.  Problem Statement
  contents:
  - "4.  Problem Statement\n   NEA technology may be used for a variety of purposes.\
    \  This section\n   highlights some of the major situations where NEA technologies\
    \ may be\n   beneficial.\n   One use is to facilitate endpoint compliance checking\
    \ against an\n   organization's security policy when an endpoint connects to the\n\
    \   network.  Organizations often require endpoints to run an\n   IT-specified\
    \ Operating System (OS) configuration and have certain\n   security applications\
    \ enabled, e.g., anti-virus software, host\n   intrusion detection/prevention\
    \ systems, personal firewalls, and patch\n   management software.  An endpoint\
    \ that is not compliant with IT\n   policy may be vulnerable to a number of known\
    \ threats that might\n   exist on the network.\n   Without NEA technology, ensuring\
    \ compliance of endpoints to corporate\n   policy is a time-consuming and difficult\
    \ task.  Not all endpoints are\n   managed by a corporation's IT organization,\
    \ e.g., lab assets and\n   contractor machines.  Even for assets that are managed,\
    \ they may not\n   receive updates in a timely fashion because they are not permanently\n\
    \   attached to the corporate network, e.g., laptops.  With NEA\n   technology,\
    \ the network is able to assess an endpoint as soon as it\n   requests access\
    \ to the network or at any time after joining the\n   network.  This provides\
    \ the corporation an opportunity to check\n   compliance of all NEA-capable endpoints\
    \ in a timely fashion and\n   facilitate endpoint remediation potentially while\
    \ quarantined when\n   needed.\n   NEA technology can be used to provide posture\
    \ assessment for a range\n   of ways of connecting to the network including (but\
    \ not limited to)\n   wired and wireless LAN access such as using 802.1X [802.1X],\
    \ remote\n   access via IPsec [IPSEC], or Secure Socket Layer (SSL) VPN, or\n\
    \   gateway access.\n   Endpoints that are not NEA-capable or choose not to share\
    \ sufficient\n   posture to evaluate compliance may be subject to different access\n\
    \   policies.  The decision of how to handle non-compliant or\n   non-participating\
    \ endpoints can be made by the network administrator\n   possibly based on information\
    \ from other security mechanisms on the\n   network (e.g., authentication).  For\
    \ example, remediation\n   instructions or warnings may be sent to a non-compliant\
    \ endpoint with\n   a properly authorized user while allowing limited access to\
    \ the\n   network.  Also, network access technologies can use the NEA results\n\
    \   to restrict or deny access to an endpoint, while allowing\n   vulnerabilities\
    \ to be addressed before an endpoint is exposed to\n   attack.  The communication\
    \ and representation of NEA assessment\n   results to network access technologies\
    \ on the network is out of scope\n   for this document.\n   Reassessment is a\
    \ second important use of NEA technology as it allows\n   for additional assessments\
    \ of previously considered compliant\n   endpoints to be performed.  This might\
    \ become necessary because\n   network compliance policies and/or endpoint posture\
    \ can change over\n   time.  A system initially assessed as being compliant when\
    \ it joined\n   the network may no longer be in compliance after changes occur.\
    \  For\n   example, reassessment might be necessary if a user disables a\n   security\
    \ protection (e.g., host-based firewall) required by policy or\n   when the firewall\
    \ becomes non-compliant after a firewall patch is\n   issued and network policy\
    \ is changed to require the patch.\n   A third use of NEA technology may be to\
    \ verify or supplement\n   organization asset information stored in inventory\
    \ databases.\n   NEA technology can also be used to check and report compliance\
    \ for\n   endpoints when they try to access certain mission critical\n   applications\
    \ within an enterprise, employing service (application)\n   triggered assessment.\n"
- title: 5.  Reference Model
  contents:
  - "5.  Reference Model\n   This section describes the reference model for Network\
    \ Endpoint\n   Assessment.  This model is provided to establish a context for\
    \ the\n   discussion of requirements and may not directly map to any particular\n\
    \   product or deployment architecture.  The model identifies the major\n   functionality\
    \ of the NEA Client and Server and their relationships,\n   as well as the protocols\
    \ they use to communicate at various levels\n   (e.g., PA is carried by the PB\
    \ protocol).\n   While the diagram shows 3 layered protocols, it is envisioned\
    \ that PA\n   is likely a thin message wrapper around a set of attributes and\
    \ that\n   it is batched and encapsulated in PB.  PB is primarily a lightweight\n\
    \   message batching protocol, so the protocol stack is mostly the\n   transport\
    \ (PT).  The vertical lines in the model represent APIs\n   and/or protocols between\
    \ components within the NEA Client or Server.\n   These interfaces are out of\
    \ scope for standardization in the NEA WG.\n    +-------------+              \
    \            +--------------+\n    |  Posture    |   <--------PA-------->   |\
    \   Posture    |\n    |  Collectors |                          |   Validators\
    \ |\n    |  (1 .. N)   |                          |   (1 .. N)   |\n    +-------------+\
    \                          +--------------+\n          |                     \
    \                    |\n          |                                         |\n\
    \          |                                         |\n    +-------------+  \
    \                        +--------------+\n    |   Posture   |               \
    \           |   Posture    |\n    |   Broker    |   <--------PB-------->   | \
    \  Broker     |\n    |   Client    |                          |   Server     |\n\
    \    +-------------+                          +--------------+\n          |  \
    \                                       |\n          |                       \
    \                  |\n    +-------------+                          +--------------+\n\
    \    |   Posture   |                          |   Posture    |\n    |   Transport\
    \ |   <--------PT-------->   |   Transport  |\n    |   Client    |           \
    \               |   Server     |\n    |   (1 .. N)  |                        \
    \  |   (1 .. N)   |\n    +-------------+                          +--------------+\n\
    \       NEA CLIENT                               NEA SERVER\n                \
    \ Figure 1: NEA Reference Model\n   The NEA reference model does not include mechanisms\
    \ for discovery of\n   NEA Clients and NEA Servers.  It is expected that NEA Clients\
    \ and NEA\n   Servers are configured with information that allows them to reach\n\
    \   each other.  The specific methods of referencing the configuration\n   and\
    \ establishing the communication channel are out of scope for the\n   NEA reference\
    \ model and should be covered in the specifications of\n   candidate protocols\
    \ such as the Posture Transport (PT) protocol.\n"
- title: 5.1.  NEA Client and Server
  contents:
  - '5.1.  NEA Client and Server

    '
- title: 5.1.1.  NEA Client
  contents:
  - "5.1.1.  NEA Client\n   The NEA Client is resident on an endpoint device and comprised\
    \ of the\n   following functionality:\n      o Posture Collector(s)\n      o Posture\
    \ Broker Client\n      o Posture Transport Client(s)\n   The NEA Client is responsible\
    \ for responding to requests for\n   attributes describing the configuration of\
    \ the local operating domain\n   of the client and handling the assessment results\
    \ including potential\n   remediation instructions for how to conform to policy.\
    \  A NEA Client\n   is not responsible for reporting on the posture of entities\
    \ that\n   might exist on the endpoint or over the network that are outside the\n\
    \   domain of execution (e.g., in other virtual machine domains) of the\n   NEA\
    \ Client.\n   For example, a network address translation (NAT) device might route\n\
    \   communications for many systems behind it, but when the NAT device\n   joins\
    \ the network, its NEA Client would only report its own (local)\n   posture. \
    \ Similarly, endpoints with virtualization capabilities might\n   have multiple\
    \ independent domains of execution (e.g., OS instances).\n   Each NEA Client is\
    \ only responsible for reporting posture for its\n   domain of execution, but\
    \ this information might be aggregated by\n   other local mechanisms to represent\
    \ the posture for multiple domains\n   on the endpoint.  Such posture aggregation\
    \ mechanisms are outside the\n   focus of this specification.\n   Endpoints lacking\
    \ NEA Client software (which is out of NEA scope) or\n   choosing not to provide\
    \ the attributes required by the NEA Server\n   could be considered non-compliant.\
    \  The NEA model includes\n   capabilities to enable the endpoint to update its\
    \ contents in order\n   to become compliant.\n"
- title: 5.1.1.1.  Posture Collector
  contents:
  - "5.1.1.1.  Posture Collector\n   The Posture Collector is responsible for responding\
    \ to requests for\n   posture information in Request Attributes from the NEA Server.\
    \  The\n   Posture Collector is also responsible for handling assessment\n   decisions\
    \ in Result Attributes and remediation instructions in\n   Remediation Attributes.\
    \  A single NEA Client can have several Posture\n   Collectors capable of collecting\
    \ standard and/or vendor-specific\n   Posture Attributes for particular features\
    \ of the endpoint.  Typical\n   examples include Posture Collectors that provide\
    \ information about\n   Operating System (OS) version and patch levels, anti-virus\
    \ software,\n   and security mechanisms on the endpoint such as host-based Intrusion\n\
    \   Detection System (IDS) or firewall.\n   Each Posture Collector will be associated\
    \ with one or more\n   identifiers that enable it to be specified as the destination\
    \ in a PA\n   message.  The Posture Broker Client uses these identifiers to route\n\
    \   messages to this Collector.  An identifier might be dynamic (e.g.,\n   generated\
    \ by the Posture Broker Client at run-time during\n   registration) or more static\
    \ (e.g., pre-assigned to the Posture\n   Collector at install-time and passed\
    \ to the Posture Broker Client\n   during registration) or a function of the attribute\
    \ messages the\n   Collector desires to receive (e.g., message type for subscription).\n\
    \   The NEA model allocates the following responsibilities to the Posture\n  \
    \ Collector:\n      o Consulting with local privacy and security policies that\
    \ may\n        restrict what information is allowed to be disclosed to a given\n\
    \        NEA Server.\n      o Receiving Request Attributes from a Posture Validator\
    \ and\n        performing the local processing required to respond\n        appropriately.\
    \  This may include:\n         - Collecting associated posture information for\
    \ particular\n           features of the endpoint and returning this information\
    \ in\n           Posture Attributes.\n         - Caching and recognizing the applicability\
    \ of recently issued\n           attributes containing reusable assertions that\
    \ might serve to\n           prove compliance and returning this attribute instead\
    \ of\n           posture information.\n      o Receiving attributes containing\
    \ remediation instructions on how\n        to update functionality on the endpoint.\
    \  This could require the\n        Collector to interact with the user, owner,\
    \ and/or a remediation\n        server.\n      o Monitoring the posture of (a)\
    \ particular features(s) on the\n        endpoint for posture changes that require\
    \ notification to the\n        Posture Broker Client.\n      o Providing cryptographic\
    \ verification of the attributes received\n        from the Validator and offering\
    \ cryptographic protection to the\n        attributes returned.\n   The above\
    \ list describes the model's view of the possible\n   responsibilities of the\
    \ Posture Collector.  Note that this is not a\n   set of requirements for what\
    \ each Posture Collector implementation\n   must support, nor is it an exhaustive\
    \ list of all the things a\n   Posture Collector may do.\n"
- title: 5.1.1.2.  Posture Broker Client
  contents:
  - "5.1.1.2.  Posture Broker Client\n   The Posture Broker Client is both a PA message\
    \ multiplexer and a\n   de-multiplexer.  The Posture Broker Client is responsible\
    \ for\n   de-multiplexing the PB message received from the NEA Server and\n  \
    \ distributing each encapsulated PA message to the corresponding\n   Posture Collector(s).\
    \  The model also allows for the posture\n   information request to be pre-provisioned\
    \ on the NEA Client to\n   improve performance by allowing the NEA Client to report\
    \ posture\n   without receiving a request for particular attributes from the NEA\n\
    \   Server.\n   The Posture Broker Client also multiplexes the responses from\
    \ the\n   Posture Collector(s) and returns them to the NEA Server.  The Posture\n\
    \   Broker Client constructs one or more PB messages using the PA\n   message(s)\
    \ it obtains from the Posture Collector(s) involved in the\n   assessment.  The\
    \ quantity and ordering of Posture Collector responses\n   (PA message(s)) multiplexed\
    \ into the PB response message(s) can be\n   determined by the Posture Broker\
    \ Client based on many factors\n   including policy or characteristics of the\
    \ underlying network\n   transport (e.g., MTU).  A particular NEA Client will\
    \ have one Posture\n   Broker Client.\n   The Posture Broker Client also handles\
    \ the global assessment decision\n   from the Posture Broker Server and may interact\
    \ with the user to\n   communicate the global assessment decision and aid in any\
    \ necessary\n   remediation steps.\n   The NEA model allocates the following responsibilities\
    \ to the Posture\n   Broker Client:\n      o Maintaining a registry of known Posture\
    \ Collectors and allowing\n        for Posture Collectors to dynamically register\
    \ and deregister.\n      o Multiplexing and de-multiplexing attribute messages\
    \ between the\n        NEA Server and the relevant Posture Collectors.\n     \
    \ o Handling posture change notifications from Posture Collectors\n        and\
    \ triggering reassessment.\n      o Providing user notification about the global\
    \ assessment decision\n        and other user messages sent by the NEA Server.\n"
- title: 5.1.1.3.  Posture Transport Client
  contents:
  - "5.1.1.3.  Posture Transport Client\n   The Posture Transport Client is responsible\
    \ for establishing a\n   reliable communication channel with the NEA Server for\
    \ the message\n   dialog between the NEA Client and NEA Server.  There might be\
    \ more\n   than one Posture Transport Client on a particular NEA Client\n   supporting\
    \ different transport protocols (e.g., 802.1X, VPN).\n   Certain Posture Transport\
    \ Clients may be configured with the address\n   of the appropriate Posture Transport\
    \ Server to use for a particular\n   network.\n   The NEA model allocates the\
    \ following responsibilities to the Posture\n   Transport Client:\n      o  Initiating\
    \ and maintaining the communication channel to the NEA\n         Server.  The\
    \ Posture Transport Client hides the details of the\n         underlying carrier\
    \ that could be a Layer 2 or Layer 3 protocol.\n      o  Providing cryptographic\
    \ protection for the message dialog\n         between the NEA Client and NEA Server.\n"
- title: 5.1.2.  NEA Server
  contents:
  - "5.1.2.  NEA Server\n   The NEA Server is typically comprised of the following\
    \ NEA\n   functionality:\n      o Posture Validator(s)\n      o Posture Broker\
    \ Server\n      o Posture Transport Server(s)\n   The Posture Validators might\
    \ be located on a separate server from the\n   Posture Broker Server, requiring\
    \ the Posture Broker Server to deal\n   with both local and remote Posture Validators.\n"
- title: 5.1.2.1.  Posture Validator
  contents:
  - "5.1.2.1.  Posture Validator\n   A Posture Validator is responsible for handling\
    \ Posture Attributes\n   from corresponding Posture Collector(s).  A Posture Validator\
    \ can\n   handle Posture Attributes from one or more Posture Collectors and\n\
    \   vice-versa.  The Posture Validator performs the posture assessment\n   for\
    \ one or more features of the endpoint (e.g., anti-virus software)\n   and creates\
    \ the result and, if necessary, the remediation\n   instructions, or it may choose\
    \ to request additional attributes from\n   one or more Collectors.\n   Each Posture\
    \ Validator will be associated with one or more\n   identifiers that enable it\
    \ to be specified as the destination in a PA\n   message.  The Posture Broker\
    \ Server uses this identifier to route\n   messages to this Validator.  This identifier\
    \ might be dynamic (e.g.,\n   generated by the Posture Broker Server at run-time\
    \ during\n   registration) or more static (e.g., pre-assigned to a Posture\n \
    \  Validator at install-time and passed to the Posture Broker Server\n   during\
    \ registration) or a function of the attribute messages the\n   Validator desires\
    \ to receive (e.g., message type for subscription).\n   Posture Validators can\
    \ be co-located on the NEA Server or can be\n   hosted on separate servers.  A\
    \ particular NEA Server is likely to\n   need to handle multiple Posture Validators.\n\
    \   The NEA model allocates the following responsibilities to the Posture\n  \
    \ Validator:\n      o Requesting attributes from a Posture Collector.  The request\
    \ may\n        include:\n         - Request Attributes that indicate to the Posture\
    \ Collector to\n           fetch and provide Posture Attributes for particular\n\
    \           functionality on the endpoint.\n      o Receiving attributes from\
    \ the Posture Collector.  The response\n        from the Posture Collector may\
    \ include:\n         - Posture Attributes collected for the requested functionality.\n\
    \         - Assertion Attributes that indicate the compliance result from\n  \
    \         a prior assessment.\n      o Assessing the posture of endpoint features\
    \ based on the\n        attributes received from the Collector.\n      o Communicating\
    \ the posture assessment result to the Posture\n        Broker Server.\n     \
    \ o Communicating the posture assessment results to the Posture\n        Collector;\
    \ this attribute message may include:\n         - Result Attributes that communicate\
    \ the posture assessment\n           result.\n         - Remediation Attributes\
    \ that communicate the remediation\n           instructions to the Posture Collector.\n\
    \      o Monitoring out-of-band updates that trigger reassessment and\n      \
    \  require notifications to be sent to the Posture Broker Server.\n      o Providing\
    \ cryptographic protection for attributes sent to the\n        Posture Collector\
    \ and offering cryptographic verification of the\n        attributes received\
    \ from the Posture Collector.\n   The above list describes the model's view of\
    \ the possible\n   responsibilities of the Posture Validator.  Note that this\
    \ is not a\n   set of requirements for what each Posture Validator implementation\n\
    \   must support, nor is it an exhaustive list of all the things a\n   Posture\
    \ Validator may do.\n"
- title: 5.1.2.2.  Posture Broker Server
  contents:
  - "5.1.2.2.  Posture Broker Server\n   The Posture Broker Server acts as a multiplexer\
    \ and a de-multiplexer\n   for attribute messages.  The Posture Broker Server\
    \ parses the PB\n   messages received from the NEA Client and de-multiplexes them\
    \ into PA\n   messages that it passes to the associated Posture Validators.  The\n\
    \   Posture Broker Server multiplexes the PA messages (e.g., messages\n   containing\
    \ (a) Request Attribute(s) from the relevant Posture\n   Validator(s)) into one\
    \ or more PB messages and sends them to the NEA\n   Client via the Posture Transport\
    \ protocol.  The quantity and ordering\n   of Posture Validator responses (PA\
    \ messages) and global assessment\n   decision multiplexed into the PB response\
    \ message(s) can be\n   determined by the Posture Broker Server based on many\
    \ factors\n   including policy or characteristics of the underlying network\n\
    \   transport (e.g., MTU).\n   The Posture Broker Server is also responsible for\
    \ computing the\n   global assessment decision based on individual posture assessment\n\
    \   results from the various Posture Validators.  This global assessment\n   decision\
    \ is sent back to the NEA Client in Result Attributes within a\n   PB message.\
    \  A particular NEA Server will have one Posture Broker\n   Server, and this Posture\
    \ Broker Server will handle all the local and\n   remote Posture Validators.\n\
    \   The NEA model allocates the following responsibilities to the Posture\n  \
    \ Broker Server:\n      o Maintaining a registry of Posture Validators and allowing\
    \ for\n        Posture Validators to register and deregister.\n      o Multiplexing\
    \ and de-multiplexing posture messages from and to\n        the relevant Posture\
    \ Validators.\n      o Computing the global assessment decision based on posture\n\
    \        assessment results from the various Posture Validators and\n        compliance\
    \ policy.  This assessment decision is sent to the\n        Posture Broker Client\
    \ in a PB message.\n"
- title: 5.1.2.3.  Posture Transport Server
  contents:
  - "5.1.2.3.  Posture Transport Server\n   The Posture Transport Server is responsible\
    \ for establishing a\n   reliable communication channel with the NEA Client for\
    \ the message\n   dialog between the NEA Client and NEA Server.  There might be\
    \ more\n   than one Posture Transport Server on a particular NEA Server to\n \
    \  support different transport protocols.  A particular Posture\n   Transport\
    \ Server will typically handle requests from several Posture\n   Transport Clients\
    \ and may require local configuration describing how\n   to reach the NEA Clients.\n\
    \   The NEA model allocates the following responsibilities to the Posture\n  \
    \ Transport Server:\n      o Initiating and maintaining a communication channel\
    \ with,\n        potentially, several NEA Clients.\n      o Providing cryptographic\
    \ protection for the message dialog\n        between the NEA Client and NEA Server.\n"
- title: 5.2.  Protocols
  contents:
  - "5.2.  Protocols\n   The NEA reference model includes three layered protocols\
    \ (PA, PB, and\n   PT) that allow for the exchange of attributes across the network.\n\
    \   While these protocols are intended to be used together to fulfill a\n   particular\
    \ role in the model, they may offer overlapping\n   functionality.  For example,\
    \ each protocol should be capable of\n   protecting its information from attack\
    \ (see section 8.2 for more\n   information).\n"
- title: 5.2.1.  Posture Attribute Protocol (PA)
  contents:
  - "5.2.1.  Posture Attribute Protocol (PA)\n   PA is a protocol that carries one\
    \ or more attributes between Posture\n   Collectors and their associated Posture\
    \ Validator.  The PA protocol\n   is a message-oriented lightweight wrapper around\
    \ a set of attributes\n   being exchanged.  This wrapper may indicate the purpose\
    \ of attributes\n   within the message.  Some of the types of messages expected\
    \ include:\n   requests for posture information (Request Attributes), posture\n\
    \   information about the endpoint (Posture Attributes), results of an\n   assessment\
    \ (Result Attributes), reusable compliance assertions\n   (Assertion Attributes),\
    \ and instructions to remediate non-compliant\n   portions of the endpoint (Remediation\
    \ Attributes).  The PA protocol\n   also provides the requisite encoding and cryptographic\
    \ protection for\n   the Posture Attributes.\n"
- title: 5.2.2.  Posture Broker Protocol (PB)
  contents:
  - "5.2.2.  Posture Broker Protocol (PB)\n   PB is a protocol that carries aggregate\
    \ attribute messages between\n   the Posture Collectors on the NEA Client and\
    \ the corresponding\n   Posture Validators on the NEA Server involved in a particular\n\
    \   assessment.  The PB protocol provides a session allowing for message\n   dialogs\
    \ for every assessment.  This PB session is then used to bind\n   multiple Posture\
    \ Attribute requests and responses from the different\n   Posture Collectors and\
    \ Posture Validators involved in a particular\n   assessment.  The PB protocol\
    \ may also carry the global assessment\n   decision in the Result Attribute from\
    \ the Posture Broker Server to\n   the Posture Broker Client.  PB may be used\
    \ to carry additional types\n   of messages for use by the Posture Broker Client\
    \ and Server (e.g.,\n   information about user preferred interface settings such\
    \ as\n   language).\n"
- title: 5.2.3.  Posture Transport Protocol (PT)
  contents:
  - "5.2.3.  Posture Transport Protocol (PT)\n   PT is a transport protocol between\
    \ the NEA Client and the NEA Server\n   responsible for carrying the messages\
    \ generated by the PB protocol.\n   The PT protocol(s) transport(s) PB messages\
    \ during the network\n   connection request or after network connectivity has\
    \ been\n   established.\n   In scenarios where an initial assessment needs to\
    \ occur during the\n   network connection, the PT protocol (e.g., EAP within 802.1X)\
    \ may\n   have constrained use of the network, so deployments may choose to\n\
    \   limit the amount and/or size of the attributes exchanged.  The NEA\n   Client\
    \ and NEA Server should be able to detect when a potentially\n   constrained situation\
    \ exists prior to the assessment based upon\n   properties of the underlying network\
    \ protocol.  Using this\n   information, NEA policy could dictate what aspects\
    \ of the endpoint to\n   include in the initial assessment and potentially limit\
    \ the PA\n   message attributes exchanged.  This could be followed up by a full\n\
    \   reassessment after the endpoint is placed on the network.\n   Alternatively,\
    \ deployments can choose not to limit their assessment\n   by configuring their\
    \ network access technology to temporarily grant\n   restricted IP connectivity\
    \ prior to the assessment and use an\n   unconstrained, high bandwidth IP-based\
    \ transport during the\n   assessment.  Some of the constraints that may exist\
    \ for protocols\n   involved in the network connection phase include:\n      o\
    \ Limited maximum transmission unit (MTU) size and ability to\n        negotiate\
    \ larger MTUs,\n      o Inability to perform multiple roundtrips,\n      o Lack\
    \ of support for piggybacking attributes for other protocols,\n      o Low bandwidth\
    \ or high latency limitations precluding exchanges\n        of large amounts of\
    \ data,\n      o Inability of servers to initiate messages except during the\n\
    \        network connection phase.\n   The PT protocol selection process needs\
    \ to consider the impact of\n   selecting a particular PT and set of underlying\
    \ protocols on the\n   deployment needs of PA and PB.  PA and PB will be selected\
    \ prior to\n   PT so the needs of PA and PB will be known.  Certain underlying\n\
    \   protocol stacks may be too constrained to support adequate NEA\n   assessments\
    \ during network connection.\n   The PT protocol provides reliable message delivery,\
    \ mutual\n   authentication, and cryptographic protection for the PB messages\
    \ as\n   specified by local policy.\n"
- title: 5.3.  Attributes
  contents:
  - "5.3.  Attributes\n   The PA protocol is responsible for the exchange of attributes\
    \ between\n   a Posture Collector and Posture Validator.  The PB protocol may\
    \ also\n   carry the global assessment decision attributes from the Posture\n\
    \   Broker Server.  Attributes are effectively the reserved word 'nouns'\n   of\
    \ the posture assessment.  The NEA Server is only able to ask for\n   information\
    \ that has a corresponding attribute, thus bounding what\n   type of posture can\
    \ be obtained.  The NEA WG will define a common\n   (standard) set of attributes\
    \ that are expected to be widely\n   applicable to Posture Collectors and thus\
    \ used for maximum\n   interoperability, but Posture Collectors may support additional\n\
    \   vendor-specific attributes when necessary.\n   Depending on the deployment\
    \ scenario, the purpose of the attributes\n   exchanged may be different (e.g.,\
    \ posture information vs. asserted\n   compliance).  This section discusses the\
    \ originator and expected\n   situation resulting in the use of each classification\
    \ of attributes\n   in a PA message.  These classifications are not intended to\
    \ dictate\n   how the NEA WG will specify the attributes when defining the\n \
    \  attribute namespace or schema.\n"
- title: '5.3.1.  Attributes Normally Sent by NEA Client:'
  contents:
  - "5.3.1.  Attributes Normally Sent by NEA Client:\n      o Posture Attributes -\
    \ Attributes and values sent to report\n        information about a particular\
    \ aspect (based on semantic of the\n        attribute) of the system.  These attributes\
    \ are typically sent\n        in response to Request Attributes from the NEA Server.\
    \  For\n        example, a set of Posture Attributes might describe the status\n\
    \        of the host-based firewall (e.g., if running, vendor, version).\n   \
    \     The NEA Server would base its decision on comparing this type of\n     \
    \   attribute against policy.\n      o Assertion Attributes - Attributes stating\
    \ recent prior\n        compliance to policy in hopes of avoiding the need to\
    \ recollect\n        the posture and send it to the NEA Server.  Examples of\n\
    \        assertions include (a) NEA Server provided attributes (state)\n     \
    \   describing a prior evaluation (e.g., opaque to endpoint, signed,\n       \
    \ time stamped items stating specific results) or (b) NEA Client\n        identity\
    \ information used by the NEA Server to locate state\n        about prior decisions\
    \ (e.g., system-bound cookie).  These might\n        be returned in lieu of, or\
    \ in addition to, Posture Attributes.\n"
- title: '5.3.2.  Attributes Normally Sent by NEA Server:'
  contents:
  - "5.3.2.  Attributes Normally Sent by NEA Server:\n      o Request Attributes -\
    \ Attributes that define the specific posture\n        information desired by\
    \ the NEA Server.  These attributes might\n        effectively form a template\
    \ that the Posture Collector fills in\n        (subject to local policy restrictions)\
    \ with the specific value\n        corresponding to each attribute.  The resulting\
    \ attributes are\n        typically Posture or Assertion Attributes from the NEA\
    \ Client.\n      o Result Attributes - Attributes that contain the decisions of\
    \ the\n        Posture Validators and/or Posture Broker Server.  The level of\n\
    \        detail provided may vary from which individual attributes were\n    \
    \    compliant or not through just the global assessment decision.\n      o Remediation\
    \ Attributes - Attributes that explain to the NEA\n        Client and its user\
    \ how to update the endpoint to become\n        compliant with the NEA Server\
    \ policies.  These attributes are\n        sent when the global assessment decision\
    \ was that the endpoint\n        is not currently compliant.  Remediation and\
    \ Result Attributes\n        may both exist within a NEA Server attribute message.\n\
    \      o Assertion Attributes - Attributes containing NEA Server\n        assertions\
    \ of compliance to a policy for future use by the NEA\n        Client.  See section\
    \ 5.3.1 for more information.\n"
- title: 6.  Use Cases
  contents:
  - "6.  Use Cases\n   This section discusses several of the NEA use cases with intent\
    \ to\n   describe and collectively bound the NEA problem space under\n   consideration.\
    \  The use cases provide a context and general rationale\n   for the defined requirements.\
    \  In order to ease understanding of each\n   use case and how it maps to the\
    \ reference model, each use case will\n   be accompanied by a simple example and\
    \ a discussion of how this\n   example relates to the NEA protocols.  It should\
    \ be emphasized that\n   the provided examples are not intended to indicate the\
    \ only approach\n   to addressing the use case but rather are included to ease\n\
    \   understanding of how the flows might occur and impact the NEA\n   protocols.\n\
    \   We broadly classify the use cases into two categories, each with its\n   own\
    \ set of trigger events:\n      o Initial assessment - evaluation of the posture\
    \ of an endpoint\n        that has not recently been assessed and thus is not\
    \ in\n        possession of any valid proof that it should be considered\n   \
    \     compliant.  This evaluation might be triggered by a request to\n       \
    \ join a network, a request to use a service, or a desire to\n        understand\
    \ the posture of a system.\n      o Reassessment - evaluation of the posture of\
    \ an endpoint that has\n        previously been assessed.  This evaluation could\
    \ occur for a\n        variety of reasons including the NEA Client or Server\n\
    \        recognizing an occurrence affecting the endpoint that might\n       \
    \ raise the endpoint's risk level.  This could be as simple as it\n        having\
    \ been a long time since the endpoint's prior reassessment.\n"
- title: 6.1.  Initial Assessment
  contents:
  - "6.1.  Initial Assessment\n   An initial assessment occurs when a NEA Client or\
    \ Server event occurs\n   that causes the evaluation of the posture of the endpoint\
    \ for the\n   first time.  Endpoints do not qualify for this category of use case\n\
    \   if they have been recently assessed and the NEA Client or Server has\n   maintained\
    \ state (or proof) that the endpoint is compliant and\n   therefore does not need\
    \ to have its posture evaluated again.\n"
- title: 6.1.1.  Triggered by Network Connection or Service Request
  contents:
  - "6.1.1.  Triggered by Network Connection or Service Request\n   This use case\
    \ focuses on assessments performed at the time an\n   endpoint attempts to join\
    \ a network or request use of a service that\n   requires a posture evaluation.\
    \  This use case is particularly\n   interesting because it allows the NEA Server\
    \ to evaluate the posture\n   of an endpoint before allowing it access to the\
    \ network or service.\n   This approach could be used to help detect endpoints\
    \ with known\n   vulnerabilities and facilitate their repair before they are admitted\n\
    \   to the network and potentially exposed to threats on the network.\n   A variety\
    \ of types of endpoint actions could result in this class of\n   assessment. \
    \ For example, an assessment could be triggered by the\n   endpoint trying to\
    \ access a highly protected network service (e.g.,\n   financial or HR application\
    \ server) where heightened security\n   checking is required.  A better known\
    \ example could include\n   requesting entrance to a network that requires systems\
    \ to meet\n   compliance policy.  This example is discussed in more detail in\
    \ the\n   following section.\n"
- title: 6.1.1.1.  Example
  contents:
  - "6.1.1.1.  Example\n   An IT employee returning from vacation boots his office\
    \ desktop\n   computer that generates a request to join the wired enterprise\n\
    \   network.  The network's security policy requires the system to\n   provide\
    \ posture information in order to determine whether the\n   desktop's security\
    \ features are enabled and up to date.  The desktop\n   sends its patch, firewall,\
    \ and anti-virus posture information.  The\n   NEA Server determines that the\
    \ system is lacking a recent security\n   patch designed to fix a serious vulnerability\
    \ and the system is\n   placed on a restricted access network.  The desktop follows\
    \ the\n   provided remediation instructions to download and install the\n   necessary\
    \ patch.  Later, the desktop requests again to join the\n   network and this time\
    \ is provided full access to the enterprise\n   network after a full assessment.\n"
- title: 6.1.1.2.  Possible Flows and Protocol Usage
  contents:
  - "6.1.1.2.  Possible Flows and Protocol Usage\n   The following describes typical\
    \ message flows through the NEA\n   reference model for this example use case:\n\
    \      1. The IT employee's desktop computer connects to the network\n       \
    \  through an access gateway in the wired enterprise network.\n      2. The Posture\
    \ Broker Server on the NEA Server is instructed to\n         assess the endpoint\
    \ joining the wired network.\n      3. Based upon compliance policy, the Posture\
    \ Broker Server\n         contacts the operating system patch, host-based firewall,\
    \ and\n         anti-virus Posture Validators to request the necessary posture.\n\
    \         Each Posture Validator creates a PA message containing the\n       \
    \  desired attributes to be requested for assessment from the\n         desktop\
    \ system.\n      4. The Posture Broker Server aggregates the PA messages from\
    \ the\n         Posture Validators into a PB message.  The Posture Broker\n  \
    \       Server passes the PB message to the Posture Transport Server\n       \
    \  that uses the PT protocol to send the PB message to the NEA\n         Client\
    \ on the desktop computer.\n      5. The Posture Transport Client receives the\
    \ message from the NEA\n         Server and passes it to the Posture Broker Client\
    \ for message\n         delivery.\n      6. The Posture Broker Client de-multiplexes\
    \ the PB message and\n         delivers the PA messages with the requests for\
    \ attributes to\n         the firewall, operating system patch, and anti-virus\
    \ Posture\n         Collectors.\n      7. Each Posture Collector involved consults\
    \ local privacy policy\n         to determine what information is allowed to be\
    \ disclosed and\n         then returns the requested attributes that are authorized\
    \ in a\n         PA message to the Posture Broker Client.\n      8. The Posture\
    \ Broker Client aggregates these PA messages into a\n         single PB message\
    \ and sends it to the Posture Broker Server\n         using the Posture Transport\
    \ Client to Server session.\n      9. The Posture Transport Server provides the\
    \ PB message to the\n         Posture Broker Server that de-multiplexes the message\
    \ and sends\n         the appropriate attributes to the corresponding Posture\n\
    \         Validator.\n     10. Each Posture Validator compares the values of the\
    \ attributes it\n         receives with the expected values defined in its policy.\n\
    \     11. The anti-virus and firewall Posture Validators return\n         attributes\
    \ to the Posture Broker Server stating the desktop\n         computer is compliant,\
    \ but the operating system patch Posture\n         Validator returns non-compliant.\
    \  The operating system patch\n         Posture Validator creates a PA message\
    \ that contains attributes\n         with remediation instructions in addition\
    \ to the attribute\n         indicating non-compliance result.\n     12. The Posture\
    \ Broker Server aggregates the PA messages and sends\n         them in a PB message\
    \ to the Posture Broker Client via the\n         Posture Transport Server and\
    \ Posture Transport Client.\n     13. The Posture Broker Client delivers the PA\
    \ messages with the\n         results from the various Posture Validators to the\
    \ Posture\n         Collectors including the PA message containing attributes\
    \ with\n         remediation instructions to the operating system patch Posture\n\
    \         Collector.  This Posture Collector then interacts with the user\n  \
    \       to download and install the needed patches, potentially while\n      \
    \   the endpoint remains quarantined.\n     14. Upon completion of the remediation,\
    \ the above steps 1-10 are\n         repeated (triggered by the NEA Client repeating\
    \ its request to\n         join the network).\n     15. This time each involved\
    \ Posture Validator (including the\n         operating system patch Posture Validator)\
    \ returns a compliant\n         status and the Posture Broker Server returns a\
    \ compliant result\n         indicating a global success.\n     16. The Posture\
    \ Broker Client receives the compliant result and the\n         IT employee's\
    \ desktop is now on the network.\n"
- title: 6.1.1.3.  Impact on Requirements
  contents:
  - "6.1.1.3.  Impact on Requirements\n   The following are several different aspects\
    \ of the use case example\n   that potentially need to be factored into the requirements.\n\
    \      o Posture assessment before endpoint allowed on network\n      o Endpoint\
    \ sends attributes containing posture information\n      o NEA Server sends remediation\
    \ instructions\n      o NEA Client causes a reassessment after remediation\n"
- title: 6.1.2.  Triggered by Endpoint
  contents:
  - "6.1.2.  Triggered by Endpoint\n   This use case highlights that an endpoint (possibly\
    \ at the request of\n   a user) may wish to trigger an assessment of its posture\
    \ to determine\n   whether its security protective mechanisms are running and\
    \ up to\n   date.\n"
- title: 6.1.2.1.  Example
  contents:
  - "6.1.2.1.  Example\n   A student goes to the terminal room to work on a project.\
    \  The\n   terminal room contains shared systems owned by the school that are\
    \ on\n   the network.  These systems have been previously used by other\n   students\
    \ so their security posture is unknown.  The student wishes to\n   check whether\
    \ a system is currently in compliance with the school's\n   security policies\
    \ prior to doing work, so she requests a posture\n   assessment.  The NEA Server\
    \ performs an initial assessment of the\n   system and determines it is compliant\
    \ but the anti-virus protection\n   is not in use.  The student receives an advisory\
    \ response indicating\n   the system's anti-virus software is turned off but that\
    \ otherwise it\n   complies with the school's policy.  The student turns on the\n\
    \   anti-virus software, initiates a scan, and upon completion decides to\n  \
    \ trust the system with her work.\n"
- title: 6.1.2.2.  Possible Flows and Protocol Usage
  contents:
  - "6.1.2.2.  Possible Flows and Protocol Usage\n   The following describes the message\
    \ flows through the NEA reference\n   model for the student using a terminal room\
    \ shared system example:\n      1. Student triggers the Posture Broker Client\
    \ on the computer\n         system in the terminal room to initiate a posture\
    \ assessment.\n      2. The Posture Broker Client establishes a session with the\n\
    \         Posture Broker Server that causes an assessment to be\n         triggered.\n\
    \      3. The Posture Broker Server detects the new session and consults\n   \
    \      policy to determine that Posture Validators to involve in the\n       \
    \  assessment.  The Posture Broker Server decides to employ\n         several\
    \ Posture Validators including the anti-virus Posture\n         Validator.\n \
    \     4. The Posture Validators involved create PA messages containing\n     \
    \    requests for particular attributes containing information about\n       \
    \  the desired terminal room computer based on the school's\n         security\
    \ policy.\n      5. The Posture Broker Server assembles a PB message including\
    \ each\n         of the PA messages from the Posture Validators.\n      6. The\
    \ Posture Transport Server sends the PB message to the\n         Posture Transport\
    \ Client where it is passed on to the Posture\n         Broker Client.\n     \
    \ 7. The Posture Broker Client on the student's computer\n         de-multiplexes\
    \ the PA messages and delivers them to the\n         corresponding Posture Collectors.\n\
    \      8. The Posture Collectors consult privacy policy to decide what\n     \
    \    information to share with the Server.  If allowable, the\n         Collectors\
    \ each return a PA message containing the requested\n         posture to the Posture\
    \ Broker Client.\n      9. The Posture Broker Client aggregates the returned PA\
    \ messages\n         into a PB message and hands it to the Posture Transport Client\n\
    \         for transmission to the Posture Transport Server.\n     10. The Posture\
    \ Broker Server separates and distributes the Posture\n         Collector PA messages\
    \ to the associated Posture Validators.\n     11. The Posture Validators determine\
    \ whether the attributes\n         containing the posture included in the PA message\
    \ are compliant\n         with their policies and returns a posture assessment\
    \ decision\n         to the Posture Broker Server.  In this case, the anti-virus\n\
    \         Posture Validator returns a PA message indicating a\n         non-compliant\
    \ result because the anti-virus software is not\n         running and includes\
    \ attributes describing how to activate the\n         software.\n     12. The\
    \ Posture Broker Server determines the overall compliance\n         decision based\
    \ on all of the Validators' assessment results and\n         sends a PB message\
    \ containing an attribute expressing the\n         global assessment decision\
    \ and the anti-virus Validator's PA\n         message.  In this case, the global\
    \ assessment decision\n         indicates the system is compliant (despite the\
    \ anti-virus\n         Validator's result) because the Posture Broker Server policy\n\
    \         allowed for the anti-virus to not be running as long as the\n      \
    \   system was properly patched and running a firewall (which was\n         the\
    \ case according to the other Posture Validators).\n     13. The Posture Transport\
    \ Server sends the PB message to the\n         Posture Transport Client that provides\
    \ the message to the\n         Posture Broker Client.\n     14. The Posture Broker\
    \ Client on the terminal room computer\n         examines the PB message's global\
    \ assessment decision attribute\n         and reports to the student that the\
    \ system was deemed to be\n         compliant, but that an advisory was included.\n\
    \     15. The Posture Broker Client provides the PA message with the\n       \
    \  remediation attributes to the anti-virus Posture Collector that\n         interacts\
    \ with the user to explain how to turn on anti-virus to\n         improve the\
    \ local protections.\n     16. The student turns on the anti-virus software and\
    \ on completion\n         steps 1-10 are repeated.\n     17. This time the anti-virus\
    \ Posture Validator returns a success\n         status and the Posture Broker\
    \ Server returns a successful\n         global assessment decision in the PB message.\n\
    \     18. The Posture Broker Client receives the successful global\n         assessment\
    \ decision in the PB message and the student now uses\n         the computer for\
    \ her assignment.\n"
- title: 6.1.2.3.  Impact on Requirements
  contents:
  - "6.1.2.3.  Impact on Requirements\n   The following are several different aspects\
    \ of the use case example\n   that potentially need to be factored into the requirements.\n\
    \      o Voluntary endpoint requested initial assessment,\n      o Successful\
    \ (compliant) global assessment decision included in PB\n        message with\
    \ a PA message containing an advisory set of\n        attributes for remediation.\n"
- title: 6.2.  Posture Reassessment
  contents:
  - "6.2.  Posture Reassessment\n   Reassessment(s) of endpoints can happen anytime\
    \ after being admitted\n   to the network after a successful initial NEA assessment.\
    \  These\n   reassessments may be event-based, such as driven by posture changes\n\
    \   detected by the NEA Client, or changes detected by network\n   infrastructure\
    \ such as detection of suspicious behavior or network\n   policy updates on the\
    \ NEA Server.  They may also be periodic (timer-\n   driven) to reassess the health\
    \ of the endpoint.\n"
- title: 6.2.1.  Triggered by NEA Client
  contents:
  - "6.2.1.  Triggered by NEA Client\n   This use case allows for software on the\
    \ endpoint or a user to\n   determine that a reassessment of the system is required.\
    \  There are a\n   variety of reasons why such a reassessment might be beneficial\n\
    \   including: changes in its previously reported posture, detection of\n   potentially\
    \ suspicious behavior, or even to enable the system to\n   periodically poll the\
    \ NEA Server to assess its condition relative to\n   the latest policies.\n"
- title: 6.2.1.1.  Example
  contents:
  - "6.2.1.1.  Example\n   The desktops within a company's HR department have a history\
    \ of poor\n   security practices and eventual compromise.  The HR department\n\
    \   administrator decides to deploy software on each desktop to monitor\n   the\
    \ use of security protective mechanisms to assure their use.  One\n   day, an\
    \ HR person accidentally turns off the desktop firewall.  The\n   monitoring process\
    \ detects the lack of a firewall and contacts the\n   NEA Server to request a\
    \ reassessment of the firewall compliance.  The\n   NEA Server returns a decision\
    \ that the firewall must be reactivated\n   to stay on the network.  The NEA Client\
    \ explains the decision to the\n   user and how to reactivate the firewall.  The\
    \ HR person restarts the\n   firewall and initiates a request to rejoin the network.\n"
- title: 6.2.1.2.  Possible Flows & Protocol Usage
  contents:
  - "6.2.1.2.  Possible Flows & Protocol Usage\n   The following describes the message\
    \ flows through the NEA reference\n   model for the HR department example:\n \
    \     1. The desktop monitoring software that typically might act as a\n     \
    \    Posture Collector triggers the Posture Broker Client to\n         initiate\
    \ a posture reassessment.  The Posture Broker Client\n         creates a PB message\
    \ that contains a PA message indicating the\n         desktop firewall has been\
    \ disabled.\n      2. The Posture Broker Client sends the PB message to the Posture\n\
    \         Broker Server.\n      3. The Posture Transport Client sends the PB message\
    \ to the\n         Posture Transport Server over the PT protocol.\n      4. The\
    \ Posture Broker Server receives the PB message and forwards\n         the PA\
    \ message to the firewall Posture Validator for\n         evaluation.\n      5.\
    \ The firewall Posture Validator determines that the endpoint is\n         no\
    \ longer compliant because its firewall has been disabled.\n      6. The Posture\
    \ Validator generates a PA message that contains\n         attributes indicating\
    \ a non-compliant posture assessment result\n         and remediation instructions\
    \ for how to reactivate the\n         firewall.\n      7. The Posture Validator\
    \ communicates the PA message with the\n         posture assessment result to\
    \ the Posture Broker Server to\n         respond back to the NEA Client.\n   \
    \   8. The Posture Broker Server generates a PB message including a\n        \
    \ global assessment decision of non-compliant and the PA message\n         from\
    \ the firewall Posture Validator.\n      9. The Posture Transport Server transports\
    \ the PB message to the\n         Posture Transport Client where it is passed\
    \ to the Posture\n         Broker Client.\n     10. The Posture Broker Client\
    \ processes the attribute containing\n         the global assessment decision\
    \ received from the NEA Server and\n         displays the non-compliance messages\
    \ to the user.\n     11. The Posture Broker Client forwards the PA message to\
    \ the\n         firewall Posture Collector; the Posture Collector displays the\n\
    \         remediation instructions for how to enable the desktop\n         firewall.\n\
    \     12. The user is prompted to initiate a reassessment after\n         completing\
    \ the remediation.\n     13. Upon completion of the remediation, the NEA Client\
    \ reinitiates\n         a request for reassessment and steps 1-4 are repeated.\
    \  This\n         time the firewall Posture Validator determines the endpoint\
    \ is\n         compliant and returns a successful posture assessment decision.\n\
    \     14. The Posture Broker Server generates a PB message with a global\n   \
    \      assessment decision of compliant and returns this to the NEA\n        \
    \ Client.\n"
- title: 6.2.1.3.  Impact on Requirements
  contents:
  - "6.2.1.3.  Impact on Requirements\n   The following are several different aspects\
    \ of the use case example\n   that potentially need to be factored into the requirements.\n\
    \      o Voluntary, endpoint (software) initiated posture reassessment\n     \
    \   request\n      o NEA Server requests specific firewall-oriented Posture\n\
    \        Attributes\n      o NEA Client (firewall Posture Collector) interacts\
    \ with user to\n        remediate problem\n"
- title: 6.2.2.  Triggered by NEA Server
  contents:
  - "6.2.2.  Triggered by NEA Server\n   In many cases, especially for reassessment,\
    \ the NEA Server may\n   initiate specific or complete reassessment of one or\
    \ more endpoints\n   triggered by:\n      o Time (periodic)\n      o Event occurrence\n\
    \      o Policy updates\n"
- title: 6.2.2.1.  Example
  contents:
  - "6.2.2.1.  Example\n   An enterprise requires employees on the network to always\
    \ stay up to\n   date with security critical operating system patches.  A marketing\n\
    \   employee joins the network and performs an initial assessment.  The\n   assessment\
    \ determines the employee's laptop is compliant.  Several\n   hours later, a major\
    \ operating system vendor releases a set of\n   patches preventing a serious vulnerability\
    \ that is being exploited on\n   the Internet.\n   The enterprise administrators\
    \ make available the patches and change\n   the network policy to require them\
    \ to be installed by 5 PM.  This\n   policy change causes the NEA Server to request\
    \ a reassessment to\n   determine which endpoints are impacted and lacking the\
    \ patches.  The\n   marketing employee's laptop is reassessed and determined to\
    \ need the\n   patches.  A remediation advisory is sent and presented to the\n\
    \   employee explaining how to obtain the patches and that they must be\n   installed\
    \ by 5 PM.  The marketing employee immediately downloads and\n   installs the\
    \ patches and obtains an assertion that all patches are\n   now installed.\n \
    \  At 5 PM, the enterprise performs another reassessment of all impacted\n   endpoints\
    \ to determine if they are now in compliance.  The marketing\n   employee's laptop\
    \ is reassessed and presents the assertion that it\n   has the patches installed\
    \ and thus is determined to be compliant.\n"
- title: 6.2.2.2.  Possible Flows and Protocol Usage
  contents:
  - "6.2.2.2.  Possible Flows and Protocol Usage\n   The following describes the message\
    \ flows through the NEA reference\n   model for the above example:\n      1. Marketing\
    \ employee joins network and completes an initial\n         assessment resulting\
    \ in a compliant decision.\n      2. The Enterprise Administrator configures an\
    \ operating system\n         patch policy indicating that recent patches are required\
    \ on all\n         endpoints by 5 PM to prevent serious vulnerabilities.\n   \
    \   3. The NEA Server's operating system patch Posture Validator\n         becomes\
    \ aware of this policy change and creates a PA message\n         requesting attributes\
    \ describing OS patches in use and triggers\n         the Posture Broker Server\
    \ to initiate a posture reassessment of\n         all endpoints connected to the\
    \ network.\n      4. The Posture Broker creates a PB message that includes the\
    \ PA\n         message from the operating system patch Posture Validator.\n  \
    \    5. The Posture Broker Server gradually establishes a session with\n     \
    \    each available NEA Client.\n      6. The Posture Broker Server sends the\
    \ PB message to the Posture\n         Broker Client.\n      7. The Posture Transport\
    \ Server carries the PB message to the\n         Posture Transport Client over\
    \ the PT protocol.\n      8. The Posture Broker Client receives the PB message\
    \ and forwards\n         the PA message to the operating system patch Posture\
    \ Collector.\n      9. The operating system patch Posture Collector determines\
    \ the OS\n         patches present on the endpoint and if authorized by its\n\
    \         disclosure policy creates a PA message containing the patch\n      \
    \   information attributes.\n     10. The Posture Broker Client sends a PB message\
    \ that includes the\n         operating system patch PA message.\n     11. The\
    \ Posture Transport Client transports the PB message to the\n         Posture\
    \ Transport Server where it is passed to the Posture\n         Broker Server.\n\
    \     12. The Posture Broker Server receives the PB message and delivers\n   \
    \      the PA message to the operating system patch Posture Validator.\n     13.\
    \ The operating system patch Posture Validator extracts the\n         attributes\
    \ describing the current OS patches from the PA\n         message and uses the\
    \ values to determine whether the endpoint\n         is compliant with the new\
    \ policy.  The Posture Validator\n         determines that the endpoint is not\
    \ compliant since it does not\n         have the new OS patches installed.\n \
    \    14. The Posture Validator generates a PA message that includes\n        \
    \ attributes stating the posture assessment decision is\n         non-compliant\
    \ and attributes containing the remediation\n         instructions to enable the\
    \ endpoint to download the required OS\n         patches.\n     15. The Posture\
    \ Validator communicates the posture assessment\n         result to the Posture\
    \ Broker Server along with its PA message.\n     16. The Posture Broker Server\
    \ generates a global assessment\n         decision and sends a PB message with\
    \ the decision and the\n         operating system patch Posture Validator's PA\
    \ message.\n     17. The Posture Transport Server transports the PB message to\
    \ the\n         Posture Transport Client where it is passed to the Posture\n \
    \        Broker Client.\n     18. The Posture Broker Client processes the Result\
    \ Attribute\n         received from the NEA Server and displays the non-compliance\n\
    \         decision to the user.\n     19. The Posture Broker Client forwards the\
    \ PA message containing\n         the remediation instructions to the operating\
    \ system patch\n         Posture Collector; the Posture Collector guides the user\
    \ with\n         instructions on how to become compliant that include\n      \
    \   downloading the appropriate OS patches to prevent the\n         vulnerability.\n\
    \     20. The marketing employee installs the required patches and now is\n  \
    \       in compliance.\n     21. The NEA Client triggers a reassessment of the\
    \ operating system\n         patches that causes a repeat of many of the steps\
    \ above.  This\n         time, in step 13 the operating system patch Posture Validator\n\
    \         determines the marketing employee's laptop is compliant.  It\n     \
    \    returns a reusable (e.g., signed and dated) set of attributes\n         that\
    \ assert OS patch compliance to the latest policy.  These OS\n         patch compliance\
    \ assertions can be used in a future PA message\n         from the operating system\
    \ patch Collector instead of\n         determining and providing the specific\
    \ patch set posture as\n         before.\n     22. This time when the operating\
    \ system patch Posture Collector\n         receives the PA message that contains\
    \ reusable attributes\n         asserting compliance, it caches those attributes\
    \ for future\n         use.\n     23. Later at 5 PM, the NEA Server triggers a\
    \ gradual reassessment\n         to determine compliance to the patch advisory.\
    \  When the\n         operating system patch Posture Collector receives the request\n\
    \         for posture information (like in step 9 above) it returns the\n    \
    \     cached set of assertions (instead of specific OS patch\n         information)\
    \ to indicate that the patches have been installed\n         instead of determining\
    \ all the patches that have been installed\n         on the system.\n     24.\
    \ When the operating system patch Posture Validator receives the\n         PA\
    \ message containing the assertions, it is able to determine\n         that they\
    \ are authentic and acceptable assertions instead of\n         specific posture.\
    \  It returns a posture assessment decision of\n         compliant thus allowing\
    \ the laptop to remain on the network.\n"
- title: 6.2.2.3.  Impact on Requirements
  contents:
  - "6.2.2.3.  Impact on Requirements\n   The following are several different aspects\
    \ of the use case example\n   that potentially need to be factored into the requirements.\n\
    \      o Server-initiated reassessment required due to urgent patch\n        availability\n\
    \      o NEA Client submits reusable assertion attributes instead of\n       \
    \ posture that patch is installed\n      o NEA Server capable of recognizing previously\
    \ issued assertion\n        attributes are sufficient instead of posture\n"
- title: 7.  Requirements
  contents:
  - "7.  Requirements\n   This section describes the requirements that will be used\
    \ by the NEA\n   WG to assess and compare candidate protocols for PA, PB, and\
    \ PT.\n   These requirements frequently express features that a candidate\n  \
    \ protocol must be capable of offering so that a deployer can decide\n   whether\
    \ to make use of that feature.  This section does not state\n   requirements about\
    \ what features of each protocol must be used during\n   a deployment.\n   For\
    \ example, a requirement (MUST, SHOULD, or MAY) might exist for\n   cryptographic\
    \ security protections to be available from each protocol\n   but this does not\
    \ require that a deployer make use of all or even any\n   of them should they\
    \ deem their environment to offer other protections\n   that are sufficient.\n"
- title: 7.1.  Common Protocol Requirements
  contents:
  - "7.1.  Common Protocol Requirements\n   The following are the common requirements\
    \ that apply to the PA, PB,\n   and PT protocols in the NEA reference model:\n\
    \   C-1  NEA protocols MUST support multiple round trips between the NEA\n   \
    \     Client and NEA Server in a single assessment.\n   C-2  NEA protocols SHOULD\
    \ provide a way for both the NEA Client and\n        the NEA Server to initiate\
    \ a posture assessment or reassessment\n        as needed.\n   C-3  NEA protocols\
    \ including security capabilities MUST be capable of\n        protecting against\
    \ active and passive attacks by intermediaries\n        and endpoints including\
    \ prevention from replay based attacks.\n   C-4  The PA and PB protocols MUST\
    \ be capable of operating over any PT\n        protocol.  For example, the PB\
    \ protocol must provide a transport\n        independent interface allowing the\
    \ PA protocol to operate\n        without change across a variety of network protocol\
    \ environments\n        (e.g., EAP/802.1X, TLS, and Internet Key Exchange Protocol\n\
    \        version 2 (IKEv2)).\n   C-5  The selection process for NEA protocols\
    \ MUST evaluate and prefer\n        the reuse of existing open standards that\
    \ meet the requirements\n        before defining new ones.  The goal of NEA is\
    \ not to create\n        additional alternative protocols where acceptable solutions\n\
    \        already exist.\n   C-6  NEA protocols MUST be highly scalable; the protocols\
    \ MUST\n        support many Posture Collectors on a large number of NEA Clients\n\
    \        to be assessed by numerous Posture Validators residing on\n        multiple\
    \ NEA Servers.\n   C-7  The protocols MUST support efficient transport of a large\
    \ number\n        of attribute messages between the NEA Client and the NEA Server.\n\
    \   C-8  NEA protocols MUST operate efficiently over low bandwidth or\n      \
    \  high latency links.\n   C-9  For any strings intended for display to a user,\
    \ the protocols\n        MUST support adapting these strings to the user's language\n\
    \        preferences.\n   C-10 NEA protocols MUST support encoding of strings\
    \ in UTF-8 format\n        [UTF8].\n   C-11 Due to the potentially different transport\
    \ characteristics\n        provided by the underlying candidate PT protocols,\
    \ the NEA\n        Client and NEA Server MUST be capable of becoming aware of\
    \ and\n        adapting to the limitations of the available PT protocol.  For\n\
    \        example, some PT protocol characteristics that might impact the\n   \
    \     operation of PA and PB include restrictions on: which end can\n        initiate\
    \ a NEA connection, maximum data size in a message or\n        full assessment,\
    \ upper bound on number of roundtrips, and\n        ordering (duplex) of messages\
    \ exchanged.  The selection process\n        for the PT protocols MUST consider\
    \ the limitations the candidate\n        PT protocol would impose upon the PA\
    \ and PB protocols.\n"
- title: 7.2.  Posture Attribute (PA) Protocol Requirements
  contents:
  - "7.2.  Posture Attribute (PA) Protocol Requirements\n   The Posture Attribute\
    \ (PA) protocol defines the transport and data\n   model to carry posture and\
    \ validation information between a\n   particular Posture Collector associated\
    \ with the NEA Client and a\n   Posture Validator associated with a NEA Server.\
    \  The PA protocol\n   carries collections of standard attributes and vendor-specific\n\
    \   attributes.  The PA protocol itself is carried inside the PB\n   protocol.\n\
    \   The following requirements define the desired properties that form\n   the\
    \ basis for comparison and evaluation of candidate PA protocols.\n   These requirements\
    \ do not mandate the use of these properties, but\n   merely that the candidate\
    \ protocols are capable of offering the\n   property if it should be needed.\n\
    \   PA-1 The PA protocol MUST support communication of an extensible set\n   \
    \     of NEA standards defined attributes.  These attributes will be\n       \
    \ distinguishable from non-standard attributes.\n   PA-2 The PA protocol MUST\
    \ support communication of an extensible set\n        of vendor-specific attributes.\
    \  These attributes will be\n        segmented into uniquely identified vendor-specific\
    \ namespaces.\n   PA-3 The PA protocol MUST enable a Posture Validator to make\
    \ one or\n        more requests for attributes from a Posture Collector within\
    \ a\n        single assessment.  This enables the Posture Validator to\n     \
    \   reassess the posture of a particular endpoint feature or to\n        request\
    \ additional posture including from other parts of the\n        endpoint.\n  \
    \ PA-4 The PA protocol MUST be capable of returning attributes from a\n      \
    \  Posture Validator to a Posture Collector.  For example, this\n        might\
    \ enable the Posture Collector to learn the specific reason\n        for a failed\
    \ assessment and to aid in remediation and\n        notification of the system\
    \ owner.\n   PA-5 The PA protocol SHOULD provide authentication, integrity, and\n\
    \        confidentiality protection for attributes communicated between a\n  \
    \      Posture Collector and Posture Validator.  This enables\n        end-to-end\
    \ security across a NEA deployment that might involve\n        traversal of several\
    \ systems or trust boundaries.\n   PA-6 The PA protocol MUST be capable of carrying\
    \ attributes that\n        contain non-binary and binary data including encrypted\
    \ content.\n"
- title: 7.3.  Posture Broker (PB) Protocol Requirements
  contents:
  - "7.3.  Posture Broker (PB) Protocol Requirements\n   The PB protocol supports\
    \ multiplexing of Posture Attribute messages\n   (based on PA protocol) between\
    \ the Posture Collectors on the NEA\n   Client to and from the Posture Validators\
    \ on the NEA Server (in\n   either direction).\n   The PB protocol carries the\
    \ global assessment decision made by the\n   Posture Broker Server, taking into\
    \ account the results of the Posture\n   Validators involved in the assessment,\
    \ to the Posture Broker Client.\n   The PB protocol also aggregates and transports\
    \ advisories and\n   notifications such as remediation instructions (e.g., patch\n\
    \   references) from one or more Posture Validators.\n   The requirements for\
    \ the PB protocol are:\n   PB-1 The PB protocol MUST be capable of carrying attributes\
    \ from the\n        Posture Broker Server to the Posture Broker Client.  This\n\
    \        enables the Posture Broker Client to learn the posture\n        assessment\
    \ decision and if appropriate to aid in remediation and\n        notification\
    \ of the endpoint owner.\n   PB-2 The PB protocol MUST NOT interpret the contents\
    \ of PA messages\n        being carried, i.e., the data it is carrying must be\
    \ opaque to\n        it.\n   PB-3 The PB protocol MUST carry unique identifiers\
    \ that are used by\n        the Posture Brokers to route (deliver) PA messages\
    \ between\n        Posture Collectors and Posture Validators.  Such message routing\n\
    \        should facilitate dynamic registration or deregistration of\n       \
    \ Posture Collectors and Validators.  For example, a dynamically\n        registered\
    \ anti-virus Posture Validator should be able to\n        subscribe to receive\
    \ messages from its respective anti-virus\n        Posture Collector on NEA Clients.\n\
    \   PB-4 The PB protocol MUST be capable of supporting a half-duplex PT\n    \
    \    protocol.  However this does not preclude PB from operating\n        full-duplex\
    \ when running over a full-duplex PT.\n   PB-5 The PB protocol MAY support authentication,\
    \ integrity and\n        confidentiality protection for the attribute messages\
    \ it carries\n        between a Posture Broker Client and Posture Broker Server.\
    \  This\n        provides security protection for a message dialog of the\n  \
    \      groupings of attribute messages exchanged between the Posture\n       \
    \ Broker Client and Posture Broker Server.  Such protection is\n        orthogonal\
    \ to PA protections (which are end to end) and allows\n        for simpler Posture\
    \ Collector and Validators to be implemented,\n        and for consolidation of\
    \ cryptographic operations possibly\n        improving scalability and manageability.\n\
    \   PB-6 The PB protocol MUST support grouping of attribute messages\n       \
    \ optimize transport of messages and minimize round trips.\n"
- title: 7.4.  Posture Transport (PT) Protocol Requirements
  contents:
  - "7.4.  Posture Transport (PT) Protocol Requirements\n   The Posture Transport\
    \ (PT) protocol carries PB protocol messages\n   between the Posture Transport\
    \ Client and the Posture Transport\n   Server.  PT is responsible for providing\
    \ a protected transport for\n   the PB protocol.  The PT protocol may itself be\
    \ transported by one or\n   more concatenated sessions using lower layer protocols,\
    \ such as\n   802.1X, RADIUS [RADIUS], TLS, or IKE.\n   This section defines the\
    \ requirements that candidate PT protocols\n   must be capable of supporting.\n\
    \   PT-1 The PT protocol MUST NOT interpret the contents of PB messages\n    \
    \    being transported, i.e., the data it is carrying must be opaque\n       \
    \ to it.\n   PT-2 The PT protocol MUST be capable of supporting mutual\n     \
    \   authentication, integrity, confidentiality, and replay\n        protection\
    \ of the PB messages between the Posture Transport\n        Client and the Posture\
    \ Transport Server.\n   PT-3 The PT protocol MUST provide reliable delivery for\
    \ the PB\n        protocol.  This includes the ability to perform fragmentation\n\
    \        and reassembly, detect duplicates, and reorder to provide\n        in-sequence\
    \ delivery, as required.\n   PT-4 The PT protocol SHOULD be able to run over existing\
    \ network\n        access protocols such as 802.1X and IKEv2.\n   PT-5 The PT\
    \ protocol SHOULD be able to run between a NEA Client and\n        NEA Server\
    \ over TCP or UDP (similar to Lightweight Directory\n        Access Protocol (LDAP)).\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document defines the functional requirements\
    \ for the PA, PB, and\n   PT protocols used for Network Endpoint Assessment. \
    \ As such, it does\n   not define a specific protocol stack or set of technologies,\
    \ so this\n   section will highlight security issues that may apply to NEA in\n\
    \   general or to particular aspects of the NEA reference model.\n   Note that\
    \ while a number of topics are outside the scope of the NEA\n   WG and thus this\
    \ specification (see section 3.1), it is important\n   that those mechanisms are\
    \ protected from attack.  For example, the\n   methods of triggering an assessment\
    \ or reassessment are out of scope\n   but should be appropriately protected from\
    \ attack (e.g., an attacker\n   hiding the event indicating a NEA Server policy\
    \ change has occurred).\n   NEA intends to facilitate detection and corrective\
    \ actions for\n   cooperating endpoints to become compliant with network compliance\n\
    \   policies.  For example, it is envisioned that these policies will\n   allow\
    \ deployers to detect out-of-date, inactive, or absent security\n   mechanisms\
    \ on the endpoint that might leave it more vulnerable to\n   known attacks.  If\
    \ an endpoint is more vulnerable to compromise, then\n   it is riskier to have\
    \ this endpoint present on the network with other\n   valuable assets.  By proactively\
    \ assessing cooperating endpoints\n   before their entrance to the network, deployers\
    \ can improve their\n   resilience to attack prior to network access.  Similarly,\n\
    \   reassessments of cooperating endpoints on the network may be helpful\n   in\
    \ assuring that security mechanisms remain in use and are up to date\n   with\
    \ the latest policies.\n   NEA fully recognizes that not all endpoints will be\
    \ cooperating by\n   providing their valid posture (or any posture at all).  This\
    \ might\n   occur if malware is influencing the NEA Client or policies, and thus\n\
    \   a trustworthy assessment isn't possible.  Such a situation could\n   result\
    \ in the admission of an endpoint that introduces threats to the\n   network and\
    \ other endpoints despite passing the NEA compliance\n   assessment.\n"
- title: 8.1.  Trust
  contents:
  - "8.1.  Trust\n   Network Endpoint Assessment involves assessing the posture of\n\
    \   endpoints entering or already on the network against compliance\n   policies\
    \ to assure they are adequately protected.  Therefore, there\n   must be an implied\
    \ distrusting of endpoints until there is reason to\n   believe (based on posture\
    \ information) that they are protected from\n   threats addressed by compliance\
    \ policy and can be trusted to not\n   propagate those threats to other endpoints.\
    \  On the network provider\n   side, the NEA Client normally is expected to trust\
    \ the network\n   infrastructure systems to not misuse any disclosed posture\n\
    \   information (see section 9) and any remediation instructions provided\n  \
    \ to the endpoint.  The NEA Client normally also needs to trust that\n   the NEA\
    \ Server will only request information required to determine\n   whether the endpoint\
    \ is safe to access the network assets.\n   Between the NEA Client and Server\
    \ there exists a network that is not\n   assumed to be trustworthy.  Therefore,\
    \ little about the network is\n   implicitly trusted beyond its willingness and\
    \ ability to transport\n   the exchanged messages in a timely manner.  The amount\
    \ of trust given\n   to each component of the NEA reference model is deployment\
    \ specific.\n   The NEA WG intends to provide security mechanisms to reduce the\n\
    \   amount of trust that must be assumed by a deployer.  The following\n   sections\
    \ will discuss each area in more detail.\n"
- title: 8.1.1.  Endpoint
  contents:
  - "8.1.1.  Endpoint\n   For NEA to properly operate, the endpoint needs to be trusted\
    \ to\n   accurately represent the requested security posture of the endpoint\n\
    \   to the NEA Server.  By NEA WG charter, the NEA reference model does\n   not\
    \ explicitly specify how to detect or prevent lying endpoints that\n   intentionally\
    \ misrepresent their posture.  Similarly, the detection\n   of malware (e.g.,\
    \ root kits) that are able to trick the Posture\n   Collectors into returning\
    \ incorrect information is the subject for\n   research and standardization outside\
    \ the IETF (e.g., Trusted\n   Computing Group [TCG]) and is not specifically addressed\
    \ by the\n   model.  However, if such mechanisms are used in a deployment, the\
    \ NEA\n   reference model should be able to accommodate these technologies by\n\
    \   allowing them to communicate over PA to Posture Validators or work\n   orthogonally\
    \ to protect the NEA Client from attack and assure the\n   ability of Posture\
    \ Collectors to view the actual posture.\n   Besides having to trust the integrity\
    \ of the NEA Client and its\n   ability to accurately collect and report Posture\
    \ Attributes about the\n   endpoint, we try to limit other assumed trust.  Most\
    \ of the usage\n   models for NEA expect the posture information to be sent to\
    \ the NEA\n   Server for evaluation and decision making.  When PA and/or PT level\n\
    \   security protections are used, the endpoint needs to trust the\n   integrity\
    \ and potentially confidentiality of the trust anchor\n   information (e.g., public\
    \ key certificates) used by the Posture\n   Collector and/or Posture Transport\
    \ Client.  However, NEA\n   implementations may choose to send or pre-provision\
    \ some policies to\n   the endpoint for evaluation that would assume more trust\
    \ in the\n   endpoint.  In this case, the NEA Server must trust the endpoint's\n\
    \   policy storage, evaluation, and reporting mechanisms to not falsify\n   the\
    \ results of the posture evaluation.\n   Generally the endpoint should not trust\
    \ network communications (e.g.,\n   inbound connection requests) unless this trust\
    \ has been specifically\n   authorized by the user or owner defined policy or\
    \ action.  The NEA\n   reference model assumes the entire NEA Client is local\
    \ to the\n   endpoint.  Unsolicited communications originating from the network\n\
    \   should be inspected by normal host-based security protective\n   mechanisms\
    \ (e.g., firewalls, security protocols, Intrusion\n   Detection/Prevention System\
    \ (IDS/IPS), etc.).  Communications\n   associated with a NEA assessment or reassessment\
    \ requires some level\n   of trust particularly when initiated by the NEA Server\n\
    \   (reassessment).  The degree of trust can be limited by use of strong\n   security\
    \ protections on the messages as dictated by the network\n   deployer and the\
    \ endpoint user/owner policy.\n"
- title: 8.1.2.  Network Communications
  contents:
  - "8.1.2.  Network Communications\n   Between the NEA Client and Server, there may\
    \ exist a variety of types\n   of devices to facilitate the communication path.\
    \  Some of the devices\n   may serve as intermediaries (e.g., simple L2 switches)\
    \ so they may\n   have the opportunity to observe and change the message dialogs.\n\
    \   The intermediary devices may fall into a few major categories that\n   impact\
    \ our degree of trust in their operation.  First, some\n   intermediary devices\
    \ may act as message forwarders or carriers for PT\n   (e.g., L2 switches, L3\
    \ routers).  For these devices we trust them not\n   to drop the messages or actively\
    \ attempt to disrupt (e.g., denial of\n   service (DoS)) the NEA deployment.\n\
    \   Second, some intermediary devices may be part of the access control\n   layer\
    \ of the network and as such, we trust them to enforce policies\n   including\
    \ remediation, isolation, and access controls given to them\n   as a result on\
    \ a NEA assessment.  These devices may also fill other\n   types of roles described\
    \ in this section.\n   Third, some devices may act as a termination point or proxy\
    \ for the\n   PT carrier protocol.  Frequently, it is expected that the carrier\n\
    \   protocol for PT will terminate on the NEA Client and Server so will\n   be\
    \ co-resident with the PT endpoints.  If this expectation is not\n   present in\
    \ a deployment, we must trust the termination device to\n   accurately proxy the\
    \ PT messages without alteration into the next\n   carrier protocol (e.g., if\
    \ inner EAP method messages are transitioned\n   from an EAP [EAP] tunnel to a\
    \ RADIUS session).\n   Fourth, many networks include infrastructure such as IDS/IPS\
    \ devices\n   that monitor and take corrective action when suspicious behavior\
    \ is\n   observed on the network.  These devices may have a relationship with\n\
    \   the NEA Server that is not within scope for this specification.\n   Devices\
    \ trusted by the NEA Server to provide security information\n   that might affect\
    \ the NEA Server's decisions are trusted to operate\n   properly and not cause\
    \ the NEA Server to make incorrect decisions.\n   Finally, other types of intermediary\
    \ devices may exist on the network\n   between the NEA Client and Server that\
    \ are present to service other\n   network functions beside NEA.  These devices\
    \ might be capable of\n   passively eavesdropping on the network, archiving information\
    \ for\n   future purposes (e.g., replay or privacy invasion), or more actively\n\
    \   attacking the NEA protocols.  Because these devices do not play a\n   role\
    \ in facilitating NEA, it is essential that NEA deployers not be\n   forced to\
    \ trust them for NEA to reliably operate.  Therefore, it is\n   required that\
    \ NEA protocols offer security protections to assure\n   these devices can't steal,\
    \ alter, spoof or otherwise damage the\n   reliability of the message dialogs.\n"
- title: 8.1.3.  NEA Server
  contents:
  - "8.1.3.  NEA Server\n   The NEA Server (including potentially remote systems providing\n\
    \   posture validation services) is generally trusted to apply the\n   specified\
    \ assessment policies and must be protected from compromise.\n   It is essential\
    \ that NEA Server deployments properly safeguard these\n   systems from a variety\
    \ of attacks from the network and endpoints to\n   assure their proper operation.\n\
    \   While there is a need to trust the NEA Server operation to some\n   degree,\
    \ rigorous security architecture, analysis, monitoring, and\n   review should\
    \ assure its network footprint and internal workings are\n   protected from attack.\
    \  The network footprint would include\n   communications over the network that\
    \ might be subject to attack such\n   as policy provisioning from the policy authoring\
    \ systems and general\n   security and system management protocols.  Some examples\
    \ of internal\n   workings include protections from malware attacking the intra-NEA\n\
    \   Server communications, NEA Server internal logic, or policy stores\n   (particularly\
    \ those that would change the resulting decisions or\n   enforcements).  The NEA\
    \ Server needs to trust the underlying NEA and\n   lower layer network protocols\
    \ to properly behave and safeguard the\n   exchanged messages with the endpoint.\
    \  The NEA reference model does\n   not attempt to address integrity protection\
    \ of the operating system\n   or other software supporting the NEA Server.\n \
    \  One interesting example is where some components of the NEA Server\n   physically\
    \ reside in different systems.  This might occur when a\n   Posture Validator\
    \ (or a remote backend server used by a local Posture\n   Validator) exists on\
    \ another system from the Posture Broker Server.\n   Similarly, the Posture Broker\
    \ Server might exist on a separate system\n   from the Posture Transport Server.\
    \  When there is a physical\n   separation, the communications between the remote\
    \ components of the\n   NEA Server must ensure that the PB session and PA message\
    \ dialogs are\n   resistant to active and passive attacks, in particular, guarded\n\
    \   against eavesdropping, forgery and replay.  Similarly, the Posture\n   Validators\
    \ may also wish to minimize their trust in the Posture\n   Broker Server beyond\
    \ its ability to properly send and deliver PA\n   messages.  The Posture Validators\
    \ could employ end-to-end PA security\n   to verify the authenticity and protect\
    \ the integrity and/or\n   confidentiality of the PA messages exchanged.\n   When\
    \ PA security is used, each Posture Validator must be able to\n   trust the integrity\
    \ and potentially confidentiality of its trust\n   anchor policies.\n"
- title: 8.2.  Protection Mechanisms at Multiple Layers
  contents:
  - "8.2.  Protection Mechanisms at Multiple Layers\n   Inherent in the requirements\
    \ is a desire for NEA candidate protocols\n   throughout the reference model to\
    \ be capable of providing strong\n   security mechanisms as dictated by the particular\
    \ deployment.  In\n   some cases, these mechanisms may appear to provide overlapping\
    \ or\n   redundant protections.  These apparent overlaps may be used in\n   combination\
    \ to offer a defense in depth approach to security.\n   However, because of the\
    \ layering of the protocols, each set of\n   protections offers slightly different\
    \ benefits and levels of\n   granularity.\n   For example, a deployer may wish\
    \ to encrypt traffic at the PT layer\n   to protect against some forms of traffic\
    \ analysis or interception by\n   an eavesdropper.  Additionally, the deployer\
    \ may also selectively\n   encrypt messages containing the posture of an endpoint\
    \ to achieve\n   end-to-end confidentiality to its corresponding Posture Validator.\n\
    \   In particular, this might be desired when the Posture Validator is\n   not\
    \ co-located with the NEA Server so the information will traverse\n   additional\
    \ network segments after the PT protections have been\n   enforced or so that\
    \ the Posture Validator can authenticate the\n   corresponding Posture Collector\
    \ (or vice versa).\n   Different use cases and environments for the NEA technologies\
    \ will\n   likely influence the selection of the strength and security\n   mechanisms\
    \ employed during an assessment.  The goal of the NEA\n   requirements is to encourage\
    \ the selection of technologies and\n   protocols that are capable of providing\
    \ the necessary protections for\n   a wide variety of types of assessment.\n"
- title: 8.3.  Relevant Classes of Attack
  contents:
  - "8.3.  Relevant Classes of Attack\n   A variety of attacks are possible against\
    \ the NEA protocols and\n   assessment technologies.  This section does not include\
    \ a full\n   security analysis, but wishes to highlight a few attacks that\n \
    \  influenced the requirement definition and should be considered by\n   deployers\
    \ selecting use of protective mechanisms within the NEA\n   reference model.\n\
    \   As discussed, there are a variety of protective mechanisms included\n   in\
    \ the requirements for candidate NEA protocols.  Different use cases\n   and environments\
    \ may cause deployers to decide not to use some of\n   these mechanisms; however,\
    \ this should be done with an understanding\n   that the deployment may become\
    \ vulnerable to some classes of attack.\n   As always, a balance of risk vs. performance,\
    \ usability,\n   manageability, and other factors should be taken into account.\n\
    \   The following types of attacks are applicable to network protocols\n   defined\
    \ in the reference model and thus should be considered by\n   deployers.\n"
- title: 8.3.1.  Man-in-the-Middle (MITM)
  contents:
  - "8.3.1.  Man-in-the-Middle (MITM)\n   MITM attacks against a network protocol\
    \ exist when a third party can\n   insert itself between two communicating entities\
    \ without detection\n   and gain benefit from involvement in their message dialog.\
    \  For\n   example, a malware infested system might wish to join the network\n\
    \   replaying posture observed from a clean endpoint entering the\n   network.\
    \  This might occur by the system inserting itself into and\n   actively proxying\
    \ an assessment message dialog.  The impact of the\n   damage caused by the MITM\
    \ can be limited or prevented by selection of\n   appropriate protocol protective\
    \ mechanisms.\n   For example, the requirement for PT to be capable of supporting\n\
    \   mutual authentication prior to any endpoint assessment message\n   dialogs\
    \ prevents the attacker from inserting itself as an active\n   participant (proxy)\
    \ within the communications without detection\n   (assuming the attacker lacks\
    \ credentials convincing either party it\n   is legitimate).  Reusable credentials\
    \ should not be exposed on the\n   network to assure the MITM doesn't have a way\
    \ to impersonate either\n   party.  The PT requirement for confidentiality-protected\
    \ (encrypted)\n   communications linked to the above authentication prevents a\
    \ passive\n   MITM from eavesdropping by observing the message dialog and keeping\
    \ a\n   record of the conformant posture values for future use.  The PT\n   requirement\
    \ for replay prevention stops a passive MITM from later\n   establishing a new\
    \ session (or hijacking an existing session) and\n   replaying previously observed\
    \ message dialogs.\n   If a non-compliant, active MITM is able to trick a clean\
    \ endpoint to\n   give up its posture information, and the MITM has legitimate\n\
    \   credentials, it might be able to appear to a NEA Server as having\n   compliant\
    \ posture when it does not.  For example, a non-compliant\n   MITM could connect\
    \ and authenticate to a NEA Server and as the NEA\n   Server requests posture\
    \ information, the MITM could request the same\n   posture from the clean endpoint.\
    \  If the clean endpoint trusts the\n   MITM to perform a reassessment and is\
    \ willing to share the requested\n   posture, the MITM could obtain the needed\
    \ posture from the clean\n   endpoint and send it to the NEA Server.  In order\
    \ to address this\n   form of MITM attack, the NEA protocols would need to offer\
    \ a strong\n   (cryptographic) binding between the posture information and the\n\
    \   authenticated session to the NEA Server so the NEA Server knows the\n   posture\
    \ originated from the endpoint that authenticated.  Such a\n   strong binding\
    \ between the posture's origin and the authenticating\n   endpoint may be feasible\
    \ so should be preferred by the NEA WG.\n"
- title: 8.3.2.  Message Modification
  contents:
  - "8.3.2.  Message Modification\n   Without message integrity protection, an attacker\
    \ capable of\n   intercepting a message might be capable of modifying its contents\
    \ and\n   causing an incorrect decision to be made.  For example, the attacker\n\
    \   might change the Posture Attributes to always reflect incorrect\n   values\
    \ and thus prevent a compliant system from joining the network.\n   Unless the\
    \ NEA Server could detect this change, the attacker could\n   prevent admission\
    \ to large numbers of clean systems.  Conversely, the\n   attacker could allow\
    \ a malware infested machine to be admitted by\n   changing the sent Posture Attributes\
    \ to reflect compliant values,\n   thus hiding the malware from the Posture Validator.\
    \  The attacker\n   could also infect compliant endpoints by sending malicious\n\
    \   remediation instructions that, when performed, would introduce\n   malware\
    \ on the endpoint or deactivate security mechanisms.\n   In order to protect against\
    \ such attacks, the PT includes a\n   requirement for strong integrity protection\
    \ (e.g., including a\n   protected hash like a Hashed Message Authentication Code\
    \ (HMAC)\n   [HMAC] of the message) so any change to a message would be detected.\n\
    \   PA includes a similar requirement to enable end-to-end integrity\n   protection\
    \ of the attributes, extending the protection all the way to\n   the Posture Validator\
    \ even if it is located on another system behind\n   the NEA Server.\n   It is\
    \ important that integrity protection schemes leverage fresh\n   secret information\
    \ (not known by the attacker) that is bound to the\n   authenticated session such\
    \ as an HMAC using a derived fresh secret\n   associated with the session.  Inclusion\
    \ of freshness information\n   allows the parties to protect against some forms\
    \ of message replay\n   attacks using secret information from prior sessions.\n"
- title: 8.3.3.  Message Replay or Attribute Theft
  contents:
  - "8.3.3.  Message Replay or Attribute Theft\n   An attacker might listen to the\
    \ network, recording message dialogs or\n   attributes from a compliant endpoint\
    \ for later reuse to the same NEA\n   Server or just to build an inventory of\
    \ software running on other\n   systems watching for known vulnerabilities.  The\
    \ NEA Server needs to\n   be capable of detecting the replay of posture and/or\
    \ the model must\n   assure that the eavesdropper cannot obtain the information\
    \ in the\n   first place.  For this reason, the PT protocol is required to provide\n\
    \   confidentiality and replay prevention.\n   The cryptographic protection from\
    \ disclosure of the PT, PB, or PA\n   messages prevents the passive listener from\
    \ observing the exchanged\n   messages and thus prevents theft of the information\
    \ for future use.\n   However, an active attacker might be able to replay the\
    \ encrypted\n   message if there is no strong link to the originating party or\n\
    \   session.  By linking the encrypted message dialog to the\n   authentication\
    \ event and leveraging per-transaction freshness and\n   keying exchanges, this\
    \ prevents a replay of the encrypted\n   transaction.\n"
- title: 8.3.4.  Other Types of Attack
  contents:
  - "8.3.4.  Other Types of Attack\n   This section doesn't claim to present an exhaustive\
    \ list of attacks\n   against the NEA reference model.  Several types of attack\
    \ will become\n   easier to understand and analyze once the NEA WG has created\n\
    \   specifications describing the specific selected technologies and\n   protocols\
    \ to be used within NEA.  One such area is Denial of Service\n   (DoS).  At this\
    \ point in time, it is not practical to try to define\n   all of the potential\
    \ exposures present within the NEA protocols, so\n   such an analysis should be\
    \ included in the Security Considerations\n   sections of the selected NEA protocols.\n\
    \   However, it is important that the NEA Server be resilient to DoS\n   attacks\
    \ as an outage might affect large numbers of endpoints wishing\n   to join or\
    \ remain on the network.  The NEA reference model expects\n   that the PT protocol\
    \ would have some amount of DoS resilience and\n   that the PA and PB protocols\
    \ would need to build upon that base with\n   their own protections.  To help\
    \ narrow the window of attack by\n   unauthenticated parties, it is envisioned\
    \ that NEA Servers would\n   employ PT protocols that enable an early mutual authentication\
    \ of the\n   requesting endpoint as one technique for filtering out attacks.\n\
    \   Attacks occurring after the authentication would at least come from\n   sources\
    \ possessing valid credentials and could potentially be held\n   accountable.\
    \  Similarly, NEA protocols should offer strong replay\n   protection to prevent\
    \ DoS-based attacks based on replayed sessions\n   and messages.  Posture assessment\
    \ should be strongly linked with the\n   Posture Transport authentications that\
    \ occurred to assure the posture\n   came from the authenticated party.  Cryptographic\
    \ mechanisms and\n   other potentially resource intensive operations should be\
    \ used\n   sparingly until the validity of the request can be established.  This\n\
    \   and other resource/protocol based attacks can be evaluated once the\n   NEA\
    \ technologies and their cryptographic use have been selected.\n"
- title: 9.  Privacy Considerations
  contents:
  - "9.  Privacy Considerations\n   While there are a number of beneficial uses of\
    \ the NEA technology for\n   organizations that own and operate networks offering\
    \ services to\n   similarly owned endpoints, these same technologies might enhance\
    \ the\n   potential for abuse and invasion of personal privacy if misused.\n \
    \  This section will discuss a few of the potential privacy concerns\n   raised\
    \ by the deployment of this technology and offer some guidance\n   to implementers.\n\
    \   The NEA technology enables greater visibility into the configuration\n   of\
    \ an endpoint from the network.  Such transparency enables the\n   network to\
    \ take into consideration the strength of the endpoint's\n   security mechanisms\
    \ when making access control decisions to network\n   resources.  However, this\
    \ transparency could also be used to enforce\n   restrictive policies to the detriment\
    \ of the user by limiting their\n   choice of software or prying into past or\
    \ present uses of the\n   endpoint.\n   The scope of the NEA WG was limited to\
    \ specifying protocols targeting\n   the use cases where the endpoints and network\
    \ are owned by the same\n   party or the endpoint owner has established a clear\
    \ expectation of\n   disclosure/compliance with the network owner.  This is a\
    \ familiar\n   model for governments, institutions, and a wide variety of\n  \
    \ enterprises that provide endpoints to their employees to perform\n   their jobs.\
    \  In many of these situations, the endpoint is purchased\n   and owned by the\
    \ enterprise and they often reserve the right to audit\n   and possibly dictate\
    \ the allowable uses of the device.  The NEA\n   technologies allow them to automate\
    \ the inspection of the contents of\n   an endpoint and this information may be\
    \ linked to the access control\n   mechanisms on the network to limit endpoint\
    \ use should the endpoint\n   not meet minimal compliance levels.\n   In these\
    \ environments, the level of personal privacy the employee\n   enjoys may be significantly\
    \ reduced subject to local laws and\n   customs.  However, in situations where\
    \ the endpoint is owned by the\n   user or where local laws protect the rights\
    \ of the user even when\n   using endpoints owned by another party, it is critical\
    \ that the NEA\n   implementation enable the user to control what endpoint information\n\
    \   is shared with the network.  Such controls imposed by the user might\n   prevent\
    \ or limit their ability to access certain networks or\n   protected resources,\
    \ but this must be a user choice.\n"
- title: 9.1.  Implementer Considerations
  contents:
  - "9.1.  Implementer Considerations\n   The NEA WG is not defining NEA Client policy\
    \ content standards nor\n   defining requirements on aspects of an implementation\
    \ outside of the\n   network protocols; however, the following guidance is provided\
    \ to\n   encourage privacy friendly implementations for broader use than just\n\
    \   the enterprise-oriented setting described above.\n   NEA Client implementations\
    \ are encouraged to offer an opt-in policy\n   to users prior to sharing their\
    \ endpoint's posture information.  The\n   opt-in mechanism should be on a per-user,\
    \ per-NEA Server basis so\n   each user can control which networks can access\
    \ any posture\n   information on their system.  For those networks that are allowed\
    \ to\n   assess the endpoint, the user should be able to specify granular\n  \
    \ restrictions on what particular types and specific attributes Posture\n   Collectors\
    \ are allowed to disclose.  Posture Validator\n   implementations are discouraged\
    \ from having the default behavior of\n   using wild carded requests for posture\
    \ potentially leading to\n   overexposure of information (see section 9.2).  Instead\
    \ Posture\n   Validators, by default, should only request the specific attributes\n\
    \   that are required to perform their assessment.\n   Requests for attributes\
    \ that are not explicitly allowed (or\n   specifically disallowed) to be shared\
    \ should result in a user\n   notification and/or log record so the user can assess\
    \ whether the\n   service is doing something undesirable or whether the user is\
    \ willing\n   to share this additional information in order to gain access.  Some\n\
    \   products might consider policy-driven support for prompting the user\n   for\
    \ authorization with a specific description of the posture\n   information being\
    \ requested prior to sending it to the NEA Server.\n   It is envisioned that the\
    \ owner of the endpoint is able to specify\n   disclosure policies that may override\
    \ or influence the user's\n   policies on the attributes visible to the network.\
    \  If the owner\n   disclosure policy allows for broader posture availability\
    \ than the\n   user policy, the implementation should provide a feedback mechanism\n\
    \   to the user so they understand the situation and can choose whether\n   to\
    \ use the endpoint in those circumstances.\n   In such a system, it is important\
    \ that the user's policy authoring\n   interface is easy to understand and clearly\
    \ articulates the current\n   disclosure policy of the system including any influences\
    \ from the\n   owner policy.  Users should be able to understand what posture\
    \ is\n   available to the network and the general impact of this information\n\
    \   being known.  In order to minimize the list of restrictions\n   enumerated,\
    \ use of a conservative default disclosure policy such as\n   \"that which is\
    \ not explicitly authorized for disclosure is not\n   allowed\" might make sense\
    \ to avoid unintentional leakage of\n   information.\n   NEA Server implementations\
    \ should provide newly subscribing endpoints\n   with a disclosure statement that\
    \ clearly states:\n      o What information is required\n      o How this information\
    \ will be used and protected\n      o What local privacy policies are applicable\n\
    \   This information will empower subscribing users to decide whether the\n  \
    \ disclosure of this information is acceptable considering local laws\n   and\
    \ customs.\n"
- title: 9.2.  Minimizing Attribute Disclosure
  contents:
  - "9.2.  Minimizing Attribute Disclosure\n   One important issue in the design of\
    \ the NEA reference model and\n   protocols is enabling endpoints to disclose\
    \ minimal information\n   required to establish compliance with network policies.\
    \  There are\n   several models that could be considered as to how the disclosed\n\
    \   attribute set is established.  Each model has privacy related\n   benefits\
    \ and issues that should be considered by product developers.\n   This section\
    \ summarizes three potential models for how attribute\n   disclosure might be\
    \ provided within NEA products and some privacy\n   implications potentially associated\
    \ with each model.\n   The first model is easy to implement and deploy but has\
    \ privacy and\n   potentially latency and scalability implications.  This approach\n\
    \   effectively defaults the local policy to send all known NEA Posture\n   Attributes\
    \ when an assessment occurs.  While this might simplify\n   deployment, it exposes\
    \ a lot of information that is potentially not\n   relevant to the security assessment\
    \ of the system and may introduce\n   privacy issues.  For example, is it really\
    \ important that the\n   enterprise know whether Firefox is being used on a system\
    \ instead of\n   other browsers during the security posture assessment?\n   The\
    \ second model involves an out-of-band provisioning of the\n   disclosure policy\
    \ to all endpoints.  This model may involve the\n   enterprise establishing policy\
    \ that a particular list of attributes\n   must be provided when a NEA exchange\
    \ occurs.  Endpoint privacy policy\n   may filter this attribute list, but such\
    \ changes could cause the\n   endpoint not to be given network or resource access.\
    \  This model\n   simplifies the network exchange as the endpoint always sends\
    \ the\n   filtered list of attributes when challenged by a particular network.\n\
    \   However, this approach requires an out-of-band management protocol to\n  \
    \ establish and manage the NEA disclosure policies of all systems.\n   The third\
    \ model avoids the need for pre-provisioning of a disclosure\n   policy by allowing\
    \ the NEA Server to specifically request what\n   attributes are required.  This\
    \ is somewhat analogous to the policy\n   being provisioned during the NEA exchanges\
    \ so is much easier to\n   manage.  This model allows for the NEA Server to iteratively\
    \ ask for\n   attributes based on the values of prior attributes.  Note, even\
    \ in\n   this model the NEA protocols are not expected to be a general purpose\n\
    \   query language, but rather allow the NEA Server to request specific\n   attributes\
    \ as only the defined attributes are possible to request.\n   For example, an\
    \ enterprise might ask about the OS version in the\n   initial message dialog\
    \ and after learning the system is running Linux\n   ask for a different set of\
    \ attributes specific to Linux than it would\n   if the endpoint was a Windows\
    \ system.  It is envisioned that this\n   approach might minimize the set of attributes\
    \ sent over the network\n   if the assessment is of a complex system (such as\
    \ trying to\n   understand what patches are missing from an OS).\n   In each model,\
    \ the user could create a set of per-network privacy\n   filter policies enforced\
    \ by the NEA Client to prevent the disclosure\n   of attributes felt to be personal\
    \ in nature or not relevant to a\n   particular network.  Such filters would protect\
    \ the privacy of the\n   user but might result in the user not being allowed access\
    \ to the\n   desired asset (or network) or being provided limited access.\n"
- title: 10. References
  contents:
  - '10. References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [UTF8]   Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO 10646\",\n            STD 63, RFC 3629, November 2003.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [802.1X] IEEE Standards for Local and Metropolitan\
    \ Area Networks:\n            Port based Network Access Control, IEEE Std 802.1X-2001,\n\
    \            June 2001.\n   [CNAC]   Cisco, Cisco's Network Admission Control\
    \ Main Web Site,\n            http://www.cisco.com/go/nac\n   [EAP]    Aboba,\
    \ B., Blunk, L., Vollbrecht, J., Carlson, J., and H.\n            Levkowetz, Ed.,\
    \ \"Extensible Authentication Protocol (EAP)\",\n            RFC 3748, June 2004.\n\
    \   [HMAC]   Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-\n     \
    \       Hashing for Message Authentication\", RFC 2104, February\n           \
    \ 1997.\n   [IPSEC]  Kent, S. and K. Seo, \"Security Architecture for the Internet\n\
    \            Protocol\", RFC 4301, December 2005.\n   [NAP]    Microsoft, Network\
    \ Access Protection Main Web Site,\n            http://www.microsoft.com/nap\n\
    \   [RADIUS] Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote\n \
    \           Authentication Dial In User Service (RADIUS)\", RFC 2865,\n      \
    \      June 2000.\n   [TLS]    Dierks, T. and E. Rescorla, \"The Transport Layer\
    \ Security\n            (TLS) Protocol Version 1.1\", RFC 4346, April 2006.\n\
    \   [TCG]    Trusted Computing Group, Main TCG Web Site,\n            http://www.trustedcomputinggroup.org/\n\
    \   [TNC]    Trusted Computing Group, Trusted Network Connect Main Web\n     \
    \       Site, https://www.trustedcomputinggroup.org/groups/network/\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   The authors of this document would like to acknowledge\
    \ the NEA\n   Working Group members who have contributed to previous requirements\n\
    \   and problem statement documents that influenced the direction of this\n  \
    \ specification: Kevin Amorin, Parvez Anandam, Diana Arroyo, Uri\n   Blumenthal,\
    \ Alan DeKok, Lauren Giroux, Steve Hanna, Thomas Hardjono,\n   Tim Polk, Ravi\
    \ Sahita, Joe Salowey, Chris Salter, Mauricio Sanchez,\n   Yaron Sheffer, Jeff\
    \ Six, Susan Thompson, Gary Tomlinson, John\n   Vollbrecht, Nancy Winget, Han\
    \ Yin, and Hao Zhou.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul Sangster\n   Symantec Corporation\n   6825 Citrine\
    \ Dr\n   Carlsbad, CA 92009 USA\n   Phone: +1 760 438-5656\n   EMail: Paul_Sangster@symantec.com\n\
    \   Hormuzd Khosravi\n   Intel\n   2111 NE 25th Avenue\n   Hillsboro, OR 97124\
    \ USA\n   Phone: +1 503 264 0334\n   EMail: hormuzd.m.khosravi@intel.com\n   Mahalingam\
    \ Mani\n   Avaya Inc.\n   1033 McCarthy Blvd.\n   Milpitas, CA 95035 USA\n   Phone:\
    \ +1 408 321-4840\n   EMail: mmani@avaya.com\n   Kaushik Narayan\n   Cisco Systems\
    \ Inc.\n   10 West Tasman Drive\n   San Jose, CA 95134\n   Phone: +1 408 526-8168\n\
    \   EMail: kaushik@cisco.com\n   Joseph Tardo\n   Nevis Networks\n   295 N. Bernardo\
    \ Ave., Suite 100\n   Mountain View, CA 94043 USA\n   EMail: joseph.tardo@nevisnetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
