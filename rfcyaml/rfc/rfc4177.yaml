- title: __initial_text__
  contents:
  - '           Architectural Approaches to Multi-homing for IPv6

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo provides an analysis of the architectural aspects of\n\
    \   multi-homing support for the IPv6 protocol suite.  The purpose of\n   this\
    \ analysis is to provide a taxonomy for classification of various\n   proposed\
    \ approaches to multi-homing.  It is also an objective of this\n   exercise to\
    \ identify common aspects of this domain of study, and also\n   to provide a framework\
    \ that can allow exploration of some of the\n   further implications of various\
    \ architectural extensions that are\n   intended to support multi-homing.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  The Multi-Homing Space . . . . . . . . . . . . . . . .\
    \ . . . .  5\n   4.  Functional Goals and Considerations  . . . . . . . . . .\
    \ . . .  7\n   5.  Approaches to Multi-Homing . . . . . . . . . . . . . . . .\
    \ . .  7\n       5.1.  Multi-Homing: Routing  . . . . . . . . . . . . . . . .\
    \ .  8\n       5.2.  Multi-Homing: Mobility . . . . . . . . . . . . . . . . .\
    \  9\n       5.3.  Multi-homing: Identity Considerations  . . . . . . . . . 12\n\
    \       5.4.  Multi-homing: Identity Protocol Element  . . . . . . . . 14\n  \
    \     5.5.  Multi-homing: Modified Protocol Element  . . . . . . . . 15\n    \
    \   5.6.  Modified Site-Exit and Host Behaviors  . . . . . . . . . 16\n   6. \
    \ Approaches to Endpoint Identity  . . . . . . . . . . . . . . . 17\n       6.1.\
    \  Endpoint Identity Structure  . . . . . . . . . . . . . . 18\n       6.2.  Persistent,\
    \ Opportunistic, and Ephemeral Identities  . . 20\n       6.3.  Common Issues\
    \ for Multi-Homing Approaches  . . . . . . . 23\n             6.3.1.  Triggering\
    \ Locator Switches  . . . . . . . . . . 23\n             6.3.2.  Locator Selection\
    \  . . . . . . . . . . . . . . . 26\n             6.3.3.  Layering Identity  .\
    \ . . . . . . . . . . . . . . 27\n             6.3.4.  Session Startup and Maintenance\
    \  . . . . . . . . 29\n             6.3.5.  Dynamic Capability Negotiation . .\
    \ . . . . . . . 31\n             6.3.6.  Identity Uniqueness and Stability  .\
    \ . . . . . . 31\n   7.  Functional Decomposition of Multi-Homing Approaches \
    \ . . . . . 32\n       7.1.  Establishing Session State . . . . . . . . . . .\
    \ . . . . 32\n       7.2.  Re-homing Triggers . . . . . . . . . . . . . . . .\
    \ . . . 33\n       7.3.  Re-homing Locator Pair Selection . . . . . . . . . .\
    \ . . 33\n       7.4.  Locator Change . . . . . . . . . . . . . . . . . . . .\
    \ . 34\n       7.5.  Removal of Session State . . . . . . . . . . . . . . . .\
    \ 34\n   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 34\n\
    \   9.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 34\n  \
    \ 10. Informative References . . . . . . . . . . . . . . . . . . . . 34\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The objective of this analysis is to allow various technical\n\
    \   proposals relating to the support of multi-homing environment in IPv6\n  \
    \ to be placed within an architectural taxonomy.  This is intended to\n   allow\
    \ these proposals to be classified and compared in a structured\n   fashion. \
    \ It is also an objective of this exercise to identify common\n   aspects across\
    \ all proposals within this domain of study, and also to\n   provide a framework\
    \ that can allow exploration of some of the further\n   implications of various\
    \ architectural extensions that are intended to\n   support multi-homing.  The\
    \ scope of this study is limited to the IPv6\n   protocol suite architecture,\
    \ although reference is made to IPv4\n   approaches as required.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Care-of Address (CoA)\n      A unicast routeable address\
    \ associated with a mobile node while\n      visiting a foreign link; the subnet\
    \ prefix of this IP address is a\n      foreign subnet prefix.  Among the multiple\
    \ care-of addresses that\n      a mobile node may have at any given time (e.g.,\
    \ with different\n      subnet prefixes), the one registered with the mobile node's\
    \ home\n      agent for a given home address is called its \"primary\" care-of\n\
    \      address.\n   Correspondent Node (CN)\n      A peer node with which a mobile\
    \ node is communicating.  The\n      correspondent node may be either mobile or\
    \ stationary.\n   Endpoint\n      A term for the identity for a network host.\
    \  This is normally\n      assumed to be a constant or long-lived association.\n\
    \   Endpoint Identity Protocol Stack Element (EIP)\n      An added element in\
    \ a protocol stack model that explicitly manages\n      the association of locators\
    \ to endpoints.\n   Home Address (HoA)\n      A unicast routeable address assigned\
    \ to a mobile node, used as the\n      permanent address of the mobile node. \
    \ This address is within the\n      mobile node's home link.  Standard IP routing\
    \ mechanisms will\n      deliver packets destined for a mobile node's home address\
    \ to its\n      home link.  Mobile nodes can have multiple home addresses, for\n\
    \      instance, when there are multiple home prefixes on the home link.\n   Lower\
    \ Layer Protocol (LLP)\n      The lower-level protocol in the protocol stack model\
    \ relative to\n      the protocol layer being considered.  In the Internet\n \
    \     architecture, the LLP of the transport protocol is the Internet\n      Protocol,\
    \ and the LLP of the application protocol is the transport\n      protocol.\n\
    \   Locator\n      The term \"locator\" is used as the location token for a network\n\
    \      host.  This is a network-level address that can be used as a\n      destination\
    \ field for IP packets.\n   Mobile Node\n      A node that can change its point\
    \ of attachment from one link to\n      another, while still being reachable via\
    \ its home address.\n   Multi-Homed Site\n      A site with more than one transit\
    \ provider.  \"Site multi-homing\"\n      is the practice of arranging a site\
    \ to be multi-homed such that\n      the site may use any of its transit providers\
    \ for connectivity\n      services.\n   Re-homing\n      The transition of a site\
    \ between two states of connectedness, due\n      to a change in the connectivity\
    \ between the site and its transit\n      providers.\n   Site\n      An entity\
    \ autonomously operating a network using IP.\n   Site-Exit Router\n      A boundary\
    \ router of the site that provides the site's interface\n      to one or more\
    \ transit providers.\n   Transit Provider\n      A provider that operates a site\
    \ that directly provides\n      connectivity to the Internet to one or more external\
    \ sites.  The\n      connectivity provided extends beyond the transit provider's\
    \ own\n      site.  A transit provider's site is directly connected to the\n \
    \     sites for which it provides transit.\n   Upper Layer Protocol (ULP)\n  \
    \    The upper-level protocol in the protocol stack model relative to\n      the\
    \ protocol layer being considered.  In the Internet\n      architecture, the ULP\
    \ of the Internet Protocol is the transport\n      protocol, and the ULP of the\
    \ transport protocol is the application\n      protocol.\n"
- title: 3.  The Multi-Homing Space
  contents:
  - "3.  The Multi-Homing Space\n   A simple formulation of the site multi-homing\
    \ environment is\n   indicated in Figure 1.\n                           +------+\n\
    \                           |remote|\n                           | host |\n  \
    \                         |  R   |\n                           +------+\n    \
    \                          |\n                    + - - - - - - - - - - - +\n\
    \                    | Internet Connectivity |\n                    + - - - -\
    \ - - - - - - - +\n                         /            \\\n                \
    \   +---------+    +---------+\n                   | ISP A   |    |  ISP B  |\n\
    \                   +---------+    +---------+\n                       | Path\
    \ A        | Path B\n         + - - - - - - - - - - - - - - - - - - - - +\n  \
    \       | multi-      |               |           |\n           homed   +------+\
    \         +------+\n         | site    | site-|         | site-|       |\n   \
    \                | exit |         | exit |\n         |         |router|      \
    \   |router|       |\n                   |  A   |         |  B   |\n         |\
    \         +------+         +------+       |\n                      |         \
    \       |\n         |         local site connectivity         |\n            \
    \               |\n         |           +-----------+                 |\n    \
    \                 |multi-homed|\n         |           |   host    |          \
    \       |\n                     +-----------+\n         + - - - - - - - - - -\
    \ - - - - - - - - - - +\n              Figure 1: The Multi-Homed Domain\n   The\
    \ environment of multi-homing is intended to provide sufficient\n   support to\
    \ local hosts so as to allow local hosts to exchange IP\n   packets with remote\
    \ hosts, such that this exchange of packets is\n   transparently supported across\
    \ dynamic changes in connectivity.\n   Session resilience implies that if a local\
    \ multi-homed-aware host\n   establishes an application session with the remote\
    \ host using \"Path\n   A\", and this path fails, the application session should\
    \ be mapped\n   across to \"Path B\" without requiring any application-visible\n\
    \   re-establishment of the session.  In other words, the application\n   session\
    \ should not be required to be explicitly aware of underlying\n   path changes\
    \ at the level of packet forwarding paths chosen by the\n   network.  Established\
    \ sessions should survive dynamic changes in\n   network-level reachability.\n\
    \   There are also considerations of providing mechanisms to support\n   sustained\
    \ site visibility to support session establishment.\n   Sustained site visibility\
    \ implies that external attempts to initiate\n   a communication with hosts within\
    \ the site will succeed as long as\n   there is at least one viable path between\
    \ the external host and the\n   multi-homed site.  This also implies that local\
    \ attempts to initiate\n   a communication with remote hosts should take into\
    \ account the\n   current connectivity state in undertaking locator selection\
    \ and\n   setting up initial locator sets.\n   In addition, there is the potential\
    \ consideration of being able to\n   distribute the total traffic load across\
    \ a number of network paths\n   according to some predetermined policy objective.\
    \  This may be to\n   achieve a form of traffic engineering, support for particular\n\
    \   quality-of-service requirements, or localized load balancing across\n   multiple\
    \ viable links.\n   This simple multi-homing scenario also includes \"site-exit\"\
    \ routers,\n   where the local site interfaces to the upstream Internet transit\n\
    \   providers.  The interactions between the external routing system and\n   the\
    \ site-exit routers, the interactions between the site-exit routers\n   and the\
    \ local multi-homed host, and the interactions between local\n   connectivity\
    \ forwarding and the local host and site exit routers are\n   not defined a priori\
    \ in this scenario, as they form part of the\n   framework of interaction between\
    \ the various multi-homing components.\n   The major characteristic of this simple\
    \ site multi-homing scenario is\n   that the address space used by, and advertised\
    \ as reachable by, ISP A\n   is distinct from the address space used by ISP B.\n\
    \   This simple scenario is intended to illustrate the basic multi-homing\n  \
    \ environment.  Variations may include additional external providers of\n   transit\
    \ connectivity to the local site; complex site requirements and\n   constraints,\
    \ where the site may not interface uniformly to all\n   external transit providers;\
    \ sequential rather than simultaneous\n   external transit reachability; communication\
    \ with remote multi-homed\n   hosts; multiway communications; use of host addresses\
    \ in a\n   referential context (third-party referrals); and the imposition of\n\
    \   policy constraints on path selection.  However, the basic simple site\n  \
    \ multi-homing scenario is sufficient to illustrate the major\n   architectural\
    \ aspects of support for multi-homing, so this simple\n   scenario will be used\
    \ as the reference model for this analysis.\n"
- title: 4.  Functional Goals and Considerations
  contents:
  - "4.  Functional Goals and Considerations\n   RFC 3582 [RFC3582] documents some\
    \ goals that a multi-homing approach\n   should attempt to address.  These goals\
    \ include:\n      *  redundancy\n      *  load sharing\n      *  traffic engineering\n\
    \      *  policy constraints\n      *  simplicity of approach\n      *  transport-layer\
    \ survivability\n      *  DNS compatibility\n      *  packet filtering capability\n\
    \      *  scaleability\n      *  legacy compatibility\n   The reader is referred\
    \ to [RFC3582] for a complete description of\n   each of these goals.\n   In addition,\
    \ [thinks] documents further considerations for IPv6\n   multi-homing.  Again,\
    \ the reader is referred to this document for the\n   detailed enumeration of\
    \ these considerations.  The general topic\n   areas considered in this study\
    \ include:\n      *  interaction with routing systems,\n      *  aspects of a\
    \ split between endpoint-identifier and forwarding\n         locator,\n      *\
    \  changes to packets on the wire, and\n      *  the interaction between names,\
    \ endpoints, and the DNS.\n   In evaluating various approaches, further considerations\
    \ also\n   include:\n      *  the role of helpers and agents in the approach,\n\
    \      *  modifications to host behaviours,\n      *  the required trust model\
    \ to support the interactions, and\n      *  the nature of potential vulnerabilities\
    \ in the approach.\n"
- title: 5.  Approaches to Multi-Homing
  contents:
  - "5.  Approaches to Multi-Homing\n   There appear to be five generic forms of architectural\
    \ approaches to\n   this problem, namely:\n      Routing\n         Use the IPv4\
    \ multi-homing approach\n      Mobility\n         Use the IPv6 Mobility approach\n\
    \      New Protocol Element\n         Insert a new element in the protocol stack\
    \ that manages a\n         persistent identity for the session\n      Modify a\
    \ Protocol Element\n         Modify the transport or IP protocol stack element\
    \ in the host\n         in order to support dynamic changes to the forwarding\
    \ locator\n      Modified Site-Exit Router/Local Host interaction\n         Modify\
    \ the site-exit router and local forwarding system to\n         allow various\
    \ behaviours including source-based forwarding,\n         site-exit hand-offs,\
    \ and address rewriting by site-exit routers\n   These approaches will be described\
    \ in detail in the following\n   sections.\n"
- title: '5.1.  Multi-Homing: Routing'
  contents:
  - "5.1.  Multi-Homing: Routing\n   The approach used in IPv4 for multi-homing support\
    \ is to preserve the\n   semantics of the IPv4 address as both an endpoint identifier\
    \ and a\n   forwarding locator.  For this to work in a multi-homing context, it\n\
    \   is necessary for the transit ISPs to announce the local site's\n   address\
    \ prefix as a distinct routing entry in the inter-domain\n   routing system. \
    \ This approach could be used in an IPv6 context, and,\n   as with IPv4, no modifications\
    \ to the IPv6 architecture are required\n   to support this approach.\n   The\
    \ local site's address prefix may be a more specific address prefix\n   drawn\
    \ from the address space advertised by one of the transit\n   providers, or from\
    \ some third-party provider not currently connected\n   directly to the local\
    \ site.  Alternatively, the address space may be\n   a distinct address block\
    \ obtained by direct assignment from a\n   Regional Internet Registry as Provider\
    \ Independent space.  Each host\n   within the local site is uniquely addressed\
    \ from the site's address\n   prefix.\n   All transit providers for the site accept\
    \ a prefix advertisement from\n   the multi-homed site and advertise this prefix\
    \ globally in the\n   inter-domain routing table.  When connectivity between the\
    \ local site\n   and an individual transit provider is lost, normal operation\
    \ of the\n   routing protocol will ensure that the routing advertisement\n   corresponding\
    \ to this particular path will be withdrawn from the\n   routing system; those\
    \ remote domains that had selected this path as\n   the best available will select\
    \ another candidate path as the best\n   path.  Upon restoration of the path,\
    \ the path is re-advertised in the\n   inter-domain routing system.  Remote domains\
    \ will undertake a further\n   selection of the best path based on this re-advertised\
    \ reachability\n   information.  Neither the local nor the remote host need to\
    \ have\n   multiple addresses or to undertake any form of address selection.\n\
    \   The path chosen for forward and reverse direction path flows is a\n   decision\
    \ made by the routing system.\n   This approach generally meets all the goals\
    \ for multi-homing\n   approaches with one notable exception: scaleability.  Each\
    \ site that\n   multi-homes in this fashion adds a further entry in the global\n\
    \   inter-domain routing table.  Within the constraints of current\n   routing\
    \ and forwarding technologies, it is not clearly evident that\n   this approach\
    \ can scale to encompass a population of multi-homed\n   sites of the order of,\
    \ for example, 10**7 such sites.  The\n   implication here is that this would\
    \ add a similar number of unique\n   prefixes into the inter-domain routing environment,\
    \ which in turn\n   would add to the storage and computational load imposed on\n\
    \   inter-domain routing elements within the network.  This scale of\n   additional\
    \ load is not supportable within the current capabilities of\n   the IPv4 global\
    \ Internet, nor is it clear at present that the routing\n   capabilities of the\
    \ entire network could be expanded to manage this\n   load in a cost-effective\
    \ fashion, within the bounds of the current\n   inter-domain routing protocol\
    \ architecture.\n   One other goal, transport-layer surviveability, is potentially\
    \ at\n   risk in this approach.  Dynamic changes within the network trigger\n\
    \   the routing system to converge to a new stable distributed forwarding\n  \
    \ state.  This process of convergence within the distributed routing\n   system\
    \ may include the network generating unstable transient\n   forwarding paths,\
    \ as well as taking an indeterminate time to\n   complete.  This in term may trigger\
    \ upper-level protocol timeouts and\n   possible session resets.\n"
- title: '5.2.  Multi-Homing: Mobility'
  contents:
  - "5.2.  Multi-Homing: Mobility\n   Preserving established communications through\
    \ movement is similar to\n   preserving established communications through outages\
    \ in multi-homed\n   sites as both scenarios require the capability of dynamically\n\
    \   changing the locators used during the communication while\n   maintaining,\
    \ unchanged, the endpoint identifier used by Upper Layer\n   Protocol (ULP). \
    \ Since MIPv6 protocol [RFC3775] already provides the\n   required support to\
    \ preserve established communications through\n   movement, it seems worthwhile\
    \ to explore whether it could also be\n   used to provide session survivability\
    \ in multi-homed environments.\n   MIPv6 uses a preferred IP address, the Home\
    \ Address (HoA), as a\n   stable identifier for the mobile node (MN).  This identifier\
    \ is then\n   dynamically mapped to a valid locator (Care-of Address, or CoA)\
    \ that\n   corresponds to the current attachment point within the network\n  \
    \ topology.  When the MN is at the Home Network, the HoA is used both\n   as locator\
    \ and as identifier.  When the MN is not at the Home\n   Network, the HoA is used\
    \ as an identifier, and the CoA is used as\n   locator.  A relaying agent (Home\
    \ Agent) placed in the Home Network is\n   used to forward packets addressed to\
    \ the HoA to the current location,\n   specified by the CoA.  After each movement,\
    \ the MN must inform its\n   Home Agent of the new CoA and optionally inform those\
    \ entities with\n   which it has established communications (Correspondent Nodes,\
    \ or\n   CNs).  The mapping between the HoA and the current CoA is conveyed\n\
    \   using Binding Update (BU) messages.\n   When the BU message is exchanged between\
    \ the MN and the Home Agent,\n   it is possible to assume the existence of a pre-established\
    \ Security\n   Association that can be used to protect the binding information.\n\
    \   However, when the BU message is exchanged between the MN and the CN,\n   it\
    \ is not possible to assume the existence of such a Security\n   Association.\
    \  In this case, it is necessary to adopt an alternative\n   mechanism to protect\
    \ the binding information contained in the\n   message.  The selected mechanism\
    \ is called the Return Routeability\n   procedure, and the background for its\
    \ design is detailed in [rosec].\n   The goal of the mechanism is to allow the\
    \ CN to verify that the MN\n   that is claiming that an HoA is currently located\
    \ at a CoA is\n   entitled to make such claim; this essentially means that the\
    \ HoA was\n   assigned to the MN, and that the MN is currently located at the\
    \ CoA.\n   In order to verify these updates, the CN sends two different secrets,\n\
    \   one to the claimed HoA and another one to the claimed CoA.  If the MN\n  \
    \ receives both secrets, this means that the Home Agent located at the\n   Home\
    \ Network has a trust relationship with the MN, that it has\n   forwarded the\
    \ secret sent to the HoA, and that the MN is receiving\n   packets sent to the\
    \ CoA.  By including authorisation information\n   derived from both secrets within\
    \ the BU message, the MN will be able\n   to prove to the CN that the claimed\
    \ binding between the HoA and the\n   CoA is valid.\n   The lifetime of the binding\
    \ that is created in the CN using\n   authorisation information obtained through\
    \ the Return Routeability\n   procedure is limited to 7 minutes, in order to prevent\
    \ time-shifted\n   attacks [rosec].  In a time-shifted attack, an attacker located\
    \ along\n   the path between the CN and the MN forges the Return Routeability\n\
    \   packet exchange.  The result of such an attack is that the CN will\n   forward\
    \ all the traffic addressed to the HoA to the CoA selected by\n   the attacker.\
    \  The attacker can then leave the position along the\n   path, but the effects\
    \ of the attack will remain until the binding is\n   deleted, shifting in time\
    \ the effect of the attack.  By limiting the\n   lifetime of the binding in the\
    \ CN, the effect of this attack is\n   reduced to 7 minutes, because after that\
    \ period a new Return\n   Routeability procedure is needed to extend the binding\
    \ lifetime.  It\n   should be noted that the Return Routeability procedure is\
    \ vulnerable\n   to \"man-in-the-middle\" attacks, since an attacker located along\
    \ the\n   path between the CN and the MN can forge the periodic Return\n   Routeability\
    \ packet exchange.\n   The possible application of the MIPv6 protocol to the multi-homing\n\
    \   problem would be to use BU messages to convey information in advance\n   about\
    \ alternative addresses that could be used following an outage in\n   the path\
    \ associated with the currently used address.\n   In this scenario, the multi-homed\
    \ host adopts the MN role and the\n   host outside the multi-homed site adopts\
    \ the CN role.  When a\n   communication is established between the multi-homed\
    \ host and the\n   external host, the address used for initiating the communication\
    \ is\n   used as an HoA.  The communication continues using this address as\n\
    \   long as no outage occurs.  If an outage occurs and the HoA becomes\n   unreachable,\
    \ an alternative address of the multi-homed node is used\n   as a CoA.  In this\
    \ case, the multi-homed node sends a BU message to\n   the external host, informing\
    \ it about the new CoA to be used for the\n   HoA, so that the established communication\
    \ can be preserved using the\n   alternative address.  However, such a BU message\
    \ has to be validated\n   using authorisation information obtained through the\
    \ Return\n   Routeability procedure, which implies that the binding lifetime will\n\
    \   be limited to a fixed period of no more than 7 minutes.  The result\n   is\
    \ that the binding between the HoA and the new CoA will expire after\n   this\
    \ interval has elapsed, and then the HoA will be used for the\n   communication.\
    \  Since the HoA is unreachable because of the outage,\n   the communication will\
    \ be interrupted.  It should be noted that it is\n   not possible to acquire new\
    \ authorisation information by performing a\n   new Return Routeability procedure,\
    \ because it requires communication\n   through the HoA, which is no longer reachable.\
    \  Consequently, a\n   mechanism based on the MIPv6 BU messages to convey information\
    \ about\n   alternative addresses will preserve communications only for 7\n  \
    \ minutes.\n   The aspect of MIPv6 that appears to present issues in the context\
    \ of\n   multi-homing is the Return Routeability procedure.  In MIPv6,\n   identity\
    \ validity is periodically tested by return routeability of\n   the identity address.\
    \  This regular use of a distinguished locator as\n   the identity token cannot\
    \ support return reachability in the\n   multi-homing context, in the event of\
    \ extended failure of the path\n   that is associated with the identity locator.\n"
- title: '5.3.  Multi-homing: Identity Considerations'
  contents:
  - "5.3.  Multi-homing: Identity Considerations\n   The intent of multi-homing in\
    \ the IPv6 domain is to achieve an\n   outcome that is comparable to that of multi-homed\
    \ IPv4 sites using\n   routing to support multi-homing, without an associated\
    \ additional\n   load being imposed on the IPv6 routing system.  The overall intent\
    \ of\n   IPv6 is to provide a scalable protocol framework to support the\n   deployment\
    \ of communications services for an extended period of time,\n   and this implies\
    \ that the scaling properties of the deployment\n   environment remain tractable\
    \ within projections of size of deployment\n   and underlying technology capabilities.\
    \  Within the inter-domain\n   routing space, the basic approach used in IPv4\
    \ and IPv6 is to attempt\n   to align address deployment with network topology,\
    \ so that address\n   aggregation can be used to create a structured hierarchy\
    \ of the\n   routing space.\n   Within this constraint of topological-based address\
    \ deployment and\n   provider-aggregateable addressing architectures, the local\
    \ site that\n   is connected to multiple providers is delegated addresses from\
    \ each\n   of these providers' address blocks.  In the example network in\n  \
    \ Figure 1, the local multi-homed host will conceivably be addressed in\n   two\
    \ ways: one using transit provider A's address prefix and the other\n   using\
    \ transit provider B's address prefix.\n   If remote host R is to initiate a communication\
    \ with the local\n   multi-homed host, it would normally query the DNS for an\
    \ address for\n   the local host.  In this context, the DNS would return two addresses.\n\
    \   one using the A prefix and the other using the B prefix.  The remote\n   host\
    \ would select one of these addresses and send a packet to this\n   destination\
    \ address.  This would direct the packet to the local host\n   along a path through\
    \ A or B, depending on the selected address.  If\n   the path between the local\
    \ site and the transit provider fails, then\n   the address prefix announced by\
    \ the transit provider to the\n   inter-domain routing system will continue to\
    \ be the provider's\n   address prefix.  The remote host will not see any change\
    \ in routing,\n   yet packets sent to the local host will now fail to be delivered.\n\
    \   The question posed by the multi-homing problem is: \"If the remote\n   host\
    \ is aware of multi-homing, how could it switch over to using the\n   equivalent\
    \ address for the local multi-homed host that transits the\n   other provider?\"\
    \n   If the local multi-homed host wishes to initiate a session with\n   remote\
    \ host R, it needs to send a packet to R with a valid source and\n   destination\
    \ address.  While the destination address is that of R,\n   what source address\
    \ should the local host use?  There are two\n   implications for this choice.\
    \  Firstly, the remote host will, by\n   default use this source address as the\
    \ destination address in its\n   response, and hence this choice of source address\
    \ will direct the\n   reverse path from R to the local host.  Secondly, ISPs A\
    \ and B may be\n   using some form of reverse unicast address filtering on source\n\
    \   addresses of packets passed to the ISP, as a means of preventing\n   source\
    \ address spoofing.  This implies that if the multi-homed\n   address selects\
    \ a source address from address prefix A, and the local\n   routing to R selects\
    \ a best path via ISP B, then ISP B's ingress\n   filters will discard the packet.\n\
    \   Within this addressing structure there is no form of routing-based\n   repair\
    \ of certain network failures.  If the link between the local\n   site and ISP\
    \ A fails, there is no change in the route advertisements\n   made by ISP A to\
    \ its external routing peers.  Even though the\n   multi-homed site continues\
    \ to be reachable via ISP B, packets\n   directed to the site using ISP A's prefix\
    \ will be discarded by ISP A,\n   as the destination is unreachable.  The implication\
    \ here is that, if\n   the local host wishes to maintain a session across such\
    \ events, it\n   needs to communicate to remote host R that it is possible to\
    \ switch\n   to a destination address for the multi-homed host that is based on\n\
    \   ISP B's address prefix.  In the event that the local host wishes to\n   initiate\
    \ a session at this point, then it may need to use an initial\n   source locator\
    \ that reflects the situation that the only viable\n   destination address to\
    \ use is the one that is based on ISP B's\n   address prefix.  It may be the case\
    \ that the local host is not aware\n   of this return routeability constraint,\
    \ or it may not be able to\n   communicate this information directly to R, in\
    \ which case R needs to\n   discover or be passed this information in other ways.\n\
    \   In an aggregated routing environment, multiple transit paths to a\n   host\
    \ imply multiple address prefixes for the host, where each\n   possible transit\
    \ path is identified by an address for the host.  The\n   implication of this\
    \ constraint on multi-homing is that paths being\n   passed to the local multi-homed\
    \ site via transit provider ISP A must\n   use a forwarding-level destination\
    \ IP address drawn from ISP A's\n   advertised address prefix set that maps to\
    \ the multi-homed host.\n   Equally, packets being passed via the transit of ISP\
    \ B must use a\n   destination address drawn from ISP B's address prefix set.\
    \  The\n   further implication here is that path selection (ISP A vs. ISP B\n\
    \   transit for incoming packets) is an outcome of the process of\n   selecting\
    \ an address for the destination host.\n   The architectural consideration here\
    \ is that, in the conventional IP\n   protocol architecture, the assumption is\
    \ made that the\n   transport-layer endpoint identity is the same identity used\
    \ by the\n   internet forwarding layer, namely the IP address.\n   If multiple\
    \ forwarding paths are to be supported for a single\n   transport session and\
    \ if path selection is to be decoupled from the\n   functions of transport session\
    \ initiation and maintenance, then the\n   corollary in architectural terms appears\
    \ to be that some changes are\n   required in the protocol architecture to decouple\
    \ the concepts of\n   identification of the endpoint and identification of the\
    \ location and\n   associated path selection for the endpoint.  This is a fundamental\n\
    \   change in the semantics of an IP address in the context of the role\n   of\
    \ the endpoint address within the end-to-end architectural model\n   [e2e].  This\
    \ change in the protocol architecture would permit a\n   transport session to\
    \ use an invariant endpoint identity value to\n   initiate and maintain a session,\
    \ while allowing the forwarding layer\n   to dynamically change paths and associated\
    \ endpoint locator\n   identities without impacting on the operation of the session.\
    \  Such a\n   decoupling of the concepts of identities and locators would not\
    \ add\n   any incremental load to the inter-domain routing system.\n   Some generic\
    \ approaches to this form of separation of endpoint\n   identity and locator value\
    \ are described in the following sections.\n"
- title: '5.4.  Multi-homing: Identity Protocol Element'
  contents:
  - "5.4.  Multi-homing: Identity Protocol Element\n   One approach to this objective\
    \ is to add a new element into the model\n   of the protocol stack.\n   The presentation\
    \ to the upper-level protocol stack element (ULP)\n   would be endpoint identifiers\
    \ to uniquely identify both the local\n   stack and the remote stack.  This will\
    \ provide the ULP with stable\n   identifiers for the duration of the ULP session.\n\
    \   The presentation to the lower-level protocol stack element (LLP)\n   would\
    \ be of the form of a locator.  This implies that the protocol\n   stack element\
    \ would need to maintain a mapping of endpoint identifier\n   values to locator\
    \ values.  In a multi-homing context, one of the\n   essential characteristics\
    \ of this mapping is that it needs to be\n   dynamic, in that environmental triggers\
    \ should be able to trigger a\n   change in mappings.  This in turn would correspond\
    \ to a change in the\n   paths (forward and/or reverse) used by the endpoints\
    \ to traverse the\n   network.  In this way, the ULP session is defined by a peering\
    \ of\n   endpoint identifiers that remain constant throughout the lifetime of\n\
    \   the ULP session, while the locators may change to maintain end-to-end\n  \
    \ reachability for the session.\n   The operation of the new protocol stack element\
    \ (termed here the\n   \"endpoint identity protocol stack element\", or EIP) will\
    \ establish a\n   synchronised state with its remote counterpart.  This will allow\
    \ the\n   stack elements to exchange a set of locators that may be used within\n\
    \   the context of the session.  A change in the local binding between\n   the\
    \ current endpoint identity value and a locator will change the\n   source locator\
    \ value used in the forwarding-level packet header.  The\n   actions of the remote\
    \ EIP upon receipt of this packet with the new\n   locator is to recognise this\
    \ locator as part of an existing session\n   and, upon some trigger condition,\
    \ to change its session view of the\n   mapping of the remote endpoint identity\
    \ to the corresponding locator\n   and use this locator as the destination locator\
    \ in subsequent packets\n   passed to the LLP.\n   From the perspective of the\
    \ IP protocol architecture, there are two\n   possible locations to insert the\
    \ EIP into the protocol stack.\n   One possible location is at the upper level\
    \ of the transport\n   protocol.  Here the application program interface (API)\
    \ of the\n   application-level protocols would interface to the EIP element, and\n\
    \   use endpoint identifiers to refer to the remote entity.  The EIP\n   would\
    \ pass locators to the API of the transport layer.\n   The second approach is\
    \ to insert the EIP between the transport and\n   internet protocol stack elements,\
    \ so that the transport layer would\n   function using endpoint identifiers and\
    \ maintain a transport session\n   using these endpoint identifiers.  The IP or\
    \ internetwork layer would\n   function using locators, and the mapping from endpoint\
    \ identifier to\n   locator is undertaken within the EIP stack element.\n"
- title: '5.5.  Multi-homing: Modified Protocol Element'
  contents:
  - "5.5.  Multi-homing: Modified Protocol Element\n   As an alternative to insertion\
    \ of a new protocol stack element into\n   the protocol architecture, an existing\
    \ protocol stack element could\n   be modified to include the functionality performed\
    \ by the EIP\n   element.  This modification could be undertaken within the transport\n\
    \   protocol stack element or within the internet protocol stack element.\n  \
    \ The functional outcome from these modifications would be to create a\n   mechanism\
    \ to support the use of multiple locators within the context\n   of single-endpoint-to-single-endpoint\
    \ communication.\n   Within the transport layer, this functionality could be achieved,\
    \ for\n   example, by binding a set of locators to a single session and then\n\
    \   communicating this locator set to the remote transport entity.  This\n   would\
    \ allow the local transport entity to switch the mapping to a\n   different locator\
    \ for either the local endpoint or the remote\n   endpoint, while maintaining\
    \ the integrity of the ULP session.\n   Within the IP level, this functionality\
    \ could be supported by a form\n   of dynamic rewriting of the packet header as\
    \ it is processed by the\n   protocol element.  Incoming packets with the source\
    \ and destination\n   locators in the packet header are mapped to packets with\
    \ the\n   equivalent endpoint identifiers in both fields, and the reverse\n  \
    \ mapping is performed to outgoing packets passed from the transport\n   layer.\
    \  Mechanisms that support direct rewriting of the packet header\n   are potential\
    \ candidates in this approach.  Other potential\n   candidates are various forms\
    \ of packet header transformations using\n   encapsulation, where the original\
    \ endpoint identifier packet header\n   is preserved in the packet and an outer-level\
    \ locator packet header\n   is wrapped around the packet as it is passed through\
    \ the internet\n   protocol stack element.\n   There are common issues in all\
    \ these scenarios: what state is kept,\n   which part of the protocol stack keeps\
    \ this state, how state is\n   maintained with additions and removals of locator\
    \ bindings, and\n   whether only one piece of code is aware of the endpoint/locator\
    \ split\n   or do multiple protocol elements have to be modified?  For example,\n\
    \   if the functionality is added at the internetworking (IP) layer,\n   there\
    \ is no context of an active transport session, so that removal\n   of identity/locator\
    \ state information for terminated sessions needs\n   to be triggered by some\
    \ additional mechanism from the transport layer\n   to the internetworking layer.\n"
- title: 5.6.  Modified Site-Exit and Host Behaviors
  contents:
  - "5.6.  Modified Site-Exit and Host Behaviors\n   The above approaches all assume\
    \ that the hosts are explicitly aware\n   of the multi-homed environment and use\
    \ modified protocol behaviour to\n   support multi-homing functionality.  A further\
    \ approach to this\n   objective is to split this functionality across a number\
    \ of network\n   elements and potentially perform packet header rewriting from\
    \ a\n   persistent endpoint identity value to a locator value at a remote\n  \
    \ point.\n   One possible approach uses site-exit routers to perform some form\
    \ of\n   packet header manipulation as packets are passed from the local\n   multi-homed\
    \ site to a particular transit provider.  The local site\n   routing system will\
    \ select the best path to a destination host based\n   on the remote host's locator\
    \ value.  The local host will write its\n   endpoint identity as the source address\
    \ of the packet.  When the\n   packet reaches a site-exit router, the site-exit\
    \ router will rewrite\n   the source field of the packet to a corresponding locator\
    \ that\n   selects a reverse path through the same transit ISP when the locator\n\
    \   is used as a destination locator by the remote host.  In order to\n   preserve\
    \ session integrity, a corresponding reverse transformation\n   must be undertaken\
    \ on incoming packets: the destination locator has\n   to be mapped back to the\
    \ host's endpoint identifier.  There are a\n   number of considerations whether\
    \ this is best performed at the\n   site-exit router when the packet is passed\
    \ into the site, or by the\n   local host.\n   Packet header rewriting by remote\
    \ network elements has a large number\n   of associated security considerations.\
    \  Any packet rewriting\n   mechanism has to provide proper protection against\
    \ the attacks\n   described in [threats], in particular against redirection attacks.\n\
    \   An alternative for packet header rewriting at the site-exit point is\n   for\
    \ the host to undertake the endpoint-to-locator mapping, using one\n   of the\
    \ approaches outlined above.  The consideration here is that\n   there is a significant\
    \ deployment of unicast reverse-path filtering\n   in Internet environments as\
    \ a counter-measure to source address\n   spoofing.  Using the example in Figure\
    \ 1, if a host selects a locator\n   drawn from the ISP B address prefix and local\
    \ routing directs that\n   packet to site-exit router A, then a packet passed\
    \ to ISP A would be\n   discarded by such filters.  Various approaches have been\
    \ proposed to\n   modify the behaviour of the site forwarding environment, all\
    \ with the\n   end effect that packets using a source locator drawn from the ISP\
    \ B\n   address prefix are passed to site-exit router B.  These approaches\n \
    \  include forms of source address routing and site-exit router\n   hand-over\
    \ mechanisms, as well as augmentation of the routing\n   information between site-exit\
    \ routers and local multi-homed hosts, so\n   that the choice of locator by the\
    \ local host for the remote host is\n   consistent with the current local routing\
    \ state for the local site to\n   reach the remote host.\n"
- title: 6.  Approaches to Endpoint Identity
  contents:
  - "6.  Approaches to Endpoint Identity\n   Both the approach of the addition of\
    \ an identity protocol element and\n   the approach of modification of an existing\
    \ protocol element assume\n   some form of exchange of information that allows\
    \ both parties to the\n   communication to be aware of the other party's endpoint\
    \ identity and\n   the associated mapping to locators.  There are a number of\
    \ possible\n   approaches for implementing this information exchange.\n   The\
    \ first such possible approach, termed here a \"conventional\"\n   approach, encapsulates\
    \ the protocol data unit (PDU) passed from the\n   ULP with additional data elements\
    \ that specifically refer to the\n   function of the EIP.  The compound data element\
    \ is passed to the LLP\n   as its PDU.  The corresponding actions on receipt of\
    \ a PDU from a LLP\n   is to extract the fields of the data unit that correspond\
    \ to the EIP\n   function, and pass the remainder of the PDU to the ULP.  The\
    \ EIP\n   operates in an \"in-band\" mode, communicating with its remote peer\n\
    \   entity through additional information wrapped around the ULP PDU.\n   This\
    \ is equivalent to generic tunnelling approaches where the outer\n   encapsulation\
    \ of the transmitted packet contains location address\n   information, while the\
    \ next-level packet header contains information\n   that is to be exposed and\
    \ used at the location endpoints and, in this\n   case, is identity information.\n\
    \   Another approach is to allow the EIP to communicate using a separate\n   communications\
    \ channel, where an EIP generates dedicated messages\n   that are directed to\
    \ its peer EIP, and it passes these PDUs to the\n   LLP independently of the PDUs\
    \ that are passed to the EIP from the\n   ULP.  This allows an EIP to exchange\
    \ information and synchronise\n   state with the remote EIP semi-independently\
    \ of the ULP protocol\n   exchange.  As one part of the EIP function is to transform\
    \ the ULP\n   PDU to include locator information, there is an associated\n   requirement\
    \ to ensure that the EIP peering state remains synchronised\n   to the exchange\
    \ of ULP PDUs, so that the remote EIP can correctly\n   recognise the locator-to-endpoint\
    \ mapping for each active session.\n   Another potential approach here is to allow\
    \ the endpoint-to-locator\n   mappings to be held by a third party.  This model\
    \ is already used for\n   supporting the name-to-IP address mappings performed\
    \ by the Domain\n   Name System (DNS), where the mapping is obtained by reference\
    \ to a\n   third party, namely, a DNS resolver.  A similar form of third-party\n\
    \   mapping between endpoints and a locator set could be supported\n   through\
    \ the use of the DNS or a similar third party referential\n   mechanism.  Rather\
    \ than have each party exchange endpoint-to-locator\n   mappings, this approach\
    \ would obtain this mapping as a result of a\n   lookup for a DNS Endpoint-to-Locator\
    \ set map contained as DNS\n   Resource Records, for example.\n"
- title: 6.1.  Endpoint Identity Structure
  contents:
  - "6.1.  Endpoint Identity Structure\n   The previous section has used the term\
    \ \"endpoint identity\" without\n   examining what form this identity may take.\
    \  A number of salient\n   considerations regarding the structure and form of\
    \ this identity\n   should be enumerated within an architectural overview of this\
    \ space.\n   One possible form of an identity is the use of identity tokens lifted\n\
    \   from the underlying protocol's \"address space\".  In other words an\n   endpoint\
    \ identity is a special case instance of an IPv6 protocol\n   address.  There\
    \ are a number of advantages in using this form of\n   endpoint identity, since\
    \ the suite of IP protocols and associated\n   applications already manipulates\
    \ IP addresses.  The essential\n   difference in a domain that distinguishes between\
    \ endpoint identity\n   and locator is that the endpoint identity parts of the\
    \ protocol would\n   operate on those addresses that assume the role of endpoint\n\
    \   identities, and the endpoint identity/locator mapping function would\n   undertake\
    \ a mapping from an endpoint \"address\" to a set of potential\n   locator \"\
    addresses\".  It would also undertake a reverse mapping from\n   a locator \"\
    address\" to the distinguished endpoint identifier\n   \"address\".  The IP address\
    \ space is hierarchically structured,\n   permitting a suitably efficient mapping\
    \ to be performed in both\n   directions.  The underlying semantics of addresses\
    \ in the context of\n   public networking includes the necessary considerations\
    \ of global\n   uniqueness of endpoint identity token values.\n   It is possible\
    \ to take this approach further and allow the endpoint\n   identifier to also\
    \ be a valid locator.  This would imply the\n   existence of a \"distinguished\"\
    \ or \"home\" locator, and other locators\n   could be dynamically mapped to this\
    \ initial locator peering as\n   required.  The drawback of this approach is that\
    \ the endpoint\n   identifier is now based on one of the transit provider's address\n\
    \   prefixes, and a change of transit provider would necessarily require\n   a\
    \ change of endpoint identifier values within the multi-homed site.\n   An alternative\
    \ approach for address-formatted identifiers is to use\n   distinguished identity\
    \ address values that are not part of the global\n   unicast locator space, allowing\
    \ applications and protocol elements to\n   distinguish between endpoint identity\
    \ values and locators based on\n   address prefix value.\n   It is also possible\
    \ to allow the endpoint identity and locator spaces\n   to overlap, and to distinguish\
    \ between the two realms by the context\n   of usage rather than by a prefix comparison.\
    \  However, this reuse of\n   the locator token space for identity tokens has\
    \ the potential to\n   create the anomalous situation where a particular locator\
    \ value is\n   used as an identity value by a different endpoint.  It is not clear\n\
    \   that the identity and locator contexts can be clearly disambiguated\n   in\
    \ every case, which is a major drawback to this particular approach.\n   If identity\
    \ values are to be drawn from the protocol's address space,\n   it would appear\
    \ that the basic choice is to either draw these\n   identity values from a different\
    \ part of the address space or to use\n   a distinguished or home address as both\
    \ a locator and an identity.\n   This latter option, that of using a locator as\
    \ the basis of an\n   endpoint identity on a locator, when coupled with a provider-\n\
    \   aggregated address distribution architecture, leads to a multi-homed\n   site\
    \ using a provider-based address prefix as a common identity\n   prefix.  As with\
    \ locator addresses in the context of a single-homed\n   network, a change of\
    \ provider connectivity implies a consequent\n   renumbering of identity across\
    \ the multi-homed site.  If avoiding\n   such forced renumbering is a goal here,\
    \ there would be a preference\n   in drawing identity tokens from a pool that\
    \ is not aligned with\n   network topology.  This may point to a preference from\
    \ this sector\n   for using identity token values that are not drawn from the\
    \ locator\n   address space.\n   It is also feasible to use the fully qualified\
    \ domain name (FQDN) as\n   an endpoint identity, undertaking a similar mapping\
    \ as described\n   above, using the FQDN as the lookup \"key\".  The implication\
    \ is that\n   there is no default \"address\" associated with the endpoint\n \
    \  identifier, as the FQDN can be used in the context of session\n   establishment\
    \ and a DNS query can be used to establish a set of\n   initial locators.  Of\
    \ course, it is also the case that there may not\n   necessarily be a unique endpoint\
    \ associated with a FQDN, and in such\n   cases, if there were multiple locator\
    \ addresses associated with the\n   FQDN via DNS RRs, shifting between locators\
    \ may imply directing the\n   packet to a different endpoint where there is no\
    \ knowledge of the\n   active session on the original endpoint.\n   The syntactic\
    \ properties of these two different identity realms have\n   obvious considerations\
    \ in terms of the manner in which these\n   identities may be used within PDUs.\n\
    \   It is also an option to consider a new structured identity space that\n  \
    \ is neither generated through the reuse of IPv6 address values nor\n   drawn\
    \ from the FQDN.  Given that the address space would need to be\n   structured\
    \ to permit its use as a lookup key to obtain the\n   corresponding locator set,\
    \ the obvious question is what additional or\n   altered characteristics would\
    \ be used in such an endpoint identity\n   space that would distinguish it from\
    \ either of the above approaches?\n   Instead of structured tokens that double\
    \ as lookup keys to obtain\n   mappings from endpoint identities to locator sets,\
    \ the alternative is\n   to use an unstructured token space, where individual\
    \ token values are\n   drawn opportunistically for use within a multi-homed session\
    \ context.\n   If such unstructured tokens are used in a limited context, then\
    \ the\n   semantics of the endpoint identity are subtly changed.  The endpoint\n\
    \   identity is not a persistent alias or reference to the identity of\n   the\
    \ endpoint, but it is a means to allow the identity protocol\n   element to confirm\
    \ that two locators are part of the same mapped\n   locator set for a remote endpoint.\
    \  In this context, the unstructured\n   opportunistic endpoint identifier values\
    \ are used in determining\n   locator equivalence rather than in some form of\
    \ lookup function.\n"
- title: 6.2.  Persistent, Opportunistic, and Ephemeral Identities
  contents:
  - "6.2.  Persistent, Opportunistic, and Ephemeral Identities\n   The considerations\
    \ in the previous section highlight one of the major\n   aspects of variance in\
    \ the method of supporting a split between\n   identity and location information.\n\
    \   One form uses a persistent identity field, by which it is inferred\n   that\
    \ the same identity value is used in all contexts in which this\n   form of identity\
    \ is required, in support of concurrent sessions as\n   well as sequential sessions.\
    \  This form of identity is intended to\n   remain constant over time and over\
    \ changes in the underlying\n   connectivity.  It may also be the case that this\
    \ identity is\n   completely distinct from network topology, so that the same\
    \ identity\n   is used irrespective of the current connectivity and locator\n\
    \   addressing used by the site and the host.  In this case, the identity\n  \
    \ is persistent, and the identity value can be used as a reference to\n   the\
    \ endpoint stack.  This supports multi-party referrals, where, if\n   parties\
    \ A and B establish a communication, B can pass A's identity to\n   a third party\
    \ C, who can then use this identity value to be the\n   active party in establishing\
    \ communication to A.\n   If persistent identifiers are to be used to initiate\
    \ a session, then\n   the identity is used as a lookup key to establish a set\
    \ of locators\n   that are associated with the identified endpoint.  It is desirable\n\
    \   that this lookup function be deterministic, reliable, robust,\n   efficient,\
    \ and trustable.  The implication of this is that such\n   identities must be\
    \ uniquely assigned, and experience in identity\n   systems points to a strong\
    \ preference for a structured identity token\n   space that has an internal hierarchy\
    \ of token components.  These\n   identity properties have significant commonality\
    \ with those of\n   unicast addresses and domain names.  The further implication\
    \ here is\n   that persistent structured identities also rely on the adoption\
    \ of\n   well-ordered distribution and management mechanisms to preserve their\n\
    \   integrity and utility.  Such mechanisms generally imply a significant\n  \
    \ overhead in terms of administrative tasks.\n   As noted in the previous section,\
    \ an alternative form of identity is\n   an unstructured identity space, where\
    \ specific values are drawn from\n   the space opportunistically.  In this case,\
    \ the uniqueness of any\n   particular identity value is not ensured.  The use\
    \ of such identities\n   as a lookup key to establish locators is also altered,\
    \ as the\n   unstructured nature of the space has implications relating to the\n\
    \   efficiency of the lookup, and the authenticity of the lookup is\n   weakened\
    \ due to the inability to assure uniqueness of the identity\n   key value.  A\
    \ conservative approach to unstructured identities limits\n   their scope of utility,\
    \ such as per-session identity keys.  In this\n   scenario, the scope of the selected\
    \ identity is limited to the\n   parties that are communicating, and the scope\
    \ is limited to the\n   duration of the communication session.  The implication\
    \ of this\n   limitation is that the identity is a session-level binding point\
    \ to\n   allow multiple locators to be bound to the session, and the identity\n\
    \   cannot be used as a reference to an endpoint beyond the context of\n   the\
    \ session.  Such opportunistic identities with explicitly limited\n   scope do\
    \ not require the adoption of any well-ordered mechanisms of\n   token distribution\
    \ and management.\n   Another form of identity is an ephemeral form, where a session\n\
    \   identity is a shared state between the endpoints, established without\n  \
    \ the exchange of particular token values that take the role of\n   identity keys.\
    \  This could take the form of a defined locator set or\n   the form of a session\
    \ key derived from some set of shared attributes\n   of the session, for example.\
    \  In this situation, there is no form of\n   reference to or use of an identifier\
    \ as a means of initiating a\n   session.  The ephemeral identity value has a\
    \ very limited role in\n   terms of allowing each end to reliably determine the\
    \ semantic\n   equivalence of a set of locators within the context of membership\
    \ of\n   a particular session.\n   The latter two forms of identity represent\
    \ an approach to identity\n   that minimises management overhead and provides\
    \ mechanisms that are\n   limited in scope to supporting session integrity.  This\
    \ implies that\n   support for identity functions in other contexts and at other\
    \ levels\n   of the protocol stack, such as within referrals, within an\n   application's\
    \ data payload, or as a key to initiate a communication\n   session with a remote\
    \ endpoint, would need to be supported by some\n   other identity function.  Such\
    \ per-session limited scope identities\n   imply that the associated multi-homing\
    \ approaches must use existing\n   mechanisms for session startup, and the adoption\
    \ of a session-based\n   identity and associated locator switch agility becomes\
    \ a negotiated\n   session capability.\n   On the other hand, the use of a persistent\
    \ identity as a session\n   initiation key implies that identity is part of the\
    \ established\n   session state, and locator agility can be an associated attribute\
    \ of\n   the session rather than a subsequent negotiated capability.  In a\n \
    \  heterogeneous environment where such identity capability is not\n   uniformly\
    \ deployed, this would imply that if a session cannot be\n   established with\
    \ a split identity/locator binding, the application\n   should be able to back\
    \ off to a conventional session startup by\n   mapping the identity to a specific\
    \ locator value and initiating a\n   session using such a value.  The reason why\
    \ the application may want\n   to be aware of this distinction is that if the\
    \ application wishes to\n   use self-referential mechanisms within the application\
    \ payload, it\n   would appear to be appropriate to use an identity-based self-\n\
    \   reference only in the context of a session where the remote party was\n  \
    \ aware of the semantic properties of this referential tag.\n   In terms of functionality\
    \ and semantics, opportunistic identities\n   form a superset of ephemeral identities,\
    \ although their\n   implementation is significantly different.  Persistent identities\n\
    \   support a superset of the functionality of opportunistic identities,\n   and\
    \ again the implementations will differ.\n   In the context of support for multi-homing\
    \ configurations, use of\n   ephemeral identities in the context of locator equivalence\
    \ appears to\n   represent a viable approach that allows a negotiated use of multiple\n\
    \   locators within the context of communication between a pair of hosts\n   in\
    \ most contexts of multi-homing.  However, ephemeral identities\n   offer little\
    \ more in terms of functionality.  They cannot be used in\n   referential contexts,\
    \ cannot be used to initiate communications,\n   provide limited means of support\
    \ for various forms of mobility, and\n   impose some constraints on the class\
    \ of multi-homed scenarios that\n   can be supported.  Ephemeral identities are\
    \ generated in the context\n   of an established communication state, and the\
    \ implication in terms\n   of multi-homing is that the two end points need to\
    \ have discovered\n   through existing mechanisms a viable pair of locators prior\
    \ to\n   generating an ephemeral identity binding.  The implication is that\n\
    \   there is some form of static \"home\" for the end points that is\n   discovered\
    \ by conventional referential lookup.\n   The use of a persistent identity space\
    \ that supports dynamic\n   translation between an equivalent set of locators\
    \ and one or more\n   equivalent identity values offers the potential for greater\n\
    \   flexibility in applications.  Depending on how the mapping between\n   identities\
    \ and locators is managed, this may extend beyond\n   multi-homing configuration\
    \ to various contexts of nomadism and\n   mobility as well as service-specific\
    \ functions.  However, it remains\n   an open question as to the nature of secure\
    \ mapping mechanisms that\n   would be needed in the more general context of identity-to-locator\n\
    \   mapping, and it is also an open question as to how the mapping\n   function\
    \ would relate to viable endpoint-to-endpoint connectivity.\n   It is a common\
    \ aspect of identity realms that the most critical\n   aspect of the realm is\
    \ the nature of the resolution of the identity\n   into some other attribute space.\n\
    \   It appears reasonable to observe that, within certain constraints,\n   multi-homing\
    \ does not generically require the overhead of a fully\n   distinct persistent\
    \ identity space and the associated identity\n   resolution functionality, and,\
    \ if the nature of the multi-homing\n   space in this context is to use a token\
    \ to allow efficient detection\n   of locator equivalence for session surviveability,\
    \ then ephemeral\n   identities appear to be an adequate mechanism.\n"
- title: 6.3.  Common Issues for Multi-Homing Approaches
  contents:
  - "6.3.  Common Issues for Multi-Homing Approaches\n   The above overview encompasses\
    \ a very wide range of potential\n   approaches to multi-homing, and each particular\
    \ approach necessarily\n   has an associated set of considerations regarding its\
    \ applicability.\n   There is, however, a set of considerations that appear to\
    \ be common\n   across all approaches.  They are examined in further detail in\
    \ this\n   section.\n"
- title: 6.3.1.  Triggering Locator Switches
  contents:
  - "6.3.1.  Triggering Locator Switches\n   Ultimately, regardless of the method\
    \ of generation, a packet\n   generated from a local multi-homed host to a remote\
    \ host must carry a\n   source locator when it is passed into the transit network.\
    \  In a\n   multi-homed situation, the local multi-homed host has a number of\n\
    \   self-referential locators that are equivalent aliases in almost every\n  \
    \ respect.  The difference between locators is the inference that, at\n   the\
    \ remote end, the choice of locator may determine the path used to\n   send a\
    \ packet back to the local multi-homed host.  The issue here is:\n   how does\
    \ the local host make a selection of the \"best\" source locator\n   to use? \
    \ Obviously, an objective is to select a locator that\n   represents a currently\
    \ viable path from the remote host to the local\n   multi-homed host.  Local routing\
    \ information for the multi-homed host\n   does not include this reverse path\
    \ information.  Equally, the local\n   host does not necessarily know any additional\
    \ policy constraints that\n   apply to the remote host and that may result in\
    \ a remote host's\n   preference to use one locator over another for the local\
    \ host.\n   Considerations of unicast reverse-path forwarding filters also\n \
    \  indicate that the selection of a source locator should result in the\n   packet\
    \ being passed to a site-exit router that is connected to the\n   associated ISP\
    \ transit provider, and that the site-exit router passes\n   the packet to the\
    \ associated ISP.\n   If the local multi-homed host is communicating with a remote\n\
    \   multi-homed host, the local host may have some discretion in the\n   choice\
    \ of a destination locator.  The considerations relating to the\n   selection\
    \ of a destination locator include considerations of local\n   routing state (to\
    \ ensure that the chosen destination locator reflects\n   a viable path to the\
    \ remote endpoint) and policy constraints that may\n   determine a \"best\" path\
    \ to the remote endpoint.  It may also be the\n   case that the source address\
    \ selection should be considered in\n   relation to the destination locator selection.\n\
    \   Another common issue is the point when a locator is not considered to\n  \
    \ be viable and the consequences to the transport session state.\n   o  Transport\
    \ Layer Triggers\n      A change in state for a currently-used path to another\
    \ path could\n      be triggered by indications of packet loss along the current\
    \ path\n      by transport-level signalling or by transport session timeouts,\n\
    \      assuming an internal signalling mechanism between the transport\n     \
    \ stack element and the locator pool management stack element.\n   o  ICMP Triggers\n\
    \      Path failure within the network may generate an ICMP Destination\n    \
    \  Unreachable packet being directed back to the sender.  Rather than\n      sending\
    \ this signal to the transport level as an indicator of\n      session failure,\
    \ the IP layer should redirect the notification\n      identity module as a trigger\
    \ for a locator switch.\n   o  Routing Triggers\n      Alternatively, in the absence\
    \ of local transport triggers, the\n      site-exit router could communicate failure\
    \ of the outbound\n      forwarding path in the case that the remote host is multi-homed\n\
    \      with an associated locator set.  Conventional routing would be\n      incapable\
    \ of detecting a failure in the inbound forwarding path,\n      so there are some\
    \ limitations in the approach of using routing\n      triggers to change locator\
    \ bindings.\n   o  Heartbeat Triggers\n      An alternative to these approaches\
    \ is the use of a session\n      heartbeat protocol, where failure of the heartbeat\
    \ would cause the\n      session to seek a new locator binding that would reestablish\
    \ the\n      heartbeat.\n   o  Link Layer Triggers\n      Where supported, link\
    \ layer triggers could be used as a direct and\n      immediate signal of link\
    \ availability, where a \"Link Down\"\n      indication indicates the unavailability\
    \ of a particular link\n      [iab-link].  The limitation of this approach is\
    \ that a link level\n      indication is not a network broadcast event, and only\
    \ the link's\n      immediately-connected devices receive the link transition\
    \ signal.\n      While this approach may be relevant to the degenerate case of\
    \ a\n      multi-homed site composed of a single host, in the case of a\n    \
    \  multi-host site the link indication would need to be used by the\n      site-exit\
    \ router to generate one of the above indications for the\n      host to be triggered\
    \ for a locator change.  In this case this is a\n      conventional form of router\
    \ detection of link status.\n   The sensitivity of the locator switch trigger\
    \ is a consideration\n   here.  A very fine-grained sensitivity of the locator\
    \ switch trigger\n   may generate false triggers arising from short-term transient\
    \ path\n   congestion, while coarse-grained triggers may impose an undue\n   performance\
    \ penalty on the session due to an extended time to detect\n   a path failure.\
    \  The objectives for sensitivity to triggers may be\n   very different depending\
    \ on the transport session being used.  There\n   is no doubt that any session\
    \ would need a trigger to re-home if its\n   path to the locator fails, but for\
    \ some transports, moving, and\n   triggering transport-related changes, may be\
    \ far less desirable than\n   reducing the sensitivity of the trigger and waiting\
    \ to see if the\n   triggering stimulus achieves a threshold level.\n   This problem\
    \ is only partly solved by models with an internal\n   signalling mechanism between\
    \ the transport stack element and the\n   locator pool management stack element,\
    \ because of non-failure\n   triggers coming from other stacks, and because of\
    \ transport issues\n   such as use of resource reservation.  As an example, consider\
    \ the\n   case of a session with reservations established by RSVP or NSIS, when\n\
    \   a routing change has just caused adaptive updates to the reservation\n   state\
    \ in a number of elements along its path.  The transport protocol\n   using the\
    \ path is likely to see some delays or timeouts, and its\n   reaction to these\
    \ events may be a trigger for a locator change, which\n   is likely to mean another\
    \ reservation update.  This chaining of\n   reservation updates may represent\
    \ a high overhead.  The implication\n   here is that individual transport protocols\
    \ may have to tune any\n   feedback they give as a locator change trigger, so\
    \ that they don't\n   respond to certain forms of transient routing change delays\
    \ (not\n   knowing their cause) with a locator change trigger.  It should also\n\
    \   be noted that different transport protocols have rather different\n   behaviors\
    \ and hooks for management.\n"
- title: 6.3.2.  Locator Selection
  contents:
  - "6.3.2.  Locator Selection\n   The selection of a locator to use for the remote\
    \ end is obviously\n   constrained by the current state of the topology of the\
    \ network, and\n   the primary objective of the selection process is to choose\
    \ a viable\n   locator that allows the packet to reach the intended destination\n\
    \   point.  The selection of a source locator can be considered as an\n   indication\
    \ of preference to the remote end of a preferred locator to\n   use for the local\
    \ end.  However, where there are two or more viable\n   locators that could be\
    \ used, the selection of a particular locator\n   may be influenced by a set of\
    \ additional considerations.\n   The selection of a particular locator from a\
    \ viable locator set\n   implies a selection of one particular network path in\
    \ preference to\n   other viable paths.  An implication of this host-based locator\n\
    \   selection process is that path selection and, by inference, traffic\n   engineering\
    \ functions are not constrained to a network-based\n   operation of path manipulation\
    \ through adjustment of forwarding state\n   within network elements.  There is\
    \ a consequent interaction between\n   the locator selection process and traffic\
    \ engineering functions.  The\n   use of an address selection policy table, as\
    \ described in RFC 3484\n   [RFC3484], is relevant to the selection process.\n\
    \   The element that performs the locator selection, either as a protocol\n  \
    \ element within the host or as a selection undertaken at a site-exit\n   router,\
    \ also determines traffic policy, so the choice of using remote\n   packet locator\
    \ rewriting or host based locator selection shifts the\n   policy capability from\
    \ one element to the other.\n   If hosts perform this policy determination, then\
    \ a more fine-grained\n   outcome may be achievable, particularly if the anticipated\
    \ traffic\n   characteristics of the application can be signalled to the locator\n\
    \   selection process.  A further consideration appears to be that hosts\n   may\
    \ require additional information if they are to make locator\n   address selection\
    \ decisions based on some form of metric of relative\n   load currently being\
    \ imposed on select components of a number of\n   end-to-end network paths.  These\
    \ considerations raise the broader\n   issue of traffic engineering being a network\
    \ function entirely\n   independent of host function or an outcome of host interaction\
    \ with\n   the network.\n   In the latter case, there is also the consideration\
    \ of whether the\n   host is to interact with the network, and, if so, how this\n\
    \   interaction is to be signalled to hosts.\n"
- title: 6.3.3.  Layering Identity
  contents:
  - "6.3.3.  Layering Identity\n   The consideration of triggering locator switch\
    \ highlights the\n   observation that differing information and context are present\
    \ in\n   each layer of the protocol stack.  This impacts on how\n   identity/locator\
    \ bindings are established, maintained, and expired.\n   These impacts include\
    \ questions of what amount of state is kept, by\n   which element of the protocol\
    \ stack, and at what level of context\n   (dynamic or fixed, and per session or\
    \ per host).  It also includes\n   considerations of state maintenance, such as\
    \ how stale or superfluous\n   state information is detected and removed.  Does\
    \ only one piece of\n   code have to be aware of this identity/locator binding,\
    \ or do\n   multiple transport protocols have to be altered to support this\n\
    \   functionality?  If so, are such changes common across all transport\n   protocols,\
    \ or do different protocols require different considerations\n   in their treatment\
    \ of this functionality?\n   It is noted that the approaches considered here include\
    \ proposals to\n   place this functionality within the IP layer, with the end-to-end\n\
    \   transport protocol layer and as a shim between the IP and transport\n   protocol\
    \ layers.\n   Placing this identity functionality at the transport protocol layer\n\
    \   implies that the identity function can be tightly associated with a\n   transport\
    \ session.  In this approach, session startup can trigger the\n   identity/locator\
    \ initial binding actions and transport protocol\n   timeouts can be used as triggers\
    \ for locator switch actions.  Session\n   termination can trigger expiration\
    \ of local identity/locator binding\n   state.  Where per-session opportunistic\
    \ identity token values are\n   being used, the identity information can be held\
    \ within the overall\n   session state.  In the case of persistent identity token\
    \ values, the\n   implementation of the identity can also choose to use per-session\n\
    \   state, or it may choose to pool this information across multiple\n   sessions\
    \ in order to reduce overheads of dynamic discovery of\n   identity/locator bindings\
    \ for remote identities in the case of\n   multiple sessions to the same remote\
    \ endpoint.\n   One of the potential drawbacks of placing this functionality within\n\
    \   the transport protocol layer is that it is possible that each\n   transport\
    \ protocol will require a distinct implementation of identity\n   functionality.\
    \  This is a considerable constraint in the case of UDP,\n   where the UDP transport\
    \ protocol has no inherent notion of a session\n   state.\n   An alternative approach\
    \ is to use a distinct protocol element placed\n   between the transport and internet\
    \ layers of the protocol stack.  The\n   advantage of this approach is that it\
    \ would offer a consistent\n   mapping between identities and locators for all\
    \ forms of transport\n   protocols.  However this protocol element would not be\
    \ explicitly\n   aware of sessions and would either have to discover the appropriate\n\
    \   identity/locator mapping for all identity-addressed packets passed\n   from\
    \ the transport protocol later, irrespective of whether such a\n   mapping exists\
    \ and whether this is part of a session context, or have\n   an additional mechanism\
    \ of signalling to determine when such a\n   mapping is to be discovered and applied.\
    \  At this level, there is\n   also no explicit knowledge of when identity/locator\
    \ mapping state is\n   no longer required, as there is no explicit signalling\
    \ of when all\n   flows to and from a particular destination have stopped and\
    \ resources\n   consumed in supporting state can be released.  Also, such a protocol\n\
    \   element would not be aware of transport-level timeouts, so that\n   additional\
    \ functionality would need to be added to the transport\n   protocol to trigger\
    \ a locator switch at the identity protocol level.\n   Support of per-session\
    \ opportunistic identity structure is more\n   challenging in this environment,\
    \ as the transport protocol layer is\n   used to store and manipulate per-session\
    \ state.  In constructing an\n   identity element at this level of the protocol\
    \ stack, it would appear\n   necessary to ensure that an adequate amount of information\
    \ is being\n   passed between the transport protocol, internet protocol, and\n\
    \   identity protocol elements, to ensure that the identity protocol\n   element\
    \ is not forced into making possibly inaccurate assumptions\n   about the current\
    \ state of active sessions or end-to-end network\n   paths.\n   It is also possible\
    \ to embed this identity function within the\n   internet protocol layer of the\
    \ protocol stack.  As noted in the\n   previous section, per-session information\
    \ is not readily available to\n   the identity module, so that opportunistic per-session\
    \ identity\n   values would be challenging to support in this approach.  It is\
    \ also\n   challenging to determine when identity/locator state information\n\
    \   should be set up and released.  It would also appear necessary to\n   signal\
    \ transport-level timeouts to the identity module as a locator\n   switch trigger.\
    \  Some attention needs to be given in this case to\n   synchronising locator\
    \ switches and IP packet fragmentation.\n   Consideration of IPSec is also necessary\
    \ in this case, in order to\n   avoid making changes to the address field in the\
    \ IP packet header\n   that trigger a condition at the remote end where the packet\
    \ is not\n   recognisable in the correct context.\n"
- title: 6.3.4.  Session Startup and Maintenance
  contents:
  - "6.3.4.  Session Startup and Maintenance\n   The next issue is the difference\
    \ between the initial session startup\n   mode of operation and the maintenance\
    \ of the session state.\n   In a split endpoint identifier/locator environment,\
    \ there needs to be\n   at least one initial locator associated with an endpoint\
    \ identifier\n   in order to establish an initial connection between the two hosts.\n\
    \   This locator could be loaded into the DNS in a conventional fashion,\n   or,\
    \ if the endpoint identifier is a distinguished address value, the\n   initial\
    \ communication could be established using the endpoint\n   identifier in the\
    \ role of a locator (i.e., using this as a\n   conventional address).\n   The\
    \ initial actions in establishing a session would be similar.  If\n   the session\
    \ is based on specification of a FQDN, the FQDN is first\n   mapped to an endpoint\
    \ identity value, and this endpoint identity\n   value could then be mapped to\
    \ a locator set.  The locators in this\n   set are then candidate locators for\
    \ use in establishing an initial\n   synchronised state between the two hosts.\
    \  Once the state is\n   established, it is possible to update the initial locator\
    \ set with\n   the current set of useable locators.  This update could be part\
    \ of\n   the initial synchronisation actions, or deferred until required.\n  \
    \ This leads to the concept of a \"distinguished\" locator that acts as\n   the\
    \ endpoint identifier, and a pool of alternative locators that are\n   associated\
    \ with this \"home\" locator.  This association may be\n   statically defined,\
    \ using referential pointers in a third-party\n   referral structure (such as\
    \ the DNS), or dynamically added to the\n   session through the actions of the\
    \ EIP, or both.\n   If opportunistic identities are used where the identity is\
    \ not a\n   fixed discoverable value but one that is generated in the context\
    \ of\n   a session, then additional actions must be performed at session\n   startup.\
    \  In this case, there is still the need for defined locators\n   that are used\
    \ to establish a session, but then an additional step is\n   required to generate\
    \ session keys and exchange these values in order\n   to support the identity\
    \ equivalence of multiple locators within the\n   ensuing session.  This may take\
    \ the form of a capability exchange and\n   an additional handshake and associated\
    \ token value exchange within\n   the transport protocol if an in-band approach\
    \ is being used, or it\n   may take the form of a distinct protocol exchange at\
    \ the level of the\n   identity protocol element, performed out-of-band from the\
    \ transport\n   session.\n   Some approaches are capable of a further distinction,\
    \ namely, that of\n   initial session establishment and that of establishment\
    \ of additional\n   shared state within the session to allow multiple locators\
    \ to be\n   treated as being bound to a common endpoint identity.  It is not\n\
    \   strictly necessary that such additional actions be performed at\n   session\
    \ startup, but it appears that such actions need to be\n   performed prior to\
    \ any loss of end-to-end connectivity on the\n   selected initial locator, so\
    \ that any delay in this additional state\n   exchange does increase the risk\
    \ of session disruption due to\n   connectivity changes.\n   This raises a further\
    \ question of whether the identity/locator split\n   is a capability negotiation\
    \ performed per session or per remote end,\n   or whether the use of a distinguished\
    \ identity value by the upper\n   level application to identify the remote end\
    \ triggers the\n   identity/locator mapping functionality further down in the\
    \ protocol\n   stack at the transport level, without any further capability\n\
    \   negotiation within the session.\n   Within the steps related to session startup,\
    \ there is also the\n   consideration that the passive end of the connection follows\
    \ a\n   process where it may need to verify the proposed new address\n   contained\
    \ in the source address of incoming packets before using it\n   as a destination\
    \ address for outgoing packets.  It is not necessarily\n   the case that the sender's\
    \ choice of source address reflects a valid\n   path from the receiver back to\
    \ the source.  While using this offered\n   address appears to offer a low-overhead\
    \ response to connection\n   attempts, if this response fails the receiver may\
    \ need to discover\n   the full locator set of the remote end through some locator\
    \ discovery\n   mechanism, to establish whether there is a viable locator that\
    \ can\n   use a forwarding path that reaches the remote end.\n   Alternatively,\
    \ the passive end would use the initially offered\n   locator and, if this is\
    \ successful, leave it to the identity modules\n   in each stack to exchange information\
    \ to establish the current\n   complete locator set for each end.  This approach\
    \ implies that the\n   active end of a communication needs to cycle through all\
    \ of its\n   associated locators as source addresses until it receives a response\n\
    \   or exhausts its locator set.  If the other end is also multi-homed\n   (and\
    \ therefore has multiple locators), then the active end may need\n   to cycle\
    \ through all possible destination locators for each source\n   locator.  While\
    \ this may extend the time to confirm that no path\n   exists to the remote end,\
    \ it has the potential to improve the\n   characteristics of the initial exchange\
    \ against denial-of-service\n   attacks that could force the remote end to engage\
    \ in a high volume of\n   spurious locator lookups.\n"
- title: 6.3.5.  Dynamic Capability Negotiation
  contents:
  - "6.3.5.  Dynamic Capability Negotiation\n   The common aspect of these approaches\
    \ is that they all involve\n   changes to the end-to-end interaction, as both\
    \ ends of the\n   communication need to be aware of this separation.  The implication\n\
    \   is that this form of support for multi-homing is relatively sweeping\n   in\
    \ its scope, as the necessary changes to support multi-homing extend\n   beyond\
    \ changes to the hosts and/or routers within the multi-homed\n   site and encompass\
    \ changes to the IPv6 protocol itself.  It would be\n   prudent when considering\
    \ these changes to evaluate associated\n   mechanisms that allow the communicating\
    \ endpoints to discover each\n   other's capabilities and only enable this form\
    \ of split\n   identity/locator functionality when it is established that both\
    \ ends\n   can support it.\n   It is a corollary of this form of negotiated capability\
    \ that it is\n   not strictly necessary that only one form of functionality can\
    \ be\n   negotiated in this way.  If the adoption of a particular endpoint\n \
    \  identity/locator mapping scheme is the outcome of a negotiation\n   between\
    \ the endpoints, then it would be possible to negotiate to use\n   one of a number\
    \ of possible approaches.  There is some interaction\n   between the approach\
    \ used and the form of endpoint identity, and some\n   care needs to be taken\
    \ that any form of acceptable outcome of the\n   endpoint identity capability\
    \ negotiation is one that allows the\n   upper-level application to continue to\
    \ operate.\n"
- title: 6.3.6.  Identity Uniqueness and Stability
  contents:
  - "6.3.6.  Identity Uniqueness and Stability\n   When considering the properties\
    \ of long-lived identities, it is\n   reasonable to assume that the identity assignation\
    \ is not necessarily\n   one that is permanent and unchangeable.  In the case\
    \ of structured\n   identity spaces, the identity value reflects a distribution\n\
    \   hierarchy.  There are a number of circumstances where a change of\n   identity\
    \ value is appropriate.  For example, if an endpoint device is\n   moved across\
    \ administrative realms of this distribution hierarchy it\n   is likely that the\
    \ endpoint's identity value will be reassigned to\n   reflect the new realm. \
    \ It is also reasonable to assume that an\n   endpoint may have more than one\
    \ identity at any point in time.  RFC\n   3014 [RFC3041] provides a rationale\
    \ for such a use of multiple\n   identities.\n   If an endpoint's identity can\
    \ change over time and if an endpoint can\n   be identified by more than one identity\
    \ at any single point in time,\n   then some further characteristics of endpoint\
    \ identifiers should be\n   defined.  These relate to the constancy of an endpoint\
    \ identity\n   within an application, and the question of whether a transport\n\
    \   session relies on a single endpoint identity value, and, if so,\n   whether\
    \ an endpoint identity can be changed within a transport\n   session, and under\
    \ what conditions the old identity can continue to\n   be used following any such\
    \ change.  If the endpoint identity is a\n   long-lived reference to a remote\
    \ endpoint, and if multiple identities\n   can exist for a single unique endpoint,\
    \ then the question arises as\n   to whether applications can compare identities\
    \ for equivalence, and\n   whether it is necessary for applications to recognise\
    \ the condition\n   where different identities refer to the same endpoint.  These\n\
    \   identities may be used within applications on a single host, or they\n   may\
    \ be identifies within applications on different hosts.\n"
- title: 7.  Functional Decomposition of Multi-Homing Approaches
  contents:
  - "7.  Functional Decomposition of Multi-Homing Approaches\n   The following sections\
    \ provide a framework for the characterisation\n   of multi-homing approaches\
    \ through a decomposition of the functions\n   associated with session establishment,\
    \ maintenance, and completion in\n   the context of a multi-homed environment.\n"
- title: 7.1.  Establishing Session State
  contents:
  - "7.1.  Establishing Session State\n   What form of token is passed to the transport\
    \ layer from the\n   upper-level protocol element as an identification of the\
    \ local\n   protocol stack?\n   What form of token is passed to the transport\
    \ layer from the\n   upper-level protocol element as an identification of the\
    \ remote\n   session target?\n   What form of token is used by the upper-level\
    \ protocol element as a\n   self-identification mechanism for use within the application\
    \ payload?\n   Does the identity protocol element need to create a mapping from\
    \ the\n   upper-level protocol's local and remote identity tokens into an\n  \
    \ identity token that identifies the session?  If so, then is this\n   translation\
    \ performed before or after the initial session packet\n   exchange handshake?\n\
    \   How does the session initiator establish that the remote end of the\n   session\
    \ can support the multi-homing capabilities in its protocol\n   stack?  If the\
    \ remote end cannot, does the multi-homing capable\n   protocol element report\
    \ a session establishment failure to the\n   upper-level protocol or silently\
    \ fall back to a non-multi-homed\n   protocol operation?\n   How do the endpoints\
    \ discover the locator set available for each\n   other endpoint (locator discovery)?\n\
    \   What mechanisms are used to perform locator selection at each end,\n   for\
    \ the local selection of source and destination locators?\n   What form of mechanism\
    \ is used to ensure that the selected site exit\n   path matches the selected\
    \ packet source locator?\n"
- title: 7.2.  Re-homing Triggers
  contents:
  - "7.2.  Re-homing Triggers\n   What are common denominator goals of re-homing triggers?\
    \  What are\n   the objectives that triggers conservatively should meet across\
    \ all\n   types of sessions?\n   Are there transport session-specific triggers?\
    \  If so, then what\n   state changes within the network path should be triggers\
    \ for all\n   transport sessions, and what state changes are triggers only for\n\
    \   selected transport sessions?\n   What triggers are used to identify that a\
    \ switch of locators is\n   desirable?\n   Are the triggers based on the end-to-end\
    \ transport session and/or on\n   notification of state changes within the network\
    \ path from the\n   network?\n   What triggers can be used to indicate the direction\
    \ of the failed\n   path in order to trigger the appropriate locator repair function?\n"
- title: 7.3.  Re-homing Locator Pair Selection
  contents:
  - "7.3.  Re-homing Locator Pair Selection\n   What parameters are used to determine\
    \ the selection of a locator to\n   use to reference the local endpoint?\n   If\
    \ the remote endpoint is multi-homed, what parameters are used to\n   determine\
    \ the selection of a locator to use to reference the remote\n   endpoint?\n  \
    \ Must a change of an egress site-exit router be accompanied by a\n   change in\
    \ source and/or destination locators?\n   How can new locators be added to the\
    \ locator pool of an existing\n   session?\n"
- title: 7.4.  Locator Change
  contents:
  - "7.4.  Locator Change\n   What are the preconditions that are necessary for a\
    \ locator change?\n   How can the locator change be confirmed by both ends?\n\
    \   What interactions are necessary for synchronisation of locator change\n  \
    \ and transport session behaviour?\n"
- title: 7.5.  Removal of Session State
  contents:
  - "7.5.  Removal of Session State\n   How is identity/locator binding state removal\
    \ synchronised with\n   session closure?\n   What binding information is cached\
    \ for possible future use?\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   There are a significant number of security considerations\
    \ that result\n   from the action of distinguishing within the protocol suite\
    \ endpoint\n   identity and locator identity.\n   It is not proposed to enumerate\
    \ these considerations in detail within\n   this document, but to reference a\
    \ distinct document that describes\n   the security considerations of this domain\
    \ [threats].\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   The author acknowledges the assistance from the following\
    \ reviewers:\n   Brian Carpenter, Kurtis Lundqvist, Erik Nordmark, Iljitsch van\n\
    \   Beijnum, Marcelo Bagnulo, John Loughney, Thierry Ernst, Joe Touch,\n   Michael\
    \ Patton, Ted Hardie, and Allison Mankin.\n"
- title: 10.  Informative References
  contents:
  - "10.  Informative References\n   [RFC3041]  Narten, T. and R. Draves, \"Privacy\
    \ Extensions for\n              Stateless Address Autoconfiguration in IPv6\"\
    , RFC 3041,\n              January 2001.\n   [RFC3484]  Draves, R., \"Default\
    \ Address Selection for Internet\n              Protocol version 6 (IPv6)\", RFC\
    \ 3484, February 2003.\n   [RFC3582]  Abley, J., Black, B., and V. Gill, \"Goals\
    \ for IPv6\n              Site-Multihoming Architectures\", RFC 3582, August 2003.\n\
    \   [RFC3775]  Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support\n  \
    \            in IPv6\", RFC 3775, June 2004.\n   [iab-link] Aboba, B., Ed., \"\
    Architectural Implications of Link Layer\n              Indications\", Work in\
    \ Progress, January 2005.\n   [e2e]      Saltzer, J., Reed, D., and D. Clark,\
    \ \"End-to-End Arguments\n              in System Design\", ACM TOCS Vol 2, Number\
    \ 4, pp 277-288,\n              November 1984, <http://web.mit.edu/Saltzer/www/\n\
    \              publications/endtoend/endtoend.txt>.\n   [rosec]    Nikander, P.,\
    \ Arkko, J., Aura, T., Montenegro, G., and E.\n              Nordmark, \"Mobile\
    \ IP version 6 Route Optimization Security\n              Design Background\"\
    , Work in Progress, October 2004.\n   [thinks]   Lear, E., \"Things MULTI6 Developers\
    \ should think about\",\n              Work in Progress, January 2005.\n   [threats]\
    \  Nordmark, E. and T. Li, \"Threats relating to IPv6\n              multi-homing\
    \ solutions\", Work in Progress, January 2005.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Geoff Huston\n   APNIC\n   EMail: gih@apnic.net\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
