Abstract This document describes a lightweight domain availability service using the Internet Registry Information Service (IRIS) framework and the data model of the IRIS Domain Registry (DREG) service.
This document describes a lightweight service for checking the availability of domain names.
This service is based on the IRIS framework and uses the data model defined by RFC 3982 [7].
By doing this, the domain availability service has the advantages provided by IRIS and DREG, such as well known methods for server navigation, structured queries and results, and layered extensibility.
The use of IRIS for this service also allows seamless integration between the domain availability service and the service provided by DREG.
This allows a user to find the availability status of a domain and reference the full registration information in DREG.
The data model in this service (called a registry schema in IRIS terms) is a strict subset of the DREG data model.
This enables implementors to directly reuse DREG code paths and allows operators to deploy the service in either the same server processes as a DREG service (same host and port) or in a different server process (different port) or machine (different host).
As an example, an operator may wish to deploy both types of service on the same set of machines.
As time goes on, the operator may then decide to segregate the services, placing the domain availability service on one set of machines and the DREG service on a separate set of machines with a stricter set of controls.
Either deployment scenario is transparent to the end user and always appears to be seamlessly complementary.
When coupled with [9], this domain availability service is lightweight and extremely efficient for high volume, public facing service.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [2].
The data model used for the domain availability check (DCHK) service is a strict subset of the DREG data model.
This section describes the DCHK registry type.
Schema Description References to XML elements with no namespace qualifier are from the schema defined in Section 3.2.
References to elements and attributes with the "iris" XML namespace qualifier are from the schema defined in IRIS [6].
The schema present in this document is tied to the protocol version associated with the XML namespace URI defined in Section 5.2.
Extensions to the present DCHK schema are allowed, though not recommended, but would require a new version.
Please refer to RFC 3981 [6] for more details about versioning the IRIS protocol.
The descriptions contained within this section refer to XML elements and attributes and their relation to the exchange of data within the protocol.
These descriptions also contain specifications outside the scope of the formal XML syntax.
Therefore, this section will use terms defined by RFC 2119 [2] to describe the specification outside the scope of the formal XML syntax.
While reading this section, please reference Section 3.2 for needed details on the formal XML syntax.
An example of a <domain> result: <domain authority "iana.org" registryType "dchk1" entityClass "domain name" entityName
The <domain> result represents an instance of a domain assignment.
The children of the <domain> element are as follows:  <
the full name of the domain as it is in DNS.
The contents of this element MUST be a domain name as specified by RFC 1035 [1].
<idn> the name of the domain in nameprep form, if applicable.
this element may contain child elements representing domain status information.
<dispute> registrant assignment is in dispute.
<addPeriod> the domain is in the grace period after creation or activation (see RFC 3915 [5]).
the domain is in the grace period after renewal (see RFC 3915 [5]).
the domain is in the grace period after automatic renewal (see RFC 3915 [5]).
the domain is in the grace period after transfer (see RFC 3915 [5]).
the domain is in the grace period after deletion (see RFC 3915 [5]).
the domain is considered compliant according to a given policy specified by the substatus identifier.
the domain is not considered compliant according to a given policy specified by the substatus identifier.
<reserved> the domain is reserved and is not available for registration under normal registration procedures.
<create> specifies the creation of the domain in the registration system.
This status is usually further refined by the disposition attribute.
> specifies the deletion of the domain in the registration system.
This status is usually further refined by the disposition attribute.
<renew> specifies the renewal of domain registration.
This status is usually further refined by the disposition attribute.
<restore> specifies the restoration to the previous state of the domain before it was deleted.
This status is usually further refined by the disposition attribute.
<transfer> specifies the transfer of the domain from one responsible or owning entity in the registration system to another.
This status is usually further refined by the disposition attribute.
> specifies a general modification of the domain information.
This status is usually be further refined by the disposition attribute.
<other> specifies a registration system specific status of the domain.
<registrationReference> an element containing an entity reference, the referent of which MUST be either a <domain> (Section 3.1.1) or a <domain> as defined by RFC 3982 [7].
The intent of this element is to point to the downstream registration reference.
Therefore, if this is a result given back by a domain registry, it should point to the domain in the domain registrar or registrant service.
an element containing the date and time of the creation of this domain.
<initialDelegationDateTime> an element containing the date and time of the initial delegation of this domain.
an element containing the date and time of the expiration of this domain.
<lastDatabaseUpdateDateTime> an element containing the date and time of the last actualization of the database that is the source for this result.
seeAlso> an element containing an entity reference specifying a referent that is indirectly associated with this domain.
Each element of type 'domainStatusType' has the following composition:  <appliedDate> an optional child element containing the date applicable to creation of the status.
<ticket> an optional child element containing a service ticket identifier relevant to the status.
<description> zero or more child elements with text to describe the status in natural language.
Each of these elements MUST have a 'language' attribute describing the language of the description element.
<subStatus> a child element indicating further status information.
Values for this element are not defined by this specification.
This child element has a required 'authority' attribute to indicate the origin of the specification of the value of this element.
'actor' an optional attribute indicating the acting entity for which this status is applied.
The values may be "registry", "registrar", or "registrationServiceProvider".
'disposition' an optional attribute indicating the nature of this status.
The values may be "pending" or "prohibited".
'scope' an optional attribute indicating the context or origin of the status value.
The following types of entity classes are recognized by the <lookupEntity> query of IRIS for this registry:  domain name the fully qualified name of a domain.
This is a domain name as specified by RFC 1035 [1].
> (Section 3.1.1) in the response.
the fully qualified name of a domain in nameprep form (see RFC 3491 [3]).
> (Section 3.1.1) in the response.
This registry schema is specified in the XML Schema notation (see [10] and [11]).
The formal syntax presented here is a complete schema representation of an XML instance when combined with the formal schema syntax of IRIS.
<documentation> Domain availability check schema derived from IRIS schema </documentation> </annotation> <!
0" maxOccurs "1"> <complexType> <choice minOccurs "0" maxOccurs "unbounded"> <element name "active" type "dchk:domainStatusType" />
<element name "inactive" type "dchk:domainStatusType" />
<element name "dispute" type "dchk:domainStatusType" />
<element name "renew" type "dchk:domainStatusType" />
<element name "addPeriod" type "dchk:domainStatusType" />
<element name "renewPeriod" type "dchk:domainStatusType" /
<element name "autoRenewPeriod" type "dchk:domainStatusType" /
<element name "transferPeriod" type "dchk:domainStatusType" />
<element name "redemptionPeriod" type "dchk:domainStatusType" />
<element name "restore" type "dchk:domainStatusType" />
<element name "policyCompliant" type "dchk:domainStatusType" />
<element name "policyNoncompliant" type "dchk:domainStatusType" />
<element name "delete" type "dchk:domainStatusType" />
<element name "transfer" type "dchk:domainStatusType" />
<element name "update" type "dchk:domainStatusType" />
<element name "other" type "dchk:domainStatusType" /
> </element> <element name "registrationReference" type "iris:entityType" minOccurs "
<element name "domain" type "dchk:domainType" substitutionGroup "iris:result" />
> <element name "appliedDate" type "dateTime" minOccurs "0" maxOccurs "1
0" maxOccurs "unbounded"> <complexType> <simpleContent
> <extension base "string"> <attribute name "language" type "language" use "required" /
> </element> <element name "subStatus" minOccurs "0" maxOccurs "1"> <complexType> <simpleContent>
<extension base "token"> <attribute type "token" use "required" name "authority"/
> </sequence> <attribute name "actor">
> </attribute> <attribute name "scope" type "token" />
Blocks Extensible Exchange Protocol (BEEP) Transport Compliance
All DCHK clients and servers MUST implement the Lightweight UDP Transport Protocol (IRIS LWZ)
The use of other transports like the XML Pipelining with Chunks (IRIS XPC) transport [12] or the BEEP transport [8] is optional and completely at the discretion of the server operator.
The XPC transport is in any case preferable to the BEEP transport.
IRIS allows several extensions of the core capabilities.
This section outlines those extensions allowable by IRIS BEEP [8].
This registry type uses the default message pattern as described in IRIS BEEP [8].
This registry type uses the default server authentication method as described in IRIS BEEP [8].
The application service label associated with this registry type MUST be "DCHK1".
This is the abbreviated form of the URN for this registry type, urn:ietf:params:xml:ns:dchk1.
The bottom up alternative resolution method MUST be identified as 'bottom' in IRIS URI's.
Its process is identical to the 'bottom' process described by RFC 3982 [7].
The top down alternative resolution method MUST be identified as 'top' in
Its process is identical to the 'top' process described by RFC 3982 [7].
Internationalization Considerations Implementors should be aware of considerations for internationalization in IRIS [6].
Clients needing to localize the data tags in this protocol should take note that localization is only needed on the names of XML elements and attributes, with the exception of elements containing date and time information.
The schema for this registry has been designed so that clients need not interpret the content of elements or attributes for localization, other than those elements containing date and time information.
Clients should also make use of the <language> elements provided in many of the results.
Results containing internationalized data can be accompanied by these elements in order to aid better localization of the data by the user.
All date and time elements make use of the XML Schema [10] data type "dateTime".
If their contents are Coordinated Universal Time (UTC) timestamps, they MUST be specified by using the capitalized 'Z' indicator (instead of 'z').
This document makes use of the XML registry specified in RFC 3688 [4].
Accordingly, IANA has made the following registration:  XML Namespace URN/URI:
This document makes use of the XML registry specified in RFC 3688 [4].
Accordingly, IANA has made the following registration:
The XML Schema specified in Section 3.2 5.3.
(S NAPTR) application service label has been registered with IANA according to the IANA considerations defined in IRIS
The following BEEP Profile URI has been registered with IANA, in addition to the registration provided in IRIS BEEP [8].
Security Considerations Being a proper subset of RFC 3982 [7], the registry described in this document introduces no security considerations beyond those documented in RFC 3981 [6].
