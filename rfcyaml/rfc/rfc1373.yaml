- title: __initial_text__
  contents:
  - '                             PORTABLE DUAs

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: INTRODUCTION
  contents:
  - "INTRODUCTION\n   This document comes in two parts. The first part is for regular\n\
    \   people who wish to set up their own DUAs (Directory User Interfaces)\n   to\
    \ access the Directory. It includes some brief notes on the\n   operation of the\
    \ DUAs and instructions for their creation and\n   installation. The instructions\
    \ are given in an easy-to-follow, step-\n   by-step format. It is fully expected\
    \ that the user will be able to\n   perform the necessary operations as he reads\
    \ through the instructions\n   for the first time and have a working DUA when\
    \ he finishes. The\n   second part is for ISODE-maintainers wishing to provide\
    \ portable DUAs\n   to users. This part gives instructions in a similar but longer,\n\
    \   step-by-step format. It is fully expected that the maintainer will be\n  \
    \ able to perform the necessary operations as he reads through the\n   instructions\
    \ for the first time and have a working DUA\n   package/supporting service when\
    \ he finishes.\n   The document currently has four sub-parts for each larger part.\
    \ The\n   sub-parts detail the following DUAs: WHOIS, \"de,\" dixie's \"ud\" and\n\
    \   ISODE's \"doog.\" It is intended that additional sub-parts will be\n   added\
    \ to the document as new, portable DUA packages are designed.\n   Where pertinent,\
    \ the document assumes ISODE 8.0 is being used.\n   1.  Instructions for DUA-Users\n\
    \   WHOIS\n   A WHOIS interface to X.500 may be available on any ISODE-resident\n\
    \   machine which also runs a DSA (Directory System Agent.) Check with\n   your\
    \ local, ISODE-maintainer. If the service is available, users can\n   access the\
    \ Directory with the following command:\n        whois -h <hostname> <name in\
    \ UFN format>\n   <hostname> indicates the name of the host machine offering the\
    \ WHOIS\n   interface, surrounded by quotes. <name in UFN format> refers to a\n\
    \   special, user-friendly syntax developed by Steve Hardcastle-Kille.\n   UFN\
    \ format is a comma-separated list of DN component values.\n   (Attribute types\
    \ are omitted.) The criteria for identifying DN\n   components in UFN is often\
    \ less stringent than normal.  For example:\n        @c=US@st=California@o=Information\
    \ Sciences\n        Institute@ou=HPCC@cn=Tom Tignor\n   could be uniquely specified\
    \ in UFN syntax as\n        tignor,isi,ca,us\n   So to find this entry through\
    \ WHOIS, one would type:\n        whois -h \"gum.isi.edu\" tignor,isi,ca,us\n\
    \   See Steve Hardcastle-Kille's Work in Progress, \"User Friendly Naming\"\n\
    \   for details.\n   De\n   Use of the \"de\" DUA is fully explained by the program's\
    \ help section.\n   New users should type \"?\" at the first prompt after installing\
    \ and\n   running the de executable.\n   The de executable can be created and\
    \ installed by the following\n   simple steps:\n        If you do not have a file\
    \ called \".unknown_tailor\" in your home\n        directory, create it now. This\
    \ file should contain the following\n        single line:\n             etcpath:\
    \   <fullpathname>/isode/etc/\n        where <fullpathname> is the full path name\
    \ of your $HOME\n        directory.\n        If you do not have a directory $HOME/isode/bin,\
    \ where \"$HOME\" is\n        your home directory, create it now.\n        ftp\
    \ the compressed tar file \"de-portable.tar.Z\" from your local,\n        ISODE-resident\
    \ machine and put it in your isode directory. If\n        you cannot find this\
    \ file locally, it is available by anonymous\n        ftp from \"gum.isi.edu\"\
    \ in the \"x500\" directory.\n        cd $HOME/isode\n        uncompress < de-portable.tar.Z\
    \ | tar xf -\n        If your name is listed in the Directory, edit the de/detailor\n\
    \        file and add a line reading:\n             username: <yourDN>\n     \
    \   where <yourDN> indicates your Distinguished Name in the\n        Directory.\n\
    \        cp de/detailor de/etc/detailor\n        Edit the CONFIG.make variables\
    \ BINDIR, ETCDIR and SBINDIR to\n        refer to your isode/bin, isode/etc and\
    \ isode/etc directories,\n        respectively.  (The isode/etc directory was\
    \ created by the\n        previous command.)\n        ranlib libdsap.a\n     \
    \   ranlib libisode.a\n        cd de\n        ./make all\n        ./make inst-all\n\
    \   There is one error you may encounter during this procedure, following\n  \
    \ the \"./make all\" command:\n        \"Redeclaration of sprintf.\" in general.h\n\
    \   If this error occurs, the following sub-procedure will fix the\n   problem:\n\
    \        Invoke your editor for the file ../h/general.h\n        Search for the\
    \ string \"sprintf\".\n        Cut the line with the \"#endif\" string which follows\
    \ the line\n        reading:\n             char *sprintf ();\n        Paste the\
    \ line under the line which reads \"#endif\". This second\n        #endif line\
    \ is exactly three lines below the current line.\n        Save the file and quit\
    \ the editor.\n   Type \"./make all\" again. It should now compile smoothly. Finish\
    \ up by\n   typing \"./make inst-all\".\n   Dixie/Ud\n   The \"ud\" DUA is designed\
    \ for users doing most of their X.500 queries\n   in one branch of the DIT (Directory\
    \ Information Tree.) The DUA\n   operates from a predefined \"base,\" a position\
    \ in the DIT one or more\n   branches above the entries to be queried. The base\
    \ is usually an\n   organization name, such as:\n        @c=US@st=California@o=Information\
    \ Sciences Institute\n   Ud starts with a preset base. (See below.) But this base\
    \ can be\n   changed with the \"cb\" command. \"cb\" takes the full DN of the\
    \ new base\n   as an argument. For example:\n        cb @c=GB@o=University College\
    \ London\n   With a preset base, searching is easy. The user finds entries below\n\
    \   the base with the \"find\" command. \"find\" takes the last component of\n\
    \   the DN of the entry as its sole argument. The criteria for the\n   argument\
    \ is very loose. The partial matching performed by ud should\n   return the desired\
    \ data or a clarification request if the name is at\n   all close to the real\
    \ thing.\n   For example, with a base \"@c=US@st=California@o=Information Sciences\n\
    \   Institute\", the RDN\n        ou=HPCC@cn=Tom Tignor\n   could be found by\
    \ entering\n        find tignor\n   at the ud prompt.\n   Other commands in ud\
    \ are briefly described by the program's help\n   section. Interested users should\
    \ type \"?\" at the first prompt, after\n   installing and running the executable.\n\
    \   \"Ud\" comes with the \"dixie\" package, a mini-environment designed\n   specifically\
    \ to support lightweight Directory access. Using ud\n   requires that a dixie\
    \ server is running along with a DSA on your\n   local, ISODE-resident machine.\
    \ Before retrieving the dixie package,\n   check with your local DSA manager to\
    \ see that the dixie server is up\n   and running.\n   Once you're sure that everything\
    \ is set up at the DSA-manager's end,\n   the ud executable can be created and\
    \ installed by the following\n   simple steps:\n        If you do not have a directory\
    \ $HOME/isode/bin, where \"$HOME\" is\n        your home directory, create it\
    \ now.\n        ftp (anonymously) the compressed tar file \"dixie-<version\n \
    \       #>.tar.Z\", where <version #> is the number of the latest\n        release,\
    \ from \"terminator.cc.umich.edu\" and put it in your isode\n        directory.\
    \ The file is available in the \"x500\" directory on\n        terminator.\n  \
    \      cd $HOME/isode\n        uncompress < dixie-<version #>.tar.Z | tar xf -\n\
    \   This creates the dixie environment. As a user interested in ud only,\n   there\
    \ are a number of things in the package that will be taking up\n   space to no\
    \ purpose. The following sequence of commands will get rid\n   of them.\n    \
    \    cd dixie-<version #>\n        rm -r dos\n        rm -r macintosh\n      \
    \  rm -r server\n        rm -r vms\n        cd ..\n   That done, we continue to\
    \ bring ud to life.\n        cd dixie-<version #>\n        Edit the file \"ud/ud.h\"\
    . There are two constants for which you\n        will need to supply new values:\
    \ DEFAULT_BASE and DEFAULT_SERVER.\n        DEFAULT_BASE identifies ud's \"base\"\
    \ upon startup, as described\n        above.  It takes a quoted DN as a value,\
    \ e.g.,\n        \"@c=US@st=California@o=Information Sciences Institute\".\n \
    \       DEFAULT_SERVER identifies the machine which hosts the dixie\n        server,\
    \ i.e. your local, ISODE-resident machine. This constant\n        takes a quoted\
    \ string as a value, e.g., \"gum.isi.edu\".\n        Edit the file \"Makefile\"\
    . Set the value of the BINDIR variable\n        to \"<mypath>/isode/bin\", where\
    \ <mypath> is the full pathname of\n        the user's home directory.\n     \
    \   make depend-ud\n        make ud-only\n        make inst-ud\n   Doog\n   The\
    \ \"doog\" DUA retrieves information on entries supplied by the user\n   in UFN\
    \ format. UFN format refers to a special, user-friendly syntax\n   developed by\
    \ Steve Hardcastle-Kille. UFN format is a comma-separated\n   list of DN component\
    \ values. (Attribute types are omitted.) The\n   criteria for identifying DN components\
    \ in UFN is often less stringent\n   than normal.  For example:\n        @c=US@st=California@o=Information\
    \ Sciences\n        Institute@ou=HPCC@cn=Tom Tignor\n   could be specified in\
    \ UFN syntax (and doog) as\n        tignor,isi,ca,us\n   See Steve Hardcastle-Kille's\
    \ Work in Progress, \"User Friendly Naming\"\n   for details.\n   Other commands\
    \ in doog are briefly described by the program's help\n   section. Interested\
    \ users should type \"?\" at the first prompt, after\n   installing and running\
    \ the executable.\n   The doog executable can be created and installed by the\
    \ following\n   simple steps:\n        If you do not have a file called \".unknown_tailor\"\
    \ in your home\n        directory, create it now. This file should contain the\
    \ following\n        single line:\n             etcpath:   <fullpathname>/isode/etc/\n\
    \        where <fullpathname> is the full path name of your $HOME\n        directory.\n\
    \        If you do not have a directory $HOME/isode/bin, where \"$HOME\" is\n\
    \        your home directory, create it now.\n        ftp the compressed tar file\
    \ \"doog-portable.tar.Z\" from your\n        local, ISODE-resident machine and\
    \ put it in your isode\n        directory. If you cannot find this file locally,\
    \ it is available\n        by anonymous ftp from \"gum.isi.edu\" in the \"x500\"\
    \ directory.\n        cd $HOME/isode\n        uncompress < doog-isode-8.0.tar.Z\
    \ | tar xf -\n        Edit the CONFIG.make variables BINDIR, ETCDIR and SBINDIR\
    \ to\n        refer to your isode/bin, isode/etc and isode/etc directories,\n\
    \        respectively.  (The isode/etc directory was created by the\n        previous\
    \ command.)\n        ranlib libdsap.a\n        ranlib libisode.a\n        cd doog\n\
    \        ./make all\n        ./make inst-all\n   2.  Instructions for ISODE-Maintainers\n\
    \   WHOIS\n   \"WHOIS\" is a simple program already available at most UNIX\n \
    \  workstations and hosts. It is normally used to access the database of\n   users\
    \ at NIC.DDN.MIL. The instructions below explain how to use WHOIS\n   to access\
    \ data in the White Pages Pilot X.500 database. These\n   instructions are taken\
    \ nearly word for word from the \"PSI White Pages\n   Pilot Project Administrator's\
    \ Guide,\" section 2.8.3.\n   Choose a machine in your local environment which\
    \ is running the pilot\n   project software. This machine will offer the white\
    \ pages service via\n   a network port offering an emulation of the WHOIS service.\n\
    \   On this machine, modify the /etc/services file so that it contains an\n  \
    \ entry like this:\n        whitepages 17005/tcp\n   Next, edit the file /etc/servers\
    \ so that it has an entry like this:\n        whitepages tcp  $(SBINDIR)in.whitepages\n\
    \   Because most user interfaces to WHOIS, e.g., whois(1c), do not allow\n   the\
    \ user to specify a special port, you should probably also add this\n   line as\
    \ well:\n        whois tcp$(SBINDIR)in.whitepages\n   If you already have a line\
    \ for whois in the servers file, then you\n   are already running a WHOIS service,\
    \ and you should NOT add a second\n   whois line. This machine is not a good choice\
    \ for running the white\n   pages via WHOIS emulation.\n   Note that on newer\
    \ systems derived from Berkeley UNIX, /etc/servers\n   is called /etc/inetd.conf.\n\
    \        The whitepages Command\n   On those systems which are to access the white\
    \ pages via the network\n   and not locally (i.e., those systems which are not\
    \ running the pilot\n   project software), you should determine how the user invokes\
    \ the\n   WHOIS service via the network. For UNIX systems, you should provide\
    \ a\n   shell script like this:\n        : run this script through /bin/sh\n \
    \       exec /usr/ucb/whois -h wp.psi.net \"$*\"\n   where the name of a host\
    \ running the pilot project software is\n   substituted for whitepages, e.g.,\
    \ wp.psi.net. This host must have the\n   files /etc/services and /etc/servers\
    \ edited as described above.\n   De\n   The compressed tar file for \"de\" can\
    \ be created by the following\n   sequence of commands. (Note: In the instructions\
    \ which follow,\n   <toplevel> indicates the top level of the ISODE distribution.)\n\
    \        cd <toplevel>/others/quipu/uips\n        Edit the de/detailor file to\
    \ set the following options:\n             dsa_address:            (the address\
    \ of your DSA)\n             default_country:        (your country)\n        \
    \     default_org:            (your organization)\n        cp de/make temp1\n\
    \        Edit the de/make file so that the last line reads as follows:\n     \
    \        exec $M TOPDIR=../ -f ../CONFIG.make -f Makefile ${1+\"$@\"}\n      \
    \  tar -cf de-portable.tar de/*\n        mv temp1 de/make\n        mv de-portable.tar\
    \ <aboveETCDIR>\n             (Here, <aboveETCDIR> is the directory immediately\
    \ above\n             ETCDIR.)\n        cd <aboveETCDIR>\n        tar -rf de-portable.tar\
    \ etc/dsaptailor etc/isomacros\n        etc/oidtable.at etc/oidtable.oc etc/oidtable.gen\n\
    \        mv de-portable.tar <toplevel>\n        cd <toplevel>\n        cp config/CONFIG.make\
    \ .\n        tar -rf de-portable.tar h/* h/quipu/* util/* CONFIG.make\n      \
    \  libdsap.a libisode.a\n        rm CONFIG.make\n        compress de-portable.tar\n\
    \   The compressed tar file for de will appear in the top level directory\n  \
    \ of the ISODE distribution as \"de-portable.tar.Z\".\n   Dixie/Ud\n   The latest\
    \ version of the dixie distribution is available by\n   anonymous ftp at \"terminator.cc.umich.edu\"\
    \ in the \"x500\" directory.\n   The file is named \"dixie-<version #>.tar.Z\"\
    , where <version #> is the\n   number of the latest release.\n   In order for\
    \ anyone to use dixie clients, there must be a running\n   dixie server which\
    \ they can connect to. To set up the dixie server,\n   the DSA manager should\
    \ take the dixie package and explode/uncompress\n   it in the top level directory\
    \ of the ISODE distribution. This is done\n   with the following command:\n  \
    \      uncompress < dixie-<version #>.tar.Z | tar xf -\n   where <version #> is\
    \ the version number of your dixie package.  This\n   will create a \"dixie-<version\
    \ #>\" directory. The dixie server, dixie\n   library and any DUAs included with\
    \ the package will be in this\n   directory branch. Software to support dixie\
    \ on machines other than\n   UNIX is included as well. This software is stored\
    \ in the directories\n   \"dos\", \"macintosh\" and \"vms\". UNIX users should\
    \ feel free to delete\n   these directories and all their contents. Commands of\
    \ the form:\n        rm -r <dirname>\n   where <dirname> is the directory name,\
    \ should accomplish this task.\n   In the top level of the dixie distribution\
    \ is a file called\n   \"Makefile\". The file holds several variables which should\
    \ be\n   configured to match those of your ISODE environment.\n           BINDIR\
    \                  ISODEINCLUDEDIR\n           ETCDIR                  LIBDIR\n\
    \           INCLUDEDIR              ISODELIBS\n           INSTLIBDIR\n   In the\
    \ \"server\" directory below the top level of the dixie\n   distribution is another\
    \ \"Makefile\" file. Configure the ISODELIBS\n   variable in this file, as well.\n\
    \   After setting these variables, cd to the top level of the dixie\n   distribution\
    \ and type the following commands:\n           make depend-server\n          \
    \ make server-only\n           make inst-server\n   This will create and install\
    \ the dixie server in your ETCDIR.  cd to\n   the ETCDIR and type \"dixie\" to\
    \ start the server.\n   Doog\n   The compressed tar file for \"doog\" can be created\
    \ by the following\n   sequence of commands. (Note: In the instructions which\
    \ follow,\n   <toplevel> indicates the top level of the ISODE distribution.)\n\
    \        cd <toplevel>/others/quipu/uips\n        cp doog/make temp1\n       \
    \ Edit the doog/make file so that the last line reads as follows:\n          \
    \   exec $M TOPDIR=../ -f ../CONFIG.make -f Makefile ${1+\"$@\"}\n        cp doog/query/make\
    \ temp2\n        Edit the doog/query/make file so that the last line reads as\n\
    \        follows:\n             exec $M TOPDIR=../../ -f ../../CONFIG.make -f\
    \ Makefile\n             ${1+\"$@\"}\n        tar -cf doog-portable.tar doog/*\n\
    \        mv temp1 doog/make\n        mv temp2 doog/query/make\n        mv doog-portable.tar\
    \ ../../..\n        cd ../../..\n        cp config/CONFIG.make .\n        tar\
    \ -rf doog-portable.tar h/* h/quipu/* util/* CONFIG.make\n        libdsap.a libisode.a\n\
    \        rm CONFIG.make\n        mv doog-portable.tar <aboveETCDIR>\n        \
    \     (Here, <aboveETCDIR> is the directory immediately above\n             ETCDIR.)\n\
    \        cd <aboveETCDIR>\n        tar -rf doog-portable.tar etc/dsaptailor etc/isomacros\n\
    \        etc/oidtable.at etc/oidtable.gen etc/oidtable.oc\n        compress doog-portable.tar\n\
    \   The compressed tar file for doog will appear in the directory\n   immediately\
    \ above ETCDIR as \"doog-portable.tar.Z\".\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Tom Tignor\n   University of Southern California\n   Information\
    \ Sciences Institute\n   4676 Admiralty Way\n   Marina del Rey, CA 90292\n   Phone:\
    \ (310) 822-1511\n   EMail: tpt2@isi.edu\n"
