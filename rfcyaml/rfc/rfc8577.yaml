- contents:
  - '      Signaling RSVP-TE Tunnels on a Shared MPLS Forwarding Plane

    '
  title: __initial_text__
- contents:
  - "Abstract\n   As the scale of MPLS RSVP-TE networks has grown, the number of Label\n
    \  Switched Paths (LSPs) supported by individual network elements has\n   increased.
    \ Various implementation recommendations have been proposed\n   to manage the
    resulting increase in the amount of control-plane state\n   information.\n   However,
    those changes have had no effect on the number of labels\n   that a transit Label
    Switching Router (LSR) has to support in the\n   forwarding plane.  That number
    is governed by the number of LSPs\n   transiting or terminated at the LSR and
    is directly related to the\n   total LSP state in the control plane.\n   This
    document defines a mechanism to prevent the maximum size of the\n   label space
    limit on an LSR from being a constraint to control-plane\n   scaling on that node.
    \ It introduces the notion of preinstalled\n   'per-TE link labels' that can be
    shared by MPLS RSVP-TE LSPs that\n   traverse these TE links.  This approach significantly
    reduces the\n   forwarding-plane state required to support a large number of LSPs.\n
    \  This couples the feature benefits of the RSVP-TE control plane with\n   the
    simplicity of the Segment Routing (SR) MPLS forwarding plane.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8577.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   5\n     2.1.  Requirements Language . . . . . . . . . . . . . . . . .
    .   6\n   3.  Allocation of TE Link Labels  . . . . . . . . . . . . . . . .   6\n
    \  4.  Segment Routed RSVP-TE Tunnel Setup . . . . . . . . . . . . .   6\n   5.
    \ Delegating Label Stack Imposition . . . . . . . . . . . . . .   8\n     5.1.
    \ Stacking at the Ingress . . . . . . . . . . . . . . . . .   8\n       5.1.1.
    \ Stack to Reach Delegation Hop . . . . . . . . . . . .   9\n       5.1.2.  Stack
    to Reach Egress . . . . . . . . . . . . . . . .  10\n     5.2.  Explicit Delegation
    . . . . . . . . . . . . . . . . . . .  11\n     5.3.  Automatic Delegation  .
    . . . . . . . . . . . . . . . . .  11\n       5.3.1.  Effective Transport Label-Stack
    Depth (ETLD)  . . . .  11\n   6.  Mixing TE Link Labels and Regular Labels in
    an RSVP-TE Tunnel  13\n   7.  Construction of Label Stacks  . . . . . . . . .
    . . . . . . .  14\n   8.  Facility Backup Protection  . . . . . . . . . . . .
    . . . . .  14\n     8.1.  Link Protection . . . . . . . . . . . . . . . . . .
    . . .  14\n   9.  Protocol Extensions . . . . . . . . . . . . . . . . . . . .
    .  15\n     9.1.  Requirements  . . . . . . . . . . . . . . . . . . . . . .  15\n
    \    9.2.  Attribute Flags TLV: TE Link Label  . . . . . . . . . . .  16\n     9.3.
    \ RRO Label Sub-object Flag: TE Link Label  . . . . . . . .  16\n     9.4.  Attribute
    Flags TLV: LSI-D  . . . . . . . . . . . . . . .  16\n     9.5.  RRO Label Sub-object
    Flag: Delegation Label . . . . . . .  17\n     9.6.  Attributes Flags TLV: LSI-D-S2E
    . . . . . . . . . . . . .  17\n     9.7.  Attributes TLV: ETLD  . . . . . . .
    . . . . . . . . . . .  18\n   10. OAM Considerations  . . . . . . . . . . . .
    . . . . . . . . .  18\n   11. IANA Considerations . . . . . . . . . . . . . .
    . . . . . . .  19\n     11.1.  Attribute Flags: TE Link Label, LSI-D, LSI-D-S2E
    . . . .  19\n     11.2.  Attribute TLV: ETLD  . . . . . . . . . . . . . . . .
    . .  19\n     11.3.  Record Route Label Sub-object Flags: TE Link Label,\n            Delegation
    Label . . . . . . . . . . . . . . . . . . . .  20\n     11.4.  Error Codes and
    Error Values . . . . . . . . . . . . . .  20\n   12. Security Considerations .
    . . . . . . . . . . . . . . . . . .  20\n   13. References  . . . . . . . . .
    . . . . . . . . . . . . . . . .  21\n     13.1.  Normative References . . . .
    . . . . . . . . . . . . . .  21\n     13.2.  Informative References . . . . .
    . . . . . . . . . . . .  22\n   Acknowledgements  . . . . . . . . . . . . . .
    . . . . . . . . . .  23\n   Contributors  . . . . . . . . . . . . . . . . . .
    . . . . . . . .  23\n   Authors' Addresses  . . . . . . . . . . . . . . . . .
    . . . . . .  24\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The scaling of RSVP-TE [RFC3209] control-plane implementations
    can be\n   improved by adopting the guidelines and mechanisms described in\n   [RFC2961]
    and [RFC8370].  These documents do not affect the\n   forwarding-plane state required
    to handle the control-plane state.\n   The forwarding-plane state remains unchanged
    and is directly\n   proportional to the total number of Label Switching Paths
    (LSPs)\n   supported by the control plane.\n   This document describes a mechanism
    that prevents the size of the\n   platform-specific label space on a Label Switching
    Router (LSR) from\n   being a constraint to pushing the limits of control-plane
    scaling on\n   that node.\n   This work introduces the notion of preinstalled
    'per-TE link labels'\n   that are allocated by an LSR.  Each such label is installed
    in the\n   MPLS forwarding plane with a 'pop' operation and instructions to\n
    \  forward the received packet over the TE link.  An LSR advertises this\n   label
    in the Label object of a Resv message as LSPs are set up, and\n   they are recorded
    hop by hop in the Record Route Object (RRO) of the\n   Resv message as it traverses
    the network.  The ingress Label Edge\n   Router (LER) constructs and pushes a
    stack of labels [RFC3031] using\n   the labels received in the RRO.  These 'TE
    link labels' can be shared\n   by MPLS RSVP-TE LSPs that traverse the same TE
    link.\n   This forwarding-plane behavior fits in the MPLS architecture\n   [RFC3031]
    and is the same as that exhibited by Segment Routing (SR)\n   [RFC8402] when using
    an MPLS forwarding plane and a series of\n   adjacency segments [SEG-ROUTING].
    \ This work couples the feature\n   benefits of the RSVP-TE control plane with
    the simplicity of the SR\n   MPLS forwarding plane.\n   RSVP-TE using a shared
    MPLS forwarding plane offers the following\n   benefits:\n   1.  Shared labels:
    The transit label on a TE link is shared among\n       RSVP-TE tunnels traversing
    the link and is used independently of\n       the ingress and egress of the LSPs.\n
    \  2.  Faster LSP setup time: No forwarding-plane state needs to be\n       programmed
    during LSP setup and teardown, resulting in faster\n       provisioning and deprovisioning
    of LSPs.\n   3.  Hitless rerouting: New transit labels are not required during\n
    \      make-before-break (MBB) in scenarios where the new LSP instance\n       traverses
    the exact same path as the old LSP instance.  This\n       saves the ingress LER
    and the services that use the tunnel from\n       needing to update the forwarding
    plane with new tunnel labels,\n       thereby making MBB events faster.  Periodic
    MBB events are\n       relatively common in networks that deploy the 'auto-bandwidth'\n
    \      feature on RSVP-TE LSPs to monitor bandwidth utilization and\n       periodically
    adjust LSP bandwidth.\n   4.  Mix-and-match labels: Both 'TE link labels' and
    regular labels\n       can be used on transit hops for a single RSVP-TE tunnel
    (see\n       Section 6).  This allows backward compatibility with transit LSRs\n
    \      that provide regular labels in Resv messages.\n   No additional extensions
    to routing protocols are required in order\n   to support key functionalities
    such as bandwidth admission control,\n   LSP priorities, preemption, and auto-bandwidth
    on this shared MPLS\n   forwarding plane.  This document also discusses how Fast
    Reroute\n   [RFC4090] via facility backup link protection using regular bypass\n
    \  tunnels can be supported on this forwarding plane.\n   The signaling procedures
    and extensions discussed in this document do\n   not apply to Point to Multipoint
    (P2MP) RSVP-TE tunnels.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The following terms are used in this document:\n   TE link
    label:   An incoming label at an LSR that will be popped by\n      the LSR with
    the packet being forwarded over a specific outgoing\n      TE link to a neighbor.\n
    \  Shared MPLS forwarding plane:   An MPLS forwarding plane where every\n      participating
    LSR uses TE link labels on every LSP.\n   Segment Routed RSVP-TE tunnel:   An
    MPLS RSVP-TE tunnel that requests\n      the use of a shared MPLS forwarding plane
    at every hop of the LSP.\n      The corresponding LSPs are referred to as \"Segment
    Routed RSVP-TE\n      LSPs\".\n   Delegation hop:   A transit hop of a Segment
    Routed RSVP-TE LSP that\n      is selected to assist in the imposition of the
    label stack in\n      scenarios where the ingress LER cannot impose the full label\n
    \     stack.  There can be multiple delegation hops along the path of a\n      Segment
    Routed RSVP-TE LSP.\n   Delegation label:   A label assigned at the delegation
    hop to\n      represent a set of labels that will be pushed at this hop.\n"
  - contents:
    - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 2.1.  Requirements Language
  title: 2.  Terminology
- contents:
  - "3.  Allocation of TE Link Labels\n   An LSR that participates in a shared MPLS
    forwarding plane MUST\n   allocate a unique TE link label for each TE link.  When
    an LSR\n   encounters a TE link label at the top of the label stack, it MUST pop\n
    \  the label and forward the packet over the TE link to the downstream\n   neighbor
    on the RSVP-TE tunnel.\n   Multiple TE link labels MAY be allocated for the TE
    link to\n   accommodate tunnels requesting protection.\n   Implementations that
    maintain per-label bandwidth accounting at each\n   hop must aggregate the reservations
    made for all the LSPs using the\n   shared TE link label.\n"
  title: 3.  Allocation of TE Link Labels
- contents:
  - "4.  Segment Routed RSVP-TE Tunnel Setup\n   This section provides an example
    of how the RSVP-TE signaling\n   procedure works to set up a tunnel utilizing
    a shared MPLS forwarding\n   plane.  The sample topology below is used to explain
    the example.\n   Labels shown at each node are TE link labels that, when present
    at\n   the top of the label stack, indicate that they should be popped and\n   that
    the packet should be forwarded on the TE link to the neighbor.\n    +---+100  +---+150
    \ +---+200  +---+250  +---+\n    | A |-----| B |-----| C |-----| D |-----| E |\n
    \   +---+     +---+     +---+     +---+     +---+\n      |110      |450      |550
    \     |650      |850\n      |         |         |         |         |\n      |
    \        |400      |500      |600      |800\n      |       +---+     +---+     +---+
    \    +---+\n      +-------| F |-----|G  |-----|H  |-----|I  |\n              +---+300
    \ +---+350  +---+700  +---+\n                Figure 1: Sample Topology -- TE Link
    Labels\n   Consider two tunnels:\n      RSVP-TE tunnel T1: From A to E on path
    A-B-C-D-E\n      RSVP-TE tunnel T2: From F to E on path F-B-C-D-E\n   Both tunnels
    share the TE links B-C, C-D, and D-E.\n   RSVP-TE is used to signal the setup
    of tunnel T1 (using the TE link\n   label attributes flag defined in Section 9.2).
    \ When LSR D receives\n   the Resv message from the egress LER E, it checks the
    next-hop TE\n   link (D-E) and provides the TE link label (250) in the Resv message\n
    \  for the tunnel placing the label value in the Label object.  It also\n   provides
    the TE link label (250) in the Label sub-object carried in\n   the RRO and sets
    the TE link label flag as defined in Section 9.3.\n   Similarly, LSR C provides
    the TE link label (200) for the TE link\n   C-D, and LSR B provides the TE link
    label (150) for the TE link B-C.\n   For tunnel T2, the transit LSRs provide the
    same TE link labels as\n   described for tunnel T1 as the links B-C, C-D, and
    D-E are common\n   between the two LSPs.\n   The ingress LERs (A and F) will push
    the same stack of labels (from\n   top of stack to bottom of stack) {150, 200,
    250} for tunnels T1 and\n   T2, respectively.\n   It should be noted that a transit
    LSR does not swap the top TE link\n   label on an incoming packet (the label that
    it advertised in the Resv\n   message it sent); all it has to do is pop the top
    label and forward\n   the packet.\n   The values in the Label sub-objects in the
    RRO are of interest to the\n   ingress LERs when constructing the stack of labels
    to impose on the\n   packets.\n   If, in this example, there were another RSVP-TE
    tunnel T3 from F to I\n   on path F-B-C-D-E-I, then this tunnel would also share
    the TE links\n   B-C, C-D, and D-E and traverse link E-I.  The label stack used
    by F\n   would be {150, 200, 250, 850}.  Hence, regardless of where the LSPs\n
    \  start and end, they will share LSR labels at shared hops in the\n   shared
    MPLS forwarding plane.\n   There MAY be a local operator policy at the ingress
    LER that\n   influences the maximum depth of the label stack that can be pushed\n
    \  for a Segment Routed RSVP-TE tunnel.  Prior to signaling the LSP, the\n   ingress
    LER may determine that it is unable to push a label stack\n   containing one label
    for each hop along the path.  In some scenarios,\n   the ingress LER may not have
    sufficient information to make that\n   determination.  In these cases, the LER
    SHOULD adopt the techniques\n   described in Section 5.\n"
  title: 4.  Segment Routed RSVP-TE Tunnel Setup
- contents:
  - "5.  Delegating Label Stack Imposition\n   One or more transit LSRs can assist
    the ingress LER by imposing part\n   of the label stack required for the path.
    \ Consider the example in\n   Figure 2 with an RSVP-TE tunnel from A to L on path\n
    \  A-B-C-D-E-F-G-H-I-J-K-L.  In this case, the LSP is too long for LER A\n   to
    impose the full label stack, so it uses the assistance of\n   delegation hops
    LSR D and LSR I to impose parts of the label stack.\n   Each delegation hop allocates
    a delegation label to represent a set\n   of labels that will be pushed at this
    hop.  When a packet arrives at\n   a delegation hop LSR with a delegation label,
    the LSR pops the label\n   and pushes a set of labels before forwarding the packet.\n
    \                                  1250d\n    +---+100p  +---+150p  +---+200p
    \ +---+250p  +---+300p  +---+\n    | A |------| B |------| C |------| D |------|
    E |------| F |\n    +---+      +---+      +---+      +---+      +---+      +---+\n
    \                                                            |350p\n                                                             |\n
    \                                  1500d                     |\n    +---+  600p+---+
    \ 550p+---+  500p+---+  450p+---+  400p+---+\n    | L |------| K |------| J |------|
    I |------| H |------+ G +\n    +---+      +---+      +---+      +---+      +---+
    \     +---+\n           Notation: <Label>p - TE link label\n                      <Label>d
    - Delegation label\n                Figure 2: Delegating Label Stack Imposition\n"
  - contents:
    - "5.1.  Stacking at the Ingress\n   When delegation labels come into play, there
      are two stacking\n   approaches from which the ingress can choose.  Section
      7 explains how\n   the label stack can be constructed.\n"
    - contents:
      - "5.1.1.  Stack to Reach Delegation Hop\n   In this approach, the stack pushed
        by the ingress carries a set of\n   labels that will take the packet to the
        first delegation hop.  When\n   this approach is employed, the set of labels
        represented by a\n   delegation label at a given delegation hop will include
        the\n   corresponding delegation label from the next delegation hop.  As a\n
        \  result, this delegation label can only be shared among LSPs that are\n
        \  destined to the same egress and traverse the same downstream path.\n   This
        approach is shown in Figure 3.  The delegation label 1250\n   represents the
        stack {300, 350, 400, 450, 1500}, and the delegation\n   label 1500 represents
        the label stack {550, 600}.\n    +---+               +---+               +---+\n
        \   | A |-----.....-----| D |-----.....-----| I |-----.....\n    +---+               +---+
        \              +---+\n                   Pop 1250 &           Pop 1500 &\n
        \    Push                Push                Push\n    ......              ......
        \             ......\n    : 150:        1250->: 300:        1500->: 550:\n
        \   : 200:              : 350:              : 600:\n    :1250:              :
        400:              ......\n    ......              : 450:\n                        :1500:\n
        \                       ......\n                  Figure 3: Stack to Reach
        Delegation Hop\n   With this approach, the ingress LER A will push {150, 200,
        1250} for\n   the tunnel in Figure 2.  At LSR D, the delegation label 1250
        will get\n   popped, and {300, 350, 400, 450, 1500} will get pushed.  At LSR
        I,\n   the delegation label 1500 will get popped, and the remaining set of\n
        \  labels {550, 600} will get pushed.\n"
      title: 5.1.1.  Stack to Reach Delegation Hop
    - contents:
      - "5.1.2.  Stack to Reach Egress\n   In this approach, the stack pushed by the
        ingress carries a set of\n   labels that will take the packet all the way
        to the egress so that\n   all the delegation labels are part of the stack.
        \ When this approach\n   is employed, the set of labels represented by a delegation
        label at a\n   given delegation hop will not include the corresponding delegation\n
        \  label from the next delegation hop.  As a result, this delegation\n   label
        can be shared among all LSPs traversing the segment between the\n   two delegation
        hops.\n   The downside of this approach is that the number of hops that the
        LSP\n   can traverse is dictated by the label stack push limit of the\n   ingress.\n
        \  This approach is shown in Figure 4.  The delegation label 1250\n   represents
        the stack {300, 350, 400, 450}, and the delegation label\n   1500 represents
        the label stack {550, 600}.\n    +---+               +---+               +---+\n
        \   | A |-----.....-----| D |-----.....-----| I |-----.....\n    +---+               +---+
        \              +---+\n                   Pop 1250 &           Pop 1500 &\n
        \    Push                Push                Push\n    ......              ......
        \             ......\n    : 150:        1250->: 300:        1500->: 550:\n
        \   : 200:              : 350:              : 600:\n    :1250:              :
        400:              ......\n    :1500:              : 450:\n    ......              ......\n
        \                       |1500|\n                        ......\n                      Figure
        4: Stack to Reach Egress\n   With this approach, the ingress LER A will push
        {150, 200, 1250,\n   1500} for the tunnel in Figure 2.  At LSR D, the delegation
        label\n   1250 will get popped, and {300, 350, 400, 450} will get pushed.
        \ At\n   LSR I, the delegation label 1500 will get popped, and the remaining\n
        \  set of labels {550, 600} will get pushed.  The signaling extension\n   required
        for the ingress to indicate the chosen stacking approach is\n   defined in
        Section 9.6.\n"
      title: 5.1.2.  Stack to Reach Egress
    title: 5.1.  Stacking at the Ingress
  - contents:
    - "5.2.  Explicit Delegation\n   In this delegation option, the ingress LER can
      explicitly delegate\n   one or more specific transit LSRs to handle pushing
      labels for a\n   certain number of their downstream hops.  In order to accurately
      pick\n   the delegation hops, the ingress needs to be aware of the label stack\n
      \  depth push limit (total number of MPLS labels that can be imposed,\n   including
      all service/transport/special labels) of each of the\n   transit LSRs prior
      to initiating the signaling sequence.  The\n   mechanism by which the ingress
      or controller (hosting the path\n   computation element) learns this information
      is outside the scope of\n   this document.  Base MPLS Imposition MSD (BMI-MSD)
      advertisement,\n   specified in [RFC8491], is an example of such a mechanism.\n
      \  The signaling extension required for the ingress LER to explicitly\n   delegate
      one or more specific transit hops is defined in Section 9.4.\n   The extension
      required for the delegation hop to indicate that the\n   recorded label is a
      delegation label is defined in Section 9.5.\n"
    title: 5.2.  Explicit Delegation
  - contents:
    - "5.3.  Automatic Delegation\n   In this approach, the ingress LER lets the downstream
      LSRs\n   automatically pick suitable delegation hops during the initial\n   signaling
      sequence.  The ingress does not need to be aware up front\n   of the label stack
      depth push limit of each of the transit LSRs.\n   This approach SHOULD be used
      if there are loose hops [RFC3209] in the\n   explicit route.  The delegation
      hops are picked based on a per-hop\n   signaled attribute called the Effective
      Transport Label-Stack Depth\n   (ETLD), as described in the next section.\n"
    - contents:
      - "5.3.1.  Effective Transport Label-Stack Depth (ETLD)\n   The ETLD is signaled
        as a per-hop recorded attribute in the Path\n   message [RFC7570].  When automatic
        delegation is requested, the\n   ingress MUST populate the ETLD with the maximum
        number of transport\n   labels that it can potentially send to its downstream
        hop.  This\n   value is then decremented at each successive hop.  If a node
        is\n   reached and it is determined that this hop cannot support automatic\n
        \  delegation, then it MUST NOT use TE link labels and use regular\n   labels
        instead.  If a node is reached where the ETLD set from the\n   previous hop
        is 1, then that node MUST select itself as the\n   delegation hop.  If a node
        is reached and it is determined that this\n   hop cannot receive more than
        one transport label, then that node MUST\n   select itself as the delegation
        hop.  If there is a node or a\n   sequence of nodes along the path of the
        LSP that do not support ETLD,\n   then the immediate hop that supports ETLD
        MUST select itself as the\n   delegation hop.  The ETLD MUST be decremented
        at each non-delegation\n   transit hop by either 1 or some appropriate number
        based on the local\n   policy.  For example, consider a transit node with
        a local policy\n   that mandates it to take the label stack read limit into
        account when\n   decrementing the ETLD.  With this policy, the ETLD is decremented
        in\n   such a way that the transit hop does not receive more labels in the\n
        \  stack than it can read.  At each delegation hop, the ETLD MUST be\n   reset
        to the maximum number of transport labels that the hop can\n   send, and the
        ETLD decrements start again at each successive hop\n   until either a new
        delegation hop is selected or the egress is\n   reached.  As a result, by
        the time the Path message reaches the\n   egress, all delegation hops are
        selected.  During the Resv\n   processing, at each delegation hop, a suitable
        delegation label is\n   selected (either an existing label is reused or a
        new label is\n   allocated) and recorded in the Resv message.\n   Consider
        the example shown in Figure 5.  Let's assume ingress LER A\n   can push up
        to three transport labels while the remaining nodes can\n   push up to five
        transport labels.  The ingress LER A signals the\n   initial Path message
        with ETLD set to 3.  The ETLD value is adjusted\n   at each successive hop
        and signaled downstream as shown.  By the time\n   the Path message reaches
        the egress LER L, LSRs D and I are\n   automatically selected as delegation
        hops.\n          ETLD:3    ETLD:2    ETLD:1    ETLD:5    ETLD:4\n          ----->
        \   ----->    ----->    ----->    ----->\n                                    1250d\n
        \     +---+100p +---+150p +---+200p +---+250p +---+300p +---+\n      | A |-----|
        B |-----| C |-----| D |-----| E |-----| F |  ETLD:3\n      +---+     +---+
        \    +---+     +---+     +---+     +---+    |\n                                                          |350p
        \ |\n                                                          |      |\n
        \                                   1500d                 |      |\n      +---+
        600p+---+ 550p+---+ 500p+---+ 450p+---+ 400p+---+    v\n      | L |-----|
        K |-----| J |-----| I |-----| H |-----+ G +\n      +---+     +---+     +---+
        \    +---+     +---+     +---+\n          ETLD:3    ETLD:4    ETLD:5    ETLD:1
        \   ETLD:2\n          <-----    <-----    <-----    <-----    <-----\n                              Figure
        5: ETLD\n   When an LSP that requests automatic delegation also requests facility\n
        \  backup protection [RFC4090], the ingress or the delegation hop MUST\n   account
        for the bypass tunnel's label(s) when populating the ETLD.\n   Hence, when
        a regular bypass tunnel is used to protect the facility,\n   the ETLD that
        gets populated on these nodes is one less than what\n   gets populated for
        a corresponding unprotected LSP.\n   Signaling extension for the ingress LER
        to request automatic\n   delegation is defined in Section 9.4.  The extension
        for signaling\n   the ETLD is defined in Section 9.7.  The extension required
        for the\n   delegation hop to indicate that the recorded label is a delegation\n
        \  label is defined in Section 9.5.\n"
      title: 5.3.1.  Effective Transport Label-Stack Depth (ETLD)
    title: 5.3.  Automatic Delegation
  title: 5.  Delegating Label Stack Imposition
- contents:
  - "6.  Mixing TE Link Labels and Regular Labels in an RSVP-TE Tunnel\n   Labels
    can be mixed across transit hops in a single MPLS RSVP-TE LSP.\n   Certain LSRs
    can use TE link labels and others can use regular\n   labels.  The ingress can
    construct a label stack appropriately based\n   on what type of label is recorded
    from every transit LSR.\n                             (#)       (#)\n    +---+100
    \ +---+150  +---+200  +---+250  +---+\n    | A |-----| B |-----| C |-----| D |-----|
    E |\n    +---+     +---+     +---+     +---+     +---+\n      |110      |450      |550
    \     |650      |850\n      |         |         |         |         |\n      |
    \        |400      |500      |600      |800\n      |       +---+     +---+     +---+
    \    +---+\n      +-------| F |-----|G  |-----|H  |-----|I  |\n              +---+300
    \ +---+350  +---+700  +---+\n            Notation: (#) denotes regular labels\n
    \                      Other labels are TE link labels\n      Figure 6: Sample
    Topology -- TE Link Labels and Regular Labels\n   If the transit LSR allocates
    a regular label to be sent upstream in\n   the Resv, then the label operation
    at the LSR is a swap to the label\n   received from the downstream LSR.  If the
    transit LSR is using a TE\n   link label to be sent upstream in the Resv, then
    the label operation\n   at the LSR is a pop and forward regardless of any label
    received from\n   the downstream LSR.  There is no change in the behavior of a\n
    \  penultimate hop popping (PHP) LSR [RFC3031].\n   Section 7 explains how the
    label stack can be constructed.  For\n   example, the LSP from A to I using path
    A-B-C-D-E-I will use a label\n   stack of {150, 200}.\n"
  title: 6.  Mixing TE Link Labels and Regular Labels in an RSVP-TE Tunnel
- contents:
  - "7.  Construction of Label Stacks\n   The ingress LER or delegation hop MUST check
    the type of label\n   received from each transit hop as recorded in the RRO in
    the Resv\n   message and generate the appropriate label stack to reach the next\n
    \  delegation hop or the egress.\n   The following logic is used by the node constructing
    the label stack:\n      Each RRO label sub-object MUST be processed starting with
    the\n      label sub-object from the first downstream hop.  Any label\n      provided
    by the first downstream hop MUST always be pushed on the\n      label stack regardless
    of the label type.  If the label type is a\n      TE link label, then any label
    from the next downstream hop MUST\n      also be pushed on the constructed label
    stack.  If the label type\n      is a regular label, then any label from the next
    downstream hop\n      MUST NOT be pushed on the constructed label stack.  If the
    label\n      type is a delegation label, then the type of stacking approach\n
    \     chosen by the ingress for this LSP (Section 5.1) MUST be used to\n      determine
    how the delegation labels are pushed in the label stack.\n"
  title: 7.  Construction of Label Stacks
- contents:
  - "8.  Facility Backup Protection\n   The following section describes how link protection
    works with\n   facility backup protection [RFC4090] using regular bypass tunnels
    for\n   the Segment Routed RSVP-TE tunnels.  The procedures for supporting\n   node
    protection are not discussed in this document.  The use of\n   Segment Routed
    bypass tunnels for providing facility protection is\n   left for further study.\n"
  - contents:
    - "8.1.  Link Protection\n   To provide link protection at a Point of Local Repair
      (PLR) with a\n   shared MPLS forwarding plane, the LSR MUST allocate a separate
      TE\n   link label for the TE link that will be used for RSVP-TE tunnels that\n
      \  request link protection from the ingress.  No signaling extensions\n   are
      required to support link protection for RSVP-TE tunnels over the\n   shared
      MPLS forwarding plane.\n   At each LSR, link-protected TE link labels can be
      allocated for each\n   TE link, and a link-protecting facility backup LSP can
      be created to\n   protect the TE link.  The link-protected TE link label can
      be sent by\n   the LSR for LSPs requesting link protection over the specific
      TE\n   link.  Since the facility backup terminates at the next hop (merge\n
      \  point), the incoming label on the packet will be what the merge point\n   expects.\n
      \  Consider the network shown in Figure 7.  LSR B can install a facility\n   backup
      LSP for the link-protected TE link label 151.  When the TE\n   link B-C is up,
      LSR B will pop 151 and send the packet to C.  If the\n   TE link B-C is down,
      the LSR can pop 151 and send the packet via the\n   facility backup to C.\n
      \        101(*)     151(*)     201(*)     251(*)\n    +---+100   +---+150   +---+200
      \  +---+250   +---+\n    | A |------| B |------| C |------| D |------| E |\n
      \   +---+      +---+      +---+      +---+      +---+\n      |110       |450
      \      |550       |650       |850\n      |          |          |          |
      \         |\n      |          |400       |500       |600       |800\n      |
      \       +---+      +---+      +---+      +---+\n      +--------| F |------|G
      \ |------|H  |------|I  |\n               +---+300   +---+350   +---+700   +---+\n
      \    Notation: (*) denotes link-protected TE link labels\n                    Figure
      7: Link Protection Topology\n"
    title: 8.1.  Link Protection
  title: 8.  Facility Backup Protection
- contents:
  - '9.  Protocol Extensions

    '
  - contents:
    - "9.1.  Requirements\n   The functionality discussed in this document imposes
      the following\n   requirements on the signaling protocol.\n   o  The ingress
      of the LSP needs to have the ability to mandate/\n      request the use and
      recording of TE link labels at all hops along\n      the path of the LSP.\n
      \  o  When the use of TE link labels is mandated/requested for the path:\n      *
      \ the node recording the TE link label needs to have the ability\n         to
      indicate whether the recorded label is a TE link label.\n      *  the ingress
      needs to have the ability to delegate label stack\n         imposition by:\n
      \        +  explicitly mandating specific hops to be delegation hops, or\n         +
      \ requesting automatic delegation.\n      *  When explicit delegation is mandated
      or automatic delegation is\n         requested:\n         +  the ingress needs
      to have the ability to indicate the chosen\n            stacking approach, and\n
      \        +  the delegation hop needs to have the ability to indicate\n            that
      the recorded label is a delegation label.\n"
    title: 9.1.  Requirements
  - contents:
    - "9.2.  Attribute Flags TLV: TE Link Label\n   Bit Number 16: TE Link Label\n
      \  The presence of this flag in the LSP_ATTRIBUTES/\n   LSP_REQUIRED_ATTRIBUTES
      object [RFC5420] of a Path message indicates\n   that the ingress has requested/mandated
      the use and recording of TE\n   link labels at all hops along the path of this
      LSP.  When a node that\n   recognizes this flag but does not cater to the mandate
      because of\n   local policy receives a Path message carrying the\n   LSP_REQUIRED_ATTRIBUTES
      object with this flag set, it MUST send a\n   PathErr message with an error
      code of 'Routing Problem (24)' and an\n   error value of 'TE link label usage
      failure (70)'.  A transit hop\n   that caters to this request/mandate MUST also
      check for the presence\n   of other Attribute Flags introduced in this document
      (Sections 9.4\n   and 9.6) and process them as specified.  An ingress LER that
      sets\n   this bit MUST also set the \"label recording desired\" flag [RFC3209]\n
      \  in the SESSION_ATTRIBUTE object.\n"
    title: '9.2.  Attribute Flags TLV: TE Link Label'
  - contents:
    - "9.3.  RRO Label Sub-object Flag: TE Link Label\n   Flag (0x02): TE Link Label\n
      \  The presence of this flag indicates that the recorded label is a TE\n   link
      label.  This flag MUST be used by a node only if the use and\n   recording of
      TE link labels are requested/mandated for the LSP.\n"
    title: '9.3.  RRO Label Sub-object Flag: TE Link Label'
  - contents:
    - "9.4.  Attribute Flags TLV: LSI-D\n   Bit Number 17: Label Stack Imposition
      - Delegation (LSI-D)\n   Automatic Delegation: The presence of this flag in
      the LSP_ATTRIBUTES\n   object of a Path message indicates that the ingress has
      requested\n   automatic delegation of label stack imposition.  This flag MUST
      be\n   set in the LSP_ATTRIBUTES object of a Path message only if the use\n
      \  and recording of TE link labels are requested/mandated for this LSP.\n   If
      the transit hop does not support this flag, it MUST NOT use TE\n   link labels
      and use regular labels instead.  If the use of TE link\n   labels was mandated
      in the LSP_REQUIRED_ATTRIBUTES object, it MUST\n   send a PathErr message with
      an error code of 'Routing Problem (24)'\n   and an error value of 'TE link label
      usage failure (70)'.\n   Explicit Delegation: The presence of this flag in the
      HOP_ATTRIBUTES\n   sub-object [RFC7570] of an Explicit Route Object (ERO) in
      the Path\n   message indicates that the hop identified by the preceding IPv4
      or\n   IPv6 or Unnumbered Interface ID sub-object has been picked as an\n   explicit
      delegation hop.  The HOP_ATTRIBUTES sub-object carrying this\n   flag MUST have
      the R (Required) bit set.  This flag MUST be set in\n   the HOP_ATTRIBUTES sub-object
      of an ERO object in the Path message\n   only if the use and recording of TE
      link labels are requested/\n   mandated for this LSP.  If the hop recognizes
      this flag but is not\n   able to comply with this mandate because of local policy,
      it MUST\n   send a PathErr message with an error code of 'Routing Problem (24)'\n
      \  and an error value of 'Label stack imposition failure (71)'.\n"
    title: '9.4.  Attribute Flags TLV: LSI-D'
  - contents:
    - "9.5.  RRO Label Sub-object Flag: Delegation Label\n   Flag (0x04): Delegation
      Label\n   The presence of this flag indicates that the recorded label is a\n
      \  delegation label.  This flag MUST be used by a node only if the use\n   and
      recording of TE link labels and delegation are requested/mandated\n   for the
      LSP.\n"
    title: '9.5.  RRO Label Sub-object Flag: Delegation Label'
  - contents:
    - "9.6.  Attributes Flags TLV: LSI-D-S2E\n   Bit Number 18: Label Stack Imposition
      - Delegation - Stack to Reach\n   Egress (LSI-D-S2E)\n   The presence of this
      flag in the LSP_ATTRIBUTES object of a Path\n   message indicates that the ingress
      has chosen to use the \"Stack to\n   reach egress\" approach for stacking.  The
      absence of this flag in the\n   LSP_ATTRIBUTES object of a Path message indicates
      that the ingress\n   has chosen to use the \"Stack to reach delegation hop\"
      approach for\n   stacking.  This flag MUST be set in the LSP_ATTRIBUTES object
      of a\n   Path message only if the use and recording of TE link labels and\n
      \  delegation are requested/mandated for this LSP.  If the transit hop\n   is
      not able to support the \"Stack to reach egress\" approach, it MUST\n   send
      a PathErr message with an error code of 'Routing Problem (24)'\n   and an error
      value of 'Label stack imposition failure (71)'.\n"
    title: '9.6.  Attributes Flags TLV: LSI-D-S2E'
  - contents:
    - "9.7.  Attributes TLV: ETLD\n   The format of the ETLD Attributes TLV is shown
      in Figure 8.  The\n   Attribute TLV Type is 6.\n       0                   1
      \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |         Reserved                              |     ETLD      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                    Figure 8: The ETLD Attributes TLV\n   The presence of this
      TLV in the HOP_ATTRIBUTES sub-object of an RRO\n   object in the Path message
      indicates that the hop identified by the\n   preceding IPv4 or IPv6 or Unnumbered
      Interface ID sub-object supports\n   automatic delegation.  This attribute MUST
      be used only if the use\n   and recording of TE link labels are requested/mandated
      and automatic\n   delegation is requested for the LSP.\n   The ETLD field specifies
      the effective number of transport labels\n   that this hop (in relation to its
      position in the path) can\n   potentially send to its downstream hop.  It MUST
      be set to a non-zero\n   value.\n   The Reserved field is for future specification.
      \ It SHOULD be set to\n   zero on transmission and MUST be ignored on receipt
      to ensure future\n   compatibility.\n"
    title: '9.7.  Attributes TLV: ETLD'
  title: 9.  Protocol Extensions
- contents:
  - "10.  OAM Considerations\n   MPLS LSP ping and traceroute [RFC8029] are applicable
    for Segment\n   Routed RSVP-TE tunnels.  The existing procedures allow for the
    label\n   stack imposed at a delegation hop to be reported back in the Label\n
    \  Stack Sub-TLV in the MPLS echo reply for traceroute.\n"
  title: 10.  OAM Considerations
- contents:
  - '11.  IANA Considerations

    '
  - contents:
    - "11.1.  Attribute Flags: TE Link Label, LSI-D, LSI-D-S2E\n   IANA manages the
      'Attribute Flags' subregistry as part of the\n   'Resource Reservation Protocol-Traffic
      Engineering (RSVP-TE)\n   Parameters' registry located at <http://www.iana.org/assignments/\n
      \  rsvp-te-parameters>.  This document introduces three new Attribute\n   Flags:\n
      \  Bit  Name              Attribute   Attribute  RRO ERO Reference\n   No                     Flags
      Path  Flags Resv\n   16   TE Link Label     Yes         No         No  No  [RFC8577],\n
      \                                                        Section 9.2\n   17
      \  LSI-D             Yes         No         No  Yes [RFC8577],\n                                                         Section
      9.4\n   18   LSI-D-S2E         Yes         No         No  No  [RFC8577],\n                                                         Section
      9.6\n"
    title: '11.1.  Attribute Flags: TE Link Label, LSI-D, LSI-D-S2E'
  - contents:
    - "11.2.  Attribute TLV: ETLD\n   IANA manages the \"Attribute TLV Space\" registry
      as part of the\n   'Resource Reservation Protocol-Traffic Engineering (RSVP-TE)\n
      \  Parameters' registry located at <http://www.iana.org/assignments/\n   rsvp-te-parameters>.
      \ This document introduces a new Attribute TLV.\n   Type  Name  Allowed on     Allowed
      on    Allowed on  Reference\n               LSP_ATTRIBUTES LSP_REQUIRED  LSP
      Hop\n                              _ATTRIBUTES   Attributes\n   6     ETLD      No
      \              No         Yes       [RFC8577],\n                                                         Section
      9.7\n"
    title: '11.2.  Attribute TLV: ETLD'
  - contents:
    - "11.3.  Record Route Label Sub-object Flags: TE Link Label, Delegation\n       Label\n
      \  IANA manages the \"Record Route Object Sub-object Flags\" registry as\n   part
      of the \"Resource Reservation Protocol-Traffic Engineering (RSVP-\n   TE) Parameters\"
      registry located at <http://www.iana.org/assignments/\n   rsvp-te-parameters>.
      \ Prior to this document, this registry did not\n   include Label Sub-object
      Flags.  This document creates the addition\n   of a new subregistry for Label
      Sub-object Flags as shown below.\n      Flag  Name                    Reference\n
      \     0x1   Global Label            [RFC3209]\n      0x02  TE Link Label           [RFC8577],
      Section 9.3\n      0x04  Delegation Label        [RFC8577], Section 9.5\n"
    title: '11.3.  Record Route Label Sub-object Flags: TE Link Label, Delegation'
  - contents:
    - "11.4.  Error Codes and Error Values\n   IANA maintains a registry called \"Resource
      Reservation Protocol\n   (RSVP) Parameters\" with a subregistry called \"Error
      Codes and\n   Globally-Defined Error Value Sub-Codes\".  Within this subregistry
      is\n   a definition of the \"Routing Problem\" Error Code (24).  The\n   definition
      lists a number of error values that may be used with this\n   error code.  IANA
      has allocated further error values for use with\n   this Error Code as described
      in this document.  The resulting entry\n   in the registry is as follows.\n
      \     24  Routing Problem                             [RFC3209]\n          This
      Error Code has the following globally defined Error\n          Value sub-codes:\n
      \          70 = TE link label usage failure        [RFC8577]\n           71
      = Label stack imposition failure     [RFC8577]\n"
    title: 11.4.  Error Codes and Error Values
  title: 11.  IANA Considerations
- contents:
  - "12.  Security Considerations\n   This document does not introduce new security
    issues.  The security\n   considerations pertaining to the original RSVP protocol
    [RFC2205] and\n   RSVP-TE [RFC3209] and those that are described in [RFC5920]
    remain\n   relevant.\n"
  title: 12.  Security Considerations
- contents:
  - '13.  References

    '
  - contents:
    - "13.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and\n              S.
      Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version\n              1 Functional
      Specification\", RFC 2205,\n              DOI 10.17487/RFC2205, September 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2205>.\n   [RFC3031]  Rosen,
      E., Viswanathan, A., and R. Callon, \"Multiprotocol\n              Label Switching
      Architecture\", RFC 3031,\n              DOI 10.17487/RFC3031, January 2001,\n
      \             <https://www.rfc-editor.org/info/rfc3031>.\n   [RFC3209]  Awduche,
      D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow,
      \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, DOI
      10.17487/RFC3209, December 2001,\n              <https://www.rfc-editor.org/info/rfc3209>.\n
      \  [RFC4090]  Pan, P., Ed., Swallow, G., Ed., and A. Atlas, Ed., \"Fast\n              Reroute
      Extensions to RSVP-TE for LSP Tunnels\", RFC 4090,\n              DOI 10.17487/RFC4090,
      May 2005,\n              <https://www.rfc-editor.org/info/rfc4090>.\n   [RFC5420]
      \ Farrel, A., Ed., Papadimitriou, D., Vasseur, JP., and\n              A. Ayyangarps,
      \"Encoding of Attributes for MPLS LSP\n              Establishment Using Resource
      Reservation Protocol Traffic\n              Engineering (RSVP-TE)\", RFC 5420,
      DOI 10.17487/RFC5420,\n              February 2009, <https://www.rfc-editor.org/info/rfc5420>.\n
      \  [RFC7570]  Margaria, C., Ed., Martinelli, G., Balls, S., and\n              B.
      Wright, \"Label Switched Path (LSP) Attribute in the\n              Explicit
      Route Object (ERO)\", RFC 7570,\n              DOI 10.17487/RFC7570, July 2015,\n
      \             <https://www.rfc-editor.org/info/rfc7570>.\n   [RFC8029]  Kompella,
      K., Swallow, G., Pignataro, C., Ed., Kumar, N.,\n              Aldrin, S., and
      M. Chen, \"Detecting Multiprotocol Label\n              Switched (MPLS) Data-Plane
      Failures\", RFC 8029,\n              DOI 10.17487/RFC8029, March 2017,\n              <https://www.rfc-editor.org/info/rfc8029>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 13.1.  Normative References
  - contents:
    - "13.2.  Informative References\n   [RFC2961]  Berger, L., Gan, D., Swallow,
      G., Pan, P., Tommasi, F.,\n              and S. Molendini, \"RSVP Refresh Overhead
      Reduction\n              Extensions\", RFC 2961, DOI 10.17487/RFC2961, April
      2001,\n              <https://www.rfc-editor.org/info/rfc2961>.\n   [RFC5920]
      \ Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\",
      RFC 5920, DOI 10.17487/RFC5920, July 2010,\n              <https://www.rfc-editor.org/info/rfc5920>.\n
      \  [RFC8370]  Beeram, V., Ed., Minei, I., Shakir, R., Pacella, D., and\n              T.
      Saad, \"Techniques to Improve the Scalability of RSVP-TE\n              Deployments\",
      RFC 8370, DOI 10.17487/RFC8370, May 2018,\n              <https://www.rfc-editor.org/info/rfc8370>.\n
      \  [RFC8402]  Filsfils, C., Ed., Previdi, S., Ed., Ginsberg, L.,\n              Decraene,
      B., Litkowski, S., and R. Shakir, \"Segment\n              Routing Architecture\",
      RFC 8402, DOI 10.17487/RFC8402,\n              July 2018, <https://www.rfc-editor.org/info/rfc8402>.\n
      \  [RFC8491]  Tantsura, J., Chunduri, U., Aldrin, S., and L. Ginsberg,\n              \"Signaling
      Maximum SID Depth (MSD) Using IS-IS\", RFC 8491,\n              DOI 10.17487/RFC8491,
      November 2018,\n              <https://www.rfc-editor.org/info/rfc8491>.\n   [SEG-ROUTING]\n
      \             Bashandy, A., Ed., Filsfils, C., Ed., Previdi, S.,\n              Decraene,
      B., Litkowski, S., and R. Shakir, \"Segment\n              Routing with MPLS
      data plane\", Work in Progress,\n              draft-ietf-spring-segment-routing-mpls-18,
      December 2018.\n"
    title: 13.2.  Informative References
  title: 13.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Adrian Farrel, Kireeti Kompella,\n
    \  Markus Jork, and Ross Callon for their input from discussions.\n   Adrian Farrel
    provided a review and a text suggestion for clarity and\n   readability.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following individuals contributed to this document:\n   Raveendra
    Torvi\n   Juniper Networks\n   Email: rtorvi@juniper.net\n   Chandra Ramachandran\n
    \  Juniper Networks\n   Email: csekar@juniper.net\n   George Swallow\n   Email:
    swallow.ietf@gmail.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Harish Sitaraman\n   Juniper Networks\n   1133 Innovation
    Way\n   Sunnyvale, CA  94089\n   United States of America\n   Email: harish.ietf@gmail.com\n
    \  Vishnu Pavan Beeram\n   Juniper Networks\n   10 Technology Park Drive\n   Westford,
    MA  01886\n   United States of America\n   Email: vbeeram@juniper.net\n   Tejal
    Parikh\n   Verizon\n   400 International Parkway\n   Richardson, TX  75081\n   United
    States of America\n   Email: tejal.parikh@verizon.com\n   Tarek Saad\n   Cisco
    Systems\n   2000 Innovation Drive\n   Kanata, Ontario  K2K 3E8\n   Canada\n   Email:
    tsaad.net@gmail.com\n"
  title: Authors' Addresses
