- title: __initial_text__
  contents:
  - "       Congestion Exposure (ConEx) Concepts, Abstract Mechanism,\n          \
    \                  and Requirements\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an abstract mechanism by which senders inform\n\
    \   the network about the congestion recently encountered by packets in\n   the\
    \ same flow.  Today, network elements at any layer may signal\n   congestion to\
    \ the receiver by dropping packets or by Explicit\n   Congestion Notification\
    \ (ECN) markings, and the receiver passes this\n   information back to the sender\
    \ in transport-layer feedback.  The\n   mechanism described here enables the sender\
    \ to also relay this\n   congestion information back into the network in-band\
    \ at the IP layer,\n   such that the total amount of congestion from all elements\
    \ on the\n   path is revealed to all IP elements along the path, where it could,\n\
    \   for example, be used to provide input to traffic management.  This\n   mechanism\
    \ is called Congestion Exposure, or ConEx.  The companion\n   document, \"Congestion\
    \ Exposure (ConEx) Concepts and Use Cases\"\n   (RFC 6789), provides the entry\
    \ point to the set of ConEx\n   documentation.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7713.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Overview  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     2.1.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   6\n   3.  Requirements for the ConEx Abstract Mechanism . . . . . .\
    \ . .   7\n     3.1.  Requirements for ConEx Signals  . . . . . . . . . . . .\
    \ .   7\n     3.2.  Constraints on the Audit Function . . . . . . . . . . . .\
    \   8\n     3.3.  Requirements for Non-abstract ConEx Specifications  . . .  \
    \ 9\n   4.  Encoding Congestion Exposure  . . . . . . . . . . . . . . . .  12\n\
    \     4.1.  Naive Encoding  . . . . . . . . . . . . . . . . . . . . .  12\n  \
    \   4.2.  Null Encoding . . . . . . . . . . . . . . . . . . . . . .  13\n    \
    \ 4.3.  ECN-Based Encoding  . . . . . . . . . . . . . . . . . . .  13\n     4.4.\
    \  Independent Bits  . . . . . . . . . . . . . . . . . . . .  14\n     4.5.  Codepoint\
    \ Encoding  . . . . . . . . . . . . . . . . . . .  14\n     4.6.  Units Implied\
    \ by an Encoding  . . . . . . . . . . . . . .  15\n   5.  Congestion Exposure\
    \ Components  . . . . . . . . . . . . . . .  16\n     5.1.  Network Devices (Not\
    \ Modified)  . . . . . . . . . . . . .  16\n     5.2.  Modified Senders  . . .\
    \ . . . . . . . . . . . . . . . . .  16\n     5.3.  Receivers (Optionally Modified)\
    \ . . . . . . . . . . . . .  17\n     5.4.  Policy Devices  . . . . . . . . .\
    \ . . . . . . . . . . . .  17\n       5.4.1.  Congestion Monitoring Devices .\
    \ . . . . . . . . . . .  18\n       5.4.2.  Rest-of-Path Congestion Monitoring\
    \  . . . . . . . . .  18\n       5.4.3.  Congestion Policers . . . . . . . . .\
    \ . . . . . . . .  18\n     5.5.  Audit . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  19\n   6.  Support for Incremental Deployment  . . . . . . .\
    \ . . . . . .  23\n   7.  Security Considerations . . . . . . . . . . . . . .\
    \ . . . . .  25\n   8.  References  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  27\n     8.1.  Normative References  . . . . . . . . . . . . . . .\
    \ . . .  27\n     8.2.  Informative References  . . . . . . . . . . . . . . .\
    \ . .  27\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  30\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .\
    \  30\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes an abstract mechanism by which,\
    \ to a first\n   approximation, senders inform the network about the congestion\n\
    \   encountered by packets earlier in the same flow.  It is not a\n   complete\
    \ protocol specification because it is known that designing an\n   encoding (e.g.,\
    \ packet formats, codepoint allocations, etc.) is\n   likely to entail compromises\
    \ that preclude some uses of the protocol.\n   The goal of this document is to\
    \ provide a framework for developing\n   and testing algorithms to evaluate the\
    \ benefits of the ConEx protocol\n   and to evaluate the consequences of the compromises\
    \ in various\n   different encoding designs.  This document lays out requirements\
    \ for\n   concrete protocol specifications.\n   A companion document [RFC6789]\
    \ provides the entry point to the set of\n   ConEx documentation.  It outlines\
    \ concepts that are prerequisites to\n   understanding why ConEx is useful, and\
    \ it outlines various ways that\n   ConEx might be used.\n"
- title: 2.  Overview
  contents:
  - "2.  Overview\n   As typical end-to-end transport protocols continually seek out\
    \ more\n   network capacity, network elements signal whenever congestion\n   results,\
    \ and the transports are responsible for controlling this\n   network congestion\
    \ [RFC5681].  The more a transport tries to use\n   capacity that others want\
    \ to use, the more congestion signals will be\n   attributable to that transport.\
    \  Likewise, the more transport\n   sessions sustained by a user and the longer\
    \ the user sustains them,\n   the more congestion signals will be attributable\
    \ to that user.  The\n   goal of ConEx is to ensure that the resulting congestion\
    \ signals are\n   sufficiently visible and robust, because they are an ideal metric\
    \ for\n   networks to use as the basis of traffic management or other related\n\
    \   functions.\n   Networks indicate congestion by three possible signals: packet\
    \ loss,\n   ECN marking, or queueing delay.  ECN marking and some packet loss\
    \ may\n   be the outcome of Active Queue Management (AQM), which the network\n\
    \   uses to warn senders to reduce their rates.  Packet loss is also the\n   natural\
    \ consequence of complete exhaustion of a buffer or other\n   network resource.\
    \  Some experimental transport protocols and TCP\n   variants infer impending\
    \ congestion from increasing queuing delay.\n   However, delay is too amorphous\
    \ to use as a congestion metric.  In\n   this and other ConEx documents, the term\
    \ 'congestion signals' is\n   generally used solely for ECN markings and packet\
    \ losses because they\n   are unambiguous signals of congestion.\n   In both cases,\
    \ the congestion signals follow the route indicated in\n   Figure 1.  A congested\
    \ network device sends a signal in the data\n   stream on the forward path to\
    \ the transport receiver, the receiver\n   passes it back to the sender through\
    \ transport-level feedback, and\n   the sender makes some congestion control adjustment.\n\
    \   This document extends the capabilities of the Internet protocol suite\n  \
    \ with the addition of a new Congestion Exposure signal.  To a first\n   approximation,\
    \ this signal (also shown in Figure 1) relays the\n   congestion information from\
    \ the transport sender back through the\n   internetwork layer where it is visible\
    \ to any interested\n   internetwork-layer devices along the forward path.  This\
    \ document\n   frames the engineering problem of designing the ConEx Signal. \
    \ The\n   requirements are described in Section 3 and some example encodings\n\
    \   are presented in Section 4.  Section 5 describes all of the protocol\n   components.\n\
    \   This new signal is expressly designed to support a variety of new\n   policy\
    \ mechanisms that might be used to instrument, monitor, or\n   manage traffic.\
    \  The policy devices are not shown in Figure 1 but\n   might be placed anywhere\
    \ along the forward data path (see\n   Section 5.4).\n   ,---------.         \
    \                                      ,---------.\n   |Transport|           \
    \                                    |Transport|\n   | Sender  |   .         \
    \                                  |Receiver |\n   |         |  /|___________________________________________|\
    \         |\n   |     ,-<---------------Congestion-Feedback-Signals--<--------.\
    \     |\n   |     |   |/                                              |   |  \
    \   |\n   |     |   |\\           Transport Layer Feedback Flow      |   |   \
    \  |\n   |     |   | \\  ___________________________________________|   |    \
    \ |\n   |     |   |  \\|                                           |   |     |\n\
    \   |     |   |   '         ,-----------.               .     |   |     |\n  \
    \ |     |   |_____________|           |_______________|\\    |   |     |\n   |\
    \     |   |    IP Layer |           |  Data Flow      \\   |   |     |\n   | \
    \    |   |             |(Congested)|                  \\  |   |     |\n   |  \
    \   |   |             |  Network  |--Congestion-Signals--->-'     |\n   |    \
    \ |   |             |  Device   |                    \\|         |\n   |     |\
    \   |             |           |                    /|         |\n   |     `----------->--(new)-IP-Layer-ConEx-Signals-------->|\
    \         |\n   |         |             |           |                  /  |  \
    \       |\n   |         |_____________|           |_______________  /   |    \
    \     |\n   |         |             |           |               |/    |      \
    \   |\n   `---------'             `-----------'               '     `---------'\n\
    \            Figure 1: The Flow of Congestion and ConEx Signals\n   Since the\
    \ policy devices can affect how traffic is treated, it is\n   assumed that there\
    \ is an intrinsic motivation for users,\n   applications, or operating systems\
    \ to understate the congestion that\n   they are causing.  Therefore, it is important\
    \ to be able to audit\n   ConEx Signals and to be able to apply sufficient sanction\
    \ to\n   discourage cheating of congestion policies.  The general approach to\n\
    \   auditing is to count signals on the forward path to confirm that\n   there\
    \ are never fewer ConEx Signals than congestion signals.  Many\n   ConEx design\
    \ constraints come from the need to assure that the audit\n   function is sufficiently\
    \ robust.  The audit function is described in\n   Section 5.5; however, significant\
    \ portions of this document (and\n   prior research [Refb-dis]) are motivated\
    \ by issues relating to the\n   audit function and making it robust.\n   The congestion\
    \ and ConEx Signals shown in Figure 1 represent a series\n   of discrete events:\
    \ ECN marks or lost packets, carried by the forward\n   data stream and fed back\
    \ into the internetwork layer.  The policy and\n   audit functions are most likely\
    \ to act on the accumulated values of\n   these signals, for which we use the\
    \ term \"volume\".  For example,\n   \"traffic volume\" is the total number of\
    \ bytes delivered optionally\n   over a specified time interval and over some\
    \ aggregate of traffic\n   (e.g., all traffic from a site), while \"loss volume\"\
    \ is the total\n   amount of bytes discarded from some aggregate over an interval.\
    \  The\n   term \"congestion-volume\" is defined precisely in [RFC6789].  Note\n\
    \   that volume per unit time is average rate.\n   A design goal of the ConEx\
    \ protocol is that the important policy\n   mechanisms can be implemented per\
    \ logical link without per-flow state\n   (see Section 5.4).  However, the trade-off\
    \ is that per-flow state\n   could be needed to audit ConEx Signals (Section 5.5).\
    \  This is\n   justified in that i) auditing at the edges, with a limited number\
    \ of\n   flows, enables policy elsewhere, including in the core, without any\n\
    \   per-flow state; ii) auditing can use soft flow state, which does not\n   require\
    \ route pinning.\n   There is a long standing argument over units of congestion:\
    \ bytes vs\n   packets (see [RFC7141] and its references).  Section 4.6 explains\
    \ why\n   this problem must be addressed carefully.  However, this document\n\
    \   does not take a strong position on this issue.  Nonetheless, it does\n   require\
    \ that the units of congestion must be an explicitly stated\n   property of any\
    \ proposed encoding, and the consequences of that\n   design decision must be\
    \ evaluated along with other aspects of the\n   design.\n   To be successful,\
    \ the ConEx protocol needs to have the property that\n   the relevant stakeholders\
    \ each have the incentive to unilaterally\n   start on each stage of partial deployment,\
    \ which in turn creates\n   incentives for further deployment.  Furthermore, legacy\
    \ systems that\n   will never be upgraded do not become a barrier to deploying\
    \ ConEx.\n   Issues relating to partial deployment are described in Section 6.\n\
    \   Note that ConEx Signals are not intended to be used for fine-grained\n   congestion\
    \ control.  They are anticipated to be most useful at longer\n   time scales and/or\
    \ at coarser granularity than single microflows.\n   For example, the total congestion\
    \ caused by a user might serve as an\n   input to higher-level policy or accountability\
    \ functions designed to\n   create incentives for improving user behavior, such\
    \ as choosing to\n   send large quantities of data at off-peak times, at lower\
    \ data rates,\n   or with less aggressive protocols such as Low Extra Delay Background\n\
    \   Transport (LEDBAT) [RFC6817]; see [RFC6789].\n   Ultimately, ConEx Signals\
    \ have the potential to provide a mechanism\n   to regulate global Internet congestion.\
    \  From the earliest days of\n   research on congestion control, there has been\
    \ a concern that there\n   is no mechanism to prevent transport designers from\
    \ incrementally\n   making protocols more aggressive without bound and spiraling\
    \ to a\n   \"tragedy of the commons\" Internet congestion collapse.  The \"TCP\n\
    \   friendly\" paradigm was created in part to forestall this failure.\n   However,\
    \ it no longer commands any authority because it has little to\n   say about the\
    \ Internet of today, which has moved beyond the scaling\n   range of standard\
    \ TCP.  As a consequence, many transports and\n   applications are opening arbitrarily\
    \ large numbers of connections or\n   using arbitrary levels of aggressiveness.\
    \  ConEx represents a\n   recognition that the IETF cannot regulate this space\
    \ directly because\n   it concerns the behaviour of users and applications, not\
    \ individual\n   transport protocols.  Instead, the IETF can give network operators\n\
    \   the protocol tools to arbitrate the space themselves with better bulk\n  \
    \ traffic management.  This, in turn, should create incentives for\n   users and\
    \ designers of applications and of transport protocols to be\n   more mindful\
    \ about contributing to congestion.\n"
- title: 2.1.  Terminology
  contents:
  - "2.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n   ConEx Signals in IP packet headers from the sender to\
    \ the network:\n   Not-ConEx:  The transport (or at least this packet) is not\
    \ using\n      ConEx.\n   ConEx-Capable:  The transport is using ConEx.  This\
    \ is the opposite\n      of Not-ConEx.\n   ConEx Signal:  A signal in a packet\
    \ sent by a ConEx-capable\n      transport.  It carries at least one of the following\
    \ signals:\n      Re-Echo-Loss:  The transport has experienced a loss.\n     \
    \ Re-Echo-ECN:  The transport has detected an ECN Congestion\n         Experienced\
    \ (CE) mark.\n      Credit:  The transport is building up credit to signal advance\n\
    \         notice of the risk of packets contributing to congestion, in\n     \
    \    contrast to signalling only after inherently delayed feedback\n         of\
    \ actual congestion.\n      ConEx-Not-Marked:  The transport is ConEx-capable\
    \ but is not\n         signaling Re-Echo-Loss, Re-Echo-ECN, or Credit.\n   ConEx-Marked:\
    \  At least one of Re-Echo-Loss, Re-Echo-ECN, or Credit.\n   ConEx-Re-Echo:  At\
    \ least one of Re-Echo-Loss or Re-Echo-ECN.\n"
- title: 3.  Requirements for the ConEx Abstract Mechanism
  contents:
  - "3.  Requirements for the ConEx Abstract Mechanism\n   First-time readers may\
    \ wish to skim this section, since it is more\n   understandable having read the\
    \ entire document.\n"
- title: 3.1.  Requirements for ConEx Signals
  contents:
  - "3.1.  Requirements for ConEx Signals\n   Ideally, all the following requirements\
    \ would be met by a Congestion\n   Exposure Signal:\n   a.  The ConEx Signal SHOULD\
    \ be visible to internetwork-layer devices\n       along the entire path from\
    \ the transport sender to the transport\n       receiver.  Equivalently, it SHOULD\
    \ be present in the IPv4 or IPv6\n       header and in the outermost IP header\
    \ if using IP-in-IP\n       tunneling.  It MAY need to be visible if other encapsulating\n\
    \       headers are used to interconnect networks.  The ConEx Signal\n       SHOULD\
    \ be immutable once set by the transport sender.  A\n       corollary of these\
    \ requirements is that the chosen ConEx encoding\n       SHOULD pass silently\
    \ without modification through preexisting\n       networking gear.\n   b.  The\
    \ ConEx Signal SHOULD be useful under only partial deployment.\n       A minimal\
    \ deployment SHOULD only require changes to transport\n       senders.  Furthermore,\
    \ partial deployment SHOULD create\n       incentives for additional deployment,\
    \ both in terms of enabling\n       ConEx on more devices and adding richer features\
    \ to existing\n       devices.  Nonetheless, ConEx deployment need never be universal,\n\
    \       and it is anticipated that some hosts and some transports may\n      \
    \ never support the ConEx protocol and some networks may never use\n       the\
    \ ConEx Signals.\n   c.  The ConEx Signal SHOULD be timely.  There will be a minimum\
    \ delay\n       of one RTT and often longer if the transport protocol sends\n\
    \       infrequent feedback (consider Real-time Transport Control\n       Protocol\
    \ (RTCP) [RFC3550] [RFC6679], for example).\n   d.  The ConEx Signal SHOULD be\
    \ accurate and auditable.  The general\n       approach for auditing is to observe\
    \ the volume of congestion\n       signals and ConEx Signals on the forward data\
    \ path and verify\n       that the ConEx Signals do not underrepresent the congestion\n\
    \       signals (see Section 5.5).\n   e.  The ConEx Signals for packet loss and\
    \ ECN marking SHOULD have\n       distinct encodings because they are likely to\
    \ require different\n       auditing techniques.\n   f.  Additionally, there SHOULD\
    \ be an auditable ConEx Credit signal.\n       A sender can use Credit to indicate\
    \ potential future congestion,\n       for example, as is often seen during startup.\
    \  ConEx Credit is\n       intended to overestimate congestion actually experienced\
    \ across\n       the network.\n   It is already known that implementing ConEx\
    \ Signals is likely to\n   entail some compromises, and therefore, all the requirements\
    \ above\n   are expressed with the keyword \"SHOULD\" rather than \"MUST\".  The\
    \ only\n   mandatory requirement is that a concrete protocol description MUST\n\
    \   give sound reasoning if it chooses not to meet some requirement.\n"
- title: 3.2.  Constraints on the Audit Function
  contents:
  - "3.2.  Constraints on the Audit Function\n   The role of the audit function and\
    \ constraints on it are described in\n   Section 5.5.  There is no intention to\
    \ standardise the audit\n   function.  However, it is necessary to lay down the\
    \ following\n   normative constraints on audit behaviour so that transport designers\n\
    \   will know what to design against and implementers of audit devices\n   will\
    \ know what pitfalls to avoid:\n   Minimal False Hits:  Audit SHOULD introduce\
    \ minimal false hits for\n      honest flows.\n   Minimal False Misses:  Audit\
    \ SHOULD quickly detect and sanction\n      dishonest flows, ideally on the first\
    \ dishonest packet.\n   Transport Oblivious:  Audit SHOULD NOT be designed around\
    \ one\n      particular rate response, such as any particular TCP congestion\n\
    \      control algorithm or one particular resource-sharing regime such\n    \
    \  as TCP friendliness [RFC5348].  An important goal is to give\n      ingress\
    \ networks the freedom to unilaterally allow different rate\n      responses to\
    \ congestion and different resource sharing regimes\n      [Evol_cc] without having\
    \ to coordinate with other networks over\n      details of individual flow behaviour.\n\
    \   Sufficient Sanction:  Audit SHOULD introduce sufficient sanction\n      (e.g.,\
    \ loss in goodput) such that senders cannot gain from\n      understating congestion.\n\
    \   Proportionate Sanction:  To the extent that the audit might be\n      subject\
    \ to false hits, the sanction SHOULD be proportionate to the\n      degree to\
    \ which congestion is understated.  If the audit over-\n      punishes, attackers\
    \ will find ways to harness it into amplifying\n      attacks on others.  Ideally\
    \ the audit should, in the long run,\n      cause the user to get no better performance\
    \ than they would get by\n      being accurate.\n   Manage Memory Exhaustion:\
    \  Audit SHOULD be able to counter state-\n      exhaustion attacks.  For instance,\
    \ if the audit function uses flow\n      state, it should not be possible for\
    \ senders to exhaust its memory\n      capacity by gratuitously sending numerous\
    \ packets, each with a\n      different flow ID.\n   Identifier Accountability:\
    \  Audit SHOULD NOT be vulnerable to\n      'identity whitewashing', where a transport\
    \ can label a flow with a\n      new ID more cheaply than paying the cost of continuing\
    \ to use its\n      current ID [CheapPseud].\n"
- title: 3.3.  Requirements for Non-abstract ConEx Specifications
  contents:
  - "3.3.  Requirements for Non-abstract ConEx Specifications\n   An experimental\
    \ ConEx specification SHOULD describe the following\n   protocol details:\n  \
    \ Network Layer:\n      A.  the specific ConEx Signal encodings with packet formats,\
    \ bit\n          fields, and/or codepoints;\n      B.  an inventory of invalid\
    \ combinations of flags or invalid\n          codepoints in the encoding, as well\
    \ as whether security\n          gateways should normalise, discard, or ignore\
    \ such invalid\n          encodings, and what values they should be considered\n\
    \          equivalent to by ConEx-aware elements;\n      C.  an inventory of any\
    \ conflated signals or any other effects\n          that are known to compromise\
    \ signal integrity;\n      D.  whether the source is responsible for allowing\
    \ for the round-\n          trip delay in ConEx Signals (e.g., using a Credit\
    \ marking),\n          and if so, whether Credit is maintained for the duration\
    \ of a\n          flow or degrades over time, and what defines the end of the\n\
    \          duration of a flow;\n      E.  a specification for signal units (bytes\
    \ vs. packets, etc.),\n          any approximations allowed, and the algorithms\
    \ to do any\n          implied conversions or accounting;\n      F.  if the units\
    \ are bytes, a definition of which headers are\n          included in the size\
    \ of the packet;\n      G.  how tunnels should propagate the ConEx encoding;\n\
    \      H.  whether the encoding fields are mutable or not, to ensure that\n  \
    \        header authentication, checksum calculation, etc., process\n        \
    \  them correctly; a ConEx encoding field SHOULD be immutable\n          end-to-end,\
    \ then endpoints can detect if it has been tampered\n          with in transit;\n\
    \      I.  if a specific encoding allows mutability (e.g., at proxies),\n    \
    \      then an inventory of invalid transitions between codepoints;\n        \
    \  in all encodings, transitions from any ConEx marking to Not-\n          ConEx\
    \ MUST be invalid;\n      J.  a statement that the ConEx encoding is only applicable\
    \ to\n          unicast and anycast and that forwarding elements should\n    \
    \      silently ignore any ConEx signalling on multicast packets\n          (they\
    \ should be forwarded unchanged);\n      K.  the definition of any extensibility;\n\
    \      L.  backward and forward compatibility and potential migration\n      \
    \    strategies; in all cases, a ConEx encoding MUST be arranged so\n        \
    \  that legacy transport senders implicitly send Not-ConEx;\n      M.  any (optional)\
    \ modification to data-plane forwarding dependent\n          on the encoding (e.g.,\
    \ preferential discard, interaction with\n          Diffserv, ECN, etc.); and\n\
    \      N.  any warning or error messages relevant to the encoding.\n      Note\
    \ regarding item J on multicast: A multicast tree may involve\n      different\
    \ levels of congestion on each leg.  Any traffic\n      management can only monitor\
    \ or control multicast congestion at or\n      near each receiver.  It would make\
    \ no sense for the sender to try\n      to expose \"whole-path congestion\" in\
    \ sent packets because it\n      cannot hope to describe all the differing congestion\
    \ levels on\n      every leg of the tree.\n   Transport Layer:\n      A.  a specification\
    \ of any required changes to congestion feedback\n          in particular transport\
    \ protocols;\n      B.  a specification (or, minimally, a recommendation) for\
    \ how a\n          transport should estimate credits at the beginning of a\n \
    \         connection and while it is in progress;\n      C.  a specification of\
    \ whether any other protocol options should\n          (or must) be enabled along\
    \ with an implementation of ConEx\n          (e.g., at least attempting to negotiate\
    \ ECN and Selective\n          Acknowledgement (SACK) capability);\n      D. \
    \ a specification of any configuration that a ConEx stack may\n          require\
    \ (or, preferably, confirmation that it requires no\n          configuration);\
    \ and\n      E.  a specification of the statistics that a protocol stack should\n\
    \          log for each type of marking on a per-flow or aggregate basis.\n  \
    \ Security:\n      A.  an example of a strong audit algorithm suitable for detecting\n\
    \          if a single flow is misstating congestion; this algorithm\n       \
    \   should present minimal false results but need not have optimal\n         \
    \ scaling properties (e.g., may need per-flow state).\n      B.  an example of\
    \ an audit algorithm suitable for detecting\n          misstated congestion in\
    \ a large aggregate (e.g., no per-flow\n          state).\n      C.  a definition\
    \ of the level of ConEx-Re-Echo and ConEx-Credit\n          signals that will\
    \ be sufficient to pass audit (see\n          Section 5.5).\n   The possibility\
    \ exists that these specifications overconstrain the\n   ConEx design and can\
    \ not be fully satisfied.  An important part of\n   the evaluation of any particular\
    \ design will be a thorough inventory\n   of all ways in which it might fail to\
    \ satisfy these specifications.\n"
- title: 4.  Encoding Congestion Exposure
  contents:
  - "4.  Encoding Congestion Exposure\n   Most protocol specifications start with\
    \ a description of packet\n   formats and codepoints with their associated meanings.\
    \  This document\n   does not: It is already known that choosing the encoding\
    \ for ConEx is\n   likely to entail some engineering compromises that have the\
    \ potential\n   to reduce the protocol's usefulness in some settings.  For instance,\n\
    \   the experimental ConEx encoding chosen for IPv6 [CONEX-DESTOPT] had\n   to\
    \ make compromises on tunnelling.  Rather than making these\n   engineering choices\
    \ prematurely, this document sidesteps the encoding\n   problem by making it abstract.\
    \  It describes several different\n   representations of ConEx Signals, none of\
    \ which are specified to the\n   level of specific bits or codepoints.\n   The\
    \ goal of this approach is to be as complete as possible for\n   discovering the\
    \ potential usage and capabilities of the ConEx\n   protocol, so we have some\
    \ hope of making optimal design decisions\n   when choosing the encoding.  Even\
    \ if experiments reveal particular\n   problems due to the encoding, then this\
    \ document will still serve as\n   a reference model.\n"
- title: 4.1.  Naive Encoding
  contents:
  - "4.1.  Naive Encoding\n   For tutorial purposes, it is helpful to describe a naive\
    \ encoding of\n   the ConEx protocol for TCP and similar protocols: set a bit\
    \ (not\n   specified here) in the IP header on each retransmission and on each\n\
    \   ECN-signalled window reduction.  Network devices along the forward\n   path\
    \ can see this bit and act on it.  For example, any device along\n   the path\
    \ might limit the rate of all traffic if the rate of marked\n   (congested) packets\
    \ exceeds a threshold.\n   This simple encoding is sufficient to illustrate many\
    \ of the benefits\n   envisioned for ConEx.  At first glance, it looks like it\
    \ might\n   motivate people to deploy and use it.  It is a one-line code change\n\
    \   that a small number of OS developers and content providers could\n   unilaterally\
    \ deploy across a significant fraction of all Internet\n   traffic.  However,\
    \ this encoding does not support auditing so it\n   would also motivate users\
    \ and/or applications to misrepresent the\n   congestion that they are causing\
    \ [RFC3514].  As a consequence, the\n   naive encoding is not likely to be trusted\
    \ and thus creates its own\n   disincentives for deployment.\n   Nonetheless,\
    \ this Naive encoding does present a clear mental model of\n   how the ConEx protocol\
    \ might function under various uses.  It is\n   useful for thought experiments\
    \ where it can be stipulated that all\n   participants are honest and it does\
    \ illustrate some of the incentives\n   that might be introduced by ConEx.\n"
- title: 4.2.  Null Encoding
  contents:
  - "4.2.  Null Encoding\n   In limited contexts, it is possible to implement ConEx-like\
    \ functions\n   without any signals at all by measuring rest-of-path congestion\n\
    \   directly from TCP headers.  The algorithm is to keep at least one RTT\n  \
    \ of past TCP headers and match each new header against the history to\n   count\
    \ duplicate data.\n   This could implement many ConEx policies, without any explicit\n\
    \   protocol.  It is fairly easy to implement, at least at low rate\n   (e.g.,\
    \ in a software-based edge router).  However, it would only be\n   useful in cases\
    \ where the network operator can see the TCP headers.\n   At the time of writing\
    \ (2014), those cases are the majority of\n   traffic because UDP, IPsec, and\
    \ VPN tunnels are used far less than\n   Secure Socket Layer (SSL) or Transport\
    \ Layer Security (TLS) over\n   TCP/IP, which do not hide TCP sequence numbers\
    \ from network devices.\n   However, anyone specifically intending to avoid the\
    \ attention of a\n   congestion policy device would only have to hide their TCP\
    \ headers\n   from the network operator (e.g., by using a VPN tunnel).\n"
- title: 4.3.  ECN-Based Encoding
  contents:
  - "4.3.  ECN-Based Encoding\n   The re-ECN specification [RE-ECN-TCP] presents an\
    \ encoding of ConEx\n   in IPv4 and IPv6 that was tightly integrated with ECN\
    \ encoding in\n   order to fit into the IPv4 header.  Any individual packet may\
    \ need to\n   represent any ECN codepoint and any ConEx Signal value independently.\n\
    \   So, ideally, their encoding should be entirely independent.  However,\n  \
    \ given the limited number of header bits and/or codepoints, re-ECN\n   chooses\
    \ to partially share codepoints and to re-echo both losses and\n   ECN with just\
    \ one codepoint.\n   The central theme of the re-ECN work is an audit mechanism\
    \ that\n   provides sufficient disincentives against misrepresenting congestion\n\
    \   [RE-ECN-MOTIVATION].  It is analyzed extensively in Briscoe's PhD\n   dissertation\
    \ [Refb-dis].  For a tutorial background on re-ECN\n   motivation and techniques,\
    \ see [Re-fb] and [FairerFaster].\n   Re-ECN is an example of one chosen set of\
    \ compromises attempting to\n   meet the requirements of Section 3.  The present\
    \ document takes a\n   step back, aiming to state the ideal requirements in order\
    \ to allow\n   the Internet community to assess whether different compromises\
    \ might\n   be better.\n   The problem with re-ECN is that it requires that receivers\
    \ be ECN\n   enabled in addition to sender changes.  Newer encodings\n   [CONEX-DESTOPT]\
    \ overcome this problem by being able to represent loss\n   and ECN-based congestion\
    \ separately.\n"
- title: 4.4.  Independent Bits
  contents:
  - "4.4.  Independent Bits\n   This encoding involves flag bits, each of which the\
    \ sender can set\n   independently to indicate to the network one of the following\
    \ four\n   signals:\n   ConEx (Not-ConEx):  The transport is (or is not) using\
    \ ConEx with\n      this packet (network-layer encoding requirement L in Section\
    \ 3.3\n      says the protocol must be arranged so that legacy transport\n   \
    \   senders implicitly send Not-ConEx).\n   Re-Echo-Loss (Not-Re-Echo-Loss): \
    \ The transport has (or has not)\n      experienced a loss.\n   Re-Echo-ECN (Not-Re-Echo-ECN):\
    \  The transport has (or has not)\n      experienced ECN-signalled congestion.\n\
    \   Credit (Not-Credit):  The transport is (or is not) building up\n      congestion\
    \ credit (see Section 5.5 on the audit function).\n   A packet with ConEx set,\
    \ combined with all the three other flags\n   cleared, implies ConEx-Not-Marked.\n\
    \   This encoding does not imply any exclusion property among the\n   signals.\
    \  Multiple types of congestion (ECN, loss) can be signalled\n   on the same ACK.\
    \  So, ideally, a ConEx sender would be able to\n   reflect these in the next\
    \ packet.  However, there will be many\n   invalid combinations of flags (e.g.,\
    \ Not-ConEx combined with any of\n   the ConEx-Marked flags), which a malicious\
    \ sender could use to\n   advantage against naive policy devices that only check\
    \ each flag\n   separately.\n   As long as the packets in a flow have uniform\
    \ sizes, it does not\n   matter whether the units of congestion are packets or\
    \ bytes.\n   However, if an application sends very irregular packet sizes, it\
    \ may\n   be necessary for the sender to mark multiple packets to avoid being\n\
    \   in technical violation of an audit function measuring in bytes (see\n   Section\
    \ 4.6).\n"
- title: 4.5.  Codepoint Encoding
  contents:
  - "4.5.  Codepoint Encoding\n   This encoding involves signaling one of the following\
    \ five\n   codepoints:\n   ENUM {Not-ConEx, ConEx-Not-Marked, Re-Echo-Loss, Re-Echo-ECN,\
    \ Credit}\n   Each named codepoint has the same meaning as in the encoding using\n\
    \   independent bits in the previous section.  The use of any one\n   codepoint\
    \ implies the negative of all the others.\n   Inherently, the semantics of most\
    \ of the enumerated codepoints are\n   mutually exclusive.  'Credit' is the only\
    \ one that might need to be\n   used in combination with either Re-Echo-Loss or\
    \ Re-Echo-ECN, but even\n   that requirement is questionable.  It must not be\
    \ forgotten that the\n   enumerated encoding loses the flexibility to signal these\
    \ two\n   combinations, whereas the encoding with four independent bits is not\n\
    \   so limited.  Alternatively, two extra codepoints could be assigned to\n  \
    \ these two combinations of semantics.  The comment in the previous\n   section\
    \ about units also applies.\n"
- title: 4.6.  Units Implied by an Encoding
  contents:
  - "4.6.  Units Implied by an Encoding\n   The following comments apply generally\
    \ to all the other encodings.\n   Congestion can be due to exhaustion of bit-carrying\
    \ capacity or\n   exhaustion of packet-processing power.  When a packet is discarded\
    \ or\n   marked to indicate congestion, there is no easy way to know whether\n\
    \   the lost or marked packet signifies bit congestion or packet\n   congestion.\
    \  The above ConEx encodings that rely on marking packets\n   suffer from the\
    \ same ambiguity.\n   This problem is most acute when audit needs to check that\
    \ one count\n   of markings matches another.  For example, if there are ConEx\n\
    \   markings on three large (1500 B) packets, is that sufficient to match\n  \
    \ the loss of five small (60 B) packets?  If a packet marking is\n   defined to\
    \ mean all the bytes in the packet are marked, then we have\n   4500 B of ConEx-Marked\
    \ data against 300 B of lost data, which is\n   easily sufficient.  If instead\
    \ we are counting packets, then we have\n   three ConEx packets against five lost\
    \ packets, which is not\n   sufficient.  This problem will not arise when all\
    \ the packets in a\n   flow are the same size, but a choice needs to be made for\
    \ flows in\n   which packet sizes vary, such as BGP, SPDY, and some variable-rate\n\
    \   video encoding schemes.\n   Whether to use bytes or packets is not obvious.\
    \  For instance, the\n   most expensive links in the Internet, in terms of cost\
    \ per bit, are\n   all at lower data rates, where transmission times are large\
    \ and\n   packet sizes are important.  In order for a policy to consider wire\n\
    \   time, it needs to know the number of congested bytes.  However, high\n   speed\
    \ networking equipment and the transport protocols themselves\n   sometimes gauge\
    \ resource consumption and congestion in terms of\n   packets.\n   [RFC7141] advises\
    \ that congestion indications should be interpreted\n   in units of bytes when\
    \ responding to congestion, at least on today's\n   Internet.  [RFC6789] takes\
    \ the same view in its definition of\n   congestion-volume, again, for today's\
    \ Internet.\n   In any TCP implementation, this is simple to achieve for varying\
    \ size\n   packets given that TCP SACK tracks losses in bytes.  If an encoding\n\
    \   is specified in units of bytes, the encoding should also specify\n   which\
    \ headers to include in the size of a packet (see network-layer\n   requirement\
    \ F in Section 3.3).\n   RFC 7141 constructs an argument for why equipment tends\
    \ to be built\n   so that the bottleneck will be the bit-carrying capacity of\
    \ its\n   interfaces, not its packet-processing capacity.  However, RFC 7141\n\
    \   acknowledges that the position may change in future and notes that\n   new\
    \ techniques will need to be developed to distinguish packet and\n   bit congestion.\n\
    \   Given this document describes an abstract ConEx mechanism, it is\n   intended\
    \ to be timeless.  Therefore, it does not take a strong\n   position on this issue.\
    \  However, a ConEx encoding will need to\n   explicitly specify whether it assumes\
    \ units of bytes or packets\n   consistently for both congestion indications and\
    \ ConEx markings (see\n   network-layer requirement E in Section 3.3).  It may\
    \ help to refer to\n   the guidance in [RFC7141].\n"
- title: 5.  Congestion Exposure Components
  contents:
  - "5.  Congestion Exposure Components\n   The components shown in Figure 1 as well\
    \ as policy and audit are\n   described in more detail.\n"
- title: 5.1.  Network Devices (Not Modified)
  contents:
  - "5.1.  Network Devices (Not Modified)\n   Congestion signals originate from network\
    \ devices as they do today.\n   A congested router, switch, or other network device\
    \ can discard or\n   ECN-mark packets when it is congested.\n"
- title: 5.2.  Modified Senders
  contents:
  - "5.2.  Modified Senders\n   The sending transport needs to be modified to send\
    \ Congestion\n   Exposure signals in response to congestion feedback signals (e.g.,\n\
    \   for the case of a TCP transport, see [TCP-MODIFICATION]).  We want to\n  \
    \ permit ConEx without ECN (e.g., if the receiver does not support\n   ECN). \
    \ However, we want to encourage a ConEx sender to at least\n   attempt to negotiate\
    \ ECN (a ConEx transport protocol specification\n   may require this) because\
    \ it is believed that ConEx without ECN is\n   harder to audit and thus potentially\
    \ exposed to cheating.  Since\n   honest users have the potential to benefit from\
    \ stronger mechanisms\n   to manage traffic, they have an incentive to deploy\
    \ ConEx and ECN\n   together.  This incentive is not sufficient to prevent a dishonest\n\
    \   user from constructing (or configuring) a sender that enables ConEx\n   after\
    \ choosing not to negotiate ECN, but it should be sufficient to\n   prevent this\
    \ from being the sustained default case for any\n   significant pool of users.\n\
    \   Permitting ConEx without ECN is necessary to facilitate bootstrapping\n  \
    \ other parts of ConEx deployment.\n"
- title: 5.3.  Receivers (Optionally Modified)
  contents:
  - "5.3.  Receivers (Optionally Modified)\n   Any receiving transport may already\
    \ feedback sufficiently useful\n   signals to the sender so that it does not need\
    \ to be altered.\n   The native loss or ECN signaling mechanism required for compliance\n\
    \   with existing congestion control standards (e.g., RTCP, Stream\n   Control\
    \ Transmission Protocol (SCTP)) will typically be sufficient\n   for the Sender\
    \ to generate ConEx Signals.\n   TCP's loss feedback is sufficient for ConEx if\
    \ SACK is used\n   [RFC2018].  However, the original specification for ECN in\
    \ TCP\n   [RFC3168] signals congestion no more than once per round trip.  The\n\
    \   sender may require more precise feedback from the receiver otherwise\n   it\
    \ is at risk of appearing to be understating its ConEx Signals.\n   Ideally, ConEx\
    \ should be added to a transport like TCP without\n   mandatory modifications\
    \ to the receiver.  But in the TCP-ECN case, an\n   optional modification to the\
    \ receiver could be recommended for\n   precision (see [RFC7560], which is based\
    \ on the approach originally\n   taken when adding re-ECN to TCP [RE-ECN-TCP]).\n"
- title: 5.4.  Policy Devices
  contents:
  - "5.4.  Policy Devices\n   Policy devices are characterised by a need to be configured\
    \ with a\n   policy related to the users or neighboring networks being served.\
    \  In\n   contrast, auditing devices solely enforce compliance with the ConEx\n\
    \   protocol and do not need to be configured with any client-specific\n   policy.\n\
    \   One of the design goals of the ConEx protocol is that none of the\n   important\
    \ policy mechanisms requires per-flow state and that policy\n   mechanisms can\
    \ even be implemented for heavily aggregated traffic in\n   the core of the Internet\
    \ with complexity akin to accumulating marking\n   volumes per logical link. \
    \ Of course, policy mechanisms may sometimes\n   choose to focus down on individual\
    \ flows, but ConEx aims to make\n   aggregate policy devices feasible.\n"
- title: 5.4.1.  Congestion Monitoring Devices
  contents:
  - "5.4.1.  Congestion Monitoring Devices\n   Policy devices can typically be decomposed\
    \ into two functions:\n   i) monitoring the ConEx Signal to compare it with a\
    \ policy; then ii)\n   acting in some way on the result.  Various actions might\
    \ be invoked\n   against 'out of contract' traffic, such as policing (see\n  \
    \ Section 5.4.3), re-routing, or downgrading the class of service.\n   Alternatively,\
    \ a policy device might not act directly on the traffic,\n   but instead report\
    \ to management systems that are designed to control\n   congestion indirectly.\
    \  For instance, the reports might trigger\n   capacity upgrades, penalty clauses\
    \ in contracts, levy charges based\n   on congestion, or merely send warnings\
    \ to clients who are causing\n   excessive congestion.\n   Nonetheless, whatever\
    \ action is invoked, the congestion monitoring\n   function will always be a necessary\
    \ part of any policy device.\n"
- title: 5.4.2.  Rest-of-Path Congestion Monitoring
  contents:
  - "5.4.2.  Rest-of-Path Congestion Monitoring\n   ConEx Signals indicate the level\
    \ of congestion along a whole path\n   from source to destination.  In contrast,\
    \ ECN signals monitored in\n   the middle of a network indicate the level of congestion\
    \ experienced\n   so far on the path (of course, only in ECN-capable traffic).\n\
    \   If a monitor in the middle of a network (e.g., at a network border)\n   measures\
    \ both of these signals, it can subtract the level of ECN\n   (path so far) from\
    \ the level of ConEx (whole path) to derive a\n   measure of the congestion that\
    \ packets are likely to experience\n   between the monitoring point and their\
    \ destination (rest-of-path\n   congestion).\n   It will often be preferable for\
    \ policy devices to monitor rest-of-\n   path congestion if they can, because\
    \ it is a measure of the\n   downstream congestion that the policy device can\
    \ directly influence\n   by controlling the traffic passing through it.\n"
- title: 5.4.3.  Congestion Policers
  contents:
  - "5.4.3.  Congestion Policers\n   A congestion policer can be implemented in a\
    \ very similar way to a\n   bit-rate policer, but its effect can be focused solely\
    \ on traffic of\n   users causing congestion downstream, which ConEx Signals make\n\
    \   visible.  Without ConEx Signals, the only way to mitigate congestion\n   is\
    \ to blindly limit the traffic bit-rate on the assumption that high\n   bit-rate\
    \ is more likely to cause congestion.\n   A congestion policer monitors all ConEx\
    \ traffic entering a network or\n   some identifiable subset.  Using ConEx Signals\
    \ and/or Credit signals\n   (and preferably subtracting ECN signals to yield rest-of-path\n\
    \   congestion), it measures the amount of congestion that this traffic\n   is\
    \ contributing somewhere downstream.  If this persistently exceeds a\n   policy-configured\
    \ 'congestion-bit-rate', the congestion policer can\n   limit all the monitored\
    \ ConEx traffic.\n   A congestion policer can be implemented by a simple token\
    \ bucket\n   applied to an aggregate.  But unlike a bit-rate policer, it removes\n\
    \   tokens only when it forwards packets that are ConEx-Marked,\n   effectively\
    \ treating Not-ConEx-Marked packets as invisible.\n   Consequently, because tokens\
    \ give the right to send congested bits,\n   the fill rate of the token bucket\
    \ will represent the allowed\n   congestion-bit-rate.  This should provide sufficient\
    \ traffic\n   management without having to additionally constrain the straight\
    \ bit-\n   rate at all.  See [ISOLATION-POLICING] for details.\n   Note that the\
    \ policing action could be to introduce a throttle\n   (discard some traffic)\
    \ immediately upstream of the congestion\n   monitor.  Alternatively, this throttle\
    \ could introduce delay using a\n   queue with its own AQM, which potentially\
    \ increases the whole path\n   congestion.  In effect, the congestion policer\
    \ has moved the\n   congestion earlier in the path and focused it on one user\
    \ to protect\n   downstream resources by reducing the congestion in the rest of\
    \ the\n   path.\n"
- title: 5.5.  Audit
  contents:
  - "5.5.  Audit\n   The most critical aspect of ConEx is the capability to support\
    \ robust\n   auditing.  It can be assumed that sanctions based on ConEx Signals\n\
    \   will create an intrinsic motivation for users to understate the\n   congestion\
    \ that they are causing.  So, without strong audit\n   functions, the ConEx Signal\
    \ would become understated to the point of\n   being useless.  Therefore, the\
    \ most important feature of an encoding\n   design is likely to be the robustness\
    \ of the auditing it supports.\n   The general goal of an auditor is to make sure\
    \ that any ConEx-enabled\n   traffic is sent with sufficient ConEx-Re-Echo and\
    \ ConEx-Credit\n   signals.  A concrete definition of the ConEx protocol MUST\
    \ define\n   what sufficient means.\n   If a ConEx-enabled transport does not\
    \ carry sufficient ConEx Signals,\n   then an auditor is likely to apply some\
    \ sanction to that traffic.\n   Although sanctions are beyond the scope of this\
    \ document, an example\n   sanction might be to throttle the traffic immediately\
    \ upstream of the\n   auditor to prevent the user from getting any advantage by\n\
    \   understating congestion.  Such a throttle would likely include some\n   combination\
    \ of delaying or dropping traffic.\n   A ConEx auditor might use one of the following\
    \ techniques:\n   Generic loss auditing:  For congestion signalled by loss, totally\n\
    \      accurate auditing is not believed to be possible in the general\n     \
    \ case because it involves a network node detecting the absence of\n      some\
    \ packets when it cannot always necessarily identify\n      retransmissions or\
    \ missing packets.  The missing packet might\n      simply be taking a different\
    \ route, or the IP payload may be\n      encrypted.\n      It is for this reason\
    \ that it is desirable to motivate the\n      deploying of ECN, even though ECN\
    \ is not strictly required for\n      ConEx.\n   ECN auditing:  Directly observe\
    \ and compare the volume of ECN and\n      ConEx marks.  Since the volume of ECN\
    \ marks rises monotonically\n      along a path, ECN auditing is most accurate\
    \ when located near the\n      transport receiver.  For this reason, ECN should\
    \ be monitored\n      downstream of the predominant bottleneck.\n   TCP-specific\
    \ loss auditing:  For non-encrypted standard TCP traffic\n      on a single path,\
    \ a tactical audit approach could be to measure\n      losses by detecting retransmissions,\
    \ which appear as duplicate\n      sequence numbers upstream of the loss and out\
    \ of order data\n      downstream of the loss.  Since some reordering is present\
    \ in the\n      Internet, such a loss estimator would be most accurate near the\n\
    \      sender.  Such an audit device should treat non-ECN-capable packets\n  \
    \    with encrypted IP payload as Not-ConEx, even if they claim to be\n      ConEx-capable,\
    \ unless the operator is also using one of the other\n      two techniques below\
    \ that can audit such packets against losses.\n   Predominant bottleneck loss\
    \ auditing:  For networks designed so that\n      losses predominantly occur under\
    \ the control of one IP-aware\n      bottleneck node on the path, the auditor\
    \ could be located at this\n      bottleneck.  It could simply compare ConEx Signals\
    \ with actual\n      local packet discards (and ECN marks).  This is a good model\
    \ for\n      most consumer access networks where audit accuracy could well be\n\
    \      sufficient even if losses occasionally occur elsewhere in the\n      network.\n\
    \      Although the auditor at the predominant bottleneck would not be\n     \
    \ able to count losses at other nodes, transports would not know\n      where\
    \ losses were occurring either.  Therefore, a transport would\n      not know\
    \ which losses it could cheat and which ones it couldn't\n      without getting\
    \ caught.\n   ECN tunnel loss auditing:  A network operator can arrange IP-in-IP\n\
    \      tunnels (or IP-in-MPLS, etc.) so that any losses within the\n      tunnels\
    \ are deferred until the tunnel egress.  Then, the audit\n      function can be\
    \ deployed at the egress and be aware of all losses.\n      This is possible by\
    \ enabling ECN marking on switches and routers\n      within a tunnel, irrespective\
    \ of whether end systems support ECN,\n      by exploiting a side effect of the\
    \ way tunnels handle the ECN\n      field.  After encapsulation at the tunnel\
    \ ingress, the network\n      should arrange for any non-ECN packets (with '00'\
    \ in the ECN field\n      of the outer) to be set to the ECN-capable transport\
    \ (ECT(0))\n      codepoint.  Then, if they experience congestion at one of the\
    \ ECN-\n      capable switches or routers within the tunnel, some will be ECN-\n\
    \      marked rather than immediately dropped.  However, when the tunnel\n   \
    \   decapsulator strips the outer from such an ECN-marked packet, if\n      it\
    \ finds the inner header has '00' in the ECN field (meaning that\n      the endpoints\
    \ do not support ECN), it will automatically drop the\n      packet, assuming\
    \ it complies with [RFC6040].  Thus, an audit\n      function at the decapsulator\
    \ can know which packets would have\n      been dropped within the tunnel (and\
    \ even which are genuinely ECN-\n      marked for the end-to-end protocol).  Non-ECN\
    \ end systems outside\n      the tunnel see no sign of the use of ECN internally.\n\
    \   In addition, other audit techniques may be identified in the future.\n   [Refb-dis]\
    \ gives a comprehensive inventory of attacks against audit\n   proposed by various\
    \ people.  It includes pseudocode for both\n   deterministic and statistical audit\
    \ functions designed to thwart\n   these attacks and analyses the effectiveness\
    \ of an implementation.\n   Although this work is specific to the re-ECN protocol,\
    \ most of the\n   material is useful for designing and assessing audit of other\n\
    \   specific ConEx encodings, against both ECN and loss.\n   The auditing function\
    \ should be able to trigger sufficient sanction\n   to discourage understating\
    \ congestion [Salvatori05].  This seems to\n   require designing the sanction\
    \ in concert with the policy functions,\n   even though they might be implemented\
    \ in different parts of the\n   network.  However, [Refb-dis] proves audit and\
    \ policy functions can\n   be independent as long as audit drops sufficient traffic\
    \ to\n   'normalise' actual congestion signals to be no greater than ConEx\n \
    \  Signals.\n   Similarly, the job of incentivising the sending of ConEx-enabled\n\
    \   packets is proper solely to policy devices independent of the audit\n   function.\
    \  The audit function's job is policy neutral, so it should\n   be solely confined\
    \ to checking for correctness within those packets\n   that have been marked as\
    \ ConEx-capable.  Even if there are Not-ConEx\n   packets mixed with ConEx packets\
    \ within a flow, audit will not need\n   to monitor any Not-ConEx packets.\n \
    \  Note that in the future it might prove to be desirable to provide\n   advice\
    \ on uniformly implementing sanctions, because otherwise\n   insufficient sanctions\
    \ could impair the ability to implement policy\n   elsewhere in the network.\n\
    \   Some of the audit algorithms require per-flow state.  This cost is\n   expected\
    \ to be tolerable because these techniques are most apropos\n   near the edges\
    \ of the network where traffic is generally much less\n   aggregated so the state\
    \ need not overwhelm any one device.  The flow\n   state required for the audit\
    \ creates itself as it detects new flows.\n   Therefore, a flow will not fail\
    \ if it is re-routed away from the\n   audit box currently holding its flow state,\
    \ so auditing does not\n   require route pinning and works fine with multipath\
    \ flows.\n   Holding flow state seems to create a vulnerability to attacks that\n\
    \   exhaust the auditor's memory by opening numerous new short flows.\n   The\
    \ audit function can protect itself from this attack by not\n   allocating new\
    \ flow state unless a ConEx-Marked packet arrives (e.g.,\n   credit at the start\
    \ of a flow).  Because policy devices rate limit\n   ConEx-Marked packets, this\
    \ sets a natural limit to the rate at which\n   a source can create flow state\
    \ in audit devices.  The auditor would\n   treat all the remaining flows without\
    \ any ConEx-Marked packets as a\n   single misbehaving aggregate.\n   Auditing\
    \ can be distributed and redundant.  One flow may be audited\n   in multiple places,\
    \ using multiple techniques.  Some audit techniques\n   do not require any per-flow\
    \ state and can be applied to aggregate\n   traffic.  These might be able to detect\
    \ the presence of understated\n   congestion at large scale and support recursively\
    \ hunting for\n   individual flows that are understating their congestion.  Even\
    \ at\n   large scales, flows can be randomly selected for individual auditing.\n\
    \   Sampling techniques can also be used to bound the total auditing\n   memory\
    \ footprint, although the implementer needs to counter the\n   tactic where a\
    \ source cheats until caught by sampling, then simply\n   discards that flow ID\
    \ and starts cheating with a new one (termed\n   'identifier whitewashing when\
    \ caught').\n   For the concrete ConEx protocol encoding defined in [CONEX-DESTOPT],\n\
    \   ConEx Credit and ConEx-Re-Echo signals are intended to be audited\n   separately.\
    \  The Credit signal can be audited directly against actual\n   congestion (loss\
    \ and ECN).  However, there will be an inherent delay\n   of at least one round\
    \ trip between a congestion signal and the\n   subsequent ConEx-Re-Echo signal\
    \ it triggers, as shown in Figure 1.\n   Therefore, ConEx-Re-Echo signals will\
    \ need to be audited with some\n   allowance for this delay.  Further discussion\
    \ of design and\n   implementation choices for functions intended to audit this\
    \ concrete\n   ConEx encoding can be found in [CONEX-AUDIT].\n"
- title: 6.  Support for Incremental Deployment
  contents:
  - "6.  Support for Incremental Deployment\n   The ConEx abstract protocol described\
    \ so far is intended to support\n   incremental deployment in every possible respect.\
    \  For convenience,\n   the following list collects together all the features\
    \ that support\n   incremental deployment in the concrete ConEx specifications\
    \ and\n   points to further information on each:\n   Packets:  The wire protocol\
    \ encoding allows each packet to indicate\n      whether it is using ConEx or\
    \ not (see Section 4 on\n      Encoding Congestion Exposure).\n   Senders:  ConEx\
    \ requires a modification to the source in order to\n      send ConEx packet markings\
    \ (see Section 5.2).  Although ConEx\n      support can be indicated on a packet-by-packet\
    \ basis, it is likely\n      that all the packets in a flow will either consistently\
    \ support\n      ConEx or consistently not.  It is also likely that, if the\n\
    \      implementation of a transport protocol supports ConEx, all the\n      packets\
    \ sent from that host using that protocol will be ConEx-\n      Capable.\n   \
    \   The implementations of some of the transport protocols on a host\n      might\
    \ not support ConEx (e.g., the implementation of DNS over UDP\n      might not\
    \ support ConEx, while perhaps RTP over UDP and TCP will).\n      Any non-upgraded\
    \ transports and non-upgraded hosts will simply\n      continue to send regular\
    \ Not-ConEx packets as always.\n      A network operator can create incentives\
    \ for senders to\n      voluntarily reveal ConEx information (see the item on\
    \ incremental\n      deployment by 'Networks' below).\n   Receivers:  A ConEx\
    \ source should be able to work with the regular\n      receiver for the transport\
    \ in question without requiring any\n      ConEx-specific modifications.  This\
    \ is true for modern transport\n      protocols (RTCP, SCTP, etc.) and it is even\
    \ true for TCP, as long\n      as the receiver supports SACK, which is widely\
    \ deployed anyway.\n      However, it is not true for ECN feedback in TCP.  The\
    \ need for\n      more precise ECN feedback in TCP is not exclusive to ConEx;\
    \ for\n      instance, Data Centre TCP [DCTCP] uses precise feedback to good\n\
    \      effect.  Therefore, if a receiver offers precise feedback,\n      [RFC7560]\
    \ it will be best if ConEx uses it (see Section 5.3).\n      Alternatively, without\
    \ sufficiently precise congestion feedback\n      from the receiver, the source\
    \ may have to conservatively send\n      extra ConEx markings in order to avoid\
    \ understating congestion.\n   Proxies:  Although it was stated above that ConEx\
    \ requires a\n      modification to the source, ConEx Signals could theoretically\
    \ be\n      introduced by a proxy for the source as long as it can intercept\n\
    \      feedback from the receiver.  Similarly, more precise feedback\n      could\
    \ theoretically be provided by a proxy for the receiver rather\n      than modifying\
    \ the receiver itself.\n   Forwarding:  No modification to forwarding or queuing\
    \ is needed for\n      ConEx.\n      However, once some ConEx is deployed, it\
    \ is possible that a queue\n      implementation could optionally take advantage\
    \ of the ConEx\n      information in packets.  For instance, it has been suggested\n\
    \      [CONEX-DESTOPT] that a queue would be more robust against flooding\n  \
    \    if it preferentially discarded Not-ConEx packets then Not-Marked\n      ConEx\
    \ packets.\n      A ConEx sender re-echoes congestion whether the queues signaling\n\
    \      congestion are ECN enabled or not.  Nonetheless, an operator\n      relying\
    \ on ConEx Signals is recommended to enable ECN in queues\n      wherever possible.\
    \  This is because auditing works best if most\n      congestion is indicated\
    \ by ECN rather than loss (see Section 3).\n      Also, monitoring rest-of-path\
    \ congestion is not accurate if there\n      are congested non-ECN queues upstream\
    \ of the monitoring point\n      (Section 5.4.2).\n   Networks:  If a subset of\
    \ traffic sources (or proxies) use ConEx\n      Signals to reveal congestion in\
    \ the internetwork layer, a network\n      operator can choose (or not) to use\
    \ this information for traffic\n      management.  As long as the end-to-end ConEx\
    \ Signals are present,\n      each network can unilaterally choose to use them\
    \ -- independently\n      of whether other networks do.\n      ConEx marked packets\
    \ may safely traverse a network that ignores\n      them.  ConEx Signals are defined\
    \ to remain unchanged once set by\n      the sender, but some encodings may allow\
    \ changes in transit (e.g.,\n      by proxies).  In no circumstances will a network\
    \ node change\n      ConEx-Capable packets to Not-ConEx (network-layer encoding\n\
    \      requirement I in Section 3.3).  If necessary, endpoints should be\n   \
    \   able to detect if a network is removing ConEx Signals (network-\n      layer\
    \ encoding requirement H in Section 3.3).\n      An operator can deploy policy\
    \ devices (Section 5.4) wherever\n      traffic enters its network in order to\
    \ monitor the downstream\n      congestion that incoming traffic contributes to\
    \ and control it if\n      necessary.  A network operator can create incentives\
    \ for the\n      developers of sending applications and transports to voluntarily\n\
    \      reveal ConEx information.  Without ConEx information, a network\n     \
    \ operator tends to have to limit the bit-rate or volume from a site\n      more\
    \ than is necessary, just in case it might congest others.\n      With ConEx information,\
    \ the operator can solely limit congestion-\n      causing traffic and otherwise\
    \ allow complete freedom.  This\n      greater freedom acts as an inducement for\
    \ the source to volunteer\n      ConEx information.  An operator may also monitor\
    \ whether a source\n      transport has sent ConEx packets and treat the same\
    \ transport with\n      greater suspicion (e.g., a more stringent rate limit)\
    \ whenever it\n      selectively sends packets without ConEx support.  See [RFC6789]\n\
    \      for further discussion of deployment incentives for networks and\n    \
    \  references to scenarios where some networks use ConEx-based policy\n      devices\
    \ and others don't.\n      An operator can deploy audit devices (Section 5.5)\
    \ unilaterally\n      within its own network to verify that traffic sources are\
    \ not\n      understating ConEx information.  From the viewpoint of one network\n\
    \      operator (say N_a), it only cares that the level of ConEx\n      signaling\
    \ is sufficient to cover congestion in its own network.\n      If traffic continues\
    \ into a congested downstream network (say\n      N_b), it is of no concern to\
    \ the first network (N_a) if the end-\n      to-end ConEx signaling is insufficient\
    \ to cover the congestion in\n      N_b as well.  This is N_b's concern, and N_b\
    \ can both detect such\n      anomalous traffic and deal with it using ConEx-based\
    \ audit devices\n      itself.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The only known risk associated with ConEx is\
    \ that users and\n   applications are very likely to be motivated to underrepresent\
    \ the\n   congestion that they are causing.  Significant portions of this\n  \
    \ document are about mechanisms to audit the ConEx Signals and create\n   sufficient\
    \ sanction to inhibit such underrepresentation.  In\n   particular, see Section\
    \ 5.5.\n   Security attacks and their defences are best discussed against a\n\
    \   concrete protocol specification, not the abstract mechanism of this\n   document.\
    \  A concrete ConEx protocol will need to be accompanied by a\n   document describing\
    \ how the protocol and its audit mechanisms defend\n   against likely attacks.\
    \  [Refb-dis] will be a useful source for such\n   a document.  It gives a comprehensive\
    \ inventory of attacks against\n   audit that have been proposed by various parties.\
    \  It includes\n   pseudocode for both deterministic and statistical audit functions\n\
    \   designed to thwart these attacks and analyses the effectiveness of an\n  \
    \ implementation.\n   However, [Refb-dis] is specific to the re-ECN protocol,\
    \ which\n   signalled ECN and loss together, whereas the concrete ConEx protocol\n\
    \   defined in [CONEX-DESTOPT] signals them separately.  Therefore,\n   although\
    \ likely attacks will be similar, there will be more\n   combinations of attacks\
    \ to worry about, and defences and their\n   analysis are likely to be a little\
    \ different for ConEx.\n   The main known attacks that a security document for\
    \ a concrete ConEx\n   protocol will need to address are listed below and [Refb-dis]\
    \ should\n   be referred to for how re-ECN was designed to defend against similar\n\
    \   attacks:\n   o  Attacks on the audit function (see Section 7.5 of [Refb-dis]):\n\
    \      Flow ID Whitewashing:  Designing the audit function so that a\n       \
    \  source cannot gain from starting a new flow once audit has\n         detected\
    \ cheating in a previous flow.\n      Dragging Down an Aggregate:  Avoiding audit\
    \ discarding packets\n         from all flows within an aggregate, which would\
    \ allow one flow\n         to pull down the average so that the audit function\
    \ would\n         discard packets from all flows, not just the offending flow.\n\
    \      Dragging Down a Spoofed Flow ID:  An attacker understates ConEx\n     \
    \    markings in packets that spoof another flow, which fools the\n         audit\
    \ function into dropping the genuine user's packets.\n   o  Attacks by networks\
    \ on other networks (see Section 8.2 of\n      [Refb-dis]):\n      Dummy Traffic:\
    \  Sending dummy traffic across a border with\n         understated ConEx markings\
    \ to bring down the average ConEx\n         markings in the aggregate of border\
    \ traffic.  This attack can\n         be combined with a TTL that expires before\
    \ the packets reach an\n         audit function.\n      Signal Poisoning with\
    \ 'Cancelled' Marking:  Sending high volumes\n         of valid packets that are\
    \ both ConEx-Marked and ECN-marked,\n         which seems to represent congestion\
    \ upstream, but it makes\n         these packets immune to being further ECN-marked\
    \ downstream.\n   It is planned to document all known attacks and their defences\n\
    \   (including all of the above) in the RFC series against a concrete\n   ConEx\
    \ protocol specification.  In the interim, [Refb-dis] and its\n   references should\
    \ be referred to for details and ways to address\n   these attacks in the case\
    \ of re-ECN.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [CheapPseud]\n              Friedman, E. and\
    \ P. Resnick, \"The Social Cost of Cheap\n              Pseudonyms\", Journal\
    \ of Economics and Management Strategy,\n              Volume 10, Issue 2, pp.\
    \ 173-199,\n              DOI 10.1111/j.1430-9134.2001.00173.x, Summer 2001.\n\
    \   [CONEX-AUDIT]\n              Wagner, D. and M. Kuehlewind, \"Auditing of Congestion\n\
    \              Exposure (ConEx) signals\", Work in Progress,\n              draft-wagner-conex-audit-01,\
    \ February 2014.\n   [CONEX-DESTOPT]\n              Krishnan, S., Kuehlewind,\
    \ M., and C. Ucendo, \"IPv6\n              Destination Option for Congestion Exposure\
    \ (ConEx)\", Work\n              in Progress, draft-ietf-conex-destopt-11, October\
    \ 2015.\n   [DCTCP]    Alizadeh, M., Greenberg, A., Maltz, D., Padhye, J., Patel,\n\
    \              P., Prabhakar, B., Sengupta, S., and M. Sridharan, \"Data\n   \
    \           Center TCP (DCTCP)\", ACM SIGCOMM Computer Communication\n       \
    \       Review, Volume 40, Issue 4, pages 63-74,\n              DOI 10.1145/1851182.1851192,\
    \ October 2010,\n              <http://portal.acm.org/citation.cfm?id=1851192>.\n\
    \   [Evol_cc]  Gibbens, R. and F. Kelly, \"Resource pricing and the\n        \
    \      evolution of congestion control\", Automatica, Volume 35,\n           \
    \   Issue 12, pages 1969-1985,\n              DOI 10.1016/S0005-1098(99)00135-1,\
    \ December 1999,\n              <http://www.sciencedirect.com/science/article/pii/\n\
    \              S0005109899001351>.\n   [FairerFaster]\n              Briscoe,\
    \ B., \"A Fairer, Faster Internet Protocol\", IEEE\n              Spectrum, pages\
    \ 38-43, DOI 10.1109/MSPEC.2008.4687368,\n              December 2008,\n     \
    \         <http://spectrum.ieee.org/telecom/standards/\n              a-fairer-faster-internet-protocol>.\n\
    \   [ISOLATION-POLICING]\n              Briscoe, B., \"Network Performance Isolation\
    \ using\n              Congestion Policing\", Work in Progress,\n            \
    \  draft-briscoe-conex-policing-01, February 2014.\n   [RE-ECN-MOTIVATION]\n \
    \             Briscoe, B., Jacquet, A., Moncaster, T., and A. Smith,\n       \
    \       \"Re-ECN: A Framework for adding Congestion Accountability\n         \
    \     to TCP/IP\", Work in Progress,\n              draft-briscoe-conex-re-ecn-motiv-03,\
    \ March 2014.\n   [RE-ECN-TCP]\n              Briscoe, B., Jacquet, A., Moncaster,\
    \ T., and A. Smith,\n              \"Re-ECN: Adding Accountability for Causing\
    \ Congestion to\n              TCP/IP\", Work in Progress,\n              draft-briscoe-conex-re-ecn-tcp-04,\
    \ July 2014.\n   [Re-fb]    Briscoe, B., Jacquet, A., Di Cairano-Gilfedder, C.,\n\
    \              Salvatori, A., Soppera, A., and M. Koyabe, \"Policing\n       \
    \       Congestion Response in an Internetwork Using Re-Feedback\",\n        \
    \      ACM SIGCOMM Computer Communication Review, Volume 35,\n              Issue\
    \ 4, pages 277--288, DOI 10.1145/1090191.1080124,\n              August 2005,\n\
    \              <http://portal.acm.org/citation.cfm?id=1080091.1080124>.\n   [Refb-dis]\
    \ Briscoe, B., \"Re-feedback: Freedom with Accountability for\n              Causing\
    \ Congestion in a Connectionless Internetwork\", PhD\n              Dissertation,\
    \ University College London, May 2009,\n              <http://discovery.ucl.ac.uk/16274/>.\n\
    \   [RFC2018]  Mathis, M., Mahdavi, J., Floyd, S., and A. Romanow, \"TCP\n   \
    \           Selective Acknowledgment Options\", RFC 2018,\n              DOI 10.17487/RFC2018,\
    \ October 1996,\n              <http://www.rfc-editor.org/info/rfc2018>.\n   [RFC3168]\
    \  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n              of\
    \ Explicit Congestion Notification (ECN) to IP\",\n              RFC 3168, DOI\
    \ 10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n\
    \   [RFC3514]  Bellovin, S., \"The Security Flag in the IPv4 Header\",\n     \
    \         RFC 3514, DOI 10.17487/RFC3514, April 2003,\n              <http://www.rfc-editor.org/info/rfc3514>.\n\
    \   [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n          \
    \    Jacobson, \"RTP: A Transport Protocol for Real-Time\n              Applications\"\
    , STD 64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n\
    \   [RFC5348]  Floyd, S., Handley, M., Padhye, J., and J. Widmer, \"TCP\n    \
    \          Friendly Rate Control (TFRC): Protocol Specification\",\n         \
    \     RFC 5348, DOI 10.17487/RFC5348, September 2008,\n              <http://www.rfc-editor.org/info/rfc5348>.\n\
    \   [RFC5681]  Allman, M., Paxson, V., and E. Blanton, \"TCP Congestion\n    \
    \          Control\", RFC 5681, DOI 10.17487/RFC5681, September 2009,\n      \
    \        <http://www.rfc-editor.org/info/rfc5681>.\n   [RFC6040]  Briscoe, B.,\
    \ \"Tunnelling of Explicit Congestion\n              Notification\", RFC 6040,\
    \ DOI 10.17487/RFC6040, November\n              2010, <http://www.rfc-editor.org/info/rfc6040>.\n\
    \   [RFC6679]  Westerlund, M., Johansson, I., Perkins, C., O'Hanlon, P.,\n   \
    \           and K. Carlberg, \"Explicit Congestion Notification (ECN)\n      \
    \        for RTP over UDP\", RFC 6679, DOI 10.17487/RFC6679, August\n        \
    \      2012, <http://www.rfc-editor.org/info/rfc6679>.\n   [RFC6789]  Briscoe,\
    \ B., Ed., Woundy, R., Ed., and A. Cooper, Ed.,\n              \"Congestion Exposure\
    \ (ConEx) Concepts and Use Cases\",\n              RFC 6789, DOI 10.17487/RFC6789,\
    \ December 2012,\n              <http://www.rfc-editor.org/info/rfc6789>.\n  \
    \ [RFC6817]  Shalunov, S., Hazel, G., Iyengar, J., and M. Kuehlewind,\n      \
    \        \"Low Extra Delay Background Transport (LEDBAT)\", RFC 6817,\n      \
    \        DOI 10.17487/RFC6817, December 2012,\n              <http://www.rfc-editor.org/info/rfc6817>.\n\
    \   [RFC7141]  Briscoe, B. and J. Manner, \"Byte and Packet Congestion\n     \
    \         Notification\", BCP 41, RFC 7141, DOI 10.17487/RFC7141,\n          \
    \    February 2014, <http://www.rfc-editor.org/info/rfc7141>.\n   [RFC7560]  Kuehlewind,\
    \ M., Ed., Scheffenegger, R., and B. Briscoe,\n              \"Problem Statement\
    \ and Requirements for Increased Accuracy\n              in Explicit Congestion\
    \ Notification (ECN) Feedback\",\n              RFC 7560, DOI 10.17487/RFC7560,\
    \ August 2015,\n              <http://www.rfc-editor.org/info/rfc7560>.\n   [Salvatori05]\n\
    \              Salvatori, A., \"Closed Loop Traffic Policing\", Politecnico\n\
    \              Torino and Institut Eurecom Masters Thesis, September\n       \
    \       2005.\n   [TCP-MODIFICATION]\n              Kuehlewind, M. and R. Scheffenegger,\
    \ \"TCP modifications\n              for Congestion Exposure\", Work in Progress,\
    \ draft-ietf-\n              conex-tcp-modifications-10, October 2015.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document was improved by review comments from Toby Moncaster,\n\
    \   Nandita Dukkipati, Mirja Kuehlewind, Caitlin Bestler, Marcelo Bagnulo\n  \
    \ Braun, John Leslie, Ingemar Johansson, and David Wagner.\n   Bob Briscoe's work\
    \ on this specification received part-funding from\n   the European Union's Seventh\
    \ Framework Programme FP7/2007-2013 under\n   the Trilogy 2 project, grant agreement\
    \ no. 317756.  The views\n   expressed here are solely those of the authors.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Matt Mathis\n   Google, Inc.\n   1600 Amphitheater Parkway\n\
    \   Mountain View, California  93117\n   United States\n   Email: mattmathis@google.com\n\
    \   Bob Briscoe\n   BT (now at Simula Research Laboratory)\n   Email: ietf@bobbriscoe.net\n\
    \   URI:   http://bobbriscoe.net/\n"
