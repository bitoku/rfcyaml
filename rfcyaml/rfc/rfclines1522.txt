Abstract This memo describes an extension to the message format defined in RFC 1521 [1], to allow the representation of character sets other than ASCII in RFC 822
The extensions described were designed to be highly compatible with existing Internet mail handling software, and to be easily implemented in mail readers that support RFC 1521.
Introduction RFC 1521 describes a mechanism for denoting textual body parts which are coded in various character sets, as well as methods for encoding such body parts as sequences of printable ASCII characters.
This memo describes similar techniques to allow the encoding of non ASCII text in various portions of a RFC 822 [2] message header, in a manner which is unlikely to confuse existing message handling software.
Like the encoding techniques described in RFC 1521, the techniques outlined here were designed to allow the use of non ASCII characters in message headers in a way which is unlikely to be disturbed by the quirks of existing Internet mail handling programs.
In particular, some mail relaying programs are known to (a) delete some message header fields while retaining others, (b) rearrange the order of addresses in To or Cc fields, (c) rearrange the (vertical) order of header fields, and/or (d)
"wrap" message headers at different places than those in the original message.
While it is unfortunate that these programs do not correctly interpret RFC 822 headers, to "break" these programs would cause severe operational problems for the Internet mail system.
The extensions described in this memo therefore do not rely on little  used features of RFC 822.
Instead, certain sequences of "ordinary" printable ASCII characters (known as "encoded words") are reserved for use as encoded data.
The syntax of encoded words is such that they are unlikely to "accidentally" appear as normal text in message headers.
Furthermore, the characters used in encoded words are restricted to those which do not have special meanings in the context in which the encoded word appears.
It specifies a character set and an encoding method, and also includes the original text encoded as graphic ASCII characters, according to the rules for that encoding method.
A mail composer that implements
this specification will provide a means of inputting non ASCII text in header fields, but will translate these fields (or appropriate portions of these fields) into encoded words before inserting them into the message header.
A mail reader that implements this specification will recognize encoded words when they appear in certain portions of the message header.
Instead of displaying the encoded word "as is", it will reverse the encoding and display the original text in the designated character set.
This memo relies heavily on notation and terms defined STD 11, RFC 822 and RFC 1521.
In particular, the syntax for the ABNF used in this memo is defined in STD 11, RFC 822, as well as many of the terms used in the grammar for the header extensions defined here.
Successful implementation of this protocol extension requires careful attention to the details of both STD 11, RFC 822 and RFC 1521.
When the term "ASCII" appears in this memo, it refers to the "7  Bit American Standard Code for Information Interchange", ANSI X3.4 1986.
The MIME charset name for this character set is "US  ASCII".
When not specifically referring to the MIME charset name, this document uses the term "ASCII", both for brevity and for consistency with STD 11, RFC 822.
However, implementors are warned that the character set name must be spelled "US ASCII" in MIME message and body part headers.
Syntax of encoded words An "encoded word" is defined by the following ABNF grammar.
The notation of RFC 822 is used, with the exception that white space characters MAY NOT appear between components of an encoded word.
(but see "Use of encoded words in message ; headers", section 5)
Both "encoding" and "charset" names are case independent.
Thus the charset name "ISO 8859 1" is equivalent to "iso 8859 1", and the encoding named "Q" may be spelled either "Q" or "q".
An encoded word may not be more than 75 characters long, including charset, encoding, encoded text, and delimiters.
If it is desirable to encode more text than will fit in an encoded word of 75 characters, multiple encoded words (separated by CRLF SPACE) may be used.
While there is no limit to the length of a multiple line header field, each line of a header field that contains one or more encoded words is limited to 76 characters.
The length restrictions are included not only to ease interoperability through internetwork mail gateways, but also to impose a limit on the amount of lookahead a header parser must employ (while looking for a final ?
delimiter) before it can decide whether a token is an encoded word or something else.
The characters which may appear in encoded text are further restricted by the rules in section 5.
Character sets The "charset" portion of an encoded word specifies the character set associated with the unencoded text.
A charset can be any of the character set names allowed in an RFC 1521 "charset" parameter of a "text/plain" body part, or any character set name registered with IANA for use with the MIME text/plain content type [3].
(See section 7.1.1 of RFC 1521 for a list of charsets defined in that document).
Some character sets use code switching techniques to switch between "ASCII mode" and other modes.
If unencoded text in an encoded word contains control codes to switch out of ASCII mode, it must also contain additional control codes such that ASCII mode is again selected at the end of the encoded word.
(This rule applies separately to each encoded word, including adjacent encoded words within a single header field.)
When there is a possibility of using more than one character set to represent the text in an encoded word, and in the absence of private agreements between sender and recipients of a message, it is recommended that members of the ISO 8859   series be used in preference to other character sets.
Encodings Initially, the legal values for "encoding" are "Q" and "B".
These encodings are described below.
The "Q" encoding is recommended for use when most of the characters to be encoded are in the ASCII character set; otherwise, the "B" encoding should be used.
Nevertheless, a mail reader which claims to recognize encoded words MUST be able to accept either encoding for any character set which it supports.
Only a subset of the printable ASCII characters may be used in encoded text.
Space and tab characters are not allowed, so that the beginning and end of an encoded word are obvious.
Other characters are also illegal in certain contexts.
For example, an encoded word in a "phrase" preceding an address in a From header field may not contain any of the "specials" defined in RFC 822.
Finally, certain other characters are disallowed in some contexts, to ensure reliability for messages that pass through internetwork mail gateways.
The "B" encoding automatically meets these requirements.
The "Q" encoding allows a wide range of printable characters to be used in non critical locations in the message header (e.g., Subject), with fewer characters available for use in other locations.
The "B" encoding The "B" encoding is identical to the "BASE64" encoding defined by RFC 1521.
The "Q" encoding The "Q" encoding is similar to the "Quoted Printable" content  transfer encoding defined in RFC 1521.
It is designed to allow text containing mostly ASCII characters to be decipherable on an ASCII terminal without decoding.
(Upper case should be used for hexadecimal digits "A" through "F".)
(This character may not pass through some internetwork mail gateways, but its use will greatly enhance readability of "Q" encoded data with mail readers that do not support this encoding.)
(But see section 5 for restrictions.)
Use of encoded words in message headers
An encoded word may appear in a message header or body part header according to the following rules:
An encoded word may replace a "text" token (as defined by RFC 822) in any Subject or Comments header field, any extension message header field, or any RFC 1521 body part field for which the field body is defined as " text".
An encoded word may also appear in any user defined ("X ") message or body part header field.
Ordinary ASCII text and encoded words may appear together in the same header field.
However, an encoded word that appears in a header field defined as " text" MUST be separated from any adjacent encoded word or "text" by linear white space.
MUST be separated from any adjacent encoded word or "ctext" by linear white space.
As a replacement for a "word" entity within a "phrase", for example, one that precedes an address in a From, To, or Cc header.
The ABNF definition for phrase from RFC 822 thus becomes: phrase   1
An encoded word that appears within a "phrase" MUST be separated from any adjacent "word", "text" or "special" by linear white space.
These are the ONLY locations where an encoded word may appear.
In particular, an encoded word MUST NOT appear in any portion of an "addr spec".
In addition, an encoded word MUST NOT be used in a Received header field.
Each encoded word MUST encode an integral number of octets.
The encoded text in each encoded word must be well formed according to the encoding specified; the encoded text may not be continued in the next encoded word.
Each encoded word MUST represent an integral number of characters.
A multi octet character may not be split across adjacent encoded words.
Only printable and white space character data should be encoded using this scheme.
However, since these encoding schemes allow the encoding of arbitrary octet values, mail readers that implement this decoding should also ensure that display of the decoded data on the recipient's terminal will not cause unwanted side effects.
Use of these methods to encode non textual data (e.g., pictures or sounds) is not defined by this memo.
Use of encoded words to represent strings of purely ASCII characters is allowed, but discouraged.
In rare cases it may be necessary to encode ordinary text that looks like an encoded word.
Support of encoded words by mail readers 6.1.
Recognition of encoded words in message headers
A mail reader must parse the message and body part headers according to the rules in RFC 822 to correctly recognize encoded words.
Encoded words are to be recognized as follows: (1)
Any message or body part header field defined as " text", or any user defined header field, should be parsed as follows: Beginning at the start of the field body and immediately following each occurrence of linear white space, each sequence of up to 75 printable characters (not containing any linear white space) should be examined to see if it is an encoded word according to the syntax rules in section 2.
Any other sequence of printable characters should be treated as ordinary ASCII text.
Any header field not defined as " text" should be parsed according to the syntax rules for that header field.
However, any "word" that appears within a "phrase" should be treated as an encoded word if it meets the syntax rules in section 2.
Otherwise it should be treated as an ordinary "word".
(3) Within a "comment", any sequence of up to 75 printable characters (not containing linear white space), that meets the syntax rules in section 2, should be treated as an encoded word.
Otherwise it should be treated as normal comment text.
Any encoded words so recognized are decoded, and if possible, the resulting unencoded text is displayed in the original character set.
When displaying a particular header field that contains multiple encoded words, any linear white space that separates a pair of adjacent encoded words is ignored.
(This is to allow the use of multiple encoded words to represent long strings of unencoded text, without having to separate encoded words where spaces occur in the unencoded text.)
In the event other encodings are defined in the future, and the mail reader does not support the encoding used, it may either (a) display the encoded word as ordinary text, or (b) substitute an appropriate message indicating that the text could not be decoded.
If the mail reader does not support the character set used, it may (a) display the encoded word as ordinary text (i.e., as it appears in the header), (b) make a "best effort" to display using such characters as are available, or (c) substitute an appropriate message indicating that the decoded text could not be displayed.
If the character set being used employs code switching techniques, display of the encoded text implicitly begins in "ASCII mode".
In addition, the mail reader must ensure that the output device is once again in "ASCII mode" after the encoded word is displayed.
Mail reader handling of incorrectly formed encoded words
It is possible that an encoded word that is legal according to the syntax defined in section 2, is incorrectly formed according to the rules for the encoding being used.
Any encoded word which encodes a non integral number of characters or octets is incorrectly formed.
A mail reader need not attempt to display the text associated with an encoded word that is incorrectly formed.
However, a mail reader MUST NOT prevent the display or handling of a message because an encoded  word is incorrectly formed.
" be a valid encoded word.
("begins" means: at the start of the field body or immediately following linear white space; "ends" means: at the end of the field body or immediately preceding linear white space.)
A mail reading program claiming compliance with this specification must be able to distinguish encoded words from "text", "ctext", or "word"s, according to the rules in section 6, anytime they appear in appropriate places in message headers.
It must support both the "B" and "Q" encodings for any character set which it supports.
The program must be able to display the unencoded text if the character set is "US ASCII".
For the ISO 8859   character sets, the mail reading program must at least be able to display the characters which are also in the ASCII set.
ISO 8859 1?Q?Andr E9 ?
ojarnef@admin.kth.se Subject: Time for ISO 10646?
Subject: Re: RFC HDR care and feeding From: Nathaniel Borenstein
Test of new header generator MIME Version: 1.0 Content type:
text/plain; charset ISO 8859 1 10.
Security Considerations Security issues are not discussed in this memo.
