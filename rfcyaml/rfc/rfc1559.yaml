- contents:
  - '                     DECnet Phase IV MIB Extensions

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Table of Contents\n   1. Introduction ................................................
    \ 1\n   2. The Network Management Framework ............................  2\n
    \  2.1 Object Definitions .........................................  2\n   3.
    Selected Objects ............................................  3\n   4. Textual
    Conventions .........................................  4\n   5. Definitions .................................................
    \ 4\n   6. Changes from RFC 1289 ....................................... 67\n
    \  7. Acknowledgements ...........................................  68\n   8.
    References .................................................  68\n   9. Security
    Considerations ....................................  69\n   10. Author's Address
    ..........................................  69\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo defines a set of DECnet Phase IV extensions that
    have been\n   created for the Internet MIB.  It reflects changes which are the\n
    \  result of operational experience based on RFC 1289.\n   When used in conjunction
    with the structure of management information\n   (STD 16, RFC 1155), the management
    information base for network\n   management of TCP/IP-based internets (STD 17,
    RFC 1213) and the\n   Simple Network Management Protocol (STD 15, RFC 1157), it
    will be\n   possible to provide integrated network management of combined TCP/IP\n
    \  and DECnet Phase IV based internets.  This document was produced by\n   the
    DECnet Phase IV MIB working group of the Internet Engineering\n   Task Force (IETF).\n
    \  With the adoption of The Simple Network Management Protocol (STD 15,\n   RFC
    1157), the management information base for network management of\n   TCP/IP-based
    internets (STD 17, RFC 1213), and the structure of\n   management information
    (STD 16, RFC 1155), by the Internet, and a\n   large number of vendor implementations
    of these standards in\n   commercially available products, it became possible
    to provide a\n   higher level of effective network management in TCP/IP-based\n
    \  internets than previously available. With the growth in the use of\n   these
    standards, network managers desired to use this environment as\n   a base for
    providing integrated network management of multi-protocol\n   networks.\n   DECnet
    Phase IV is one widely used protocol which often coexists in\n   IP-based internets.
    This memo provides the mechanisms by which IP-\n   based management stations can
    effectively manage DECnet Phase IV\n   based systems (especially router products)
    in an integrated fashion\n   through the use of the standard Internet SMI, MIB
    and Simple Network\n   Management Protocol.\n   DECnet Phase IV objects have been
    defined to be used in conjunction\n   with the Internet MIB to allow access and
    control of these new\n   objects by the Internet community. Additional support
    for other\n   DECnet-based protocols such as RBMS (Remote Bridge Management\n
    \  Software) or other Digital Equipment Corporation specific hardware\n   platforms
    is not included in this document.\n"
  title: 1.  Introduction
- contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management
    Framework consists of three\n   components.  They are:\n   o STD 16, RFC 1155
    which defines the SMI, the mechanisms used for\n     describing and naming objects
    for the purpose of management.\n     STD 16, RFC 1212 defines a more concise description
    mechanism,\n     which is wholly consistent with the SMI.\n   o STD 17, RFC 1213
    defines MIB-II, the core set of managed objects\n     for the Internet suite of
    protocols.\n   o STD 15, RFC 1157 which defines the SNMP, the protocol used for\n
    \    network access to managed objects.\n   The Framework permits new objects
    to be defined for the purpose of\n   experimentation and evaluation.\n"
  - contents:
    - "2.1  Object Definitions\n   Managed objects are accessed via a virtual information
      store, termed\n   the Management Information Base or MIB.  Objects in the MIB
      are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n   defined
      in the SMI.  In particular, each object type is named by an\n   OBJECT IDENTIFIER,
      an administratively assigned name.  The object\n   type together with an object
      instance serves to uniquely identify a\n   specific instantiation of the object.
      \ For human convenience, we\n   often use a textual string, termed the descriptor,
      to refer to the\n   object type.\n"
    title: 2.1  Object Definitions
  title: 2.  The Network Management Framework
- contents:
  - "3.  Selected Objects\n   The objects included in this memo have been created
    from the DIGITAL\n   Network Architecture Network Management Functional Specification\n
    \  Version 4.0.0, dated July 1983. An attempt has been made to provide a\n   reasonable
    ordering of these variables into groups. These groups are:\n        System Group\n
    \       Network Management Group\n        Session Group\n        End Group\n        Routing
    Group\n        Circuit Group\n        DDCMP Group\n        DDCMP Multipoint Control
    Group\n        Ethernet Group\n        Counters Group\n        Adjacency Group\n
    \       Line Group\n        Non Broadcast Line Group\n        Area Group\n   An
    effort has also been made to preserve the original syntax of each\n   object wherever
    possible, for example, a DECnet Phase IV object is\n   Executor State. This was
    originally coded as a NICE (Network\n   Information and Control Exchange) data
    type which is a coded single\n   field object of 1 byte in length. When converted
    for inclusion into\n   the Internet MIB using the Internet SMI, it became an enumerated\n
    \  integer.\n   All objects in this memo are described using the standard Internet\n
    \  SMI and BER of STD 16, RFC 1155. A complete description of an object\n   will
    include the name, syntax and encoding. Just as with objects\n   supported in the
    MIB (STD 17, RFC 1213), an object name is identified\n   with an object identifier
    which has been administratively assigned.\n   This identifies an Object Type.
    When an object type is combined with\n   a specific instance, the particular object
    is uniquely identified.\n   The use of Object Descriptors in this memo is consistent
    with that of\n   STD 17, RFC 1213 - they are text strings meant to be read by
    humans.\n   The descriptors have been taken from the original DIGITAL Network\n
    \  Architecture Network Management Functional Specification Version\n   4.0.0
    Dated July 1983 which defined DECnet Phase IV objects. These\n   names were then
    massaged to put them in a form as consistent as\n   possible with object type
    names listed in the standard Internet MIB.\n   Object defintion information is
    also taken directly from the Network\n   Architecture Network Managment Functional
    Specification cited above\n   wherever possible. In this document, EXECUTOR is
    intended to\n   reference only the DECnet software and is not intended to effect
    any\n   other protocols which may be running on the system.\n"
  title: 3.  Selected Objects
- contents:
  - "4.  Textual Conventions\n   New datatypes have been introduced as a textual conventions
    in this\n   DECnet Phase IV MIB document. The purpose of these additions is to\n
    \  facilitate understanding of new objects in this MIB. No changes to\n   the
    SMI or the SNMP are necessary to support these conventions which\n   are described
    in 5 (Definitions).\n"
  title: 4.  Textual Conventions
- contents:
  - "5.  Definitions\n        DECNET-PHIV-MIB DEFINITIONS ::= BEGIN\n        IMPORTS\n
    \          Gauge\n              FROM RFC1155-SMI\n            OBJECT-TYPE\n               FROM
    RFC-1212\n            mib-2, DisplayString\n              FROM RFC1213-MIB;\n
    \  -- DECNet Phase-IV MIB\n        phiv      OBJECT IDENTIFIER ::= { mib-2 18
    }\n   -- textual conventions\n   PhivAddr ::= OCTET STRING (SIZE (2))\n   -- This
    data type is intended as a short word representation of\n   -- standard DECnet
    Phase IV addresses. DECnet addresses are\n   -- hierarchically structured numbers
    assigned to a particular\n   -- DECnet node. The address is structured so that
    the area\n   -- number is contained in the most significant 6 bits of the\n   --
    first octet.  The next 2 bits of the first octet contain\n   -- the first two
    bits of the host address.  The remainder of\n   -- the host address is contained
    in the second octet.\n   PhivCounter ::= INTEGER\n   -- This data type has been
    created for DECnet counters.  These\n   -- counters latch at their maximum specified
    value until either\n   -- the system is restarted, or they are reset to zero by
    the user\n   -- or management software.\n   InterfaceIndex ::= INTEGER\n   --
    \ The range of ifIndex, i.e., (1..2147483647)\n   -- groups in the decnetiv mib\n
    \        phivSystem             OBJECT IDENTIFIER ::= { phiv 1 }\n         phivManagement
    \        OBJECT IDENTIFIER ::= { phiv 2 }\n         session                OBJECT
    IDENTIFIER ::= { phiv 3 }\n         end                    OBJECT IDENTIFIER ::=
    { phiv 4 }\n         routing                OBJECT IDENTIFIER ::= { phiv 5 }\n
    \        circuit                OBJECT IDENTIFIER ::= { phiv 6 }\n         ddcmp
    \                 OBJECT IDENTIFIER ::= { phiv 7 }\n         control                OBJECT
    IDENTIFIER ::= { phiv 8 }\n         ethernet               OBJECT IDENTIFIER ::=
    { phiv 9 }\n         counters               OBJECT IDENTIFIER ::= { phiv 10 }\n
    \        adjacency              OBJECT IDENTIFIER ::= { phiv 11 }\n         line
    \                  OBJECT IDENTIFIER ::= { phiv 12 }\n         nonBroadcastLine
    \      OBJECT IDENTIFIER ::= { phiv 14 }\n         area                   OBJECT
    IDENTIFIER ::= { phiv 15 }\n   -- System Group\n   -- The implementation of the
    System Group is mandatory for\n   -- all systems.\n   phivSystemState OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            on (1),\n            off (2),\n            shut
    (3),\n            restricted (4)\n        }\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This represents the operational
    state of the executor\n            node.\n            The possible states are:\n
    \           ON          Allows logical links.\n            OFF         Allows
    no new links, terminates existing\n                        links, and stops routing
    traffic through.\n            SHUT        Allows no new logical links, does not\n
    \                       destroy existing logical links, and goes\n                        to
    the OFF state when all logical links are\n                        gone.\n            RESTRICTED
    \ Allows no new incoming logical links from\n                        other nodes.\n
    \           NOTE: These values are incremented by one compared to\n            the
    standard DECnet values in order to maintain\n            compliance with RFC 1155).\"\n
    \       ::= { phivSystem 1 }\n   phivExecIdent OBJECT-TYPE\n        SYNTAX DisplayString
    (SIZE (0..32))\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This is a text string that describes the executor node\n            (for
    example, 'Research Lab').  The string is up to 32\n            characters of any
    type.\"\n        ::= { phivSystem 2 }\n   -- Network Management Group\n   -- The
    implementation of the Network Management Group is\n   -- mandatory for all systems
    which contain a DECnet-style\n   -- management version.\n   phivMgmtMgmtVers OBJECT-TYPE\n
    \       SYNTAX DisplayString (SIZE (0..255))\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This is the read-only Network Management
    Version,\n            consisting of the version number, the Engineering\n            Change
    Order (ECO) number, and the user ECO number\n            (for example, 3.0.0).
    This parameter applies to the\n            executor node only.\"\n        ::=
    { phivManagement 1 }\n   -- Session Layer Group\n   -- The implementation of the
    Session Layer Group is optional.\n   -- A system can be said to implement this
    group if and only if\n   -- all objects in this group are implemented.\n   phivSessionSystemName
    OBJECT-TYPE\n        SYNTAX DisplayString (SIZE (0..6))\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Name to be associated
    with the node identification.\n            Only one name can be assigned to a
    node address or a\n            circuit identification. No name should be used
    more than\n            once in a DECnet network. Node-name is one to six upper\n
    \           case alphanumeric characters with at least one alpha\n            character.
    A length of 0 indicates no name.\"\n        ::= { session 1 }\n   phivSessionInTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the maximum
    duration between the\n            time a connect is received for a process at
    the\n            executor node and the time that process accepts or\n            rejects
    it. If the connect is not accepted or rejected\n            by the user within
    the number of seconds specified,\n            Session Control rejects it for the
    user.  A value of 0\n            indicates no timer is running.\"\n        ::=
    { session 2 }\n   phivSessionOutTimer OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the duration between the time the\n            executor requests
    a connect and the time that connect is\n            acknowledged by the destination
    node. If the connect is\n            not acknowledged within the number of seconds\n
    \           specified, Session Control returns an error.  A value of 0\n            indicates
    no timer is running.\"\n        ::= { session 3 }\n   -- End Communication Layer
    Group\n   -- The implementation of the End Communication Layer Group is optional.\n
    \  -- A system can be said to implement this group if and only if\n   -- all objects
    in this group are implemented.\n   -- Remote State Table\n   phivEndRemoteTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivEndRemoteEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Information about
    the state of sessions between the\n            node under study and the nodes
    found in the table.\"\n        ::= { end 1 }\n   phivEndRemoteEntry OBJECT-TYPE\n
    \       SYNTAX PhivEndRemoteEntry\n        ACCESS not-accessible\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Information about a particular remote
    node as seen\n            from the end communication layer.\"\n        INDEX  {
    phivEndRemoteHostNodeID }\n        ::= { phivEndRemoteTable 1 }\n   PhivEndRemoteEntry
    ::=\n        SEQUENCE {\n            phivEndRemoteHostNodeID\n                PhivAddr,\n
    \           phivEndRemoteState\n                INTEGER,\n            phivEndCircuitIndex\n
    \               INTEGER,\n            phivEndActiveLinks\n                INTEGER,\n
    \           phivEndDelay\n                INTEGER\n        }\n   phivEndRemoteHostNodeID
    OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET STRING (SIZE (2))\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This value
    is the address of the remote node to be\n            evaluated.\"\n        ::=
    { phivEndRemoteEntry 1 }\n   phivEndRemoteState OBJECT-TYPE\n        SYNTAX INTEGER
    {\n            on (1),\n            off (2),\n            shut (3),\n            restricted
    (4)\n        }\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This represents the operational state of the remote node\n            being
    evaluated.\n            The possible states are:\n            ON          Allows
    logical links.\n            OFF         Allows no new links, terminates existing\n
    \                       links, and stops routing traffic through.\n            SHUT
    \       Allows no new logical links, does not\n                        destroy
    existing logical links, and goes\n                        to the OFF state when
    all logical links are\n                        gone.\n            RESTRICTED  Allows
    no new incoming logical links from\n                        other nodes.\n            NOTE:
    These values are incremented by one compared to\n            the standard DECnet
    values in order to maintain\n            compliance with RFC 1155.\"\n        ::=
    { phivEndRemoteEntry 2 }\n   phivEndCircuitIndex OBJECT-TYPE\n        SYNTAX INTEGER
    (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"A unique index value for each known circuit used to\n            communicate
    with the remote node.  This is the same\n            value as phivCircuitIndex.\"\n
    \       ::= { phivEndRemoteEntry 3 }\n   phivEndActiveLinks OBJECT-TYPE\n        SYNTAX
    INTEGER (0..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This read-only parameter represents the number of active\n            logical
    links from the executor to the destination node.\"\n        ::= { phivEndRemoteEntry
    4 }\n   phivEndDelay OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This read-only
    parameter is the average round trip\n            delay in seconds to the destination
    node. This\n            parameter is kept on a remote node basis.\"\n        ::=
    { phivEndRemoteEntry 5 }\n   -- End System Counter Table\n   phivEndCountTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivEndCountEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Information about
    the counters associated with each end\n            system that is known to the
    entity. These counters\n            reflect totals from the perspective of the
    executor\n            node.\"\n        ::= { end 2 }\n   phivEndCountEntry OBJECT-TYPE\n
    \       SYNTAX PhivEndCountEntry\n        ACCESS not-accessible\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Information about a particular session
    between two end\n            systems.\"\n        INDEX  { phivEndCountHostNodeID
    }\n        ::= { phivEndCountTable 1 }\n   PhivEndCountEntry ::=\n        SEQUENCE
    {\n            phivEndCountHostNodeID\n                PhivAddr,\n            phivEndCountSecsLastZeroed\n
    \               PhivCounter,\n            phivEndCountUsrBytesRec\n                PhivCounter,\n
    \           phivEndCountUsrBytesSent\n                PhivCounter,\n            phivEndUCountUsrMessRec\n
    \               PhivCounter,\n            phivEndCountUsrMessSent\n                PhivCounter,\n
    \           phivEndCountTotalBytesRec\n                PhivCounter,\n            phivEndCountTotalBytesSent\n
    \               PhivCounter,\n            phivEndCountTotalMessRec\n                PhivCounter,\n
    \           phivEndCountTotalMessSent\n                PhivCounter,\n            phivEndCountConnectsRecd\n
    \               PhivCounter,\n            phivEndCountConnectsSent\n                PhivCounter,\n
    \           phivEndCountReponseTimeouts\n                PhivCounter,\n            phivEndCountRecdConnectResErrs\n
    \               PhivCounter\n        }\n   phivEndCountHostNodeID OBJECT-TYPE\n
    \       SYNTAX PhivAddr -- OCTET STRING (SIZE (2))\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This value is the
    address of the remote node to be\n            evaluated.\"\n        ::= { phivEndCountEntry
    1 }\n   phivEndCountSecsLastZeroed OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value is the number of seconds that have elapsed\n            since the counters
    for the node in this table row were\n            last set to zero. This counter
    is located in the\n            network management layer, but is returned with
    the\n            end system information which follows.\"\n        ::= { phivEndCountEntry
    2 }\n   phivEndCountUsrBytesRec OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of user bytes received from the target host.\"\n        ::= { phivEndCountEntry
    3 }\n   phivEndCountUsrBytesSent OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of user bytes sent to the target host.\"\n        ::= { phivEndCountEntry 4 }\n
    \  phivEndUCountUsrMessRec OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of user messages received from the target host.\"\n        ::= { phivEndCountEntry
    5 }\n   phivEndCountUsrMessSent OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of user messages sent to the target host.\"\n        ::= { phivEndCountEntry 6
    }\n   phivEndCountTotalBytesRec OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of bytes received from the target host.\"\n        ::= { phivEndCountEntry 7 }\n
    \  phivEndCountTotalBytesSent OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of bytes sent to the target host.\"\n        ::= { phivEndCountEntry 8 }\n   phivEndCountTotalMessRec
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of messages
    received from the target host.\"\n        ::= { phivEndCountEntry 9 }\n   phivEndCountTotalMessSent
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of messages
    sent to the target host.\"\n        ::= { phivEndCountEntry 10 }\n   phivEndCountConnectsRecd
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of connects
    received from the target host.\"\n        ::= { phivEndCountEntry 11 }\n   phivEndCountConnectsSent
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of connects
    sent to the target host.\"\n        ::= {phivEndCountEntry 12 }\n   phivEndCountReponseTimeouts
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of response
    timeouts.\"\n        ::= { phivEndCountEntry 13 }\n   phivEndCountRecdConnectResErrs
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of received
    connect resource errors.\"\n        ::= {phivEndCountEntry 14 }\n   -- additional
    End System objects\n   phivEndMaxLinks OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the maximum active logical\n            link count allowed for
    the executor.\"\n        ::= { end 3 }\n   phivEndNSPVers OBJECT-TYPE\n        SYNTAX
    DisplayString (SIZE (0..255))\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This read-only parameter represents the version
    number\n            of the node End Communication S/W. The format is\n            version
    number, ECO, and user ECO, e.g., 4.1.0\"\n        ::= { end 4 }\n   phivEndRetransmitFactor
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the maximum
    number of times the\n            source End Communication at the executor node
    will\n            restart the retransmission timer when it expires. If\n            the
    number is exceeded, Session Control disconnects the\n            logical link
    for the user.\"\n        ::= { end 5 }\n   phivEndDelayFact OBJECT-TYPE\n        SYNTAX
    INTEGER (1..255)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This is the number by which to multiply one sixteenth\n            of
    the estimated round trip delay to a node to set the\n            retransmission
    timer to that node.\"\n        ::= { end 6 }\n   phivEndDelayWeight OBJECT-TYPE\n
    \       SYNTAX INTEGER (1..255)\n        ACCESS read-write\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This number represents the weight to apply
    to a\n            current round trip delay estimate to a remote node\n            when
    updating the estimated round trip delay to a node.\n            On some systems
    the number must be 1 less than a power\n            of 2 for computational efficiency.\"\n
    \       ::= { end 7 }\n   phivEndInactivityTimer OBJECT-TYPE\n        SYNTAX INTEGER
    (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum duration of inactivity\n            (no
    data in either direction) on a logical link before\n            the node checks
    to see if the logical link still works.\n            If no activity occurs within
    the minimum number of\n            seconds, End Communication generates artificial\n
    \           traffic to test the link (End Communication\n            specification).\"\n
    \       ::= { end 8 }\n   phivEndCountZeroCount OBJECT-TYPE\n        SYNTAX INTEGER
    {\n            other (1),\n            reset (2)\n        }\n        ACCESS read-write\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"When this value is
    set to 2, all of the counters in\n            the End System Counter Table are
    set to zero.\"\n        ::= { end 9 }\n   phivEndMaxLinksActive OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..65535)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the high water
    mark for the\n            number of links that were active at any one time.\"\n
    \       ::= { end 10 }\n   -- Routing Layer Group\n   -- The implementation of
    the Routing Layer Group is mandatory for\n   -- all systems that implement level
    1 routing layer\n   -- communications.\n   phivRouteBroadcastRouteTimer OBJECT-TYPE\n
    \       SYNTAX INTEGER (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This value determines the maximum time in seconds\n
    \            allowed between Routing updates on Ethernet\n             circuits.
    When this timer expired before a routing\n             update occurs, a routing
    update is forced.  With a\n             standard calculation, Routing also uses
    this timer\n             to enforce a minimum delay between routing updates.\"\n
    \       ::= { routing 1 }\n   phivRouteBuffSize OBJECT-TYPE\n        SYNTAX INTEGER
    (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This parameter value determines the maximum size of\n             a
    Routing message. It therefore determines the maximum\n             size message
    that can be forwarded.  This size includes\n             protocol overhead down
    to and including the End\n             Communication layer, plus a constant value
    of 6. (This\n             value of 6 is included to provide compatibility with\n
    \            the parameter definition in Phase III, which included\n             the
    Routing overhead.) It does not include Routing or\n             Data link overhead
    (except for the constant value of\n             6). There is one buffer size for
    all circuits.\n             NOTE: The BUFFER SIZE defines the maximum size messages\n
    \            that the Routing layer can forward. The SEGMENT BUFFER\n             SIZE
    (defined below) defines the maximum size messages\n             that the End Communication
    layer can transmit or\n             receive. The SEGMENT BUFFER SIZE is always
    less than\n             or equal to the BUFFER SIZE. Normally the two\n             parameters
    will be equal. They may be different to\n             allow the network manager
    to alter buffer sizes\n             on all nodes without interruption of service.
    They both\n             include an extra 6 bytes for compatibility with Phase\n
    \            III.\"\n        ::= { routing 2 }\n   phivRouteRoutingVers OBJECT-TYPE\n
    \       SYNTAX DisplayString (SIZE (0..255))\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This read-only parameter identifies
    the executor node's\n            Routing version number.  The format is version
    number,\n            ECO, and user ECO, e.g., 4.1.0\"\n        ::= { routing 3
    }\n   phivRouteMaxAddr OBJECT-TYPE\n        SYNTAX INTEGER (1..1023)\n        ACCESS
    read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the largest node number and,\n            therefore, number of
    nodes that can be known about\n            by the executor node's home area.\"\n
    \       ::= { routing 4 }\n   phivRouteMaxBdcastNonRouters OBJECT-TYPE\n        SYNTAX
    INTEGER (0..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum total number of\n            nonrouters
    the executor node can have on its Ethernet\n            circuits.\"\n        ::=
    { routing 5 }\n   phivRouteMaxBdcastRouters OBJECT-TYPE\n        SYNTAX INTEGER
    (0..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum total number of\n            routers
    the executor node can have on its Ethernet\n            circuits.\"\n        ::=
    { routing 6 }\n   phivRouteMaxBuffs OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the maximum number of transmit\n            buffers that Routing
    may use for all circuits.\"\n        ::= { routing 7 }\n   phivRouteMaxCircuits
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the maximum
    number of Routing\n            circuits that the executor node can know about.\"\n
    \       ::= { routing 8 }\n   phivRouteMaxCost OBJECT-TYPE\n        SYNTAX INTEGER
    (1..1022)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum total path cost\n            allowed
    from the executor to any node within an area.\n            The path cost is the
    sum of the circuit costs along\n            a path between two nodes. This parameter
    defines the\n            point where the executor node's Routing routing\n            decision
    algorithm declares another node unreachable\n            because the cost of the
    least costly path to the\n            other node is excessive. For correct operation,
    this\n            parameter must not be less than the maximum path cost\n            of
    the network.\"\n        ::= { routing 9 }\n   phivRouteMaxHops OBJECT-TYPE\n        SYNTAX
    INTEGER (1..30)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum number of routing hops\n            allowable
    from the executor to any other reachable node\n            within an area. (A
    hop is the logical distance over a\n            circuit between two adjacent nodes.)
    This parameter\n            defines the point where the executor node's Routing\n
    \           routing decision algorithm declares another node\n            unreachable
    because the length of the shortest path\n            between the two nodes is
    too long. For correct\n            operation, this parameter must not be less
    than the\n            network diameter. (The network diameter is the\n            reachability
    distance between the two nodes of the\n            network having the greatest
    reachability distance,\n            where reachability distance is the length
    the shortest\n            path between a given pair of nodes.)\"\n        ::=
    { routing 10 }\n   phivRouteMaxVisits OBJECT-TYPE\n        SYNTAX INTEGER (1..63)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the maximum number of nodes a\n            message coming into
    the executor node can have visited.\n            If the message is not for this
    node and the MAXIMUM\n            VISITS number is exceeded, the message is discarded.\n
    \           The MAXIMUM VISITS parameter defines the point where\n            the
    packet lifetime control algorithm discards\n            a packet that has traversed
    too many nodes. For correct\n            operation, this parameter must not be
    less than the\n            maximum path length of the network. (The maximum path\n
    \           length is the routing distance between the two nodes of\n            the
    network having the greatest routing distance, where\n            routing distance
    is the length of the least costly\n            path between a given pair of nodes.)\"\n
    \       ::= { routing 11 }\n   phivRouteRoutingTimer OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value determines the maximum time in seconds\n            allowed
    between Routing updates on non-Ethernet\n            circuits. When this timer
    expires before a routing\n            update occurs, a routing update is forced.\"\n
    \       ::= { routing 12 }\n   phivRouteSegBuffSize OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This parameter value determines the maximum size of an\n            end-to-end
    segment. The size is a decimal integer in\n            the range 1-65535. This
    size is in bytes. This size\n            includes protocol overhead down to and
    including the\n            End Communication layer, plus a constant value of 6.\n
    \           (This value of 6 is included to provide compatibility\n            with
    the BUFFER SIZE parameter definition.) It does not\n            include Routing
    or Data link overhead (except for the\n            constant value of 6).\"\n        ::=
    { routing 13 }\n   phivRouteType OBJECT-TYPE\n        SYNTAX INTEGER {\n            routing-III
    (1),\n            nonrouting-III (2),\n            area (3),\n            routing-IV
    (4),\n            nonrouting-IV (5)\n        }\n        ACCESS read-only\n        STATUS
    obsolete\n        DESCRIPTION\n            \"This parameter indicates the type
    of the executor\n            node. The node-type is one of the following:\n            routing-III\n
    \           nonrouting-III\n            routing-IV\n            ronrouting-IV\n
    \           area\n            A routing node has full routing capability. A\n
    \           nonrouting node contains a subset of the Routing\n            routing
    modules. The III and IV indicate the DNA\n            phase of the node. Nonrouting
    nodes can deliver\n            and receive packets to and from any node, but cannot\n
    \           route packets from other nodes through to other nodes.\n            An
    area node routes between areas. Refer to the Routing\n            specification
    for details.\n            For adjacent nodes, this is a read-only parameter that\n
    \           indicates the type of the reachable adjacent node.\n            NOTE:
    The ROUTING-III and NONROUTING-III values are\n            incremented by one
    compared to the standard DECnet\n            values in order to maintain compliance
    with RFC 1155)\"\n        ::= { routing 14 }\n   phivRouteCountAgedPktLoss OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..127)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of aged packet losses.\"\n
    \       ::= { routing 15 }\n   phivRouteCountNodeUnrPktLoss OBJECT-TYPE\n        SYNTAX
    PhivCounter (0..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of node unreachable packet losses.\"\n        ::= { routing
    16 }\n   phivRouteCountOutRngePktLoss OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..127)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of node out-of-range packet losses.\"\n        ::= { routing
    17 }\n   phivRouteCountOverSzePktLoss OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..127)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of Oversized packet losses.\"\n        ::= { routing 18 }\n
    \  phivRouteCountPacketFmtErr OBJECT-TYPE\n        SYNTAX PhivCounter (0..127)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of packet format errors.\"\n        ::= { routing 19 }\n   phivRouteCountPtlRteUpdtLoss
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..127)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of partial routing update
    losses.\"\n        ::= { routing 20 }\n   phivRouteCountVerifReject OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..127)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of verification rejects.\"\n
    \       ::= { routing 21 }\n   -- Level 1 Routing Table\n   phivLevel1RouteTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivLevel1RouteEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Information about
    the currently known DECnet Phase\n            IV Routes.\"\n        ::= { routing
    22 }\n   phivLevel1RouteEntry OBJECT-TYPE\n        SYNTAX PhivLevel1RouteEntry\n
    \       ACCESS not-accessible\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Information about the currently known DECnet Phase\n            IV
    Routes.\"\n        INDEX  { phivLevel1RouteNodeAddr }\n        ::= { phivLevel1RouteTable
    1 }\n   PhivLevel1RouteEntry ::=\n        SEQUENCE {\n            phivLevel1RouteNodeAddr\n
    \               PhivAddr,\n            phivLevel1RouteCircuitIndex\n                INTEGER,\n
    \           phivLevel1RouteCost\n                INTEGER,\n            phivLevel1RouteHops\n
    \               INTEGER,\n            phivLevel1RouteNextNode\n                PhivAddr\n
    \       }\n   phivLevel1RouteNodeAddr OBJECT-TYPE\n        SYNTAX PhivAddr --
    OCTET STRING (SIZE (2))\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This value is the address of the node about
    which\n            routing information is contained in this level 1\n            routing
    table.\"\n        ::= { phivLevel1RouteEntry 1 }\n   phivLevel1RouteCircuitIndex
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"A unique index value for each known
    circuit. This is\n            the index to the circuit state table and is the
    same\n            value as phivCircuitIndex.\"\n        ::= { phivLevel1RouteEntry
    2 }\n   phivLevel1RouteCost OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This read-only
    parameter represents the total cost\n            over the current path to the
    destination node. Cost is\n            a positive integer value associated with
    using a\n            circuit. Routing routes messages (data) along the path\n
    \           between two nodes with the smallest cost. COST is kept\n            on
    a remote node basis.\"\n        ::= { phivLevel1RouteEntry 3 }\n   phivLevel1RouteHops
    OBJECT-TYPE\n        SYNTAX INTEGER (0..127)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This read-only parameter represents
    the number of hops\n            over to a destination node. A hop is Routing value\n
    \           representing the logical distance between two nodes in\n            a
    network. HOPS is kept on a remote node basis.\"\n        ::= { phivLevel1RouteEntry
    4 }\n   phivLevel1RouteNextNode OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET
    STRING (SIZE (2))\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This read-only value indicates the next node on the\n            circuit
    used to get to the node under scrutiny\n            (next hop).\"\n        ::=
    { phivLevel1RouteEntry 5 }\n   -- Additional routing parameters\n   phivRouteCountZeroCount
    OBJECT-TYPE\n        SYNTAX INTEGER {\n            other (1),\n            reset
    (2)\n        }\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"When this value is set to 2, the following objects are\n            set
    to Zero: phivRouteCountAgedPktLoss,\n            phivRouteCountNodeUnrPktLoss,\n
    \           phivRouteCountOutRngePktLoss,\n            phivRouteCountOverSzePktLoss,\n
    \           phivRouteCountPacketFmtErr,\n            phivRouteCountPtlRteUpdtLoss,
    and\n            phivRouteCountVerifReject.\"\n        ::= { routing 23 }\n   phivRouteSystemAddr
    OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET STRING (SIZE (2))\n        ACCESS
    read-only\n        STATUS obsolete\n        DESCRIPTION\n            \"DECnet
    Phase IV node address.\"\n        ::= { routing 24 }\n   phivRouteRoutingType
    OBJECT-TYPE\n        SYNTAX INTEGER {\n            routing-III (1),\n            nonrouting-III
    (2),\n            area (3),\n            routing-IV (4),\n            nonrouting-IV
    (5)\n        }\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This read-write parameter indicates the type of the executor\n            node.
    The node-type is one of the following:\n            routing-III\n            nonrouting-III\n
    \           routing-IV\n            ronrouting-IV\n            area\n            A
    routing node has full routing capability. A\n            nonrouting node contains
    a subset of the Routing\n            routing modules. The III and IV indicate
    the DNA\n            phase of the node. Nonrouting nodes can deliver\n            and
    receive packets to and from any node, but cannot\n            route packets from
    other nodes through to other nodes.\n            An area node routes between areas.
    Refer to the Routing\n            specification for details.\n            For
    adjacent nodes, this is a read-only parameter that\n            indicates the
    type of the reachable adjacent node.\n            NOTE: The ROUTING-III and NONROUTING-III
    values are\n            incremented by one compared to the standard DECnet\n            values
    in order to maintain compliance with RFC 1155)\"\n        ::= { routing 25 }\n
    \  phivRouteSystemAddress OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET STRING
    (SIZE (2))\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"DECnet Phase IV node address.\"\n        ::= { routing 26 }\n   --
    Circuit Group\n   -- The implementation of the Circuit Group is mandatory for\n
    \  -- all systems.\n   -- Circuit Parameters Table\n   phivCircuitParametersTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivCircuitParametersEntry\n        ACCESS
    not-accessible\n        STATUS mandatory\n        DESCRIPTION\n            \"Information
    about the parameters associated with all\n            circuits currently known.\"\n
    \       ::= {circuit 1 }\n   phivCircuitParametersEntry OBJECT-TYPE\n        SYNTAX
    PhivCircuitParametersEntry\n        ACCESS not-accessible\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Parameters information about all circuits currently\n
    \            known.\"\n        INDEX  { phivCircuitIndex }\n        ::= { phivCircuitParametersTable
    1 }\n   PhivCircuitParametersEntry ::=\n        SEQUENCE {\n            phivCircuitIndex\n
    \               INTEGER,\n            phivCircuitLineIndex\n                INTEGER,\n
    \           phivCircuitCommonState\n                INTEGER,\n            phivCircuitCommonSubState\n
    \               INTEGER,\n            phivCircuitCommonName\n                DisplayString,\n
    \           phivCircuitExecRecallTimer\n                INTEGER,\n            phivCircuitCommonType\n
    \               INTEGER,\n            phivCircuitService\n                INTEGER,\n
    \           phivCircuitExecCost\n                INTEGER,\n            phivCircuitExecHelloTimer\n
    \               INTEGER\n       }\n   phivCircuitIndex OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"A unique index value for each known circuit.\"\n        ::= { phivCircuitParametersEntry
    1 }\n   phivCircuitLineIndex OBJECT-TYPE\n        SYNTAX InterfaceIndex\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"The line
    on which this circuit is active.  This is\n             the same as the ifIndex.\"\n
    \       ::= { phivCircuitParametersEntry 2 }\n   phivCircuitCommonState OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            on (1),\n            off (2),\n            service
    (3),\n            cleared (4)\n        }\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the circuit's
    Network Management\n            operational state. NOTE: These values are incremented\n
    \           by one compared to the standard DECnet values in order\n            to
    maintain compliance with RFC 1155.\"\n        ::= { phivCircuitParametersEntry
    3 }\n   phivCircuitCommonSubState OBJECT-TYPE\n        SYNTAX INTEGER {\n            starting
    (1),\n            reflecting (2),\n            looping (3),\n            loading
    (4),\n            dumping (5),\n            triggering (6),\n            autoservice
    (7),\n            autoloading (8),\n            autodumping (9),\n            autotriggering
    (10),\n            synchronizing (11),\n            failed (12),\n            running
    (13)\n        }\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the circuit's Network Management\n            operational
    and service substate. NOTE: These values are\n            incremented by one compared
    to the standard DECnet values\n            in order to maintain compliance with
    RFC 1155.\"\n        ::= { phivCircuitParametersEntry 4 }\n   phivCircuitCommonName
    OBJECT-TYPE\n        SYNTAX DisplayString (SIZE (0..16))\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"The name of the circuit
    entry in the table, for example,\n             SVA-0 or in a level 2 router ASYNC-8
    or ETHER-1).\"\n        ::= { phivCircuitParametersEntry 5 }\n   phivCircuitExecRecallTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This parameter represents the minimum
    number of\n            seconds to wait before restarting the circuit.  A\n            value
    of 0 indicates not timer is running.\"\n        ::= { phivCircuitParametersEntry
    6 }\n   phivCircuitCommonType OBJECT-TYPE\n        SYNTAX INTEGER {\n            ddcmp-point
    (1),\n            ddcmp-control (2),\n            ddcmp-tributary (3),\n            x25
    (4),\n            ddcmp-dmc (5),\n            ethernet (6),\n            ci (7),\n
    \           qp2-dte20 (8),\n            bisync (9),\n            other (14),\n
    \           fddi (15)\n        }\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Represents the type of the circuit. For X.25
    circuits,\n            the value must be set to X25. For DDCMP and Ethernet\n
    \           circuits it is read only and is the same value as the\n            protocol
    of the associated line.\n            NOTE: Values 1 - 5 are incremented by one
    compared to the\n            standard DECnet values in order to maintain compliance\n
    \           with RFC 1155.\"\n        ::= { phivCircuitParametersEntry 7 }\n   phivCircuitService
    \ OBJECT-TYPE\n        SYNTAX INTEGER {\n            enabled (1),\n            disabled
    (2)\n        }\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value indicates whether or not Network Management\n            allows
    service operations on a circuit. The values for\n            service-control are
    as follows:\n            ENABLED     SERVICE state and/or service functions are\n
    \                       allowed.\n            DISABLED    SERVICE state and/or
    service functions are not\n                        allowed.\n            NOTE:
    These values are incremented by one compared to the\n            standard DECnet
    values in order to maintain compliance\n            with RFC 1155.\"\n        ::=
    { phivCircuitParametersEntry 8 }\n   phivCircuitExecCost OBJECT-TYPE\n        SYNTAX
    INTEGER (1..25)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the routing cost of the circuit.\n            Routing
    sends messages along the path between two nodes\n            having the smallest
    cost.\"\n        ::= { phivCircuitParametersEntry 9 }\n   phivCircuitExecHelloTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (1..8191)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value determines the frequency
    of Routing Hello\n            messages sent to the adjacent node on the circuit.\"\n
    \       ::= { phivCircuitParametersEntry 10 }\n   -- Circuit Counters Table\n
    \  phivCircuitCountTable OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivCircuitCountEntry\n
    \       ACCESS not-accessible\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Information about the counters associated with all\n            circuits
    currently known.\"\n        ::= { circuit 2 }\n          phivCircuitCountEntry
    OBJECT-TYPE\n        SYNTAX PhivCircuitCountEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Counter information
    about all circuits currently known\"\n        INDEX     { phivCircuitIndex }\n
    \       ::= { phivCircuitCountTable 1 }\n   PhivCircuitCountEntry ::=\n        SEQUENCE
    {\n            phivCircuitCountSecLastZeroed\n                PhivCounter,\n            phivCircuitCountTermPacketsRecd\n
    \               PhivCounter,\n            phivCircuitCountOriginPackSent\n                PhivCounter,\n
    \           phivCircuitCountTermCongLoss\n                PhivCounter,\n            phivCircuitCountCorruptLoss\n
    \               PhivCounter,\n            phivCircuitCountTransitPksRecd\n                PhivCounter,\n
    \           phivCircuitCountTransitPkSent\n                PhivCounter,\n            phivCircuitCountTransitCongestLoss\n
    \               PhivCounter,\n            phivCircuitCountCircuitDown\n                PhivCounter,\n
    \           phivCircuitCountInitFailure\n                PhivCounter,\n            phivCircuitCountAdjDown\n
    \               PhivCounter,\n            phivCircuitCountPeakAdj\n                PhivCounter,\n
    \           phivCircuitCountBytesRecd\n                PhivCounter,\n            phivCircuitCountBytesSent\n
    \               PhivCounter,\n            phivCircuitCountDataBlocksRecd\n                PhivCounter,\n
    \           phivCircuitCountDataBlocksSent\n                PhivCounter,\n            phivCircuitCountUsrBuffUnav\n
    \               PhivCounter\n        }\n   phivCircuitCountSecLastZeroed  OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of seconds since the circuit
    counters for this\n            circuit were last zeroed.\"\n        ::= { phivCircuitCountEntry
    1 }\n   phivCircuitCountTermPacketsRecd OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of terminating packets received on this circuit.\"\n        ::=
    { phivCircuitCountEntry 2 }\n   phivCircuitCountOriginPackSent OBJECT-TYPE\n        SYNTAX
    PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Number of originating packets sent on this
    circuit.\"\n        ::= { phivCircuitCountEntry 3 }\n   phivCircuitCountTermCongLoss
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of terminating
    congestion losses on this\n            circuit.\"\n        ::= { phivCircuitCountEntry
    4 }\n   phivCircuitCountCorruptLoss OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of corruption losses on this circuit.\"\n        ::= { phivCircuitCountEntry 5
    }\n   phivCircuitCountTransitPksRecd OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of Transit packets received on this circuit.\"\n        ::= { phivCircuitCountEntry
    6 }\n   phivCircuitCountTransitPkSent OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of transit packets sent on this circuit.\"\n        ::= {
    phivCircuitCountEntry 7 }\n   phivCircuitCountTransitCongestLoss OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of transit congestion losses
    on this circuit.\"\n        ::= { phivCircuitCountEntry 8 }\n   phivCircuitCountCircuitDown
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of circuit downs on this
    circuit.\"\n        ::= { phivCircuitCountEntry 9 }\n   phivCircuitCountInitFailure
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of Initialization failures
    on this circuit.\"\n        ::= { phivCircuitCountEntry 10 }\n   phivCircuitCountAdjDown
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This counter indicates
    the number of adjacency losses\n            that result from any of the following:\n
    \                Node listener timeout\n                 Invalid data received
    at node listener\n                 Unexpected control (initialization or verification)\n
    \                    message received\n                 Routing message received
    with a checksum error\n                 Node identification from a routing message
    or a\n                 Hello message that is not the one expected Hello\n                 message
    received indicating that connectivity\n                 became one-way\n                 Adjacency
    idled.\"\n        ::= { phivCircuitCountEntry 11 }\n   phivCircuitCountPeakAdj
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This counter indicates
    the maximum number of nodes\n            that are up on the circuit.\"\n        ::=
    { phivCircuitCountEntry 12 }\n   phivCircuitCountBytesRecd OBJECT-TYPE\n        SYNTAX
    PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Number of bytes received on this circuit.\"\n
    \       ::= { phivCircuitCountEntry 13 }\n   phivCircuitCountBytesSent OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of bytes sent on this circuit.\"\n
    \       ::= { phivCircuitCountEntry 14 }\n   phivCircuitCountDataBlocksRecd OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of data blocks received on
    this circuit.\"\n        ::= { phivCircuitCountEntry 15 }\n   phivCircuitCountDataBlocksSent
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of data blocks
    sent on this circuit.\"\n        ::= { phivCircuitCountEntry 16 }\n   phivCircuitCountUsrBuffUnav
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of user buffer
    unavailable errors.\"\n        ::= { phivCircuitCountEntry 17 }\n   -- Additional
    Circuit Parameters\n   phivCircuitOrigQueueLimit OBJECT-TYPE\n        SYNTAX INTEGER\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    parameter indicates the maximum number of\n            originating packets that
    may be outstanding on this\n            circuit. This does not include route-thru
    traffic.\"\n        ::= { circuit 3 }\n   phivCircuitCountZeroCount OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            other (1),\n            reset (2)\n        }\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"When
    this value is set to 2, all of the counters in the\n            Circuit Counter
    Table are set to zero.\"\n        ::= { circuit 4 }\n   -- DDCMP Circuit Group\n
    \  -- The implementation of the DDCMP Circuit Group is optional.\n   -- A system
    can be said to implement this group if and only if\n   -- all objects in this
    group are implemented.\n   -- DDCMP Parameters Table\n   phivDDCMPCircuitParametersTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivDDCMPCircuitParametersEntry\n        ACCESS
    not-accessible\n        STATUS mandatory\n        DESCRIPTION\n            \"Information
    about DDCMP circuit parameters.\"\n        ::= { ddcmp 1}\n   phivDDCMPCircuitParametersEntry
    OBJECT-TYPE\n        SYNTAX PhivDDCMPCircuitParametersEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Parameters information
    about DDCMP circuits currently\n             known.\"\n        INDEX     { phivDDCMPCircuitIndex
    }\n        ::= { phivDDCMPCircuitParametersTable 1 }\n   PhivDDCMPCircuitParametersEntry
    ::=\n        SEQUENCE {\n            phivDDCMPCircuitIndex\n                INTEGER,\n
    \           phivDDCMPCircuitAdjNodeAddr\n                INTEGER,\n            phivDDCMPCircuitTributary\n
    \               INTEGER\n        }\n   phivDDCMPCircuitIndex OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"A unique index value for each known DDCMP circuit.\n            This
    is the same value as phivCircuitIndex.\"\n        ::= { phivDDCMPCircuitParametersEntry
    1 }\n   phivDDCMPCircuitAdjNodeAddr OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET
    STRING (SIZE (2))\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"The address of the adjacent node.\"\n        ::= { phivDDCMPCircuitParametersEntry
    2 }\n   phivDDCMPCircuitTributary OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the Data Link physical tributary\n            address of the
    circuit.\"\n        ::= { phivDDCMPCircuitParametersEntry 3 }\n   -- DDCMP Circuit
    Counter Table\n   phivDDCMPCircuitCountTable OBJECT-TYPE\n        SYNTAX SEQUENCE
    OF PhivDDCMPCircuitCountEntry\n        ACCESS not-accessible\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Information about the DDCMP counters associated
    with all\n            circuits currently known.\"\n        ::= { ddcmp 2 }\n   phivDDCMPCircuitCountEntry
    OBJECT-TYPE\n        SYNTAX PhivDDCMPCircuitCountEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Counter information
    about DDCMP circuits now known\"\n        INDEX     { phivCircuitIndex }\n        ::=
    { phivDDCMPCircuitCountTable 1 }\n   PhivDDCMPCircuitCountEntry ::=\n        SEQUENCE
    {\n            phivDDCMPCircuitErrorsInbd\n                PhivCounter,\n            phivDDCMPCircuitErrorsOutbd\n
    \               PhivCounter,\n            phivDDCMPCircuitRmteReplyTimeouts\n
    \               PhivCounter,\n            phivDDCMPCircuitLocalReplyTimeouts\n
    \               PhivCounter,\n            phivDDCMPCircuitRmteBuffErrors\n                PhivCounter,\n
    \           phivDDCMPCircuitLocalBuffErrors\n                PhivCounter,\n            phivDDCMPCircuitSelectIntervalsElap\n
    \               PhivCounter,\n            phivDDCMPCircuitSelectTimeouts\n                PhivCounter\n
    \       }\n   phivDDCMPCircuitErrorsInbd OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..255)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of Data errors inbound.\"\n        ::= { phivDDCMPCircuitCountEntry
    1 }\n   phivDDCMPCircuitErrorsOutbd OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of outbound data errors.\"\n        ::= { phivDDCMPCircuitCountEntry 2 }\n   phivDDCMPCircuitRmteReplyTimeouts
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of remote reply timeouts.\"\n
    \       ::= { phivDDCMPCircuitCountEntry 3 }\n   phivDDCMPCircuitLocalReplyTimeouts
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of local Reply timeouts.\"\n
    \       ::= { phivDDCMPCircuitCountEntry 4 }\n   phivDDCMPCircuitRmteBuffErrors
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of remote reply time out
    errors.\"\n        ::= { phivDDCMPCircuitCountEntry 5 }\n   phivDDCMPCircuitLocalBuffErrors
    \ OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of local buffer
    errors.\"\n        ::= { phivDDCMPCircuitCountEntry 6 }\n   phivDDCMPCircuitSelectIntervalsElap
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Selection intervals
    that have elapsed.\"\n        ::= {phivDDCMPCircuitCountEntry 7 }\n   phivDDCMPCircuitSelectTimeouts
    OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of selection timeouts.\"\n
    \       ::= {phivDDCMPCircuitCountEntry 8 }\n   -- DDCMP Line Count Table\n   phivDDCMPLineCountTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivDDCMPLineCountEntry\n        ACCESS
    not-accessible\n        STATUS mandatory\n        DESCRIPTION\n            \"The
    DDCMP Line Count Table.\"\n        ::= { ddcmp 3 }\n   phivDDCMPLineCountEntry
    OBJECT-TYPE\n        SYNTAX PhivDDCMPLineCountEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"There is one entry
    in the table for each line.\"\n        INDEX  { phivDDCMPLineCountIndex }\n        ::=
    { phivDDCMPLineCountTable 1 }\n   PhivDDCMPLineCountEntry ::=\n        SEQUENCE
    {\n            phivDDCMPLineCountIndex\n                InterfaceIndex,\n            phivDDCMPLineCountDataErrsIn\n
    \               PhivCounter,\n            phivDDCMPLineCountRmteStationErrs\n
    \               PhivCounter,\n            phivDDCMPLineCountLocalStationErrs\n
    \               PhivCounter\n        }\n   phivDDCMPLineCountIndex OBJECT-TYPE\n
    \       SYNTAX InterfaceIndex\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"The line on which this entry's equivalence
    is\n            effective. The interface identified by a particular\n            value
    of this index is the same interface as\n            identified by the same value
    of phivLineIndex.\n            This value is the ifIndex.\"\n        ::= { phivDDCMPLineCountEntry
    1 }\n   phivDDCMPLineCountDataErrsIn OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of data errors inbound.\"\n        ::= { phivDDCMPLineCountEntry 2 }\n   phivDDCMPLineCountRmteStationErrs
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of remote station errors.\"\n
    \       ::= { phivDDCMPLineCountEntry 3 }\n   phivDDCMPLineCountLocalStationErrs
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..255)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n             \"Number of local station errors.\"\n
    \       ::= { phivDDCMPLineCountEntry 4 }\n   -- DDCMP Multipoint Circuit Control
    Group\n   -- The implementation of the DDCMP Multipoint Circuit Control\n   --
    Group is optional.  A system can be said to implement this group\n   -- if and
    only if all objects in this group are implemented.\n   phivControlSchedTimer OBJECT-TYPE\n
    \       SYNTAX INTEGER (50..65535)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This value represents the number of milliseconds\n
    \           between recalculation of tributary polling priorities.\"\n        DEFVAL
    { 200 }\n        ::= { control 1 }\n   phivControlDeadTimer OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the number of milliseconds\n            between
    polls of one of the set of dead\n            tributaries.\"\n        DEFVAL {
    10000 }\n        ::= { control 2 }\n   phivControlDelayTimer OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the minimum number of\n            milliseconds
    to delay between polls. The delay timer\n            limits the effect of a very
    fast control station on\n            slow tributaries.\"\n        ::= { control
    3 }\n   phivControlStreamTimer OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the number of milliseconds a\n            tributary or a half
    duplex remote station is\n            allowed to hold the line.\n            NOTE:
    This parameter can also be applied to\n            half-duplex lines of type DDCMP
    POINT.\"\n        DEFVAL { 6000 }\n        ::= { control 4 }\n   -- DDCMP Multipoint
    Circuit Control Parameters Table\n   phivControlParametersTable OBJECT-TYPE\n
    \       SYNTAX SEQUENCE OF PhivControlParametersEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Information about
    control circuit parameters.\"\n        ::= { control 5 }\n   phivControlParametersEntry
    OBJECT-TYPE\n        SYNTAX PhivControlParametersEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Parameters information
    about control circuits\n            currently known.\"\n        INDEX  { phivControlCircuitIndex
    }\n        ::= { phivControlParametersTable 1 }\n   PhivControlParametersEntry
    ::=\n        SEQUENCE {\n            phivControlCircuitIndex\n                INTEGER,\n
    \           phivControlBabbleTimer\n                INTEGER,\n            phivControlMaxBuffs\n
    \               INTEGER,\n            phivControlMaxTransmits\n                INTEGER,\n
    \           phivControlDyingBase\n                INTEGER,\n            phivControlDyingIncrement\n
    \               INTEGER,\n            phivControlDeadThreshold\n                INTEGER,\n
    \           phivControlDyingThreshold\n                INTEGER,\n            phivControlInactTreshold\n
    \               INTEGER,\n            phivControlPollingState\n                INTEGER,\n
    \           phivControlPollingSubState\n                INTEGER,\n            phivControlTransTimer\n
    \               INTEGER\n        }\n   phivControlCircuitIndex OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"A unique index value for each known multipoint\n            control
    circuit.\n            This is the same value as phivCircuitIndex.\"\n        ::=
    { phivControlParametersEntry 1 }\n   phivControlBabbleTimer OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the number of milliseconds that a\n            selected
    tributary or remote half-duplex station is\n            allowed to transmit.\"\n
    \       DEFVAL { 6000 }\n        ::= { phivControlParametersEntry 2 }\n   phivControlMaxBuffs
    \ OBJECT-TYPE\n        SYNTAX INTEGER (1..254)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the maximum
    number of buffers the\n            tributary can use from a common buffer pool.
    If not\n            set, there is no common buffer pool and buffers are\n            explicitly
    supplied by the higher level. Count is a\n            decimal integer in the range
    1-254.\"\n        ::= { phivControlParametersEntry 3 }\n   phivControlMaxTransmits
    \ OBJECT-TYPE\n        SYNTAX INTEGER (1..255)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the maximum
    number of data\n            messages that can be transmitted at one time. Count\n
    \           is a decimal integer in the range 1-255.\"\n        DEFVAL { 4 }\n
    \       ::= { phivControlParametersEntry 4 }\n   phivControlDyingBase OBJECT-TYPE\n
    \       SYNTAX INTEGER (0..255)\n        ACCESS read-write\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This value represents the base priority to
    which a\n            tributary is reset each time it has been polled. A\n            separate
    base can be set for each of the indicated\n            polling states. Base is
    a decimal integer in the range\n            0-255.  If not set, the defaults are:
    active, 255;\n            inactive, 0; and dying, 0.\"\n        ::= { phivControlParametersEntry
    5 }\n   phivControlDyingIncrement OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the increment added to the\n            tributary priority each
    time the scheduling timer\n            expires.  If not set, the defaults are:
    active, 0;\n            inactive, 64; and dying, 16.\"\n        ::= { phivControlParametersEntry
    6 }\n   phivControlDeadThreshold OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the number of times to poll the\n            active, inactive,
    or dying tributary before changing\n            its polling state to dead because
    of receive timeouts.\n            Count is a decimal integer in the range 0-255.\"\n
    \       DEFVAL { 8 }\n        ::= { phivControlParametersEntry 7 }\n   phivControlDyingThreshold
    OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n        ACCESS read-write\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the number
    of times to poll the\n            active or inactive tributary before changing
    its\n            polling state to dying because of receive timeouts.\n            Count
    is a decimal integer in the range 0-255.\"\n        DEFVAL { 2 }\n        ::=
    { phivControlParametersEntry 8 }\n   phivControlInactTreshold OBJECT-TYPE\n        SYNTAX
    INTEGER (0..255)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the number of times to poll the\n            active
    tributary before changing its polling state to\n            inactive because of
    no data response. Count is a\n            decimal integer in the range\n            0-255.\"\n
    \       DEFVAL { 8 }\n        ::= { phivControlParametersEntry 9 }\n   phivControlPollingState
    OBJECT-TYPE\n        SYNTAX INTEGER {\n            automatic (1),\n            active
    (2),\n            inactive (3),\n            dying (4),\n            dead (5)\n
    \       }\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the state of the tributary\n            relative
    to the multipoint polling algorithm.  If not\n            set the default is AUTOMATIC.
    The possible states are:\n            AUTOMATIC\n              The tributary's
    state is allowed to vary according to\n              the operation of the polling
    algorithm.\n            ACTIVE/INACTIVE/DYING/DEAD\n              The tributary
    is locked in the specified state.\n             NOTE: These values are incremented
    by one compared to\n             the standard DECnet values in order to maintain\n
    \            compliance with RFC 1155.\"\n        ::= { phivControlParametersEntry
    10 }\n   phivControlPollingSubState OBJECT-TYPE\n        SYNTAX INTEGER {\n            active
    (1),\n            inactive (2),\n            dying (3),\n            dead (4)\n
    \       }\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the tributary's state as\n            determined
    by the polling algorithm.  This applies\n            only when the polling state
    is AUTOMATIC and is\n            read-only to Network Management.  Polling-substate
    is\n            one of ACTIVE, INACTIVE, DYING, or DEAD.  It is\n            displayed
    as a tag on the polling state, for example:\n            AUTOMATIC-INACTIVE.\"\n
    \       ::= { phivControlParametersEntry 11 }\n   phivControlTransTimer OBJECT-TYPE\n
    \       SYNTAX INTEGER (0..65535)\n        ACCESS read-write\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"This value represents the number of milliseconds
    to\n            delay between data message transmits. Milliseconds is\n            a
    decimal integer in the range 0-65535.\"\n        DEFVAL { 0 }\n        ::= { phivControlParametersEntry
    12 }\n   -- Ethernet Group\n   -- The implementation of the Ethernet Group is
    mandatory\n   -- for all systems which support ethernet links.\n   -- Ethernet
    Parameters Table\n   phivEthLinkParametersTable OBJECT-TYPE\n        SYNTAX SEQUENCE
    OF PhivEthLinkParametersEntry\n        ACCESS not-accessible\n        STATUS mandatory\n
    \       DESCRIPTION\n             \"Information about ethernet link parameters.\"\n
    \       ::= { ethernet 1}\n   phivEthLinkParametersEntry OBJECT-TYPE\n        SYNTAX
    PhivEthLinkParametersEntry\n        ACCESS not-accessible\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Parameter information about ethernet links
    currently\n            known.\"\n        INDEX     { phivEthLinkIndex }\n        ::=
    { phivEthLinkParametersTable 1 }\n   PhivEthLinkParametersEntry ::=\n        SEQUENCE
    {\n            phivEthLinkIndex\n                INTEGER,\n            phivEthDesigRouterNodeAddr\n
    \               PhivAddr,\n            phivEthMaxRouters\n                INTEGER,\n
    \           phivEthRouterPri\n                INTEGER,\n            phivEthHardwareAddr\n
    \               OCTET STRING\n         }\n   phivEthLinkIndex OBJECT-TYPE\n        SYNTAX
    INTEGER (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"The circuit over which this links information is\n            collected.
    \ This is the same as phivCircuitIndex.\"\n        ::= { phivEthLinkParametersEntry
    1 }\n   phivEthDesigRouterNodeAddr OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET
    STRING (SIZE (2))\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value is the address of the designated router.\"\n        ::=
    { phivEthLinkParametersEntry 2 }\n   phivEthMaxRouters OBJECT-TYPE\n        SYNTAX
    INTEGER (0..255)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This parameter is the maximum number of routers (other\n             than
    the executor itself) allowed on the circuit by\n             Routing for circuits
    that are owned by the executor\n             node.\"\n        ::= { phivEthLinkParametersEntry
    3 }\n   phivEthRouterPri OBJECT-TYPE\n        SYNTAX INTEGER (0..127)\n        ACCESS
    read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    parameter is the priority that this router is to\n             have in the selection
    of designated router for the\n             circuit on circuits that are owned
    by the executor\n             node.\"\n        DEFVAL { 64 }\n        ::= { phivEthLinkParametersEntry
    4 }\n   phivEthHardwareAddr OBJECT-TYPE\n        SYNTAX OCTET STRING (SIZE (6))\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    read-only parameter is the address that is\n            associated with the line
    device hardware as seen by\n            the DECnet Software.  This value is not
    the same as\n            ifPhysAddress.\"\n        ::= { phivEthLinkParametersEntry
    5 }\n   -- Counters Group\n   -- The implementation of the Counters Group is optional.\n
    \  -- A system can be said to implement this group if and only if\n   -- all objects
    in this group are implemented.\n   -- Counters Table\n   phivCountersCountTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivCountersCountEntry\n        ACCESS
    not-accessible\n        STATUS mandatory\n        DESCRIPTION\n            \"Information
    about ethernet link counters.\"\n        ::= { counters 1 }\n   phivCountersCountEntry
    OBJECT-TYPE\n        SYNTAX PhivCountersCountEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Counter information
    about ethernet links currently\n            known.\"\n        INDEX     { phivCountersIndex
    }\n        ::= { phivCountersCountTable 1 }\n   PhivCountersCountEntry ::=\n        SEQUENCE
    {\n            phivCountersIndex\n                InterfaceIndex,\n            phivCountersCountBytesRecd\n
    \               PhivCounter,\n            phivCountersCountBytesSent\n                PhivCounter,\n
    \           phivCountersCountDataBlocksRecd\n                PhivCounter,\n            phivCountersCountDataBlocksSent\n
    \               PhivCounter,\n            phivCountersCountEthUsrBuffUnav\n                PhivCounter,\n
    \           phivCountersCountMcastBytesRecd\n                PhivCounter,\n            phivCountersCountDataBlksRecd\n
    \               PhivCounter,\n            phivCountersCountDataBlksSent\n                PhivCounter,\n
    \           phivCountersCountMcastBlksRecd\n                PhivCounter,\n            phivCountersCountBlksSentDef\n
    \               PhivCounter,\n            phivCountersCountBlksSentSingleCol\n
    \               PhivCounter,\n            phivCountersCountBlksSentMultCol\n                PhivCounter,\n
    \           phivCountersCountSendFailure\n                PhivCounter,\n            phivCountersCountCollDetectFailure\n
    \               PhivCounter,\n            phivCountersCountReceiveFailure\n                PhivCounter,\n
    \           phivCountersCountUnrecFrameDest\n                PhivCounter,\n            phivCountersCountDataOver\n
    \               PhivCounter,\n            phivCountersCountSysBuffUnav\n                PhivCounter,\n
    \           phivCountersCountUsrBuffUnav\n                PhivCounter\n         }\n
    \  phivCountersIndex OBJECT-TYPE\n        SYNTAX InterfaceIndex\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"The interface
    to which these counters apply.  This is\n            the same interface as identified
    by the same value of\n            phivLineIndex. This value is the ifIndex.\"\n
    \       ::= { phivCountersCountEntry 1 }\n   phivCountersCountBytesRecd OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of bytes received over this
    link.\"\n        ::= { phivCountersCountEntry 2 }\n   phivCountersCountBytesSent
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of bytes sent
    over this link.\"\n        ::= { phivCountersCountEntry 3 }\n   phivCountersCountDataBlocksRecd
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS obsolete\n        DESCRIPTION\n            \"Number of data blocks
    received over this link.\"\n        ::= { phivCountersCountEntry 4 }\n   phivCountersCountDataBlocksSent
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS obsolete\n        DESCRIPTION\n            \"Number of data blocks
    sent over this link.\"\n        ::= { phivCountersCountEntry 5 }\n   phivCountersCountEthUsrBuffUnav
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..65535)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of user buffer
    unavailable errors over this\n            link.\"\n        ::= { phivCountersCountEntry
    6 }\n   phivCountersCountMcastBytesRecd OBJECT-TYPE\n        SYNTAX PhivCounter
    (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"Number of multicast bytes received over this link.\"\n        ::=
    { phivCountersCountEntry 7 }\n   phivCountersCountDataBlksRecd OBJECT-TYPE\n        SYNTAX
    PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Number of data blocks received over this link.\"\n
    \       ::= { phivCountersCountEntry 8 }\n   phivCountersCountDataBlksSent OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of data blocks sent over
    this link.\"\n        ::= { phivCountersCountEntry 9 }\n   phivCountersCountMcastBlksRecd
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of multicast
    blocks received over this link.\"\n        ::= { phivCountersCountEntry 10 }\n
    \  phivCountersCountBlksSentDef OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of blocks sent, initially deferred over this\n            link.\"\n        ::=
    { phivCountersCountEntry 11 }\n   phivCountersCountBlksSentSingleCol OBJECT-TYPE\n
    \       SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of blocks sent, single collision
    over this link.\"\n        ::= { phivCountersCountEntry 12 }\n   phivCountersCountBlksSentMultCol
    OBJECT-TYPE\n        SYNTAX PhivCounter (0..2147483647)\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Number of blocks
    sent, multiple collisions over this\n            link.\"\n        ::= { phivCountersCountEntry
    13 }\n   phivCountersCountSendFailure OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of send failures over this link.\"\n        ::= { phivCountersCountEntry 14 }\n
    \  phivCountersCountCollDetectFailure OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Number
    of collision detect check failures over this\n             link.\"\n        ::=
    { phivCountersCountEntry 15 }\n   phivCountersCountReceiveFailure OBJECT-TYPE\n
    \       SYNTAX INTEGER (0..65535)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"Number of receive failures over this link.\"\n
    \       ::= { phivCountersCountEntry 16 }\n   phivCountersCountUnrecFrameDest
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of unrecognized frame destinations
    over this\n            link.\"\n        ::= { phivCountersCountEntry 17 }\n   phivCountersCountDataOver
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of data overruns over this
    link.\"\n        ::= { phivCountersCountEntry 18 }\n   phivCountersCountSysBuffUnav
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of system buffer unavailables
    over this link.\"\n        ::= { phivCountersCountEntry 19 }\n   phivCountersCountUsrBuffUnav
    OBJECT-TYPE\n        SYNTAX INTEGER (0..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"Number of user buffer unavailables.\"\n
    \       ::= { phivCountersCountEntry 20 }\n   -- Adjacency Group\n   -- The implementation
    of the Adjacency Group is mandatory for all\n   -- conformant implementations
    of this memo.\n   -- The phivAdjTable has been made obsolete it has been replaced
    with\n   -- the phivAdjNodeTable.\n   phivAdjTable OBJECT-TYPE\n        SYNTAX
    SEQUENCE OF PhivAdjEntry\n        ACCESS not-accessible\n        STATUS obsolete\n
    \       DESCRIPTION\n            \"The Adjacency Table.\"\n        ::= { adjacency
    1 }\n   phivAdjEntry OBJECT-TYPE\n        SYNTAX PhivAdjEntry\n        ACCESS
    not-accessible\n        STATUS obsolete\n        DESCRIPTION\n            \"There
    is one entry in the table for each adjacency.\"\n        INDEX  { phivAdjCircuitIndex
    }\n        ::= { phivAdjTable 1 }\n   PhivAdjEntry ::=\n        SEQUENCE {\n            phivAdjCircuitIndex\n
    \               INTEGER,\n            phivAdjNodeAddr\n                PhivAddr,\n
    \           phivAdjBlockSize\n                INTEGER,\n            phivAdjListenTimer\n
    \               INTEGER (1..65535),\n            phivAdjCircuitEtherServPhysAddr\n
    \               OCTET STRING,\n            phivAdjType\n                INTEGER,\n
    \           phivAdjState\n                INTEGER,\n            phivAdjPriority\n
    \               INTEGER,\n            phivAdjExecListenTimer\n                INTEGER
    (1..65535)\n         }\n   phivAdjCircuitIndex OBJECT-TYPE\n        SYNTAX INTEGER\n
    \       ACCESS read-only\n        STATUS obsolete\n        DESCRIPTION\n            \"A
    unique index value for each known circuit.\"\n        ::= { phivAdjEntry 1 }\n
    \  phivAdjNodeAddr OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET STRING (SIZE
    (2))\n        ACCESS read-only\n        STATUS obsolete\n        DESCRIPTION\n
    \           \"The address of the adjacent node.\"\n        ::= { phivAdjEntry
    2 }\n   phivAdjBlockSize OBJECT-TYPE\n        SYNTAX INTEGER\n        ACCESS read-only\n
    \       STATUS obsolete\n        DESCRIPTION\n            \"This read-only parameter
    is the block size that was\n            negotiated with the adjacent Routing layer
    during Routing\n            initialization over a particular circuit. It includes
    the\n            routing header, but excludes the data link header. This\n            parameter
    is qualified by ADJACENT NODE.\"\n        ::= { phivAdjEntry 3 }\n   phivAdjListenTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-only\n        STATUS
    obsolete\n        DESCRIPTION\n            \"This value determines the maximum
    number of seconds\n            allowed to elapse before Routing receives some
    message\n            (either a Hello message or a user message) from the\n            adjacent
    node on the circuit. It was agreed during\n            Routing initialization
    with the adjacent Routing layer.\n            This parameter is qualified by ADJACENT
    NODE.\"\n        ::= { phivAdjEntry 4 }\n   phivAdjCircuitEtherServPhysAddr OBJECT-TYPE\n
    \       SYNTAX OCTET STRING ( SIZE (6) )\n        ACCESS read-only\n        STATUS
    obsolete\n        DESCRIPTION\n            \"This parameter indicates the Ethernet
    physical address\n            of an adjacent node that is being serviced on this\n
    \           circuit. This parameter is a qualifier for SERVICE\n            SUBSTATE.\"\n
    \       ::= { phivAdjEntry 5 }\n   phivAdjType OBJECT-TYPE\n        SYNTAX INTEGER
    {\n            routing-III (1),\n            nonrouting-III (2),\n            area
    (3),\n            routing-IV (4),\n            nonrouting-IV (5)\n        }\n
    \       ACCESS read-only\n        STATUS obsolete\n        DESCRIPTION\n            \"This
    parameter indicates the type of adjacency.\n            For adjacent nodes, this
    is a read-only parameter that\n            indicates the type of the reachable
    adjacent node.\n            NOTE: The routing-III and nonrouting-III values are\n
    \           incremented by one compared to the standard DECnet\n            values
    in order to maintain compliance with RFC 1155)\"\n        ::= { phivAdjEntry 6
    }\n   phivAdjState OBJECT-TYPE\n        SYNTAX INTEGER {\n            initializing
    (1),          -- Ethernet one-way\n            up (2),                    -- Ethernet
    two-way\n            run (3),                   -- The eight DDCMP/X.25 states\n
    \           circuit-rejected (4),\n            data-link-start (5),\n            routing-layer-initialize
    (6),\n            routing-layer-verify (7),\n            routing-layer-complete
    (8),\n            off (9),\n            halt (10)\n        }\n        ACCESS read-only\n
    \       STATUS obsolete\n        DESCRIPTION\n            \"This value indicates
    the state of a router adjacency.\n            On adjacencies over a circuit of
    type\n            (phivCircuitCommonType) Ethernet, CI, or FDDI, with an\n            adjacent
    node of type (phivAdjType) ROUTING IV or AREA,\n            this variable is the
    state of the Ethernet\n            Initialization Layer for this adjacency, and
    can have\n            values INITIALIZING or UP. (See Section 9.1.1 of\n            DECnet
    Phase IV Routing Layer Functional Specification.)\n            On adjacencies
    over a circuit of type\n            (phivCircuitCommonType) Ethernet, CI, or FDDI,
    with an\n            adjacent node of type (phivAdjType) NONROUTING IV,\n            this
    variable will always take on the value UP.\n            On adjacencies over a
    circuit of type\n            (phivCircuitCommonType) DDCMP POINT, DDCMP CONTROL,\n
    \           DDCMP TRIBUTARY, DDCMP DMC, or X.25, this variable is\n            the
    state of the Routing Layer Initialization Circuit\n            State. (See section
    7.3, ibid.)  It can have values\n            between RUN and HALT.\n            On
    adjacencies over a circuit of type\n            (phivCircuitCommonType) OTHER,
    this variable may be\n            used in a manner consistent with the Initialization\n
    \           Layer used on that circuit.\"\n        ::= { phivAdjEntry 7 }\n   phivAdjPriority
    OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n        ACCESS read-only\n        STATUS
    obsolete\n        DESCRIPTION\n            \"Priority assigned by the adjacent
    node for this\n            circuit.\"\n     ::= { phivAdjEntry 8 }\n   phivAdjExecListenTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-only\n        STATUS
    obsolete\n        DESCRIPTION\n            \"This read-only value determines the
    maximum number of\n            seconds allowed to elapse before Routing receives
    some\n            message (either a Hello message or a user message) from\n            the
    adjacent node on the circuit. It was agreed during\n            Routing initialization
    with the adjacent Routing layer.\"\n        ::= { phivAdjEntry 9 }\n   -- New
    Adjacency Table this replaces the phivAdjTable.\n   phivAdjNodeTable OBJECT-TYPE\n
    \       SYNTAX SEQUENCE OF PhivAdjNodeEntry\n        ACCESS not-accessible\n        STATUS
    mandatory\n        DESCRIPTION\n            \"The Adjacent Node Table.\"\n        ::=
    { adjacency 2 }\n   phivAdjNodeEntry OBJECT-TYPE\n        SYNTAX PhivAdjNodeEntry\n
    \       ACCESS not-accessible\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"There is one entry in the table for each adjacency.\"\n        INDEX
    \ { phivAdjNodeCircuitIndex, phivAdjAddr }\n        ::= { phivAdjNodeTable 1 }\n
    \  PhivAdjNodeEntry ::=\n        SEQUENCE {\n            phivAdjNodeCircuitIndex\n
    \               INTEGER,\n            phivAdjAddr\n                PhivAddr,\n
    \           phivAdjNodeBlockSize\n                INTEGER,\n            phivAdjNodeListenTimer\n
    \               INTEGER,\n            phivAdjNodeCircuitEtherServPhysAddr\n                OCTET
    STRING,\n            phivAdjNodeType\n                INTEGER,\n            phivAdjNodeState\n
    \               INTEGER,\n            phivAdjNodePriority\n                INTEGER\n
    \        }\n   phivAdjNodeCircuitIndex OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"A
    unique index value for each known circuit.  This\n            value is the same
    as phivCircuitIndex and identifies the\n            circuit over which the adjacency
    is realized.\"\n        ::= { phivAdjNodeEntry 1 }\n   phivAdjAddr OBJECT-TYPE\n
    \       SYNTAX PhivAddr -- OCTET STRING (SIZE (2))\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"The address of the
    adjacent node.\"\n        ::= { phivAdjNodeEntry 2 }\n   phivAdjNodeBlockSize
    OBJECT-TYPE\n        SYNTAX INTEGER\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This read-only parameter is the
    block size that was\n            negotiated with the adjacent Routing layer during
    Routing\n            initialization over a particular circuit. It includes the\n
    \           routing header, but excludes the data link header. This\n            parameter
    is qualified by ADJACENT NODE.\"\n        ::= { phivAdjNodeEntry 3 }\n   phivAdjNodeListenTimer
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value determines the maximum
    number of seconds\n            allowed to elapse before Routing receives some
    message\n            (either a Hello message or a user message) from the\n            adjacent
    node on the circuit. It was agreed during\n            Routing initialization
    with the adjacent Routing layer.\n            This parameter is qualified by ADJACENT
    NODE.\"\n        ::= { phivAdjNodeEntry 4 }\n   phivAdjNodeCircuitEtherServPhysAddr
    OBJECT-TYPE\n        SYNTAX OCTET STRING (SIZE (6))\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This parameter indicates
    the Ethernet physical address\n            of an adjacent node that is being serviced
    on this\n            circuit. This parameter is a qualifier for SERVICE\n            SUBSTATE.\"\n
    \       ::= { phivAdjNodeEntry 5 }\n   phivAdjNodeType OBJECT-TYPE\n        SYNTAX
    INTEGER {\n            routing-III (1),\n            nonrouting-III (2),\n            area
    (3),\n            routing-IV (4),\n            nonrouting-IV (5)\n        }\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    parameter indicates the type of adjacency.\n            For adjacent nodes, this
    is a read-only parameter that\n            indicates the type of the reachable
    adjacent node.\n            NOTE: The routing-III and nonrouting-III values are\n
    \           incremented by one compared to the standard DECnet\n            values
    in order to maintain compliance with RFC 1155)\"\n        ::= { phivAdjNodeEntry
    6 }\n   phivAdjNodeState OBJECT-TYPE\n        SYNTAX INTEGER {\n            initializing
    (1),          -- Ethernet one-way\n            up (2),                    -- Ethernet
    two-way\n            run (3),                   -- The eight DDCMP/X.25 states\n
    \           circuit-rejected (4),\n            data-link-start (5),\n            routing-layer-initialize
    (6),\n            routing-layer-verify (7),\n            routing-layer-complete
    (8),\n            off (9),\n            halt (10)\n        }\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This value indicates
    the state of a router adjacency.\n            On adjacencies over a circuit of
    type\n            (phivCircuitCommonType) Ethernet, CI, or FDDI, with an\n            adjacent
    node of type (phivAdjNodeType) ROUTING IV or AREA,\n            this variable
    is the state of the Ethernet\n            Initialization Layer for this adjacency,
    and can have\n            values INITIALIZING or UP. (See Section 9.1.1 of\n            DECnet
    Phase IV Routing Layer Functional Specification.)\n            On adjacencies
    over a circuit of type\n            (phivCircuitCommonType) Ethernet, CI, or FDDI,
    with an\n            adjacent node of type (phivAdjNodeType) NONROUTING IV,\n
    \           this variable will always take on the value UP.\n            On adjacencies
    over a circuit of type\n            (phivCircuitCommonType) DDCMP POINT, DDCMP
    CONTROL,\n            DDCMP TRIBUTARY, DDCMP DMC, or X.25, this variable is\n
    \           the state of the Routing Layer Initialization Circuit\n            State.
    (See section 7.3, ibid.)  It can have values\n            between RUN and HALT.\n
    \           On adjacencies over a circuit of type\n            (phivCircuitCommonType)
    OTHER, this variable may be\n            used in a manner consistent with the
    Initialization\n            Layer used on that circuit.\"\n        ::= { phivAdjNodeEntry
    7 }\n   phivAdjNodePriority OBJECT-TYPE\n        SYNTAX INTEGER (0..255)\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"Priority
    assigned by the adjacent node for this\n            circuit.\"\n           ::=
    { phivAdjNodeEntry 8 }\n   -- Line Group\n   -- The implementation of the Line
    Group is mandatory for all\n   -- conformant implementations of this memo.\n   phivLineTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivLineEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"The Line Table.\"\n
    \       ::= { line 1 }\n   phivLineEntry OBJECT-TYPE\n        SYNTAX PhivLineEntry\n
    \       ACCESS not-accessible\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"There is one entry in the table for each line.\"\n        INDEX
    \ { phivLineIndex }\n        ::= { phivLineTable 1 }\n   PhivLineEntry ::=\n        SEQUENCE
    {\n            phivLineIndex\n                InterfaceIndex,\n            phivLineName\n
    \               DisplayString,\n            phivLineState\n                INTEGER,\n
    \           phivLineSubstate\n                INTEGER,\n            phivLineService\n
    \               INTEGER,\n            phivLineDevice\n                DisplayString,\n
    \           phivLineReceiveBuffs\n                INTEGER,\n            phivLineProtocol\n
    \               INTEGER,\n            phivLineServiceTimer\n                INTEGER,\n
    \           phivLineMaxBlock\n                INTEGER\n        }\n   phivLineIndex
    OBJECT-TYPE\n        SYNTAX InterfaceIndex\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"The line on which this entry's equivalence
    is effective.\n            This is the same as the ifIndex.\"\n        ::= { phivLineEntry
    1 }\n   phivLineName OBJECT-TYPE\n        SYNTAX DisplayString (SIZE (0..16))\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"The
    name of the line on this row of the table.\"\n        ::= { phivLineEntry 2 }\n
    \  phivLineState OBJECT-TYPE\n        SYNTAX INTEGER {\n            on (1),\n
    \           off (2),\n            service (3),\n            cleared (4)\n        }\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents Network Management operational\n            state.\n            NOTE
    that these values are incremented by one compared to\n            the standard
    DECnet values.\"\n        ::= { phivLineEntry 3 }\n   phivLineSubstate OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            starting (1),\n            reflecting (2),\n
    \           looping (3),\n            loading (4),\n            dumping (5),\n
    \           triggering (6),\n            auto-service (7),\n            auto-loading
    (8),\n            auto-dumping (9),\n            auto-triggering (10),\n            synchronizing
    (11),\n            failed (12),\n            running (13)\n        }\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This value
    represents the line's read-only Network\n            Management substate.\n            NOTE
    that these values are incremented by one compared to\n            the standard
    DECnet values.\"\n        ::= { phivLineEntry 4 }\n   phivLineService OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            starting (1),\n            reflecting (2),\n
    \           looping (3),\n            other (4)\n        }\n        ACCESS read-only\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"This value represents
    the line's read-only Network\n            Management service.\n            NOTE
    that these values are incremented by one compared to\n            the standard
    DECnet values and OTHER is a new addition.\"\n        ::= { phivLineEntry 5 }\n
    \  phivLineDevice OBJECT-TYPE\n        SYNTAX DisplayString (SIZE (0..16))\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This value
    represents the Physical Link device to be\n            used on the line.\"\n        ::=
    { phivLineEntry 6 }\n   phivLineReceiveBuffs OBJECT-TYPE\n        SYNTAX INTEGER
    (0..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the number of receive buffers\n            reserved
    for the line. It is a decimal number in\n            the range 0-65535.  0 is
    supported for those vendors\n            that do not reserve buffers on a per
    line basis and\n            use a pool of buffers that can be used by any line.\"\n
    \       ::= { phivLineEntry 7 }\n   phivLineProtocol OBJECT-TYPE\n        SYNTAX
    INTEGER {\n            ddcmp-point (1),\n            ddcmp-control (2),\n            ddcmp-tributary
    (3),\n            reserved (4),\n            ddcmp-dmc (5),\n            olapb
    (6),\n            ethernet (7),\n            ci (8),\n            qp2 (9),\n            other
    (14),\n            fddi (15)\n        }\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the protocol
    used on the line\n            device.  Note that these values are incremented
    by\n            one compared to the standard DECnet values.\"\n        ::= { phivLineEntry
    8 }\n   phivLineServiceTimer OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the amount of time in\n            milliseconds allowed to elapse
    before a Data Link\n            receive request completes while doing service\n
    \           operations.\"\n        ::= { phivLineEntry 9 }\n   phivLineMaxBlock
    OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value represents the Data Link
    maximum block\n            size on the line.\"\n        ::= { phivLineEntry 10
    }\n   -- Non Broadcast Line Group\n   -- The implementation of the Non Broadcast
    Line Group is optional.\n   -- A system can be said to implement this group if
    and only if\n   -- all objects in this group are implemented.\n   phivNonBroadcastTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivNonBroadcastEntry\n        ACCESS
    not-accessible\n        STATUS mandatory\n        DESCRIPTION\n            \"The
    Non Broadcast Table.\"\n        ::= { nonBroadcastLine 1 }\n   phivNonBroadcastEntry
    OBJECT-TYPE\n        SYNTAX PhivNonBroadcastEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"There is one entry
    in the table for each\n            Non Broadcast line.\"\n        INDEX  { phivNonBroadcastIndex
    }\n        ::= { phivNonBroadcastTable 1 }\n   PhivNonBroadcastEntry ::=\n        SEQUENCE
    {\n            phivNonBroadcastIndex\n                InterfaceIndex,\n            phivNonBroadcastController\n
    \               INTEGER,\n            phivNonBroadcastDuplex\n                INTEGER,\n
    \           phivNonBroadcastClock\n                INTEGER,\n            phivNonBroadcastRetransmitTimer\n
    \               INTEGER\n        }\n   phivNonBroadcastIndex OBJECT-TYPE\n        SYNTAX
    InterfaceIndex\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"The Non Broadcast line on which this entry's\n            equivalence
    is effective.  This is the same value\n            as the ifIndex.\"\n        ::=
    { phivNonBroadcastEntry 1 }\n   phivNonBroadcastController OBJECT-TYPE\n        SYNTAX
    INTEGER {\n            normal (1),\n            loopback (2),\n            other
    (3)\n        }\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the Physical Link hardware\n            controller
    mode for the line device. The values\n            for controller-mode are:\n            NORMAL
    \ For normal controller operating mode.\n            LOOPBACK For software controllable
    loopback of the\n            controller. On those devices that can support this\n
    \           mode, it causes all transmitted messages to be looped\n            back
    from within the controller itself. This is\n            accomplished without any
    manual intervention other\n            than the setting of this parameter value.\n
    \           OTHER indicates function is not supported\n            Note that these
    values are incremented by one compared to\n            the standard DECnet values.\"\n
    \       ::= { phivNonBroadcastEntry 2 }\n   phivNonBroadcastDuplex OBJECT-TYPE\n
    \       SYNTAX INTEGER {\n            full (1),\n            half (2)\n        }\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the Physical Link hardware\n            duplex mode of the line
    device. The possible modes\n            are:\n            FULL   Full-duplex\n
    \           HALF   Half-duplex\n            Note that these values are incremented
    by one compared to\n            the standard DECnet values.\"\n        ::= { phivNonBroadcastEntry
    3 }\n   phivNonBroadcastClock OBJECT-TYPE\n        SYNTAX INTEGER {\n            external
    (1),\n            internal (2),\n            other (3)\n        }\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This value
    represents the Physical Link hardware clock\n            mode for the line device.
    The values for clock-mode are:\n            INTERNAL For software controllable
    loopback use of\n            the clock. On those devices that can support this\n
    \           mode, it causes the device to supply a clock signal\n            such
    that a transmitted messages can be looped\n            back from outside the device.
    This may require manual\n            intervention other than the setting of this
    parameter\n            value. For example, the operator may have to connect\n
    \           a loopback plug in place of the normal line.\n            EXTERNAL
    For normal clock operating mode, where the\n            clock signal is supplied
    externally to the controller.\n            Note that these values are incremented
    by one compared to\n            the standard DECnet values.\"\n        ::= { phivNonBroadcastEntry
    4 }\n   phivNonBroadcastRetransmitTimer OBJECT-TYPE\n        SYNTAX INTEGER (1..65535)\n
    \       ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents number of milliseconds before\n            the Data Link retransmits
    a block on the line. On\n            half-duplex lines, this parameter is the
    select timer.\"\n        DEFVAL { 3000 }\n        ::= { phivNonBroadcastEntry
    5 }\n   -- Area Parameters Group\n   -- The implementation of the Area Parameters
    Group is mandatory\n   -- for all systems which implement level 2 routing.\n   phivAreaTable
    OBJECT-TYPE\n        SYNTAX SEQUENCE OF PhivAreaEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"Table of information
    kept on all areas known to\n            this unit.\"\n        ::= { area 1 }\n
    \  phivAreaEntry OBJECT-TYPE\n        SYNTAX PhivAreaEntry\n        ACCESS not-accessible\n
    \       STATUS mandatory\n        DESCRIPTION\n            \"The area routing
    information.\"\n        INDEX  { phivAreaNum }\n        ::= { phivAreaTable 1
    }\n   PhivAreaEntry ::=\n        SEQUENCE {\n            phivAreaNum\n                INTEGER,\n
    \           phivAreaState\n                INTEGER,\n            phivAreaCost\n
    \               Gauge,\n            phivAreaHops\n                INTEGER,\n            phivAreaNextNode\n
    \               PhivAddr,\n            phivAreaCircuitIndex\n               INTEGER\n
    \       }\n   phivAreaNum OBJECT-TYPE\n        SYNTAX INTEGER (0..64)\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"This value
    indicates the area number of this entry.\"\n        ::= { phivAreaEntry 1 }\n
    \  phivAreaState OBJECT-TYPE\n        SYNTAX INTEGER {\n            reachable
    (4),\n            unreachable (5)\n        }\n        ACCESS read-only\n        STATUS
    mandatory\n        DESCRIPTION\n            \"This value indicates the state of
    the area\"\n        ::= { phivAreaEntry 2 }\n   phivAreaCost OBJECT-TYPE\n        SYNTAX
    Gauge\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"The total cost over the current path to the\n             destination
    area. Cost is a value associated with\n             using a circuit. Routing routes
    messages (data)\n             along the path between 2 areas with the smallest\n
    \            cost.\"\n        ::= { phivAreaEntry 3 }\n   phivAreaHops OBJECT-TYPE\n
    \       SYNTAX INTEGER (0..255)\n        ACCESS read-only\n        STATUS mandatory\n
    \       DESCRIPTION\n            \"The number of hops to a destination area. A
    hop is\n            the routing value representing the logical distance\n            between
    two areas in network.\"\n        ::= { phivAreaEntry 4 }\n   phivAreaNextNode
    OBJECT-TYPE\n        SYNTAX PhivAddr -- OCTET STRING (SIZE (2))\n        ACCESS
    read-only\n        STATUS mandatory\n        DESCRIPTION\n            \"The next
    node on the circuit used to get to the\n            area under scrutiny.\"\n        ::=
    { phivAreaEntry 5 }\n   phivAreaCircuitIndex OBJECT-TYPE\n        SYNTAX INTEGER
    (1..65535)\n        ACCESS read-only\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"A unique index value for each known circuit.\"\n        ::= { phivAreaEntry
    6 }\n   -- Additional Area Parameters\n   phivAreaMaxCost OBJECT-TYPE\n        SYNTAX
    INTEGER (1..1022)\n        ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n
    \           \"This value represents the maximum total path cost\n            allowed
    from the executor to any other level 2 routing\n            node. The AREA MAXIMUM
    COST number is decimal in the\n            range 1-1022. This parameter is only
    applicable if\n            the executor node is of type AREA.\"\n        ::= {
    area 2 }\n   phivAreaMaxHops OBJECT-TYPE\n        SYNTAX INTEGER (1..30)\n        ACCESS
    read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the maximum number of routing hops\n            allowable from
    the executor to any other level 2\n            routing node.  This parameter is
    only applicable if the\n            executor node is of type AREA.\"\n        ::=
    { area 3 }\n   phivRouteMaxArea OBJECT-TYPE\n        SYNTAX INTEGER (1..63)\n
    \       ACCESS read-write\n        STATUS mandatory\n        DESCRIPTION\n            \"This
    value represents the largest area number and,\n            therefore, number of
    areas that can be known about\n            by the executor node's Routing. This
    parameter is only\n            applicable if the executor node is of type AREA.\"\n
    \       ::= { area 4 }\n          END\n"
  title: 5.  Definitions
- contents:
  - "6.  Changes from RFC 1289\n   Several changes have been made to this document.
    \ These changes\n   include:\n   (1)  Ranges have been added on all PhivCounter
    types to remove\n        ambiguity which might otherwise have occurred.\n   (2)
    \ Made clear that all indexes start with 1 and count up.\n   (3)  Spelling and
    typographic changes.\n   (4)  Changes to improve consistency with other documents
    including\n        the removal of subranging within definitions of sequences\n
    \       defining table entries.\n   (5)  Updated compliance text to conform to
    current practice.\n   (6)  Fixed discrepancy between description and range clause
    for\n        phivControlMaxBuffs.\n   (7)  Added a space that was missing between
    SYNTAX and INTEGER in the\n        phivRouteType object.\n   (8)  Both phivRouteType
    and phivRouteSystemAddr have been made\n        obsolete.  They have been replaced
    with phivRouteRoutingType\n        and phivRouteSystemAddress which are both read-write
    objects.\n   (9)  A new Adjacency table has been added as adjacency 2.  This\n
    \       table is identical to the original except that\n        phivAdjExecListenTimer
    was not carried into the new version.\n        The existing Adjacency table and
    all objects in it have been\n        made obsolete.  The index to the new table
    is\n        phivAdjNodeCircuitIndex and phivAdjAddr.\n   (10) Objects phivCountersCountDataBlocksRecd
    and\n        phivCountersCountDataBlocksSent have both been made obsolete\n        since
    the DESCRIPTION information overlapped with the\n        phivCountersCountDataBlksRecd
    and\n        phivCountersCountDataBlksSent objects which have been\n        retained.\n
    \  (11) The following groups have been moved from mandatory to\n        optional
    status: Session, End, DDCMP, DDCMP Multipoint\n        Circuit Control, Counters,
    and Non Broadcast Line.\n"
  title: 6.  Changes from RFC 1289
- contents:
  - "7.  Acknowledgements\n   This document is the result of work undertaken the by
    DECnet Phase IV\n   MIB working group. In addition, the special contributions
    and\n   comments of the following members are also acknowledged:\n         Chris
    Chiotasso, Sparticus\n         Steven Hunter, National Energy Research Supercomputer
    Center,\n         Lawrence Livermore National Laboratory\n"
  title: 7.  Acknowledgements
- contents:
  - "8.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of
    Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n
    \  [2] Rose M., and K. McCloghrie, \"Structure and Identification of\n       Management
    Information for TCP/IP-based internets\", STD 16, RFC\n       1155, Performance
    Systems International, Hughes LAN Systems, May\n       1990.\n   [3] McCloghrie
    K., and M. Rose, Editors, \"Management Information Base\n       for Network Management
    of TCP/IP-based internets MIB-II\", STD 17,\n       RFC 1213, Hughes LAN Systems,
    Performance Systems International,\n       March 1991.\n   [4] Case, J., Fedor,
    M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management Protocol\",
    STD 15, RFC 1157, SNMP Research,\n       Performance Systems International, Performance
    Systems\n       International, MIT Laboratory for Computer Science, May 1990.\n
    \  [5] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n       STD
    16, RFC 1212, Performance Systems International, Hughes LAN\n       Systems, March
    1991.\n   [6] Cook, J., Editor, \"Definitions of Managed Objects for the\n       Ethernet-like
    Interface Types\", RFC 1284, Chipcom Corporation,\n       December 1991.\n   [7]
    Digital Equipment Corporation, \"DECnet-ULTRIX NCP Command\n       Reference\",
    Digital Equipment Corporation, Maynard,\n       Massachusetts.\n   [8] Digital
    Equipment Corporation, \"DECnet-ULTRIX USE Guide\", Digital\n       Equipment
    Corporation, Maynard, Massachusetts.\n   [9] Digital Equipment Corporation, \"DECnet
    DIGITAL Network\n       Architecture, Network Management Functional Specification\",\n
    \      Version 4.0.0. Digital Equipment Corporation, Maynard,\n       Massachusetts,
    July 1983.\n  [10] Digital Equipment Corporation, \"DECnet DIGITAL Network\n       Architecture,
    Routing Layer Functional Specification\", Version\n       2.0.0.  Digital Equipment
    Corporation, Maynard, Massachusetts,\n       May 1983.\n"
  title: 8.  References
- contents:
  - "9.  Security Considerations\n   Security issues are not discussed in this memo.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Author's Address\n   Jon Saperia\n   Digital Equipment Corporation\n   153
    Taylor Street\n   M/S TAY2-2/B5\n   Littleton, MA 01460\n   Phone: +1 508-952-3171\n
    \  EMail: saperia@tay.dec.com\n"
  title: 10.  Author's Address
