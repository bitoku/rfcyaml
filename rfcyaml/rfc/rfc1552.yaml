- title: __initial_text__
  contents:
  - '     The PPP Internetwork Packet Exchange Control Protocol (IPXCP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a method for\n  \
    \ transmitting multi-protocol datagrams over point-to-point links.  PPP\n   defines\
    \ an extensible Link Control Protocol, and proposes a family of\n   Network Control\
    \ Protocols for establishing and configuring different\n   network-layer protocols.\n\
    \   The IPX protocol was originally used in Novell's NetWare products\n   [3],\
    \ and is now supported by numerous other vendors.  This document\n   defines the\
    \ Network Control Protocol for establishing and configuring\n   the IPX protocol\
    \ over PPP.\n   This memo is the product of the Point-to-Point Protocol Working\
    \ Group\n   of the IETF.  Comments should be submitted to the ietf-\n   ppp@ucdavis.edu\
    \ mailing list.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction ...................................................2\n\
    \   1.1 Specification of Requirements ..................................3\n  \
    \ 1.2 Terminology ....................................................3\n   2.\
    \  A PPP Network Control Protocol for IPX .........................4\n   2.1 Sending\
    \ IPX Datagrams ..........................................5\n   2.2 IPX-WAN protocol\
    \ ...............................................5\n   2.3 Desired Parameters\
    \ .............................................5\n   2.4 Co-existence with IPX-WAN\
    \ ......................................6\n   3.  IPXCP Configuration Options\
    \ ....................................6\n   3.1 IPX-Network-Number .............................................7\n\
    \   3.2 IPX-Node-Number ................................................8\n  \
    \ 3.3 IPX-Compression-Protocol .......................................9\n   3.4\
    \ IPX-Routing-Protocol ...........................................11\n   3.5 IPX-Router-Name\
    \ ................................................12\n   3.6 IPX-Configuration-Complete\
    \ .....................................13\n   APPENDIX A. Link Delay and Throughput\
    \ ..............................14\n   SECURITY CONSIDERATIONS ............................................14\n\
    \   REFERENCES .........................................................15\n \
    \  ACKNOWLEDGEMENTS ...................................................15\n  \
    \ CHAIR'S ADDRESS ....................................................15\n   AUTHOR'S\
    \ ADDRESS ...................................................16\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   PPP has three main components:\n      1. A method for encapsulating\
    \ multi-protocol datagrams.\n      2. A Link Control Protocol (LCP) for establishing,\
    \ configuring,\n         and testing the data-link connection.\n      3. A family\
    \ of Network Control Protocols for establishing and\n         configuring different\
    \ network-layer protocols.\n   In order to establish communications over a point-to-point\
    \ link, each\n   end of the PPP link must first send LCP packets to configure\
    \ and test\n   the data link.  After the link has been established and optional\n\
    \   facilities have been negotiated as needed by the LCP, PPP must send\n   IPXCP\
    \ packets to choose and configure the IPX network-layer protocol.\n   Once IPXCP\
    \ has reached the Opened state, IPX datagrams can be sent\n   over the link.\n\
    \   The link will remain configured for communications until explicit LCP\n  \
    \ or IPXCP packets close the link down, or until some external event\n   occurs\
    \ (an inactivity timer expires or network administrator\n   intervention).\n"
- title: 1.1 Specification of Requirements
  contents:
  - "1.1 Specification of Requirements\n   In this document, several words are used\
    \ to signify the requirements\n   of the specification.  These words are often\
    \ capitalized.\n    MUST\n      This word, or the adjective \"required\", means\
    \ that the definition\n      is an absolute requirement of the specification.\n\
    \    MUST NOT\n      This phrase means that the definition is an absolute prohibition\n\
    \      of the specification.\n    SHOULD\n      This word, or the adjective \"\
    recommended\", means that there may\n      exist valid reasons in particular circumstances\
    \ to ignore this\n      item, but the full implications should be understood and\
    \ carefully\n      weighed before choosing a different course.\n    MAY\n    \
    \  This word, or the adjective \"optional\", means that this item is\n      one\
    \ of an allowed set of alternatives.  An implementation which\n      does not\
    \ include this option MUST be prepared to interoperate with\n      another implementation\
    \ which does include the option.\n"
- title: 1.2 Terminology
  contents:
  - "1.2 Terminology\n   This document frequently uses the following terms:\n    peer\n\
    \      The other end of the point-to-point link.\n    silently discard\n     \
    \ This means the implementation discards the packet without further\n      processing.\
    \  The implementation SHOULD provide the capability of\n      logging the error,\
    \ including the contents of the silently\n      discarded packet, and SHOULD record\
    \ the event in a statistics\n      counter.\n    end-system\n      A user's machine.\
    \  It only sends packets to servers and other\n      end-systems.  It doesn't\
    \ pass any packets through itself.\n    router\n      Allows packets to pass through,\
    \ usually from one ethernet segment\n      to another.  Sometimes these are called\
    \ \"intermediate-systems\".\n    half-router\n      Two normal routers, with an\
    \ unnumbered link between them.  Each\n      looks like a router to the local\
    \ users, but Netware doesn't\n      understand unnumbered links, so each router\
    \ is made to look like\n      they both are a single machine.\n"
- title: 2. A PPP Network Control Protocol for IPX
  contents:
  - "2. A PPP Network Control Protocol for IPX\n   The IPX Control Protocol (IPXCP)\
    \ is responsible for configuring,\n   enabling, and disabling the IPX protocol\
    \ modules on both ends of the\n   point-to-point link.  IPXCP uses the same packet\
    \ exchange mechanism\n   as the Link Control Protocol.  IPXCP packets may not\
    \ be exchanged\n   until PPP has reached the Network-Layer Protocol phase.  IPXCP\n\
    \   packets received before this phase is reached should be silently\n   discarded.\n\
    \   The IPX Control Protocol is exactly the same as the Link Control\n   Protocol\
    \ [1] with the following exceptions:\n    Frame Modifications\n      The packet\
    \ may utilize any modifications to the basic frame format\n      which have been\
    \ negotiated during the Link Establishment phase.\n    Data Link Layer Protocol\
    \ Field\n      Exactly one IPXCP packet is encapsulated in the Information field\n\
    \      of a PPP Data Link Layer frame where the Protocol field indicates\n   \
    \   type hex 802B (IPX Control Protocol).\n    Code field\n      Only Codes 1\
    \ through 7 (Configure-Request, Configure-Ack,\n      Configure-Nak, Configure-Reject,\
    \ Terminate-Request, Terminate-Ack\n      and Code-Reject) are used.  Other Codes\
    \ should be treated as\n      unrecognized and should result in Code-Rejects.\n\
    \    Timeouts\n      IPXCP packets may not be exchanged until PPP has reached\
    \ the\n      Network-Layer Protocol phase.  An implementation should be\n    \
    \  prepared to wait for Authentication and Link Quality Determination\n      to\
    \ finish before timing out waiting for a Configure-Ack or other\n      response.\
    \  It is suggested that an implementation give up only\n      after user intervention\
    \ or a configurable amount of time.\n    Configuration Option Types\n      IPXCP\
    \ has a distinct set of Configuration Options.\n"
- title: 2.1 Sending IPX Datagrams
  contents:
  - "2.1 Sending IPX Datagrams\n   Before any IPX packets may be communicated, PPP\
    \ must reach the\n   Network-Layer Protocol phase, and the IPX Control Protocol\
    \ must reach\n   the Opened state.\n   Exactly one IPX packet is encapsulated\
    \ in the Information field of a\n   PPP Data Link Layer frame where the Protocol\
    \ field indicates type hex\n   002B (IPX datagram).\n   The maximum length of\
    \ an IPX datagram transmitted over a PPP link is\n   the same as the maximum length\
    \ of the Information field of a PPP data\n   link layer frame.  Since there is\
    \ no standard method for fragmenting\n   and reassembling IPX datagrams, PPP links\
    \ supporting IPX MUST allow\n   at least 576 octets in the information field of\
    \ a data link layer\n   frame.\n"
- title: 2.2 IPX-WAN protocol
  contents:
  - "2.2 IPX-WAN protocol\n   A Novell specification called IPX-WAN [4] is intended\
    \ to provide\n   mechanisms similar to IPXCP negotiation over wide area links.\
    \  As\n   viewed by PPP, IPX-WAN is a part of IPX, and IPX-WAN packets are\n \
    \  indistinguishable from other IPX packets.\n   Currently, Novell has implemented\
    \ IPXCP without any Configuration\n   Options, and requires successful IPX-WAN\
    \ completion, even when all\n   required parameters have been hand configured.\
    \  This makes it\n   impossible for the current Novell products to interoperate\
    \ with other\n   IPXCP implementations which do not already include support for\
    \ IPX-\n   WAN.\n"
- title: 2.3 Desired Parameters
  contents:
  - "2.3 Desired Parameters\n   To resolve the possible conflict between the two configuration\n\
    \   methods, this specification defines the concept of \"Desired\n   Parameters\"\
    .  Where applicable, each Configuration Option indicates\n   the environment where\
    \ the parameter which is negotiated MAY be\n   required by the implementation\
    \ for proper operation.\n   This determination is highly implementation dependent.\
    \  For example,\n   a particular implementation might require that all links have\n\
    \   addresses, while another implementation might not need such\n   addresses.\
    \  The configuration negotiation is intended to discover\n   that this pair of\
    \ implementations will never converge.\n"
- title: 2.4 Co-existence with IPX-WAN
  contents:
  - "2.4 Co-existence with IPX-WAN\n   An IPXCP implementation which includes support\
    \ for IPX-WAN SHOULD\n   always reach Opened state, even when unable to negotiate\
    \ some\n   \"Desired Parameter\", and when no Configuration Options are\n   successfully\
    \ negotiated.  This allows IPX-WAN the opportunity to\n   finish the negotiation.\n\
    \   If an implementation does not include support for IPX-WAN, it SHOULD\n   NOT\
    \ reach Opened state when unable to negotiate some \"Desired\n   Parameter\".\n\
    \   IPX-WAN uses a \"Timer Request\" packet to set up the link.  These MUST\n\
    \   NOT be sent until IPXCP has Opened the link.\n   An implementation which provides\
    \ both IPX-WAN and IPXCP Configuration\n   Options capability SHOULD only send\
    \ a Timer Request packet when a\n   Timer Request packet is received, or upon\
    \ failure to successfully\n   negotiate a \"Desired Parameter\".\n   If unable\
    \ to complete IPX-WAN setup when a \"Desired Parameter\" is\n   unknown, by default\
    \ IPXCP SHOULD terminate the link.\n   However, some implementations might be\
    \ capable of operating without\n   all indicated \"Desired Parameters\", in which\
    \ case the termination\n   MUST be configurable.\n"
- title: 3. IPXCP Configuration Options
  contents:
  - "3. IPXCP Configuration Options\n   IPXCP Configuration Options allow modifications\
    \ to the standard\n   characteristics of the network-layer protocol to be negotiated.\
    \  If a\n   Configuration Option is not included in a Configure-Request packet,\n\
    \   the default value for that Configuration Option is assumed.\n   IPXCP uses\
    \ the same Configuration Option format defined for LCP [1],\n   with a separate\
    \ set of Options.\n   Up-to-date values of the IPXCP Option Type field are specified\
    \ in the\n   most recent \"Assigned Numbers\" RFC [2].  Current values are assigned\n\
    \   as follows:\n      1       IPX-Network-Number\n      2       IPX-Node-Number\n\
    \      3       IPX-Compression-Protocol\n      4       IPX-Routing-Protocol\n\
    \      5       IPX-Router-Name\n      6       IPX-Configuration-Complete\n"
- title: 3.1 IPX-Network-Number
  contents:
  - "3.1 IPX-Network-Number\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the IPX\n      network number to be used for the link.  This\
    \ allows an\n      implementation to learn the network number, or to ensure agreement\n\
    \      on the network number.\n      The network number MUST be unique within\
    \ the routing domain, or\n      zero to indicate that it is not used for routing.\n\
    \      The sender of the Configure-Request states which network number is\n  \
    \    desired.  A network number specified as zero in a Configure-\n      Request\
    \ shall be interpreted as requesting the peer to specify\n      another value\
    \ in a Configure-Nak.  A network number specified as\n      zero in a Configure-Ack\
    \ shall be interpreted as agreement that no\n      value exists.\n      Both ends\
    \ of the link MUST have the same network number.  When a\n      Configure-Request\
    \ is received which has a lower network number\n      than locally configured,\
    \ a Configure-Nak MUST be returned with the\n      highest network number.\n \
    \     When the peer did not provide the option in its Configure-Request,\n   \
    \   the option SHOULD NOT be appended to a Configure-Nak.\n      By default, no\
    \ network number is assigned to the link (the network\n      number is zero).\
    \  There is no need for a network number if the\n      interface is not used by\
    \ a routing protocol.\n      This is a Desired Parameter when the implementation\
    \ is operating\n      as a router.  It MUST be negotiated if the network number\
    \ is non-\n      zero, and has been derived from another interface.\n      Any\
    \ IPX-WAN packets received MUST supercede information negotiated\n      in this\
    \ option.\n    A summary of the IPX-Network-Number Configuration Option format\
    \ is\n    shown below.  The fields are transmitted from left to right.\n     \
    \   0                   1                   2                   3\n        0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       |     Type      |    Length     |       IPX-Network-Number      |\n  \
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    \
    \   |  IPX-Network-Number (cont.)   |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \       Type\n          1\n       Length\n          6\n       IPX-Network-Number\n\
    \      The four octet IPX-Network-Number is the desired local IPX network\n  \
    \    number of the sender of the Configure-Request.  This number may be\n    \
    \  zero, which is interpreted as being a local network of unknown\n      number\
    \ that is not used by the routing protocol.\n"
- title: 3.2 IPX-Node-Number
  contents:
  - "3.2 IPX-Node-Number\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the IPX node\n      number to be used for the local end of\
    \ the link.  This allows an\n      implementation to learn its node number, or\
    \ to inform the peer of\n      its node number.\n      The node number MUST be\
    \ unique for the network number.\n      The sender of the Configure-Request states\
    \ which node number is\n      desired.  A node number specified as zero in a Configure-Request\n\
    \      shall be interpreted as requesting the peer to specify another\n      value\
    \ in a Configure-Nak.  A node number specified as zero in a\n      Configure-Ack\
    \ shall be interpreted as agreement that no value\n      exists.\n      If negotiation\
    \ about the peer node number is required, and the\n      peer did not provide\
    \ the option in its Configure-Request, the\n      option can be appended to a\
    \ Configure-Nak.  The value of the node\n      number given MUST be acceptable\
    \ as the peer IPX-Node-Number, or\n      indicate with a zero value that the peer\
    \ provide the information.\n      By default, no node number is assigned to the\
    \ link (the node\n      number is zero).  There is no need for a node number if\
    \ the\n      interface is not used by a routing protocol.\n      This is a Desired\
    \ Parameter when the implementation is operating\n      as an end-system.  However,\
    \ when the node number has been\n      statically configured, this option SHOULD\
    \ NOT be negotiated unless\n      requested by the peer.\n      Any IPX-WAN packets\
    \ received MUST supercede information negotiated\n      in this option.\n    A\
    \ summary of the IPX-Node-Number Configuration Option format is\n    shown below.\
    \  The fields are transmitted from left to right.\n       0                  \
    \ 1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |       IPX-Node-Number         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                     IPX-Node-Number (cont.)                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      Type\n         2\n      Length\n         8\n      IPX-Node-Number\n   \
    \   The six octet IPX-Node-Number is the desired local IPX node number\n     \
    \ of the sender of the Configure-Request.\n"
- title: 3.3 IPX-Compression-Protocol
  contents:
  - "3.3 IPX-Compression-Protocol\n   Description\n      This Configuration Option\
    \ provides a way to negotiate the use of a\n      specific compression protocol.\
    \  By default, compression is not\n      enabled.\n      The sender of this Configuration\
    \ Option indicates that it can\n      receive packets with the specified compression\
    \ technique.  A\n      Configure-Ack MAY obligate the peer to send such packets,\n\
    \      depending on the protocol negotiated.\n      Information negotiated in\
    \ this option MUST supercede any IPX-WAN\n      packets received, since IPX-WAN\
    \ packets could be affected by the\n      compression technique.\n    A summary\
    \ of the IPX-Compression-Protocol Configuration Option\n    format is shown below.\
    \  The fields are transmitted from left to\n    right.\n       0             \
    \      1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |    Length     |   IPX-Compression-Protocol    |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     Data ...\n      +-+-+-+-+\n      Type\n         3\n      Length\n      \
    \   >= 4\n      IPX-Compression-Protocol\n   The IPX-Compression-Protocol field\
    \ is two octets and indicates the\n   compression protocol desired.  Odd values\
    \ for this field are always\n   the same as the PPP Data Link Layer Protocol field\
    \ values for that\n   same compression protocol.  Even values are used when the\
    \ compression\n   protocol is interleaved with IPX packets.\n   Up-to-date values\
    \ of the IPX-Compression-Protocol field are specified\n   in the most recent \"\
    Assigned Numbers\" RFC [2].  Current values are\n   assigned as follows:\n   \
    \         Value (in hex)  Protocol\n            0002            Telebit Compressed\
    \ IPX\n            0235            Shiva Compressed NCP/IPX\n    Data\n      The\
    \ Data field is zero or more octets and contains additional data\n      as determined\
    \ by the particular compression protocol.\n"
- title: 3.4 IPX-Routing-Protocol
  contents:
  - "3.4 IPX-Routing-Protocol\n   Description\n      This Configuration Option provides\
    \ a way to negotiate the use of a\n      specific routing protocol (or no routing\
    \ protocol, if desired).\n      The sender of this option is specifying that it\
    \ wishes to receive\n      information of the specified routing protocol.  Multiple\
    \ protocols\n      MAY be requested by sending multiple IPX-Routing-Protocol\n\
    \      Configuration Options.  The \"no routing protocol required\" value\n  \
    \    is mutually exclusive with other values.\n      By default, Novell's combination\
    \ of Routing Information Protocol\n      (RIP) and Server Advertising Protocol\
    \ (SAP) is expected.\n      This is a Desired Parameter when the implementation\
    \ is operating\n      as an end-system, to indicate that no routing protocol is\n\
    \      necessary.\n      Any IPX-WAN packets received MAY add to information negotiated\
    \ in\n      this option.\n    A summary of the IPX-Routing-Protocol Configuration\
    \ Option format is\n    shown below.  The fields are transmitted from left to\
    \ right.\n       0                   1                   2                   3\n\
    \       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    \
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \     Type      |    Length     |     IPX-Routing-Protocol      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Data ...\n      +-+-+-+-+\n      Type\n         4\n      Length\n\
    \         >= 4\n      IPX-Routing-Protocol\n      The IPX-Routing-Protocol field\
    \ is two octets and indicates the\n      type of Routing-Protocol desired.  This\
    \ two octet quantity is sent\n      most significant octet first.\n      Up-to-date\
    \ values of the IPX-Routing-Protocol field are specified\n      in the most recent\
    \ \"Assigned Numbers\" RFC [2].  Current values are\n      assigned as follows:\n\
    \      Value           Protocol\n        0             No routing protocol required\n\
    \        1             RESERVED\n        2             Novell RIP/SAP required\n\
    \        4             Novell NLSP required\n    Data\n      The Data field is\
    \ zero or more octets and contains additional data\n      as determined by the\
    \ routing protocol indicated in the Routing-\n      Protocol field.\n"
- title: 3.5 IPX-Router-Name
  contents:
  - "3.5 IPX-Router-Name\n   Description\n      This Configuration Option provides\
    \ a way to convey information\n      about the IPX server name.\n      The nature\
    \ of this option is advisory only.  It is provided as a\n      means of improving\
    \ the end system's ability to provide a simple\n      user interface.  This option\
    \ MUST NOT be included in a Configure-\n      Nak.\n    A summary of the IPX-Router-Name\
    \ Option format is shown below.  The\n    fields are transmitted from left to\
    \ right.\n        0                   1                   2                  \
    \ 3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \     |     Type      |    Length     |           Name...             |\n    \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      \
    \ Type\n          5\n       Length\n          >= 3\n    Name\n      This field\
    \ contains the name of the IPX entity on this end of the\n      link.  The symbolic\
    \ name should be between 1 and 47 ASCII\n      characters in length, containing\
    \ the characters 'A' through 'Z',\n      underscore (_), hyphen (-) and \"at\"\
    \ sign (@).  The length of the\n      name is bounded by the option length.\n\
    \      On reception, the name SHOULD be padded to 48 characters using the\n  \
    \    NUL character.  Those readers familiar with NetWare 3.x servers\n      will\
    \ realize that this is equivalent to the file server name.\n"
- title: 3.6 IPX-Configuration-Complete
  contents:
  - "3.6 IPX-Configuration-Complete\n   Description\n      This Configuration Option\
    \ provides a way to indicate that all\n      implementation-dependent Desired\
    \ Parameters are satisfied.  It is\n      provided as a means of detecting when\
    \ convergence will occur in a\n      heterogeneous environment.\n      This option\
    \ SHOULD be included in a Configure-Request when the\n      combination of statically\
    \ configured parameters and offered\n      Configuration Options will result in\
    \ successful configuration.\n      The nature of this option is advisory only.\
    \  This option MUST NOT\n      be included in a Configure-Nak.\n      Implementation\
    \ Note: An implementation which does not support\n      IPX-WAN can immediately\
    \ detect that link setup will not be\n      successful when a Desired Parameter\
    \ is unknown, if this option is\n      not present in the peer's Configure-Request\
    \ or is Rejected by the\n      peer.  This avoids timeout delays.\n      An implementation\
    \ which supports IPX-WAN may improve link setup\n      time by skipping IPX-WAN\
    \ entirely when this option has been Ack'd\n      in both directions.\n      However,\
    \ it is perfectly acceptable to complete configuration\n      without including\
    \ this option.  An implementation which includes\n      the entire panoply of\
    \ configuration options and IPX- WAN SHOULD\n      interoperate with an implementation\
    \ which does not support IPX-WAN\n      nor any configuration options (including\
    \ this one), as long as the\n      Desired Parameters are satisfied by default\
    \ or hand configuration.\n    A summary of the IPX-Configuration-Complete Option\
    \ format is shown\n    below.  The fields are transmitted from left to right.\n\
    \        0                   1\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n    \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |     Type      |    Length    \
    \ |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       Type\n          6\n    \
    \   Length\n          2\n"
- title: APPENDIX A. Link Delay and Throughput
  contents:
  - "APPENDIX A. Link Delay and Throughput\n   There has been some concern over correctly\
    \ estimating the link delay\n   (in 55 millisecond ticks) used by Novell routing\
    \ protocols.\n   IPX-WAN uses its Timer Request and Reply for this purpose.  The\n\
    \   measured delay is multiplied by a factor of 6, because the\n   measurement\
    \ is done during initialization of the link, and does not\n   reflect actual loading.\n\
    \   The delay is better measured using the PPP LCP Echo facility, by\n   inserting\
    \ a timestamp in the data part of the Request, and comparing\n   it with the same\
    \ timer when the reply returns.  This method could be\n   used to periodically\
    \ re-evaluate the actual round trip delay as link\n   and system loads change.\
    \  The echo packet size SHOULD be 576, to\n   match the default IPX packet size.\n\
    \   In the absence of such dynamic measurements, empirical evidence has\n   shown\
    \ the following to be sufficient:\n                2,400 bps    134 ticks\n  \
    \             14,400 bps     21 ticks\n               57,600 bps      5 ticks\n\
    \                 >  1 Mbps     1 tick\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: References
  contents:
  - "References\n   [1] Simpson, W., \"The Point-to-Point Protocol (PPP)\", RFC 1548,\n\
    \       Daydreamer, December 1993.\n   [2] Reynolds, J., and J. Postel, \"Assigned\
    \ Numbers\", STD 2, RFC 1340,\n       USC/Information Sciences Institute, July\
    \ 1992.\n   [3] Novell Inc., \"NetWare System Interface Technical Overview\",\n\
    \       Novell Part Number 883-001143-001.\n   [4] Allen, M., \"Novell IPX Over\
    \ Various WAN Media\", RFC 1551,\n       Novell Inc., December 1993.\n   [5] Mathu,\
    \ S., and M. Lewis, \"Compressing IPX Headers Over WAN\n       Media (CIPX)\"\
    , RFC 1553, Telebit Corporation, December 1993.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Some of the text in this document is taken from previous\
    \ documents\n   produced by the Point-to-Point Protocol Working Group of the Internet\n\
    \   Engineering Task Force (IETF).\n   This document is derivative of drafts written\
    \ by the following\n   people.  Many thanks for their work, and for taking an\
    \ initial stab\n   at the protocol:\n         Michael Allen (mallen@novell.com)\n\
    \         Dave McCool (dave@shiva.com)\n         Robert D Vincent (bert@shiva.com)\n\
    \         Marty Del Vecchio (marty@shiva.com)\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \      Fred Baker\n      Advanced Computer Communications\n      315 Bollay Drive\n\
    \      Santa Barbara, California, 93111\n      EMail: fbaker@acc.com\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Questions about this memo can also be directed to:\n   \
    \   William Allen Simpson\n      Daydreamer\n      Computer Systems Consulting\
    \ Services\n      P O Box 6205\n      East Lansing, MI  48826-6205\n      EMail:\
    \ Bill.Simpson@um.cc.umich.edu\n"
