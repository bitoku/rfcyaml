- contents:
  - "                  Definitions and Managed Objects for\n    Operations, Administration,
    and Maintenance (OAM) Functions on\n                        Ethernet-Like Interfaces\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines objects for managing Operations,\n   Administration,
    and Maintenance (OAM) capabilities on Ethernet-like\n   interfaces conformant
    to the Ethernet OAM functionality defined in\n   the Ethernet in the First Mile
    (EFM) clauses of the Ethernet\n   standards.  The Ethernet OAM functionality is
    complementary to the\n   Simple Network Management Protocol (SNMP) in that it
    is focused on a\n   small set of link-specific functions for directly connected
    Ethernet\n   interfaces.  This document defines objects for controlling those
    link\n   OAM functions and for providing results and status of the OAM\n   functions
    to management entities.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. The Internet-Standard Management Framework ......................2\n   3.
    Overview ........................................................3\n      3.1.
    Remote Fault Indication ....................................4\n      3.2. Link
    Monitoring ............................................4\n      3.3. Remote Loopback
    ............................................5\n      3.4. Ethernet OAM Protocol
    Data Units ...........................5\n   4. Relation to the Other MIB Modules
    ...............................5\n      4.1. Relation to Other MIB Modules ..............................5\n
    \     4.2. Relation to Other EFM MIB Modules ..........................6\n      4.3.
    Mapping of IEEE 802.3ah Managed Objects ....................6\n   5. MIB Structure
    ...................................................7\n   6. MIB Definition ..................................................8\n
    \  7. Security Considerations ........................................47\n   8.
    IANA Considerations ............................................49\n   9. References
    .....................................................49\n      9.1. Normative
    References ......................................49\n      9.2. Informative References
    ....................................50\n   10. Acknowledgments ...............................................51\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The IEEE 802.3ah Ethernet in the First Mile (EFM) taskforce
    added new\n   management capabilities to Ethernet-like interfaces.  These\n   management
    capabilities were introduced to provide some basic Ordered\n   Aggregate (OA)
    function on Ethernet media.  The defined functionality\n   includes discovery,
    error signaling, loopback, and link monitoring.\n   This memo defines a portion
    of the Management Information Base (MIB)\n   for use with network management protocols
    in the Internet community\n   to manage these new Ethernet interface capabilities.\n"
  - "Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119 [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Overview\n   Ethernet networks have evolved over the past 30 years from simple\n
    \  LANs to a variety of other applications, including wide-area\n   networks.
    \ To address some of these emerging markets, the IEEE\n   802.3ah taskforce defined
    additional clauses in [802.3ah] for the\n   IEEE 802.3 standard [802.3-2002] to
    better address Ethernet\n   deployments in the public-access network.  Although
    Ethernet-access\n   deployments were the primary motivation for the taskforce
    activity,\n   the results of the taskforce are not strictly limited to that\n
    \  application.  Ethernet OAM can be implemented on Ethernet links that\n   are
    not EFM.\n   The Ethernet in the First Mile (EFM) taskforce was focused on four\n
    \  somewhat independent objectives to better address Ethernet access\n   deployments:
    optics, copper, Ethernet passive optical networks\n   (Ethernet PON, or EPON),
    and operations, administration, and\n   maintenance (OAM).  The optics sub-taskforce
    developed new optical\n   physical layers that better served the long-reach outside
    plant\n   networks typically found in the access network, including developing\n
    \  physical layers that operate up to 20 Km and supporting the\n   environmental
    conditions of access deployments.  The copper sub-\n   taskforce developed two
    new physical layers that run Ethernet\n   natively over existing twisted pair
    wires that have been supporting\n   voice services for decades.  The EPON sub-taskforce
    developed a new\n   point-to-multipoint Ethernet physical layer, utilizing Ethernet\n
    \  framing natively over a time-division multiple-access (TDMA)\n   infrastructure.
    \ The OAM sub-taskforce introduced some basic\n   management functionality into
    an Ethernet link to better monitor and\n   maintain Ethernet networks in geographically
    disparate networks.\n   This document defines the management objects necessary
    to integrate\n   Ethernet OAM functionality into the SNMP management framework.\n
    \  Ethernet OAM is composed of a core set of functions and a set of\n   optional
    functional groups.  The mandatory functions include\n   discovery operations (determining
    if the other end of the link is OA\n   capable and what OAM functions it supports),
    state machine\n   implementation, and some critical event flows.  The optional\n
    \  functional groups are for (a) link events, (b) remote loopback, and\n   (c)
    variable retrieval and response.  Each optional functional group\n   is controlled
    by a separate MIB table(s).\n   Ethernet OAM is complementary with SNMP management
    in that it\n   provides some basic management functions at layer two, rather than\n
    \  using layer three and above as required by SNMP over an IP\n   infrastructure.
    \ Ethernet OAM provides single-hop functionality in\n   that it works only between
    two directly connected Ethernet stations.\n   SNMP can be used to manage the Ethernet
    OAM interactions of one\n   Ethernet station with another.\n   Ethernet OAM has
    three functional objectives, which are detailed in\n   the next three sections.
    \ The definition of a basic Ethernet OA\n   protocol data unit is given in Section
    3.4.\n"
  - contents:
    - "3.1.  Remote Fault Indication\n   Remote fault indication provides a mechanism
      for one end of an\n   Ethernet link to signal the other end that the receive
      path is non-\n   operational.  Some Ethernet physical layers offer mechanisms
      to\n   signal this condition at the physical layer.  Ethernet OAM added a\n
      \  mechanism so that some Ethernet physical layers can operate in\n   unidirectional
      mode, allowing frames to be transmitted in one\n   direction even when the other
      direction is non-operational.\n   Traditionally, Ethernet PHYs do not allow
      frame transmission in one\n   direction if the other direction is not operational.
      \ Using this\n   mode, Ethernet OAM allows frame-based signaling of remote fault\n
      \  conditions while still not allowing higher-layer applications to be\n   aware
      of the unidirectional capability.  This document includes\n   mechanisms for
      capturing that fault information and reflecting such\n   information in objects
      and notifications within the SNMP management\n   framework.\n"
    title: 3.1.  Remote Fault Indication
  - contents:
    - "3.2.  Link Monitoring\n   Ethernet OAM includes event signaling capability
      so that one end of\n   an Ethernet link can indicate the occurrence of certain
      important\n   events to the other end of the link.  This happens via layer two\n
      \  protocols.  This document defines methods for incorporating the\n   occurrence
      of these layer two events, both at the local end and far\n   end of the link,
      into the SNMP management framework.\n   Ethernet OAM also includes mechanisms
      for one Ethernet station to\n   query another directly connected Ethernet station
      about the status of\n   its Ethernet interface variables and status.  This document
      does not\n   include mechanisms for controlling how one Ethernet endpoint may
      use\n   this functionality to query the status or statistics of a peer\n   Ethernet
      entity.\n"
    title: 3.2.  Link Monitoring
  - contents:
    - "3.3.  Remote Loopback\n   Remote loopback is a link state where the peer Ethernet
      entity echoes\n   every received packet (without modifications) back onto the
      link.\n   Remote loopback is intrusive in that the other end of the link is
      not\n   forwarding traffic from higher layers out over the link.  This\n   document
      defines objects controlling loopback operation and reading\n   the status of
      the loopback state.\n"
    title: 3.3.  Remote Loopback
  - contents:
    - "3.4.  Ethernet OAM Protocol Data Units\n   An Ethernet OAM protocol data unit
      is a valid Ethernet frame with a\n   destination Media Access Control (MAC)
      address equal to the reserved\n   MAC address for Slow Protocols (See 43B of
      [802.3ah]), a lengthOrType\n   field equal to the reserved type for Slow Protocols,
      and a Slow\n   Protocols subtype equal to that of the subtype reserved for Ethernet\n
      \  OAM.\n   OAMPDU is used throughout this document as an abbreviation for\n
      \  Ethernet OAM protocol data unit.  OAMPDUs are the mechanism by which\n   two
      directly connected Ethernet interfaces exchange OA information.\n"
    title: 3.4.  Ethernet OAM Protocol Data Units
  title: 3.  Overview
- contents:
  - "4.  Relation to the Other MIB Modules\n   The definitions presented here are
    based on Clauses 30 and 57 of\n   [802.3ah].  Note that these clauses describe
    many of these variables\n   and their effects on the MAC layer.  In some cases,
    there is a one-\n   to-one relationship between an object in this document and
    an object\n   in the Clause 30 MIB of [802.3ah].  In other cases, the objects
    of\n   this document reflect a more complex entity and are reflected by more\n
    \  than one object in the Clause 30 MIB of [802.3ah].\n"
  - contents:
    - "4.1.  Relation to Other MIB Modules\n   The objects defined in this document
      manage OAM functionality\n   introduced in [802.3ah]  These objects do not overlap
      with the\n   interfaces MIB [RFC2863], the Ethernet-like interfaces MIB [RFC3635],\n
      \  or any other MIB currently used to manage various aspects of an\n   Ethernet
      interface.  The objects defined here are defined for\n   Ethernet-like interfaces
      only and use the same ifIndex as the\n   associated Ethernet interface.  Ethernet
      OAM can be implemented on\n   any Ethernet-like interface.\n"
    title: 4.1.  Relation to Other MIB Modules
  - contents:
    - "4.2.  Relation to Other EFM MIB Modules\n   The Ethernet OAM functionality
      and MIB Module is independent of the\n   other functionality and MIB Modules
      derived from [802.3ah] for copper\n   [802.3ah-copper] and EPON [802.3ah-epon].
      \ Ethernet OAM may be\n   implemented (or not) on the new EFM interface types,
      just as it can\n   on any other Ethernet interface.\n"
    title: 4.2.  Relation to Other EFM MIB Modules
  - contents:
    - "4.3.  Mapping of IEEE 802.3ah Managed Objects\n   This section contains the
      mapping between managed objects defined in\n   [802.3ah] Clause 30, and managed
      objects defined in this document.\n   IEEE 802.3 Managed Object        Corresponding
      SNMP object\n   oOA\n    .aOAMID                         IF-MIB ifIndex\n    .aOAMAdminState
      \                dot3OamAdminState\n    .aOAMMode                       dot3OamMode\n
      \   .aOAMDiscoveryState             dot3OamOperStatus\n    .aOAMRemoteMACAddress
      \          dot3OamPeerMacAddress\n    .aOAMLocalConfiguration         dot3OamFunctionsSupported\n
      \   .aOAMRemoteConfiguration        dot3OamPeerFunctionsSupported,\n                                    dot3OamPeerMode\n
      \   .aOAMLocalPDUConfiguration      dot3OamMaxOamPduSize\n    .aOAMRemotePDUConfiguration
      \    dot3OamPeerMaxOamPduSize\n    .aOAMLocalFlagsField            dot3OamOperStatus,\n
      \                                   dot3OamEventLogEntry\n    .aOAMRemoteFlagsField
      \          dot3OamOperStatus,\n                                    dot3OamEventLogEntry\n
      \   .aOAMLocalRevision              dot3OamConfigRevision\n    .aOAMRemoteRevision
      \            dot3OamPeerConfigRevision\n    .aOAMLocalState                 dot3OamLoopbackStatus\n
      \   .aOAMRemoteState                dot3OamLoopbackStatus\n    .aOAMRemoteVendorOUI
      \           dot3OamPeerVendorOui\n    .aOAMRemoteVendorSpecificInfo   dot3OamPeerVendorInfo\n
      \   .aOAMUnsupportedCodesTx         dot3OamUnsupportedCodesTx\n    .aOAMUnsupportedCodesRx
      \        dot3OamUnsupportedCodesRx\n    .aOAMInformationTx              dot3OamInformationTx\n
      \   .aOAMInformationRx              dot3OamInformationRx\n    .aOAMUniqueEventNotificationTx
      \ dot3OamUniqueEventNotificationTx\n    .aOAMUniqueEventNotificationRx  dot3OamUniqueEventNotificationRx\n
      \   .aOAMDuplicateEventNotificationTx\n                                    dot3OamDuplicateEventNotificationTx\n
      \   .aOAMDuplicateEventNotificationRx\n                                    dot3OamDuplicateEventNotificationRx\n
      \   .aOAMLoopbackControlTx          dot3OamLoopbackControlTx\n    .aOAMLoopbackControlRx
      \         dot3OamLoopbackControlRx\n    .aOAMVariableRequestTx          dot3OamVariableRequestTx\n
      \   .aOAMVariableRequestRx          dot3OamVariableRequestRx\n    .aOAMVariableResponseTx
      \        dot3OamVariableResponseTx\n    .aOAMVariableResponseRx         dot3OamVariableResponseRx\n
      \   .aOAMOrganizationSpecificTx     dot3OamOrgSpecificTx\n    .aOAMOrganizationSpecificRx
      \    dot3OamOrgSpecificTx\n    .aOAMLocalErrSymPeriodConfig    dot3OamErrSymPeriodWindow,\n
      \                                   dot3OamErrSymPeriodThreshold\n    .aOAMLocalErrSymPeriodEvent
      \    dot3OamEventLogEntry\n    .aOAMLocalErrFrameConfig        dot3OamErrFrameWindow,\n
      \                                   dot3OamErrFrameThreshold\n    .aOAMLocalErrFrameEvent
      \        dot3OamEventLogEntry\n    .aOAMLocalErrFramePeriodConfig  dot3OamErrFramePeriodWindow,\n
      \                                   dot3OamErrFramePeriodThreshold\n    .aOAMLocalErrFramePeriodEvent
      \  dot3OamEventLogEntry\n    .aOAMLocalErrFrameSecsSummaryConfig\n                                    dot3OamErrFrameSecsSummaryWindow,\n
      \                                   dot3OamErrFrameSecssummaryThreshold\n    .aOAMLocalErrFrameSecsSummaryEvent\n
      \                                   dot3OamEventLogEntry\n    .aOAMRemoteErrSymPeriodEvent
      \   dot3OamEventLogEntry\n    .aOAMRemoteErrFrameEvent        dot3OamEventLogEntry\n
      \   .aOAMRemoteErrFramePeriodEvent  dot3OamEventLogEntry\n    .aOAMRemoteErrFrameSecsSummaryEvent\n
      \                                   dot3OamEventLogEntry\n    .aFramesLostDueToOAmError
      \      dot3OamFramesLostDueToOam\n    .acOAMAdminControl              dot3OamAdminState\n
      \  There are no IEEE 802.3ah managed objects that are not reflected in\n   this
      MIB Module in some manner.\n"
    title: 4.3.  Mapping of IEEE 802.3ah Managed Objects
  title: 4.  Relation to the Other MIB Modules
- contents:
  - "5.  MIB Structure\n   The Ethernet OAM MIB objects of this memo focus on the
    OA\n   capabilities introduced in [802.3ah].  The MIB objects are\n   partitioned
    into six different MIB groups.\n   The dot3OamTable group manages the primary
    OAM objects of the\n   Ethernet interface.  This group controls the state and
    status of OA\n   as well as the mode in which it operates.\n   The dot3OamPeerTable
    maintains the current information on the status\n   and configuration of the peer
    OAM entity on the Ethernet interface.\n   Managed information includes the capabilities
    and function available\n   on the peer OAM entity.\n   The dot3OamLoopbackTable
    manages the loopback function introduced in\n   [802.3ah].  This table controls
    enabling and disabling loopback, as\n   well as indicating the loopback status
    of Ethernet OAM on this\n   interface.\n   The dot3OamStatsTable maintains statistics
    on the number and type of\n   Ethernet OAM frames being transmitted and received
    on the Ethernet\n   interface.\n   The dot3OamEventConfigTable defines the objects
    for managing the\n   event notification capability available in Ethernet OAM.
    \ With\n   Ethernet OAM, one device may send notifications to its peer devices\n
    \  whenever an important event happens on the local device.  This table\n   provides
    management of which events result in notifications via\n   Ethernet OAM notifications
    and/or via SNMP notifications.\n   The dot3OamEventLogTable manages the current
    status of local and\n   remote events detected via Ethernet OAM.  This table is
    updated\n   whenever local events are detected by Ethernet OAM or whenever\n   Ethernet
    OAM Event Notifications are received from the peer OA\n   entity.\n   There are
    two notifications defined to report Ethernet OAM events\n   (one for threshold
    crossing events, one for non-threshold crossing\n   events).  Both notifications
    are contained within the same\n   conformance group.\n"
  title: 5.  MIB Structure
- contents:
  - "6.  MIB Definition\n   DOT3-OAM-MIB DEFINITIONS ::= BEGIN\n    IMPORTS\n      MODULE-IDENTITY,
    mib-2, OBJECT-TYPE, Counter32, Unsigned32,\n        Integer32, NOTIFICATION-TYPE\n
    \       FROM SNMPv2-SMI\n        -- from [RFC2578]\n      TEXTUAL-CONVENTION,
    MacAddress, TimeStamp, TruthValue\n        FROM SNMPv2-TC\n        -- from [RFC2579]\n
    \     CounterBasedGauge64\n        FROM HCNUM-TC\n        -- from [RFC2856]\n
    \     ifIndex\n        FROM IF-MIB\n        -- from [RFC2863]\n      MODULE-COMPLIANCE,
    OBJECT-GROUP, NOTIFICATION-GROUP\n        FROM SNMPv2-CONF;\n        -- from [RFC2580]\n
    \     dot3OamMIB MODULE-IDENTITY\n        LAST-UPDATED \"200706140000Z\"  -- June
    14,2007\"\n        ORGANIZATION\n          \"IETF Ethernet Interfaces and Hub
    MIB Working Group\"\n        CONTACT-INFO\n          \"WG Charter:\n            http://www.ietf.org/html.charters/hubmib-charter.html\n
    \         Mailing lists:\n            General Discussion: hubmib@ietf.org\n            To
    Subscribe: hubmib-requests@ietf.org\n            In Body: subscribe your_email_address\n
    \         Chair: Bert Wijnen\n            Alcatel-Lucent\n            Email: bwijnen
    at alcatel-lucent dot com\n          Editor: Matt Squire\n            Hatteras
    Networks\n            E-mail: msquire at hatterasnetworks dot com\n          \"\n
    \       DESCRIPTION\n          \"The MIB module for managing the new Ethernet
    OAM features\n          introduced by the Ethernet in the First Mile taskforce
    (IEEE\n          802.3ah).  The functionality presented here is based on IEEE\n
    \         802.3ah [802.3ah], released in October, 2004.  [802.3ah] was\n          prepared
    as an addendum to the standing version of IEEE 802.3\n          [802.3-2002].
    \ Since then, [802.3ah] has been\n          merged into the base IEEE 802.3 specification
    in [802.3-2005].\n          In particular, this MIB focuses on the new OAM functions\n
    \         introduced in Clause 57 of [802.3ah].  The OAM functionality\n          of
    Clause 57 is controlled by new management attributes\n          introduced in
    Clause 30 of [802.3ah].  The OAM functions are\n          not specific to any
    particular Ethernet physical layer, and\n          can be generically applied
    to any Ethernet interface of\n          [802.3-2002].\n          An Ethernet OAM
    protocol data unit is a valid Ethernet frame\n          with a destination MAC
    address equal to the reserved MAC\n          address for Slow Protocols (See 43B
    of [802.3ah]), a\n          lengthOrType field equal to the reserved type for
    Slow\n          Protocols, and a Slow Protocols subtype equal to that of the\n
    \         subtype reserved for Ethernet OAM.  OAMPDU is used throughout\n          this
    document as an abbreviation for Ethernet OAM protocol\n          data unit.\n
    \         The following reference is used throughout this MIB module:\n            [802.3ah]
    refers to:\n              IEEE Std 802.3ah-2004: 'Draft amendment to -\n              Information
    technology - Telecommunications and\n              information exchange between
    systems - Local and\n              metropolitan area networks - Specific requirements
    - Part\n              3: Carrier sense multiple access with collision detection\n
    \             (CSMA/CD) access method and physical layer specifications\n              -
    Media Access Control Parameters, Physical Layers and\n              Management
    Parameters for subscriber access networks',\n              October 2004.\n            [802.3-2002]
    refers to:\n              IEEE Std 802.3-2002:\n              'Information technology
    - Telecommunications and\n              information exchange between systems -
    Local and\n              metropolitan area networks - Specific requirements -
    Part\n              3: Carrier sense multiple access with collision detection\n
    \             (CSMA/CD) access method and physical layer specifications\n              -
    Media Access Control Parameters, Physical Layers and\n              Management
    Parameters for subscriber access networks',\n              March 2002.\n            [802.3-2005]
    refers to:\n              IEEE Std 802.3-2005:\n              'Information technology
    - Telecommunications and\n              information exchange between systems -
    Local and\n              metropolitan area networks - Specific requirements -
    Part\n              3: Carrier sense multiple access with collision detection\n
    \             (CSMA/CD) access method and physical layer specifications\n              -
    Media Access Control Parameters, Physical Layers and\n              Management
    Parameters for subscriber access networks',\n              December 2005.\n            [802-2001]
    refers to:\n              'IEEE Standard for LAN/MAN (Local Area\n              Network/Metropolitan
    Area Network): Overview and\n              Architecture', IEEE 802, June 2001.\n
    \         Copyright (c) The IETF Trust (2007).  This version of\n          this
    MIB module is part of RFC 4878; See the RFC itself for\n          full legal notices.
    \"\n        REVISION    \"200706140000Z\"  -- June 14, 2007\"\n        DESCRIPTION
    \"Initial version, published as RFC 4878.\"\n         ::= { mib-2 158 }\n      --\n
    \     -- Sections of the Ethernet OAM MIB\n      --\n         dot3OamNotifications
    OBJECT IDENTIFIER ::= { dot3OamMIB 0 }\n         dot3OamObjects       OBJECT IDENTIFIER
    ::= { dot3OamMIB 1 }\n         dot3OamConformance   OBJECT IDENTIFIER ::= { dot3OamMIB
    2 }\n      --\n      -- Textual conventions for the OAM MIB\n      --\n      EightOTwoOui
    ::= TEXTUAL-CONVENTION\n        STATUS       current\n        DESCRIPTION\n          \"24-bit
    Organizationally Unique Identifier.  Information on\n          OUIs can be found
    in IEEE 802-2001 [802-2001], Clause 9.\"\n        SYNTAX       OCTET STRING(SIZE(3))\n
    \     -- ***************************************************************\n      --\n
    \     -- Ethernet OAM Control group\n      --\n      dot3OamTable OBJECT-TYPE\n
    \       SYNTAX      SEQUENCE OF Dot3OamEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"This table contains
    the primary controls and status for the\n          OAM capabilities of an Ethernet-like
    interface.  There will be\n          one row in this table for each Ethernet-like
    interface in the\n          system that supports the OAM functions defined in
    [802.3ah].\n          \"\n        ::= { dot3OamObjects 1 }\n      dot3OamEntry
    OBJECT-TYPE\n        SYNTAX     Dot3OamEntry\n        MAX-ACCESS not-accessible\n
    \       STATUS     current\n        DESCRIPTION\n          \"An entry in the table
    that contains information on the\n          Ethernet OAM function for a single
    Ethernet like interface.\n          Entries in the table are created automatically
    for each\n          interface supporting Ethernet OAM.  The status of the row\n
    \         entry can be determined from dot3OamOperStatus.\n          A dot3OamEntry
    is indexed in the dot3OamTable by the ifIndex\n          object of the Interfaces
    MIB.\n          \"\n        INDEX       { ifIndex }\n        ::= { dot3OamTable
    1 }\n      Dot3OamEntry ::=\n        SEQUENCE {\n          dot3OamAdminState                  INTEGER,\n
    \         dot3OamOperStatus                  INTEGER,\n          dot3OamMode                        INTEGER,\n
    \         dot3OamMaxOamPduSize               Unsigned32,\n          dot3OamConfigRevision
    \             Unsigned32,\n          dot3OamFunctionsSupported          BITS\n
    \       }\n      dot3OamAdminState OBJECT-TYPE\n        SYNTAX      INTEGER {\n
    \                     enabled(1),\n                      disabled(2)\n                    }\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"This object is used to provision the default administrative\n          OAM
    mode for this interface.  This object represents the\n          desired state
    of OAM for this interface.\n          The dot3OamAdminState always starts in the
    disabled(2) state\n          until an explicit management action or configuration\n
    \         information retained by the system causes a transition to the\n          enabled(1)
    state.  When enabled(1), Ethernet OAM will attempt\n          to operate over
    this interface.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.2\"\n
    \       ::= { dot3OamEntry 1 }\n      dot3OamOperStatus OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n                      disabled(1),\n                      linkFault(2),\n
    \                     passiveWait(3),\n                      activeSendLocal(4),\n
    \                     sendLocalAndRemote(5),\n                      sendLocalAndRemoteOk(6),\n
    \                     oamPeeringLocallyRejected(7),\n                      oamPeeringRemotelyRejected(8),\n
    \                     operational(9),\n                      nonOperHalfDuplex(10)\n
    \                   }\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"At initialization and failure conditions, two
    OAM entities on\n          the same full-duplex Ethernet link begin a discovery
    phase to\n          determine what OAM capabilities may be used on that link.
    \ The\n          progress of this initialization is controlled by the OA\n          sublayer.\n
    \         This value is always disabled(1) if OAM is disabled on this\n          interface
    via the dot3OamAdminState.\n          If the link has detected a fault and is
    transmitting OAMPDUs\n          with a link fault indication, the value is linkFault(2).\n
    \         Also, if the interface is not operational (ifOperStatus is\n          not
    up(1)), linkFault(2) is returned.  Note that the object\n          ifOperStatus
    may not be up(1) as a result of link failure or\n          administrative action
    (ifAdminState being down(2) or\n          testing(3)).\n          The passiveWait(3)
    state is returned only by OAM entities in\n          passive mode (dot3OamMode)
    and reflects the state in which the\n          OAM entity is waiting to see if
    the peer device is OA\n          capable.  The activeSendLocal(4) value is used
    by active mode\n          devices (dot3OamMode) and reflects the OAM entity actively\n
    \         trying to discover whether the peer has OAM capability but has\n          not
    yet made that determination.\n          The state sendLocalAndRemote(5) reflects
    that the local OA\n          entity has discovered the peer but has not yet accepted
    or\n          rejected the configuration of the peer.  The local device can,\n
    \         for whatever reason, decide that the peer device is\n          unacceptable
    and decline OAM peering.  If the local OAM entity\n          rejects the peer
    OAM entity, the state becomes\n          oamPeeringLocallyRejected(7).  If the
    OAM peering is allowed\n          by the local device, the state moves to\n          sendLocalAndRemoteOk(6).
    \ Note that both the\n          sendLocalAndRemote(5) and oamPeeringLocallyRejected(7)
    states\n          fall within the state SEND_LOCAL_REMOTE of the Discovery state\n
    \         diagram [802.3ah, Figure 57-5], with the difference being\n          whether
    the local OAM client has actively rejected the peering\n          or has just
    not indicated any decision yet.  Whether a peering\n          decision has been
    made is indicated via the local flags field\n          in the OAMPDU (reflected
    in the aOAMLocalFlagsField of\n          30.3.6.1.10).\n          If the remote
    OAM entity rejects the peering, the state\n          becomes oamPeeringRemotelyRejected(8).
    \ Note that both the\n          sendLocalAndRemoteOk(6) and oamPeeringRemotelyRejected(8)\n
    \         states fall within the state SEND_LOCAL_REMOTE_OK of the\n          Discovery
    state diagram [802.3ah, Figure 57-5], with the\n          difference being whether
    the remote OAM client has rejected\n          the peering or has just not yet
    decided.  This is indicated\n          via the remote flags field in the OAMPDU
    (reflected in the\n          aOAMRemoteFlagsField of 30.3.6.1.11).\n          When
    the local OAM entity learns that both it and the remote\n          OAM entity
    have accepted the peering, the state moves to\n          operational(9) corresponding
    to the SEND_ANY state of the\n          Discovery state diagram [802.3ah, Figure
    57-5].\n          Since Ethernet OAM functions are not designed to work\n          completely
    over half-duplex interfaces, the value\n          nonOperHalfDuplex(10) is returned
    whenever Ethernet OAM is\n          enabled (dot3OamAdminState is enabled(1)),
    but the interface\n          is in half-duplex operation.\n          \"\n        REFERENCE
    \  \"[802.3ah], 30.3.6.1.4, 30.3.6.1.10, 30.3.6.1.11\"\n        ::= { dot3OamEntry
    2 }\n      dot3OamMode OBJECT-TYPE\n        SYNTAX      INTEGER {\n                      passive(1),\n
    \                     active(2)\n                    }\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"This object configures
    the mode of OAM operation for this\n          Ethernet-like interface.  OAM on
    Ethernet interfaces may be in\n          'active' mode or 'passive' mode.  These
    two modes differ in\n          that active mode provides additional capabilities
    to initiate\n          monitoring activities with the remote OAM peer entity,
    while\n          passive mode generally waits for the peer to initiate OA\n          actions
    with it.  As an example, an active OAM entity can put\n          the remote OAM
    entity in a loopback state, where a passive OA\n          entity cannot.\n          The
    default value of dot3OamMode is dependent on the type of\n          system on
    which this Ethernet-like interface resides.  The\n          default value should
    be 'active(2)' unless it is known that\n          this system should take on a
    subservient role to the other\n          device connected over this interface.\n
    \         Changing this value results in incrementing the configuration\n          revision
    field of locally generated OAMPDUs (30.3.6.1.12) and\n          potentially re-doing
    the OAM discovery process if the\n          dot3OamOperStatus was already operational(9).\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.3\"\n        ::= { dot3OamEntry
    3 }\n      dot3OamMaxOamPduSize OBJECT-TYPE\n        SYNTAX      Unsigned32 (64..1518)\n
    \       UNITS       \"octets\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The largest OAMPDU that the OAM
    entity supports.  OA\n          entities exchange maximum OAMPDU sizes and negotiate
    to use\n          the smaller of the two maximum OAMPDU sizes between the peers.\n
    \         This value is determined by the local implementation.\n          \"\n
    \       REFERENCE   \"[802.3ah], 30.3.6.1.8\"\n        ::= { dot3OamEntry 4 }\n
    \     dot3OamConfigRevision OBJECT-TYPE\n        SYNTAX      Unsigned32(0..65535)\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The configuration revision of the OAM entity as reflected in\n          the
    latest OAMPDU sent by the OAM entity.  The config revision\n          is used
    by OAM entities to indicate that configuration changes\n          have occurred,
    which might require the peer OAM entity to\n          re-evaluate whether OAM
    peering is allowed.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.12\"\n
    \       ::= { dot3OamEntry 5 }\n      dot3OamFunctionsSupported OBJECT-TYPE\n
    \       SYNTAX      BITS {\n                      unidirectionalSupport (0),\n
    \                     loopbackSupport(1),\n                      eventSupport(2),\n
    \                     variableSupport(3)\n                    }\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n          \"The
    OAM functions supported on this Ethernet-like interface.\n          OAM consists
    of separate functional sets beyond the basic\n          discovery process that
    is always required.  These functional\n          groups can be supported independently
    by any implementation.\n          These values are communicated to the peer via
    the local\n          configuration field of Information OAMPDUs.\n          Setting
    'unidirectionalSupport(0)' indicates that the OA\n          entity supports the
    transmission of OAMPDUs on links that are\n          operating in unidirectional
    mode (traffic flowing in one\n          direction only).  Setting 'loopbackSupport(1)'
    indicates that\n          the OAM entity can initiate and respond to loopback
    commands.\n          Setting 'eventSupport(2)' indicates that the OAM entity can\n
    \         send and receive Event Notification OAMPDUs.  Setting\n          'variableSupport(3)'
    indicates that the OAM entity can send\n          and receive Variable Request
    and Response OAMPDUs.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.6\"\n
    \       ::= { dot3OamEntry 6 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Peer group\n      --\n      dot3OamPeerTable OBJECT-TYPE\n
    \       SYNTAX      SEQUENCE OF Dot3OamPeerEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"This table contains
    information about the OAM peer for a\n          particular Ethernet-like interface.
    \ OAM entities communicate\n          with a single OAM peer entity on Ethernet
    links on which OA\n          is enabled and operating properly.  There is one
    entry in this\n          table for each entry in the dot3OamTable for which information\n
    \         on the peer OAM entity is available.\n          \"\n        ::= { dot3OamObjects
    2 }\n      dot3OamPeerEntry OBJECT-TYPE\n        SYNTAX      Dot3OamPeerEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An entry in the table containing information on the peer OA\n          entity
    for a single Ethernet-like interface.\n          Note that there is at most one
    OAM peer for each Ethernet-like\n          interface.  Entries are automatically
    created when information\n          about the OAM peer entity becomes available,
    and automatically\n          deleted when the OAM peer entity is no longer in\n
    \         communication.  Peer information is not available when\n          dot3OamOperStatus
    is disabled(1), linkFault(2),\n          passiveWait(3), activeSendLocal(4), or
    nonOperHalfDuplex(10).\n          \"\n        INDEX       { ifIndex }\n        ::=
    { dot3OamPeerTable 1 }\n      Dot3OamPeerEntry ::=\n        SEQUENCE {\n          dot3OamPeerMacAddress
    \              MacAddress,\n          dot3OamPeerVendorOui                EightOTwoOui,\n
    \         dot3OamPeerVendorInfo               Unsigned32,\n          dot3OamPeerMode
    \                    INTEGER,\n          dot3OamPeerMaxOamPduSize            Unsigned32,\n
    \         dot3OamPeerConfigRevision           Unsigned32,\n          dot3OamPeerFunctionsSupported
    \      BITS\n        }\n      dot3OamPeerMacAddress OBJECT-TYPE\n        SYNTAX
    \     MacAddress\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"The MAC address of the peer OAM entity.  The
    MAC address is\n          derived from the most recently received OAMPDU.\n          \"\n
    \       REFERENCE   \"[802.3ah], 30.3.6.1.5.\"\n        ::= { dot3OamPeerEntry
    1 }\n      dot3OamPeerVendorOui OBJECT-TYPE\n        SYNTAX      EightOTwoOui\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The OUI of the OAM peer as reflected in the latest\n          Information
    OAMPDU received with a Local Information TLV.  The\n          OUI can be used
    to identify the vendor of the remote OA\n          entity.  This value is initialized
    to three octets of zero\n          before any Local Information TLV is received.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.16.\"\n        ::= { dot3OamPeerEntry
    2 }\n      dot3OamPeerVendorInfo OBJECT-TYPE\n        SYNTAX      Unsigned32\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"The Vendor Info of the OAM peer as reflected in the latest\n          Information
    OAMPDU received with a Local Information TLV.\n          The semantics of the
    Vendor Information field is proprietary\n          and specific to the vendor
    (identified by the\n          dot3OamPeerVendorOui).  This information could,
    for example,\n          be used to identify a specific product or product family.\n
    \         This value is initialized to zero before any Local\n          Information
    TLV is received.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.17.\"\n
    \       ::= { dot3OamPeerEntry 3 }\n      dot3OamPeerMode OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n                      passive(1),\n                      active(2),\n
    \                     unknown(3)\n                    }\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The mode of the
    OAM peer as reflected in the latest\n          Information OAMPDU received with
    a Local Information TLV.  The\n          mode of the peer can be determined from
    the Configuration\n          field in the Local Information TLV of the last Information\n
    \         OAMPDU received from the peer.  The value is unknown(3)\n          whenever
    no Local Information TLV has been received.  The\n          values of active(2)
    and passive(1) are returned when a Local\n          Information TLV has been received
    indicating that the peer is\n          in active or passive mode, respectively.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.7.\"\n        ::= { dot3OamPeerEntry
    4 }\n      dot3OamPeerMaxOamPduSize OBJECT-TYPE\n        SYNTAX      Unsigned32
    (0 | 64..1518)\n        UNITS       \"octets\"\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The maximum size
    of OAMPDU supported by the peer as reflected\n          in the latest Information
    OAMPDU received with a Local\n          Information TLV.  Ethernet OAM on this
    interface must not use\n          OAMPDUs that exceed this size.  The maximum
    OAMPDU size can be\n          determined from the PDU Configuration field of the
    Local\n          Information TLV of the last Information OAMPDU received from\n
    \         the peer.  A value of zero is returned if no Local Information\n          TLV
    has been received.  Otherwise, the value of the OAM peer's\n          maximum
    OAMPDU size is returned in this value.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.9.\"\n        ::= { dot3OamPeerEntry 5 }\n      dot3OamPeerConfigRevision
    OBJECT-TYPE\n        SYNTAX      Unsigned32(0..65535)\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The configuration
    revision of the OAM peer as reflected in\n          the latest OAMPDU.  This attribute
    is changed by the peer\n          whenever it has a local configuration change
    for Ethernet OA\n          on this interface.  The configuration revision can
    be\n          determined from the Revision field of the Local Information\n          TLV
    of the most recently received Information OAMPDU with\n          a Local Information
    TLV.  A value of zero is returned if\n          no Local Information TLV has been
    received.\n        \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.13.\"\n        ::=
    { dot3OamPeerEntry 6 }\n      dot3OamPeerFunctionsSupported OBJECT-TYPE\n        SYNTAX
    \     BITS {\n                      unidirectionalSupport (0),\n                      loopbackSupport(1),\n
    \                     eventSupport(2),\n                      variableSupport(3)\n
    \                   }\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"The OAM functions supported on this Ethernet-like
    interface.\n          OAM consists of separate functionality sets above the basic\n
    \         discovery process.  This value indicates the capabilities of\n          the
    peer OAM entity with respect to these functions.  This\n          value is initialized
    so all bits are clear.\n          If unidirectionalSupport(0) is set, then the
    peer OAM entity\n          supports sending OAM frames on Ethernet interfaces
    when the\n          receive path is known to be inoperable.  If\n          loopbackSupport(1)
    is set, then the peer OAM entity can send\n          and receive OAM loopback
    commands.  If eventSupport(2) is set,\n          then the peer OAM entity can
    send and receive event OAMPDUs to\n          signal various error conditions.
    \ If variableSupport(3) is\n          set, then the peer OAM entity can send and
    receive variable\n          requests to monitor the attribute value as described
    in Clause\n          57 of [802.3ah].\n          The capabilities of the OAM peer
    can be determined from the\n          configuration field of the Local Information
    TLV of the most\n          recently received Information OAMPDU with a Local Information\n
    \         TLV.  All zeros are returned if no Local Information TLV has\n          yet
    been received.\n          \"\n        REFERENCE   \"[802.3ah], REFERENCE 30.3.6.1.7.\"\n
    \       ::= { dot3OamPeerEntry 7 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Loopback group\n      --\n      dot3OamLoopbackTable
    OBJECT-TYPE\n        SYNTAX      SEQUENCE OF Dot3OamLoopbackEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"This
    table contains controls for the loopback state of the\n          local link as
    well as indicates the status of the loopback\n          function.  There is one
    entry in this table for each entry in\n          dot3OamTable that supports loopback
    functionality (where\n          dot3OamFunctionsSupported includes the loopbackSupport
    bit\n          set).\n          Loopback can be used to place the remote OAM entity
    in a state\n          where every received frame (except OAMPDUs) is echoed back\n
    \         over the same interface on which they were received.  In this\n          state,
    at the remote entity, 'normal' traffic is disabled as\n          only the looped
    back frames are transmitted on the interface.\n          Loopback is thus an intrusive
    operation that prohibits normal\n          data flow and should be used accordingly.\n
    \         \"\n        ::= { dot3OamObjects 3 }\n      dot3OamLoopbackEntry OBJECT-TYPE\n
    \       SYNTAX      Dot3OamLoopbackEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"An entry in the
    table, containing information on the loopback\n          status for a single Ethernet-like
    interface.  Entries in the\n          table are automatically created whenever
    the local OAM entity\n          supports loopback capabilities.  The loopback
    status on the\n          interface can be determined from the dot3OamLoopbackStatus\n
    \         object.\n          \"\n        INDEX       { ifIndex }\n        ::=
    { dot3OamLoopbackTable 1 }\n      Dot3OamLoopbackEntry ::=\n        SEQUENCE {\n
    \         dot3OamLoopbackStatus             INTEGER,\n          dot3OamLoopbackIgnoreRx
    \          INTEGER\n        }\n      dot3OamLoopbackStatus OBJECT-TYPE\n        SYNTAX
    \     INTEGER {\n                      -- all values, except where noted, can
    be read\n                      -- but cannot be written\n                      noLoopback
    (1),\n                      -- initiatingLoopback can be read or written\n                      initiatingLoopback
    (2),\n                      remoteLoopback (3),\n                      -- terminatingLoopback
    can be read or written\n                      terminatingLoopback (4),\n                      localLoopback
    (5),\n                      unknown (6)\n                    }\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"The
    loopback status of the OAM entity.  This status is\n          determined by a
    combination of the local parser and\n          multiplexer states, the remote
    parser and multiplexer states,\n          as well as by the actions of the local
    OAM client.  When\n          operating in normal mode with no loopback in progress,
    the\n          status reads noLoopback(1).\n          The values initiatingLoopback(2)
    and terminatingLoopback(4)\n          can be read or written.  The other values
    can only be read -\n          they can never be written.  Writing initiatingLoopback
    causes\n          the local OAM entity to start the loopback process with its\n
    \         peer.  This value can only be written when the status is\n          noLoopback(1).
    \ Writing the value initiatingLoopback(2) in any\n          other state has no
    effect.  When in remoteLoopback(3), writing\n          terminatingLoopback(4)
    causes the local OAM entity to initiate\n          the termination of the loopback
    state.  Writing\n          terminatingLoopack(4) in any other state has no effect.\n
    \         If the OAM client initiates a loopback and has sent a\n          Loopback
    OAMPDU and is waiting for a response, where the local\n          parser and multiplexer
    states are DISCARD (see [802.3ah,\n          57.2.11.1]), the status is 'initiatingLoopback'.
    \ In this\n          case, the local OAM entity has yet to receive any\n          acknowledgment
    that the remote OAM entity has received its\n          loopback command request.\n
    \         If the local OAM client knows that the remote OAM entity is in\n          loopback
    mode (via the remote state information as described\n          in [802.3ah, 57.2.11.1,
    30.3.6.1.15]), the status is\n          remoteLoopback(3).  If the local OAM client
    is in the process\n          of terminating the remote loopback [802.3ah, 57.2.11.3,\n
    \         30.3.6.1.14] with its local multiplexer and parser states in\n          DISCARD,
    the status is terminatingLoopback(4).  If the remote\n          OAM client has
    put the local OAM entity in loopback mode as\n          indicated by its local
    parser state, the status is\n          localLoopback(5).\n          The unknown(6)
    status indicates that the parser and\n          multiplexer combination is unexpected.
    \ This status may be\n          returned if the OAM loopback is in a transition
    state but\n          should not persist.\n          The values of this attribute
    correspond to the following\n          values of the local and remote parser and
    multiplexer states.\n            value            LclPrsr   LclMux    RmtPrsr
    \  RmtMux\n            noLoopback         FWD       FWD       FWD       FWD\n
    \           initLoopback     DISCARD   DISCARD     FWD       FWD\n            rmtLoopback
    \     DISCARD     FWD      LPBK    DISCARD\n            tmtngLoopback    DISCARD
    \  DISCARD    LPBK    DISCARD\n            lclLoopback        LPBK    DISCARD
    \  DISCARD     FWD\n            unknown            ***   any other combination
    \  ***\n          \"\n        REFERENCE   \"[802.3ah], REFERENCE 57.2.11, 30.3.61.14,\n
    \         30.3.6.1.15\"\n        ::= { dot3OamLoopbackEntry 1 }\n      dot3OamLoopbackIgnoreRx
    OBJECT-TYPE\n        SYNTAX      INTEGER { ignore(1), process(2) }\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"Since
    OAM loopback is a disruptive operation (user traffic\n          does not pass),
    this attribute provides a mechanism to provide\n          controls over whether
    received OAM loopback commands are\n          processed or ignored.  When the
    value is ignore(1), received\n          loopback commands are ignored.  When the
    value is process(2),\n          OAM loopback commands are processed.  The default
    value is to\n          ignore loopback commands (ignore(1)).\n          \"\n        REFERENCE
    \  \"[802.3ah], REFERENCE 57.2.11, 30.3.61.14,\n          30.3.6.1.15\"\n        ::=
    { dot3OamLoopbackEntry 2 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Statistics group\n      --\n      dot3OamStatsTable
    OBJECT-TYPE\n        SYNTAX      SEQUENCE OF Dot3OamStatsEntry\n        MAX-ACCESS
    \ not-accessible\n        STATUS      current\n        DESCRIPTION\n          \"This
    table contains statistics for the OAM function on a\n          particular Ethernet-like
    interface.  There is an entry in the\n          table for every entry in the dot3OamTable.\n
    \         The counters in this table are defined as 32-bit entries to\n          match
    the counter size as defined in [802.3ah].  Given that\n          the OA protocol
    is a slow protocol, the counters increment at\n          a slow rate.\n          \"\n
    \       ::= { dot3OamObjects 4 }\n      dot3OamStatsEntry OBJECT-TYPE\n        SYNTAX
    \     Dot3OamStatsEntry\n        MAX-ACCESS  not-accessible\n        STATUS      current\n
    \       DESCRIPTION\n          \"An entry in the table containing statistics information
    on\n          the Ethernet OAM function for a single Ethernet-like\n          interface.
    \ Entries are automatically created for every entry\n          in the dot3OamTable.
    \ Counters are maintained across\n          transitions in dot3OamOperStatus.\n
    \         \"\n        INDEX       { ifIndex }\n        ::= { dot3OamStatsTable
    1 }\n      Dot3OamStatsEntry ::=\n        SEQUENCE {\n                  dot3OamInformationTx
    \               Counter32,\n                  dot3OamInformationRx                Counter32,\n
    \                 dot3OamUniqueEventNotificationTx    Counter32,\n                  dot3OamUniqueEventNotificationRx
    \   Counter32,\n                  dot3OamDuplicateEventNotificationTx Counter32,\n
    \                 dot3OamDuplicateEventNotificationRx Counter32,\n                  dot3OamLoopbackControlTx
    \           Counter32,\n                  dot3OamLoopbackControlRx            Counter32,\n
    \                 dot3OamVariableRequestTx            Counter32,\n                  dot3OamVariableRequestRx
    \           Counter32,\n                  dot3OamVariableResponseTx           Counter32,\n
    \                 dot3OamVariableResponseRx           Counter32,\n                  dot3OamOrgSpecificTx
    \               Counter32,\n                  dot3OamOrgSpecificRx                Counter32,\n
    \                 dot3OamUnsupportedCodesTx           Counter32,\n                  dot3OamUnsupportedCodesRx
    \          Counter32,\n                  dot3OamFramesLostDueToOam           Counter32\n
    \                }\n      dot3OamInformationTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Information
    OAMPDUs transmitted on\n          this interface.\n          Discontinuities of
    this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.
    \ \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.20.\"\n        ::= { dot3OamStatsEntry
    1 }\n      dot3OamInformationRx OBJECT-TYPE\n        SYNTAX      Counter32\n        UNITS
    \      \"frames\"\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"A count of the number of Information OAMPDUs
    received on this\n          interface.\n          Discontinuities of this counter
    can occur at re-initialization\n          of the management system, and at other
    times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.21.\"\n        ::= { dot3OamStatsEntry
    2 }\n      dot3OamUniqueEventNotificationTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of unique
    Event OAMPDUs transmitted on\n          this interface.  Event Notifications may
    be sent in duplicate\n          to increase the probability of successfully being
    received,\n          given the possibility that a frame may be lost in transit.\n
    \         Duplicate Event Notification transmissions are counted by\n          dot3OamDuplicateEventNotificationTx.\n
    \         A unique Event Notification OAMPDU is indicated as an Event\n          Notification
    OAMPDU with a Sequence Number field that is\n          distinct from the previously
    transmitted Event Notification\n          OAMPDU Sequence Number.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.22.\"\n        ::= { dot3OamStatsEntry
    3 }\n      dot3OamUniqueEventNotificationRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of unique
    Event OAMPDUs received on\n          this interface.  Event Notification OAMPDUs
    may be sent in\n          duplicate to increase the probability of successfully
    being\n          received, given the possibility that a frame may be lost in\n
    \         transit.  Duplicate Event Notification receptions are counted\n          by
    dot3OamDuplicateEventNotificationRx.\n          A unique Event Notification OAMPDU
    is indicated as an Event\n          Notification OAMPDU with a Sequence Number
    field that is\n          distinct from the previously received Event Notification\n
    \         OAMPDU Sequence Number.\n          Discontinuities of this counter can
    occur at re-initialization\n          of the management system, and at other times
    as indicated by\n          the value of the ifCounterDiscontinuityTime.\n          \"\n
    \       REFERENCE   \"[802.3ah], 30.3.6.1.24.\"\n        ::= { dot3OamStatsEntry
    4 }\n      dot3OamDuplicateEventNotificationTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of duplicate
    Event OAMPDUs transmitted\n          on this interface.  Event Notification OAMPDUs
    may be sent in\n          duplicate to increase the probability of successfully
    being\n          received, given the possibility that a frame may be lost in\n
    \         transit.\n          A duplicate Event Notification OAMPDU is indicated
    as an Event\n          Notification OAMPDU with a Sequence Number field that is\n
    \         identical to the previously transmitted Event Notification\n          OAMPDU
    Sequence Number.\n          Discontinuities of this counter can occur at re-initialization\n
    \         of the management system, and at other times as indicated by\n          the
    value of the ifCounterDiscontinuityTime.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.23.\"\n        ::= { dot3OamStatsEntry 5 }\n      dot3OamDuplicateEventNotificationRx
    OBJECT-TYPE\n        SYNTAX      Counter32\n        UNITS       \"frames\"\n        MAX-ACCESS
    \ read-only\n        STATUS      current\n        DESCRIPTION\n          \"A count
    of the number of duplicate Event OAMPDUs received on\n          this interface.
    \ Event Notification OAMPDUs may be sent in\n          duplicate to increase the
    probability of successfully being\n          received, given the possibility that
    a frame may be lost in\n          transit.\n          A duplicate Event Notification
    OAMPDU is indicated as an Event\n          Notification OAMPDU with a Sequence
    Number field that is\n          identical to the previously received Event Notification
    OAMPDU\n          Sequence Number.\n          Discontinuities of this counter
    can occur at re-initialization\n          of the management system, and at other
    times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.25.\"\n        ::= { dot3OamStatsEntry
    6 }\n      dot3OamLoopbackControlTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Loopback
    Control OAMPDUs transmitted\n          on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.26.\"\n        ::= { dot3OamStatsEntry
    7 }\n      dot3OamLoopbackControlRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Loopback
    Control OAMPDUs received\n          on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.27.\"\n        ::= { dot3OamStatsEntry
    8 }\n      dot3OamVariableRequestTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Variable
    Request OAMPDUs transmitted\n          on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.28.\"\n        ::= { dot3OamStatsEntry
    9 }\n      dot3OamVariableRequestRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Variable
    Request OAMPDUs received on\n          this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.29.\"\n        ::= { dot3OamStatsEntry
    10 }\n      dot3OamVariableResponseTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Variable
    Response OAMPDUs\n          transmitted on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.30.\"\n        ::= { dot3OamStatsEntry
    11 }\n      dot3OamVariableResponseRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Variable
    Response OAMPDUs received\n          on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.31.\"\n        ::= { dot3OamStatsEntry
    12 }\n       dot3OamOrgSpecificTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Organization
    Specific OAMPDUs\n          transmitted on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.32.\"\n        ::= { dot3OamStatsEntry
    13 }\n      dot3OamOrgSpecificRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of Organization
    Specific OAMPDUs\n          received on this interface.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.33.\"\n        ::= { dot3OamStatsEntry
    14 }\n      dot3OamUnsupportedCodesTx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of OAMPDUs
    transmitted on this\n          interface with an unsupported op-code.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.18.\"\n        ::= { dot3OamStatsEntry
    15 }\n      dot3OamUnsupportedCodesRx OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of OAMPDUs
    received on this interface\n          with an unsupported op-code.\n          Discontinuities
    of this counter can occur at re-initialization\n          of the management system,
    and at other times as indicated by\n          the value of the ifCounterDiscontinuityTime.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.19.\"\n        ::= { dot3OamStatsEntry
    16 }\n      dot3OamFramesLostDueToOam OBJECT-TYPE\n        SYNTAX      Counter32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"A count of the number of frames
    that were dropped by the OA\n          multiplexer.  Since the OAM multiplexer
    has multiple inputs\n          and a single output, there may be cases where frames
    are\n          dropped due to transmit resource contention.  This counter is\n
    \         incremented whenever a frame is dropped by the OAM layer.\n          Note
    that any Ethernet frame, not just OAMPDUs, may be dropped\n          by the OAM
    layer.  This can occur when an OAMPDU takes\n          precedence over a 'normal'
    frame resulting in the 'normal'\n          frame being dropped.\n          When
    this counter is incremented, no other counters in this\n          MIB are incremented.\n
    \         Discontinuities of this counter can occur at re-initialization\n          of
    the management system, and at other times as indicated by\n          the value
    of the ifCounterDiscontinuityTime.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.46.\"\n        ::= { dot3OamStatsEntry 17 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Event Configuration group\n      --\n      dot3OamEventConfigTable
    OBJECT-TYPE\n        SYNTAX     SEQUENCE OF Dot3OamEventConfigEntry\n        MAX-ACCESS
    not-accessible\n        STATUS     current\n        DESCRIPTION\n          \"Ethernet
    OAM includes the ability to generate and receive\n          Event Notification
    OAMPDUs to indicate various link problems.\n          This table contains the
    mechanisms to enable Event\n          Notifications and configure the thresholds
    to generate the\n          standard Ethernet OAM events.  There is one entry in
    the table\n          for every entry in dot3OamTable that supports OAM events\n
    \         (where dot3OamFunctionsSupported includes the eventSupport\n          bit
    set).  The values in the table are maintained across\n          changes to dot3OamOperStatus.\n
    \         The standard threshold crossing events are:\n            - Errored Symbol
    Period Event.  Generated when the number of\n              symbol errors exceeds
    a threshold within a given window\n              defined by a number of symbols
    (for example, 1,000 symbols\n              out of 1,000,000 had errors).\n            -
    Errored Frame Period Event.  Generated when the number of\n              frame
    errors exceeds a threshold within a given window\n              defined by a number
    of frames (for example, 10 frames out\n              of 1000 had errors).\n            -
    Errored Frame Event.  Generated when the number of frame\n              errors
    exceeds a threshold within a given window defined\n              by a period of
    time (for example, 10 frames in 1 second\n              had errors).\n            -
    Errored Frame Seconds Summary Event.  Generated when the\n              number
    of errored frame seconds exceeds a threshold within\n              a given time
    period (for example, 10 errored frame seconds\n              within the last 100
    seconds).  An errored frame second is\n              defined as a 1 second interval
    which had >0 frame errors.\n          There are other events (dying gasp, critical
    events) that are\n          not threshold crossing events but which can be\n          enabled/disabled
    via this table.\n          \"\n        ::= { dot3OamObjects 5 }\n      dot3OamEventConfigEntry
    OBJECT-TYPE\n        SYNTAX      Dot3OamEventConfigEntry\n        MAX-ACCESS  not-accessible\n
    \       STATUS      current\n        DESCRIPTION\n          \"Entries are automatically
    created and deleted from this\n          table, and exist whenever the OAM entity
    supports Ethernet OA\n          events (as indicated by the eventSupport bit in\n
    \         dot3OamFunctionsSuppported).  Values in the table are\n          maintained
    across changes to the value of dot3OamOperStatus.\n          Event configuration
    controls when the local management entity\n          sends Event Notification
    OAMPDUs to its OAM peer, and when\n          certain event flags are set or cleared
    in OAMPDUs.\n          \"\n        INDEX       { ifIndex }\n        ::= { dot3OamEventConfigTable
    1 }\n      Dot3OamEventConfigEntry ::=\n        SEQUENCE {\n                  dot3OamErrSymPeriodWindowHi
    \       Unsigned32,\n                  dot3OamErrSymPeriodWindowLo        Unsigned32,\n
    \                 dot3OamErrSymPeriodThresholdHi     Unsigned32,\n                  dot3OamErrSymPeriodThresholdLo
    \    Unsigned32,\n                  dot3OamErrSymPeriodEvNotifEnable   TruthValue,\n
    \                 dot3OamErrFramePeriodWindow        Unsigned32,\n                  dot3OamErrFramePeriodThreshold
    \    Unsigned32,\n                  dot3OamErrFramePeriodEvNotifEnable TruthValue,\n
    \                 dot3OamErrFrameWindow              Unsigned32,\n                  dot3OamErrFrameThreshold
    \          Unsigned32,\n                  dot3OamErrFrameEvNotifEnable       TruthValue,\n
    \                 dot3OamErrFrameSecsSummaryWindow   Integer32,\n                  dot3OamErrFrameSecsSummaryThreshold
    Integer32,\n                  dot3OamErrFrameSecsEvNotifEnable   TruthValue,\n
    \                 dot3OamDyingGaspEnable             TruthValue,\n                  dot3OamCriticalEventEnable
    \        TruthValue\n                }\n      dot3OamErrSymPeriodWindowHi OBJECT-TYPE\n
    \       SYNTAX      Unsigned32\n        UNITS       \"2^32 symbols\"\n        MAX-ACCESS
    \ read-write\n        STATUS      current\n        DESCRIPTION\n          \"The
    two objects dot3OamErrSymPeriodWindowHi and\n          dot3OamErrSymPeriodLo together
    form an unsigned 64-bit\n          integer representing the number of symbols
    over which this\n          threshold event is defined.  This is defined as\n        dot3OamErrSymPeriodWindow
    = ((2^32)*dot3OamErrSymPeriodWindowHi)\n                                          +
    dot3OamErrSymPeriodWindowLo\n          If dot3OamErrSymPeriodThreshold symbol
    errors occur within a\n          window of dot3OamErrSymPeriodWindow symbols,
    an Event\n          Notification OAMPDU should be generated with an Errored Symbol\n
    \         Period Event TLV indicating that the threshold has been\n          crossed
    in this window.\n          The default value for dot3OamErrSymPeriodWindow is
    the number\n          of symbols in one second for the underlying physical layer.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.34\"\n        ::= { dot3OamEventConfigEntry
    1 }\n      dot3OamErrSymPeriodWindowLo OBJECT-TYPE\n        SYNTAX      Unsigned32\n
    \       UNITS       \"symbols\"\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n          \"The two objects dot3OamErrSymPeriodWindowHi
    and\n          dot3OamErrSymPeriodWindowLo together form an unsigned 64-bit\n
    \         integer representing the number of symbols over which this\n          threshold
    event is defined.  This is defined as\n        dot3OamErrSymPeriodWindow = ((2^32)*dot3OamErrSymPeriodWindowHi)\n
    \                                         + dot3OamErrSymPeriodWindowLo\n          If
    dot3OamErrSymPeriodThreshold symbol errors occur within a\n          window of
    dot3OamErrSymPeriodWindow symbols, an Event\n          Notification OAMPDU should
    be generated with an Errored Symbol\n          Period Event TLV indicating that
    the threshold has been\n          crossed in this window.\n          The default
    value for dot3OamErrSymPeriodWindow is the number\n          of symbols in one
    second for the underlying physical layer.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.34\"\n        ::= { dot3OamEventConfigEntry 2 }\n      dot3OamErrSymPeriodThresholdHi
    OBJECT-TYPE\n        SYNTAX      Unsigned32\n        UNITS       \"2^32 symbols\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"The two objects dot3OamErrSymPeriodThresholdHi and\n          dot3OamErrSymPeriodThresholdLo
    together form an unsigned\n          64-bit integer representing the number of
    symbol errors that\n          must occur within a given window to cause this event.\n
    \         This is defined as\n            dot3OamErrSymPeriodThreshold =\n                              ((2^32)
    * dot3OamErrSymPeriodThresholdHi)\n                                      + dot3OamErrSymPeriodThresholdLo\n
    \         If dot3OamErrSymPeriodThreshold symbol errors occur within a\n          window
    of dot3OamErrSymPeriodWindow symbols, an Event\n          Notification OAMPDU
    should be generated with an Errored Symbol\n          Period Event TLV indicating
    that the threshold has been\n          crossed in this window.\n          The
    default value for dot3OamErrSymPeriodThreshold is one\n          symbol errors.
    \ If the threshold value is zero, then an Event\n          Notification OAMPDU
    is sent periodically (at the end of every\n          window).  This can be used
    as an asynchronous notification to\n          the peer OAM entity of the statistics
    related to this\n          threshold crossing alarm.\n          \"\n        REFERENCE
    \  \"[802.3ah], 30.3.6.1.34\"\n        ::= { dot3OamEventConfigEntry 3 }\n      dot3OamErrSymPeriodThresholdLo
    OBJECT-TYPE\n        SYNTAX      Unsigned32\n        UNITS       \"symbols\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"The two objects dot3OamErrSymPeriodThresholdHi and\n          dot3OamErrSymPeriodThresholdLo
    together form an unsigned\n          64-bit integer representing the number of
    symbol errors that\n          must occur within a given window to cause this event.\n
    \         This is defined as\n            dot3OamErrSymPeriodThreshold =\n                              ((2^32)
    * dot3OamErrSymPeriodThresholdHi)\n                                      + dot3OamErrSymPeriodThresholdLo\n
    \         If dot3OamErrSymPeriodThreshold symbol errors occur within a\n          window
    of dot3OamErrSymPeriodWindow symbols, an Event\n          Notification OAMPDU
    should be generated with an Errored Symbol\n          Period Event TLV indicating
    that the threshold has been\n          crossed in this window.\n          The
    default value for dot3OamErrSymPeriodThreshold is one\n          symbol error.
    \ If the threshold value is zero, then an Event\n          Notification OAMPDU
    is sent periodically (at the end of every\n          window).  This can be used
    as an asynchronous notification to\n          the peer OAM entity of the statistics
    related to this\n          threshold crossing alarm.\n          \"\n        REFERENCE
    \  \"[802.3ah], 30.3.6.1.34\"\n        ::= { dot3OamEventConfigEntry 4 }\n      dot3OamErrSymPeriodEvNotifEnable
    OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"If true, the OAM
    entity should send an Event Notification\n          OAMPDU when an Errored Symbol
    Period Event occurs.\n          By default, this object should have the value
    true for\n          Ethernet-like interfaces that support OAM.  If the OAM layer\n
    \         does not support Event Notifications (as indicated via the\n          dot3OamFunctionsSupported
    attribute), this value is ignored.\n          \"\n        ::= { dot3OamEventConfigEntry
    5 }\n      dot3OamErrFramePeriodWindow OBJECT-TYPE\n        SYNTAX      Unsigned32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of frames over which
    the threshold is defined.\n          The default value of the window is the number
    of minimum size\n          Ethernet frames that can be received over the physical
    layer\n          in one second.\n          If dot3OamErrFramePeriodThreshold frame
    errors occur within a\n          window of dot3OamErrFramePeriodWindow frames,
    an Event\n          Notification OAMPDU should be generated with an Errored Frame\n
    \         Period Event TLV indicating that the threshold has been\n          crossed
    in this window.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.38\"\n
    \       ::= { dot3OamEventConfigEntry 6 }\n      dot3OamErrFramePeriodThreshold
    OBJECT-TYPE\n        SYNTAX      Unsigned32\n        UNITS       \"frames\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"The number of frame errors that must occur for this event to\n          be
    triggered.  The default value is one frame error.  If the\n          threshold
    value is zero, then an Event Notification OAMPDU is\n          sent periodically
    (at the end of every window).  This can be\n          used as an asynchronous
    notification to the peer OAM entity of\n          the statistics related to this
    threshold crossing alarm.\n          If dot3OamErrFramePeriodThreshold frame errors
    occur within a\n          window of dot3OamErrFramePeriodWindow frames, an Event\n
    \         Notification OAMPDU should be generated with an Errored Frame\n          Period
    Event TLV indicating that the threshold has been\n          crossed in this window.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.38\"\n        ::= { dot3OamEventConfigEntry
    7 }\n      dot3OamErrFramePeriodEvNotifEnable OBJECT-TYPE\n        SYNTAX      TruthValue\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"If true, the OAM entity should send an Event Notification\n          OAMPDU
    when an Errored Frame Period Event occurs.\n          By default, this object
    should have the value true for\n          Ethernet-like interfaces that support
    OAM.  If the OAM layer\n          does not support Event Notifications (as indicated
    via the\n          dot3OamFunctionsSupported attribute), this value is ignored.\n
    \         \"\n        ::= { dot3OamEventConfigEntry 8 }\n      dot3OamErrFrameWindow
    OBJECT-TYPE\n        SYNTAX      Unsigned32\n        UNITS       \"tenths of a
    second\"\n        MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"The amount of time (in 100ms increments) over which the\n          threshold
    is defined.  The default value is 10 (1 second).\n          If dot3OamErrFrameThreshold
    frame errors occur within a window\n          of dot3OamErrFrameWindow seconds
    (measured in tenths of\n          seconds), an Event Notification OAMPDU should
    be generated\n          with an Errored Frame Event TLV indicating that the threshold\n
    \         has been crossed in this window.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.36\"\n        DEFVAL { 10 }\n        ::= { dot3OamEventConfigEntry 9
    }\n      dot3OamErrFrameThreshold OBJECT-TYPE\n        SYNTAX      Unsigned32\n
    \       UNITS       \"frames\"\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n          \"The number of frame errors that
    must occur for this event to\n          be triggered.  The default value is one
    frame error.  If the\n          threshold value is zero, then an Event Notification
    OAMPDU is\n          sent periodically (at the end of every window).  This can
    be\n          used as an asynchronous notification to the peer OAM entity of\n
    \         the statistics related to this threshold crossing alarm.\n          If
    dot3OamErrFrameThreshold frame errors occur within a window\n          of dot3OamErrFrameWindow
    (in tenths of seconds), an Event\n          Notification OAMPDU should be generated
    with an Errored Frame\n          Event TLV indicating the threshold has been crossed
    in this\n          window.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.36\"\n
    \       DEFVAL { 1 }\n        ::= { dot3OamEventConfigEntry 10 }\n      dot3OamErrFrameEvNotifEnable
    OBJECT-TYPE\n        SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"If true, the OAM
    entity should send an Event Notification\n          OAMPDU when an Errored Frame
    Event occurs.\n          By default, this object should have the value true for\n
    \         Ethernet-like interfaces that support OAM.  If the OAM layer\n          does
    not support Event Notifications (as indicated via the\n          dot3OamFunctionsSupported
    attribute), this value is ignored.\n          \"\n        DEFVAL { true }\n        ::=
    { dot3OamEventConfigEntry 11 }\n      dot3OamErrFrameSecsSummaryWindow OBJECT-TYPE\n
    \       SYNTAX      Integer32 (100..9000)\n        UNITS       \"tenths of a second\"\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"The amount of time (in 100 ms intervals) over which the\n          threshold
    is defined.  The default value is 100 (10 seconds).\n          If dot3OamErrFrameSecsSummaryThreshold
    frame errors occur\n          within a window of dot3OamErrFrameSecsSummaryWindow
    (in tenths\n          of seconds), an Event Notification OAMPDU should be generated\n
    \         with an Errored Frame Seconds Summary Event TLV indicating\n          that
    the threshold has been crossed in this window.\n          \"\n        REFERENCE
    \  \"[802.3ah], 30.3.6.1.40\"\n        DEFVAL { 100 }\n        ::= { dot3OamEventConfigEntry
    12 }\n      dot3OamErrFrameSecsSummaryThreshold OBJECT-TYPE\n        SYNTAX      Integer32
    (1..900)\n        UNITS       \"errored frame seconds\"\n        MAX-ACCESS  read-write\n
    \       STATUS      current\n        DESCRIPTION\n          \"The number of errored
    frame seconds that must occur for this\n          event to be triggered.  The
    default value is one errored frame\n          second.  If the threshold value
    is zero, then an Event\n          Notification OAMPDU is sent periodically (at
    the end of every\n          window).  This can be used as an asynchronous notification
    to\n          the peer OAM entity of the statistics related to this\n          threshold
    crossing alarm.\n          If dot3OamErrFrameSecsSummaryThreshold frame errors
    occur\n          within a window of dot3OamErrFrameSecsSummaryWindow (in tenths\n
    \         of seconds), an Event Notification OAMPDU should be generated\n          with
    an Errored Frame Seconds Summary Event TLV indicating\n          that the threshold
    has been crossed in this window.\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.40\"\n        DEFVAL { 1 }\n        ::= { dot3OamEventConfigEntry 13
    }\n      dot3OamErrFrameSecsEvNotifEnable OBJECT-TYPE\n        SYNTAX      TruthValue\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"If true, the local OAM entity should send an Event\n          Notification
    OAMPDU when an Errored Frame Seconds Event\n          occurs.\n          By default,
    this object should have the value true for\n          Ethernet-like interfaces
    that support OAM.  If the OAM layer\n          does not support Event Notifications
    (as indicated via the\n          dot3OamFunctionsSupported attribute), this value
    is ignored.\n          \"\n        DEFVAL { true }\n        ::= { dot3OamEventConfigEntry
    14 }\n      dot3OamDyingGaspEnable OBJECT-TYPE\n        SYNTAX      TruthValue\n
    \       MAX-ACCESS  read-write\n        STATUS      current\n        DESCRIPTION\n
    \         \"If true, the local OAM entity should attempt to indicate a\n          dying
    gasp via the OAMPDU flags field to its peer OAM entity\n          when a dying
    gasp event occurs.  The exact definition of a\n          dying gasp event is implementation
    dependent.  If the system\n          does not support dying gasp capability, setting
    this object\n          has no effect, and reading the object should always result
    in\n          'false'.\n          By default, this object should have the value
    true for\n          Ethernet-like interfaces that support OAM.  If the OAM layer\n
    \         does not support Event Notifications (as indicated via the\n          dot3OamFunctionsSupported
    attribute), this value is ignored.\n          \"\n        DEFVAL { true }\n        ::=
    { dot3OamEventConfigEntry 15 }\n      dot3OamCriticalEventEnable OBJECT-TYPE\n
    \       SYNTAX      TruthValue\n        MAX-ACCESS  read-write\n        STATUS
    \     current\n        DESCRIPTION\n          \"If true, the local OAM entity
    should attempt to indicate a\n          critical event via the OAMPDU flags to
    its peer OAM entity\n          when a critical event occurs.  The exact definition
    of a\n          critical event is implementation dependent.  If the system\n          does
    not support critical event capability, setting this\n          object has no effect,
    and reading the object should always\n          result in 'false'.\n          By
    default, this object should have the value true for\n          Ethernet-like interfaces
    that support OAM.  If the OAM layer\n          does not support Event Notifications
    (as indicated via the\n          dot3OamFunctionsSupported attribute), this value
    is ignored.\n          \"\n        DEFVAL { true }\n        ::= { dot3OamEventConfigEntry
    16 }\n      -- **************************************************************\n
    \     --\n      -- Ethernet OAM Event Log group\n      --\n      dot3OamEventLogTable
    OBJECT-TYPE\n        SYNTAX       SEQUENCE OF Dot3OamEventLogEntry\n        MAX-ACCESS
    \  not-accessible\n        STATUS       current\n        DESCRIPTION\n          \"This
    table records a history of the events that have occurred\n          at the Ethernet
    OAM level.  These events can include locally\n          detected events, which
    may result in locally generated\n          OAMPDUs, and remotely detected events,
    which are detected by\n          the OAM peer entity and signaled to the local
    entity via\n          Ethernet OAM.  Ethernet OAM events can be signaled by Event\n
    \         Notification OAMPDUs or by the flags field in any OAMPDU.\n          This
    table contains both threshold crossing events and\n          non-threshold crossing
    events.  The parameters for the\n          threshold window, threshold value,
    and actual value\n          (dot3OamEventLogWindowXX, dot3OamEventLogThresholdXX,\n
    \         dot3OamEventLogValue) are only applicable to threshold\n          crossing
    events, and are returned as all F's (2^32 - 1) for\n          non-threshold crossing
    events.\n          Entries in the table are automatically created when such\n
    \         events are detected.  The size of the table is implementation\n          dependent.
    \ When the table reaches its maximum size, older\n          entries are automatically
    deleted to make room for newer\n          entries.\n          \"\n          ::=
    { dot3OamObjects 6 }\n      dot3OamEventLogEntry OBJECT-TYPE\n        SYNTAX      Dot3OamEventLogEntry\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An entry in the dot3OamEventLogTable.  Entries are\n          automatically
    created whenever Ethernet OAM events occur at\n          the local OAM entity,
    and when Event Notification OAMPDUs are\n          received at the local OAM entity
    (indicating that events have\n          occurred at the peer OAM entity).  The
    size of the table is\n          implementation dependent, but when the table becomes
    full,\n          older events are automatically deleted to make room for newer\n
    \         events.  The table index dot3OamEventLogIndex increments for\n          each
    new entry, and when the maximum value is reached, the\n          value restarts
    at zero.\n          \"\n        INDEX       { ifIndex, dot3OamEventLogIndex }\n
    \       ::= { dot3OamEventLogTable 1 }\n      Dot3OamEventLogEntry ::=\n        SEQUENCE
    {\n          dot3OamEventLogIndex                Unsigned32,\n          dot3OamEventLogTimestamp
    \           TimeStamp,\n          dot3OamEventLogOui                  EightOTwoOui,\n
    \         dot3OamEventLogType                 Unsigned32,\n          dot3OamEventLogLocation
    \            INTEGER,\n          dot3OamEventLogWindowHi             Unsigned32,\n
    \         dot3OamEventLogWindowLo             Unsigned32,\n          dot3OamEventLogThresholdHi
    \         Unsigned32,\n          dot3OamEventLogThresholdLo          Unsigned32,\n
    \         dot3OamEventLogValue                CounterBasedGauge64,\n          dot3OamEventLogRunningTotal
    \        CounterBasedGauge64,\n          dot3OamEventLogEventTotal           Unsigned32\n
    \       }\n      dot3OamEventLogIndex       OBJECT-TYPE\n        SYNTAX      Unsigned32(1..4294967295)\n
    \       MAX-ACCESS  not-accessible\n        STATUS      current\n        DESCRIPTION\n
    \         \"An arbitrary integer for identifying individual events\n          within
    the event log.  \"\n        ::= { dot3OamEventLogEntry 1 }\n      dot3OamEventLogTimestamp
    \ OBJECT-TYPE\n        SYNTAX      TimeStamp\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"The value of sysUpTime
    at the time of the logged event.  For\n          locally generated events, the
    time of the event can be\n          accurately retrieved from sysUpTime.  For
    remotely generated\n          events, the time of the event is indicated by the
    reception of\n          the Event Notification OAMPDU indicating that the event\n
    \         occurred on the peer.  A system may attempt to adjust the\n          timestamp
    value to more accurately reflect the time of the\n          event at the peer
    OAM entity by using other information, such\n          as that found in the timestamp
    found of the Event Notification\n          TLVs, which provides an indication
    of the relative time\n          between events at the peer entity.  \"\n        ::=
    { dot3OamEventLogEntry 2 }\n      dot3OamEventLogOui  OBJECT-TYPE\n        SYNTAX
    \     EightOTwoOui\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"The OUI of the entity defining the object type.
    \ All IEEE\n          802.3 defined events (as appearing in [802.3ah] except for
    the\n          Organizationally Unique Event TLVs) use the IEEE 802.3 OUI of\n
    \         0x0180C2.  Organizations defining their own Event Notification\n          TLVs
    include their OUI in the Event Notification TLV that\n          gets reflected
    here.  \"\n        ::= { dot3OamEventLogEntry 3 }\n      dot3OamEventLogType      OBJECT-TYPE\n
    \       SYNTAX      Unsigned32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"The type of event that generated
    this entry in the event log.\n          When the OUI is the IEEE 802.3 OUI of
    0x0180C2, the following\n          event types are defined:\n              erroredSymbolEvent(1),\n
    \             erroredFramePeriodEvent(2),\n              erroredFrameEvent(3),\n
    \             erroredFrameSecondsEvent(4),\n              linkFault(256),\n              dyingGaspEvent(257),\n
    \             criticalLinkEvent(258)\n          The first four are considered
    threshold crossing events, as\n          they are generated when a metric exceeds
    a given value within\n          a specified window.  The other three are not threshold\n
    \         crossing events.\n          When the OUI is not 71874 (0x0180C2 in hex),
    then some other\n          organization has defined the event space.  If event
    subtyping\n          is known to the implementation, it may be reflected here.\n
    \         Otherwise, this value should return all F's (2^32 - 1).\n          \"\n
    \       REFERENCE   \"[802.3ah], 30.3.6.1.10 and 57.5.3.\"\n        ::= { dot3OamEventLogEntry
    4 }\n      dot3OamEventLogLocation OBJECT-TYPE\n        SYNTAX      INTEGER {
    local(1), remote(2) }\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"Whether this event occurred locally (local(1)),
    or was\n          received from the OAM peer via Ethernet OAM (remote(2)).\n          \"\n
    \       ::= { dot3OamEventLogEntry 5 }\n      dot3OamEventLogWindowHi      OBJECT-TYPE\n
    \       SYNTAX      Unsigned32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"If the event represents a threshold
    crossing event, the two\n          objects dot3OamEventWindowHi and dot3OamEventWindowLo,
    form\n          an unsigned 64-bit integer yielding the window over which the\n
    \         value was measured for the threshold crossing event (for\n          example,
    5, when 11 occurrences happened in 5 seconds while\n          the threshold was
    10).  The two objects are combined as:\n          dot3OamEventLogWindow = ((2^32)
    * dot3OamEventLogWindowHi)\n                                          + dot3OamEventLogWindowLo\n
    \         Otherwise, this value is returned as all F's (2^32 - 1) and\n          adds
    no useful information.\n          \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.37
    and 57.5.3.2.\"\n        ::= { dot3OamEventLogEntry 6 }\n      dot3OamEventLogWindowLo
    \     OBJECT-TYPE\n        SYNTAX      Unsigned32\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"If the event represents
    a threshold crossing event, the two\n          objects dot3OamEventWindowHi and
    dot3OamEventWindowLo form an\n          unsigned 64-bit integer yielding the window
    over which the\n          value was measured for the threshold crossing event
    (for\n          example, 5, when 11 occurrences happened in 5 seconds while\n
    \         the threshold was 10).  The two objects are combined as:\n          dot3OamEventLogWindow
    = ((2^32) * dot3OamEventLogWindowHi)\n                                          +
    dot3OamEventLogWindowLo\n          Otherwise, this value is returned as all F's
    (2^32 - 1) and\n          adds no useful information.\n          \"\n        REFERENCE
    \  \"[802.3ah], 30.3.6.1.37 and 57.5.3.2.\"\n        ::= { dot3OamEventLogEntry
    7 }\n      dot3OamEventLogThresholdHi      OBJECT-TYPE\n        SYNTAX      Unsigned32\n
    \       MAX-ACCESS  read-only\n        STATUS      current\n        DESCRIPTION\n
    \         \"If the event represents a threshold crossing event, the two\n          objects
    dot3OamEventThresholdHi and dot3OamEventThresholdLo\n          form an unsigned
    64-bit integer yielding the value that was\n          crossed for the threshold
    crossing event (for example, 10,\n          when 11 occurrences happened in 5
    seconds while the threshold\n          was 10).  The two objects are combined
    as:\n        dot3OamEventLogThreshold = ((2^32) * dot3OamEventLogThresholdHi)\n
    \                                          + dot3OamEventLogThresholdLo\n          Otherwise,
    this value is returned as all F's (2^32 -1) and\n          adds no useful information.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.37 and 57.5.3.2.\"\n        ::=
    { dot3OamEventLogEntry 8 }\n      dot3OamEventLogThresholdLo      OBJECT-TYPE\n
    \       SYNTAX      Unsigned32\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"If the event represents a threshold
    crossing event, the two\n          objects dot3OamEventThresholdHi and dot3OamEventThresholdLo\n
    \         form an unsigned 64-bit integer yielding the value that was\n          crossed
    for the threshold crossing event (for example, 10,\n          when 11 occurrences
    happened in 5 seconds while the threshold\n          was 10).  The two objects
    are combined as:\n        dot3OamEventLogThreshold = ((2^32) * dot3OamEventLogThresholdHi)\n
    \                                          + dot3OamEventLogThresholdLo\n          Otherwise,
    this value is returned as all F's (2^32 - 1) and\n          adds no useful information.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.37 and 57.5.3.2.\"\n        ::=
    { dot3OamEventLogEntry 9 }\n      dot3OamEventLogValue      OBJECT-TYPE\n        SYNTAX
    \     CounterBasedGauge64\n        MAX-ACCESS  read-only\n        STATUS      current\n
    \       DESCRIPTION\n          \"If the event represents a threshold crossing
    event, this\n          value indicates the value of the parameter within the given\n
    \         window that generated this event (for example, 11, when 11\n          occurrences
    happened in 5 seconds while the threshold was 10).\n          Otherwise, this
    value is returned as all F's\n          (2^64 - 1) and adds no useful information.\n
    \         \"\n        REFERENCE   \"[802.3ah], 30.3.6.1.37 and 57.5.3.2.\"\n        ::=
    { dot3OamEventLogEntry 10 }\n      dot3OamEventLogRunningTotal      OBJECT-TYPE\n
    \       SYNTAX      CounterBasedGauge64\n        MAX-ACCESS  read-only\n        STATUS
    \     current\n        DESCRIPTION\n          \"Each Event Notification TLV contains
    a running total of the\n          number of times an event has occurred, as well
    as the number\n          of times an Event Notification for the event has been\n
    \         transmitted.  For non-threshold crossing events, the number of\n          events
    (dot3OamLogRunningTotal) and the number of resultant\n          Event Notifications
    (dot3OamLogEventTotal) should be\n          identical.\n          For threshold
    crossing events, since multiple occurrences may\n          be required to cross
    the threshold, these values are likely\n          different.  This value represents
    the total number of times\n          this event has happened since the last reset
    (for example,\n          3253, when 3253 symbol errors have occurred since the
    last\n          reset, which has resulted in 51 symbol error threshold\n          crossing
    events since the last reset).\n          \"\n        REFERENCE   \"[802.3ah],
    30.3.6.1.37 and 57.5.3.2.\"\n        ::= { dot3OamEventLogEntry 11 }\n      dot3OamEventLogEventTotal
    \     OBJECT-TYPE\n        SYNTAX      Unsigned32\n        MAX-ACCESS  read-only\n
    \       STATUS      current\n        DESCRIPTION\n          \"Each Event Notification
    TLV contains a running total of the\n          number of times an event has occurred,
    as well as the number\n          of times an Event Notification for the event
    has been\n          transmitted.  For non-threshold crossing events, the number
    of\n          events (dot3OamLogRunningTotal) and the number of resultant\n          Event
    Notifications (dot3OamLogEventTotal) should be\n          identical.\n          For
    threshold crossing events, since multiple occurrences may\n          be required
    to cross the threshold, these values are likely\n          different.  This value
    represents the total number of times\n          one or more of these occurrences
    have resulted in an Event\n          Notification (for example, 51 when 3253 symbol
    errors have\n          occurred since the last reset, which has resulted in 51
    symbol\n          error threshold crossing events since the last reset).\n          \"\n
    \       REFERENCE   \"[802.3ah], 30.3.6.1.37 and 57.5.3.2.\"\n        ::= { dot3OamEventLogEntry
    12 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Notifications\n      --\n      dot3OamThresholdEvent
    NOTIFICATION-TYPE\n        OBJECTS { dot3OamEventLogTimestamp,\n                  dot3OamEventLogOui,\n
    \                 dot3OamEventLogType,\n                  dot3OamEventLogLocation,\n
    \                 dot3OamEventLogWindowHi,\n                  dot3OamEventLogWindowLo,\n
    \                 dot3OamEventLogThresholdHi,\n                  dot3OamEventLogThresholdLo,\n
    \                 dot3OamEventLogValue,\n                  dot3OamEventLogRunningTotal,\n
    \                 dot3OamEventLogEventTotal\n                }\n        STATUS
    \ current\n        DESCRIPTION\n          \"A dot3OamThresholdEvent notification
    is sent when a local or\n          remote threshold crossing event is detected.
    \ A local\n          threshold crossing event is detected by the local entity,\n
    \         while a remote threshold crossing event is detected by the\n          reception
    of an Ethernet OAM Event Notification OAMPDU\n          that indicates a threshold
    event.\n          This notification should not be sent more than once per\n          second.\n
    \         The OAM entity can be derived from extracting the ifIndex from\n          the
    variable bindings.  The objects in the notification\n          correspond to the
    values in a row instance in the\n          dot3OamEventLogTable.\n          The
    management entity should periodically check\n          dot3OamEventLogTable to
    detect any missed events.\"\n       ::= { dot3OamNotifications 1 }\n      dot3OamNonThresholdEvent
    NOTIFICATION-TYPE\n        OBJECTS { dot3OamEventLogTimestamp,\n                  dot3OamEventLogOui,\n
    \                 dot3OamEventLogType,\n                  dot3OamEventLogLocation,\n
    \                 dot3OamEventLogEventTotal\n                }\n        STATUS
    \ current\n        DESCRIPTION\n          \"A dot3OamNonThresholdEvent notification
    is sent when a local\n          or remote non-threshold crossing event is detected.
    \ A local\n          event is detected by the local entity, while a remote event
    is\n          detected by the reception of an Ethernet OAM Event\n          Notification
    OAMPDU that indicates a non-threshold crossing\n          event.\n          This
    notification should not be sent more than once per\n          second.\n          The
    OAM entity can be derived from extracting the ifIndex from\n          the variable
    bindings.  The objects in the notification\n          correspond to the values
    in a row instance of the\n          dot3OamEventLogTable.\n          The management
    entity should periodically check\n          dot3OamEventLogTable to detect any
    missed events.\"\n       ::= { dot3OamNotifications 2 }\n      -- ***************************************************************\n
    \     --\n      -- Ethernet OAM Compliance group\n      --\n      dot3OamGroups
    OBJECT IDENTIFIER ::= { dot3OamConformance 1 }\n      dot3OamCompliances OBJECT
    IDENTIFIER ::= { dot3OamConformance 2 }\n      -- Compliance statements\n      dot3OamCompliance
    MODULE-COMPLIANCE\n        STATUS          current\n        DESCRIPTION \"The
    compliance statement for managed entities\n                     supporting OAM
    on Ethernet-like interfaces.\n                     \"\n      MODULE   -- this
    module\n        MANDATORY-GROUPS { dot3OamControlGroup,\n                           dot3OamPeerGroup,\n
    \                          dot3OamStatsBaseGroup\n                         }\n
    \       GROUP       dot3OamLoopbackGroup\n        DESCRIPTION\n          \"This
    group is mandatory for all IEEE 802.3 OA\n          implementations that support
    loopback functionality. \"\n        GROUP       dot3OamErrSymbolPeriodEventGroup\n
    \       DESCRIPTION\n          \"This group is mandatory for all IEEE 802.3 OA\n
    \         implementations that support event functionality. \"\n        GROUP
    \      dot3OamErrFramePeriodEventGroup\n        DESCRIPTION\n          \"This
    group is mandatory for all IEEE 802.3 OA\n          implementations that support
    event functionality. \"\n        GROUP       dot3OamErrFrameEventGroup\n        DESCRIPTION\n
    \         \"This group is mandatory for all IEEE 802.3 OA\n          implementations
    that support event functionality. \"\n        GROUP       dot3OamErrFrameSecsSummaryEventGroup\n
    \       DESCRIPTION\n          \"This group is mandatory for all IEEE 802.3 OA\n
    \         implementations that support event functionality. \"\n        GROUP
    \       dot3OamFlagEventGroup\n        DESCRIPTION\n          \"This group is
    optional for all IEEE 802.3 OA\n          implementations.  The ability to send
    critical events or dying\n          gasp events is not required in any system.\"\n
    \       GROUP       dot3OamEventLogGroup\n        DESCRIPTION\n          \"This
    group is optional for all IEEE 802.3 OA\n          implementations.  Entries in
    this table are dependent on what\n          event functionality is supported in
    the local OA\n          implementation.  At least one type of event must be supported\n
    \         for entries to appear in this table.  \"\n        GROUP       dot3OamNotificationGroup\n
    \       DESCRIPTION\n          \"This group is optional for all IEEE 802.3 OA\n
    \         implementations.  Since the information in the notifications\n          is
    dependent on the dot3OamEventLogTable, that table must be\n          implemented
    for notifications.  \"\n        ::= { dot3OamCompliances 1}\n     dot3OamControlGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamAdminState,\n                        dot3OamOperStatus,\n
    \                       dot3OamMode,\n                        dot3OamMaxOamPduSize,\n
    \                       dot3OamConfigRevision,\n                        dot3OamFunctionsSupported\n
    \                   }\n        STATUS      current\n        DESCRIPTION\n          \"A
    collection of objects providing the abilities,\n          configuration, and status
    of an Ethernet OAM entity.  \"\n        ::= { dot3OamGroups 1 }\n     dot3OamPeerGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamPeerMacAddress,\n                        dot3OamPeerVendorOui,\n
    \                       dot3OamPeerVendorInfo,\n                        dot3OamPeerMode,\n
    \                       dot3OamPeerFunctionsSupported,\n                        dot3OamPeerMaxOamPduSize,\n
    \                       dot3OamPeerConfigRevision\n                    }\n        STATUS
    \     current\n        DESCRIPTION\n          \"A collection of objects providing
    the abilities,\n          configuration, and status of a peer Ethernet OAM entity.
    \ \"\n        ::= { dot3OamGroups 2 }\n     dot3OamStatsBaseGroup OBJECT-GROUP\n
    \       OBJECTS     {   dot3OamInformationTx,\n                        dot3OamInformationRx,\n
    \                       dot3OamUniqueEventNotificationTx,\n                        dot3OamUniqueEventNotificationRx,\n
    \                       dot3OamDuplicateEventNotificationTx,\n                        dot3OamDuplicateEventNotificationRx,\n
    \                       dot3OamLoopbackControlTx,\n                        dot3OamLoopbackControlRx,\n
    \                       dot3OamVariableRequestTx,\n                        dot3OamVariableRequestRx,\n
    \                       dot3OamVariableResponseTx,\n                        dot3OamVariableResponseRx,\n
    \                       dot3OamOrgSpecificTx,\n                        dot3OamOrgSpecificRx,\n
    \                       dot3OamUnsupportedCodesTx,\n                        dot3OamUnsupportedCodesRx,\n
    \                       dot3OamFramesLostDueToOam\n                    }\n        STATUS
    \     current\n        DESCRIPTION\n          \"A collection of objects providing
    the statistics for the\n          number of various transmit and receive events
    for OAM on an\n          Ethernet-like interface.  Note that all of these counters
    must\n          be supported even if the related function (as described in\n          dot3OamFunctionsSupported)
    is not supported.  \"\n        ::= { dot3OamGroups 3 }\n     dot3OamLoopbackGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamLoopbackStatus,\n                        dot3OamLoopbackIgnoreRx\n
    \                   }\n        STATUS      current\n        DESCRIPTION\n          \"A
    collection of objects for controlling the OAM remote\n          loopback function.
    \ \"\n        ::= { dot3OamGroups 4 }\n     dot3OamErrSymbolPeriodEventGroup OBJECT-GROUP\n
    \       OBJECTS     {   dot3OamErrSymPeriodWindowHi,\n                        dot3OamErrSymPeriodWindowLo,\n
    \                       dot3OamErrSymPeriodThresholdHi,\n                        dot3OamErrSymPeriodThresholdLo,\n
    \                       dot3OamErrSymPeriodEvNotifEnable\n                    }\n
    \       STATUS      current\n        DESCRIPTION\n          \"A collection of
    objects for configuring the thresholds for an\n          Errored Symbol Period
    Event.\n          Each [802.3ah] defined Event Notification TLV has its own\n
    \         conformance group because each event can be implemented\n          independently
    of any other.  \"\n        ::= { dot3OamGroups 5 }\n     dot3OamErrFramePeriodEventGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamErrFramePeriodWindow,\n                        dot3OamErrFramePeriodThreshold,\n
    \                       dot3OamErrFramePeriodEvNotifEnable\n                    }\n
    \       STATUS      current\n        DESCRIPTION\n          \"A collection of
    objects for configuring the thresholds for an\n          Errored Frame Period
    Event.\n          Each [802.3ah] defined Event Notification TLV has its own\n
    \         conformance group because each event can be implemented\n          independently
    of any other.  \"\n        ::= { dot3OamGroups 6 }\n     dot3OamErrFrameEventGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamErrFrameWindow,\n                        dot3OamErrFrameThreshold,\n
    \                       dot3OamErrFrameEvNotifEnable\n                    }\n
    \       STATUS      current\n        DESCRIPTION\n          \"A collection of
    objects for configuring the thresholds for an\n          Errored Frame Event.\n
    \         Each [802.3ah] defined Event Notification TLV has its own\n          conformance
    group because each event can be implemented\n          independently of any other.
    \ \"\n        ::= { dot3OamGroups 7 }\n     dot3OamErrFrameSecsSummaryEventGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamErrFrameSecsSummaryWindow,\n                        dot3OamErrFrameSecsSummaryThreshold,\n
    \                       dot3OamErrFrameSecsEvNotifEnable\n                    }\n
    \       STATUS      current\n        DESCRIPTION\n          \"A collection of
    objects for configuring the thresholds for an\n          Errored Frame Seconds
    Summary Event.\n          Each [802.3ah] defined Event Notification TLV has its
    own\n          conformance group because each event can be implemented\n          independently
    of any other.  \"\n        ::= { dot3OamGroups 8 }\n     dot3OamFlagEventGroup
    OBJECT-GROUP\n        OBJECTS     {   dot3OamDyingGaspEnable,\n                        dot3OamCriticalEventEnable\n
    \                   }\n        STATUS      current\n        DESCRIPTION\n          \"A
    collection of objects for configuring the sending OAMPDUs\n          with the
    critical event flag or dying gasp flag enabled.  \"\n        ::= { dot3OamGroups
    9 }\n     dot3OamEventLogGroup OBJECT-GROUP\n       OBJECTS {  dot3OamEventLogTimestamp,\n
    \                 dot3OamEventLogOui,\n                  dot3OamEventLogType,\n
    \                 dot3OamEventLogLocation,\n                  dot3OamEventLogWindowHi,\n
    \                 dot3OamEventLogWindowLo,\n                  dot3OamEventLogThresholdHi,\n
    \                 dot3OamEventLogThresholdLo,\n                  dot3OamEventLogValue,\n
    \                 dot3OamEventLogRunningTotal,\n                  dot3OamEventLogEventTotal\n
    \               }\n       STATUS      current\n       DESCRIPTION\n          \"A
    collection of objects for configuring the thresholds for an\n          Errored
    Frame Seconds Summary Event and maintaining the event\n          information.
    \ \"\n        ::= { dot3OamGroups 10 }\n     dot3OamNotificationGroup NOTIFICATION-GROUP\n
    \      NOTIFICATIONS {\n                   dot3OamThresholdEvent,\n                   dot3OamNonThresholdEvent\n
    \                    }\n       STATUS      current\n       DESCRIPTION\n         \"A
    collection of notifications used by Ethernet OAM to signal\n         to a management
    entity that local or remote events have\n         occurred on a specified Ethernet
    link. \"\n       ::= { dot3OamGroups 11 }\n      END\n"
  title: 6.  MIB Definition
- contents:
  - "7.  Security Considerations\n   The readable objects in this module can provide
    information about\n   network traffic, and therefore may be considered sensitive.
    \ In\n   particular, OAM provides mechanisms for reading the IEEE 802.3 Clause\n
    \  30 MIB attributes from a link partner via a specialized layer two\n   protocol.
    \ Unlike SNMP, IEEE P802.3ah OAM does not include encryption\n   or authentication
    mechanisms.  It should be used in environments\n   where either this interface
    information is not considered sensitive,\n   or where the facility terminations
    are protected.  By default, OAM is\n   disabled on Ethernet-like interfaces and
    is therefore not a risk.\n   IEEE 802.3ah OAM is designed to support deployment
    in access and\n   enterprise networks.  In access networks, one end of a link
    is the\n   CO-side, and the other is the CPE-side, and the facilities are often\n
    \  protected in wiring cages or closets.  In such deployments, it is\n   often
    the case that the CO-side is protected from access from the\n   CPE-side.  Within
    IEEE P802.3ah OAM, this protection from remote\n   access is accomplished by configuring
    the CPE-side in passive mode\n   using the dot3OamMode attribute.  This prevents
    the CPE from\n   accessing functions and information at the CO-side of the connection.\n
    \  In enterprise networks, read-only interface information is often\n   considered
    non-sensitive.\n   The frequency of OAM PDUs on an Ethernet interface does not
    adversely\n   affect data traffic, as OAM is a slow protocol with very limited\n
    \  bandwidth potential, and it is not required for normal link\n   operation.
    \ And although there are a number of objects in this module\n   with read-write
    or read-create MAX-ACCESS, they have limited effects\n   on user data.\n   The
    loopback capability of OAM can have potentially disruptive\n   effects in that
    the when enabling remote loopback, the remote station\n   automatically transmits
    all received traffic back to the local\n   station except for OAM traffic.  This
    completely disrupts all higher\n   layer protocols such as bridging, IP, and SNMP.
    \ Therefore an\n   attribute (dot3OamLoopbackIgnoreRx) was introduced to control
    whether\n   the local station processes or ignores received loopback commands.\n
    \  The administrative state and mode are also read-write objects.\n   Disabling
    OAM can interrupt management activities between peer\n   devices, potentially
    causing serious problems.  Setting the\n   dot3OamMode to an undesired value can
    allow access to Ethernet\n   monitoring, events, and functions that may not be
    acceptable in a\n   particular deployment scenario.  In addition to loopback\n
    \  functionality, Ethernet interface statistics and events can be\n   accessed
    via the OAM protocol, which may not be desired in some\n   circumstances.\n   OAM
    event configuration also contains read-write objects.  These\n   objects control
    whether events are sent, and at what thresholds.\n   Note that the frequency of
    event communication is limited by the\n   frequency limits of Slow Protocols on
    Ethernet interfaces.  Also, the\n   information available via OAM events is also
    available via OA\n   Variable Requests.  Access to this information via either
    OAM events\n   or Variable Requests is controlled by the dot3OamAdminState and\n
    \  dot3OamMode objects.  As mentioned previously, inadequate protection\n   of
    these variables can result in access to link information and\n   functions.\n
    \  SNMP versions prior to SNMPv3 did not include adequate security.\n   Even if
    the network itself is secure (for example by using IPsec),\n   even then, there
    is no control as to who on the secure network is\n   allowed to access and GET/SET
    (read/change/create/delete) the objects\n   in this MIB module.\n   It is RECOMMENDED
    that implementers consider the security features as\n   provided by the SNMPv3
    framework (see [RFC3410], section 8),\n   including full support for the SNMPv3
    cryptographic mechanisms (for\n   authentication and privacy).\n   Further, deployment
    of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED
    to deploy SNMPv3 and to\n   enable cryptographic security.  It is then a customer/operator\n
    \  responsibility to ensure that the SNMP entity giving access to an\n   instance
    of this MIB module is properly configured to give access to\n   the objects only
    to those principals (users) that have legitimate\n   rights to indeed GET or SET
    (change/create/delete) them.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   The Ethernet OAM MIB requires the allocation of a
    single object\n   identifier for its MODULE-IDENTITY under the MIB-2 tree.\n   The
    MIB module in this document uses the following IANA-assigned\n   OBJECT IDENTIFIER
    values recorded in the SMI Numbers registry:\n      Descriptor     OBJECT IDENTIFIER\n
    \     ----------     -----------------\n      dot3OamMIB     { mib-2 158 }\n"
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [802.3ah]         Institute of Electrical and
      Electronic Engineers,\n                     IEEE Std 802.3ah-2004, \"Part 3:
      Carrier Sense\n                     Multiple Access with Collision Detection
      (CSMA/CD)\n                     Access Method and Physical Layer Specifications
      -\n                     Amendment: Media Access Control Parameters,\n                     Physical
      Layers and Management Parameters for\n                     Subscriber Access
      Networks\", October 2004.\n   [802.3-2002]      Institute of Electrical and
      Electronic Engineers,\n                     IEEE Std 802.3-2003, \"IEEE Standard
      for Carrier\n                     Sense Multiple Access with Collision Detection\n
      \                    (CSMA/CD) Access Method and Physical Layer\n                     Specifications
      - Draft amendment to - Information\n                     technology - Telecommunications
      and information\n                     exchange between systems - Local and metropolitan\n
      \                    area networks - Specific requirements - Part 3:\n                     Carrier
      sense multiple access with collision\n                     detection (CSMA/CD)
      access method and physical\n                     layer specifications - Media
      Access Control\n                     Parameters, Physical Layers and Management\n
      \                    Parameters\", March 2002.\n   [802.3-2005]      Institute
      of Electrical and Electronic Engineers,\n                     IEEE Std 802.3-2005,
      \"IEEE Standard for Carrier\n                     Sense Multiple Access with
      Collision Detection\n                     (CSMA/CD) Access Method and Physical
      Layer\n                     Specifications - Draft amendment to - Information\n
      \                    technology - Telecommunications and information\n                     exchange
      between systems - Local and metropolitan\n                     area networks
      - Specific requirements - Part 3:\n                     Carrier sense multiple
      access with collision\n                     detection (CSMA/CD) access method
      and physical\n                     layer specifications - Media Access Control\n
      \                    Parameters, Physical Layers and Management\n                     Parameters\",
      December 2005.\n   [802-2001]        Institute of Electrical and Electronic
      Engineers,\n                     IEEE Std 802-2001, \"Standard for Local and\n
      \                    Metropolitan Area Networks: Architecture and\n                     Overview\",
      March 2002.\n   [RFC2119]         Bradner, S., \"Key words for use in RFCs to
      Indicate\n                     Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2578]         McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n
      \                    \"Structure of Management Information Version 2\n                     (SMIv2)\",
      STD 58, RFC 2578, April 1999.\n   [RFC2579]         McCloghrie, K., Perkins,
      D., and J. Schoenwaelder,\n                     \"Textual Conventions for SMIv2\",
      STD 58, RFC 2579,\n                     April 1999.\n   [RFC2580]         McCloghrie,
      K., Perkins, D., and J. Schoenwaelder,\n                     \"Conformance Statements
      for SMIv2\", STD 58, RFC\n                     2580, April 1999.\n   [RFC2856]
      \        Bierman, A., McCloghrie, K., and R. Presuhn,\n                     \"Textual
      Conventions for Additional High Capacity\n                     Data Types\",
      RFC 2856, June 2000.\n   [RFC2863]         McCloghrie, K. and F. Kastenholz,
      \"The Interfaces\n                     Group MIB\", RFC 2863, June 2000.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [802.3ah-copper]  Beili, Ed, \"Ethernet in
      the First Mile Copper\n                     (EFMCu) Interfaces MIB\", Work in
      Progress, February\n                     2007.\n   [802.3ah-epon]    Khermosh,
      L., \"Managed Objects of Ethernet Passive\n                     Optical Networks
      (EPON)\", RFC 4837, June 2007.\n   [RFC3410]         Case, J., Mundy, R., Partain,
      D., and B. Stewart,\n                     \"Introduction and Applicability Statements
      for\n                     Internet-Standard Management Framework\", RFC 3410,\n
      \                    December 2002.\n   [RFC3635]         Flick, J., \"Definitions
      of Managed Objects for the\n                     Ethernet-like Interface Types\",
      RFC 3635, September\n                     2003.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "10.  Acknowledgments\n   The author is grateful to all of the participants in
    the IEEE 802.3ah\n   EFM (Ethernet in the First Mile) taskforce.  In particular,
    the\n   strong leadership and dedication of the following individuals is\n   noted:\n
    \     Kevin Daines (Editor, IEEE 802.3ah OAM clauses)\n      Ben Brown (Editor,
    IEEE 802.3ah Logic clauses)\n      David Law (Editor, IEEE 802.3ah Management
    clauses)\n      Scott Simon (Editor, IEEE 802.3ah Clause 45)\n      Howard Frazier
    (Chair, IEEE 802.3ah)\n      Hugh Barass (Vice-Chair, IEEE 802.3ah)\n      Wael
    Diab (Editor, IEEE 802.3ah)\n   Additionally, certain devoted attendees and contributors
    to the IEEE\n   802.3ah OAM sub-taskforce deserve recognition.  Although there
    were\n   many contributors, the following individuals contributed heavily over\n
    \  a long period of time.\n      Brian Arnold\n      Brad Booth\n      Al Braga\n
    \     Floyd Gerhardt\n      Bob Grow\n      Eric Lynskey\n      David Martin\n
    \     John Messenger\n      Dan Romascanu (Ex-Chair, IETF HUBMIB WG)\n      Jonathan
    Thatcher\n      Geoff Thompson\n"
  title: 10.  Acknowledgments
- contents:
  - "Author's Address\n   Matt Squire\n   Hatteras Networks\n   529 Davis Drive\n
    \  Durham, NC 27713\n   EMail: msquire@hatterasnetworks.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
