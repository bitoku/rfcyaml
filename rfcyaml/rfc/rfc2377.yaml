- title: __initial_text__
  contents:
  - '        Naming Plan for Internet Directory-Enabled Applications

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Application of the conventional X.500 approach to naming has\n \
    \  heretofore, in the experience of the authors, proven to be an\n   obstacle\
    \ to the wide deployment of directory-enabled applications on\n   the Internet.\
    \  We propose a new directory naming plan that leverages\n   the strengths of\
    \ the most popular and successful Internet naming\n   schemes for naming objects\
    \ in a hierarchical directory.  This plan\n   can, we believe, by extending the\
    \ X.500 approach to naming,\n   facilitate the creation of an Internet White Pages\
    \ Service (IWPS) and\n   other directory-enabled applications by overcoming the\
    \ problems\n   encountered by those using the conventional X.500 approach.\n"
- title: 1.0 Executive Summary
  contents:
  - "1.0 Executive Summary\n   Application of the conventional X.500 approach to naming\
    \ has\n   heretofore, in the experience of the authors, proven to be an\n   obstacle\
    \ to the wide deployment of directory-enabled applications on\n   the Internet.\
    \  The required registration infrastructure is either\n   non-existent or largely\
    \ ignored.  The infrastructure that does exist\n   is cumbersome to use and tends\
    \ to produce counterproductive results.\n   The attributes used for naming have\
    \ been confusing for users and\n   inflexible to managers and operators of directory\
    \ servers.\n   This paper describes a directory naming plan for the construction\
    \ of\n   an Internet directory infrastructure to support directory-enabled\n \
    \  applications that can serve as an alternative (or extension) to the\n   conventional\
    \ X.500 approach.\n   The plan has the following two main features.  First, it\
    \ bases the\n   root and upper portions of the name hierarchy on the existing\n\
    \   infrastructure of names from the Domain Name System (DNS). This\n   component\
    \ of the plan makes use of the ideas described in the\n   companion paper to this\
    \ plan, \"Using Domains in LDAP Distinguished\n   Names\" [1].  And second, it\
    \ provides a number of options for the\n   assignment of names to directory leaf\
    \ objects such as person objects,\n   including an option that allows the reuse\
    \ of existing Internet\n   identifiers for people.\n   Just as the conventional\
    \ X.500 style of naming is not a formal\n   standard, use of the naming plan described\
    \ here is not obligatory for\n   directory-enabled applications on the Internet.\
    \ Other approaches are\n   permissible. However, we believe widespread use of\
    \ this plan will\n   largely eliminate naming as a typically thorny issue when\n\
    \   administrators set up an LDAP-based directory service.  Further, we\n   strongly\
    \ encourage developers of directory-enabled products,\n   especially LDAP clients\
    \ and user interfaces, to assume that this\n   naming plan will see widespread\
    \ use and design their products\n   accordingly.\n   Here, in summary, is our\
    \ proposal.\n   The upper portions of the hierarchical directory tree should be\n\
    \   constructed using the components of registered DNS names using the\n   domain\
    \ component attribute \"dc\".  The directory name for the\n   organization having\
    \ the domain name \"acme.com\" will then be, e.g.,\n      dc=acme, dc=com\n  \
    \ Organizations can add additional directory structure, for example to\n   support\
    \ implementation of access control lists or partitioning of\n   their directory\
    \ information, by using registered subdomains of DNS\n   names, e.g., the subdomain\
    \ \"corporate.acme.com\" can be used as the\n   basis for the directory name\n\
    \      dc=corporate, dc=acme, dc=com\n   For naming directory leaf objects such\
    \ as persons, groups, server\n   applications and certification authorities in\
    \ a hierarchical\n   directory, we propose the use of either the \"uid\" (user\
    \ identifier)\n   or the \"cn\" (common name) attribute for the relative distinguished\n\
    \   name. This plan does not constrain how these two attributes are used.\n  \
    \ One approach to their use, for example, is to employ the uid\n   attribute as\
    \ the RDN when reusing an existing store of identifiers\n   and the cn attribute\
    \ as the RDN when creating new identifiers\n   specifically for the directory.\
    \  A convenient existing identification\n   scheme for person objects is the RFC822\
    \ mailbox identifier. So an RDN\n   for person employing this store of identifiers\
    \ would be, e.g.,\n      uid=John.Smith@acme.com\n   For leaf objects not conveniently\
    \ identified with such a scheme, the\n   \"cn\" attribute is used, e.g.,\n   \
    \   cn=Reading Room\n   Directory distinguished names will thus have the following\
    \ structure,\n   e.g.,\n      uid=John.Smith@acme.com, dc=acme, dc=com\n     \
    \ uid=Mary.Jones@acme.com, dc=corporate, dc=acme, dc=com\n      uid=J.Smith@worldnet.att.net,\
    \ dc=legal, dc=acme, dc=com\n      cn=Reading Room, dc=physics, dc=national-lab,\
    \ dc=edu\n"
- title: 2.0 The Problem
  contents:
  - "2.0 The Problem\n   The X.500 Directory model [2] can be used to create a world-wide\n\
    \   distributed directory. The Internet X.500 Directory Pilot has been\n   operational\
    \ for several years and has grown to a size of about 1.5\n   million entries of\
    \ varying quality.  The rate of growth of the pilot\n   is far lower than the\
    \ rate of growth of the Internet during the pilot\n   period.\n   There are a\
    \ substantial number of contributing factors that have\n   inhibited the growth\
    \ of this pilot.  The common X.500 approach to\n   naming, while not the preponderant\
    \ problem, has contributed in\n   several ways to limit the growth of an Internet\
    \ White Pages Service\n   based on X.500.\n   The conventional way to construct\
    \ names in the X.500 community is\n   documented as an informative (i.e., not\
    \ officially standardized)\n   Annex B to X.521. The relative distinguished name\
    \ (RDN) of a user\n   consists of a common name (cn) attribute. This is meant\
    \ to be what --\n   in the user's particular society -- is customarily understood\
    \ to be\n   the name of that user. The distinguished name of a user is the\n \
    \  combination of the name of some general object, such as an\n   organization\
    \ or a geographical unit, with the common name. There are\n   two main problems\
    \ with this style of name construction.\n   First, the common name attribute,\
    \ while seeming to be user-friendly,\n   cannot be used generally as an RDN in\
    \ practice.  In any significant\n   set of users to be named under the same Directory\
    \ Information Tree\n   (DIT) node there will be collisions on common name.  There\
    \ is no way\n   to overcome this other than either by forcing uniqueness on common\n\
    \   names, something they do not possess, or by using an additional\n   attribute\
    \ to prevent collisions.  This additional attribute normally\n   needs to be unique\
    \ in a much larger context to have any practical\n   value.  The end result is\
    \ a RDN that is very long and unpopular with\n   users.\n   Second, and more serious,\
    \ X.500 has not been able to use any\n   significant number of pre-existing names.\
    \  Since X.500 naming models\n   typically use organization names as part of the\
    \ hierarchy [2, 3],\n   organization names must be registered.  As organization\
    \ names are\n   frequently tied to trademarks and are used in sales and promotions,\n\
    \   registration can be a difficult and acrimonious process.\n   The North American\
    \ Directory Forum (NADF, now the North Atlantic\n   Directory Forum but still\
    \ the NADF) proposed to avoid the problem of\n   registration by using names that\
    \ were already registered in the\n   \"civil naming infrastructure\" [4][5]. \
    \ Directory distinguished names\n   would be based on an organization's legal\
    \ name as recognized by some\n   governmental agency (county clerk, state secretary\
    \ of state, etc.) or\n   other registering entity such as ANSI.\n   This scheme\
    \ has the significant advantage of keeping directory\n   service providers out\
    \ of disputes about the right to use a particular\n   name, but it leads to rather\
    \ obscure names.  Among these obscurities,\n   the legal name almost invariably\
    \ takes a form that is less familiar\n   and longer than what users typically\
    \ associate with the organization.\n   For example, in the US a large proportion\
    \ of legal organization names\n   end with the text \", Inc.\" as in \"Acme, Inc.\"\
    \  Moreover, in the case\n   of the US, the civil naming infrastructure does not\
    \ operate\n   nationally, so the organization names it provides must be located\n\
    \   under state and regional DIT nodes, making them difficult to find\n   while\
    \ browsing the directory.  NADF proposes a way to algorithmically\n   derive multi-attribute\
    \ RDNs which would allow placement of entries or\n   aliases in more convenient\
    \ places in the DIT, but these derived names\n   are cumbersome and unpopular.\
    \  For example, suppose Nadir is an\n   organization that is registered in New\
    \ Jersey civil naming\n   infrastructure under the name \"Nadir Networks, Inc.\"\
    \  Its civil\n   distinguished name (DN) would then be\n      o=\"Nadir Networks,\
    \ Inc.\", st=New Jersey, c=US\n   while its derived name which is unambiguous\
    \ under c=US directly is\n      o=\"Nadir Networks, Inc.\" + st=New Jersey, c=US\n\
    \   More generally, the requirement for registration of organizations in\n   X.500\
    \ naming has led to the establishment of national registration\n   authorities\
    \ whose function is mainly limited to assignment of X.500\n   organization names.\
    \  Because of the very limited attraction of X.500,\n   interest in registering\
    \ an organization with one of these national\n   authorities has been minimal.\
    \  Finally, multi-national organizations\n   are frustrated by a lack of an international\
    \ registration authority.\n"
- title: 3.0 Requirements
  contents:
  - "3.0 Requirements\n   A directory naming plan must provide a guide for the construction\
    \ of\n   names (identifiers, labels) for directory objects that are\n   unambiguous\
    \ (identify only one directory object) within some context\n   (namespace), at\
    \ a minimum within one isolated directory server.\n   A directory object is simply\
    \ a set of attribute values. The\n   association between a real-world object and\
    \ a directory object is\n   made by directory-enabled applications and is, in\
    \ the general case,\n   one to many.\n   The following additional naming characteristics\
    \ are requirements that\n   this naming plan seeks to satisfy:\n   a) hierarchical\n\
    \   The Internet, consisting of a very large number of objects and\n   management\
    \ domains, requires hierarchical names.  Such names permit\n   delegation in the\
    \ name assignment process and partitioning of\n   directory information among\
    \ directory servers.\n   b) friendly to loose coupling of directory servers\n\
    \   One purpose of this naming plan is to define a naming pattern that\n   will\
    \ facilitate one form or another of loose coupling of potentially\n   autonomous\
    \ directory servers into a larger system.\n   A name in such a loosely-coupled\
    \ system should unambiguously identify\n   one real-world object.  The real-world\
    \ object may, however, be\n   represented differently (i.e. by different directory\
    \ objects having\n   different attributes but the same DN) in different (e.g.\n\
    \   independently managed) servers in the loosely-coupled system.  The\n   plan\
    \ does not attempt to produce names to overcome this likely\n   scenario.  That\
    \ is, it does not attempt to produce a single namespace\n   for all directory\
    \ objects. (This issue is considered in more detail\n   in Section 5.1.)\n   c)\
    \ readily usable by LDAP clients and servers\n   As of this writing, a substantial\
    \ number of the Lightweight Directory\n   Access Protocol (LDAP) [6][7] implementations\
    \ are currently available\n   or soon will be.  The names specified by this naming\
    \ plan should be\n   readily usable by these implementations and applications\
    \ based on\n   them.\n   d) friendly to re-use of existing Internet name registries\n\
    \   As described in Section 2 above, creation of new global name\n   registries\
    \ has been highly problematic.  Therefore, a fundamental\n   requirement this\
    \ plan addresses is to enable the reuse of existing\n   Internet name registries\
    \ such as DNS names and RFC822 mailbox\n   identifiers when constructing directory\
    \ names.\n   e) minimally user-friendly\n   Although we expect that user interfaces\
    \ of directory-enabled\n   applications will avoid exposing users to DNs, it is\
    \ unlikely that\n   users can be totally insulated from them.  For this reason,\
    \ the\n   naming plan should permit use of familiar information in name\n   construction.\
    \  Minimally, a user should be capable of recognizing the\n   information encoded\
    \ in his/her own DN.  Names that are totally opaque\n   to users cannot meet this\
    \ requirement.\n"
- title: 4.0 Name Construction
  contents:
  - "4.0 Name Construction\n   The paper assumes familiarity with the terminology\
    \ and concepts\n   behind the terms distinguished name (DN) and relative distinguished\n\
    \   name (RDN) [2][8][9].\n   We describe how DNs can be constructed using three\
    \ attribute types,\n   domainComponent (dc), userID (uid) and commonName (cn).\
    \  They are\n   each described in turn.\n"
- title: 4.1 Domain Component (dc)
  contents:
  - "4.1 Domain Component (dc)\n   The domain component attribute is defined and registered\
    \ in RFC1274\n   [3][10].  It is used in the construction of a DN from a domain\
    \ name.\n   Details of the construction algorithm is described in \"Using Domains\n\
    \   in LDAP Distinguished Names\" [1].\n   An organization wishing to deploy a\
    \ directory following this naming\n   plan would proceed as follows.  Consider\
    \ an organization, for example\n   \"Acme, Inc.\", having the registered domain\
    \ name \"acme.com\".  It would\n   construct the DN\n      dc=acme, dc=com\n \
    \  from its domain name.  It would then use this DN as the root of its\n   subtree\
    \ of directory information.\n   The DN itself can be used to identify a directory\
    \ organization object\n   that represents information about the organization.\
    \ The directory\n   schema required to enable this is described below in section\
    \ 5.2.\n   The subordinates of the DN will be directory objects related to the\n\
    \   organization.  The domain component attribute can be used to name\n   subdivisions\
    \ of the organization such as organizational units and\n   localities.  Acme,\
    \ for example, might use the domain names\n   \"corporate.acme.com\" and \"richmond.acme.com\"\
    \ to construct the names\n      dc=corporate, dc=acme, dc=com\n      dc=richmond,\
    \ dc=acme, dc=com\n   under which to place its directory objects.  The directory\
    \ schema\n   required to name organizationalUnit and locality objects in this\
    \ way\n   is described below in section 5.2.\n   Note that subdivisions of the\
    \ organization such as organizational\n   units and localities could also be assigned\
    \ RDNs using the\n   conventional X.500 naming attributes, e.g.\n      ou=corporate,\
    \ dc=acme, dc=com\n      l=richmond, dc=acme, dc=com.\n   Use of the dc attribute\
    \ for the RDN of directory objects of class\n   \"domain\" is also possible [1].\n"
- title: 4.2 User ID (uid)
  contents:
  - "4.2 User ID (uid)\n   The userid (uid) attribute is defined and registered in\
    \ RFC1274\n   [3][10].\n   This attribute may be used to construct the RDN for\
    \ directory objects\n   subordinate to objects named according to the procedure\
    \ described in\n   Section 4.1.  This plan does not constrain how this attribute\
    \ is\n   used.\n"
- title: 4.3 Common Name (cn)
  contents:
  - "4.3 Common Name (cn)\n   The commonName (cn) attribute is defined and registered\
    \ in X.500\n   [3][11].\n   This attribute may be used to construct the RDN for\
    \ directory objects\n   subordinate to objects named according to the procedure\
    \ described in\n   Section 4.1.  This plan does not constrain how this attribute\
    \ is\n   used.\n"
- title: 4.4 Examples of uid and cn Usage
  contents:
  - "4.4 Examples of uid and cn Usage\n   Although this plan places no constraints\
    \ on the use of the uid and cn\n   attributes for name construction, we would\
    \ like to offer some\n   suggestions by way of examples.\n   In practice, we have\
    \ used uid for the RDN for person objects were we\n   could make use of an existing\
    \ registry of names and cn for other\n   objects.\n   Examples of existing registries\
    \ of identifiers for person objects are\n   RFC822 mailbox identifiers, employee\
    \ numbers and employee \"handles\".\n   Aside from the convenience to administrators\
    \ of re-use of an existing\n   store of identifiers, if it is ever necessary to\
    \ display to a user\n   his/her DN, there is some hope that it will be recognizable\
    \ when such\n   identifiers are used.\n   We have found RFC822 mailbox identifiers\
    \ a particularly convenient\n   source for name construction.  When a person has\
    \ several e-mail\n   addresses, one will be selected for the purpose of user\n\
    \   identification.  We call this the \"distinguished\" e-mail address or\n  \
    \ the \"distinguished\" RFC822 mailbox identifier for the user.\n   For example,\
    \ if there is a user affiliated with the organization Acme\n   having distinguished\
    \ e-mail address J.Smith@acme.com, the uid\n   attribute will be:\n      uid=J.Smith@acme.com\n\
    \   The domain component attributes of a user's DN will normally be\n   constructed\
    \ from the domain name of his/her distinguished e-mail\n   address.  That is,\
    \ for the user uid=J.Smith@acme.com the domain\n   component attributes would\
    \ typically be:\n      dc=acme, dc=com\n   The full LDAP DN for this user would\
    \ then be:\n      uid=J.Smith@acme.com, dc=acme, dc=com\n   Directory administrators\
    \ having several RFC822 identifiers to choose\n   from when constructing a DN\
    \ for a user should consider the following\n   factors:\n      o Machine-independent\
    \ addresses are likely to be more stable,\n        resulting in directory names\
    \ that change less. Thus an\n        identifier such as:\n            js@acme.com\n\
    \        may well be preferable to one such as:\n            js@blaster.third-floor.acme.com.\n\
    \      o Use of some form of \"handle\" for the \"local\" part that is\n     \
    \   distinct from a user's real name may result in fewer collisions\n        and\
    \ thereby lessen user pain and suffering.  Thus the\n        identifier:\n   \
    \         js@acme.com\n        may well be preferable to one such as:\n      \
    \      J.Smith@acme.com\n   Practical experience with use of the RFC822 mailbox\
    \ identifier scheme\n   described here has shown that there are situations where\
    \ it is\n   convenient to use such identifies for all users in a particular\n\
    \   population, although a few users do not, in fact, possess working\n   mailboxes.\
    \  For example, an organization may have a existing unique\n   identification\
    \ scheme for all employees that is used as a alias to\n   the employees' real\
    \ mailboxes -- which may be quite heterogeneous in\n   structure.  The identification\
    \ scheme works for all employees to\n   identify unambiguously each employee;\
    \ it only works as an e-mail\n   alias for those employees having real mailboxes.\
    \  For this reason it\n   would be a bad assumption for directory-enabled applications\
    \ to\n   assume the uid to be a valid mailbox; the value(s) of the mail\n   attribute\
    \ should always be checked.\n   It is important to emphasize that the elements\
    \ of the domain name of\n   an RFC822 identifier may, BUT NEED NOT, be the same\
    \ as the domain\n   components of the DN.  This means that the domain components\
    \ provide\n   a degree of freedom to support access control or other directory\n\
    \   structuring requirements that need not be mechanically reflected in\n   the\
    \ user's e-mail address.  We do not want under any condition to\n   force the\
    \ user's e-mail address to change just to facilitate a new\n   system requirement\
    \ such as a modification in an access control\n   structure.  It should also be\
    \ noted that while we do not require that\n   the domain components match the\
    \ RFC822 identifier, we DO require that\n   the concatenated domain components\
    \ form a registered domain name,\n   that is, one that is represented in the DNS.\
    \ This automatically\n   avoids name conflicts in the directory hierarchy.\n \
    \  To provide an example of a DN which deviates from what might be\n   considered\
    \ the default structure, consider the following scenario.\n   Suppose that J.Smith\
    \ needs to be granted special permissions to\n   information in the dc=acme, dc=com\
    \ part of the LDAP DIT.  Since it\n   will be, in general, easier to organize\
    \ special users by their name\n   structure than via groups (an arbitrary collection\
    \ of DNs), we use\n   subdomains for this purpose.  Suppose the special permissions\
    \ were\n   required by users in the MIS organizational unit.  A subdomain\n  \
    \ \"mis.acme.com\" is established, if it does not already exist,\n   according\
    \ to normal DNS procedures.  The special permissions will be\n   granted to users\
    \ with the name structure:\n      uid=*, dc=mis, dc=acme, dc=com\n   The DN of\
    \ J.Smith in this case will be:\n      uid=J.Smith@acme.com, dc=mis, dc=acme,\
    \ dc=com\n   In principal, there is nothing to prevent the domain name elements\
    \ of\n   the RFC822 identifier from being completely different from the domain\n\
    \   components of the DN.  For instance, the DN for a J.Smith could be:\n    \
    \  uid=J.Smith@worldnet.att.net, dc=mis, dc=acme, dc=com\n   While we do not REQUIRE\
    \ that the domain name part of the uid match\n   the dc components of the directory\
    \ distinguished name, we suggest\n   that this be done where possible. At a minimum,\
    \ if the most\n   significant pieces of the DN and the uid are the same (i.e.,\n\
    \   \"dc=acme, dc=com\" and \"acme.com\") the likelihood, based on a\n   knowledge\
    \ of a user's e-mail address, of discovering an appropriate\n   directory system\
    \ to contact to find information about the user is\n   greatly enhanced.\n   The\
    \ example above represents a situation where this suggestion isn't\n   possible\
    \ because some of the users in a population have mailbox\n   identifiers that\
    \ differ from the pattern of the rest of the users,\n   e.g., most mailboxes are\
    \ of the form local@acme.com, but a\n   subpopulation have mailboxes from an ISP\
    \ and therefore mailboxes of\n   the form local@worldnet.att.net.\n"
- title: 5.0 Naming Plan and Directories
  contents:
  - '5.0 Naming Plan and Directories

    '
- title: 5.1 Directory Services Considerations
  contents:
  - "5.1 Directory Services Considerations\n   We envision the deployment of LDAP-based\
    \ directory services on the\n   Internet to take the form of loosely coupled LDAP\
    \ servers. This\n   coupling will occur at two levels.\n   Firstly, LDAP servers\
    \ will be loosely connected into islands (i.e. a\n   set of servers sharing a\
    \ single DN namespace). The glue connecting\n   the islands will be LDAP referral\
    \ [12] information configured into\n   the LDAP servers. An LDAP search directed\
    \ to any server in such an\n   island can be answered, if the information is not\
    \ available to that\n   server, by an LDAP referral to another, more appropriate\
    \ server\n   within the same island.\n   Secondly, various techniques will be\
    \ used span LDAP islands. The\n   concept that enables such techniques is the\
    \ LDAP URL [13]. By\n   combining a DNS host name and port (corresponding to one\
    \ or more LDAP\n   servers) with a DN, the LDAP URL provides unified high-level\n\
    \   identification scheme (an LDAP URL namespace) for directory objects.\n   Because\
    \ an LDAP referral is expressed as one or more LDAP URL, these\n   two levels\
    \ of coupling may not sharply distinguished in practice.\n   We do not envision\
    \ the X.500 model of a single DIT (i.e. a single DN\n   namespace) to be viable\
    \ in an environment of competing service\n   providers.  This naming plan does\
    \ not attempt to produce DNs to hide\n   the possibility that a given real-world\
    \ object may have independently\n   managed directory objects with the same DN\
    \ associated with it.\n"
- title: 5.2 Directory Schema Implications of the Naming Plan
  contents:
  - "5.2 Directory Schema Implications of the Naming Plan\n   The traditional directory\
    \ schema(s) developed for the X.500 standard\n   and its application to the Internet\
    \ [4] require extension to be used\n   with the naming plan developed here. The\
    \ extensions described below\n   attempt to reuse existing schema elements as\
    \ much as possible. The\n   directory objects for which extensions are required\
    \ are:\n   organization, organizational unit, and various classes of leaf\n  \
    \ objects. We describe the schema modifications below for organization,\n   organizationalUnit\
    \ and selected leaf classes.\n   So as to continue to use existing structural\
    \ object classes to the\n   extent possible, we propose supplementing entries\
    \ based on these\n   classes with additional information from two new auxiliary\
    \ object\n   classes, dcObject and uidObject. They are specified using the\n \
    \  notation in Section 4 of [14].\n   The auxiliary object class dcObject is defined\
    \ in \"Using Domains in\n   LDAP Distinguished Names\" [1].\n   The auxiliary\
    \ object class uidObject is defined as:\n   ( 1.3.6.1.1.3.1\n     NAME uidObject\n\
    \     SUP top\n     AUXILIARY\n     MUST uid )\n"
- title: 5.2.1 Organization Schema
  contents:
  - "5.2.1 Organization Schema\n   The dc attribute is employed to construct the RDN\
    \ of an organization\n   object.  This is enabled by adding the auxiliary class\
    \ dcObject to\n   the organization's objectClass attribute.\n"
- title: 5.2.2 Organizational Unit Schema
  contents:
  - "5.2.2 Organizational Unit Schema\n   The dc attribute is employed to construct\
    \ the RDN of an\n   organizationalUnit object (which is subordinate in the DIT\
    \ to either\n   an organization or an organizationalUnit object).  This is enabled\
    \ by\n   adding the auxiliary class dcObject to the organizational unit's\n  \
    \ objectClass attribute.\n"
- title: 5.2.3 Person Schema
  contents:
  - "5.2.3 Person Schema\n   No schema extensions are required for person objects\
    \ if either the\n   inetOrgPerson [15] (preferred) or the newPilotPerson object\
    \ classes\n   are used. The attribute uid is permissible in each class. For\n\
    \   consistency, the uidObject could be added to person entry objectClass\n  \
    \ attributes to assist applications filtering on this object class\n   attribute\
    \ value. Use of other classes for person objects with RDN\n   constructed with\
    \ the uid attribute such as organizationalPerson\n   requires the use of the uidObject\
    \ class.\n   It has been traditional in X.500 and LDAP directory services to\n\
    \   employ the common name (cn) attribute in naming.  While this naming\n   plan\
    \ doesn't require use of the cn attribute in naming, it should be\n   stressed\
    \ that it is a required attribute in any class derived from\n   the person class\
    \ and is still quite important.  It will play a\n   significant role in enabling\
    \ searches to find user entries of\n   interest.\n"
- title: 5.2.4 Certification Authority Schema
  contents:
  - "5.2.4 Certification Authority Schema\n   The certification authority (CA) object\
    \ class is an auxiliary class,\n   meaning it is essentially a set of additional\
    \ attributes for a base\n   class such as organizationalRole, organization, organizationalUnit\
    \ or\n   person.  Except in the case where the base structural class is\n   inetOrgPerson,\
    \ use of the uid attribute to construct the RDN of a CA\n   will require the auxiliary\
    \ class uidObject to permit the uid\n   attribute to be used. In the cases where\
    \ organizationalUnit or\n   organization is the base class for a CA, use of the\
    \ auxiliary class\n   dcObject will permit the RDN of the CA to be a domain component.\n"
- title: 5.2.5 Server and Server Application Schema
  contents:
  - "5.2.5 Server and Server Application Schema\n   Servers and server applications\
    \ are typically represented, for want\n   of anything better, by entries of the\
    \ object class applicationProcess\n   (or a class derived from it).  Sometimes\
    \ the class applicationEntity\n   is used.  In either case, the uid attribute\
    \ should probably not be\n   employed to construct the RDN of a server or server\
    \ application\n   object.  The standard schema uses the attribute cn for such\
    \ RDNs.\n   Suppose one wants to use this naming plan both in the construction\
    \ of\n   DNs for SSL server certificates and for their storage in a directory.\n\
    \   It is customary for clients connecting via SSL to compare the\n   server's\
    \ domain name (e.g. from the URL used to contact the server)\n   with the value\
    \ of the cn attribute in the subject field (i.e.\n   subject's DN) of the server's\
    \ certificate. For this reason, it is\n   common practice to set the cn attribute\
    \ to the server's domain name.\n   The naming and schema to handle this situation\
    \ is best explained by\n   an example. Consider the server \"host.acme.com\".\
    \ Following the\n   algorithm in \"Using Domains in LDAP Distinguished Names\"\
    \ [1], the DN\n   dc=host, dc=acme, dc=com is constructed. To conform to the existing\n\
    \   practices just described, the server's subject DN for the SSL server\n   certificate\
    \ should be cn=host.acme.com, dc=host, dc=acme, dc=com and\n   the server's certificate\
    \ should be stored in a directory entry with\n   this name. This entry should\
    \ use application process or application\n   entity as its structural object class\
    \ and strong authentication user\n   as is auxiliary class.\n"
- title: 5.2.6 Name Forms
  contents:
  - "5.2.6 Name Forms\n   For X.500 servers or LDAP servers following the X.500 model,\
    \ our\n   schema requires the definition of new name forms, structure rules,\n\
    \   and DIT content rules.  Structure rules and DIT content rules are\n   locally\
    \ defined, and do not involve a globally significant object\n   identifier.\n\
    \   The following name forms are defined using the syntax of section 6.22\n  \
    \ of [14] for the convenience of those using such servers.\n   Note that since\
    \ the structural object classes organization,\n   organizationalUnit, locality\
    \ and organizationalPerson do not permit\n   inclusion of the dc attribute, an\
    \ auxiliary object class such as\n   dcObject [1] must be used for instances of\
    \ these classes.)\n"
- title: 5.2.6.1 Name Form for Domain Objects
  contents:
  - "5.2.6.1 Name Form for Domain Objects\n   The OIDs in this group are under the\n\
    \   iso.org.dod.internet.directory.NameForm branch of the OID tree\n   (1.3.6.1.1.2).\n\
    \   ( 1.3.6.1.1.2.1\n     NAME domainNameForm\n     OC domain\n     MUST dc )\n\
    \   The domainNameForm name form indicates that objects of structural\n   object\
    \ class domain have their RDN constructed from a value of the\n   attribute dc.\n"
- title: 5.2.6.2 Name Form for Organization Objects
  contents:
  - "5.2.6.2 Name Form for Organization Objects\n   ( 1.3.6.1.1.2.2\n     NAME dcOrganizationNameForm\n\
    \     OC organization\n     MUST dc )\n   The dcOrganizationNameForm name form\
    \ indicates that objects of\n   structural object class organization have their\
    \ RDN constructed from\n   a value of the attribute dc.\n"
- title: 5.2.6.3 Name Form for Organizational Unit Objects
  contents:
  - "5.2.6.3 Name Form for Organizational Unit Objects\n   ( 1.3.6.1.1.2.3\n     NAME\
    \ dcOrganizationalUnitNameForm\n     OC organizationalUnit\n     MUST dc )\n \
    \  The dcOrganizationalUnitNameForm name form indicates that objects of\n   structural\
    \ object class organizationalUnit have their RDN constructed\n   from a value\
    \ of the attribute dc.\n"
- title: 5.2.6.4 Name Form for Locality Objects
  contents:
  - "5.2.6.4 Name Form for Locality Objects\n   ( 1.3.6.1.1.2.4\n     NAME dcLocalityNameForm\n\
    \     OC locality\n     MUST dc )\n   The dcLocalityNameForm name form indicates\
    \ that objects of structural\n   object class locality have their RDN constructed\
    \ from a value of the\n   attribute dc.\n"
- title: 5.2.6.5 Name Form for Organizational Person Objects
  contents:
  - "5.2.6.5 Name Form for Organizational Person Objects\n   ( 1.3.6.1.1.2.5\n   \
    \  NAME uidOrganizationalPersonNameForm\n     OC organizationalPerson\n     MUST\
    \ uid )\n   The uidOrganizationalPersonNameForm name form indicates that objects\n\
    \   of structural object class organizationalPerson have their RDN\n   constructed\
    \ from a value of the attribute uid.\n"
- title: 6.0 Security Considerations
  contents:
  - "6.0 Security Considerations\n   Although access controls may be placed on portions\
    \ of the DIT to deny\n   browse access to unauthorized clients, it may be possible\
    \ to infer\n   directory names and DIT structure in such sensitive portions of\
    \ the\n   DIT from the results of DNS queries. Providing public visibility to\n\
    \   some portions of the DIT may assist those make such inferences.\n"
- title: 7.0 Acknowledgments
  contents:
  - "7.0 Acknowledgments\n   This plan has emerged in the course of a number of fruitful\n\
    \   discussions, especially with David Chadwick, John Dale, Joe Gajewski,\n  \
    \ Mark Jackson, Ryan Moats, Tom Spencer and Chris Tzu.\n"
- title: 8.0 References
  contents:
  - "8.0 References\n   [1]     Kille, S., Wahl, M., Grimstad, A., Huber, R., and\
    \ S.\n           Sataluri, \"Using Domains in LDAP Distinguished Names\", RFC\n\
    \           2247, January 1998.\n   [2]     X.500: The Directory -- Overview of\
    \ Concepts, Models, and\n           Service, CCITT Recommendation X.500, December,\
    \ 1988.\n   [3]     Barker, P., and S. Kille, \"The COSINE and Internet X.500\n\
    \           Schema\", RFC 1274, November 1991.\n   [4]     The North American\
    \ Directory Forum, \"A Naming Scheme for\n           c=US\", RFC 1255, September\
    \ 1991.\n   [5]     The North American Directory Forum, \"NADF Standing Documents:\n\
    \           A Brief Overview\", RFC 1417, February 1993.\n   [6]     Yeong, W.,\
    \ Howes, T., and S. Kille, \"Lightweight Directory\n           Access Protocol\"\
    , RFC 1777, March 1995.\n   [7]     Wahl, M., Howes, T., and S. Kille, \"Lightweight\
    \ Directory\n           Access Protocol (v3)\", RFC 2251, December 1997.\n   [8]\
    \     Kille, S., \"A String Representation of Distinguished Names\",\n       \
    \    RFC 1779, March 1995.\n   [9]     Wahl, M., Kille, S., and T. Howes, \"Lightweight\
    \ Directory\n           Access Protocol (v3): UTF-8 String Representation of\n\
    \           Distinguished Names\", RFC 2253, December 1997.\n   [10]    Wahl,\
    \ M., \"A Summary of the Pilot X.500 Schema for use\n           in LDAPv3\", Work\
    \ in Progress.\n   [11]    Wahl, M., \"A Summary of the X.500 User Schema for\
    \ use with\n           LDAPv3\", RFC 2256, December 1997.\n   [12]    Howes, T.,\
    \ and M. Wahl, \"Referrals and Knowledge References\n           in LDAP Directories\"\
    , Work in Progress.\n   [13]    Howes, T., and M. Smith, \"The LDAP URL Format\"\
    , RFC 2255,\n           December 1997.\n   [14]    Wahl, M., Coulbeck, A., Howes,\
    \ T., and S. Kille,\n           \"Lightweight Directory Access Protocol (v3):\
    \ Attribute Syntax\n           Definitions\", RFC 2252, December 1997.\n   [15]\
    \    Smith, M., \"Definition of the inetOrgPerson Object Class\",\n          \
    \ Work in Progress.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Al Grimstad\n   AT&T\n   Room 1C-429, 101 Crawfords\
    \ Corner Road\n   Holmdel, NJ 07733-3030\n   USA\n   EMail:  alg@att.com\n   Rick\
    \ Huber\n   AT&T\n   Room 1B-433, 101 Crawfords Corner Road\n   Holmdel, NJ 07733-3030\n\
    \   USA\n   EMail:  rvh@att.com\n   Sri Sataluri\n   Lucent Technologies\n   Room\
    \ 4D-335, 101 Crawfords Corner Road\n   Holmdel, NJ 07733-3030\n   USA\n   EMail:\
    \  srs@lucent.com\n   Mark Wahl\n   Critical Angle Inc.\n   4815 W Braker Lane\
    \ #502-385\n   Austin, TX 78759\n   USA\n   EMail:  M.Wahl@critical-angle.com\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
