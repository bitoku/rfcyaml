- contents:
  - '           Loop Detection in Content Delivery Networks (CDNs)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines the CDN-Loop request header field for HTTP.\n
    \  CDN-Loop addresses an operational need that occurs when an HTTP\n   request
    is intentionally forwarded between Content Delivery Networks\n   (CDNs), but is
    then accidentally or maliciously re-routed back into\n   the original CDN causing
    a non-terminating loop.  The new header\n   field can be used to identify the
    error and terminate the loop.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8586.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Relationship to Via . . . . . . . . . . . . . . . .
    . . .   2\n     1.2.  Conventions and Definitions . . . . . . . . . . . . . .
    .   3\n   2.  The CDN-Loop Request Header Field . . . . . . . . . . . . . .   3\n
    \  3.  Security Considerations . . . . . . . . . . . . . . . . . . .   4\n   4.
    \ IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5\n   5.  References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .   5\n     5.1.  Normative
    References  . . . . . . . . . . . . . . . . . .   5\n     5.2.  Informative References
    \ . . . . . . . . . . . . . . . . .   6\n   Authors' Addresses  . . . . . . .
    . . . . . . . . . . . . . . . .   6\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   In modern deployments of HTTP servers, it is common to interpose\n
    \  Content Delivery Networks (CDNs) in front of origin servers to\n   improve
    latency perceived by end users, reduce operational costs, and\n   improve scalability
    and reliability of services.\n   Often, more than one CDN is in use by a given
    origin.  This happens\n   for a variety of reasons, such as cost savings, arranging
    for\n   failover should one CDN have issues, or direct comparison of the\n   CDNs'
    services.\n   As a result, it is possible for forwarding CDNs to be configured
    in a\n   \"loop\" accidentally; because routing is achieved through a\n   combination
    of DNS and forwarding rules, and site configurations are\n   sometimes complex
    and managed by several parties.\n   When this happens, it is difficult to debug.
    \ Additionally, it\n   sometimes isn't accidental; loops between multiple CDNs
    can be used\n   as an attack vector (e.g., see [loop-attack]), especially if one
    CDN\n   unintentionally strips the loop detection headers of another.\n   This
    specification defines the CDN-Loop HTTP request header field to\n   help detect
    such attacks and accidents among forwarding CDNs that\n   have implemented it;
    the header field may not be modified by their\n   customers.\n"
  - contents:
    - "1.1.  Relationship to Via\n   HTTP defines the Via header field in Section
      5.7.1 of [RFC7230] for\n   \"tracking message forwards, avoiding request loops,
      and identifying\n   the protocol capabilities of senders along the request/response\n
      \  chain.\"\n   In theory, Via could be used to identify these loops.  However,
      in\n   practice it is not used in this fashion, because some HTTP servers\n
      \  use Via for other purposes -- in particular, some implementations\n   disable
      some HTTP/1.1 features when the Via header is present.\n"
    title: 1.1.  Relationship to Via
  - contents:
    - "1.2.  Conventions and Definitions\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
      interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
      they appear in all\n   capitals, as shown here.\n   This specification uses
      the Augmented Backus-Naur Form (ABNF)\n   notation of [RFC5234] with a list
      extension, defined in Section 7 of\n   [RFC7230], that allows for compact definition
      of comma-separated\n   lists using a '#' operator (similar to how the '*' operator
      indicates\n   repetition).  Additionally, it uses a token (OWS), uri-host, and
      port\n   rules from [RFC7230] and the parameter rule from [RFC7231].\n"
    title: 1.2.  Conventions and Definitions
  title: 1.  Introduction
- contents:
  - "2.  The CDN-Loop Request Header Field\n   The CDN-Loop request header field is
    intended to help a Content\n   Delivery Network identify when an incoming request
    has already passed\n   through that CDN's servers to detect loops.\n   CDN-Loop
    \ = #cdn-info\n   cdn-info  = cdn-id *( OWS \";\" OWS parameter )\n   cdn-id    =
    ( uri-host [ \":\" port ] ) / pseudonym\n   pseudonym = token\n   The cdn-id identifies
    the CDN using either a hostname under its\n   control or a pseudonym.  Hostnames
    are preferred, to help avoid\n   accidental collisions.  If a pseudonym is used,
    unintentional\n   collisions are more likely, and therefore values should be carefully\n
    \  chosen to prevent them; for example, using a well-known value (such\n   as
    the recognized name of the CDN in question), or a generated value\n   with enough
    entropy to make collisions unlikely (such as a UUID\n   [RFC4122]).\n   Optionally,
    cdn-info can have semicolon-separated key/value\n   parameters to accommodate
    additional information for the CDN's use.\n   Conforming Content Delivery Networks
    SHOULD add a cdn-info to this\n   header field in all requests they generate or
    forward (creating the\n   header field if necessary).\n   As with all HTTP header
    fields defined using the \"#\" rule, the\n   CDN-Loop header field can be added
    to by comma-separating values, or\n   by creating a new header field with the
    desired value.\n   For example:\n   GET /image.jpg HTTP/1.1\n   Host: cdn-customer.example\n
    \  User-Agent: ExampleBrowser/5\n   CDN-Loop: foo123.foocdn.example, barcdn.example;
    trace=\"abcdef\"\n   CDN-Loop: AnotherCDN; abc=123; def=\"456\"\n   Note that
    the pseudonym syntax does not allow whitespace, DQUOTE, or\n   any of the characters
    \"(),/:;<=>?@[]{}\".  See Section 3.2.6 of\n   [RFC7230].  Likewise, note the
    rules for when parameter values need\n   to be quoted in Section 3.1.1 of [RFC7231].\n
    \  The effectiveness of this mechanism relies on all intermediaries\n   preserving
    the header field, since removing (or allowing it to be\n   removed, e.g., by customer
    configuration) would prevent downstream\n   CDNs from using it to detect looping.
    \ In general, unknown header\n   fields are not removed by intermediaries, but
    there may be a need to\n   add CDN-Loop to an implementation's list of header
    fields that are\n   not to be removed under any circumstances.  The header field
    SHOULD\n   NOT be used for other purposes.\n"
  title: 2.  The CDN-Loop Request Header Field
- contents:
  - "3.  Security Considerations\n   The threat model that the CDN-Loop header field
    addresses is a\n   customer who is attacking a service provider by configuring
    a\n   forwarding loop by accident or malice.  For it to function, CDNs\n   cannot
    allow customers to modify or remove it in their configuration\n   (see Section
    2).\n   Note that a CDN that allows customers to remove or modify the\n   CDN-Loop
    header field (i.e., they do not implement this\n   specification) remains an attack
    vector against both implementing and\n   non-implementing CDNs.\n   A CDN's use
    of the CDN-Loop header field might expose its presence.\n   For example, if CDN
    A is configured to forward its requests to CDN B\n   for a given origin, CDN B's
    presence can be revealed if it behaves\n   differently based upon the presence
    of the CDN-Loop header field.\n   The CDN-Loop header field can be generated by
    any client, and\n   therefore its contents cannot be trusted.  CDNs who modify
    their\n   behavior based upon its contents should assure that this does not\n
    \  become an attack vector (e.g., for Denial of Service).\n   It is possible to
    sign the contents of the header field (either by\n   putting the signature directly
    into the field's content or using\n   another header field), but such use is not
    defined (or required) by\n   this specification.\n   Depending on how it is used,
    CDN-Loop can expose information about\n   the internal configuration of the CDN;
    for example, the number of\n   hops inside the CDN, and the hostnames of nodes.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  IANA Considerations\n   This document registers the \"CDN-Loop\" header field
    in the \"Permanent\n   Message Header Field Names\" registry.\n   o  Header Field
    Name: CDN-Loop\n   o  Protocol: http\n   o  Status: standard\n   o  Reference:
    RFC 8586\n"
  title: 4.  IANA Considerations
- contents:
  - '5.  References

    '
  - contents:
    - "5.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC7230]
      \ Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol
      (HTTP/1.1): Message Syntax and Routing\",\n              RFC 7230, DOI 10.17487/RFC7230,
      June 2014,\n              <https://www.rfc-editor.org/info/rfc7230>.\n   [RFC7231]
      \ Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol
      (HTTP/1.1): Semantics and Content\", RFC 7231,\n              DOI 10.17487/RFC7231,
      June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 5.1.  Normative References
  - contents:
    - "5.2.  Informative References\n   [loop-attack]\n              Chen, J., Jiang,
      J., Zheng, X., Duan, H., Liang, J., Li,\n              K., Wan, T., and V. Paxson,
      \"Forwarding-Loop Attacks in\n              Content Delivery Networks\", February
      2016,\n              <http://www.icir.org/vern/papers/cdn-loops.NDSS16.pdf>.\n
      \  [RFC4122]  Leach, P., Mealling, M., and R. Salz, \"A Universally\n              Unique
      IDentifier (UUID) URN Namespace\", RFC 4122,\n              DOI 10.17487/RFC4122,
      July 2005,\n              <https://www.rfc-editor.org/info/rfc4122>.\n"
    title: 5.2.  Informative References
  title: 5.  References
- contents:
  - "Authors' Addresses\n   Stephen Ludin\n   Akamai Technologies\n   Email: sludin@akamai.com\n
    \  Mark Nottingham\n   Fastly\n   Email: mnot@fastly.com\n   Nick Sullivan\n   Cloudflare\n
    \  Email: nick@cloudflare.com\n"
  title: Authors' Addresses
