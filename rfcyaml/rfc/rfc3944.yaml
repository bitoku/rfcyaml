- title: __initial_text__
  contents:
  - "                       H.350 Directory Services\nStatus of this Memo\n   This\
    \ memo provides information for the Internet community.  It does\n   not specify\
    \ an Internet standard of any kind.  Distribution of this\n   memo is unlimited.\n\
    Copyright Notice\n   Copyright (C) The Internet Society (2004).\nAbstract\n  \
    \ The International Telecommunications Union Standardization Sector\n   (ITU-T)\
    \ has created the H.350 series of Recommendations that specify\n   directory services\
    \ architectures in support of multimedia\n   conferencing protocols.  The goal\
    \ of the architecture is to\n   'directory enable' multimedia conferencing so\
    \ that these services can\n   leverage existing identity management and enterprise\
    \ directories.  A\n   particular goal is to enable an enterprise or service provider\
    \ to\n   maintain a canonical source of users and their multimedia\n   conferencing\
    \ systems, so that multiple call servers from multiple\n   vendors, supporting\
    \ multiple protocols, can all access the same data\n   store.\n   Because SIP\
    \ is an IETF standard, the contents of H.350 and H.350.4\n   are made available\
    \ via this document to the IETF community.  This\n   document contains the entire\
    \ normative text of ITU-T Recommendations\n   H.350 and H.350.4 in sections 4\
    \ and 5, respectively.  The remaining\n   sections are included only in this document,\
    \ not in the ITU-T\n   version.\nTable of Contents\n   1.   Scope . . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  3\n   2.   Terminology . . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  3\n   3.   Conventions used in this\
    \ document . . . . . . . . . . . . . .  4\n   4.   H.350 . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  4\n        4.1.  Scope . . . . . . . . .\
    \ . . . . . . . . . . . . . . . .  4\n              4.1.1. Design Goals . . .\
    \ . . . . . . . . . . . . . . .  6\n              4.1.2. Extending the Schema\
    \ . . . . . . . . . . . . . .  7\n        4.2.  commURIObject Definition. . .\
    \ . . . . . . . . . . . . . 10\n              4.2.1. commURIObject. . . . . .\
    \ . . . . . . . . . . . . 10\n              4.2.2. commURI. . . . . . . . . .\
    \ . . . . . . . . . . . 10\n        4.3.  CommObject Definition . . . . . . .\
    \ . . . . . . . . . . 11\n              4.3.1. commObject . . . . . . . . . .\
    \ . . . . . . . . . 11\n              4.3.2. commUniqueId . . . . . . . . . .\
    \ . . . . . . . . 11\n              4.3.3. commOwner. . . . . . . . . . . . .\
    \ . . . . . . . 12\n              4.3.4. commPrivate. . . . . . . . . . . . .\
    \ . . . . . . 13\n        4.4.  CommObject LDIF Files . . . . . . . . . . . .\
    \ . . . . . 13\n              4.4.1. LDIF for commURIObject . . . . . . . . .\
    \ . . . . 13\n              4.4.2. LDIF for commObject. . . . . . . . . . . .\
    \ . . . 15\n        4.5.  H.350 Annex A Indexing Profile. . . . . . . . . . .\
    \ . . 17\n   5.   H.350.4 . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 17\n        5.1.  Scope . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 17\n              5.1.1. Extending the schema . . . . . . . . . . . . . . 18\n\
    \        5.2.  Object class definitions. . . . . . . . . . . . . . . . 18\n  \
    \            5.2.1. SIPIdentity. . . . . . . . . . . . . . . . . . . 18\n    \
    \          5.2.2. SIPIdentitySIPURI. . . . . . . . . . . . . . . . 19\n      \
    \        5.2.3. SIPIdentityRegistrarAddress. . . . . . . . . . . 19\n        \
    \      5.2.4. SIPIdentityProxyAddress. . . . . . . . . . . . . 20\n          \
    \    5.2.5. SIPIdentityAddress . . . . . . . . . . . . . . . 21\n            \
    \  5.2.6. SIPIdentityPassword. . . . . . . . . . . . . . . 21\n              5.2.7.\
    \ SIPIdentityUserName. . . . . . . . . . . . . . . 22\n              5.2.8. SIPIdentityServiceLevel.\
    \ . . . . . . . . . . . . 23\n        5.3.  SIPIdentity LDIF Files. . . . . .\
    \ . . . . . . . . . . . 23\n        5.4.  H.350.4 Annex A Indexing profile. .\
    \ . . . . . . . . . . 26\n   6.   Acknowledgments . . . . . . . . . . . . . .\
    \ . . . . . . . . . 26\n   7.   Security Considerations . . . . . . . . . . .\
    \ . . . . . . . . 27\n   8.   References. . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 28\n        8.1.  Normative References. . . . . . . . . . . .\
    \ . . . . . . 28\n        8.2.  Informative References. . . . . . . . . . . .\
    \ . . . . . 28\n   9.   Relationship to Other Specifications. . . . . . . . .\
    \ . . . . 29\n   10.  Authors' Addresses. . . . . . . . . . . . . . . . . . .\
    \ . . . 29\n        Full Copyright Statement. . . . . . . . . . . . . . . . .\
    \ . . 30\n1.  Scope\n   The International Telecommunications Union Standardization\
    \ Sector\n   (ITU-T) has created the H.350 series of Recommendations that specify\n\
    \   directory services architectures in support of multimedia\n   conferencing\
    \ protocols.  The goal of the architecture is to\n   'directory enable' multimedia\
    \ conferencing so that these services can\n   leverage existing identity management\
    \ and enterprise directories.  A\n   particular goal is to enable an enterprise\
    \ or service provider to\n   maintain a canonical source of users and their multimedia\n\
    \   conferencing systems, so that multiple call servers from multiple\n   vendors,\
    \ supporting multiple protocols, can all access the same data\n   store.\n   H.350\
    \ architectures are not intended to change the operation of\n   multimedia conferencing\
    \ protocols in any way.  Rather, they are meant\n   to standardize the way the\
    \ already defined protocol elements are\n   stored in a directory, so that they\
    \ can be accessed in a standardized\n   manner.\n   In the H.350 series, Recommendation\
    \ H.350 specifies the base\n   architecture and object classes, while subordinate\
    \ Recommendations\n   specify elements that are specific to individual protocols.\n\
    \   Currently, the Recommendations include:\n   H.350   - Directory Services Architecture\
    \ for Multimedia Conferencing\n   H.350.1 - Directory Services Architecture for\
    \ H.323\n   H.350.2 - Directory Services Architecture for H.235\n   H.350.3 -\
    \ Directory Services Architecture for H.320\n   H.350.4 - Directory Services Architecture\
    \ for SIP\n   H.350.5 - Directory Services Architecture for Non-Standard Protocols\n\
    \   Because SIP is an IETF standard, the contents of H.350 and H.350.4\n   are\
    \ made available via this document to the IETF community.\n2.  Terminology\n \
    \  The following terms are used throughout the document:\n   *  call server: a\
    \ protocol-specific signalling engine that routes\n      video or voice calls\
    \ on the network.  In H.323 this entity is a\n      gatekeeper.  In SIP, this\
    \ entity is a SIP Proxy Server.  Note that\n      not all signalling protocols\
    \ use a call server.\n   *  endpoint: a logical device that provides video and/or\
    \ voice media\n      encoding/decoding, and signalling functions.  Examples include:\n\
    \      *  a group teleconferencing appliance that is located in a\n         conference\
    \ room\n      *  an IP telephone.\n      *  a software program that takes video\
    \ and voice from a camera and\n         microphone and encodes it and applies\
    \ signalling using a host\n         computer.\n   *  enterprise directory: A canonical\
    \ collection of information about\n      users in an organization.  Typically\
    \ this information is collected\n      from a variety of organizational units\
    \ to create a whole.  For\n      example, Human Resources may provide name and\
    \ address,\n      Telecommunications may provide the telephone number, Information\n\
    \      Technology may provide the email address, etc.  For the purposes\n    \
    \  of this architecture, it is assumed that an enterprise directory\n      is\
    \ accessible via LDAP.\n   *  White Pages: An application that allows end users\
    \ to look up the\n      address of another user.  This may be web-based or use\
    \ some other\n      user interface.\n3.  Conventions used in this document\n \
    \  Conventions in this document conform to ITU-T guidelines.  In this\n   Recommendation,\
    \ the following conventions are used:\n   \"Shall\" indicates a mandatory requirement.\n\
    \   \"Should\" indicates a suggested but optional course of action.\n   \"May\"\
    \ indicates an optional course of action rather than a\n   recommendation that\
    \ something take place.\n   References to clauses, sub clauses, annexes and appendices\
    \ refer to\n   those items within this Recommendation unless another specification\n\
    \   is explicitly listed.\n4.  H.350\n   The normative text of H.350 is reproduced\
    \ in this section.\n4.1.  Scope\n   This Recommendation describes a directory\
    \ services architecture for\n   multimedia conferencing using LDAP.  Standardized\
    \ directory services\n   can support association of persons with endpoints, searchable\
    \ white\n   pages, and clickable dialling.  Directory services can also assist\
    \ in\n   the configuration of endpoints, and user authentication based on\n  \
    \ authoritative data sources.  This document describes a standardized\n   LDAP\
    \ schema to represent endpoints on the network and associate those\n   endpoints\
    \ with users.  It discusses design and implementation\n   considerations for the\
    \ inter-relation of video and voice-specific\n   directories, enterprise directories,\
    \ call servers and endpoints.\n   The use of a common, authoritative data source\
    \ for call server,\n   endpoint, user, authentication and white pages information\
    \ is an\n   important aspect of large scale multimedia conferencing environments.\n\
    \   Without a common data source, service providers must create separate\n   processes\
    \ to manage each of these functions.  By standardizing the\n   LDAP schema used\
    \ to represent the underlying data, products from\n   different system vendors\
    \ can be deployed together to create an\n   overall application environment. \
    \ For example, a white pages search\n   engine developed by one provider could\
    \ serve directory information to\n   IP telephones produced by a second provider,\
    \ with signalling managed\n   by a call server produced by yet a third provider.\
    \  Each of these\n   disparate systems can access the same underlying data source,\n\
    \   reducing or eliminating the need to coordinate separate management of\n  \
    \ each system.  A significant benefit to the user is that the\n   management of\
    \ this data can be incorporated into existing customer\n   management tools, allowing\
    \ for quick and flexible scaling up of\n   applications.  Indeed, many technology\
    \ providers have already\n   incorporate LDAP into their products, but have been\
    \ forced to do so\n   without benefit of a standardized schema. This Recommendation\n\
    \   represents an effort to standardize those representations to improve\n   interoperability\
    \ and performance.\n   While URLs are already standardized for several conferencing\n\
    \   protocols, their representation in a directory is not.  This\n   Recommendation\
    \ supports a standardized way for URLs to be searched\n   and located.  This is\
    \ a necessary step to support 'clickable\n   dialling'.\n   Management of endpoint\
    \ configurations can be improved if the correct\n   settings are stored by the\
    \ service provider in a location that is\n   accessible to both service provider\
    \ and endpoint.  LDAP provides a\n   convenient storage location that can be accessed\
    \ by both call server\n   and endpoint; thus it is possible to use the directory\
    \ to support\n   endpoint configuration, which is important for simplified operation\n\
    \   and supporting user mobility.  Note that other technologies also\n   support\
    \ endpoint configuration, notably the use of SNMP for complete\n   configuration\
    \ and SRV records for obtaining registration server\n   addresses.  Therefore,\
    \ H.350 should be viewed not as an authoritative\n   endpoint configuration architecture,\
    \ but rather one tool that can\n   assist with this task.  Note that the use of\
    \ H.350 has as a feature\n   endpoint specific configuration, where it is desirable\
    \ that each\n   endpoint has a unique configuration.\n   This architecture uses\
    \ a generic object class, called commObject, to\n   represent attributes common\
    \ to any video or voice protocol. Auxiliary\n   classes represent specific protocols,\
    \ such as H.323, H.235, or H.320,\n   as described in the H.350.x series of Recommendations.\
    \  Multiple\n   H.350.x classes can be combined to represent endpoints that support\n\
    \   more than one protocol.  For example, endpoints that support H.323,\n   H.235\
    \ and H.320 would include H.350, H.350.1, H.350.2, and H.350.3 in\n   their LDAP\
    \ representations. Further, each entry should contain\n   commObject to serve\
    \ as the entry's structural object class.\n   There are two basic components in\
    \ the architecture.  The commURI\n   object is a class whose only purpose is to\
    \ link a person or resource\n   to a commObject.  By placing a commURI 'pointer'\
    \ in an individual's\n   directory entry, that individual becomes associated with\
    \ the\n   particular targeted commObject.  Similarly, commObject contains a\n\
    \   pointer, called commOwner, which points to the individual or resource\n  \
    \ that is associated with the commObject.  In this way, people or\n   resources\
    \ can be associated with endpoints.  The only change required\n   in the enterprise\
    \ directory is the addition of the simple object\n   class commURI.  CommObject\
    \ data may be instantiated in the same or in\n   entirely separate directories,\
    \ thus allowing flexibility in\n   implementation.\n4.1.1.  Design Goals\n   Large-scale\
    \ deployments of IP video and voice services have\n   demonstrated the need for\
    \ complementary directory services\n   middleware.  Service administrators need\
    \ call servers that are aware\n   of enterprise directories to avoid duplication\
    \ of account management\n   processes.  Users need 'white pages' to locate other\
    \ users with whom\n   they wish to communicate.  All of these processes should\
    \ pull their\n   information from canonical data sources in order to reduce redundant\n\
    \   administrative processes and ensure information accuracy.  The\n   following\
    \ design criteria are established for this architecture.  The\n   architecture\
    \ will:\n   1)   enable endpoint information to be associated with people.\n \
    \       Alternately it enables endpoint information to be associated\n       \
    \ with resources such as conference rooms or classrooms;\n   2)   enable online\
    \ searchable \"white pages\" where dialling\n        information (e.g., endpoint\
    \ addresses) can be found, along with\n        other \"traditional\" directory\
    \ information about a user, such as\n        name, address, telephone, email,\
    \ etc.;\n   3)   enable all endpoint information to be stored in a canonical data\n\
    \        source (the Directory), rather than local to the call server, so\n  \
    \      that endpoints can be managed through manipulations of an\n        enterprise\
    \ directory, rather than by direct entry into the call\n        server;\n   4)\
    \   support the creation of very large-scale distributed\n        directories.\
    \  These include white pages \"portals\" that allow\n        searching for users\
    \ across multiple institutional directories.\n        In this application, each\
    \ enterprise directory registers itself\n        with (or is unknowingly discovered\
    \ by) a directory of\n        directories that is capable of searching across\
    \ multiple LDAP\n        directories;\n   5)   be able to support multiple instances\
    \ of endpoints per user or\n        resource;\n   6)   represent endpoints that\
    \ support more than one protocol, for\n        example, endpoints that are both\
    \ H.320 and H.323;\n   7)   store enough information about endpoint configuration\
    \ so that\n        correct configuration settings can be documented to end users\
    \ on\n        a per-endpoint basis, as a support tool, or loaded automatically\n\
    \        into the endpoint;\n   8)   be extendible as necessary to allow implementation-specific\n\
    \        attributes to be included;\n   9)   be non-invasive to the enterprise\
    \ directory, so that support for\n        multimedia conferencing can be added\
    \ in a modular fashion\n        without significant changes to the enterprise\
    \ directory.\n   The scope of this Recommendation does not include extensions\
    \ of\n   functionality to protocols as defined within the protocols\n   themselves.\
    \  It is not the intent of the Recommendation to add\n   features, but merely\
    \ to represent existing protocol attributes.  The\n   exception to this case is\
    \ when functionality is implied by the\n   directory itself, such as the commPrivate\
    \ attribute.\n4.1.2.  Extending the Schema\n   H.350 object classes may be extended\
    \ as necessary for specific\n   implementations.  For example, a class may be\
    \ extended to support\n   billing reference codes.  Extensions to the schema are\
    \ not considered\n   as part of the Recommendation and do not signify compliance.\n\
    \   In some cases it may be necessary to extend the H.350 schemas in\n   order\
    \ to represent more information than is supported by the\n   Recommendations.\
    \  This may be important for developers that implement\n   proprietary endpoint\
    \ functionality that needs to be represented by\n   attributes in the directory.\
    \  It may also be important for enterprise\n   applications.  For example 'modelNumber',\
    \ and 'accountNumber' are\n   examples of attributes that are not defined in the\
    \ Recommendation but\n   may be useful if implemented.  Adding attributes to this\
    \ architecture\n   must be done in a way that does not break compatibility with\
    \ this\n   Recommendation.\n   A full discussion of schema design and extension\
    \ is beyond the scope\n   of this Recommendation.  See IETF RFC 2252 for details.\
    \  Two basic\n   approaches to schema extension that do not break compatibility\
    \ with\n   this Recommendation, are extension through subclass and extension\n\
    \   through the use of auxiliary classes.\n4.1.2.1.  Extension Through Subclass\n\
    \   It is possible to create a subclass of an existing predefined object\n   class\
    \ in order to add new attributes to it.  To create a subclass, a\n   new object\
    \ class must be defined, that is a subclass of the existing\n   one, by indicating\
    \ in the definition of the new class that the\n   existing class is its superior.\
    \  Once the subclass is created, new\n   attributes can be defined within it.\n\
    \   The following example shows how the commObject class can be\n   subclassed\
    \ in order to add an attribute to represent a billing\n   account and a billing\
    \ manager.\n   objectclass ( BillingInfo-OID\n   NAME 'BillingInfo'\n   DESC 'Billing\
    \ Reference Information'\n   SUP commObject STRUCTURAL\n   MAY ( BillingAccount\
    \ $ BillingManager $ )\n   )\n   Note that BillingInfo-OID must be replaced by\
    \ an actual OID.  Also\n   note that, whenever a structural class is extended,\
    \ its subclass must\n   also be structural.\n   The following sample entry shows\
    \ the newly created attributes.  This\n   example also uses ITU-T Rec. H.350.1\
    \ for h323Identity.\n   dn: commUniqueId=2000,ou=h323identity, dc=company, dc=com\n\
    \   objectclass: top\n   objectclass: commObject\n   objectclass: h323Identity\n\
    \   objectclass: BillingInfo\n   commUniqueId: 2000\n   BillingAccount: 0023456\n\
    \   BillingManager: John Smith\n   Note that this example and approach demonstrate\
    \ extension of the\n   general commObject object class, and not any individual\
    \ H.350.x\n   classes.  If it is desired to extend an H.350.x auxiliary class,\
    \ then\n   that should be accomplished through the definition of additional\n\
    \   auxiliary classes that support the desired attributes, as described\n   in\
    \ section 4.1.2.2.\n4.1.2.2.  Extension Through The Use Of Auxiliary Classes\n\
    \   It is possible to add attributes to an LDAP entry by defining an\n   auxiliary\
    \ class containing the new attributes and applying those\n   attributes to instantiated\
    \ values in the directory.  The auxiliary\n   class will not be subclassed from\
    \ any existing object class.  Note\n   that it should have the special class top\
    \ as its superior.  The\n   following example creates the same billing account\
    \ and billing\n   manager attributes as the previous example, but does so by defining\n\
    \   them in their own auxiliary class.\n   objectclass ( BillingInfo-OID\n   NAME\
    \ 'BillingInfo'\n   DESC 'Billing Reference Information'\n   SUP top AUXILIARY\n\
    \   MAY ( BillingAccount $ BillingManager $ )\n   )\n   Note how the superior\
    \ was changed from commObject to top and the\n   object class changed from being\
    \ a structural to auxiliary.\n   It is recommended that all attributes in the\
    \ auxiliary class be\n   optional rather than mandatory.  In this way, the auxiliary\
    \ object\n   class itself can be associated with an entry regardless of whether\n\
    \   any values for its attributes are present.\n   The following example shows\
    \ a sample endpoint that utilizes the new\n   auxiliary class and attributes.\
    \  This example also uses H.350.1 for\n   h323Identity.\n   dn: commUniqueId=2000,ou=h323identity,\
    \ dc=company, dc=com\n   objectclass: top\n   objectclass: commObject\n   objectclass:\
    \ BillingInfo\n   commUniqueId: 2000\n   BillingAccount: 0023456\n   BillingManager:\
    \ John Smith\n4.1.2.3.  Object Identifiers\n   An attribute's Object Identifier\
    \ (OID) is a unique numerical\n   identifier usually written as a sequence of\
    \ integers separated by\n   dots.  For example, the OID for the commUniqueId is\n\
    \   0.0.8.350.1.1.2.1.1.  All attributes must have an OID.  OIDs can be\n   obtained\
    \ from anyone who has one and is willing to delegate a portion\n   of it as an\
    \ arc, keeping a record of the arc to avoid duplication.\n   Further, the Internet\
    \ Assigned Numbers Authority (IANA) gives out\n   OIDs to any organization that\
    \ asks.\n4.2. commURIObject Definition\n   Auxiliary object class that contains\
    \ the commURI attribute.  This\n   attribute is added to a person or resource\
    \ object to associate one or\n   more commObject instances with that object. \
    \ Its values are LDAP URIs\n   that point to the associated commObjects, for example,\
    \ to a user's\n   H.323 conferencing station and SIP IP phone.  Note that multiple\n\
    \   instances of commURI need not point to the same commObject directory.\n  \
    \ In fact, each commURI instance could point to an endpoint managed by\n   a different\
    \ service provider.\n4.2.1.  commURIObject\n   OID: 0.0.8.350.1.1.1.2.1\n   objectclasses:\
    \ (0.0.8.350.1.1.1.2.1\n   NAME 'commURIObject'\n   DESC 'object that contains\
    \ the URI attribute type'\n   SUP top AUXILIARY\n   MAY ( commURI )\n   )\n4.2.2.\
    \  commURI\n   OID: 0.0.8.350.1.1.1.1.1\n   attributetypes:( 0.0.8.350.1.1.1.1.1\n\
    \   NAME 'commURI'\n   DESC 'Labeled URI format to point to the distinguished\
    \ name of the\n   commUniqueId'\n   EQUALITY caseExactMatch\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\
    \ )\n   Application utility class\n        Standard\n   Number of values\n   \
    \     multi\n   Definition\n        Labelled URI containing an LDAP URL identifying\
    \ the directory\n   containing the referenced commObject instance.  The search\
    \ filter\n   specified by this LDAP URL shall specify an equality search of the\n\
    \   commUniqueId attribute of the commObject class.\n   Permissible values (if\
    \ controlled)\n   Notes\n        Used to find the endpoint of the user in question.\
    \  The label\n   field may be used to represent the function of the endpoint,\
    \ such as\n   'home IP phone' or 'desktop video' for user interface display\n\
    \   purposes.\n        Note that the label portion of the field may contain spaces\
    \ as\n   in the example below showing 'desktop video'.\n   Semantics\n   Example\
    \ applications for which this attribute would be useful\n   Example (LDIF fragment)\n\
    \   commURI:\n   ldap://directory.acme.com/dc=acme,dc=com??sub?(commUniqueId=bob)\n\
    \   desktop video\n4.3.  CommObject Definition\n   Abstraction of video or voice\
    \ over IP device.  The commObject class\n   permits an endpoint (H.323 endpoint\
    \ or SIP user agent or other\n   protocol endpoint) and all their aliases to be\
    \ represented by a\n   single entry in a directory.  Note that every directory\
    \ entry should\n   contain commObject as the entry's structural object class.\
    \  That\n   entry may also contain H.350.x auxiliary classes.\n4.3.1.  commObject\n\
    \   OID: 0.0.8.350.1.1.2.2.1\n   objectclasses: (0.0.8.350.1.1.2.2.1\n   NAME\
    \ 'commObject'\n   DESC 'object that contains the Communication attributes'\n\
    \   SUP top STRUCTURAL\n   MUST commUniqueId\n   MAY ( commOwner $ commPrivate\
    \ )\n   )\n4.3.2.  commUniqueId\n   OID: 0.0.8.350.1.1.2.1.1\n   attributetypes:\
    \ (0.0.8.350.1.1.2.1.1\n   NAME 'commUniqueId'\n   DESC 'To hold the endpoints\
    \ unique Id'\n   EQUALITY caseIgnoreIA5Match\n   SUBSTR caseIgnoreIA5SubstringsMatch\n\
    \   SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n   Application utility class\n   \
    \     standard\n   Number of values\n        multi\n   Definition\n        The\
    \ endpoint's unique ID.\n   Permissible values (if controlled)\n   Notes\n   \
    \     This is the RDN of this object.  In practice, there will always\n   be one\
    \ and only one commUniqueId for every endpoint.  This attribute\n   uniquely identifies\
    \ an endpoint in the commObject directory.  It must\n   be unique within that\
    \ directory, but need not be unique globally.\n   This attribute has no relationship\
    \ to the enterprise directory.\n   Semantics\n   Example applications for which\
    \ this attribute would be useful\n   Example (LDIF fragment)\n   commUniqueId:\
    \ bob\n4.3.3.  commOwner\n   OID: 0.0.8.350.1.1.2.1.2\n   attributetypes: 0.0.8.350.1.1.2.1.2\n\
    \   NAME 'commOwner'\n   DESC 'Labeled URI to point back to the original owner'\n\
    \   EQUALITY caseExactMatch\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n   Application\
    \ utility class\n        Standard\n   Number of values\n        multi\n   Definition\n\
    \        Labelled URI format to point back to the person or resource\n   object\
    \ associated with this entry.\n   Permissible values (if controlled)\n   Notes\n\
    \        Used as a reverse entry finder of the owner(s).  This attribute\n   may\
    \ point to groups.  Note that this URI can point to a cn, but in\n   applications\
    \ where it is desired to bind authentication information\n   across both the commObject\
    \ and enterprise directories, it may be\n   desirable that commOwner points to\
    \ a dn rather than a cn, thus\n   uniquely identifying the owner of the commObject.\n\
    \   Semantics\n   Example applications for which this attribute would be useful\n\
    \   Example (LDIF fragment)\n   commOwner:\n   ldap://directory.acme.com/dc=acme,dc=com??sub?(cn=bob%20smith)\n\
    \   commOwner: uid=bob,ou=people,dc=acme,dc=com\n4.3.4.  commPrivate\n   OID:\
    \ 0.0.8.350.1.1.2.1.3\n   attributetypes: (0.0.8.350.1.1.2.1.3\n   NAME 'commPrivate'\n\
    \   DESC 'To decide whether the entry is visible to world or not'\n    SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.26 )\n   Application utility class\n        Standard\n\
    \   Number of values\n        multi\n   Definition\n        To be used by the\
    \ user and indicate privacy options for an\n   endpoint, i.e., unlisted number.\n\
    \   Permissible values (if controlled)\n   Notes\n        This attribute is defined\
    \ as Boolean.  Future version of this\n   Recommendation may develop a controlled\
    \ vocabulary for this\n   attribute to accommodate multiple types of privacy.\n\
    \   Semantics\n   Example applications for which this attribute would be useful\n\
    \   Example (LDIF fragment)\n   commPrivate: true\n4.4.  CommObject LDIF Files\n\
    \   This section contains a schema configuration file for commURIObject\n   and\
    \ commObject that can be used to configure an LDAP server to\n   support these\
    \ classes.\n4.4.1.  LDIF for commURIObject\n# Communication Object Schema\n#\n\
    # Schema for Representing Communication Objects in an LDAP Directory\n#\n# Abstract\n\
    #\n# This document defines the schema for representing Communication\n# objects\
    \ in an LDAP directory [LDAPv3].  It defines schema elements\n# to represent a\
    \ communication object URI [commURIObject].\n#\n#\n#\n#                     .1\
    \ = Communication related work\n#                     .1.1 = commURIObject\n#\
    \                     .1.1.1 = attributes\n#                     .1.1.2 = objectclass\n\
    #                     .1.1.3 = syntax\n#\n# Attribute Type Definitions\n#\n# \
    \   The following attribute types are defined in this document:\n#\n#        commURI\n\
    dn: cn=schema\nchangetype: modify\n#\n# if you need to change the definition of\
    \ an attribute,\n#            then first delete and re-add in one step\n#\n# if\
    \ this is the first time you are adding the commObject\n# objectclass using this\
    \ LDIF file, then you should comment\n# out the delete attributetypes modification\
    \ since this will\n# fail.  Alternatively, if your ldapmodify has a switch to\
    \ continue\n# on errors, then just use that switch -- if you're careful\n#\ndelete:\
    \ attributetypes\nattributetypes: (0.0.8.350.1.1.1.1.1 NAME 'commURI' )\n-\n#\n\
    # re-add the attributes -- in case there is a change of definition\n#\n#\nadd:\
    \ attributetypes\nattributetypes: (0.0.8.350.1.1.1.1.1\n     NAME 'commURI'\n\
    \     DESC 'Labeled URI format to point to the distinguished name of\nthe commUniqueId'\n\
    \     EQUALITY caseExactMatch\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n-\n\
    # Object Class Definitions\n#\n#    The following object classes are defined in\
    \ this document:\n#\n#        commURIObject\n#\n# commURIObject\n#\n#    This\
    \ auxiliary object class represents a URI attribute type\n#\n#\ndelete: objectclasses\n\
    objectclasses: (0.0.8.350.1.1.1.2.1 NAME 'commURIObject' )\n-\nadd: objectclasses\n\
    objectclasses: (0.0.8.350.1.1.1.2.1\n     NAME 'commURIObject'\n     DESC 'object\
    \ that contains the URI attribute type'\n     SUP top AUXILIARY\n     MAY ( commURI\
    \ )\n        )\n-\n#\n# end of LDIF\n#\n4.4.2.  LDIF for commObject\n# Communication\
    \ Object Schema\n#\n# Schema for Representing Communication Objects in an LDAP\
    \ Directory\n#\n# Abstract\n#\n# This document defines the schema for representing\
    \ Communication\n# objects in an LDAP directory [LDAPv3].  It defines schema elements\n\
    # to represent a communication object [commObject].\n#\n#\n#                 \
    \    .1 = Communication related work\n#                     .1.2 = commObject\n\
    #                     .1.2.1 = attributes\n#                     .1.2.2 = objectclass\n\
    #                     .1.2.3 = syntax\n#\n#\n# Attribute Type Definitions\n#\n\
    #    The following attribute types are defined in this document:\n#\n#       \
    \ commUniqueId\n#        commOwner\n#        commPrivate\ndn: cn=schema\nchangetype:\
    \ modify\n#\n# if you need to change the definition of an attribute,\n#      \
    \      then first delete and re-add in one step\n#\n# if this is the first time\
    \ you are adding the commObject\n# objectclass using this LDIF file, then you\
    \ should comment\n# out the delete attributetypes modification since this will\n\
    # fail. Alternatively, if your ldapmodify has a switch to continue\n# on errors,\
    \ then just use that switch -- if you're careful\n#\ndelete: attributetypes\n\
    attributetypes: (0.0.8.350.1.1.2.1.1 NAME 'commUniqueId' )\nattributetypes: (0.0.8.350.1.1.2.1.2\
    \ NAME 'commOwner' )\nattributetypes: (0.0.8.350.1.1.2.1.3 NAME 'commPrivate'\
    \ )\n-\n#\n# re-add the attributes -- in case there is a change of definition\n\
    #\n#\nadd: attributetypes\nattributetypes: (0.0.8.350.1.1.2.1.1\n     NAME 'commUniqueId'\n\
    \     DESC 'To hold the endpoints unique Id'\n     EQUALITY caseIgnoreIA5Match\n\
    \     SUBSTR caseIgnoreIA5SubstringsMatch\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26\
    \ )\nattributetypes: (0.0.8.350.1.1.2.1.2\n     NAME 'commOwner'\n     DESC 'Labeled\
    \ URI to point back to the original owner'\n     EQUALITY caseExactMatch\n   \
    \  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\nattributetypes: (0.0.8.350.1.1.2.1.3\n\
    \     NAME 'commPrivate'\n     DESC 'To decide whether the entry is visible to\
    \ world or not'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n-\n# Object Class\
    \ Definitions\n#\n#    The following object classes are defined in this document:\n\
    #\n#        commObject\n#\n# commObject\n#\n#\ndelete: objectclasses\nobjectclasses:\
    \ (0.0.8.350.1.1.2.2.1 NAME 'commObject' )\n-\nadd: objectclasses\nobjectclasses:\
    \ (0.0.8.350.1.1.2.2.1\n     NAME 'commObject'\n     DESC 'object that contains\
    \ the Communication attributes'\n     SUP top STRUCTURAL\n     MUST commUniqueId\n\
    \     MAY ( commOwner $ commPrivate )\n     )\n-\n#\n# end of LDIF\n#\n4.5.  H.350\
    \ Annex A Indexing Profile\n   Indexing of attributes is an implementation-specific\
    \ activity and\n   depends upon the desired application.  Non-indexed attributes\
    \ can\n   result in search times sufficiently long to render some applications\n\
    \   unusable.  Notably, user and alias lookup should be fast.  The Annex\n   A\
    \ Indexing Profile describes an indexing configuration for commObject\n   directories\
    \ that will be optimized for use in directory of\n   directories applications.\
    \  Use of this profile is optional.\n   commURI: no recommendation\n   commUniqueId:\
    \ equality\n   commOwner: presence\n   commPrivate: presence\n5.  H.350.4\n  \
    \ The normative text of H.350 is reproduced in this section.\n5.1.  Scope\n  \
    \ This Recommendation describes an LDAP directory services architecture\n   for\
    \ multimedia conferencing using SIP.  In particular, it defines an\n   LDAP schema\
    \ to represent SIP User Agents (UAs) on the network and\n   associate those endpoints\
    \ with users.\n   This Recommendation is intended to supplement the CommObject\n\
    \   directory architecture as discussed in ITU-T Rec.  H.350, and not\n   intended\
    \ to be used as a stand-alone architecture.  The\n   implementation of this LDAP\
    \ schema, together with the use of the\n   H.350 CommObject architecture, facilitates\
    \ the integration of SIP\n   User Agents and conferencing devices into existing\
    \ Enterprise\n   Directories, thus allowing the user to perform white page lookups\
    \ and\n   access clickable dialling supported by SIP devices.  The primary\n \
    \  reasons for implementing this schema include those listed in ITU-T\n   Rec.\
    \ H.350 (the CommObject class definition) as they apply\n   specifically to the\
    \ use of SIP UAs, and to facilitate vendors making\n   SIP services more readily\
    \ available to their users.\n   The scope of this Recommendation includes recommendations\
    \ for the\n   architecture to integrate endpoint information for endpoints using\n\
    \   SIP into existing enterprise directories and white pages.\n   The scope of\
    \ this Recommendation does not include normative methods\n   for the use of the\
    \ LDAP directory itself or the data it contains. The\n   purpose of the schema\
    \ is not to represent all possible data elements\n   in the SIP protocol, but\
    \ rather to represent the minimal set required\n   to accomplish the design goals\
    \ enumerated in ITU-T Rec. H.350.\n   Note that SIP provides well-defined methods\
    \ for discovering registrar\n   addresses and locating users on the network. \
    \ Some of the attributes\n   defined here are intended for more trivial or manual\
    \ implementations\n   and may not be needed for all applications.  For example,\n\
    \   SIPIdentityRegistrarAddress and SIPIdentityAddress may not be needed\n   for\
    \ many applications, but are included here for completeness.  Thus,\n   SIPIdentitySIPURI\
    \ is the primary attribute of interest that will be\n   served out, especially\
    \ for white page directory applications.\n5.1.1.  Extending the schema\n   The\
    \ SIPIdentity classes may be extended as necessary for specific\n   implementations.\
    \  See the base of ITU-T Rec. H.350 for a discussion\n   on schema extension.\n\
    5.2.  Object class definitions\n   The SIPIdentity object class represents SIP\
    \ User Agents (UAs).  It is\n   an auxiliary class and is derived from the commObject\
    \ class, which is\n   defined in the ITU-T Rec. H.350.\n5.2.1.  SIPIdentity\n\
    \   OID: 0.0.8.350.1.1.6.2.1\n   objectclasses: (0.0.8.350.1.1.6.2.1\n   NAME\
    \ 'SIPIdentity'\n   DESC 'SIPIdentity object'\n   SUP top AUXILIARY\n   MAY (\
    \ SIPIdentitySIPURI $ SIPIdentityRegistrarAddress $\n      SIPIdentityProxyAddress\
    \ $ SIPIdentityUserName $\n      SIPIdentityPassword $ SIPIdentityServiceLevel\
    \ $\n      userSMIMECertificate )\n   )\n5.2.2.  SIPIdentitySIPURI\n   OID: 0.0.8.350.1.1.6.1.1\n\
    \   attributetypes: (0.0.8.350.1.1.6.1.1\n   NAME 'SIPIdentitySIPURI'\n   DESC\
    \ 'Universal Resource Indicator of the SIP UA'\n   EQUALITY caseExactMatch\n \
    \  SUBSTR caseExactSubstringsMatch\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n\
    \   Application utility class\n        standard\n   Number of values\n       \
    \ multi\n   Definition\n        Uniform Resource Identifier that identifies a\
    \ communication\n   resource in SIP.  Usually contains a user name and a host\
    \ name and is\n   often similar in format to an email address.\n   Permissible\
    \ values (if controlled)\n   Notes\n        This URI may institute SIP or SIPS\
    \ (secure).  In the event that\n   SIPS is instituted, the URI must reflect that\
    \ it is using SIPS as\n   opposed to SIP.  See Examples below.\n   Semantics\n\
    \   Example applications for which this attribute would be useful\n        Online\
    \ representation of most current listing of a user's\n   SIP(S) UA.\n   Example\n\
    \   SIPIdentitySIPURI: sip:alice@foo.com          // SIP example\n   SIPIdentitySIPURI:\
    \ sip:alice@152.2.158.212    // SIP example\n   SIPIdentitySIPURI: sips:bob@birmingham.edu\
    \    // SIPS example\n5.2.3.  SIPIdentityRegistrarAddress\n   OID: 0.0.8.350.1.1.6.1.2\n\
    \   attributetypes: (0.0.8.350.1.1.6.1.2\n   NAME 'SIPIdentityRegistrarAddress'\n\
    \   DESC 'specifies the location of the registrar'\n   EQUALITY caseIgnoreIA5Match\n\
    \   SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n   Application utility class\n   \
    \     Standard\n   Number of values\n        multi\n   Definition\n        Address\
    \ for the domain to which the server that handles\n   REGISTER requests and forwarding\
    \ to the location server for a\n   particular domain belongs.\n   Permissible\
    \ values (if controlled)\n   Notes\n        Note that RFC 3261 states that user\
    \ agents can discover their\n   registrar address by configuration, using the\
    \ address-of-record, or\n   by multicast.  The first scenario, by configuration,\
    \ is noted as out\n   of scope for RFC 3261.  This attribute may be used for the\
    \ first\n   scenario.  It can be accomplished manually, (e.g., a web page that\n\
    \   displays a user's correct registrar address) or automatically with\n   an\
    \ H.350.4 aware user agent.\n   Semantics\n   Example applications for which this\
    \ attribute would be useful\n        white pages, a web page that displays a user's\
    \ correct\n   configuration information.\n   Example (LDIF fragment)\n   SIPIdentityRegistrarAddress:\
    \ 152.2.15.22     //IP address example\n   SIPIdentityRegistrarAddress: sipregistrar.unc.edu\
    \  //FQDN example\n5.2.4.  SIPIdentityProxyAddress\n   OID: 0.0.8.350.1.1.6.1.3\n\
    \   attributetypes: (0.0.8.350.1.1.6.1.3\n   NAME 'SIPIdentityProxyAddress'\n\
    \   DESC 'Specifies the location of the SIP Proxy'\n   EQUALITY caseIgnoreIA5Match\n\
    \   SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n   Application utility class\n   \
    \     Standard\n   Number of values\n        multi\n   Definition\n        Address\
    \ which specifies the domain location of SIP proxy within\n   a domain.  RFC 3261\
    \ defines the role of the SIP proxy.\n   Permissible values (if controlled)\n\
    \   Notes\n        SIP User Agents are not REQUIRED to use a proxy, but will in\n\
    \   many cases.\n   Semantics\n   Example applications for which this attribute\
    \ would be useful\n        white pages, a web page that displays a user's correct\n\
    \   configuration information.\n   Example (LDIF fragment)\n   SIPIdentityProxyAddress:\
    \ 172.2.13.234     //IP address example\n   SIPIdentityProxyAddress: sipproxy.unc.edu\
    \  //FQDN example\n5.2.5.  SIPIdentityAddress\n   OID: 0.0.8.350.1.1.6.1.4\n \
    \  attributetypes: (0.0.8.350.1.1.6.1.4\n   NAME 'SIPIdentityAddress'\n   DESC\
    \ 'IP address or FQDN of the UA'\n   EQUALITY caseIgnoreIA5Match\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.26\
    \ )\n   Application utility class\n        standard\n   Number of values\n   \
    \     multi\n   Definition\n        Specifies the IP address or fully qualified\
    \ domain name of the\n   UA.\n   Permissible values (if controlled)\n   Notes\n\
    \        This attribute may be useful for applications in which UA to UA\n   communication\
    \ is direct, not involving a proxy or registrar.\n   Example applications for\
    \ which this attribute would be useful\n        A web page that displays a user's\
    \ proper user agent\n   configuration information.\n   Example (LDIF fragment)\n\
    \   SIPIdentityAddress: 152.2.121.36       // IP address example\n   SIPIdentityAddress:\
    \ ipPhone.foo.org    // FQDN example\n5.2.6.  SIPIdentityPassword\n   OID: 0.0.8.350.1.1.6.1.5\n\
    \   attributetypes: (0.0.8.350.1.1.6.1.5\n   NAME 'SIPIdentityPassword'\n   DESC\
    \ 'The user agent SIP password '\n   EQUALITY octetStringMatch\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.40\
    \ )\n   Application utility class\n        Standard\n   Number of values\n   \
    \     multi\n   Definition\n        The SIP user agent's password, used for the\
    \ HTTP digest\n   authentication scheme as defined in RFC 2617.\n   Permissible\
    \ values (if controlled)\n   Notes\n        Because RFC 2069, which was made obsolete\
    \ by RFC 2617, was used\n   as the basis for HTTP Digest in RFC 2543, any SIP\
    \ servers supporting\n   RFC 2617 must ensure backward compatibility with RFC\
    \ 2069.\n        This SIPIdentityUserName, together with SIPIdentityPassword,\n\
    \   are reserved for the purpose of use with Digest Access\n   Authentication,\
    \ and not intended for use with Basic Authentication\n   methods.\n        LDAP\
    \ provides one method to store user passwords for reference.\n   If passwords\
    \ are stored in LDAP it makes the LDAP server a\n   particularly valuable target\
    \ for attack.  Implementors are encouraged\n   to exercise caution and implement\
    \ appropriate security procedures\n   such as encryption, access control, and\
    \ transport layer security for\n   access to this attribute.\n   Semantics\n \
    \  Example applications for which this attribute would be useful\n   Example (LDIF\
    \ fragment)\n   SIPIdentityPassword: 36zxJmCIB18dM0FVAj\n5.2.7.  SIPIdentityUserName\n\
    \   OID: 0.0.8.350.1.1.6.1.6\n   attributetypes: (0.0.8.350.1.1.6.1.6\n   NAME\
    \ 'SIPIdentityUserName'\n   DESC 'The user agent user name.'\n   EQUALITY caseIgnoreMatch\n\
    \   SUBSTR caseIgnoreSubstringsMatch\n   SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\
    \ )\n   Application utility class\n        Standard\n   Number of values\n   \
    \     multi\n   Definition\n        The SIP user agent's user name, used for the\
    \ HTTP digest\n   authentication scheme as defined in RFC 2617.\n   Permissible\
    \ values (if controlled)\n   Notes\n        Because RFC 2069, which was made obsolete\
    \ by RFC 2617, was used\n   as the basis for HTTP Digest Authentication in RFC\
    \ 2543, any SIP\n   servers supporting HTTP Digest Authentication as defined in\
    \ RFC 2617\n   must ensure backward compatibility with RFC 2069.\n        This\
    \ SIPIdentityUserName, together with SIPIdentityPassword,\n   are reserved for\
    \ the purpose of use with Digest Access\n   Authentication, and not intended for\
    \ use with Basic Authentication\n   methods.\n        Note that in many cases\
    \ the user name will be parsed from the\n   user@proxy.domain portion of the SIP\
    \ URI.  In that case it may not be\n   necessary to populate this attribute.\n\
    \   Semantics\n   Example applications for which this attribute would be useful\n\
    \   Example (LDIF fragment)\n   SIPIdentityUserName: nelkhour\n5.2.8.  SIPIdentityServiceLevel\n\
    \   OID: 0.0.8.350.1.1.6.1.7\n   attributetypes: (0.0.8.350.1.1.6.1.7\n   NAME\
    \ 'SIPIdentityServiceLevel'\n   DESC 'To define services that a user can belong\
    \ to.'\n   EQUALITY caseIgnoreIA5Match\n   SUBSTR caseIgnoreIA5SubstringsMatch\n\
    \   SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n   Application utility class\n   \
    \     Standard\n   Number of values\n        multi\n   Definition\n        This\
    \ describes the level of services a user can belong to.\n   Permissible values\
    \ (if controlled)\n   Notes\n        This attribute does not represent a data\
    \ element found in SIP.\n   SIP itself does not support distinctions in service\
    \ levels.  Instead,\n   this attribute provides a mechanism for the storage of\
    \ service level\n   information directly in LDAP.  This mapping allows service\
    \ providers\n   to adapt to an existing LDAP directory without changing the values\n\
    \   of the SIPIdentityServiceLevel instances in the directory.\n   Semantics\n\
    \   Example applications for which this attribute would be useful\n   Example\
    \ (LDIF fragment)\n   SIPIdentityServiceLevel: premium\n5.3.  SIPIdentity LDIF\
    \ Files\n   This clause contains a schema configuration file for SIPIdentity\n\
    \   that can be used to configure an LDAP server to support this class.\n# SIPIdentity\
    \ Object Schema\n#\n# Schema for representing SIPIdentity Object in an LDAP Directory\n\
    #\n# Abstract\n#\n# This Recommendation defines the schema for representing\n\
    SIPIdentity\n# object in an LDAP directory [LDAPv3].  It defines schema elements\n\
    # to represent an SIPIdentity object [SIPIdentity].\n#\n#                    \
    \ .1 = Communication related work\n#                     .1.6 = SIPIdentity\n\
    #                     .1.6.1 = attributes\n#                     .1.6.2 = objectclass\n\
    #                     .1.6.3 = syntax\n#\n#\n#\n# Attribute Type Definitions\n\
    #\n#    The following attribute types are defined in this\nRecommendation:\n#\n\
    #     SIPIdentitySIPURI\n#     SIPIdentityRegistrarAddress\n#     SIPIdentityProxyAddress\n\
    #     SIPIdentityAddress\n#     SIPIdentityPassword\n#     SIPIdentityUserName\n\
    #     SIPIdentityServiceLevel\ndn: cn=schema\nchangetype: modify\n#\n# if you\
    \ need to change the definition of an attribute,\n#            then first delete\
    \ and re-add in one step\n#\n# if this is the first time you are adding the SIPIdentity\n\
    # objectclass using this LDIF file, then you should comment\n# out the delete\
    \ attributetypes modification since this will\n# fail.  Alternatively, if your\
    \ ldapmodify has a switch to continue\n# on errors, then just use that switch\
    \ -- if you are careful\n#\ndelete: attributetypes\nattributetypes: (0.0.8.350.1.1.6.1.1\
    \ NAME 'SIPIdentitySIPURI' )\nattributetypes: (0.0.8.350.1.1.6.1.2 NAME 'SIPIdentityRegistrarAddress')\n\
    attributetypes: (0.0.8.350.1.1.6.1.3 NAME 'SIPIdentityProxyAddress')\nattributetypes:\
    \ (0.0.8.350.1.1.6.1.4 NAME 'SIPIdentityAddress' )\nattributetypes: (0.0.8.350.1.1.6.1.5\
    \ NAME 'SIPIdentityPassword' )\nattributetypes: (0.0.8.350.1.1.6.1.6 NAME 'SIPIdentityUserName'\
    \ )\nattributetypes: (0.0.8.350.1.1.6.1.7 NAME 'SIPIdentityServiceLevel')\n-\n\
    #\n# re-add the attributes -- in case there is a change of definition\n#\n#\n\
    add: attributetypes\nattributetypes: (0.0.8.350.1.1.6.1.1\n     NAME 'SIPIdentitySIPURI'\n\
    \     DESC 'Universal Resource Indicator of the SIP UA'\n     EQUALITY caseExactMatch\n\
    \     SUBSTR caseExactSubstringsMatch\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\
    \ )\nattributetypes: (0.0.8.350.1.1.6.1.2\n     NAME 'SIPIdentityRegistrarAddress'\n\
    \     DESC 'specifies the location of the registrar'\n     EQUALITY caseIgnoreIA5Match\n\
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\nattributetypes: (0.0.8.350.1.1.6.1.3\n\
    \     NAME 'SIPIdentityProxyAddress'\n     DESC 'Specifies the location of the\
    \ SIP Proxy'\n     EQUALITY caseIgnoreIA5Match\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26\
    \ )\nattributetypes: (0.0.8.350.1.1.6.1.4\n     NAME 'SIPIdentityAddress'\n  \
    \   DESC 'IP address of the UA'\n     EQUALITY caseIgnoreIA5Match\n     SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.26 )\nattributetypes: (0.0.8.350.1.1.6.1.5\n    \
    \ NAME 'SIPIdentityPassword'\n     DESC 'The user agent SIP password '\n     EQUALITY\
    \ octetStringMatch\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.40 )\nattributetypes:\
    \ (0.0.8.350.1.1.6.1.6\n     NAME 'SIPIdentityUserName'\n     DESC 'The user agent\
    \ user name.'\n     EQUALITY caseIgnoreMatch\n     SUBSTR caseIgnoreSubstringsMatch\n\
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\nattributetypes: (0.0.8.350.1.1.6.1.7\n\
    \     NAME 'SIPIdentityServiceLevel'\n     DESC 'To define services that a user\
    \ can belong to.'\n     EQUALITY caseIgnoreIA5Match\n     SUBSTR caseIgnoreIA5SubstringsMatch\n\
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )\n-\n# Object Class Definitions\n\
    #\n#    The following object class is defined in this Recommendation:\n#\n#  \
    \      SIPIdentity\n#\n# SIPIdentity\n#\n#\ndelete: objectclasses\nobjectclasses:\
    \ (0.0.8.350.1.1.6.2.1 NAME 'SIPIdentity' )\n-\nadd: objectclasses\nobjectclasses:\
    \ (0.0.8.350.1.1.6.2.1\n     NAME 'SIPIdentity'\n     DESC 'SIPIdentity object'\n\
    \     SUP top AUXILIARY\n     MAY ( SIPIdentitySIPURI $ SIPIdentityRegistrarAddress\
    \ $\n          SIPIdentityProxyAddress $ SIPIdentityAddress $\n          SIPIdentityPassword\
    \ $ SIPIdentityUserName $\n          SIPIdentityServiceLevel $ userSMIMECertificate\
    \ )\n     )\n-\n#\n# end of LDIF\n#\n5.4.  H.350.4 Annex A Indexing profile\n\
    \   Indexing of attributes is an implementation-specific activity and\n   depends\
    \ upon the desired application.  Non-indexed attributes can\n   result in search\
    \ times sufficiently long to render some applications\n   unusable.  Notably,\
    \ user and alias lookup should be fast.  The Annex\n   A Indexing Profile describes\
    \ an indexing configuration for\n   SIPIdentity directories that will be optimized\
    \ for use in directory\n   of directories applications.  Use of this profile is\
    \ optional.\n   SIPIdentitySIPURI: equality\n   SIPIdentityRegistrarAddress: no\
    \ recommendation\n   SIPIdentityProxyAddress: no recommendation\n   SIPIdentityAddress:\
    \ equality\n   SIPIdentityUserName: equality\n   SIPIdentityPassword: no recommendation\n\
    \   SIPIdentityServiceLevel: equality\n6.  Acknowledgments\n   We are grateful\
    \ to numerous colleagues for reaching across multiple\n   boundaries of standards\
    \ bodies, research networks, academia and\n   private industry in order to produce\
    \ an architecture that works\n   toward integrating multimedia conferencing deployments.\
    \  In\n   particular, standards from both IETF and ITU-T were drawn from\n   extensively,\
    \ and the architecture is meant to serve all communities.\n   This work developed\
    \ out of the Video Conferencing Middleware\n   (VidMid-VC) working group, a joint\
    \ effort of Internet2\n   (www.internet2.edu) and the Video Development Initiative\n\
    \   (www.vide.net).  The architecture was developed in response to\n   deployment\
    \ challenges discovered in the ViDeNet\n   (https//:videnet.unc.edu) academic\
    \ test bed providing video and voice\n   over IP infrastructure across research\
    \ networks internationally.\n   This work was supported in part by a grant from\
    \ the United States\n   National Science Foundation contract number ANI-0222710.\n\
    7.  Security Considerations\n   This section is not present in the ITU-T standard,\
    \ but gives\n   information for the IETF community.  Its content has the consensus\
    \ of\n   the ITU-T Study Group 16.\n   H.350 does not alter the security architectures\
    \ of any particular\n   protocol.  However, it does offer a standardized place\
    \ to store\n   authentication credentials where appropriate.  It should be noted\n\
    \   that both H.323 and SIP support shared secret authentication (H.235\n   Annex\
    \ D and HTTP Digest, respectively).  These approaches require\n   that the call\
    \ server have access to the password.  Thus, if the call\n   server or H.350 directory\
    \ is compromised, passwords also may become\n   compromised.  These weaknesses\
    \ may be due to weaknesses in the\n   systems (H.350 directory or call servers)\
    \ and their operation rather\n   than in H.350 per se.\n   The userSMIMECertificate\
    \ attribute is defined in RFC 2798 (section\n   2.8) as a part of inetOrgPerson.\
    \  The SIP user agent's X.509\n   certificate can be stored in this attribute.\
    \  When the certificate is\n   present, it can be employed with S/MIME to provide\
    \ authentication,\n   integrity, and confidentiality as specified in RFC 3261\
    \ [5].\n   It is strongly encouraged that call servers and an H.350 directory\n\
    \   mutually authenticate each other before sharing information.\n   Further,\
    \ it is strongly encouraged that communications between H.350\n   directories\
    \ and call servers or endpoints happen over secure\n   communication channels\
    \ such as SSL or TLS.\n   Finally, access control lists on LDAP servers are a\
    \ matter of policy\n   and are not a part of the standard.  System administrators\
    \ are\n   advised to use common sense when setting access control on H.350\n \
    \  attributes.  For example, password attributes should only be\n   accessible\
    \ by the authenticated user, while address attributes might\n   be publicly available.\n\
    8.  References\n8.1.  Normative References\n   [1]  Hodges, J. and R. Morgan,\
    \ \"Lightweight Directory Access Protocol\n        (v3): Technical Specification\"\
    , RFC 3377, September 2002.\n   [2]  ITU-T Recommendation H.350, \"Directory services\
    \ architecture for\n        multimedia conferencing\", 2003.\n   [3]  ITU-T Recommendation\
    \ H.350.4, \"Directory services architecture\n        for SIP\", 2003.\n   [4]\
    \  Franks, J., Hallam-Baker P., Hostetler, J., Lawrence, S., Leach,\n        P.,\
    \ Luotonen, A., and L. Stewart, \"HTTP Authentication: Basic\n        and Digest\
    \ Access Authentication\", RFC 2617, June 1999.\n   [5]  Rosenberg, J., Schulzrinne,\
    \ H., Camarillo, G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley,\
    \ M., and E. Schooler, \"SIP:\n        Session Initiation Protocol\", RFC 3261,\
    \ June 2002.\n   [6]  Rosenberg, J. and H. Schulzrinne, \"Session Initiation Protocol\n\
    \        (SIP): Locating SIP Servers\", RFC 3263, June 2002.\n   [7]  Smith, M.,\
    \ \"Definition of the inetOrgPerson LDAP Object Class\",\n        RFC 2798, April\
    \ 2000.\n8.2.  Informative References\n   [8]  ITU-T Recommendation H.350.1, \"\
    Directory services architecture\n        for H.323\", 2003.\n   [9]  ITU-T Recommendation\
    \ H.350.2, \"Directory services architecture\n        for H.235\", 2003.\n   [10]\
    \ ITU-T Recommendation H.350.3, \"Directory services architecture\n        for\
    \ H.320\", 2003.\n   [11] ITU-T Recommendation H.350.5, \"Directory services architecture\n\
    \        for Non-Standard Protocols\", 2003.\n   [12] ITU-T Recommendation H.350.6,\
    \ \"Directory services architecture\n        for Call Forwarding and Preferences\"\
    , 2004.\n   [13] Howes T. and M. Smith, \"Understanding And Deploying LDAP\n \
    \       Directory Services\", New Riders Publishing, ISBN: 1578700701,\n     \
    \   1999.\n   [14] Howes T. and M. Smith, \"LDAP Programming Directory-Enabled\n\
    \        Applications with Lightweight Directory Access Protocol\", New\n    \
    \    Riders Publishing, ISBN: 1578700000, 1997.\n9.  Relationship to Other Specifications\n\
    \   This specification is an RFC publication of an ITU-T publication [4],\n  \
    \ without textual changes within the standard itself (Section 4).  The\n   present\
    \ section appears in the RFC publication only.  In order for\n   this specification\
    \ to be implemented properly, a number of standards\n   pertaining to LDAP [1],\
    \ [7], H.350 [2],[3], and SIP [4], [5], [6],\n   [7], need to be implemented in\
    \ whole or in part by the implementor.\n   For some background information on\
    \ the ITU and IETF directory service\n   protocols, reading [8], [9], [10], [11],\
    \ and [12] is valuable, and\n   [13] and [14] are recommended books.\n10.  Authors'\
    \ Addresses\n   Tyler Johnson\n   Editor, H.350\n   University of North Carolina\n\
    \   Chapel Hill, NC 27599\n   Phone: +1.919.843.7004\n   EMail: Tyler_Johnson@unc.edu\n\
    \   Sakae Okubo\n   Rapporteur for Q.4/16, ITU-T SG16\n   Waseda University\n\
    \   YRP Ichibankan, 3-4 Hikarinooka\n   Yokosuka-shi, 239-0847 Japan\n   Phone:\
    \ +81 46 847 5406\n   EMail: sokubo@waseda.jp\n   Simao Ferraz de Campos Neto\n\
    \   Counsellor, ITU-T SG 16\n   International Telecommunication Union\n   Place\
    \ des Nations\n   Geneva CH1211 - Switzerland\n   Phone: +41-22-730-6805\n   EMail:\
    \ simao.campos@itu.int\nFull Copyright Statement\n   Copyright (C) The Internet\
    \ Society (2004).\n   This document is subject to the rights, licenses and restrictions\n\
    \   contained in BCP 78, and at www.rfc-editor.org, and except as set\n   forth\
    \ therein, the authors retain all their rights.\n   This document and the information\
    \ contained herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR,\
    \ THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET\
    \ SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\
    \ EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE\
    \ OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n\
    \   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\nIntellectual\
    \ Property\n   The IETF takes no position regarding the validity or scope of any\n\
    \   Intellectual Property Rights or other rights that might be claimed to\n  \
    \ pertain to the implementation or use of the technology described in\n   this\
    \ document or the extent to which any license under such rights\n   might or might\
    \ not be available; nor does it represent that it has\n   made any independent\
    \ effort to identify any such rights.  Information\n   on the ISOC's procedures\
    \ with respect to rights in ISOC Documents can\n   be found in BCP 78 and BCP\
    \ 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n   assurances\
    \ of licenses to be made available, or the result of an\n   attempt made to obtain\
    \ a general license or permission for the use of\n   such proprietary rights by\
    \ implementers or users of this\n   specification can be obtained from the IETF\
    \ on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\nAcknowledgement\n   Funding for the\
    \ RFC Editor function is currently provided by the\n   Internet Society.\n"
