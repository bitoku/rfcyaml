- title: __initial_text__
  contents:
  - "          Network Working Group                            K. McCloghrie\n  \
    \        Request for Comments: 1447                  Hughes LAN Systems\n    \
    \                           for version 2 of the\n                   Simple Network\
    \ Management Protocol (SNMPv2)\n          Status of this Memo\n          This\
    \ RFC specifes an IAB standards track protocol for the\n          Internet community,\
    \ and requests discussion and suggestions\n          for improvements.  Please\
    \ refer to the current edition of the\n          \"IAB Official Protocol Standards\"\
    \ for the standardization\n          state and status of this protocol.  Distribution\
    \ of this memo\n          is unlimited.\n          Table of Contents\n       \
    \   1 Introduction ..........................................    2\n         \
    \ 1.1 A Note on Terminology ...............................    2\n          2\
    \ Definitions ...........................................    3\n          3.1\
    \ Textual Conventions .................................    4\n          3.2 Administrative\
    \ Assignments ..........................    7\n          3.2.1 Initial Party and\
    \ Context Identifiers .............    8\n          3.3 Object Assignments ..................................\
    \   16\n          3.4 The SNMPv2 Party Database Group .....................  \
    \ 16\n          3.5 The SNMPv2 Contexts Database Group ..................   29\n\
    \          3.5 The SNMPv2 Access Privileges Database Group .........   36\n  \
    \        3.6 The MIB View Database Group .........................   40\n    \
    \      3.7 Conformance Information .............................   45\n      \
    \    3.7.1 Compliance Statements .............................   45\n        \
    \  3.7.2 Units of Conformance ..............................   47\n          3\
    \ Acknowledgments .......................................   48\n          4 References\
    \ ............................................   49\n          5 Security Considerations\
    \ ...............................   50\n          6 Authors' Addresses ....................................\
    \   50\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          1.  Introduction\n          A network management system contains: several\
    \ (potentially\n          many) nodes, each with a processing entity, termed an\
    \ agent,\n          which has access to management instrumentation; at least one\n\
    \          management station; and, a management protocol, used to convey\n  \
    \        management information between the agents and management\n          stations.\
    \  Operations of the protocol are carried out under an\n          administrative\
    \ framework which defines both authentication and\n          authorization policies.\n\
    \          Network management stations execute management applications\n     \
    \     which monitor and control network elements.  Network elements\n        \
    \  are devices such as hosts, routers, terminal servers, etc.,\n          which\
    \ are monitored and controlled through access to their\n          management information.\n\
    \          Management information is viewed as a collection of managed\n     \
    \     objects, residing in a virtual information store, termed the\n         \
    \ Management Information Base (MIB).  Collections of related\n          objects\
    \ are defined in MIB modules.  These modules are written\n          using a subset\
    \ of OSI's Abstract Syntax Notation One (ASN.1)\n          [1], termed the Structure\
    \ of Management Information (SMI) [2].\n          The Administrative Model for\
    \ SNMPv2 document [3] defines the\n          properties associated with SNMPv2\
    \ parties, SNMPv2 contexts,\n          and access control policies.  It is the\
    \ purpose of this\n          document, the Party MIB for SNMPv2, to define managed\
    \ objects\n          which correspond to these properties.\n          1.1.  A\
    \ Note on Terminology\n          For the purpose of exposition, the original Internet-standard\n\
    \          Network Management Framework, as described in RFCs 1155, 1157,\n  \
    \        and 1212, is termed the SNMP version 1 framework (SNMPv1).\n        \
    \  The current framework is termed the SNMP version 2 framework\n          (SNMPv2).\n\
    \          RFC 1447             Party MIB for SNMPv2           April 1993\n  \
    \        2.  Definitions\n          SNMPv2-PARTY-MIB DEFINITIONS ::= BEGIN\n \
    \         IMPORTS\n              MODULE-IDENTITY, OBJECT-TYPE, snmpModules,\n\
    \                  UInteger32\n                  FROM SNMPv2-SMI\n           \
    \   TEXTUAL-CONVENTION, RowStatus, TruthValue\n                  FROM SNMPv2-TC\n\
    \              MODULE-COMPLIANCE, OBJECT-GROUP\n                  FROM SNMPv2-CONF;\n\
    \          partyMIB MODULE-IDENTITY\n              LAST-UPDATED \"9304010000Z\"\
    \n              ORGANIZATION \"IETF SNMP Security Working Group\"\n          \
    \    CONTACT-INFO\n                      \"        Keith McCloghrie\n        \
    \               Postal: Hughes LAN Systems\n                               1225\
    \ Charleston Road\n                               Mountain View, CA  94043\n \
    \                              US\n                          Tel: +1 415 966 7934\n\
    \                          Fax: +1 415 960 3738\n                       E-mail:\
    \ kzm@hls.com\"\n              DESCRIPTION\n                      \"The MIB module\
    \ describing SNMPv2 parties.\"\n              ::= { snmpModules 3 }\n        \
    \  RFC 1447             Party MIB for SNMPv2           April 1993\n          --\
    \ textual conventions\n          Party ::= TEXTUAL-CONVENTION\n              STATUS\
    \       current\n              DESCRIPTION\n                      \"Denotes a\
    \ SNMPv2 party identifier.\n                      Note that agents may impose\
    \ implementation\n                      limitations on the length of OIDs used\
    \ to identify\n                      Parties. As such, management stations creating\n\
    \                      new parties should be aware that using an\n           \
    \           excessively long OID may result in the agent\n                   \
    \   refusing to perform the set operation and instead\n                      returning\
    \ the appropriate error response, e.g.,\n                      noCreation.\"\n\
    \              SYNTAX       OBJECT IDENTIFIER\n          TAddress ::= TEXTUAL-CONVENTION\n\
    \              STATUS       current\n              DESCRIPTION\n             \
    \         \"Denotes a transport service address.\n                      For snmpUDPDomain,\
    \ a TAddress is 6 octets long,\n                      the initial 4 octets containing\
    \ the IP-address in\n                      network-byte order and the last 2 containing\
    \ the\n                      UDP port in network-byte order.  Consult [5] for\n\
    \                      further information on snmpUDPDomain.\"\n             \
    \ SYNTAX       OCTET STRING\n          RFC 1447             Party MIB for SNMPv2\
    \           April 1993\n          Clock ::= TEXTUAL-CONVENTION\n             \
    \ STATUS       current\n              DESCRIPTION\n                      \"A party's\
    \ authentication clock - a non-negative\n                      integer which is\
    \ incremented as specified/allowed\n                      by the party's Authentication\
    \ Protocol.\n                      For noAuth, a party's authentication clock\
    \ is\n                      unused and its value is undefined.\n             \
    \         For v2md5AuthProtocol, a party's authentication\n                  \
    \    clock is a relative clock with 1-second\n                      granularity.\"\
    \n              SYNTAX       UInteger32\n          Context ::= TEXTUAL-CONVENTION\n\
    \              STATUS       current\n              DESCRIPTION\n             \
    \         \"Denotes a SNMPv2 context identifier.\n                      Note that\
    \ agents may impose implementation\n                      limitations on the length\
    \ of OIDs used to identify\n                      Contexts. As such, management\
    \ stations creating new\n                      contexts should be aware that using\
    \ an excessively\n                      long OID may result in the agent refusing\
    \ to\n                      perform the set operation and instead returning\n\
    \                      the appropriate error response, e.g., noCreation.\"\n \
    \             SYNTAX       OBJECT IDENTIFIER\n          RFC 1447             Party\
    \ MIB for SNMPv2           April 1993\n          StorageType ::= TEXTUAL-CONVENTION\n\
    \              STATUS       current\n              DESCRIPTION\n             \
    \         \"Describes the memory realization of a conceptual\n               \
    \       row.  A row which is volatile(2) is lost upon\n                      reboot.\
    \  A row which is nonVolatile(3) is backed\n                      up by stable\
    \ storage.  A row which is permanent(4)\n                      cannot be changed\
    \ nor deleted.\"\n              SYNTAX       INTEGER {\n                     \
    \          other(1),       -- eh?\n                               volatile(2),\
    \    -- e.g., in RAM\n                               nonVolatile(3), -- e.g.,\
    \ in NVRAM\n                               permanent(4)    -- e.g., in ROM\n \
    \                          }\n          RFC 1447             Party MIB for SNMPv2\
    \           April 1993\n          -- administrative assignments\n          partyAdmin\
    \     OBJECT IDENTIFIER ::= { partyMIB 1 }\n          -- definitions of security\
    \ protocols\n          partyProtocols OBJECT IDENTIFIER ::= { partyAdmin 1 }\n\
    \          -- the protocol without authentication\n          noAuth         OBJECT\
    \ IDENTIFIER ::= { partyProtocols 1 }\n          -- the protocol without privacy\n\
    \          noPriv         OBJECT IDENTIFIER ::= { partyProtocols 2 }\n       \
    \   -- the DES Privacy Protocol [4]\n          desPrivProtocol\n             \
    \            OBJECT IDENTIFIER ::= { partyProtocols 3 }\n          -- the MD5\
    \ Authentication Protocol [4]\n          v2md5AuthProtocol\n                 \
    \        OBJECT IDENTIFIER ::= { partyProtocols 4 }\n          -- definitions\
    \ of temporal domains\n          temporalDomains\n                         OBJECT\
    \ IDENTIFIER ::= { partyAdmin 2 }\n          -- this temporal domain refers to\
    \ management information\n          -- at the current time\n          currentTime\
    \    OBJECT IDENTIFIER ::= { temporalDomains 1 }\n          -- this temporal domain\
    \ refers to management information\n          -- upon the next re-initialization\
    \ of the managed device\n          restartTime    OBJECT IDENTIFIER ::= { temporalDomains\
    \ 2 }\n          -- the temporal domain { cacheTime N } refers to management\n\
    \          -- information that is cached and guaranteed to be at most\n      \
    \    -- N seconds old\n          cacheTime      OBJECT IDENTIFIER ::= { temporalDomains\
    \ 3 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          -- Definition of Initial Party and Context Identifiers\n          --\
    \ When devices are installed, they need to be configured\n          -- with an\
    \ initial set of SNMPv2 parties and contexts.  The\n          -- configuration\
    \ of SNMPv2 parties and contexts requires (among\n          -- other things) the\
    \ assignment of several OBJECT IDENTIFIERs.\n          -- Any local network administration\
    \ can obtain the delegated\n          -- authority necessary to assign its own\
    \ OBJECT IDENTIFIERs.\n          -- However, to provide for those administrations\
    \ who have not\n          -- obtained the necessary authority, this document allocates\
    \ a\n          -- branch of the naming tree for use with the following\n     \
    \     -- conventions.\n          initialPartyId OBJECT IDENTIFIER ::= { partyAdmin\
    \ 3 }\n          initialContextId\n                         OBJECT IDENTIFIER\
    \ ::= { partyAdmin 4 }\n          -- Note these are identified as \"initial\"\
    \ party and context\n          -- identifiers since these allow secure SNMPv2\
    \ communication\n          -- to proceed, thereby allowing further SNMPv2 parties\
    \ to be\n          -- configured through use of the SNMPv2 itself.\n         \
    \ -- The following definitions identify a party identifier, and\n          --\
    \ specify the initial values of various object instances\n          -- indexed\
    \ by that identifier.  In addition, the SNMPv2\n          -- context, access control\
    \ policy, and MIB view information\n          -- assigned, by convention, are\
    \ identified.\n          RFC 1447             Party MIB for SNMPv2           April\
    \ 1993\n          -- Party Identifiers for use as initial SNMPv2 parties\n   \
    \       --       at IP address  a.b.c.d\n          -- Note that for all OBJECT\
    \ IDENTIFIERs assigned under\n          -- initialPartyId, the four sub-identifiers\
    \ immediately\n          -- following initialPartyId represent the four octets\
    \ of\n          -- an IP address.  Initial party identifiers for other address\n\
    \          -- families are assigned under a different OBJECT IDENTIFIER,\n   \
    \       -- as defined elsewhere.\n          -- Devices which support SNMPv2 as\
    \ entities acting in an\n          -- agent role, and accessed via the snmpUDPDomain\
    \ transport\n          -- domain, are required to be configured with the appropriate\n\
    \          -- set of the following as implicit assignments as and when\n     \
    \     -- they are configured with an IP address.  The appropriate\n          --\
    \ set is all those applicable to the authentication and\n          -- privacy\
    \ protocols supported by the device.\n          RFC 1447             Party MIB\
    \ for SNMPv2           April 1993\n          --      a noAuth/noPriv party which\
    \ executes at the agent\n          -- partyIdentity            = { initialPartyId\
    \ a b c d 1 }\n          -- partyIndex               = 1\n          -- partyTDomain\
    \             = snmpUDPDomain\n          -- partyTAddress            = a.b.c.d,\
    \ 161\n          -- partyLocal               = true (in agent's database)\n  \
    \        -- partyAuthProtocol        = noAuth\n          -- partyAuthClock   \
    \        = 0\n          -- partyAuthPrivate         = ''H    (the empty string)\n\
    \          -- partyAuthPublic          = ''H    (the empty string)\n         \
    \ -- partyAuthLifetime        = 0\n          -- partyPrivProtocol        = noPriv\n\
    \          -- partyPrivPrivate         = ''H    (the empty string)\n         \
    \ -- partyPrivPublic          = ''H    (the empty string)\n          --      a\
    \ noAuth/noPriv party which executes at a manager\n          -- partyIdentity\
    \            = { initialPartyId a b c d 2 }\n          -- partyIndex         \
    \      = 2\n          -- partyTDomain             = snmpUDPDomain\n          --\
    \ partyTAddress            = assigned by local administration\n          -- partyLocal\
    \               = false (in agent's database)\n          -- partyAuthProtocol\
    \        = noAuth\n          -- partyAuthClock           = 0\n          -- partyAuthPrivate\
    \         = ''H    (the empty string)\n          -- partyAuthPublic          =\
    \ ''H    (the empty string)\n          -- partyAuthLifetime        = 0\n     \
    \     -- partyPrivProtocol        = noPriv\n          -- partyPrivPrivate    \
    \     = ''H    (the empty string)\n          -- partyPrivPublic          = ''H\
    \    (the empty string)\n          RFC 1447             Party MIB for SNMPv2 \
    \          April 1993\n          --      a md5Auth/noPriv party which executes\
    \ at the agent\n          -- partyIdentity            = { initialPartyId a b c\
    \ d 3 }\n          -- partyIndex               = 3\n          -- partyTDomain\
    \             = snmpUDPDomain\n          -- partyTAddress            = a.b.c.d,\
    \ 161\n          -- partyLocal               = true (in agent's database)\n  \
    \        -- partyAuthProtocol        = v2md5AuthProtocol\n          -- partyAuthClock\
    \           = 0\n          -- partyAuthPrivate         = assigned by local administration\n\
    \          -- partyAuthPublic          = ''H    (the empty string)\n         \
    \ -- partyAuthLifetime        = 300\n          -- partyPrivProtocol        = noPriv\n\
    \          -- partyPrivPrivate         = ''H    (the empty string)\n         \
    \ -- partyPrivPublic          = ''H    (the empty string)\n          --      a\
    \ md5Auth/noPriv party which executes at a manager\n          -- partyIdentity\
    \            = { initialPartyId a b c d 4 }\n          -- partyIndex         \
    \      = 4\n          -- partyTDomain             = snmpUDPDomain\n          --\
    \ partyTAddress            = assigned by local administration\n          -- partyLocal\
    \               = false (in agent's database)\n          -- partyAuthProtocol\
    \        = v2md5AuthProtocol\n          -- partyAuthClock           = 0\n    \
    \      -- partyAuthPrivate         = assigned by local administration\n      \
    \    -- partyAuthPublic          = ''H    (the empty string)\n          -- partyAuthLifetime\
    \        = 300\n          -- partyPrivProtocol        = noPriv\n          -- partyPrivPrivate\
    \         = ''H    (the empty string)\n          -- partyPrivPublic          =\
    \ ''H    (the empty string)\n          RFC 1447             Party MIB for SNMPv2\
    \           April 1993\n          --      a md5Auth/desPriv party which executes\
    \ at the agent\n          -- partyIdentity            = { initialPartyId a b c\
    \ d 5 }\n          -- partyIndex               = 5\n          -- partyTDomain\
    \             = snmpUDPDomain\n          -- partyTAddress            = a.b.c.d,\
    \ 161\n          -- partyLocal               = true (in agent's database)\n  \
    \        -- partyAuthProtocol        = v2md5AuthProtocol\n          -- partyAuthClock\
    \           = 0\n          -- partyAuthPrivate         = assigned by local administration\n\
    \          -- partyAuthPublic          = ''H    (the empty string)\n         \
    \ -- partyAuthLifetime        = 300\n          -- partyPrivProtocol        = desPrivProtocol\n\
    \          -- partyPrivPrivate         = assigned by local administration\n  \
    \        -- partyPrivPublic          = ''H    (the empty string)\n          --\
    \      a md5Auth/desPriv party which executes at a manager\n          -- partyIdentity\
    \            = { initialPartyId a b c d 6 }\n          -- partyIndex         \
    \      = 6\n          -- partyTDomain             = snmpUDPDomain\n          --\
    \ partyTAddress            = assigned by local administration\n          -- partyLocal\
    \               = false (in agent's database)\n          -- partyAuthProtocol\
    \        = v2md5AuthProtocol\n          -- partyAuthClock           = 0\n    \
    \      -- partyAuthPrivate         = assigned by local administration\n      \
    \    -- partyAuthPublic          = ''H    (the empty string)\n          -- partyAuthLifetime\
    \        = 300\n          -- partyPrivProtocol        = desPrivProtocol\n    \
    \      -- partyPrivPrivate         = assigned by local administration\n      \
    \    -- partyPrivPublic          = ''H    (the empty string)\n          RFC 1447\
    \             Party MIB for SNMPv2           April 1993\n          -- the initial\
    \ SNMPv2 contexts assigned, by convention, are:\n          -- contextIdentity\
    \          = { initialContextId a b c d 1 }\n          -- contextIndex       \
    \      = 1\n          -- contextLocal             = true (in agent's database)\n\
    \          -- contextViewIndex         = 1\n          -- contextLocalEntity  \
    \     = ''H    (the empty string)\n          -- contextLocalTime         = currentTime\n\
    \          -- contextProxyDstParty     = { 0 0 }\n          -- contextProxySrcParty\
    \     = { 0 0 }\n          -- contextProxyContext      = { 0 0 }\n          --\
    \ contextIdentity          = { initialContextId a b c d 2 }\n          -- contextIndex\
    \             = 2\n          -- contextLocal             = true (in agent's database)\n\
    \          -- contextViewIndex         = 2\n          -- contextLocalEntity  \
    \     = ''H    (the empty string)\n          -- contextLocalTime         = currentTime\n\
    \          -- contextProxyDstParty     = { 0 0 }\n          -- contextProxySrcParty\
    \     = { 0 0 }\n          -- contextProxyContext      = { 0 0 }\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n       -- The initial\
    \ access control policy assigned, by\n       -- convention, is:\n       -- aclTarget\
    \                =   1\n       -- aclSubject               =   2\n       -- aclResources\
    \             =   1\n       -- aclPrivileges            =  35 (Get, Get-Next &\
    \ Get-Bulk)\n       -- aclTarget                =   2\n       -- aclSubject  \
    \             =   1\n       -- aclResources             =   1\n       -- aclPrivileges\
    \            = 132 (Response & SNMPv2-Trap)\n       -- aclTarget             \
    \   =   3\n       -- aclSubject               =   4\n       -- aclResources  \
    \           =   2\n       -- aclPrivileges            =  43 (Get, Get-Next, Set\
    \ & Get-Bulk)\n       -- aclTarget                =   4\n       -- aclSubject\
    \               =   3\n       -- aclResources             =   2\n       -- aclPrivileges\
    \            =   4 (Response)\n       -- aclTarget                =   5\n    \
    \   -- aclSubject               =   6\n       -- aclResources             =  \
    \ 2\n       -- aclPrivileges            =  43 (Get, Get-Next, Set & Get-Bulk)\n\
    \       -- aclTarget                =   6\n       -- aclSubject              \
    \ =   5\n       -- aclResources             =   2\n       -- aclPrivileges   \
    \         =   4 (Response)\n       -- Note that the initial context and access\
    \ control\n       -- information assigned above, by default, to the\n       --\
    \ md5Auth/desPriv parties are identical to those assigned to\n       -- the md5Auth/noPriv\
    \ parties.  However, each administration\n       -- may choose to have different\
    \ authorization policies,\n       -- depending on whether privacy is used.\n \
    \         RFC 1447             Party MIB for SNMPv2           April 1993\n   \
    \       -- The initial MIB views assigned, by convention, are:\n          -- viewIndex\
    \                = 1\n          -- viewSubtree              = system\n       \
    \   -- viewMask                 = ''H\n          -- viewType                 =\
    \ included\n          -- viewIndex                = 1\n          -- viewSubtree\
    \              = snmpStats\n          -- viewMask                 = ''H\n    \
    \      -- viewType                 = included\n          -- viewIndex        \
    \        = 1\n          -- viewSubtree              = snmpParties\n          --\
    \ viewMask                 = ''H\n          -- viewType                 = included\n\
    \          -- viewIndex                = 2\n          -- viewSubtree         \
    \     = internet\n          -- viewMask                 = ''H\n          -- viewType\
    \                 = included\n          -- Note that full access to the partyTable,\
    \ contextTable,\n          -- aclTable, and viewTable gives a manager the ability\
    \ to\n          -- configure any parties with any/all capabilities (the\n    \
    \      -- equivalent of \"root\" access).  A lesser manager can be\n         \
    \ -- given access only to the partyTable so that it can\n          -- maintain\
    \ its own parties, but not increase/decrease\n          -- their capabilities.\
    \  Such a lesser manager can also\n          -- create new parties but they are\
    \ of no use to it.\n          RFC 1447             Party MIB for SNMPv2      \
    \     April 1993\n          -- object assignments\n          partyMIBObjects\n\
    \                         OBJECT IDENTIFIER ::= { partyMIB 2 }\n          -- the\
    \ SNMPv2 party database group\n          snmpParties    OBJECT IDENTIFIER ::=\
    \ { partyMIBObjects 1 }\n          partyTable OBJECT-TYPE\n              SYNTAX\
    \      SEQUENCE OF PartyEntry\n              MAX-ACCESS  not-accessible\n    \
    \          STATUS      current\n              DESCRIPTION\n                  \
    \    \"The SNMPv2 Party database.\"\n              ::= { snmpParties 1 }\n   \
    \       partyEntry OBJECT-TYPE\n              SYNTAX      PartyEntry\n       \
    \       MAX-ACCESS  not-accessible\n              STATUS      current\n      \
    \        DESCRIPTION\n                      \"Locally held information about a\
    \ particular\n                      SNMPv2 party.\"\n              INDEX     \
    \ { IMPLIED partyIdentity }\n              ::= { partyTable 1 }\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          PartyEntry\
    \ ::=\n              SEQUENCE {\n                  partyIdentity        Party,\n\
    \                  partyIndex           INTEGER,\n                  partyTDomain\
    \         OBJECT IDENTIFIER,\n                  partyTAddress        TAddress,\n\
    \                  partyMaxMessageSize  INTEGER,\n                  partyLocal\
    \           TruthValue,\n                  partyAuthProtocol    OBJECT IDENTIFIER,\n\
    \                  partyAuthClock       Clock,\n                  partyAuthPrivate\
    \     OCTET STRING,\n                  partyAuthPublic      OCTET STRING,\n  \
    \                partyAuthLifetime    INTEGER,\n                  partyPrivProtocol\
    \    OBJECT IDENTIFIER,\n                  partyPrivPrivate     OCTET STRING,\n\
    \                  partyPrivPublic      OCTET STRING,\n                  partyCloneFrom\
    \       Party,\n                  partyStorageType     StorageType,\n        \
    \          partyStatus          RowStatus\n              }\n          partyIdentity\
    \ OBJECT-TYPE\n              SYNTAX      Party\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"A party identifier uniquely identifying a\n                      particular\
    \ SNMPv2 party.\"\n              ::= { partyEntry 1 }\n          partyIndex OBJECT-TYPE\n\
    \              SYNTAX      INTEGER (1..65535)\n              MAX-ACCESS  read-only\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"A unique value for each SNMPv2 party.  The value\n                \
    \      for each SNMPv2 party must remain constant at\n                      least\
    \ from one re-initialization of the entity's\n                      network management\
    \ system to the next re-\n                      initialization.\"\n          \
    \    ::= { partyEntry 2 }\n          RFC 1447             Party MIB for SNMPv2\
    \           April 1993\n          partyTDomain OBJECT-TYPE\n              SYNTAX\
    \      OBJECT IDENTIFIER\n              MAX-ACCESS  read-create\n            \
    \  STATUS      current\n              DESCRIPTION\n                      \"Indicates\
    \ the kind of transport service by which\n                      the party receives\
    \ network management traffic.\"\n              DEFVAL      { snmpUDPDomain }\n\
    \              ::= { partyEntry 3 }\n          partyTAddress OBJECT-TYPE\n   \
    \           SYNTAX      TAddress\n              MAX-ACCESS  read-create\n    \
    \          STATUS      current\n              DESCRIPTION\n                  \
    \    \"The transport service address by which the party\n                    \
    \  receives network management traffic, formatted\n                      according\
    \ to the corresponding value of\n                      partyTDomain.  For snmpUDPDomain,\
    \ partyTAddress is\n                      formatted as a 4-octet IP Address concatenated\n\
    \                      with a 2-octet UDP port number.\"\n              DEFVAL\
    \      { '000000000000'H }\n              ::= { partyEntry 4 }\n          partyMaxMessageSize\
    \ OBJECT-TYPE\n              SYNTAX      INTEGER (484..65507)\n              MAX-ACCESS\
    \  read-create\n              STATUS      current\n              DESCRIPTION\n\
    \                      \"The maximum length in octets of a SNMPv2 message\n  \
    \                    which this party will accept.  For parties which\n      \
    \                execute at an agent, the agent initializes this\n           \
    \           object to the maximum length supported by the\n                  \
    \    agent, and does not let the object be set to any\n                      larger\
    \ value.  For parties which do not execute at\n                      the agent,\
    \ the agent must allow the manager to set\n                      this object to\
    \ any legal value, even if it is\n                      larger than the agent\
    \ can generate.\"\n              DEFVAL      { 484 }\n              ::= { partyEntry\
    \ 5 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          partyLocal OBJECT-TYPE\n              SYNTAX      TruthValue\n    \
    \          MAX-ACCESS  read-create\n              STATUS      current\n      \
    \        DESCRIPTION\n                      \"An indication of whether this party\
    \ executes at\n                      this SNMPv2 entity.  If this object has a\
    \ value of\n                      true(1), then the SNMPv2 entity will listen\
    \ for\n                      SNMPv2 messages on the partyTAddress associated\n\
    \                      with this party.  If this object has the value\n      \
    \                false(2), then the SNMPv2 entity will not listen\n          \
    \            for SNMPv2 messages on the partyTAddress\n                      associated\
    \ with this party.\"\n              DEFVAL      { false }\n              ::= {\
    \ partyEntry 6 }\n          partyAuthProtocol OBJECT-TYPE\n              SYNTAX\
    \      OBJECT IDENTIFIER\n              MAX-ACCESS  read-create\n            \
    \  STATUS      current\n              DESCRIPTION\n                      \"The\
    \ authentication protocol by which all messages\n                      generated\
    \ by the party are authenticated as to\n                      origin and integrity.\
    \  The value noAuth signifies\n                      that messages generated by\
    \ the party are not\n                      authenticated.\n                  \
    \    Once an instance of this object is created, its\n                      value\
    \ can not be changed.\"\n              DEFVAL      { v2md5AuthProtocol }\n   \
    \           ::= { partyEntry 7 }\n          RFC 1447             Party MIB for\
    \ SNMPv2           April 1993\n          partyAuthClock OBJECT-TYPE\n        \
    \      SYNTAX      Clock\n              MAX-ACCESS  read-create\n            \
    \  STATUS      current\n              DESCRIPTION\n                      \"The\
    \ authentication clock which represents the\n                      local notion\
    \ of the current time specific to the\n                      party.  This value\
    \ must not be decremented unless\n                      the party's private authentication\
    \ key is changed\n                      simultaneously.\"\n              DEFVAL\
    \      { 0 }\n              ::= { partyEntry 8 }\n          RFC 1447         \
    \    Party MIB for SNMPv2           April 1993\n          partyAuthPrivate OBJECT-TYPE\n\
    \              SYNTAX      OCTET STRING\n                          -- for v2md5AuthProtocol:\
    \ (SIZE (16))\n              MAX-ACCESS  read-create\n              STATUS   \
    \   current\n              DESCRIPTION\n                      \"An encoding of\
    \ the party's private authentication\n                      key which may be needed\
    \ to support the\n                      authentication protocol.  Although the\
    \ value of\n                      this variable may be altered by a management\n\
    \                      operation (e.g., a SNMPv2 Set-Request), its value\n   \
    \                   can never be retrieved by a management operation:\n      \
    \                when read, the value of this variable is the zero\n         \
    \             length OCTET STRING.\n                      The private authentication\
    \ key is NOT directly\n                      represented by the value of this\
    \ variable, but\n                      rather it is represented according to an\
    \ encoding.\n                      This encoding is the bitwise exclusive-OR of\
    \ the\n                      old key with the new key, i.e., of the old private\n\
    \                      authentication key (prior to the alteration) with\n   \
    \                   the new private authentication key (after the\n          \
    \            alteration).  Thus, when processing a received\n                \
    \      protocol Set operation, the new private\n                      authentication\
    \ key is obtained from the value of\n                      this variable as the\
    \ result of a bitwise\n                      exclusive-OR of the variable's value\
    \ and the old\n                      private authentication key.  In calculating\
    \ the\n                      exclusive-OR, if the old key is shorter than the\n\
    \                      new key, zero-valued padding is appended to the\n     \
    \                 old key.  If no value for the old key exists, a\n          \
    \            zero-length OCTET STRING is used in the\n                      calculation.\"\
    \n              DEFVAL      { ''H }     -- the empty string\n              ::=\
    \ { partyEntry 9 }\n          RFC 1447             Party MIB for SNMPv2      \
    \     April 1993\n          partyAuthPublic OBJECT-TYPE\n              SYNTAX\
    \      OCTET STRING\n                          -- for v2md5AuthProtocol: (SIZE\
    \ (0..16))\n              MAX-ACCESS  read-create\n              STATUS      current\n\
    \              DESCRIPTION\n                      \"A publically-readable value\
    \ for the party.\n                      Depending on the party's authentication\
    \ protocol,\n                      this value may be needed to support the party's\n\
    \                      authentication protocol.  Alternatively, it may be\n  \
    \                    used by a manager during the procedure for\n            \
    \          altering secret information about a party.  (For\n                \
    \      example, by altering the value of an instance of\n                    \
    \  this object in the same SNMPv2 Set-Request used to\n                      update\
    \ an instance of partyAuthPrivate, a\n                      subsequent Get-Request\
    \ can determine if the Set-\n                      Request was successful in the\
    \ event that no\n                      response to the Set-Request is received,\
    \ see [4].)\n                      The length of the value is dependent on the\n\
    \                      party's authentication protocol.  If not used by\n    \
    \                  the authentication protocol, it is recommended\n          \
    \            that agents support values of any length up to and\n            \
    \          including the length of the corresponding\n                      partyAuthPrivate\
    \ object.\"\n              DEFVAL      { ''H }      -- the empty string\n    \
    \          ::= { partyEntry 10 }\n          RFC 1447             Party MIB for\
    \ SNMPv2           April 1993\n          partyAuthLifetime OBJECT-TYPE\n     \
    \         SYNTAX      INTEGER (0..2147483647)\n              UNITS       \"seconds\"\
    \n              MAX-ACCESS  read-create\n              STATUS      current\n \
    \             DESCRIPTION\n                      \"The lifetime (in units of seconds)\
    \ which\n                      represents an administrative upper bound on\n \
    \                     acceptable delivery delay for protocol messages\n      \
    \                generated by the party.\n                      Once an instance\
    \ of this object is created, its\n                      value can not be changed.\"\
    \n              DEFVAL      { 300 }\n              ::= { partyEntry 11 }\n   \
    \       partyPrivProtocol OBJECT-TYPE\n              SYNTAX      OBJECT IDENTIFIER\n\
    \              MAX-ACCESS  read-create\n              STATUS      current\n  \
    \            DESCRIPTION\n                      \"The privacy protocol by which\
    \ all protocol\n                      messages received by the party are protected\
    \ from\n                      disclosure.  The value noPriv signifies that\n \
    \                     messages received by the party are not protected.\n    \
    \                  Once an instance of this object is created, its\n         \
    \             value can not be changed.\"\n              DEFVAL      { noPriv\
    \ }\n              ::= { partyEntry 12 }\n          RFC 1447             Party\
    \ MIB for SNMPv2           April 1993\n          partyPrivPrivate OBJECT-TYPE\n\
    \              SYNTAX      OCTET STRING\n                          -- for desPrivProtocol:\
    \ (SIZE (16))\n              MAX-ACCESS  read-create\n              STATUS   \
    \   current\n              DESCRIPTION\n                      \"An encoding of\
    \ the party's private encryption key\n                      which may be needed\
    \ to support the privacy\n                      protocol.  Although the value\
    \ of this variable may\n                      be altered by a management operation\
    \ (e.g., a\n                      SNMPv2 Set-Request), its value can never be\n\
    \                      retrieved by a management operation: when read,\n     \
    \                 the value of this variable is the zero length\n            \
    \          OCTET STRING.\n                      The private encryption key is\
    \ NOT directly\n                      represented by the value of this variable,\
    \ but\n                      rather it is represented according to an encoding.\n\
    \                      This encoding is the bitwise exclusive-OR of the\n    \
    \                  old key with the new key, i.e., of the old private\n      \
    \                encryption key (prior to the alteration) with the\n         \
    \             new private encryption key (after the alteration).\n           \
    \           Thus, when processing a received protocol Set\n                  \
    \    operation, the new private encryption key is\n                      obtained\
    \ from the value of this variable as the\n                      result of a bitwise\
    \ exclusive-OR of the variable's\n                      value and the old private\
    \ encryption key.  In\n                      calculating the exclusive-OR, if\
    \ the old key is\n                      shorter than the new key, zero-valued\
    \ padding is\n                      appended to the old key.  If no value for\
    \ the old\n                      key exists, a zero-length OCTET STRING is used\
    \ in\n                      the calculation.\"\n              DEFVAL      { ''H\
    \ }     -- the empty string\n              ::= { partyEntry 13 }\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          partyPrivPublic\
    \ OBJECT-TYPE\n              SYNTAX      OCTET STRING\n                      \
    \    -- for desPrivProtocol: (SIZE (0..16))\n              MAX-ACCESS  read-create\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"A publically-readable value for the party.\n                      Depending\
    \ on the party's privacy protocol, this\n                      value may be needed\
    \ to support the party's privacy\n                      protocol.  Alternatively,\
    \ it may be used by a\n                      manager as a part of its procedure\
    \ for altering\n                      secret information about a party.  (For\
    \ example,\n                      by altering the value of an instance of this\n\
    \                      object in the same SNMPv2 Set-Request used to\n       \
    \               update an instance of partyPrivPrivate, a\n                  \
    \    subsequent Get-Request can determine if the Set-\n                      Request\
    \ was successful in the event that no\n                      response to the Set-Request\
    \ is received, see [4].)\n                      The length of the value is dependent\
    \ on the\n                      party's privacy protocol.  If not used by the\n\
    \                      privacy protocol, it is recommended that agents\n     \
    \                 support values of any length up to and including\n         \
    \             the length of the corresponding partyPrivPrivate\n             \
    \         object.\"\n              DEFVAL      { ''H }     -- the empty string\n\
    \              ::= { partyEntry 14 }\n          RFC 1447             Party MIB\
    \ for SNMPv2           April 1993\n          partyCloneFrom OBJECT-TYPE\n    \
    \          SYNTAX      Party\n              MAX-ACCESS  read-create\n        \
    \      STATUS      current\n              DESCRIPTION\n                      \"\
    The identity of a party to clone authentication\n                      and privacy\
    \ parameters from.  When read, the value\n                      { 0 0 } is returned.\n\
    \                      This value must be written exactly once, when the\n   \
    \                   associated instance of partyStatus either does not\n     \
    \                 exist or has the value `notReady'.  When written,\n        \
    \              the value identifies a party, the cloning party,\n            \
    \          whose status column has the value `active'.  The\n                \
    \      cloning party is used in two ways.\n                      One, if instances\
    \ of the following objects do not\n                      exist for the party being\
    \ created, then they are\n                      created with values identical\
    \ to those of the\n                      corresponding objects for the cloning\
    \ party:\n                           partyAuthProtocol\n                     \
    \      partyAuthPublic\n                           partyAuthLifetime\n       \
    \                    partyPrivProtocol\n                           partyPrivPublic\n\
    \                      Two, instances of the following objects are\n         \
    \             updated using the corresponding values of the\n                \
    \      cloning party:\n                           partyAuthPrivate\n         \
    \                  partyPrivPrivate\n                      (e.g., the value of\
    \ the cloning party's instance\n                      of the partyAuthPrivate\
    \ object is XOR'd with the\n                      value of the partyAuthPrivate\
    \ instances of the\n                      party being created.)\"\n          \
    \    ::= { partyEntry 15 }\n          RFC 1447             Party MIB for SNMPv2\
    \           April 1993\n          partyStorageType OBJECT-TYPE\n             \
    \ SYNTAX      StorageType\n              MAX-ACCESS  read-create\n           \
    \   STATUS      current\n              DESCRIPTION\n                      \"The\
    \ storage type for this conceptual row in the\n                      partyTable.\"\
    \n              DEFVAL      { nonVolatile }\n              ::= { partyEntry 16\
    \ }\n          partyStatus OBJECT-TYPE\n              SYNTAX      RowStatus\n\
    \              MAX-ACCESS  read-create\n              STATUS      current\n  \
    \            DESCRIPTION\n                      \"The status of this conceptual\
    \ row in the\n                      partyTable.\n                      A party\
    \ is not qualified for activation until\n                      instances of all\
    \ columns of its partyEntry row\n                      have an appropriate value.\
    \  In particular:\n                        A value must be written to the Party's\n\
    \                        partyCloneFrom object.\n                        If the\
    \ Party's partyAuthProtocol object has the\n                        value md5AuthProtocol,\
    \ then the corresponding\n                        instance of partyAuthPrivate\
    \ must contain a\n                        secret of the appropriate length.  Further,\
    \ at\n                        least one management protocol set operation\n  \
    \                      updating the value of the party's\n                   \
    \     partyAuthPrivate object must be successfully\n                        processed,\
    \ before the partyAuthPrivate column is\n                        considered appropriately\
    \ configured.\n                        If the Party's partyPrivProtocol object\
    \ has the\n                        value desPrivProtocol, then the corresponding\n\
    \                        instance of partyPrivPrivate must contain a\n       \
    \                 secret of the appropriate length.  Further, at\n           \
    \             least one management protocol set operation\n                  \
    \      updating the value of the party's\n                        partyPrivPrivate\
    \ object must be successfully\n                        processed, before the partyPrivPrivate\
    \ column is\n                        considered appropriately configured.\n  \
    \        RFC 1447             Party MIB for SNMPv2           April 1993\n    \
    \                 Until instances of all corresponding columns are\n         \
    \            appropriately configured, the value of the\n                    \
    \ corresponding instance of the partyStatus column is\n                     `notReady'.\"\
    \n              ::= { partyEntry 17 }\n          RFC 1447             Party MIB\
    \ for SNMPv2           April 1993\n          -- the SNMPv2 contexts database group\n\
    \          snmpContexts   OBJECT IDENTIFIER ::= { partyMIBObjects 2 }\n      \
    \    contextTable OBJECT-TYPE\n              SYNTAX      SEQUENCE OF ContextEntry\n\
    \              MAX-ACCESS  not-accessible\n              STATUS      current\n\
    \              DESCRIPTION\n                      \"The SNMPv2 Context database.\"\
    \n              ::= { snmpContexts 1 }\n          contextEntry OBJECT-TYPE\n \
    \             SYNTAX      ContextEntry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"Locally held information about a particular\n                     \
    \ SNMPv2 context.\"\n              INDEX      { IMPLIED contextIdentity }\n  \
    \            ::= { contextTable 1 }\n          ContextEntry ::=\n            \
    \  SEQUENCE {\n                  contextIdentity         Context,\n          \
    \        contextIndex            INTEGER,\n                  contextLocal    \
    \        TruthValue,\n                  contextViewIndex        INTEGER,\n   \
    \               contextLocalEntity      OCTET STRING,\n                  contextLocalTime\
    \        OBJECT IDENTIFIER,\n                  contextProxyDstParty    Party,\n\
    \                  contextProxySrcParty    Party,\n                  contextProxyContext\
    \     OBJECT IDENTIFIER,\n                  contextStorageType      StorageType,\n\
    \                  contextStatus           RowStatus\n              }\n      \
    \    RFC 1447             Party MIB for SNMPv2           April 1993\n        \
    \  contextIdentity OBJECT-TYPE\n              SYNTAX      Context\n          \
    \    MAX-ACCESS  not-accessible\n              STATUS      current\n         \
    \     DESCRIPTION\n                      \"A context identifier uniquely identifying\
    \ a\n                      particular SNMPv2 context.\"\n              ::= { contextEntry\
    \ 1 }\n          contextIndex OBJECT-TYPE\n              SYNTAX      INTEGER (1..65535)\n\
    \              MAX-ACCESS  read-only\n              STATUS      current\n    \
    \          DESCRIPTION\n                      \"A unique value for each SNMPv2\
    \ context.  The\n                      value for each SNMPv2 context must remain\
    \ constant\n                      at least from one re-initialization of the\n\
    \                      entity's network management system to the next\n      \
    \                re-initialization.\"\n              ::= { contextEntry 2 }\n\
    \          contextLocal OBJECT-TYPE\n              SYNTAX      TruthValue\n  \
    \            MAX-ACCESS  read-create\n              STATUS      current\n    \
    \          DESCRIPTION\n                      \"An indication of whether this\
    \ context is realized\n                      by this SNMPv2 entity.\"\n      \
    \        DEFVAL      { true }\n              ::= { contextEntry 3 }\n        \
    \  RFC 1447             Party MIB for SNMPv2           April 1993\n          contextViewIndex\
    \ OBJECT-TYPE\n              SYNTAX      INTEGER (0..65535)\n              MAX-ACCESS\
    \  read-create\n              STATUS      current\n              DESCRIPTION\n\
    \                      \"If the value of an instance of this object is\n     \
    \                 zero, then this corresponding conceptual row in\n          \
    \            the contextTable refers to a SNMPv2 context which\n             \
    \         identifies a proxy relationship; the values of the\n               \
    \       corresponding instances of the\n                      contextProxyDstParty,\
    \ contextProxySrcParty, and\n                      contextProxyContext objects\
    \ provide further\n                      information on the proxy relationship.\n\
    \                      Otherwise, if the value of an instance of this\n      \
    \                object is greater than zero, then this\n                    \
    \  corresponding conceptual row in the contextTable\n                      refers\
    \ to a SNMPv2 context which identifies a MIB\n                      view of a\
    \ locally accessible entity; the value of\n                      the instance\
    \ identifies the particular MIB view\n                      which has the same\
    \ value of viewIndex; and the\n                      value of the corresponding\
    \ instances of the\n                      contextLocalEntity and contextLocalTime\
    \ objects\n                      provide further information on the local entity\n\
    \                      and its temporal domain.\"\n              ::= { contextEntry\
    \ 4 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          contextLocalEntity OBJECT-TYPE\n              SYNTAX      OCTET STRING\n\
    \              MAX-ACCESS  read-create\n              STATUS      current\n  \
    \            DESCRIPTION\n                      \"If the value of the corresponding\
    \ instance of the\n                      contextViewIndex is greater than zero,\
    \ then the\n                      value of an instance of this object identifies\
    \ the\n                      local entity whose management information is in\n\
    \                      the SNMPv2 context's MIB view.  The empty string\n    \
    \                  indicates that the MIB view contains the SNMPv2\n         \
    \             entity's own local management information;\n                   \
    \   otherwise, a non-empty string indicates that the\n                      MIB\
    \ view contains management information of some\n                      other local\
    \ entity, e.g., 'Repeater1'.\"\n              DEFVAL      { ''H }     -- the empty\
    \ string\n              ::= { contextEntry 5 }\n          contextLocalTime OBJECT-TYPE\n\
    \              SYNTAX      OBJECT IDENTIFIER\n              MAX-ACCESS  read-create\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"If the value of the corresponding instance of the\n               \
    \       contextViewIndex is greater than zero, then the\n                    \
    \  value of an instance of this object identifies the\n                      temporal\
    \ context of the management information in\n                      the MIB view.\"\
    \n              DEFVAL      { currentTime }\n              ::= { contextEntry\
    \ 6 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          contextProxyDstParty OBJECT-TYPE\n              SYNTAX      Party\n\
    \              MAX-ACCESS  read-create\n              STATUS      current\n  \
    \            DESCRIPTION\n                      \"If the value of the corresponding\
    \ instance of the\n                      contextViewIndex is equal to zero, then\
    \ the value\n                      of an instance of this object identifies a\
    \ SNMPv2\n                      party which is the proxy destination of a proxy\n\
    \                      relationship.\n                      If the value of the\
    \ corresponding instance of the\n                      contextViewIndex is greater\
    \ than zero, then the\n                      value of an instance of this object\
    \ is { 0 0 }.\"\n              ::= { contextEntry 7 }\n          contextProxySrcParty\
    \ OBJECT-TYPE\n              SYNTAX      Party\n              MAX-ACCESS  read-create\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"If the value of the corresponding instance of the\n               \
    \       contextViewIndex is equal to zero, then the value\n                  \
    \    of an instance of this object identifies a SNMPv2\n                     \
    \ party which is the proxy source of a proxy\n                      relationship.\n\
    \                      Interpretation of an instance of this object\n        \
    \              depends upon the value of the transport domain\n              \
    \        associated with the SNMPv2 party used as the proxy\n                \
    \      destination in this proxy relationship.\n                      If the value\
    \ of the corresponding instance of the\n                      contextViewIndex\
    \ is greater than zero, then the\n                      value of an instance of\
    \ this object is { 0 0 }.\"\n              ::= { contextEntry 8 }\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          contextProxyContext\
    \ OBJECT-TYPE\n              SYNTAX      OBJECT IDENTIFIER\n              MAX-ACCESS\
    \  read-create\n              STATUS      current\n              DESCRIPTION\n\
    \                      \"If the value of the corresponding instance of the\n \
    \                     contextViewIndex is equal to zero, then the value\n    \
    \                  of an instance of this object identifies the\n            \
    \          context of a proxy relationship.\n                      Interpretation\
    \ of an instance of this object\n                      depends upon the value\
    \ of the transport domain\n                      associated with the SNMPv2 party\
    \ used as the proxy\n                      destination in this proxy relationship.\n\
    \                      If the value of the corresponding instance of the\n   \
    \                   contextViewIndex is greater than zero, then the\n        \
    \              value of an instance of this object is { 0 0 }.\"\n           \
    \   ::= { contextEntry 9 }\n          contextStorageType OBJECT-TYPE\n       \
    \       SYNTAX      StorageType\n              MAX-ACCESS  read-create\n     \
    \         STATUS      current\n              DESCRIPTION\n                   \
    \   \"The storage type for this conceptual row in the\n                      contextTable.\"\
    \n              DEFVAL      { nonVolatile }\n              ::= { contextEntry\
    \ 10 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          contextStatus OBJECT-TYPE\n              SYNTAX      RowStatus\n  \
    \            MAX-ACCESS  read-create\n              STATUS      current\n    \
    \          DESCRIPTION\n                      \"The status of this conceptual\
    \ row in the\n                      contextTable.\n                      A context\
    \ is not qualified for activation until\n                      instances of all\
    \ corresponding columns have the\n                      appropriate value.  In\
    \  particular, if the\n                      context's contextViewIndex is greater\
    \ than zero,\n                      then the viewStatus column of the associated\n\
    \                      conceptual row(s) in the viewTable must have the\n    \
    \                  value `active'.  Until instances of all\n                 \
    \     corresponding columns are appropriately\n                      configured,\
    \ the value of the corresponding\n                      instance of the contextStatus\
    \ column is\n                      `notReady'.\"\n              ::= { contextEntry\
    \ 11 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          -- the SNMPv2 access privileges database group\n          snmpAccess\
    \     OBJECT IDENTIFIER ::= { partyMIBObjects 3 }\n          aclTable OBJECT-TYPE\n\
    \              SYNTAX      SEQUENCE OF AclEntry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"The access privileges database.\"\n              ::= { snmpAccess 1\
    \ }\n          aclEntry OBJECT-TYPE\n              SYNTAX      AclEntry\n    \
    \          MAX-ACCESS  not-accessible\n              STATUS      current\n   \
    \           DESCRIPTION\n                      \"The access privileges for a particular\
    \ subject\n                      SNMPv2 party when asking a particular target\n\
    \                      SNMPv2 party to access a particular SNMPv2\n          \
    \            context.\"\n              INDEX      { aclTarget, aclSubject, aclResources\
    \ }\n              ::= { aclTable 1 }\n          AclEntry ::=\n              SEQUENCE\
    \ {\n                  aclTarget        INTEGER,\n                  aclSubject\
    \       INTEGER,\n                  aclResources     INTEGER,\n              \
    \    aclPrivileges    INTEGER,\n                  aclStorageType   StorageType,\n\
    \                  aclStatus        RowStatus\n              }\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          aclTarget\
    \ OBJECT-TYPE\n              SYNTAX      INTEGER (1..65535)\n              MAX-ACCESS\
    \  not-accessible\n              STATUS      current\n              DESCRIPTION\n\
    \                      \"The value of an instance of this object\n           \
    \           identifies a SNMPv2 party which is the target of\n               \
    \       an access control policy, and has the same value\n                   \
    \   as the instance of the partyIndex object for that\n                      party.\"\
    \n              ::= { aclEntry 1 }\n          aclSubject OBJECT-TYPE\n       \
    \       SYNTAX      INTEGER (1..65535)\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"The value of an instance of this object\n                      identifies\
    \ a SNMPv2 party which is the subject of\n                      an access control\
    \ policy, and has the same value\n                      as the instance of the\
    \ partyIndex object for that\n                      SNMPv2 party.\"\n        \
    \      ::= { aclEntry 2 }\n          aclResources OBJECT-TYPE\n              SYNTAX\
    \      INTEGER (1..65535)\n              MAX-ACCESS  not-accessible\n        \
    \      STATUS      current\n              DESCRIPTION\n                      \"\
    The value of an instance of this object\n                      identifies a SNMPv2\
    \ context in an access control\n                      policy, and has the same\
    \ value as the instance of\n                      the contextIndex object for\
    \ that SNMPv2 context.\"\n              ::= { aclEntry 3 }\n          RFC 1447\
    \             Party MIB for SNMPv2           April 1993\n          aclPrivileges\
    \ OBJECT-TYPE\n              SYNTAX      INTEGER (0..255)\n              MAX-ACCESS\
    \  read-create\n              STATUS      current\n              DESCRIPTION\n\
    \                      \"The access privileges which govern what\n           \
    \           management operations a particular target party\n                \
    \      may perform with respect to a particular SNMPv2\n                     \
    \ context when requested by a particular subject\n                      party.\
    \  These privileges are specified as a sum of\n                      values, where\
    \ each value specifies a SNMPv2 PDU\n                      type by which the subject\
    \ party may request a\n                      permitted operation.  The value for\
    \ a particular\n                      PDU type is computed as 2 raised to the\
    \ value of\n                      the ASN.1 context-specific tag for the appropriate\n\
    \                      SNMPv2 PDU type.  The values (for the tags defined\n  \
    \                    in [5]) are defined in [3] as:\n                       Get\
    \         :   1\n                       GetNext     :   2\n                  \
    \     Response    :   4\n                       Set         :   8\n          \
    \             unused      :  16\n                       GetBulk     :  32\n  \
    \                     Inform      :  64\n                       SNMPv2-Trap :\
    \ 128\n                      The null set is represented by the value zero.\"\n\
    \              DEFVAL      { 35 }      -- Get, Get-Next & Get-Bulk\n         \
    \     ::= { aclEntry 4 }\n          aclStorageType OBJECT-TYPE\n             \
    \ SYNTAX      StorageType\n              MAX-ACCESS  read-create\n           \
    \   STATUS      current\n              DESCRIPTION\n                      \"The\
    \ storage type for this conceptual row in the\n                      aclTable.\"\
    \n              DEFVAL      { nonVolatile }\n              ::= { aclEntry 5 }\n\
    \          RFC 1447             Party MIB for SNMPv2           April 1993\n  \
    \        aclStatus OBJECT-TYPE\n              SYNTAX      RowStatus\n        \
    \      MAX-ACCESS  read-create\n              STATUS      current\n          \
    \    DESCRIPTION\n                      \"The status of this conceptual row in\
    \ the\n                      aclTable.\"\n              ::= { aclEntry 6 }\n \
    \         RFC 1447             Party MIB for SNMPv2           April 1993\n   \
    \       -- the MIB view database group\n          snmpViews      OBJECT IDENTIFIER\
    \ ::= { partyMIBObjects 4 }\n          viewTable OBJECT-TYPE\n              SYNTAX\
    \      SEQUENCE OF ViewEntry\n              MAX-ACCESS  not-accessible\n     \
    \         STATUS      current\n              DESCRIPTION\n                   \
    \   \"Locally held information about the MIB views\n                      known\
    \ to this SNMPv2 entity.\n                      Each SNMPv2 context which is locally\
    \ accessible\n                      has a single MIB view which is defined by\
    \ two\n                      collections of view subtrees: the included view\n\
    \                      subtrees, and the excluded view subtrees.  Every\n    \
    \                  such subtree, both included and excluded, is\n            \
    \          defined in this table.\n                      To determine if a particular\
    \ object instance is in\n                      a particular MIB view, compare\
    \ the object\n                      instance's OBJECT IDENTIFIER with each of\
    \ the MIB\n                      view's entries in this table.  If none match,\
    \ then\n                      the object instance is not in the MIB view.  If\n\
    \                      one or more match, then the object instance is\n      \
    \                included in, or excluded from, the MIB view\n               \
    \       according to the value of viewType in the entry\n                    \
    \  whose value of viewSubtree has the most sub-\n                      identifiers.\
    \  If multiple entries match and have\n                      the same number of\
    \ sub-identifiers, then the\n                      lexicographically greatest\
    \ instance of viewType\n                      determines the inclusion or exclusion.\n\
    \                      An object instance's OBJECT IDENTIFIER X matches\n    \
    \                  an entry in this table when the number of sub-\n          \
    \            identifiers in X is at least as many as in the\n                \
    \      value of viewSubtree for the entry, and each sub-\n                   \
    \   identifier in the value of viewSubtree matches its\n                     \
    \ corresponding sub-identifier in X.  Two sub-\n                      identifiers\
    \ match either if the corresponding bit\n                      of viewMask is\
    \ zero (the 'wild card' value), or if\n                      they are equal.\n\
    \                      Due to this 'wild card' capability, we introduce\n    \
    \      RFC 1447             Party MIB for SNMPv2           April 1993\n      \
    \                the term, a 'family' of view subtrees, to refer to\n        \
    \              the set of subtrees defined by a particular\n                 \
    \     combination of values of viewSubtree and viewMask.\n                   \
    \   In the case where no 'wild card' is defined in\n                      viewMask,\
    \ the family of view subtrees reduces to a\n                      single view\
    \ subtree.\"\n              ::= { snmpViews 1 }\n          viewEntry OBJECT-TYPE\n\
    \              SYNTAX      ViewEntry\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"Information on a particular family of view\n                      subtrees\
    \ included in or excluded from a particular\n                      SNMPv2 context's\
    \ MIB view.\n                      Implementations must not restrict the number\
    \ of\n                      families of view subtrees for a given MIB view,\n\
    \                      except as dictated by resource constraints on the\n   \
    \                   overall number of entries in the viewTable.\"\n          \
    \    INDEX      { viewIndex, IMPLIED viewSubtree }\n              ::= { viewTable\
    \ 1 }\n          ViewEntry ::=\n              SEQUENCE {\n                  viewIndex\
    \        INTEGER,\n                  viewSubtree      OBJECT IDENTIFIER,\n   \
    \               viewMask         OCTET STRING,\n                  viewType   \
    \      INTEGER,\n                  viewStorageType  StorageType,\n           \
    \       viewStatus       RowStatus\n              }\n          RFC 1447      \
    \       Party MIB for SNMPv2           April 1993\n          viewIndex OBJECT-TYPE\n\
    \              SYNTAX      INTEGER (1..65535)\n              MAX-ACCESS  not-accessible\n\
    \              STATUS      current\n              DESCRIPTION\n              \
    \        \"A unique value for each MIB view.  The value for\n                \
    \      each MIB view must remain constant at least from\n                    \
    \  one re-initialization of the entity's network\n                      management\
    \ system to the next re-initialization.\"\n              ::= { viewEntry 1 }\n\
    \          viewSubtree OBJECT-TYPE\n              SYNTAX      OBJECT IDENTIFIER\n\
    \              MAX-ACCESS  not-accessible\n              STATUS      current\n\
    \              DESCRIPTION\n                      \"A MIB subtree.\"\n       \
    \       ::= { viewEntry 2 }\n          viewMask OBJECT-TYPE\n              SYNTAX\
    \      OCTET STRING (SIZE (0..16))\n              MAX-ACCESS  read-create\n  \
    \            STATUS      current\n              DESCRIPTION\n                \
    \      \"The bit mask which, in combination with the\n                      corresponding\
    \ instance of viewSubtree, defines a\n                      family of view subtrees.\n\
    \                      Each bit of this bit mask corresponds to a sub-\n     \
    \                 identifier of viewSubtree, with the most\n                 \
    \     significant bit of the i-th octet of this octet\n                      string\
    \ value (extended if necessary, see below)\n                      corresponding\
    \ to the (8*i - 7)-th sub-identifier,\n                      and the least significant\
    \ bit of the i-th octet of\n                      this octet string corresponding\
    \ to the (8*i)-th\n                      sub-identifier, where i is in the range\
    \ 1 through\n                      16.\n                      Each bit of this\
    \ bit mask specifies whether or not\n                      the corresponding sub-identifiers\
    \ must match when\n                      determining if an OBJECT IDENTIFIER is\
    \ in this\n                      family of view subtrees; a '1' indicates that\
    \ an\n                      exact match must occur; a '0' indicates 'wild\n  \
    \                    card', i.e., any sub-identifier value matches.\n        \
    \  RFC 1447             Party MIB for SNMPv2           April 1993\n          \
    \            Thus, the OBJECT IDENTIFIER X of an object\n                    \
    \  instance is contained in a family of view subtrees\n                      if\
    \ the following criteria are met:\n                           for each sub-identifier\
    \ of the value of\n                           viewSubtree, either:\n         \
    \                       the i-th bit of viewMask is 0, or\n                  \
    \              the i-th sub-identifier of X is equal to\n                    \
    \            the i-th sub-identifier of the value of\n                       \
    \         viewSubtree.\n                      If the value of this bit mask is\
    \ M bits long and\n                      there are more than M sub-identifiers\
    \ in the\n                      corresponding instance of viewSubtree, then the\n\
    \                      bit mask is extended with 1's to be the required\n    \
    \                  length.\n                      Note that when the value of\
    \ this object is the\n                      zero-length string, this extension\
    \ rule results in\n                      a mask of all-1's being used (i.e., no\
    \ 'wild\n                      card'), and the family of view subtrees is the\
    \ one\n                      view subtree uniquely identified by the\n       \
    \               corresponding instance of viewSubtree.\"\n              DEFVAL\
    \      { ''H }\n              ::= { viewEntry 3 }\n          RFC 1447        \
    \     Party MIB for SNMPv2           April 1993\n          viewType OBJECT-TYPE\n\
    \              SYNTAX      INTEGER  {\n                              included(1),\n\
    \                              excluded(2)\n                          }\n    \
    \          MAX-ACCESS  read-create\n              STATUS      current\n      \
    \        DESCRIPTION\n                      \"The status of a particular family\
    \ of view\n                      subtrees within the particular SNMPv2 context's\n\
    \                      MIB view.  The value 'included(1)' indicates that\n   \
    \                   the corresponding instances of viewSubtree and\n         \
    \             viewMask define a family of view subtrees included\n           \
    \           in the MIB view.  The  value 'excluded(2)'\n                     \
    \ indicates that the corresponding instances of\n                      viewSubtree\
    \ and viewMask define a family of view\n                      subtrees excluded\
    \ from the MIB view.\"\n              DEFVAL      { included }\n             \
    \ ::= { viewEntry 4 }\n          viewStorageType OBJECT-TYPE\n              SYNTAX\
    \      StorageType\n              MAX-ACCESS  read-create\n              STATUS\
    \      current\n              DESCRIPTION\n                      \"The storage\
    \ type for this conceptual row in the\n                      viewTable.\"\n  \
    \            DEFVAL      { nonVolatile }\n              ::= { viewEntry 5 }\n\
    \          viewStatus OBJECT-TYPE\n              SYNTAX      RowStatus\n     \
    \         MAX-ACCESS  read-create\n              STATUS      current\n       \
    \       DESCRIPTION\n                      \"The status of this conceptual row\
    \ in the\n                      viewTable.\"\n              ::= { viewEntry 6\
    \ }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          -- conformance information\n          partyMIBConformance\n       \
    \                  OBJECT IDENTIFIER ::= { partyMIB 3 }\n          partyMIBCompliances\n\
    \                         OBJECT IDENTIFIER ::= { partyMIBConformance 1 }\n  \
    \        partyMIBGroups\n                         OBJECT IDENTIFIER ::= { partyMIBConformance\
    \ 2 }\n          -- compliance statements\n          unSecurableCompliance MODULE-COMPLIANCE\n\
    \              STATUS  current\n              DESCRIPTION\n                  \
    \    \"The compliance statement for SNMPv2 entities\n                      which\
    \ implement the Party MIB, but do not support\n                      any authentication\
    \ or privacy protocols (i.e.,\n                      only the noAuth and noPriv\
    \ protocols are\n                      supported).\"\n              MODULE  --\
    \ this module\n                  MANDATORY-GROUPS { partyMIBGroup }\n        \
    \      ::= { partyMIBCompliances 1 }\n          partyNoPrivacyCompliance MODULE-COMPLIANCE\n\
    \              STATUS  current\n              DESCRIPTION\n                  \
    \    \"The compliance statement for SNMPv2 entities\n                      which\
    \ implement the Party MIB, and support an\n                      authentication\
    \ protocol, but do not support any\n                      privacy protocols (i.e.,\
    \ only the noAuth,\n                      v2md5AuthProtocol, and noPriv protocols\
    \ are\n                      supported).\"\n              MODULE  -- this module\n\
    \                  MANDATORY-GROUPS { partyMIBGroup }\n              ::= { partyMIBCompliances\
    \ 2 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          partyPrivacyCompliance MODULE-COMPLIANCE\n              STATUS  current\n\
    \              DESCRIPTION\n                      \"The compliance statement for\
    \ SNMPv2 entities\n                      which implement the Party MIB, support\
    \ an\n                      authentication protocol, and support a privacy\n \
    \                     protocol ONLY for the purpose of accessing\n           \
    \           security parameters.\n                      For all aclTable entries\
    \ authorizing a subject\n                      and/or target SNMPv2 party whose\
    \ privacy protocol\n                      is desPrivProtocol, to be used in accessing\
    \ a\n                      SNMPv2 context, the MIB view for that SNMPv2\n    \
    \                  context shall include only those objects\n                \
    \      subordinate to partyMIBObjects, or a subset\n                      thereof,\
    \ e.g.,\n                           viewSubtree = { partyMIBObjects }\n      \
    \                     viewMask    = ''H\n                           viewType \
    \   = { included }\n                      Any attempt to configure an entry in\
    \ the\n                      partyTable, the contextTable, the aclTable or the\n\
    \                      viewTable such that a party using the\n               \
    \       desPrivProtocol would be authorized for use in\n                     \
    \ accessing objects outside of the partyMIBObjects\n                      subtree\
    \ shall result in the appropriate error\n                      response (e.g.,\
    \ wrongValue or inconsistentValue).\"\n              MODULE  -- this module\n\
    \                  MANDATORY-GROUPS { partyMIBGroup }\n              ::= { partyMIBCompliances\
    \ 3 }\n          RFC 1447             Party MIB for SNMPv2           April 1993\n\
    \          fullPrivacyCompliance MODULE-COMPLIANCE\n              STATUS  current\n\
    \              DESCRIPTION\n                      \"The compliance statement for\
    \ SNMPv2 entities\n                      which implement the Party MIB, support\
    \ an\n                      authentication protocol, and support a privacy\n \
    \                     protocol without restrictions on its use.\"\n          \
    \    MODULE  -- this module\n                  MANDATORY-GROUPS { partyMIBGroup\
    \ }\n              ::= { partyMIBCompliances 4 }\n        -- units of conformance\n\
    \        partyMIBGroup OBJECT-GROUP\n            OBJECTS { partyIndex, partyTDomain,\
    \ partyTAddress,\n                      partyMaxMessageSize, partyLocal,\n   \
    \                   partyAuthProtocol, partyAuthClock,\n                     \
    \ partyAuthPrivate, partyAuthPublic,\n                      partyAuthLifetime,\
    \ partyPrivProtocol,\n                      partyPrivPrivate, partyPrivPublic,\n\
    \                      partyStorageType, partyStatus,\n                      partyCloneFrom,\n\
    \                      contextIndex, contextLocal,\n                      contextViewIndex,\
    \ contextLocalEntity,\n                      contextLocalTime, contextStorageType,\n\
    \                      contextStatus, aclTarget, aclSubject,\n               \
    \       aclPrivileges, aclStorageType, aclStatus,\n                      viewMask,\
    \ viewType, viewStorageType, viewStatus }\n            STATUS  current\n     \
    \       DESCRIPTION\n                    \"The collection of objects allowing\
    \ the\n                    description and configuration of SNMPv2 parties.\n\
    \                    Note that objects which support proxy\n                 \
    \   relationships are not included in this conformance\n                    group.\"\
    \n            ::= { partyMIBGroups 1 }\n        END\n          RFC 1447      \
    \       Party MIB for SNMPv2           April 1993\n          3.  Acknowledgments\n\
    \          This document is based, almost entirely, on RFC 1353.\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          4.  References\n\
    \          [1]  Information processing systems - Open Systems\n              \
    \ Interconnection - Specification of Abstract Syntax\n               Notation\
    \ One (ASN.1), International Organization for\n               Standardization.\
    \  International Standard 8824, (December,\n               1987).\n          [2]\
    \  Case, J., McCloghrie, K., Rose, M., and Waldbusser, S.,\n               \"\
    Structure of Management Information for version 2 of the\n               Simple\
    \ Network Management Protocol (SNMPv2)\", RFC 1442,\n               SNMP Research,\
    \ Inc., Hughes LAN Systems, Dover Beach\n               Consulting, Inc., Carnegie\
    \ Mellon University, April 1993.\n          [3]  Galvin, J., and McCloghrie, K.,\
    \ \"Administrative Model for\n               version 2 of the Simple Network Management\
    \ Protocol\n               (SNMPv2)\", RFC 1445, Trusted Information Systems,\
    \ Hughes\n               LAN Systems, April 1993.\n          [4]  Galvin, J.,\
    \ and McCloghrie, K., \"Security Protocols for\n               version 2 of the\
    \ Simple Network Management Protocol\n               (SNMPv2)\", RFC 1446, Trusted\
    \ Information Systems, Hughes\n               LAN Systems, April 1993.\n     \
    \     [5]  Case, J., McCloghrie, K., Rose, M., and Waldbusser, S.,\n         \
    \      \"Protocol Operations for version 2 of the Simple Network\n           \
    \    Management Protocol (SNMPv2)\", RFC 1448, SNMP Research,\n              \
    \ Inc., Hughes LAN Systems, Dover Beach Consulting, Inc.,\n               Carnegie\
    \ Mellon University, April 1993.\n          [5]  Case, J., McCloghrie, K., Rose,\
    \ M., and Waldbusser, S.,\n               \"Transport Mappings for version 2 of\
    \ the Simple Network\n               Management Protocol (SNMPv2)\", RFC 1449,\
    \ SNMP Research,\n               Inc., Hughes LAN Systems, Dover Beach Consulting,\
    \ Inc.,\n               Carnegie Mellon University, April 1993.\n          RFC\
    \ 1447             Party MIB for SNMPv2           April 1993\n          5.  Security\
    \ Considerations\n          Security issues are not discussed in this memo.\n\
    \          6.  Authors' Addresses\n               Keith McCloghrie\n         \
    \      Hughes LAN Systems\n               1225 Charleston Road\n             \
    \  Mountain View, CA  94043\n               US\n               Phone: +1 415 966\
    \ 7934\n               Email: kzm@hls.com\n               James M. Galvin\n  \
    \             Trusted Information Systems, Inc.\n               3060 Washington\
    \ Road, Route 97\n               Glenwood, MD 21738\n               Phone:  +1\
    \ 301 854-6889\n               EMail:  galvin@tis.com\n"
