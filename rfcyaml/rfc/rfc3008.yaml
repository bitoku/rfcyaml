- title: __initial_text__
  contents:
  - '         Domain Name System Security (DNSSEC) Signing Authority

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document proposes a revised model of Domain Name System Security\n\
    \   (DNSSEC) Signing Authority.  The revised model is designed to clarify\n  \
    \ earlier documents and add additional restrictions to simplify the\n   secure\
    \ resolution process.  Specifically, this affects the\n   authorization of keys\
    \ to sign sets of records.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 1 - Introduction
  contents:
  - "1 - Introduction\n   This document defines additional restrictions on DNSSEC\
    \ signatures\n   (SIG) records relating to their authority to sign associated\
    \ data.\n   The intent is to establish a standard policy followed by a secure\n\
    \   resolver; this policy can be augmented by local rules.  This builds\n   upon\
    \ [RFC2535], updating section 2.3.6 of that document.\n   The most significant\
    \ change is that in a secure zone, zone data is\n   required to be signed by the\
    \ zone key.\n   Familiarity with the DNS system [RFC1034, RFC1035] and the DNS\n\
    \   security extensions [RFC2535] is assumed.\n"
- title: 2 - The SIG Record
  contents:
  - "2 - The SIG Record\n   A SIG record is normally associated with an RRset, and\
    \ \"covers\" (that\n   is, demonstrates the authenticity and integrity of) the\
    \ RRset.  This\n   is referred to as a \"data SIG\".  Note that there can be multiple\
    \ SIG\n   records covering an RRset, and the same validation process should be\n\
    \   repeated for each of them.  Some data SIGs are considered \"material\",\n\
    \   that is, relevant to a DNSSEC capable resolver, and some are\n   \"immaterial\"\
    \ or \"extra-DNSSEC\", as they are not relevant to DNSSEC\n   validation.  Immaterial\
    \ SIGs may have application defined roles.  SIG\n   records may exist which are\
    \ not bound to any RRset; these are also\n   considered immaterial.  The validation\
    \ process determines which SIGs\n   are material; once a SIG is shown to be immaterial,\
    \ no other\n   validation is necessary.\n   SIGs may also be used for transaction\
    \ security.  In this case, a SIG\n   record with a type covered field of 0 is\
    \ attached to a message, and\n   is used to protect message integrity.  This is\
    \ referred to as a\n   SIG(0) [RFC2535, RFC2931].\n   The following sections define\
    \ requirements for all of the fields of a\n   SIG record.  These requirements\
    \ MUST be met in order for a DNSSEC\n   capable resolver to process this signature.\
    \  If any of these\n   requirements are not met, the SIG cannot be further processed.\n\
    \   Additionally, once a KEY has been identified as having generated this\n  \
    \ SIG, there are requirements that it MUST meet.\n"
- title: 2.1 - Type Covered
  contents:
  - "2.1 - Type Covered\n   For a data SIG, the type covered MUST be the same as the\
    \ type of data\n   in the associated RRset.  For a SIG(0), the type covered MUST\
    \ be 0.\n"
- title: 2.2 - Algorithm Number
  contents:
  - "2.2 - Algorithm Number\n   The algorithm specified in a SIG MUST be recognized\
    \ by the client,\n   and it MUST be an algorithm that has a defined SIG rdata\
    \ format.\n"
- title: 2.3 - Labels
  contents:
  - "2.3 - Labels\n   The labels count MUST be less than or equal to the number of\
    \ labels\n   in the SIG owner name, as specified in [RFC2535, section 4.1.3].\n"
- title: 2.4 - Original TTL
  contents:
  - "2.4 - Original TTL\n   The original TTL MUST be greater than or equal to the\
    \ TTL of the SIG\n   record itself, since the TTL cannot be increased by intermediate\n\
    \   servers.  This field can be ignored for SIG(0) records.\n"
- title: 2.5 - Signature Expiration and Inception
  contents:
  - "2.5 - Signature Expiration and Inception\n   The current time at the time of\
    \ validation MUST lie within the\n   validity period bounded by the inception\
    \ and expiration times.\n"
- title: 2.6 - Key Tag
  contents:
  - "2.6 - Key Tag\n   There are no restrictions on the Key Tag field, although it\
    \ is\n   possible that future algorithms will impose constraints.\n"
- title: 2.7 - Signer's Name
  contents:
  - "2.7 - Signer's Name\n   The signer's name field of a data SIG MUST contain the\
    \ name of the\n   zone to which the data and signature belong.  The combination\
    \ of\n   signer's name, key tag, and algorithm MUST identify a zone key if the\n\
    \   SIG is to be considered material.  The only exception that the\n   signer's\
    \ name field in a SIG KEY at a zone apex SHOULD contain the\n   parent zone's\
    \ name, unless the KEY set is self-signed.  This document\n   defines a standard\
    \ policy for DNSSEC validation; local policy may\n   override the standard policy.\n\
    \   There are no restrictions on the signer field of a SIG(0) record.\n   The\
    \ combination of signer's name, key tag, and algorithm MUST\n   identify a key\
    \ if this SIG(0) is to be processed.\n"
- title: 2.8 - Signature
  contents:
  - "2.8 - Signature\n   There are no restrictions on the signature field.  The signature\
    \ will\n   be verified at some point, but does not need to be examined prior to\n\
    \   verification unless a future algorithm imposes constraints.\n"
- title: 3 - The Signing KEY Record
  contents:
  - "3 - The Signing KEY Record\n   Once a signature has been examined and its fields\
    \ validated (but\n   before the signature has been verified), the resolver attempts\
    \ to\n   locate a KEY that matches the signer name, key tag, and algorithm\n \
    \  fields in the SIG.  If one is not found, the SIG cannot be verified\n   and\
    \ is considered immaterial.  If KEYs are found, several fields of\n   the KEY\
    \ record MUST have specific values if the SIG is to be\n   considered material\
    \ and authorized.  If there are multiple KEYs, the\n   following checks are performed\
    \ on all of them, as there is no way to\n   determine which one generated the\
    \ signature until the verification is\n   performed.\n"
- title: 3.1 - Type Flags
  contents:
  - "3.1 - Type Flags\n   The signing KEY record MUST have a flags value of 00 or\
    \ 01\n   (authentication allowed, confidentiality optional) [RFC2535, 3.1.2].\n\
    \   A DNSSEC resolver MUST only trust signatures generated by keys that\n   are\
    \ permitted to authenticate data.\n"
- title: 3.2 - Name Flags
  contents:
  - "3.2 - Name Flags\n   The interpretation of this field is considerably different\
    \ for data\n   SIGs and SIG(0) records.\n"
- title: 3.2.1 - Data SIG
  contents:
  - "3.2.1 - Data SIG\n   If the SIG record covers an RRset, the name type of the\
    \ associated\n   KEY MUST be 01 (zone) [RFC2535, 3.1.2].  This updates RFC 2535,\n\
    \   section 2.3.6.  The DNSSEC validation process performed by a resolver\n  \
    \ MUST ignore all keys that are not zone keys unless local policy\n   dictates\
    \ otherwise.\n   The primary reason that RFC 2535 allows host and user keys to\n\
    \   generate material DNSSEC signatures is to allow dynamic update\n   without\
    \ online zone keys; that is, avoid storing private keys in an\n   online server.\
    \  The desire to avoid online signing keys cannot be\n   achieved, though, because\
    \ they are necessary to sign NXT and SOA sets\n   [RFC3007].  These online zone\
    \ keys can sign any incoming data.\n   Removing the goal of having no online keys\
    \ removes the reason to\n   allow host and user keys to generate material signatures.\n\
    \   Limiting material signatures to zone keys simplifies the validation\n   process.\
    \  The length of the verification chain is bounded by the\n   name's label depth.\
    \  The authority of a key is clearly defined; a\n   resolver does not need to\
    \ make a potentially complicated decision to\n   determine whether a key has the\
    \ proper authority to sign data.\n   Finally, there is no additional flexibility\
    \ granted by allowing\n   host/user key generated material signatures.  As long\
    \ as users and\n   hosts have the ability to authenticate update requests to the\
    \ primary\n   zone server, signatures by zone keys are sufficient to protect the\n\
    \   integrity of the data to the world at large.\n"
- title: 3.2.2 - SIG(0)
  contents:
  - "3.2.2 - SIG(0)\n   If the SIG record is a SIG(0) protecting a message, the name\
    \ type of\n   the associated KEY SHOULD be 00 (user) or 10 (host/entity).\n  \
    \ Transactions are initiated by a host or user, not a zone, so zone\n   keys SHOULD\
    \ not generate SIG(0) records.\n   A client is either explicitly executed by a\
    \ user or on behalf of a\n   host, therefore the name type of a SIG(0) generated\
    \ by a client\n   SHOULD be either user or host.  A nameserver is associated with\
    \ a\n   host, and its use of SIG(0) is not associated with a particular zone,\n\
    \   so the name type of a SIG(0) generated by a nameserver SHOULD be\n   host.\n"
- title: 3.3 - Signatory Flags
  contents:
  - "3.3 - Signatory Flags\n   This document does not assign any values to the signatory\
    \ field, nor\n   require any values to be present.\n"
- title: 3.4 - Protocol
  contents:
  - "3.4 - Protocol\n   The signing KEY record MUST have a protocol value of 3 (DNSSEC)\
    \ or\n   255 (ALL).  If a key is not specified for use with DNSSEC, a DNSSEC\n\
    \   resolver MUST NOT trust any signature that it generates.\n"
- title: 3.5 - Algorithm Number
  contents:
  - "3.5 - Algorithm Number\n   The algorithm field MUST be identical to that of the\
    \ generated SIG\n   record, and MUST meet all requirements for an algorithm value\
    \ in a\n   SIG record.\n"
- title: 4 - Security Considerations
  contents:
  - "4 - Security Considerations\n   This document defines a standard baseline for\
    \ a DNSSEC capable\n   resolver.  This is necessary for a thorough security analysis\
    \ of\n   DNSSEC, if one is to be done.\n   Specifically, this document places\
    \ additional restrictions on SIG\n   records that a resolver must validate before\
    \ the signature can be\n   considered worthy of DNSSEC trust.  This simplifies\
    \ the protocol,\n   making it more robust and able to withstand scrutiny by the\
    \ security\n   community.\n"
- title: 5 - Acknowledgements
  contents:
  - "5 - Acknowledgements\n   The author would like to thank the following people\
    \ for review and\n   informative comments (in alphabetical order):\n   Olafur\
    \ Gudmundsson\n   Ed Lewis\n"
- title: 6 - References
  contents:
  - "6 - References\n   [RFC1034]  Mockapetris, P., \"Domain Names - Concepts and\
    \ Facilities\",\n              STD 13, RFC 1034, November 1987.\n   [RFC1035]\
    \  Mockapetris, P., \"Domain Names - Implementation and\n              Specification\"\
    , STD 13, RFC 1035, November 1987.\n   [RFC2119]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [RFC2136]  Vixie (Ed.), P., Thomson, S., Rekhter, Y. and J.\
    \ Bound,\n              \"Dynamic Updates in the Domain Name System\", RFC 2136,\n\
    \              April 1997.\n   [RFC2535]  Eastlake, D., \"Domain Name System Security\
    \ Extensions\",\n              RFC 2535, March 1999.\n   [RFC2931]  Eastlake,\
    \ D., \"DNS Request and Transaction Signatures\n              (SIG(0)s )\", RFC\
    \ 2931, September 2000.\n   [RFC3007]      Wellington, B., \"Simple Secure Domain\
    \ Name System\n              (DNS) Dynamic Update\", RFC 3007, November 2000.\n"
- title: 7 - Author's Address
  contents:
  - "7 - Author's Address\n   Brian Wellington\n   Nominum, Inc.\n   950 Charter Street\n\
    \   Redwood City, CA 94063\n   Phone: +1 650 381 6022\n   EMail: Brian.Wellington@nominum.com\n"
- title: 8  Full Copyright Statement
  contents:
  - "8  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
