- title: __initial_text__
  contents:
  - '        IP Flow Information Export (IPFIX) Mediation: Framework

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a framework for IP Flow Information Export\n\
    \   (IPFIX) Mediation.  This framework extends the IPFIX reference model\n   specified\
    \ in RFC 5470 by defining the IPFIX Mediator components.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6183.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology and Definitions .....................................3\n  \
    \ 3. IPFIX/PSAMP Documents Overview ..................................6\n    \
    \  3.1. IPFIX Documents Overview ...................................6\n      3.2.\
    \ PSAMP Documents Overview ...................................6\n   4. IPFIX Mediation\
    \ Reference Model .................................7\n   5. IPFIX Mediation Functional\
    \ Blocks ..............................12\n      5.1. Collecting Process ........................................12\n\
    \      5.2. Exporting Process .........................................13\n  \
    \    5.3. Intermediate Process ......................................13\n    \
    \       5.3.1. Data Record Expiration .............................14\n      \
    \     5.3.2. Specific Intermediate Processes ....................14\n   6. Component\
    \ Combination ..........................................20\n      6.1. Data-Based\
    \ Collector Selection ............................20\n      6.2. Flow Selection\
    \ and Aggregation ............................21\n      6.3. IPFIX File Writer/Reader\
    \ ..................................22\n   7. Encoding for IPFIX Message Header\
    \ ..............................22\n   8. Information Model ..............................................24\n\
    \   9. Security Considerations ........................................24\n  \
    \    9.1. Avoiding Security Level Downgrade .........................25\n    \
    \  9.2. Avoiding Security Level Upgrade ...........................25\n      9.3.\
    \ Approximating End-to-End Assertions for IPFIX Mediators ...26\n      9.4. Multiple\
    \ Tenancy ..........................................26\n   10. References ....................................................27\n\
    \      10.1. Normative References .....................................27\n  \
    \    10.2. Informative References ...................................27\n   11.\
    \ Acknowledgements ..............................................29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IP Flow Information Export (IPFIX) architectural components\
    \ in\n   [RFC5470] consist of IPFIX Devices and IPFIX Collectors communicating\n\
    \   using the IPFIX protocol.  Due to the sustained growth of IP traffic\n   in\
    \ heterogeneous network environments, this Exporter-Collector\n   architecture\
    \ may lead to scalability problems.  In addition, it does\n   not provide the\
    \ flexibility required by a wide variety of measurement\n   applications.  A detailed\
    \ descriptions of these problems is given in\n   [RFC5982].\n   To fulfill application\
    \ requirements with limited system resources,\n   the IPFIX architecture needs\
    \ to introduce an intermediate entity\n   between Exporters and Collectors.  From\
    \ a data manipulation point of\n   view, this intermediate entity may provide\
    \ the aggregation,\n   correlation, filtering, and modification of Flow Records\
    \ and/or\n   Packet Sampling (PSAMP) Packet Reports to save measurement system\n\
    \   resources and to perform preprocessing tasks for the Collector.  From\n  \
    \ a protocol conversion point of view, this intermediate entity may\n   provide\
    \ conversion into IPFIX, or conversion of IPFIX transport\n   protocols (e.g.,\
    \ from UDP to the Stream Control Transmission Protocol\n   (SCTP)) to improve\
    \ the export reliability.\n   This document introduces a generalized concept for\
    \ such intermediate\n   entities and describes the high-level architecture of\
    \ IPFIX\n   Mediation, key IPFIX Mediation architectural components, and\n   characteristics\
    \ of IPFIX Mediation.\n   This document is structured as follows: Section 2 describes\
    \ the\n   terminology used in this document, Section 3 gives an IPFIX/PSAMP\n\
    \   document overview, Section 4 describes a high-level reference model,\n   Section\
    \ 5 describes functional features related to IPFIX Mediation,\n   Section 6 describes\
    \ combinations of components along with some\n   application examples, Section\
    \ 7 describes consideration points of the\n   encoding for IPFIX Message Headers,\
    \ Section 8 describes the\n   Information Elements used in an IPFIX Mediator,\
    \ and Section 9\n   describes the security issues raised by IPFIX Mediation.\n"
- title: 2.  Terminology and Definitions
  contents:
  - "2.  Terminology and Definitions\n   The IPFIX-specific and PSAMP-specific terminology\
    \ used in this\n   document is defined in [RFC5101] and [RFC5476], respectively.\
    \  The\n   IPFIX-Mediation-specific terminology used in this document is defined\n\
    \   in [RFC5982].  However, as reading the problem statements document is\n  \
    \ not a prerequisite to reading this framework document, the\n   definitions have\
    \ been reproduced here along with additional\n   definitions.  In this document,\
    \ as in [RFC5101] and [RFC5476], the\n   first letter of each IPFIX-specific and\
    \ PSAMP-specific term is\n   capitalized along with the IPFIX-Mediation-specific\
    \ terms defined\n   here.  The use of the terms \"must\", \"should\", and \"may\"\
    \ in this\n   document is informational only.\n   In this document, we use the\
    \ term \"record stream\" to mean a stream of\n   records carrying flow-based or\
    \ packet-based information.  The records\n   may be encoded as IPFIX Data Records\
    \ or in any other format.\n   Transport Session Information\n      The Transport\
    \ Session Information contains information that allows\n      the identification\
    \ of an individual Transport Session as defined\n      in [RFC5101].  If SCTP\
    \ is used as transport protocol, the\n      Transport Session Information identifies\
    \ the SCTP association.  If\n      TCP or UDP is used as transport protocol, the\
    \ Transport Session\n      Information corresponds to the 5-tuple {Exporter IP\
    \ address,\n      Collector IP address, Exporter transport port, Collector transport\n\
    \      port, transport protocol}.  The Transport Session Information may\n   \
    \   include further details about how Transport Layer Security (TLS)\n      [RFC5246]\
    \ or Datagram Transport Layer Security (DTLS) [RFC4347] is\n      used for encryption\
    \ and authentication.\n   Original Exporter\n      An Original Exporter is an\
    \ IPFIX Device that hosts the Observation\n      Points where the metered IP packets\
    \ are observed.\n   IPFIX Mediation\n      IPFIX Mediation is the manipulation\
    \ and conversion of a record\n      stream for subsequent export using the IPFIX\
    \ protocol.\n   The following terms are used in this document to describe the\n\
    \   architectural entities used by IPFIX Mediation.\n   Intermediate Process\n\
    \      An Intermediate Process takes a record stream as its input from\n     \
    \ Collecting Processes, Metering Processes, IPFIX File Readers,\n      other Intermediate\
    \ Processes, or other record sources; performs\n      some transformations on\
    \ this stream based upon the content of each\n      record, states maintained\
    \ across multiple records, or other data\n      sources; and passes the transformed\
    \ record stream as its output to\n      Exporting Processes, IPFIX File Writers,\
    \ or other Intermediate\n      Processes in order to perform IPFIX Mediation.\
    \  Typically, an\n      Intermediate Process is hosted by an IPFIX Mediator.\n\
    \      Alternatively, an Intermediate Process may be hosted by an\n      Original\
    \ Exporter.\n   Specific Intermediate Processes are described below.  However,\
    \ this\n   is not an exhaustive list.\n   Intermediate Conversion Process\n  \
    \    An Intermediate Conversion Process is an Intermediate Process that\n    \
    \  transforms non-IPFIX into IPFIX or manages the relation among\n      Templates\
    \ and states of incoming/outgoing transport sessions in\n      the case of transport\
    \ protocol conversion (e.g., from UDP to\n      SCTP).\n   Intermediate Aggregation\
    \ Process\n      An Intermediate Aggregation Process is an Intermediate Process\n\
    \      that aggregates records based upon a set of Flow Keys or functions\n  \
    \    applied to fields from the record (e.g., data binning and subnet\n      aggregation).\n\
    \   Intermediate Correlation Process\n      An Intermediate Correlation Process\
    \ is an Intermediate Process\n      that adds information to records, noting correlations\
    \ among them,\n      or generates new records with correlated data from multiple\n\
    \      records (e.g., the production of bidirectional flow records from\n    \
    \  unidirectional flow records).\n   Intermediate Selection Process\n      An\
    \ Intermediate Selection Process is an Intermediate Process that\n      selects\
    \ records from a sequence based upon criteria-evaluated\n      record values and\
    \ passes only those records that match the\n      criteria (e.g., filtering only\
    \ records from a given network to a\n      given Collector).\n   Intermediate\
    \ Anonymization Process\n      An Intermediate Anonymization Process is an Intermediate\
    \ Process\n      that transforms records in order to anonymize them, to protect\
    \ the\n      identity of the entities described by the records (e.g., by\n   \
    \   applying prefix-preserving pseudonymization of IP addresses).\n   IPFIX Mediator\n\
    \      An IPFIX Mediator is an IPFIX Device that provides IPFIX Mediation\n  \
    \    by receiving a record stream from some data sources, hosting one\n      or\
    \ more Intermediate Processes to transform that stream, and\n      exporting the\
    \ transformed record stream into IPFIX Messages via an\n      Exporting Process.\
    \  In the common case, an IPFIX Mediator receives\n      a record stream from\
    \ a Collecting Process, but it could also\n      receive a record stream from\
    \ data sources not encoded using IPFIX,\n      e.g., in the case of conversion\
    \ from the NetFlow V9 protocol\n      [RFC3954] to the IPFIX protocol.\n   Note\
    \ that the IPFIX Mediator is a generalization of the concentrator\n   and proxy\
    \ elements envisioned in the IPFIX requirements [RFC3917].\n   IPFIX Mediators\
    \ running appropriate Intermediate Processes provide\n   the functionality specified\
    \ therein.\n"
- title: 3.  IPFIX/PSAMP Documents Overview
  contents:
  - "3.  IPFIX/PSAMP Documents Overview\n   IPFIX Mediation can be applied to flow-based\
    \ or packet-based\n   information.  The flow-based information is encoded as IPFIX\
    \ Flow\n   Records by the IPFIX protocol, and the packet-based information is\n\
    \   extracted by some packet selection techniques and then encoded as\n   PSAMP\
    \ Packet Reports by the PSAMP protocol.  Thus, this section\n   describes relevant\
    \ documents for both protocols.\n"
- title: 3.1.  IPFIX Documents Overview
  contents:
  - "3.1.  IPFIX Documents Overview\n   The IPFIX protocol [RFC5101] provides network\
    \ administrators with\n   access to IP Flow information.  The architecture for\
    \ the export of\n   measured IP Flow information from an IPFIX Exporting Process\
    \ to a\n   Collecting Process is defined in [RFC5470], per the requirements\n\
    \   defined in [RFC3917].  The IPFIX protocol [RFC5101] specifies how\n   IPFIX\
    \ Data Records and Templates are carried via a number of\n   transport protocols\
    \ from IPFIX Exporting Processes to IPFIX\n   Collecting Processes.  IPFIX has\
    \ a formal description of IPFIX\n   Information Elements, their names, types,\
    \ and additional semantic\n   information, as specified in [RFC5102].  The IPFIX\
    \ Management\n   Information Base is defined in [RFC5815].  Finally, [RFC5472]\n\
    \   describes what types of applications can use the IPFIX protocol and\n   how\
    \ they can use the information provided.  Furthermore, it shows how\n   the IPFIX\
    \ framework relates to other architectures and frameworks.\n   The storage of\
    \ IPFIX Messages in a file is specified in [RFC5655].\n"
- title: 3.2.  PSAMP Documents Overview
  contents:
  - "3.2.  PSAMP Documents Overview\n   The framework for packet selection and reporting\
    \ [RFC5474] enables\n   network elements to select subsets of packets by statistical\
    \ and\n   other methods and to export a stream of reports on the selected\n  \
    \ packets to a Collector.  The set of packet selection techniques\n   (Sampling\
    \ and Filtering) standardized by PSAMP is described in\n   [RFC5475].  The PSAMP\
    \ protocol [RFC5476] specifies the export of\n   packet information from a PSAMP\
    \ Exporting Process to a Collector.\n   Like IPFIX, PSAMP has a formal description\
    \ of its Information\n   Elements, their names, types, and additional semantic\
    \ information.\n   The PSAMP information model is defined in [RFC5477].  The PSAMP\n\
    \   Management Information Base is described in [PSAMP-MIB].\n"
- title: 4.  IPFIX Mediation Reference Model
  contents:
  - "4.  IPFIX Mediation Reference Model\n   Figure A shows the high-level IPFIX Mediation\
    \ reference model as an\n   extension of the IPFIX reference model presented in\
    \ [RFC5470].  This\n   figure covers the various possible scenarios that can exist\
    \ in an\n   IPFIX measurement system.\n       +----------------+  +---------------+\
    \    +---------------+\n       | Collector 1    |  | Collector 2   |    | Collector\
    \ N   |\n       |[Collecting     |  |[Collecting    |    |[Collecting    |\n \
    \      |   Process(es)] |  |  Process(es)] |... |  Process(es)] |\n       +----^-----------+\
    \  +---^--------^--+    +--------^------+\n            |                 /   \
    \       \\               |\n            |                /            \\     \
    \         |\n     Flow Records     Flow Records   Flow Records   Flow Records\n\
    \            |              /                \\            |\n     +------+-------------+------+\
    \    +------+-----------+--------+\n     |IPFIX Mediator N+1         |    |IPFIX\
    \ Mediator Z           |\n     |[Exporting Process(es)]    |    |[Exporting Process(es)]\
    \    |\n     |[Intermediate Process(es)] |    |[Intermediate Process(es)] |\n\
    \     |[Collecting Process(es)]   |... |[Collecting Process(es)]   |\n     +----^----------------^-----+\
    \    +------^----------------^---+\n          |                |             \
    \    |                |\n     Flow Records     Flow Records      Packet Reports\
    \  record stream\n          |                |                 |             \
    \   |\n   +------+------+  +------+-------+  +------+-------+  +-----+-----+\n\
    \   |IPFIX        |  |IPFIX Original|  |PSAMP Original|  |Other      |\n   | \
    \ Mediator 1 |  |   Exporter 1 |  |   Exporter 1 |  |  Source 1 |\n   |+-------------+\
    \ |+--------------+ |+--------------+ |+-----------+\n   +|IPFIX        | +|IPFIX\
    \ Original| +|PSAMP Original| +|Other      |\n    |  Mediator N |  |   Exporter\
    \ N |  |   Exporter N |  |  Source N |\n    |[Exporting   |  |[Exporting    |\
    \  |[Exporting    |  |           |\n    | Process(es)]|  |  Process(es)]|  | \
    \ Process(es)]|  |           |\n    |[Intermediate|  |[Metering     |  |[Metering\
    \     |  |           |\n    | Process(es)]|  |  Process(es)]|  |  Process(es)]|\
    \  |           |\n    |[Collecting  |  |[Observation  |  |[Observation  |  | \
    \          |\n    | Process(es)]|  |     Point(s)]|  |     Point(s)]|  |     \
    \      |\n    +------^------+  +-----^-^------+  +-----^-^------+  +-----------+\n\
    \           |               | |               | |\n      Flow Records   Packets\
    \ coming    Packets coming\n                    into Observation  into Observation\n\
    \                          Points            Points\n           Figure A: IPFIX\
    \ Mediation Reference Model Overview\n   The functional components within each\
    \ entity are indicated within\n   brackets [].  An IPFIX Mediator receives IPFIX\
    \ Flow Records or PSAMP\n   Packet Reports from other IPFIX Mediators, IPFIX Flow\
    \ Records from\n   IPFIX Original Exporters, PSAMP Packet Reports from PSAMP Original\n\
    \   Exporters, and/or a record stream from other sources.  The IPFIX\n   Mediator\
    \ then exports IPFIX Flow Records and/or PSAMP Packet Reports\n   to one or multiple\
    \ Collectors and/or other IPFIX Mediators.\n   Figure B shows the basic IPFIX\
    \ Mediator component model.  An IPFIX\n   Mediator contains one or more Intermediate\
    \ Processes and one or more\n   Exporting Processes.  Typically, it also contains\
    \ a Collecting\n   Process but might contain several Collecting Processes, as\
    \ described\n   in Figure B.\n                  IPFIX (Data Records)\n       \
    \                       ^\n                            ^ |\n   +------------------------|-|---------------------+\n\
    \   | IPFIX Mediator         | |                     |\n   |                 \
    \       | |                     |\n   |  .---------------------|-+-------------------.\
    \ |\n   | .----------------------+--------------------.| |\n   | |          Exporting\
    \ Process(es)            |' |\n   | '----------------------^--------------------'\
    \  |\n   |                        | |                     |\n   |  .---------------------|-+-------------------.\
    \ |\n   | .----------------------+--------------------.| |\n   | |          Intermediate\
    \ Process(es)         |' |\n   | '----------------------^--------------------'\
    \  |\n   |                        | |                     |\n   |  .---------------------|-+-------------------.\
    \ |\n   | .----------------------+--------------------.| |\n   | |          Collecting\
    \ Process(es)           |' |\n   | '----------------------^--------------------'\
    \  |\n   +------------------------|-|---------------------+\n                \
    \            |\n                  IPFIX (Data Records)\n     Figure B: Basic IPFIX\
    \ Mediator Component Model\n   However, other data sources are also possible:\
    \ an IPFIX Mediator can\n   receive a record stream from non-IPFIX protocols such\
    \ as NetFlow\n   [RFC3954] exporter(s).  This document does not make any particular\n\
    \   assumption on how a record stream is transferred to an IPFIX\n   Mediator.\
    \  Figure C shows the IPFIX Mediator component model in the\n   case of IPFIX\
    \ protocol conversion from non-IPFIX exporters.\n                  IPFIX (Data\
    \ Records)\n                              ^\n                            ^ |\n\
    \   +------------------------|-|---------------------+\n   | IPFIX Mediator  \
    \       | |                     |\n   |  .---------------------|-+-------------------.\
    \ |\n   | .----------------------+--------------------.| |\n   | |          Exporting\
    \ Process(es)            |' |\n   | '----------------------^--------------------'\
    \  |\n   |  .---------------------|-+-------------------. |\n   | .----------------------+--------------------.|\
    \ |\n   | |          Intermediate Process(es)         |' |\n   | '----------------------^--------------------'\
    \  |\n   +------------------------|-----------------------+\n                \
    \            | record stream\n   +------------------------|-----------------------+\n\
    \   | Non-IPFIX exporter     |                       |\n   |          +-------------+----------+\
    \            |\n   |          |                        |            |\n   +----------|------------------------|------------+\n\
    \              |                        |\n            Packets coming into observation\
    \ points\n   Figure C: IPFIX Mediator Component Model in IPFIX\n             Protocol\
    \ Conversion\n   Alternatively, an Original Exporter may provide IPFIX Mediation\
    \ by\n   hosting one or more Intermediate Processes.  The component model in\n\
    \   Figure D adds Intermediate Process(es) to the IPFIX Device model\n   illustrated\
    \ in [RFC5470].  In comparison with Figures 1 or 2 in\n   [RFC5470], the Intermediate\
    \ Process is located between Exporting\n   Process(es) and IPFIX or PSAMP Metering\
    \ Process(es).\n                     IPFIX (Data Records)\n                  \
    \             ^ ^\n   +---------------------------|-|------------------------+\n\
    \   | Original Exporter         | |                        |\n   |           \
    \                | |                        |\n   |     .---------------------|-+-------------------.\
    \    |\n   |    .----------------------+--------------------.|    |\n   |    |\
    \           Exporting Process(es)           |'    |\n   |    '----------------------^--------------------'\
    \     |\n   |                           | |                        |\n   |   \
    \  .---------------------|-+-------------------.    |\n   |    .----------------------+--------------------.|\
    \    |\n   |    |          Intermediate Process(es)         |'    |\n   |    '---------^-----------------------^---------'\
    \     |\n   |              |      Data Records     |               |\n   |   .----------+---------.\
    \   .---------+----------.    |\n   |   | Metering Process 1 |...| Metering Process\
    \ N |    |\n   |   '----------^---------'   '---------^----------'    |\n   |\
    \              |                       |               |\n   |  .-----------+---------.\
    \   .---------+-----------.   |\n   |  | Observation Point 1 |...| Observation\
    \ Point N |   |\n   |  '-----------^---------'   '---------^-----------'   |\n\
    \   +--------------|-----------------------|---------------+\n               \
    \   |                       |\n            Packets coming into Observation Points\n\
    \   Figure D: IPFIX Mediation Component Model at Original Exporter\n   In addition,\
    \ an Intermediate Process may be collocated with an IPFIX\n   File Reader and/or\
    \ Writer.  Figure E shows an IPFIX Mediation\n   component model with an IPFIX\
    \ File Writer and/or Reader.\n                   IPFIX (Data Records)\n      \
    \                         ^\n                             ^ |\n      .----------------------|-+--------------------.\n\
    \     .-----------------------+---------------------.|\n     |              IPFIX\
    \ File Writer              |'\n     '-----------------------^---------------------'\n\
    \                             | |\n      .----------------------|-+--------------------.\n\
    \     .-----------------------+---------------------.|\n     |          Intermediate\
    \ Process(es)           |'\n     '-----------------------^---------------------'\n\
    \                             | |\n      .----------------------|-+--------------------.\n\
    \     .-----------------------+---------------------.|\n     |              IPFIX\
    \ File Reader              |'\n     '-----------------------^---------------------'\n\
    \                             |\n                   IPFIX (Data Records)\n   Figure\
    \ E: IPFIX Mediation Component Model Collocated\n             with IPFIX File\
    \ Writer/Reader\n"
- title: 5.  IPFIX Mediation Functional Blocks
  contents:
  - "5.  IPFIX Mediation Functional Blocks\n   Figure F shows a functional block diagram\
    \ example in an IPFIX\n   Mediator that has different Intermediate Process types.\n\
    \                         IPFIX           IPFIX               IPFIX\n        \
    \                   ^               ^                   ^\n                  \
    \         |               |                   |\n     .------------.  .-----+-------.\
    \ .-----+-------.    .------+------.\n     | IPFIX File |  | Exporting   | | Exporting\
    \   |    | Exporting   |\n     | Writer     |  | Process 1   | | Process 2   |....|\
    \ Process N   |\n     '-----^-^----'  '-----^-------' '-----^-------'    '------^------'\n\
    \           | |             |               |                   |\n          \
    \ | +-------------+               |                   |\n           :        \
    \  Flow Records / Packet Reports            :\n    .------+-------. .-----+--------.\
    \ .----+---------. .--------------.\n    | Intermediate | | Intermediate | | Intermediate\
    \ | | Intermediate |\n    | Anonymization| | Correlation  | | Aggregation  | |\
    \ Selection    |\n    | Process N    | | Process N    | | Process N    | | Process\
    \ N    |\n    '------|-------' '------|-------' '-----|-|------' '-------|------'\n\
    \           |                +---------------+ |                |\n          \
    \ :                :                 :                :\n    .------+-------.\
    \ .------+-------. .-------+------. .-------+------.\n    | Intermediate | | Intermediate\
    \ | | Intermediate | | Intermediate |\n    | Selection    | | Selection    | |\
    \ Selection    | | Selection    |\n    | Process 1    | | Process 2    | | Process\
    \ 3    | | Process 4    |\n    '------|-|-----' '------|-------' '-----|--------'\
    \ '-------|------'\n           | +--------------+               | +----------------+\n\
    \           |                |               | |                |\n          \
    \ :          Flow Records / Packet Reports            :\n    .------+------. .-------+-----.\
    \   .-----+-+-----.    .-----+------.\n    | Collecting  | | Collecting  |   |\
    \ Collecting  |    | IPFIX File |\n    | Process 1   | | Process 2   |...| Process\
    \ N   |    | Reader     |\n    '------^------' '------^------'   '------^------'\
    \    '------------'\n           |               |                 |\n      Flow\
    \ Records   Flow Records      Flow Records\n         Figure F: IPFIX Mediation\
    \ Functional Block Diagram\n"
- title: 5.1.  Collecting Process
  contents:
  - "5.1.  Collecting Process\n   A Collecting Process in an IPFIX Mediator is not\
    \ different from the\n   Collecting Process described in [RFC5101].  Additional\
    \ functions in\n   an IPFIX Mediator include transmitting the set of Data Records\
    \ and\n   Control Information to one or more components, i.e., Intermediate\n\
    \   Processes and other applications.  In other words, a Collecting\n   Process\
    \ may duplicate the set and transmit it to one or more\n   components in sequence\
    \ or in parallel.  In the case of an IPFIX\n   Mediator, the Control Information\
    \ described in [RFC5470] includes\n   IPFIX Message Header information and Transport\
    \ Session Information\n   along with information about the Metering Process and\
    \ the Exporting\n   Process in an Original Exporter, e.g., Sampling parameters.\n"
- title: 5.2.  Exporting Process
  contents:
  - "5.2.  Exporting Process\n   An Exporting Process in an IPFIX Mediator is not\
    \ different from the\n   Exporting Process described in [RFC5101].  Additional\
    \ functions in an\n   IPFIX Mediator may include the following:\n   o  Receiving\
    \ the trigger to transmit the Template Withdrawal Messages\n      from Intermediate\
    \ Process(es) when relevant Templates become\n      invalid due to, for example,\
    \ incoming session failure.\n   o  Transmitting the origin (e.g., Observation\
    \ Point, Observation\n      Domain ID, Original Exporter IP address, etc.) of\
    \ the data in\n      additional Data Record fields or additional Data Records.\
    \  The\n      parameters that represent the origin should be configurable.\n"
- title: 5.3.  Intermediate Process
  contents:
  - "5.3.  Intermediate Process\n   An Intermediate Process is a key functional block\
    \ for IPFIX\n   Mediation.  Its typical functions include the following:\n   o\
    \  Generating a new record stream from an input record stream\n      including\
    \ context information (e.g., Observation Domain ID and\n      Transport Session\
    \ Information) and transmitting it to other\n      components.\n   o  Reporting\
    \ statistics and interpretations for IPFIX Metering\n      Processes, PSAMP Metering\
    \ Processes, and Exporting Processes from\n      an Original Exporter.  See Section\
    \ 4 of [RFC5101] and Section 6 of\n      [RFC5476] for relevant statistics data\
    \ structures and\n      interpretations, respectively.  Activation of this function\
    \ should\n      be configurable.\n   o  Maintaining the configurable relation\
    \ between Collecting\n      Process(es)/Metering Process(es) and Exporting Process(es)/other\n\
    \      Intermediate Process(es).\n   o  Maintaining database(s) of Data Records\
    \ in the case of an\n      Intermediate Aggregation Process and an Intermediate\
    \ Correlation\n      Process.  The function has the Data Record expiration rules\n\
    \      described in the next subsection.\n   o  Maintaining statistics on the\
    \ Intermediate Process itself, such as\n      the number of input/output Data\
    \ Records, etc.\n   o  Maintaining additional information about output record\
    \ streams,\n      which includes information related to the Original Exporters,\n\
    \      Observation Domain, and administrative domain as well as some\n      configuration\
    \ parameters related to each function.\n   In the case of an Intermediate Aggregation\
    \ Process, Intermediate\n   Anonymization Process, and Intermediate Correlation\
    \ Process, the\n   value of the \"flowKeyIndicator\" needs to be modified when\
    \ modifying\n   the data structure defined by an original Template.\n   For example,\
    \ an Intermediate Aggregation Process aggregating incoming\n   Flow Records composed\
    \ of the sourceIPv4Address and\n   destinationIPv4Address Flow Keys into outgoing\
    \ Flow Records with the\n   destinationIPv4Address Flow Key must modify the incoming\n\
    \   flowKeyIndicator to contain only the destinationIPv4Address.\n"
- title: 5.3.1.  Data Record Expiration
  contents:
  - "5.3.1.  Data Record Expiration\n   An Intermediate Aggregation Process and Intermediate\
    \ Correlation\n   Process need to have expiration conditions to export cached\
    \ Data\n   Records.  In the case of the Metering Process in an Original\n   Exporter,\
    \ these conditions are described in [RFC5470].  In the case\n   of the Intermediate\
    \ Process, these conditions are as follows:\n   o  If there are no input Data\
    \ Records belonging to a cached Flow for\n      a certain time period, aggregated\
    \ Flow Records will expire.  This\n      time period should be configurable at\
    \ the Intermediate Process.\n   o  If the Intermediate Process experiences resource\
    \ constraints\n      (e.g., lack of memory to store Flow Records), aggregated\
    \ Flow\n      Records may prematurely expire.\n   o  For long-running Flows, the\
    \ Intermediate Process should cause the\n      Flow to expire on a regular basis\
    \ or on the basis of an expiration\n      policy.  This periodicity or expiration\
    \ policy should be\n      configurable at the Intermediate Process.\n   In the\
    \ case of an Intermediate Correlation Process, a cached Data\n   Record may be\
    \ prematurely expired (and discarded) when no correlation\n   can be computed\
    \ with newly received Data Records.  For example, an\n   Intermediate Correlation\
    \ Process computing one-way delay may discard\n   the cached Packet Report when\
    \ no other matching Packet Report are\n   observed within a certain time period.\n"
- title: 5.3.2.  Specific Intermediate Processes
  contents:
  - "5.3.2.  Specific Intermediate Processes\n   This section describes the functional\
    \ blocks of specific Intermediate\n   Processes.\n"
- title: 5.3.2.1.  Intermediate Conversion Process
  contents:
  - "5.3.2.1.  Intermediate Conversion Process\n   When receiving a non-IPFIX record\
    \ stream, the Intermediate Conversion\n   Process covers the following functions:\n\
    \   o  Determining the IPFIX Information Element identifiers that\n      correspond\
    \ to the fields of the non-IPFIX records (e.g.,\n      converting the NetFlow\
    \ V9 protocol [RFC3954] to the IPFIX\n      Information Model [RFC5102]).\n  \
    \ o  Transforming the non-IPFIX records into Data Records, (Options)\n      Template\
    \ Records, and/or Data Records defined by Options\n      Templates.\n   o  Converting\
    \ additional information (e.g., sampling rate, sampling\n      algorithm, and\
    \ observation information) into appropriate fields in\n      the existing Data\
    \ Records or into Data Records defined by new\n      Options Templates.\n   IPFIX\
    \ transport protocol conversion can be used to enhance the export\n   reliability,\
    \ for example, for data retention and accounting.  In this\n   case, the Intermediate\
    \ Conversion Process covers the following\n   functions:\n   o  Relaying Data\
    \ Records, (Options) Template Records, and Data\n      Records defined by Options\
    \ Templates.\n   o  Setting the trigger for the Exporting Process in order to\
    \ export\n      IPFIX Template Withdrawal Messages relevant to the Templates when\n\
    \      Templates becomes invalid due to, for example, incoming session\n     \
    \ failure.  This case applies to SCTP and TCP Transport Sessions on\n      the\
    \ outgoing side only.\n   o  Maintaining the mapping information about Transport\
    \ Sessions,\n      Observation Domain IDs, and Template IDs on the incoming and\n\
    \      outgoing sides in order to ensure the consistency of scope field\n    \
    \  values of incoming and outgoing Data Records defined by Options\n      Templates\
    \ and of Template IDs of incoming and outgoing IPFIX\n      Template Withdrawal\
    \ Messages.\n"
- title: 5.3.2.2.  Intermediate Selection Process
  contents:
  - "5.3.2.2.  Intermediate Selection Process\n   An Intermediate Selection Process\
    \ has analogous functions to the\n   PSAMP Selection Process described in [RFC5475].\
    \  The difference is\n   that the Intermediate Selection Process takes a record\
    \ stream, e.g.,\n   Flow Records or Packet Reports, instead of observed packets\
    \ as its\n   input.\n   The typical function is property match filtering that\
    \ retrieves a\n   record stream of interest.  The function selects a Data Record\
    \ if the\n   value of a specific field in the Data Record equals a configured\n\
    \   value or falls within a configured range.\n"
- title: 5.3.2.3.  Intermediate Aggregation Process
  contents:
  - "5.3.2.3.  Intermediate Aggregation Process\n   An Intermediate Aggregation Process\
    \ covers the following functions:\n   o  Merging a set of Data Records within\
    \ a certain time period into\n      one Flow Record by summing up the counters\
    \ where appropriate.\n   o  Maintaining statistics and additional information\
    \ about aggregated\n      Flow Records.\n      The statistics for an aggregated\
    \ Flow Record may include the\n      number of original Data Records and the maximum\
    \ and minimum values\n      of per-flow counters.  Additional information may\
    \ include an\n      aggregation time period, a new set of Flow Keys, and observation\n\
    \      location information involved in the Flow aggregation.\n      Observation\
    \ location information can be tuples of (Observation\n      Point, Observation\
    \ Domain ID, Original Exporter IP address) or\n      another identifier indicating\
    \ the location where the measured\n      traffic has been observed.\n   o  Aggregation\
    \ of Data Records, which can be done in the following\n      ways:\n      *  Spatial\
    \ composition\n         With spatial composition, Data Records sharing common\n\
    \         properties are merged into one Flow Record within a certain\n      \
    \   time period.  One typical aggregation can be based on a new set\n        \
    \ of Flow Keys.  Generally, a set of common properties smaller\n         than\
    \ an original set of Flow Keys results in a higher level of\n         aggregation.\
    \  Another aggregation can be based on a set of\n         Observation Points within\
    \ an Observation Domain, on a set of\n         Observation Domains within an Exporter,\
    \ or on a set of\n         Exporters.\n         If some fields do not serve as\
    \ Flow Keys or per-Flow counters,\n         their values may change from Data\
    \ Records to Data Records\n         within an aggregated Flow Record.  The Intermediate\
    \ Aggregation\n         Process determines their values by the first Data Record\n\
    \         received, a specific Exporter IP address, or other appropriate\n   \
    \      decisions.\n         Furthermore, a new identifier indicating a group of\
    \ observation\n         locations can be introduced, for example, to indicate\
    \ PoPs\n         (Points of Presence) in a large network, or a logical interface\n\
    \         composed of physical interfaces with link aggregation.\n      *  Temporal\
    \ composition\n         With temporal composition, multiple Flow Records with\
    \ identical\n         Flow Key values are merged into a single Flow Record of\
    \ longer\n         Flow duration if they arrive within a certain time interval.\n\
    \         The main difference to spatial composition is that Flow Records\n  \
    \       are only merged if they originate from the same Observation\n        \
    \ Point and if the Flow Key values are identical.  For example,\n         multiple\
    \ Flow Records with a Flow duration of less than one\n         minute can be merged\
    \ into a single Flow Record with more than\n         ten minutes Flow duration.\n\
    \         In addition, the Intermediate Aggregation Process with temporal\n  \
    \       composition produces aggregated counters while reducing the\n        \
    \ number of Flow Records on a Collector.  Some specific non-key\n         fields,\
    \ such as the minimumIpTotalLength/maximumIpTotalLength\n         or minimumTTL/maximumTTL,\
    \ will contain the minimum and maximum\n         values for the new aggregated\
    \ Flow.\n      Spatial and temporal composition can be combined in a single\n\
    \      Intermediate Aggregation Process.  The Intermediate Aggregation\n     \
    \ Process can be combined with the Intermediate Selection Process in\n      order\
    \ to aggregate only a subset of the original Flow Records, for\n      example,\
    \ Flow Records with small numbers of packets as described\n      in Section 6.2.\n"
- title: 5.3.2.4.  Intermediate Anonymization Process
  contents:
  - "5.3.2.4.  Intermediate Anonymization Process\n   An Intermediate Anonymization\
    \ Process covers the following typical\n   functions:\n   o  Deleting specified\
    \ fields\n      The function deletes existing fields in accordance with some\n\
    \      instruction rules.  Examples include hiding network topology\n      information\
    \ and private information.  In the case of feeding Data\n      Records to end\
    \ customers, disclosing vulnerabilities is avoided by\n      deleting fields,\
    \ e.g., \"ipNextHopIP{v4|v6}Address\",\n      \"bgpNextHopIP{v4|v6}Address\",\
    \ \"bgp{Next|Prev}AdjacentAsNumber\",\n      and \"mplsLabelStackSection\", as\
    \ described in [RFC5102].\n   o  Anonymizing values of specified fields\n    \
    \  The function modifies the values of specified fields.  Examples\n      include\
    \ anonymizing customers' private information, such as IP\n      address and port\
    \ number, in accordance with a privacy protection\n      policy.  The Intermediate\
    \ Anonymization Process may also report\n      anonymized fields and the anonymization\
    \ method as additional\n      information.\n"
- title: 5.3.2.5.  Intermediate Correlation Process
  contents:
  - "5.3.2.5.  Intermediate Correlation Process\n   An Intermediate Correlation Process\
    \ can be viewed as a special case\n   of the Intermediate Aggregation Process,\
    \ covering the following\n   typical functions:\n   o  Producing new information\
    \ including metrics, counters, attributes,\n      or packet property parameters\
    \ by evaluating the correlation among\n      sets of Data Records or among Data\
    \ Records and other meta data\n      after gathering sets of Data Records within\
    \ a certain time period.\n   o  Adding new fields into a Data Record or creating\
    \ a new Data\n      Record.\n   A correlation of Data Records can be done in the\
    \ following ways,\n   which can be implemented individually or in combinations.\n\
    \   o  One-to-one correlation between Data Records, with the following\n     \
    \ examples:\n      *  One-way delay, Packet delay variation in [RFC5481]\n   \
    \      The metrics come from the correlation of the timestamp value on\n     \
    \    a pair of Packet Reports indicating an identical packet at\n         different\
    \ Observation Points in the network.\n      *  Packet inter-arrival time\n   \
    \      The metrics come from the correlation of the timestamp value on\n     \
    \    consecutive Packet Reports from a single Exporter.\n      *  Rate-limiting\
    \ ratio, compression ratio, optimization ratio,\n         etc.\n         The data\
    \ values come from the correlation of Data Records\n         indicating an identical\
    \ Flow observed on the incoming/outgoing\n         points of a WAN interface.\n\
    \   o  Correlation amongst Data Records, with the following examples:\n      *\
    \  Bidirectional Flow composition\n         The method of exporting and representing\
    \ a Bidirectional Flow\n         (Biflow) is described in [RFC5103].  The Bidirectional\
    \ Flow\n         composition is a special case of Flow Key aggregation.  The\n\
    \         Flow Records are merged into one Flow Record as Biflow if Non-\n   \
    \      directional Key Fields match and the Directional Key Fields\n         match\
    \ their reverse direction counterparts.  The direction\n         assignment method\
    \ to assign the Biflow Source and Destination\n         as additional information\
    \ may be reported.  In the case of an\n         Intermediate Aggregation Process,\
    \ the direction may be assigned\n         arbitrarily (see [RFC5103], Section\
    \ 5.3).\n      *  Average/maximum/minimum for packets, bytes, one-way delay,\n\
    \         packet loss, etc.\n         The data values come from the correlation\
    \ of multiple Data\n         Records gathered in a certain time interval.\n  \
    \ o  Correlation between Data Record and other meta data\n      Typical examples\
    \ are derived packet property parameters described\n      in [RFC5102].  The parameters\
    \ are retrieved based on the value of\n      the specified field in an input Data\
    \ Record, compensating for\n      traditional exporting devices or probes that\
    \ are unable to add\n      packet property parameters.  Typical derived packet\
    \ property\n      parameters are as follows:\n      *  \"bgpNextHop{IPv4|IPv6}Address\"\
    \ described in [RFC5102]\n         This value indicates the egress router of a\
    \ network domain.  It\n         is useful for making a traffic matrix that covers\
    \ the whole\n         network domain.\n      *  BGP community attributes\n   \
    \      This attribute indicates tagging for routes of geographical and\n     \
    \    topological information and source types (e.g., transit, peer,\n        \
    \ or customer) as described in [RFC4384].  Therefore, network\n         administrators\
    \ can monitor the geographically-based or source-\n         type-based traffic\
    \ volume by correlating the attribute.\n      *  \"mplsVpnRouteDistinguisher\"\
    \ described in [RFC5102]\n         This value indicates the VPN customer's identification,\
    \ which\n         cannot be extracted from the core router in MPLS networks.\n\
    \         Thanks to this correlation, network administrators can monitor\n   \
    \      the customer-based traffic volume even on core routers.\n"
- title: 6.  Component Combination
  contents:
  - "6.  Component Combination\n   An IPFIX Mediator may be able to simultaneously\
    \ support more than one\n   Intermediate Process.  Multiple Intermediate Processes\
    \ generally are\n   configured in the following ways.\n   o  Parallel Intermediate\
    \ Processes\n      A record stream is processed by multiple Intermediate Processes\
    \ in\n      parallel to fulfill the requirements of different applications.\n\
    \      In this setup, every Intermediate Process receives a copy of the\n    \
    \  entire record stream as its input.\n   o  Serial Intermediate Processes\n \
    \     To execute flexible manipulation of a record stream, the\n      Intermediate\
    \ Processes are connected serially.  In that case, an\n      output record stream\
    \ from one Intermediate Process forms an input\n      record stream for a succeeding\
    \ Intermediate Process.\n   In addition to the combination of Intermediate Processes,\
    \ the\n   combination of some components (Exporting Process, Collecting\n   Process,\
    \ IPFIX File Writer and Reader) can be applied to provide\n   various data reduction\
    \ techniques.  This section shows some\n   combinations along with examples.\n"
- title: 6.1.  Data-Based Collector Selection
  contents:
  - "6.1.  Data-Based Collector Selection\n   The combination of one or more Intermediate\
    \ Selection Processes and\n   Exporting Processes can determine to which Collector\
    \ input Data\n   Records are exported.  Applicable examples include exporting\
    \ Data\n   Records to a dedicated Collector on the basis of a customer or an\n\
    \   organization.  For example, an Intermediate Selection Process selects\n  \
    \ Data Records from a record stream on the basis of the peering\n   autonomous\
    \ system number, and an Exporting Process sends them to a\n   dedicated Collector,\
    \ as shown in the Figure G.\n             .----------------------.   .------------.\n\
    \             | Intermediate         |   | Exporting  |\n             |  Selection\
    \ Process 1 |   |  Process 1 |\n          +--+--- Peering AS #10 ---+-->|    \
    \        +--> Collector 1\n          |  '----------------------'   '------------'\n\
    \          |  .----------------------.   .------------.\n   record |  | Intermediate\
    \         |   | Exporting  |\n   stream |  |  Selection Process 2 |   |  Process\
    \ 2 |\n   -------+--+--- Peering AS #20 ---+-->|            +--> Collector 2\n\
    \          |  '----------------------'   '------------'\n          |  .----------------------.\
    \   .------------.\n          |  | Intermediate         |   | Exporting  |\n \
    \         |  |  Selection Process 3 |   |  Process 3 |\n          +--+--- Peering\
    \ AS #30 ---+-->|            +--> Collector 3\n             '----------------------'\
    \   '------------'\n             Figure G: Data-Based Collector Selection\n"
- title: 6.2.  Flow Selection and Aggregation
  contents:
  - "6.2.  Flow Selection and Aggregation\n   The combination of one or more Intermediate\
    \ Selection Processes and\n   Intermediate Aggregation Processes can efficiently\
    \ reduce the amount\n   of Flow Records.  The combination structure is similar\
    \ to the concept\n   of the Composite Selector described in [RFC5474].  For example,\
    \ an\n   Intermediate Selection Process selects Flows consisting of a small\n\
    \   number of packets and then transmits them to an Intermediate\n   Aggregation\
    \ Process.  Another Intermediate Selection Process selects\n   other Flow Records\
    \ and then transmits them to an Exporting Process,\n   as shown in Figure H. \
    \ This results in aggregation on the basis of\n   the distribution of the number\
    \ of packets per Flow.\n            .------------------.  .--------------.  .------------.\n\
    \            | Intermediate     |  | Intermediate |  | Exporting  |\n        \
    \    |   Selection      |  |  Aggregation |  |    Process |\n            |   \
    \     Process 1 |  |     Process  |  |            |\n          +-+ packetDeltaCount\
    \ +->|              +->|            |\n          | |             <= 5 |  |   \
    \           |  |            |\n   record | '------------------'  '--------------'\
    \  |            |\n   stream | .------------------.                    |     \
    \       |\n   -------+ | Intermediate     |                    |            |\n\
    \          | |   Selection      |                    |            |\n        \
    \  | |        Process 2 |                    |            |\n          +-+ packetDeltaCount\
    \ +------------------->|            |\n            |              > 5 |      \
    \              |            |\n            '------------------'              \
    \      '------------'\n          Figure H: Flow Selection and Aggregation Example\n"
- title: 6.3.  IPFIX File Writer/Reader
  contents:
  - "6.3.  IPFIX File Writer/Reader\n   An IPFIX File Writer [RFC5655] stores Data\
    \ Records in a file system.\n   When Data Records include problematic Information\
    \ Elements, an\n   Intermediate Anonymization Process can delete these fields\
    \ before the\n   IPFIX File Writer handles them, as shown in Figure I.\n     \
    \     .---------------.  .---------------.  .-------------.\n          | Collecting\
    \    |  | Intermediate  |  | IPFIX       |\n    IPFIX |      Process  |  | Anonymization\
    \ |  |   File      |\n    ----->|               +->|       Process +->|      Writer\
    \ |\n          '---------------'  '---------------'  '-------------'\n      Figure\
    \ I: IPFIX Mediation Example with IPFIX File Writer\n   In contrast, an IPFIX\
    \ File Reader [RFC5655] retrieves stored Data\n   Records when administrators\
    \ want to retrieve past Data Records from a\n   given time period.  If the data\
    \ structure of the Data Records from\n   the IPFIX File Reader is different from\
    \ what administrators want, an\n   Intermediate Anonymization Process and Intermediate\
    \ Correlation\n   Process can modify the data structure, as shown in Figure J.\n\
    \    .-------------.  .---------------.  .---------------.  .-----------.\n  \
    \  | IPFIX       |  | Intermediate  |  | Intermediate  |  | Exporting |\n    |\
    \   File      |  | Anonymization |  |   Correlation |  |   Process |\n    |  \
    \    Reader +->|       Process +->|       Process +->|           |\n    '-------------'\
    \  '---------------'  '---------------'  '-----------'\n      Figure J: IPFIX\
    \ Mediation Example with IPFIX File Reader\n   In the case where distributed IPFIX\
    \ Mediators enable on-demand export\n   of Data Records that have been previously\
    \ stored by a File Writer, a\n   collecting infrastructure with huge storage capacity\
    \ for data\n   retention can be set up.\n"
- title: 7.  Encoding for IPFIX Message Header
  contents:
  - "7.  Encoding for IPFIX Message Header\n   The IPFIX Message Header [RFC5101]\
    \ includes Export Time, Sequence\n   Number, and Observation Domain ID fields.\
    \  This section describes\n   some consideration points for the IPFIX Message\
    \ Header encoding in\n   the context of IPFIX Mediation.\n   Export Time\n   \
    \   An IPFIX Mediator can set the Export Time in two ways.\n      *  Case 1: keeping\
    \ the field value of incoming Transport Sessions\n      *  Case 2: setting the\
    \ time at which an IPFIX Message leaves the\n         IPFIX Mediator\n      Case\
    \ 1 can be applied when an IPFIX Mediator operates as a proxy\n      at the IPFIX\
    \ Message level rather than the Data Record level.  In\n      case 2, the IPFIX\
    \ Mediator needs to handle any delta timestamp\n      fields described in [RFC5102],\
    \ such as\n      \"flowStartDeltaMicroseconds\" and \"flowEndDeltaMicroseconds\"\
    .\n   Sequence Number\n      In the case where an IPFIX Mediator relays IPFIX\
    \ Messages from one\n      Transport Session to another Transport Session, the\
    \ IPFIX Mediator\n      needs to handle the Sequence Number properly.  In particular,\
    \ the\n      Sequence Number in the outgoing session is not allowed to be re-\n\
    \      initialized, even when the incoming session shuts down and\n      restarts.\n\
    \   Observation Domain ID\n      According to [RFC5101], the Observation Domain\
    \ ID in the IPFIX\n      Message Header is locally unique per Exporting Process.\
    \  In\n      contrast to the Observation Domain ID used by an Original\n     \
    \ Exporter, the Observation Domain ID used by an IPFIX Mediator does\n      not\
    \ necessarily represent a set of Observation Points located at\n      the IPFIX\
    \ Mediator itself.\n      An IPFIX Mediator may act as a proxy by relaying entire\
    \ IPFIX\n      Messages.  In this case, it may report information about the\n\
    \      Original Exporters by using the Observation Domain ID of the\n      outgoing\
    \ Messages as the scope field in an Options Template\n      Record.\n      Otherwise,\
    \ the IPFIX Mediator should have a function to export the\n      observation location\
    \ information regarding the Original Exporter.\n      The information contains\
    \ the IP addresses and Observation Domain\n      IDs used by the Original Exporters\
    \ and some information about the\n      Transport Session, for example, the source\
    \ port number, so that\n      different Exporting Processes on the same Original\
    \ Exporter can be\n      identified.  As far as privacy policy permits, an IPFIX\
    \ Mediator\n      reports the information to an IPFIX Collector.\n      If information\
    \ about a set of Original Exporters needs to be\n      reported, it can be useful\
    \ to export it as Common Properties as\n      specified in [RFC5473].  The commonPropertiesID\
    \ may then serve as\n      a scope for the set of Original Exporters.  The Common\
    \ Properties\n      Withdrawal Message [RFC5473] can be used to indicate that\
    \ an\n      incoming Transport Session from one of the Original Exporters was\n\
    \      closed.\n"
- title: 8.  Information Model
  contents:
  - "8.  Information Model\n   IPFIX Mediation reuses the general information models\
    \ from [RFC5102]\n   and [RFC5477], and, depending on the Intermediate Processes\
    \ type,\n   potentially Information Elements such as:\n   o  Original Exporter\
    \ IP address, Observation Domain ID, and source\n      port number about the Transport\
    \ Session at the Original Exporter,\n      in the case where an IPFIX Mediator\
    \ reports original observation\n      location information in Section 7.  The\
    \ Information Elements\n      contained in the Export Session Details Options\
    \ Template in\n      [RFC5655] may be utilized for this purpose.\n   o  Report\
    \ on the applied IPFIX Mediation functions as described in\n      Section 6.7.\
    \ in [RFC5982].\n   o  Certificate of an Original Exporter in Section 9.  The\
    \ Information\n      Element exporterCertificate in [RFC5655] may be utilized\
    \ for this\n      purpose.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   As Mediators act as both IPFIX Collecting Processes\
    \ and Exporting\n   Processes, the Security Considerations for IPFIX [RFC5101]\
    \ also apply\n   to Mediators.  The Security Considerations for IPFIX Files [RFC5655]\n\
    \   also apply to IPFIX Mediators that write IPFIX Files or use them for\n   internal\
    \ storage.  In addition, there are a few specific\n   considerations that IPFIX\
    \ Mediator implementations must take into\n   account.\n   By design, IPFIX Mediators\
    \ are \"men-in-the-middle\": they intercede in\n   the communication between an\
    \ Original Exporter (or another upstream\n   Mediator) and a downstream Collecting\
    \ Process.  TLS provides no way\n   to connect the session between the Mediator\
    \ and the Original Exporter\n   to the session between the Mediator and the downstream\
    \ Collecting\n   Process; indeed, this is by design.  This has important implications\n\
    \   for the level of confidentiality provided across an IPFIX Mediator\n   and\
    \ the ability to protect data integrity and Original Exporter\n   authenticity\
    \ across a Mediator.  In general, a Mediator should\n   maintain the same level\
    \ of integrity and confidentiality protection\n   on both sides of the mediation\
    \ operation, except in situations where\n   the Mediator is explicitly deployed\
    \ as a gateway between trusted and\n   untrusted networks.\n   Subsequent subsections\
    \ deal with specific security issues raised by\n   IPFIX Mediation.\n"
- title: 9.1.  Avoiding Security Level Downgrade
  contents:
  - "9.1.  Avoiding Security Level Downgrade\n   An IPFIX Mediator that accepts IPFIX\
    \ Messages over a Transport\n   Session protected by TLS [RFC5246] or DTLS [RFC4347]\
    \ and that then\n   exports IPFIX Messages derived therefrom in cleartext is a\n\
    \   potentially serious vulnerability in an IPFIX infrastructure.  The\n   concern\
    \ here is that confidentiality protection may be lost across a\n   Mediator.\n\
    \   Therefore, an IPFIX Mediator that receives IPFIX Messages from an\n   upstream\
    \ Exporting Process protected using TLS or DTLS must provide\n   for sending of\
    \ IPFIX Messages resulting from the operation of the\n   Intermediate Process(es)\
    \ to a downstream Collecting Process using TLS\n   or DTLS by default.  It may\
    \ be configurable to export records derived\n   from protected records in cleartext\
    \ but only when application\n   requirements allow.\n   There are two common use\
    \ cases for this.  First, a Mediator\n   performing a transformation that leads\
    \ to a reduction in the required\n   level of security (e.g., by removing all\
    \ information requiring\n   confidentiality from the output records) may export\
    \ records\n   downstream without confidentiality protection.  Second, a mediator\n\
    \   that acts as a proxy between an external (untrusted) network and an\n   internal\
    \ (trusted) network may export records without TLS when the\n   additional overhead\
    \ of TLS is unnecessary (e.g., on a physically\n   protected network in the same\
    \ locked equipment rack).\n"
- title: 9.2.  Avoiding Security Level Upgrade
  contents:
  - "9.2.  Avoiding Security Level Upgrade\n   There is a similar problem in the opposite\
    \ direction: as an IPFIX\n   Mediator's signature on a TLS session to a downstream\
    \ Collecting\n   Process acts as an implicit assertion of the trustworthiness\
    \ of the\n   data within the session, a poorly deployed IPFIX Mediator could be\n\
    \   used to \"legitimize\" records derived from untrusted sources.\n   Unprotected\
    \ sessions from the Original Exporter are generally\n   untrusted, because they\
    \ could have been tampered with or forged by an\n   unauthorized third party.\
    \  The concern here is that a Mediator could\n   be used to add inappropriate\
    \ trust to external information whose\n   integrity cannot be guaranteed.\n  \
    \ When specific deployment requirements allow, an IPFIX Mediator may\n   export\
    \ signed IPFIX Messages containing records derived from records\n   received without\
    \ integrity protection via TLS.  One such deployment\n   consideration would be\
    \ the reverse of the second case above: when the\n   Mediator acts as a proxy\
    \ between an internal (trusted) and an\n   external (untrusted) network and when\
    \ the path from the Original\n   Exporter is protected using some other method\
    \ and the overhead of a\n   TLS session is unnecessary.\n   In such cases, the\
    \ IPFIX Mediator should notify the downstream\n   Collector about the missing\
    \ protection of all or part of the original\n   record stream as part of the Transport\
    \ Session Information.\n"
- title: 9.3.  Approximating End-to-End Assertions for IPFIX Mediators
  contents:
  - "9.3.  Approximating End-to-End Assertions for IPFIX Mediators\n   Because the\
    \ Transport Session between an IPFIX Mediator and an\n   Original Exporter is\
    \ independent from the Transport Session between\n   the Mediator and the downstream\
    \ Collecting Process, there is no\n   existing method via TLS to assert the identity\
    \ of the original\n   Exporting Process downstream.  However, an IPFIX Mediator,\
    \ which\n   modifies the stream of IPFIX Messages sent to it, is by definition\
    \ a\n   trusted entity in the infrastructure.  Therefore, the IPFIX\n   Mediator's\
    \ signature on an outgoing Transport Session can be treated\n   as an implicit\
    \ assertion that the Original Exporter was positively\n   identified by the Mediator\
    \ and that the source information it\n   received was trustworthy.  However, as\
    \ noted in the previous section,\n   IPFIX Mediators must in this circumstance\
    \ take care not to provide an\n   inappropriate upgrade of trust.\n   If the X.509\
    \ certificates [RFC5280] used to protect a Transport\n   Session between an Original\
    \ Exporter and an IPFIX Mediator are\n   required downstream, an IPFIX Mediator\
    \ may export Transport Session\n   Information, including the exporterCertificate\
    \ and the\n   collectorCertificate Information Elements, with the Export Session\n\
    \   Details Options Template defined in Section 8.1.3 of [RFC5655] or the\n  \
    \ Message Details Options Template defined in Section 8.1.4 of\n   [RFC5655] in\
    \ order to export this information downstream.  However,\n   in this case, the\
    \ IPFIX Mediator is making an implicit assertion that\n   the upstream session\
    \ was properly protected and therefore trustworthy\n   or that the Mediator has\
    \ otherwise been configured to trust the\n   information from the Original Exporter\
    \ and, as such, must protect the\n   Transport Session to the downstream Collector\
    \ using TLS or DTLS as\n   well.\n"
- title: 9.4.  Multiple Tenancy
  contents:
  - "9.4.  Multiple Tenancy\n   Information from multiple sources may only be combined\
    \ within a\n   Mediator when that Mediator is applied for that specific purpose\n\
    \   (e.g., spatial aggregation or concentration of records).  In all\n   other\
    \ cases, an IPFIX Mediator must provide for keeping traffic data\n   from multiple\
    \ sources separate.  Though the details of this are\n   application-specific,\
    \ this generally entails separating Transport\n   Sessions within the Mediator\
    \ and associating them with information\n   related to the source or purpose,\
    \ e.g., network or hardware address\n   range, virtual LAN tag, interface identifiers,\
    \ and so on.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC5101]   Claise, B., Ed., \"Specification\
    \ of the IP Flow\n               Information Export (IPFIX) Protocol for the Exchange\
    \ of\n               IP Traffic Flow Information\", RFC 5101, January 2008.\n\
    \   [RFC5470]   Sadasivan, G., Brownlee, N., Claise, B., and J. Quittek,\n   \
    \            \"Architecture for IP Flow Information Export\", RFC 5470,\n    \
    \           March 2009.\n   [RFC5476]   Claise, B., Ed., Johnson, A., and J. Quittek,\
    \ \"Packet\n               Sampling (PSAMP) Protocol Specifications\", RFC 5476,\n\
    \               March 2009.\n   [RFC5655]   Trammell, B., Boschi, E., Mark, L.,\
    \ Zseby, T., and A.\n               Wagner, \"Specification of the IP Flow Information\
    \ Export\n               (IPFIX) File Format\", RFC 5655, October 2009.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [PSAMP-MIB] Dietz, T., Claise, B., and J. Quittek,\
    \ \"Definitions of\n               Managed Objects for Packet Sampling\", Work\
    \ in Progress,\n               March 2011.\n   [RFC3917]   Quittek, J., Zseby,\
    \ T., Claise, B., and S. Zander,\n               \"Requirements for IP Flow Information\
    \ Export (IPFIX)\",\n               RFC 3917, October 2004.\n   [RFC3954]   Claise,\
    \ B., Ed., \"Cisco Systems NetFlow Services Export\n               Version 9\"\
    , RFC 3954, October 2004.\n   [RFC4347]   Rescorla, E. and N. Modadugu, \"Datagram\
    \ Transport Layer\n               Security\", RFC 4347, April 2006.\n   [RFC4384]\
    \   Meyer, D., \"BGP Communities for Data Collection\", BCP\n               114,\
    \ RFC 4384, February 2006.\n   [RFC5102]   Quittek, J., Bryant, S., Claise, B.,\
    \ Aitken, P., and J.\n               Meyer, \"Information Model for IP Flow Information\n\
    \               Export\", RFC 5102, January 2008.\n   [RFC5103]   Trammell, B.\
    \ and E. Boschi, \"Bidirectional Flow Export\n               Using IP Flow Information\
    \ Export (IPFIX)\", RFC 5103,\n               January 2008.\n   [RFC5246]   Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n               (TLS) Protocol\
    \ Version 1.2\", RFC 5246, August 2008.\n   [RFC5280]   Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n               Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n               Infrastructure Certificate and Certificate\
    \ Revocation\n               List (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5472]\
    \   Zseby, T., Boschi, E., Brownlee, N., and B. Claise, \"IP\n               Flow\
    \ Information Export (IPFIX) Applicability\", RFC 5472,\n               March\
    \ 2009.\n   [RFC5473]   Boschi, E., Mark, L., and B. Claise, \"Reducing Redundancy\n\
    \               in IP Flow Information Export (IPFIX) and Packet Sampling\n  \
    \             (PSAMP) Reports\", RFC 5473, March 2009.\n   [RFC5474]   Duffield,\
    \ N., Ed., Chiou, D., Claise, B., Greenberg, A.,\n               Grossglauser,\
    \ M., and J. Rexford, \"A Framework for Packet\n               Selection and Reporting\"\
    , RFC 5474, March 2009.\n   [RFC5475]   Zseby, T., Molina, M., Duffield, N., Niccolini,\
    \ S., and\n               F. Raspall, \"Sampling and Filtering Techniques for\
    \ IP\n               Packet Selection\", RFC 5475, March 2009.\n   [RFC5477] \
    \  Dietz, T., Claise, B., Aitken, P., Dressler, F., and G.\n               Carle,\
    \ \"Information Model for Packet Sampling Exports\",\n               RFC 5477,\
    \ March 2009.\n   [RFC5481]   Morton, A. and B. Claise, \"Packet Delay Variation\n\
    \               Applicability Statement\", RFC 5481, March 2009.\n   [RFC5815]\
    \   Dietz, T., Ed., Kobayashi, A., Claise, B., and G. Muenz,\n               \"\
    Definitions of Managed Objects for IP Flow Information\n               Export\"\
    , RFC 5815, April 2010.\n   [RFC5982]   Kobayashi, A., Ed., and B. Claise, Ed.,\
    \ \"IP Flow\n               Information Export (IPFIX) Mediation: Problem Statement\"\
    ,\n               RFC 5982, August 2010.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   We would like to thank the following persons: Brian\
    \ Trammell for his\n   contribution regarding the improvement of the terminology\
    \ section and\n   the security considerations section; Daisuke Matsubara, Tsuyoshi\n\
    \   Kondoh, Hiroshi Kurakami, and Haruhiko Nishida for their contribution\n  \
    \ during the initial phases of the document; Nevil Brownlee and Juergen\n   Quittek\
    \ for their technical reviews and feedback.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Atsushi Kobayashi\n   Nippon Telegraph and Telephone East\
    \ Corporation\n   26F 3-20-2, Nishi-shinjuku 3-chome\n   Shinjuku, Tokyo 163-8019\n\
    \   Japan\n   Phone: +81-3-5353-3636\n   EMail: akoba@orange.plala.or.jp\n   Benoit\
    \ Claise\n   Cisco Systems, Inc.\n   De Kleetlaan 6a b1\n   Diegem 1831\n   Belgium\n\
    \   Phone: +32 2 704 5622\n   EMail: bclaise@cisco.com\n   Gerhard Muenz\n   Technische\
    \ Universitaet Muenchen\n   Boltzmannstr. 3\n   Garching 85748\n   Germany\n \
    \  EMail: muenz@net.in.tum.de\n   URI: http://www.net.in.tum.de/~muenz\n   Keisuke\
    \ Ishibashi\n   NTT Service Integration Platform Laboratories\n   3-9-11 Midori-cho\n\
    \   Musashino-shi 180-8585\n   Japan\n   Phone: +81-422-59-3407\n   EMail: ishibashi.keisuke@lab.ntt.co.jp\n"
