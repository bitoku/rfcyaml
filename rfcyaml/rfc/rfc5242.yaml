- title: __initial_text__
  contents:
  - ''
- title: 'A Generalized Unified Character Code: Western European and CJK Sections'
  contents:
  - 'A Generalized Unified Character Code: Western European and CJK Sections

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This is not an IETF document.  Readers should be aware of RFC 4690,\n\
    \   \"Review and Recommendations for Internationalized Domain Names\n   (IDNs)\"\
    , and its references.\n   This document is not a candidate for any level of Internet\
    \ Standard.\n   The IETF disclaims any knowledge of the fitness of this document\
    \ for\n   any purpose, and in particular notes that it has not had IETF review\n\
    \   for such things as security, congestion control, or inappropriate\n   interaction\
    \ with deployed protocols.  The RFC Editor has chosen to\n   publish this document\
    \ at its discretion.  Readers of this document\n   should exercise caution in\
    \ evaluating its value for implementation\n   and deployment.\n"
- title: Abstract
  contents:
  - "Abstract\n   Many issues have been identified with the use of general-purpose\n\
    \   character sets for internationalized domain names and similar\n   purposes.\
    \  This memo describes a fully unified coded character set\n   for scripts based\
    \ on Latin, Greek, Cyrillic, and Chinese (CJK)\n   characters.  It is not a complete\
    \ specification of that character\n   set.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Terminology  . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Discussion . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   2.  Types of Characters  . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     2.1.  Base Character . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n     2.2.  Nonspacing Marks . . . . . . . . . . . . . . . . . . . .\
    \ .  4\n     2.3.  Case Indicators  . . . . . . . . . . . . . . . . . . . . .\
    \  4\n     2.4.  Joining Indicators . . . . . . . . . . . . . . . . . . . .  5\n\
    \     2.5.  Character-Matrix Positioning Indicators  . . . . . . . . .  5\n  \
    \   2.6.  Position Shaping Controls  . . . . . . . . . . . . . . . .  6\n    \
    \ 2.7.  Repetition Indicators  . . . . . . . . . . . . . . . . . .  6\n     2.8.\
    \  Control Characters . . . . . . . . . . . . . . . . . . . .  7\n   3.  Code\
    \ Assigment Groupings . . . . . . . . . . . . . . . . . . .  7\n   4.  Canonical\
    \ Form . . . . . . . . . . . . . . . . . . . . . . . .  7\n   5.  Examples of\
    \ Graphic Element Codes  . . . . . . . . . . . . . .  8\n   6.  Composite Characters\
    \ and Unicode Equivalences  . . . . . . . . 10\n   7.  Ideographic Characters\
    \ . . . . . . . . . . . . . . . . . . . . 11\n   8.  IANA Considerations  . .\
    \ . . . . . . . . . . . . . . . . . . . 11\n   9.  Security Considerations  .\
    \ . . . . . . . . . . . . . . . . . . 12\n   10. Acknowledgments  . . . . . .\
    \ . . . . . . . . . . . . . . . . . 12\n   11. References . . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . 13\n     11.1. Normative References . . . .\
    \ . . . . . . . . . . . . . . . 13\n     11.2. Informative References . . . .\
    \ . . . . . . . . . . . . . . 13\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many issues have been identified with the use of general-purpose\n\
    \   character sets for internationalized domain names and similar\n   purposes.\
    \  This memo specifies a fully unified coded character set\n   for scripts based\
    \ on Latin, Greek, Cyrillic, and Chinese characters.\n   There are four important\
    \ principles in this work:\n   1.  If it looks alike, it is alike.  The number\
    \ of base characters\n       and marks should be minimized.  Glyphs are more important\
    \ than\n       character abstractions.\n   2.  If it is the same thing, it is\
    \ the same thing.  Two symbols that\n       have the same semantic meaning in\
    \ all contexts should be encoded\n       in a way that allows their identity to\
    \ be discovered by removing\n       modifiers, rather than having to resort to\
    \ external equivalence\n       tables.\n   3.  For simplicity, when a character\
    \ form can be evaluated on the\n       basis of either serif or sanserif fonts,\
    \ the sanserif font is\n       always preferred.\n   4.  The use of combining\
    \ characters and modifiers is preferred to\n       adding more base characters.\n\
    \   Based on these principles, it becomes obvious that:\n   o  Ligatures, digraphs,\
    \ and final forms are constructed with special\n      modifiers so that relationships\
    \ to basic forms are obvious.\n   o  Symbols consisting of multiple marks are\
    \ always constructed from\n      combining characters and positional modifiers;\
    \ thus, the \"i\"\n      character is constructed from the vertical line symbol\
    \ followed by\n      a combining dot above.  Similarly \"f\" is composed of a\
    \ centered\n      vertical line, a right hook in the top position, and an\n  \
    \    appropriately-positioned composing hyphen.\n   This document draws strongly\
    \ from the design and terminology of\n   Unicode [Unicode] but represents a radically\
    \ different approach.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   All special-use terms in this document, including descriptions\
    \ of\n   behaviors and related relationships, are used with their common-sense\n\
    \   meanings.\n"
- title: 1.2.  Discussion
  contents:
  - "1.2.  Discussion\n   Questions to, and contributions for, this coding system\
    \ should be\n   addressed to the mailing list\n   unified-ccs@xn--iwem3b1f.xn--90ase1a.bogus.domain.name.\n"
- title: 2.  Types of Characters
  contents:
  - "2.  Types of Characters\n   This document defines several types of characters.\
    \  Note that these\n   definitions are not the same as the Unicode definitions\
    \ for similar\n   or identical terms.\n"
- title: 2.1.  Base Character
  contents:
  - "2.1.  Base Character\n   Any character that is used as an atomic shape, rather\
    \ than being\n   assembled from such a character in combination with combining\n\
    \   (overstriking) marks, symbols, or specially-designed base characters.\n  \
    \ When used alone, base characters always take up space.  For example,\n   a,\
    \ c, l,...\n"
- title: 2.2.  Nonspacing Marks
  contents:
  - "2.2.  Nonspacing Marks\n   Marks, symbols, and character components that are\
    \ used to form\n   characters when used in combination with base characters. \
    \ They do\n   not occupy separate character positions when displayed.\n   For\
    \ example, the special combining symbols LeftUpperHook and\n   RightLowerHook,\
    \ described in Section 5, are nonspacing marks.\n"
- title: 2.3.  Case Indicators
  contents:
  - "2.3.  Case Indicators\n   In scripts with case, only the lower-case characters\
    \ are base\n   characters.  Upper-case forms are represented by using the UC\n\
    \   modifier.  So the traditional \"A\" character is represented by\n   \"a<UC>\"\
    .  Note that this means that case-independent comparisons are\n   made simply\
    \ by ignoring the <UC> modifiers rather than by complicated\n   mapping operations.\n\
    \   The initial set of case modifiers consists exclusively of:\n   UC Upper-case,\
    \ code value 1 (hexadecimal)\n   The code values two through four are reserved\
    \ for the impending\n   encoding of scripts with more than two cases; five is\
    \ reserved for\n   expansion in case a script with more than four cases is identified.\n"
- title: 2.4.  Joining Indicators
  contents:
  - "2.4.  Joining Indicators\n   Zero-width joiners are used to build characters,\
    \ not only to separate\n   or join words.  As compared to Unicode, a richer set\
    \ of joiners is\n   used to distinguish between the inter-word and ligature-forming\n\
    \   (including half-character forming) cases.  Unicode ZWJ and ZWNJ are\n   supplemented\
    \ by ZWCJ, OJ, and ONJ.  ZWCJ is used to modify a spacing\n   basic character\
    \ into a nonspacing role.  For example, there is no \"w\"\n   character, but only\
    \ \"u<ZWCJ>u\".  Upper-case \"W\" is coded as\n   u<ZWCJ>u<UC> -- the CWCJ binds\
    \ more tightly than the UC modifier.\n   The initial set of joining indicators\
    \ consists exclusively of:\n   ZWCJ  Character joiner (also known as \"ligature\
    \ joiner\"), code value\n      6 (hexadecimal).\n   OJ Overlay joiner (permits\
    \ use of a subsequent character that would\n      normally be spacing as nonspacing),\
    \ code value 7 (hexadecimal).\n   ONJ  Overlay non-joiner (turns a nonspacing\
    \ mark into a standalone\n      character), code value 8 (hexadecimal).  This\
    \ joiner should not be\n      necessary, and is normally prohibited by the \"\
    shortest string\"\n      rule.  But there may be unanticipated cases.\n   ZWJ\
    \  Zero-width joiner for words or word-like constructions, code\n      value 9\
    \ (hexadecimal).\n   ZWNJ  Zero-width non-joiner for words or word-like constructions,\n\
    \      code value A (hexadecimal).\n"
- title: 2.5.  Character-Matrix Positioning Indicators
  contents:
  - "2.5.  Character-Matrix Positioning Indicators\n   Many characters are defined\
    \ by constructed glyphs using nonspacing\n   marks.  For example, the characters\
    \ \"b\" and \"d\" are coded as\n   o<VerticalLine><PositionLeft> and o<VerticalLine><PositionRight>,\n\
    \   respectively.  The Catalan ligature that has caused some difficulties\n  \
    \ in Internationalizing Domain Names in Applications (IDNA) [RFC3490]\n   is coded\
    \ as l<ZWCJ><.><PositionVMiddle><ZWCJ>l\n   The initial table of positioning indicators\
    \ is:\n                     +-------------------+-----------+\n              \
    \       | Name              | Hex value |\n                     +-------------------+-----------+\n\
    \                     | PositionLeft      |        20 |\n                    \
    \ | PositionCenter    |        21 |\n                     | PositionRight    \
    \ |        22 |\n                     | PositionTop       |        30 |\n    \
    \                 | PositionVMiddle   |        31 |\n                     | PositionBottom\
    \    |        32 |\n                     | PositionDescender |        33 |\n \
    \                    +-------------------+-----------+\n"
- title: 2.6.  Position Shaping Controls
  contents:
  - "2.6.  Position Shaping Controls\n   These controls designate character form changes\
    \ for initial or final-\n   form characters.  Where the distinction is important,\
    \ medial-form\n   characters are the default when no qualification occurs.  As\
    \ with\n   case comparisons, comparisons are performed by ignoring these control\n\
    \   functions.\n                        +-------------+-----------+\n        \
    \                | Name        | Hex value |\n                        +-------------+-----------+\n\
    \                        | InitialForm |        71 |\n                       \
    \ | FinalForm   |        72 |\n                        +-------------+-----------+\n"
- title: 2.7.  Repetition Indicators
  contents:
  - "2.7.  Repetition Indicators\n   For compactness of coding, two repetition indicators\
    \ are introduced\n   for double (Repeat2) and triple (Repeat3) characters that\
    \ may be\n   treated as ligatures or special cases.  Two consecutive uses of a\n\
    \   character compare equal to the character followed by <Repeat2>.  The\n   interpretation\
    \ of u<ZWCJ>u<Repeat3> is left as an exercise for the\n   reader.\n          \
    \    The initial table of repetition indicators is:\n                        \
    \  +---------+-----------+\n                          | Name    | Hex value |\n\
    \                          +---------+-----------+\n                         \
    \ | Repeat2 |        50 |\n                          | Repeat3 |        51 |\n\
    \                          | Repeat1 |        52 |\n                         \
    \ +---------+-----------+\n   For larger repeats, these repeats can be combined;\
    \ the sequence\n   <Repeat2><Repeat3> represents six repeats, while the\n   <Repeat3><Repeat2>\
    \ represents five repeats.  Following the \"shortest\n   string\" principle (see\
    \ Section 4), Repeat1 must not ever appear\n   except in combination with Repeat2\
    \ and/or Repeat3.  The generation of\n   other numbers is left as an exercise\
    \ for the reader.\n"
- title: 2.8.  Control Characters
  contents:
  - "2.8.  Control Characters\n   Because it is intended primarily for domain names,\
    \ this specification\n   has no provision for control or spacing characters.\n"
- title: 3.  Code Assigment Groupings
  contents:
  - "3.  Code Assigment Groupings\n   Following the reasoning used in Unicode [Unicode],\
    \ every character\n   occupies exactly 23 bits (conventionally stored as three\
    \ octets, with\n   the leading bit always zero).  This value is chosen because\
    \ both 3\n   and 23 are prime numbers, unlike 42.\n   The code point value zero\
    \ is permanently reserved and will not be\n   used unless it is necessary to expand\
    \ the code space.\n   Code values between 1 and 255 (decimal) are reserved for\
    \ the special\n   character formation codes described in Section 2.3 through\n\
    \   Section 2.7.\n   Code values between 256 and 511 (decimal) are reserved for\
    \ character\n   formation marks for non-ideographic characters.  Most, but not\
    \ all,\n   of these are nonspacing (combining) characters.\n   Code values between\
    \ 512 and 1023 are reserved on general principles\n   and in case it is necessary\
    \ to invent new rules and make them\n   retroactive.\n   Code values of 1024 and\
    \ above are to be allocated for characters,\n   glyphs, and other character elements.\n"
- title: 4.  Canonical Form
  contents:
  - "4.  Canonical Form\n   When glyphs are constructed using the mechanisms described\
    \ here,\n   there is a single canonical form for representing any given glyph.\n\
    \   There are no exceptions to that form, and any sequence of characters\n   and\
    \ qualifiers that is not consistent with the form is invalid.  If\n   there are\
    \ two possible ways to represent a given character, the\n   shorter one (in octet\
    \ count) is the only permitted form.  If there\n   are two possible ways that\
    \ are of the same length, the only permitted\n   form is the one that has the\
    \ smaller value when the numeric values of\n   all of the octets in each are summed.\n\
    \   The ordering rules are as follows:\n   1.  A base character or composite character\
    \ (see below) must come\n       first.\n   2.  The base character may be followed\
    \ by ZWCJ or OJ, but not both,\n       followed by a base or nonspacing character\
    \ or mark.\n   3.  If ZWCJ appears, the next character must be a base character\
    \ or\n       nonspacing mark.\n   4.  If OJ appears, the next character must be\
    \ a base character, since\n       the function of OJ is to make a spacing base\
    \ character into a\n       nonspacing (overlay) character.\n   5.  That character\
    \ can be followed by positional qualifiers that\n       apply to it.  Vertical\
    \ positional qualifiers precede horizontal\n       positional qualifiers.\n  \
    \ 6.  That sequence of characters may be followed by a case qualifier.\n   7.\
    \  That entire sequence of characters forms a composite character.\n       When\
    \ the composite character is non-trivial, the rules may be\n       applied to\
    \ it recursively.  If grouping is needed to distinguish\n       between one composite\
    \ character and the next, ZWNCJ may be used\n       at the beginning of a composite\
    \ character to identify a group\n       boundary.\n"
- title: 5.  Examples of Graphic Element Codes
  contents:
  - "5.  Examples of Graphic Element Codes\n   The initial lists of positioning and\
    \ combining controls appear above.\n   This section shows codes for some base\
    \ characters.  Names in upper\n   case are the Unicode names for the characters.\
    \  These are followed,\n   for information, by the Unicode code point designations.\
    \  The code\n   point list is informative, not normative, and may not be complete\n\
    \   (especially since additional matching code points may be added to\n   Unicode\
    \ over time).  Note that several Unicode characters that are\n   considered different\
    \ by Unicode are assigned the same code sequence\n   in the system specified here.\n\
    \   +------------------------+-------+----------------------------------+\n  \
    \ | Name                   |   Hex | Comment                          |\n   |\
    \                        | value |                                  |\n   +------------------------+-------+----------------------------------+\n\
    \   | FULL STOP (U+002E)     |   110 | Used as both base character (in  |\n  \
    \ |                        |       | bottom center position) and as   |\n   |\
    \                        |       | movable dot with OJ and          |\n   |  \
    \                      |       | positional qualifiers.           |\n   | HYPHEN-MINUS\
    \ (U+002D)  |   108 | Used as a spacing base character |\n   |               \
    \         |       | (in horizontally and vertically  |\n   |                 \
    \       |       | centered position) and as a      |\n   |                   \
    \     |       | movable half-width horizontal    |\n   |                     \
    \   |       | line with OJ and positional      |\n   |                       \
    \ |       | qualifiers.  In the context of   |\n   |                        |\
    \       | this specification, should be    |\n   |                        |  \
    \     | known as Half Horizontal Line.   |\n   | LOW LINE (U+005F)      |   109\
    \ | Used as a spacing base character |\n   |                        |       |\
    \ (in bottom position) and as a    |\n   |                        |       | movable\
    \ full-width horizontal    |\n   |                        |       | line with\
    \ OJ and positional      |\n   |                        |       | qualifiers.\
    \  In the context of   |\n   |                        |       | this specification,\
    \ should be    |\n   |                        |       | known as Horizontal Line.\
    \        |\n   | VERTICAL LINE (U+007C) |   102 | As with the horizontal lines,\
    \    |\n   |                        |       | normally a spacing base        \
    \  |\n   |                        |       | character (in the middle         |\n\
    \   |                        |       | position between left and        |\n  \
    \ |                        |       | right), but can be used as a     |\n   |\
    \                        |       | right to left movable            |\n   |  \
    \                      |       | full-height vertical line with   |\n   |    \
    \                    |       | OJ and/or positional qualifiers. |\n   | HalfHeightVerticalLine\
    \ |   105 | Similar to VERTICAL LINE, but    |\n   |                        |\
    \       | only half height.                |\n   | SOLIDUS (U+002F)       |  \
    \ 103 | Used only for character          |\n   |                        |    \
    \   | formation; forward slash         |\n   | REVERSE SOLIDUS        |   104\
    \ | Used only for character          |\n   | (U+005C)               |       |\
    \ formation; reverse slash         |\n   | RightUpperHook         |   131 | Used\
    \ only for character          |\n   |                        |       | formation;\
    \ nonspacing mark.      |\n   | LeftUpperHook          |   132 | Used only for\
    \ character          |\n   |                        |       | formation; nonspacing\
    \ mark.      |\n   | LeftLowerHook          |   133 | Used only for character\
    \          |\n   |                        |       | formation; nonspacing mark.\
    \      |\n   | RightLowerHook         |   134 | Used only for character      \
    \    |\n   |                        |       | formation; nonspacing mark.    \
    \  |\n   | HalfHeightHoop         |   140 | Used only for character          |\n\
    \   |                        |       | formation; nonspacing mark.      |\n  \
    \ | HalfHeightInvertedHoop |   141 | Used only for character          |\n   |\
    \                        |       | formation; nonspacing mark.      |\n   | DIGIT\
    \ ZERO (U+0030)    |   400 |                                  |\n   | DIGIT ONE\
    \ (U+0031)     |   401 |                                  |\n   | DIGIT TWO (U+0032)\
    \     |   402 |                                  |\n   | DIGIT NINE (U+0039) \
    \   |   409 |                                  |\n   | LATIN SMALL LETTER A  \
    \ |   40A |                                  |\n   | (U+0061)               |\
    \       |                                  |\n   | LATIN SMALL LETTER O   |  \
    \ 418 | Unify with Greek Omicron         |\n   | (U+006F, U+03BF)       |    \
    \   |                                  |\n   | LATIN SMALL LETTER C   |   40C\
    \ | Unifying C with Cyrillic ES      |\n   | (U+0063, U+0441)       |       |\
    \                                  |\n   | GREEK SMALL LETTER     |   491 |  \
    \                                |\n   | SIGMA (U+03C3)         |       |    \
    \                              |\n   +------------------------+-------+----------------------------------+\n"
- title: 6.  Composite Characters and Unicode Equivalences
  contents:
  - "6.  Composite Characters and Unicode Equivalences\n   This section provides examples\
    \ of characters that are derived from or\n   based on others, known as \"composite\
    \ characters\".\n   +------------------+--------------+---------------------------------+\n\
    \   | Name             |    Hex value | Comment                         |\n  \
    \ +------------------+--------------+---------------------------------+\n   |\
    \ LATIN SMALL      |  418 007 102 |                                 |\n   | LETTER\
    \ B         |          020 |                                 |\n   | (U+0062)\
    \         |              |                                 |\n   | LATIN SMALL\
    \      |  418 007 102 |                                 |\n   | LETTER D     \
    \    |          022 |                                 |\n   | (U+0064)       \
    \  |              |                                 |\n   | LATIN SMALL      |\
    \  40C 007 108 |                                 |\n   | LETTER E         |  \
    \        031 |                                 |\n   | (U+0065)         |    \
    \          |                                 |\n   | LATIN SMALL      |  40A 006\
    \ 40C |                                 |\n   | LETTER AE        |  007 108 031\
    \ |                                 |\n   | (U+00E6)         |              |\
    \                                 |\n   | LATIN SMALL      |  102 131 030 | Note\
    \ that 007 is not needed     |\n   | LETTER F         |      007 108 | before\
    \ 131 because hooks are    |\n   | (U+0066)         |              | exclusively\
    \ nonspacing          |\n   |                  |              | (combining). \
    \                   |\n   | LATIN SMALL      |  102 020 141 |                \
    \                 |\n   | LETTER H         |      021 032 |                  \
    \               |\n   | (U+0068)         |              |                    \
    \             |\n   | LATIN SMALL      |  105 007 110 |                      \
    \           |\n   | LETTER I         |      021 030 |                        \
    \         |\n   | (U+0069)         |              |                          \
    \       |\n   | LATIN SMALL      |  105 020 141 |                            \
    \     |\n   | LETTER N         |      021 032 |                              \
    \   |\n   | (U+006E)         |              |                                \
    \ |\n   | LATIN SMALL      |  418 007 102 | Unified P, Greek Rho, Cyrillic  |\n\
    \   | LETTER P         |  033 020 033 | ER                              |\n  \
    \ | (U+0070, U+03C1, |              |                                 |\n   |\
    \ U+0440)          |              |                                 |\n   | LATIN\
    \ CAPITAL    |      40A 001 |                                 |\n   | LETTER A\
    \         |              |                                 |\n   | (U+0041)  \
    \       |              |                                 |\n   | LATIN CAPITAL\
    \    |  418 007 102 |                                 |\n   | LETTER B       \
    \  |      020 001 |                                 |\n   | (U+0042)         |\
    \              |                                 |\n   | LATIN CAPITAL    |  \
    \    40C 001 |                                 |\n   | LETTER C         |    \
    \          |                                 |\n   | (U+0043)         |      \
    \        |                                 |\n   | LATIN CAPITAL    |  418 007\
    \ 102 |                                 |\n   | LETTER D         |      022 001\
    \ |                                 |\n   | (U+0044)         |              |\
    \                                 |\n   | GREEK SMALL      |      491 072 |  \
    \                               |\n   | LETTER FINAL     |              |    \
    \                             |\n   | SIGMA (U+03C2)   |              |      \
    \                           |\n   +------------------+--------------+---------------------------------+\n"
- title: 7.  Ideographic Characters
  contents:
  - "7.  Ideographic Characters\n   Because of the traditional model of forming characters\
    \ using selected\n   radicals and strokes in combination, Han-derived (\"CJK\"\
    ) characters\n   are even more naturally represented, with less ambiguity, in\
    \ the\n   system specified here than European ones.  The mechanisms used in\n\
    \   this specification and represented in the tables (see Section 8) are\n   similar\
    \ to those described as \"Radicals\" and \"Strokes\" in Section 5.1\n   and in\
    \ Section 5.2 (\"Ideographic Description Characters\") of The\n   Unicode Standard\
    \ [Unicode].  Of course, following the same principles\n   outlined above for\
    \ European characters, only radicals, stroke, and\n   description controls would\
    \ be treated as base characters; no distinct\n   compound precomposed ideographic\
    \ characters are registered.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA is requested to keep the actual registry of\
    \ characters and code\n   tables.  The registry entries consist of a character\
    \ name (preferably\n   matching the Unicode character name when one is available),\
    \ the code\n   sequence used to represent the character and optional descriptive\n\
    \   information.  The characters and codes identified in Section 2,\n   Section\
    \ 5, and Section 6 above should be used to initialize the\n   table.  Since the\
    \ coding system is user-extensible, registrations\n   should be accepted for new\
    \ characters as long as they don't look like\n   old ones.  A designated expert\
    \ with a background in calligraphy or\n   abstract art, and considerable experience\
    \ in evaluating claims about\n   the count of angels on heads of pins, should\
    \ be selected to advise\n   IANA on \"looks like\".\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   The representation of characters in this format\
    \ should be a\n   significant boon for security.  It eliminates many possibilities\
    \ of\n   phishing attacks, since Principle 1 prevents the existence of two\n \
    \  characters that look alike but are different.\n   By detaching the encoding\
    \ of characters for domain names from the\n   encoding of characters for other\
    \ purposes, it also guarantees that\n   reasonable-looking names will have been\
    \ encoded by competent\n   entities, thereby providing a significant degree of\
    \ safety by\n   obscurity.\n   Because of the method by which upper-case forms\
    \ are encoded and\n   because similarity is sometimes in the mind of the beholder,\
    \ this\n   specification will not completely eliminate opportunities for visual\n\
    \   confusion.  For example, because the lower-case characters are quite\n   different,\
    \ LATIN CAPITAL LETTER A and GREEK CAPITAL LETTER ALPHA will\n   never compare\
    \ equal, even though they look alike.\n"
- title: 10.  Acknowledgments
  contents:
  - "10.  Acknowledgments\n   The authors would like to acknowledge the many contributions\
    \ of\n   J.F.C. Morphin for pointing out the inadequacies of trying to address\n\
    \   the challenges of internationalization within the context of existing\n  \
    \ engineering principles.  His comments and related ones, in\n   combination with\
    \ issues encountered in trying to internationalize\n   domain names based on Unicode,\
    \ have contributed greatly to the frame\n   of mind underlying large parts of\
    \ the proposal documented here.  The\n   theoretical framework for this coding\
    \ system is based, in part, on\n   Unicode and its collection of names and sample\
    \ glyphs but represents\n   a very different approach to the coding system itself.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [Unicode]  The Unicode Consortium, \"The Unicode\
    \ Standard, Version\n              5.0\", 2007.\n              Boston, MA, USA:\
    \ Addison-Wesley.  ISBN 0-321-48091-0\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC3490]  Faltstrom, P., Hoffman, P., and\
    \ A. Costello,\n              \"Internationalizing Domain Names in Applications\
    \ (IDNA)\",\n              RFC 3490, March 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John C Klensin\n   1770 Massachusetts Ave, #322\n   Cambridge,\
    \ MA  02140\n   USA\n   Phone: +1 617 491 5735\n   EMail: john+ietf@jck.com\n\
    \   Harald Tveit Alvestrand\n   Google\n   Beddingen 10\n   Trondheim,   7014\n\
    \   Norway\n   EMail: harald@alvestrand.no\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78\
    \ and at http://www.rfc-editor.org/copyright.html,\n   and except as set forth\
    \ therein, the authors retain all their rights.\n   This document and the information\
    \ contained herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR,\
    \ THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET\
    \ SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING TASK FORCE DISCLAIM\
    \ ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY\
    \ THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\
    \ IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
