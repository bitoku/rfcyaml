- title: __initial_text__
  contents:
  - '          Wireless Device Configuration (OTASP/OTAPA) via ACAP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Wireless carriers today are faced with creating more efficient\n\
    \   distribution channels, increasing customer satisfaction, while also\n   improving\
    \ margin and profitability.  Industry trends are pushing the\n   sale of handsets\
    \ further into the retail channel.  The cost and\n   effort of provisioning handsets,\
    \ activating users, and updating\n   handset parameters can be greatly reduced\
    \ by using over-the-air\n   activation mechanisms.  A comprehensive and extensible\
    \ means for\n   over-the-air provisioning and handset parameter updating is required.\n\
    \   One approach is to purchase EIA/TIA/IS-683A (Over-the-air Service\n   Provisioning\
    \ of Mobile Stations in Spread Spectrum Systems)\n   equipment.  The cost of this\
    \ has led carriers to seek alternative\n   solutions.  A very viable means for\
    \ providing over-the-air (OTA)\n   provisioning is to leverage the rollout of\
    \ IS-707 data services\n   equipment, which most carriers are in the process of\
    \ deploying.  This\n   paper presents an approach to OTA provisioning that utilizes\
    \ the\n   deployment of IS-707 to deliver OTA provisioning and parameter\n   upgrading.\n\
    \   IS-707 data services makes available several methods of providing\n   over-the-air\
    \ provisioning and parameter updating.  A well thought-out\n   approach utilizing\
    \ Internet-based open standard mechanisms can\n   provide an extensible platform\
    \ for further carrier service offerings,\n   enhanced interoperability among back-end\
    \ services, and vendor\n   independence.\n   This paper describes a viable and\
    \ attractive means to provide\n   OTASP/OTAPA via IS-707, using the ACAP [ACAP]\
    \ protocol.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Terms  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   2.  Feature Descriptions  . . . . . . . . . . . . . . . . .\
    \ . .   6\n     2.1.  OTASP Feature Description  . . . . . . . . . . . . . . .\
    \  6\n     2.2.  OTAPA Feature Description . . . . . . . . . . . . . . .   6\n\
    \   3.  Operation  . . . . . . . . . . . . . . . . . . . . . . . . .  7\n    \
    \ 3.1.  Initial Provisioning Activity . . . . . . . . . . . . .   7\n     3.2.\
    \  OTASP for Authorized Users . . . . . . . . . . . . . . .  8\n     3.3.  OTAPA\
    \ Activity  . . . . . . . . . . . . . . . . . . . .   8\n   4.  Requirements .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  9\n     4.1.  General Requirements\
    \  . . . . . . . . . . . . . . . . .   9\n     4.2.  OTASP Requirements  . . .\
    \ . . . . . . . . . . . . . . . . 9\n     4.3.  OTAPA Requirements  . . . . .\
    \ . . . . . . . . . . . . .  10\n     4.4.  Provisioning Server Requirements .\
    \ . . . . . . . . . . . 10\n     4.5.  Security Requirements . . . . . . . . .\
    \ . . . . . . . .  11\n   5.  Architecture . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 11\n     5.1.  ACAP over TCP/IP  . . . . . . . . . . . . . . . .\
    \ . . .  11\n       5.1.1.  Mobile Authentication and A-Key Generation . . . .\
    \ . 12\n       5.1.2.  Mobile Identification . . . . . . . . . . . . . . .  12\n\
    \       5.1.3.  ACAP Server  . . . . . . . . . . . . . . . . . . . . 12\n    \
    \   5.1.4.  Overview of ACAP Structure  . . . . . . . . . . . .  13\n       5.1.5.\
    \  Data Organization and Capabilities . . . . . . . . . 13\n         5.1.5.1.\
    \  Structure . . . . . . . . . . . . . . . . . . .  14\n         5.1.5.2.  Conventions\
    \  . . . . . . . . . . . . . . . . . . 15\n       5.1.6.  Dataset . . . . . .\
    \ . . . . . . . . . . . . . . . .  15\n         5.1.6.1.  Entries and Attributes\
    \ . . . . . . . . . . . . . 15\n         5.1.6.2.  NAM Records . . . . . . . .\
    \ . . . . . . . . . .  16\n         5.1.6.3.  Server Roaming Lists . . . . . .\
    \ . . . . . . . . 17\n         5.1.6.4.  Requested-Data Record . . . . . . . .\
    \ . . . . .  18\n         5.1.6.5.  Sample Server Entry  . . . . . . . . . . .\
    \ . . . 18\n       5.1.7.  Administrative Client . . . . . . . . . . . . . . .\
    \  19\n       5.1.8.  Mobile Client  . . . . . . . . . . . . . . . . . . . 20\n\
    \     5.2.  WAP with ACAP . . . . . . . . . . . . . . . . . . . . .  22\n    \
    \ 5.3.  Network-Resident vs. Configuration Data  . . . . . . . . 23\n     5.4.\
    \  Intellectual Property Issues  . . . . . . . . . . . . .  23\n   6.  Handset\
    \ Protocol Suites  . . . . . . . . . . . . . . . . . . 23\n     6.1.  ACAP over\
    \ TCP/IP  . . . . . . . . . . . . . . . . . . .  23\n   7.  IS-683A Compatibility\
    \  . . . . . . . . . . . . . . . . . . . 24\n     7.1.  OTASP Operations  . .\
    \ . . . . . . . . . . . . . . . . .  24\n     7.2.  OTASP Call Flow  . . . . .\
    \ . . . . . . . . . . . . . . . 24\n     7.3.  OTAPA Operations  . . . . . . .\
    \ . . . . . . . . . . . .  24\n     7.4.  OTAPA Call Flow  . . . . . . . . . .\
    \ . . . . . . . . . . 25\n   8.  Alternative Methods . . . . . . . . . . . . .\
    \ . . . . . . .  25\n     8.1.  IS-683A over TCP/IP  . . . . . . . . . . . . .\
    \ . . . . . 25\n       8.1.1.  OTAF Server . . . . . . . . . . . . . . . . . .\
    \ . .  25\n       8.1.2.  Interface Application  . . . . . . . . . . . . . . .\
    \ 26\n       8.1.3.  Protocol Handset Suite  . . . . . . . . . . . . . .  26\n\
    \     8.2.  Browser-Based Forms  . . . . . . . . . . . . . . . . . . 26\n   9.\
    \  Conclusion  . . . . . . . . . . . . . . . . . . . . . . . .  27\n   10.  References\
    \ . . . . . . . . . . . . . . . . . . . . . . . .  28\n   11.  Security Considerations\
    \ . . . . . . . . . . . . . . . . .   28\n   12.  Acknowledgments  . . . . . .\
    \ . . . . . . . . . . . . . . .  28\n   13.  Author's Address  . . . . . . . .\
    \ . . . . . . . . . . . .   28\n   14.  Full Copyright Statement . . . . . . .\
    \ . . . . . . . . . .  29\n"
- title: 1.  Terms
  contents:
  - "1.  Terms\n    Application Configuration Access Protocol (ACAP) -- An Internet\n\
    \    protocol (RFC-2244) that provides remote storage and access of\n    configuration\
    \ and preference information.\n    Activation -- A process in which a mobile station\
    \ and network become\n    programmed so that a mobile station becomes operable\
    \ and can be used\n    for cellular service once authorized by the service provider.\n\
    \    Authentication -- A procedure used to validate a mobile station's\n    identity.\n\
    \    Authentication Center -- An entity that manages the authentication\n    information\
    \ related to the mobile station.\n    Authentication Key (A-key) -- A secret 64-bit\
    \ pattern stored in the\n    mobile station.  It is used to generate and update\
    \ the mobile\n    station's shared secret data.  The A-key is used in the\n  \
    \  authentication process.\n    Authorization -- An action by a service provider\
    \ to make cellular\n    service available to a subscriber.\n    Call -- A temporary\
    \ communication between telecommunications users\n    for the purpose of exchanging\
    \ information.  A call includes the\n    sequence of events that allocates and\
    \ assigns resources and\n    signaling channels required to establish a communications\n\
    \    connection.\n    Cellular Service Provider -- A licensee of the responsible\n\
    \    government agency (in the U.S. a licensee of the Federal\n    Communications\
    \ Commission) authorized to provide Cellular\n    Radiotelephone Service.\n  \
    \  Challenge/Response Authentication Mechanism using Message Digest 5\n    (CRAM-MD5)\
    \ -- An authentication mechanism which is easy to\n    implement, and provides\
    \ reasonable security against various attacks,\n    including replay.  Supported\
    \ in a variety of Internet protocols.\n    Specified as baseline mechanism in\
    \ ACAP.  CRAM-MD5 is published as\n    RFC 2195.\n    Code Division Multiple Access\
    \ -- A technique for spread-spectrum\n    multiple-access digital communications\
    \ that creates channels through\n    the use of unique code sequences.\n    Customer\
    \ Service Center -- An entity of a service provider that\n    provides user support\
    \ and assistance to subscribers.\n    Customer Service Representative -- A person\
    \ that operates from a\n    customer service center and provides user support\
    \ and assistance to\n    subscribers.\n    Diffie-Hellman Algorithm -- A public-key\
    \ cryptography algorithm for\n    exchanging secret keys.  Uses the equation ,\
    \ where k is the secret\n    key.  The equation is executed by each party of the\
    \ session based on\n    the exchange of independently generated public values.\n\
    \    Digits -- Digits consist of the decimal integers 0,1,2,3,4,5,6,7,8,\n   \
    \ and 9.\n    Dual-mode Mobile Station -- A mobile station capable of both analog\n\
    \    and digital operation.\n    Electronic Serial Number (ESN) -- A 32-bit number\
    \ assigned by the\n    mobile station manufacturer used to identify a mobile station.\
    \  The\n    ESN is unique for each legitimate mobile station.\n    Home Location\
    \ Registry (HLR) -- The location register or database to\n    which a MIN is assigned\
    \ for record purposes such as subscriber\n    information.\n    Message Digest\
    \ 5 (MD5) -- A one-way cryptographic hash function.\n    Widely deployed in Internet\
    \ protocols.  Published as RFC 1321.\n    Mobile Identification Number (MIN) --\
    \ The 10-digit number that\n    represents a mobile station's directory number.\n\
    \    Mobile Station (MS) -- A station, fixed or mobile, which serves as\n    the\
    \ end user's wireless communications link with the base station.\n    Mobile stations\
    \ include portable units (e.g., hand-held personal\n    units) and units installed\
    \ in vehicles.\n    Mobile Switching Center (MSC) -- A configuration of equipment\
    \ that\n    provides cellular radiotelephone service.\n    Mobile Terminal Authorizing\
    \ System (MTAS) -- A control system that\n    provides the capability to load\
    \ the CDMA network HLR with mobile\n    station profile information.\n    Number\
    \ Assignment Module (NAM) -- The mobile station's electronic\n    memory module\
    \ where the MIN and other subscriber-specific parameters\n    are stored.  Mobile\
    \ stations that have multi-NAM features offer\n    users the option of using their\
    \ units in several different markets\n    by registering with a local number in\
    \ each location.\n    Over-the-air Service Provisioning Function (OTAF) -- A configuration\n\
    \    of network equipment that controls OTASP functionality and messaging\n  \
    \  protocol.\n    Over-the-air Parameter Administration (OTAPA) -- Network initiated\n\
    \    OTASP process of provisioning mobile station operational parameters\n   \
    \ over the air interface.\n    Over-the-air Service Provisioning (OTASP) -- A\
    \ process of\n    provisioning mobile station operational parameters over the\
    \ air\n    interface.\n    Quick-Net-Connect (QNC) -- An IS-707 data service capability\
    \ that\n    utilizes the Async Data Service Option number but bypasses the modem\n\
    \    connection for a direct connection to an IP-based internet.\n    Roamer --\
    \ A mobile station operating in a cellular system or network\n    other than the\
    \ one from which service was subscribed.\n    Simple Authentication and Security\
    \ Layer (SASL) -- An Internet\n    protocol (RFC-2222) that provides a framework\
    \ for negotiating\n    authentication and encryption mechanisms.\n    Service\
    \ Provider -- A company, organization, business, etc. which\n    sells, administers,\
    \ maintains, and charges for the service.  The\n    service provider may or may\
    \ not be the provider of the network.\n    Shared Secret Data (SSD) -- A 128-bit\
    \ pattern stored in the mobile\n    station (in semi-permanent memory) and known\
    \ by the network.  The\n    A-key is used to generate the SSD at the network and\
    \ in the mobile\n    station for comparison.\n    Wireless Application Protocol\
    \ (WAP) -- A set of network and\n    application protocols including a datagram\
    \ protocol (WDP), Transport\n    Layer Security (WTLS), Transaction Protocol (WTP),\
    \ Session Protocol\n    (WSP), and Application Environment (WAE), which use carrier-based\n\
    \    gateways to enable wireless devices to access Web resources.  See\n    <http://www.wapforum.org>\
    \ for specifications and details.\n"
- title: 2.  Feature Descriptions
  contents:
  - '2.  Feature Descriptions

    '
- title: 2.1.  OTASP Feature Description
  contents:
  - "2.1.  OTASP Feature Description\n    The Over the Air Service Provisioning (OTASP)\
    \ feature allows a\n    potential wireless service subscriber to activate new\
    \ wireless\n    services, and allows an existing wireless subscriber to make\n\
    \    services changes without the intervention of a third party.  OTASP\n    includes\
    \ the following:\n    * A way to establish a user profile.\n    * \"Over-The-Air\"\
    \ programming of a Number Assignment Module (NAM),\n    IMSI and Roaming Lists,\
    \ including Data option parameters, and\n    optionally, service provider or manufacturer\
    \ specific parameters\n    (e.g., lock code, call timer).\n    * An Authentication\
    \ Key (A-key) Generation procedure.\n    * A-key storage\n"
- title: 2.2.  OTAPA Feature Description
  contents:
  - "2.2.  OTAPA Feature Description\n    The Over-the-Air Parameter Administration\
    \ (OTAPA) feature allows\n    wireless service providers to update a NAM, IMSI,\
    \ and Roaming List\n    information in the mobile station remotely without the\
    \ intervention\n    of a third party.  This capability increases flexibility and\
    \ reduces\n    costs for carriers involved with mass changes that affect every\n\
    \    handset, such as area-code splits.\n    OTAPA includes the following:\n \
    \   * Update a user's Number Assignment Module (NAM)\n    * Update Data option\
    \ parameters\n    * Update service provider or manufacturer specific parameters\
    \ (e.g.,\n    Server address(es), lock code, call timer).\n    * Update roaming\
    \ lists\n"
- title: 3.  Operation
  contents:
  - '3.  Operation

    '
- title: 3.1.  Initial Provisioning Activity
  contents:
  - "3.1.  Initial Provisioning Activity\n    A new subscriber needs to give the intended\
    \ service provider\n    sufficient information (e.g., name, address, etc.) to\
    \ prove credit-\n    worthiness and establish a record within the service provider's\n\
    \    billing system.  In addition, the ESN of the mobile station needs to\n  \
    \  be given to the provider.  This may occur in three ways:\n    Voice scenario\
    \ -- A customer care representative collects credit\n    information during a\
    \ voice conversation.  This call is made from a\n    different phone (e.g., wired\
    \ service) or is initiated using the IS-\n    683A OTASP dialing scheme (i.e.,\
    \ *228xx).\n    Once the user has been authorized, the customer care representative\n\
    \    creates a record in the CDMA network HLR, thus allowing use of the\n    CDMA\
    \ network.  In addition, a limited-time N-digit password is\n    created which\
    \ is tied to the ESN.  The choice of N (how many digits)\n    is up to the carrier\
    \ (as a trade-off between security and user\n    inconvenience).  All required\
    \ provisioning information (including\n    the limited-time password) is loaded\
    \ into the provisioning server.\n    The user is then told to hang up and call\
    \ a special number, of the\n    form *228 XX <N-digit password> SEND (the XX code\
    \ is the same as\n    used in the initial voice call).  This causes the mobile\
    \ station to\n    initiate a provisioning session.\n    The mobile station and\
    \ the provisioning server authenticate, and all\n    required provisioning information\
    \ is downloaded into the mobile\n    station.  The user receives some form of\
    \ notification once the\n    activity is complete.  This notification can be an\
    \ audible tone or a\n    text message on the mobile station display. (The form\
    \ and content of\n    this notification can be part of the provisioning data downloaded\
    \ by\n    the mobile station.) Once this initial provisioning activity is\n  \
    \  complete the user has a fully authorized mobile station ready for\n    use.\n\
    \    Forms scenario -- An interactive user interface is presented via a\n    browser\
    \ on the mobile station.  The subscriber fills in the\n    requested information.\
    \ (Note that entering non-numeric data presents\n    some user interface challenges\
    \ on many mobile devices.)\n    A back-end server validates the information, and\
    \ if possible, the\n    customer is authorized, a limited-time password is generated,\
    \ HLR\n    and provisioning server records are created and the actual OTASP\n\
    \    operation begins.  Otherwise, a voice call is made to a customer\n    care\
    \ representative.\n    Desktop scenario -- The subscriber uses a desktop (or in-store\n\
    \    kiosk) web browser to contact the carrier, and enters the usual\n    personal\
    \ information.\n    The carrier's server validates the information, and if possible,\
    \ the\n    customer is authorized, a limited-time password is generated, HLR\n\
    \    and provisioning server records are created, and the subscriber is\n    told\
    \ to dial a special number on the handset.  Once this code is\n    entered, the\
    \ actual OTASP operation begins.  Otherwise, the user is\n    asked to make a\
    \ voice call to a customer care representative.\n"
- title: 3.2.  OTASP for Authorized Users
  contents:
  - "3.2.  OTASP for Authorized Users\n    Users already authorized for use of the\
    \ CDMA network can also\n    initiate provisioning activity.  This could happen\
    \ after being\n    directed to do so by a Customer Care representative, either\
    \ from a\n    phone conversation or via mail notification.  This type of OTASP\n\
    \    activity is needed in cases where the carrier desires to upgrade\n    CDMA\
    \ parameters in the mobile stations or in cases where mobile\n    station troubleshooting\
    \ is needed.\n    This type of OTASP occurs in similar fashion to the initial\
    \ OTASP\n    activity.  The mobile station downloads the new provisioning\n  \
    \  information in the same way.\n"
- title: 3.3  OTAPA Activity
  contents:
  - "3.3  OTAPA Activity\n    Typical OTAPA capability involves upgrading a large\
    \ number of mobile\n    stations.  OTAPA activity needs to be performed in a manner\
    \ that\n    does not impose on revenue bearing CDMA network activity.  OTAPA\n\
    \    operations are initiated at the customer care center.  This can be\n    accomplished\
    \ by queuing a notification to the mobile station (via\n    1-way SMS or special\
    \ caller-ID) after the provisioning server has\n    the updated configuration\
    \ data.  OTAPA activity will not occur until\n    the mobile station has acquired\
    \ CDMA service on the carrier's\n    network and the notification has reached\
    \ the mobile station.\n    Alternatively, OTAPA can be handled by including a\
    \ recheck interval\n    in the set of data used to provision the mobile station.\
    \  When using\n    a low-overhead protocol, such as ACAP [ACAP], it is reasonable\
    \ to\n    have a mobile station check in periodically to see if anything has\n\
    \    changed.  The time of day and/or day of week that such rechecks\n    should\
    \ occur could be included in the provisioning data.\n    OTAPA activity can be\
    \ terminated at any time due to user call\n    activity.\n"
- title: 4.  Requirements
  contents:
  - '4.  Requirements

    '
- title: 4.1.  General Requirements
  contents:
  - "4.1.  General Requirements\n    IS-683A OTASP operations occur between a mobile\
    \ station and an\n    over-the-air service provisioning function (OTAF) using\
    \ IS-95A\n    traffic channel data burst messages.  OTASP/OTAPA via data services\n\
    \    require that the CDMA carrier have an IS-707 data services capable\n    network.\
    \  The IS-707 service must be either Packet Data Service\n    (IS-707.5) or Quick-Net-Connect\
    \ (QNC).\n    The mobile station must support:\n    * IS-707 Data Service capability\n\
    \    * Packet/QNC RLP protocol\n    * PPP protocol to peer to the IS-707 IWF\n\
    \    * IP protocol to provide the network layer for routing to the\n    provisioning\
    \ server\n    * A transport layer for end-to-end communication (such as TCP)\n\
    \    * Authentication and optionally encryption\n    * Application software to\
    \ handle the provisioning protocol and\n    memory access.\n    * Domain Name\
    \ System (DNS) query capabilities sufficient to obtain\n    the (IP) address of\
    \ the provisioning server (or the provisioning\n    server's address could be\
    \ provided during PPP negotiation).\n    Lastly, the ability must exist for the\
    \ mobile to make a data call\n    (optionally) a voice call without a MIN.\n"
- title: 4.2.  OTASP Requirements
  contents:
  - "4.2.  OTASP Requirements\n    The OTASP function requires the mobile station\
    \ to originate an IS-\n    707 data call and (optionally) a voice call using a\
    \ completely\n    unprovisioned mobile station.  The CDMA network must support\
    \ this\n    capability.\n    OTASP via data services uses a provisioning server\
    \ that contains the\n    parameter information for mobile stations.  The authorizing\
    \ agent\n    (or software) at the customer care center must be able to add user\n\
    \    and mobile station information into both the CDMA network HLR and\n    the\
    \ provisioning server during the initial authorizing process.  The\n    provisioning\
    \ server must be capable of servicing a mobile as soon as\n    its record is created.\n"
- title: 4.3.  OTAPA Requirements
  contents:
  - "4.3.  OTAPA Requirements\n    IS-683A OTAPA is performed by a mobile-terminated\
    \ call that\n    downloads parameters to the mobile station.  OTAPA calls occur\n\
    \    without user interaction.\n    In order to perform OTAPA via data services\
    \ the network needs to\n    direct the mobile station to initiate a special-purpose\
    \ data call.\n    Several existing methods can be used to implement this capability,\n\
    \    for example, a mobile-terminated one-way SMS message.  The SMS\n    message\
    \ content can contain any information required by the mobile\n    station.  The\
    \ mobile station would need a simple parser of SMS\n    messages in order to know\
    \ when to originate an OTAPA call, as\n    opposed to normal SMS message processing.\
    \  The OTAPA call would be\n    performed in similar fashion to a registration\
    \ call.  More\n    specifically, the user would not be informed of the call activity.\n\
    \    There are alternative means that can be employed to initiate OTAPA\n    activity;\
    \ for example, a mobile-terminated voice call with caller-ID\n    using a specialized\
    \ telephone number.  Another alternative is for\n    mobile stations to periodically\
    \ check in with the provisioning\n    server to check for updated information.\
    \  ACAP, for example, is\n    designed for such a model.  The recheck interval,\
    \ as well as the\n    time of day and/or day of week that such checks should be\
    \ used, can\n    be part of the provisioning data sent to the mobile stations.\n"
- title: 4.4.  Provisioning Server Requirements
  contents:
  - "4.4.  Provisioning Server Requirements\n    IS-683A utilizes an over-the-air\
    \ service provisioning function\n    (OTAF) to perform the network-side provisioning\
    \ activity.\n    OTASP/OTAPA via data services replaces the OTAF with a provisioning\n\
    \    server.  The provisioning server resides on an IP network within the\n  \
    \  controlled confines of the carrier.  The provisioning server must\n    perform\
    \ all the service provisioning and parameter administration\n    functions that\
    \ the OTAF provides.  The provisioning server must also\n    have an interface\
    \ to the carrier's Mobile Terminal Authorizing\n    System (MTAS).  This interface\
    \ serves to synchronize the\n    provisioning server with the information in the\
    \ MTAS.  The specific\n    requirements of this interface depend on the capabilities\
    \ and\n    interfaces of the carrier's customer care center system(s).  The\n\
    \    provisioning server must be capable of receiving dynamic updates\n    from\
    \ the MTAS and have the provisioning information immediately\n    available for\
    \ downloading into the chosen mobile station.  A\n    standard ACAP server provides\
    \ an excellent means to meet these\n    requirements.\n    The provisioning server\
    \ must be capable of performing an\n    authentication procedure with the mobile\
    \ station.  This\n    authentication mechanism must be capable of authenticating\
    \ both the\n    mobile station and the provisioning server.\n"
- title: 4.5.  Security Requirements
  contents:
  - "4.5.  Security Requirements\n    OTASP requires that an authentication procedure\
    \ be performed to\n    validate the mobile station to the provisioning server,\
    \ while OTAPA\n    requires a mechanism where the mobile validates the server.\n\
    \    The provisioning server must be capable of either:\n    * OTAF A-key generation\
    \ using a Diffie-Hellman mechanism\n    Or:\n    * Receiving A-keys from the carrier\
    \ network.\n    Since data OTASP/OTAPA operates over IP within the carrier's\n\
    \    network, end-to-end encryption between the mobile station and the\n    provisioning\
    \ server should be considered as a future enhancement.\n    End-to-end encryption\
    \ protects against attacks from within a\n    carrier's network, and safeguards\
    \ the provisioning data (for\n    example, roaming lists).\n"
- title: 5.  Architecture
  contents:
  - '5.  Architecture

    '
- title: 5.1.  ACAP over TCP/IP
  contents:
  - "5.1.  ACAP over TCP/IP\n    Figure 1 shows a provisioning server in the carrier's\
    \ intranet which\n    supports the Application Configuration Access Protocol (ACAP,\
    \ RFC\n    2244).  An administrative client in the customer care domain updates\n\
    \    this server using ACAP.  Handsets are provisioned and configured\n    using\
    \ a small ACAP client.\n                    [Figure 1 -- see PostScript version]\n\
    \    ACAP is an open Internet protocol designed to solve the problem of\n    client\
    \ access to configuration and related data.  Among its primary\n    goals are\
    \ protocol simplicity, support for thin clients, and ease of\n    operation over\
    \ limited bandwidth.  ACAP provides a high degree of\n    extensibility, especially\
    \ in authentication mechanisms, specialized\n    attribute handling, and data\
    \ management.\n"
- title: 5.1.1.  Mobile Authentication and A-Key Generation
  contents:
  - "5.1.1.  Mobile Authentication and A-Key Generation\n    The mobile client authenticates\
    \ with the ACAP server prior to\n    performing any activities.  Authentication\
    \ uses the mobile's ESN and\n    a shared secret.  Provisioned mobiles derive\
    \ the shared secret from\n    the A-Key; unprovisioned mobiles use a limited-time\
    \ password as the\n    secret.\n    The limited-time password is provided to the\
    \ user by the Customer\n    Care representative during the initial call (as instructions\
    \ to dial\n    a specific number).  This code is N digits long.  The carrier\n\
    \    selects the number of digits, as a trade-off between security and\n    user\
    \ convenience.\n    The baseline ACAP authentication mechanism uses the shared\
    \ secret\n    plus a random challenge from the server as input to a one-way\n\
    \    cryptographic hash function (specifically, keyed-MD5).  This is\n    analogous\
    \ to the existing IS-683A authentication mechanism which\n    uses a random challenge\
    \ and the CAVE algorithm.\n    An A-Key is generated using a Diffie-Hellman exchange,\
    \ as is done in\n    IS-683A.\n"
- title: 5.1.2.  Mobile Identification
  contents:
  - "5.1.2.  Mobile Identification\n    Provisioning records are identified using\
    \ the ESN and the current\n    NAM in use.\n"
- title: 5.1.3.  ACAP Server
  contents:
  - "5.1.3.  ACAP Server\n    As a standard ACAP server, the provisioning server includes\n\
    \    configurable datasets and dataset inheritance for the management of\n   \
    \ the data stores.\n    The administrative client can use the same simple ACAP\
    \ protocol to\n    load and modify the ACAP server as the mobile stations uses\
    \ for\n    provisioning.  While any implementation-specific mechanisms\n    available\
    \ from the server vendor could instead be used for this\n    purpose, the ability\
    \ to use ACAP can greatly simplify the\n    administrative client, as well as\
    \ make it independent of the server.\n    ACAP includes an authentication framework\
    \ (Simple Authentication and\n    Security Layer, SASL, RFC 2222)[SASL].  SASL\
    \ allows any standard or\n    custom authentication and encryption mechanism to\
    \ be used.  One of\n    the most important features of SASL is that it is designed\
    \ for a\n    world in which what is \"good enough\" security today isn't good\n\
    \    enough tomorrow.  As the threat model changes, SASL allows higher-\n    strength\
    \ mechanisms to be easily added while supporting already\n    deployed clients\
    \ and servers.  SASL is achieving widespread\n    deployment in a number of Internet\
    \ protocols.\n    Strongpoints:  Since the ACAP protocol was designed for precisely\n\
    \    this type of provisioning activity, its adoption can greatly reduce\n   \
    \ the cost, time to market, and support required for the provisioning\n    server.\
    \  Additionally, the ACAP protocol provides an open standard\n    method for mobile\
    \ stations and other systems to access the\n    provisioning server.  Commercial\
    \ ACAP servers are being developed by\n    numerous companies.  The ACAP client\
    \ code is very small and simple,\n    and thus can be incorporated into virtually\
    \ any mobile device at\n    minimal cost.  As an open standard, the ACAP protocol\
    \ has benefited\n    from years of review and experience.\n"
- title: 5.1.4.  Overview of ACAP Structure
  contents:
  - "5.1.4.  Overview of ACAP Structure\n    ACAP organizes data by datasets.  The\
    \ structure of a dataset is\n    defined by the dataset class.  Generally, ACAP\
    \ servers do not have\n    knowledge of dataset classes.  This allows the dataset\
    \ to be\n    expanded without modifying the server in any way.  A dataset is an\n\
    \    instantiation of the dataset class, which is a logical definition of\n  \
    \  what is in a dataset, and how it is used.\n    Datasets contain entries.  Entries\
    \ contain attributes and values.\n    Attributes and values are actually metadata,\
    \ such as name, length,\n    and value.  Any entry can also be a dataset (datasets\
    \ are\n    hierarchical).\n    For example, consider the ACAP addressbook dataset\
    \ class, designed\n    to hold names, email addresses, phone numbers, and related\n\
    \    information for a person's contacts.  A given user may have one or\n    more\
    \ addressbook datasets.  Each entry holds information about one\n    person or\
    \ entity.  Attributes in the entry hold specific items of\n    information, such\
    \ as the given name, surname, various email\n    addresses, phone numbers, and\
    \ so forth.  If an entry is a list of\n    people (such as a mailing list or specific\
    \ group of people), it is a\n    subdataset, containing its own entries.  Some\
    \ clients may look at\n    only a subset of the attributes.  For example, a mobile\
    \ handset ACAP\n    client may download only the alias (nickname), name, primary\
    \ phone\n    number and email address of each entry, while a desktop client may\n\
    \    access all attributes.\n"
- title: 5.1.5.  Data Organization and Capabilities
  contents:
  - "5.1.5.  Data Organization and Capabilities\n    ACAP provides custom hierarchical\
    \ datasets.  Server data can be\n    organized to fit the needs of the applications\
    \ using the dataset.\n    In OTASP/OTAPA over ACAP, data on the server is organized\
    \ to both\n    take advantage of ACAP capabilities and to use items that are\n\
    \    identical to IS-683A, allowing for reuse of IS-683A handset engines.\n  \
    \  ACAP servers also support data inheritance.  All data items which\n    are\
    \ physically in the inherited dataset and not in the inheriting\n    dataset logically\
    \ also exist in the inheriting dataset.  This is\n    recursive, as the inherited\
    \ dataset can itself inherit from another\n    dataset.  This powerful concept\
    \ allows potentially large groups of\n    mobile stations to inherit items from\
    \ a single common entity.  For\n    example, preferred roaming lists can be stored\
    \ in datasets based on\n    geographic areas, and automatically inherited by an\
    \ individual\n    mobile station in that area.  The roaming lists could be further\n\
    \    subdivided, for example based on tiers of free NVRAM in the mobile.\n   \
    \ The mobile client need not be aware of this; it happens entirely on\n    the\
    \ server.\n    ACAP uses trees to provide the data hierarchy.  These data trees\
    \ can\n    be viewed as similar to the directory/file structure used with all\n\
    \    common operating systems.  The built-in inheritance mechanism,\n    together\
    \ with the hierarchical structure, makes it extremely easy to\n    update general\
    \ data without disturbing specific data.\n    Datasets exist within the user,\
    \ group, and host hierarchies.  The\n    user hierarchy holds datasets which belong\
    \ to individual users.  The\n    group hierarchy holds datasets which belong to\
    \ groups (for example,\n    the \"Region.\" groups in section 5.1.6.3  Server\
    \ Roaming Lists).  The\n    host hierarchy holds datasets which are for specific\
    \ machines or\n    systems.\n    In addition to providing customizable data trees,\
    \ ACAP also provides\n    several standard datasets for all clients.  There is\
    \ a capabilities\n    dataset that contains information on custom functionality\
    \ and\n    enhanced features available to a specific client or at the site\n \
    \   generally.  This allows a server to advertise any protocol\n    extensions,\
    \ specialized attribute handling, or other enhanced\n    functionality it supports.\
    \  A client that needs to use these\n    features can thus easily determine what\
    \ is available before trying\n    to use them.\n"
- title: 5.1.5.1.  Structure
  contents:
  - "5.1.5.1.  Structure\n    We divide the data accessed by the client into provisioning\
    \ items,\n    group items, and client state items.  Provisioning data contains\
    \ NAM\n    items and requested-data items.  Group items (such as preferred\n \
    \   roaming lists), are not specific to any mobile device.  Group items\n    physically\
    \ exist in their own datasets, but through inheritance\n    logically appear in\
    \ client datasets.\n    The mobile stations always read data from provisioning\
    \ entries and\n    write data to client state entries.  This structure makes both\n\
    \    mobile clients and server configuration easy and simple, while\n    allowing\
    \ for extensive custom and diagnostic capabilities.\n"
- title: 5.1.5.2.  Conventions
  contents:
  - "5.1.5.2.  Conventions\n    \"\" This signifies the empty string (used here for\
    \ ACAP entries).\n    ~ This is shorthand for \"user/<userid>\".  It is part of\
    \ the ACAP\n    protocol.\n"
- title: 5.1.6 Dataset
  contents:
  - "5.1.6 Dataset\n    Provisioning information is located in the \"OTAP\" dataset\
    \ class.\n    (The full specification of this dataset will be published in a\n\
    \    subsequent document.) The prefix \"Provision.\" is used for items that\n\
    \    are to be downloaded to the mobile, and the prefix \"Client.\" is used\n\
    \    for items which the client stores on the server.\n    Provisioning data within\
    \ the OTAP dataset is organized as a series\n    of items, each of which is stored\
    \ in its own entry.  The entry name\n    is the item name, and the \"OTAP.VALUE\"\
    \ attribute contains the item\n    value.  This structure permits change notification\
    \ on a per-item\n    basis.\n    We chose the \"Provision\" and \"Client\" names\
    \ to simplify various\n    operations.  For example, the mobile client can easily\
    \ download all\n    changed provisioning items by performing a search which returns\
    \ the\n    \"OTAP.VALUE\" attribute of all entries whose name begins with\n  \
    \  \"Provision\" and whose modtime is greater than the last time the\n    client\
    \ retrieved data.  An administrative client can easily generate\n    a report\
    \ of all clients which have not received the most recent\n    update by searching\
    \ for all entries named \"Client\" whose\n    \"OTAP.modtime\" attribute is less\
    \ than the desired value.\n    A partial list of items follows.\n"
- title: 5.1.6.1.  Entries and Attributes
  contents:
  - "5.1.6.1.  Entries and Attributes\n    dataset.inherit\n    This is a standard\
    \ ACAP attribute that identifies the location of\n    inherited data.  It exists\
    \ in the \"\" entry (the entry with the empty\n    name) within each dataset.\n"
- title: 5.1.6.2.  NAM Records
  contents:
  - "5.1.6.2.  NAM Records\n    The OTAP dataset class contains an entry for each\
    \ provisioned\n    mobile.  The standard location for provisioning records is:\n\
    \        /OTAP/USER/<esn>/<nam>/\n    This tree format allows multiple NAMs per\
    \ ESN.  The specific entries\n    contain data in IS-683A parameter block types.\n\
    \    For example, the CDMA NAM would be stored in an entry called:\n        /OTAP/USER/<esn>/<nam>/Provision.CDMA-NAM/\n\
    \    The entries below show how NAM records would be organized on the\n    ACAP\
    \ server:\n    CDMA/Analog NAM\n        Entry-Path: /OTAP/USER/<esn>/<nam>/Provision.CDMA-AMPS-NAM/\n\
    \        OTAP.Value: {17} xx xx xx ... xx\n        The CDMA/Analog NAM entry from\
    \ IS-683A (section 4.5.2.1)\n        consists of at least 129 information bits,\
    \ depending on the\n        number of SID NID list entries.  This is stored as\
    \ 17 (or more)\n        octets of binary data (padding is used to ensure an integral\n\
    \        number of octets).\n    Mobile Directory Number\n        Entry-Path:\
    \ /OTAP/USER/<esn>/<nam>/Provision.MOBILE-DN/\n        OTAP.Value: {10} nnnnnnnnnn\n\
    \        The Mobile Directory Number from IS-683A contains BCD-encoded\n     \
    \   digits representing the phone number.  This is stored as a\n        string\
    \ of 10 or more ASCII digits, e.g., \"6195551212\".\n    CDMA NAM\n        Entry-Path:\
    \ /OTAP/USER/<esn>/<nam>/ Provision.CDMA-NAM/\n        OTAP.Value: {13} xx xx\
    \ xx ... xx\n        The CDMA-NAM entry from IS-683A (section 4.5.2.3) consists\
    \ of at\n        least 100 information bits, depending on the number of SID-NID\n\
    \        list entries.  This is stored as 13 (or more) octets of binary\n    \
    \    data (padding is used to ensure an integral number of octets).\n    IMSI_T\n\
    \        Entry-Path: /OTAP/USER/<esn>/<nam>/ Provision.IMSI_T/\n        OTAP.Value:\
    \ {7} xx xx xx xx xx xx xx\n        The IMSI_T entry from IS-683A (section 4.5.2.4)\
    \ consists of 55\n        bits of information in five fields.  This is stored\
    \ left-\n        justified in 7 octets of binary data.\n"
- title: 5.1.6.3.  Server Roaming Lists
  contents:
  - "5.1.6.3.  Server Roaming Lists\n    The ACAP Server will have an entry for each\
    \ different roaming list\n    configuration for a carrier.  The example below\
    \ assumes that the\n    desired differentiation for the roaming list is geographic,\
    \ with\n    subdivisions for tiers of mobile free NVRAM It shows that for each\n\
    \    region there exists a set of roaming lists per free NVRAM range.\n    Note\
    \ that a carrier can easily implement different or further\n    differentiation\
    \ (e.g., by phone vendor or product type) by simply\n    changing the dataset\
    \ tree and assigned the appropriate value to the\n    \"dataset.inherit\" attribute\
    \ in the provisioning records.\n        /OTAP/GROUP/region.NorthEast/free-nv.128-512/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.NorthEast/free-nv.512-1024/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.SouthEast/free-nv.128-512/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.SouthEast/free-nv.512-1024/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.NorthWest/free-nv.128-512/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.NorthWest/free-nv.512-1024/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.SouthWest/free-nv.128-512/\n\
    \                    preferred.roaming.list/OTAP.Value\n        /OTAP/GROUP/region.SouthWest/free-nv.512-1024/\n\
    \                    preferred.roaming.list/OTAP.Value\n"
- title: 5.1.6.4.  Requested-Data Record
  contents:
  - "5.1.6.4.  Requested-Data Record\n    Inside the OTAP dataset is an entry with\
    \ the name\n    \"Provision.Requested-Data\", which contains one attribute called\n\
    \    \"OTAP.Requested-Data\".  This attribute is multi-valued.  It is\n    either\
    \ NIL or contains a list of strings.  Each string is the name\n    of one element\
    \ of data that the server requests the client to\n    supply.\n    After authenticating,\
    \ the ACAP client issues a SEARCH command to\n    retrieve the values of the \"\
    OTAP.Requested-Data\" attribute of the\n    \"Provision.Requested-Data\" entry.\
    \  The client processes the returned\n    values (if any) by issuing a STORE command\
    \ to set one or more\n    attributes in the \"Client\" entry.  The value of each\
    \ attribute is\n    either the corresponding mobile value (which may be an empty\
    \ string\n    if the item has no value), or the special value \"[N/A]\" if the\
    \ item\n    does not exist or is unknown on the mobile.\n    This mechanism is\
    \ quite general, and can be used in the normal OTASP\n    case to modify the mobile's\
    \ dataset as appropriate for the condition\n    of the mobile.  For example, the\
    \ inheritance could be set based on\n    the amount of NVRAM available, to cause\
    \ one set of preferred roaming\n    list data or another to be used.  This mechanism\
    \ can also be used in\n    other situations, such as to retrieve a complete set\
    \ of mobile\n    configuration parameters for diagnostic reasons.\n"
- title: 5.1.6.5.  Sample Server Entry
  contents:
  - "5.1.6.5.  Sample Server Entry\n    The entry below is an excerpt of a sample\
    \ ACAP server dataset entry\n    for a single mobile station, with an ESN of FB9876E\
    \ and using NAM 1:\n    /OTAP/USER/FB9876E/1/\n       entry              =   \"\
    \"\n       dataset.inherit    =   \"/OTAP/GROUP/region.NorthEast/\n          \
    \                     free-nv.128-512/preferred.roaming.list/\n              \
    \                 OTAP.Value/\"\n       entry               =   \"Provision.Requested-Data\"\
    \n       OTAP.Requested-Data =   (\"Phone-Make\" \"Phone-Model\" \"SW-Rev\"\n\
    \                                \"Free-NVRAM\")\n       entry               =\
    \   \"Client\"\n       OTAP.Phone-Make     =   \"Qualcomm\"\n       OTAP.Phone-Model\
    \    =   \"pdQ1900\"\n       OTAP.SW-Rev         =   \"001.030.0908\"\n      \
    \ OTAP.Free-NVRAM     =   \"65536\"\n       OTAP.Last-Modtime   =   \"199812181703\"\
    \n       entry               =   \"Provision.Mobile-DN\"\n       OTAP.Value  \
    \        =   {10} 619 555 1234\n       entry               =   \"Provision.CDMA-NAM\"\
    \n       OTAP.Value          =   {13} xx xx xx xx xx xx xx xx xx xx xx\n     \
    \                                      xx xx\n    This dataset shows not only\
    \ provisioning data which was downloaded\n    into the mobile station, but also\
    \ the items of client data requested\n    by the server (the Requested-Data attribute)\
    \ and the values of those\n    items (the \"Client\" entry).  It also indicates\
    \ that the mobile\n    client successfully stored the values associated with the\
    \ modtime\n    \"199812181703\".  In addition, it shows that this client inherits\n\
    \    data (i.e., roaming lists) from the \"NorthEast\" region.\n"
- title: 5.1.7.  Administrative Client
  contents:
  - "5.1.7.  Administrative Client\n    The administrative client loads initial provisioning\
    \ information\n    into the server, including specifying the roaming list to inherit.\n\
    \    The administrative client also updates provisioning server records\n    as\
    \ needed, and retrieves data for reports (such as a list of clients\n    which\
    \ have not yet been updated).\n    Data is loaded into provisioning records by\
    \ using the ACAP STORE\n    command.  The administrative client authenticates\
    \ to the ACAP server\n    using credentials that permit access to datasets for\
    \ mobiles.\n    When a new mobile is authorized for service, the administrative\n\
    \    client creates the dataset by storing into it values that are\n    specific\
    \ for the device.  It also sets the \"dataset.inherit\"\n    attribute so that\
    \ values which are not tied to the specific mobile\n    are inherited as appropriate.\n\
    \    * Updates to user records\n         Existing user records may need updating\
    \ from time to time.  For\n         example, a user may change service plans or\
    \ purchase an\n         additional or replacement mobile device, or the carrier\
    \ may\n         need to modify some aspect of provisioned data.\n    * Perusal\
    \ and editing of provisioning records\n         The administrative client can\
    \ provide general browse and edit\n         capability for user records.\n   \
    \ * Report generation\n         The administrative client can extract data from\
    \ the ACAP server\n         in order to generate reports.  For example, after\
    \ OTAPA\n         activity, a carrier may wish to identify those mobiles which\n\
    \         have not yet been updated.\n    * Queuing of OTAPA sessions\n      \
    \   Depending on the OTAPA update procedures chosen (e.g., SMS,\n         CLID,\
    \ periodic recheck), the administrative client may be\n         involved in initiating\
    \ the activity.  This may or may not use\n         an interface to the provisioning\
    \ server.\n"
- title: 5.1.8.  Mobile Client
  contents:
  - "5.1.8.  Mobile Client\n    The ACAP mobile client is implemented as a state machine\
    \ that\n    performs the equivalent of IS-683A provisioning parameter\n    information\
    \ exchange and non-volatile memory storage.  The ACAP\n    Client state machine\
    \ diagram (Figure 2) and descriptions are below.\n                    [Figure\
    \ 2 -- see PostScript version]\n    * Establish Transport Layer/Authenticate\n\
    \         Authentication and/or encryption can occur at the application\n    \
    \     layer and/or at the network/transport layer.\n         Basic ACAP authentication\
    \ occurs in the application layer\n         (i.e., within the ACAP session), and\
    \ in its baseline form uses\n         the CRAM-MD5[CRAM-MD5] mechanism.  If desired,\
    \ other mechanisms\n         can be used which provide more protection and encryption.\
    \  This\n         occurs after the transport layer is established, as shown in\n\
    \         the client state machine diagram above\n         Figure 3 shows the\
    \ CRAM-MD5 authentication mechanism for an\n         unprovisioned mobile.  In\
    \ the case of provisioned mobiles, the\n         shared secret is derived from\
    \ the A-Key, instead of the\n         limited-time N-digit code used for unprovisioned\
    \ devices.\n         Use of basic ACAP authentication is preferred for initial\n\
    \         implementations of data-OTASP because it is simple, easy to\n      \
    \   implement, and all procedures and methods are in place.\n         Stronger\
    \ SASL mechanisms and/or IPSec can be rolled out in the\n         future without\
    \ disrupting the deployed base.\n                      [Figure 3 -- see PostScript\
    \ version]\n    * Requested-data SEARCH\n         The mobile ACAP client issues\
    \ a search command asking the\n         server to return the attribute \"OTAP.Requested-Data\"\
    \ in the\n         entry \"Requested-Data\".\n    * Receive requested-data values\n\
    \         The server instructs the client to store attributes by\n         returning\
    \ one or more values of requested-data in response to\n         the Requested-Data\
    \ SEARCH.\n         For example, the attribute \"OTAP.Requested-Data\" in the\
    \ entry\n         \"Requested-Data\" might contain four values: \"phone-make\"\
    ,\n         \"phone-model\", \"SW-Rev\", and \"Free-NVRAM\".\n    * STORE attribute\
    \ list\n         If the response to the requested-data SEARCH returns any\n  \
    \       values, the client issues a STORE command.  Each attribute in\n      \
    \   the STORE command corresponds to one item of requested-data.\n         If\
    \ the client does not recognize an item, it stores the string\n         \"[n/a]\"\
    .\n         Continuing with our example, the client uses this STORE command\n\
    \         to write four attributes into the \"Client\" entry.  Each\n        \
    \ attribute name is identical to one value of the\n         OTAP.Requested-Data\"\
    \ attribute (with the prefix \"OTAP.\" added).\n         Each attribute value\
    \ is determined by the respective mobile\n         value.\n         In our example,\
    \ this STORE command sets the following\n         attributes and values:\n   \
    \       - \"OTAP.Phone-Make\"     =   \"Qualcomm\n          - \"OTAP.Phone-Model\"\
    \    =   \"pdQ1900\n          - \"OTAP.SW-Rev\"         =   \"001.030.0908\"\n\
    \          - \"OTAP.Free-NVRAM\"     =   \"65536\"\n    * Provisioning data SEARCH\n\
    \         The mobile ACAP client issues a search command to retrieve any\n   \
    \      items of provisioning data that have changed since it last\n         checked\
    \ in (which in the initial session retrieves all\n         provisioning data).\n\
    \         This SEARCH command asks the server to return the \"OTAP.Value\"\n \
    \        attribute of any entries whose name starts with \"provision.\"\n    \
    \     (case-insensitive) and whose modtime is greater than the\n         supplied\
    \ value (which is zero for an unprovisioned mobile).\n    * Receive provisioning\
    \ data and modtime\n         The server returns the provisioning items, each as\
    \ one entry\n         name and one attribute value.  The server response to the\n\
    \         SEARCH command includes the modtime of the latest entry\n         returned.\n\
    \    * Save values\n         The mobile writes the returned values into NVRAM.\n\
    \    * STORE modtime\n         The ACAP client stores the returned modtime on\
    \ the server as an\n         acknowledgement that the data was received and NVRAM\
    \ updated.\n    * LOGOUT\n         The client issues the LOGOUT command.\n   \
    \ * Close transport layer\n         The client closes the TCP connection.\n  \
    \  * End call\n         The data call is terminated.\n"
- title: 5.2.  WAP with ACAP
  contents:
  - "5.2.  WAP with ACAP\n    An advantage of the ACAP solution is that is can easily\
    \ coexist with\n    a WAP-based mechanism, giving carriers more options.\n   \
    \ A carrier can deploy handsets into its service area which use WAP-\n    based\
    \ provisioning, if desired, alongside those which use ACAP\n    provisioning.\
    \  All that is required is that the WAP server contain a\n    small ACAP client\
    \ (or an interface to an ACAP server).\n    Figure 4 shows how mobile stations\
    \ can be configured using a WAP\n    browser.  By using an ACAP server for provisioning,\
    \ carriers are\n    free to simultaneously deploy mobile stations that use either\
    \ WAP or\n    ACAP, as desired.  In either case, the ACAP server is the source\
    \ for\n    provisioning data.\n                    [Figure 4 -- see PostScript\
    \ version]\n"
- title: 5.3.  Network-Resident vs.  Configuration Data
  contents:
  - "5.3.  Network-Resident vs.  Configuration Data\n    It is useful to recognize\
    \ that wireless devices access two different\n    types of carrier-provided data:\
    \ network-resident and configuration.\n    Network-resident data exists primarily\
    \ within the carrier's network.\n    Examples include account status, billing\
    \ detail, service plan\n    options, etc.  While mobiles may access this information\
    \ for user\n    display, it resides in the network.  Configuration data, in\n\
    \    contrast, affects the operation of the handset, is usually not shown\n  \
    \  to the user, and must persist in the device.\n    For network-resident data\
    \ access, the obvious choice is the web.\n    The data is highly interactive and\
    \ time-variant, making web browsers\n    a reasonable solution.  Any appropriate\
    \ web browser can be used.\n    There are many good reasons for having a web browser\
    \ in a wireless\n    device which contains a display and is capable of user interaction.\n\
    \    For configuration data, the best solution is to use ACAP.  ACAP is\n    optimized\
    \ for the job, can be implemented quickly, requires a very\n    small amount of\
    \ memory, and does not depend on a display or any user\n    interaction capability.\n\
    \    Trying to use the same access method for both types of data\n    unnecessarily\
    \ complicates the solution, leading to increased design,\n    development, and\
    \ debug time and expense.  It makes it more difficult\n    to offer low-cost devices.\
    \  Since the two types of data\n    fundamentally differ, it is good engineering\
    \ practice to select\n    optimal code and protocols for each.\n"
- title: 5.4.  Intellectual Property Issues
  contents:
  - "5.4.  Intellectual Property Issues\n    There are no known intellectual property\
    \ issues with the ACAP\n    solution.  The ACAP specification was developed within\
    \ the IETF, and\n    no ownership, patent, or other IP claims have been asserted.\n\
    \    Multiple independent vendors are developing ACAP clients and\n    servers,\
    \ in addition to the existing usage in deployed products.\n"
- title: 6.  Handset Protocol Suites
  contents:
  - '6.  Handset Protocol Suites

    '
- title: 6.1.  ACAP over TCP/IP
  contents:
  - "6.1.  ACAP over TCP/IP\n    Figure 5 depicts the mobile station protocol suite\
    \ for the ACAP over\n    TCP/IP solution.  The mobile station is capable of supporting\
    \ both\n    IS-683A OTASP and OTASP over ACAP.\n                    [Figure 5\
    \ -- see PostScript version]\n"
- title: 7.  IS-683A Compatibility
  contents:
  - '7.  IS-683A Compatibility

    '
- title: 7.1.  OTASP Operations
  contents:
  - "7.1.  OTASP Operations\n    To maximize compatibility and allow for reuse of\
    \ IS-683A handset\n    code, the data formats used in OTASP over ACAP are identical\
    \ to\n    those used in IS-683A.  Section 5.1.5  Data Organization and\n    Capabilities\
    \ discusses this in more detail.\n    OTASP via IS-683A requires custom design\
    \ and development for the\n    specific CDMA infrastructure used by a carrier.\
    \  This can greatly\n    limit the data management capabilities and significantly\
    \ reduces the\n    extensibility of the solution.  Conversely, OTASP over data\
    \ can be\n    implemented on a generic IP network using an Internet standards-\n\
    \    based capability that provides extensible provisioning activities\n    for\
    \ carriers.\n    OTASP over data uses a traffic channel whereas IS-683A OTASP\
    \ runs\n    over the limited-bandwidth signaling channel.\n    IS-683A OTASP operations\
    \ are inherently simultaneous voice and data.\n    This allows the customer care\
    \ representative to extract information\n    from the mobile station while conversing\
    \ with the user.  OTASP over\n    data services is a data-only solution (at least\
    \ for now).  This\n    makes OTASP operations slightly more sequential and potentially\n\
    \    problematic.  Simultaneous voice and data will alleviate this issue.\n"
- title: 7.2   OTASP Call Flow
  contents:
  - "7.2   OTASP Call Flow\n    The call flow diagram (Figure 6) depicts the message\
    \ sequence and\n    operations for a typical IS-683A OTASP (provisioning) call.\
    \  Any\n    data-OTASP solution must perform all the functions of the IS-683A\n\
    \    OTASP call.  The proposed solution meets these requirements.\n          \
    \          [Figure 6 -- see PostScript version]\n"
- title: 7.3.  OTAPA Operations
  contents:
  - "7.3.  OTAPA Operations\n    Data-OTAPA requires the ability to instruct mobiles\
    \ to originate a\n    data call to the provisioning server.  Several viable approaches\
    \ are\n    discussed in sections 3.3  OTAPA Activity and 4.3  OTAPA\n    Requirements.\n\
    \    OTAPA over data has the potential to require far less channel\n    resources\
    \ to download new information to mobile stations.  The ACAP\n    server inherently\
    \ only communicates changes to the clients, thus\n    only changed information\
    \ needs to be downloaded to the mobile\n    stations using OTAPA over data via\
    \ ACAP.\n"
- title: 7.4.  OTAPA Call Flow
  contents:
  - "7.4.  OTAPA Call Flow\n    The call flow diagram (Figure 7) depicts the message\
    \ sequence for a\n    typical IS-683A OTAPA operation.  Any data-OTAPA solution\
    \ must\n    perform all the functions of the IS-683A OTAPA call.  The proposed\n\
    \    solution meets these requirements.\n                    [Figure 7 -- see\
    \ PostScript version]\n"
- title: 8.  Alternative Methods
  contents:
  - '8.  Alternative Methods

    '
- title: 8.1.  IS-683A over TCP/IP
  contents:
  - "8.1.  IS-683A over TCP/IP\n    One alternative is to port IS-683A to TCP, remaining\
    \ as close as\n    possible to the IS-683A protocol exchange.\n    Figure 8 depicts\
    \ the architecture and communications backbone to\n    support OTASP/OTAPA via\
    \ IS-707 data services with a provisioning\n    server based on the IS-683A OTAF\
    \ function.\n                    [Figure 8 -- see PostScript version]\n"
- title: 8.1.1.  OTAF Server
  contents:
  - "8.1.1.  OTAF Server\n    This provisioning server is modeled after the IS-683A\
    \ OTAF.  The\n    OTAF server performs the specific operations and messaging of\
    \ IS-\n    683A OTAF.  This includes A-key reauthentication procedures.\n    Strongpoints:\n\
    \    (1) OTAF and mobile station behavior mirrors IS-683A (reduced\n    duplicate\
    \ software in mobile station).  Nearly all procedures fully\n    defined.\n  \
    \  Drawbacks:\n    (1) The OTAF server would need to be custom-designed and built.\n\
    \    (2) No inherent data manipulation capabilities in the OTAF server.\n    All\
    \ required or desired data management activities would have to be\n    built from\
    \ scratch.\n    (3) Interface application would require a non-standard interface\n\
    \    (and therefore proprietary) to OTAF server.\n    (4) End-to-end encryption\
    \ scheme still needed for full security.\n"
- title: 8.1.2.  Interface Application
  contents:
  - "8.1.2.  Interface Application\n    This function loads all required provisioning-related\
    \ information\n    from the CDMA network information system to the OTAF server.\
    \  This\n    includes the queuing of provisioning transactions and data.\n"
- title: 8.1.3.  Protocol Handset Suite
  contents:
  - "8.1.3.  Protocol Handset Suite\n    Figure 9 depicts the mobile station protocol\
    \ suite for the IS-683A\n    over TCP/IP solution.  The OTASP client is capable\
    \ of supporting\n    both IS-683A OTASP activities or OTASP activities over the\
    \ data\n    transport.\n                    [Figure 9 -- see PostScript version]\n"
- title: 8.2.  Browser-Based Forms
  contents:
  - "8.2.  Browser-Based Forms\n    Another alternative is to use forms embedded in\
    \ web pages.\n    Encapsulating the provisioning data into custom tags embedded\
    \ in a\n    web form is an idea that at first seems attractive.  There are a lot\n\
    \    of advantages in having a browser in the handset, web servers are\n    very\
    \ widely deployed, and everyone is familiar on some level with\n    the web.\n\
    \    However, a meta-protocol for this would need to be designed, and a\n    fully\
    \ detailed specification produced.  This solution requires\n    custom software\
    \ on the provider side to handle the meta-protocol.\n    It additionally requires\
    \ handset vendors to add custom software in\n    the handset browser to handle\
    \ this protocol.\n    This solution would require a provisioning-capable browser\
    \ in every\n    phone.  While it may be desirable to have a browser, the decision\
    \ to\n    require it needs to be considered carefully, especially in light of\n\
    \    the memory requirements it would impose on all devices.\n    This solution\
    \ would complicate the handset browser, by requiring it\n    to handle provisioning\
    \ as well as browsing.  As provisioning and\n    browsing are functionally dissimilar,\
    \ this code is not a natural fit\n    within the browser.  Implementing this solution\
    \ would require a\n    significant increase in development and debug resources,\
    \ and thus\n    negatively impact time-to-market and cost.\n    Also because the\
    \ web is functionally dissimilar, a high level of\n    carrier-side customization\
    \ would be needed, leading to reduced\n    vendor choice and increased deployment\
    \ costs.\n    This approach would layer custom data on top of a standard protocol.\n\
    \    This would require design work, and would not have much time for\n    open\
    \ review before deployment, greatly increasing the risk.  By\n    contrast, ACAP\
    \ has had years of open review and refinement.\n    This approach also limits\
    \ the extensibility of the solution.  ACAP,\n    conversely, is very extensible.\
    \  Because ACAP is such a simple\n    protocol, it can be added to a wide variety\
    \ of applications at low\n    cost.  This allows increasing numbers of applications\
    \ on the mobile\n    device to share information with servers as well as desktop\n\
    \    applications.\n"
- title: 9.  Conclusion
  contents:
  - "9.  Conclusion\n    ACAP provides a high degree of extensibility, especially\
    \ in\n    authentication mechanisms, custom attribute handling, and data\n   \
    \ management.  By using an Internet standard protocol,\n    interoperability and\
    \ integration with a variety of equipment is\n    possible, and carriers are not\
    \ locked into any vendor.  It is also\n    easier to add new levels of service\
    \ and capabilities, especially\n    integration with future subscriber devices\
    \ and applications (e.g.,\n    email).\n    Since an ACAP client is so small,\
    \ it can be incorporated into\n    virtually any device, even low-end ones without\
    \ displays, and can be\n    added without sacrificing other features.  The simplicity\
    \ of the\n    client and protocol directly translate to shorter development cycles\n\
    \    and faster time-to-market.\n    Because the ACAP protocol was designed for\
    \ precisely this type of\n    provisioning activity, its adoption can greatly\
    \ reduce the cost,\n    time to market, and support required for the provisioning\
    \ server as\n    well as the handsets.  As an open standard, the ACAP protocol\
    \ has\n    benefited from years of review and experience.\n    Another advantage\
    \ of the ACAP solution is that is can easily coexist\n    with a WAP-based mechanism,\
    \ giving carriers more options and\n    reducing the minimal requirement burden\
    \ on mobile devices.\n    A carrier can deploy handsets into its service area\
    \ which use WAP-\n    based provisioning, if desired, alongside those which use\
    \ ACAP\n    provisioning.  By using an ACAP server for provisioning, carriers\n\
    \    are free to simultaneously deploy mobile stations that use either\n    WAP\
    \ or ACAP, as desired.\n    The lack of intellectual-property issues further adds\
    \ to ACAP's\n    appeal.\n"
- title: 10.  References
  contents:
  - "10.  References\n    [ACAP] Newman, C. and J. Myers, \"ACAP -- Application Configuration\n\
    \    Access Protocol\", RFC 2244, November 1997.\n    [CRAM-MD5] Klensin, J.,\
    \ Catoe, R. and P. Krumviede, \"IMAP/POP\n    AUTHorize Extension for Simple Challenge/Response\"\
    , RFC 2195,\n    September 1997.\n    [SASL] Myers, J., \"Simple Authentication\
    \ and Security Layer (SASL)\",\n    RFC 2222, October 1997.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n    Security is discussed in many sections of this\
    \ document.  In\n    particular, the need and methods to guard against unauthorized\n\
    \    updating of handsets, usurpation of newly-created accounts,\n    compromise\
    \ of handset security values, and disclosure of carrier\n    proprietary data\
    \ and handset parameters is covered.\n"
- title: 12.  Acknowledgments
  contents:
  - "12.  Acknowledgments\n    Jim Willkie and Marc Phillips contributed greatly to\
    \ this document.\n    Their help is very much appreciated.\n"
- title: 13.  Author's Address
  contents:
  - "13.  Author's Address\n   Randall Gellens\n   QUALCOMM Incorporated\n   6455\
    \ Lusk Boulevard\n   San Diego, CA  92121-2779\n   Phone: +1 619 651 5115\n  \
    \ EMail: randy@qualcomm.com\n"
- title: 14. Full Copyright Statement
  contents:
  - "14. Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
