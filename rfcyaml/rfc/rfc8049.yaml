- title: __initial_text__
  contents:
  - '               YANG Data Model for L3VPN Service Delivery

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines a YANG data model that can be used for\n \
    \  communication between customers and network operators and to deliver\n   a\
    \ Layer 3 provider-provisioned VPN service.  This document is limited\n   to BGP\
    \ PE-based VPNs as described in RFCs 4026, 4110, and 4364.  This\n   model is\
    \ intended to be instantiated at the management system to\n   deliver the overall\
    \ service.  It is not a configuration model to be\n   used directly on network\
    \ elements.  This model provides an abstracted\n   view of the Layer 3 IP VPN\
    \ service configuration components.  It will\n   be up to the management system\
    \ to take this model as input and use\n   specific configuration models to configure\
    \ the different network\n   elements to deliver the service.  How the configuration\
    \ of network\n   elements is done is out of scope for this document.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 7841.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8049.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. Terminology ................................................4\n  \
    \    1.2. Requirements Language ......................................5\n    \
    \  1.3. Tree Diagrams ..............................................5\n   2. Acronyms\
    \ ........................................................5\n   3. Definitions\
    \ .....................................................7\n   4. Layer 3 IP VPN\
    \ Service Model ....................................8\n   5. Service Data Model\
    \ Usage ........................................9\n   6. Design of the Data Model\
    \ .......................................10\n      6.1. Features and Augmentation\
    \ .................................18\n      6.2. VPN Service Overview ......................................18\n\
    \           6.2.1. VPN Service Topology ...............................18\n  \
    \                6.2.1.1. Route Target Allocation ...................19\n    \
    \              6.2.1.2. Any-to-Any ................................20\n      \
    \            6.2.1.3. Hub and Spoke .............................20\n        \
    \          6.2.1.4. Hub and Spoke Disjoint ....................21\n          \
    \ 6.2.2. Cloud Access .......................................22\n           6.2.3.\
    \ Multicast Service ..................................24\n           6.2.4. Extranet\
    \ VPNs ......................................26\n      6.3. Site Overview .............................................27\n\
    \           6.3.1. Devices and Locations ..............................29\n  \
    \         6.3.2. Site Network Accesses ..............................30\n    \
    \              6.3.2.1. Bearer ....................................30\n      \
    \            6.3.2.2. Connection ................................31\n        \
    \          6.3.2.3. Inheritance of Parameters Defined at\n                   \
    \        Site Level and Site Network Access Level ..32\n      6.4. Site Role .................................................32\n\
    \      6.5. Site Belonging to Multiple VPNs ...........................33\n  \
    \         6.5.1. Site VPN Flavor ....................................33\n    \
    \              6.5.1.1. Single VPN Attachment:\n                           site-vpn-flavor-single\
    \ ....................33\n                  6.5.1.2. MultiVPN Attachment:\n  \
    \                         site-vpn-flavor-multi .....................33\n    \
    \              6.5.1.3. SubVPN Attachment: site-vpn-flavor-sub ....34\n      \
    \            6.5.1.4. NNI: site-vpn-flavor-nni ..................36\n        \
    \   6.5.2. Attaching a Site to a VPN ..........................37\n          \
    \        6.5.2.1. Referencing a VPN .........................37\n            \
    \      6.5.2.2. VPN Policy ................................38\n      6.6. Deciding\
    \ Where to Connect the Site ........................40\n           6.6.1. Constraint:\
    \ Device .................................41\n           6.6.2. Constraint/Parameter:\
    \ Site Location ................41\n           6.6.3. Constraint/Parameter: Access\
    \ Type ..................42\n           6.6.4. Constraint: Access Diversity .......................43\n\
    \           6.6.5. Infeasible Access Placement ........................49\n  \
    \         6.6.6. Examples of Access Placement .......................50\n    \
    \              6.6.6.1. Multihoming ...............................50\n      \
    \            6.6.6.2. Site Offload ..............................53\n        \
    \          6.6.6.3. Parallel Links ............................59\n          \
    \        6.6.6.4. SubVPN with Multihoming ...................60\n           6.6.7.\
    \ Route Distinguisher and VRF Allocation .............64\n      6.7. Site Network\
    \ Access Availability ..........................64\n      6.8. Traffic Protection\
    \ ........................................66\n      6.9. Security ..................................................66\n\
    \           6.9.1. Authentication .....................................67\n  \
    \         6.9.2. Encryption .........................................67\n    \
    \  6.10. Management ...............................................68\n      6.11.\
    \ Routing Protocols ........................................68\n           6.11.1.\
    \ Handling of Dual Stack ............................69\n           6.11.2. LAN\
    \ Directly Connected to SP Network ..............70\n           6.11.3. LAN Directly\
    \ Connected to SP Network with\n                   Redundancy ........................................70\n\
    \           6.11.4. Static Routing ....................................70\n  \
    \         6.11.5. RIP Routing .......................................71\n    \
    \       6.11.6. OSPF Routing ......................................71\n      \
    \     6.11.7. BGP Routing .......................................73\n      6.12.\
    \ Service ..................................................75\n           6.12.1.\
    \ Bandwidth .........................................75\n           6.12.2. QoS\
    \ ...............................................75\n                  6.12.2.1.\
    \ QoS Classification .......................75\n                  6.12.2.2. QoS\
    \ Profile ..............................78\n           6.12.3. Multicast .........................................81\n\
    \      6.13. Enhanced VPN Features ....................................82\n  \
    \         6.13.1. Carriers' Carriers ................................82\n    \
    \  6.14. External ID References ...................................83\n      6.15.\
    \ Defining NNIs ............................................83\n           6.15.1.\
    \ Defining an NNI with the Option A Flavor ..........85\n           6.15.2. Defining\
    \ an NNI with the Option B Flavor ..........88\n           6.15.3. Defining an\
    \ NNI with the Option C Flavor ..........91\n   7. Service Model Usage Example\
    \ ....................................92\n   8. Interaction with Other YANG Modules\
    \ ............................98\n   9. YANG Module ...................................................102\n\
    \   10. Security Considerations ......................................154\n  \
    \ 11. IANA Considerations ..........................................155\n   12.\
    \ References ...................................................155\n      12.1.\
    \ Normative References ....................................155\n      12.2. Informative\
    \ References ..................................157\n   Acknowledgements .................................................157\n\
    \   Contributors .....................................................157\n  \
    \ Authors' Addresses ...............................................157\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a Layer 3 VPN service data model written\
    \ in\n   YANG.  The model defines service configuration elements that can be\n\
    \   used in communication protocols between customers and network\n   operators.\
    \  Those elements can also be used as input to automated\n   control and configuration\
    \ applications.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The following terms are defined in [RFC6241] and are not\
    \ redefined\n   here:\n   o  client\n   o  configuration data\n   o  server\n\
    \   o  state data\n   The following terms are defined in [RFC7950] and are not\
    \ redefined\n   here:\n   o  augment\n   o  data model\n   o  data node\n   The\
    \ terminology for describing YANG data models is found in\n   [RFC7950].\n   This\
    \ document presents some configuration examples using XML\n   representation.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 1.3.  Tree Diagrams
  contents:
  - "1.3.  Tree Diagrams\n   A simplified graphical representation of the data model\
    \ is presented\n   in Section 6.\n   The meanings of the symbols in these diagrams\
    \ are as follows:\n   o  Brackets \"[\" and \"]\" enclose list keys.\n   o  Curly\
    \ braces \"{\" and \"}\" contain names of optional features that\n      make the\
    \ corresponding node conditional.\n   o  Abbreviations before data node names:\
    \ \"rw\" means configuration\n      data (read-write), and \"ro\" means state\
    \ data (read-only).\n   o  Symbols after data node names: \"?\" means an optional\
    \ node, and \"*\"\n      denotes a \"list\" or \"leaf-list\".\n   o  Parentheses\
    \ enclose choice and case nodes, and case nodes are also\n      marked with a\
    \ colon (\":\").\n   o  Ellipsis (\"...\") stands for contents of subtrees that\
    \ are not\n      shown.\n"
- title: 2.  Acronyms
  contents:
  - "2.  Acronyms\n   AAA: Authentication, Authorization, and Accounting.\n   ACL:\
    \ Access Control List.\n   ADSL: Asymmetric DSL.\n   AH: Authentication Header.\n\
    \   AS: Autonomous System.\n   ASBR: Autonomous System Border Router.\n   ASM:\
    \ Any-Source Multicast.\n   BAS: Broadband Access Switch.\n   BFD: Bidirectional\
    \ Forwarding Detection.\n   BGP: Border Gateway Protocol.\n   BSR: Bootstrap Router.\n\
    \   CE: Customer Edge.\n   CLI: Command Line Interface.\n   CsC: Carriers' Carriers.\n\
    \   CSP: Cloud Service Provider.\n   DHCP: Dynamic Host Configuration Protocol.\n\
    \   DSLAM: Digital Subscriber Line Access Multiplexer.\n   ESP: Encapsulating\
    \ Security Payload.\n   GRE: Generic Routing Encapsulation.\n   IGMP: Internet\
    \ Group Management Protocol.\n   LAN: Local Area Network.\n   MLD: Multicast Listener\
    \ Discovery.\n   MTU: Maximum Transmission Unit.\n   NAT: Network Address Translation.\n\
    \   NETCONF: Network Configuration Protocol.\n   NNI: Network-to-Network Interface.\n\
    \   OAM: Operations, Administration, and Maintenance.\n   OSPF: Open Shortest\
    \ Path First.\n   OSS: Operations Support System.\n   PE: Provider Edge.\n   PIM:\
    \ Protocol Independent Multicast.\n   POP: Point of Presence.\n   QoS: Quality\
    \ of Service.\n   RD: Route Distinguisher.\n   RIP: Routing Information Protocol.\n\
    \   RP: Rendezvous Point.\n   RT: Route Target.\n   SFTP: Secure FTP.\n   SLA:\
    \ Service Level Agreement.\n   SLAAC: Stateless Address Autoconfiguration.\n \
    \  SP: Service Provider.\n   SPT: Shortest Path Tree.\n   SSM: Source-Specific\
    \ Multicast.\n   VM: Virtual Machine.\n   VPN: Virtual Private Network.\n   VRF:\
    \ VPN Routing and Forwarding.\n   VRRP: Virtual Router Redundancy Protocol.\n"
- title: 3.  Definitions
  contents:
  - "3.  Definitions\n   Customer Edge (CE) Device: A CE is equipment dedicated to\
    \ a\n   particular customer; it is directly connected (at Layer 3) to one or\n\
    \   more PE devices via attachment circuits.  A CE is usually located at\n   the\
    \ customer premises and is usually dedicated to a single VPN,\n   although it\
    \ may support multiple VPNs if each one has separate\n   attachment circuits.\n\
    \   Provider Edge (PE) Device: A PE is equipment managed by the SP; it\n   can\
    \ support multiple VPNs for different customers and is directly\n   connected\
    \ (at Layer 3) to one or more CE devices via attachment\n   circuits.  A PE is\
    \ usually located at an SP point of presence (POP)\n   and is managed by the SP.\n\
    \   PE-Based VPNs: The PE devices know that certain traffic is VPN\n   traffic.\
    \  They forward the traffic (through tunnels) based on the\n   destination IP\
    \ address of the packet and, optionally, based on other\n   information in the\
    \ IP header of the packet.  The PE devices are\n   themselves the tunnel endpoints.\
    \  The tunnels may make use of various\n   encapsulations to send traffic over\
    \ the SP network (such as, but not\n   restricted to, GRE, IP-in-IP, IPsec, or\
    \ MPLS tunnels).\n"
- title: 4.  Layer 3 IP VPN Service Model
  contents:
  - "4.  Layer 3 IP VPN Service Model\n   A Layer 3 IP VPN service is a collection\
    \ of sites that are authorized\n   to exchange traffic between each other over\
    \ a shared IP\n   infrastructure.  This Layer 3 VPN service model aims at providing\
    \ a\n   common understanding of how the corresponding IP VPN service is to be\n\
    \   deployed over the shared infrastructure.  This service model is\n   limited\
    \ to BGP PE-based VPNs as described in [RFC4026], [RFC4110],\n   and [RFC4364].\n"
- title: 5.  Service Data Model Usage
  contents:
  - "5.  Service Data Model Usage\n                l3vpn-svc |\n                 \
    \ Model   |\n                          |\n                   +------------------+\
    \         +-----+\n                   |   Orchestration  | < --- > | OSS |\n \
    \                  +------------------+         +-----+\n                    \
    \  |            |\n              +----------------+   |\n              | Config\
    \ manager |   |\n              +----------------+   |\n                      |\
    \            |\n                      | NETCONF/CLI ...\n                    \
    \  |            |\n        +------------------------------------------------+\n\
    \                             Network\n                           +++++++\n  \
    \                         + AAA +\n                           +++++++\n   ++++++++\
    \   Bearer    ++++++++           ++++++++      ++++++++\n   + CE A + -----------\
    \ + PE A +           + PE B + ---- + CE B +\n   ++++++++  Connection ++++++++\
    \           ++++++++      ++++++++\n              Site A                     \
    \          Site B\n   The idea of the L3 IP VPN service model is to propose an\
    \ abstracted\n   interface between customers and network operators to manage\n\
    \   configuration of components of an L3VPN service.  A typical scenario\n   would\
    \ be to use this model as an input for an orchestration layer\n   that will be\
    \ responsible for translating it to an orchestrated\n   configuration of network\
    \ elements that will be part of the service.\n   The network elements can be routers\
    \ but can also be servers (like\n   AAA); the network's configuration is not limited\
    \ to these examples.\n   The configuration of network elements can be done via\
    \ the CLI,\n   NETCONF/RESTCONF [RFC6241] [RFC8040] coupled with YANG data models\
    \ of\n   a specific configuration (BGP, VRF, BFD, etc.), or some other\n   technique,\
    \ as preferred by the operator.\n   The usage of this service model is not limited\
    \ to this example; it\n   can be used by any component of the management system\
    \ but not\n   directly by network elements.\n"
- title: 6.  Design of the Data Model
  contents:
  - "6.  Design of the Data Model\n   The YANG module is divided into two main containers:\
    \ \"vpn-services\"\n   and \"sites\".\n   The \"vpn-service\" list under the vpn-services\
    \ container defines\n   global parameters for the VPN service for a specific customer.\n\
    \   A \"site\" is composed of at least one \"site-network-access\" and, in\n \
    \  the case of multihoming, may have multiple site-network-access\n   points.\
    \  The site-network-access attachment is done through a\n   \"bearer\" with an\
    \ \"ip-connection\" on top.  The bearer refers to\n   properties of the attachment\
    \ that are below Layer 3, while the\n   connection refers to properties oriented\
    \ to the Layer 3 protocol.\n   The bearer may be allocated dynamically by the\
    \ SP, and the customer\n   may provide some constraints or parameters to drive\
    \ the placement of\n   the access.\n   Authorization of traffic exchange is done\
    \ through what we call a VPN\n   policy or VPN service topology defining routing\
    \ exchange rules\n   between sites.\n   The figure below describes the overall\
    \ structure of the YANG module:\n   module: ietf-l3vpn-svc\n     +--rw l3vpn-svc\n\
    \      +--rw vpn-services\n      | +--rw vpn-service* [vpn-id]\n      |   +--rw\
    \ vpn-id         svc-id\n      |   +--rw customer-name?     string\n      |  \
    \ +--rw vpn-service-topology?  identityref\n      |   +--rw cloud-accesses {cloud-access}?\n\
    \      |   | +--rw cloud-access* [cloud-identifier]\n      |   |   +--rw cloud-identifier\
    \    string\n      |   |   +--rw (list-flavor)?\n      |   |   | +--:(permit-any)\n\
    \      |   |   | | +--rw permit-any?      empty\n      |   |   | +--:(deny-any-except)\n\
    \      |   |   | | +--rw permit-site*      leafref\n      |   |   | +--:(permit-any-except)\n\
    \      |   |   |   +--rw deny-site*       leafref\n      |   |   +--rw authorized-sites\n\
    \      |   |   | +--rw authorized-site* [site-id]\n      |   |   |   +--rw site-id\
    \  leafref\n      |   |   +--rw denied-sites\n      |   |   | +--rw denied-site*\
    \ [site-id]\n      |   |   |   +--rw site-id  leafref\n      |   |   +--rw address-translation\n\
    \      |   |    +--rw nat44\n      |   |      +--rw enabled?         boolean\n\
    \      |   |      +--rw nat44-customer-address?  inet:ipv4-address\n      |  \
    \ +--rw multicast {multicast}?\n      |   | +--rw enabled?         boolean\n \
    \     |   | +--rw customer-tree-flavors\n      |   | | +--rw tree-flavor*  identityref\n\
    \      |   | +--rw rp\n      |   |   +--rw rp-group-mappings\n      |   |   |\
    \ +--rw rp-group-mapping* [id]\n      |   |   |   +--rw id         uint16\n  \
    \    |   |   |   +--rw provider-managed\n      |   |   |   | +--rw enabled?  \
    \        boolean\n      |   |   |   | +--rw rp-redundancy?       boolean\n   \
    \   |   |   |   | +--rw optimal-traffic-delivery?  boolean\n      |   |   |  \
    \ +--rw rp-address?     inet:ip-address\n      |   |   |   +--rw groups\n    \
    \  |   |   |    +--rw group* [id]\n      |   |   |      +--rw id        uint16\n\
    \      |   |   |      +--rw (group-format)?\n      |   |   |       +--:(startend)\n\
    \      |   |   |       | +--rw group-start?   inet:ip-address\n      |   |   |\
    \       | +--rw group-end?    inet:ip-address\n      |   |   |       +--:(singleaddress)\n\
    \      |   |   |         +--rw group-address?  inet:ip-address\n      |   |  \
    \ +--rw rp-discovery\n      |   |    +--rw rp-discovery-type?  identityref\n \
    \     |   |    +--rw bsr-candidates\n      |   |      +--rw bsr-candidate-address*\
    \  inet:ip-address\n      |   +--rw carrierscarrier?    boolean {carrierscarrier}?\n\
    \      |   +--rw extranet-vpns {extranet-vpn}?\n      |    +--rw extranet-vpn*\
    \ [vpn-id]\n      |      +--rw vpn-id       svc-id\n      |      +--rw local-sites-role?\
    \  identityref\n      +--rw sites\n        +--rw site* [site-id]\n         +--rw\
    \ site-id         svc-id\n         +--rw requested-site-start?  yang:date-and-time\n\
    \         +--rw requested-site-stop?   yang:date-and-time\n         +--rw locations\n\
    \         | +--rw location* [location-id]\n         |   +--rw location-id   svc-id\n\
    \         |   +--rw address?    string\n         |   +--rw postal-code?  string\n\
    \         |   +--rw state?     string\n         |   +--rw city?      string\n\
    \         |   +--rw country-code?  string\n         +--rw devices\n         |\
    \ +--rw device* [device-id]\n         |   +--rw device-id   svc-id\n         |\
    \   +--rw location?   leafref\n         |   +--rw management\n         |    +--rw\
    \ address-family?  address-family\n         |    +--rw address?     inet:ip-address\n\
    \         +--rw site-diversity {site-diversity}?\n         | +--rw groups\n  \
    \       |   +--rw group* [group-id]\n         |    +--rw group-id  string\n  \
    \       +--rw management\n         | +--rw type?  identityref\n         +--rw\
    \ vpn-policies\n         | +--rw vpn-policy* [vpn-policy-id]\n         |   +--rw\
    \ vpn-policy-id  svc-id\n         |   +--rw entries* [id]\n         |    +--rw\
    \ id    svc-id\n         |    +--rw filter\n         |    | +--rw (lan)?\n   \
    \      |    |   +--:(prefixes)\n         |    |   | +--rw ipv4-lan-prefix*  inet:ipv4-prefix\
    \ {ipv4}?\n         |    |   | +--rw ipv6-lan-prefix*  inet:ipv6-prefix {ipv6}?\n\
    \         |    |   +--:(lan-tag)\n         |    |    +--rw lan-tag*      string\n\
    \         |    +--rw vpn\n         |      +--rw vpn-id    leafref\n         |\
    \      +--rw site-role?  identityref\n         +--rw site-vpn-flavor?     identityref\n\
    \         +--rw maximum-routes\n         | +--rw address-family* [af]\n      \
    \   |   +--rw af        address-family\n         |   +--rw maximum-routes?  uint32\n\
    \         +--rw security\n         | +--rw authentication\n         | +--rw encryption\
    \ {encryption}?\n         |   +--rw enabled?       boolean\n         |   +--rw\
    \ layer         enumeration\n         |   +--rw encryption-profile\n         |\
    \    +--rw (profile)?\n         |      +--:(provider-profile)\n         |    \
    \  | +--rw profile-name?  string\n         |      +--:(customer-profile)\n   \
    \      |       +--rw algorithm?    string\n         |       +--rw (key-type)?\n\
    \         |         +--:(psk)\n         |         | +--rw preshared-key?  string\n\
    \         |         +--:(pki)\n         +--rw service\n         | +--rw qos {qos}?\n\
    \         | | +--rw qos-classification-policy\n         | | | +--rw rule* [id]\n\
    \         | | |   +--rw id          uint16\n         | | |   +--rw (match-type)?\n\
    \         | | |   | +--:(match-flow)\n         | | |   | | +--rw match-flow\n\
    \         | | |   | |   +--rw dscp?        inet:dscp\n         | | |   | |   +--rw\
    \ dot1p?        uint8\n         | | |   | |   +--rw ipv4-src-prefix?   inet:ipv4-prefix\n\
    \         | | |   | |   +--rw ipv6-src-prefix?   inet:ipv6-prefix\n         |\
    \ | |   | |   +--rw ipv4-dst-prefix?   inet:ipv4-prefix\n         | | |   | |\
    \   +--rw ipv6-dst-prefix?   inet:ipv6-prefix\n         | | |   | |   +--rw l4-src-port?\
    \     inet:port-number\n         | | |   | |   +--rw target-sites*    svc-id\n\
    \         | | |   | |   +--rw l4-src-port-range\n         | | |   | |   | +--rw\
    \ lower-port?  inet:port-number\n         | | |   | |   | +--rw upper-port?  inet:port-number\n\
    \         | | |   | |   +--rw l4-dst-port?     inet:port-number\n         | |\
    \ |   | |   +--rw l4-dst-port-range\n         | | |   | |   | +--rw lower-port?\
    \  inet:port-number\n         | | |   | |   | +--rw upper-port?  inet:port-number\n\
    \         | | |   | |   +--rw protocol-field?   union\n         | | |   | +--:(match-application)\n\
    \         | | |   |   +--rw match-application?  identityref\n         | | |  \
    \ +--rw target-class-id?   string\n         | | +--rw qos-profile\n         |\
    \ |   +--rw (qos-profile)?\n         | |    +--:(standard)\n         | |    |\
    \ +--rw profile?  string\n         | |    +--:(custom)\n         | |      +--rw\
    \ classes {qos-custom}?\n         | |       +--rw class* [class-id]\n        \
    \ | |         +--rw class-id   string\n         | |         +--rw rate-limit?\
    \  uint8\n         | |         +--rw latency\n         | |         | +--rw (flavor)?\n\
    \         | |         |    ...\n         | |         +--rw jitter\n         |\
    \ |         | +--rw (flavor)?\n         | |         |    ...\n         | |   \
    \      +--rw bandwidth\n         | |          +--rw guaranteed-bw-percent?  uint8\n\
    \         | |          +--rw end-to-end?       empty\n         | +--rw carrierscarrier\
    \ {carrierscarrier}?\n         | | +--rw signalling-type?  enumeration\n     \
    \    | +--rw multicast {multicast}?\n         |   +--rw multicast-site-type? \
    \   enumeration\n         |   +--rw multicast-address-family\n         |   | +--rw\
    \ ipv4?  boolean {ipv4}?\n         |   | +--rw ipv6?  boolean {ipv6}?\n      \
    \   |   +--rw protocol-type?       enumeration\n         +--rw traffic-protection\
    \ {fast-reroute}?\n         | +--rw enabled?  boolean\n         +--rw routing-protocols\n\
    \         | +--rw routing-protocol* [type]\n         |   +--rw type   identityref\n\
    \         |   +--rw ospf {rtg-ospf}?\n         |   | +--rw address-family*  address-family\n\
    \         |   | +--rw area-address?   yang:dotted-quad\n         |   | +--rw metric?\
    \      uint16\n         |   | +--rw sham-links {rtg-ospf-sham-link}?\n       \
    \  |   |   +--rw sham-link* [target-site]\n         |   |    +--rw target-site\
    \  svc-id\n         |   |    +--rw metric?    uint16\n         |   +--rw bgp {rtg-bgp}?\n\
    \         |   | +--rw autonomous-system?  uint32\n         |   | +--rw address-family*\
    \   address-family\n         |   +--rw static\n         |   | +--rw cascaded-lan-prefixes\n\
    \         |   |   +--rw ipv4-lan-prefixes* [lan next-hop] {ipv4}?\n         |\
    \   |   | +--rw lan     inet:ipv4-prefix\n         |   |   | +--rw lan-tag?  string\n\
    \         |   |   | +--rw next-hop  inet:ipv4-address\n         |   |   +--rw\
    \ ipv6-lan-prefixes* [lan next-hop] {ipv6}?\n         |   |    +--rw lan     inet:ipv6-prefix\n\
    \         |   |    +--rw lan-tag?  string\n         |   |    +--rw next-hop  inet:ipv6-address\n\
    \         |   +--rw rip {rtg-rip}?\n         |   | +--rw address-family*  address-family\n\
    \         |   +--rw vrrp {rtg-vrrp}?\n         |    +--rw address-family*  address-family\n\
    \         +--ro actual-site-start?    yang:date-and-time\n         +--ro actual-site-stop?\
    \    yang:date-and-time\n         +--rw site-network-accesses\n           +--rw\
    \ site-network-access* [site-network-access-id]\n            +--rw site-network-access-id\
    \   svc-id\n            +--rw site-network-access-type?  identityref\n       \
    \     +--rw (location-flavor)\n            | +--:(location)\n            | | +--rw\
    \ location-reference?     leafref\n            | +--:(device)\n            | \
    \  +--rw device-reference?      leafref\n            +--rw access-diversity {site-diversity}?\n\
    \            | +--rw groups\n            | | +--rw group* [group-id]\n       \
    \     | |   +--rw group-id  string\n            | +--rw constraints\n        \
    \    |   +--rw constraint* [constraint-type]\n            |    +--rw constraint-type\
    \  identityref\n            |    +--rw target\n            |      +--rw (target-flavor)?\n\
    \            |       +--:(id)\n            |       | +--rw group* [group-id]\n\
    \            |       |    ...\n            |       +--:(all-accesses)\n      \
    \      |       | +--rw all-other-accesses?  empty\n            |       +--:(all-groups)\n\
    \            |         +--rw all-other-groups?   empty\n            +--rw bearer\n\
    \            | +--rw requested-type {requested-type}?\n            | | +--rw requested-type?\
    \  string\n            | | +--rw strict?      boolean\n            | +--rw always-on?\
    \     boolean {always-on}?\n            | +--rw bearer-reference?  string {bearer-reference}?\n\
    \            +--rw ip-connection\n            | +--rw ipv4 {ipv4}?\n         \
    \   | | +--rw address-allocation-type?   identityref\n            | | +--rw number-of-dynamic-address?\
    \  uint8\n            | | +--rw dhcp-relay\n            | | | +--rw customer-dhcp-servers\n\
    \            | | |   +--rw server-ip-address*  inet:ipv4-address\n           \
    \ | | +--rw addresses\n            | |   +--rw provider-address?  inet:ipv4-address\n\
    \            | |   +--rw customer-address?  inet:ipv4-address\n            | |\
    \   +--rw mask?        uint8\n            | +--rw ipv6 {ipv6}?\n            |\
    \ | +--rw address-allocation-type?   identityref\n            | | +--rw number-of-dynamic-address?\
    \  uint8\n            | | +--rw dhcp-relay\n            | | | +--rw customer-dhcp-servers\n\
    \            | | |   +--rw server-ip-address*  inet:ipv6-address\n           \
    \ | | +--rw addresses\n            | |   +--rw provider-address?  inet:ipv6-address\n\
    \            | |   +--rw customer-address?  inet:ipv6-address\n            | |\
    \   +--rw mask?        uint8\n            | +--rw oam\n            |   +--rw bfd\
    \ {bfd}?\n            |    +--rw enabled?    boolean\n            |    +--rw (holdtime)?\n\
    \            |      +--:(profile)\n            |      | +--rw profile-name?  string\n\
    \            |      +--:(fixed)\n            |       +--rw fixed-value?  uint32\n\
    \            +--rw security\n            | +--rw authentication\n            |\
    \ +--rw encryption {encryption}?\n            |   +--rw enabled?       boolean\n\
    \            |   +--rw layer         enumeration\n            |   +--rw encryption-profile\n\
    \            |    +--rw (profile)?\n            |      +--:(provider-profile)\n\
    \            |      | +--rw profile-name?  string\n            |      +--:(customer-profile)\n\
    \            |       +--rw algorithm?    string\n            |       +--rw (key-type)?\n\
    \            |         +--:(psk)\n            |         |   ...\n            |\
    \         +--:(pki)\n            +--rw service\n            | +--rw svc-input-bandwidth?\
    \  uint32\n            | +--rw svc-output-bandwidth?  uint32\n            | +--rw\
    \ svc-mtu?        uint16\n            | +--rw qos {qos}?\n            | | +--rw\
    \ qos-classification-policy\n            | | | +--rw rule* [id]\n            |\
    \ | |   +--rw id          uint16\n            | | |   +--rw (match-type)?\n  \
    \          | | |   | +--:(match-flow)\n            | | |   | | +--rw match-flow\n\
    \            | | |   | |    ...\n            | | |   | +--:(match-application)\n\
    \            | | |   |   +--rw match-application?  identityref\n            |\
    \ | |   +--rw target-class-id?   string\n            | | +--rw qos-profile\n \
    \           | |   +--rw (qos-profile)?\n            | |    +--:(standard)\n  \
    \          | |    | +--rw profile?  string\n            | |    +--:(custom)\n\
    \            | |      +--rw classes {qos-custom}?\n            | |       +--rw\
    \ class* [class-id]\n            | |          ...\n            | +--rw carrierscarrier\
    \ {carrierscarrier}?\n            | | +--rw signalling-type?  enumeration\n  \
    \          | +--rw multicast {multicast}?\n            |   +--rw multicast-site-type?\
    \    enumeration\n            |   +--rw multicast-address-family\n           \
    \ |   | +--rw ipv4?  boolean {ipv4}?\n            |   | +--rw ipv6?  boolean {ipv6}?\n\
    \            |   +--rw protocol-type?       enumeration\n            +--rw routing-protocols\n\
    \            | +--rw routing-protocol* [type]\n            |   +--rw type   identityref\n\
    \            |   +--rw ospf {rtg-ospf}?\n            |   | +--rw address-family*\
    \  address-family\n            |   | +--rw area-address?   yang:dotted-quad\n\
    \            |   | +--rw metric?      uint16\n            |   | +--rw sham-links\
    \ {rtg-ospf-sham-link}?\n            |   |   +--rw sham-link* [target-site]\n\
    \            |   |    +--rw target-site  svc-id\n            |   |    +--rw metric?\
    \    uint16\n            |   +--rw bgp {rtg-bgp}?\n            |   | +--rw autonomous-system?\
    \  uint32\n            |   | +--rw address-family*   address-family\n        \
    \    |   +--rw static\n            |   | +--rw cascaded-lan-prefixes\n       \
    \     |   |   +--rw ipv4-lan-prefixes* [lan next-hop] {ipv4}?\n            | \
    \  |   | +--rw lan     inet:ipv4-prefix\n            |   |   | +--rw lan-tag?\
    \  string\n            |   |   | +--rw next-hop  inet:ipv4-address\n         \
    \   |   |   +--rw ipv6-lan-prefixes* [lan next-hop] {ipv6}?\n            |   |\
    \    +--rw lan     inet:ipv6-prefix\n            |   |    +--rw lan-tag?  string\n\
    \            |   |    +--rw next-hop  inet:ipv6-address\n            |   +--rw\
    \ rip {rtg-rip}?\n            |   | +--rw address-family*  address-family\n  \
    \          |   +--rw vrrp {rtg-vrrp}?\n            |    +--rw address-family*\
    \  address-family\n            +--rw availability\n            | +--rw access-priority?\
    \  uint32\n            +--rw vpn-attachment\n              +--rw (attachment-flavor)\n\
    \               +--:(vpn-policy-id)\n               | +--rw vpn-policy-id?  leafref\n\
    \               +--:(vpn-id)\n                 +--rw vpn-id?     leafref\n   \
    \              +--rw site-role?    identityref\n"
- title: 6.1.  Features and Augmentation
  contents:
  - "6.1.  Features and Augmentation\n   The model defined in this document implements\
    \ many features that\n   allow implementations to be modular.  As an example,\
    \ an\n   implementation may support only IPv4 VPNs (IPv4 feature), IPv6 VPNs\n\
    \   (IPv6 feature), or both (by advertising both features).  The routing\n   protocols\
    \ proposed to the customer may also be enabled through\n   features.  This model\
    \ also proposes some features for options that\n   are more advanced, such as\
    \ support for extranet VPNs (Section 6.2.4),\n   site diversity (Section 6.6),\
    \ and QoS (Section 6.12.2).\n   In addition, as for any YANG model, this service\
    \ model can be\n   augmented to implement new behaviors or specific features.\
    \  For\n   example, this model proposes different options for IP address\n   assignments;\
    \ if those options do not fulfill all requirements, new\n   options can be added\
    \ through augmentation.\n"
- title: 6.2.  VPN Service Overview
  contents:
  - "6.2.  VPN Service Overview\n   A vpn-service list item contains generic information\
    \ about the VPN\n   service.  The \"vpn-id\" provided in the vpn-service list\
    \ refers to an\n   internal reference for this VPN service, while the customer\
    \ name\n   refers to a more-explicit reference to the customer.  This identifier\n\
    \   is purely internal to the organization responsible for the VPN\n   service.\n"
- title: 6.2.1.  VPN Service Topology
  contents:
  - "6.2.1.  VPN Service Topology\n   The type of VPN service topology is required\
    \ for configuration.  Our\n   proposed model supports any-to-any, Hub and Spoke\
    \ (where Hubs can\n   exchange traffic), and \"Hub and Spoke disjoint\" (where\
    \ Hubs cannot\n   exchange traffic).  New topologies could be added via augmentation.\n\
    \   By default, the any-to-any VPN service topology is used.\n"
- title: 6.2.1.1.  Route Target Allocation
  contents:
  - "6.2.1.1.  Route Target Allocation\n   A Layer 3 PE-based VPN is built using route\
    \ targets (RTs) as\n   described in [RFC4364].  The management system is expected\
    \ to\n   automatically allocate a set of RTs upon receiving a VPN service\n  \
    \ creation request.  How the management system allocates RTs is out of\n   scope\
    \ for this document, but multiple ways could be envisaged, as\n   described below.\n\
    \                                    Management system\n                     <------------------------------------------------->\n\
    \                                                 Request RT\n               \
    \       +-----------------------+  Topo a2a   +----------+\n           RESTCONF\
    \   |                       |  ----->     |          |\n   User -------------\
    \ | Service Orchestration |             | Network  |\n           l3vpn-svc  |\
    \                       |  <-----     |   OSS    |\n             Model    +-----------------------+\
    \   Response  +----------+\n                                                 \
    \ RT1, RT2\n   In the example above, a service orchestration, owning the\n   instantiation\
    \ of this service model, requests RTs to the network OSS.\n   Based on the requested\
    \ VPN service topology, the network OSS replies\n   with one or multiple RTs.\
    \  The interface between this service\n   orchestration and the network OSS is\
    \ out of scope for this document.\n                              +---------------------------+\n\
    \                   RESTCONF   |                           |\n           User\
    \ ------------- |   Service Orchestration   |\n                   l3vpn-svc  |\
    \                           |\n                     Model    |               \
    \            |\n                              |  RT pool: 10:1->10:10000  |\n\
    \                              |  RT pool: 20:50->20:5000  |\n               \
    \               +---------------------------+\n   In the example above, a service\
    \ orchestration, owning the\n   instantiation of this service model, owns one\
    \ or more pools of RTs\n   (specified by the SP) that can be allocated.  Based\
    \ on the requested\n   VPN service topology, it will allocate one or multiple\
    \ RTs from the\n   pool.\n   The mechanisms shown above are just examples and\
    \ should not be\n   considered an exhaustive list of solutions.\n"
- title: 6.2.1.2.  Any-to-Any
  contents:
  - "6.2.1.2.  Any-to-Any\n     +------------------------------------------------------------+\n\
    \     |  VPN1_Site1 ------ PE1               PE2 ------ VPN1_Site2 |\n     | \
    \                                                           |\n     |  VPN1_Site3\
    \ ------ PE3               PE4 ------ VPN1_Site4 |\n     +------------------------------------------------------------+\n\
    \                     Any-to-Any VPN Service Topology\n   In the any-to-any VPN\
    \ service topology, all VPN sites can communicate\n   with each other without\
    \ any restrictions.  The management system that\n   receives an any-to-any IP\
    \ VPN service request through this model is\n   expected to assign and then configure\
    \ the VRF and RTs on the\n   appropriate PEs.  In the any-to-any case, a single\
    \ RT is generally\n   required, and every VRF imports and exports this RT.\n"
- title: 6.2.1.3.  Hub and Spoke
  contents:
  - "6.2.1.3.  Hub and Spoke\n     +-------------------------------------------------------------+\n\
    \     |   Hub_Site1 ------ PE1               PE2 ------ Spoke_Site1 |\n     |\
    \                          +----------------------------------+\n     |      \
    \                    |\n     |                          +----------------------------------+\n\
    \     |   Hub_Site2 ------ PE3               PE4 ------ Spoke_Site2 |\n     +-------------------------------------------------------------+\n\
    \                     Hub-and-Spoke VPN Service Topology\n   In the Hub-and-Spoke\
    \ VPN service topology, all Spoke sites can\n   communicate only with Hub sites\
    \ but not with each other, and Hubs can\n   also communicate with each other.\
    \  The management system that owns an\n   any-to-any IP VPN service request through\
    \ this model is expected to\n   assign and then configure the VRF and RTs on the\
    \ appropriate PEs.  In\n   the Hub-and-Spoke case, two RTs are generally required\
    \ (one RT for\n   Hub routes and one RT for Spoke routes).  A Hub VRF that connects\
    \ Hub\n   sites will export Hub routes with the Hub RT and will import Spoke\n\
    \   routes through the Spoke RT.  It will also import the Hub RT to allow\n  \
    \ Hub-to-Hub communication.  A Spoke VRF that connects Spoke sites will\n   export\
    \ Spoke routes with the Spoke RT and will import Hub routes\n   through the Hub\
    \ RT.\n   The management system MUST take into account constraints on Hub-and-\n\
    \   Spoke connections.  For example, if a management system decides to\n   mesh\
    \ a Spoke site and a Hub site on the same PE, it needs to mesh\n   connections\
    \ in different VRFs, as shown in the figure below.\n      Hub_Site ------- (VRF_Hub)\
    \  PE1\n                                 (VRF_Spoke)\n                       \
    \            /  |\n   Spoke_Site1 -------------------+   |\n                 \
    \                     |\n   Spoke_Site2 -----------------------+\n"
- title: 6.2.1.4.  Hub and Spoke Disjoint
  contents:
  - "6.2.1.4.  Hub and Spoke Disjoint\n     +-------------------------------------------------------------+\n\
    \     |   Hub_Site1 ------ PE1               PE2 ------ Spoke_Site1 |\n     +--------------------------+\
    \  +-------------------------------+\n                                |  |\n \
    \    +--------------------------+  +-------------------------------+\n     | \
    \  Hub_Site2 ------ PE3               PE4 ------ Spoke_Site2 |\n     +-------------------------------------------------------------+\n\
    \               Hub and Spoke Disjoint VPN Service Topology\n   In the Hub and\
    \ Spoke disjoint VPN service topology, all Spoke sites\n   can communicate only\
    \ with Hub sites but not with each other, and Hubs\n   cannot communicate with\
    \ each other.  The management system that owns\n   an any-to-any IP VPN service\
    \ request through this model is expected\n   to assign and then configure the\
    \ VRF and RTs on the appropriate PEs.\n   In the Hub-and-Spoke case, two RTs are\
    \ required (one RT for Hub\n   routes and one RT for Spoke routes).  A Hub VRF\
    \ that connects Hub\n   sites will export Hub routes with the Hub RT and will\
    \ import Spoke\n   routes through the Spoke RT.  A Spoke VRF that connects Spoke\
    \ sites\n   will export Spoke routes with the Spoke RT and will import Hub routes\n\
    \   through the Hub RT.\n   The management system MUST take into account constraints\
    \ on Hub-and-\n   Spoke connections, as in the previous case.\n   Hub and Spoke\
    \ disjoint can also be seen as multiple Hub-and-Spoke\n   VPNs (one per Hub) that\
    \ share a common set of Spoke sites.\n"
- title: 6.2.2.  Cloud Access
  contents:
  - "6.2.2.  Cloud Access\n   The proposed model provides cloud access configuration\
    \ via the\n   \"cloud-accesses\" container.  The usage of cloud-access is targeted\n\
    \   for the public cloud.  An Internet access can also be considered a\n   public\
    \ cloud access service.  The cloud-accesses container provides\n   parameters\
    \ for network address translation and authorization rules.\n   A private cloud\
    \ access may be addressed through NNIs, as described in\n   Section 6.15.\n  \
    \ A cloud identifier is used to reference the target service.  This\n   identifier\
    \ is local to each administration.\n   The model allows for source address translation\
    \ before accessing the\n   cloud.  IPv4-to-IPv4 address translation (NAT44) is\
    \ the only\n   supported option, but other options can be added through\n   augmentation.\
    \  If IP source address translation is required to access\n   the cloud, the \"\
    enabled\" leaf MUST be set to true in the \"nat44\"\n   container.  An IP address\
    \ may be provided in the \"customer-address\"\n   leaf if the customer is providing\
    \ the IP address to be used for the\n   cloud access.  If the SP is providing\
    \ this address,\n   \"customer-address\" is not necessary, as it can be picked\
    \ from a pool\n   of SPs.\n   By default, all sites in the IP VPN MUST be authorized\
    \ to access the\n   cloud.  If restrictions are required, a user MAY configure\
    \ the\n   \"permit-site\" or \"deny-site\" leaf-list.  The permit-site leaf-list\n\
    \   defines the list of sites authorized for cloud access.  The deny-site\n  \
    \ leaf-list defines the list of sites denied for cloud access.  The\n   model\
    \ supports both \"deny-any-except\" and \"permit-any-except\"\n   authorization.\n\
    \   How the restrictions will be configured on network elements is out of\n  \
    \ scope for this document.\n                     IP VPN\n           ++++++++++++++++++++++++++++++++\
    \     ++++++++++++\n           +             Site 3           + --- +  Cloud 1\
    \ +\n           + Site 1                       +     ++++++++++++\n          \
    \ +                              +\n           + Site 2                      \
    \ + --- ++++++++++++\n           +                              +     + Internet\
    \ +\n           +            Site 4            +     ++++++++++++\n          \
    \ ++++++++++++++++++++++++++++++++\n                        |\n              \
    \     +++++++++++\n                   + Cloud 2 +\n                   +++++++++++\n\
    \   In the example above, we configure the global VPN to access the\n   Internet\
    \ by creating a cloud-access pointing to the cloud identifier\n   for the Internet\
    \ service.  No authorized sites will be configured, as\n   all sites are required\
    \ to access the Internet.  The\n   \"address-translation/nat44/enabled\" leaf\
    \ will be set to true.\n   <vpn-service>\n       <vpn-id>123456487</vpn-id>\n\
    \       <cloud-accesses>\n        <cloud-access>\n           <cloud-identifier>INTERNET</cloud-identifier>\n\
    \           <address-translation>\n             <nat44>\n               <enabled>true</enabled>\n\
    \             </nat44>\n           </address-translation>\n        </cloud-access>\n\
    \       </cloud-accesses>\n   </vpn-service>\n   If Site 1 and Site 2 require\
    \ access to Cloud 1, a new cloud-access\n   pointing to the cloud identifier of\
    \ Cloud 1 will be created.  The\n   permit-site leaf-list will be filled with\
    \ a reference to Site 1 and\n   Site 2.\n   <vpn-service>\n       <vpn-id>123456487</vpn-id>\n\
    \       <cloud-accesses>\n        <cloud-access>\n           <cloud-identifier>Cloud1</cloud-identifier>\n\
    \           <permit-site>site1</permit-site>\n           <permit-site>site2</permit-site>\n\
    \        </cloud-access>\n       </cloud-accesses>\n   </vpn-service>\n   If all\
    \ sites except Site 1 require access to Cloud 2, a new\n   cloud-access pointing\
    \ to the cloud identifier of Cloud 2 will be\n   created.  The deny-site leaf-list\
    \ will be filled with a reference to\n   Site 1.\n   <vpn-service>\n       <vpn-id>123456487</vpn-id>\n\
    \       <cloud-accesses>\n        <cloud-access>\n           <cloud-identifier>Cloud2</cloud-identifier>\n\
    \           <deny-site>site1</deny-site>\n        </cloud-access>\n       </cloud-accesses>\n\
    \   </vpn-service>\n"
- title: 6.2.3.  Multicast Service
  contents:
  - "6.2.3.  Multicast Service\n   Multicast in IP VPNs is described in [RFC6513].\n\
    \   If multicast support is required for an IP VPN, some global multicast\n  \
    \ parameters are required as input for the service request.\n   Users of this\
    \ model will need to provide the flavors of trees that\n   will be used by customers\
    \ within the IP VPN (customer tree).  The\n   proposed model supports bidirectional,\
    \ shared, and source-based trees\n   (and can be augmented).  Multiple flavors\
    \ of trees can be supported\n   simultaneously.\n                            \
    \       Operator network\n                                   ______________\n\
    \                                  /               \\\n                      \
    \           |                 |\n                          (SSM tree)        \
    \       |\n    Recv (IGMPv3) -- Site2 ------- PE2             |\n            \
    \                     |             PE1 --- Site1 --- Source1\n              \
    \                   |                 |        \\\n                          \
    \       |                 |         -- Source2\n                             \
    \    |                 |\n                           (ASM tree)              |\n\
    \    Recv (IGMPv2) -- Site3 ------- PE3             |\n                      \
    \           |                 |\n                           (SSM tree)       \
    \       |\n    Recv (IGMPv3) -- Site4 ------- PE4             |\n            \
    \                     | /               |\n    Recv (IGMPv2) -- Site5 --------\
    \                |\n                           (ASM tree)              |\n   \
    \                              |                 |\n                         \
    \         \\_______________/\n   When an ASM flavor is requested, this model requires\
    \ that the \"rp\"\n   and \"rp-discovery\" parameters be filled.  Multiple RP-to-group\n\
    \   mappings can be created using the \"rp-group-mappings\" container.  For\n\
    \   each mapping, the SP can manage the RP service by setting the\n   \"provider-managed/enabled\"\
    \ leaf to true.  In the case of a provider-\n   managed RP, the user can request\
    \ RP redundancy and/or optimal traffic\n   delivery.  Those parameters will help\
    \ the SP select the appropriate\n   technology or architecture to fulfill the\
    \ customer service\n   requirement: for instance, in the case of a request for\
    \ optimal\n   traffic delivery, an SP may use Anycast-RP or RP-tree-to-SPT\n \
    \  switchover architectures.\n   In the case of a customer-managed RP, the RP\
    \ address must be filled\n   in the RP-to-group mappings using the \"rp-address\"\
    \ leaf.  This leaf\n   is not needed for a provider-managed RP.\n   Users can\
    \ define a specific mechanism for RP discovery, such as the\n   \"auto-rp\", \"\
    static-rp\", or \"bsr-rp\" modes.  By default, the model\n   uses \"static-rp\"\
    \ if ASM is requested.  A single rp-discovery\n   mechanism is allowed for the\
    \ VPN.  The \"rp-discovery\" container can\n   be used for both provider-managed\
    \ and customer-managed RPs.  In the\n   case of a provider-managed RP, if the\
    \ user wants to use \"bsr-rp\" as a\n   discovery protocol, an SP should consider\
    \ the provider-managed\n   \"rp-group-mappings\" for the \"bsr-rp\" configuration.\
    \  The SP will then\n   configure its selected RPs to be \"bsr-rp-candidates\"\
    .  In the case of\n   a customer-managed RP and a \"bsr-rp\" discovery mechanism,\
    \ the\n   \"rp-address\" provided will be the bsr-rp candidate.\n"
- title: 6.2.4.  Extranet VPNs
  contents:
  - "6.2.4.  Extranet VPNs\n   There are some cases where a particular VPN needs access\
    \ to resources\n   (servers, hosts, etc.) that are external.  Those resources\
    \ may be\n   located in another VPN.\n                 +-----------+         \
    \  +-----------+\n                /             \\         /             \\\n\
    \     Site A -- |    VPN A      |  ---  |    VPN B      | --- Site B\n       \
    \         \\             /         \\             / (Shared\n                \
    \ +-----------+           +-----------+   resources)\n   In the figure above,\
    \ VPN B has some resources on Site B that need to\n   be available to some customers/partners.\
    \  VPN A must be able to\n   access those VPN B resources.\n   Such a VPN connection\
    \ scenario can be achieved via a VPN policy as\n   defined in Section 6.5.2.2.\
    \  But there are some simple cases where a\n   particular VPN (VPN A) needs access\
    \ to all resources in another VPN\n   (VPN B).  The model provides an easy way\
    \ to set up this connection\n   using the \"extranet-vpns\" container.\n   The\
    \ extranet-vpns container defines a list of VPNs a particular VPN\n   wants to\
    \ access.  The extranet-vpns container must be used on\n   customer VPNs accessing\
    \ extranet resources in another VPN.  In the\n   figure above, in order to provide\
    \ VPN A with access to VPN B, the\n   extranet-vpns container needs to be configured\
    \ under VPN A with an\n   entry corresponding to VPN B.  There is no service configuration\n\
    \   requirement on VPN B.\n   Readers should note that even if there is no configuration\n\
    \   requirement on VPN B, if VPN A lists VPN B as an extranet, all sites\n   in\
    \ VPN B will gain access to all sites in VPN A.\n   The \"site-role\" leaf defines\
    \ the role of the local VPN sites in the\n   target extranet VPN service topology.\
    \  Site roles are defined in\n   Section 6.4.  Based on this, the requirements\
    \ described in\n   Section 6.4 regarding the site-role leaf are also applicable\
    \ here.\n   In the example below, VPN A accesses VPN B resources through an\n\
    \   extranet connection.  A Spoke role is required for VPN A sites, as\n   sites\
    \ from VPN A must not be able to communicate with each other\n   through the extranet\
    \ VPN connection.\n   <vpn-service>\n       <vpn-id>VPNB</vpn-id>\n       <vpn-service-topology>hub-spoke</vpn-service-topology>\n\
    \   </vpn-service>\n   <vpn-service>\n       <vpn-id>VPNA</vpn-id>\n       <vpn-service-topology>any-to-any</vpn-service-topology>\n\
    \       <extranet-vpns>\n           <extranet-vpn>\n               <vpn-id>VPNB</vpn-id>\n\
    \               <site-role>spoke-role</site-role>\n           </extranet-vpn>\n\
    \       </extranet-vpns>\n   </vpn-service>\n   This model does not define how\
    \ the extranet configuration will be\n   achieved.\n   Any VPN interconnection\
    \ scenario that is more complex (e.g., only\n   certain parts of sites on VPN\
    \ A accessing only certain parts of sites\n   on VPN B) needs to be achieved using\
    \ a VPN attachment as defined in\n   Section 6.5.2, and especially a VPN policy\
    \ as defined in\n   Section 6.5.2.2.\n"
- title: 6.3.  Site Overview
  contents:
  - "6.3.  Site Overview\n   A site represents a connection of a customer office to\
    \ one or more\n   VPN services.\n                                            \
    \        +-------------+\n                                                   /\
    \               \\\n     +------------------+                   +-----|      VPN1\
    \       |\n     |                  |                   |      \\             \
    \  /\n     |  New York Office |------ (site) -----+       +-------------+\n  \
    \   |                  |                   |       +-------------+\n     +------------------+\
    \                   |      /               \\\n                              \
    \              +-----|      VPN2       |\n                                   \
    \                \\               /\n                                        \
    \            +-------------+\n   A site has several characteristics:\n   o  Unique\
    \ identifier (site-id): uniquely identifies the site within\n      the overall\
    \ network infrastructure.  The identifier is a string\n      that allows any encoding\
    \ for the local administration of the VPN\n      service.\n   o  Locations (locations):\
    \ site location information that allows easy\n      retrieval of information from\
    \ the nearest available resources.  A\n      site may be composed of multiple\
    \ locations.\n   o  Devices (devices): allows the customer to request one or more\n\
    \      customer premises equipment entities from the SP for a particular\n   \
    \   site.\n   o  Management (management): defines the type of management for the\n\
    \      site -- for example, co-managed, customer-managed, or provider-\n     \
    \ managed.  See Section 6.10.\n   o  Site network accesses (site-network-accesses):\
    \ defines the list of\n      network accesses associated with the sites, and their\
    \ properties\n      -- especially bearer, connection, and service parameters.\n\
    \   A site-network-access represents an IP logical connection of a site.\n   A\
    \ site may have multiple site-network-accesses.\n     +------------------+   \
    \          Site\n     |                  |-----------------------------------\n\
    \     |                  |****** (site-network-access#1) ******\n     |  New York\
    \ Office |\n     |                  |****** (site-network-access#2) ******\n \
    \    |                  |-----------------------------------\n     +------------------+\n\
    \   Multiple site-network-accesses are used, for instance, in the case of\n  \
    \ multihoming.  Some other meshing cases may also include multiple\n   site-network-accesses.\n\
    \   The site configuration is viewed as a global entity; we assume that\n   it\
    \ is mostly the management system's role to split the parameters\n   between the\
    \ different elements within the network.  For example, in\n   the case of the\
    \ site-network-access configuration, the management\n   system needs to split\
    \ the overall parameters between the PE\n   configuration and the CE configuration.\n"
- title: 6.3.1.  Devices and Locations
  contents:
  - "6.3.1.  Devices and Locations\n   A site may be composed of multiple locations.\
    \  All the locations will\n   need to be configured as part of the \"locations\"\
    \ container and list.\n   A typical example of a multi-location site is a headquarters\
    \ office\n   in a city composed of multiple buildings.  Those buildings may be\n\
    \   located in different parts of the city and may be linked by\n   intra-city\
    \ fibers (customer metropolitan area network).  In such a\n   case, when connecting\
    \ to a VPN service, the customer may ask for\n   multihoming based on its distributed\
    \ locations.\n       New York Site\n     +------------------+             Site\n\
    \     | +--------------+ |-----------------------------------\n     | | Manhattan\
    \    | |****** (site-network-access#1) ******\n     | +--------------+ |\n   \
    \  | +--------------+ |\n     | | Brooklyn     | |****** (site-network-access#2)\
    \ ******\n     | +--------------+ |\n     |                  |-----------------------------------\n\
    \     +------------------+\n   A customer may also request some premises equipment\
    \ entities (CEs)\n   from the SP via the \"devices\" container.  Requesting a\
    \ CE implies a\n   provider-managed or co-managed model.  A particular device\
    \ must be\n   ordered to a particular already-configured location.  This would\
    \ help\n   the SP send the device to the appropriate postal address.  In a\n \
    \  multi-location site, a customer may, for example, request a CE for\n   each\
    \ location on the site where multihoming must be implemented.  In\n   the figure\
    \ above, one device may be requested for the Manhattan\n   location and one other\
    \ for the Brooklyn location.\n   By using devices and locations, the user can\
    \ influence the\n   multihoming scenario he wants to implement: single CE, dual\
    \ CE, etc.\n"
- title: 6.3.2.  Site Network Accesses
  contents:
  - "6.3.2.  Site Network Accesses\n   As mentioned earlier, a site may be multihomed.\
    \  Each IP network\n   access for a site is defined in the \"site-network-accesses\"\
    \n   container.  The site-network-access parameter defines how the site is\n \
    \  connected on the network and is split into three main classes of\n   parameters:\n\
    \   o  bearer: defines requirements of the attachment (below Layer 3).\n   o \
    \ connection: defines Layer 3 protocol parameters of the attachment.\n   o  availability:\
    \ defines the site's availability policy.  The\n      availability parameters\
    \ are defined in Section 6.7.\n   The site-network-access has a specific type\n\
    \   (site-network-access-type).  This document defines two types:\n   o  point-to-point:\
    \ describes a point-to-point connection between the\n      SP and the customer.\n\
    \   o  multipoint: describes a multipoint connection between the SP and\n    \
    \  the customer.\n   The type of site-network-access may have an impact on the\
    \ parameters\n   offered to the customer, e.g., an SP may not offer encryption\
    \ for\n   multipoint accesses.  It is up to the provider to decide what\n   parameter\
    \ is supported for point-to-point and/or multipoint accesses;\n   this topic is\
    \ out of scope for this document.  Some containers\n   proposed in the model may\
    \ require extensions in order to work\n   properly for multipoint accesses.\n"
- title: 6.3.2.1.  Bearer
  contents:
  - "6.3.2.1.  Bearer\n   The bearer container defines the requirements for the site\
    \ attachment\n   to the provider network that are below Layer 3.\n   The bearer\
    \ parameters will help determine the access media to be\n   used.  This is further\
    \ described in Section 6.6.3.\n"
- title: 6.3.2.2.  Connection
  contents:
  - "6.3.2.2.  Connection\n   The \"ip-connection\" container defines the protocol\
    \ parameters of the\n   attachment (IPv4 and IPv6).  Depending on the management\
    \ mode, it\n   refers to PE-CE addressing or CE-to-customer-LAN addressing.  In\
    \ any\n   case, it describes the responsibility boundary between the provider\n\
    \   and the customer.  For a customer-managed site, it refers to the\n   PE-CE\
    \ connection.  For a provider-managed site, it refers to the\n   CE-to-LAN connection.\n"
- title: 6.3.2.2.1.  IP Addressing
  contents:
  - "6.3.2.2.1.  IP Addressing\n   An IP subnet can be configured for either IPv4\
    \ or IPv6 Layer 3\n   protocols.  For a dual-stack connection, two subnets will\
    \ be\n   provided, one for each address family.\n   The \"address-allocation-type\"\
    \ determines how the address allocation\n   needs to be done.  The current model\
    \ proposes five ways to perform IP\n   address allocation:\n   o  provider-dhcp:\
    \ The provider will provide DHCP service for customer\n      equipment; this is\
    \ applicable to either the \"IPv4\" container or\n      the \"IPv6\" container.\n\
    \   o  provider-dhcp-relay: The provider will provide DHCP relay service\n   \
    \   for customer equipment; this is applicable to both IPv4 and IPv6\n      addressing.\
    \  The customer needs to populate the DHCP server list\n      to be used.\n  \
    \ o  static-address: Addresses will be assigned manually; this is\n      applicable\
    \ to both IPv4 and IPv6 addressing.\n   o  slaac: This parameter enables stateless\
    \ address autoconfiguration\n      [RFC4862].  This is applicable to IPv6 only.\n\
    \   o  provider-dhcp-slaac: The provider will provide DHCP service for\n     \
    \ customer equipment, as well as stateless address\n      autoconfiguration. \
    \ This is applicable to IPv6 only.\n   In the dynamic addressing mechanism, the\
    \ SP is expected to provide at\n   least the IP address, mask, and default gateway\
    \ information.\n"
- title: 6.3.2.2.2.  OAM
  contents:
  - "6.3.2.2.2.  OAM\n   A customer may require a specific IP connectivity fault detection\n\
    \   mechanism on the IP connection.  The model supports BFD as a fault\n   detection\
    \ mechanism.  This can be extended with other mechanisms via\n   augmentation.\
    \  The provider can propose some profiles to the\n   customer, depending on the\
    \ service level the customer wants to\n   achieve.  Profile names must be communicated\
    \ to the customer.  This\n   communication is out of scope for this document.\
    \  Some fixed values\n   for the holdtime period may also be imposed by the customer\
    \ if the\n   provider allows the customer this function.\n   The \"oam\" container\
    \ can easily be augmented by other mechanisms; in\n   particular, work done by\
    \ the LIME Working Group\n   (https://datatracker.ietf.org/wg/lime/charter/) may\
    \ be reused in\n   applicable scenarios.\n"
- title: 6.3.2.3.  Inheritance of Parameters Defined at Site Level and Site
  contents:
  - "6.3.2.3.  Inheritance of Parameters Defined at Site Level and Site\n        \
    \  Network Access Level\n   Some parameters can be configured at both the site\
    \ level and the\n   site-network-access level, e.g., routing, services, security.\n\
    \   Inheritance applies when parameters are defined at the site level.\n   If\
    \ a parameter is configured at both the site level and the access\n   level, the\
    \ access-level parameter MUST override the site-level\n   parameter.  Those parameters\
    \ will be described later in this\n   document.\n   In terms of provisioning impact,\
    \ it will be up to the implementation\n   to decide on the appropriate behavior\
    \ when modifying existing\n   configurations.  But the SP will need to communicate\
    \ to the user\n   about the impact of using inheritance.  For example, if we consider\n\
    \   that a site has already provisioned three site-network-accesses, what\n  \
    \ will happen if a customer changes a service parameter at the site\n   level?\
    \  An implementation of this model may update the service\n   parameters of all\
    \ already-provisioned site-network-accesses (with\n   potential impact on live\
    \ traffic), or it may take into account this\n   new parameter only for the new\
    \ sites.\n"
- title: 6.4.  Site Role
  contents:
  - "6.4.  Site Role\n   A VPN has a particular service topology, as described in\n\
    \   Section 6.2.1.  As a consequence, each site belonging to a VPN is\n   assigned\
    \ with a particular role in this topology.  The site-role leaf\n   defines the\
    \ role of the site in a particular VPN topology.\n   In the any-to-any VPN service\
    \ topology, all sites MUST have the same\n   role, which will be \"any-to-any-role\"\
    .\n   In the Hub-and-Spoke VPN service topology or the Hub and Spoke\n   disjoint\
    \ VPN service topology, sites MUST have a Hub role or a\n   Spoke role.\n"
- title: 6.5.  Site Belonging to Multiple VPNs
  contents:
  - '6.5.  Site Belonging to Multiple VPNs

    '
- title: 6.5.1.  Site VPN Flavor
  contents:
  - "6.5.1.  Site VPN Flavor\n   A site may be part of one or multiple VPNs.  The\
    \ \"site-vpn-flavor\"\n   defines the way the VPN multiplexing is done.  The current\
    \ version of\n   the model supports four flavors:\n   o  site-vpn-flavor-single:\
    \ The site belongs to only one VPN.\n   o  site-vpn-flavor-multi: The site belongs\
    \ to multiple VPNs, and all\n      the logical accesses of the sites belong to\
    \ the same set of VPNs.\n   o  site-vpn-flavor-sub: The site belongs to multiple\
    \ VPNs with\n      multiple logical accesses.  Each logical access may map to\n\
    \      different VPNs (one or many).\n   o  site-vpn-flavor-nni: The site represents\
    \ an option A NNI.\n"
- title: '6.5.1.1.  Single VPN Attachment: site-vpn-flavor-single'
  contents:
  - "6.5.1.1.  Single VPN Attachment: site-vpn-flavor-single\n   The figure below\
    \ describes a single VPN attachment.  The site\n   connects to only one VPN.\n\
    \                                                      +--------+\n   +------------------+\
    \             Site             /          \\\n   |                  |-----------------------------|\
    \            |\n   |                  |***(site-network-access#1)***|    VPN1\
    \    |\n   |  New York Office |                             |            |\n \
    \  |                  |***(site-network-access#2)***|            |\n   |     \
    \             |-----------------------------|            |\n   +------------------+\
    \                              \\          /\n                               \
    \                       +--------+\n"
- title: '6.5.1.2.  MultiVPN Attachment: site-vpn-flavor-multi'
  contents:
  - "6.5.1.2.  MultiVPN Attachment: site-vpn-flavor-multi\n   The figure below describes\
    \ a site connected to multiple VPNs.\n                                       \
    \                    +---------+\n                                           \
    \           +---/----+      \\\n   +------------------+             Site     \
    \        /   |      \\      |\n   |                  |---------------------------------\
    \ |       |VPN B|\n   |                  |***(site-network-access#1)******* |\
    \       |     |\n   |  New York Office |                             |    |  \
    \     |     |\n   |                  |***(site-network-access#2)*******  \\  \
    \    |    /\n   |                  |-----------------------------| VPN A+-----|---+\n\
    \   +------------------+                              \\          /\n        \
    \                                              +--------+\n   In the example above,\
    \ the New York office is multihomed.  Both\n   logical accesses are using the\
    \ same VPN attachment rules, and both\n   are connected to VPN A and VPN B.\n\
    \   Reaching VPN A or VPN B from the New York office will be done via\n   destination-based\
    \ routing.  Having the same destination reachable\n   from the two VPNs may cause\
    \ routing troubles.  The customer\n   administration's role in this case would\
    \ be to ensure the appropriate\n   mapping of its prefixes in each VPN.\n"
- title: '6.5.1.3.  SubVPN Attachment: site-vpn-flavor-sub'
  contents:
  - "6.5.1.3.  SubVPN Attachment: site-vpn-flavor-sub\n   The figure below describes\
    \ a subVPN attachment.  The site connects to\n   multiple VPNs, but each logical\
    \ access is attached to a particular\n   set of VPNs.  A typical use case for\
    \ a subVPN is a customer site used\n   by multiple affiliates with private resources\
    \ for each affiliate that\n   cannot be shared (communication between the affiliates\
    \ is prevented).\n   It is similar to having separate sites, but in this case\
    \ the customer\n   wants to share some physical components while maintaining strong\n\
    \   communication isolation between the affiliates.  In this example,\n   site-network-access#1\
    \ is attached to VPN B, while\n   site-network-access#2 is attached to VPN A.\n\
    \   +------------------+         Site                      +--------+\n   |  \
    \                |----------------------------------/          \\\n   |      \
    \            |****(site-network-access#1)******|    VPN B   |\n   |  New York\
    \ Office |                                  \\          /\n   |              \
    \    |                                   +--------+\n   |                  | \
    \                                  +--------+\n   |                  |       \
    \                           /          \\\n   |                  |****(site-network-access#2)******|\
    \    VPN A   |\n   |                  |                                  \\  \
    \        /\n   |                  |                                   +--------+\n\
    \   |                  |-----------------------------------\n   +------------------+\n\
    \   A multiVPN can be implemented in addition to a subVPN; as a\n   consequence,\
    \ each site-network-access can access multiple VPNs.  In\n   the example below,\
    \ site-network-access#1 is mapped to VPN B and\n   VPN C, while site-network-access#2\
    \ is mapped to VPN A and VPN D.\n   +-----------------+         Site         \
    \           +------+\n   |                 |--------------------------------/\
    \       +-----+\n   |                 |****(site-network-access#1)****| VPN B\
    \ /       \\\n   | New York Office |                                \\     | \
    \ VPN C  |\n   |                 |                                 +-----\\  \
    \     /\n   |                 |                                        +-----+\n\
    \   |                 |\n   |                 |                              \
    \   +-------+\n   |                 |                                /       \
    \ +-----+\n   |                 |****(site-network-access#2)****| VPN A  /   \
    \    \\\n   |                 |                                \\      | VPN D\
    \   |\n   |                 |                                 +------\\      \
    \ /\n   |                 |---------------------------------        +-----+\n\
    \   +-----------------+\n   Multihoming is also possible with subVPNs; in this\
    \ case,\n   site-network-accesses are grouped, and a particular group will have\n\
    \   access to the same set of VPNs.  In the example below,\n   site-network-access#1\
    \ and site-network-access#2 are part of the same\n   group (multihomed together)\
    \ and are mapped to VPN B and VPN C; in\n   addition, site-network-access#3 and\
    \ site-network-access#4 are part of\n   the same group (multihomed together) and\
    \ are mapped to VPN A and\n   VPN D.\n   +-----------------+         Site    \
    \                 +------+\n   |                 |---------------------------------/\
    \       +-----+\n   |                 |****(site-network-access#1)*****| VPN B\
    \ /       \\\n   | New York Office |****(site-network-access#2)***** \\     |\
    \  VPN C  |\n   |                 |                                  +-----\\\
    \       /\n   |                 |                                         +-----+\n\
    \   |                 |\n   |                 |                              \
    \    +------+\n   |                 |                                 /      \
    \ +-----+\n   |                 |****(site-network-access#3)*****| VPN A /   \
    \    \\\n   |                 |****(site-network-access#4)***** \\     | VPN D\
    \   |\n   |                 |                                  +-----\\      \
    \ /\n   |                 |----------------------------------       +-----+\n\
    \   +-----------------+\n   In terms of service configuration, a subVPN can be\
    \ achieved by\n   requesting that the site-network-access use the same bearer\
    \ (see\n   Sections 6.6.4 and 6.6.6.4 for more details).\n"
- title: '6.5.1.4.  NNI: site-vpn-flavor-nni'
  contents:
  - "6.5.1.4.  NNI: site-vpn-flavor-nni\n   A Network-to-Network Interface (NNI) scenario\
    \ may be modeled using\n   the sites container (see Section 6.15.1).  Using the\
    \ sites container\n   to model an NNI is only one possible option for NNIs (see\n\
    \   Section 6.15).  This option is called \"option A\" by reference to the\n \
    \  option A NNI defined in [RFC4364].  It is helpful for the SP to\n   indicate\
    \ that the requested VPN connection is not a regular site but\n   rather is an\
    \ NNI, as specific default device configuration parameters\n   may be applied\
    \ in the case of NNIs (e.g., ACLs, routing policies).\n          SP A        \
    \                                     SP B\n     -------------------         \
    \                -------------------\n    /                   \\             \
    \          /                   \\\n   |                     |                \
    \     |                     |\n   |                 ++++++++ Inter-AS link ++++++++\
    \                 |\n   |                 +      +_______________+      +    \
    \             |\n   |                 +  (VRF1)---(VPN1)----(VRF1)  +        \
    \         |\n   |                 + ASBR +               + ASBR +            \
    \     |\n   |                 +  (VRF2)---(VPN2)----(VRF2)  +                \
    \ |\n   |                 +      +_______________+      +                 |\n\
    \   |                 ++++++++               ++++++++                 |\n   |\
    \                     |                     |                     |\n   |    \
    \                 |                     |                     |\n   |        \
    \             |                     |                     |\n   |            \
    \     ++++++++ Inter-AS link ++++++++                 |\n   |                \
    \ +      +_______________+      +                 |\n   |                 +  (VRF1)---(VPN1)----(VRF1)\
    \  +                 |\n   |                 + ASBR +               + ASBR + \
    \                |\n   |                 +  (VRF2)---(VPN2)----(VRF2)  +     \
    \            |\n   |                 +      +_______________+      +         \
    \        |\n   |                 ++++++++               ++++++++             \
    \    |\n   |                     |                     |                     |\n\
    \   |                     |                     |                     |\n    \\\
    \                   /                       \\                   /\n     -------------------\
    \                         -------------------\n   The figure above describes an\
    \ option A NNI scenario that can be\n   modeled using the sites container.  In\
    \ order to connect its customer\n   VPNs (VPN1 and VPN2) in SP B, SP A may request\
    \ the creation of some\n   site-network-accesses to SP B.  The site-vpn-flavor-nni\
    \ will be used\n   to inform SP B that this is an NNI and not a regular customer\
    \ site.\n   The site-vpn-flavor-nni may be multihomed and multiVPN as well.\n"
- title: 6.5.2.  Attaching a Site to a VPN
  contents:
  - "6.5.2.  Attaching a Site to a VPN\n   Due to the multiple site-vpn flavors, the\
    \ attachment of a site to an\n   IP VPN is done at the site-network-access (logical\
    \ access) level\n   through the \"vpn-attachment\" container.  The vpn-attachment\
    \ container\n   is mandatory.  The model provides two ways to attach a site to\
    \ a VPN:\n   o  By referencing the target VPN directly.\n   o  By referencing\
    \ a VPN policy for attachments that are more complex.\n   A choice is implemented\
    \ to allow the user to choose the flavor that\n   provides the best fit.\n"
- title: 6.5.2.1.  Referencing a VPN
  contents:
  - "6.5.2.1.  Referencing a VPN\n   Referencing a vpn-id provides an easy way to\
    \ attach a particular\n   logical access to a VPN.  This is the best way in the\
    \ case of a\n   single VPN attachment or subVPN with a single VPN attachment per\n\
    \   logical access.  When referencing a vpn-id, the site-role setting\n   must\
    \ be added to express the role of the site in the target VPN\n   service topology.\n\
    \   <site>\n    <site-id>SITE1</site-id>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <site-network-access-id>LA1</site-network-access-id>\n      <vpn-attachment>\n\
    \       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n    \
    \  </vpn-attachment>\n     </site-network-access>\n     <site-network-access>\n\
    \      <site-network-access-id>LA2</site-network-access-id>\n      <vpn-attachment>\n\
    \       <vpn-id>VPNB</vpn-id>\n       <site-role>spoke-role</site-role>\n    \
    \  </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   The example above describes a subVPN case where a site (SITE1)\
    \ has\n   two logical accesses (LA1 and LA2), with LA1 attached to VPNA and LA2\n\
    \   attached to VPNB.\n"
- title: 6.5.2.2.  VPN Policy
  contents:
  - "6.5.2.2.  VPN Policy\n   The \"vpn-policy\" list helps express a multiVPN scenario\
    \ where a\n   logical access belongs to multiple VPNs.  Multiple VPN policies\
    \ can\n   be created to handle the subVPN case where each logical access is\n\
    \   part of a different set of VPNs.\n   As a site can belong to multiple VPNs,\
    \ the vpn-policy list may be\n   composed of multiple entries.  A filter can be\
    \ applied to specify\n   that only some LANs of the site should be part of a particular\
    \ VPN.\n   Each time a site (or LAN) is attached to a VPN, the user must\n   precisely\
    \ describe its role (site-role) within the target VPN service\n   topology.\n\
    \   +--------------------------------------------------------------+\n   |   \
    \    Site1 ------ PE7                                       |\n   +-------------------------+\
    \                 [VPN2]             |\n                             |       \
    \                             |\n   +-------------------------+              \
    \                      |\n   |       Site2 ------ PE3               PE4 ------\
    \ Site3        |\n   +----------------------------------+                    \
    \       |\n                                      |                           |\n\
    \   +------------------------------------------------------------+ |\n   |   \
    \    Site4 ------ PE5           |   PE6 ------ Site5      | |\n   |          \
    \                                                  | |\n   |                 \
    \     [VPN3]                                | |\n   +------------------------------------------------------------+\
    \ |\n                                      |                           |\n   \
    \                                   +---------------------------+\n   In the example\
    \ above, Site5 is part of two VPNs: VPN3 and VPN2.  It\n   will play a Hub role\
    \ in VPN2 and an any-to-any role in VPN3.  We can\n   express such a multiVPN\
    \ scenario as follows:\n   <site>\n    <site-id>Site5</site-id>\n    <vpn-policies>\n\
    \     <vpn-policy>\n      <vpn-policy-id>POLICY1</vpn-policy-id>\n      <entries>\n\
    \       <id>ENTRY1</id>\n       <vpn>\n        <vpn-id>VPN2</vpn-id>\n       \
    \ <site-role>hub-role</site-role>\n       </vpn>\n      </entries>\n      <entries>\n\
    \       <id>ENTRY2</id>\n       <vpn>\n        <vpn-id>VPN3</vpn-id>\n       \
    \ <site-role>any-to-any-role</site-role>\n       </vpn>\n      </entries>\n  \
    \   </vpn-policy>\n    </vpn-policies>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <site-network-access-id>LA1</site-network-access-id>\n      <vpn-attachment>\n\
    \       <vpn-policy-id>POLICY1</vpn-policy-id>\n      </vpn-attachment>\n    \
    \ </site-network-access>\n    </site-network-accesses>\n   </site>\n   Now, if\
    \ a more-granular VPN attachment is necessary, filtering can be\n   used.  For\
    \ example, if LAN1 from Site5 must be attached to VPN2 as a\n   Hub and LAN2 must\
    \ be attached to VPN3, the following configuration\n   can be used:\n   <site>\n\
    \    <site-id>Site5</site-id>\n    <vpn-policies>\n     <vpn-policy>\n      <vpn-policy-id>POLICY1</vpn-policy-id>\n\
    \      <entries>\n       <id>ENTRY1</id>\n       <filter>\n        <lan-tag>LAN1</lan-tag>\n\
    \       </filter>\n       <vpn>\n        <vpn-id>VPN2</vpn-id>\n        <site-role>hub-role</site-role>\n\
    \       </vpn>\n      </entries>\n      <entries>\n       <id>ENTRY2</id>\n  \
    \     <filter>\n        <lan-tag>LAN2</lan-tag>\n       </filter>\n       <vpn>\n\
    \        <vpn-id>VPN3</vpn-id>\n        <site-role>any-to-any-role</site-role>\n\
    \       </vpn>\n      </entries>\n     </vpn-policy>\n    </vpn-policies>\n  \
    \  <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>LA1</site-network-access-id>\n\
    \      <vpn-attachment>\n       <vpn-policy-id>POLICY1</vpn-policy-id>\n     \
    \ </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n"
- title: 6.6.  Deciding Where to Connect the Site
  contents:
  - "6.6.  Deciding Where to Connect the Site\n   The management system will have\
    \ to determine where to connect each\n   site-network-access of a particular site\
    \ to the provider network\n   (e.g., PE, aggregation switch).\n   The current\
    \ model proposes parameters and constraints that can\n   influence the meshing\
    \ of the site-network-access.\n   The management system SHOULD honor any customer\
    \ constraints.  If a\n   constraint is too strict and cannot be fulfilled, the\
    \ management\n   system MUST NOT provision the site and SHOULD provide relevant\n\
    \   information to the user.  How the information is provided is out of\n   scope\
    \ for this document.  Whether or not to relax the constraint\n   would then be\
    \ left up to the user.\n   Parameters are just hints for the management system\
    \ for service\n   placement.\n   In addition to parameters and constraints, the\
    \ management system's\n   decision MAY be based on any other internal constraints\
    \ that are left\n   up to the SP: least load, distance, etc.\n"
- title: '6.6.1.  Constraint: Device'
  contents:
  - "6.6.1.  Constraint: Device\n   In the case of provider management or co-management,\
    \ one or more\n   devices have been ordered by the customer.  The customer may\
    \ force a\n   particular site-network-access to be connected on a particular device\n\
    \   that he ordered.\n       New York Site\n     +------------------+        \
    \     Site\n     | +--------------+ |-----------------------------------\n   \
    \  | | Manhattan    | |\n     | |           CE1********* (site-network-access#1)\
    \ ******\n     | +--------------+ |\n     | +--------------+ |\n     | | Brooklyn\
    \  CE2********* (site-network-access#2) ******\n     | +--------------+ |\n  \
    \   |                  |-----------------------------------\n     +------------------+\n\
    \   In the figure above, site-network-access#1 is associated with CE1 in\n   the\
    \ service request.  The SP must ensure the provisioning of this\n   connection.\n"
- title: '6.6.2.  Constraint/Parameter: Site Location'
  contents:
  - "6.6.2.  Constraint/Parameter: Site Location\n   The location information provided\
    \ in this model MAY be used by a\n   management system to determine the target\
    \ PE to mesh the site\n   (SP side).  A particular location must be associated\
    \ with each site\n   network access when configuring it.  The SP MUST honor the\n\
    \   termination of the access on the location associated with the site\n   network\
    \ access (customer side).  The \"country-code\" in the\n   site location SHOULD\
    \ be expressed as an ISO ALPHA-2 code.\n   The site-network-access location is\
    \ determined by the\n   \"location-flavor\".  In the case of a provider-managed\
    \ or co-managed\n   site, the user is expected to configure a \"device-reference\"\
    \ (device\n   case) that will bind the site-network-access to a particular device\n\
    \   that the customer ordered.  As each device is already associated with\n  \
    \ a particular location, in such a case the location information is\n   retrieved\
    \ from the device location.  In the case of a customer-\n   managed site, the\
    \ user is expected to configure a\n   \"location-reference\" (location case);\
    \ this provides a reference to an\n   existing configured location and will help\
    \ with placement.\n                                         POP#1 (New York)\n\
    \                                      +---------+\n                         \
    \             |   PE1   |\n                 Site #1 ---...       |   PE2   |\n\
    \                (Atlantic City)       |   PE3   |\n                         \
    \             +---------+\n                                         POP#2 (Washington)\n\
    \                                      +---------+\n                         \
    \             |   PE4   |\n                                      |   PE5   |\n\
    \                                      |   PE6   |\n                         \
    \             +---------+\n                                         POP#3 (Philadelphia)\n\
    \                                      +---------+\n                         \
    \             |   PE7   |\n                 Site #2 CE#1---...   |   PE8   |\n\
    \                (Reston)              |   PE9   |\n                         \
    \             +---------+\n   In the example above, Site #1 is a customer-managed\
    \ site with a\n   location L1, while Site #2 is a provider-managed site for which\
    \ a CE\n   (CE#1) was ordered.  Site #2 is configured with L2 as its location.\n\
    \   When configuring a site-network-access for Site #1, the user will\n   need\
    \ to reference location L1 so that the management system will know\n   that the\
    \ access will need to terminate on this location.  Then, for\n   distance reasons,\
    \ this management system may mesh Site #1 on a PE in\n   the Philadelphia POP.\
    \  It may also take into account resources\n   available on PEs to determine the\
    \ exact target PE (e.g., least\n   loaded).  For Site #2, the user is expected\
    \ to configure the\n   site-network-access with a device-reference to CE#1 so\
    \ that the\n   management system will know that the access must terminate on the\n\
    \   location of CE#1 and must be connected to CE#1.  For placement of the\n  \
    \ SP side of the access connection, in the case of the nearest PE used,\n   it\
    \ may mesh Site #2 on the Washington POP.\n"
- title: '6.6.3.  Constraint/Parameter: Access Type'
  contents:
  - "6.6.3.  Constraint/Parameter: Access Type\n   The management system needs to\
    \ elect the access media to connect the\n   site to the customer (for example,\
    \ xDSL, leased line, Ethernet\n   backhaul).  The customer may provide some parameters/constraints\
    \ that\n   will provide hints to the management system.\n   The bearer container\
    \ information SHOULD be the first piece of\n   information considered when making\
    \ this decision:\n   o  The \"requested-type\" parameter provides information\
    \ about the\n      media type that the customer would like to use.  If the \"\
    strict\"\n      leaf is equal to \"true\", this MUST be considered a strict\n\
    \      constraint so that the management system cannot connect the site\n    \
    \  with another media type.  If the \"strict\" leaf is equal to \"false\"\n  \
    \    (default) and if the requested media type cannot be fulfilled, the\n    \
    \  management system can select another media type.  The supported\n      media\
    \ types SHOULD be communicated by the SP to the customer via a\n      mechanism\
    \ that is out of scope for this document.\n   o  The \"always-on\" leaf defines\
    \ a strict constraint: if set to true,\n      the management system MUST elect\
    \ a media type that is \"always-on\"\n      (e.g., this means no dial access type).\n\
    \   o  The \"bearer-reference\" parameter is used in cases where the\n      customer\
    \ has already ordered a network connection to the SP apart\n      from the IP\
    \ VPN site and wants to reuse this connection.  The\n      string used is an internal\
    \ reference from the SP and describes the\n      already-available connection.\
    \  This is also a strict requirement\n      that cannot be relaxed.  How the reference\
    \ is given to the\n      customer is out of scope for this document, but as a\
    \ pure example,\n      when the customer ordered the bearer (through a process\
    \ that is\n      out of scope for this model), the SP may have provided the bearer\n\
    \      reference that can be used for provisioning services on top.\n   Any other\
    \ internal parameters from the SP can also be used.  The\n   management system\
    \ MAY use other parameters, such as the requested\n   \"svc-input-bandwidth\"\
    \ and \"svc-output-bandwidth\", to help decide\n   which access type to use.\n"
- title: '6.6.4.  Constraint: Access Diversity'
  contents:
  - "6.6.4.  Constraint: Access Diversity\n   Each site-network-access may have one\
    \ or more constraints that would\n   drive the placement of the access.  By default,\
    \ the model assumes\n   that there are no constraints, but allocation of a unique\
    \ bearer per\n   site-network-access is expected.\n   In order to help with the\
    \ different placement scenarios, a\n   site-network-access may be tagged using\
    \ one or multiple group\n   identifiers.  The group identifier is a string, so\
    \ it can accommodate\n   both explicit naming of a group of sites (e.g., \"multihomed-set1\"\
    \ or\n   \"subVPN\") and the use of a numbered identifier (e.g., 12345678).  The\n\
    \   meaning of each group-id is local to each customer administrator, and\n  \
    \ the management system MUST ensure that different customers can use\n   the same\
    \ group-ids.  One or more group-ids can also be defined at the\n   site level;\
    \ as a consequence, all site-network-accesses under the\n   site MUST inherit\
    \ the group-ids of the site they belong to.  When, in\n   addition to the site\
    \ group-ids some group-ids are defined at the\n   site-network-access level, the\
    \ management system MUST consider the\n   union of all groups (site level and\
    \ site network access level) for\n   this particular site-network-access.\n  \
    \ For an already-configured site-network-access, each constraint MUST\n   be expressed\
    \ against a targeted set of site-network-accesses.  This\n   site-network-access\
    \ MUST never be taken into account in the targeted\n   set -- for example, \"\
    My site-network-access S must not be connected\n   on the same POP as the site-network-accesses\
    \ that are part of\n   Group 10.\"  The set of site-network-accesses against which\
    \ the\n   constraint is evaluated can be expressed as a list of groups,\n   \"\
    all-other-accesses\", or \"all-other-groups\".  The all-other-accesses\n   option\
    \ means that the current site-network-access constraint MUST be\n   evaluated\
    \ against all the other site-network-accesses belonging to\n   the current site.\
    \  The all-other-groups option means that the\n   constraint MUST be evaluated\
    \ against all groups that the current\n   site-network-access does not belong\
    \ to.\n   The current model proposes multiple constraint-types:\n   o  pe-diverse:\
    \ The current site-network-access MUST NOT be connected\n      to the same PE\
    \ as the targeted site-network-accesses.\n   o  pop-diverse: The current site-network-access\
    \ MUST NOT be connected\n      to the same POP as the targeted site-network-accesses.\n\
    \   o  linecard-diverse: The current site-network-access MUST NOT be\n      connected\
    \ to the same linecard as the targeted\n      site-network-accesses.\n   o  bearer-diverse:\
    \ The current site-network-access MUST NOT use\n      common bearer components\
    \ compared to bearers used by the targeted\n      site-network-accesses.  \"bearer-diverse\"\
    \ provides some level of\n      diversity at the access level.  As an example,\
    \ two bearer-diverse\n      site-network-accesses must not use the same DSLAM,\
    \ BAS, or Layer 2\n      switch.\n   o  same-pe: The current site-network-access\
    \ MUST be connected to the\n      same PE as the targeted site-network-accesses.\n\
    \   o  same-bearer: The current site-network-access MUST be connected\n      using\
    \ the same bearer as the targeted site-network-accesses.\n   These constraint-types\
    \ can be extended through augmentation.\n   Each constraint is expressed as \"\
    The site-network-access S must be\n   <constraint-type> (e.g., pe-diverse, pop-diverse)\
    \ from these <target>\n   site-network-accesses.\"\n   The group-id used to target\
    \ some site-network-accesses may be the\n   same as the one used by the current\
    \ site-network-access.  This eases\n   the configuration of scenarios where a\
    \ group of site-network-access\n   points has a constraint between the access\
    \ points in the group.  As\n   an example, if we want a set of sites (Site#1 to\
    \ Site#5) to be\n   connected on different PEs, we can tag them with the same\
    \ group-id\n   and express a pe-diverse constraint for this group-id.\n   <site>\n\
    \    <site-id>SITE1</site-id>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <site-network-access-id>1</site-network-access-id>\n      <access-diversity>\n\
    \       <groups>\n        <group>\n         <group-id>10</group-id>\n        </group>\n\
    \       </groups>\n       <constraints>\n        <constraint>\n         <constraint-type>pe-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>10</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>SITE2</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>10</group-id>\n          </group>\n  \
    \       </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   ...\n   <site>\n    <site-id>SITE5</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>10</group-id>\n          </group>\n  \
    \       </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   The group-id used to target some site-network-accesses may also\
    \ be\n   different than the one used by the current site-network-access.  This\n\
    \   can be used to express that a group of sites has some constraints\n   against\
    \ another group of sites, but there is no constraint within the\n   group.  For\
    \ example, we consider a set of six sites and two groups;\n   we want to ensure\
    \ that a site in the first group must be pop-diverse\n   from a site in the second\
    \ group:\n   <site>\n    <site-id>SITE1</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>20</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   <site>\n    <site-id>SITE2</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>20</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   ...\n   <site>\n    <site-id>SITE5</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   <site>\n    <site-id>SITE6</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n"
- title: 6.6.5.  Infeasible Access Placement
  contents:
  - "6.6.5.  Infeasible Access Placement\n   Some infeasible access placement scenarios\
    \ could be created via the\n   proposed configuration framework.  Such infeasible\
    \ access placement\n   scenarios could result from constraints that are too restrictive,\n\
    \   leading to infeasible access placement in the network or conflicting\n   constraints\
    \ that would also lead to infeasible access placement.  An\n   example of conflicting\
    \ rules would be to request that\n   site-network-access#1 be pe-diverse from\
    \ site-network-access#2 and to\n   request at the same time that site-network-access#2\
    \ be on the same PE\n   as site-network-access#1.  When the management system\
    \ cannot\n   determine the placement of a site-network-access, it SHOULD return\
    \ an\n   error message indicating that placement was not possible.\n"
- title: 6.6.6.  Examples of Access Placement
  contents:
  - '6.6.6.  Examples of Access Placement

    '
- title: 6.6.6.1.  Multihoming
  contents:
  - "6.6.6.1.  Multihoming\n   The customer wants to create a multihomed site.  The\
    \ site will be\n   composed of two site-network-accesses; for resiliency purposes,\
    \ the\n   customer wants the two site-network-accesses to be meshed on\n   different\
    \ POPs.\n                                           POP#1\n       +-------+  \
    \                          +---------+\n       |       |                     \
    \       |   PE1   |\n       |       |---site-network-access#1----|   PE2   |\n\
    \       |       |                            |   PE3   |\n       |       |   \
    \                         +---------+\n       | Site#1|\n       |       |    \
    \                           POP#2\n       |       |                          \
    \  +---------+\n       |       |                            |   PE4   |\n    \
    \   |       |---site-network-access#2----|   PE5   |\n       |       |       \
    \                     |   PE6   |\n       |       |                          \
    \  +---------+\n       +-------+\n   This scenario can be expressed as follows:\n\
    \   <site>\n    <site-id>SITE1</site-id>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <site-network-access-id>1</site-network-access-id>\n      <access-diversity>\n\
    \       <groups>\n        <group>\n         <group-id>10</group-id>\n        </group>\n\
    \       </groups>\n       <constraints>\n        <constraint>\n         <constraint-type>pop-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>20</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \     <site-network-access>\n      <site-network-access-id>2</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n   But it can also be expressed as follows:\n   <site>\n    <site-id>SITE1</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <constraints>\n        <constraint>\n      \
    \   <constraint-type>pop-diverse</constraint-type>\n         <target>\n      \
    \    <all-other-accesses/>\n         </target>\n        </constraint>\n      \
    \ </constraints>\n      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \     <site-network-access>\n      <site-network-access-id>2</site-network-access-id>\n\
    \      <access-diversity>\n       <constraints>\n        <constraint>\n      \
    \   <constraint-type>pop-diverse</constraint-type>\n         <target>\n      \
    \    <all-other-accesses/>\n         </target>\n        </constraint>\n      \
    \ </constraints>\n      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n"
- title: 6.6.6.2.  Site Offload
  contents:
  - "6.6.6.2.  Site Offload\n   The customer has six branch offices in a particular\
    \ region, and he\n   wants to prevent having all branch offices connected on the\
    \ same PE.\n   He wants to express that three branch offices cannot be connected\
    \ on\n   the same linecard.  Also, the other branch offices must be connected\n\
    \   on a different POP.  Those other branch offices cannot also be\n   connected\
    \ on the same linecard.\n                                        POP#1\n     \
    \                                +---------+\n                               \
    \      |   PE1   |\n               Office#1 ---...       |   PE2   |\n       \
    \        Office#2 ---...       |   PE3   |\n               Office#3 ---...   \
    \    |   PE4   |\n                                     +---------+\n         \
    \                               POP#2\n                                     +---------+\n\
    \               Office#4 ---...       |   PE5   |\n               Office#5 ---...\
    \       |   PE6   |\n               Office#6 ---...       |   PE7   |\n      \
    \                               +---------+\n   This scenario can be expressed\
    \ as follows:\n   o  We need to create two groups of sites: Group#10, which is\
    \ composed\n      of Office#1, Office#2, and Office#3; and Group#20, which is\n\
    \      composed of Office#4, Office#5, and Office#6.\n   o  Sites within Group#10\
    \ must be pop-diverse from sites within\n      Group#20, and vice versa.\n   o\
    \  Sites within Group#10 must be linecard-diverse from other sites in\n      Group#10\
    \ (same for Group#20).\n   <site>\n    <site-id>Office1</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>20</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>10</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>Office2</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>20</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>10</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>Office3</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>10</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>20</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>10</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>Office4</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>20</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>Office5</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>20</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   <site>\n    <site-id>Office6</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>20</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pop-diverse</constraint-type>\n         <target>\n\
    \          <group>\n           <group-id>10</group-id>\n          </group>\n \
    \        </target>\n        </constraint>\n        <constraint>\n         <constraint-type>linecard-diverse</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>20</group-id>\n  \
    \        </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNA</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n"
- title: 6.6.6.3.  Parallel Links
  contents:
  - "6.6.6.3.  Parallel Links\n   To increase its site bandwidth at lower cost, a\
    \ customer wants to\n   order two parallel site-network-accesses that will be\
    \ connected to\n   the same PE.\n          *******site-network-access#1**********\n\
    \   Site 1 *******site-network-access#2********** PE1\n   This scenario can be\
    \ expressed as follows:\n   <site>\n    <site-id>SITE1</site-id>\n    <site-network-accesses>\n\
    \     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>PE-linkgrp-1</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>same-pe</constraint-type>\n         <target>\n    \
    \      <group>\n           <group-id>PE-linkgrp-1</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNB</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n     <site-network-access>\n\
    \      <site-network-access-id>2</site-network-access-id>\n      <access-diversity>\n\
    \       <groups>\n        <group>\n         <group-id>PE-linkgrp-1</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>same-pe</constraint-type>\n         <target>\n    \
    \      <group>\n           <group-id>PE-linkgrp-1</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n       </constraints>\n      </access-diversity>\n\
    \      <vpn-attachment>\n       <vpn-id>VPNB</vpn-id>\n       <site-role>spoke-role</site-role>\n\
    \      </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \   </site>\n"
- title: 6.6.6.4.  SubVPN with Multihoming
  contents:
  - "6.6.6.4.  SubVPN with Multihoming\n   A customer has a site that is dual-homed.\
    \  The dual-homing must be\n   done on two different PEs.  The customer also wants\
    \ to implement two\n   subVPNs on those multihomed accesses.\n   +-----------------+\
    \         Site                     +------+\n   |                 |---------------------------------/\
    \       +-----+\n   |                 |****(site-network-access#1)*****| VPN B\
    \ /       \\\n   | New York Office |****(site-network-access#2)************| VPN\
    \ C   |\n   |                 |                                  +-----\\    \
    \   /\n   |                 |                                         +-----+\n\
    \   |                 |\n   |                 |                              \
    \    +------+\n   |                 |                                 /      \
    \ +-----+\n   |                 |****(site-network-access#3)*****| VPN B /   \
    \    \\\n   |                 |****(site-network-access#4)************| VPN C\
    \   |\n   |                 |                                  +-----\\      \
    \ /\n   |                 |-----------------------------------      +-----+\n\
    \   +-----------------+\n   This scenario can be expressed as follows:\n   o \
    \ The site will have four site network accesses (two subVPNs coupled\n      via\
    \ dual-homing).\n   o  Site-network-access#1 and site-network-access#3 will correspond\
    \ to\n      the multihoming of subVPN B.  A PE-diverse constraint is required\n\
    \      between them.\n   o  Site-network-access#2 and site-network-access#4 will\
    \ correspond to\n      the multihoming of subVPN C.  A PE-diverse constraint is\
    \ required\n      between them.\n   o  To ensure proper usage of the same bearer\
    \ for the subVPN,\n      site-network-access#1 and site-network-access#2 must\
    \ share the\n      same bearer as site-network-access#3 and site-network-access#4.\n\
    \   <site>\n    <site-id>SITE1</site-id>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <site-network-access-id>1</site-network-access-id>\n      <access-diversity>\n\
    \       <groups>\n        <group>\n         <group-id>dualhomed-1</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>dualhomed-2</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n        <constraint>\n         <constraint-type>same-bearer</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>dualhomed-1</group-id>\n\
    \          </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNB</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \     <site-network-access>\n      <site-network-access-id>2</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>dualhomed-1</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>dualhomed-2</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n        <constraint>\n         <constraint-type>same-bearer</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>dualhomed-1</group-id>\n\
    \          </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNC</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \     <site-network-access>\n      <site-network-access-id>3</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>dualhomed-2</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>dualhomed-1</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n        <constraint>\n         <constraint-type>same-bearer</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>dualhomed-2</group-id>\n\
    \          </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNB</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \     <site-network-access>\n      <site-network-access-id>4</site-network-access-id>\n\
    \      <access-diversity>\n       <groups>\n        <group>\n         <group-id>dualhomed-2</group-id>\n\
    \        </group>\n       </groups>\n       <constraints>\n        <constraint>\n\
    \         <constraint-type>pe-diverse</constraint-type>\n         <target>\n \
    \         <group>\n           <group-id>dualhomed-1</group-id>\n          </group>\n\
    \         </target>\n        </constraint>\n        <constraint>\n         <constraint-type>same-bearer</constraint-type>\n\
    \         <target>\n          <group>\n           <group-id>dualhomed-2</group-id>\n\
    \          </group>\n         </target>\n        </constraint>\n       </constraints>\n\
    \      </access-diversity>\n      <vpn-attachment>\n       <vpn-id>VPNC</vpn-id>\n\
    \       <site-role>spoke-role</site-role>\n      </vpn-attachment>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n"
- title: 6.6.7.  Route Distinguisher and VRF Allocation
  contents:
  - "6.6.7.  Route Distinguisher and VRF Allocation\n   The route distinguisher (RD)\
    \ is a critical parameter of PE-based\n   L3VPNs as described in [RFC4364] that\
    \ provides the ability to\n   distinguish common addressing plans in different\
    \ VPNs.  As for route\n   targets (RTs), a management system is expected to allocate\
    \ a VRF on\n   the target PE and an RD for this VRF.\n   If a VRF already exists\
    \ on the target PE and the VRF fulfills the\n   connectivity constraints for the\
    \ site, there is no need to recreate\n   another VRF, and the site MAY be meshed\
    \ within this existing VRF.\n   How the management system checks that an existing\
    \ VRF fulfills the\n   connectivity constraints for a site is out of scope for\
    \ this\n   document.\n   If no such VRF exists on the target PE, the management\
    \ system has to\n   initiate the creation of a new VRF on the target PE and has\
    \ to\n   allocate a new RD for this new VRF.\n   The management system MAY apply\
    \ a per-VPN or per-VRF allocation\n   policy for the RD, depending on the SP's\
    \ policy.  In a per-VPN\n   allocation policy, all VRFs (dispatched on multiple\
    \ PEs) within a VPN\n   will share the same RD value.  In a per-VRF model, all\
    \ VRFs should\n   always have a unique RD value.  Some other allocation policies\
    \ are\n   also possible, and this document does not restrict the allocation\n\
    \   policies to be used.\n   The allocation of RDs MAY be done in the same way\
    \ as RTs.  The\n   examples provided in Section 6.2.1.1 could be reused in this\n\
    \   scenario.\n   Note that an SP MAY configure a target PE for an automated allocation\n\
    \   of RDs.  In this case, there will be no need for any backend system\n   to\
    \ allocate an RD value.\n"
- title: 6.7.  Site Network Access Availability
  contents:
  - "6.7.  Site Network Access Availability\n   A site may be multihomed, meaning\
    \ that it has multiple\n   site-network-access points.  Placement constraints\
    \ defined in\n   previous sections will help ensure physical diversity.\n   When\
    \ the site-network-accesses are placed on the network, a customer\n   may want\
    \ to use a particular routing policy on those accesses.\n   The \"site-network-access/availability\"\
    \ container defines parameters\n   for site redundancy.  The \"access-priority\"\
    \ leaf defines a preference\n   for a particular access.  This preference is used\
    \ to model\n   load-balancing or primary/backup scenarios.  The higher the\n \
    \  access-priority value, the higher the preference will be.\n   The figure below\
    \ describes how the access-priority attribute can be\n   used.\n   Hub#1 LAN (Primary/backup)\
    \          Hub#2 LAN (Load-sharing)\n     |                                  \
    \                   |\n     |    access-priority 1          access-priority 1\
    \     |\n     |--- CE1 ------- PE1            PE3 --------- CE3 --- |\n     |\
    \                                                     |\n     |              \
    \                                       |\n     |--- CE2 ------- PE2         \
    \   PE4 --------- CE4 --- |\n     |    access-priority 2          access-priority\
    \ 1     |\n                             PE5\n                              |\n\
    \                              |\n                              |\n          \
    \                   CE5\n                              |\n                   \
    \      Spoke#1 site (Single-homed)\n   In the figure above, Hub#2 requires load-sharing,\
    \ so all the\n   site-network-accesses must use the same access-priority value.\
    \  On\n   the other hand, as Hub#1 requires a primary site-network-access and\
    \ a\n   backup site-network-access, a higher access-priority setting will be\n\
    \   configured on the primary site-network-access.\n   Scenarios that are more\
    \ complex can be modeled.  Let's consider a Hub\n   site with five accesses to\
    \ the network (A1,A2,A3,A4,A5).  The\n   customer wants to load-share its traffic\
    \ on A1,A2 in the nominal\n   situation.  If A1 and A2 fail, the customer wants\
    \ to load-share its\n   traffic on A3 and A4; finally, if A1 to A4 are down, he\
    \ wants to\n   use A5.  We can model this easily by configuring the following\n\
    \   access-priority values: A1=100, A2=100, A3=50, A4=50, A5=10.\n   The access-priority\
    \ scenario has some limitations.  An\n   access-priority scenario like the previous\
    \ one with five accesses but\n   with the constraint of having traffic load-shared\
    \ between A3 and A4\n   in the case where A1 OR A2 is down is not achievable.\
    \  But the\n   authors believe that using the access-priority attribute will cover\n\
    \   most of the deployment use cases and that the model can still be\n   extended\
    \ via augmentation to support additional use cases.\n"
- title: 6.8.  Traffic Protection
  contents:
  - "6.8.  Traffic Protection\n   The service model supports the ability to protect\
    \ the traffic for a\n   site.  Such protection provides a better level of availability\
    \ in\n   multihoming scenarios by, for example, using local-repair techniques\n\
    \   in case of failures.  The associated level of service guarantee would\n  \
    \ be based on an agreement between the customer and the SP and is out\n   of scope\
    \ for this document.\n                 Site#1                            Site#2\n\
    \             CE1 ----- PE1 -- P1            P3 -- PE3 ---- CE3\n            \
    \  |                              |             |\n              |           \
    \                   |             |\n             CE2 ----- PE2 -- P2        \
    \    P4 -- PE4 ---- CE4\n                       /\n                      /\n \
    \            CE5 ----+\n                Site#3\n   In the figure above, we consider\
    \ an IP VPN service with three sites,\n   including two dual-homed sites (Site#1\
    \ and Site#2).  For dual-homed\n   sites, we consider PE1-CE1 and PE3-CE3 as primary\
    \ and PE2-CE2,PE4-CE4\n   as backup for the example (even if protection also applies\
    \ to\n   load-sharing scenarios).\n   In order to protect Site#2 against a failure,\
    \ a user may set the\n   \"traffic-protection/enabled\" leaf to true for Site#2.\
    \  How the\n   traffic protection will be implemented is out of scope for this\n\
    \   document.  However, in such a case, we could consider traffic coming\n   from\
    \ a remote site (Site#1 or Site#3), where the primary path would\n   use PE3 as\
    \ the egress PE.  PE3 may have preprogrammed a backup\n   forwarding entry pointing\
    \ to the backup path (through PE4-CE4) for\n   all prefixes going through the\
    \ PE3-CE3 link.  How the backup path is\n   computed is out of scope for this\
    \ document.  When the PE3-CE3 link\n   fails, traffic is still received by PE3,\
    \ but PE3 automatically\n   switches traffic to the backup entry; the path will\
    \ therefore be\n   PE1-P1-(...)-P3-PE3-PE4-CE4 until the remote PEs reconverge\
    \ and use\n   PE4 as the egress PE.\n"
- title: 6.9.  Security
  contents:
  - "6.9.  Security\n   The \"security\" container defines customer-specific security\n\
    \   parameters for the site.  The security options supported in the model\n  \
    \ are limited but may be extended via augmentation.\n"
- title: 6.9.1.  Authentication
  contents:
  - "6.9.1.  Authentication\n   The current model does not support any authentication\
    \ parameters for\n   the site connection, but such parameters may be added in\
    \ the\n   \"authentication\" container through augmentation.\n"
- title: 6.9.2.  Encryption
  contents:
  - "6.9.2.  Encryption\n   Traffic encryption can be requested on the connection.\
    \  It may be\n   performed at Layer 2 or Layer 3 by selecting the appropriate\n\
    \   enumeration in the \"layer\" leaf.  For example, an SP may use IPsec\n   when\
    \ a customer requests Layer 3 encryption.  The encryption profile\n   can be SP\
    \ defined or customer specific.\n   When an SP profile is used and a key (e.g.,\
    \ a pre-shared key) is\n   allocated by the provider to be used by a customer,\
    \ the SP should\n   provide a way to communicate the key in a secured way to the\n\
    \   customer.\n   When a customer profile is used, the model supports only a pre-shared\n\
    \   key for authentication, with the pre-shared key provided through the\n   NETCONF\
    \ or RESTCONF request.  A secure channel must be used to ensure\n   that the pre-shared\
    \ key cannot be intercepted.\n   For security reasons, it may be necessary for\
    \ the customer to change\n   the pre-shared key on a regular basis.  To perform\
    \ a key change, the\n   user can ask the SP to change the pre-shared key by submitting\
    \ a new\n   pre-shared key for the site configuration (as shown below).  This\n\
    \   mechanism might not be hitless.\n   <site>\n    <site-id>SITE1</site-id>\n\
    \    <site-network-accesses>\n     <site-network-access>\n      <site-network-access-id>1</site-network-access-id>\n\
    \      <security>\n       <encryption-profile>\n        <preshared-key>MY_NEW_KEY</preshared-key>\n\
    \       </encryption-profile>\n      </security>\n     </site-network-access>\n\
    \    </site-network-accesses>\n   </site>\n   A hitless key-change mechanism may\
    \ be added through augmentation.\n   Other key-management methodologies may be\
    \ added through augmentation.\n   A \"pki\" container, which is empty, has been\
    \ created to help with\n   support of PKI through augmentation.\n"
- title: 6.10.  Management
  contents:
  - "6.10.  Management\n   The model proposes three types of common management options:\n\
    \   o  provider-managed: The CE router is managed only by the provider.\n    \
    \  In this model, the responsibility boundary between the SP and the\n      customer\
    \ is between the CE and the customer network.\n   o  customer-managed: The CE\
    \ router is managed only by the customer.\n      In this model, the responsibility\
    \ boundary between the SP and the\n      customer is between the PE and the CE.\n\
    \   o  co-managed: The CE router is primarily managed by the provider; in\n  \
    \    addition, the SP allows customers to access the CE for\n      configuration/monitoring\
    \ purposes.  In the co-managed mode, the\n      responsibility boundary is the\
    \ same as the responsibility boundary\n      for the provider-managed model.\n\
    \   Based on the management model, different security options MAY be\n   derived.\n\
    \   In the co-managed case, the model proposes some options to define the\n  \
    \ management address family (IPv4 or IPv6) and the associated\n   management address.\n"
- title: 6.11.  Routing Protocols
  contents:
  - "6.11.  Routing Protocols\n   \"routing-protocol\" defines which routing protocol\
    \ must be activated\n   between the provider and the customer router.  The current\
    \ model\n   supports the following settings: bgp, rip, ospf, static, direct,\n\
    \   and vrrp.\n   The routing protocol defined applies at the provider-to-customer\n\
    \   boundary.  Depending on how the management model is administered, it\n   may\
    \ apply to the PE-CE boundary or the CE-to-customer boundary.  In\n   the case\
    \ of a customer-managed site, the routing protocol defined\n   will be activated\
    \ between the PE and the CE router managed by the\n   customer.  In the case of\
    \ a provider-managed site, the routing\n   protocol defined will be activated\
    \ between the CE managed by the SP\n   and the router or LAN belonging to the\
    \ customer.  In this case, we\n   expect the PE-CE routing to be configured based\
    \ on the SP's rules, as\n   both are managed by the same entity.\n           \
    \                    Rtg protocol\n       192.0.2.0/24 ----- CE -----------------\
    \ PE1\n                    Customer-managed site\n             Rtg protocol\n\
    \       Customer router ----- CE ----------------- PE1\n                    Provider-managed\
    \ site\n   All the examples below will refer to a scenario for a customer-\n \
    \  managed site.\n"
- title: 6.11.1.  Handling of Dual Stack
  contents:
  - "6.11.1.  Handling of Dual Stack\n   All routing protocol types support dual stack\
    \ by using the\n   \"address-family\" leaf-list.\n   Example of dual stack using\
    \ the same routing protocol:\n   <routing-protocols>\n     <routing-protocol>\n\
    \       <type>static</type>\n       <static>\n           <address-family>ipv4</address-family>\n\
    \           <address-family>ipv6</address-family>\n       </static>\n     </routing-protocol>\n\
    \   </routing-protocols>\n   Example of dual stack using two different routing\
    \ protocols:\n   <routing-protocols>\n     <routing-protocol>\n       <type>rip</type>\n\
    \       <rip>\n           <address-family>ipv4</address-family>\n       </rip>\n\
    \     </routing-protocol>\n     <routing-protocol>\n       <type>ospf</type>\n\
    \       <ospf>\n           <address-family>ipv6</address-family>\n       </ospf>\n\
    \     </routing-protocol>\n   </routing-protocols>\n"
- title: 6.11.2.  LAN Directly Connected to SP Network
  contents:
  - "6.11.2.  LAN Directly Connected to SP Network\n   The routing protocol type \"\
    direct\" SHOULD be used when a customer LAN\n   is directly connected to the provider\
    \ network and must be advertised\n   in the IP VPN.\n            LAN attached\
    \ directly to provider network:\n            192.0.2.0/24 ----- PE1\n   In this\
    \ case, the customer has a default route to the PE address.\n"
- title: 6.11.3.  LAN Directly Connected to SP Network with Redundancy
  contents:
  - "6.11.3.  LAN Directly Connected to SP Network with Redundancy\n   The routing\
    \ protocol type \"vrrp\" SHOULD be used and advertised in the\n   IP VPN when\n\
    \   o  the customer LAN is directly connected to the provider network,\n     \
    \ and\n   o  LAN redundancy is expected.\n         LAN attached directly to provider\
    \ network with LAN redundancy:\n           192.0.2.0/24 ------ PE1\n         \
    \                 |\n                          +--- PE2\n   In this case, the\
    \ customer has a default route to the SP network.\n"
- title: 6.11.4.  Static Routing
  contents:
  - "6.11.4.  Static Routing\n   The routing protocol type \"static\" MAY be used\
    \ when a customer LAN is\n   connected to the provider network through a CE router\
    \ and must be\n   advertised in the IP VPN.  In this case, the static routes give\
    \ next\n   hops (nh) to the CE and to the PE.  The customer has a default route\n\
    \   to the SP network.\n                                   Static rtg\n      \
    \    192.0.2.0/24 ------ CE -------------- PE\n                              \
    \ |                |\n                               |      Static route 192.0.2.0/24\
    \ nh CE\n               Static route 0.0.0.0/0 nh PE\n"
- title: 6.11.5.  RIP Routing
  contents:
  - "6.11.5.  RIP Routing\n   The routing protocol type \"rip\" MAY be used when a\
    \ customer LAN is\n   connected to the provider network through a CE router and\
    \ must be\n   advertised in the IP VPN.  For IPv4, the model assumes that RIP\n\
    \   version 2 is used.\n   In the case of dual-stack routing requested through\
    \ this model, the\n   management system will be responsible for configuring RIP\
    \ (including\n   the correct version number) and associated address families on\n\
    \   network elements.\n                                   RIP rtg\n          \
    \ 192.0.2.0/24 ------ CE -------------- PE\n"
- title: 6.11.6.  OSPF Routing
  contents:
  - "6.11.6.  OSPF Routing\n   The routing protocol type \"ospf\" MAY be used when\
    \ a customer LAN is\n   connected to the provider network through a CE router\
    \ and must be\n   advertised in the IP VPN.\n   It can be used to extend an existing\
    \ OSPF network and interconnect\n   different areas.  See [RFC4577] for more details.\n\
    \                             +---------------------+\n                      \
    \       |                     |\n                     OSPF    |              \
    \       | OSPF\n                     area 1  |                     | area 2\n\
    \    (OSPF                    |                     |          (OSPF\n    area\
    \ 1) --- CE ---------- PE               PE ----- CE --- area 2)\n            \
    \                 |                     |\n                             +---------------------+\n\
    \   The model also proposes an option to create an OSPF sham link between\n  \
    \ two sites sharing the same area and having a backdoor link.  The\n   sham link\
    \ is created by referencing the target site sharing the same\n   OSPF area.  The\
    \ management system will be responsible for checking to\n   see if there is already\
    \ a sham link configured for this VPN and area\n   between the same pair of PEs.\
    \  If there is no existing sham link, the\n   management system will provision\
    \ one.  This sham link MAY be reused\n   by other sites.\n                   \
    \        +------------------------+\n                           |            \
    \            |\n                           |                        |\n      \
    \                     |  PE (--sham link--)PE  |\n                           |\
    \    |                |  |\n                           +----|----------------|--+\n\
    \                                | OSPF area 1    | OSPF area 1\n            \
    \                    |                |\n                                CE1 \
    \            CE2\n                                |                |\n       \
    \                   (OSPF area 1)     (OSPF area 1)\n                        \
    \        |                |\n                                +----------------+\n\
    \   Regarding dual-stack support, the user MAY specify both IPv4 and IPv6\n  \
    \ address families, if both protocols should be routed through OSPF.\n   As OSPF\
    \ uses separate protocol instances for IPv4 and IPv6, the\n   management system\
    \ will need to configure both OSPF version 2 and OSPF\n   version 3 on the PE-CE\
    \ link.\n   Example of OSPF routing parameters in the service model:\n   <routing-protocols>\n\
    \     <routing-protocol>\n       <type>ospf</type>\n       <ospf>\n          \
    \ <area-address>0.0.0.1</area-address>\n           <address-family>ipv4</address-family>\n\
    \           <address-family>ipv6</address-family>\n       </ospf>\n     </routing-protocol>\n\
    \   </routing-protocols>\n   Example of PE configuration done by the management\
    \ system:\n   router ospf 10\n    area 0.0.0.1\n     interface Ethernet0/0\n \
    \  !\n   router ospfv3 10\n    area 0.0.0.1\n     interface Ethernet0/0\n    !\n"
- title: 6.11.7.  BGP Routing
  contents:
  - "6.11.7.  BGP Routing\n   The routing protocol type \"bgp\" MAY be used when a\
    \ customer LAN is\n   connected to the provider network through a CE router and\
    \ must be\n   advertised in the IP VPN.\n                                   BGP\
    \ rtg\n         192.0.2.0/24 ------ CE -------------- PE\n   The session addressing\
    \ will be derived from connection parameters as\n   well as the SP's knowledge\
    \ of the addressing plan that is in use.\n   In the case of dual-stack access,\
    \ the user MAY request BGP routing\n   for both IPv4 and IPv6 by specifying both\
    \ address families.  It will\n   be up to the SP and management system to determine\
    \ how to decline the\n   configuration (two BGP sessions, single, multi-session,\
    \ etc.).\n   The service configuration below activates BGP on the PE-CE link for\n\
    \   both IPv4 and IPv6.\n   BGP activation requires the SP to know the address\
    \ of the customer\n   peer.  The \"static-address\" allocation type for the IP\
    \ connection\n   MUST be used.\n   <routing-protocols>\n     <routing-protocol>\n\
    \       <type>bgp</type>\n       <bgp>\n           <autonomous-system>65000</autonomous-system>\n\
    \           <address-family>ipv4</address-family>\n           <address-family>ipv6</address-family>\n\
    \       </bgp>\n     </routing-protocol>\n   </routing-protocols>\n   Depending\
    \ on the SP flavor, a management system can divide this\n   service configuration\
    \ into different flavors, as shown by the\n   following examples.\n   Example\
    \ of PE configuration done by the management system\n   (single IPv4 transport\
    \ session):\n   router bgp 100\n    neighbor 203.0.113.2 remote-as 65000\n   \
    \ address-family ipv4 vrf Cust1\n       neighbor 203.0.113.2 activate\n    address-family\
    \ ipv6 vrf Cust1\n       neighbor 203.0.113.2 activate\n       neighbor 203.0.113.2\
    \ route-map SET-NH-IPV6 out\n   Example of PE configuration done by the management\
    \ system\n   (two sessions):\n   router bgp 100\n    neighbor 203.0.113.2 remote-as\
    \ 65000\n    neighbor 2001::2 remote-as 65000\n    address-family ipv4 vrf Cust1\n\
    \       neighbor 203.0.113.2 activate\n    address-family ipv6 vrf Cust1\n   \
    \    neighbor 2001::2 activate\n   Example of PE configuration done by the management\
    \ system\n   (multi-session):\n   router bgp 100\n    neighbor 203.0.113.2 remote-as\
    \ 65000\n    neighbor 203.0.113.2 multisession per-af\n    address-family ipv4\
    \ vrf Cust1\n       neighbor 203.0.113.2 activate\n    address-family ipv6 vrf\
    \ Cust1\n       neighbor 203.0.113.2 activate\n       neighbor 203.0.113.2 route-map\
    \ SET-NH-IPV6 out\n"
- title: 6.12.  Service
  contents:
  - "6.12.  Service\n   The service defines service parameters associated with the\
    \ site.\n"
- title: 6.12.1.  Bandwidth
  contents:
  - "6.12.1.  Bandwidth\n   The service bandwidth refers to the bandwidth requirement\
    \ between the\n   PE and the CE (WAN link bandwidth).  The requested bandwidth\
    \ is\n   expressed as svc-input-bandwidth and svc-output-bandwidth in bits\n \
    \  per second.  The input/output direction uses the customer site as a\n   reference:\
    \ \"input bandwidth\" means download bandwidth for the site,\n   and \"output\
    \ bandwidth\" means upload bandwidth for the site.\n   The service bandwidth is\
    \ only configurable at the site-network-access\n   level.\n   Using a different\
    \ input and output bandwidth will allow the SP to\n   determine if the customer\
    \ allows for asymmetric bandwidth access,\n   such as ADSL.  It can also be used\
    \ to set rate-limiting in a\n   different way for uploading and downloading on\
    \ a symmetric bandwidth\n   access.\n   The bandwidth is a service bandwidth expressed\
    \ primarily as IP\n   bandwidth, but if the customer enables MPLS for Carriers'\
    \ Carriers\n   (CsC), this becomes MPLS bandwidth.\n"
- title: 6.12.2.  QoS
  contents:
  - "6.12.2.  QoS\n   The model proposes to define QoS parameters in an abstracted\
    \ way:\n   o  qos-classification-policy: policy that defines a set of ordered\n\
    \      rules to classify customer traffic.\n   o  qos-profile: QoS scheduling\
    \ profile to be applied.\n"
- title: 6.12.2.1.  QoS Classification
  contents:
  - "6.12.2.1.  QoS Classification\n   QoS classification rules are handled by the\n\
    \   \"qos-classification-policy\" container.  The qos-classification-policy\n\
    \   container is an ordered list of rules that match a flow or\n   application\
    \ and set the appropriate target class of service\n   (target-class-id).  The\
    \ user can define the match using an\n   application reference or a flow definition\
    \ that is more specific\n   (e.g., based on Layer 3 source and destination addresses,\
    \ Layer 4\n   ports, and Layer 4 protocol).  When a flow definition is used, the\n\
    \   user can employ a \"target-sites\" leaf-list to identify the\n   destination\
    \ of a flow rather than using destination IP addresses.  In\n   such a case, an\
    \ association between the site abstraction and the IP\n   addresses used by this\
    \ site must be done dynamically.  How this\n   association is done is out of scope\
    \ for this document; an\n   implementation might not support this criterion and\
    \ should advertise\n   a deviation in this case.  A rule that does not have a\
    \ match\n   statement is considered a match-all rule.  An SP may implement a\n\
    \   default terminal classification rule if the customer does not provide\n  \
    \ it.  It will be up to the SP to determine its default target class.\n   The\
    \ current model defines some applications, but new application\n   identities\
    \ may be added through augmentation.  The exact meaning of\n   each application\
    \ identity is up to the SP, so it will be necessary\n   for the SP to advise the\
    \ customer on the usage of application\n   matching.\n   Where the classification\
    \ is done depends on the SP's implementation\n   of the service, but classification\
    \ concerns the flow coming from the\n   customer site and entering the network.\n\
    \                                  Provider network\n                        \
    \     +-----------------------+\n      192.0.2.0/24\n   198.51.100.0/24 ---- CE\
    \ --------- PE\n     Traffic flow\n    ---------->\n   In the figure above, the\
    \ management system should implement the\n   classification rule:\n   o  in the\
    \ ingress direction on the PE interface, if the CE is\n      customer-managed.\n\
    \   o  in the ingress direction on the CE interface connected to the\n      customer\
    \ LAN, if the CE is provider-managed.\n   The figure below describes a sample\
    \ service description of QoS\n   classification for a site:\n   <service>\n  \
    \   <qos>\n       <qos-classification-policy>\n         <rule>\n           <id>1</id>\n\
    \           <match-flow>\n             <ipv4-src-prefix>192.0.2.0/24</ipv4-src-prefix>\n\
    \             <ipv4-dst-prefix>203.0.113.1/32</ipv4-dst-prefix>\n            \
    \ <l4-dst-port>80</l4-dst-port>\n             <l4-protocol>tcp</l4-protocol>\n\
    \           </match-flow>\n           <target-class-id>DATA2</target-class-id>\n\
    \         </rule>\n         <rule>\n           <id>2</id>\n           <match-flow>\n\
    \             <ipv4-src-prefix>192.0.2.0/24</ipv4-src-prefix>\n             <ipv4-dst-prefix>203.0.113.1/32</ipv4-dst-prefix>\n\
    \             <l4-dst-port>21</l4-dst-port>\n             <l4-protocol>tcp</l4-protocol>\n\
    \           </match-flow>\n           <target-class-id>DATA2</target-class-id>\n\
    \         </rule>\n         <rule>\n           <id>3</id>\n           <match-application>p2p</match-application>\n\
    \           <target-class-id>DATA3</target-class-id>\n         </rule>\n     \
    \    <rule>\n           <id>4</id>\n           <target-class-id>DATA1</target-class-id>\n\
    \         </rule>\n       </qos-classification-policy>\n     </qos>\n   </service>\n\
    \   In the example above:\n   o  HTTP traffic from the 192.0.2.0/24 LAN destined\
    \ for 203.0.113.1/32\n      will be classified in DATA2.\n   o  FTP traffic from\
    \ the 192.0.2.0/24 LAN destined for 203.0.113.1/32\n      will be classified in\
    \ DATA2.\n   o  Peer-to-peer traffic will be classified in DATA3.\n   o  All other\
    \ traffic will be classified in DATA1.\n   The order of rules is very important.\
    \  The management system\n   responsible for translating those rules in network\
    \ element\n   configuration MUST keep the same processing order in network element\n\
    \   configuration.  The order of rules is defined by the \"id\" leaf.  The\n \
    \  lowest id MUST be processed first.\n"
- title: 6.12.2.2.  QoS Profile
  contents:
  - "6.12.2.2.  QoS Profile\n   The user can choose either a standard profile provided\
    \ by the\n   operator or a custom profile.  The \"qos-profile\" container defines\n\
    \   the traffic-scheduling policy to be used by the SP.\n                    \
    \              Provider network\n                             +-----------------------+\n\
    \   192.0.2.0/24\n   198.51.100.0/24 ---- CE --------- PE\n                  \
    \         \\       /\n                          qos-profile\n   In the case of\
    \ a provider-managed or co-managed connection, the\n   provider should ensure\
    \ scheduling according to the requested policy\n   in both traffic directions\
    \ (SP to customer and customer to SP).  As\n   an example, a device-scheduling\
    \ policy may be implemented on both the\n   PE side and the CE side of the WAN\
    \ link.  In the case of a customer-\n   managed connection, the provider is only\
    \ responsible for ensuring\n   scheduling from the SP network to the customer\
    \ site.  As an example,\n   a device-scheduling policy may be implemented only\
    \ on the PE side of\n   the WAN link towards the customer.\n   A custom QoS profile\
    \ is defined as a list of classes of services and\n   associated properties. \
    \ The properties are:\n   o  rate-limit: used to rate-limit the class of service.\
    \  The value is\n      expressed as a percentage of the global service bandwidth.\
    \  When\n      the qos-profile container is implemented on the CE side,\n    \
    \  svc-output-bandwidth is taken into account as a reference.  When\n      it\
    \ is implemented on the PE side, svc-input-bandwidth is used.\n   o  latency:\
    \ used to define the latency constraint of the class.  The\n      latency constraint\
    \ can be expressed as the lowest possible latency\n      or a latency boundary\
    \ expressed in milliseconds.  How this latency\n      constraint will be fulfilled\
    \ is up to the SP's implementation of\n      the service: a strict priority queuing\
    \ may be used on the access\n      and in the core network, and/or a low-latency\
    \ routing\n      configuration may be created for this traffic class.\n   o  jitter:\
    \ used to define the jitter constraint of the class.  The\n      jitter constraint\
    \ can be expressed as the lowest possible jitter\n      or a jitter boundary expressed\
    \ in microseconds.  How this jitter\n      constraint will be fulfilled is up\
    \ to the SP's implementation of\n      the service: a strict priority queuing\
    \ may be used on the access\n      and in the core network, and/or a jitter-aware\
    \ routing\n      configuration may be created for this traffic class.\n   o  bandwidth:\
    \ used to define a guaranteed amount of bandwidth for the\n      class of service.\
    \  It is expressed as a percentage.  The\n      \"guaranteed-bw-percent\" parameter\
    \ uses available bandwidth as a\n      reference.  When the qos-profile container\
    \ is implemented on the\n      CE side, svc-output-bandwidth is taken into account\
    \ as a\n      reference.  When it is implemented on the PE side,\n      svc-input-bandwidth\
    \ is used.  By default, the bandwidth\n      reservation is only guaranteed at\
    \ the access level.  The user can\n      use the \"end-to-end\" leaf to request\
    \ an end-to-end bandwidth\n      reservation, including across the MPLS transport\
    \ network.  (In\n      other words, the SP will activate something in the MPLS\
    \ core to\n      ensure that the bandwidth request from the customer will be\n\
    \      fulfilled by the MPLS core as well.)  How this is done (e.g., RSVP\n  \
    \    reservation, controller reservation) is out of scope for this\n      document.\n\
    \   Some constraints may not be offered by an SP; in this case, a\n   deviation\
    \ should be advertised.  In addition, due to network\n   conditions, some constraints\
    \ may not be completely fulfilled by the\n   SP; in this case, the SP should advise\
    \ the customer about the\n   limitations.  How this communication is done is out\
    \ of scope for this\n   document.\n   Example of service configuration using a\
    \ standard QoS profile:\n   <site-network-access>\n    <site-network-access-id>1245HRTFGJGJ154654</site-network-access-id>\n\
    \    <service>\n     <svc-input-bandwidth>100000000</svc-input-bandwidth>\n  \
    \   <svc-output-bandwidth>100000000</svc-output-bandwidth>\n     <qos>\n     \
    \ <qos-profile>\n       <profile>PLATINUM</profile>\n      </qos-profile>\n  \
    \   </qos>\n    </service>\n   </site-network-access>\n   <site-network-access>\n\
    \    <site-network-access-id>555555AAAA2344</site-network-access-id>\n    <service>\n\
    \     <svc-input-bandwidth>2000000</svc-input-bandwidth>\n     <svc-output-bandwidth>2000000</svc-output-bandwidth>\n\
    \     <qos>\n      <qos-profile>\n       <profile>GOLD</profile>\n      </qos-profile>\n\
    \     </qos>\n    </service>\n   </site-network-access>\n   Example of service\
    \ configuration using a custom QoS profile:\n   <site-network-access>\n    <site-network-access-id>Site1</site-network-access-id>\n\
    \    <service>\n     <svc-input-bandwidth>100000000</svc-input-bandwidth>\n  \
    \   <svc-output-bandwidth>100000000</svc-output-bandwidth>\n     <qos>\n     \
    \ <qos-profile>\n       <classes>\n        <class>\n         <class-id>REAL_TIME</class-id>\n\
    \         <rate-limit>10</rate-limit>\n         <latency>\n          <use-lowest-latency/>\n\
    \         </latency>\n        </class>\n        <class>\n         <class-id>DATA1</class-id>\n\
    \         <latency>\n          <latency-boundary>70</latency-boundary>\n     \
    \    </latency>\n         <bandwidth>\n          <guaranteed-bw-percent>80</guaranteed-bw-percent>\n\
    \         </bandwidth>\n        </class>\n        <class>\n         <class-id>DATA2</class-id>\n\
    \         <latency>\n          <latency-boundary>200</latency-boundary>\n    \
    \     </latency>\n         <bandwidth>\n          <guaranteed-bw-percent>5</guaranteed-bw-percent>\n\
    \          <end-to-end/>\n         </bandwidth>\n        </class>\n       </classes>\n\
    \      </qos-profile>\n     </qos>\n    </service>\n   </site-network-access>\n\
    \   The custom QoS profile for Site1 defines a REAL_TIME class with a\n   latency\
    \ constraint expressed as the lowest possible latency.  It also\n   defines two\
    \ data classes -- DATA1 and DATA2.  The two classes express\n   a latency boundary\
    \ constraint as well as a bandwidth reservation, as\n   the REAL_TIME class is\
    \ rate-limited to 10% of the service bandwidth\n   (10% of 100 Mbps = 10 Mbps).\
    \  In cases where congestion occurs, the\n   REAL_TIME traffic can go up to 10\
    \ Mbps (let's assume that only 5 Mbps\n   are consumed).  DATA1 and DATA2 will\
    \ share the remaining bandwidth\n   (95 Mbps) according to their percentage. \
    \ So, the DATA1 class will be\n   served with at least 76 Mbps of bandwidth, while\
    \ the DATA2 class will\n   be served with at least 4.75 Mbps.  The latency boundary\
    \ information\n   of the data class may help the SP define a specific buffer tuning\
    \ or\n   a specific routing within the network.  The maximum percentage to be\n\
    \   used is not limited by this model but MUST be limited by the\n   management\
    \ system according to the policies authorized by the SP.\n"
- title: 6.12.3.  Multicast
  contents:
  - "6.12.3.  Multicast\n   The \"multicast\" container defines the type of site in\
    \ the customer\n   multicast service topology: source, receiver, or both.  These\n\
    \   parameters will help the management system optimize the multicast\n   service.\
    \  Users can also define the type of multicast relationship\n   with the customer:\
    \ router (requires a protocol such as PIM), host\n   (IGMP or MLD), or both. \
    \ An address family (IPv4, IPv6, or both) can\n   also be defined.\n"
- title: 6.13.  Enhanced VPN Features
  contents:
  - '6.13.  Enhanced VPN Features

    '
- title: 6.13.1.  Carriers' Carriers
  contents:
  - "6.13.1.  Carriers' Carriers\n   In the case of CsC [RFC4364], a customer may\
    \ want to build an MPLS\n   service using an IP VPN to carry its traffic.\n  \
    \         LAN customer1\n               |\n               |\n              CE1\n\
    \               |\n               | -------------\n            (vrf_cust1)\n \
    \            CE1_ISP1\n               |                 ISP1 POP\n           \
    \    | MPLS link\n               | -------------\n               |\n         \
    \   (vrf ISP1)\n              PE1\n             (...)               Provider backbone\n\
    \              PE2\n             (vrf ISP1)\n               |\n              \
    \ | ------------\n               |\n               | MPLS link\n             \
    \  |                 ISP1 POP\n              CE2_ISP1\n              (vrf_cust1)\n\
    \               | ------------\n               |\n              CE2\n        \
    \       |\n            LAN customer1\n   In the figure above, ISP1 resells an\
    \ IP VPN service but has no core\n   network infrastructure between its POPs.\
    \  ISP1 uses an IP VPN as the\n   core network infrastructure (belonging to another\
    \ provider) between\n   its POPs.\n   In order to support CsC, the VPN service\
    \ must indicate MPLS support\n   by setting the \"carrierscarrier\" leaf to true\
    \ in the vpn-service\n   list.  The link between CE1_ISP1/PE1 and CE2_ISP1/PE2\
    \ must also run\n   an MPLS signalling protocol.  This configuration is done at\
    \ the site\n   level.\n   In the proposed model, LDP or BGP can be used as the\
    \ MPLS signalling\n   protocol.  In the case of LDP, an IGP routing protocol MUST\
    \ also be\n   activated.  In the case of BGP signalling, BGP MUST also be\n  \
    \ configured as the routing protocol.\n   If CsC is enabled, the requested \"\
    svc-mtu\" leaf will refer to the\n   MPLS MTU and not to the IP MTU.\n"
- title: 6.14.  External ID References
  contents:
  - "6.14.  External ID References\n   The service model sometimes refers to external\
    \ information through\n   identifiers.  As an example, to order a cloud-access\
    \ to a particular\n   cloud service provider (CSP), the model uses an identifier\
    \ to refer\n   to the targeted CSP.  If a customer is directly using this service\n\
    \   model as an API (through REST or NETCONF, for example) to order a\n   particular\
    \ service, the SP should provide a list of authorized\n   identifiers.  In the\
    \ case of cloud-access, the SP will provide the\n   associated identifiers for\
    \ each available CSP.  The same applies to\n   other identifiers, such as std-qos-profile,\
    \ OAM profile-name, and\n   provider-profile for encryption.\n   How an SP provides\
    \ the meanings of those identifiers to the customer\n   is out of scope for this\
    \ document.\n"
- title: 6.15.  Defining NNIs
  contents:
  - "6.15.  Defining NNIs\n   An autonomous system (AS) is a single network or group\
    \ of networks\n   that is controlled by a common system administration group and\
    \ that\n   uses a single, clearly defined routing protocol.  In some cases, VPNs\n\
    \   need to span different ASes in different geographic areas or span\n   different\
    \ SPs.  The connection between ASes is established by the SPs\n   and is seamless\
    \ to the customer.  Examples include\n   o  a partnership between SPs (e.g., carrier,\
    \ cloud) to extend their\n      VPN service seamlessly.\n   o  an internal administrative\
    \ boundary within a single SP (e.g.,\n      backhaul versus core versus data center).\n\
    \   NNIs (network-to-network interfaces) have to be defined to extend the\n  \
    \ VPNs across multiple ASes.\n   [RFC4364] defines multiple flavors of VPN NNI\
    \ implementations.  Each\n   implementation has pros and cons; this topic is outside\
    \ the scope of\n   this document.  For example, in an Inter-AS option A, autonomous\n\
    \   system border router (ASBR) peers are connected by multiple\n   interfaces\
    \ with at least one of those interfaces spanning the two\n   ASes while being\
    \ present in the same VPN.  In order for these ASBRs\n   to signal unlabeled IP\
    \ prefixes, they associate each interface with a\n   VPN routing and forwarding\
    \ (VRF) instance and a Border Gateway\n   Protocol (BGP) session.  As a result,\
    \ traffic between the\n   back-to-back VRFs is IP.  In this scenario, the VPNs\
    \ are isolated\n   from each other, and because the traffic is IP, QoS mechanisms\
    \ that\n   operate on IP traffic can be applied to achieve customer service\n\
    \   level agreements (SLAs).\n     --------                 --------------   \
    \           -----------\n    /        \\               /              \\     \
    \       /           \\\n   | Cloud    |             |                |       \
    \   |             |\n   | Provider |-----NNI-----|                |----NNI---|\
    \ Data Center |\n   |  #1      |             |                |          |   \
    \          |\n    \\        /              |                |           \\   \
    \        /\n     --------               |                |            -----------\n\
    \                            |                |\n     --------               |\
    \   My network   |           -----------\n    /        \\              |     \
    \           |          /           \\\n   | Cloud    |             |         \
    \       |         |             |\n   | Provider |-----NNI-----|             \
    \   |---NNI---|  L3VPN      |\n   |  #2      |             |                |\
    \         |  Partner    |\n    \\        /              |                |   \
    \      |             |\n     --------               |                |       \
    \  |             |\n                             \\              /          |\
    \             |\n                              --------------            \\  \
    \         /\n                                    |                    -----------\n\
    \                                    |\n                                   NNI\n\
    \                                    |\n                                    |\n\
    \                            -------------------\n                           /\
    \                   \\\n                          |                     |\n  \
    \                        |                     |\n                          |\
    \                     |\n                          |     L3VPN Partner   |\n \
    \                         |                     |\n                          \
    \ \\                   /\n                            -------------------\n  \
    \ The figure above describes an SP network called \"My network\" that has\n  \
    \ several NNIs.  This network uses NNIs to:\n   o  increase its footprint by relying\
    \ on L3VPN partners.\n   o  connect its own data center services to the customer\
    \ IP VPN.\n   o  enable the customer to access its private resources located in\
    \ a\n      private cloud owned by some CSPs.\n"
- title: 6.15.1.  Defining an NNI with the Option A Flavor
  contents:
  - "6.15.1.  Defining an NNI with the Option A Flavor\n            AS A         \
    \                                 AS B\n     -------------------             \
    \            -------------------\n    /                   \\                 \
    \      /                   \\\n   |                     |                    \
    \ |                     |\n   |                 ++++++++ Inter-AS link ++++++++\
    \                 |\n   |                 +      +_______________+      +    \
    \             |\n   |                 +  (VRF1)---(VPN1)----(VRF1)  +        \
    \         |\n   |                 + ASBR +               + ASBR +            \
    \     |\n   |                 +  (VRF2)---(VPN2)----(VRF2)  +                \
    \ |\n   |                 +      +_______________+      +                 |\n\
    \   |                 ++++++++               ++++++++                 |\n   |\
    \                     |                     |                     |\n   |    \
    \                 |                     |                     |\n   |        \
    \             |                     |                     |\n   |            \
    \     ++++++++ Inter-AS link ++++++++                 |\n   |                \
    \ +      +_______________+      +                 |\n   |                 +  (VRF1)---(VPN1)----(VRF1)\
    \  +                 |\n   |                 + ASBR +               + ASBR + \
    \                |\n   |                 +  (VRF2)---(VPN2)----(VRF2)  +     \
    \            |\n   |                 +      +_______________+      +         \
    \        |\n   |                 ++++++++               ++++++++             \
    \    |\n   |                     |                     |                     |\n\
    \   |                     |                     |                     |\n    \\\
    \                   /                       \\                   /\n     -------------------\
    \                         -------------------\n   In option A, the two ASes are\
    \ connected to each other with physical\n   links on ASBRs.  For resiliency purposes,\
    \ there may be multiple\n   physical connections between the ASes.  A VPN connection\
    \ -- physical\n   or logical (on top of physical) -- is created for each VPN that\
    \ needs\n   to cross the AS boundary, thus providing a back-to-back VRF model.\n\
    \   From a service model's perspective, this VPN connection can be seen\n   as\
    \ a site.  Let's say that AS B wants to extend some VPN connections\n   for VPN\
    \ C on AS A.  The administrator of AS B can use this service\n   model to order\
    \ a site on AS A.  All connection scenarios could be\n   realized using the features\
    \ of the current model.  As an example, the\n   figure above shows two physical\
    \ connections that have logical\n   connections per VPN overlaid on them.  This\
    \ could be seen as a\n   dual-homed subVPN scenario.  Also, the administrator\
    \ of AS B will be\n   able to choose the appropriate routing protocol (e.g., E-BGP)\
    \ to\n   dynamically exchange routes between ASes.\n   This document assumes that\
    \ the option A NNI flavor SHOULD reuse the\n   existing VPN site modeling.\n \
    \  Example: a customer wants its CSP A to attach its virtual network N\n   to\
    \ an existing IP VPN (VPN1) that he has from L3VPN SP B.\n           CSP A   \
    \                           L3VPN SP B\n     -----------------               \
    \     -------------------\n    /                 \\                  /       \
    \            \\\n   |       |           |                |                   \
    \  |\n   |  VM --|       ++++++++  NNI    ++++++++                  |--- VPN1\n\
    \   |       |       +      +_________+      +                  |   Site#1\n  \
    \ |       |--------(VRF1)---(VPN1)--(VRF1)+                  |\n   |       | \
    \      + ASBR +         + ASBR +                  |\n   |       |       +    \
    \  +_________+      +                  |\n   |       |       ++++++++        \
    \ ++++++++                  |\n   |  VM --|           |                |     \
    \                |--- VPN1\n   |       |Virtual    |                |        \
    \             |   Site#2\n   |       |Network    |                |          \
    \           |\n   |  VM --|           |                |                     |---\
    \ VPN1\n   |       |           |                |                     |   Site#3\n\
    \    \\                 /                  \\                   /\n     -----------------\
    \                    -------------------\n                                   \
    \               |\n                                                  |\n     \
    \                                           VPN1\n                           \
    \                    Site#4\n   To create the VPN connectivity, the CSP or the\
    \ customer may use the\n   L3VPN service model that SP B exposes.  We could consider\
    \ that, as\n   the NNI is shared, the physical connection (bearer) between CSP\
    \ A and\n   SP B already exists.  CSP A may request through a service model the\n\
    \   creation of a new site with a single site-network-access\n   (single-homing\
    \ is used in the figure).  As a placement constraint,\n   CSP A may use the existing\
    \ bearer reference it has from SP A to force\n   the placement of the VPN NNI\
    \ on the existing link.  The XML below\n   illustrates a possible configuration\
    \ request to SP B:\n   <site>\n       <site-id>CSP_A_attachment</site-id>\n  \
    \     <location>\n           <city>NY</city>\n           <country-code>US</country-code>\n\
    \       </location>\n       <site-vpn-flavor>site-vpn-flavor-nni</site-vpn-flavor>\n\
    \       <routing-protocols>\n         <routing-protocol>\n           <type>bgp</type>\n\
    \           <bgp>\n               <autonomous-system>500</autonomous-system>\n\
    \               <address-family>ipv4</address-family>\n           </bgp>\n   \
    \      </routing-protocol>\n       </routing-protocols>\n       <site-network-accesses>\n\
    \        <site-network-access>\n         <site-network-access-id>CSP_A_VN1</site-network-access-id>\n\
    \          <ip-connection>\n           <ipv4>\n            <address-allocation-type>\n\
    \            static-address\n            </address-allocation-type>\n        \
    \    <addresses>\n             <provider-address>203.0.113.1</provider-address>\n\
    \             <customer-address>203.0.113.2</customer-address>\n             <mask>30</mask>\n\
    \            </addresses>\n           </ipv4>\n          </ip-connection>\n  \
    \        <service>\n           <svc-input-bandwidth>450000000</svc-input-bandwidth>\n\
    \           <svc-output-bandwidth>450000000</svc-output-bandwidth>\n         \
    \ </service>\n          <vpn-attachment>\n           <vpn-id>VPN1</vpn-id>\n \
    \          <site-role>any-to-any-role</site-role>\n          </vpn-attachment>\n\
    \        </site-network-access>\n       </site-network-accesses>\n       <management>\n\
    \           <type>customer-managed</type>\n       </management>\n   </site>\n\
    \   The case described above is different from a scenario using the\n   cloud-accesses\
    \ container, as the cloud-access provides a public cloud\n   access while this\
    \ example enables access to private resources located\n   in a CSP network.\n"
- title: 6.15.2.  Defining an NNI with the Option B Flavor
  contents:
  - "6.15.2.  Defining an NNI with the Option B Flavor\n           AS A          \
    \                                AS B\n     -------------------              \
    \           -------------------\n    /                   \\                  \
    \     /                   \\\n   |                     |                     |\
    \                     |\n   |                 ++++++++ Inter-AS link ++++++++\
    \                 |\n   |                 +      +_______________+      +    \
    \             |\n   |                 +      +               +      +        \
    \         |\n   |                 + ASBR +<---MP-BGP---->+ ASBR +            \
    \     |\n   |                 +      +               +      +                \
    \ |\n   |                 +      +_______________+      +                 |\n\
    \   |                 ++++++++               ++++++++                 |\n   |\
    \                     |                     |                     |\n   |    \
    \                 |                     |                     |\n   |        \
    \             |                     |                     |\n   |            \
    \     ++++++++ Inter-AS link ++++++++                 |\n   |                \
    \ +      +_______________+      +                 |\n   |                 +  \
    \    +               +      +                 |\n   |                 + ASBR +<---MP-BGP---->+\
    \ ASBR +                 |\n   |                 +      +               +    \
    \  +                 |\n   |                 +      +_______________+      + \
    \                |\n   |                 ++++++++               ++++++++     \
    \            |\n   |                     |                     |             \
    \        |\n   |                     |                     |                 \
    \    |\n    \\                   /                       \\                  \
    \ /\n     -------------------                         -------------------\n  \
    \ In option B, the two ASes are connected to each other with physical\n   links\
    \ on ASBRs.  For resiliency purposes, there may be multiple\n   physical connections\
    \ between the ASes.  The VPN \"connection\" between\n   ASes is done by exchanging\
    \ VPN routes through MP-BGP [RFC4760].\n   There are multiple flavors of implementations\
    \ of such an NNI.  For\n   example:\n   1.  The NNI is internal to the provider\
    \ and is situated between a\n       backbone and a data center.  There is enough\
    \ trust between the\n       domains to not filter the VPN routes.  So, all the\
    \ VPN routes are\n       exchanged.  RT filtering may be implemented to save some\n\
    \       unnecessary route states.\n   2.  The NNI is used between providers that\
    \ agreed to exchange VPN\n       routes for specific RTs only.  Each provider\
    \ is authorized to use\n       the RT values from the other provider.\n   3. \
    \ The NNI is used between providers that agreed to exchange VPN\n       routes\
    \ for specific RTs only.  Each provider has its own RT\n       scheme.  So, a\
    \ customer spanning the two networks will have\n       different RTs in each network\
    \ for a particular VPN.\n   Case 1 does not require any service modeling, as the\
    \ protocol enables\n   the dynamic exchange of necessary VPN routes.\n   Case\
    \ 2 requires that an RT-filtering policy on ASBRs be maintained.\n   From a service\
    \ modeling point of view, it is necessary to agree on\n   the list of RTs to authorize.\n\
    \   In Case 3, both ASes need to agree on the VPN RT to exchange, as well\n  \
    \ as how to map a VPN RT from AS A to the corresponding RT in AS B (and\n   vice\
    \ versa).\n   Those modelings are currently out of scope for this document.\n\
    \          CSP A                               L3VPN SP B\n     -----------------\
    \                    ------------------\n    /                 \\            \
    \      /                  \\\n   |       |           |                |      \
    \              |\n   |  VM --|       ++++++++   NNI    ++++++++              \
    \  |--- VPN1\n   |       |       +      +__________+      +                | \
    \  Site#1\n   |       |-------+      +          +      +                |\n  \
    \ |       |       + ASBR +<-MP-BGP->+ ASBR +                |\n   |       |  \
    \     +      +__________+      +                |\n   |       |       ++++++++\
    \          ++++++++                |\n   |  VM --|           |               \
    \ |                    |--- VPN1\n   |       |Virtual    |                |  \
    \                  |   Site#2\n   |       |Network    |                |     \
    \               |\n   |  VM --|           |                |                 \
    \   |--- VPN1\n   |       |           |                |                    |\
    \   Site#3\n    \\                 /                 |                    |\n\
    \     -----------------                  |                    |\n            \
    \                             \\                  /\n                        \
    \                  ------------------\n                                      \
    \             |\n                                                   |\n      \
    \                                            VPN1\n                          \
    \                       Site#4\n   The example above describes an NNI connection\
    \ between CSP A and SP\n   network B.  Both SPs do not trust themselves and use\
    \ a different RT\n   allocation policy.  So, in terms of implementation, the customer\
    \ VPN\n   has a different RT in each network (RT A in CSP A and RT B in SP\n \
    \  network B).  In order to connect the customer virtual network in\n   CSP A\
    \ to the customer IP VPN (VPN1) in SP network B, CSP A should\n   request that\
    \ SP network B open the customer VPN on the NNI (accept\n   the appropriate RT).\
    \  Who does the RT translation depends on the\n   agreement between the two SPs:\
    \ SP B may permit CSP A to request VPN\n   (RT) translation.\n"
- title: 6.15.3.  Defining an NNI with the Option C Flavor
  contents:
  - "6.15.3.  Defining an NNI with the Option C Flavor\n            AS A         \
    \                                  AS B\n     -------------------            \
    \              -------------------\n    /                   \\               \
    \         /                   \\\n   |                     |                 \
    \     |                     |\n   |                     |                    \
    \  |                     |\n   |                     |                      |\
    \                     |\n   |                 ++++++++ Multihop E-BGP ++++++++\
    \                 |\n   |                 +      +                +      +   \
    \              |\n   |                 +      +                +      +      \
    \           |\n   |                 + RGW  +<----MP-BGP---->+ RGW  +         \
    \        |\n   |                 +      +                +      +            \
    \     |\n   |                 +      +                +      +               \
    \  |\n   |                 ++++++++                ++++++++                 |\n\
    \   |                     |                      |                     |\n   |\
    \                     |                      |                     |\n   |   \
    \                  |                      |                     |\n   |      \
    \               |                      |                     |\n   |         \
    \            |                      |                     |\n   |            \
    \     ++++++++ Inter-AS link ++++++++                  |\n   |               \
    \  +      +_______________+      +                  |\n   |                 +\
    \      +               +      +                  |\n   |                 + ASBR\
    \ +               + ASBR +                  |\n   |                 +      + \
    \              +      +                  |\n   |                 +      +_______________+\
    \      +                  |\n   |                 ++++++++               ++++++++\
    \                  |\n   |                     |                      |      \
    \               |\n   |                     |                      |         \
    \            |\n   |                     |                      |            \
    \         |\n   |                 ++++++++ Inter-AS link ++++++++            \
    \      |\n   |                 +      +_______________+      +               \
    \   |\n   |                 +      +               +      +                  |\n\
    \   |                 + ASBR +               + ASBR +                  |\n   |\
    \                 +      +               +      +                  |\n   |   \
    \              +      +_______________+      +                  |\n   |      \
    \           ++++++++               ++++++++                  |\n   |         \
    \            |                      |                     |\n   |            \
    \         |                      |                     |\n    \\             \
    \      /                        \\                   /\n     -------------------\
    \                          -------------------\n   From a VPN service's perspective,\
    \ the option C NNI is very similar to\n   option B, as an MP-BGP session is used\
    \ to exchange VPN routes between\n   the ASes.  The difference is that the forwarding\
    \ plane and the\n   control plane are on different nodes, so the MP-BGP session\
    \ is\n   multihop between routing gateway (RGW) nodes.\n   From a VPN service's\
    \ point of view, modeling options B and C will be\n   identical.\n"
- title: 7.  Service Model Usage Example
  contents:
  - "7.  Service Model Usage Example\n   As explained in Section 5, this service model\
    \ is intended to be\n   instantiated at a management layer and is not intended\
    \ to be used\n   directly on network elements.  The management system serves as\
    \ a\n   central point of configuration of the overall service.\n   This section\
    \ provides an example of how a management system can use\n   this model to configure\
    \ an IP VPN service on network elements.\n   In this example, we want to achieve\
    \ the provisioning of a VPN service\n   for three sites using a Hub-and-Spoke\
    \ VPN service topology.  One of\n   the sites will be dual-homed, and load-sharing\
    \ is expected.\n   +-------------------------------------------------------------+\n\
    \   |   Hub_Site  ------ PE1               PE2 ------ Spoke_Site1 |\n   |    \
    \  |                   +----------------------------------+\n   |      |     \
    \              |\n   |      |                   +----------------------------------+\n\
    \   |   Hub_Site  ------ PE3               PE4 ------ Spoke_Site2 |\n   +-------------------------------------------------------------+\n\
    \   The following XML describes the overall simplified service\n   configuration\
    \ of this VPN.\n   <vpn-service>\n       <vpn-id>12456487</vpn-id>\n       <vpn-service-topology>hub-spoke</vpn-service-topology>\n\
    \   </vpn-service>\n   When receiving the request for provisioning the VPN service,\
    \ the\n   management system will internally (or through communication with\n \
    \  another OSS component) allocate VPN RTs.  In this specific case, two\n   RTs\
    \ will be allocated (100:1 for Hub and 100:2 for Spoke).  The\n   output below\
    \ describes the configuration of Spoke_Site1.\n   <site>\n       <site-id>Spoke_Site1</site-id>\n\
    \       <location>\n           <city>NY</city>\n           <country-code>US</country-code>\n\
    \       </location>\n       <routing-protocols>\n         <routing-protocol>\n\
    \           <type>bgp</type>\n           <bgp>\n               <autonomous-system>500</autonomous-system>\n\
    \               <address-family>ipv4</address-family>\n               <address-family>ipv6</address-family>\n\
    \           </bgp>\n         </routing-protocol>\n       </routing-protocols>\n\
    \       <site-network-accesses>\n        <site-network-access>\n         <site-network-access-id>Spoke_Site1</site-network-access-id>\n\
    \         <access-diversity>\n          <groups>\n           <group>\n       \
    \     <group-id>20</group-id>\n           </group>\n          </groups>\n    \
    \      <constraints>\n           <constraint>\n            <constraint-type>pe-diverse</constraint-type>\n\
    \            <target>\n             <group>\n              <group-id>10</group-id>\n\
    \             </group>\n            </target>\n           </constraint>\n    \
    \      </constraints>\n         </access-diversity>\n         <ip-connection>\n\
    \           <ipv4>\n            <address-allocation-type>\n            static-address\n\
    \            </address-allocation-type>\n            <addresses>\n           \
    \  <provider-address>203.0.113.254</provider-address>\n             <customer-address>203.0.113.2</customer-address>\n\
    \             <mask>24</mask>\n            </addresses>\n           </ipv4>\n\
    \           <ipv6>\n            <address-allocation-type>\n            static-address\n\
    \            </address-allocation-type>\n             <addresses>\n          \
    \    <provider-address>2001:db8::1</provider-address>\n              <customer-address>2001:db8::2</customer-address>\n\
    \              <mask>64</mask>\n             </addresses>\n           </ipv6>\n\
    \         </ip-connection>\n         <service>\n           <svc-input-bandwidth>450000000</svc-input-bandwidth>\n\
    \           <svc-output-bandwidth>450000000</svc-output-bandwidth>\n         </service>\n\
    \         <vpn-attachment>\n           <vpn-id>12456487</vpn-id>\n           <site-role>spoke-role</site-role>\n\
    \         </vpn-attachment>\n        </site-network-access>\n       </site-network-accesses>\n\
    \       <management>\n           <type>provider-managed</type>\n       </management>\n\
    \   </site>\n   When receiving the request for provisioning Spoke_Site1, the\n\
    \   management system MUST allocate network resources for this site.  It\n   MUST\
    \ first determine the target network elements to provision the\n   access, particularly\
    \ the PE router (and perhaps also an aggregation\n   switch).  As described in\
    \ Section 6.6, the management system SHOULD\n   use the location information and\
    \ SHOULD use the access-diversity\n   constraint to find the appropriate PE. \
    \ In this case, we consider\n   that Spoke_Site1 requires PE diversity with the\
    \ Hub and that the\n   management system allocates PEs based on the least distance.\
    \  Based\n   on the location information, the management system finds the\n  \
    \ available PEs in the area nearest the customer and picks one that\n   fits the\
    \ access-diversity constraint.\n   When the PE is chosen, the management system\
    \ needs to allocate\n   interface resources on the node.  One interface is selected\
    \ from the\n   pool of available PEs.  The management system can start provisioning\n\
    \   the chosen PE node via whatever means the management system prefers\n   (e.g.,\
    \ NETCONF, CLI).  The management system will check to see if a\n   VRF that fits\
    \ its needs is already present.  If not, it will\n   provision the VRF: the RD\
    \ will be derived from the internal\n   allocation policy model, and the RTs will\
    \ be derived from the VPN\n   policy configuration of the site (the management\
    \ system allocated\n   some RTs for the VPN).  As the site is a Spoke site (site-role),\
    \ the\n   management system knows which RTs must be imported and exported.  As\n\
    \   the site is provider-managed, some management RTs may also be added\n   (100:5000).\
    \  Standard provider VPN policies MAY also be added in the\n   configuration.\n\
    \   Example of generated PE configuration:\n   ip vrf Customer1\n    export-map\
    \ STD-CUSTOMER-EXPORT      <---- Standard SP configuration\n    route-distinguisher\
    \ 100:3123234324\n    route-target import 100:1\n    route-target import 100:5000\
    \        <---- Standard SP configuration\n    route-target export 100:2      \
    \              for provider-managed CE\n   !\n   When the VRF has been provisioned,\
    \ the management system can start\n   configuring the access on the PE using the\
    \ allocated interface\n   information.  IP addressing is chosen by the management\
    \ system.  One\n   address will be picked from an allocated subnet for the PE,\
    \ and\n   another will be used for the CE configuration.  Routing protocols\n\
    \   will also be configured between the PE and CE; because this model is\n   provider-managed,\
    \ the choices are left to the SP.  BGP was chosen for\n   this example.  This\
    \ choice is independent of the routing protocol\n   chosen by the customer.  BGP\
    \ will be used to configure the CE-to-LAN\n   connection as requested in the service\
    \ model.  Peering addresses will\n   be derived from those of the connection.\
    \  As the CE is provider-\n   managed, the CE's AS number can be automatically\
    \ allocated by the\n   management system.  Standard configuration templates provided\
    \ by the\n   SP may also be added.\n   Example of generated PE configuration:\n\
    \   interface Ethernet1/1/0.10\n    encapsulation dot1q 10\n    ip vrf forwarding\
    \ Customer1\n    ip address 198.51.100.1 255.255.255.252 <---- Comes from\n  \
    \                                                 automated allocation\n    ipv6\
    \ address 2001:db8::10:1/64\n    ip access-group STD-PROTECT-IN     <---- Standard\
    \ SP config\n   !\n   router bgp 100\n    address-family ipv4 vrf Customer1\n\
    \     neighbor 198.51.100.2 remote-as 65000   <---- Comes from\n             \
    \                                       automated allocation\n     neighbor 198.51.100.2\
    \ route-map STD in  <---- Standard SP config\n     neighbor 198.51.100.2 filter-list\
    \ 10 in <---- Standard SP config\n   !\n    address-family ipv6 vrf Customer1\n\
    \     neighbor 2001:db8::0a10:2 remote-as 65000   <---- Comes from\n         \
    \                                           automated allocation\n     neighbor\
    \ 2001:db8::0a10:2 route-map STD in  <---- Standard SP\n                     \
    \                                     config\n     neighbor 2001:db8::0a10:2 filter-list\
    \ 10 in <---- Standard SP\n                                                  \
    \        config\n   !\n   ip route vrf Customer1 192.0.2.1 255.255.255.255 198.51.100.2\n\
    \   ! Static route for provider administration of CE\n   !\n   As the CE router\
    \ is not reachable at this stage, the management\n   system can produce a complete\
    \ CE configuration that can be manually\n   uploaded to the node before sending\
    \ the CE configuration to the\n   customer premises.  The CE configuration will\
    \ be built in the same\n   way as the PE would be configured.  Based on the CE\
    \ type\n   (vendor/model) allocated to the customer as well as the bearer\n  \
    \ information, the management system knows which interface must be\n   configured\
    \ on the CE.  PE-CE link configuration is expected to be\n   handled automatically\
    \ using the SP OSS, as both resources are managed\n   internally.  CE-to-LAN-interface\
    \ parameters such as IP addressing are\n   derived from the ip-connection container,\
    \ taking into account how the\n   management system distributes addresses between\
    \ the PE and CE within\n   the subnet.  This will allow a plug-and-play configuration\
    \ for the CE\n   to be created.\n   Example of generated CE configuration:\n \
    \  interface Loopback10\n    description \"Administration\"\n    ip address 192.0.2.1\
    \ 255.255.255.255\n   !\n   interface FastEthernet10\n    description \"WAN\"\n\
    \    ip address 198.51.100.2 255.255.255.252 <---- Comes from\n              \
    \                                     automated allocation\n    ipv6 address 2001:db8::0a10:2/64\n\
    \   !\n   interface FastEthernet11\n    description \"LAN\"\n    ip address 203.0.113.254\
    \ 255.255.255.0 <---- Comes from the\n                                       \
    \        ip-connection container\n    ipv6 address 2001:db8::1/64\n   !\n   router\
    \ bgp 65000\n    address-family ipv4\n     redistribute static route-map STATIC2BGP\
    \ <---- Standard SP\n                                                       configuration\n\
    \     neighbor 198.51.100.1 remote-as 100     <---- Comes from\n             \
    \                                    automated allocation\n     neighbor 203.0.113.2\
    \ remote-as 500     <---- Comes from the\n                                   \
    \              ip-connection container\n    address-family ipv6\n     redistribute\
    \ static route-map STATIC2BGP <---- Standard SP\n                            \
    \                           configuration\n     neighbor 2001:db8::0a10:1 remote-as\
    \ 100     <---- Comes from\n                                                 automated\
    \ allocation\n     neighbor 2001:db8::2 remote-as 500     <---- Comes from the\n\
    \                                                 ip-connection container\n  \
    \ !\n   route-map STATIC2BGP permit 10\n    match tag 10\n   !\n"
- title: 8.  Interaction with Other YANG Modules
  contents:
  - "8.  Interaction with Other YANG Modules\n   As expressed in Section 5, this service\
    \ model is intended to be\n   instantiated in a management system and not directly\
    \ on network\n   elements.\n   The management system's role will be to configure\
    \ the network\n   elements.  The management system may be modular, so the component\n\
    \   instantiating the service model (let's call it \"service component\")\n  \
    \ and the component responsible for network element configuration\n   (let's call\
    \ it \"configuration component\") may be different.\n             l3vpn-svc  \
    \       |\n               Model           |\n                               |\n\
    \                    +---------------------+\n                    |  Service component\
    \  | Service datastore\n                    +---------------------+\n        \
    \                       |\n                               |\n                \
    \    +---------------------+\n               +----|  Config component   |------+\n\
    \              /     +---------------------+       \\   Network\n            \
    \ /            /            \\           \\  Configuration\n            /    \
    \        /              \\           \\ models\n           /            /    \
    \            \\           \\\n   ++++++++         ++++++++           ++++++++\
    \       ++++++++\n   + CE A + ------- + PE A +           + PE B + ----- + CE B\
    \ + Config\n   ++++++++         ++++++++           ++++++++       ++++++++ datastore\n\
    \            Site A                              Site B\n   In the previous sections,\
    \ we provided some examples of the\n   translation of service provisioning requests\
    \ to router configuration\n   lines.  In the NETCONF/YANG ecosystem, we expect\
    \ NETCONF/YANG to be\n   used between the configuration component and network\
    \ elements to\n   configure the requested services on those elements.\n   In this\
    \ framework, specifications are expected to provide specific\n   YANG modeling\
    \ of service components on network elements.  There will\n   be a strong relationship\
    \ between the abstracted view provided by this\n   service model and the detailed\
    \ configuration view that will be\n   provided by specific configuration models\
    \ for network elements.\n   The authors of this document anticipate definitions\
    \ of YANG models\n   for the network elements listed below.  Note that this list\
    \ is not\n   exhaustive:\n   o  VRF definition, including VPN policy expression.\n\
    \   o  Physical interface.\n   o  IP layer (IPv4, IPv6).\n   o  QoS: classification,\
    \ profiles, etc.\n   o  Routing protocols: support of configuration of all protocols\n\
    \      listed in the document, as well as routing policies associated\n      with\
    \ those protocols.\n   o  Multicast VPN.\n   o  Network address translation.\n\
    \   Example of a VPN site request at the service level, using this model:\n  \
    \ <site>\n    <site-id>Site A</site-id>\n    <site-network-accesses>\n     <site-network-access>\n\
    \      <ip-connection>\n       <ipv4>\n        <address-allocation-type>\n   \
    \     static-address\n        </address-allocation-type>\n        <addresses>\n\
    \         <provider-address>203.0.113.254</provider-address>\n         <customer-address>203.0.113.2</customer-address>\n\
    \         <mask>24</mask>\n        </addresses>\n       </ipv4>\n      </ip-connection>\n\
    \      <vpn-attachment>\n       <vpn-policy-id>VPNPOL1</vpn-policy-id>\n     \
    \ </vpn-attachment>\n     </site-network-access>\n    </site-network-accesses>\n\
    \    <routing-protocols>\n     <routing-protocol>\n      <type>static</type>\n\
    \      <static>\n       <cascaded-lan-prefixes>\n        <ipv4-lan-prefixes>\n\
    \         <lan>198.51.100.0/30</lan>\n         <next-hop>203.0.113.2</next-hop>\n\
    \        </ipv4-lan-prefixes>\n       </cascaded-lan-prefixes>\n      </static>\n\
    \     </routing-protocol>\n    </routing-protocols>\n    <management>\n     <type>customer-managed</type>\n\
    \    </management>\n    <vpn-policies>\n     <vpn-policy>\n      <vpn-policy-id>VPNPOL1</vpn-policy-id>\n\
    \      <entries>\n       <id>1</id>\n        <vpn>\n         <vpn-id>VPN1</vpn-id>\n\
    \         <site-role>any-to-any-role</site-role>\n        </vpn>\n       </entries>\n\
    \     </vpn-policy>\n    </vpn-policies>\n   </site>\n   In the service example\
    \ above, the service component is expected to\n   request that the configuration\
    \ component of the management system\n   provide the configuration of the service\
    \ elements.  If we consider\n   that the service component selected a PE (PE A)\
    \ as the target PE for\n   the site, the configuration component will need to\
    \ push the\n   configuration to PE A.  The configuration component will use several\n\
    \   YANG data models to define the configuration to be applied to PE A.\n   The\
    \ XML configuration of PE A might look like this:\n   <if:interfaces>\n      \
    \  <if:interface>\n         <if:name>eth0</if:name>\n         <if:type>ianaift:ethernetCsmacd</if:type>\n\
    \         <if:description>\n          Link to CE A.\n         </if:description>\n\
    \         <ip:ipv4>\n          <ip:address>\n           <ip:ip>203.0.113.254</ip:ip>\n\
    \           <ip:prefix-length>24</ip:prefix-length>\n          </ip:address>\n\
    \          <ip:forwarding>true</ip:forwarding>\n         </ip:ipv4>\n        </if:interface>\n\
    \   </if:interfaces>\n   <rt:routing>\n       <rt:routing-instance>\n        \
    \ <rt:name>VRF_CustA</rt:name>\n         <rt:type>l3vpn-network:vrf</rt:type>\n\
    \         <rt:description>VRF for Customer A</rt:description>\n         <l3vpn-network:route-distinguisher>\n\
    \         100:1546542343\n         </l3vpn-network:route-distinguisher>\n    \
    \     <l3vpn-network:import-rt>100:1</l3vpn-network:import-rt>\n         <l3vpn-network:export-rt>100:1</l3vpn-network:export-rt>\n\
    \         <rt:interfaces>\n          <rt:interface>\n           <rt:name>eth0</rt:name>\n\
    \          </rt:interface>\n         </rt:interfaces>\n         <rt:routing-protocols>\n\
    \          <rt:routing-protocol>\n           <rt:type>rt:static</rt:type>\n  \
    \         <rt:name>st0</rt:name>\n           <rt:static-routes>\n            <v4ur:ipv4>\n\
    \             <v4ur:route>\n              <v4ur:destination-prefix>\n        \
    \      198.51.100.0/30\n              </v4ur:destination-prefix>\n           \
    \   <v4ur:next-hop>\n               <v4ur:next-hop-address>\n               203.0.113.2\n\
    \               </v4ur:next-hop-address>\n              </v4ur:next-hop>\n   \
    \          </v4ur:route>\n            </v4ur:ipv4>\n           </rt:static-routes>\n\
    \          </rt:routing-protocol>\n         </rt:routing-protocols>\n        </rt:routing-instance>\n\
    \   </rt:routing>\n"
- title: 9.  YANG Module
  contents:
  - "9.  YANG Module\n   <CODE BEGINS>\n   file \"ietf-l3vpn-svc@2017-01-27.yang\"\
    \n   module ietf-l3vpn-svc {\n    namespace \"urn:ietf:params:xml:ns:yang:ietf-l3vpn-svc\"\
    ;\n    prefix l3vpn-svc;\n    import ietf-inet-types {\n     prefix inet;\n  \
    \  }\n    import ietf-yang-types {\n     prefix yang;\n    }\n    organization\n\
    \     \"IETF L3SM Working Group\";\n    contact\n     \"WG List: <mailto:l3sm@ietf.org>\n\
    \     Editor:\n      L3SM WG\n     Chairs:\n      Adrian Farrel, Qin Wu\n    \
    \ \";\n    description\n     \"This YANG module defines a generic service configuration\n\
    \     model for Layer 3 VPNs.  This model is common across all\n     vendor implementations.\"\
    ;\n    revision 2017-01-27 {\n     description\n      \"Initial document.\";\n\
    \     reference\n       \"RFC 8049.\";\n    }\n    /* Features */\n    feature\
    \ cloud-access {\n     description\n      \"Allows the VPN to connect to a CSP.\"\
    ;\n    }\n    feature multicast {\n     description\n      \"Enables multicast\
    \ capabilities in a VPN.\";\n    }\n    feature ipv4 {\n     description\n   \
    \   \"Enables IPv4 support in a VPN.\";\n    }\n    feature ipv6 {\n     description\n\
    \      \"Enables IPv6 support in a VPN.\";\n    }\n    feature carrierscarrier\
    \ {\n     description\n      \"Enables support of CsC.\";\n    }\n    feature\
    \ extranet-vpn {\n     description\n      \"Enables support of extranet VPNs.\"\
    ;\n    }\n    feature site-diversity {\n     description\n      \"Enables support\
    \ of site diversity constraints.\";\n    }\n    feature encryption {\n     description\n\
    \      \"Enables support of encryption.\";\n    }\n    feature qos {\n     description\n\
    \      \"Enables support of classes of services.\";\n    }\n    feature qos-custom\
    \ {\n     description\n      \"Enables support of the custom QoS profile.\";\n\
    \    }\n    feature rtg-bgp {\n     description\n      \"Enables support of the\
    \ BGP routing protocol.\";\n    }\n    feature rtg-rip {\n     description\n \
    \     \"Enables support of the RIP routing protocol.\";\n    }\n    feature rtg-ospf\
    \ {\n     description\n      \"Enables support of the OSPF routing protocol.\"\
    ;\n    }\n    feature rtg-ospf-sham-link {\n     description\n      \"Enables\
    \ support of OSPF sham links.\";\n    }\n    feature rtg-vrrp {\n     description\n\
    \      \"Enables support of the VRRP routing protocol.\";\n    }\n    feature\
    \ fast-reroute {\n     description\n      \"Enables support of Fast Reroute.\"\
    ;\n    }\n    feature bfd {\n     description\n      \"Enables support of BFD.\"\
    ;\n    }\n    feature always-on {\n     description\n      \"Enables support of\
    \ the 'always-on' access constraint.\";\n    }\n    feature requested-type {\n\
    \     description\n      \"Enables support of the 'requested-type' access constraint.\"\
    ;\n    }\n    feature bearer-reference {\n     description\n      \"Enables support\
    \ of the 'bearer-reference' access constraint.\";\n    }\n    /* Typedefs */\n\
    \    typedef svc-id {\n     type string;\n     description\n      \"Defines a\
    \ type of service component identifier.\";\n    }\n    typedef template-id {\n\
    \     type string;\n     description\n      \"Defines a type of service template\
    \ identifier.\";\n    }\n    typedef address-family {\n     type enumeration {\n\
    \      enum ipv4 {\n       description\n        \"IPv4 address family.\";\n  \
    \    }\n      enum ipv6 {\n       description\n        \"IPv6 address family.\"\
    ;\n      }\n     }\n     description\n      \"Defines a type for the address family.\"\
    ;\n    }\n    /* Identities */\n    identity site-network-access-type {\n    \
    \ description\n      \"Base identity for site-network-access type.\";\n    }\n\
    \    identity point-to-point {\n     base site-network-access-type;\n     description\n\
    \      \"Identity for point-to-point connection.\";\n    }\n    identity multipoint\
    \ {\n     base site-network-access-type;\n     description\n      \"Identity for\
    \ multipoint connection.\n      Example: Ethernet broadcast segment.\";\n    }\n\
    \    identity placement-diversity {\n     description\n      \"Base identity for\
    \ site placement constraints.\";\n    }\n    identity bearer-diverse {\n     base\
    \ placement-diversity;\n     description\n      \"Identity for bearer diversity.\n\
    \      The bearers should not use common elements.\";\n    }\n    identity pe-diverse\
    \ {\n     base placement-diversity;\n     description\n      \"Identity for PE\
    \ diversity.\";\n    }\n    identity pop-diverse {\n     base placement-diversity;\n\
    \     description\n      \"Identity for POP diversity.\";\n    }\n    identity\
    \ linecard-diverse {\n     base placement-diversity;\n     description\n     \
    \ \"Identity for linecard diversity.\";\n    }\n    identity same-pe {\n     base\
    \ placement-diversity;\n     description\n      \"Identity for having sites connected\
    \ on the same PE.\";\n    }\n    identity same-bearer {\n     base placement-diversity;\n\
    \     description\n      \"Identity for having sites connected using the same\
    \ bearer.\";\n    }\n    identity customer-application {\n     description\n \
    \     \"Base identity for customer application.\";\n    }\n    identity web {\n\
    \     base customer-application;\n     description\n      \"Identity for Web application\
    \ (e.g., HTTP, HTTPS).\";\n    }\n    identity mail {\n     base customer-application;\n\
    \     description\n      \"Identity for mail application.\";\n    }\n    identity\
    \ file-transfer {\n     base customer-application;\n     description\n      \"\
    Identity for file transfer application (e.g., FTP, SFTP).\";\n    }\n    identity\
    \ database {\n     base customer-application;\n     description\n      \"Identity\
    \ for database application.\";\n    }\n    identity social {\n     base customer-application;\n\
    \     description\n      \"Identity for social-network application.\";\n    }\n\
    \    identity games {\n     base customer-application;\n     description\n   \
    \   \"Identity for gaming application.\";\n    }\n    identity p2p {\n     base\
    \ customer-application;\n     description\n      \"Identity for peer-to-peer application.\"\
    ;\n    }\n    identity network-management {\n     base customer-application;\n\
    \     description\n      \"Identity for management application\n      (e.g., Telnet,\
    \ syslog, SNMP).\";\n    }\n    identity voice {\n     base customer-application;\n\
    \     description\n      \"Identity for voice application.\";\n    }\n    identity\
    \ video {\n     base customer-application;\n     description\n      \"Identity\
    \ for video conference application.\";\n    }\n    identity site-vpn-flavor {\n\
    \     description\n      \"Base identity for the site VPN service flavor.\";\n\
    \    }\n    identity site-vpn-flavor-single {\n     base site-vpn-flavor;\n  \
    \   description\n      \"Base identity for the site VPN service flavor.\n    \
    \  Used when the site belongs to only one VPN.\";\n    }\n    identity site-vpn-flavor-multi\
    \ {\n     base site-vpn-flavor;\n     description\n      \"Base identity for the\
    \ site VPN service flavor.\n      Used when a logical connection of a site\n \
    \     belongs to multiple VPNs.\";\n    }\n    identity site-vpn-flavor-sub {\n\
    \     base site-vpn-flavor;\n     description\n      \"Base identity for the site\
    \ VPN service flavor.\n      Used when a site has multiple logical connections.\n\
    \      Each connection may belong to different multiple VPNs.\";\n    }\n    identity\
    \ site-vpn-flavor-nni {\n     base site-vpn-flavor;\n     description\n      \"\
    Base identity for the site VPN service flavor.\n      Used to describe an NNI\
    \ option A connection.\";\n    }\n    identity management {\n     description\n\
    \      \"Base identity for site management scheme.\";\n    }\n    identity co-managed\
    \ {\n     base management;\n     description\n      \"Base identity for co-managed\
    \ site.\";\n    }\n    identity customer-managed {\n     base management;\n  \
    \   description\n      \"Base identity for customer-managed site.\";\n    }\n\
    \    identity provider-managed {\n     base management;\n     description\n  \
    \    \"Base identity for provider-managed site.\";\n    }\n    identity address-allocation-type\
    \ {\n     description\n      \"Base identity for address-allocation-type for PE-CE\
    \ link.\";\n    }\n    identity provider-dhcp {\n     base address-allocation-type;\n\
    \     description\n      \"Provider network provides DHCP service to customer.\"\
    ;\n    }\n    identity provider-dhcp-relay {\n     base address-allocation-type;\n\
    \     description\n      \"Provider network provides DHCP relay service to customer.\"\
    ;\n    }\n    identity provider-dhcp-slaac {\n     base address-allocation-type;\n\
    \     description\n      \"Provider network provides DHCP service to customer,\n\
    \      as well as SLAAC.\";\n    }\n    identity static-address {\n     base address-allocation-type;\n\
    \     description\n      \"Provider-to-customer addressing is static.\";\n   \
    \ }\n    identity slaac {\n     base address-allocation-type;\n     description\n\
    \      \"Use IPv6 SLAAC.\";\n    }\n    identity site-role {\n     description\n\
    \      \"Base identity for site type.\";\n    }\n    identity any-to-any-role\
    \ {\n     base site-role;\n     description\n      \"Site in an any-to-any IP\
    \ VPN.\";\n    }\n    identity spoke-role {\n     base site-role;\n     description\n\
    \      \"Spoke site in a Hub-and-Spoke IP VPN.\";\n    }\n    identity hub-role\
    \ {\n     base site-role;\n     description\n      \"Hub site in a Hub-and-Spoke\
    \ IP VPN.\";\n    }\n    identity vpn-topology {\n     description\n      \"Base\
    \ identity for VPN topology.\";\n    }\n    identity any-to-any {\n     base vpn-topology;\n\
    \     description\n      \"Identity for any-to-any VPN topology.\";\n    }\n \
    \   identity hub-spoke {\n     base vpn-topology;\n     description\n      \"\
    Identity for Hub-and-Spoke VPN topology.\";\n    }\n    identity hub-spoke-disjoint\
    \ {\n     base vpn-topology;\n     description\n      \"Identity for Hub-and-Spoke\
    \ VPN topology\n      where Hubs cannot communicate with each other.\";\n    }\n\
    \    identity multicast-tree-type {\n     description\n      \"Base identity for\
    \ multicast tree type.\";\n    }\n    identity ssm-tree-type {\n     base multicast-tree-type;\n\
    \     description\n      \"Identity for SSM tree type.\";\n    }\n    identity\
    \ asm-tree-type {\n     base multicast-tree-type;\n     description\n      \"\
    Identity for ASM tree type.\";\n    }\n    identity bidir-tree-type {\n     base\
    \ multicast-tree-type;\n     description\n      \"Identity for bidirectional tree\
    \ type.\";\n    }\n    identity multicast-rp-discovery-type {\n     description\n\
    \      \"Base identity for RP discovery type.\";\n    }\n    identity auto-rp\
    \ {\n     base multicast-rp-discovery-type;\n     description\n      \"Base identity\
    \ for Auto-RP discovery type.\";\n    }\n    identity static-rp {\n     base multicast-rp-discovery-type;\n\
    \     description\n      \"Base identity for static type.\";\n    }\n    identity\
    \ bsr-rp {\n     base multicast-rp-discovery-type;\n     description\n      \"\
    Base identity for BSR discovery type.\";\n    }\n    identity routing-protocol-type\
    \ {\n     description\n      \"Base identity for routing protocol type.\";\n \
    \   }\n    identity ospf {\n     base routing-protocol-type;\n     description\n\
    \      \"Identity for OSPF protocol type.\";\n    }\n    identity bgp {\n    \
    \ base routing-protocol-type;\n     description\n      \"Identity for BGP protocol\
    \ type.\";\n    }\n    identity static {\n     base routing-protocol-type;\n \
    \    description\n      \"Identity for static routing protocol type.\";\n    }\n\
    \    identity rip {\n     base routing-protocol-type;\n     description\n    \
    \  \"Identity for RIP protocol type.\";\n    }\n    identity vrrp {\n     base\
    \ routing-protocol-type;\n     description\n      \"Identity for VRRP protocol\
    \ type.\n      This is to be used when LANs are directly connected\n      to PE\
    \ routers.\";\n    }\n    identity direct {\n     base routing-protocol-type;\n\
    \     description\n      \"Identity for direct protocol type.\";\n    }\n    identity\
    \ protocol-type {\n     description\n      \"Base identity for protocol field\
    \ type.\";\n    }\n    identity tcp {\n     base protocol-type;\n     description\n\
    \      \"TCP protocol type.\";\n    }\n    identity udp {\n     base protocol-type;\n\
    \     description\n      \"UDP protocol type.\";\n    }\n    identity icmp {\n\
    \     base protocol-type;\n     description\n      \"ICMP protocol type.\";\n\
    \    }\n    identity icmp6 {\n     base protocol-type;\n     description\n   \
    \   \"ICMPv6 protocol type.\";\n    }\n    identity gre {\n     base protocol-type;\n\
    \     description\n      \"GRE protocol type.\";\n    }\n    identity ipip {\n\
    \     base protocol-type;\n     description\n      \"IP-in-IP protocol type.\"\
    ;\n    }\n    identity hop-by-hop {\n     base protocol-type;\n     description\n\
    \      \"Hop-by-Hop IPv6 header type.\";\n    }\n    identity routing {\n    \
    \ base protocol-type;\n     description\n      \"Routing IPv6 header type.\";\n\
    \    }\n    identity esp {\n     base protocol-type;\n     description\n     \
    \ \"ESP header type.\";\n    }\n    identity ah {\n     base protocol-type;\n\
    \     description\n      \"AH header type.\";\n    }\n    /* Groupings */\n  \
    \  grouping vpn-service-cloud-access {\n     container cloud-accesses {\n    \
    \ if-feature cloud-access;\n     list cloud-access {\n      key cloud-identifier;\n\
    \      leaf cloud-identifier {\n       type string;\n       description\n    \
    \    \"Identification of cloud service.\n        Local administration meaning.\"\
    ;\n      }\n      choice list-flavor {\n       case permit-any {\n        leaf\
    \ permit-any {\n         type empty;\n         description\n          \"Allows\
    \ all sites.\";\n        }\n       }\n       case deny-any-except {\n        leaf-list\
    \ permit-site {\n         type leafref {\n          path \"/l3vpn-svc/sites/site/site-id\"\
    ;\n         }\n         description\n          \"Site ID to be authorized.\";\n\
    \        }\n       }\n       case permit-any-except {\n        leaf-list deny-site\
    \ {\n         type leafref {\n          path \"/l3vpn-svc/sites/site/site-id\"\
    ;\n         }\n         description\n          \"Site ID to be denied.\";\n  \
    \      }\n       }\n       description\n        \"Choice for cloud access policy.\"\
    ;\n      }\n      container authorized-sites {\n       list authorized-site {\n\
    \        key site-id;\n        leaf site-id {\n         type leafref {\n     \
    \     path \"/l3vpn-svc/sites/site/site-id\";\n         }\n         description\n\
    \          \"Site ID.\";\n        }\n        description\n         \"List of authorized\
    \ sites.\";\n       }\n       description\n        \"Configuration of authorized\
    \ sites.\";\n      }\n      container denied-sites {\n       list denied-site\
    \ {\n        key site-id;\n        leaf site-id {\n         type leafref {\n \
    \         path \"/l3vpn-svc/sites/site/site-id\";\n         }\n         description\n\
    \          \"Site ID.\";\n        }\n        description\n         \"List of denied\
    \ sites.\";\n       }\n       description\n        \"Configuration of denied sites.\"\
    ;\n      }\n      container address-translation {\n       container nat44 {\n\
    \        leaf enabled {\n         type boolean;\n         default false;\n   \
    \      description\n          \"Controls whether or not address translation is\
    \ required.\";\n        }\n        leaf nat44-customer-address {\n         type\
    \ inet:ipv4-address;\n         must \"../enabled = 'true'\" {\n          description\n\
    \           \"Applicable only if address translation is enabled.\";\n        \
    \ }\n         description\n          \"Address to be used for translation.\n \
    \         This is to be used if the customer is\n          providing the address.\"\
    ;\n        }\n        description\n         \"IPv4-to-IPv4 translation.\";\n \
    \      }\n       description\n        \"Container for NAT.\";\n      }\n     \
    \ description\n       \"Cloud access configuration.\";\n     }\n      description\n\
    \       \"Container for cloud access configurations.\";\n     }\n     description\n\
    \      \"Grouping for VPN cloud definition.\";\n    }\n    grouping multicast-rp-group-cfg\
    \ {\n     choice group-format {\n      case startend {\n       leaf group-start\
    \ {\n        type inet:ip-address;\n        description\n         \"First group\
    \ address.\";\n       }\n       leaf group-end {\n        type inet:ip-address;\n\
    \        description\n         \"Last group address.\";\n       }\n      }\n \
    \     case singleaddress {\n       leaf group-address {\n        type inet:ip-address;\n\
    \        description\n         \"Group address.\";\n       }\n      }\n      description\n\
    \       \"Choice for group format.\";\n     }\n     description\n      \"Definition\
    \ of groups for RP-to-group mapping.\";\n    }\n    grouping vpn-service-multicast\
    \ {\n     container multicast {\n      if-feature multicast;\n      leaf enabled\
    \ {\n       type boolean;\n       default false;\n       description\n       \
    \ \"Enables multicast.\";\n      }\n      container customer-tree-flavors {\n\
    \       leaf-list tree-flavor {\n         type identityref {\n          base multicast-tree-type;\n\
    \         }\n         description\n          \"Type of tree to be used.\";\n \
    \      }\n       description\n        \"Type of trees used by customer.\";\n \
    \     }\n      container rp {\n       container rp-group-mappings {\n        list\
    \ rp-group-mapping {\n         key id;\n         leaf id {\n          type uint16;\n\
    \          description\n           \"Unique identifier for the mapping.\";\n \
    \        }\n         container provider-managed {\n          leaf enabled {\n\
    \           type boolean;\n           default false;\n           description\n\
    \            \"Set to true if the RP must be a provider-managed node.\n      \
    \      Set to false if it is a customer-managed node.\";\n          }\n      \
    \    leaf rp-redundancy {\n           when \"../enabled = 'true'\" {\n       \
    \     description\n             \"Relevant when the RP is provider-managed.\"\
    ;\n           }\n           type boolean;\n           default false;\n       \
    \    description\n            \"If true, a redundancy mechanism for the RP is\
    \ required.\";\n          }\n          leaf optimal-traffic-delivery {\n     \
    \      when \"../enabled = 'true'\" {\n            description\n             \"\
    Relevant when the RP is provider-managed.\";\n           }\n           type boolean;\n\
    \           default false;\n           description\n            \"If true, the\
    \ SP must ensure that\n            traffic uses an optimal path.\";\n        \
    \  }\n          description\n           \"Parameters for a provider-managed RP.\"\
    ;\n         }\n         leaf rp-address {\n          when \"../provider-managed/enabled\
    \ = 'false'\" {\n           description\n            \"Relevant when the RP is\
    \ provider-managed.\";\n          }\n          type inet:ip-address;\n       \
    \   description\n           \"Defines the address of the RP.\n           Used\
    \ if the RP is customer-managed.\";\n         }\n         container groups {\n\
    \          list group {\n           key id;\n           leaf id {\n          \
    \  type uint16;\n            description\n             \"Identifier for the group.\"\
    ;\n           }\n           uses multicast-rp-group-cfg;\n           description\n\
    \            \"List of groups.\";\n          }\n          description\n      \
    \     \"Multicast groups associated with the RP.\";\n         }\n         description\n\
    \          \"List of RP-to-group mappings.\";\n        }\n        description\n\
    \         \"RP-to-group mappings.\";\n       }\n       container rp-discovery\
    \ {\n        leaf rp-discovery-type {\n         type identityref {\n         \
    \ base multicast-rp-discovery-type;\n         }\n         default static-rp;\n\
    \         description\n          \"Type of RP discovery used.\";\n        }\n\
    \        container bsr-candidates {\n         when \"../rp-discovery-type = 'bsr-rp'\"\
    \ {\n          description\n           \"Only applicable if discovery type is\
    \ BSR-RP.\";\n         }\n         leaf-list bsr-candidate-address {\n       \
    \   type inet:ip-address;\n          description\n           \"Address of BSR\
    \ candidate.\";\n         }\n         description\n          \"Customer BSR candidate's\
    \ address.\";\n        }\n        description\n         \"RP discovery parameters.\"\
    ;\n       }\n       description\n        \"RP parameters.\";\n      }\n      description\n\
    \       \"Multicast global parameters for the VPN service.\";\n     }\n     description\n\
    \      \"Grouping for multicast VPN definition.\";\n    }\n    grouping vpn-service-mpls\
    \ {\n     leaf carrierscarrier {\n      if-feature carrierscarrier;\n      type\
    \ boolean;\n      default false;\n      description\n       \"The VPN is using\
    \ CsC, and so MPLS is required.\";\n     }\n     description\n      \"Grouping\
    \ for MPLS CsC definition.\";\n    }\n    grouping customer-location-info {\n\
    \     container locations {\n      list location {\n       key location-id;\n\
    \       leaf location-id {\n        type svc-id;\n        description\n      \
    \   \"Identifier for a particular location.\";\n       }\n       leaf address\
    \ {\n        type string;\n        description\n         \"Address (number and\
    \ street) of the site.\";\n       }\n       leaf postal-code {\n        type string;\n\
    \        description\n         \"Postal code of the site.\";\n       }\n     \
    \  leaf state {\n        type string;\n        description\n         \"State of\
    \ the site.  This leaf can also be used to describe\n         a region for a country\
    \ that does not have states.\";\n       }\n       leaf city {\n        type string;\n\
    \        description\n         \"City of the site.\";\n       }\n       leaf country-code\
    \ {\n        type string {\n         pattern '[A-Z]{2}';\n        }\n        description\n\
    \         \"Country of the site.\n         Expressed as ISO ALPHA-2 code.\";\n\
    \       }\n       description\n        \"Location of the site.\";\n       }\n\
    \       description\n        \"List of locations for the site.\";\n     }\n  \
    \   description\n      \"This grouping defines customer location parameters.\"\
    ;\n    }\n    grouping site-group {\n     container groups {\n      list group\
    \ {\n       key group-id;\n       leaf group-id {\n        type string;\n    \
    \    description\n         \"Group-id the site belongs to.\";\n       }\n    \
    \   description\n        \"List of group-ids.\";\n      }\n      description\n\
    \       \"Groups the site or site-network-access belongs to.\";\n     }\n    \
    \ description\n      \"Grouping definition to assign\n      group-ids to site\
    \ or site-network-access.\";\n    }\n    grouping site-diversity {\n     container\
    \ site-diversity {\n       if-feature site-diversity;\n       uses site-group;\n\
    \       description\n        \"Diversity constraint type.\n        All site-network-accesses\
    \ will inherit the group values\n        defined here.\";\n      }\n     description\n\
    \      \"This grouping defines site diversity parameters.\";\n    }\n    grouping\
    \ access-diversity {\n     container access-diversity {\n       if-feature site-diversity;\n\
    \       uses site-group;\n       container constraints {\n        list constraint\
    \ {\n         key constraint-type;\n         leaf constraint-type {\n        \
    \  type identityref {\n           base placement-diversity;\n          }\n   \
    \       description\n           \"Diversity constraint type.\";\n         }\n\
    \         container target {\n          choice target-flavor {\n           case\
    \ id {\n            list group {\n             key group-id;\n             leaf\
    \ group-id {\n              type string;\n              description\n        \
    \       \"The constraint will be applied against\n               this particular\
    \ group-id.\";\n             }\n             description\n              \"List\
    \ of groups.\";\n            }\n           }\n           case all-accesses {\n\
    \            leaf all-other-accesses {\n             type empty;\n           \
    \  description\n              \"The constraint will be applied against\n     \
    \         all other site network accesses of this site.\";\n            }\n  \
    \         }\n           case all-groups {\n            leaf all-other-groups {\n\
    \             type empty;\n             description\n              \"The constraint\
    \ will be applied against\n              all other groups managed by the customer.\"\
    ;\n            }\n           }\n           description\n            \"Choice for\
    \ the group definition.\";\n          }\n          description\n           \"\
    The constraint will be applied against\n           this list of groups.\";\n \
    \        }\n         description\n          \"List of constraints.\";\n      \
    \  }\n        description\n         \"Placement constraints for this site network\
    \ access.\";\n       }\n       description\n        \"Diversity parameters.\"\
    ;\n      }\n     description\n      \"This grouping defines access diversity parameters.\"\
    ;\n    }\n    grouping operational-requirements {\n       leaf requested-site-start\
    \ {\n         type yang:date-and-time;\n         description\n          \"Optional\
    \ leaf indicating requested date and time when the\n          service at a particular\
    \ site is expected to start.\";\n        }\n        leaf requested-site-stop {\n\
    \         type yang:date-and-time;\n         description\n          \"Optional\
    \ leaf indicating requested date and time when the\n          service at a particular\
    \ site is expected to stop.\";\n        }\n     description\n      \"This grouping\
    \ defines some operational parameters.\";\n    }\n    grouping operational-requirements-ops\
    \ {\n        leaf actual-site-start {\n         type yang:date-and-time;\n   \
    \      config false;\n         description\n          \"Optional leaf indicating\
    \ actual date and time when the\n          service at a particular site actually\
    \ started.\";\n        }\n        leaf actual-site-stop {\n         type yang:date-and-time;\n\
    \         config false;\n         description\n          \"Optional leaf indicating\
    \ actual date and time when the\n          service at a particular site actually\
    \ stopped.\";\n        }\n     description\n      \"This grouping defines some\
    \ operational parameters.\";\n    }\n    grouping flow-definition {\n     container\
    \ match-flow {\n      leaf dscp {\n       type inet:dscp;\n       description\n\
    \        \"DSCP value.\";\n      }\n      leaf dot1p {\n       type uint8 {\n\
    \        range \"0..7\";\n       }\n       description\n        \"802.1p matching.\"\
    ;\n      }\n      leaf ipv4-src-prefix {\n       type inet:ipv4-prefix;\n    \
    \   description\n        \"Match on IPv4 src address.\";\n      }\n      leaf\
    \ ipv6-src-prefix {\n       type inet:ipv6-prefix;\n       description\n     \
    \   \"Match on IPv6 src address.\";\n      }\n      leaf ipv4-dst-prefix {\n \
    \      type inet:ipv4-prefix;\n       description\n        \"Match on IPv4 dst\
    \ address.\";\n      }\n      leaf ipv6-dst-prefix {\n       type inet:ipv6-prefix;\n\
    \       description\n        \"Match on IPv6 dst address.\";\n      }\n      leaf\
    \ l4-src-port {\n       type inet:port-number;\n       description\n        \"\
    Match on Layer 4 src port.\";\n      }\n      leaf-list target-sites {\n     \
    \  type svc-id;\n       description\n        \"Identify a site as traffic destination.\"\
    ;\n      }\n      container l4-src-port-range {\n       leaf lower-port {\n  \
    \      type inet:port-number;\n        description\n         \"Lower boundary\
    \ for port.\";\n       }\n       leaf upper-port {\n        type inet:port-number;\n\
    \        must \". >= ../lower-port\" {\n         description\n          \"Upper\
    \ boundary must be higher than lower boundary.\";\n        }\n        description\n\
    \         \"Upper boundary for port.\";\n       }\n       description\n      \
    \  \"Match on Layer 4 src port range.\";\n      }\n      leaf l4-dst-port {\n\
    \       type inet:port-number;\n       description\n        \"Match on Layer 4\
    \ dst port.\";\n      }\n      container l4-dst-port-range {\n       leaf lower-port\
    \ {\n        type inet:port-number;\n        description\n         \"Lower boundary\
    \ for port.\";\n       }\n       leaf upper-port {\n        type inet:port-number;\n\
    \        must \". >= ../lower-port\" {\n         description\n          \"Upper\
    \ boundary must be higher than lower boundary.\";\n        }\n        description\n\
    \         \"Upper boundary for port.\";\n       }\n       description\n      \
    \  \"Match on Layer 4 dst port range.\";\n      }\n      leaf protocol-field {\n\
    \       type union {\n        type uint8;\n        type identityref {\n      \
    \   base protocol-type;\n        }\n       }\n       description\n        \"Match\
    \ on IPv4 protocol or IPv6 Next Header field.\";\n      }\n      description\n\
    \       \"Describes flow-matching criteria.\";\n     }\n     description\n   \
    \   \"Flow definition based on criteria.\";\n    }\n    grouping site-service-basic\
    \ {\n     leaf svc-input-bandwidth {\n         type uint32;\n         units bps;\n\
    \         description\n          \"From the PE's perspective, the service input\n\
    \          bandwidth of the connection.\";\n     }\n     leaf svc-output-bandwidth\
    \ {\n        type uint32;\n        units bps;\n        description\n         \"\
    From the PE's perspective, the service output\n         bandwidth of the connection.\"\
    ;\n     }\n     leaf svc-mtu {\n      type uint16;\n      units bytes;\n     \
    \ description\n       \"MTU at service level.  If the service is IP,\n       it\
    \ refers to the IP MTU.\";\n     }\n     description\n      \"Defines basic service\
    \ parameters for a site.\";\n    }\n    grouping site-protection {\n     container\
    \ traffic-protection {\n      if-feature fast-reroute;\n      leaf enabled {\n\
    \       type boolean;\n       default false;\n       description\n        \"Enables\
    \ traffic protection of access link.\";\n      }\n      description\n       \"\
    Fast Reroute service parameters for the site.\";\n     }\n     description\n \
    \     \"Defines protection service parameters for a site.\";\n    }\n    grouping\
    \ site-service-mpls {\n     container carrierscarrier {\n      if-feature carrierscarrier;\n\
    \      leaf signalling-type {\n       type enumeration {\n        enum \"ldp\"\
    \ {\n         description\n          \"Use LDP as the signalling protocol\n  \
    \        between the PE and the CE.\";\n        }\n        enum \"bgp\" {\n  \
    \       description\n          \"Use BGP (as per RFC 3107) as the signalling protocol\n\
    \          between the PE and the CE.\n          In this case, BGP must also be\
    \ configured as\n          the routing protocol.\";\n        }\n       }\n   \
    \    description\n        \"MPLS signalling type.\";\n      }\n      description\n\
    \       \"This container is used when the customer provides\n       MPLS-based\
    \ services.  This is used in the case of CsC.\";\n     }\n     description\n \
    \     \"Defines MPLS service parameters for a site.\";\n    }\n    grouping site-service-qos-profile\
    \ {\n     container qos {\n      if-feature qos;\n      container qos-classification-policy\
    \ {\n       list rule {\n        key id;\n        ordered-by user;\n        leaf\
    \ id {\n         type uint16;\n         description\n          \"ID of the rule.\"\
    ;\n        }\n        choice match-type {\n         case match-flow {\n      \
    \    uses flow-definition;\n         }\n         case match-application {\n  \
    \        leaf match-application {\n           type identityref {\n           \
    \ base customer-application;\n           }\n           description\n         \
    \   \"Defines the application to match.\";\n          }\n         }\n        \
    \ description\n          \"Choice for classification.\";\n        }\n        leaf\
    \ target-class-id {\n         type string;\n         description\n          \"\
    Identification of the class of service.\n          This identifier is internal\
    \ to the administration.\";\n        }\n        description\n         \"List of\
    \ marking rules.\";\n       }\n       description\n        \"Configuration of\
    \ the traffic classification policy.\";\n      }\n      container qos-profile\
    \ {\n       choice qos-profile {\n        description\n         \"Choice for QoS\
    \ profile.\n         Can be standard profile or custom.\";\n        case standard\
    \ {\n         leaf profile {\n          type string;\n          description\n\
    \           \"QoS profile to be used.\";\n         }\n        }\n        case\
    \ custom {\n         container classes {\n          if-feature qos-custom;\n \
    \         list class {\n           key class-id;\n           leaf class-id {\n\
    \            type string;\n            description\n             \"Identification\
    \ of the class of service.\n             This identifier is internal to the administration.\"\
    ;\n           }\n           leaf rate-limit {\n            type uint8;\n     \
    \       units percent;\n            description\n             \"To be used if\
    \ the class must be rate-limited.\n             Expressed as percentage of the\
    \ service bandwidth.\";\n           }\n           container latency {\n      \
    \      choice flavor {\n             case lowest {\n              leaf use-lowest-latency\
    \ {\n               type empty;\n               description\n                \"\
    The traffic class should use the path with the\n                lowest latency.\"\
    ;\n              }\n             }\n             case boundary {\n           \
    \   leaf latency-boundary {\n               type uint16;\n               units\
    \ msec;\n               description\n                \"The traffic class should\
    \ use a path with a\n                defined maximum latency.\";\n           \
    \   }\n             }\n             description\n              \"Latency constraint\
    \ on the traffic class.\";\n            }\n            description\n         \
    \    \"Latency constraint on the traffic class.\";\n           }\n           container\
    \ jitter {\n            choice flavor {\n             case lowest {\n        \
    \      leaf use-lowest-jitter {\n               type empty;\n               description\n\
    \                \"The traffic class should use the path with the\n          \
    \      lowest jitter.\";\n              }\n             }\n             case boundary\
    \ {\n              leaf latency-boundary {\n               type uint32;\n    \
    \           units usec;\n               description\n                \"The traffic\
    \ class should use a path with a\n                defined maximum jitter.\";\n\
    \              }\n             }\n             description\n              \"Jitter\
    \ constraint on the traffic class.\";\n            }\n            description\n\
    \             \"Jitter constraint on the traffic class.\";\n           }\n   \
    \        container bandwidth {\n            leaf guaranteed-bw-percent {\n   \
    \          type uint8;\n             units percent;\n             description\n\
    \              \"To be used to define the guaranteed bandwidth\n             \
    \ as a percentage of the available service bandwidth.\";\n            }\n    \
    \        leaf end-to-end {\n             type empty;\n             description\n\
    \              \"Used if the bandwidth reservation\n              must be done\
    \ on the MPLS network too.\";\n            }\n            description\n      \
    \       \"Bandwidth constraint on the traffic class.\";\n           }\n      \
    \     description\n            \"List of classes of services.\";\n          }\n\
    \          description\n           \"Container for list of classes of services.\"\
    ;\n         }\n        }\n       }\n       description\n        \"QoS profile\
    \ configuration.\";\n      }\n      description\n       \"QoS configuration.\"\
    ;\n     }\n     description\n      \"This grouping defines QoS parameters for\
    \ a site.\";\n    }\n    grouping site-security-authentication {\n     container\
    \ authentication {\n      description\n       \"Authentication parameters.\";\n\
    \     }\n     description\n      \"This grouping defines authentication parameters\
    \ for a site.\";\n    }\n    grouping site-security-encryption {\n     container\
    \ encryption {\n      if-feature encryption;\n      leaf enabled {\n       type\
    \ boolean;\n       default false;\n       description\n        \"If true, access\
    \ encryption is required.\";\n      }\n      leaf layer {\n       type enumeration\
    \ {\n        enum layer2 {\n         description\n          \"Encryption will\
    \ occur at Layer 2.\";\n        }\n        enum layer3 {\n         description\n\
    \          \"Encryption will occur at Layer 3.\n          For example, IPsec may\
    \ be used.\";\n        }\n       }\n       mandatory true;\n       description\n\
    \        \"Layer on which encryption is applied.\";\n      }\n      container\
    \ encryption-profile {\n       choice profile {\n        case provider-profile\
    \ {\n         leaf profile-name {\n          type string;\n          description\n\
    \           \"Name of the SP profile to be applied.\";\n         }\n        }\n\
    \        case customer-profile {\n         leaf algorithm {\n          type string;\n\
    \          description\n           \"Encryption algorithm to be used.\";\n   \
    \      }\n         choice key-type {\n          case psk {\n           leaf preshared-key\
    \ {\n            type string;\n            description\n             \"Key coming\
    \ from customer.\";\n           }\n          }\n          case pki {\n       \
    \   }\n          description\n           \"Type of keys to be used.\";\n     \
    \    }\n        }\n        description\n         \"Choice of profile.\";\n   \
    \    }\n       description\n        \"Profile of encryption to be applied.\";\n\
    \      }\n      description\n       \"Encryption parameters.\";\n     }\n    \
    \ description\n      \"This grouping defines encryption parameters for a site.\"\
    ;\n    }\n    grouping site-attachment-bearer {\n     container bearer {\n   \
    \   container requested-type {\n       if-feature requested-type;\n       leaf\
    \ requested-type {\n        type string;\n        description\n         \"Type\
    \ of requested bearer: Ethernet, DSL,\n         Wireless, etc.  Operator specific.\"\
    ;\n       }\n       leaf strict {\n        type boolean;\n        default false;\n\
    \        description\n         \"Defines whether requested-type is a preference\n\
    \         or a strict requirement.\";\n       }\n       description\n        \"\
    Container for requested-type.\";\n      }\n      leaf always-on {\n       if-feature\
    \ always-on;\n       type boolean;\n       default true;\n       description\n\
    \        \"Request for an always-on access type.\n        For example, this could\
    \ mean no dial access type.\";\n      }\n      leaf bearer-reference {\n     \
    \  if-feature bearer-reference;\n       type string;\n       description\n   \
    \     \"This is an internal reference for the SP.\";\n      }\n      description\n\
    \       \"Bearer-specific parameters.\n       To be augmented.\";\n     }\n  \
    \   description\n      \"Defines physical properties of a site attachment.\";\n\
    \    }\n    grouping site-routing {\n     container routing-protocols {\n    \
    \  list routing-protocol {\n       key type;\n       leaf type {\n        type\
    \ identityref {\n         base routing-protocol-type;\n        }\n        description\n\
    \         \"Type of routing protocol.\";\n       }\n       container ospf {\n\
    \        when \"../type = 'ospf'\" {\n         description\n          \"Only applies\
    \ when protocol is OSPF.\";\n        }\n        if-feature rtg-ospf;\n       \
    \ leaf-list address-family {\n         type address-family;\n         description\n\
    \          \"Address family to be activated.\";\n        }\n        leaf area-address\
    \ {\n         type yang:dotted-quad;\n         description\n          \"Area address.\"\
    ;\n        }\n        leaf metric {\n         type uint16;\n         description\n\
    \          \"Metric of the PE-CE link.\";\n        }\n        container sham-links\
    \ {\n         if-feature rtg-ospf-sham-link;\n         list sham-link {\n    \
    \      key target-site;\n          leaf target-site {\n           type svc-id;\n\
    \           description\n            \"Target site for the sham link connection.\n\
    \            The site is referred to by its ID.\";\n          }\n          leaf\
    \ metric {\n           type uint16;\n           description\n            \"Metric\
    \ of the sham link.\";\n          }\n          description\n           \"Creates\
    \ a sham link with another site.\";\n         }\n         description\n      \
    \    \"List of sham links.\";\n        }\n        description\n         \"OSPF-specific\
    \ configuration.\";\n       }\n       container bgp {\n        when \"../type\
    \ = 'bgp'\" {\n         description\n          \"Only applies when protocol is\
    \ BGP.\";\n        }\n        if-feature rtg-bgp;\n        leaf autonomous-system\
    \ {\n         type uint32;\n         description\n          \"AS number.\";\n\
    \        }\n        leaf-list address-family {\n         type address-family;\n\
    \         description\n          \"Address family to be activated.\";\n      \
    \  }\n        description\n         \"BGP-specific configuration.\";\n       }\n\
    \       container static {\n        when \"../type = 'static'\" {\n         description\n\
    \          \"Only applies when protocol is static.\";\n        }\n        container\
    \ cascaded-lan-prefixes {\n         list ipv4-lan-prefixes {\n          if-feature\
    \ ipv4;\n          key \"lan next-hop\";\n          leaf lan {\n           type\
    \ inet:ipv4-prefix;\n           description\n            \"LAN prefixes.\";\n\
    \          }\n          leaf lan-tag {\n           type string;\n           description\n\
    \            \"Internal tag to be used in VPN policies.\";\n          }\n    \
    \      leaf next-hop {\n           type inet:ipv4-address;\n           description\n\
    \            \"Next-hop address to use on the customer side.\";\n          }\n\
    \          description\n           \"List of LAN prefixes for the site.\";\n \
    \        }\n         list ipv6-lan-prefixes {\n          if-feature ipv6;\n  \
    \        key \"lan next-hop\";\n          leaf lan {\n           type inet:ipv6-prefix;\n\
    \           description\n            \"LAN prefixes.\";\n          }\n       \
    \   leaf lan-tag {\n           type string;\n           description\n        \
    \    \"Internal tag to be used in VPN policies.\";\n          }\n          leaf\
    \ next-hop {\n           type inet:ipv6-address;\n           description\n   \
    \         \"Next-hop address to use on the customer side.\";\n          }\n  \
    \        description\n           \"List of LAN prefixes for the site.\";\n   \
    \      }\n         description\n          \"LAN prefixes from the customer.\"\
    ;\n        }\n        description\n         \"Configuration specific to static\
    \ routing.\";\n       }\n       container rip {\n        when \"../type = 'rip'\"\
    \ {\n         description\n          \"Only applies when protocol is RIP.\";\n\
    \        }\n        if-feature rtg-rip;\n        leaf-list address-family {\n\
    \         type address-family;\n         description\n          \"Address family\
    \ to be activated.\";\n        }\n        description\n         \"Configuration\
    \ specific to RIP routing.\";\n       }\n       container vrrp {\n        when\
    \ \"../type = 'vrrp'\" {\n         description\n          \"Only applies when\
    \ protocol is VRRP.\";\n        }\n        if-feature rtg-vrrp;\n        leaf-list\
    \ address-family {\n         type address-family;\n         description\n    \
    \      \"Address family to be activated.\";\n        }\n        description\n\
    \         \"Configuration specific to VRRP routing.\";\n       }\n       description\n\
    \        \"List of routing protocols used on\n        the site.  This list can\
    \ be augmented.\";\n      }\n      description\n       \"Defines routing protocols.\"\
    ;\n     }\n     description\n      \"Grouping for routing protocols.\";\n    }\n\
    \    grouping site-attachment-ip-connection {\n     container ip-connection {\n\
    \      container ipv4 {\n       if-feature ipv4;\n       leaf address-allocation-type\
    \ {\n        type identityref {\n         base address-allocation-type;\n    \
    \    }\n        default \"static-address\";\n        description\n         \"\
    Defines how addresses are allocated.\";\n       }\n       leaf number-of-dynamic-address\
    \ {\n        when \"../address-allocation-type = 'provider-dhcp'\" {\n       \
    \  description\n          \"Only applies when addresses are allocated by DHCP.\"\
    ;\n        }\n        type uint8;\n        default 1;\n        description\n \
    \        \"Describes the number of IP addresses the customer requires.\";\n  \
    \     }\n       container dhcp-relay {\n        when \"../address-allocation-type\
    \ = 'provider-dhcp-relay'\" {\n         description\n          \"Only applies\
    \ when provider is required to implement\n          DHCP relay function.\";\n\
    \        }\n        container customer-dhcp-servers {\n         leaf-list server-ip-address\
    \ {\n          type inet:ipv4-address;\n          description\n           \"IP\
    \ address of customer DHCP server.\";\n         }\n         description\n    \
    \      \"Container for list of customer DHCP servers.\";\n        }\n        description\n\
    \         \"DHCP relay provided by operator.\";\n       }\n       container addresses\
    \ {\n        when \"../address-allocation-type = 'static-address'\" {\n      \
    \   description\n          \"Only applies when protocol allocation type is static.\"\
    ;\n        }\n        leaf provider-address {\n         type inet:ipv4-address;\n\
    \         description\n          \"Address of provider side.\";\n        }\n \
    \       leaf customer-address {\n         type inet:ipv4-address;\n         description\n\
    \          \"Address of customer side.\";\n        }\n        leaf mask {\n  \
    \       type uint8 {\n          range \"0..31\";\n         }\n         description\n\
    \          \"Subnet mask expressed in bits.\";\n        }\n        description\n\
    \         \"Describes IP addresses used.\";\n       }\n       description\n  \
    \      \"IPv4-specific parameters.\";\n      }\n      container ipv6 {\n     \
    \  if-feature ipv6;\n       leaf address-allocation-type {\n        type identityref\
    \ {\n         base address-allocation-type;\n        }\n        default \"static-address\"\
    ;\n        description\n         \"Defines how addresses are allocated.\";\n \
    \      }\n       leaf number-of-dynamic-address {\n        when\n        \"../address-allocation-type\
    \ = 'provider-dhcp' \"+\n        \"or ../address-allocation-type \"+\n       \
    \ \"= 'provider-dhcp-slaac'\" {\n         description\n          \"Only applies\
    \ when addresses are allocated by DHCP.\";\n        }\n        type uint8;\n \
    \       default 1;\n        description\n         \"Describes the number of IP\
    \ addresses the customer requires.\";\n       }\n       container dhcp-relay {\n\
    \        when \"../address-allocation-type = 'provider-dhcp-relay'\" {\n     \
    \    description\n          \"Only applies when provider is required to implement\n\
    \          DHCP relay function.\";\n        }\n        container customer-dhcp-servers\
    \ {\n         leaf-list server-ip-address {\n          type inet:ipv6-address;\n\
    \          description\n           \"IP address of customer DHCP server.\";\n\
    \         }\n         description\n          \"Container for list of customer\
    \ DHCP servers.\";\n        }\n        description\n         \"DHCP relay provided\
    \ by operator.\";\n       }\n       container addresses {\n        when \"../address-allocation-type\
    \ = 'static-address'\" {\n         description\n          \"Only applies when\
    \ protocol allocation type is static.\";\n        }\n        leaf provider-address\
    \ {\n         type inet:ipv6-address;\n         description\n          \"Address\
    \ of provider side.\";\n        }\n        leaf customer-address {\n         type\
    \ inet:ipv6-address;\n         description\n          \"Address of customer side.\"\
    ;\n        }\n        leaf mask {\n         type uint8 {\n          range \"0..127\"\
    ;\n         }\n         description\n          \"Subnet mask expressed in bits.\"\
    ;\n        }\n        description\n         \"Describes IP addresses used.\";\n\
    \       }\n       description\n        \"IPv6-specific parameters.\";\n      }\n\
    \      container oam {\n       container bfd {\n        if-feature bfd;\n    \
    \    leaf enabled {\n         type boolean;\n         default false;\n       \
    \  description\n          \"BFD activation.\";\n        }\n        choice holdtime\
    \ {\n         case profile {\n          leaf profile-name {\n           type string;\n\
    \           description\n            \"Well-known SP profile.\";\n          }\n\
    \          description\n           \"Well-known SP profile.\";\n         }\n \
    \        case fixed {\n          leaf fixed-value {\n           type uint32;\n\
    \           units msec;\n           description\n            \"Expected holdtime\
    \ expressed in msec.\";\n          }\n         }\n         description\n     \
    \     \"Choice for holdtime flavor.\";\n        }\n        description\n     \
    \    \"Container for BFD.\";\n       }\n       description\n        \"Defines\
    \ the OAM mechanisms used on the connection.\";\n      }\n      description\n\
    \       \"Defines connection parameters.\";\n     }\n     description\n      \"\
    This grouping defines IP connection parameters.\";\n    }\n    grouping site-service-multicast\
    \ {\n     container multicast {\n      if-feature multicast;\n      leaf multicast-site-type\
    \ {\n       type enumeration {\n        enum receiver-only {\n         description\n\
    \          \"The site only has receivers.\";\n        }\n        enum source-only\
    \ {\n         description\n          \"The site only has sources.\";\n       \
    \ }\n        enum source-receiver {\n         description\n          \"The site\
    \ has both sources and receivers.\";\n        }\n       }\n       default \"source-receiver\"\
    ;\n       description\n        \"Type of multicast site.\";\n      }\n      container\
    \ multicast-address-family {\n       leaf ipv4 {\n        if-feature ipv4;\n \
    \       type boolean;\n        default true;\n        description\n         \"\
    Enables IPv4 multicast.\";\n       }\n       leaf ipv6 {\n        if-feature ipv6;\n\
    \        type boolean;\n        default false;\n        description\n        \
    \ \"Enables IPv6 multicast.\";\n       }\n       description\n        \"Defines\
    \ protocol to carry multicast.\";\n      }\n      leaf protocol-type {\n     \
    \  type enumeration {\n        enum host {\n         description\n          \"\
    Hosts are directly connected to the provider network.\n          Host protocols\
    \ such as IGMP or MLD are required.\";\n        }\n        enum router {\n   \
    \      description\n          \"Hosts are behind a customer router.\n        \
    \  PIM will be implemented.\";\n        }\n        enum both {\n         description\n\
    \          \"Some hosts are behind a customer router, and some others\n      \
    \    are directly connected to the provider network.\n          Both host and\
    \ routing protocols must be used.\n          Typically, IGMP and PIM will be implemented.\"\
    ;\n        }\n       }\n       default \"both\";\n       description\n       \
    \ \"Multicast protocol type to be used with the customer site.\";\n      }\n \
    \     description\n       \"Multicast parameters for the site.\";\n     }\n  \
    \   description\n      \"Multicast parameters for the site.\";\n    }\n    grouping\
    \ site-management {\n     container management {\n      leaf type {\n       type\
    \ identityref {\n        base management;\n       }\n       description\n    \
    \    \"Management type of the connection.\";\n      }\n      description\n   \
    \    \"Management configuration.\";\n     }\n     description\n      \"Management\
    \ parameters for the site.\";\n    }\n    grouping site-devices {\n     container\
    \ devices {\n      must \"/l3vpn-svc/sites/site/management/type = \"+\n      \
    \ \"'provider-managed' or \"+\n       \"/l3vpn-svc/sites/site/management/type\
    \ = \"+\n       \"'co-managed'\" {\n        description\n         \"Applicable\
    \ only for provider-managed or co-managed device.\";\n       }\n      list device\
    \ {\n       key device-id;\n       leaf device-id {\n        type svc-id;\n  \
    \      description\n         \"Identifier for the device.\";\n       }\n     \
    \  leaf location {\n        type leafref {\n         path \"/l3vpn-svc/sites/site/locations/\"\
    +\n          \"location/location-id\";\n        }\n        description\n     \
    \    \"Location of the device.\";\n       }\n       container management {\n \
    \       must \"/l3vpn-svc/sites/site/management/type\"+\n         \"= 'co-managed'\"\
    \ {\n          description\n           \"Applicable only for co-managed device.\"\
    ;\n         }\n        leaf address-family {\n         type address-family;\n\
    \         description\n          \"Address family used for management.\";\n  \
    \      }\n        leaf address {\n         type inet:ip-address;\n         description\n\
    \          \"Management address.\";\n        }\n        description\n        \
    \ \"Management configuration.  Applicable only for\n         co-managed device.\"\
    ;\n       }\n       description\n        \"Device configuration.\";\n      }\n\
    \      description\n       \"List of devices requested by customer.\";\n     }\n\
    \     description\n      \"Grouping for device allocation.\";\n    }\n    grouping\
    \ site-vpn-flavor {\n     leaf site-vpn-flavor {\n      type identityref {\n \
    \      base site-vpn-flavor;\n      }\n      default site-vpn-flavor-single;\n\
    \      description\n       \"Defines whether the site is, for example,\n     \
    \  a single VPN site or a multiVPN.\";\n     }\n     description\n      \"Grouping\
    \ for site VPN flavor.\";\n    }\n    grouping site-vpn-policy {\n     container\
    \ vpn-policies {\n      list vpn-policy {\n       key vpn-policy-id;\n       leaf\
    \ vpn-policy-id {\n        type svc-id;\n        description\n         \"Unique\
    \ identifier for the VPN policy.\";\n       }\n       list entries {\n       \
    \ key id;\n        leaf id {\n          type svc-id;\n          description\n\
    \           \"Unique identifier for the policy entry.\";\n        }\n        container\
    \ filter {\n         choice lan {\n          case prefixes {\n           leaf-list\
    \ ipv4-lan-prefix {\n            if-feature ipv4;\n            type inet:ipv4-prefix;\n\
    \            description\n             \"List of IPv4 prefixes to be matched.\"\
    ;\n           }\n           leaf-list ipv6-lan-prefix {\n            if-feature\
    \ ipv6;\n            type inet:ipv6-prefix;\n            description\n       \
    \      \"List of IPv6 prefixes to be matched.\";\n           }\n          }\n\
    \          case lan-tag {\n           leaf-list lan-tag {\n            type string;\n\
    \            description\n             \"List of 'lan-tag' items to be matched.\"\
    ;\n           }\n          }\n          description\n           \"Choice of ways\
    \ to do LAN matching.\";\n         }\n         description\n          \"If used,\
    \ it permits the splitting of\n          site LANs among multiple VPNs.\n    \
    \      If no filter is used, all the LANs will be\n          part of the same\
    \ VPNs with the same role.\";\n        }\n        container vpn {\n         leaf\
    \ vpn-id {\n          type leafref {\n           path \"/l3vpn-svc/vpn-services/\"\
    +\n           \"vpn-service/vpn-id\";\n          }\n          mandatory true;\n\
    \          description\n           \"Reference to an IP VPN.\";\n         }\n\
    \         leaf site-role {\n          type identityref {\n           base site-role;\n\
    \          }\n          default any-to-any-role;\n          description\n    \
    \       \"Role of the site in the IP VPN.\";\n         }\n         description\n\
    \          \"List of VPNs the LAN is associated with.\";\n        }\n        description\n\
    \         \"List of entries for export policy.\";\n       }\n       description\n\
    \        \"List of VPN policies.\";\n      }\n      description\n       \"VPN\
    \ policy.\";\n     }\n     description\n      \"VPN policy parameters for the\
    \ site.\";\n    }\n    grouping site-maximum-routes {\n     container maximum-routes\
    \ {\n      list address-family {\n       key af;\n       leaf af {\n        type\
    \ address-family;\n        description\n         \"Address family.\";\n      \
    \ }\n       leaf maximum-routes {\n        type uint32;\n        description\n\
    \         \"Maximum prefixes the VRF can accept for this address family.\";\n\
    \       }\n       description\n        \"List of address families.\";\n      }\n\
    \      description\n       \"Defines 'maximum-routes' for the VRF.\";\n     }\n\
    \     description\n      \"Defines 'maximum-routes' for the site.\";\n    }\n\
    \    grouping site-security {\n     container security {\n      uses site-security-authentication;\n\
    \      uses site-security-encryption;\n      description\n       \"Site-specific\
    \ security parameters.\";\n     }\n     description\n      \"Grouping for security\
    \ parameters.\";\n    }\n    grouping site-service {\n     container service {\n\
    \      uses site-service-qos-profile;\n      uses site-service-mpls;\n      uses\
    \ site-service-multicast;\n      description\n       \"Service parameters on the\
    \ attachment.\";\n     }\n     description\n      \"Grouping for service parameters.\"\
    ;\n    }\n    grouping site-network-access-service {\n     container service {\n\
    \      uses site-service-basic;\n      uses site-service-qos-profile;\n      uses\
    \ site-service-mpls;\n      uses site-service-multicast;\n      description\n\
    \       \"Service parameters on the attachment.\";\n     }\n     description\n\
    \      \"Grouping for service parameters.\";\n    }\n    grouping vpn-extranet\
    \ {\n     container extranet-vpns {\n      if-feature extranet-vpn;\n      list\
    \ extranet-vpn {\n       key vpn-id;\n       leaf vpn-id {\n        type svc-id;\n\
    \        description\n         \"Identifies the target VPN.\";\n       }\n   \
    \    leaf local-sites-role {\n        type identityref {\n         base site-role;\n\
    \        }\n        default any-to-any-role;\n        description\n         \"\
    This describes the role of the\n         local sites in the target VPN topology.\"\
    ;\n       }\n       description\n        \"List of extranet VPNs the local VPN\
    \ is attached to.\";\n      }\n      description\n       \"Container for extranet\
    \ VPN configuration.\";\n     }\n     description\n      \"Grouping for extranet\
    \ VPN configuration.\n      This provides an easy way to interconnect\n      all\
    \ sites from two VPNs.\";\n    }\n    grouping site-attachment-availability {\n\
    \     container availability {\n      leaf access-priority {\n       type uint32;\n\
    \       default 1;\n       description\n        \"Defines the priority for the\
    \ access.\n        The higher the access-priority value,\n        the higher the\
    \ preference of the access will be.\";\n      }\n      description\n       \"\
    Availability parameters (used for multihoming).\";\n     }\n     description\n\
    \      \"Defines availability parameters for a site.\";\n    }\n    grouping access-vpn-policy\
    \ {\n     container vpn-attachment {\n      choice attachment-flavor {\n     \
    \  case vpn-policy-id {\n        leaf vpn-policy-id {\n         type leafref {\n\
    \          path \"/l3vpn-svc/sites/site/\"+\n          \"vpn-policies/vpn-policy/\"\
    +\n          \"vpn-policy-id\";\n         }\n         description\n          \"\
    Reference to a VPN policy.\";\n        }\n       }\n       case vpn-id {\n   \
    \     leaf vpn-id {\n         type leafref {\n          path \"/l3vpn-svc/vpn-services\"\
    +\n          \"/vpn-service/vpn-id\";\n         }\n         description\n    \
    \      \"Reference to a VPN.\";\n        }\n        leaf site-role {\n       \
    \  type identityref {\n           base site-role;\n          }\n         default\
    \ any-to-any-role;\n         description\n          \"Role of the site in the\
    \ IP VPN.\";\n        }\n       }\n       mandatory true;\n       description\n\
    \        \"Choice for VPN attachment flavor.\";\n      }\n      description\n\
    \       \"Defines VPN attachment of a site.\";\n     }\n     description\n   \
    \   \"Defines the VPN attachment rules for a site's logical access.\";\n    }\n\
    \    grouping vpn-svc-cfg {\n     leaf vpn-id {\n       type svc-id;\n       description\n\
    \        \"VPN identifier.  Local administration meaning.\";\n      }\n      leaf\
    \ customer-name {\n       type string;\n       description\n        \"Name of\
    \ the customer.\";\n      }\n     leaf vpn-service-topology {\n      type identityref\
    \ {\n       base vpn-topology;\n      }\n      default \"any-to-any\";\n     \
    \ description\n       \"VPN service topology.\";\n     }\n     uses vpn-service-cloud-access;\n\
    \     uses vpn-service-multicast;\n     uses vpn-service-mpls;\n     uses vpn-extranet;\n\
    \     description\n      \"Grouping for VPN service configuration.\";\n    }\n\
    \    grouping site-top-level-cfg {\n     uses operational-requirements;\n    \
    \ uses customer-location-info;\n     uses site-devices;\n     uses site-diversity;\n\
    \     uses site-management;\n     uses site-vpn-policy;\n     uses site-vpn-flavor;\n\
    \     uses site-maximum-routes;\n     uses site-security;\n     uses site-service;\n\
    \     uses site-protection;\n     uses site-routing;\n     description\n     \
    \ \"Grouping for site top-level configuration.\";\n    }\n    grouping site-network-access-top-level-cfg\
    \ {\n     leaf site-network-access-type {\n      type identityref {\n       base\
    \ site-network-access-type;\n      }\n      default \"point-to-point\";\n    \
    \  description\n       \"Describes the type of connection, e.g.,\n       point-to-point\
    \ or multipoint.\";\n     }\n     choice location-flavor {\n      case location\
    \ {\n       when \"/l3vpn-svc/sites/site/management/type = \"+\n         \"'customer-managed'\"\
    \ {\n          description\n           \"Applicable only for customer-managed\
    \ device.\";\n        }\n       leaf location-reference {\n        type leafref\
    \ {\n         path \"/l3vpn-svc/sites/site/locations/\"+\n            \"location/location-id\"\
    ;\n        }\n        description\n         \"Location of the site-network-access.\"\
    ;\n       }\n      }\n      case device {\n       when \"/l3vpn-svc/sites/site/management/type\
    \ = \"+\n         \"'provider-managed' or \"+\n         \"/l3vpn-svc/sites/site/management/type\
    \ = \"+\n         \"'co-managed'\" {\n          description\n           \"Applicable\
    \ only for provider-managed or co-managed device.\";\n        }\n       leaf device-reference\
    \ {\n        type leafref {\n         path \"/l3vpn-svc/sites/site/devices/\"\
    +\n            \"device/device-id\";\n        }\n        description\n       \
    \  \"Identifier of CE to use.\";\n       }\n      }\n      mandatory true;\n \
    \     description\n       \"Choice of how to describe the site's location.\";\n\
    \     }\n     uses access-diversity;\n     uses site-attachment-bearer;\n    \
    \ uses site-attachment-ip-connection;\n     uses site-security;\n     uses site-network-access-service;\n\
    \     uses site-routing;\n     uses site-attachment-availability;\n     uses access-vpn-policy;\n\
    \     description\n      \"Grouping for site network access top-level configuration.\"\
    ;\n    }\n    /* Main blocks */\n    container l3vpn-svc {\n     container vpn-services\
    \ {\n      list vpn-service {\n       key vpn-id;\n       uses vpn-svc-cfg;\n\
    \       description\n        \"List of VPN services.\";\n      }\n      description\n\
    \       \"Top-level container for the VPN services.\";\n     }\n     container\
    \ sites {\n      list site {\n       key site-id;\n       leaf site-id {\n   \
    \     type svc-id;\n        description\n         \"Identifier of the site.\"\
    ;\n       }\n       uses site-top-level-cfg;\n       uses operational-requirements-ops;\n\
    \       container site-network-accesses {\n        list site-network-access {\n\
    \         key site-network-access-id;\n         leaf site-network-access-id {\n\
    \          type svc-id;\n          description\n           \"Identifier for the\
    \ access.\";\n         }\n         uses site-network-access-top-level-cfg;\n \
    \        description\n          \"List of accesses for a site.\";\n        }\n\
    \        description\n         \"List of accesses for a site.\";\n       }\n \
    \      description\n        \"List of sites.\";\n      }\n      description\n\
    \       \"Container for sites.\";\n     }\n     description\n      \"Main container\
    \ for L3VPN service configuration.\";\n    }\n   }\n   <CODE ENDS>\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   The YANG module defined in this document MAY\
    \ be accessed via the\n   RESTCONF protocol [RFC8040] or the NETCONF protocol\
    \ [RFC6241].  The\n   lowest RESTCONF or NETCONF layer requires that the transport-layer\n\
    \   protocol provide both data integrity and confidentiality; see\n   Section\
    \ 2 in [RFC8040] and Section 2 in [RFC6241].  The client MUST\n   carefully examine\
    \ the certificate presented by the server to\n   determine if it meets the client's\
    \ expectations, and the server MUST\n   authenticate client access to any protected\
    \ resource.  The client\n   identity derived from the authentication mechanism\
    \ used is subject to\n   the NETCONF Access Control Model (NACM) [RFC6536].  Other\
    \ protocols\n   that are used to access this YANG module are also required to\
    \ support\n   similar security mechanisms.\n   The data nodes defined in the \"\
    ietf-l3vpn-svc\" YANG module MUST be\n   carefully created, read, updated, or\
    \ deleted as appropriate.  The\n   entries in the lists below include customer-proprietary\
    \ or\n   confidential information; therefore, access to confidential\n   information\
    \ MUST be limited to authorized clients, and other clients\n   MUST NOT be permitted\
    \ to access the information.\n   o  /l3vpn-svc/vpn-services/vpn-service\n   o\
    \  /l3vpn-svc/sites/site\n   The data model proposes some security parameters\
    \ than can be extended\n   via augmentation as part of the customer service request;\
    \ those\n   parameters are described in Section 6.9.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   IANA has assigned a new URI from the \"IETF XML\
    \ Registry\" [RFC3688].\n      URI: urn:ietf:params:xml:ns:yang:ietf-l3vpn-svc\n\
    \      Registrant Contact: The IESG\n      XML: N/A; the requested URI is an XML\
    \ namespace.\n   This document adds a new YANG module name in the \"YANG Module\
    \ Names\"\n   registry [RFC6020]:\n      Name: ietf-l3vpn-svc\n      Namespace:\
    \ urn:ietf:params:xml:ns:yang:ietf-l3vpn-svc\n      Prefix: l3vpn-svc\n      Reference:\
    \ RFC 8049\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n  \
    \            DOI 10.17487/RFC3688, January 2004,\n              <http://www.rfc-editor.org/info/rfc3688>.\n\
    \   [RFC4026]  Andersson, L. and T. Madsen, \"Provider Provisioned Virtual\n \
    \             Private Network (VPN) Terminology\", RFC 4026,\n              DOI\
    \ 10.17487/RFC4026, March 2005,\n              <http://www.rfc-editor.org/info/rfc4026>.\n\
    \   [RFC4364]  Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n     \
    \         Networks (VPNs)\", RFC 4364, DOI 10.17487/RFC4364,\n              February\
    \ 2006, <http://www.rfc-editor.org/info/rfc4364>.\n   [RFC4577]  Rosen, E., Psenak,\
    \ P., and P. Pillay-Esnault, \"OSPF as the\n              Provider/Customer Edge\
    \ Protocol for BGP/MPLS IP Virtual\n              Private Networks (VPNs)\", RFC\
    \ 4577, DOI 10.17487/RFC4577,\n              June 2006, <http://www.rfc-editor.org/info/rfc4577>.\n\
    \   [RFC4862]  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n    \
    \          Address Autoconfiguration\", RFC 4862,\n              DOI 10.17487/RFC4862,\
    \ September 2007,\n              <http://www.rfc-editor.org/info/rfc4862>.\n \
    \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n    \
    \          the Network Configuration Protocol (NETCONF)\", RFC 6020,\n       \
    \       DOI 10.17487/RFC6020, October 2010,\n              <http://www.rfc-editor.org/info/rfc6020>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <http://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6513]  Rosen, E., Ed., and R. Aggarwal, Ed., \"Multicast in\n        \
    \      MPLS/BGP IP VPNs\", RFC 6513, DOI 10.17487/RFC6513,\n              February\
    \ 2012, <http://www.rfc-editor.org/info/rfc6513>.\n   [RFC6536]  Bierman, A. and\
    \ M. Bjorklund, \"Network Configuration\n              Protocol (NETCONF) Access\
    \ Control Model\", RFC 6536,\n              DOI 10.17487/RFC6536, March 2012,\n\
    \              <http://www.rfc-editor.org/info/rfc6536>.\n   [RFC7950]  Bjorklund,\
    \ M., Ed., \"The YANG 1.1 Data Modeling Language\",\n              RFC 7950, DOI\
    \ 10.17487/RFC7950, August 2016,\n              <http://www.rfc-editor.org/info/rfc7950>.\n\
    \   [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n       \
    \       Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017,\n          \
    \    <http://www.rfc-editor.org/info/rfc8040>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC4110]  Callon, R. and M. Suzuki, \"A Framework\
    \ for Layer 3\n              Provider-Provisioned Virtual Private Networks (PPVPNs)\"\
    ,\n              RFC 4110, DOI 10.17487/RFC4110, July 2005,\n              <http://www.rfc-editor.org/info/rfc4110>.\n\
    \   [RFC4760]  Bates, T., Chandra, R., Katz, D., and Y. Rekhter,\n           \
    \   \"Multiprotocol Extensions for BGP-4\", RFC 4760,\n              DOI 10.17487/RFC4760,\
    \ January 2007,\n              <http://www.rfc-editor.org/info/rfc4760>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks to Qin Wu, Maxim Klyus, Luis Miguel Contreras, Gregory\
    \ Mirsky,\n   Zitao Wang, Jing Zhao, Kireeti Kompella, Eric Rosen, Aijun Wang,\n\
    \   Michael Scharf, Xufeng Liu, David Ball, Lucy Yong, Jean-Philippe\n   Landry,\
    \ and Andrew Leu for their contributions to this document.\n"
- title: Contributors
  contents:
  - "Contributors\n   The authors would like to thank Rob Shakir for his major\n \
    \  contributions to the initial modeling and use cases.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Stephane Litkowski\n   Orange Business Services\n   Email:\
    \ stephane.litkowski@orange.com\n   Luis Tomotaki\n   Verizon\n   Email: luis.tomotaki@verizon.com\n\
    \   Kenichi Ogaki\n   KDDI Corporation\n   Email: ke-oogaki@kddi.com\n"
