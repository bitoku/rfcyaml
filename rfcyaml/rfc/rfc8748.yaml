- contents:
  - ' Registry Fee Extension for the Extensible Provisioning Protocol (EPP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Given the expansion of the DNS namespace and the proliferation of\n
    \  novel business models, it is desirable to provide a method for\n   Extensible
    Provisioning Protocol (EPP) clients to query EPP servers\n   for the fees and
    credits associated with various billable\n   transactions and provide expected
    fees and credits for certain\n   commands and objects.  This document describes
    an EPP extension\n   mapping for registry fees.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8748.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Conventions Used in This Document\n
    \  2.  Migrating to Newer Versions of This Extension\n   3.  Extension Elements\n
    \    3.1.  Client Commands\n     3.2.  Currency Codes\n     3.3.  Validity Periods\n
    \    3.4.  Fees and Credits\n       3.4.1.  Refunds\n       3.4.2.  Grace Periods\n
    \      3.4.3.  Correlation between Refundability and Grace Periods\n       3.4.4.
    \ Applicability\n     3.5.  Account Balance\n     3.6.  Credit Limit\n     3.7.
    \ Classification of Objects\n     3.8.  \"Phase\" and \"Subphase\" Attributes\n
    \    3.9.  Reason\n   4.  Server Handling of Fee Information\n   5.  EPP Command
    Mapping\n     5.1.  EPP Query Commands\n       5.1.1.  EPP <check> Command\n       5.1.2.
    \ EPP Transfer Query Command\n     5.2.  EPP Transform Commands\n       5.2.1.
    \ EPP <create> Command\n       5.2.2.  EPP <delete> Command\n       5.2.3.  EPP
    <renew> Command\n       5.2.4.  EPP <transfer> Command\n       5.2.5.  EPP <update>
    Command\n   6.  Formal Syntax\n     6.1.  Fee Extension Schema\n   7.  Security
    Considerations\n   8.  IANA Considerations\n     8.1.  XML Namespace\n     8.2.
    \ EPP Extension Registry\n   9.  References\n     9.1.  Normative References\n
    \    9.2.  Informative References\n   Acknowledgements\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Historically, domain name registries have applied a simple
    fee\n   structure for billable transactions, namely a basic unit price\n   applied
    to domain <create>, <renew>, <transfer>, and Redemption Grace\n   Period (RGP)
    [RFC3915] restore commands.  Given the relatively small\n   number of EPP servers
    to which EPP clients have been required to\n   connect, it has generally been
    the case that client operators have\n   been able to obtain details of these fees
    out of band by contacting\n   the server operators.\n   Given the expansion of
    the DNS namespace and the proliferation of\n   novel business models, it is desirable
    to provide a method for EPP\n   clients to query EPP servers for the fees and
    credits associated with\n   various billable transactions and certain commands
    and specific\n   objects.\n   This document describes an extension mapping for
    version 1.0 of the\n   Extensible Provisioning Protocol (EPP) [RFC5730].  This
    EPP mapping\n   provides a mechanism by which EPP clients may query the fees and\n
    \  credits associated with various billable transactions and obtain\n   their
    current account balance.\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this
      document are to be interpreted as described in\n   BCP 14 [RFC2119] [RFC8174]
      when, and only when, they appear in all\n   capitals, as shown here.\n   XML
      is case sensitive.  Unless stated otherwise, the XML\n   specifications and
      examples provided in this document MUST be\n   interpreted in the character
      case presented in order to develop a\n   conforming implementation.\n   \"fee\"
      is used as an abbreviation for \"urn:ietf:params:xml:ns:epp:fee-\n   1.0\".
      \ The XML namespace prefix \"fee\" is used, but implementations\n   MUST NOT
      depend on it and instead employ a proper namespace-aware XML\n   parser and
      serializer to interpret and output the XML documents.\n   In the examples, \"C:\"
      represents lines sent by a protocol client, and\n   \"S:\" represents lines
      returned by a protocol server.  Indentation and\n   white space in the examples
      are provided only to illustrate element\n   relationships and are not a required
      feature of this protocol.\n"
    title: 1.1.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - "2.  Migrating to Newer Versions of This Extension\n   Servers that implement
    this extension SHOULD provide a way for\n   clients to progressively update their
    implementations when a new\n   version of the extension is deployed.\n   Servers
    SHOULD (for a temporary migration period) provide support for\n   older versions
    of the extension in parallel to the newest version and\n   allow clients to select
    their preferred version via the\n   <svcExtension> element of the <login> command.\n
    \  If a client requests multiple versions of the extension at login,\n   then,
    when preparing responses to commands that do not include\n   extension elements,
    the server SHOULD only include extension elements\n   in the namespace of the
    newest version of the extension requested by\n   the client.\n   When preparing
    responses to commands that do include extension\n   elements, the server SHOULD
    only include extension elements for the\n   extension versions present in the
    command.\n"
  title: 2.  Migrating to Newer Versions of This Extension
- contents:
  - '3.  Extension Elements

    '
  - contents:
    - "3.1.  Client Commands\n   The <fee:command> element is used in the EPP <check>
      command to\n   determine the fee that is applicable to the given command.\n
      \  The \"name\" attribute of the <fee:command> is used to define which\n   transform
      fees the client is requesting information about.  The\n   possible values for
      the \"name\" attribute are:\n   *  \"create\", indicating a <create> command
      as defined in [RFC5730].\n   *  \"delete\", indicating a <delete> command as
      defined in [RFC5730].\n   *  \"renew\", indicating a <renew> command as defined
      in [RFC5730].\n   *  \"update\", indicating a <update> command as defined in
      [RFC5730].\n   *  \"transfer\", indicating a <transfer> command as defined in\n
      \     [RFC5730].\n   *  If the server supports registry grace period mapping
      [RFC3915],\n      then the server MUST also support the \"restore\" value as
      defined\n      in [RFC3915].\n   *  \"custom\", indicating a custom command
      that MUST set the\n      \"customName\" attribute with a custom command name.
      \ The possible\n      set of custom command name values is dictated by the server\n
      \     policy.\n   The <fee:command> element MAY have an OPTIONAL \"phase\" attribute\n
      \  specifying a launch phase as described in [RFC8334].  It may also\n   contain
      an OPTIONAL \"subphase\" attribute identifying the custom or\n   subphase as
      described in [RFC8334].\n"
    title: 3.1.  Client Commands
  - contents:
    - "3.2.  Currency Codes\n   The <fee:currency> element is used to indicate the
      currency in which\n   fees are charged.  The value of this element MUST be a
      three-\n   character currency code from [ISO4217_2015].\n   Note that [ISO4217_2015]
      provides the special \"XXX\" code, which MAY\n   be used if the server uses
      a non-currency-based system for assessing\n   fees, such as a system of credits.\n
      \  The use of <fee:currency> elements in client commands is OPTIONAL: if\n   a
      <fee:currency> element is not present in a command, the server MUST\n   determine
      the currency based on the server default currency or on the\n   client's account
      settings, which are agreed to by the client and\n   server via an out-of-band
      channel.  However, the <fee:currency>\n   element MUST be present in the responses.\n
      \  Servers SHOULD NOT perform a currency conversion if a client uses an\n   incorrect
      currency code.  Servers SHOULD return a 2004 \"Parameter\n   value range error\"
      instead.\n"
    title: 3.2.  Currency Codes
  - contents:
    - "3.3.  Validity Periods\n   When querying for fee information using the <check>
      command, the\n   <fee:period> element is used to indicate the validity period,
      which\n   is to be added to extend the registration period of objects by the\n
      \  <create>, <renew>, and <transfer> commands.  Validity periods are\n   measured
      in years or months, with the appropriate units specified\n   using the \"unit\"
      attribute.  Valid values for the \"unit\" attribute\n   are \"y\" for years
      and \"m\" for months.  This element is derived from\n   the <domain:period>
      element described in [RFC5731].\n   The <fee:period> element is OPTIONAL in
      <check> commands; if omitted,\n   the server MUST determine the fee(s) using
      the server default period.\n   The <fee:period> element MUST be present in <check>
      responses.\n"
    title: 3.3.  Validity Periods
  - contents:
    - "3.4.  Fees and Credits\n   Servers that implement this extension will include
      elements in\n   responses that provide information about the fees and/or credits\n
      \  associated with a given billable transaction.  A fee will result in\n   subtracting
      from the Account Balance (described in Section 3.5), and\n   a credit will result
      in adding to the Account Balance (described in\n   Section 3.5).\n   The <fee:fee>
      and <fee:credit> elements are used to provide this\n   information.  The presence
      of a <fee:fee> element in a response\n   indicates a debit against the client's
      account balance; a\n   <fee:credit> element indicates a credit.  A <fee:fee>
      element MUST\n   have a zero or greater (non-negative) value.  A <fee:credit>
      element\n   MUST have a negative value.\n   A server MAY respond with multiple
      <fee:fee> and <fee:credit>\n   elements in the same response.  In such cases,
      the net fee or credit\n   applicable to the transaction is the arithmetic sum
      of the values of\n   each of the <fee:fee> and/or <fee:credit> elements.  This
      amount\n   applies to the total additional validity period for the object (where\n
      \  applicable).\n   The following attributes are defined for the <fee:fee> element.\n
      \  These are described in detail below:\n   description:  an OPTIONAL attribute
      that provides a human-readable\n      description of the fee.  Servers should
      provide documentation on\n      the possible values of this attribute and their
      meanings.  An\n      OPTIONAL \"lang\" attribute MAY be present, per the language\n
      \     structure in [RFC5646], to identify the language of the returned\n      text
      and has a default value of \"en\" (English).  If the\n      \"description\"
      attribute is not present, the \"lang\" attribute can\n      be ignored.\n   refundable:
      \ an OPTIONAL boolean attribute indicating whether the fee\n      is refundable
      if the object is deleted.\n   grace-period:  an OPTIONAL attribute that provides
      the time period\n      during which the fee is refundable.\n   applied:  an
      OPTIONAL attribute indicating when the fee will be\n      deducted from the
      client's account.\n   The <fee:credit> element can take a \"description\" attribute
      as\n   described above.  An OPTIONAL \"lang\" attribute MAY be present to\n
      \  identify the language of the returned text and has a default value of\n   \"en\"
      (English).\n"
    - contents:
      - "3.4.1.  Refunds\n   <fee:fee> elements MAY have an OPTIONAL \"refundable\"
        attribute that\n   takes a boolean value.  Fees may be refunded under certain\n
        \  circumstances, such as when a domain application is rejected (as\n   described
        in [RFC8334]) or when an object is deleted during the\n   relevant grace period
        (see Section 3.4.2).\n   If the \"refundable\" attribute is omitted, then
        clients SHOULD NOT\n   make any assumptions about the refundability of the
        fee.\n"
      title: 3.4.1.  Refunds
    - contents:
      - "3.4.2.  Grace Periods\n   [RFC3915] describes a system of \"grace periods\",
        which are time\n   periods following a billable transaction during which,
        if an object\n   is deleted, the client receives a refund.\n   The \"grace-period\"
        attribute MAY be used to indicate the relevant\n   grace period for a fee.
        \ If a server implements the registry grace\n   period extension [RFC3915],
        it MUST specify the grace period for all\n   relevant transactions.\n   If
        the \"grace-period\" attribute is omitted, then clients SHOULD NOT\n   make
        any assumptions about the grace period of the fee.\n"
      title: 3.4.2.  Grace Periods
    - contents:
      - "3.4.3.  Correlation between Refundability and Grace Periods\n   If a <fee:fee>
        element has a \"grace-period\" attribute, then it MUST\n   also be refundable,
        and the \"refundable\" attribute MUST be true.  If\n   the \"refundable\"
        attribute of a <fee:fee> element is false, then it\n   MUST NOT have a \"grace-period\"
        attribute.\n"
      title: 3.4.3.  Correlation between Refundability and Grace Periods
    - contents:
      - "3.4.4.  Applicability\n   Fees may be applied immediately upon receipt of
        a command from a\n   client or may only be applied once an out-of-band process
        (such as\n   the processing of applications at the end of a launch phase)
        has\n   taken place.\n   The \"applied\" attribute of the <fee:fee> element
        allows servers to\n   indicate whether a fee will be applied immediately or
        whether it will\n   be applied at some point in the future.  This attribute
        takes two\n   possible values: \"immediate\" or \"delayed\".\n"
      title: 3.4.4.  Applicability
    title: 3.4.  Fees and Credits
  - contents:
    - "3.5.  Account Balance\n   The <fee:balance> element is an OPTIONAL element
      that MAY be included\n   in server responses to transform commands.  If present,
      it can be\n   used by the client to determine the remaining credit at the server.\n
      \  Whether or not the <fee:balance> is included in responses is a matter\n   of
      server policy.  However, if a server chooses to offer support for\n   this element,
      it MUST be included in responses to all \"transform\" or\n   billable commands
      (e.g., <create>, <renew>, <update>, <delete>,\n   <transfer op=\"request\">).\n
      \  The value of the <fee:balance> MAY be negative.  A negative balance\n   indicates
      that the server has extended a line of credit to the client\n   (see Section
      3.6).\n   If a server includes a <fee:balance> element in response to transform\n
      \  commands, the value of the element MUST reflect the client's account\n   balance
      after any fees or credits associated with that command have\n   been applied.
      \ If the \"applied\" attribute of the <fee:fee> element is\n   \"delayed\",
      then the <fee:balance> MUST reflect the client's account\n   balance without
      any fees or credits associated with that command.\n"
    title: 3.5.  Account Balance
  - contents:
    - "3.6.  Credit Limit\n   As described above, if a server returns a response containing
      a\n   <fee:balance> with a negative value, then the server has extended a\n
      \  line of credit to the client.  A server MAY also include in responses\n   a
      <fee:creditLimit> element that indicates the maximum credit\n   available to
      a client.  A server MAY reject certain transactions if\n   the absolute value
      of the <fee:balance> is equal to or exceeds the\n   value of the <fee:creditLimit>
      element.\n   Whether or not the <fee:creditLimit> is included in responses is
      a\n   matter of server policy.  However, if a server chooses to offer\n   support
      for this element, it MUST be included in responses to all\n   \"transform\"
      commands (e.g., <create>, <renew>, <update>, <delete>,\n   <transfer op=\"request\">).\n"
    title: 3.6.  Credit Limit
  - contents:
    - "3.7.  Classification of Objects\n   Objects may be assigned to a particular
      class, category, or tier,\n   each of which has a particular fee or set of fees
      associated with it.\n   The <fee:class> element, which MAY appear in <check>
      and transform\n   responses, is used to indicate the classification of an object.\n
      \  If a server makes use of this element, it should provide clients with\n   a
      list of all the values that the element may take via an out-of-band\n   channel.
      \ Servers MUST NOT use values that do not appear on this\n   list.\n   Servers
      that make use of this element MUST use a <fee:class> element\n   with the value
      \"standard\" for all objects that are subject to the\n   standard or default
      fee.\n"
    title: 3.7.  Classification of Objects
  - contents:
    - "3.8.  \"Phase\" and \"Subphase\" Attributes\n   The <fee:command> element has
      two attributes, \"phase\" and \"subphase\",\n   that provide additional information
      related to a specific launch\n   phase, as described in [RFC8334].  These attributes
      are used as\n   filters that should refine the server processing.\n   If the
      client <fee:command> contains a server-supported combination\n   of phase/subphase,
      the server MUST return the fee data (including the\n   phase/subphase attribute(s))
      for the specific combination.\n   If the client <fee:command> contains no \"phase\"/\"subphase\"
      attributes\n   and the server has only one active phase/subphase combination,
      the\n   server MUST return the data (including the \"phase\"/\"subphase\"\n
      \  attribute(s)) of the currently active phase/subphase.\n   If the client <fee:command>
      contains no phase/subphase attributes and\n   the server has more than one active
      phase/subphase combination, the\n   server MUST respond with a 2003 \"Required
      parameter missing\" error.\n   If the client <fee:command> contains no phase/subphase
      attributes and\n   the server is currently in a \"quiet period\" (e.g., not
      accepting\n   registrations or applications), the server MUST return data\n
      \  consistent with the default general availability phase (e.g., \"open\"\n
      \  or \"claims\"), including the appropriate phase/subphase attribute(s).\n
      \  If the client <fee:command> contains a phase attribute with no\n   subphase
      and the server has only one active subphase (or no subphase)\n   of this phase,
      the server MUST return the data (including the phase/\n   subphase attribute(s))
      of the provided phase and currently active\n   subphase.\n   If the client <fee:command>
      contains a phase attribute with no\n   subphase and the server has more than
      one active subphase combination\n   of this phase, the server MUST respond with
      a 2003 \"Required\n   parameter missing\" error.\n   If the client <fee:command>
      contains a subphase with no phase\n   attribute, the server MUST respond with
      a 2003 \"Required parameter\n   missing\" error.\n   If the client <fee:command>
      contains a phase attribute not defined in\n   [RFC8334] or not supported by
      the server, the server MUST respond\n   with a 2004 \"Parameter value range
      error\".\n   If the client <fee:command> contains a subphase attribute (or phase/\n
      \  subphase combination) not supported by the server, the server MUST\n   respond
      with a 2004 \"Parameter value range error\".\n"
    title: 3.8.  "Phase" and "Subphase" Attributes
  - contents:
    - "3.9.  Reason\n   The <fee:reason> element is used to provide server-specific
      text in\n   an effort to better explain why a <check> command did not complete
      as\n   the client expected.  An OPTIONAL \"lang\" attribute MAY be present to\n
      \  identify the language, per the language structure in [RFC5646], of\n   the
      returned text and has a default value of \"en\" (English).\n   The <fee:reason>
      element can be used within the server response\n   <fee:command> element or
      within the <fee:cd> element.  See\n   Section 5.1.1 for details on the <fee:cd>
      \"check data\" element.\n   If the server cannot calculate the relevant fees
      because the object,\n   command, currency, period, class, or some combination
      is invalid per\n   server policy, the server has two ways of handling the error\n
      \  processing of <fee:command> element(s):\n   1.  Fast-fail: The server, upon
      error identification, MAY stop\n       processing <fee:command> elements and
      return a <fee:cd> to the\n       client containing the <fee:objID> and a <fee:reason>
      element\n       detailing the reason for failure.\n          S: <fee:cd avail=\"0\">\n
      \         S:   <fee:objID>example.xyz</fee:objID>\n          S:   <fee:reason>Only
      1 year registration periods are\n          S:   valid.</fee:reason>\n          S:
      </fee:cd>\n   2.  Partial-fail: The server, upon error identification, MAY continue\n
      \      processing <fee:command> elements and return a <fee:cd> to the\n       client
      containing the successfully processed <fee:command>\n       elements and failed
      <fee:command> elements.  All returned failed\n       <fee:command> elements
      MUST have a <fee:reason> element detailing\n       the reason for failure, and
      the server MAY additionally include a\n       <fee:reason> element at the <fee:cd>
      level.\n          S: <fee:cd avail=\"0\">\n          S:   <fee:objID>example.xyz</fee:objID>\n
      \         S:   <fee:command name=\"create\">\n          S:     <fee:period unit=\"y\">2</fee:period>\n
      \         S:     <fee:reason>Only 1 year registration periods are\n          S:
      \    valid.</fee:reason>\n          S:   </fee:command>\n          S: </fee:cd>\n
      \  In either failure scenario, the server MUST set the <fee:cd> \"avail\"\n
      \  attribute to false (0), and the server MUST process all objects in\n   the
      client request.\n"
    title: 3.9.  Reason
  title: 3.  Extension Elements
- contents:
  - "4.  Server Handling of Fee Information\n   Depending on the server policy, a
    client MAY be required to include\n   the extension elements described in this
    document for certain\n   transform commands.  Servers must provide clear documentation
    to\n   clients about the circumstances in which this extension must be used.\n
    \  The server MUST return avail=\"0\" in its response to a <check> command\n   for
    any object in the <check> command that does not include the\n   <fee:check> extension
    where the server would fail a domain <create>\n   command when no <fee> extension
    is provided for that same object.\n   If a server receives a <check> command from
    a client that results in\n   no possible fee combination, the server MUST set
    the \"avail\"\n   attribute of the <fee:cd> element to false (0) and provide a\n
    \  <fee:reason>.\n   If a server receives a <check> command from a client that
    results in\n   an ambiguous result (i.e., multiple possible fee combinations),
    the\n   server MUST reject the command with a 2003 \"Required parameter\n   missing\"
    error.\n   If a server receives a command from a client that does not include\n
    \  the fee extension data elements required by the server for that\n   command,
    then the server MUST respond with a 2003 \"Required parameter\n   missing\" error.\n
    \  If the total fee provided by the client is less than the server's own\n   calculation
    of the fee or the server determines the currency is\n   inappropriate for that
    command, then the server MUST reject the\n   command with a 2004 \"Parameter value
    range error\".\n"
  title: 4.  Server Handling of Fee Information
- contents:
  - "5.  EPP Command Mapping\n   A detailed description of the EPP syntax and semantics
    can be found\n   in [RFC5730].\n"
  - contents:
    - "5.1.  EPP Query Commands\n   This extension does not add any elements to the
      EPP <poll> or <info>\n   commands or responses.\n"
    - contents:
      - "5.1.1.  EPP <check> Command\n   This extension defines a new command called
        the Fee Check Command\n   that defines additional elements for the EPP <check>
        command to\n   provide fee information.\n   The command MAY contain an <extension>
        element, which MAY contain a\n   <fee:check> element.  The <fee:check> element
        MAY contain one\n   <fee:currency> element and MUST contain one or more <fee:command>\n
        \  elements.\n   The <fee:command> element(s) MUST contain a \"name\" attribute
        (see\n   Section 3.1), an OPTIONAL \"phase\" attribute, and an OPTIONAL\n
        \  \"subphase\" attribute (see Section 3.8).  The <fee:command> element(s)\n
        \  MAY have the following child elements:\n   *  An OPTIONAL <fee:period>
        element (as described in Section 3.3).\n   Example <check> command:\n   C:
        <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   C: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  C:   <command>\n   C:     <check>\n   C:       <domain:check\n   C:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  C:         <domain:name>example.com</domain:name>\n   C:         <domain:name>example.net</domain:name>\n
        \  C:         <domain:name>example.xyz</domain:name>\n   C:       </domain:check>\n
        \  C:     </check>\n   C:     <extension>\n   C:       <fee:check xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  C:         <fee:currency>USD</fee:currency>\n   C:         <fee:command
        name=\"create\">\n   C:           <fee:period unit=\"y\">2</fee:period>\n
        \  C:         </fee:command>\n   C:         <fee:command name=\"renew\"/>\n
        \  C:         <fee:command name=\"transfer\"/>\n   C:         <fee:command
        name=\"restore\"/>\n   C:       </fee:check>\n   C:     </extension>\n   C:
        \    <clTRID>ABC-12345</clTRID>\n   C:   </command>\n   C: </epp>\n   When
        the server receives a <check> command that includes the\n   extension elements
        described above, its response MUST contain an\n   <extension> element, which
        MUST contain a child <fee:chkData>\n   element.  The <fee:chkData> element
        MUST contain a <fee:currency>\n   element and a <fee:cd> element for each
        object referenced in the\n   client <check> command.\n   Each <fee:cd> (check
        data) element MUST contain the following child\n   elements:\n   *  A <fee:objID>
        element, which MUST match an element referenced in\n      the client <check>
        command.\n   *  An OPTIONAL <fee:class> element (as described in Section 3.7).\n
        \  *  A <fee:command> element matching each <fee:command> (unless the\n      \"avail\"
        attribute of the <fee:cd> is false) that appeared in the\n      corresponding
        <fee:check> of the client command.  This element MAY\n      have the OPTIONAL
        \"standard\" attribute, with a default value of\n      \"0\" (or \"false\"),
        which indicates whether the fee is the standard\n      or default fee (see
        Section 3.7).  This element MAY have the\n      OPTIONAL \"phase\" and \"subphase\"
        attributes, which will match the\n      same attributes in the corresponding
        <fee:command> element of the\n      client command if sent by the client.\n
        \  The <fee:cd> element also has an OPTIONAL \"avail\" attribute, which is\n
        \  a boolean.  If the value of this attribute evaluates to false, this\n   indicates
        that the server cannot calculate the relevant fees because\n   the object,
        command, currency, period, class, or some combination is\n   invalid per server
        policy.  If \"avail\" is false, then the <fee:cd> or\n   the <fee:command>
        element MUST contain a <fee:reason> element (as\n   described in Section 3.9),
        and the server MAY eliminate some or all\n   of the <fee:command> element(s).\n
        \  The <fee:command> element(s) MAY have the following child elements:\n   *
        \ An OPTIONAL <fee:period> element (as described in Section 3.3),\n      which
        contains the same unit, if present, that appeared in the\n      <fee:period>
        element of the command.  If the value of the parent\n      <fee:command> element
        is \"restore\", this element MUST NOT be\n      included; otherwise, it MUST
        be included.  If no <fee:period>\n      appeared in the client command (and
        the command is not \"restore\"),\n      then the server MUST return its default
        period value.\n   *  Zero or more <fee:fee> elements (as described in Section
        3.4).\n   *  Zero or more <fee:credit> elements (as described in Section 3.4).\n
        \  *  An OPTIONAL <fee:reason> element (as described in Section 3.9).\n   If
        the \"avail\" attribute of the <fee:cd> element is true (1) and if\n   no
        <fee:fee> elements are present in a <fee:command> element, this\n   indicates
        that no fee will be assessed by the server for this\n   command.\n   If the
        \"avail\" attribute of the <fee:cd> element is true (1), then\n   the <fee:command>
        element MUST NOT contain a <fee:reason> element.\n   Example <check> response:\n
        \  S: <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   S:
        <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n   S:   <response>\n   S:
        \    <result code=\"1000\">\n   S:       <msg>Command completed successfully</msg>\n
        \  S:     </result>\n   S:     <resData>\n   S:       <domain:chkData\n   S:
        \        xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n   S:         <domain:cd>\n
        \  S:           <domain:name avail=\"1\">example.com</domain:name>\n   S:
        \        </domain:cd>\n   S:         <domain:cd>\n   S:           <domain:name
        avail=\"1\">example.net</domain:name>\n   S:         </domain:cd>\n   S:         <domain:cd>\n
        \  S:           <domain:name avail=\"1\">example.xyz</domain:name>\n   S:
        \        </domain:cd>\n   S:       </domain:chkData>\n   S:     </resData>\n
        \  S:     <extension>\n   S:       <fee:chkData\n   S:           xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  S:         <fee:currency>USD</fee:currency>\n   S:         <fee:cd avail=\"1\">\n
        \  S:           <fee:objID>example.com</fee:objID>\n   S:           <fee:class>Premium</fee:class>\n
        \  S:           <fee:command name=\"create\">\n   S:             <fee:period
        unit=\"y\">2</fee:period>\n   S:             <fee:fee\n   S:               description=\"Registration
        Fee\"\n   S:               refundable=\"1\"\n   S:               grace-period=\"P5D\">10.00</fee:fee>\n
        \  S:           </fee:command>\n   S:           <fee:command name=\"renew\">\n
        \  S:             <fee:period unit=\"y\">1</fee:period>\n   S:             <fee:fee\n
        \  S:               description=\"Renewal Fee\"\n   S:               refundable=\"1\"\n
        \  S:               grace-period=\"P5D\">10.00</fee:fee>\n   S:           </fee:command>\n
        \  S:           <fee:command name=\"transfer\">\n   S:             <fee:period
        unit=\"y\">1</fee:period>\n   S:             <fee:fee\n   S:               description=\"Transfer
        Fee\"\n   S:               refundable=\"1\"\n   S:               grace-period=\"P5D\">10.00</fee:fee>\n
        \  S:           </fee:command>\n   S:           <fee:command name=\"restore\">\n
        \  S:             <fee:fee\n   S:               description=\"Redemption Fee\">15.00</fee:fee>\n
        \  S:           </fee:command>\n   S:         </fee:cd>\n   S:         <fee:cd
        avail=\"1\">\n   S:           <fee:objID>example.net</fee:objID>\n   S:           <fee:class>standard</fee:class>\n
        \  S:           <fee:command name=\"create\" standard=\"1\">\n   S:             <fee:period
        unit=\"y\">2</fee:period>\n   S:             <fee:fee\n   S:               description=\"Registration
        Fee\"\n   S:               refundable=\"1\"\n   S:               grace-period=\"P5D\">5.00</fee:fee>\n
        \  S:           </fee:command>\n   S:           <fee:command name=\"renew\"
        standard=\"1\">\n   S:             <fee:period unit=\"y\">1</fee:period>\n
        \  S:             <fee:fee\n   S:               description=\"Renewal Fee\"\n
        \  S:               refundable=\"1\"\n   S:               grace-period=\"P5D\">5.00</fee:fee>\n
        \  S:           </fee:command>\n   S:           <fee:command name=\"transfer\"
        standard=\"1\">\n   S:             <fee:period unit=\"y\">1</fee:period>\n
        \  S:             <fee:fee\n   S:               description=\"Transfer Fee\"\n
        \  S:               refundable=\"1\"\n   S:               grace-period=\"P5D\">5.00</fee:fee>\n
        \  S:           </fee:command>\n   S:           <fee:command name=\"restore\"
        standard=\"1\">\n   S:             <fee:fee\n   S:               description=\"Redemption
        Fee\">5.00</fee:fee>\n   S:           </fee:command>\n   S:         </fee:cd>\n
        \  S:         <fee:cd avail=\"0\">\n   S:           <fee:objID>example.xyz</fee:objID>\n
        \  S:           <fee:command name=\"create\">\n   S:             <fee:period
        unit=\"y\">2</fee:period>\n   S:             <fee:reason>Only 1 year registration
        periods are\n   S:               valid.</fee:reason>\n   S:           </fee:command>\n
        \  S:         </fee:cd>\n   S:       </fee:chkData>\n   S:     </extension>\n
        \  S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n   S:       <svTRID>54322-XYZ</svTRID>\n
        \  S:     </trID>\n   S:   </response>\n   S: </epp>\n"
      title: 5.1.1.  EPP <check> Command
    - contents:
      - "5.1.2.  EPP Transfer Query Command\n   This extension does not add any elements
        to the EPP <transfer> query\n   command, but it does include elements in the
        response when the\n   extension is included in the <login> command service
        extensions.\n   When the <transfer> query command has been processed successfully,
        if\n   the client has included the extension in the <login> command service\n
        \  <svcExtension> element, and if the client is authorized by the server\n
        \  to view information about the transfer, then the server MAY include\n   in
        the <extension> section of the EPP response a <fee:trnData>\n   element, which
        contains the following child elements:\n   *  A <fee:currency> element (as
        described in Section 3.2).\n   *  A <fee:period> element (as described in
        Section 3.3).\n   *  Zero or more <fee:fee> elements (as described in Section
        3.4)\n      containing the fees that will be charged to the gaining client.\n
        \  *  Zero or more <fee:credit> elements (as described in Section 3.4)\n      containing
        the credits that will be refunded to the losing client.\n   Servers SHOULD
        omit <fee:credit> when returning a response to the\n   gaining client and
        omit <fee:fee> elements when returning a response\n   to the losing client.\n
        \  If no <fee:trnData> element is included in the response, then no fee\n
        \  will be assessed by the server for the transfer.\n   Example <transfer>
        query response:\n   S: <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n
        \  S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n   S:   <response>\n
        \  S:     <result code=\"1001\">\n   S:       <msg>Command completed successfully;
        action pending</msg>\n   S:     </result>\n   S:     <resData>\n   S:       <domain:trnData\n
        \  S:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n   S:         <domain:name>example.com</domain:name>\n
        \  S:         <domain:trStatus>pending</domain:trStatus>\n   S:         <domain:reID>ClientX</domain:reID>\n
        \  S:         <domain:reDate>2019-06-08T22:00:00.0Z</domain:reDate>\n   S:
        \        <domain:acID>ClientY</domain:acID>\n   S:         <domain:acDate>2019-06-13T22:00:00.0Z</domain:acDate>\n
        \  S:         <domain:exDate>2021-09-08T22:00:00.0Z</domain:exDate>\n   S:
        \      </domain:trnData>\n   S:     </resData>\n   S:     <extension>\n   S:
        \      <fee:trnData xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n   S:
        \        <fee:currency>USD</fee:currency>\n   S:         <fee:period unit=\"y\">1</fee:period>\n
        \  S:         <fee:fee>5.00</fee:fee>\n   S:       </fee:trnData>\n   S:     </extension>\n
        \  S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n   S:       <svTRID>54322-XYZ</svTRID>\n
        \  S:     </trID>\n   S:   </response>\n   S: </epp>\n"
      title: 5.1.2.  EPP Transfer Query Command
    title: 5.1.  EPP Query Commands
  - contents:
    - '5.2.  EPP Transform Commands

      '
    - contents:
      - "5.2.1.  EPP <create> Command\n   This extension adds elements to both the
        EPP <create> command and\n   response when the extension is included in the
        <login> command\n   service extensions.\n   When submitting a <create> command
        to the server, the client MAY\n   include in the <extension> element a <fee:create>
        element, which\n   includes the following child elements:\n   *  An OPTIONAL
        <fee:currency> element (as described in Section 3.2).\n   *  One or more <fee:fee>
        elements (as described in Section 3.4).\n   When the <create> command has
        been processed successfully, the client\n   included the extension in the
        <login> command service extensions, and\n   a fee was assessed by the server
        for the transaction, the server MUST\n   include in the <extension> section
        of the EPP response a\n   <fee:creData> element, which contains the following
        child elements:\n   *  A <fee:currency> element (as described in Section 3.2).\n
        \  *  Zero or more <fee:fee> elements (as described in Section 3.4).\n   *
        \ Zero or more <fee:credit> elements (as described in Section 3.4).\n   *
        \ An OPTIONAL <fee:balance> element (as described in Section 3.5).\n   *  An
        OPTIONAL <fee:creditLimit> element (as described in\n      Section 3.6).\n
        \  Example <create> command:\n   C: <?xml version=\"1.0\" encoding=\"utf-8\"
        standalone=\"no\"?>\n   C: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  C:   <command>\n   C:     <create>\n   C:       <domain:create\n   C:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  C:         <domain:name>example.com</domain:name>\n   C:         <domain:period
        unit=\"y\">2</domain:period>\n   C:         <domain:ns>\n   C:           <domain:hostObj>ns1.example.net</domain:hostObj>\n
        \  C:           <domain:hostObj>ns2.example.net</domain:hostObj>\n   C:         </domain:ns>\n
        \  C:         <domain:registrant>jd1234</domain:registrant>\n   C:         <domain:contact
        type=\"admin\">sh8013</domain:contact>\n   C:         <domain:contact type=\"tech\">sh8013</domain:contact>\n
        \  C:         <domain:authInfo>\n   C:           <domain:pw>2fooBAR</domain:pw>\n
        \  C:         </domain:authInfo>\n   C:       </domain:create>\n   C:     </create>\n
        \  C:     <extension>\n   C:       <fee:create xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  C:         <fee:currency>USD</fee:currency>\n   C:         <fee:fee>5.00</fee:fee>\n
        \  C:       </fee:create>\n   C:     </extension>\n   C:     <clTRID>ABC-12345</clTRID>\n
        \  C:   </command>\n   C: </epp>\n   Example <create> response:\n   S: <?xml
        version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  S:   <response>\n   S:     <result code=\"1000\">\n   S:       <msg>Command
        completed successfully</msg>\n   S:     </result>\n   S:     <resData>\n   S:
        \      <domain:creData\n   S:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  S:         <domain:name>example.com</domain:name>\n   S:         <domain:crDate>2019-04-03T22:00:00.0Z</domain:crDate>\n
        \  S:         <domain:exDate>2021-04-03T22:00:00.0Z</domain:exDate>\n   S:
        \      </domain:creData>\n   S:     </resData>\n   S:     <extension>\n   S:
        \      <fee:creData xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n   S:
        \        <fee:currency>USD</fee:currency>\n   S:         <fee:fee\n   S:           description=\"Registration
        Fee\"\n   S:           lang=\"en\"\n   S:           refundable=\"1\"\n   S:
        \          grace-period=\"P5D\">5.00</fee:fee>\n   S:         <fee:balance>-5.00</fee:balance>\n
        \  S:         <fee:creditLimit>1000.00</fee:creditLimit>\n   S:       </fee:creData>\n
        \  S:     </extension>\n   S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n
        \  S:       <svTRID>54321-XYZ</svTRID>\n   S:     </trID>\n   S:   </response>\n
        \  S: </epp>\n"
      title: 5.2.1.  EPP <create> Command
    - contents:
      - "5.2.2.  EPP <delete> Command\n   This extension does not add any elements
        to the EPP <delete> command,\n   but it does include elements in the response
        when the extension is\n   included in the <login> command service extensions.\n
        \  When the <delete> command has been processed successfully and the\n   client
        included the extension in the <login> command service\n   extensions, the
        server MAY include in the <extension> section of the\n   EPP response a <fee:delData>
        element, which contains the following\n   child elements:\n   *  A <fee:currency>
        element (as described in Section 3.2).\n   *  Zero or more <fee:fee> elements
        (as described in Section 3.4).\n   *  Zero or more <fee:credit> elements (as
        described in Section 3.4).\n   *  An OPTIONAL <fee:balance> element (as described
        in Section 3.5).\n   *  An OPTIONAL <fee:creditLimit> element (as described
        in\n      Section 3.6).\n   Example <delete> response:\n   S: <?xml version=\"1.0\"
        encoding=\"utf-8\" standalone=\"no\"?>\n   S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  S:   <response>\n   S:     <result code=\"1000\">\n   S:       <msg>Command
        completed successfully</msg>\n   S:     </result>\n   S:     <extension>\n
        \  S:       <fee:delData\n   S:         xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  S:         <fee:currency>USD</fee:currency>\n   S:         <fee:credit\n
        \  S:           description=\"AGP Credit\"\n   S:           lang=\"en\">-5.00</fee:credit>\n
        \  S:         <fee:balance>1005.00</fee:balance>\n   S:       </fee:delData>\n
        \  S:     </extension>\n   S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n
        \  S:       <svTRID>54321-XYZ</svTRID>\n   S:     </trID>\n   S:   </response>\n
        \  S: </epp>\n"
      title: 5.2.2.  EPP <delete> Command
    - contents:
      - "5.2.3.  EPP <renew> Command\n   This extension adds elements to both the
        EPP <renew> command and\n   response when the extension is included in the
        <login> command\n   service extensions.\n   When submitting a <renew> command
        to the server, the client MAY\n   include in the <extension> element a <fee:renew>
        element, which\n   includes the following child elements:\n   *  An OPTIONAL
        <fee:currency> element (as described in Section 3.2).\n   *  One or more <fee:fee>
        elements (as described in Section 3.4).\n   When the <renew> command has been
        processed successfully and the\n   client included the extension in the <login>
        command service\n   extensions, the server MAY include in the <extension>
        section of the\n   EPP response a <fee:renData> element, which contains the
        following\n   child elements:\n   *  A <fee:currency> element (as described
        in Section 3.2).\n   *  Zero or more <fee:fee> elements (as described in Section
        3.4).\n   *  Zero or more <fee:credit> elements (as described in Section 3.4).\n
        \  *  An OPTIONAL <fee:balance> element (as described in Section 3.5).\n   *
        \ An OPTIONAL <fee:creditLimit> element (as described in\n      Section 3.6).\n
        \  Example <renew> command:\n   C: <?xml version=\"1.0\" encoding=\"utf-8\"
        standalone=\"no\"?>\n   C: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  C:   <command>\n   C:     <renew>\n   C:       <domain:renew\n   C:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  C:         <domain:name>example.com</domain:name>\n   C:         <domain:curExpDate>2019-04-03</domain:curExpDate>\n
        \  C:         <domain:period unit=\"y\">5</domain:period>\n   C:       </domain:renew>\n
        \  C:     </renew>\n   C:     <extension>\n   C:       <fee:renew xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  C:         <fee:currency>USD</fee:currency>\n   C:         <fee:fee>5.00</fee:fee>\n
        \  C:       </fee:renew>\n   C:     </extension>\n   C:     <clTRID>ABC-12345</clTRID>\n
        \  C:   </command>\n   C: </epp>\n   Example <renew> response:\n   S: <?xml
        version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  S:   <response>\n   S:     <result code=\"1000\">\n   S:       <msg>Command
        completed successfully</msg>\n   S:     </result>\n   S:     <resData>\n   S:
        \      <domain:renData\n   S:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  S:         <domain:name>example.com</domain:name>\n   S:         <domain:exDate>2024-04-03T22:00:00.0Z</domain:exDate>\n
        \  S:       </domain:renData>\n   S:     </resData>\n   S:     <extension>\n
        \  S:       <fee:renData xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  S:         <fee:currency>USD</fee:currency>\n   S:         <fee:fee\n   S:
        \          refundable=\"1\"\n   S:           grace-period=\"P5D\">5.00</fee:fee>\n
        \  S:         <fee:balance>1000.00</fee:balance>\n   S:       </fee:renData>\n
        \  S:     </extension>\n   S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n
        \  S:       <svTRID>54322-XYZ</svTRID>\n   S:     </trID>\n   S:   </response>\n
        \  S: </epp>\n"
      title: 5.2.3.  EPP <renew> Command
    - contents:
      - "5.2.4.  EPP <transfer> Command\n   This extension adds elements to both the
        EPP <transfer> command and\n   response when the value of the \"op\" attribute
        of the <transfer>\n   command element is \"request\" and the extension is
        included in the\n   <login> command service extensions.\n   When submitting
        a <transfer> command to the server, the client MAY\n   include in the <extension>
        element a <fee:transfer> element, which\n   includes the following child elements:\n
        \  *  An OPTIONAL <fee:currency> element (as described in Section 3.2).\n
        \  *  One or more <fee:fee> elements (as described in Section 3.4).\n   When
        the <transfer> command has been processed successfully and the\n   client
        included the extension in the <login> command service\n   extensions, the
        server MAY include in the <extension> section of the\n   EPP response a <fee:trnData>
        element, which contains the following\n   child elements:\n   *  A <fee:currency>
        element (as described in Section 3.2).\n   *  Zero or more <fee:fee> elements
        (as described in Section 3.4).\n   *  Zero or more <fee:credit> elements (as
        described in Section 3.4).\n   *  An OPTIONAL <fee:balance> element (as described
        in Section 3.5).\n   *  An OPTIONAL <fee:creditLimit> element (as described
        in\n      Section 3.6).\n   Example <transfer> command:\n   C: <?xml version=\"1.0\"
        encoding=\"utf-8\" standalone=\"no\"?>\n   C: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  C:   <command>\n   C:     <transfer op=\"request\">\n   C:       <domain:transfer\n
        \  C:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n   C:         <domain:name>example.com</domain:name>\n
        \  C:         <domain:period unit=\"y\">1</domain:period>\n   C:         <domain:authInfo>\n
        \  C:           <domain:pw roid=\"JD1234-REP\">2fooBAR</domain:pw>\n   C:
        \        </domain:authInfo>\n   C:       </domain:transfer>\n   C:     </transfer>\n
        \  C:     <extension>\n   C:      <fee:transfer xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  C:        <fee:currency>USD</fee:currency>\n   C:        <fee:fee>5.00</fee:fee>\n
        \  C:      </fee:transfer>\n   C:     </extension>\n   C:     <clTRID>ABC-12345</clTRID>\n
        \  C:   </command>\n   C: </epp>\n   Example <transfer> response:\n   S: <?xml
        version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  S:   <response>\n   S:     <result code=\"1001\">\n   S:       <msg>Command
        completed successfully; action pending</msg>\n   S:     </result>\n   S:     <resData>\n
        \  S:       <domain:trnData\n   S:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  S:         <domain:name>example.com</domain:name>\n   S:         <domain:trStatus>pending</domain:trStatus>\n
        \  S:         <domain:reID>ClientX</domain:reID>\n   S:         <domain:reDate>2019-06-08T22:00:00.0Z</domain:reDate>\n
        \  S:         <domain:acID>ClientY</domain:acID>\n   S:         <domain:acDate>2019-06-13T22:00:00.0Z</domain:acDate>\n
        \  S:         <domain:exDate>2021-09-08T22:00:00.0Z</domain:exDate>\n   S:
        \      </domain:trnData>\n   S:     </resData>\n   S:     <extension>\n   S:
        \      <fee:trnData xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n   S:
        \        <fee:currency>USD</fee:currency>\n   S:         <fee:fee\n   S:           refundable=\"1\"\n
        \  S:           grace-period=\"P5D\">5.00</fee:fee>\n   S:       </fee:trnData>\n
        \  S:     </extension>\n   S:     <trID>\n   S:       <clTRID>ABC-12345</clTRID>\n
        \  S:       <svTRID>54322-XYZ</svTRID>\n   S:     </trID>\n   S:   </response>\n
        \  S: </epp>\n"
      title: 5.2.4.  EPP <transfer> Command
    - contents:
      - "5.2.5.  EPP <update> Command\n   This extension adds elements to both the
        EPP <update> command and\n   response when the extension is included in the
        <login> command\n   service extensions.\n   When submitting an <update> command
        to the server, the client MAY\n   include in the <extension> element a <fee:update>
        element, which\n   includes the following child elements:\n   *  An OPTIONAL
        <fee:currency> element (as described in Section 3.2).\n   *  One or more <fee:fee>
        elements (as described in Section 3.4).\n   When the <update> command has
        been processed successfully and the\n   client included the extension in the
        <login> command service\n   extensions, the server MAY include in the <extension>
        section of the\n   EPP response a <fee:updData> element, which contains the
        following\n   child elements:\n   *  A <fee:currency> element (as described
        in Section 3.2).\n   *  Zero or more <fee:fee> elements (as described in Section
        3.4).\n   *  Zero or more <fee:credit> elements (as described in Section 3.4).\n
        \  *  An OPTIONAL <fee:balance> element (as described in Section 3.5).\n   *
        \ An OPTIONAL <fee:creditLimit> element (as described in\n      Section 3.6).\n
        \  Example <update> command:\n   C: <?xml version=\"1.0\" encoding=\"utf-8\"
        standalone=\"no\"?>\n   C: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  C:   <command>\n   C:     <update>\n   C:       <domain:update\n   C:         xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\">\n
        \  C:         <domain:name>example.com</domain:name>\n   C:         <domain:chg>\n
        \  C:           <domain:registrant>sh8013</domain:registrant>\n   C:         </domain:chg>\n
        \  C:       </domain:update>\n   C:     </update>\n   C:     <extension>\n
        \  C:       <fee:update xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  C:         <fee:currency>USD</fee:currency>\n   C:         <fee:fee>5.00</fee:fee>\n
        \  C:       </fee:update>\n   C:     </extension>\n   C:     <clTRID>ABC-12345</clTRID>\n
        \  C:   </command>\n   C: </epp>\n   Example <update> response:\n   S: <?xml
        version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n   S: <epp xmlns=\"urn:ietf:params:xml:ns:epp-1.0\">\n
        \  S:   <response>\n   S:     <result code=\"1000\">\n   S:       <msg>Command
        completed successfully</msg>\n   S:     </result>\n   S:     <extension>\n
        \  S:       <fee:updData xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\">\n
        \  S:         <fee:currency>USD</fee:currency>\n   S:         <fee:fee>5.00</fee:fee>\n
        \  S:       </fee:updData>\n   S:     </extension>\n   S:     <trID>\n   S:
        \      <clTRID>ABC-12345</clTRID>\n   S:       <svTRID>54321-XYZ</svTRID>\n
        \  S:     </trID>\n   S:   </response>\n   S: </epp>\n"
      title: 5.2.5.  EPP <update> Command
    title: 5.2.  EPP Transform Commands
  title: 5.  EPP Command Mapping
- contents:
  - "6.  Formal Syntax\n   One schema is presented here -- the EPP Fee Extension schema.\n
    \  The formal syntax presented here is a complete schema representation\n   of
    the object mapping suitable for automated validation of EPP XML\n   instances.\n"
  - contents:
    - "6.1.  Fee Extension Schema\n   The formal syntax presented here is a complete
      schema representation\n   [W3C.REC-xmlschema-1-20041028] of the object mapping
      suitable for\n   automated validation of EPP XML instances.  The <CODE BEGINS>
      and\n   <CODE ENDS> tags are not part of the schema; they are used to note\n
      \  the beginning and end of the schema for URI registration purposes.\n   <CODE
      BEGINS>\n   <?xml version=\"1.0\" encoding=\"utf-8\"?>\n   <schema xmlns=\"http://www.w3.org/2001/XMLSchema\"\n
      \    xmlns:fee=\"urn:ietf:params:xml:ns:epp:fee-1.0\"\n     xmlns:eppcom=\"urn:ietf:params:xml:ns:eppcom-1.0\"\n
      \    xmlns:domain=\"urn:ietf:params:xml:ns:domain-1.0\"\n     targetNamespace=\"urn:ietf:params:xml:ns:epp:fee-1.0\"\n
      \    elementFormDefault=\"qualified\">\n     <import namespace=\"urn:ietf:params:xml:ns:eppcom-1.0\"
      />\n     <import namespace=\"urn:ietf:params:xml:ns:domain-1.0\" />\n     <annotation>\n
      \      <documentation>\n         Extensible Provisioning Protocol v1.0 Fee Extension\n
      \      </documentation>\n     </annotation>\n     <!-- Child elements found
      in EPP commands and responses -->\n     <element name=\"check\" type=\"fee:checkType\"
      />\n     <element name=\"chkData\" type=\"fee:chkDataType\" />\n     <element
      name=\"create\" type=\"fee:transformCommandType\" />\n     <element name=\"creData\"
      type=\"fee:transformResultType\" />\n     <element name=\"renew\" type=\"fee:transformCommandType\"
      />\n     <element name=\"renData\" type=\"fee:transformResultType\" />\n     <element
      name=\"transfer\" type=\"fee:transformCommandType\" />\n     <element name=\"trnData\"
      type=\"fee:transformResultType\" />\n     <element name=\"update\" type=\"fee:transformCommandType\"
      />\n     <element name=\"updData\" type=\"fee:transformResultType\" />\n     <element
      name=\"delData\" type=\"fee:transformResultType\" />\n     <!-- client <check>
      command -->\n     <complexType name=\"checkType\">\n       <sequence>\n         <element
      name=\"currency\" type=\"fee:currencyType\"\n           minOccurs=\"0\" />\n
      \        <element name=\"command\" type=\"fee:commandType\"\n           minOccurs=\"1\"
      maxOccurs=\"unbounded\" />\n       </sequence>\n     </complexType>\n     <complexType
      name=\"objectIdentifierType\">\n       <simpleContent>\n         <extension
      base=\"eppcom:labelType\">\n           <attribute name=\"element\"\n           type=\"NMTOKEN\"
      default=\"name\" />\n         </extension>\n       </simpleContent>\n     </complexType>\n
      \    <!-- server <check> result -->\n     <complexType name=\"chkDataType\">\n
      \      <sequence>\n         <element name=\"currency\" type=\"fee:currencyType\"
      />\n         <element name=\"cd\" type=\"fee:objectCDType\"\n           maxOccurs=\"unbounded\"
      />\n       </sequence>\n     </complexType>\n     <complexType name=\"objectCDType\">\n
      \      <sequence>\n         <element name=\"objID\" type=\"fee:objectIdentifierType\"
      />\n         <element name=\"class\" type=\"token\" minOccurs=\"0\" />\n         <element
      name=\"command\" type=\"fee:commandDataType\"\n           minOccurs=\"0\" maxOccurs=\"unbounded\"
      />\n         <element name=\"reason\" type=\"fee:reasonType\" minOccurs=\"0\"
      />\n       </sequence>\n       <attribute name=\"avail\" type=\"boolean\" default=\"1\"
      />\n     </complexType>\n     <!-- general transform (create, renew, update,
      transfer) command-->\n     <complexType name=\"transformCommandType\">\n       <sequence>\n
      \        <element name=\"currency\" type=\"fee:currencyType\"\n           minOccurs=\"0\"
      />\n         <element name=\"fee\" type=\"fee:feeType\"\n           maxOccurs=\"unbounded\"
      />\n         <element name=\"credit\" type=\"fee:creditType\"\n           minOccurs=\"0\"
      maxOccurs=\"unbounded\" />\n       </sequence>\n     </complexType>\n     <!--
      general transform (create, renew, update) result -->\n     <complexType name=\"transformResultType\">\n
      \      <sequence>\n         <element name=\"currency\" type=\"fee:currencyType\"\n
      \          minOccurs=\"0\" />\n         <element name=\"period\" type=\"domain:periodType\"\n
      \          minOccurs=\"0\" />\n         <element name=\"fee\" type=\"fee:feeType\"\n
      \          minOccurs=\"0\" maxOccurs=\"unbounded\" />\n         <element name=\"credit\"
      type=\"fee:creditType\"\n           minOccurs=\"0\" maxOccurs=\"unbounded\"
      />\n         <element name=\"balance\" type=\"fee:balanceType\"\n           minOccurs=\"0\"
      />\n         <element name=\"creditLimit\" type=\"fee:creditLimitType\"\n           minOccurs=\"0\"
      />\n       </sequence>\n     </complexType>\n     <!-- common types -->\n     <simpleType
      name=\"currencyType\">\n       <restriction base=\"string\">\n         <pattern
      value=\"[A-Z]{3}\" />\n       </restriction>\n     </simpleType>\n     <complexType
      name=\"commandType\">\n       <sequence>\n         <element name=\"period\"
      type=\"domain:periodType\"\n           minOccurs=\"0\" maxOccurs=\"1\" />\n
      \      </sequence>\n       <attribute name=\"name\" type=\"fee:commandEnum\"
      use=\"required\"/>\n       <attribute name=\"customName\" type=\"token\"/>\n
      \      <attribute name=\"phase\" type=\"token\" />\n       <attribute name=\"subphase\"
      type=\"token\" />\n     </complexType>\n     <complexType name=\"commandDataType\">\n
      \      <complexContent>\n         <extension base=\"fee:commandType\">\n           <sequence>\n
      \            <element name=\"fee\" type=\"fee:feeType\"\n               minOccurs=\"0\"
      maxOccurs=\"unbounded\" />\n             <element name=\"credit\" type=\"fee:creditType\"\n
      \              minOccurs=\"0\" maxOccurs=\"unbounded\" />\n             <element
      name=\"reason\" type=\"fee:reasonType\"\n               minOccurs=\"0\" />\n
      \          </sequence>\n           <attribute name=\"standard\" type=\"boolean\"
      default=\"0\" />\n         </extension>\n       </complexContent>\n     </complexType>\n
      \    <complexType name=\"reasonType\">\n       <simpleContent>\n         <extension
      base=\"token\">\n           <attribute name=\"lang\" type=\"language\" default=\"en\"/>\n
      \        </extension>\n       </simpleContent>\n     </complexType>\n     <simpleType
      name=\"commandEnum\">\n       <restriction base=\"token\">\n         <enumeration
      value=\"create\"/>\n         <enumeration value=\"delete\"/>\n         <enumeration
      value=\"renew\"/>\n         <enumeration value=\"update\"/>\n         <enumeration
      value=\"transfer\"/>\n         <enumeration value=\"restore\"/>\n         <enumeration
      value=\"custom\"/>\n       </restriction>\n     </simpleType>\n     <simpleType
      name=\"nonNegativeDecimal\">\n       <restriction base=\"decimal\">\n         <minInclusive
      value=\"0\" />\n       </restriction>\n     </simpleType>\n     <simpleType
      name=\"negativeDecimal\">\n       <restriction base=\"decimal\">\n         <maxInclusive
      value=\"0\" />\n       </restriction>\n     </simpleType>\n     <complexType
      name=\"feeType\">\n       <simpleContent>\n         <extension base=\"fee:nonNegativeDecimal\">\n
      \          <attribute name=\"description\"/>\n           <attribute name=\"lang\"
      type=\"language\" default=\"en\"/>\n           <attribute name=\"refundable\"
      type=\"boolean\" />\n           <attribute name=\"grace-period\" type=\"duration\"
      />\n           <attribute name=\"applied\">\n             <simpleType>\n               <restriction
      base=\"token\">\n                 <enumeration value=\"immediate\" />\n                 <enumeration
      value=\"delayed\" />\n               </restriction>\n             </simpleType>\n
      \          </attribute>\n         </extension>\n       </simpleContent>\n     </complexType>\n
      \    <complexType name=\"creditType\">\n       <simpleContent>\n         <extension
      base=\"fee:negativeDecimal\">\n           <attribute name=\"description\"/>\n
      \          <attribute name=\"lang\" type=\"language\" default=\"en\"/>\n         </extension>\n
      \      </simpleContent>\n     </complexType>\n     <simpleType name=\"balanceType\">\n
      \      <restriction base=\"decimal\" />\n     </simpleType>\n     <simpleType
      name=\"creditLimitType\">\n       <restriction base=\"decimal\" />\n     </simpleType>\n
      \  </schema>\n   <CODE ENDS>\n"
    title: 6.1.  Fee Extension Schema
  title: 6.  Formal Syntax
- contents:
  - "7.  Security Considerations\n   The mapping extensions described in this document
    do not provide any\n   security services beyond those described by the EPP [RFC5730],
    the\n   EPP domain name mapping [RFC5731], and the protocol layers used by\n   the
    EPP.  The security considerations described in these other\n   specifications
    apply to this specification as well.  This extension\n   passes financial information
    using the EPP protocol, so\n   confidentiality and integrity protection must be
    provided by the\n   transport mechanism.  All transports compliant with [RFC5730]
    provide\n   the needed level of confidentiality and integrity protections.  The\n
    \  server will only provide information, including financial\n   information,
    that is relevant to the authenticated client.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  IANA Considerations

    '
  - contents:
    - "8.1.  XML Namespace\n   This document uses URNs to describe XML namespaces
      and XML schemas\n   conforming to a registry mechanism described in [RFC3688].\n
      \  Registration request for the fee namespace:\n   URI: urn:ietf:params:xml:ns:epp:fee-1.0\n
      \  Registrant Contact: IESG\n   XML: None.  Namespace URIs do not represent
      an XML specification.\n   Registration request for the fee schema:\n   URI:
      urn:ietf:params:xml:schema:epp:fee-1.0\n   Registrant Contact: IESG\n   XML:
      See Section 6 of this document.\n"
    title: 8.1.  XML Namespace
  - contents:
    - "8.2.  EPP Extension Registry\n   The EPP extension described in this document
      has been registered by\n   IANA in the \"Extensions for the Extensible Provisioning
      Protocol\n   (EPP)\" registry described in [RFC7451].  The details of the\n
      \  registration are as follows:\n   Name of Extension: Registry Fee Extension
      for the Extensible\n   Provisioning Protocol (EPP)\n   Document status: Standards
      Track\n   Reference: RFC 8748\n   Registrant Name and Email Address: IESG <iesg@ietf.org>\n
      \  TLDs: Any\n   IPR Disclosure: None\n   Status: Active\n   Notes: None\n"
    title: 8.2.  EPP Extension Registry
  title: 8.  IANA Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [ISO4217_2015]\n              ISO, \"Codes for
      the representation of currencies\",\n              ISO 4217:2015, August 2015,\n
      \             <https://www.iso.org/standard/64758.html>.\n   [RFC2119]  Bradner,
      S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\",
      BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC3915]  Hollenbeck, S., \"Domain Registry Grace Period Mapping for\n              the
      Extensible Provisioning Protocol (EPP)\", RFC 3915,\n              DOI 10.17487/RFC3915,
      September 2004,\n              <https://www.rfc-editor.org/info/rfc3915>.\n
      \  [RFC5646]  Phillips, A., Ed. and M. Davis, Ed., \"Tags for Identifying\n
      \             Languages\", BCP 47, RFC 5646, DOI 10.17487/RFC5646,\n              September
      2009, <https://www.rfc-editor.org/info/rfc5646>.\n   [RFC5730]  Hollenbeck,
      S., \"Extensible Provisioning Protocol (EPP)\",\n              STD 69, RFC 5730,
      DOI 10.17487/RFC5730, August 2009,\n              <https://www.rfc-editor.org/info/rfc5730>.\n
      \  [RFC5731]  Hollenbeck, S., \"Extensible Provisioning Protocol (EPP)\n              Domain
      Name Mapping\", STD 69, RFC 5731,\n              DOI 10.17487/RFC5731, August
      2009,\n              <https://www.rfc-editor.org/info/rfc5731>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8334]  Gould, J., Tan, W.,
      and G. Brown, \"Launch Phase Mapping\n              for the Extensible Provisioning
      Protocol (EPP)\", RFC 8334,\n              DOI 10.17487/RFC8334, March 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8334>.\n   [W3C.REC-xmlschema-1-20041028]\n
      \             Thompson, H., Beech, D., Maloney, M., and N. Mendelsohn,\n              \"XML
      Schema Part 1: Structures Second Edition\", World Wide\n              Web Consortium
      Recommendation REC-xmlschema-1-20041028,\n              October 2004,\n              <http://www.w3.org/TR/2004/REC-xmlschema-1-20041028>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC7451]  Hollenbeck, S., \"Extension Registry
      for the Extensible\n              Provisioning Protocol\", RFC 7451, DOI 10.17487/RFC7451,\n
      \             February 2015, <https://www.rfc-editor.org/info/rfc7451>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgements\n   The authors wish to thank the following persons for their
    feedback\n   and suggestions:\n   *  James Gould of Verisign Inc.\n   *  Luis
    Munoz of ISC\n   *  Michael Young\n   *  Ben Levac\n   *  Jeff Eckhaus\n   *  Seth
    Goldman of Google\n   *  Klaus Malorny and Michael Bauland of Knipp\n   *  Jody
    Kolker, Joe Snitker, and Kevin Allendorf of GoDaddy\n   *  Michael Holloway of
    Com Laude\n   *  Santosh Kalsangrah of Impetus Infotech\n   *  Alex Mayrhofer
    of Nic.at\n   *  Thomas Corte of Knipp Medien und Kommunikation GmbH\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Roger Carney\n   GoDaddy Inc.\n   14455 N. Hayden Rd.
    #219\n   Scottsdale, AZ 85260\n   United States of America\n   Email: rcarney@godaddy.com\n
    \  URI:   http://www.godaddy.com\n   Gavin Brown\n   CentralNic Group plc\n   35-39
    Moorgate\n   London\n   EC2R 6AR\n   United Kingdom\n   Phone: +44 20 33 88 0600\n
    \  Email: gavin.brown@centralnic.com\n   URI:   http://www.centralnic.com\n   Jothan
    Frakes\n"
  title: Authors' Addresses
