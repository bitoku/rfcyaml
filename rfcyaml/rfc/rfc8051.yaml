- title: __initial_text__
  contents:
  - '       Applicability of a Stateful Path Computation Element (PCE)

    '
- title: Abstract
  contents:
  - "Abstract\n   A stateful Path Computation Element (PCE) maintains information\
    \ about\n   Label Switched Path (LSP) characteristics and resource usage within\
    \ a\n   network in order to provide traffic-engineering calculations for its\n\
    \   associated Path Computation Clients (PCCs).  This document describes\n   general\
    \ considerations for a stateful PCE deployment and examines its\n   applicability\
    \ and benefits, as well as its challenges and\n   limitations, through a number\
    \ of use cases.  PCE Communication\n   Protocol (PCEP) extensions required for\
    \ stateful PCE usage are\n   covered in separate documents.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8051.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   4\n   3.  Application Scenarios . . . . . . . . . . . . . . . . .\
    \ . . .   5\n     3.1.  Optimization of LSP Placement . . . . . . . . . . . .\
    \ . .   5\n       3.1.1.  Throughput Maximization and Bin Packing . . . . . .\
    \ .   6\n       3.1.2.  Deadlock  . . . . . . . . . . . . . . . . . . . . . .\
    \   7\n       3.1.3.  Minimum Perturbation  . . . . . . . . . . . . . . . .  \
    \ 9\n       3.1.4.  Predictability  . . . . . . . . . . . . . . . . . . .  10\n\
    \     3.2.  Auto-Bandwidth Adjustment . . . . . . . . . . . . . . . .  11\n  \
    \   3.3.  Bandwidth Scheduling  . . . . . . . . . . . . . . . . . .  12\n    \
    \ 3.4.  Recovery  . . . . . . . . . . . . . . . . . . . . . . . .  12\n      \
    \ 3.4.1.  Protection  . . . . . . . . . . . . . . . . . . . . .  13\n       3.4.2.\
    \  Restoration . . . . . . . . . . . . . . . . . . . . .  14\n       3.4.3.  SRLG\
    \ Diversity  . . . . . . . . . . . . . . . . . . .  15\n     3.5.  Maintenance\
    \ of Virtual Network Topology (VNT) . . . . . .  15\n     3.6.  LSP Reoptimization\
    \  . . . . . . . . . . . . . . . . . . .  16\n     3.7.  Resource Defragmentation\
    \  . . . . . . . . . . . . . . . .  17\n     3.8.  Point-to-Multipoint Applications\
    \  . . . . . . . . . . . .  17\n     3.9.  Impairment-Aware Routing and Wavelength\
    \ Assignment\n           (IA-RWA)  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  18\n   4.  Deployment Considerations . . . . . . . . . . . . . . . . .\
    \ .  19\n     4.1.  Multi-PCE Deployments . . . . . . . . . . . . . . . . . .\
    \  19\n     4.2.  LSP State Synchronization . . . . . . . . . . . . . . . .  19\n\
    \     4.3.  PCE Survivability . . . . . . . . . . . . . . . . . . . .  19\n  \
    \ 5.  Security Considerations . . . . . . . . . . . . . . . . . . .  20\n   6.\
    \  References  . . . . . . . . . . . . . . . . . . . . . . . . .  20\n     6.1.\
    \  Normative References  . . . . . . . . . . . . . . . . . .  20\n     6.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  21\n   Acknowledgements  . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  22\n   Contributors  . . . . .\
    \ . . . . . . . . . . . . . . . . . . . . .  22\n   Authors' Addresses  . . .\
    \ . . . . . . . . . . . . . . . . . . . .  24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   [RFC4655] defines the architecture for a model based on\
    \ the Path\n   Computation Element (PCE) for the computation of Multiprotocol\
    \ Label\n   Switching (MPLS) and Generalized MPLS (GMPLS) Traffic Engineering\n\
    \   Label Switched Paths (TE LSPs).  To perform such a constrained\n   computation,\
    \ a PCE stores the network topology (i.e., TE links and\n   nodes) and resource\
    \ information (i.e., TE attributes) in its TE\n   Database (TED).  [RFC5440] describes\
    \ the Path Computation Element\n   Protocol (PCEP) for interaction between a Path\
    \ Computation Client\n   (PCC) and a PCE, or between two PCEs, enabling computation\
    \ of TE\n   LSPs.\n   As per [RFC4655], a PCE can be either stateful or stateless.\
    \  A\n   stateful PCE maintains two sets of information for use in path\n   computation.\
    \  The first is the Traffic Engineering Database (TED),\n   which includes the\
    \ topology and resource state in the network.  This\n   information can be obtained\
    \ by a stateful PCE using the same\n   mechanisms as a stateless PCE (see [RFC4655]).\
    \  The second is the LSP\n   State Database (LSP-DB), in which a PCE stores attributes\
    \ of all\n   active LSPs in the network, such as their paths through the network,\n\
    \   bandwidth/resource usage, switching types, and LSP constraints.  This\n  \
    \ state information allows the PCE to compute constrained paths while\n   considering\
    \ individual LSPs and their inter-dependency.  However,\n   this requires reliable\
    \ state synchronization mechanisms between the\n   PCE and the network, between\
    \ the PCE and the PCCs, and between\n   cooperating PCEs, with potentially significant\
    \ control-plane overhead\n   and maintenance of a large amount of state data,\
    \ as explained in\n   [RFC4655].\n   This document describes how a stateful PCE\
    \ can be used to solve\n   various problems for MPLS-TE and GMPLS networks and\
    \ the benefits it\n   brings to such deployments.  Note that alternative solutions\
    \ relying\n   on stateless PCEs may also be possible for some of these use cases\n\
    \   and will be mentioned for completeness where appropriate.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses the following terms defined in [RFC5440]:\
    \ PCC,\n   PCE, and PCEP peer.\n   This document defines the following terms:\n\
    \   Stateful PCE:  a PCE that has access to not only the network state,\n    \
    \  but also to the set of active paths and their reserved resources\n      for\
    \ its computations.  A stateful PCE might also retain\n      information regarding\
    \ LSPs under construction in order to reduce\n      churn and resource contention.\
    \  The additional state allows the\n      PCE to compute constrained paths while\
    \ considering individual LSPs\n      and their interactions.  Note that this requires\
    \ reliable state\n      synchronization mechanisms between the PCE and the network,\
    \ PCE\n      and PCC, and between cooperating PCEs.\n   Passive Stateful PCE:\
    \  a PCE that uses LSP state information learned\n      from PCCs to optimize\
    \ path computations.  It does not actively\n      update LSP state.  A PCC maintains\
    \ synchronization with the PCE.\n   Active Stateful PCE:  a PCE that may issue\
    \ recommendations to the\n      network.  For example, an Active Stateful PCE\
    \ may use the\n      Delegation mechanism to update LSP parameters in those PCCs\
    \ that\n      delegate control over their LSPs to the PCE.\n   Delegation:  an\
    \ operation to grant a PCE temporary rights to modify a\n      subset of LSP parameters\
    \ on one or more LSPs of a PCC.  LSPs are\n      delegated from a PCC to a PCE\
    \ and are referred to as \"delegated\"\n      LSPs.  The PCC that owns the PCE\
    \ state for the LSP has the right\n      to delegate it.  An LSP is owned by a\
    \ single PCC at any given\n      point in time.  For intra-domain LSPs, this PCC\
    \ should be the LSP\n      head end.\n   LSP State Database:  information about\
    \ all LSPs and their attributes.\n   PCE Initiation:  assuming LSP delegation\
    \ granted by default, a PCE\n      can issue recommendations to the network.\n\
    \   Minimum Cut Set:  the minimum set of links for a specific source\n      destination\
    \ pair that, when removed from the network, results in a\n      specific source\
    \ being completely isolated from a specific\n      destination.  The summed capacity\
    \ of these links is equivalent to\n      the maximum capacity from the source\
    \ to the destination by the\n      max-flow min-cut theorem.\n"
- title: 3.  Application Scenarios
  contents:
  - "3.  Application Scenarios\n   In the following sections, several use cases are\
    \ described,\n   showcasing scenarios that benefit from the deployment of a stateful\n\
    \   PCE.\n"
- title: 3.1.  Optimization of LSP Placement
  contents:
  - "3.1.  Optimization of LSP Placement\n   The following use cases demonstrate a\
    \ need for visibility into global\n   LSP states in PCE path computations, and\
    \ for a PCE control of\n   sequence and timing in altering LSP path characteristics\
    \ within and\n   across PCEP sessions.  Reference topologies for the use cases\n\
    \   described later in this section are shown in Figures 1 and 2.\n   Some of\
    \ the use cases below are focused on MPLS-TE deployments but\n   may also apply\
    \ to GMPLS.  Unless otherwise cited, use cases assume\n   that all LSPs listed\
    \ exist at the same LSP priority.\n   The main benefit in the cases below comes\
    \ from moving away from an\n   asynchronous PCC-driven mode of operation to a\
    \ model that allows for\n   central control over LSP computations and maintenance,\
    \ and focuses\n   specifically on the active stateful PCE model of operation.\n\
    \          +-----+\n          |  A  |\n          +-----+\n                 \\\n\
    \                  +-----+                      +-----+\n                  | \
    \ C  |----------------------|  E  |\n                  +-----+               \
    \       +-----+\n                 /        \\      +-----+      /\n          +-----+\
    \          +-----|  D  |-----+\n          |  B  |                +-----+\n   \
    \       +-----+\n                      Figure 1: Reference Topology 1\n      \
    \         +-----+        +-----+        +-----+\n               |  A  |      \
    \  |  B  |        |  C  |\n               +--+--+        +--+--+        +--+--+\n\
    \                  |              |              |\n                  |      \
    \        |              |\n               +--+--+        +--+--+        +--+--+\n\
    \               |  E  +--------+  F  +--------+  G  |\n               +-----+\
    \        +-----+        +-----+\n                      Figure 2: Reference Topology\
    \ 2\n"
- title: 3.1.1.  Throughput Maximization and Bin Packing
  contents:
  - "3.1.1.  Throughput Maximization and Bin Packing\n   Because LSP attribute changes\
    \ in [RFC5440] are driven by Path\n   Computation Request (PCReq) messages under\
    \ control of a PCC's local\n   timers, the sequence of resource reservation arrivals\
    \ occurring in\n   the network will be randomized.  This, coupled with a lack\
    \ of global\n   LSP state visibility on the part of a stateless PCE, may result\
    \ in\n   suboptimal throughput in a given network topology, as will be shown\n\
    \   in the example below.\n   Reference Topology 2 in Figure 2 and Tables 1 and\
    \ 2 show an example\n   in which throughput is at 50% of optimal as a result of\
    \ the lack of\n   visibility and synchronized control across PCCs.  In this scenario,\n\
    \   the decision must be made as to whether to route any portion of the\n   E-G\
    \ demand, as any demand routed for this source and destination will\n   decrease\
    \ system throughput.\n                       +------+--------+----------+\n  \
    \                     | Link | Metric | Capacity |\n                       +------+--------+----------+\n\
    \                       | A-E  |   1    |    10    |\n                       |\
    \ B-F  |   1    |    10    |\n                       | C-G  |   1    |    10 \
    \   |\n                       | E-F  |   1    |    10    |\n                 \
    \      | F-G  |   1    |    10    |\n                       +------+--------+----------+\n\
    \             Table 1: Link Parameters for Throughput Use Case\n          +------+-----+-----+-----+--------+----------+-------+\n\
    \          | Time | LSP | Src | Dst | Demand | Routable |  Path |\n          +------+-----+-----+-----+--------+----------+-------+\n\
    \          |  1   |  1  |  E  |  G  |   10   |   Yes    | E-F-G |\n          |\
    \  2   |  2  |  A  |  B  |   10   |    No    |  ---  |\n          |  3   |  1\
    \  |  F  |  C  |   10   |    No    |  ---  |\n          +------+-----+-----+-----+--------+----------+-------+\n\
    \              Table 2: Throughput Use Case Demand Time Series\n   In many cases,\
    \ throughput maximization becomes a bin-packing problem.\n   While bin packing\
    \ itself is an NP-hard problem, a number of common\n   heuristics that run in\
    \ polynomial time can provide significant\n   improvements in throughput over\
    \ random reservation event\n   distribution, especially when traversing links\
    \ that are members of\n   the minimum cut set for a large subset of source destination\
    \ pairs.\n   Tables 3 and 4 show a simple use case using Reference Topology 1\
    \ in\n   Figure 1, where LSP state visibility and control of reservation order\n\
    \   across PCCs would result in significant improvement in total\n   throughput.\n\
    \                       +------+--------+----------+\n                       |\
    \ Link | Metric | Capacity |\n                       +------+--------+----------+\n\
    \                       | A-C  |   1    |    10    |\n                       |\
    \ B-C  |   1    |    10    |\n                       | C-E  |   10   |    5  \
    \   |\n                       | C-D  |   1    |    10    |\n                 \
    \      | D-E  |   1    |    10    |\n                       +------+--------+----------+\n\
    \             Table 3: Link Parameters for Bin-Packing Use Case\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         | Time | LSP | Src | Dst | Demand | Routable |   Path  |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         |  1   |  1  |  A  |  E  |   5    |   Yes    | A-C-D-E |\n         |\
    \  2   |  2  |  B  |  E  |   10   |    No    |   ---   |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \             Table 4: Bin-Packing Use Case Demand Time Series\n"
- title: 3.1.2.  Deadlock
  contents:
  - "3.1.2.  Deadlock\n   This section discusses the use case of cross-LSP impact\
    \ under\n   degraded operation.  Most existing RSVP-TE implementations will not\n\
    \   tear down established LSPs in the event of the failure of the\n   bandwidth\
    \ increase procedure detailed in [RFC3209].  This behavior is\n   directly implied\
    \ to be correct in [RFC3209] and is often desirable\n   from an operator's perspective,\
    \ because either a) the destination\n   prefixes are not reachable via any means\
    \ other than MPLS or b) this\n   would result in significant packet loss as demand\
    \ is shifted to other\n   LSPs in the overlay mesh.\n   In addition, there are\
    \ currently few implementations offering dynamic\n   ingress admission control\
    \ (policing of the traffic volume mapped onto\n   an LSP) at the Label Edge Router\
    \ (LER).  Having ingress admission\n   control on a per-LSP basis is not necessarily\
    \ desirable from an\n   operational perspective, as a) one must over-provision\
    \ tunnels\n   significantly in order to avoid deleterious effects resulting from\n\
    \   stacked transport and flow control systems (for example, for tunnels\n   that\
    \ are dynamically resized based on current traffic) and b) there\n   is currently\
    \ no efficient commonly available northbound interface for\n   dynamic configuration\
    \ of per-LSP ingress admission control.\n   Lack of ingress admission control\
    \ coupled with the behavior in\n   [RFC3209] may result in LSPs operating out\
    \ of profile for significant\n   periods of time.  It is reasonable to expect\
    \ that these out-of-\n   profile LSPs will be operating in a degraded state and\
    \ experience\n   traffic loss.  Moreover, because those LSPs end up sharing common\n\
    \   network interfaces with other LPSs operating within their bandwidth\n   reservations,\
    \ they will impact the operation of the in-profile LSPs,\n   even when there is\
    \ unused network capacity elsewhere in the network.\n   Furthermore, this behavior\
    \ will cause information loss in the TED\n   with regards to the actual available\
    \ bandwidth on the links used by\n   the out-of-profile LSPs, as the reservations\
    \ on the links no longer\n   reflect the capacity used.\n   Reference Topology\
    \ 1 in Figure 1 and Tables 5 and 6 show a use case\n   that demonstrates this\
    \ behavior.  Two LSPs, LSP 1 and LSP 2, are\n   signaled with demand 2 and routed\
    \ along paths A-C-D-E and B-C-D-E,\n   respectively.  At a later time, the demand\
    \ of LSP 1 increases to 20.\n   Under such a demand, the LSP cannot be resignaled.\
    \  However, the\n   existing LSP will not be torn down.  In the absence of ingress\n\
    \   policing, traffic on LSP 1 will cause degradation for traffic of LSP\n   2\
    \ (due to oversubscription on the links C-D and D-E), as well as\n   information\
    \ loss in the TED with regard to the actual network state.\n   The problem could\
    \ be easily ameliorated by global visibility of the\n   LSP state coupled with\
    \ PCC-external demand measurements and placement\n   of two LSPs on disjoint links.\
    \  Note that while the demand of 20 for\n   LSP 1 could never be satisfied in\
    \ the given topology, isolation from\n   the ill-effects of the (unsatisfiable)\
    \ increased demand could be\n   achieved.\n                       +------+--------+----------+\n\
    \                       | Link | Metric | Capacity |\n                       +------+--------+----------+\n\
    \                       | A-C  |   1    |    10    |\n                       |\
    \ B-C  |   1    |    10    |\n                       | C-E  |   10   |    5  \
    \   |\n                       | C-D  |   1    |    10    |\n                 \
    \      | D-E  |   1    |    10    |\n                       +------+--------+----------+\n\
    \       Table 5: Link Parameters for the 'Degraded Operation' Example\n      \
    \   +------+-----+-----+-----+--------+----------+---------+\n         | Time\
    \ | LSP | Src | Dst | Demand | Routable |   Path  |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         |  1   |  1  |  A  |  E  |   2    |   Yes    | A-C-D-E |\n         |\
    \  2   |  2  |  B  |  E  |   2    |   Yes    | B-C-D-E |\n         |  3   |  1\
    \  |  A  |  E  |   20   |    No    |   ---   |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \             Table 6: 'Degraded Operation' Demand Time Series\n"
- title: 3.1.3.  Minimum Perturbation
  contents:
  - "3.1.3.  Minimum Perturbation\n   As a result of both the lack of visibility into\
    \ the global LSP state\n   and the lack of control over event ordering across\
    \ PCE sessions,\n   unnecessary perturbations may be introduced into the network\
    \ by a\n   stateless PCE.  Tables 7 and 8 show an example of an unnecessary\n\
    \   network perturbation using Reference Topology 1 in Figure 1.  In this\n  \
    \ case, an unimportant (high LSP priority value) LSP (LSP1) is first\n   set up\
    \ along the shortest path.  At time 2, which is assumed to be\n   relatively close\
    \ to time 1, a second more important (lower LSP-\n   priority value) LSP (LSP2)\
    \ is established, preempting LSP1\n   potentially causing traffic loss.  LSP1\
    \ is then reestablished on the\n   longer A-C-E path.\n                      \
    \ +------+--------+----------+\n                       | Link | Metric | Capacity\
    \ |\n                       +------+--------+----------+\n                   \
    \    | A-C  |   1    |    10    |\n                       | B-C  |   1    |  \
    \  10    |\n                       | C-E  |   10   |    10    |\n            \
    \           | C-D  |   1    |    10    |\n                       | D-E  |   1\
    \    |    10    |\n                       +------+--------+----------+\n     \
    \ Table 7: Link Parameters for the 'Minimum-Perturbation' Example\n    +------+-----+-----+-----+--------+----------+----------+---------+\n\
    \    | Time | LSP | Src | Dst | Demand | LSP Prio | Routable |   Path  |\n   \
    \ +------+-----+-----+-----+--------+----------+----------+---------+\n    | \
    \ 1   |  1  |  A  |  E  |   7    |    7     |   Yes    | A-C-D-E |\n    |  2 \
    \  |  2  |  B  |  E  |   7    |    0     |   Yes    | B-C-D-E |\n    |  3   |\
    \  1  |  A  |  E  |   7    |    7     |   Yes    |  A-C-E  |\n    +------+-----+-----+-----+--------+----------+----------+---------+\n\
    \        Table 8: 'Minimum-Perturbation' LSP and Demand Time Series\n   A stateful\
    \ PCE can help in this scenario by computing both routes at\n   the same time.\
    \  The advantages of using a stateful PCE over\n   exploiting a stateless PCE\
    \ via Global Concurrent Optimization (GCO)\n   are threefold.  First is the ability\
    \ to accommodate concurrent path\n   computation from different PCCs.  Second\
    \ is the reduction of control-\n   plane overhead since the stateful PCE has the\
    \ route information of\n   the affected LSPs.  Thirdly, the stateful PCE can use\
    \ the LSP-DB to\n   further optimize the placement of LSPs.  This will ensure\
    \ placement\n   of the more important LSP along the shortest path, avoiding the\
    \ setup\n   and subsequent preemption of the lower priority LSP.  Similarly, when\n\
    \   a new higher priority LSP that requires preemption of an existing\n   lower\
    \ priority LSP(s), a stateful PCE can determine the minimum\n   number of lower\
    \ priority LSPs to reroute using the Make-Before-Break\n   (MBB) mechanism without\
    \ disrupting any service and then set up the\n   higher priority LSP.\n"
- title: 3.1.4.  Predictability
  contents:
  - "3.1.4.  Predictability\n   Randomization of reservation events caused by lack\
    \ of control over\n   event ordering across PCE sessions results in poor predictability\
    \ in\n   LSP routing.  An offline system applying a consistent optimization\n\
    \   method will produce predictable results to within either the boundary\n  \
    \ of forecast error (when reservations are over-provisioned by\n   reasonable\
    \ margins) or to the variability of the signal and the\n   forecast error (when\
    \ applying some hysteresis in order to minimize\n   churn).  Predictable results\
    \ are valuable for being able to simulate\n   the network and reliably test it\
    \ under various scenarios, especially\n   under various failure modes and planned\
    \ maintenances when predictable\n   path characteristics are desired under contention\
    \ for network\n   resources.\n   Reference Topology 1 and Tables 9, 10, and 11\
    \ show the impact of\n   event ordering and predictability of LSP routing.\n \
    \                      +------+--------+----------+\n                       |\
    \ Link | Metric | Capacity |\n                       +------+--------+----------+\n\
    \                       | A-C  |   1    |    10    |\n                       |\
    \ B-C  |   1    |    10    |\n                       | C-E  |   1    |    10 \
    \   |\n                       | C-D  |   1    |    10    |\n                 \
    \      | D-E  |   1    |    10    |\n                       +------+--------+----------+\n\
    \         Table 9: Link Parameters for the 'Predictability' Example\n        \
    \ +------+-----+-----+-----+--------+----------+---------+\n         | Time |\
    \ LSP | Src | Dst | Demand | Routable |   Path  |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         |  1   |  1  |  A  |  E  |   7    |   Yes    |  A-C-E  |\n         |\
    \  2   |  2  |  B  |  E  |   7    |   Yes    | B-C-D-E |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \          Table 10: 'Predictability' LSP and Demand Time Series 1\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         | Time | LSP | Src | Dst | Demand | Routable |   Path  |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \         |  1   |  2  |  B  |  E  |   7    |   Yes    |  B-C-E  |\n         |\
    \  2   |  1  |  A  |  E  |   7    |   Yes    | A-C-D-E |\n         +------+-----+-----+-----+--------+----------+---------+\n\
    \          Table 11: 'Predictability' LSP and Demand Time Series 2\n   As can\
    \ be shown in the example, both LSPs are routed in both cases,\n   but along very\
    \ different paths.  This would be a challenge if\n   reliable simulation of the\
    \ network is attempted.  An active stateful\n   PCE can solve this through control\
    \ over LSP ordering.  Based on\n   triggers such as a failure or an optimization\
    \ trigger, the PCE can\n   order the computations and path setup in a deterministic\
    \ way.\n"
- title: 3.2.  Auto-Bandwidth Adjustment
  contents:
  - "3.2.  Auto-Bandwidth Adjustment\n   The bandwidth requirements of LSPs often\
    \ change over time, requiring\n   LSP resizing.  In most implementations available\
    \ today, the head-end\n   node performs this function by monitoring the actual\
    \ bandwidth usage,\n   triggering a recomputation and resignaling when a threshold\
    \ is\n   reached.  This operation is referred to as \"auto-bandwidth\n   adjustment\"\
    .  The head-end node either recomputes the path locally,\n   or it requests a\
    \ recomputation from a PCE by sending a PCReq message.\n   In the latter case,\
    \ the PCE computes a new path and provides the new\n   route suggestion.  Upon\
    \ receiving the reply from the PCE, the PCC\n   resignals the LSP in Shared-Explicit\
    \ (SE) mode along the newly\n   computed path.  With a stateless PCE, the head-end\
    \ node needs to\n   provide the currently used bandwidth and the route information\
    \ via\n   path computation request messages.  Note that in this scenario, the\n\
    \   head-end node is the one that drives the LSP resizing based on local\n   information,\
    \ and that the difference between using a stateless and a\n   passive stateful\
    \ PCE is in the level of optimization of the LSP\n   placement as discussed in\
    \ the previous section.\n   A more interesting smart bandwidth adjustment case\
    \ is one where the\n   LSP resizing decision is done by an external entity with\
    \ access to\n   additional information such as historical trending data, application-\n\
    \   specific information about expected demands or policy information, as\n  \
    \ well as knowledge of the actual desired flow volumes.  In this case,\n   an\
    \ active stateful PCE provides an advantage in both the computation\n   with knowledge\
    \ of all LSPs in the domain and in the ability to\n   trigger bandwidth modification\
    \ of the LSP.\n"
- title: 3.3.  Bandwidth Scheduling
  contents:
  - "3.3.  Bandwidth Scheduling\n   Bandwidth scheduling allows network operators\
    \ to reserve resources in\n   advance according to the agreements with their customers\
    \ and allows\n   them to transmit data with a specified starting time and duration,\n\
    \   for example, for a scheduled bulk data replication between data\n   centers.\n\
    \   Traditionally, this can be supported by Network Management System\n   (NMS)\
    \ operation through path pre-establishment and activation on the\n   agreed starting\
    \ time.  However, this does not provide efficient\n   network usage since the\
    \ established paths exclude the possibility of\n   being used by other services\
    \ even when they are not used for\n   undertaking any service.  It can also be\
    \ accomplished through GMPLS\n   protocol extensions by carrying the related request\
    \ information\n   (e.g., starting time and duration) across the network.  Nevertheless,\n\
    \   this method inevitably increases the complexity of the signaling and\n   routing\
    \ process.\n   A passive stateful PCE can support this application with better\n\
    \   efficiency since it can alleviate the burden of processing on network\n  \
    \ elements.  This requires the PCE to maintain the scheduled LSPs and\n   their\
    \ associated resource usage, as well as the ability of head-ends\n   to trigger\
    \ signaling for LSP setup/deletion at the correct time.\n   This approach requires\
    \ coarse time synchronization between PCEs and\n   PCCs.  With PCE initiation\
    \ capability, a PCE can trigger the setup\n   and deletion of scheduled requests\
    \ in a centralized manner, without\n   modification of existing head-end behaviors,\
    \ by notifying the PCCs to\n   set up or tear down the paths.\n"
- title: 3.4.  Recovery
  contents:
  - "3.4.  Recovery\n   The recovery use cases discussed in the following sections\
    \ show how\n   leveraging a stateful PCE can simplify the computation of recovery\n\
    \   path(s).  In particular, two characteristics of a stateful PCE are\n   used:\
    \ 1) using information stored in the LSP-DB for determining\n   shared protection\
    \ resources and 2) performing computations with\n   knowledge of all LSPs in a\
    \ domain.\n"
- title: 3.4.1.  Protection
  contents:
  - "3.4.1.  Protection\n   If a PCC can specify in a request whether the computation\
    \ is for a\n   working path or for protection and a PCC can report the resource\
    \ as a\n   working or protection path, then the following text applies.  A PCC\n\
    \   can send multiple requests to the PCE, asking for two LSPs, and use\n   them\
    \ as working and backup paths separately.  Either way, the\n   resources bound\
    \ to backup paths can be shared by different LSPs to\n   improve the overall network\
    \ efficiency, such as m:n protection or\n   pre-configured shared mesh recovery\
    \ techniques as specified in\n   [RFC4427].  If resource sharing is supported\
    \ for LSP protection, the\n   information relating to existing LSPs is required\
    \ to avoid allocation\n   of shared protection resources to two LSPs that might\
    \ fail together\n   and cause protection contention issues.  A stateless PCE can\n\
    \   accommodate this use case by having the PCC pass this information as\n   a\
    \ constraint in the path computation request.  A passive stateful PCE\n   can\
    \ more easily accommodate this need using the information stored in\n   its LSP-DB.\
    \  Furthermore, an active stateful PCE can help with\n   (re)optimization of protection\
    \ resource sharing as well as LSP\n   maintenance operation with less impact on\
    \ protection resources.\n                 +----+\n                 |PCE |\n  \
    \               +----+\n            +------+          +------+          +------+\n\
    \            |  A   +----------+  B   +----------+  C   |\n            +--+---+\
    \          +---+--+          +---+--+\n               |                  |   \
    \              |\n               |        +---------+                 |\n    \
    \           |        |                           |\n               |     +--+---+\
    \          +------+     |\n               +-----+  E   +----------+  D   +-----+\n\
    \                     +------+          +------+\n                      Figure\
    \ 3: Reference Topology 3\n   For example, in the network depicted in Figure 3,\
    \ suppose there\n   exists LSP1 with working path LSP1_working following A->E\
    \ and with\n   backup path LSP1_backup following A->B->E.  A request arrives asking\n\
    \   for a working and backup path pair to be computed for LSP2 from B to\n   E.\
    \  If the PCE decides LSP2_working follows B->A->E, then the backup\n   path LSP2_backup\
    \ should not share the same protection resource with\n   LSP1 since LSP2 shares\
    \ part of its resource (specifically A->E) with\n   LSP1 (i.e., these two LSPs\
    \ are in the same shared risk group).  There\n   is no such constraint if B->C->D->E\
    \ is chosen for LSP2_working.\n   If a stateless PCE is used, the head node B\
    \ needs to be aware of the\n   existence of LSPs that share the route of LSP2_working\
    \ and of the\n   details of their protection resources.  B must pass this information\n\
    \   to the PCE as a constraint so as to request a path with diversity.\n   Alternatively,\
    \ a stateless PCE may be able to compute paths\n   diversified by SRLG (Shared\
    \ Risk Link Group) if TED is extended so\n   that it includes the SRLG information\
    \ that is protected by a given\n   backup resource, but at the expense of a high\
    \ complexity in routing.\n   On the other hand, a stateful PCE can get the LSPs\
    \ information by\n   itself given the LSP identifier(s) and can then find SRLG-diversified\n\
    \   protection paths for both LSPs.  This is made possible by comparing\n   the\
    \ LSP resource usage exploiting the LSP-DB accessible by the\n   stateful PCE.\n"
- title: 3.4.2.  Restoration
  contents:
  - "3.4.2.  Restoration\n   In case of a link failure, such as a fiber cut, multiple\
    \ LSPs may\n   fail at the same time.  Thus, the source nodes of the affected\
    \ LSPs\n   will be informed of the failure by the nodes detecting the failure.\n\
    \   These source nodes will send requests to a PCE for rerouting.  In\n   order\
    \ to reuse the resource taken by an existing LSP, the source node\n   can send\
    \ a PCReq message that includes the Exclude Route Object (XRO)\n   with Fail (F)\
    \ bit set together with the Record Route Object (RRO)\n   that contains the current\
    \ route information, as specified in\n   [RFC5521].\n   If a stateless PCE is\
    \ used, it might respond to the rerouting\n   requests separately if the requests\
    \ arrive at different times.  Thus,\n   it might result in suboptimal resource\
    \ usage.  Even worse, it might\n   unnecessarily block some of the rerouting requests\
    \ due to\n   insufficient resources for rerouting messages that arrive later.\
    \  If\n   a passive stateful PCE is used to fulfill this task, the procedure\n\
    \   can be simplified.  The PCCs reporting the failures can include LSP\n   identifiers\
    \ instead of detailed information, and the PCE can find\n   relevant LSP information\
    \ by inspecting the LSP-DB.  Moreover, the PCE\n   can recompute the affected\
    \ LSPs concurrently while reusing part of\n   the existing LSP's resources when\
    \ it is informed of the failed link\n   identifier provided by the first request.\
    \  This is made possible\n   because the passive stateful PCE can check what other\
    \ LSPs are\n   affected by the failed link and their route information by inspecting\n\
    \   its LSP-DB.  As a result, a better performance can be achieved, such\n   as\
    \ better resource usage or minimal probability of blocking upcoming\n   new rerouting\
    \ requests sent as a result of the link failure.\n   If the target is to avoid\
    \ resource contention within the time window\n   of a high number of LSP rerouting\
    \ requests, a stateful PCE can retain\n   the under-construction LSP resource\
    \ usage information for a given\n   time and exclude it from being used for a\
    \ forthcoming LSP's request.\n   In this way, it can ensure that the resource\
    \ will not be double-\n   booked; thus, the issue of resource contention and computation\
    \ crank-\n   backs can be alleviated.\n"
- title: 3.4.3.  SRLG Diversity
  contents:
  - "3.4.3.  SRLG Diversity\n   An alternative way to achieve efficient resilience\
    \ is to maintain\n   SRLG disjointness between LSPs, irrespective of whether or\
    \ not these\n   LSPs share the source and destination nodes.  This can be achieved\
    \ at\n   provisioning time, if the routes of all the LSPs are requested\n   together,\
    \ using a synchronized computation of the different LSPs with\n   SRLG disjointness\
    \ constraint.  If the LSPs need to be provisioned at\n   different times, the\
    \ PCC can specify, as constraints to the path\n   computation, a set of SRLGs\
    \ using the Exclude Route Object [RFC5521].\n   However, for the latter to be\
    \ effective, the entity that requests the\n   route to the PCE needs to maintain\
    \ updated SRLG information regarding\n   all of the LSPs to which it must maintain\
    \ the disjointness.  A\n   stateless PCE can compute an SRLG-disjoint path by\
    \ inspecting the TED\n   and precluding the links with the same SRLG values specified\
    \ in the\n   PCReq message sent by a PCC.\n   A passive stateful PCE maintains\
    \ the updated SRLG information of the\n   established LSPs in a centralized manner.\
    \  Therefore, the PCC can\n   specify, as constraints to the path computation,\
    \ the SRLG\n   disjointness of a set of already established LSPs by only providing\n\
    \   the LSP identifiers.  Similarly, a passive stateful PCE can also\n   accommodate\
    \ disjointness using other constraints, such as link, node,\n   or path segment.\n"
- title: 3.5.  Maintenance of Virtual Network Topology (VNT)
  contents:
  - "3.5.  Maintenance of Virtual Network Topology (VNT)\n   In Multi-Layer Networks\
    \ (MLN), a Virtual Network Topology (VNT)\n   [RFC5212] consists of a set of one\
    \ or more TE LSPs in the lower\n   layer, which provides TE links to the upper\
    \ layer.  In [RFC5623], the\n   PCE-based architecture is proposed to support\
    \ path computation in MLN\n   networks in order to achieve inter-layer TE.\n \
    \  The establishment/teardown of a TE link in VNT needs to take into\n   consideration\
    \ the state of existing LSPs and/or new LSP request(s) in\n   the higher layer.\
    \  Hence, when a stateless PCE cannot find the route\n   for a request based on\
    \ the upper-layer topology information, it does\n   not have enough information\
    \ to decide whether or not to set up or\n   remove a TE link, which then can result\
    \ in non-optimal usage of a\n   resource.  On the other hand, a passive stateful\
    \ PCE can make a\n   better decision of when and how to modify the VNT either\
    \ to\n   accommodate new LSP requests or to reoptimize resource usage across\n\
    \   layers irrespective of the PCE models as described in [RFC5623].\n   Furthermore,\
    \ given the active capability, the stateful PCE can issue\n   VNT modification\
    \ suggestions in order to accommodate path setup\n   requests or reoptimize resource\
    \ usage across layers.\n"
- title: 3.6.  LSP Reoptimization
  contents:
  - "3.6.  LSP Reoptimization\n   In order to make efficient usage of network resources,\
    \ it is\n   sometimes desirable to reoptimize one or more LSPs dynamically.  In\n\
    \   the case of a stateless PCE, in order to optimize network resource\n   usage\
    \ dynamically through online planning, a PCC must send a request\n   to the PCE\
    \ together with detailed path/bandwidth information of the\n   LSPs that need\
    \ to be concurrently optimized.  This means that the PCC\n   must be able to determine\
    \ when and which LSPs should be optimized.\n   In the case of a passive stateful\
    \ PCE, given the LSP state\n   information in the LSP database, the process of\
    \ dynamic optimization\n   of network resources can be simplified without requiring\
    \ the PCC to\n   supply detailed LSP state information.  Moreover, an active stateful\n\
    \   PCE can even make the process automated by triggering the request.\n   Because\
    \ a stateful PCE can maintain information for all LSPs that are\n   in the process\
    \ of being set up and it may have the ability to control\n   timing and sequence\
    \ of LSP setup/deletion, the optimization\n   procedures can be performed more\
    \ intelligently and effectively.  A\n   stateful PCE can also determine which\
    \ LSP should be reoptimized based\n   on network events.  For example, when an\
    \ LSP is torn down, its\n   resources are freed.  This can trigger the stateful\
    \ PCE to\n   automatically determine which LSP should be reoptimized so that the\n\
    \   recently freed resources may be allocated to it.\n   A special case of LSP\
    \ reoptimization is GCO [RFC5557].  Global\n   control of the LSP operation sequence\
    \ in [RFC5557] is predicated on\n   the use of what is effectively a stateful\
    \ (or semi-stateful) NMS.\n   The NMS can be either not local to the network nodes,\
    \ in which case\n   another northbound interface is required for LSP attribute\
    \ changes,\n   or local/collocated, in which case there are significant issues\
    \ with\n   efficiency in resource usage.  A stateful PCE adds a few features\n\
    \   that:\n   o  Roll the NMS visibility into the PCE and remove the requirement\n\
    \      for an additional northbound interface.\n   o  Allow the PCE to determine\
    \ when reoptimization is needed, with\n      which level (GCO or a more incremental\
    \ optimization).\n   o  Allow the PCE to determine which LSPs should be reoptimized.\n\
    \   o  Allow a PCE to control the sequence of events across multiple\n      PCCs,\
    \ allowing for bulk (and truly global) optimization, LSP\n      shuffling, etc.\n"
- title: 3.7.  Resource Defragmentation
  contents:
  - "3.7.  Resource Defragmentation\n   If LSPs are dynamically allocated and released\
    \ over time, the\n   resource becomes fragmented.  In networks with link bundle,\
    \ the\n   overall available resource on a (bundle) link might be sufficient for\n\
    \   a new LSP request, but if the available resource is not continuous,\n   the\
    \ request is rejected.  Stateful PCEs can be used to perform the\n   defragmentation\
    \ procedure, because global visibility of LSPs in the\n   network is required\
    \ to accurately assess resources on the LSPs and to\n   perform defragmentation\
    \ while ensuring a minimal disruption of the\n   network.  This use case cannot\
    \ be accommodated by a stateless PCE\n   because it does not possess the detailed\
    \ information of existing LSPs\n   in the network.\n   Another case of particular\
    \ interest is the optical spectrum\n   defragmentation in flexible-grid networks.\
    \  In flexible-grid networks\n   [RFC7698], LSPs with different optical spectrum\
    \ sizes (such as\n   12.5GHz, 25GHz, etc.) can coexist so as to accommodate the\
    \ services\n   with different bandwidth requests.  Therefore, even if the overall\n\
    \   spectrum size can meet the service request, it may not be usable if\n   the\
    \ available spectrum resource is not contiguous, but rather\n   fragmented into\
    \ smaller pieces.  Thus, with the help of existing LSP\n   state information,\
    \ a stateful PCE can make the resource grouped\n   together to be usable.  Moreover,\
    \ a stateful PCE can proactively\n   choose routes for upcoming path requests\
    \ to reduce the chance of\n   spectrum fragmentation.\n"
- title: 3.8.  Point-to-Multipoint Applications
  contents:
  - "3.8.  Point-to-Multipoint Applications\n   PCE has been identified as an appropriate\
    \ technology for the\n   determination of the paths of Point-to-Multipoint (P2MP)\
    \ TE LSPs\n   [RFC5671].  The application scenarios and use cases described in\n\
    \   Sections 3.1, 3.4, and 3.6 are also applicable to P2MP TE LSPs.\n   In addition\
    \ to these, the stateful nature of a PCE simplifies the\n   information conveyed\
    \ in PCEP messages since it is possible to refer\n   to the LSPs via an identifier.\
    \  For P2MP, this is an added advantage\n   where the size of the PCEP message\
    \ is much larger.  In case of\n   stateless PCEs, modification of a P2MP tree\
    \ requires encoding of all\n   leaves along with the paths in a PCReq message.\
    \  But by using a\n   stateful PCE with P2MP capability, the PCEP message can\
    \ be used to\n   convey only the modifications (the other information can be retrieved\n\
    \   from the identifier via the LSP-DB).\n"
- title: 3.9.  Impairment-Aware Routing and Wavelength Assignment (IA-RWA)
  contents:
  - "3.9.  Impairment-Aware Routing and Wavelength Assignment (IA-RWA)\n   In Wavelength\
    \ Switched Optical Networks (WSONs) [RFC6163], a\n   wavelength-switched LSP traverses\
    \ one or more fiber links.  The bit\n   rates of the client signals carried by\
    \ the wavelength LSPs may be the\n   same or different.  Hence, a fiber link may\
    \ transmit a number of\n   wavelength LSPs with equal or mixed bit-rate signals.\
    \  For example, a\n   fiber link may multiplex the wavelengths with only 10 Gbit/s\
    \ signals,\n   mixed 10 Gbit/s and 40 Gbit/s signals, or mixed 40 Gbit/s and 100\n\
    \   Gbit/s signals.\n   IA-RWA in WSONs refers to the process (i.e., lightpath\
    \ computation)\n   that takes into account the optical layer/transmission imperfections\n\
    \   as additional (i.e., physical layer) constraints.  To be more\n   specific,\
    \ linear and non-linear effects associated with the optical\n   network elements\
    \ should be incorporated into the route and wavelength\n   assignment procedure.\
    \  For example, the physical imperfection can\n   result in the interference of\
    \ two adjacent lightpaths.  Thus, a guard\n   band should be reserved between\
    \ them to alleviate these effects.  The\n   width of the guard band between two\
    \ adjacent wavelengths depends on\n   their characteristics, such as modulation\
    \ formats and bit rates.  Two\n   adjacent wavelengths with different characteristics\
    \ (e.g., different\n   bit rates) may need a wider guard band and those with the\
    \ same\n   characteristics may need a narrower guard band.  For example, 50 GHz\n\
    \   spacing may be acceptable for two adjacent wavelengths with 40 G\n   signals.\
    \  But for two adjacent wavelengths with different bit rates\n   (e.g., 10 G and\
    \ 40 G), a larger spacing such as 300 GHz may be\n   needed.  Hence, the characteristics\
    \ (states) of the existing\n   wavelength LSPs should be considered for a new\
    \ RWA request in WSON.\n   In summary, when stateful PCEs are used to perform\
    \ the IA-RWA\n   procedure, they need to know the characteristics of the existing\n\
    \   wavelength LSPs.  The impairment information relating to existing and\n  \
    \ to-be-established LSPs can be obtained by nodes in WSON networks via\n   external\
    \ configuration or other means such as monitoring or\n   estimation based on a\
    \ vendor-specific impair model.  However, WSON-\n   related routing protocols,\
    \ i.e., [RFC7688] and [RFC7580], only\n   advertise limited information (i.e.,\
    \ availability) of the existing\n   wavelengths, without defining the supported\
    \ client bit rates.  It\n   will incur a substantial amount of control-plane overhead\
    \ if routing\n   protocols are extended to support dissemination of the new\n\
    \   information relevant for the IA-RWA process.  In this scenario,\n   stateful\
    \ PCE(s) would be a more appropriate mechanism to solve this\n   problem.  Stateful\
    \ PCE(s) can exploit impairment information of LSPs\n   stored in LSP-DB to provide\
    \ accurate RWA calculation.\n"
- title: 4.  Deployment Considerations
  contents:
  - "4.  Deployment Considerations\n   This section discusses general issues with\
    \ stateful PCE deployments\n   and identifies areas where additional protocol\
    \ extensions and\n   procedures are needed to address them.  Definitions of protocol\n\
    \   mechanisms are beyond the scope of this document.\n"
- title: 4.1.  Multi-PCE Deployments
  contents:
  - "4.1.  Multi-PCE Deployments\n   Stateless and stateful PCEs can coexist in the\
    \ same network and be in\n   charge of path computation of different types.  To\
    \ solve the problem\n   of distinguishing between the two types of PCEs, either\
    \ discovery or\n   configuration may be used.\n   Multiple stateful PCEs can coexist\
    \ in the same network.  These PCEs\n   may provide redundancy for load sharing,\
    \ resilience, or partitioning\n   of computation features.  Regardless of the\
    \ reason for multiple PCEs,\n   an LSP is only delegated to one of the PCEs at\
    \ any given point in\n   time.  However, an LSP can be redelegated between PCEs,\
    \ for example,\n   when a PCE fails.  [RFC7399] discusses various approaches for\n\
    \   synchronizing state among the PCEs when multiple PCEs are used for\n   load\
    \ sharing or backup and compute LSPs for the same network.\n"
- title: 4.2.  LSP State Synchronization
  contents:
  - "4.2.  LSP State Synchronization\n   The LSP-DB is populated using information\
    \ received from the PCC.\n   Because the accuracy of the computations depends\
    \ on the accuracy of\n   the databases used and because the updates must reach\
    \ the PCE from\n   the network, it is worth noting that the PCE view lags behind\
    \ the\n   true state of the network.  Thus, the use of stateful PCE reduces but\n\
    \   cannot eliminate the possibility of crankbacks, nor can it guarantee\n   optimal\
    \ computations all the time.  [RFC7399] discusses these\n   limitations and potential\
    \ ways to alleviate them.\n   In case of multiple PCEs with different capabilities\
    \ coexisting in\n   the same network, such as a passive stateful PCE and an active\n\
    \   stateful PCE, it is useful to refer to an LSP, be it delegated or\n   not,\
    \ by a unique identifier instead of providing detailed information\n   (e.g.,\
    \ route, bandwidth) associated with it, when these PCEs\n   cooperate on path\
    \ computation, such as for load sharing.\n"
- title: 4.3.  PCE Survivability
  contents:
  - "4.3.  PCE Survivability\n   For a stateful PCE, an important issue is to get\
    \ the LSP state\n   information resynchronized after a restart.  LSP state\n \
    \  synchronization procedures can be applied equally to a network node\n   or\
    \ another PCE, allowing multiple ways to reacquire the LSP database\n   on a restart.\
    \  Because synchronization may also be skipped, if a PCE\n   implementation has\
    \ the means to retrieve its database in a different\n   way (for example, from\
    \ a backup copy stored locally), the state can\n   be restored without further\
    \ overhead in the network.  A hybrid\n   approach where the bulk of the state\
    \ is recovered locally, and a\n   small amount of state is reacquired from the\
    \ network, is also\n   possible.  Note that locally recovering the state would\
    \ still require\n   some degree of resynchronization to ensure that the recovered\
    \ state\n   is indeed up-to-date.  Depending on the resynchronization mechanism\n\
    \   used, there may be an additional load on the PCE, and there may be a\n   delay\
    \ in reaching the synchronized state, which may negatively affect\n   survivability.\
    \  Different resynchronization methods are suited for\n   different deployments\
    \ and objectives.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This document describes general considerations\
    \ for a stateful PCE\n   deployment and examines its applicability and benefits,\
    \ as well as\n   its challenges and limitations through a number of use cases.\
    \  No new\n   protocol extensions to PCEP are defined in this document.\n   The\
    \ PCEP extensions in support of the stateful PCE and the delegation\n   of path\
    \ control ability can result in more information and control\n   being available\
    \ for a hypothetical adversary and a number of\n   additional attack surfaces\
    \ that must be protected.  This includes,\n   but is not limited to, the authentication\
    \ and encryption of PCEP\n   sessions, snooping of the state of the LSPs active\
    \ in the network,\n   etc.  Therefore, documents in which the PCEP protocol extensions\
    \ are\n   defined need to consider the issues and risks associated with a\n  \
    \ stateful PCE.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC4655]  Farrel, A., Vasseur, J., and J. Ash,\
    \ \"A Path Computation\n              Element (PCE)-Based Architecture\", RFC\
    \ 4655,\n              DOI 10.17487/RFC4655, August 2006,\n              <http://www.rfc-editor.org/info/rfc4655>.\n\
    \   [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n  \
    \            Element (PCE) Communication Protocol (PCEP)\", RFC 5440,\n      \
    \        DOI 10.17487/RFC5440, March 2009,\n              <http://www.rfc-editor.org/info/rfc5440>.\n\
    \   [RFC7399]  Farrel, A. and D. King, \"Unanswered Questions in the Path\n  \
    \            Computation Element Architecture\", RFC 7399,\n              DOI\
    \ 10.17487/RFC7399, October 2014,\n              <http://www.rfc-editor.org/info/rfc7399>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC3209]  Awduche, D., Berger, L., Gan, D.,\
    \ Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE: Extensions\
    \ to RSVP for LSP\n              Tunnels\", RFC 3209, DOI 10.17487/RFC3209, December\
    \ 2001,\n              <http://www.rfc-editor.org/info/rfc3209>.\n   [RFC4427]\
    \  Mannie, E., Ed. and D. Papadimitriou, Ed., \"Recovery\n              (Protection\
    \ and Restoration) Terminology for Generalized\n              Multi-Protocol Label\
    \ Switching (GMPLS)\", RFC 4427,\n              DOI 10.17487/RFC4427, March 2006,\n\
    \              <http://www.rfc-editor.org/info/rfc4427>.\n   [RFC5212]  Shiomoto,\
    \ K., Papadimitriou, D., Le Roux, JL., Vigoureux,\n              M., and D. Brungard,\
    \ \"Requirements for GMPLS-Based Multi-\n              Region and Multi-Layer\
    \ Networks (MRN/MLN)\", RFC 5212,\n              DOI 10.17487/RFC5212, July 2008,\n\
    \              <http://www.rfc-editor.org/info/rfc5212>.\n   [RFC5521]  Oki, E.,\
    \ Takeda, T., and A. Farrel, \"Extensions to the\n              Path Computation\
    \ Element Communication Protocol (PCEP) for\n              Route Exclusions\"\
    , RFC 5521, DOI 10.17487/RFC5521, April\n              2009, <http://www.rfc-editor.org/info/rfc5521>.\n\
    \   [RFC5557]  Lee, Y., Le Roux, JL., King, D., and E. Oki, \"Path\n         \
    \     Computation Element Communication Protocol (PCEP)\n              Requirements\
    \ and Protocol Extensions in Support of Global\n              Concurrent Optimization\"\
    , RFC 5557, DOI 10.17487/RFC5557,\n              July 2009, <http://www.rfc-editor.org/info/rfc5557>.\n\
    \   [RFC5623]  Oki, E., Takeda, T., Le Roux, JL., and A. Farrel,\n           \
    \   \"Framework for PCE-Based Inter-Layer MPLS and GMPLS\n              Traffic\
    \ Engineering\", RFC 5623, DOI 10.17487/RFC5623,\n              September 2009,\
    \ <http://www.rfc-editor.org/info/rfc5623>.\n   [RFC5671]  Yasukawa, S. and A.\
    \ Farrel, Ed., \"Applicability of the\n              Path Computation Element\
    \ (PCE) to Point-to-Multipoint\n              (P2MP) MPLS and GMPLS Traffic Engineering\
    \ (TE)\", RFC 5671,\n              DOI 10.17487/RFC5671, October 2009,\n     \
    \         <http://www.rfc-editor.org/info/rfc5671>.\n   [RFC6163]  Lee, Y., Ed.,\
    \ Bernstein, G., Ed., and W. Imajuku,\n              \"Framework for GMPLS and\
    \ Path Computation Element (PCE)\n              Control of Wavelength Switched\
    \ Optical Networks (WSONs)\",\n              RFC 6163, DOI 10.17487/RFC6163, April\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6163>.\n   [RFC7580]\
    \  Zhang, F., Lee, Y., Han, J., Bernstein, G., and Y. Xu,\n              \"OSPF-TE\
    \ Extensions for General Network Element\n              Constraints\", RFC 7580,\
    \ DOI 10.17487/RFC7580, June 2015,\n              <http://www.rfc-editor.org/info/rfc7580>.\n\
    \   [RFC7688]  Lee, Y., Ed. and G. Bernstein, Ed., \"GMPLS OSPF\n            \
    \  Enhancement for Signal and Network Element Compatibility\n              for\
    \ Wavelength Switched Optical Networks\", RFC 7688,\n              DOI 10.17487/RFC7688,\
    \ November 2015,\n              <http://www.rfc-editor.org/info/rfc7688>.\n  \
    \ [RFC7698]  Gonzalez de Dios, O., Ed., Casellas, R., Ed., Zhang, F.,\n      \
    \        Fu, X., Ceccarelli, D., and I. Hussain, \"Framework and\n           \
    \   Requirements for GMPLS-Based Control of Flexi-Grid Dense\n              Wavelength\
    \ Division Multiplexing (DWDM) Networks\",\n              RFC 7698, DOI 10.17487/RFC7698,\
    \ November 2015,\n              <http://www.rfc-editor.org/info/rfc7698>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank Cyril Margaria, Adrian Farrel, JP\
    \ Vasseur, and\n   Ravi Torvi for the useful comments and discussions.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following people all contributed significantly to this document\n\
    \   and are listed below in alphabetical order:\n   Ramon Casellas\n   CTTC -\
    \ Centre Tecnologic de Telecomunicacions de Catalunya\n   Av.  Carl Friedrich\
    \ Gauss n7\n   Castelldefels, Barcelona 08860\n   Spain\n   Email: ramon.casellas@cttc.es\n\
    \   Edward Crabbe\n   Email: edward.crabbe@gmail.com\n   Dhruv Dhody\n   Huawei\
    \ Technology\n   Leela Palace\n   Bangalore, Karnataka 560008\n   India\n   Email:\
    \ dhruv.dhody@huawei.com\n   Oscar Gonzalez de Dios\n   Telefonica Investigacion\
    \ y Desarrollo\n   Emilio Vargas 6\n   Madrid, 28045\n   Spain\n   Phone: +34\
    \ 913374013\n   Email: ogondio@tid.es\n   Young Lee\n   Huawei\n   1700 Alma Drive,\
    \ Suite 100\n   Plano, TX 75075\n   United States of America\n   Phone: +1 972\
    \ 509 5599 x2240\n   Fax: +1 469 229 5397\n   Email: leeyoung@huawei.com\n   Jan\
    \ Medved\n   Cisco Systems, Inc.\n   170 West Tasman Dr.\n   San Jose, CA 95134\n\
    \   United States of America\n   Email: jmedved@cisco.com\n   Robert Varga\n \
    \  Pantheon Technologies LLC\n   Mlynske Nivy 56\n   Bratislava 821 05\n   Slovakia\n\
    \   Email: robert.varga@pantheon.sk\n   Fatai Zhang\n   Huawei Technologies\n\
    \   F3-5-B R&D Center, Huawei Base\n   Bantian, Longgang District\n   Shenzhen\
    \ 518129\n   China\n   Phone: +86-755-28972912\n   Email: zhangfatai@huawei.com\n\
    \   Xiaobing Zi\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Xian Zhang (editor)\n   Huawei Technologies\n   F3-5-B\
    \ R&D Center\n   Huawei Industrial Base\n   Bantian, Longgang District\n   Shenzhen,\
    \ Guangdong  518129\n   China\n   Email: zhang.xian@huawei.com\n   Ina Minei (editor)\n\
    \   Google, Inc.\n   1600 Amphitheatre Parkway\n   Mountain View, CA  94043\n\
    \   United States of America\n   Email: inaminei@google.com\n"
