The China Mobile, Huawei, and ZTE Broadband Network Gateway (BNG)
Simple Control and User Plane Separation Protocol (S CUSP)
Abstract A Broadband Network Gateway (BNG) in a fixed wireline access network is an Ethernet centric IP edge router and the aggregation point for subscriber traffic.
Control and User Plane Separation (CUPS) for such a BNG improves flexibility and scalability but requires various communication between the User Plane (UP) and the Control Plane (CP).
China Mobile, Huawei Technologies, and ZTE have developed a simple CUPS control channel protocol to support such communication: the Simple Control and User Plane Separation Protocol (S CUSP).
S CUSP is defined in this document.
This document is not an IETF standard and does not have IETF consensus.
S CUSP is presented here to make its specification conveniently available to the Internet community to enable diagnosis and interoperability.
A Broadband Network Gateway (BNG) in a fixed wireline access network is an Ethernet centric IP edge router and the aggregation point for subscriber traffic.
To provide centralized session management, flexible address allocation, high scalability for subscriber management capacity, and cost efficient redundancy, the CU separated (CP/UP separated)
BNG framework is described in a technical report [TR 384] from the Broadband Forum (BBF).
The CU separated service CP, which is responsible for user access authentication and setting forwarding entries in UPs, can be virtualized and centralized.
The routing control and forwarding plane, i.e., the BNG UP (local), can be distributed across the infrastructure.
Other structures can also be supported, such as the CP and UP being virtual or both being physical.
Note: In this document, the terms "user" and "subscriber" are used interchangeably.
This document specifies the Simple CU Separation Protocol (S CUSP) for communications over the BNG control channel between a BNG CP and a set of UPs.
S CUSP is designed to be flexible and extensible so as to allow for easy addition of messages and data items, should further requirements be expressed in the future.
This document is not an IETF standard and does not have IETF consensus.
S CUSP was designed by China Mobile, Huawei Technologies, and ZTE.
It is presented here to make the S CUSP specification conveniently available to the Internet community to enable diagnosis and interoperability.
At the time of writing this document, the BBF is working to produce [WT 459], which will describe an architecture and requirements for a CP and UP separation of a disaggregated BNG.
Future work may attempt to show how the protocol described in this document addresses those requirements and may modify this specification to handle unaddressed requirements.
This section specifies implementation requirement keywords and terms used in this document.
S CUSP messages are described in this document using Routing Backus Naur Form (RBNF) as defined in [RFC5511].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
This section specifies terms used in this document.
A BNG (or Broadband Remote Access Server (BRAS)) routes traffic to and from broadband remote access devices such as digital subscriber line access multiplexers (DSLAM) on an Internet Service Provider's (ISP) network.
BNG / BRAS can also be referred to as a BAS or BBRAS.
CP is a user control management component that supports the management of the UP's resources such as the user entry and forwarding policy.
A bit in a VLAN tag after the priority and before the VLAN ID.
(This bit was formerly the CFI (Canonical Format Indicator).)
The name is left over from when subscribers literally dialed up on a modem equipped phone line but herein is applied to other initial connection techniques.
Initial connection is frequently indicated by the receipt of packets over PPPoE
Simple Control and User Plane Separation Protocol.
The remote user gaining network accesses via a BNG.
See Sections 7.1 and 7.3.
UP is a network edge and user policy implementation component.
The traditional router's control plane and forwarding plane are both preserved on BNG devices in the form of a user plane.
The rapid development of new services, such as 4K TV, Internet of Things (IoT), etc., and increasing numbers of home broadband service users present some new challenges for BNGs such as: Low resource utilization:
The traditional BNG acts as both a gateway for user access authentication and accounting and also an IP network's Layer 3 edge.
The mutually affecting nature of the tightly coupled control plane and forwarding plane makes it difficult to achieve the maximum performance of either plane.
Due to the large numbers of traditional BNGs, configuring each device in a network is very tedious when deploying global service policies.
As the network expands and new services are introduced, this deployment mode will cease to be feasible as it is unable to manage services effectively and to rectify faults rapidly.
The coupling of the CP and the forwarding plane, in addition to being a distributed network control mechanism, means that any new technology has to rely heavily on the existing network devices.
The framework for a cloud based BNG with CU separation to address these challenges for fixed networks is described in [TR 384].
The main idea of CU separation is to extract and centralize the user management functions of multiple BNG devices, forming a unified and centralized CP.
The traditional router's CP and forwarding plane are both preserved on BNG devices in the form of a UP.
The functions in a traditional BNG can be divided into two parts: (1) the user access management function and (2) the routing function.
The user access management function can be deployed as a centralized module or device, called the BNG Control Plane (BNG CP).
The routing function, which includes routing control and the forwarding engine, can be deployed in the form of the BNG User Plane (BNG UP).
Architecture of a CU Separated BNG
As shown in Figure 1, the BNG CP could be virtualized and centralized, which provides benefits such as centralized session management, flexible address allocation, high scalability for subscriber management capacity, cost efficient redundancy, etc.
The functional components inside the BNG CP can be implemented as Virtual Network Functions (VNFs) and hosted in an NFVI.
The UP management module in the BNG CP centrally manages the distributed BNG UPs (e.g., load balancing), as well as the setup, deletion, and maintenance of channels between CPs and UPs.
Other modules in the BNG CP, such as address management, AAA, etc., are responsible for the connection with external subsystems in order to fulfill those services.
Note that the UP SHOULD support both physical and virtual network functions.
For example, network functions related to BNG UP L3 forwarding can be disaggregated and distributed across the physical infrastructure, and the other CP management functions in the CU separated BNG can be moved into the NFVI for virtualization [TR 384].
Unified address pool management and CGN subscriber address traceability management.
This component performs Authentication, Authorization, and Accounting, together with RADIUS/Diameter.
The BNG communicates with the AAA server to check whether the subscriber who sent an access request has network access authority.
Once the subscriber goes online, this component (together with the Service Control component) implements accounting, data capacity limitation, and QoS enforcement policies.
User entry management and forwarding policy management.
Access management: Process user dial up packets, such as PPPoE, DHCP, L2TP, etc.
Management of UP interface status and the setup, deletion, and maintenance of channels between CP and UP.
The UP is responsible for the following:
Responsible for instantiating routing forwarding plane (e.g., routing, multicast, MPLS, etc.).
Routing and service forwarding plane functions:
Responsibilities include traffic forwarding, QoS, and traffic statistics collection.
Responsible for detecting whether a subscriber is still online.
The three interfaces defined below support the communication between the CP and UP.
These are referred to as the Service Interface (Si), Control Interface (Ci), and Management Interface (Mi) as shown in Figure 2.
Interfaces between the CP and UP of the BNG 3.3.1.
For a traditional BNG (without CU separation), the user dial up signals are terminated and processed by the CP of a BNG.
When the CP and UP of a BNG are separated, there needs to be a way to relay these signals between the CP and the UP.
The Si is used to establish tunnels between the CP and UP.
The tunnels are responsible for relaying the PPPoE , IPoE , and L2TP  related control packets that are received from a Residential Gateway (RG) over those tunnels.
An appropriate tunnel type is Virtual eXtensible Local Area Network (VXLAN)
The detailed definition of Si is out of scope for this document.
The CP uses the Ci to deliver subscriber session states, network routing entries, etc., to the UP (see Section 6.2.7).
The UP uses this interface to report subscriber service statistics, subscriber detection results, etc., to the CP (see Sections 6.3 and 6.4).
A carrying protocol for this interface is specified in this document.
The Network Configuration Protocol (NETCONF)
[RFC6241] is the protocol used on the Mi between a CP and UP.
It is used to configure the parameters of the Ci, Si, access interfaces, and QoS/ACL Templates.
It is expected that implementations will make use of existing YANG models where possible but that new YANG models specific to S CUSP will need to be defined.
The definitions of the parameters that can be configured are out of scope for this document.
The following numbered sequences (Figure 3) give a high level view of the main BNG CUPS procedures.
: BNG CUPS Procedures Overview (1)   S CUSP session establishment: This is the first step of the BNG CUPS procedures.
Once the Ci parameters are configured on a UP, it will start to set up S CUSP sessions with the specified CPs.
The detailed definition of S CUSP session establishment can be found in Section 4.1.1.
(2)   Board and interface report
: Once the S CUSP session is established between the UP and a CP, the UP will report status information on the boards and subscriber facing interfaces of this UP to the CP.
A board can also be called a Line/Service Process Unit (LPU/SPU) card.
The subscriber facing interfaces refer to the interfaces that connect the access network nodes (e.g., Optical Line Terminal (OLT), DSLAM, etc.).
The CP can use this information to enable the Broadband Access Server (BAS) function (e.g., IPoE, PPPoE, etc.)
See Sections 4.2.1 and 7.10 for more details on resource reporting.
(3)   BAS function enable: To enable the BAS function on the specified interfaces of a UP.
(4)   Subscriber network route advertisement: The CP will allocate one or more IP address blocks to a UP.
Each address block contains a series of IP addresses.
Those IP addresses will be allocated to subscribers who are dialing up from the UP.
To enable other nodes in the network to learn how to reach the subscribers, the CP needs to notify the UP to advertise to the network the routes that can reach those IP addresses.
(5)   5.1 5.6 is a complete call flow of a subscriber dial up (as defined in Section 4.3.1) process.
When a UP receives a dial  up request, it will relay the request packet to a CP through the Si.
The CP will parse the request.
If everything is OK, it will send an authentication request to the AAA server to authenticate the subscriber.
Once the subscriber passes the authentication, the AAA server will return a positive response to the CP.
Then the CP will send the dial up response packet to the UP, and the UP will forward the response packet to the subscriber (RG).
At the same time, the CP will create a subscriber session on the UP, enabling the subscriber to access the network.
For different access types, the process may be a bit different, but the high level process is similar.
For each access type, the detailed process can be found in Section 5.
(6)   6.1 6.3 is the sequence when updating an existing subscriber session.
The AAA server initiates a Change of Authorization (CoA) and sends the CoA to the CP.
The CP will then update the session according to the CoA.
See Section 4.3.2 for more detail on CP messages updating UP tables.
(7)   7.1 7.5 is the sequence for deleting an existing subscriber session.
When a UP receives an Offline Request, it will relay the request to a CP through the Si.
The CP will send back a response to the UP through the Si.
The UP will then forward the Offline Response to the subscriber.
Then the CP will delete the session on the UP through the Ci.
Event reports include the following two parts (more detail can be found in Section 4.3.4).
Both are reported using the Event message: 8.1.
Subscriber Traffic Statistics Report 8.2.
Subscriber Detection Result Report (9)
: See Section 4.2.5 for more detail on CP and UP synchronization.
(10)  CGN address allocation: See Section 4.2.4 for more detail on CGN address allocation.
S CUSP Protocol Overview 4.1.
S CUSP Session Establishment A UP is associated with a CP and is controlled by that CP.
In the case of a hot standby or cold standby, a UP is associated with two CPs: the master CP and standby CP.
The association between a UP and its CPs is implemented by dynamic configuration.
Once a UP knows its CPs, the UP starts to establish S CUSP sessions with those CPs, as shown in Figure 4.
The S CUSP session establishment consists of two successive steps: (1)  Establishment of a TCP connection (3 way handshake)
[RFC793] between the CP and the UP using a configured port from the dynamic port range (49152 65535).
(2)  Establishment of an S CUSP session over the TCP connection.
Once the TCP connection is established, the CP and the UP initialize the S CUSP session, during which the version and Keepalive timers are negotiated.
The version information (Hello TLV, see Section 7.4) is carried within Hello messages (see Section 6.2.1).
A CP can support multiple versions, but a UP can only support one version; thus the version negotiation is based on whether a version can be supported by both the CP and the UP.
If a CP or UP receives a Hello message that does not indicate a version supported by both, it responds with a Hello message containing an Error Information TLV to notify the peer of the Version Mismatch error, and the session establishment phase fails.
Keepalive negotiation is performed by carrying a Keepalive TLV in the Hello message.
The Keepalive TLV includes a Keepalive timer and DeadTimer field.
The CP and UP have to agree on the Keepalive Timer and DeadTimer.
Otherwise, a subsequent Hello message with an Error Information TLV will be sent to its peer, and the session establishment phase fails.
The S CUSP session establishment phase fails if the CP or UP disagree on the version and keepalive parameters or if one of the CP or UP does not answer after the expiration of the Establishment timer.
When the S CUSP session establishment fails, the TCP connection is promptly closed.
Successive retries are permitted, but an implementation SHOULD make use of an exponential backoff session establishment retry procedure.
The S CUSP session timer values that need to be configured are summarized in Table 1.
Keepalive   Table 1: S CUSP Session Timers 4.1.2.
Once an S CUSP session has been established, a UP or CP may want to know that its S CUSP peer is still connected.
Each end of an S CUSP session runs a Keepalive timer.
It restarts the timer every time it sends a message on the session.
When the timer expires, it sends a Keepalive message.
Thus, a message is transmitted at least as often as the value to which the Keepalive timer is reset, unless, as explained below, that value is the special value zero.
Each end of an S CUSP session also runs a DeadTimer and restarts that DeadTimer whenever a message is received on the session.
If the DeadTimer expires at an end of the session, that end declares the session dead and the session will be closed, unless their DeadTimer is set to the special value zero, in which case the session will not time out.
The minimum value of the Keepalive timer is 1 second, and it is specified in units of 1 second.
The RECOMMENDED default value is 30 seconds.
The recommended default for the DeadTimer is four times the value of the Keepalive timer used by the remote peer.
As above, the timers may be disabled by setting them to zero.
The Keepalive timer and DeadTimer are negotiated through the Keepalive TLV carried in the Hello message.
Once an S CUSP session has been established between a CP and a UP, the UP reports the state information of the boards and access facing interfaces on the UP to the CP, as shown in Figure 5.
Report messages are unacknowledged and are assumed to be delivered because the session runs over TCP.
The CP can use that information to activate/enable the BAS functions (e.g., IPoE, PPPoE, etc.)
In addition, the UP resource report may trigger a UP warm standby process.
In the case of warm standby, a failure on a UP may trigger the CP to start a warm standby process, by moving the online subscriber sessions to a standby UP and then directing the affected subscribers to access the Internet through the standby UP.
Both Board Status and Interface Status TLVs are carried in the Report message (Section 6.4).
Update BAS Function on Access Interface
Once the CP collects the interface status of a UP, it will activate/deactivate/modify the BAS functions on specified interfaces through the Update Request and Update Response message exchanges (Section 6.2), carrying the BAS Function TLV (Section 7.7).
The CP will allocate one or more address blocks to a UP.
Each address block contains a series of IP addresses.
Those IP addresses will be assigned to subscribers who are dialing up to the UP.
To enable the other nodes in the network to learn how to reach the subscribers, the CP needs to install the routes on the UP and notify the UP to advertise the routes to the network.
Update Network Routing The Update Request and Update Response message exchanges, carrying the IPv4/IPv6 Routing TLVs (Section 7.8), update the subscriber's network routing information.
CGN Public IP Address Allocation
The following sequences (Figure 8) describe the procedures related to CGN address management.
Three independent procedures are defined: one each for CGN address allocation request/response, CGN address renewal request/response, and CGN address release request/response.
CGN address allocation/renew/release procedures are designed for the case where the CGN function is running on the UP.
The UP has to map the subscriber private IP addresses to public IP addresses, and such mapping is performed by the UP locally when a subscriber dials up.
That means the UP has to ask for public IPv4 address blocks for CGN subscribers from the CP.
In addition, when a public IP address is allocated to a UP, there will be a lease time (e.g., one day).
Before the lease time expires, the UP can ask for renewal of the IP address lease from the CP.
It is achieved by the exchange of the Addr Renew Req and Addr Renew Ack messages.
If the public IP address will not be used anymore, the UP SHOULD release the address by sending an Addr Release Req message to the CP.
If the CP wishes to withdraw addresses that it has previously leased to a UP, it uses the same procedures as above.
The Oper code (see Section 7.1) in the IPv4/IPv6 Routing TLV (see Section 7.8) determines whether the request is an update or withdraw.
The relevant messages are defined in Section 6.5.
Data Synchronization between the CP and UP For a CU separated BNG, the UP will continue to function using the state that has been installed in it even if the CP fails or the session between the UP and CP fails.
Under some circumstances, it is necessary to synchronize state between the CP and UP, for example, if a CP fails and the UP is switched to a different CP.
One direction is from UP to CP; in that case, the synchronization information is mainly about the board/interface status of the UP.
The other direction is from CP to UP; in that case, the subscriber sessions, subscriber network routes, L2TP tunnels, etc., will be synchronized to the UP.
The synchronization is triggered by a Sync Request message, to which the receiver will (1) reply with a Sync Begin message to notify the requester that synchronization will begin and (2) then start the synchronization using the Sync Data message.
When synchronization finishes, a Sync End message will be sent.
Figure 9 shows the process of data synchronization between a UP and a CP.
Subscriber Session Procedures A subscriber session consists of a set of forwarding states, policies, and security rules that are applied to the subscriber.
It is used for forwarding subscriber traffic in a UP.
To initialize a session on a UP, a collection of hardware resources (e.g., NP, TCAM, etc.) has to be allocated to a session on a UP as part of its initiation.
Procedures related to subscriber sessions include subscriber session creation, update, deletion, and statistics reporting.
The following subsections give a high level view of the procedures.
The sequence below (Figure 10) describes the DHCP IPv4 dial up process.
It is an example that shows how a subscriber session is created.
(An example for IPv6 appears in Section 5.1.2.)
The request starts from an Online Request message (step 1) from the RG (for example, a DHCP Discovery packet).
When the UP receives the Online Request from the RG, it will tunnel the Online Request to the CP through the Si (step 2).
A tunneling technology implements the Si.
When the CP receives the Online Request from the UP, it will send an authentication request to the AAA server to authenticate and authorize the subscriber (step 3).
When a positive reply is received from the AAA server, the CP starts to create a subscriber session for the request.
Relevant resources (e.g., IP address, bandwidth, etc.) will be allocated to the subscriber.
Policies and security rules will be generated for the subscriber.
Then the CP sends a request to create a session to the UP through the Ci (step 4), and a response is expected from the UP to confirm the creation (step 5).
Finally, the CP will notify the AAA server to start accounting (step 6).
At the same time, an Online Response message (for example, a DHCP Ack packet) will be sent to the UP through the Si (step 7).
The UP will then forward the Online Response to the RG (step 8).
That completes the subscriber activation process.
The following numbered sequence (Figure 11) shows the process of updating the subscriber session.
: Updating a Subscriber Session When a subscriber session has been created on a UP, there may be requirements to update the session with new parameters (e.g., bandwidth, QoS, policies, etc.).
This procedure is triggered by a Change of Authorization (CoA) request message sent by the AAA server.
The CP will update the session on the UP according to the new parameters through the Ci.
The call flow below shows how S CUSP deals with a subscriber Offline Request.
Deleting a Subscriber Session Similar to the session creation process, when a UP receives an Offline Request from an RG, it will tunnel the request to a CP through the Si.
When the CP receives the Offline Request, it will withdraw/release the resources (e.g., IP address, bandwidth) that have been allocated to the subscriber.
It then sends a reply to the UP through the Si, and the UP will forward the reply to the RG.
At the same time, it will delete all the status of the session on the UP through the Ci.
Subscriber Session Events Report UP
When a session is created on a UP, the UP will periodically report statistics information and subscriber detection results of the session to the CP.
The subsections below give an overview of various "dial up" interactions over the Si followed by an overview of the setting of information in the UP by the CP using S CUSP over the Ci.
S CUSP messages are described in this document using Routing Backus Naur Form (RBNF) as defined in [RFC5511].
The following sequence (Figure 14) shows detailed procedures for DHCPv4 access.
After a subscriber is authenticated and authorized by the AAA server, the CP creates a new subscriber session on the UP.
This is achieved by sending an Update Request message to the UP.
The format of the Update Request message is shown as follows using RBNF: <Update Request Message
<Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
The UP will reply with an Update Response message.
The format of the Update Response message is as follows:
The following sequence (Figure 15) shows detailed procedures for DHCPv6 access.
Access Steps 1 7 are a standard DHCP IPv6 access process.
The subscriber creation is triggered by a DHCP IPv6 request message.
When this message is received, it means that the subscriber has passed the AAA authentication and authorization.
Then the CP will create a subscriber session on the UP.
This is achieved by sending an Update Request message to the UP (step 8).
The format of the Update Request message is as follows:
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
The UP will reply with an Update Response message (step 9).
The format of the Update Response message is as follows:
IPv6 Stateless Address Autoconfiguration (SLAAC)
The following flow (Figure 16) shows the IPv6 SLAAC access process.
It starts with a Router Solicit (RS) request from an RG that is tunneled to the CP by the UP.
After the AAA authentication and authorization, the CP will create a subscriber session on the UP.
This is achieved by sending an Update Request message to the UP (step 4).
The format of the Update Request message is as follows:
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
The UP will reply with an Update Response message (step 5).
The format of the Update Response message is as follows:
The following call flow (Figure 17) shows the DHCP IPv6 and SLAAC access process.
and SLAAC Access When a subscriber passes AAA authentication, the CP will create a subscriber session on the UP.
This is achieved by sending an Update Request message to the UP (step 4).
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
The UP will reply with an Update Response message (step 5).
The format of the Update Response is as follows:
After receiving a DHCPv6 Solicit, the CP will update the subscriber session by sending an Update Request message with new parameters to the UP (step 10).
The format of the Update Request message is as follows:
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
The UP will reply with an Update Response message (step 11).
The format of the Update Response is as follows:
The following sequence (Figure 18) is a combination of DHCP IPv4 and DHCP IPv6 access processes.
The DHCP dual stack access includes three sets of Update Request/ Update Response exchanges to create/update a DHCPv4/v6 subscriber session.
(1)  Create a DHCPv4 session (steps 8 and 9):
<Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
(2)  Create a DHCPv6 session (steps 16 and 17):
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
L2 Static Subscriber Access L2 static subscriber access processes are as follows:
, the process starts with a CP installing a static subscriber detection list on a UP.
The list determines which subscribers will be detected.
That is implemented by exchanging Update Request and Update Response messages between CP and UP.
The formats of the messages are as follows:
> <IPv4 Static Subscriber Detect TLVs> <IPv6 Static Subscriber Detect TLVs
For L2 static subscriber access, there are three ways to trigger the access process:
(1)  Triggered by UP (steps 3.1 3.6): This assumes that the UP knows the IP address, the access interface, and the VLAN of the RG.
The UP will actively trigger the access flow by sending an ARP/ ND packet to the RG.
If the RG is online, it will reply with an ARP/ND to the UP.
The UP will tunnel the ARP/ND to the CP through the Si.
The CP then triggers the authentication process.
If the authentication result is positive, the CP will create a corresponding subscriber session on the UP.
(2)  Triggered by RG ARP/ND (steps 4.1 4.6): Most of the process is the same as option 1 (triggered by UP).
The difference is that the RG will actively send the ARP/ND to trigger the process.
(3)  Triggered by RG IP traffic (steps 5.1 5.7): This is for the case where the RG has the ARP/ND information, but the subscriber session on the UP is lost (e.g., due to failure on the UP or the UP restarting).
That means the RG may keep sending IP packets to the UP.
The packets will trigger the UP to start a new access process.
From a subscriber session point of view, the procedures and the message formats for the three cases above are the same, as follows.
<Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
Access Figure 20 shows the IPv4 PPPoE access call flow.
In the above sequence, steps 1 4 are the standard PPPoE call flow.
The UP is responsible for redirecting the PPPoE control packets to the CP or RG.
The PPPoE control packets are transmitted between the CP and UP through the Si.
After the PPPoE call flow, if the subscriber passed the AAA authentication and authorization, the CP will create a corresponding session on the UP through the Ci.
The formats of the messages are as follows:
<Basic Subscriber TLV> <PPP Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
Access Figure 21 describes the IPv6 PPPoE access call flow.
Access From the above sequence, steps 1 4 are the standard PPPoE call flow.
The UP is responsible for redirecting the PPPoE control packets to the CP or RG.
The PPPoE control packets are transmitted between the CP and UP through the Si.
After the PPPoE call flow, if the subscriber passed the AAA authentication and authorization, the CP will create a corresponding session on the UP through the Ci.
The formats of the messages are as follows:
<Basic Subscriber TLV> <PPP Subscriber TLV
> <IPv6 Subscriber TLV> <IPv6
Then, the RG will initialize an ND/DHCPv6 negotiation process with the CP (see steps 7 and 7'); after that, it will trigger an update (steps 8 9 and 8' 9') to the subscriber session.
The formats of the update messages are as follows:
<Basic Subscriber TLV> <PPP Subscriber TLV
> <IPv6 Subscriber TLV> <IPv6
Dual Stack Access Figure 22 shows a combination of IPv4 and IPv6 PPPoE
dual stack is a combination of IPv4 PPPoE and
The process is as above.
The formats of the messages are as follows:
(1)  Create an IPv4 PPPoE subscriber session (steps 5 6):
<Basic Subscriber TLV> <PPP Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
(2)  Create an IPv6 PPPoE subscriber session (steps 5' 6'):
<Basic Subscriber TLV> <PPP Subscriber TLV
> <IPv6 Subscriber TLV> <IPv6
(3)  Update the IPv6 PPPoE subscriber session (steps 9 10 and 9'  10'):
<Basic Subscriber TLV> <PPP Subscriber TLV
> <IPv6 Subscriber TLV> <IPv6
WLAN Access Figure 23 shows the WLAN access call flow.
Push HTTP Log in Page   15
WLAN Access WLAN access starts with the DHCP dial up process (steps 1 6).
After that, the CP will create a subscriber session on the UP (steps 7 8).
The formats of the session creation messages are as follows:
> <Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
After step 10, the RG will be allocated an IP address, and its first HTTP packet will be redirected to a web server for subscriber authentication (steps 11 17).
> <Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
9  via Routing   Figure 24: L2TP
LAC Access Steps 1 4 are a standard PPPoE access process.
After that, the LAC  CP starts to negotiate an L2TP session and tunnel with the LNS.
In this case, the BNG is running as an LNS and separated into LNS CP and LNS UP.
Steps 1 5 finish the normal L2TP dial up process.
When the L2TP session and tunnel negotiations are finished, the LNS CP will create an L2TP LNS subscriber session on the LNS UP.
The format of the messages is as follows:
> <L2TP LNS Subscriber TLV> <Basic Subscriber TLV
> <PPP Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
After that, the LNS CP will trigger a AAA authentication.
> <L2TP LNS Subscriber TLV> <Basic Subscriber TLV
> <PPP Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
via Si   Figure 26: L2TP
LNS IPv6 Access Steps 1 12 are the same as L2TP LNS IPv4 access.
Steps 1 5 finish the normal L2TP dial up process.
When the L2TP session and tunnel negotiations are finished, the LNS CP will create an L2TP LNS subscriber session on the LNS UP.
The format of the messages is as follows:
> <L2TP LNS Subscriber TLV> <Basic Subscriber TLV> <PPP Subscriber TLV> <IPv6 Subscriber TLV> <IPv6 Routing TLV
After that, the LNS CP will trigger a AAA authentication.
> <L2TP LNS Subscriber TLV> <Basic Subscriber TLV> <PPP Subscriber TLV> <IPv6 Subscriber TLV> <IPv6 Routing TLV
Then, an ND negotiation will be triggered by the RG.
> <PPP Subscriber TLV> <IPv6 Subscriber TLV> <IPv6 Routing TLV
The first steps allocate one or more CGN address blocks to the UP (steps 1 2).
This is achieved by the following message exchanges between CP and UP:
<Common Header> <Address Allocation Response
> Steps 3 9 show the general dial up process in the case of CGN mode.
The specific processes (e.g., IPoE, PPPoE, L2TP, etc.) are defined in above sections.
If a subscriber is a CGN subscriber, once the subscriber session is created/updated, the UP will report the NAT information to the CP.
This is achieved by carrying the Subscriber CGN Port Range TLV in the Update Response message.
L3 Leased Line Access 5.6.1.
Redirected to Web Server   9
Push HTTP Log in Page   10
Based L3 Leased Line Access
In this case, IP traffic from the RG will trigger the CP to authenticate the RG by checking the source IP and the exchanges with the AAA server.
> <Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
Then, the HTTP traffic from the RG will be redirected to a web server to finish the web authentication.
Once the web authentication is passed, the CP will trigger another AAA authentication.
> <Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
In this case, the CP must install on the UP an access control list, which is used by the UP to determine whether or not an RG is legal.
If the traffic is from a legal RG, it will be redirected to the CP though the Si.
The CP will trigger a AAA interchange with the AAA server.
> <Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6
Multicast Access Multicast access starts with a user access request from the RG.
The request will be redirected to the CP by the Si.
A follow up AAA interchange between the CP and the AAA server will be triggered.
After the authentication, the CP will create a multicast subscriber session on the UP through the following messages: IPv4 Case, there will be a Multicast ProfileV4
sub TLV present in the Subscriber Policy TLV:
<Basic Subscriber TLV> <IPv4 Subscriber TLV> <IPv4 Routing TLV
>] IPv6 Case, there will be a Multicast ProfileV6
sub TLV present in the Subscriber Policy TLV:
<Basic Subscriber TLV> <IPv6 Subscriber TLV> <IPv6 Routing TLV
An S CUSP message consists of a common header followed by a variable  length body consisting entirely of TLVs.
Receiving an S CUSP message with an unknown message type or missing mandatory TLV MUST trigger an Error message (see Section 6.7) or a Response message with an Error Information TLV (see Section 7.6).
Conversely, if a TLV is optional, the TLV may or may not be present.
Optional TLVs are indicated in the message formats shown in this document by being enclosed in square brackets.
This section specifies the format of the common S CUSP message header and lists the defined messages.
Network byte order is used for all multi byte fields.
S CUSP Message Common Header Ver (4 bits):
The major version of the protocol.
This document specifies version 1.
Different major versions of the protocol may have significantly different message structures and formats except that the Ver field will always be in the same place at the beginning of each message.
A successful S CUSP session depends on the CP and the UP both using the same major version of the protocol.
MUST be sent as zero and ignored on receipt.
The set of message types specified in this document is listed in Section 8.1.
Message Length (16 bits):  Total length of the S CUSP message including the common header, expressed in number of bytes as an unsigned integer.
This field is used to identify requests.
It is echoed back in any corresponding ACK/Response/Error message.
It is RECOMMENDED that a monotonically increasing value be used in successive messages and that the value wraps back to zero after 0xFFFF.
The content of this field is an opaque value that the receiver MUST NOT use for any purpose except to echo back in a corresponding response and, optionally, for logging.
The Hello message is used for S CUSP session establishment and version negotiation.
The details of S CUSP session establishment and version negotiation can be found in Section 4.1.1.
The format of the Hello message is as follows:
The return code and negotiation result will be carried in the Error Information TLV.
They are listed as follows:
One or more of the TLVs was not understood.
The S CUSP session establishment phase fails.
The S CUSP session establishment phase fails.
Each end of an S CUSP session periodically sends a Keepalive message.
It is used to detect whether the peer end is still alive.
The Keepalive procedures are defined in Section 4.1.2.
The format of the Keepalive message is as follows:
The Sync Request message is used to request synchronization from an S CUSP peer.
Both CP and UP can request their peer to synchronize data.
The format of the Sync Request message is as follows:
> A Sync Request message may result in a Sync Begin message from its peer.
The Sync Begin message is defined in Section 6.2.4.
The Sync Begin message is a reply to a Sync Request message.
It is used to notify the synchronization requester whether the synchronization can be started.
The format of the Sync Begin message is as follows:
The return codes are carried in the Error Information TLV.
The codes are listed below: 0:  Success.
One or more of the TLVs was not understood.
The data to be synchronized is not ready.
The data synchronization is not supported.
The Sync Data message is used to send data being synchronized between the CP and UP.
The Sync Data message has the same function and format as the Update Request message.
The difference is that there is no ACK for a Sync Data message.
An error caused by the Sync Data message will result in a Sync End message.
Synchronize all subscriber sessions to the UP.
The Subscriber TLVs carried are those appearing in Section 7.9.
As for which TLVs should be carried, it depends on the specific session data to be synchronized.
The process is equivalent to the creation of a particular session.
Refer to Section 5 to see more details.
The Sync End message is used to indicate the end of a synchronization process.
The format of a Sync End message is as follows:
The return/error codes are listed as follows:
One or more of the TLVs was not understood.
The Update Request message is a multipurpose message; it can be used to create, update, and delete subscriber sessions on a UP.
For session operations, the specific operation is controlled by the Oper field of the carried TLVs.
As defined in Section 7.1, the Oper field can be set to either Update or Delete when a TLV is carried in an Update Request message.
When the Oper field is set to Update, it means to create or update a subscriber session.
If the Oper field is set to Delete, it is a request to delete a corresponding session.
The format of the Update Request message is as follows:
Where the Subscriber TLVs are those appearing in Section 7.9.
Each Update Request message will result in an Update Response message, which is defined in Section 6.2.8.
The Update Response message is a response to an Update Request message.
It is used to confirm the update request (or reject it in the case of an error).
The format of an Update Response message is as follows:
The return/error codes are carried in the Error Information TLV.
They are listed as follows:
One or more of the TLVs was not understood.
The corresponding address pool cannot be found.
The address pool is fully allocated, and no address segment is available.
The address pool subnet cannot be found.
Subnets in the address pool have been classified into other clients.
The forwarding table fails to be delivered because the forwarding resources are insufficient.
The QoS policy takes effect.
Failed to process the queue in the QoS policy.
Processing of the CAR in the QoS policy fails.
Statistics processing failed due to insufficient statistics resources.
The Event message is used to report subscriber session traffic statistics and detection information.
The format of the Event message is as follows:
The Report message is used to report board and interface status on a UP.
The format of the Report message is as follows:
200    Addr Allocation Req   Address Allocation Request
Addr Allocation Ack   Address Allocation Response
The Addr Allocation Req message is used to request CGN address allocation.
The format of the Addr Allocation Req message is as follows:
The Addr Allocation Ack message is a response to an Addr Allocation Req message.
The Addr Renew Req message is used to request address renewal.
Address Renewal Request TLV> 6.5.4.
The Addr Renew Ack message is a response to an Addr Renew Req message.
The format of the Addr Renew Req message is as follows: <Addr Renew Ack Message
The Addr Release Req message is used to request address release.
The format of the Addr Release Req message is as follows:
The Addr Release Ack message is a response to an Addr Release Req message.
The format of the Addr Release Ack message is as follows:
The Vendor message, in conjunction with the Vendor TLV and Vendor sub TLV, can be used by vendors to extend S CUSP.
The Message Type is 11.
If the receiver does not recognize the message, an Error message will be returned to the sender.
The format of the Vendor message is as follows:
[<any other TLVs as specified by the vendor
The Error message is defined to return some critical error information to the sender.
If a receiver does not support the type of the received message, it MUST return an Error message to the sender.
S CUSP TLVs and Sub TLVs
This section specifies the following:
The format of the TLVs that appear in S CUSP messages,
The format of the sub TLVs that appear within the values of some TLVs, and
The format of some basic data fields that appear within TLVs or sub TLVs.
See Section 8 for a list of all defined TLVs and sub TLVs.
Common TLV Header S CUSP messages consist of the common header specified in Section 6.1 followed by TLVs formatted as specified in this section. 0
Common TLV Header Oper (4 bits):  For Message Types that specify an operation on a data set, the Oper field is interpreted as Update, Delete, or Reserved as specified in Section 8.3.
For all other Message Types, the Oper field MUST be sent as zero and ignored on receipt.
The type of a TLV.
TLV Type specifies the interpretation and format of the Value field of the TLV.
The length of the Value portion of the TLV in bytes as an unsigned integer.
This is the portion of the TLV whose size is given by TLV Length.
It consists of fields, frequently using one of the basic data field types (see Section 7.2) and sub TLVs (see Section 7.3).
This section specifies the binary format of several standard basic data fields that are used within other data structures in this specification.
STRING:  0 to 255 octets.
Will be encoded as a sub TLV (see Section 7.3) to provide the length.
The use of this data type in S CUSP is to provide convenient labels for use by network operators in configuring and debugging their networks and interpreting S CUSP messages.
Subscribers will not normally see these labels.
They are normally interpreted as ASCII [RFC20].
4 octets of the IPv4 address value followed by a 4 octet address mask in the format XXX.XXX.XXX.XXX.
16 octets of the IPv6 address followed by a 4 octet integer n in the range of 0 to 128, which gives the address mask as the one's complement of 2  (128 n) 1.
D:  Drop Eligibility Indicator (DEI).
VLAN ID:  Unsigned integer in the range 1 4094.
(0 and 4095 are not valid VLAN IDs [802.1Q].)
Sub TLV Format and Sub TLVs
In some cases, the Value portion of a TLV, as specified in Section 7.1, can contain one or more sub TLVs formatted as follows:
Sub TLV Header Type (2 bytes):
The type of a sub TLV.
The Type field specifies the interpretation and format of the Value field of the TLV.
Sub TLV type values have the same meaning regardless of the TLV type of the TLV within which the sub TLV occurs.
The length of the Value portion of the sub TLV in bytes as an unsigned integer.
This is the Value portion of the sub TLV whose size is given by Length.
The sub TLVs currently specified are defined in the following subsections.
This document defines the following name sub TLVs that are used to carry the name of the corresponding object.
The length of each of these sub TLVs is variable from 1 to 255 octets.
The value is of type STRING padded with zero octets to a length in octets that is an integer multiple of 4.
The Ingress CAR sub TLV indicates the authorized upstream Committed Access Rate (CAR) parameters.
The sub TLV type of the Ingress CAR sub TLV is 7.
The sub TLV length is 16.
The format is as shown in Figure 34. 0
Where: CIR (4 bytes):  Guaranteed rate in bits/second.
PIR (4 bytes):  Burst rate in bits/second.
The token bucket in bytes.
PBS (4 bytes):  Burst token bucket in bytes.
These fields are unsigned integers.
More details about CIR, PIR, CBS, and PBS can be found in [RFC2698].
The Egress CAR sub TLV indicates the authorized downstream Committed Access Rate (CAR) parameters.
The sub TLV type of the Egress CAR sub TLV is 8.
Its sub TLV length is 16 octets.
The format of the value part is as defined below.
Where: CIR (4 bytes):  Guaranteed rate in bits/second.
PIR (4 bytes):  Burst rate in bits/second.
The token bucket in bytes.
PBS (4 bytes):  Burst token bucket in bytes.
These fields are unsigned integers.
More details about CIR, PIR, CBS, and PBS can be found in [RFC2698].
If Desc Sub TLV The
If Desc sub TLV is defined to designate an interface.
It is an optional sub TLV that may be carried in those TLVs that have an If  Index or Out If Index field.
If Desc sub TLV is used as a locally unique identifier within a BNG.
The sub TLV type is 11.
The sub TLV length is 12 octets.
The format depends on the If Type (Section 8.6).
If Desc Sub TLV (Virtual Port) Figure 36:
If Desc Sub TLV Formats
Where: If Type:  8 bits in length.
The value of this field indicates the type of an interface.
If Type values defined in this document are listed in Section 8.6.
Chassis (8 bits):  Identifies the chassis that the interface belongs to.
Slot (16 bits):  Identifies the slot that the interface belongs to.
Sub Slot (16 bits):  Identifies the sub slot the interface belongs to.
An identifier of a physical port/interface (e.g., If Type: 1 5).
It is locally significant within the slot/sub slot.
Sub Port Number (32 bits):  An identifier of the sub port.
Locally significant within its "parent" port (physical or virtual).
Logic ID (32 bits):  An identifier of a virtual interface (
e.g., If Type: 6 7).
The IPv6 Address List sub TLV is used to convey one or more IPv6 addresses.
It is carried in the IPv6 Subscriber TLV.
The sub TLV type is 12.
The sub TLV length is variable.
The format of the value part of the IPv6 Address List sub TLV is as follows:
Figure 37: IPv6 Address List
Where: IPv6 Address (IPv6 Address):
Each IP Address is of type IP  Address and carries an IPv6 address and length.
The Vendor sub TLV is intended to be used inside the Value portion of the Vendor TLV (Section 7.13).
It provides a Sub Type that effectively extends the sub TLV type in the sub TLV header and provides for versioning of Vendor sub TLVs.
The value part of the Vendor sub TLV is formatted as follows:
Where: Sub TLV type:  13.
Vendor ID (4 bytes):  Vendor ID as defined in RADIUS [RFC2865].
Sub Type (2 bytes):  Used by the vendor to distinguish multiple different sub TLVs.
Sub Type Version (2 bytes):  Used by the vendor to distinguish different versions of a vendor defined sub TLV Sub Type.
As specified by the vendor.
Since vendor code will be handling the sub TLV after the Vendor ID field is recognized, the remainder of the sub TLV can be organized however the vendor wants.
But it desirable for a vendor to be able to define multiple different Vendor sub TLVs and to keep track of different versions of its vendor defined sub TLVs.
Thus, it is RECOMMENDED that the vendor assign a Sub Type value for each of that vendor's sub TLVs that is different from other Sub Type values that vendor has used.
Also, when modifying a vendor defined sub TLV in a way potentially incompatible with a previous definition, the vendor SHOULD increase the value it is using in the Sub Type Version field.
The Hello TLV is defined to be carried in the Hello message for version and capabilities negotiation.
It indicates the S CUSP sub  version and capabilities supported.
VerSupported:  32 bits in length.
It is a bit map of the Sub  Versions of S CUSP that the sender supports.
This document specifies Sub Version zero of Major Version 1, that is, Version 1.0.
The VerSupported field MUST be nonzero.
The VerSupported bits are numbered from 0 as the most significant bit.
Bit 0 indicates support of Sub Version zero, bit 1 indicates support of Sub Version one, etc.
Vendor ID:  4 bytes in length.
Vendor ID, as defined in RADIUS [RFC2865].
Capabilities:  32 bits in length.
Flags that indicate the support of particular capabilities by the sender of the Hello.
No capabilities are defined in this document, so implementations of the version specified herein will set this field to zero.
The Capabilities field of the Hello TLV MUST be checked before any other TLVs in the Hello because capabilities defined in the future might extend existing TLVs or permit new TLVs.
After the exchange of Hello messages, the CP and UP each perform a logical AND of the Sub Version supported by the CP and the UP and separately perform a logical AND of the Capabilities field for the CP and the UP.
If the result of the AND of the Sub Versions supported is zero, then no session can be established, and the connection is torn down.
If the result of the AND of the Sub Versions supported is nonzero, then the session uses the highest Sub Version supported by both the CP and UP.
For example, if one side supports Sub Versions 1, 3, 4, and 5
(VerSupported   0x5C000000) and the other side supports 2, 3, and 4
(VerSupported   0x38000000), then 3 and 4 are the Sub Versions in common, and 4 is the highest Sub Version supported by both sides.
So Sub Version 4 is used for the session that has been negotiated.
The result of the logical AND of the Capabilities bits will show what additional capabilities both sides support.
If this result is zero, there are no such capabilities, so none can be used during the session.
If this result is nonzero, it shows the additional capabilities that can be used during the session.
The CP and the UP MUST NOT use a capability unless both advertise support.
The Keepalive TLV is carried in the Hello message.
It provides timing information for this feature.
The format of the value part of the Keepalive TLV is as follows:
Keepalive (8 bits):  Indicates the maximum interval (in seconds) between two consecutive S CUSP messages sent by the sender of the message containing this TLV as an unsigned integer.
The minimum value for the Keepalive field is 1 second.
When set to 0, once the session is established, no further Keepalive messages are sent to the remote peer.
A RECOMMENDED value for the Keepalive frequency is 30 seconds.
DeadTimer (8 bits in length):  Specifies the amount of time as an unsigned integer number of seconds, after the expiration of which, the S CUSP peer can declare the session with the sender of the Hello message to be down if no S CUSP message has been received.
The DeadTimer SHOULD be set to 0 and MUST be ignored if the Keepalive is set to 0.
A RECOMMENDED value for the DeadTimer is 4 times the value of the Keepalive.
The Reserved bits MUST be sent as zero and ignored on receipt.
The Error Information TLV is a common TLV that can be used in many responses (e.g., Update Response message) and ACK messages (e.g., Addr Allocation Ack message).
It is used to convey the information about an error in the received S CUSP message.
This parameter is the message type of the message containing an error.
Reserved (1 byte):  MUST be sent as zero and ignored on receipt.
TLV Type (2 bytes):  Indicates which TLV caused the error.
Error Code:  4 bytes in length.
Indicate the specific Error Code (see Section 8.5).
The BAS Function TLV is used by a CP to control the access mode, authentication methods, and other related functions of an interface on a UP.
If Index:  4 bytes in length, a unique identifier of an interface of a BNG.
Access Mode:  1 byte in length.
It indicates the access mode of the interface.
The defined values are listed in Section 8.7.
It indicates the authentication on this interface for the IPv4 scenario.
This field is defined as a bitmap.
The bits defined in this document are listed in Section 8.8.
Other bits are reserved and MUST be sent as zero and ignored on receipt.
It indicates the authentication on this interface for the IPv6 scenario.
This field is defined as a bitmap.
The bits defined in this document are listed in Section 8.8.
Other bits are reserved and MUST be sent as zero and ignored on receipt.
The IF Desc sub TLV can be carried.
If Desc sub TLV:  Carries the interface information.
The Flags field is defined as follows:
I N A S F  Figure 43:
Where: F (IPv4 Trigger) bit:
Indicates whether IPv4 packets can trigger a subscriber to go online.
Indicates whether IPv6 packets can trigger a subscriber to go online.
Indicates whether ARP packets can trigger a subscriber to go online.
Indicates whether ND packets can trigger a subscriber to go online.
I (IPoE Flow Check):  Used for UP detection.
1:  Enable traffic detection. 0
P (PPP Flow Check) bit:  Used for UP detection.
1:  Enable traffic detection. 0
Indicates whether ARP proxy is enabled on the interface.
The interface is enabled with ARP proxy and can process ARP requests across different network ports and VLANs. 0
The ARP proxy is not enabled on the interface and only the ARP requests of the same network port and VLAN are processed.
Indicates whether ND proxy is enabled on the interface.
The interface is enabled with ND proxy and can process ND requests across different network ports and VLANs. 0
The ND proxy is not enabled on the interface and only the ND requests of the same network port and VLAN are processed.
Reserved bits that MUST be sent as zero and ignored on receipt.
Typically, after an S CUSP session is established between a UP and a CP, the CP will allocate one or more blocks of IP addresses to the UP.
Those IP addresses will be allocated to subscribers who will dial up (as defined in Section 4.3.1) to the UP.
To make sure that other nodes within the network learn how to reach those IP addresses, the CP needs to install one or more routes that can reach those IP addresses on the UP and notify the UP to advertise the routes to the network.
The Routing TLVs are used by a CP to notify a UP of the updates to network routing information.
They can be carried in the Update Request message and Sync Data message.
The IPv4 Routing TLV is used to carry information related to IPv4 network routing.
User ID:  4 bytes in length.
This field carries the user identifier.
It is filled with all Fs when a non user route is delivered to the UP.
Dest Address (IPv4 Address type):  Identifies the destination address.
Next Hop (IPv4 Address type):
Identifies the next hop address.
If Index (4 bytes):  Indicates the interface index.
The cost value of the route.
The tag value of the route.
The value of this field indicates the route type.
The values defined in this document are listed in Section 8.9.
Advertise Flag:  1 bit shown as "A" in the figure above (Figure 44).
Indicates whether the UP should advertise the route.
The following flag values are defined: 0:  Not advertised.
If Desc sub TLVs can be carried.
Indicates which VRF the route belongs to.
If Desc sub TLV:  Carries the interface information.
The Reserved field MUST be sent as zero and ignored on receipt.
The IPv6 Routing TLV is used to carry IPv6 network routing information.
The format of the value part of this TLV is as follows:
User ID:  4 bytes in length.
This field carries the user identifier.
This field is filled with all Fs when a non user route is delivered to the UP.
IPv6 Dest Address (IPv6 Address type):  Identifies the destination address.
Next Hop (IPv6 Address type):
Identifies the next hop address.
If Index (4 bytes):  Indicates the interface index.
This is the cost value of the route.
The tag value of the route.
The value of this field indicates the route type.
The values defined in this document are listed in Section 8.9.
Advertise Flag:  1 bit shown as "A" in the figure above (Figure 45).
Indicates whether the UP should advertise the route.
The following flags are defined: 0:  Not advertised.
If Desc and VRF Name sub TLVs can be carried.
Indicates the VRF to which the subscriber belongs.
If Desc sub TLV:  Carries the interface information.
The Reserved field MUST be sent as zero and ignored on receipt.
The Subscriber TLVs are defined for a CP to send the basic information about a user to a UP.
The Basic Subscriber TLV is used to carry the common information for all kinds of access subscribers.
It is carried in an Update Request message.
The identifier of a subscriber.
Session ID (4 bytes):  Session ID of a PPPoE subscriber.
The value zero identifies a non PPPoE subscriber.
User MAC (MAC Addr type):
The MAC address of a subscriber.
Oper ID (1 byte):  Indicates the ID of an operation performed by a user.
This field is carried in the response from the UP.
Reserved (1 byte):  MUST be sent as zero and ignored on receipt.
Access Type (1 byte):  Indicates the type of subscriber access.
Values defined in this document are listed in Section 8.10.
Sub Access Type (1 byte):  Indicates whether PPP termination or PPP relay is used. 0
1:  PPP Relay (for LAC).
Account Type (1 byte):  Indicates whether traffic statistics are collected independently. 0
:  Collects statistics on IPv4 and IPv6 traffic of terminals independently.
Collects statistics on IPv4 and IPv6 traffic of terminals.
The type of IP address.
C VID (VLAN ID):  Indicates the inner VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
The default value of PRI is 7, the value of DEI is 0, and the value of VID is 1 4094.
The PRI value can also be obtained by parsing terminal packets.
P VID (VLAN ID):  Indicates the outer VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
The format is the same as that for C VID.
Detect Times (2 bytes):  Number of detection timeout times.
The value 0 indicates that no detection is performed.
Detect Interval (2 bytes):  Detection interval in seconds.
If Index (4 bytes):  Interface index.
The VRF Name sub TLV and If Desc sub TLV can be carried.
Indicates the VRF to which the subscriber belongs.
If Desc sub TLV:  Carries the interface information.
The Reserved field MUST be sent as zero and ignored on receipt.
The PPP Subscriber TLV is defined to carry PPP information of a user from a CP to a UP.
It will be carried in an Update Request message when PPPoE or L2TP access is used.
The identifier of a subscriber.
MSS Value (2 bytes):  Indicates the MSS value (in bytes).
MSS Enable (M) (1 bit):  Indicates whether the MSS is enabled. 0
Magic Number (4 bytes):  Local magic number in PPP negotiation packets.
Peer Magic Number (4 bytes):  Remote peer magic number.
The Reserved fields MUST be sent as zero and ignored on receipt.
The IPv4 Subscriber TLV is defined to carry IPv4 related information for a BNG user.
It will be carried in an Update Request message when IPv4 IPoE or PPPoE access is used.
The identifier of a subscriber.
The IPv4 address of the subscriber.
The gateway address of the subscriber.
Portal Force (P) (1 bit):  Push advertisement. 0
Web Force (W) (1 bit):
Echo Enable (E) (1 bit):  UP returns ARP Req or PPP Echo. 0
IPv4 URPF (U) (1 bit):  User Unicast Reverse Path Forwarding (URPF) flag. 0
MTU (2 bytes):  MTU value.
The default value is 1500.
Indicates the subscriber belongs to which VRF.
The Reserved field MUST be sent as zero and ignored on receipt.
The IPv6 Subscriber TLV is defined to carry IPv6 related information for a BNG user.
It will be carried in an Update Request message when IPv6 IPoE or PPPoE access is used.
IPv6 Address List Sub TLV)
The identifier of a subscriber.
User PD Addresses (IPv6 Address List):  Carries a list of Prefix Delegation (PD) addresses of the subscriber.
User ND Addresses (IPv6 Address List):  Carries a list of Neighbor Discovery (ND) addresses of the subscriber.
User Link Local Address (IPv6 Address):
The link local address of the subscriber.
IPv6 Interface ID (8 bytes):
The identifier of an IPv6 interface.
Portal Force 1 bit (P):  Push advertisement. 0
Web Force 1 bit (W):
Echo Enable 1 bit (E):
The UP returns ARP Req or PPP Echo. 0
IPv6 URPF 1 bit (U):
User Reverse Path Forwarding (URPF) flag. 0:
The default value is 1500.
Indicates the VRF to which the subscriber belongs.
The Reserved field MUST be sent as zero and ignored on receipt.
The IPv4 Static Subscriber Detect TLV is defined to carry IPv4 related information for a static access subscriber.
It will be carried in an Update Request message when IPv4 static access on a UP needs to be enabled.
The interface index of the interface from which the subscriber will dial up.
C VID (VLAN ID):  Indicates the inner VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
A valid value is 1 4094.
P VID (VLAN ID):  Indicates the outer VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
The format is the same as that of the C VID.
A valid value is 1 4094.
User MAC (MAC Addr type):
The MAC address of the subscriber.
The VRF Name and If Desc sub TLVs may be carried.
Indicates the VRF to which the subscriber belongs.
If Desc sub TLV:  Carries the interface information.
The Reserved field MUST be sent as zero and ignored on receipt.
The IPv6 Static Subscriber Detect TLV is defined to carry IPv6 related information for a static access subscriber.
It will be carried in an Update Request message when needed to enable IPv6 static subscriber detection on a UP.
The interface index of the interface from which the subscriber will dial up.
C VID (VLAN ID):  Indicates the inner VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
A valid value is 1 4094.
P VID (VLAN ID):  Indicates the outer VLAN ID.
The value 0 indicates that the VLAN ID is invalid.
The format is the same as that the of C VID.
A valid value is 1 4094.
User Address (IPv6 Address type):
Gateway Address (IPv6 Address type):
User MAC (MAC Addr type):
The MAC address of the subscriber.
Sub TLVs:  VRF Name and
If Desc sub TLVs may be carried VRF Name sub
Indicates the VRF to which the subscriber belongs.
If Desc sub TLV:  Carries the interface information.
The Reserved field MUST be sent as zero and ignored on receipt.
The L2TP LAC Subscriber TLV is defined to carry the related information for an L2TP LAC access subscriber.
It will be carried in an Update Request message when L2TP LAC access is used.
: L2TP LAC Subscriber TLV
The identifier of a user/subscriber.
Local Tunnel ID (2 bytes):
The local ID of the L2TP tunnel.
Local Session ID (2 bytes):
The local session ID with the L2TP tunnel.
Remote Tunnel ID (2 bytes):
The identifier of the L2TP tunnel at the remote endpoint.
Remote Session ID (2 bytes):
The session ID of the L2TP tunnel at the remote endpoint.
The L2TP LNS Subscriber TLV is defined to carry the related information for a L2TP LNS access subscriber.
It will be carried in an Update Request message when L2TP LNS access is used.
The identifier of a user/subscriber.
Local Tunnel ID (2 bytes):
The local ID of the L2TP tunnel.
Local Session ID (2 bytes):
The local session ID with the L2TP tunnel.
Remote Tunnel ID (2 bytes):
The identifier of the L2TP tunnel at the remote endpoint.
Remote Session ID (2 bytes):
The session ID of the L2TP tunnel at the remote endpoint.
The L2TP LAC Tunnel TLV is defined to carry information related to the L2TP LAC tunnel.
It will be carried in the Update Request message when L2TP LAC access is used.
Local Tunnel ID (2 bytes):
The local ID of the L2TP tunnel.
Remote Tunnel ID (2 bytes):
The remote ID of the L2TP tunnel.
The source UDP port number of an L2TP subscriber.
The destination UDP port number of an L2TP subscriber.
The source IP address of the tunnel.
The destination IP address of the tunnel.
The VRF name to which the L2TP subscriber tunnel belongs.
The L2TP LNS Tunnel TLV is defined to carry information related to the L2TP LNS tunnel.
It will be carried in the Update Request message when L2TP LNS access is used.
Local Tunnel ID (2 bytes):
The local ID of the L2TP tunnel.
Remote Tunnel ID (2 bytes):
The remote ID of the L2TP tunnel.
The source UDP port number of an L2TP subscriber.
The destination UDP port number of an L2TP subscriber.
The source IP address of the tunnel.
The destination IP address of the tunnel.
The VRF name to which the L2TP subscriber tunnel belongs.
The Update Response TLV is used to return the operation result of an update request.
It is carried in the Update Response message as a response to the Update Request message.
User ID (4 bytes):  A unique identifier of a user/subscriber.
User Trans ID (1 byte):
In the case of dual stack access or when modifying a session, User Trans ID is used to identify a user operation transaction.
It is used by the CP to correlate a response to a specific request.
Oper Code (1 byte):  Operation code.
Oper Result (1 byte):  Operation Result.
Error Code (4 bytes):  Operation failure cause code.
For details, see Section 8.5.
The Reserved field MUST be sent as zero and ignored on receipt.
The Subscriber Policy TLV is used to carry the policies that will be applied to a subscriber.
It is carried in the Update Request message.
The identifier of a user/subscriber.
Ingress Priority (1 byte):  Indicates the upstream priority.
The value range is 0~7.
Egress Priority (1 byte):  Indicates the downstream priority.
The value range is 0~7.
The sub TLVs that are present can occur in any order.
Ingress CAR sub TLV:  Upstream CAR.
Egress CAR sub TLV:  Downstream CAR.
Ingress QoS Profile sub TLV
:  Indicates the name of the QoS  Profile that is the profile in the upstream direction.
Egress QoS Profile sub TLV:
Indicates the name of the QoS  Profile that is the profile in the downstream direction.
User ACL Policy sub TLV:  All ACL user policies, including v4ACLIN, v4ACLOUT, v6ACLIN, v6ACLOUT, v4WEBACL, v6WEBACL, v4SpecialACL, and v6SpecialACL.
sub TLV:  IPv4 multicast policy name.
Multicast Profile6 sub TLV:  IPv6 multicast policy name.
Indicates the instance ID of a NAT user.
The Reserved field MUST be sent as zero and ignored on receipt.
The Subscriber CGN Port Range TLV is used to carry the NAT public address and port range.
It will be carried in the Update Response message when CGN is used.
The format of the value part of this TLV is as follows:
The identifier of a user/subscriber.
NAT Port Start (2 bytes):
NAT Port End (2 bytes):
The NAT public network address.
The TLVs in this section are for reporting interface and board level information from the UP to the CP.
The Interface Status TLV is used to carry the status information of an interface on a UP.
It is carried in a Report message.
The format of the value part of this TLV is as follows:
If Index (4 bytes):  Indicates the interface index.
MAC Address (MAC Addr type):  Interface MAC address.
Phy State (1 byte):  Physical status of the interface. 0:
MTU (4 bytes):  Interface MTU value.
If Desc and VRF Name sub TLVs can be carried.
The Reserved field MUST be sent as zero and ignored on receipt.
The Board Status TLV is used to carry the status information of a board on an UP.
It is carried in a Report message.
The format of the value part of the Board Status TLV is as follows:
The chassis number of the board.
The slot number of the board.
The sub slot number of the board.
The type of board used.
1:  CGN Service Process Unit (SPU) board.
2:  Line Process Unit (LPU) board.
Board State (1 byte):  Indicates whether there are issues with the board. 0
The Reserved field MUST be sent as zero and ignored on receipt.
The Address Allocation Request TLV is used to request address allocation from the CP.
A Pool Name sub TLV is carried to indicate from which address pool to allocate addresses.
The Address Allocation Request TLV is carried in the Addr Allocation Req message.
The format of the value part of this TLV is as follows:
Indicates from which address pool to allocate address.
The Address Allocation Response TLV is used to return the address allocation result; it is carried in the Addr Allocation Ack message.
The value part of the Address Allocation Response TLV is formatted as follows:
Lease Time (4 bytes):  Duration of address lease in seconds.
Client IP (IPv4 Address type):  The allocated IPv4 address and mask.
Error Code (4 bytes):  Indicates success or an error. 0
The corresponding address pool cannot be found.
The address pool is fully allocated, and no address segment is available.
Indicates from which address pool the address is allocated.
The Address Renewal Request TLV is used to request address renewal from the CP.
It is carried in the Addr Renew Req message.
Client IP (IPv4 Address type):  The IPv4 address and mask to be renewed.
Indicates from which address pool to renew the address.
The Address Renewal Response TLV is used to return the address renewal result.
It is carried in the Addr Renew Ack message.
Client IP (IPv4 Address type):  The renewed IPv4 address and mask.
Error Code (4 bytes):  Indicates success or an error:
The corresponding address pool cannot be found.
The address pool is fully allocated, and no address segment is available.
The address pool subnet cannot be found.
Subnets in the address pool have been assigned to other clients.
Indicates from which address pool to renew the address.
The Address Release Request TLV is used to release an IPv4 address.
It is carried in the Addr Release Req message.
The value part of this TLV is formatted as follows:
Client IP (IPv4 Address type):  The IPv4 address and mask to be released.
Indicates from which address pool to release the address.
The Address Release Response TLV is used to return the address release result.
It is carried in the Addr Release Ack message.
The format of the value part of this TLV is as follows:
Client IP (IPv4 Address type):  The released IPv4 address and mask.
Error Code (4 bytes):  Indicates success or an error. 0
The corresponding address pool cannot be found.
The address cannot be found.
The address has been allocated to another subscriber.
Indicates from which address pool to release the address.
The Subscriber Traffic Statistics TLV is used to return the traffic statistics of a user/subscriber.
The format of the value part of this TLV is as follows:
Statistics Type (4 bytes):  Traffic type.
It can be one of the following options:
The number of the packets in the upstream direction.
The bytes of the upstream traffic.
Ingress Loss Packets (8 bytes):
The number of the lost packets in the upstream direction.
Ingress Loss Bytes (8 bytes):
The bytes of the lost upstream packets.
The number of the packets in the downstream direction.
The bytes of the downstream traffic.
Egress Loss Packets (8 bytes):
The number of the lost packets in the downstream direction.
Egress Loss Bytes (8 bytes):
The bytes of the lost downstream packets.
The Subscriber Detection Result TLV is used to return the detection result of a subscriber.
Subscriber detection is a function to detect whether or not a subscriber is online.
The result can be used by the CP to determine how to deal with the subscriber session (e.g., delete the session if detection failed).
Detect Type (1 byte):  Type of traffic detected.
Detect Result (1 byte):  Indicates whether the detection was successful. 0
Indicates that the detection is successful.
The UP needs to report only when the detection fails.
The Reserved field MUST be sent as zero and ignored on receipt.
The Vendor TLV occurs as the first TLV in the Vendor message (Section 6.6).
It provides a Sub Type that effectively extends the message type in the message header, provides for versioning of vendor TLVs, and can accommodate sub TLVs.
The value part of the Vendor TLV is formatted as follows:
Vendor ID (4 bytes):  Vendor ID as defined in RADIUS [RFC2865].
Sub Type (2 bytes):  Used by the vendor to distinguish multiple different vendor messages.
Sub Type Version (2 bytes):  Used by the vendor to distinguish different versions of a vendor defined message Sub Type.
Sub TLVs (variable):  Sub TLVs as specified by the vendor.
Since vendor code will be handling the TLV after the Vendor ID field is recognized, the remainder of the TLV values can be organized however the vendor wants.
But it is desirable for a vendor to be able to define multiple different vendor messages and to keep track of different versions of its vendor defined messages.
Thus, it is RECOMMENDED that the vendor assign a Sub Type value for each vendor message that it defines different from other Sub Type values that vendor has used.
Also, when modifying a vendor defined message in a way potentially incompatible with a previous definition, the vendor SHOULD increase the value it is using in the Sub Type Version field.
Tables of S CUSP Codepoints
This section provides tables of the S CUSP codepoints, particularly message types, TLV types, TLV operation codes, sub TLV types, and error codes.
In most cases, references are provided to relevant sections elsewhere in this document.
Carried in the Ack of the control
Carried in the Hello message for
As implemented by the vendor.
TLV Operation Codes TLV operation codes appear in the Oper field in the header of some TLVs.
Sub TLV Types See Section 7.3.
If Type Values Defined values of the If Type field in the If Desc sub TLV (see Section 7.3.4) are as follows:
Access Mode Values Defined values of the Access Mode field in the BAS Function TLV (see Section 7.7) are as follows:
Access Method Bits Defined values of the Auth Method4 and Auth Method6 fields in the BAS Function TLV (see Section 7.7) are defined as bit fields as follows:
Route Type Values Values of the Route Type field in the IPv4 and IPv6 Routing TLVs (see Sections 7.8.1 and 7.8.2) defined in this document are as follows:
Access Type Values Values of the Access Type field in the Basic Subscriber TLV (see Section 7.9.1) defined in this document are as follows:
This document has no IANA actions.
The Service, Control, and Management Interfaces between the CP and UP might be across the general Internet or other hostile environment.
The ability of an adversary to block or corrupt messages or introduce spurious messages on any one or more of these interfaces would give the adversary the ability to stop subscribers from accessing network services, disrupt existing subscriber sessions, divert traffic, mess up accounting statistics, and generally cause havoc.
Damage would not necessarily be limited to one or a few subscribers but could disrupt routing or deny service to one or more instances of the CP or otherwise cause extensive interference.
If the adversary knows the details of the UP equipment and its forwarding rule capabilities, the adversary may be able to cause a copy of most or all user data to be sent to an address of the adversary's choosing, thus enabling eavesdropping.
Thus, appropriate protections MUST be implemented to provide integrity, authenticity, and secrecy of traffic over those interfaces.
Whether such protection is used is the decision of the network operator.
See [RFC6241] for Mi/NETCONF security.
Security on the Si is dependent on the tunneling protocol used, which is out of scope for this document.
Security for the Ci, over which S CUSP flows, is further discussed below.
S CUSP messages do not provide security.
Thus, if these messages are exchanged in an environment where security is a concern, that security MUST be provided by another protocol such as TLS 1.3 [RFC8446] or IPsec.
TLS 1.3 is the mandatory to implement protocol for interoperability.
The use of a particular security protocol on the Ci is determined by configuration.
Such security protocols need not always be used, and lesser security precautions might be appropriate because, in some cases, the communication between the CP and UP is in a benign environment.
Contributors Zhenqiang Li China Mobile 32 Xuanwumen West Ave Xicheng District Beijing 100053
Chen Huawei Technologies Huawei Bldg.
Zhouyi Yu Huawei Technologies Email:
Chengguang Niu Huawei Technologies Email:
Zitao Wang Huawei Technologies Email:
Jun Song Huawei Technologies Email:
Guangxun South Street Chaoyang District Beijing 100102
mengdan@h3c.com Hanlei Liu H3C Technologies
Guangxun South Street Chaoyang District Beijing 100102
Victor Lopez Telefonica Spain Email: victor.lopezalvarez@telefonica.com
