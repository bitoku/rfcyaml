- contents:
  - '              Sieve Email Filtering: Editheader Extension

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   This document defines two new actions for the \"Sieve\" email filtering\n
    \  language that add and delete email header fields.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   Email header fields are a flexible and easy-to-understand
    means of\n   communication between email processors.  This extension enables sieve\n
    \  scripts to interact with other components that consume or produce\n   header
    fields by allowing the script to delete and add header fields.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [KEYWORDS].\n   Conventions for notations are as in Section 1.1 of [SIEVE],
    including\n   use of the \"Usage:\" label for the definition of action and tagged\n
    \  arguments syntax.\n   The term \"header field\" is used here as in [IMAIL]
    to mean a logical\n   line of an email message header.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Capability Identifier\n   The capability string associated with the extension
    defined in this\n   document is \"editheader\".\n"
  title: 3.  Capability Identifier
- contents:
  - "4.  Action addheader\n   Usage: \"addheader\" [\":last\"] <field-name: string>
    <value: string>\n   The addheader action adds a header field to the existing message\n
    \  header.  If the field-name is not a valid 7-bit US-ASCII header field\n   name,
    as described by the [IMAIL] \"field-name\" nonterminal syntax\n   element, the
    implementation MUST flag an error.  The addheader action\n   does not affect Sieve's
    implicit keep.\n   If the specified field value does not match the [IMAIL]\n   \"unstructured\"
    nonterminal syntax element or exceeds a length limit\n   set by the implementation,
    the implementation MUST either flag an\n   error or encode the field using folding
    white space and the encodings\n   described in [MIME3] or [MIMEPARAM] to be compliant
    with [IMAIL].\n   An implementation MAY impose a length limit onto the size of
    the\n   encoded header field; such a limit MUST NOT be less than 998\n   characters,
    not including the terminating CRLF supplied by the\n   implementation.\n   By
    default, the header field is inserted at the beginning of the\n   existing message
    header.  If the optional flag \":last\" is specified,\n   it is appended at the
    end.\n   Example:\n        /* Don't redirect if we already redirected */\n        if
    not header :contains \"X-Sieve-Filtered\"\n                [\"<kim@job.example.com>\",
    \"<kim@home.example.com>\"]\n        {\n                addheader \"X-Sieve-Filtered\"
    \"<kim@job.example.com>\";\n                redirect \"kim@home.example.com\";\n
    \       }\n"
  title: 4.  Action addheader
- contents:
  - "5.  Action deleteheader\n      Usage: \"deleteheader\" [\":index\" <fieldno:
    number> [\":last\"]]\n                   [COMPARATOR] [MATCH-TYPE]\n                   <field-name:
    string>\n                   [<value-patterns: string-list>]\n   By default, the
    deleteheader action deletes all occurrences of the\n   named header field.  The
    deleteheader action does not affect Sieve's\n   implicit keep.\n   The field-name
    is mandatory and always matched as a case-insensitive\n   US-ASCII string.  If
    the field-name is not a valid 7-bit header field\n   name as described by the
    [IMAIL] \"field-name\" nonterminal syntax\n   element, the implementation MUST
    flag an error.\n   The value-patterns, if specified, restrict which occurrences
    of the\n   header field are deleted to those whose values match any of the\n   specified
    value-patterns, the matching being according to the match-\n   type and comparator
    and performed as if by the \"header\" test.  In\n   particular, leading and trailing
    whitespace in the field values is\n   ignored.  If no value-patterns are specified,
    then the comparator and\n   match-type options are silently ignored.\n   If :index
    <fieldno> is specified, the attempts to match a value are\n   limited to the <fieldno>
    occurrence of the named header field,\n   beginning at 1, the first named header
    field.  If :last is specified,\n   the count is backwards; 1 denotes the last
    named header field, 2 the\n   second to last, and so on.  The counting happens
    before the <value-\n   patterns> match, if any.  For example:\n      deleteheader
    :index 1 :contains \"Delivered-To\"\n                              \"bob@example.com\";\n
    \  deletes the first \"Delivered-To\" header field if it contains the\n   string
    \"bob@example.com\" (not the first \"Delivered-To\" field that\n   contains \"bob@example.com\").\n
    \  It is not an error if no header fields match the conditions in the\n   deleteheader
    action or if the :index argument is greater than the\n   number of named header
    fields.\n   The implementation MUST flag an error if :last is specified without\n
    \  also specifying :index.\n"
  title: 5.  Action deleteheader
- contents:
  - "6.  Implementation Limitations on Changes\n   As a matter of local policy, implementations
    MAY limit which header\n   fields may be deleted and which header fields may be
    added.  However,\n   implementations MUST NOT permit attempts to delete \"Received\"
    and\n   \"Auto-Submitted\" header fields and MUST permit both addition and\n   deletion
    of the \"Subject\" header field.\n   If a script tries to make a change that isn't
    permitted, the attempt\n   MUST be silently ignored.\n"
  title: 6.  Implementation Limitations on Changes
- contents:
  - "7.  Interaction with Other Sieve Extensions\n   Actions that generate [MDN],
    [DSN], or similar disposition messages\n   MUST do so using the original, unmodified
    message header.  Similarly,\n   if an error terminates processing of the script,
    the original message\n   header MUST be used when doing the implicit keep required
    by Section\n   2.10.6 of [SIEVE].\n   All other actions that store, send, or alter
    the message MUST do so\n   with the current set of header fields.  This includes
    the addheader\n   and deleteheader actions themselves.  For example, the following\n
    \  leaves the message unchanged:\n      addheader \"X-Hello\" \"World\";\n      deleteheader
    :index 1 \"X-Hello\";\n   Similarly, given a message with three or more \"X-Hello\"
    header\n   fields, the following example deletes the first and third of them,\n
    \  not the first and second:\n      deleteheader :index 1 \"X-Hello\";\n      deleteheader
    :index 2 \"X-Hello\";\n   Tests and actions such as \"exists\", \"header\", or
    \"vacation\"\n   [VACATION] that examine header fields MUST examine the current
    state\n   of a header as modified by any actions that have taken place so far.\n
    \  As an example, the \"header\" test in the following fragment will\n   always
    evaluate to true, regardless of whether or not the incoming\n   message contained
    an \"X-Hello\" header field:\n      addheader \"X-Hello\" \"World\";\n      if
    header :contains \"X-Hello\" \"World\"\n      {\n              fileinto \"international\";\n
    \     }\n   However, if the presence or value of a header field affects how the\n
    \  implementation parses or decodes other parts of the message, then,\n   for
    the purposes of that parsing or decoding, the implementation MAY\n   ignore some
    or all changes made to those header fields.  For example,\n   in an implementation
    that supports the [BODY] extension, \"body\" tests\n   may be unaffected by deleting
    or adding \"Content-Type\" or \"Content-\n   Transfer-Encoding\" header fields.
    \ This does not rescind the\n   requirement that changes to those header fields
    affect direct tests;\n   only the semantic side effects of changes to the fields
    may be\n   ignored.\n   For the purpose of weeding out duplicates, a message modified
    by\n   addheader or deleteheader MUST be considered the same as the original\n
    \  message.  For example, in an implementation that obeys the constraint\n   in
    Section 2.10.3 of [SIEVE] and does not deliver the same message to\n   a folder
    more than once, the following code fragment\n      keep;\n      addheader \"X-Flavor\"
    \"vanilla\";\n      keep;\n   MUST only file one message.  It is up to the implementation
    to pick\n   which of the redundant \"fileinto\" or \"keep\" actions is executed,
    and\n   which ones are ignored.\n   The \"implicit keep\" is thought to be executed
    at the end of the\n   script, after the headers have been modified.  (However,
    a canceled\n   \"implicit keep\" remains canceled.)\n"
  title: 7.  Interaction with Other Sieve Extensions
- contents:
  - "8.  IANA Considerations\n   The following template specifies the IANA registration
    of the Sieve\n   extension specified in this document:\n   To: iana@iana.org\n
    \  Subject: Registration of new Sieve extension\n   Capability name: editheader\n
    \  Description:     Adds actions 'addheader' and 'deleteheader' that\n                    modify
    the header of the message being processed\n   RFC number:      RFC 5293\n   Contact
    Address: The Sieve discussion list <ietf-mta-filters&imc.org>\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   Someone with write access to a user's script
    storage may use this\n   extension to generate headers that a user would otherwise
    be shielded\n   from (e.g., by a gateway Mail Transport Agent (MTA) that removes\n
    \  them).\n   This is the first Sieve extension to be standardized that allows\n
    \  alteration of messages being processed by Sieve engines.  A Sieve\n   script
    that uses Sieve tests defined in [SIEVE], the editheader\n   extension, and the
    redirect action back to the same user can keep\n   some state between different
    invocations of the same script for the\n   same message. But note that it would
    not be possible to introduce an\n   infinite loop using any such script, because
    each iteration adds a\n   new Received header field, so email loop prevention
    described in\n   [SMTP] will eventually non deliver the message, and because the\n
    \  editheader extension is explicitly prohibited to alter or delete\n   Received
    header fields (i.e., it can't interfere with loop\n   prevention).\n   A sieve
    filter that removes header fields may unwisely destroy\n   evidence about the
    path a message has taken.\n   Any change in message content may interfere with
    digital signature\n   mechanisms that include the header in the signed material.
    \ For\n   example, changes to (or deletion/addition of) header fields included\n
    \  in the \"SHOULD be included in the signature\" list in Section 5.5 of\n   [DKIM]
    can invalidate DKIM signatures.  This also includes DKIM\n   signatures that guarantee
    a header field absence.\n   The editheader extension doesn't directly affect [IMAIL]
    header field\n   signatures generated using [SMIME] or [OPENPGP], because these\n
    \  signature schemes include a separate copy of the header fields inside\n   the
    signed message/rfc822 body part.  However, software written to\n   detect differences
    between the inner (signed) copy of header fields\n   and the outer (modified by
    editheader) header fields might be\n   affected by changes made by editheader.\n
    \  Since normal message delivery adds \"Received\" header fields and other\n   trace
    fields to the beginning of a message, many such digital\n   signature mechanisms
    are impervious to headers prefixed to a message,\n   and will work with \"addheader\"
    unless :last is used.\n   Any decision mechanism in a user's filter that is based
    on headers is\n   vulnerable to header spoofing.  For example, if the user adds
    an\n   APPROVED header or tag, a malicious sender may add that tag or header\n
    \  themselves.  One way to guard against this is to delete or rename any\n   such
    headers or stamps prior to processing the message.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgments\n   Thanks to Eric Allman, Cyrus Daboo, Matthew Elvey, Ned
    Freed, Arnt\n   Gulbrandsen, Kjetil Torgrim Homme, Simon Josefsson, Will Lee,
    William\n   Leibzon, Mark E. Mallett, Chris Markle, Alexey Melnikov, Randall\n
    \  Schwartz, Aaron Stone, Nigel Swinson, and Rand Wacker for extensive\n   corrections
    and suggestions.\n"
  title: 10.  Acknowledgments
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [IMAIL]      Resnick, P., Ed., \"Internet Message
      Format\", RFC 2822,\n                April 2001.\n   [KEYWORDS]   Bradner, S.,
      \"Key words for use in RFCs to Indicate\n                Requirement Levels\",
      BCP 14, RFC 2119, March 1997.\n   [MIME3]      Moore, K., \"MIME (Multipurpose
      Internet Mail Extensions)\n                Part Three: Message Header Extensions
      for Non-ASCII\n                Text\", RFC 2047, November 1996.\n   [MIMEPARAM]
      \ Freed, N. and K. Moore, \"MIME Parameter Value and\n                Encoded
      Word Extensions: Character Sets, Languages, and\n                Continuations\",
      RFC 2231, November 1997.\n   [SIEVE]      Guenther, P., Ed., and T. Showalter,
      Ed., \"Sieve: An\n                Email Filtering Language\", RFC 5228, January
      2008.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [BODY]       Degener, J. and P. Guenther,
      \"Sieve Email Filtering:\n                Body Extension\", RFC 5173, April
      2008.\n   [DKIM]       Allman, E., Callas, J., Delany, M., Libbey, M., Fenton,\n
      \               J., and M. Thomas, \"DomainKeys Identified Mail (DKIM)\n                Signatures\",
      RFC 4871, May 2007.\n   [DSN]        Moore, K. and G. Vaudreuil, \"An Extensible
      Message\n                Format for Delivery Status Notifications\", RFC 3464,\n
      \               January 2003.\n   [MDN]        Hansen, T., Ed., and G. Vaudreuil,
      Ed., \"Message\n                Disposition Notification\", RFC 3798, May 2004.\n
      \  [OPENPGP]    Elkins, M., Del Torto, D., Levien, R., and T. Roessler,\n                \"MIME
      Security with OpenPGP\", RFC 3156, August 2001.\n   [SMIME]      Ramsdell, B.,
      Ed., \"Secure/Multipurpose Internet Mail\n                Extensions (S/MIME)
      Version 3.1 Message Specification\",\n                RFC 3851, July 2004.\n
      \  [SMTP]       Klensin, J., Ed., \"Simple Mail Transfer Protocol\", RFC\n                2821,
      April 2001.\n   [VACATION]   Showalter, T. and N. Freed, Ed., \"Sieve Email
      Filtering:\n                Vacation Extension\", RFC 5230, January 2008.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Jutta Degener\n   5245 College Ave, Suite #127\n   Oakland,
    CA 94618\n   EMail: jutta@pobox.com\n   Philip Guenther\n   Sendmail, Inc.\n   6475
    Christie Ave., Ste 350\n   Emeryville, CA 94608\n   EMail: guenther@sendmail.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
