- title: __initial_text__
  contents:
  - "                       Host Names On-line\nNow that we finally have an official\
    \ list of host names, it seems\nabout time to put an end to the absurd situation\
    \ where each site\non the network must maintain a different, generally out-of-date,\n\
    host list for the use of its own operating system or user\nprograms.\nFor example,\
    \ each of the TENEX sites to which I have access\n( SRI-ARC, BBN-TENEX, USC-ISI,\
    \ and PARC-MAXC) has a slightly\ndifferent mapping between host names and host\
    \ addresses: none\nis complete, and I believe each one differs in some way from\n\
    the official List.\nSince the NIC has responsibility for maintaining the official\n\
    list, lt seems appropriate for them to maintain an on-line file,\naccessible to\
    \ anyone, which Lists names and host addresses ( and\ncertain other information\
    \ which I will suggest in a moment) in an\neasily machine-readable form.\nThis\
    \ rules out, in my opinion, providing this information only\nin the form of an\
    \ NLS structured file, since there are no\nfacilities for accessing such files\
    \ from the network and since\nmany sites would not want to accommodate themselves\
    \ to this\nstructure even if there were.\nThe file I have in mind would be devoted\
    \ principally to that\ninformation needed by programs, as opposed to people, since\
    \ the\t;\nformer want their information in compact, easily parsed form,\nwhereas\
    \ the latter appreciate more verbose expression and more\nsophisticated facilities\
    \ for browsing or querying. Therefore, I\npropose that the following information\
    \ be included in such a file:\nOf course, the official name and host address for\
    \ each host.\nThis would be the primary content of each entry.\nSome information\
    \ about the options of the various protocols\nsupported by the host, including\
    \ ( for FTP ) the preferred byte\nsize and ( for TELNET) the preferred duplex\
    \ mode. The former\ncan have an enormous effect on the efficiency of file\ntransfers.\
    \ Since the new TELNET allows negotiation of options,\nthe list need not be complete\
    \ or accurate.\nThe function o f the host vis-a-vis the network ( user, server,\n\
    TIP, etc.). This may aid NCPs in deciding whether to poll the\nhost or give useful\
    \ information for statistical purposes ( e.g.\nI would like to make my NCP collect\
    \ statistics on traffic with\nTIPs vs. other hosts).\nSince the file will be generated\
    \ centrally by a single program,\nbut used widely by a variety of programs, it\
    \ follows that its\nformat should be organized for ease of interrogation at the\n\
    expense of ease of construction. I feel a reasonable way to\nachieve this is to\
    \ store it as an ASCII text file with the logical\nstructure of a \"property list\"\
    .\nIn other words, aside from the two basic facts in each entry\n( name and address),\
    \ the information will be expressed in the\nform of <attribute, value> pairs rather\
    \ than having the\nattribute be recognized by format, position, etc.\nl don't\
    \ believe it matters a great deal exactly how this file is\nformatted, so I will\
    \ make a suggestion in the hope that no one\ncares enough to protest it. ( This\
    \ has never worked before in the\nhistory of the network, but it' s still worth\
    \ a try ) The\nfollowing is the proposed syntax of the file.\n<host-name-file>\
    \ ::= <entry> | <host-name-file> <entry>\n<entry> ::= <data-part> <end-of-line>\n\
    Note that this produces a blank line after the <data-part>.\n<data-part> ::= <basic-part>\
    \ | <data-part> <attribute-item>\n<basic-part> ::= <host-name> , <host-address>\
    \ <end-of-line>\n<attribute-item> ::= <attribute-name> = <attribute-value>\n<end-of-line>\n\
    This leaves the following terms undefined:\n<end-of-line>: I don't know what end-of-line\
    \ indication is in\nfavor in the network community these days. I personally favor\n\
    carriage-return followed by line-feed. TENEX tends to use the\nsingle character\
    \ octal 37, which is totally non-standard and\ninappropriate for this application.\n\
    <host-name>: an official host name as specified in the recent\nthat these names\
    \ are restricted to letters, digits, hyphens,\nand parentheses ( including the\
    \ network name).\n<host-address>: a decimal host address, relative to its own\n\
    network ( I would assume). There has been no general discussion\nof multi-network\
    \ addressing -- although there is apparently an\nunpublicized Internetworking\
    \ Protocol experiment in progress --\nand some other convention may be more desirable.\n\
    <attribute-name>: an arbitrary name containing only letters,\ndigits, and hyphens.\
    \ We will have to agree on some names like\nBEST-FTP-BYTE-SIZE (?), but I am willing\
    \ to let the NIC pick\nthem.\n<attribute-value>: an arbitrary string not containing\n\
    <end--of-line>, whose interpretation depends in general on the\nattribute. For\
    \ example, there might be an attribute SERVERS\nwhose value was a list of the\
    \ servers customarily run by the\nsite.\nThe following are some specific attributes\
    \ that I think would be\nworthwhile:\nNICKNAMES -- value is a list of acceptable\
    \ nicknames for the\nhost. Any system that provides name-to-address translation\
    \ is\nencouraged ( although of course not required) to accept these\nnames as\
    \ alternatives to the official host name.\nFTP-BYTE-SIZES -- value is a list of\
    \ the byte sizes supported\nby the FTP server. The first byte size is the one\
    \ which leads\nto the least computational overhead ( e.g. 36 for PDP-1O's, 32\n\
    for 36O's).\nECHOING -- value is L or R depending on whether the host\nexpects\
    \ the terminal to echo ( Remote) or expects to do its own\nechoing (Local).\n\
    Note that no attribute is actually required and that the values\nunder a given\
    \ attribute need not be complete. In other words,\nthis list is meant not to replace\
    \ option negotiation,\nword-of-mouth, or any other means bo which one host discovers\n\
    the properties of another, but merely to provide an alternate\nsource of information\
    \ which can be accessed in a simple and\nuniform way.\nI realize that there is\
    \ a time-honored pitfall associated with\nsuggestions such as the present one:\
    \ it represents a specific\nsolution to a specific problem, and as such may not\
    \ be compatible\nwith or form a reasonable basis for more general solutions to\
    \ more\ngeneral problems. However, ( 1) this particular problem has been\nirking\
    \ me and others I have spoken to for well over a year, and it\nis really absurd\
    \ that it should have gone unsolved this Long; (2)\nno one seems particularly\
    \ interested in solving any more general\nproblem.\nExcept the Datacomputer: PLEASE,\
    \ if there is an easy way to\naccomplish the same function through the Datacomputer,\
    \ someone\nwrite un RFC specifying it.\n"
