- contents:
  - '                   Hierarchical Join/Prune Attributes

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a hierarchical method of encoding Join/Prune\n
    \  attributes that provides a more efficient encoding when the same\n   attribute
    values need to be specified for multiple sources in a PIM\n   Join/Prune message.
    \ This document updates RFC 5384 by renaming the\n   encoding type registry specified
    there.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7887.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Requirements Notation . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Hierarchical Join/Prune Attribute Definition  . . . . . . .
    .   3\n   4.  PIM Address Encoding Types  . . . . . . . . . . . . . . . . .   6\n
    \  5.  Hierarchical Join/Prune Attribute Hello Option  . . . . . . .   6\n   6.
    \ Security Considerations . . . . . . . . . . . . . . . . . . .   7\n   7.  IANA
    Considerations . . . . . . . . . . . . . . . . . . . . .   7\n   8.  Normative
    References  . . . . . . . . . . . . . . . . . . . .   7\n   Authors' Addresses
    \ . . . . . . . . . . . . . . . . . . . . . . .   8\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   PIM Join attributes as defined in [RFC5384] allow for specifying
    a\n   set of attributes for each of the joined or pruned sources in a PIM\n   Join/Prune
    message.  Attributes must be separately specified for each\n   individual source
    in the message.  However, in some cases, the same\n   attributes and values need
    to be specified for some, or even all, the\n   sources in the message.  The attributes
    and their values then need to\n   be repeated for each of the sources where they
    apply.\n   This document provides a hierarchical way of encoding attributes and\n
    \  their values in a Join/Prune message so that if the same attribute\n   and
    value is to apply for all the sources, it only needs to be\n   specified once
    in the message.  Similarly, if all the sources in a\n   specific group set share
    a specific attribute and value, it only\n   needs to be specified once for the
    entire group set.\n   This document extends [RFC5384] by specifying that the encoding
    type\n   defined there also applies to Encoded-Unicast and Encoded-Group\n   formats.
    \ This document also updates [RFC5384] by renaming the \"PIM\n   Encoded-Source
    Address Encoding Type Field\" registry to \"PIM Address\n   Encoding Types\".
    \ The content of the registry remains the same.  The\n   encoding type used for
    Join attributes is, however, still limited to\n   use in Join/Prune messages.
    \ Note that Join attributes, as they are\n   referred to in [RFC5384], also apply
    to pruned sources in a Join/\n   Prune message.  Thus, the more correct name \"Join/Prune
    attributes\"\n   will be used throughout the rest of this document.\n   This document
    allows Join/Prune attributes to be specified in the\n   Upstream Neighbor Address
    field, and also in the Multicast Group\n   Address field, of a Join/Prune message.
    \ It defines how this is used\n   to specify the same Join/Prune attribute and
    value for multiple\n   sources.  This document also defines a new Hello Option
    to indicate\n   support for the hierarchical encoding specified.\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Notation
- contents:
  - "3.  Hierarchical Join/Prune Attribute Definition\n   The format of a PIM Join/Prune
    message is defined in [RFC7761] as\n   follows:\n       0                   1
    \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |PIM Ver| Type  |   Reserved    |           Checksum            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Upstream Neighbor Address (Encoded-Unicast format)     |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |  Reserved     | Num groups    |          Holdtime             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |         Multicast Group Address 1 (Encoded-Group format)      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |   Number of Joined Sources    |   Number of Pruned Sources    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Joined Source Address 1 (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                             .                                 |\n      |
    \                            .                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Joined Source Address n (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Pruned Source Address 1 (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                             .                                 |\n      |
    \                            .                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Pruned Source Address n (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                           .                                   |\n      |
    \                          .                                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |         Multicast Group Address m (Encoded-Group format)      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |   Number of Joined Sources    |   Number of Pruned Sources    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Joined Source Address 1 (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                             .                                 |\n      |
    \                            .                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Joined Source Address n (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Pruned Source Address 1 (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                             .                                 |\n      |
    \                            .                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        Pruned Source Address n (Encoded-Source format)        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The message contains a single Upstream Neighbor Address and one or\n   more
    group sets.  Each group set contains a Group Address and two\n   source lists:
    the Joined Sources and the Pruned Sources.  The\n   Upstream Neighbor Address,
    the group addresses, and the source\n   addresses are encoded in Encoded-Unicast
    format, Encoded-Group\n   format, and Encoded-Source format, respectively.  This
    document\n   extends the use of the source address encoding defined in [RFC5384]\n
    \  to also apply to the Upstream Neighbor Address and the Group Address\n   fields
    (see Section 4).\n   For a Join/Prune message, a hierarchy of Join/Prune attributes
    is\n   defined.  Attributes at the highest level, which is the least\n   specific,
    apply to every source in the message.  These are encoded in\n   the Upstream Neighbor
    Address.  Attributes at the next, more-specific\n   level apply to every source
    in a group set.  They are encoded in a\n   Group Address.  And finally, there
    are attributes that apply to a\n   single source and are encoded in the source
    address as defined in\n   [RFC5384].\n   The complete set of attributes that apply
    to a given source is\n   obtained by combining the message-wide attributes, the
    attributes of\n   the group set that the source belongs to, and the source-specific\n
    \  attributes.  However, if the same attribute is specified at multiple\n   levels,
    then the one at the most specific level overrides the other\n   instances of the
    attribute.  Note that the set of attributes and\n   their values is formed before
    processing the attributes.  Hence, a\n   value that is invalid for a given type
    might override a valid value\n   at a higher level.\n   As an example, say that
    for a given source, we have attributes T_1\n   with value V_1, T_2 with value
    V_2, and T_3 with value V_3.  Also\n   assume that in the Group Address of the
    source's group set, we have\n   attributes T_1 with value V_6 and T_4 with value
    V_4.  And assume\n   that we in the Upstream Neighbor Address have encoded the
    attributes\n   T_1 with value V_7, T_4 with value V_8, and T_5 with value V_5.
    \ The\n   attributes applied to the given source will be T_1 with value V_1,\n
    \  T_2 with value V_2, T_3 with value V_3, T_4 with value V_4, and T_5\n   with
    value V_5.  Here we have T_1 with different values at each\n   level, so we use
    the value specified at the source level.  Also, we\n   have T_4 with different
    values at the group and message levels, so we\n   use the value at the group level.
    \ Here it could be that V_1 is not a\n   valid value for T_1, but it still overrides
    the values at the higher\n   levels as we do not process the attributes until
    after forming the\n   set.\n   Note that Join/Prune attributes are still applied
    to sources as\n   specified in [RFC5384].  This document does not change the meaning
    of\n   any attributes; it is simply a more compact way of encoding an\n   attribute
    when the same attribute and value applies to multiple\n   sources, e.g., with
    the example above, we would have the exact same\n   meaning if we instead had
    encoded all the attributes T1, ..., T5 with\n   the respective values V1, ...,
    V5 in the source address.\n"
  title: 3.  Hierarchical Join/Prune Attribute Definition
- contents:
  - "4.  PIM Address Encoding Types\n   Addresses in PIM messages are specified together
    with an address\n   family and an encoding type.  This applies to Encoded-Unicast,\n
    \  Encoded-Group, and Encoded-Source addresses.  The encoding types\n   allow
    the address to be encoded according to different schemes.  An\n   encoding type
    indicates how an address is encoded irrespective of\n   address type, Encoded-Unicast,
    Encoded-Group, or Encoded-Source.  It\n   is possible that there will be future
    encoding types that do not\n   apply to all address types though.  This means
    that as currently\n   defined, 0 is native encoding [RFC7761], and 1 is Join/Prune\n
    \  attributes encoding [RFC5384].  Note that as specified in [RFC5384],\n   a
    type 1 Encoded Address MUST contain at least one Join/Prune\n   attribute.\n"
  title: 4.  PIM Address Encoding Types
- contents:
  - "5.  Hierarchical Join/Prune Attribute Hello Option\n   A PIM router indicates
    that it supports the mechanism specified in\n   this document by including the
    Hierarchical Join/Prune Attribute\n   Hello Option in its PIM Hello message.  When
    this new Hello Option is\n   included, it MUST also include the Join Attribute
    Hello Option as\n   specified in [RFC5384].  The format of the Hierarchical Join/Prune\n
    \  Attribute Hello Option is defined to be:\n       0                   1                   2
    \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |        OptionType = 36        |       OptionLength = 0        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  OptionType = 36, OptionLength = 0.  Note that there is no option\n   value
    included.\n   A PIM router MUST NOT send a Join/Prune message with Join/Prune\n
    \  attributes encoded in the Upstream Neighbor Address or any of the\n   group
    addresses out of any interface on which there is a PIM neighbor\n   that has not
    included this option in its Hellos.  Even a router that\n   is not the upstream
    neighbor must be able to parse the message in\n   order to perform Join suppression
    and Prune override.\n"
  title: 5.  Hierarchical Join/Prune Attribute Hello Option
- contents:
  - "6.  Security Considerations\n   This document specifies a more compact encoding
    of Join/Prune\n   attributes.  Use of the encoding has no impact on security aside
    from\n   using the encoding in [RFC5384].  For instance, an attack with a\n   forged
    message with certain attribute values is equally difficult\n   independent of
    which encoding is used.  If an attribute that applies\n   to the entire message
    is wrong, then that may cause an issue for all\n   the sources in the message.
    \ But without this encoding, one would\n   instead include that attribute for
    every single source, and that\n   would also cause an issue for all the sources
    in the message.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has renamed the \"PIM Encoded-Source Address
    Encoding Type Field\"\n   registry to \"PIM Address Encoding Types\".\n   The
    Hierarchical Join/Prune Attribute (36) has been added to the\n   \"PIM-Hello Options\"
    registry.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI
    10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
    \  [RFC5384]  Boers, A., Wijnands, I., and E. Rosen, \"The Protocol\n              Independent
    Multicast (PIM) Join Attribute Format\",\n              RFC 5384, DOI 10.17487/RFC5384,
    November 2008,\n              <http://www.rfc-editor.org/info/rfc5384>.\n   [RFC7761]
    \ Fenner, B., Handley, M., Holbrook, H., Kouvelas, I.,\n              Parekh,
    R., Zhang, Z., and L. Zheng, \"Protocol Independent\n              Multicast -
    Sparse Mode (PIM-SM): Protocol Specification\n              (Revised)\", STD 83,
    RFC 7761, DOI 10.17487/RFC7761, March\n              2016, <http://www.rfc-editor.org/info/rfc7761>.\n"
  title: 8.  Normative References
- contents:
  - "Authors' Addresses\n   Stig Venaas\n   Cisco Systems\n   Tasman Drive\n   San
    Jose, CA  95134\n   United States\n   Email: stig@cisco.com\n   Jesus Arango\n
    \  Cisco Systems\n   Tasman Drive\n   San Jose, CA  95134\n   United States\n
    \  Email: jearango@cisco.com\n   Isidor Kouvelas\n   Arista Networks\n   5453
    Great America Parkway\n   Santa Clara, CA  95054\n   United States\n   Email:
    kouvelas@arista.com\n"
  title: Authors' Addresses
