Abstract This memo defines an portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing 10 and 100 Mb/second Medium Attachment Units (MAUs) based on IEEE Std 802.3 Section 30, "10 & 100 Mb/s Management," October 26, 1995.
The SNMPv2 Network Management Framework
The SNMPv2 Network Management Framework presently consists of three major components.
[6] the mechanisms used for describing and naming objects for the purpose of management.
the MIB II, STD 17, RFC 1213
[5] the core set of managed objects for the Internet suite of protocols.
the protocol, STD 15, RFC 1157 [10]
and/or RFC 1905 [9] the protocol used for accessing managed information.
Textual conventions are defined in RFC 1903 [7], and conformance statements are defined in RFC 1904 [8].
The Framework permits new objects to be defined for the purpose of experimentation and evaluation.
Object Definitions Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the subset of Abstract Syntax Notation One (ASN.1) defined in the SMI.
In particular, each object type is named by an OBJECT IDENTIFIER, an administratively assigned name.
The object type together with an object instance serves to uniquely identify a specific instantiation of the object.
For human convenience, we often use a textual string, termed the descriptor, to refer to the object type.
This MIB is intended to be a superset of that defined by RFC 1515 [11], which will go to historic status.
This MIB includes all of the objects contained in that MIB, plus several new ones which provide additional capabilities.
Implementors are encouraged to support all applicable conformance groups in order to make the best use of the new functionality provided by this MIB.
MAU Management Instances of these object types represent attributes of an IEEE 802.3 MAU.
Several types of MAUs are defined in the IEEE 802.3 CSMA/CD standard [1] and [2].
These MAUs may be connected to IEEE 802.3 repeaters or to 802.3 (Ethernet like) interfaces.
For convenience this document refers to these devices as "repeater MAUs" and "interface MAUs.
" The definitions presented here are based on Section 30.5, "Layer Management for 10 & 100 Mb/s Medium Attachment Units (MAUs)", and Annex 30A, "GDMO Specifications for 802.3 managed objects" of IEEE Std 802.3u 1995.
That specification includes definitions for both 10Mb/s and 100Mb/s devices, and is essentially a superset of the 10Mb/s definitions given by IEEE 802.3 Section 20.
This specification is intended to serve the same purpose: to provide for management of both 10Mb/s and 100Mb/s MAUs.
It is assumed that an agent implementing this MIB will also implement (at least)
the 'system' group defined in MIB II [5].
The following sections identify other MIBs that such an agent should implement.
Relationship to the MIB II 'interfaces' group
The sections of this document that define interface
MAU related objects specify an extension to the 'interfaces' group of MIB II.
An agent implementing these interface MAU related objects must also implement the 'interfaces' group of MIB II.
The value of the object ifMauIfIndex is the same as the value of 'ifIndex' used to instantiate the interface to which the given MAU is connected.
It is expected that an agent implementing the interface MAU related objects in this MIB will also implement the Ethernet  like Interfaces MIB, RFC 1650.
(Note that repeater ports are not represented as interfaces in the sense of MIB II's 'interfaces' group.)
Relationship to the 802.3 Repeater MIB
The section of this document that defines repeater MAU related objects specifies an extension to the 802.3 Repeater MIB defined in [4].
An agent implementing these repeater MAU related objects must also implement the 802.3 Repeater MIB.
The values of 'rpMauGroupIndex' and 'rpMauPortIndex' used to instantiate a repeater MAU variable shall be the same as the values of 'rptrPortGroupIndex' and 'rptrPortIndex' used to instantiate the port to which the given MAU is connected.
In some situations, a MAU can be "internal"   i.e., its functionality is implemented entirely within a device.
For example, a managed repeater may contain an internal repeater  MAU and/or an internal interface MAU through which management communications originating on one of the repeater's external ports pass in order to reach the management agent associated with the repeater.
Such internal MAUs may or may not be managed.
If they are managed, objects describing their attributes should appear in the appropriate MIB subtree: dot3RpMauBasicGroup for internal repeater MAUs and dot3IfMauBasicGroup for internal interface MAUs.
, Integer32, OBJECT TYPE, MODULE IDENTITY, NOTIFICATION TYPE, OBJECT IDENTITY, mib 2 FROM SNMPv2
SMI TruthValue, TEXTUAL CONVENTION FROM SNMPv2 TC OBJECT GROUP, MODULE COMPLIANCE, NOTIFICATION GROUP FROM SNMPv2 CONF; mauMod MODULE IDENTITY LAST UPDATED "9710310000Z" ORGANIZATION "IETF HUB MIB Working Group" CONTACT INFO "
Israel) Ltd. Atidim Technology Park, Bldg.
Israel Tel: 972 3 6458414, 6458458
Fax: 972 3 6487146 E mail:
3Com Corporation 118 Turnpike Rd.
Southborough, MA  01772 USA Tel: (508)229 1627
kdegraaf@isd.3com.com" DESCRIPTION "Management information for 802.3 MAUs.
The following references are used throughout this MIB module:
[IEEE 802.3 Std] refers to IEEE 802.3
/ISO 8802 3 Information processing systems Local area networks Part 3:
Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications (1993), and to IEEE Std
1995, Supplement to IEEE Std 802.3, clauses 22 through 29.
[IEEE 802.3 Mgt] refers to IEEE 802.3u 1995,
10 Mb/s & 100 Mb/s Management, Section 30 Supplement to IEEE Std 802.3."
Common enumeration values for repeater and interface MAU jack types.
Note that 10BROAD36 MAUs can be attached to interfaces but not to repeaters."
current DESCRIPTION "Table of descriptive and status information about the MAU(s) attached to the ports of a repeater."
"An entry in the table, containing information about a single MAU.
rpMauFalseCarriers Counter32 } rpMauGroupIndex OBJECT
"This variable uniquely identifies the group containing the port to which the MAU described by this entry is connected.
In practice, a group will generally be a field replaceable unit (i.e., module, card, or board) that can fit in the physical system enclosure, and the group number will correspond to a number marked on the physical enclosure.
The group denoted by a particular value of this object is the same as the group denoted by the same value of rptrGroupIndex."
"This variable uniquely identifies the repeater port within group rpMauGroupIndex to which the MAU described by this entry is connected."
REFERENCE "Reference RFC 1516, rptrPortIndex."
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same port (rpMauPortIndex).
"This object identifies the 10 or 100 Mb/s baseband MAU type.
An initial set of MAU types are defined above.
The assignment of OBJECT IDENTIFIERs to new types of MAUs is managed by the IANA.
Note that unknownMauType is a syntactically valid object identifier, and any conformant implementation of ASN.1 and
the BER must be able to generate and recognize this value.
} MAX ACCESS read write
The current state of the MAU.
This object may be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional, operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of rpMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter as though it were powered down or not connected.
The MAU may return other(1) value for the rpMauJabberState and rpMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power  on cycle of at least one half second would.
The agent is not required to return the value reset (6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
"If the MAU is a link or fiber type (FOIRL, 10BASE T, 10BASE F) then this is equivalent to the link test fail state/low light function.
For an AUI or a coax (including broadband) MAU this indicates whether or not loopback is detected on the DI circuit.
The value of this attribute persists between packets for MAU types AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE FP.
The value other(1) is returned if the mediaAvailable state is not one of 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
At power up or following a reset, the value of this attribute will be unknown for AUI, coax, and 10BASE FP MAUs.
For these MAUs loopback will be tested on each transmission during which no collision is detected.
If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission then loopback will be detected.
The value of this attribute will only change during non collided transmissions for AUI, coax, and 10BASE FP MAUs.
For 100BASE T4, 100BASE TX and 100BASE FX the enumerations match the states within the respective link integrity state diagrams, fig 23  12 and 24 15 of sections 23 and 24 of [2].
Any MAU which implements management of auto  negotiation will map remote fault indication to remote fault.
The value available(3) indicates that the link, light, or loopback is normal.
The value notAvailable(4) indicates link loss, low light, or no loopback.
The value remoteFault(5) indicates that a fault has been detected at the remote end of the link.
This value applies to 10BASE FB, 100BASE T4 Far End Fault Indication and non specified remote faults from a system running auto negotiation.
The values remoteJabber(7), remoteLinkLoss(8), and remoteTest(9) should be used instead of remoteFault(5)
where the reason for remote fault is identified in the remote signaling protocol.
The value invalidSignal(6) indicates that an invalid signal has been received from the other end of the link.
InvalidSignal(6) applies only to MAUs of type 10BASE FB.
Where an IEEE Std 802.3u
22 MII is present, a logic one in the remote fault bit (reference section 22.2.4.2.8 of that document)
maps to the value remoteFault(5), and a logic zero in the link status bit (reference section 22.2.4.2.10 of that document
) maps to the value notAvailable(4).
The value notAvailable(4) takes precedence over the value remoteFault(5).
A count of the number of times that rpMauMediaAvailable for this MAU instance leaves the state available(3).
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent must always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value.
A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX, and dot3MauType100BaseFX, this counter will always indicate zero.
A count of the number of false carrier events during IDLE in 100BASE X links.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event.
This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, and dot3MauType100BaseFX.
For all other MAU types, this counter will always indicate zero.
The approximate minimum time for rollover of this counter is 7.4 hours.
The rpJackTable applies to MAUs attached to repeaters   which have one or more external jacks (connectors).
current DESCRIPTION "Information about the external jacks attached to MAUs attached to the ports of a repeater."
An entry in the table, containing information about a particular jack."
MAX ACCESS not accessible STATUS
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU (rpMauIndex)."
The Basic Interface MAU Table
current DESCRIPTION "Table of descriptive and status information about MAU(s) attached to an interface."
"An entry in the table, containing information about a single MAU.
"This variable uniquely identifies the interface to which the MAU described by this entry is connected."
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same interface (ifMauIfIndex).
"This object identifies the 10 or 100 Mb/s baseband or broadband MAU type.
An initial set of MAU types are defined above.
The assignment of OBJECT IDENTIFIERs to new types of MAUs is managed by the IANA.
Note that unknownMauType is a syntactically valid object identifier, and any conformant implementation of ASN.1 and
the BER must be able to generate and recognize this value.
This object represents the operational type of the MAU, as determined by either (1)
the result of the auto negotiation function or (2) if auto  negotiation is not enabled or is not implemented for this MAU, by the value of the object ifMauDefaultType.
In case (2), a set to the object ifMauDefaultType will force the MAU into the new operating mode.
} MAX ACCESS read write
The current state of the MAU.
This object may be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional, operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of ifMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter as though it were powered down or not connected.
The MAU may return other(1) value for the ifMauJabberState and ifMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power  on cycle of at least one half second would.
The agent is not required to return the value reset (6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
"If the MAU is a link or fiber type (FOIRL, 10BASE T, 10BASE F) then this is equivalent to the link test fail state/low light function.
For an AUI or a coax (including broadband) MAU this indicates whether or not loopback is detected on the DI circuit.
The value of this attribute persists between packets for MAU types AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE FP.
The value other(1) is returned if the mediaAvailable state is not one of 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
At power up or following a reset, the value of this attribute will be unknown for AUI, coax, and 10BASE FP MAUs.
For these MAUs loopback will be tested on each transmission during which no collision is detected.
If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission then loopback will be detected.
The value of this attribute will only change during non collided transmissions for AUI, coax, and 10BASE FP MAUs.
For 100BASE T4, 100BASE TX and 100BASE FX the enumerations match the states within the respective link integrity state diagrams, fig 23  12 and 24 15 of sections 23 and 24 of [2].
Any MAU which implements management of auto  negotiation will map remote fault indication to remote fault.
The value available(3) indicates that the link, light, or loopback is normal.
The value notAvailable(4) indicates link loss, low light, or no loopback.
The value remoteFault(5) indicates that a fault has been detected at the remote end of the link.
This value applies to 10BASE FB, 100BASE T4 Far End Fault Indication and non specified remote faults from a system running auto negotiation.
The values remoteJabber(7), remoteLinkLoss(8), and remoteTest(9) should be used instead of remoteFault(5)
where the reason for remote fault is identified in the remote signaling protocol.
The value invalidSignal(6) indicates that an invalid signal has been received from the other end of the link.
InvalidSignal(6) applies only to MAUs of type 10BASE FB.
Where an IEEE Std 802.3u
22 MII is present, a logic one in the remote fault bit (reference section 22.2.4.2.8 of that document)
maps to the value remoteFault(5), and a logic zero in the link status bit (reference section 22.2.4.2.10 of that document
) maps to the value notAvailable(4).
The value notAvailable(4) takes precedence over the value remoteFault(5).
A count of the number of times that ifMauMediaAvailable for this MAU instance leaves the state available(3).
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent must always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value.
A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX, and dot3MauType100BaseFX, this counter will always indicate zero.
A count of the number of false carrier events during IDLE in 100BASE X links.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event.
This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, and dot3MauType100BaseFX.
For all other MAU types, this counter will always indicate zero.
The approximate minimum time for rollover of this counter is 7.4 hours.
"A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be.
The value is a sum which initially takes the value zero.
Then, for each type capability of this MAU, 2 raised to the power noted below is added to the sum.
For example, a MAU which has the capability to be only 10BASE T would have a value of 512 (2  9).
In contrast, a MAU which supports both 10Base T (full duplex) and 100BASE TX (full duplex) would have a value of ((2  11)
10BASE T  half duplex mode 11
If auto negotiation is present on this MAU, this object will map to ifMauAutoNegCapability."
"This object identifies the default administrative 10 or 100
Mb/s baseband MAU type, to be used in conjunction with the operational MAU type denoted by ifMauType.
The set of possible values for this object is the same as the set defined for the ifMauType object.
This object represents the administratively  configured type of the MAU.
If auto negotiation is not enabled or is not implemented for this MAU, the value of this object determines the operational type of the MAU.
In this case, a set to this object will force the MAU into the specified operating mode.
If auto negotiation is implemented and enabled for this MAU, the operational type of the MAU is determined by auto negotiation, and the value of this object denotes the type to which the MAU will automatically revert if/when auto negotiation is later disabled.
It may be necessary to provide for underlying hardware implementations which do not follow the exact behavior specified above.
In particular, when ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation must ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by this object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
"This object indicates whether or not auto  negotiation is supported on this MAU."
MAX ACCESS not accessible STATUS
current DESCRIPTION "Information about the external jacks attached to MAUs attached to an interface."
An entry in the table, containing information about a particular jack."
MAX ACCESS not accessible STATUS
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU."
Note that if auto negotiation   is present and enabled, the ifMauType object reflects   the result of the auto negotiation function.
SEQUENCE OF IfMauAutoNegEntry MAX ACCESS
current DESCRIPTION "Configuration and status objects for the auto  negotiation function of MAUs attached to interfaces."
MAX ACCESS not accessible STATUS
An entry in the table, containing configuration and status information for the auto negotiation function of a particular MAU.
MAX ACCESS read write STATUS
Setting this object to enabled(1) will cause the interface which has the auto negotiation signaling ability to be enabled.
If the value of this object is disabled(2) then the interface will act as it would if it had no auto negotiation signaling.
Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object ifMauDefaultType.
When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation must ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by the ifMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
"A value indicating whether the remote end of the link is using auto negotiation signaling.
It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received."
"A value indicating the current status of the auto negotiation process.
The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE 802.3 Std].
"A value that uniquely identifies the set of capabilities of the local auto negotiation entity.
The value is a sum which initially takes the value zero.
Then, for each capability of this interface, 2 raised to the power noted below is added to the sum.
For example, an interface which has the capability to support only 100Base TX half duplex would have a value of 32768 (2  15).
In contrast, an interface which supports both 100Base TX half duplex and and 100Base TX
full duplex would have a value of 98304 ((2  15)
this MIB may have capabilities that extend beyond the scope of this MIB.
A value that uniquely identifies the set of capabilities advertised by the local auto  negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Capabilities in this object that are not available in ifMauAutoNegCapability cannot be enabled.
} ifMauAutoNegCapReceived OBJECT TYPE SYNTAX
"A value that uniquely identifies the set of capabilities received from the remote auto  negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Note that interfaces that support this MIB may be attached to remote auto negotiation entities which have capabilities beyond the scope of this MIB.
} MAX ACCESS read write
"If the value of this object is set to restart(1) then this will force auto negotiation to begin link renegotiation.
If auto negotiation signaling is disabled, a write to this object has no effect.
Setting the value of this object to norestart(2) has no effect.
The Basic Broadband MAU Table   broadMauBasicTable
SEQUENCE OF BroadMauBasicEntry MAX ACCESS not accessible
"An entry in the table, containing information about a single broadband MAU.
"This variable uniquely identifies the interface to which the MAU described by this entry is connected."
REFERENCE "Reference RFC 1213, ifIndex."
"This variable uniquely identifies the MAU connected to interface broadMauIfIndex that is described by this entry."
802.3 MAU Mgt, 20.2.3.2, aMAUID."
"This object indicates the type of frequency multiplexing/cabling system used to separate the transmit and receive paths for the 10BROAD36 MAU.
The value other(1) is returned if the split type is not either single or dual.
The value single(2) indicates a single cable system.
The value dual(3) indicates a dual cable system, offset normally zero.
802.3 MAU Mgt, 20.2.3.2, aBbMAUXmitRcvSplitType."
"This variable indicates the transmit carrier frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
802.3 MAU Mgt, 20.2.3.2, aBroadbandFrequencies.xmitCarrierFrequency."
"This variable indicates the translation offset frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
802.3 MAU Mgt, 20.2.3.2, aBroadbandFrequencies.translationFrequency."
whenever a managed repeater MAU enters the jabber state.
The agent must throttle the generation of consecutive rpMauJabberTraps so that there is at least a five second gap between them."
"This trap is sent whenever a managed interface MAU enters the jabber state.
The agent must throttle the generation of consecutive ifMauJabberTraps so that there is at least a five second gap between them."
Basic conformance group for MAUs attached to repeater ports.
This group is also the conformance specification for RFC 1515 implementations."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with 100 Mb/s capability."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with managed jacks."
Basic conformance group for MAUs attached to interfaces.
This group also provides a conformance specification for RFC 1515 implementations."
ifMauTypeList, ifMauDefaultType, ifMauAutoNegSupported } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with 100 Mb/s capability."
ifMauAutoNegRemoteSignaling, ifMauAutoNegConfig, ifMauAutoNegCapability, ifMauAutoNegCapAdvertised, ifMauAutoNegCapReceived, ifMauAutoNegRestart } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with managed auto negotiation."
broadMauIfIndex, broadMauIndex, broadMauXmtRcvSplitType, broadMauXmtCarrierFreq, broadMauTranslationFreq } STATUS
current DESCRIPTION "Conformance group for broadband MAUs attached to interfaces.
This group provides a conformance specification for RFC 1515 implementations."
Compliances mauModRpCompl MODULE COMPLIANCE STATUS
current DESCRIPTION "Compliance for MAUs attached to repeater ports.
this module MANDATORY GROUPS { mauRpGrpBasic } GROUP
"Implementation of this optional group is recommended for MAUs which have 100Mb/s capability."
GROUP mauRpGrpJack DESCRIPTION "Implementation of this optional group is recommended for MAUs which have one or more external jacks."
GROUP rpMauNotifications DESCRIPTION "Implementation of this group is recommended for MAUs attached to repeater ports."
current DESCRIPTION "Compliance for MAUs attached to interfaces.
this module MANDATORY GROUPS { mauIfGrpBasic } GROUP mauIfGrp100Mbs DESCRIPTION
"Implementation of this optional group is recommended for MAUs which have 100Mb/s capability."
"Implementation of this optional group is recommended for MAUs which have one or more external jacks."
GROUP mauIfGrpAutoNeg DESCRIPTION "Implementation of this group is mandatory for MAUs which support managed auto negotiation."
GROUP mauBroadBasic DESCRIPTION "Implementation of this group is mandatory for broadband MAUs."
"Implementation of this group is recommended for MAUs attached to interfaces."
Certain management information defined in this MIB may be considered sensitive in some network environments.
Therefore, authentication of received SNMP requests and controlled access to management information should be employed in such environments.
The method for this authentication is a function of the SNMP Administrative Framework, and has not been expanded by this MIB.
Several objects in this MIB allow write access.
Setting these objects can have a serious effect on the operation of the network, including enabling or disabling a MAU, changing a MAU's default type, enabling, disabling or restarting autonegotiation, or modifying the capabilities that a MAU advertizes during autonegotiation.
It is recommended that implementers seriously consider whether set operations should be allowed without providing, at a minimum, authentication of request origin.
